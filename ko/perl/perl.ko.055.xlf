<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="7f939934240442ba8aff428b8d885c556df88f68" translate="yes" xml:space="preserve">
          <source>may either be the name of a function, an anonymous subroutine, or a code ref.</source>
          <target state="translated">함수 이름, 익명 서브 루틴 또는 코드 참조 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fcab217ea1c7c25f3efcfc666d5b1cc8bc0b5d11" translate="yes" xml:space="preserve">
          <source>may exist but not contain the encrypted passwords, because the system is using some form of enhanced security. Or it may not contain all the accounts, because the system is using NIS. If code does need to rely on such a file, include a description of the file and its format in the code's documentation, then make it easy for the user to override the default location of the file.</source>
          <target state="translated">시스템이 일부 보안 강화 형식을 사용하고 있기 때문에 암호화 암호가있을 수 있습니다. 또는 시스템이 NIS를 사용하고 있기 때문에 모든 계정을 포함하지 않을 수 있습니다. 코드가 그러한 파일에 의존해야하는 경우 파일에 대한 설명과 코드 형식을 코드 설명서에 포함하면 사용자가 파일의 기본 위치를 쉽게 무시할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="50db7fb1ca9176cd81a249103eb38f831863593d" translate="yes" xml:space="preserve">
          <source>may fail test 17 due to a known bug in those gcc builds: see &lt;a href=&quot;http://sourceforge.net/p/mingw/bugs/2152/&quot;&gt;http://sourceforge.net/p/mingw/bugs/2152/&lt;/a&gt;.</source>
          <target state="translated">해당 gcc 빌드의 알려진 버그로 인해 테스트 17에 실패 할 수 있습니다 ( &lt;a href=&quot;http://sourceforge.net/p/mingw/bugs/2152/&quot;&gt;http://sourceforge.net/p/mingw/bugs/2152/ 참조)&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0956e07b04389707f666ca2af8469af82246295d" translate="yes" xml:space="preserve">
          <source>may happen: it may work, it may not.</source>
          <target state="translated">발생할 수 있습니다 : 작동 할 수도 있고 작동하지 않을 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="e3c9c9e54dfb7b4a07bca81e71398e51e782297b" translate="yes" xml:space="preserve">
          <source>may have a race condition (but probably does not due to edge-triggered nature of OS/2 Event semaphores). (Needs a reimplementation (in terms of chaining waiting threads, with the linked list stored in per-thread structure?)?)</source>
          <target state="translated">경쟁 조건이있을 수 있습니다 (그러나 OS / 2 이벤트 세마포어의 에지 트리거 특성으로 인한 것은 아님). (다시 구현해야합니다 (연결 된 목록이 스레드 당 구조로 저장된 체인 대기 스레드 측면에서?))?</target>
        </trans-unit>
        <trans-unit id="48025ae1574f255ebfaf98e18976104192a59ad5" translate="yes" xml:space="preserve">
          <source>may have a repeat count, in which case the minimum of that and the number of available items is used as the argument for</source>
          <target state="translated">반복 횟수를 가질 수 있습니다.이 경우 최소 수와 사용 가능한 항목 수가 인수로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="ea7ac34192ad14bf2de3bd1b191025ec8d1a028f" translate="yes" xml:space="preserve">
          <source>may have completely different semantics: the first one may inspect an array of chars pointed by s, and the second one may immediately dereference &lt;code&gt;cp&lt;/code&gt; and manipulate &lt;code&gt;*cp&lt;/code&gt; only (using the return value as, say, a success indicator). From Perl one would use these functions in a completely different manner.</source>
          <target state="translated">완전히 다른 의미를 가질 수 있습니다. 첫 번째 문자는 s가 가리키는 문자 배열을 검사하고 두 번째 문자는 즉시 &lt;code&gt;cp&lt;/code&gt; 를 역 참조 하고 &lt;code&gt;*cp&lt;/code&gt; 만 조작 할 수 있습니다 (반환 값을 사용하여 성공 표시기). Perl에서이 기능들을 완전히 다른 방식으로 사용할 것입니다.</target>
        </trans-unit>
        <trans-unit id="6d3f154535c3f9fe2417ebfd3c073407491cd412" translate="yes" xml:space="preserve">
          <source>may indicate the latest release which was publicly released by the maintainer. Note that the release may include some additional patches to apply to the current source of perl.</source>
          <target state="translated">관리자가 공개적으로 릴리스 한 최신 릴리스를 나타낼 수 있습니다. 릴리스에는 현재 perl 소스에 적용 할 추가 패치가 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6ff0a4c89909b1735cb2aaed98248d03a003ba27" translate="yes" xml:space="preserve">
          <source>may itself contain &lt;code&gt;source&lt;/code&gt; commands.</source>
          <target state="translated">그 자체가 &lt;code&gt;source&lt;/code&gt; 명령을 포함 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="adccec0211a2b7d39d208f47cb2d60f8ec656a34" translate="yes" xml:space="preserve">
          <source>may not actually be a GV. For efficiency, perl may pass a CV or other SV instead. Whatever is passed can be used as the first argument to &lt;a href=&quot;#cv_name&quot;&gt;cv_name&lt;/a&gt;. You can force perl to pass a GV by including &lt;code&gt;CALL_CHECKER_REQUIRE_GV&lt;/code&gt; in the</source>
          <target state="translated">실제로 GV가 아닐 수도 있습니다. 효율성을 위해 perl은 CV 또는 다른 SV를 대신 통과 할 수 있습니다. 전달 된 것은 &lt;a href=&quot;#cv_name&quot;&gt;cv_name&lt;/a&gt; 의 첫 번째 인수로 사용할 수 있습니다 . &lt;code&gt;CALL_CHECKER_REQUIRE_GV&lt;/code&gt; 를 포함하여 펄이 GV를 통과하도록 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3d5555b694d8f072f22de9ff11fb049792ad5b32" translate="yes" xml:space="preserve">
          <source>may take up to 500 bytes of memory, depending on which release of Perl you're running.</source>
          <target state="translated">실행중인 Perl 릴리스에 따라 최대 500 바이트의 메모리를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ad85b9c93b80993d1c6bd13cac2401f23fddbb68" translate="yes" xml:space="preserve">
          <source>maybe override do_beginning do_end</source>
          <target state="translated">아마도 do_beginning do_end를 무시할 것</target>
        </trans-unit>
        <trans-unit id="006fcd788382131a4f01c88c9b5348da352db477" translate="yes" xml:space="preserve">
          <source>maybe::next::method</source>
          <target state="translated">maybe::next::method</target>
        </trans-unit>
        <trans-unit id="29c45c114881a4427f74430bc7cdb5514dd45b22" translate="yes" xml:space="preserve">
          <source>md5sum(1)</source>
          <target state="translated">md5sum(1)</target>
        </trans-unit>
        <trans-unit id="b1ff2ff763569a87423ec287f9421f316fd8bf84" translate="yes" xml:space="preserve">
          <source>me if X did Y&quot;).</source>
          <target state="translated">X가 Y 인 경우에 나 &quot;).</target>
        </trans-unit>
        <trans-unit id="2af222bfd2469b9ddf12a85f3fd2010bdcb449e5" translate="yes" xml:space="preserve">
          <source>mean that 'Gc' is a synonym for 'General_Category', and anything that is valid for the latter is also valid for the former. Similarly,</source>
          <target state="translated">'Gc'는 'General_Category'의 동의어이며 후자에 유효한 것은 전자에도 유효합니다. 비슷하게,</target>
        </trans-unit>
        <trans-unit id="932f35fed1bd563ef5a9b003856afa9c188d9fa3" translate="yes" xml:space="preserve">
          <source>mean that the name for the code point is &quot;CJK UNIFIED IDEOGRAPH-&quot; with the code point (expressed in hexadecimal) appended to it, like &quot;CJK UNIFIED IDEOGRAPH-3403&quot; (similarly for &lt;code&gt;CJK COMPATIBILITY IDEOGRAPH-&amp;lt;code
point&amp;gt;&lt;/code&gt; ).</source>
          <target state="translated">코드 포인트의 이름은 &quot;CJK UNIFIED IDEOGRAPH-3403&quot;( &lt;code&gt;CJK COMPATIBILITY IDEOGRAPH-&amp;lt;code point&amp;gt;&lt;/code&gt; 와 유사)과 같이 코드 포인트 (16 진수로 표시)가 추가 된 &quot;CJK UNIFIED IDEOGRAPH-&quot; 입니다.</target>
        </trans-unit>
        <trans-unit id="6ebc1ab1df5bc571fd131c215d0633169148a290" translate="yes" xml:space="preserve">
          <source>meaning that the operation was a success. When a method states that it returns a value, failure will be returned as</source>
          <target state="translated">작업이 성공했음을 의미합니다. 메소드가 값을 리턴한다고 표시하면 실패는 다음과 같이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="1453fd846dfb4fd9e27fd21ed4831d102199cc80" translate="yes" xml:space="preserve">
          <source>meaningless</source>
          <target state="translated">meaningless</target>
        </trans-unit>
        <trans-unit id="6150cff9d7080a62c09520808d52acbd354f0d38" translate="yes" xml:space="preserve">
          <source>means</source>
          <target state="translated">means</target>
        </trans-unit>
        <trans-unit id="d4876d3521bb70fd77da25144d072e6f02d05590" translate="yes" xml:space="preserve">
          <source>means all the elements of the map array are simple scalars, with no special elements. Almost all properties are like this, like the &lt;code&gt;block&lt;/code&gt; example above.</source>
          <target state="translated">는지도 배열의 모든 요소가 특별한 요소가없는 단순한 스칼라임을 의미합니다. 위 의 &lt;code&gt;block&lt;/code&gt; 예제 와 같이 거의 모든 속성은 이와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="d7eaa765ed152fbb39843363a88caa4d73acd4b5" translate="yes" xml:space="preserve">
          <source>means changes with current dir.</source>
          <target state="translated">현재 디렉토리로 변경을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="39feb8f9e787203c85926b08481b6e7fca85ce57" translate="yes" xml:space="preserve">
          <source>means has drive letter and is_rooted.</source>
          <target state="translated">means는 드라이브 문자와 is_rooted를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="932051bae885fdcfb63fb6021cf1e8eac22a8a00" translate="yes" xml:space="preserve">
          <source>means has leading &lt;code&gt;[/\\]&lt;/code&gt; (maybe after a drive-letter:).</source>
          <target state="translated">는 &lt;code&gt;[/\\]&lt;/code&gt; 로 시작합니다 (드라이브 문자 다음에있을 수 있음).</target>
        </trans-unit>
        <trans-unit id="ce42e227b8c235f060f3f4a19ffa37c9477e5cdc" translate="yes" xml:space="preserve">
          <source>means some operators are evaluated before others. For example, in &lt;code&gt;2 + 4 * 5&lt;/code&gt; , the multiplication has higher precedence so &lt;code&gt;4 * 5&lt;/code&gt; is evaluated first yielding &lt;code&gt;2 + 20 ==
22&lt;/code&gt; and not &lt;code&gt;6 * 5 == 30&lt;/code&gt; .</source>
          <target state="translated">일부 연산자는 다른 연산자보다 먼저 평가됨을 의미합니다. 예를 들어, &lt;code&gt;2 + 4 * 5&lt;/code&gt; 에서는 곱셈이 우선 순위가 높으므로 &lt;code&gt;4 * 5&lt;/code&gt; 가 먼저 평가되어 &lt;code&gt;6 * 5 == 30&lt;/code&gt; 아니라 &lt;code&gt;2 + 20 == 22&lt;/code&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="75fc7d11d64889b77668f39cb0c9b4206a2652ab" translate="yes" xml:space="preserve">
          <source>means substitution character, not subcharacter. When you decode a Unicode sequence to this encoding but no matching character is found, the byte sequence defined here will be used. For most cases, the value here is \x3F; in ASCII, this is a question mark.</source>
          <target state="translated">하위 문자가 아닌 대체 문자를 의미합니다. 이 인코딩으로 유니 코드 시퀀스를 디코딩하지만 일치하는 문자가 없으면 여기에 정의 된 바이트 시퀀스가 ​​사용됩니다. 대부분의 경우 여기의 값은 \ x3F입니다. ASCII에서는 물음표입니다.</target>
        </trans-unit>
        <trans-unit id="8be7108fc69dc19e1ff9bea226f8bda991db7b2a" translate="yes" xml:space="preserve">
          <source>means that &lt;code&gt;$!&lt;/code&gt; may be unrelated to the outcome of the &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt; operator. Assignment to &lt;code&gt;$!&lt;/code&gt; is similarly ephemeral. It can be used immediately before invoking the &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die()&lt;/a&gt;&lt;/code&gt; operator, to set the exit value, or to inspect the system error string corresponding to error</source>
          <target state="translated">그 의미는 &lt;code&gt;$!&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open()&lt;/a&gt;&lt;/code&gt; 연산자 의 결과와 관련이 없을 수 있습니다 . &lt;code&gt;$!&lt;/code&gt; 할당 ! 마찬가지로 임시입니다. &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die()&lt;/a&gt;&lt;/code&gt; 연산자 를 호출하기 직전 에 종료 값을 설정하거나 오류에 해당하는 시스템 오류 문자열을 검사하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e5084e59d8cb6aa137be9a18c27b8eed3e0f35ee" translate="yes" xml:space="preserve">
          <source>means that all the elements of the map array are either rational numbers or the string &lt;code&gt;&quot;NaN&quot;&lt;/code&gt; , meaning &quot;Not a Number&quot;. A rational number is either an integer, or two integers separated by a solidus (&lt;code&gt;&quot;/&quot;&lt;/code&gt; ). The second integer represents the denominator of the division implied by the solidus, and is actually always positive, so it is guaranteed not to be 0 and to not be signed. When the element is a plain integer (without the solidus), it may need to be adjusted to get the correct value by adding the offset, just as other &lt;code&gt;&quot;a&quot;&lt;/code&gt; properties. No adjustment is needed for fractions, as the range is guaranteed to have just a single element, and so the offset is always 0.</source>
          <target state="translated">은지도 배열의 모든 요소가 합리적인 숫자이거나 &lt;code&gt;&quot;NaN&quot;&lt;/code&gt; 문자열 이며 &quot;숫자가 아님 &quot; 을 의미합니다. 유리수는 정수 또는 고상 ( &lt;code&gt;&quot;/&quot;&lt;/code&gt; )으로 구분 된 두 정수 입니다. 두 번째 정수는 solidus에 의해 암시 된 나눗셈의 분모를 나타내며 실제로 항상 양수이므로 0이 아니고 부호가없는 것이 보장됩니다. 요소가 일반 정수 (고체 없음) 인 경우 다른 &lt;code&gt;&quot;a&quot;&lt;/code&gt; 속성 과 마찬가지로 오프셋을 추가하여 올바른 값을 얻도록 조정해야 할 수도 있습니다. 범위에 단일 요소 만있는 것이 보장되므로 오프셋에 대한 조정이 필요하지 않으므로 오프셋은 항상 0입니다.</target>
        </trans-unit>
        <trans-unit id="098414e7e4c45f1b215e31a9f092591b7bc62e67" translate="yes" xml:space="preserve">
          <source>means that if and only if, for example, &lt;code&gt;\p{Foo}&lt;/code&gt; exists, then &lt;code&gt;\p{Is_Foo}&lt;/code&gt; and &lt;code&gt;\p{IsFoo}&lt;/code&gt; are also valid and all mean the same thing. And similarly, &lt;code&gt;\p{Foo=Bar}&lt;/code&gt; means the same as &lt;code&gt;\p{Is_Foo=Bar}&lt;/code&gt; and &lt;code&gt;\p{IsFoo=Bar}&lt;/code&gt; . &quot;*&quot; here is restricted to something not beginning with an underscore.</source>
          <target state="translated">예를 들어, &lt;code&gt;\p{Foo}&lt;/code&gt; 가 존재 하는 경우에만 &lt;code&gt;\p{Is_Foo}&lt;/code&gt; 및 &lt;code&gt;\p{IsFoo}&lt;/code&gt; 도 유효하며 모두 동일한 것을 의미합니다. 마찬가지로 &lt;code&gt;\p{Foo=Bar}&lt;/code&gt; 는 &lt;code&gt;\p{Is_Foo=Bar}&lt;/code&gt; 및 &lt;code&gt;\p{IsFoo=Bar}&lt;/code&gt; 합니다. 여기서 &quot;*&quot;는 밑줄로 시작하지 않는 것으로 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="d873fd42381f198617eddf670aec9934148665c1" translate="yes" xml:space="preserve">
          <source>means that some of the map array elements have the form given by &lt;code&gt;&quot;a&quot;&lt;/code&gt; , and the rest are ordered lists of code points. For example, in:</source>
          <target state="translated">는 일부지도 배열 요소의 형식이 &lt;code&gt;&quot;a&quot;&lt;/code&gt; 로 지정되고 나머지는 코드 포인트의 순서가 지정된 목록임을 의미합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1f948359f2f73d1e59724d95a487c9eb11536c99" translate="yes" xml:space="preserve">
          <source>means that some of the map array elements have the form given by &lt;code&gt;&quot;s&quot;&lt;/code&gt; , and the rest are lists of scalars. For example, here is a portion of the output of calling &lt;code&gt;prop_invmap&lt;/code&gt; () with the &quot;Script Extensions&quot; property:</source>
          <target state="translated">은 일부지도 배열 요소의 형식이 &lt;code&gt;&quot;s&quot;&lt;/code&gt; 로 지정되고 나머지는 스칼라 목록임을 의미합니다. 예를 들어 다음은 &quot;Script Extensions&quot;속성을 사용하여 &lt;code&gt;prop_invmap&lt;/code&gt; () 을 호출 한 결과의 일부입니다 .</target>
        </trans-unit>
        <trans-unit id="ce29a2ca2ce2da5baffff95b034c6ddb73abc93b" translate="yes" xml:space="preserve">
          <source>means that the name is algorithmically calculated. This is easily done by the function &lt;a href=&quot;../charnames#charnames%3a%3aviacode(code)&quot;&gt;charnames::viacode(code) in charnames&lt;/a&gt;.</source>
          <target state="translated">이름이 알고리즘 적으로 계산됨을 의미합니다. 이것은 &lt;a href=&quot;../charnames#charnames%3a%3aviacode(code)&quot;&gt;charnames의 charnames :: viacode (code)&lt;/a&gt; 함수에 의해 쉽게 수행됩니다 .</target>
        </trans-unit>
        <trans-unit id="f331de8a336dbb4304d4fbe206ef5bced633f1f3" translate="yes" xml:space="preserve">
          <source>means the Decomposition_Mapping property. This property is like &lt;code&gt;&quot;al&quot;&lt;/code&gt; properties, except that one of the scalar elements is of the form:</source>
          <target state="translated">Decomposition_Mapping 속성을 의미합니다. 이 속성은 &lt;code&gt;&quot;al&quot;&lt;/code&gt; 속성 과 비슷 하지만 스칼라 요소 중 하나의 형식은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ebc6604e5853bfa8d4432ef28c599cfe6458509f" translate="yes" xml:space="preserve">
          <source>means the Name property. All the elements of the map array are simple scalars, but some of them contain special strings that require more work to get the actual name.</source>
          <target state="translated">이름 속성을 의미합니다. 지도 배열의 모든 요소는 간단한 스칼라이지만 일부는 실제 이름을 얻기 위해 더 많은 작업이 필요한 특수 문자열을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="7b4c37f20f466f4e9512aba29c31e40aeb7562c8" translate="yes" xml:space="preserve">
          <source>means to use Unicode rules when pattern matching. On ASCII platforms, this means that the code points between 128 and 255 take on their Latin-1 (ISO-8859-1) meanings (which are the same as Unicode's). (Otherwise Perl considers their meanings to be undefined.) Thus, under this modifier, the ASCII platform effectively becomes a Unicode platform; and hence, for example, &lt;code&gt;\w&lt;/code&gt; will match any of the more than 100_000 word characters in Unicode.</source>
          <target state="translated">패턴 일치시 유니 코드 규칙을 사용하는 것을 의미합니다. ASCII 플랫폼에서 이는 128에서 255 사이의 코드 포인트가 라틴 -1 (ISO-8859-1) 의미 (유니 코드와 동일 함)를 취함을 의미합니다. (그렇지 않으면 Perl은 의미가 정의되지 않은 것으로 간주합니다.) 따라서이 수정 자에서 ASCII 플랫폼은 사실상 유니 코드 플랫폼이됩니다. 예를 들어, &lt;code&gt;\w&lt;/code&gt; 는 유니 코드에서 100_000 개 이상의 단어 문자와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="cf83347b16516473606c1d1b213791c7fa46c7fd" translate="yes" xml:space="preserve">
          <source>means to use the current locale's rules (see &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt;) when pattern matching. For example, &lt;code&gt;\w&lt;/code&gt; will match the &quot;word&quot; characters of that locale, and &lt;code&gt;&quot;/i&quot;&lt;/code&gt; case-insensitive matching will match according to the locale's case folding rules. The locale used will be the one in effect at the time of execution of the pattern match. This may not be the same as the compilation-time locale, and can differ from one match to another if there is an intervening call of the &lt;a href=&quot;perllocale#The-setlocale-function&quot;&gt;setlocale() function&lt;/a&gt;.</source>
          <target state="translated">패턴 일치시 현재 로케일 규칙 ( &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt; 참조 ) 을 사용하는 것을 의미합니다 . 예를 들어, &lt;code&gt;\w&lt;/code&gt; 는 해당 로캘의 &quot;word&quot;문자와 일치하고 &lt;code&gt;&quot;/i&quot;&lt;/code&gt; 대 / 소문자를 구분하지 않는 일치는 로캘의 대 / 소문자 구분 규칙에 따라 일치합니다. 사용 된 로케일은 패턴 일치 실행시 유효한 로케일입니다. 이것은 컴파일 타임 로케일과 같지 않을 수 있으며 &lt;a href=&quot;perllocale#The-setlocale-function&quot;&gt;setlocale () 함수를&lt;/a&gt; 호출하는 경우 일치하는 항목과 다를 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="774032f070d9305fc1fe777ad6515286eee7f16b" translate="yes" xml:space="preserve">
          <source>meant to be used to assert that the running Perl is of a earlier version than its argument and</source>
          <target state="translated">실행중인 Perl이 인수보다 이전 버전임을 주장하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="0e7edcf92b37364f36e9081fc9c8d780ace044a7" translate="yes" xml:space="preserve">
          <source>mechanism for unmasking ops once they have been masked. This is intentional.</source>
          <target state="translated">일단 마스크 된 마스크를 마스크 해제하는 메커니즘. 이것은 의도적 인 것입니다.</target>
        </trans-unit>
        <trans-unit id="69bd3a66b442e54193659366f36003d34519653a" translate="yes" xml:space="preserve">
          <source>mechanism for untainting dirty data, unless you use the strategy detailed below to fork a child of lesser privilege.</source>
          <target state="translated">더 낮은 권한의 자식을 포크하기 위해 아래에 설명 된 전략을 사용하지 않는 한 더티 데이터를 보존하는 메커니즘.</target>
        </trans-unit>
        <trans-unit id="3599b389d8bce738a182f20a586d95bb60c8bdd5" translate="yes" xml:space="preserve">
          <source>melezhik (Alexey) sent me a link where he published a chef recipe to work with CPAN.pm: &lt;a href=&quot;http://community.opscode.com/cookbooks/cpan&quot;&gt;http://community.opscode.com/cookbooks/cpan&lt;/a&gt;.</source>
          <target state="translated">melezhik (Alexey)는 CPAN.pm ( &lt;a href=&quot;http://community.opscode.com/cookbooks/cpan&quot;&gt;http://community.opscode.com/cookbooks/cpan)&lt;/a&gt; 과 함께 작업 할 요리사 레시피를 게시 한 링크를 보냈습니다 .</target>
        </trans-unit>
        <trans-unit id="81c5d49be9505089d8d248ea96f6d077fd0ab9bd" translate="yes" xml:space="preserve">
          <source>memory</source>
          <target state="translated">memory</target>
        </trans-unit>
        <trans-unit id="dfb6dcca64b7c421763c980525de160ba4dda6eb" translate="yes" xml:space="preserve">
          <source>merely advisory</source>
          <target state="translated">단지 자문</target>
        </trans-unit>
        <trans-unit id="db017b260613363c85b5fb80f27734c53c0a038f" translate="yes" xml:space="preserve">
          <source>merges</source>
          <target state="translated">merges</target>
        </trans-unit>
        <trans-unit id="a567f7ebfaea062a7925798b69789d124b0986c3" translate="yes" xml:space="preserve">
          <source>message when the error is associated with</source>
          <target state="translated">오류와 관련된 메시지</target>
        </trans-unit>
        <trans-unit id="c1d3d70699b31ee64cb23e6446c8dba17f385b7d" translate="yes" xml:space="preserve">
          <source>metacharacter</source>
          <target state="translated">metacharacter</target>
        </trans-unit>
        <trans-unit id="e45bb8fc1ce76f8f82d35a4ee62cd5d750a9a673" translate="yes" xml:space="preserve">
          <source>metacharacter &lt;code&gt;|&lt;/code&gt;. To match &lt;code&gt;dog&lt;/code&gt; or &lt;code&gt;cat&lt;/code&gt; , we form the regexp &lt;code&gt;dog|cat&lt;/code&gt; . As before, Perl will try to match the regexp at the earliest possible point in the string. At each character position, Perl will first try to match the first alternative, &lt;code&gt;dog&lt;/code&gt; . If &lt;code&gt;dog&lt;/code&gt; doesn't match, Perl will then try the next alternative, &lt;code&gt;cat&lt;/code&gt; . If &lt;code&gt;cat&lt;/code&gt; doesn't match either, then the match fails and Perl moves to the next position in the string. Some examples:</source>
          <target state="translated">메타 문자 &lt;code&gt;|&lt;/code&gt; . 경기에 &lt;code&gt;dog&lt;/code&gt; 또는 &lt;code&gt;cat&lt;/code&gt; , 우리는 정규 표현식 형성 &lt;code&gt;dog|cat&lt;/code&gt; . 이전과 마찬가지로 Perl은 문자열에서 가능한 가장 빠른 시점에 정규 표현식을 일치 시키려고 시도합니다. 각 캐릭터 위치에서 Perl은 먼저 첫 번째 대안 인 &lt;code&gt;dog&lt;/code&gt; 를 일치 시키려고 시도합니다 . 경우 &lt;code&gt;dog&lt;/code&gt; 일치하지 않는, 펄는 다음 대안을 다할 것입니다 &lt;code&gt;cat&lt;/code&gt; . 경우 &lt;code&gt;cat&lt;/code&gt; 중 하나와 일치하지 않는, 다음 경기는 실패하고 펄은 문자열의 다음 위치로 이동합니다. 몇 가지 예 :</target>
        </trans-unit>
        <trans-unit id="a6ae687047dec7df1894a832e92d9f3ac41aa06c" translate="yes" xml:space="preserve">
          <source>metacharacters</source>
          <target state="translated">metacharacters</target>
        </trans-unit>
        <trans-unit id="3691885eb57d215b824046de59e98e3cf376150b" translate="yes" xml:space="preserve">
          <source>metacharacters &lt;code&gt;()&lt;/code&gt; solve this problem. Grouping allows parts of a regexp to be treated as a single unit. Parts of a regexp are grouped by enclosing them in parentheses. Thus we could solve the &lt;code&gt;housecat|housekeeper&lt;/code&gt; by forming the regexp as &lt;code&gt;house(cat|keeper)&lt;/code&gt; . The regexp &lt;code&gt;house(cat|keeper)&lt;/code&gt; means match &lt;code&gt;house&lt;/code&gt; followed by either &lt;code&gt;cat&lt;/code&gt; or &lt;code&gt;keeper&lt;/code&gt; . Some more examples are</source>
          <target state="translated">메타 문자 &lt;code&gt;()&lt;/code&gt; 는 이 문제를 해결합니다. 그룹화하면 정규 표현식의 일부를 단일 단위로 처리 할 수 ​​있습니다. 정규 표현식의 일부는 괄호로 묶어 그룹화됩니다. 따라서 정규식을 &lt;code&gt;house(cat|keeper)&lt;/code&gt; 로 구성하여 &lt;code&gt;housecat|housekeeper&lt;/code&gt; 문제를 해결할 수있었습니다 . 정규식 &lt;code&gt;house(cat|keeper)&lt;/code&gt; 는 match &lt;code&gt;house&lt;/code&gt; 다음에 &lt;code&gt;cat&lt;/code&gt; 또는 &lt;code&gt;keeper&lt;/code&gt; 가 있음을 의미 합니다. 더 많은 예는</target>
        </trans-unit>
        <trans-unit id="28e41558fcf57441711bff955daa2bf60342987e" translate="yes" xml:space="preserve">
          <source>metacharacters &lt;code&gt;?&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt; , &lt;code&gt;+&lt;/code&gt; , and &lt;code&gt;{}&lt;/code&gt; were created for. They allow us to delimit the number of repeats for a portion of a regexp we consider to be a match. Quantifiers are put immediately after the character, character class, or grouping that we want to specify. They have the following meanings:</source>
          <target state="translated">메타 문자 &lt;code&gt;?&lt;/code&gt; , &lt;code&gt;*&lt;/code&gt; , &lt;code&gt;+&lt;/code&gt; 및 &lt;code&gt;{}&lt;/code&gt; 이 (가) 생성되었습니다. 그것들은 일치한다고 생각되는 정규 표현식의 일부에 대해 반복 횟수를 제한 할 수 있습니다. 수량자는 지정하려는 문자, 문자 클래스 또는 그룹 바로 뒤에 놓입니다. 다음과 같은 의미가 있습니다.</target>
        </trans-unit>
        <trans-unit id="d8b26ebc36b2305fd509c14ba2fe93e356bf5ae4" translate="yes" xml:space="preserve">
          <source>metacharacters &lt;code&gt;^&lt;/code&gt; and &lt;code&gt;$&lt;/code&gt; . The anchor &lt;code&gt;^&lt;/code&gt; means match at the beginning of the string and the anchor &lt;code&gt;$&lt;/code&gt; means match at the end of the string, or before a newline at the end of the string. Here is how they are used:</source>
          <target state="translated">메타 문자는 &lt;code&gt;^&lt;/code&gt; 및 &lt;code&gt;$&lt;/code&gt; . 앵커 &lt;code&gt;^&lt;/code&gt; 는 문자열의 시작에서 일치를 의미하고 앵커 &lt;code&gt;$&lt;/code&gt; 는 문자열의 끝에서 또는 문자열의 끝에서 개행 이전에 일치하는 것을 의미합니다. 사용 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f2522910664da04cee4bd124d3b64f339ac50d43" translate="yes" xml:space="preserve">
          <source>metafile_data</source>
          <target state="translated">metafile_data</target>
        </trans-unit>
        <trans-unit id="b4fa9fe36bccbcf6da11d7b74e9959f7b06a9e0d" translate="yes" xml:space="preserve">
          <source>metafile_file</source>
          <target state="translated">metafile_file</target>
        </trans-unit>
        <trans-unit id="c2c63ac5c43d421fd01c9ea6bd181e24b513305c" translate="yes" xml:space="preserve">
          <source>metafile_target</source>
          <target state="translated">metafile_target</target>
        </trans-unit>
        <trans-unit id="bfe329f53094fdf7afd9b5c8b704fbf1310d641b" translate="yes" xml:space="preserve">
          <source>method and to supply your own fill method, which fills the PerlIOBuf's buffer.</source>
          <target state="translated">PerlIOBuf의 버퍼를 채우는 자체 채우기 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="841d13f080601a88a2099437e1fc60dac5aa5bd3" translate="yes" xml:space="preserve">
          <source>method filter</source>
          <target state="translated">방법 필터</target>
        </trans-unit>
        <trans-unit id="c7bbeecaaa78a77904ce5e01fe44839f961657e5" translate="yes" xml:space="preserve">
          <source>method filters</source>
          <target state="translated">메소드 필터</target>
        </trans-unit>
        <trans-unit id="20ed31a93b4f6f6671b871975909485b84f97dd1" translate="yes" xml:space="preserve">
          <source>method generates portable, human-readable text describing the current state of computation. You can subsequently restore that state with</source>
          <target state="translated">이 방법은 현재 계산 상태를 설명하는 이식 가능한 사람이 읽을 수있는 텍스트를 생성합니다. 이후에 해당 상태를 복원 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="e6eba1170ffd7312ecb8b836b8ef98c663888459" translate="yes" xml:space="preserve">
          <source>method is a read-once operation. Once it has been performed, the Digest::SHA object is automatically reset in preparation for calculating another digest value. Call</source>
          <target state="translated">메소드는 한 번의 읽기 작업입니다. 일단 수행되면 Digest :: SHA 객체는 다른 다이제스트 값을 계산하기 위해 자동으로 재설정됩니다. 요구</target>
        </trans-unit>
        <trans-unit id="e2476cf8a3cd313c6167ded43d77c61d9c2e76bc" translate="yes" xml:space="preserve">
          <source>method named &lt;code&gt;foo&lt;/code&gt; that the object in &lt;code&gt;$obj&lt;/code&gt; has inherited. That is:</source>
          <target state="translated">&lt;code&gt;$obj&lt;/code&gt; 의 객체 가 상속 한 &lt;code&gt;foo&lt;/code&gt; 라는 메소드 . 그건:</target>
        </trans-unit>
        <trans-unit id="c59b81569953ac2b849e528fa2cf9c570b9889e1" translate="yes" xml:space="preserve">
          <source>method names (because you don't need to and that's likely to not do what you want),</source>
          <target state="translated">메소드 이름 (필요하지 않고 원하는 것을하지 않을 수 있기 때문에),</target>
        </trans-unit>
        <trans-unit id="dba368683c2ff819fcfc5cc5e3e99101f2ffdd0b" translate="yes" xml:space="preserve">
          <source>method needs changing, it will be deprecated first, and changed in a later release.</source>
          <target state="translated">메소드를 변경해야하며, 먼저 사용되지 않으며 이후 릴리스에서 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="db8525380423d44885d46b1a85f7f58d646f0acc" translate="yes" xml:space="preserve">
          <source>method returns a pointer (i.e., the memory location expressed as an unsigned integer) to the internal thread structure associated with a threads object. For Win32, this is a pointer to the &lt;code&gt;HANDLE&lt;/code&gt; value returned by &lt;code&gt;CreateThread&lt;/code&gt; (i.e., &lt;code&gt;HANDLE *&lt;/code&gt; ); for other platforms, it is a pointer to the &lt;code&gt;pthread_t&lt;/code&gt; structure used in the &lt;code&gt;pthread_create&lt;/code&gt; call (i.e., &lt;code&gt;pthread_t *&lt;/code&gt; ).</source>
          <target state="translated">이 메소드는 스레드 객체와 관련된 내부 스레드 구조에 대한 포인터 (즉 부호없는 정수로 표현 된 메모리 위치)를 반환합니다. Win32의 경우 &lt;code&gt;CreateThread&lt;/code&gt; 에서 반환 한 &lt;code&gt;HANDLE&lt;/code&gt; 값에 대한 포인터입니다 (예 : &lt;code&gt;HANDLE *&lt;/code&gt; ). 다른 플랫폼의 경우 &lt;code&gt;pthread_create&lt;/code&gt; 호출에 사용되는 &lt;code&gt;pthread_t&lt;/code&gt; 구조에 대한 포인터입니다 (예 : &lt;code&gt;pthread_t *&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="f8554af251a100d83b8c7a300b463691e1c83bdf" translate="yes" xml:space="preserve">
          <source>method to set/get the default debug level for a given class.</source>
          <target state="translated">주어진 클래스에 대한 기본 디버그 레벨을 설정 / 취득하는 메소드.</target>
        </trans-unit>
        <trans-unit id="8a88780cc3915c8ed74cb5f68c1bc354aa2ec555" translate="yes" xml:space="preserve">
          <source>method with the anonymous sub passed to</source>
          <target state="translated">익명 서브가 전달 된 메소드</target>
        </trans-unit>
        <trans-unit id="cc139462c8298124c562dcb9fe676356f60d2ada" translate="yes" xml:space="preserve">
          <source>method, whereas the</source>
          <target state="translated">반면에</target>
        </trans-unit>
        <trans-unit id="946465000bd9e24c032001a54783f3574c94142e" translate="yes" xml:space="preserve">
          <source>method.</source>
          <target state="translated">method.</target>
        </trans-unit>
        <trans-unit id="30568131ca273bfae09e570f072165c041f155b1" translate="yes" xml:space="preserve">
          <source>method. For example, consider the 446-bit message consisting of the bit-string &quot;110&quot; repeated 148 times, followed by &quot;11&quot;. Here's how to display its SHA-1 digest:</source>
          <target state="translated">방법. 예를 들어, 148 번 반복 된 비트 열 &quot;110&quot;과 &quot;11&quot;로 구성된 446 비트 메시지를 고려하십시오. SHA-1 다이제스트를 표시하는 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="53df0f9c78ef673048395789ac58e5cb89246e97" translate="yes" xml:space="preserve">
          <source>method. Once this has been done, all POP3 commands are accessed via method calls on the object.</source>
          <target state="translated">방법. 이 작업이 완료되면 모든 POP3 명령은 객체의 메소드 호출을 통해 액세스됩니다.</target>
        </trans-unit>
        <trans-unit id="a338406a60d4973ee2dacbd161cb1341b7bac3e2" translate="yes" xml:space="preserve">
          <source>method. Once this has been done, all SMTP commands are accessed through this object.</source>
          <target state="translated">방법. 이 작업이 완료되면이 개체를 통해 모든 SMTP 명령에 액세스합니다.</target>
        </trans-unit>
        <trans-unit id="72ebd2d3a137dda469d41da6b9c56847d91bcae0" translate="yes" xml:space="preserve">
          <source>methods. A minimal subclass needs to implement the following methods by itself:</source>
          <target state="translated">행동 양식. 최소한의 서브 클래스는 자체적으로 다음 메소드를 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="13f29965b77353eeb5fd00d63b3392224213d1c5" translate="yes" xml:space="preserve">
          <source>might</source>
          <target state="translated">might</target>
        </trans-unit>
        <trans-unit id="16b833ddac39645f0c0076c26c9c3026e4e49fff" translate="yes" xml:space="preserve">
          <source>might exist in a file named</source>
          <target state="translated">파일 이름에 존재할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="f751f94fbad014a305a5148c026ab692850564d0" translate="yes" xml:space="preserve">
          <source>might not be equal to</source>
          <target state="translated">같지 않을 수도 있습니다</target>
        </trans-unit>
        <trans-unit id="2704e3dd8bff43ad5edea8a887ecaa4d2498401e" translate="yes" xml:space="preserve">
          <source>mimic MS-DOS as far as treating of Control-Z as being an end-of-file marker.</source>
          <target state="translated">Control-Z를 파일 끝 마커로 취급하는 한 MS-DOS를 모방합니다.</target>
        </trans-unit>
        <trans-unit id="846fece7d28b4da4f8bdcee1efb547609265703a" translate="yes" xml:space="preserve">
          <source>mimic MS-DOS as far as treating of Control-Z as being an end-of-file marker.)</source>
          <target state="translated">Control-Z를 파일 끝 마커로 취급하는 한 MS-DOS를 모방합니다.)</target>
        </trans-unit>
        <trans-unit id="554a7d8ee56addd6f08691f1faac5871f2183354" translate="yes" xml:space="preserve">
          <source>mimics the behavior of the combined GNU</source>
          <target state="translated">결합 된 GNU의 동작을 모방</target>
        </trans-unit>
        <trans-unit id="b6c935d4f3c7b220fa038613a1f9c1b56b255a86" translate="yes" xml:space="preserve">
          <source>min</source>
          <target state="translated">min</target>
        </trans-unit>
        <trans-unit id="660ea95ee5f95f2ed0384748771b0e6754ad0532" translate="yes" xml:space="preserve">
          <source>mindful of avoiding wasteful constructs such as:</source>
          <target state="translated">다음과 같은 낭비적인 구조를 피하는 데주의하십시오.</target>
        </trans-unit>
        <trans-unit id="5c4821749cf6a260dc8210598dd97db4e58d1a1a" translate="yes" xml:space="preserve">
          <source>minimal</source>
          <target state="translated">minimal</target>
        </trans-unit>
        <trans-unit id="50de5bbd66079bc5115f866c8b4aa1903aa6fda3" translate="yes" xml:space="preserve">
          <source>minimal match</source>
          <target state="translated">최소 일치</target>
        </trans-unit>
        <trans-unit id="36e877b01f6ab144f7552b65e5140b320c6d6f8d" translate="yes" xml:space="preserve">
          <source>minimod.pl</source>
          <target state="translated">minimod.pl</target>
        </trans-unit>
        <trans-unit id="774879be3cf0506d39a059d38fef3518a7f9229f" translate="yes" xml:space="preserve">
          <source>minimum number of CPU seconds</source>
          <target state="translated">최소 CPU 초 수</target>
        </trans-unit>
        <trans-unit id="f76be1ef6b698ce68a1b8e1f1473d23b24e55e7c" translate="yes" xml:space="preserve">
          <source>miniperl</source>
          <target state="translated">miniperl</target>
        </trans-unit>
        <trans-unit id="8cb7390aa489b9bbf4f536018f9da4662bab243a" translate="yes" xml:space="preserve">
          <source>miniperlmain.c</source>
          <target state="translated">miniperlmain.c</target>
        </trans-unit>
        <trans-unit id="1e7338a36e0c8a144352efc3b2d1595852486c5a" translate="yes" xml:space="preserve">
          <source>minlen minlenret</source>
          <target state="translated">Minlen Minlenret</target>
        </trans-unit>
        <trans-unit id="465412c57e877a8e7bba0d67957a8861b34537f6" translate="yes" xml:space="preserve">
          <source>minstr</source>
          <target state="translated">minstr</target>
        </trans-unit>
        <trans-unit id="b9f0b3405ffadc9c0a82d88468e7b37ae2cd058d" translate="yes" xml:space="preserve">
          <source>minus, you can read from the filehandle you opened whatever your kid writes to</source>
          <target state="translated">빼기, 당신은 당신이 당신의 아이가 쓰는 무엇이든 연 파일 핸들에서 읽을 수 있습니다</target>
        </trans-unit>
        <trans-unit id="b17bdbc5482488edddcb65b87fb7013012d88ede" translate="yes" xml:space="preserve">
          <source>minus, you can write to the filehandle you opened and your kid will find it in</source>
          <target state="translated">빼기, 당신은 당신이 연 파일 핸들에 쓸 수 있고 당신의 아이는 그것을 찾을 것입니다</target>
        </trans-unit>
        <trans-unit id="90868ffdfa3a8bd99cfa9f642349e60cf84e057a" translate="yes" xml:space="preserve">
          <source>mkdir</source>
          <target state="translated">mkdir</target>
        </trans-unit>
        <trans-unit id="362da9c7be7d6e9b6f9877fd4823489374286f69" translate="yes" xml:space="preserve">
          <source>mkdir FILENAME</source>
          <target state="translated">mkdir FILENAME</target>
        </trans-unit>
        <trans-unit id="c20bd85e4dd0cc59529256dd3d74f6caed56275f" translate="yes" xml:space="preserve">
          <source>mkdir FILENAME,MASK</source>
          <target state="translated">mkdir FILENAME, 마스크</target>
        </trans-unit>
        <trans-unit id="d0583e40020f7957f67cfd6d68cef2c6eb4be7c1" translate="yes" xml:space="preserve">
          <source>mkmyconfig</source>
          <target state="translated">mkmyconfig</target>
        </trans-unit>
        <trans-unit id="f8595e63198257aa7d2988fa3e2ed4bd060bcc99" translate="yes" xml:space="preserve">
          <source>mkmyconfig() writes your own CPAN::MyConfig file into your &lt;code&gt;~/.cpan/&lt;/code&gt; directory so that you can save your own preferences instead of the system-wide ones.</source>
          <target state="translated">mkmyconfig ()는 &lt;code&gt;~/.cpan/&lt;/code&gt; 디렉토리에 자신의 CPAN :: MyConfig 파일을 작성 하므로 시스템 전체의 환경 설정 대신 자신의 환경 설정을 저장할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="be5bdb476e16154f57ec85e9241f10c4fa50bf3d" translate="yes" xml:space="preserve">
          <source>mmap</source>
          <target state="translated">mmap</target>
        </trans-unit>
        <trans-unit id="dc3bbbef84a573598cdf91c45b98054fe200dfd2" translate="yes" xml:space="preserve">
          <source>mmap(2)</source>
          <target state="translated">mmap(2)</target>
        </trans-unit>
        <trans-unit id="e78fe7049341b36116d8054f5a3e00d01f245fcc" translate="yes" xml:space="preserve">
          <source>mode</source>
          <target state="translated">mode</target>
        </trans-unit>
        <trans-unit id="92ee6b19a89522af68a98f51735f86bf54699f22" translate="yes" xml:space="preserve">
          <source>model became available through the &lt;code&gt;threads&lt;/code&gt; module, and the</source>
          <target state="translated">&lt;code&gt;threads&lt;/code&gt; 모듈을 통해 모델을 사용할 수있게되었습니다 .</target>
        </trans-unit>
        <trans-unit id="3104e608dad00504d95b414d3a5c71b9c2e0c8fe" translate="yes" xml:space="preserve">
          <source>model was deprecated.</source>
          <target state="translated">모델은 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0da37333712bce5335bffcf0a385afee38c0c46a" translate="yes" xml:space="preserve">
          <source>model was not available as a public API; only as an internal API that was available for extension writers, and to implement fork() emulation on Win32 platforms.</source>
          <target state="translated">모델은 공개 API로 사용할 수 없었습니다. 확장 작성자가 사용할 수있는 내부 API로만 사용되며 Win32 플랫폼에서 fork () 에뮬레이션을 구현합니다.</target>
        </trans-unit>
        <trans-unit id="dcaa284380e44a0606d18cbdc420c4bd1df3e2a4" translate="yes" xml:space="preserve">
          <source>model was removed from the Perl interpreter.</source>
          <target state="translated">모델은 Perl 인터프리터에서 제거되었습니다.</target>
        </trans-unit>
        <trans-unit id="230d9208c7d05d4ce04fc08d26b43e3d63b9ea28" translate="yes" xml:space="preserve">
          <source>modetype.U</source>
          <target state="translated">modetype.U</target>
        </trans-unit>
        <trans-unit id="e07461f176cf1c3992eeba3272884fd0bcbbfbf7" translate="yes" xml:space="preserve">
          <source>modification time</source>
          <target state="translated">수정 시간</target>
        </trans-unit>
        <trans-unit id="4a67e7217b75a78bce853a2702c4d777aeadc6c3" translate="yes" xml:space="preserve">
          <source>modifier</source>
          <target state="translated">modifier</target>
        </trans-unit>
        <trans-unit id="4f81421330e5178abd49b4a74297e786e617d5be" translate="yes" xml:space="preserve">
          <source>modifier, just before the terminating semicolon (or block ending). The possible modifiers are:</source>
          <target state="translated">종결 세미콜론 (또는 블록 종료) 직전의 수정 자. 가능한 수정자는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="cbaf6ca63b750acdf1db9dade95110fbb79ecb12" translate="yes" xml:space="preserve">
          <source>modifier.)</source>
          <target state="translated">modifier.)</target>
        </trans-unit>
        <trans-unit id="7c9cd4b726e0d5b10a0a5028e43aa04281481b15" translate="yes" xml:space="preserve">
          <source>modifier: either for the entire regular expression with the &lt;code&gt;/s&lt;/code&gt; modifier, or locally with &lt;code&gt;(?s)&lt;/code&gt;. (The &lt;code&gt;&lt;a href=&quot;#%5cN&quot;&gt;\N&lt;/a&gt;&lt;/code&gt; backslash sequence, described below, matches any character except newline without regard to the</source>
          <target state="translated">수정 자 : &lt;code&gt;/s&lt;/code&gt; 수정자를 사용하는 전체 정규식 또는 &lt;code&gt;(?s)&lt;/code&gt; 하여 로컬로 지정 합니다. ( 아래에 설명 된 &lt;code&gt;&lt;a href=&quot;#%5cN&quot;&gt;\N&lt;/a&gt;&lt;/code&gt; 백 슬래시 시퀀스는 줄 바꿈을 제외한 모든 문자를</target>
        </trans-unit>
        <trans-unit id="3dcdbf0febb89354e61bf27aaa79733b4e6df9ac" translate="yes" xml:space="preserve">
          <source>modifiers</source>
          <target state="translated">modifiers</target>
        </trans-unit>
        <trans-unit id="45b605a8a040a96044ddc87870b2b021dc6826d6" translate="yes" xml:space="preserve">
          <source>modify their operands, even if &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is passed as the third argument (see &lt;a href=&quot;#Overloadable-Operations&quot;&gt;Overloadable Operations&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 가 세 번째 인수로 전달 되더라도 피연산자를 수정 하십시오 ( &lt;a href=&quot;#Overloadable-Operations&quot;&gt;오버로드 가능한 오퍼레이션&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="4a5a87a44047d92632b8f5e88f5929538ccfcca3" translate="yes" xml:space="preserve">
          <source>modifying the versions/names as needed. Run</source>
          <target state="translated">필요에 따라 버전 / 이름 수정 운영</target>
        </trans-unit>
        <trans-unit id="fbd34a2b6e6a9fe8161f97dc435642609ac0bc29" translate="yes" xml:space="preserve">
          <source>module</source>
          <target state="translated">module</target>
        </trans-unit>
        <trans-unit id="c81fe62e576be9418f2e15c3b64970e52cab9850" translate="yes" xml:space="preserve">
          <source>module for interesting &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; implementations.</source>
          <target state="translated">흥미로운 &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; 구현을 위한 모듈 .</target>
        </trans-unit>
        <trans-unit id="971f9507f5b8a4d470a1c5908ea030f38cbcb897" translate="yes" xml:space="preserve">
          <source>module for interesting &lt;code&gt;&lt;a href=&quot;tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; implementations.</source>
          <target state="translated">흥미로운 &lt;code&gt;&lt;a href=&quot;tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; 구현을 위한 모듈 .</target>
        </trans-unit>
        <trans-unit id="73211d6a9e6efb95e709c74b9f764f4ae66081b6" translate="yes" xml:space="preserve">
          <source>module for the user-visible part. The &lt;code&gt;B&lt;/code&gt; module is of use to those who want to write new compiler backends. This documentation assumes that the reader knows a fair amount about perl's internals including such things as SVs, OPs and the internal symbol table and syntax tree of a program.</source>
          <target state="translated">사용자가 볼 수있는 부품을위한 모듈. &lt;code&gt;B&lt;/code&gt; 의 모듈은 새로운 컴파일러 백엔드를 작성하려는 사람들에게 사용이다. 이 문서는 독자가 SV, OP, 내부 심볼 테이블 및 프로그램의 구문 트리와 같은 것을 포함하여 perl의 내부에 대해 상당한 양을 알고 있다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="56f2526af236fa3dc601790188945722b1c3f189" translate="yes" xml:space="preserve">
          <source>module or other tools.</source>
          <target state="translated">모듈 또는 기타 도구.</target>
        </trans-unit>
        <trans-unit id="db88e68b522bb68bce7506970b9a1f47b4c2470e" translate="yes" xml:space="preserve">
          <source>module provides a Perl interface to the</source>
          <target state="translated">모듈은 Perl 인터페이스를 제공합니다</target>
        </trans-unit>
        <trans-unit id="6703baf9f1f3d5208b1467c95111b413bacd3d96" translate="yes" xml:space="preserve">
          <source>module up to date</source>
          <target state="translated">최신 모듈</target>
        </trans-unit>
        <trans-unit id="5631947c175152aafecdedd20b8a3c360e727af7" translate="yes" xml:space="preserve">
          <source>module was written by Paul Marquess,</source>
          <target state="translated">모듈은 Paul Marquess가 작성했습니다.</target>
        </trans-unit>
        <trans-unit id="73de5790792f8e1d108e272e247e1391e823e588" translate="yes" xml:space="preserve">
          <source>module, as well as a link to the</source>
          <target state="translated">모듈뿐만 아니라</target>
        </trans-unit>
        <trans-unit id="a0f7c649da671878440fbb2f6716d37e233bf810" translate="yes" xml:space="preserve">
          <source>module-starter</source>
          <target state="translated">module-starter</target>
        </trans-unit>
        <trans-unit id="620a549dbcb1fff62ea85695ca37da9a542eee65" translate="yes" xml:space="preserve">
          <source>module_name</source>
          <target state="translated">module_name</target>
        </trans-unit>
        <trans-unit id="a5521377a159c1435ddb1d6e5d3e01ac13ae0e86" translate="yes" xml:space="preserve">
          <source>modulename</source>
          <target state="translated">modulename</target>
        </trans-unit>
        <trans-unit id="4580485d482a9037af94f68af98adf23819cbdf4" translate="yes" xml:space="preserve">
          <source>modules</source>
          <target state="translated">modules</target>
        </trans-unit>
        <trans-unit id="4ec4a1b0c8bac8530740d86b23eeea8dbdae7e74" translate="yes" xml:space="preserve">
          <source>modules contained in the distribution until one module matches.</source>
          <target state="translated">한 모듈이 일치 할 때까지 배포에 포함 된 모듈.</target>
        </trans-unit>
        <trans-unit id="60e8cf5b9b343c43c4a14ace5362210cbeb8bc15" translate="yes" xml:space="preserve">
          <source>modules installed on your system, including those without documentation or outside the standard release, just use the following command (under the default win32 shell, double quotes should be used instead of single quotes).</source>
          <target state="translated">문서가 없거나 표준 릴리스 이외의 모듈을 포함하여 시스템에 설치된 모듈은 다음 명령을 사용하십시오 (기본 win32 셸에서는 작은 따옴표 대신 큰 따옴표를 사용해야합니다).</target>
        </trans-unit>
        <trans-unit id="db046589043f8b8e1075381ab14966412301d1ed" translate="yes" xml:space="preserve">
          <source>modules on your nearby CPAN mirror) and the name &quot;crypt&quot; is a bit of a misnomer. Instead it is primarily used to check if two pieces of text are the same without having to transmit or store the text itself. An example is checking if a correct password is given. The digest of the password is stored, not the password itself. The user types in a password that is crypt()'d with the same salt as the stored digest. If the two digests match, the password is correct.</source>
          <target state="translated">가까운 CPAN 미러의 모듈)과 이름 &quot;crypt&quot;는 약간 잘못된 것입니다. 대신 주로 텍스트 자체를 전송하거나 저장하지 않고도 두 개의 텍스트가 동일한 지 확인하는 데 사용됩니다. 올바른 암호가 제공되는지 확인하는 예가 있습니다. 비밀번호 자체가 아닌 비밀번호 요약이 저장됩니다. 사용자는 저장된 다이제스트와 동일한 소금으로 crypt () 된 암호를 입력합니다. 두 다이제스트가 일치하면 암호가 올바른 것입니다.</target>
        </trans-unit>
        <trans-unit id="dd70ef87b593afa3635f112e61345299a5bb0df1" translate="yes" xml:space="preserve">
          <source>modules. In other words, force a detailed stack trace to be given. This can be very helpful when trying to understand why, or from where, a warning or error is being generated.</source>
          <target state="translated">모듈. 즉, 자세한 스택 추적을 강제로 적용하십시오. 경고 또는 오류가 발생하는 이유 또는 위치를 이해하려고 할 때 매우 유용합니다.</target>
        </trans-unit>
        <trans-unit id="edfe046e1ce6e3ed892e72ff9a02359d94e870b8" translate="yes" xml:space="preserve">
          <source>modules/by-module/DB_File</source>
          <target state="translated">modules/by-module/DB_File</target>
        </trans-unit>
        <trans-unit id="0461583e36f354ad4922e69a3d14320bc96f5983" translate="yes" xml:space="preserve">
          <source>modules/by-module/MLDBM</source>
          <target state="translated">modules/by-module/MLDBM</target>
        </trans-unit>
        <trans-unit id="e27ee88144952d6930dd0bff7be6093814a2ae43" translate="yes" xml:space="preserve">
          <source>modules/by-module/Term</source>
          <target state="translated">modules/by-module/Term</target>
        </trans-unit>
        <trans-unit id="7b42c9a5d464b2160e5c81bda2e42a3fd3c43564" translate="yes" xml:space="preserve">
          <source>modulus</source>
          <target state="translated">modulus</target>
        </trans-unit>
        <trans-unit id="905d7b2c04b460833af0e3a447a97b5bda7e755f" translate="yes" xml:space="preserve">
          <source>more detail.)</source>
          <target state="translated">자세한 세부 사항.)</target>
        </trans-unit>
        <trans-unit id="8b08a04c52c1510e9fef87c94a87bbe9465dc53b" translate="yes" xml:space="preserve">
          <source>more on this subject.</source>
          <target state="translated">이 주제에 대한 자세한 내용.</target>
        </trans-unit>
        <trans-unit id="86baf2f6970cc1314775f02f80189265562638bb" translate="yes" xml:space="preserve">
          <source>more specific</source>
          <target state="translated">좀더 구체적으로</target>
        </trans-unit>
        <trans-unit id="e125d84e0faba0e4edc57950bcd4c6ac1ef85760" translate="yes" xml:space="preserve">
          <source>more than once. Sets</source>
          <target state="translated">한 번 이상. 세트</target>
        </trans-unit>
        <trans-unit id="60ea039f89608a81d5d8a8ae943bed9842d0c635" translate="yes" xml:space="preserve">
          <source>most-significant-bit ordering</source>
          <target state="translated">가장 중요한 비트 순서</target>
        </trans-unit>
        <trans-unit id="4bb947b4533b44b62bc54c4c3a3d0624a457c43e" translate="yes" xml:space="preserve">
          <source>mostly harmless</source>
          <target state="translated">무해한</target>
        </trans-unit>
        <trans-unit id="2c3cbde4417aa450c8f0615b7f23e2ef8c4ba101" translate="yes" xml:space="preserve">
          <source>mother_re</source>
          <target state="translated">mother_re</target>
        </trans-unit>
        <trans-unit id="3871580d9dfc818e0fee1423560999c16392ba7e" translate="yes" xml:space="preserve">
          <source>mro</source>
          <target state="translated">mro</target>
        </trans-unit>
        <trans-unit id="30577e6ceff9265e8b5267533a9b55ff786f993a" translate="yes" xml:space="preserve">
          <source>mro - Method Resolution Order</source>
          <target state="translated">mro-분석법 해결 순서</target>
        </trans-unit>
        <trans-unit id="9adc7174b6f33e53abc393ba6e34f621392f54a6" translate="yes" xml:space="preserve">
          <source>mro.c</source>
          <target state="translated">mro.c</target>
        </trans-unit>
        <trans-unit id="51a109470136dd580634cd282c658294cbcec1a2" translate="yes" xml:space="preserve">
          <source>mro/mro.xs</source>
          <target state="translated">mro/mro.xs</target>
        </trans-unit>
        <trans-unit id="205c8866ea5dc56f8e2e40bab5835a54879ac386" translate="yes" xml:space="preserve">
          <source>mro::get_isarev($classname)</source>
          <target state="translated">mro::get_isarev($classname)</target>
        </trans-unit>
        <trans-unit id="f41cc73f0e4354b87de366854781a12d4536ae55" translate="yes" xml:space="preserve">
          <source>mro::get_linear_isa($classname[, $type])</source>
          <target state="translated">mro :: get_linear_isa ($ classname [, $ type])</target>
        </trans-unit>
        <trans-unit id="5c2bef0506fba226ad79b33c4ca206680d3f07e2" translate="yes" xml:space="preserve">
          <source>mro::get_mro($classname)</source>
          <target state="translated">mro::get_mro($classname)</target>
        </trans-unit>
        <trans-unit id="76cfb030fbb33a155ce047fdd49ad60abe655fd0" translate="yes" xml:space="preserve">
          <source>mro::get_pkg_gen($classname)</source>
          <target state="translated">mro::get_pkg_gen($classname)</target>
        </trans-unit>
        <trans-unit id="b4cc23684b817594fc8fd42f1f74c38fdd572fd7" translate="yes" xml:space="preserve">
          <source>mro::invalidate_all_method_caches()</source>
          <target state="translated">mro::invalidate_all_method_caches()</target>
        </trans-unit>
        <trans-unit id="09a667f601af7eb0bac18fe39a2525ff6881f483" translate="yes" xml:space="preserve">
          <source>mro::is_universal($classname)</source>
          <target state="translated">mro::is_universal($classname)</target>
        </trans-unit>
        <trans-unit id="ed6e1632b241774bb32ef3aa28c0fba178a988ad" translate="yes" xml:space="preserve">
          <source>mro::method_changed_in($classname)</source>
          <target state="translated">mro::method_changed_in($classname)</target>
        </trans-unit>
        <trans-unit id="913df142a9e02ee5bd0e73741dd9c8a0764235d0" translate="yes" xml:space="preserve">
          <source>mro::set_mro ($classname, $type)</source>
          <target state="translated">mro :: set_mro ($ 클래스 이름, $ 타입)</target>
        </trans-unit>
        <trans-unit id="19f34ee1e406ea84ca83c835a3301b5d9014a788" translate="yes" xml:space="preserve">
          <source>msg</source>
          <target state="translated">msg</target>
        </trans-unit>
        <trans-unit id="f0533d234e9081683a08cd588d1aaad792baa7b0" translate="yes" xml:space="preserve">
          <source>msgctl</source>
          <target state="translated">msgctl</target>
        </trans-unit>
        <trans-unit id="f2780ff6fb4e011d6c66a46f03e5700c2fe8021d" translate="yes" xml:space="preserve">
          <source>msgctl ID,CMD,ARG</source>
          <target state="translated">msgctl ID, CMD, ARG</target>
        </trans-unit>
        <trans-unit id="db9a6579340dc36bfe9a3f9968fbb384992d9303" translate="yes" xml:space="preserve">
          <source>msgget</source>
          <target state="translated">msgget</target>
        </trans-unit>
        <trans-unit id="022c2fcb223d313c9a8c5a1d6047e3c319cf8d87" translate="yes" xml:space="preserve">
          <source>msgget KEY,FLAGS</source>
          <target state="translated">msgget 키, 플래그</target>
        </trans-unit>
        <trans-unit id="190f73c93637faa5112a4636f540c2a0af7b9a7e" translate="yes" xml:space="preserve">
          <source>msgrcv</source>
          <target state="translated">msgrcv</target>
        </trans-unit>
        <trans-unit id="8419e06c9300b34a44d08738346bd83d3b6b8201" translate="yes" xml:space="preserve">
          <source>msgrcv ID,VAR,SIZE,TYPE,FLAGS</source>
          <target state="translated">msgrcv ID, VAR, SIZE, TYPE, FLAGS</target>
        </trans-unit>
        <trans-unit id="a5a327158f59211ef3476fe52624eb208f2ac3f2" translate="yes" xml:space="preserve">
          <source>msgsnd</source>
          <target state="translated">msgsnd</target>
        </trans-unit>
        <trans-unit id="ef69105c2917145bb606e7eac916b9bfa7118478" translate="yes" xml:space="preserve">
          <source>msgsnd ID,MSG,FLAGS</source>
          <target state="translated">msgsnd ID, MSG, 플래그</target>
        </trans-unit>
        <trans-unit id="78eb96bf409ff7199521e827fd70c4722da5a0ec" translate="yes" xml:space="preserve">
          <source>mtime, atime and ctime all return the last modification time. Device and inode are not necessarily reliable. (RISC OS)</source>
          <target state="translated">mtime, atime 및 ctime은 모두 마지막 수정 시간을 반환합니다. 장치와 inode가 반드시 신뢰할 필요는 없습니다. (RISC OS)</target>
        </trans-unit>
        <trans-unit id="7d3f44729dc243885887b8da8c810ddd4154864f" translate="yes" xml:space="preserve">
          <source>much</source>
          <target state="translated">much</target>
        </trans-unit>
        <trans-unit id="4766f2d8042ab7b982c59cba8c3c796bf7ddbb20" translate="yes" xml:space="preserve">
          <source>multiarch.U</source>
          <target state="translated">multiarch.U</target>
        </trans-unit>
        <trans-unit id="494d080d373a66cf3826a24a03c851e416a44d5b" translate="yes" xml:space="preserve">
          <source>multiple spaces are skipped because of our $delim</source>
          <target state="translated">$ delim으로 인해 여러 공백을 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="2a48d8ca6cecff2eba91f99841a00c759fedf272" translate="yes" xml:space="preserve">
          <source>multiple times, until the deepest level of nesting is reached. All the above routines return a pointer to a &lt;code&gt;regnode&lt;/code&gt; , which is usually the last regnode added to the program. However, one complication is that reg() returns NULL for parsing &lt;code&gt;(?:)&lt;/code&gt; syntax for embedded modifiers, setting the flag &lt;code&gt;TRYAGAIN&lt;/code&gt; . The &lt;code&gt;TRYAGAIN&lt;/code&gt; propagates upwards until it is captured, in some cases by &lt;code&gt;regatom()&lt;/code&gt; , but otherwise unconditionally by &lt;code&gt;regbranch()&lt;/code&gt; . Hence it will never be returned by &lt;code&gt;regbranch()&lt;/code&gt; to &lt;code&gt;reg()&lt;/code&gt; . This flag permits patterns such as &lt;code&gt;(?i)+&lt;/code&gt; to be detected as errors (</source>
          <target state="translated">가장 깊은 중첩 수준에 도달 할 때까지 여러 번. 위의 모든 루틴은 포인터를 반환 &lt;code&gt;regnode&lt;/code&gt; 일반적으로 프로그램에 추가 된 마지막 regnode입니다. 그러나 한 가지 복잡한 점은 reg ()가 임베디드 수정 자의 구문 분석 &lt;code&gt;(?:)&lt;/code&gt; 구문에 대해 NULL을 리턴 하여 플래그 &lt;code&gt;TRYAGAIN&lt;/code&gt; 을 설정 한다는 것 입니다. &lt;code&gt;TRYAGAIN&lt;/code&gt; 는 그것에 의해 경우에 따라 포착 할 때까지 위쪽으로 전파 &lt;code&gt;regatom()&lt;/code&gt; 하지만, 그 무조건 의해 &lt;code&gt;regbranch()&lt;/code&gt; . 따라서 결코 &lt;code&gt;regbranch()&lt;/code&gt; 에 의해 &lt;code&gt;reg()&lt;/code&gt; 로 반환되지 않습니다 . 이 플래그는 &lt;code&gt;(?i)+&lt;/code&gt; 와 같은 패턴이 오류 (</target>
        </trans-unit>
        <trans-unit id="d6f06946d1d627b89c6aa5f656ee7a2e628998e4" translate="yes" xml:space="preserve">
          <source>mummification</source>
          <target state="translated">mummification</target>
        </trans-unit>
        <trans-unit id="08b42ff8cd9921eb9bf7b7df6c0596fe52885bf3" translate="yes" xml:space="preserve">
          <source>mummify</source>
          <target state="translated">mummify</target>
        </trans-unit>
        <trans-unit id="5723d165ed59595207e8c0c85bb720c83f4ce809" translate="yes" xml:space="preserve">
          <source>must</source>
          <target state="translated">must</target>
        </trans-unit>
        <trans-unit id="67d7abd57e65833244279b7161eab72549732033" translate="yes" xml:space="preserve">
          <source>must be &lt;code&gt;G_SCALAR&lt;/code&gt; , &lt;code&gt;G_ARRAY&lt;/code&gt; , or &lt;code&gt;G_VOID&lt;/code&gt; to specify the context to apply. The modified op tree is returned.</source>
          <target state="translated">적용 할 컨텍스트를 지정하려면 &lt;code&gt;G_SCALAR&lt;/code&gt; , &lt;code&gt;G_ARRAY&lt;/code&gt; 또는 &lt;code&gt;G_VOID&lt;/code&gt; 이어야합니다 . 수정 된 op 트리가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="b601628029a8238acaff6ac6db13c9cb7242d4de" translate="yes" xml:space="preserve">
          <source>must be a UTF8 string. Do not use this for pad names that point to outer lexicals. See &lt;a href=&quot;#newPADNAMEouter&quot;&gt;newPADNAMEouter&lt;/a&gt;.</source>
          <target state="translated">UTF8 문자열이어야합니다. 외부 어휘를 가리키는 패드 이름에는 이것을 사용하지 마십시오. &lt;a href=&quot;#newPADNAMEouter&quot;&gt;newPADNAMEouter를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cb3a5121f83eaa3d4bd672385537ca58787913f9" translate="yes" xml:space="preserve">
          <source>must be a pointer to a hash (which may have &lt;code&gt;%^H&lt;/code&gt; magic, but should be generally non-magical), or &lt;code&gt;NULL&lt;/code&gt; (interpreted as an empty hash). The content of</source>
          <target state="translated">해시 ( &lt;code&gt;%^H&lt;/code&gt; 매직이있을 수 있지만 일반적으로 마술이 아님)에 대한 포인터 이거나 &lt;code&gt;NULL&lt;/code&gt; (빈 해시로 해석 됨 )이어야합니다 . 내용</target>
        </trans-unit>
        <trans-unit id="1fe030ca648be011c8f09b1437c538e494e78b51" translate="yes" xml:space="preserve">
          <source>must be a printable (non-control) ASCII character.</source>
          <target state="translated">인쇄 가능한 (비 제어) ASCII 문자 여야합니다.</target>
        </trans-unit>
        <trans-unit id="d9612e1ee299197eb4c7a081b94299664e8a98b7" translate="yes" xml:space="preserve">
          <source>must be implemented by subclasses.</source>
          <target state="translated">서브 클래스에 의해 구현되어야합니다.</target>
        </trans-unit>
        <trans-unit id="534eac5e9ba1287200dbbe978a4b70e3e31cc5bc" translate="yes" xml:space="preserve">
          <source>must be ready to be called, except for</source>
          <target state="translated">를 제외하고는 호출 될 준비가되어 있어야합니다</target>
        </trans-unit>
        <trans-unit id="a82344d495672dbb3822e0f4c6372fff02f61795" translate="yes" xml:space="preserve">
          <source>must be written as</source>
          <target state="translated">로 작성해야합니다</target>
        </trans-unit>
        <trans-unit id="4aa3c119239596e384b66582a59a71eabfe53b55" translate="yes" xml:space="preserve">
          <source>must initially (once per process) contain a null pointer. A C variable of static duration (declared at file scope, typically also marked &lt;code&gt;static&lt;/code&gt; to give it internal linkage) will be implicitly initialised appropriately, if it does not have an explicit initialiser. This function will only actually modify the check chain if it finds</source>
          <target state="translated">처음에는 (프로세스 당 한 번) 널 포인터가 포함되어야합니다. 정적 지속 기간의 AC 변수 (파일 범위에서 선언되며 일반적으로 내부 링크를 제공하기 위해 &lt;code&gt;static&lt;/code&gt; 으로 표시됨 )에는 명시적인 초기자가없는 경우 암시 적으로 적절하게 초기화됩니다. 이 기능은 확인 된 경우에만 실제로 체크 체인을 수정합니다</target>
        </trans-unit>
        <trans-unit id="6ea6500a7918e854c62ee56a4e07c834035da87b" translate="yes" xml:space="preserve">
          <source>must never</source>
          <target state="translated">절대로</target>
        </trans-unit>
        <trans-unit id="608268e848b52fa844f5f21f48e984f7a0d41bb2" translate="yes" xml:space="preserve">
          <source>must not</source>
          <target state="translated">해서는 안된다</target>
        </trans-unit>
        <trans-unit id="94349e7624bca82974cd5104e9637e8baeede536" translate="yes" xml:space="preserve">
          <source>must not be later in the buffer than the position of &lt;a href=&quot;#PL_parser-%3ebufptr&quot;&gt;PL_parser-&amp;gt;bufptr&lt;/a&gt;: it is not permitted to discard text that has yet to be lexed.</source>
          <target state="translated">&lt;a href=&quot;#PL_parser-%3ebufptr&quot;&gt;PL_parser-&amp;gt; bufptr&lt;/a&gt; 의 위치보다 나중에 버퍼 에 있으면 안됩니다. 아직 어휘 화되지 않은 텍스트는 버릴 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="3112a8a137c010338c01461049d0ddf9a8b34b9a" translate="yes" xml:space="preserve">
          <source>must not be used. See &lt;a href=&quot;#gzip_used&quot;&gt;gzip_used&lt;/a&gt;.</source>
          <target state="translated">사용해서는 안됩니다. &lt;a href=&quot;#gzip_used&quot;&gt;gzip_used를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9145827ce2563c888d599f321beadb1578e54a5e" translate="yes" xml:space="preserve">
          <source>must not begin with a &quot;0&quot;, and there must be at least</source>
          <target state="translated">&quot;0&quot;으로 시작해서는 안되며 최소한 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="94ba5f8feefc43b15e385e7ad2d2a13daef7d1e0" translate="yes" xml:space="preserve">
          <source>must not begin with a number, nor contain hyphens. When different groups within the same pattern have the same name, any reference to that name assumes the leftmost defined group. Named groups count in absolute and relative numbering, and so can also be referred to by those numbers. (It's possible to do things with named capture groups that would otherwise require &lt;code&gt;(??{})&lt;/code&gt; .)</source>
          <target state="translated">숫자로 시작하거나 하이픈을 포함해서는 안됩니다. 동일한 패턴 내에서 다른 그룹의 이름이 동일한 경우 해당 이름에 대한 참조는 가장 왼쪽에 정의 된 그룹을 가정합니다. 명명 된 그룹은 절대 및 상대 번호로 계산되므로 해당 숫자로도 참조 할 수 있습니다. (그렇지 않으면 &lt;code&gt;(??{})&lt;/code&gt; 필요한 이름이 지정된 캡처 그룹으로 작업을 수행 할 수 있습니다 .)</target>
        </trans-unit>
        <trans-unit id="2af1d9faaa5774641041dee5e653e403ff3e8088" translate="yes" xml:space="preserve">
          <source>must not have a repeat count.</source>
          <target state="translated">반복 횟수가 없어야합니다.</target>
        </trans-unit>
        <trans-unit id="82922db746fb5f7f5f797cac4f43d2cce3b78795" translate="yes" xml:space="preserve">
          <source>must not start with a digit nor contain a hyphen.</source>
          <target state="translated">숫자로 시작하거나 하이픈을 포함해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="c5921b9cc2fa94487eef2488107ca608efa2c2fa" translate="yes" xml:space="preserve">
          <source>must watch &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/\A\w+\z/&lt;/a&gt;&lt;/code&gt;. So &quot;E&amp;lt; 0 1 2 3 &amp;gt;&quot; is invalid, because it contains spaces, which aren't alphanumeric characters. This presumably does not</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/\A\w+\z/&lt;/a&gt;&lt;/code&gt; 를 시청해야합니다 . 따라서 &quot;E &amp;lt;0 1 2 3&amp;gt;&quot;는 영숫자가 아닌 공백을 포함하므로 유효하지 않습니다. 이것은 아마도하지 않습니다</target>
        </trans-unit>
        <trans-unit id="c0393b956291266404deaff8675614c967f3b0cb" translate="yes" xml:space="preserve">
          <source>mutually exclusive</source>
          <target state="translated">상호 배타적</target>
        </trans-unit>
        <trans-unit id="362d60cb3f6f8e96c37edac670b7618963233e07" translate="yes" xml:space="preserve">
          <source>mv</source>
          <target state="translated">mv</target>
        </trans-unit>
        <trans-unit id="3ece1471f44f63177cbc35ba0b904e0c096b6783" translate="yes" xml:space="preserve">
          <source>my</source>
          <target state="translated">my</target>
        </trans-unit>
        <trans-unit id="ac5b0d6c1555dd0cbe16bfd2e003e23934a41831" translate="yes" xml:space="preserve">
          <source>my $flags = Compress::Raw::Zlib::zlibCompileFlags();</source>
          <target state="translated">내 $ flags = Compress :: Raw :: Zlib :: zlibCompileFlags ();</target>
        </trans-unit>
        <trans-unit id="5af5e6453e02c7f08c72ce02832c76c3cc61f519" translate="yes" xml:space="preserve">
          <source>my $version = Compress::Raw::Bzip2::bzlibversion();</source>
          <target state="translated">내 $ version = Compress :: Raw :: Bzip2 :: bzlibversion ();</target>
        </trans-unit>
        <trans-unit id="88f791452b4dd5c0b9b75f58704e8af1b3f476b2" translate="yes" xml:space="preserve">
          <source>my $version = Compress::Raw::Zlib::zlib_version();</source>
          <target state="translated">내 $ version = Compress :: Raw :: Zlib :: zlib_version ();</target>
        </trans-unit>
        <trans-unit id="bc811acaaf6c6fc5ed7a3a6c1975118be059fec3" translate="yes" xml:space="preserve">
          <source>my $version = Compress::Zlib::zlib_version();</source>
          <target state="translated">내 $ version = Compress :: Zlib :: zlib_version ();</target>
        </trans-unit>
        <trans-unit id="674a240b35a84f27cdd427b308806f237a6d83f7" translate="yes" xml:space="preserve">
          <source>my TYPE VARLIST</source>
          <target state="translated">TYPE VARLIST</target>
        </trans-unit>
        <trans-unit id="748d59dbd36730a11fef75bedfef0dc13f7ceab5" translate="yes" xml:space="preserve">
          <source>my TYPE VARLIST : ATTRS</source>
          <target state="translated">TYPE VARLIST : ATTRS</target>
        </trans-unit>
        <trans-unit id="8ecb284f3cca84f4d47cda7d863bf7f86143cb59" translate="yes" xml:space="preserve">
          <source>my VARLIST</source>
          <target state="translated">내리스트</target>
        </trans-unit>
        <trans-unit id="dc01022a80b2559656105573509584017b741756" translate="yes" xml:space="preserve">
          <source>my VARLIST : ATTRS</source>
          <target state="translated">내리스트 : 공격자</target>
        </trans-unit>
        <trans-unit id="57bfd674048b931098baa6b188048874c7eff0dd" translate="yes" xml:space="preserve">
          <source>my.ucm</source>
          <target state="translated">my.ucm</target>
        </trans-unit>
        <trans-unit id="97e01b7dae2ba275e2fbd20952de13cfe4e675f2" translate="yes" xml:space="preserve">
          <source>my_escapes</source>
          <target state="translated">my_escapes</target>
        </trans-unit>
        <trans-unit id="09f50e1512f3d3b8322cb12383a8c6bd06b2b3f2" translate="yes" xml:space="preserve">
          <source>mycode.pl</source>
          <target state="translated">mycode.pl</target>
        </trans-unit>
        <trans-unit id="05c5ade1b7b8473b00fa147029478cc2e5d26da2" translate="yes" xml:space="preserve">
          <source>myconfig.SH</source>
          <target state="translated">myconfig.SH</target>
        </trans-unit>
        <trans-unit id="1e3955d652fb8ac213cdf16123e961c767f3d0c6" translate="yes" xml:space="preserve">
          <source>myhostname.U</source>
          <target state="translated">myhostname.U</target>
        </trans-unit>
        <trans-unit id="e104f2d5e3fe1b20019141a3b1fef9983fb6e475" translate="yes" xml:space="preserve">
          <source>mymeta</source>
          <target state="translated">mymeta</target>
        </trans-unit>
        <trans-unit id="98f8301efba74a8474d6c5c27d785dff62eda764" translate="yes" xml:space="preserve">
          <source>myperlprogram</source>
          <target state="translated">myperlprogram</target>
        </trans-unit>
        <trans-unit id="d1854cae891ec7b29161ccaf79a24b00c274bdaa" translate="yes" xml:space="preserve">
          <source>n</source>
          <target state="translated">n</target>
        </trans-unit>
        <trans-unit id="04853a0b8ff07cdc0671c0f1f539babb82bf79ba" translate="yes" xml:space="preserve">
          <source>n - 1</source>
          <target state="translated">n-1</target>
        </trans-unit>
        <trans-unit id="7a185a7dde7fe8ab6b7bc03c65dd4f08dc02571d" translate="yes" xml:space="preserve">
          <source>n.U</source>
          <target state="translated">n.U</target>
        </trans-unit>
        <trans-unit id="dacd6c02c3223eb22858bd1f05aeb75ea8a46f39" translate="yes" xml:space="preserve">
          <source>n/32</source>
          <target state="translated">n/32</target>
        </trans-unit>
        <trans-unit id="b483c6d252b41daf74cda88a7b2f7bcae9130d1d" translate="yes" xml:space="preserve">
          <source>n:/bin/blah</source>
          <target state="translated">n:/bin/blah</target>
        </trans-unit>
        <trans-unit id="6ae999552a0d2dca14d62e2bc8b764d377b1dd6c" translate="yes" xml:space="preserve">
          <source>name</source>
          <target state="translated">name</target>
        </trans-unit>
        <trans-unit id="8778f498f990cadc7000a7051084a13fafc943b6" translate="yes" xml:space="preserve">
          <source>name of</source>
          <target state="translated">~의 이름</target>
        </trans-unit>
        <trans-unit id="d32ad15ba6cb414e26e796faa05b2f39650a1747" translate="yes" xml:space="preserve">
          <source>name, the other names are called</source>
          <target state="translated">이름, 다른 이름은</target>
        </trans-unit>
        <trans-unit id="b62714700750e0b01d1f3113ce90b218b7f0dceb" translate="yes" xml:space="preserve">
          <source>named</source>
          <target state="translated">named</target>
        </trans-unit>
        <trans-unit id="fdb52e1d310f0b6255e31bdd3440a924582fb624" translate="yes" xml:space="preserve">
          <source>named character</source>
          <target state="translated">명명 된 캐릭터</target>
        </trans-unit>
        <trans-unit id="51e70a5af7e840d5ef57a097b363f412e8e473fe" translate="yes" xml:space="preserve">
          <source>named_buff</source>
          <target state="translated">named_buff</target>
        </trans-unit>
        <trans-unit id="e815e06f89a4d89033ee0d09b4545d8aac43cde1" translate="yes" xml:space="preserve">
          <source>named_buff_iter</source>
          <target state="translated">named_buff_iter</target>
        </trans-unit>
        <trans-unit id="352dd60a69dff4b5c2f51726044d09c29d055eaf" translate="yes" xml:space="preserve">
          <source>namegv</source>
          <target state="translated">namegv</target>
        </trans-unit>
        <trans-unit id="e06532827667a1da61b4138744008825a18d23ad" translate="yes" xml:space="preserve">
          <source>namelen</source>
          <target state="translated">namelen</target>
        </trans-unit>
        <trans-unit id="4bd51a0a04188b8d33c1f9b61053f2dd29f401a3" translate="yes" xml:space="preserve">
          <source>namepv</source>
          <target state="translated">namepv</target>
        </trans-unit>
        <trans-unit id="cd36cf226a43c5012f83e4300b49c5ed6e75b99c" translate="yes" xml:space="preserve">
          <source>names will be avoided where possible, but be advised that such output may not always be parseable by &lt;code&gt;&lt;a href=&quot;../functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">가능한 경우 이름은 피할 수 있지만 이러한 출력을 항상 &lt;code&gt;&lt;a href=&quot;../functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; 로 구문 분석 할 수있는 것은 아닙니다 .</target>
        </trans-unit>
        <trans-unit id="6d7de03c1ce449dd9486a2b843387c8cc77e5720" translate="yes" xml:space="preserve">
          <source>namespace, without the complete cognizance or cooperation of the modules that own those namespaces. Naturally, this should be done with extreme caution--if it must be done at all.</source>
          <target state="translated">네임 스페이스를 소유 한 모듈의 완전한 인식이나 협력없이 당연히, 이것은 반드시 수행해야 할 경우 매우주의해야합니다.</target>
        </trans-unit>
        <trans-unit id="f58df39da3753804a280173a3b68e9134a121a11" translate="yes" xml:space="preserve">
          <source>nargs</source>
          <target state="translated">nargs</target>
        </trans-unit>
        <trans-unit id="5546973d8aa41ea80f13b0ac0060f9bcd199c4c9" translate="yes" xml:space="preserve">
          <source>nblock_io.U</source>
          <target state="translated">nblock_io.U</target>
        </trans-unit>
        <trans-unit id="32ec52fd6cf95b7f1a9bdbf7ab426c235fc389ba" translate="yes" xml:space="preserve">
          <source>ncftp</source>
          <target state="translated">ncftp</target>
        </trans-unit>
        <trans-unit id="7afb409eec2f029406d2f67d6889bffa0d5397b1" translate="yes" xml:space="preserve">
          <source>nd.</source>
          <target state="translated">nd.</target>
        </trans-unit>
        <trans-unit id="84f3afade7a70045ddc033f334ada1bd15ebf7bd" translate="yes" xml:space="preserve">
          <source>ndbm store returned -1, errno 22, key &quot;...&quot; at ...</source>
          <target state="translated">ndbm store에서 -1, errno 22, 키 &quot;...&quot;을 (를) 반환했습니다 ...</target>
        </trans-unit>
        <trans-unit id="b0f7372ac90dbe0566e4ce100db980964c40c512" translate="yes" xml:space="preserve">
          <source>ndbm.h</source>
          <target state="translated">ndbm.h</target>
        </trans-unit>
        <trans-unit id="f60d2a2f7993d5825671faef6f38d5d8a0c34130" translate="yes" xml:space="preserve">
          <source>ne</source>
          <target state="translated">ne</target>
        </trans-unit>
        <trans-unit id="38d3650d823b8354f29aa2e09e3d16382dd2374a" translate="yes" xml:space="preserve">
          <source>near the beginning of XS file, and create an OUTPUT typemap entry for &lt;code&gt;negative_is_failure&lt;/code&gt; which converts negative values to &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;, or maybe croak()s. After this the return value of type &lt;code&gt;negative_is_failure&lt;/code&gt; will create more Perl-like interface.</source>
          <target state="translated">XS 파일의 시작 부분 근처에서 &lt;code&gt;negative_is_failure&lt;/code&gt; 에 대한 OUTPUT 유형 맵 항목을 작성하여 음수 값을 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 또는 croak () 로 변환합니다 . 그런 다음 &lt;code&gt;negative_is_failure&lt;/code&gt; 유형의 반환 값은 더 많은 Perl과 유사한 인터페이스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="186144bc78b893fcb91f7ed2bb8c1b4b5c0564b2" translate="yes" xml:space="preserve">
          <source>near the beginning of the functions that are getting broken. This undefines the variable during the scope of execution of the including function.</source>
          <target state="translated">부서지는 기능의 시작 부분 근처. 이것은 포함 함수의 실행 범위 동안 변수를 정의 해제합니다.</target>
        </trans-unit>
        <trans-unit id="88977adc85e83040c86bb6d8853179a733eeee25" translate="yes" xml:space="preserve">
          <source>nearly always need to be hand-edited. Here's how to install the *.ph files:</source>
          <target state="translated">거의 항상 수동으로 편집해야합니다. * .ph 파일을 설치하는 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d8e5f74e88a87777ecb2bfc883cc575aef96825e" translate="yes" xml:space="preserve">
          <source>necessarily</source>
          <target state="translated">necessarily</target>
        </trans-unit>
        <trans-unit id="efe30e310694de6b40db25e0bb3b5aa8b0c2b976" translate="yes" xml:space="preserve">
          <source>need</source>
          <target state="translated">need</target>
        </trans-unit>
        <trans-unit id="40c66106cee6e97e391fd9cb7753240943ce7ae3" translate="yes" xml:space="preserve">
          <source>need to know if you have an integer, double, or string pointer in an SV, you can use the following three macros instead:</source>
          <target state="translated">SV에 정수, 이중 또는 문자열 포인터가 있는지 알아야하는 대신 다음 세 가지 매크로를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="da123d0418a8934910118971080b59a34e4b5470" translate="yes" xml:space="preserve">
          <source>need to override the &lt;b&gt;new()&lt;/b&gt; constructor method. If you do override the constructor, you</source>
          <target state="translated">&lt;b&gt;new ()&lt;/b&gt; 생성자 메서드 를 재정의해야합니다 . 생성자를 재정의하면</target>
        </trans-unit>
        <trans-unit id="f85315dd3baa505119ec897be4918a49fbe0ac81" translate="yes" xml:space="preserve">
          <source>need to override this method! It is capable of constructing subclass objects as well as base class objects, provided you use any of the following constructor invocation styles:</source>
          <target state="translated">이 방법을 재정의해야합니다! 다음 생성자 호출 스타일 중 하나를 사용하는 경우 기본 클래스 오브젝트뿐만 아니라 서브 클래스 오브젝트를 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5f272171009069eafe298938e0679e6f92b769d2" translate="yes" xml:space="preserve">
          <source>need_va_copy.U</source>
          <target state="translated">need_va_copy.U</target>
        </trans-unit>
        <trans-unit id="026b21a0945b62abe8f2b0ae83dd60f719f28d06" translate="yes" xml:space="preserve">
          <source>needs to be static storage, as it is used directly as CvFILE(), without a copy being made.</source>
          <target state="translated">복사본을 만들지 않고 CvFILE ()로 직접 사용되므로 정적 저장소 여야합니다.</target>
        </trans-unit>
        <trans-unit id="58db95943034f746a397ad2db1e6a568d33a2c35" translate="yes" xml:space="preserve">
          <source>needs to become</source>
          <target state="translated">될 필요가있다</target>
        </trans-unit>
        <trans-unit id="442db059fe5f97058fdeee45effbf808954ea37e" translate="yes" xml:space="preserve">
          <source>needs to taught about the</source>
          <target state="translated">에 대해 가르 칠 필요가</target>
        </trans-unit>
        <trans-unit id="a2fa01b451282ba209b75f5785c72c26935f3aa2" translate="yes" xml:space="preserve">
          <source>negatable</source>
          <target state="translated">negatable</target>
        </trans-unit>
        <trans-unit id="0514d026f5c894b4a4de79fd345fbd3ffa0240f2" translate="yes" xml:space="preserve">
          <source>negated</source>
          <target state="translated">negated</target>
        </trans-unit>
        <trans-unit id="40e783d7597850fc2e1d9f99aaf6bd083df80ff1" translate="yes" xml:space="preserve">
          <source>negated character class</source>
          <target state="translated">부정 문자 클래스</target>
        </trans-unit>
        <trans-unit id="f4aadc84e2091b49e9e848b2813221da62597e6c" translate="yes" xml:space="preserve">
          <source>negative time not invented yet</source>
          <target state="translated">아직 발명되지 않은 부정적인 시간</target>
        </trans-unit>
        <trans-unit id="f5728b16e80750020e80bea6dcbac0b18b099882" translate="yes" xml:space="preserve">
          <source>negative. countit() will run the loop many times to calculate the speed of CODE before running it for TIME. The actual time run for will usually be greater than TIME due to system clock resolution, so it's best to look at the number of iterations divided by the times that you are concerned with, not just the iterations.</source>
          <target state="translated">부정. countit ()는 루프를 여러 번 실행하여 TIME 동안 CODE를 실행하기 전에 CODE 속도를 계산합니다. 시스템 클럭 해상도로 인해 실제 실행 시간은 일반적으로 TIME보다 큽니다. 반복 횟수뿐만 아니라 반복 횟수를 관심있는 시간으로 나눈 것이 가장 좋습니다.</target>
        </trans-unit>
        <trans-unit id="f1078caaa8ebb366b67b96006d6eecd7ee492a75" translate="yes" xml:space="preserve">
          <source>neither</source>
          <target state="translated">neither</target>
        </trans-unit>
        <trans-unit id="5c5357ddfa5da60eb63d418263003e867fffa39c" translate="yes" xml:space="preserve">
          <source>netdb.h</source>
          <target state="translated">netdb.h</target>
        </trans-unit>
        <trans-unit id="2c540c99408d78519117f80177eccb527b91e538" translate="yes" xml:space="preserve">
          <source>netdbtype.U</source>
          <target state="translated">netdbtype.U</target>
        </trans-unit>
        <trans-unit id="f3b16d5c0c2d33e1d2eb69c69baa73d487b80026" translate="yes" xml:space="preserve">
          <source>netscape.exe</source>
          <target state="translated">netscape.exe</target>
        </trans-unit>
        <trans-unit id="7a3b4d0f2ac421938155aa82e0ed26477e5a94c4" translate="yes" xml:space="preserve">
          <source>netstat -a</source>
          <target state="translated">netstat -a</target>
        </trans-unit>
        <trans-unit id="c112e88173d4d3c5c1409a17bee4837673523991" translate="yes" xml:space="preserve">
          <source>network</source>
          <target state="translated">network</target>
        </trans-unit>
        <trans-unit id="f352e0a500ea836ee6d61f26e3933bcba8b17648" translate="yes" xml:space="preserve">
          <source>network order</source>
          <target state="translated">네트워크 순서</target>
        </trans-unit>
        <trans-unit id="85777c03b72554cd08e721b6148dc27d2a50a7a6" translate="yes" xml:space="preserve">
          <source>never</source>
          <target state="translated">never</target>
        </trans-unit>
        <trans-unit id="c2a6b03f190dfb2b4aa91f8af8d477a9bc3401dc" translate="yes" xml:space="preserve">
          <source>new</source>
          <target state="translated">new</target>
        </trans-unit>
        <trans-unit id="cfe50554265fa2de953458c9938b781cee9d7f32" translate="yes" xml:space="preserve">
          <source>new($alg)</source>
          <target state="translated">new($alg)</target>
        </trans-unit>
        <trans-unit id="550bcb08d8f9864dae52e0e87ef1278027c978f7" translate="yes" xml:space="preserve">
          <source>new()</source>
          <target state="translated">new()</target>
        </trans-unit>
        <trans-unit id="9c8425b933bf50bc50c16f2e3e8594045f18ef27" translate="yes" xml:space="preserve">
          <source>new() can take options, in the form of key/value pairs that control the behavior of the parser. See below for details.</source>
          <target state="translated">new ()는 파서의 동작을 제어하는 ​​키 / 값 쌍의 형태로 옵션을 사용할 수 있습니다. 자세한 내용은 아래를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2ce870190de77617e5a2c822174b781f6438b1a3" translate="yes" xml:space="preserve">
          <source>new() can take options, in the form of key/value pairs, that control the behavior of the parser. The currently recognized options are:</source>
          <target state="translated">new ()는 키 / 값 쌍의 형태로 파서의 동작을 제어하는 ​​옵션을 사용할 수 있습니다. 현재 인식되는 옵션은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5be2e110ed38c9168b819a352025b37073c7e87b" translate="yes" xml:space="preserve">
          <source>newStream([OPTS])</source>
          <target state="translated">newStream([OPTS])</target>
        </trans-unit>
        <trans-unit id="b6fc2ab27171347591fe9890066e2db19cf0a303" translate="yes" xml:space="preserve">
          <source>new_checker</source>
          <target state="translated">new_checker</target>
        </trans-unit>
        <trans-unit id="60620c7695f64ee2252e092afd48dde4903ee2dd" translate="yes" xml:space="preserve">
          <source>new_pointer</source>
          <target state="translated">new_pointer</target>
        </trans-unit>
        <trans-unit id="2a5e2b259a289475d62313e89b4643b3e912301d" translate="yes" xml:space="preserve">
          <source>newvalue</source>
          <target state="translated">newvalue</target>
        </trans-unit>
        <trans-unit id="edee9402d198b04ac77dcf5dc9cc3dac44573782" translate="yes" xml:space="preserve">
          <source>next</source>
          <target state="translated">next</target>
        </trans-unit>
        <trans-unit id="0b38e67f1dbf523e6b9fd1e23d691e0fb31c9eb3" translate="yes" xml:space="preserve">
          <source>next EXPR</source>
          <target state="translated">다음 EXPR</target>
        </trans-unit>
        <trans-unit id="09a24e7005faa6b7752fba2db98443ed426001b8" translate="yes" xml:space="preserve">
          <source>next LABEL</source>
          <target state="translated">다음 라벨</target>
        </trans-unit>
        <trans-unit id="0c3a427f5a4ce852cf831e5a5f0ccdc370c89f2c" translate="yes" xml:space="preserve">
          <source>next-id</source>
          <target state="translated">next-id</target>
        </trans-unit>
        <trans-unit id="88603c5a2d81d40b0de131055bd8935c05320c94" translate="yes" xml:space="preserve">
          <source>next::can</source>
          <target state="translated">next::can</target>
        </trans-unit>
        <trans-unit id="e1b2d71c01b258d5dd7648331ca5840c29f14fe5" translate="yes" xml:space="preserve">
          <source>next::method</source>
          <target state="translated">next::method</target>
        </trans-unit>
        <trans-unit id="f8e75a5d51232babd5752bcd0215621c366d6598" translate="yes" xml:space="preserve">
          <source>nextStream</source>
          <target state="translated">nextStream</target>
        </trans-unit>
        <trans-unit id="4b369ec8d5ad47a8e3f8144d219e077a293d3840" translate="yes" xml:space="preserve">
          <source>nfc</source>
          <target state="translated">nfc</target>
        </trans-unit>
        <trans-unit id="91c489cb245f6627d97c2c8a047398017897eaae" translate="yes" xml:space="preserve">
          <source>nfd</source>
          <target state="translated">nfd</target>
        </trans-unit>
        <trans-unit id="e29653cf22b1253fd585c0a580d61f1c2e7e64ab" translate="yes" xml:space="preserve">
          <source>nfkc</source>
          <target state="translated">nfkc</target>
        </trans-unit>
        <trans-unit id="d445f4ac7550b4a8a821a31f0e323c3a6f1b1740" translate="yes" xml:space="preserve">
          <source>nfkd</source>
          <target state="translated">nfkd</target>
        </trans-unit>
        <trans-unit id="5929e58a5aa1fde36b80ecc26548c50423ddf943" translate="yes" xml:space="preserve">
          <source>nice</source>
          <target state="translated">nice</target>
        </trans-unit>
        <trans-unit id="43bcccb1393a023a2461bf5325a38d8e209c16df" translate="yes" xml:space="preserve">
          <source>nice, it proffers the template code &lt;code&gt;X&lt;/code&gt; to back up one byte. Putting this all together, we may now write:</source>
          <target state="translated">좋습니다. 템플릿 코드 &lt;code&gt;X&lt;/code&gt; 가 1 바이트를 백업하도록합니다. 이 모든 것을 종합하면 다음과 같이 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c04b23fc6823ad7ef41d61e8a46afd32b77fae7b" translate="yes" xml:space="preserve">
          <source>nick (at) ccl4.org</source>
          <target state="translated">닉 (at) ccl4.org</target>
        </trans-unit>
        <trans-unit id="39ca7c8e6c022b7affdcfb78d7d978a7e8d1e10f" translate="yes" xml:space="preserve">
          <source>nick@ing-simmons.net</source>
          <target state="translated">nick@ing-simmons.net</target>
        </trans-unit>
        <trans-unit id="903c31a78f5a71a990e41089d4ae0050eee16a19" translate="yes" xml:space="preserve">
          <source>nik@tiuk.ti.com</source>
          <target state="translated">nik@tiuk.ti.com</target>
        </trans-unit>
        <trans-unit id="dff3fb2b353a3abe482e0a39f4bcafe961434ca5" translate="yes" xml:space="preserve">
          <source>nis.U</source>
          <target state="translated">nis.U</target>
        </trans-unit>
        <trans-unit id="c2373fedf63c65226604c2d58fbdb870a4af6880" translate="yes" xml:space="preserve">
          <source>nl_langinfo(3)</source>
          <target state="translated">nl_langinfo(3)</target>
        </trans-unit>
        <trans-unit id="dfa58f0ae62ed5fb3beb0bf88ee93e25232c7475" translate="yes" xml:space="preserve">
          <source>nmake</source>
          <target state="translated">nmake</target>
        </trans-unit>
        <trans-unit id="e5c4e6cdd1dd4f8896241f78bf12b807ece90d8b" translate="yes" xml:space="preserve">
          <source>nmake 1.50 limits command length to 2048 characters.</source>
          <target state="translated">nmake 1.50은 명령 길이를 2048 자로 제한합니다.</target>
        </trans-unit>
        <trans-unit id="b7d7c25cc6ac0c9965e1f8cb01859eccc1d79892" translate="yes" xml:space="preserve">
          <source>nmake install</source>
          <target state="translated">nmake 설치</target>
        </trans-unit>
        <trans-unit id="fd3d0086eae10d837cf0a2e90975e79897c4bc79" translate="yes" xml:space="preserve">
          <source>nmake nwinstall</source>
          <target state="translated">nmake nwinstall</target>
        </trans-unit>
        <trans-unit id="07962e32beac4da179b30c06f1c1e71bd220f782" translate="yes" xml:space="preserve">
          <source>nn</source>
          <target state="translated">nn</target>
        </trans-unit>
        <trans-unit id="7f88bb68e14d386d89af3cf317f6f7af1d39246c" translate="yes" xml:space="preserve">
          <source>nnn</source>
          <target state="translated">nnn</target>
        </trans-unit>
        <trans-unit id="fd1286353570c5703799ba76999323b7c7447b06" translate="yes" xml:space="preserve">
          <source>no</source>
          <target state="translated">no</target>
        </trans-unit>
        <trans-unit id="93e3cb7e6b21e502d96e984b4516e34dc2aa6961" translate="yes" xml:space="preserve">
          <source>no MODULE</source>
          <target state="translated">모듈 없음</target>
        </trans-unit>
        <trans-unit id="4a47ff44094cf69c350c2726961c28690e8ad8c1" translate="yes" xml:space="preserve">
          <source>no MODULE LIST</source>
          <target state="translated">모듈 목록 없음</target>
        </trans-unit>
        <trans-unit id="ca38ab7747d48365baf35c00ef7c271d191c658d" translate="yes" xml:space="preserve">
          <source>no MODULE VERSION</source>
          <target state="translated">모듈 버전 없음</target>
        </trans-unit>
        <trans-unit id="f1fa85d7aade3041aeba3879dc8e47c734717bf3" translate="yes" xml:space="preserve">
          <source>no MODULE VERSION LIST</source>
          <target state="translated">모듈 버전 목록 없음</target>
        </trans-unit>
        <trans-unit id="5afc19e06f757d0cfa3e662281ccfe520a5df21a" translate="yes" xml:space="preserve">
          <source>no VERSION</source>
          <target state="translated">버전 없음</target>
        </trans-unit>
        <trans-unit id="9fb87b10478f49419068906898994d029dd4a2d7" translate="yes" xml:space="preserve">
          <source>no characters at all</source>
          <target state="translated">전혀 문자가 없습니다</target>
        </trans-unit>
        <trans-unit id="2516af11baa5faf4a484198a51a61150d72ea1d0" translate="yes" xml:space="preserve">
          <source>no feature</source>
          <target state="translated">기능 없음</target>
        </trans-unit>
        <trans-unit id="c00c7522b4b31646219b24583f2113e6b8ee8e08" translate="yes" xml:space="preserve">
          <source>no longer works.</source>
          <target state="translated">더 이상 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cd6dfbb8c154b5a0d3c0521c8696930a16a0dbc7" translate="yes" xml:space="preserve">
          <source>no modifiers (//): Default behavior. &lt;code&gt;'.'&lt;/code&gt; matches any character except &lt;code&gt;&quot;\n&quot;&lt;/code&gt; . &lt;code&gt;^&lt;/code&gt; matches only at the beginning of the string and &lt;code&gt;$&lt;/code&gt; matches only at the end or before a newline at the end.</source>
          <target state="translated">수정 자 없음 (//) : 기본 동작. &lt;code&gt;'.'&lt;/code&gt; &lt;code&gt;&quot;\n&quot;&lt;/code&gt; 제외한 모든 문자와 일치합니다 . &lt;code&gt;^&lt;/code&gt; 는 문자열의 시작 부분 에서만 일치 하고 &lt;code&gt;$&lt;/code&gt; 는 끝 부분 또는 끝 부분의 줄 바꿈 이전에서만 일치합니다.</target>
        </trans-unit>
        <trans-unit id="f8e966d1e207d02c44511a58dccff2f5429e9a3b" translate="yes" xml:space="preserve">
          <source>node</source>
          <target state="translated">node</target>
        </trans-unit>
        <trans-unit id="0d9bf3cee4bd51d93f1c5f9682575b783dc76bfd" translate="yes" xml:space="preserve">
          <source>node with the &quot;return value&quot; of the corresponding subtree is substituted instead. The subtree is deleted.</source>
          <target state="translated">해당 하위 트리의 &quot;반환 값&quot;을 가진 노드가 대신 사용됩니다. 하위 트리가 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="004550065a3e4fa677c0ecc73b2407854e7ce91d" translate="yes" xml:space="preserve">
          <source>nodes</source>
          <target state="translated">nodes</target>
        </trans-unit>
        <trans-unit id="37031f99ac78580c9f82e04fa237d295ea10ca41" translate="yes" xml:space="preserve">
          <source>non</source>
          <target state="translated">non</target>
        </trans-unit>
        <trans-unit id="2b10f04ce6007f26a43991697fdae0448c024fe2" translate="yes" xml:space="preserve">
          <source>non-greedy</source>
          <target state="translated">non-greedy</target>
        </trans-unit>
        <trans-unit id="a5b59b5043c3245d4dc7eab43428026119f9a701" translate="yes" xml:space="preserve">
          <source>non-overloaded contents of $bar by just using &lt;code&gt;$$bar&lt;/code&gt; (what we do in functions which overload dereference). Similarly, the object returned by the TIEHASH() method is a scalar reference.</source>
          <target state="translated">&lt;code&gt;$$bar&lt;/code&gt; 사용하여 $ bar의 오버로드되지 않은 내용 (역 참조를 오버로드하는 함수에서 수행하는 작업). 마찬가지로 TIEHASH () 메소드에 의해 리턴 된 오브젝트는 스칼라 참조입니다.</target>
        </trans-unit>
        <trans-unit id="38a4b3afe20cb69049b63f389184fa6671112610" translate="yes" xml:space="preserve">
          <source>nonbacktrackable</source>
          <target state="translated">nonbacktrackable</target>
        </trans-unit>
        <trans-unit id="71f8e7976e4cbc4561c9d62fb283e7f788202acb" translate="yes" xml:space="preserve">
          <source>none</source>
          <target state="translated">none</target>
        </trans-unit>
        <trans-unit id="19d0495c3630c205e3f85cd13c6d4cb031c0953f" translate="yes" xml:space="preserve">
          <source>nor</source>
          <target state="translated">nor</target>
        </trans-unit>
        <trans-unit id="807368607ffe6bc363694a55bc37865c79aecc15" translate="yes" xml:space="preserve">
          <source>nor provide any specific version of normalization. Therefore this module running on an older perl with an older Unicode database may use the erroneous decomposition mapping blindly conforming to the Unicode database.</source>
          <target state="translated">특정 버전의 정규화도 제공하지 않습니다. 따라서 이전 유니 코드 데이터베이스가있는 이전 perl에서 실행되는이 모듈은 유니 코드 데이터베이스에 맹목적으로 부합하는 잘못된 분해 맵핑을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c6634755e8d0a9ed3bec5be9af09235cbd9e30bc" translate="yes" xml:space="preserve">
          <source>nor the</source>
          <target state="translated">또는</target>
        </trans-unit>
        <trans-unit id="63e37a0d1d51b8efd953de2fcdb71ed70eedafcd" translate="yes" xml:space="preserve">
          <source>norm</source>
          <target state="translated">norm</target>
        </trans-unit>
        <trans-unit id="2192c4bd83c6e953e6ffa0911c98f8c913ecb44d" translate="yes" xml:space="preserve">
          <source>normalization forms</source>
          <target state="translated">정규화 양식</target>
        </trans-unit>
        <trans-unit id="6d434ccaed805b0aaee07a9f4ba551a541303d01" translate="yes" xml:space="preserve">
          <source>normalized</source>
          <target state="translated">normalized</target>
        </trans-unit>
        <trans-unit id="dac594fd64df182fa1879932628f90625f1a38e2" translate="yes" xml:space="preserve">
          <source>normally</source>
          <target state="translated">normally</target>
        </trans-unit>
        <trans-unit id="db274c3e46839b5bed56b7fa3ba97f1c72f59eb5" translate="yes" xml:space="preserve">
          <source>normally be overridden by subclasses.</source>
          <target state="translated">일반적으로 서브 클래스로 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="e056a90e77b49ac32db6755b5ffc803175068be0" translate="yes" xml:space="preserve">
          <source>normally leads to an error and isn't used routinely anywhere. It may be a problem that this error isn't indicated by a class with a generic object.</source>
          <target state="translated">일반적으로 오류가 발생하고 일상적으로 사용되지 않습니다. 이 오류가 일반 객체가있는 클래스에 의해 표시되지 않는 문제 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="557f255516719ea16f8f4a0aae1166054e2c9b43" translate="yes" xml:space="preserve">
          <source>not</source>
          <target state="translated">not</target>
        </trans-unit>
        <trans-unit id="eca5bf6ec65abfc6070cbb2e88ea54d54d837d48" translate="yes" xml:space="preserve">
          <source>not automatically enabled</source>
          <target state="translated">자동으로 활성화되지 않음</target>
        </trans-unit>
        <trans-unit id="1527654d57c2272497db995b837812fcf3d45052" translate="yes" xml:space="preserve">
          <source>not enough acid</source>
          <target state="translated">충분하지 않은 산</target>
        </trans-unit>
        <trans-unit id="4f6aa46f55ef4806e48f80a72ea0e3b7fcfa5558" translate="yes" xml:space="preserve">
          <source>not found in</source>
          <target state="translated">에서 찾을 수 없습니다</target>
        </trans-unit>
        <trans-unit id="ea1400fb240d91b7818239d170b3cde7b5d69ea2" translate="yes" xml:space="preserve">
          <source>not if a reference to &lt;code&gt;@_&lt;/code&gt; has been taken,</source>
          <target state="translated">&lt;code&gt;@_&lt;/code&gt; 에 대한 참조 가 취해지지 않았다면</target>
        </trans-unit>
        <trans-unit id="fada736330d6727a2764bfde8111ad11ab7d8c34" translate="yes" xml:space="preserve">
          <source>not just to the underlying RMS buffers for a file). In other words, it's equivalent to calling fflush() and fsync() from C.</source>
          <target state="translated">파일의 기본 RMS 버퍼뿐만 아니라). 즉, C에서 fflush () 및 fsync ()를 호출하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5eca98f110f93a6b691692de5deb65e6ec17311d" translate="yes" xml:space="preserve">
          <source>not negative then it is the numeric file descriptor</source>
          <target state="translated">음수가 아닌 경우 숫자 파일 설명자입니다.</target>
        </trans-unit>
        <trans-unit id="aefbae733591526c74365734bef3bf2a60473c8a" translate="yes" xml:space="preserve">
          <source>not reflected</source>
          <target state="translated">반영되지 않은</target>
        </trans-unit>
        <trans-unit id="0d56d80ef4c4432b33cfa9ef0edbb161efe6dc1f" translate="yes" xml:space="preserve">
          <source>not:</source>
          <target state="translated">not:</target>
        </trans-unit>
        <trans-unit id="f960479759aac0f51c6d7d6358ab1b48b87190d1" translate="yes" xml:space="preserve">
          <source>notall</source>
          <target state="translated">notall</target>
        </trans-unit>
        <trans-unit id="c51048b7325d60e326d19a9cfbeff2577be1672e" translate="yes" xml:space="preserve">
          <source>note</source>
          <target state="translated">note</target>
        </trans-unit>
        <trans-unit id="340b3cb175c318d599090459f8d5937e8a159044" translate="yes" xml:space="preserve">
          <source>note that xlC has the OS version in the name as of version 4.0.2.0, so you will find xlC.C for AIX-5.0 as package</source>
          <target state="translated">xlC의 이름은 OS 4.0 버전 4.0.2.0이므로 AIX-5.0 용 xlC.C는 패키지로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="94eded53d3ce9f17fd1a839487422aacda951ca1" translate="yes" xml:space="preserve">
          <source>nothing other than this substring</source>
          <target state="translated">이 부분 문자열 외에는 아무것도</target>
        </trans-unit>
        <trans-unit id="f96adc897e704862ffbc4706f64a055ad5214d4a" translate="yes" xml:space="preserve">
          <source>nparens, lastparen, and lastcloseparen</source>
          <target state="translated">nparens, lastparen 및 lastcloseparen</target>
        </trans-unit>
        <trans-unit id="c3a231db2e7831393b49491cdea8e1b232a99d50" translate="yes" xml:space="preserve">
          <source>nroff</source>
          <target state="translated">nroff</target>
        </trans-unit>
        <trans-unit id="56a1db1492bf53b7237146a4ad8329a7eec7af2a" translate="yes" xml:space="preserve">
          <source>nroff(1)</source>
          <target state="translated">nroff(1)</target>
        </trans-unit>
        <trans-unit id="6813199d2f3c8c4f369be2a1cbc3cbbfdf2313bd" translate="yes" xml:space="preserve">
          <source>nss_delete core dump from op/pwent or op/grent</source>
          <target state="translated">op / pwent 또는 op / grent에서 nss_delete 코어 덤프</target>
        </trans-unit>
        <trans-unit id="036c5e4c14eba034552e1c692a41c9bde2e83a4f" translate="yes" xml:space="preserve">
          <source>ntea</source>
          <target state="translated">ntea</target>
        </trans-unit>
        <trans-unit id="e94167b0443295623f639e9d65cac1b34c7b64ee" translate="yes" xml:space="preserve">
          <source>ntsec</source>
          <target state="translated">ntsec</target>
        </trans-unit>
        <trans-unit id="d97929517d6d6863e3cd8f8018a96e632369a26d" translate="yes" xml:space="preserve">
          <source>nul</source>
          <target state="translated">nul</target>
        </trans-unit>
        <trans-unit id="53b0a1b2fadf4e040cdc2155a7340de24aca93cb" translate="yes" xml:space="preserve">
          <source>number</source>
          <target state="translated">number</target>
        </trans-unit>
        <trans-unit id="b4e679d5bd04dc6516473be2200b754f87e5047d" translate="yes" xml:space="preserve">
          <source>number is zero or negative depends on the operating system. For example, on POSIX-conforming systems, zero will signal the current process group, -1 will signal all processes, and any other negative PROCESS number will act as a negative signal number and kill the entire process group specified.</source>
          <target state="translated">숫자는 0이거나 음수는 운영 체제에 따라 다릅니다. 예를 들어 POSIX 호환 시스템에서 0은 현재 프로세스 그룹에 신호를, -1은 모든 프로세스에 신호를, 다른 음의 PROCESS 번호는 음의 신호 번호로 작동하여 지정된 전체 프로세스 그룹을 종료합니다.</target>
        </trans-unit>
        <trans-unit id="ed6b6c66cbc6371d556cbe44f694c5c39a1f8a48" translate="yes" xml:space="preserve">
          <source>number.</source>
          <target state="translated">number.</target>
        </trans-unit>
        <trans-unit id="b2e02634dd7c03e3d666f5e5ba59b12690f8ad6a" translate="yes" xml:space="preserve">
          <source>number/list</source>
          <target state="translated">number/list</target>
        </trans-unit>
        <trans-unit id="eafa594d0656a26c5a8108319be16e45a88b17f7" translate="yes" xml:space="preserve">
          <source>numbered_buff_FETCH</source>
          <target state="translated">numbered_buff_FETCH</target>
        </trans-unit>
        <trans-unit id="e34d0b5550580ee37327d1e74fd1428ac76a818b" translate="yes" xml:space="preserve">
          <source>numbered_buff_LENGTH</source>
          <target state="translated">numbered_buff_LENGTH</target>
        </trans-unit>
        <trans-unit id="e8a0cc270927808df407f0029643ce0c3fd23fef" translate="yes" xml:space="preserve">
          <source>numbered_buff_STORE</source>
          <target state="translated">numbered_buff_STORE</target>
        </trans-unit>
        <trans-unit id="1d764473da7ad824862b1b3343a76719f82e01f7" translate="yes" xml:space="preserve">
          <source>numen</source>
          <target state="translated">numen</target>
        </trans-unit>
        <trans-unit id="a227fcd06aedc1ccaaa7e85fb3fb2ebba151421c" translate="yes" xml:space="preserve">
          <source>numerator()</source>
          <target state="translated">numerator()</target>
        </trans-unit>
        <trans-unit id="cd3975cf19285a9174cd900ee54239ac019476fc" translate="yes" xml:space="preserve">
          <source>numeric</source>
          <target state="translated">numeric</target>
        </trans-unit>
        <trans-unit id="55f1cb1aa6190fcf0af01b57fa0398c96cfed355" translate="yes" xml:space="preserve">
          <source>numeric comparison operator, &amp;lt;=&amp;gt;, is also defined. In order to ensure its restriction to real numbers is conform to what you would expect, the comparison is run on the real part of the complex number first, and imaginary parts are compared only when the real parts match.</source>
          <target state="translated">숫자 비교 연산자 &amp;lt;=&amp;gt;도 정의됩니다. 실수에 대한 제한이 예상 한 것과 일치하도록하기 위해 먼저 복소수의 실수 부분에서 비교가 실행되고 허수 부분은 실수 부분이 일치하는 경우에만 비교됩니다.</target>
        </trans-unit>
        <trans-unit id="faad3a6db09915a83161007ae13cfac4fa9e80e4" translate="yes" xml:space="preserve">
          <source>numeric value is the same as _emx_rev of EMX, a string value the same as _emx_vprt (similar to &lt;code&gt;0.9c&lt;/code&gt;).</source>
          <target state="translated">숫자 값 EMX (유사 _emx_vprt 같은 문자열 값의 _emx_rev와 동일 &lt;code&gt;0.9c&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="0d08556e782c78eaffbfe260f33b7be82d94d241" translate="yes" xml:space="preserve">
          <source>numeric.c</source>
          <target state="translated">numeric.c</target>
        </trans-unit>
        <trans-unit id="e381c6a33c52207b7cb9e59089b826cbc4c417e0" translate="yes" xml:space="preserve">
          <source>numify</source>
          <target state="translated">numify</target>
        </trans-unit>
        <trans-unit id="6c4635e3e493ddc600ac6e13e3cabb40d34fd1be" translate="yes" xml:space="preserve">
          <source>numify()</source>
          <target state="translated">numify()</target>
        </trans-unit>
        <trans-unit id="4b54f9d9053296f7083b17861890fcdca1e30eb9" translate="yes" xml:space="preserve">
          <source>numina</source>
          <target state="translated">numina</target>
        </trans-unit>
        <trans-unit id="d3c7b8ef5ee8cdcaf9a4d12f2a05b38810ccb9db" translate="yes" xml:space="preserve">
          <source>numinous</source>
          <target state="translated">numinous</target>
        </trans-unit>
        <trans-unit id="01a37a46540041abf4aaf4579386b04923fab060" translate="yes" xml:space="preserve">
          <source>nummification</source>
          <target state="translated">nummification</target>
        </trans-unit>
        <trans-unit id="79652d2e1c08bffb97b0e5bce2a265ad3e2ab34f" translate="yes" xml:space="preserve">
          <source>nummify</source>
          <target state="translated">nummify</target>
        </trans-unit>
        <trans-unit id="70a990f2c8b061518499f3d4fc60fd08b794f555" translate="yes" xml:space="preserve">
          <source>nytprof.out</source>
          <target state="translated">nytprof.out</target>
        </trans-unit>
        <trans-unit id="92c87873459b820f0226e7e9af8886b8870b4cf7" translate="yes" xml:space="preserve">
          <source>nytprof/index.html</source>
          <target state="translated">nytprof/index.html</target>
        </trans-unit>
        <trans-unit id="7a81af3e591ac713f81ea1efe93dcf36157d8376" translate="yes" xml:space="preserve">
          <source>o</source>
          <target state="translated">o</target>
        </trans-unit>
        <trans-unit id="a33482bc77a94435e81c9b3011de95e3e40cf60e" translate="yes" xml:space="preserve">
          <source>o.flebbe@gmx.de</source>
          <target state="translated">o.flebbe@gmx.de</target>
        </trans-unit>
        <trans-unit id="9b5c0b859faba061dd60fd8070fce74fcee29d0b" translate="yes" xml:space="preserve">
          <source>obj</source>
          <target state="translated">obj</target>
        </trans-unit>
        <trans-unit id="1a6c27f1f384e4dca1a28bbe9565d2626e61b29c" translate="yes" xml:space="preserve">
          <source>object belongs to the &lt;code&gt;File&lt;/code&gt; class. When we want to create a specific object, we start with its class, and &lt;b&gt;construct&lt;/b&gt; or &lt;b&gt;instantiate&lt;/b&gt; an object. A specific object is often referred to as an &lt;b&gt;instance&lt;/b&gt; of a class.</source>
          <target state="translated">객체는 &lt;code&gt;File&lt;/code&gt; 클래스에 속합니다 . 우리가 특정 객체를 생성 할 때, 우리는 그것의 종류 및 시작 &lt;b&gt;구조&lt;/b&gt; 또는 &lt;b&gt;인스턴스화&lt;/b&gt; 개체를. 특정 객체를 종종 클래스 의 &lt;b&gt;인스턴스&lt;/b&gt; 라고합니다 .</target>
        </trans-unit>
        <trans-unit id="b1f3897e3df748757bb52fe215253e05f32b938e" translate="yes" xml:space="preserve">
          <source>object for the</source>
          <target state="translated">의 대상</target>
        </trans-unit>
        <trans-unit id="cf6751f5ba4ca8022696023d44f42de4026c9562" translate="yes" xml:space="preserve">
          <source>object methods</source>
          <target state="translated">객체 메소드</target>
        </trans-unit>
        <trans-unit id="0467e2d8e1e8f51477d16f0b21691eb5b51a0f2e" translate="yes" xml:space="preserve">
          <source>object reference</source>
          <target state="translated">객체 참조</target>
        </trans-unit>
        <trans-unit id="ed6d31088a5da69bbe1257d780007b00d0daf40d" translate="yes" xml:space="preserve">
          <source>object registry</source>
          <target state="translated">객체 레지스트리</target>
        </trans-unit>
        <trans-unit id="79decb91ec84c6b35549b32aa13d1ab089df2a7d" translate="yes" xml:space="preserve">
          <source>object, which is defined by the perl library.</source>
          <target state="translated">펄 라이브러리에 의해 정의 된 객체.</target>
        </trans-unit>
        <trans-unit id="3800d55c69750967aafdc54ee978fd7e9d6eabb3" translate="yes" xml:space="preserve">
          <source>object.</source>
          <target state="translated">object.</target>
        </trans-unit>
        <trans-unit id="4f2573729eacb8a14f24218d5a02a49e26ff9d31" translate="yes" xml:space="preserve">
          <source>objectify()</source>
          <target state="translated">objectify()</target>
        </trans-unit>
        <trans-unit id="700529c136ec4ead04063911350251f3400ff7db" translate="yes" xml:space="preserve">
          <source>objects that are still running.</source>
          <target state="translated">여전히 실행중인 개체</target>
        </trans-unit>
        <trans-unit id="4c0ceb5828d4e4557601b4c9a7d793015cc6bad3" translate="yes" xml:space="preserve">
          <source>objects that have finished running (i.e., for which &lt;code&gt;-&amp;gt;join()&lt;/code&gt; will not</source>
          <target state="translated">즉, 완성 된 실행 (이 객체가되는 &lt;code&gt;-&amp;gt;join()&lt;/code&gt; 하지 않습니다</target>
        </trans-unit>
        <trans-unit id="76bf634339676008208ca241c5750db2d518df95" translate="yes" xml:space="preserve">
          <source>objects. In a scalar context, returns a count of the same.</source>
          <target state="translated">사물. 스칼라 컨텍스트에서 동일한 개수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5f520adf04556d9511ae0d776bb3d851923f2aaf" translate="yes" xml:space="preserve">
          <source>occurrence of SUBSTR in STR. If POSITION is specified, returns the last occurrence beginning at or before that position.</source>
          <target state="translated">STR에서 SUBSTR 발생 POSITION을 지정하면 해당 위치에서 시작하거나 그 위치에서 시작하는 마지막 항목을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="483f645b48dc7c230d8600f2380989d59f7c5b92" translate="yes" xml:space="preserve">
          <source>oct</source>
          <target state="translated">oct</target>
        </trans-unit>
        <trans-unit id="96e6d0d6d0dc7e7f94b5c7fb632407d8e50bac53" translate="yes" xml:space="preserve">
          <source>oct EXPR</source>
          <target state="translated">10 월 EXPR</target>
        </trans-unit>
        <trans-unit id="8eb277b706a2a088c3330b5723d58b4e931be024" translate="yes" xml:space="preserve">
          <source>octal</source>
          <target state="translated">octal</target>
        </trans-unit>
        <trans-unit id="3b90a0b8cb1f3b012ce5d72f85821e441df475d8" translate="yes" xml:space="preserve">
          <source>octal/hexadecimal</source>
          <target state="translated">octal/hexadecimal</target>
        </trans-unit>
        <trans-unit id="0e5f7d398e6f9cd1f6bac5cc823e363aec636495" translate="yes" xml:space="preserve">
          <source>octet</source>
          <target state="translated">octet</target>
        </trans-unit>
        <trans-unit id="56850b30f344050ca378023253ce3b4367921a6d" translate="yes" xml:space="preserve">
          <source>octets (including terminating &lt;code&gt;NUL&lt;/code&gt; ). Returns a pointer to the reallocated buffer. This is necessary before making any direct modification of the buffer that would increase its length. &lt;a href=&quot;#lex_stuff_pvn&quot;&gt;lex_stuff_pvn&lt;/a&gt; provides a more convenient way to insert text into the buffer.</source>
          <target state="translated">옥텟 ( &lt;code&gt;NUL&lt;/code&gt; 종료 포함 ). 재 할당 된 버퍼에 대한 포인터를 반환합니다. 이것은 길이를 증가시키는 버퍼를 직접 수정하기 전에 필요합니다. &lt;a href=&quot;#lex_stuff_pvn&quot;&gt;lex_stuff_pvn&lt;/a&gt; 은 텍스트를 버퍼에 삽입하는보다 편리한 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="cdaf52cd7331bd474904e6d730fd34e5c58e67bf" translate="yes" xml:space="preserve">
          <source>octets starting at</source>
          <target state="translated">에서 시작하는 옥텟</target>
        </trans-unit>
        <trans-unit id="7bbea6ea198ff816eef2f8bfa8d9a8f77e27802f" translate="yes" xml:space="preserve">
          <source>octnum</source>
          <target state="translated">octnum</target>
        </trans-unit>
        <trans-unit id="de04fa0e29f9b35e24905d2e512bedc9bb6e09e4" translate="yes" xml:space="preserve">
          <source>of</source>
          <target state="translated">of</target>
        </trans-unit>
        <trans-unit id="b2c2e767d52ad9ec3fcb7d1ce484beaa59351f2e" translate="yes" xml:space="preserve">
          <source>of 0. The core always sets</source>
          <target state="translated">코어는 항상 설정</target>
        </trans-unit>
        <trans-unit id="ebe1bac9af3efebb510bec10a9400faf45b80a6a" translate="yes" xml:space="preserve">
          <source>of 4os2,</source>
          <target state="translated">4os2의</target>
        </trans-unit>
        <trans-unit id="f8a82561029e3ce9ee758f6ccdc57f00d392a9d2" translate="yes" xml:space="preserve">
          <source>of &lt;a href=&quot;#EXAMPLE-2&quot;&gt;EXAMPLE 2&lt;/a&gt;? To do this, one needs to define a C function &lt;code&gt;&lt;a href=&quot;functions/int&quot;&gt;int&lt;/a&gt;
is_even(&lt;a href=&quot;functions/int&quot;&gt;int&lt;/a&gt; input)&lt;/code&gt; . As we saw in &lt;a href=&quot;#Anatomy-of-.xs-file&quot;&gt;Anatomy of .xs file&lt;/a&gt;, a proper place for this definition is in the first part of .xs file. In fact a C function</source>
          <target state="translated">의 &lt;a href=&quot;#EXAMPLE-2&quot;&gt;예 2&lt;/a&gt; ? 이를 위해서는 C 함수 &lt;code&gt;&lt;a href=&quot;functions/int&quot;&gt;int&lt;/a&gt; is_even(&lt;a href=&quot;functions/int&quot;&gt;int&lt;/a&gt; input)&lt;/code&gt; 을 정의해야합니다 . 우리는에서 보았 듯이 &lt;a href=&quot;#Anatomy-of-.xs-file&quot;&gt;.xs 파일의 해부학&lt;/a&gt; 정의의 적절한 위치는 .xs 파일의 첫 부분입니다. 실제로 C 함수</target>
        </trans-unit>
        <trans-unit id="a813424d044e5ab4a3b921a7cce7481e105233e7" translate="yes" xml:space="preserve">
          <source>of &lt;b&gt;DIVE&lt;/b&gt; origin changes the floating point flags on each write to the TTY of a VIO (windowed text-mode) applications.</source>
          <target state="translated">의 &lt;b&gt;DIVE의&lt;/b&gt; 기원 VIO (, 윈도우를 텍스트 모드) 응용 프로그램의 TTY 각 쓰기에 부동 소수점 플래그를 변경합니다.</target>
        </trans-unit>
        <trans-unit id="1aa08f96ccf63d22952aa22a14534886558a7e96" translate="yes" xml:space="preserve">
          <source>of &lt;b&gt;sigtrap&lt;/b&gt; is being used.</source>
          <target state="translated">의 &lt;b&gt;SIGTRAP&lt;/b&gt; 사용되고있다.</target>
        </trans-unit>
        <trans-unit id="68ddbc1e1307e1ba5c659092787ba2a6a94305b0" translate="yes" xml:space="preserve">
          <source>of &lt;code&gt;a&lt;/code&gt; or &lt;code&gt;Z&lt;/code&gt; may introduce &lt;code&gt;&quot;\000&quot;&lt;/code&gt; characters, which Perl does not regard as legal in numeric strings.</source>
          <target state="translated">또는 &lt;code&gt;Z&lt;/code&gt; 중 &lt;code&gt;a&lt;/code&gt; 는 &lt;code&gt;&quot;\000&quot;&lt;/code&gt; 문자를 도입 할 수 있으며 Perl은 숫자 문자열에서 유효한 것으로 간주하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c0e3af9bd5f6558dba475d8f143511a2da65cec0" translate="yes" xml:space="preserve">
          <source>of &lt;code&gt;name&lt;/code&gt; is stored, if &lt;code&gt;namlen&lt;/code&gt; is zero then &lt;code&gt;name&lt;/code&gt; is stored as-is and - as another special case - if &lt;code&gt;(name &amp;amp;&amp;amp; namlen == HEf_SVKEY)&lt;/code&gt; then &lt;code&gt;name&lt;/code&gt; is assumed to contain an &lt;code&gt;SV*&lt;/code&gt; and is stored as-is with its REFCNT incremented.</source>
          <target state="translated">의 &lt;code&gt;name&lt;/code&gt; 경우 저장된 &lt;code&gt;namlen&lt;/code&gt; 가 제로 후이고 &lt;code&gt;name&lt;/code&gt; 다른 특수한 경우로 - - 경우에 그대로 저장되어있다 &lt;code&gt;(name &amp;amp;&amp;amp; namlen == HEf_SVKEY)&lt;/code&gt; 다음 &lt;code&gt;name&lt;/code&gt; 포함 가정 &lt;code&gt;SV*&lt;/code&gt; 그 REFCNT로 그대로 저장 증분.</target>
        </trans-unit>
        <trans-unit id="a4f474ba88ac16e3c451d1bec5bef50aa4e395f9" translate="yes" xml:space="preserve">
          <source>of &lt;code&gt;z&lt;/code&gt; is marked here as &lt;code&gt;&lt;a href=&quot;../functions/abs&quot;&gt;abs(z)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">의 &lt;code&gt;z&lt;/code&gt; 로 표시되고 여기서 &lt;code&gt;&lt;a href=&quot;../functions/abs&quot;&gt;abs(z)&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="111845166a21e4c6f4fb524bf72bc73c3c5c99f2" translate="yes" xml:space="preserve">
          <source>of C99, or</source>
          <target state="translated">C99 또는</target>
        </trans-unit>
        <trans-unit id="470d48c79351cd20f55b4a06b3bf9739540dab10" translate="yes" xml:space="preserve">
          <source>of EMX. Takes integers as arguments, returns the previous coprocessor control word as an integer. Only bits in &lt;code&gt;new&lt;/code&gt; which are present in &lt;code&gt;mask&lt;/code&gt; are changed in the control word.</source>
          <target state="translated">EMX의. 정수를 인수로 사용하고 이전 보조 프로세서 제어 단어를 정수로 리턴합니다. 에서만 비트 &lt;code&gt;new&lt;/code&gt; 존재하는 &lt;code&gt;mask&lt;/code&gt; 상기 제어 워드에 변경된다.</target>
        </trans-unit>
        <trans-unit id="e1a873f51e31264bb95bab24c7a37cffbad285b8" translate="yes" xml:space="preserve">
          <source>of Emacs or EPM. Thus it</source>
          <target state="translated">이맥스 또는 EPM. 따라서 그것은</target>
        </trans-unit>
        <trans-unit id="f72805ddd04874a7416e40e207f2fde01a7203bf" translate="yes" xml:space="preserve">
          <source>of TAP read in from the</source>
          <target state="translated">에서 읽은 TAP</target>
        </trans-unit>
        <trans-unit id="5d6bb8ffa64a22dcb3e08800e50eaf678ebfc048" translate="yes" xml:space="preserve">
          <source>of TAP, which could come from anywhere (a file, an executable, a database, an IO handle, a URI, etc..). The source gets bundled up in a &lt;a href=&quot;parser/source&quot;&gt;TAP::Parser::Source&lt;/a&gt; object which gathers some meta data about it. The parser then uses a &lt;a href=&quot;parser/iteratorfactory&quot;&gt;TAP::Parser::IteratorFactory&lt;/a&gt; to determine which &lt;a href=&quot;parser/sourcehandler&quot;&gt;TAP::Parser::SourceHandler&lt;/a&gt; to use to turn the raw source into a stream of TAP by way of &lt;a href=&quot;#Iterators&quot;&gt;Iterators&lt;/a&gt;.</source>
          <target state="translated">파일, 실행 파일, 데이터베이스, IO 핸들, URI 등 어느 곳에서나 올 수 있습니다. 소스는 &lt;a href=&quot;parser/source&quot;&gt;TAP :: Parser :: Source&lt;/a&gt; 객체 에 묶여 있으며 이에 대한 일부 메타 데이터를 수집합니다. 파서는 다음에 사용하는 &lt;a href=&quot;parser/iteratorfactory&quot;&gt;TAP :: 파서 :: IteratorFactory을&lt;/a&gt; 확인하려면 &lt;a href=&quot;parser/sourcehandler&quot;&gt;:: 파서 :: SourceHandler는 TAP&lt;/a&gt; 의 방법으로 TAP의 스트림으로 원시 소스를 설정하는 데 사용하는 &lt;a href=&quot;#Iterators&quot;&gt;반복자&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7254d370f4388e2e8245c41159a85bcd6fd31c03" translate="yes" xml:space="preserve">
          <source>of TAP.</source>
          <target state="translated">TAP.</target>
        </trans-unit>
        <trans-unit id="3db2b1296e8fde0f84109bdea6bbe7d26683ef01" translate="yes" xml:space="preserve">
          <source>of WPS and so on... However, if you use *nixish shell (like</source>
          <target state="translated">WPS 등 ...하지만 * nixish 쉘을 사용하면</target>
        </trans-unit>
        <trans-unit id="e0a9f9114a6c5faf069bb8bb229afd917ea36d7d" translate="yes" xml:space="preserve">
          <source>of a &quot;:&quot; prefix.)</source>
          <target state="translated">&quot;:&quot;접두사</target>
        </trans-unit>
        <trans-unit id="25b7dbe7d7a40884eebf80c4926e672a7f2a4721" translate="yes" xml:space="preserve">
          <source>of a thread.</source>
          <target state="translated">실의.</target>
        </trans-unit>
        <trans-unit id="e1b2650ec6e779ddc4e3d02093fb7ee4c7ec02a8" translate="yes" xml:space="preserve">
          <source>of a variable, rather than a direct link to a (possibly) anonymous value.</source>
          <target state="translated">익명 값에 대한 직접 링크가 아닌 변수</target>
        </trans-unit>
        <trans-unit id="7d61c23131d8e7d7dd8bc25aa171bb28b91619bb" translate="yes" xml:space="preserve">
          <source>of arguments tell those arguments that they should produce a list value. See also &lt;b&gt;context&lt;/b&gt;.</source>
          <target state="translated">인수는 목록 값을 생성해야한다는 인수를 알려줍니다. &lt;b&gt;context&lt;/b&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c555306bbce83b44ce5164bcbd2969e3d2b7434c" translate="yes" xml:space="preserve">
          <source>of b would be passed into the function foo. The actual call to the function foo that &lt;b&gt;xsubpp&lt;/b&gt; generates would look like this:</source>
          <target state="translated">b의 함수는 foo 함수로 전달됩니다. &lt;b&gt;xsubpp가&lt;/b&gt; 생성 하는 foo 함수에 대한 실제 호출 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e4dd412e879a2fd12aec39bd1db59cf463faa112" translate="yes" xml:space="preserve">
          <source>of buffer. Access only positive offsets in the buffer up to the value returned by PerlIO_get_bufsiz().</source>
          <target state="translated">버퍼 PerlIO_get_bufsiz ()에 의해 반환 된 값까지 버퍼의 양의 오프셋에만 액세스합니다.</target>
        </trans-unit>
        <trans-unit id="93ed4e27725659f72dd4c91ac58f2bf5e7ddc5a6" translate="yes" xml:space="preserve">
          <source>of code generation when you define your class. This code generation means that your runtime code is as fast as it can be, but you pay for this when your modules are first loaded.</source>
          <target state="translated">클래스를 정의 할 때 코드 생성 이 코드 생성은 런타임 코드가 가능한 한 빠르다는 것을 의미하지만 모듈이 처음로드 될 때 비용을 지불합니다.</target>
        </trans-unit>
        <trans-unit id="cf5ac153c10ba2d5f6b73bc93dbb0cd3f5c3e15d" translate="yes" xml:space="preserve">
          <source>of data into variable SCALAR from the specified FILEHANDLE. Returns the number of characters actually read, &lt;code&gt;0&lt;/code&gt; at end of file, or undef if there was an error (in the latter case &lt;code&gt;$!&lt;/code&gt; is also set). SCALAR will be grown or shrunk so that the last character actually read is the last character of the scalar after the read.</source>
          <target state="translated">지정된 FILEHANDLE에서 변수 SCALAR로 데이터를 수집합니다. 실제로 읽은 문자 수, 파일 끝 에서 &lt;code&gt;0&lt;/code&gt; 또는 오류가있는 경우 undef (후자의 경우 &lt;code&gt;$!&lt;/code&gt; 도 설정 됨)를 리턴합니다 . SCALAR는 실제로 읽은 마지막 문자가 읽은 후 스칼라의 마지막 문자가되도록 커지거나 줄어 듭니다.</target>
        </trans-unit>
        <trans-unit id="284b67b041b5f1bf1b26441b35facd475cfb2a50" translate="yes" xml:space="preserve">
          <source>of each component as well. Thus the correct template is:</source>
          <target state="translated">각 구성 요소의 따라서 올바른 템플릿은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9503923e90ba6c4531da92b393ecc47155b59143" translate="yes" xml:space="preserve">
          <source>of filehandle with C</source>
          <target state="translated">C와의 파일 핸들</target>
        </trans-unit>
        <trans-unit id="8f47c5ce0268bed363775767e275d50417884c27" translate="yes" xml:space="preserve">
          <source>of host within reach; it rather will use</source>
          <target state="translated">접근 가능한 호스트; 오히려 사용합니다</target>
        </trans-unit>
        <trans-unit id="6ab3d27a31aa97ac8066fc7b7aa07ea25382ed03" translate="yes" xml:space="preserve">
          <source>of input (</source>
          <target state="translated">입력</target>
        </trans-unit>
        <trans-unit id="ad7c5025b73f63aab54d5cc70063d841c0554739" translate="yes" xml:space="preserve">
          <source>of modules. Bundles simplify handling of sets of related modules. See Bundles below.</source>
          <target state="translated">모듈. 번들은 관련 모듈 세트의 처리를 단순화합니다. 아래 번들을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9169c5114fd4e06b3e051fe583edbd75dcb637ba" translate="yes" xml:space="preserve">
          <source>of old extension DLLs if @INC allows finding their directories.</source>
          <target state="translated">@INC가 디렉토리를 찾을 수 있으면 오래된 확장 DLL</target>
        </trans-unit>
        <trans-unit id="f292f562906678cc05d488de2a0bc172043c5421" translate="yes" xml:space="preserve">
          <source>of pdksh calls external programs via fork()/exec(), and there is</source>
          <target state="translated">의 pdksh는 fork () / exec ()를 통해 외부 프로그램을 호출하며</target>
        </trans-unit>
        <trans-unit id="db30dcf74fdc21a52325b28ef85d47fafb373cd6" translate="yes" xml:space="preserve">
          <source>of processes, no signal is sent, and the return value is 0. This form is sometimes used, however, because it causes tainting checks to be run. But see &lt;a href=&quot;../perlsec#Laundering-and-Detecting-Tainted-Data&quot;&gt;Laundering and Detecting Tainted Data in perlsec&lt;/a&gt;.</source>
          <target state="translated">프로세스의 경우 신호가 전송되지 않고 리턴 값이 0입니다. 그러나이 양식은 때로 얼룩 검사가 실행되기 때문에 사용됩니다. 그러나 &lt;a href=&quot;../perlsec#Laundering-and-Detecting-Tainted-Data&quot;&gt;perlsec에서 오염 된 데이터 세탁 및 감지를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e8566bcc42e0813b5a47fff74fb4583e78697f26" translate="yes" xml:space="preserve">
          <source>of processes, no signal is sent, and the return value is 0. This form is sometimes used, however, because it causes tainting checks to be run. But see &lt;a href=&quot;perlsec#Laundering-and-Detecting-Tainted-Data&quot;&gt;Laundering and Detecting Tainted Data in perlsec&lt;/a&gt;.</source>
          <target state="translated">프로세스의 경우 신호가 전송되지 않고 리턴 값이 0입니다. 그러나이 양식은 때로 얼룩 검사가 실행되기 때문에 사용됩니다. 그러나 &lt;a href=&quot;perlsec#Laundering-and-Detecting-Tainted-Data&quot;&gt;perlsec에서 오염 된 데이터 세탁 및 감지를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2004d6d08bfc7886f95f50f5d1712f2dc8e272a6" translate="yes" xml:space="preserve">
          <source>of provided filename. This can be used to check that the filename and filehandle initially point to the same file and that the number of links to the file is 1 (all fields returned by stat() are compared).</source>
          <target state="translated">제공된 파일 이름입니다. 파일 이름과 파일 핸들이 처음에 동일한 파일을 가리키고 파일에 대한 링크 수가 1인지 확인하는 데 사용할 수 있습니다 (stat ()에 의해 반환 된 모든 필드가 비교됨).</target>
        </trans-unit>
        <trans-unit id="6e721d62d500b1f453e429e582975ada6f713148" translate="yes" xml:space="preserve">
          <source>of some module:</source>
          <target state="translated">일부 모듈의</target>
        </trans-unit>
        <trans-unit id="04fc9978431e85ac0b3d228896599db9c4b43ec6" translate="yes" xml:space="preserve">
          <source>of some modules may fail too: for example, the DLLs to update may be already loaded by</source>
          <target state="translated">예를 들어, 업데이트 할 DLL이 이미로드되어있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="65051ef6305c10c9b82522783f234223a458b236" translate="yes" xml:space="preserve">
          <source>of symbols into your namespace.</source>
          <target state="translated">네임 스페이스에 기호</target>
        </trans-unit>
        <trans-unit id="63f8b7ad2102b0774613740ac99c567b28a871fa" translate="yes" xml:space="preserve">
          <source>of the Perl source distribution (and installed into the perl library).</source>
          <target state="translated">Perl 소스 배포판 (및 perl 라이브러리에 설치)</target>
        </trans-unit>
        <trans-unit id="b9c1e23b44e4938ed78e68fbca7dbea554d2e6d1" translate="yes" xml:space="preserve">
          <source>of the appropriate type (for example, the subroutine for key &lt;code&gt;'${}'&lt;/code&gt; should return a reference to a scalar, not a scalar), or another object which overloads the operator: that is, the subroutine only determines what is dereferenced and the actual dereferencing is left to Perl. As a special case, if the subroutine returns the object itself then it will not be called again - avoiding infinite recursion.</source>
          <target state="translated">적절한 유형 (예 : 키 &lt;code&gt;'${}'&lt;/code&gt; 대한 서브 루틴 은 스칼라가 아닌 스칼라에 대한 참조를 리턴해야 함) 또는 연산자를 과부하시키는 다른 오브젝트 즉, 서브 루틴은 역 참조 된 항목 만 결정합니다. 실제 역 참조는 Perl에 맡겨져 있습니다. 특별한 경우에 서브 루틴이 오브젝트 자체를 리턴하면 무한 재귀를 피하면서 다시 호출되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f6b2d65a18245de8edf16c36a97b699b3dba6db6" translate="yes" xml:space="preserve">
          <source>of the arguments. So writing to a signature variable only changes that variable, and has no effect on the caller's variables, but writing to an element of &lt;code&gt;@_&lt;/code&gt; modifies whatever the caller used to supply that argument.</source>
          <target state="translated">논쟁의. 따라서 서명 변수에 쓰면 해당 변수 만 변경되며 호출자의 변수에는 영향을 미치지 않지만, &lt;code&gt;@_&lt;/code&gt; 요소에 쓰면 호출자가 해당 인수를 제공하는 데 사용한 모든 것을 수정합니다.</target>
        </trans-unit>
        <trans-unit id="fd238dabe84aed2c005c3df5b620429693744a61" translate="yes" xml:space="preserve">
          <source>of the class.</source>
          <target state="translated">수업의.</target>
        </trans-unit>
        <trans-unit id="45e2c782fe654c1747c56e059bab49ec4a1d2e8d" translate="yes" xml:space="preserve">
          <source>of the compiled form of the regex. Each line has format</source>
          <target state="translated">정규식의 컴파일 된 형태. 각 줄에는 형식이 있습니다</target>
        </trans-unit>
        <trans-unit id="a9269813421b47fca2f69715cbf87d2af275a85f" translate="yes" xml:space="preserve">
          <source>of the compiled regex that is currently being tested against the target string. The format of these lines is</source>
          <target state="translated">대상 문자열에 대해 현재 테스트중인 컴파일 된 정규식의 이 줄의 형식은</target>
        </trans-unit>
        <trans-unit id="4c7bd30103f7f2527fd866123487d9efc2ef46e1" translate="yes" xml:space="preserve">
          <source>of the complex number. The</source>
          <target state="translated">복소수 그만큼</target>
        </trans-unit>
        <trans-unit id="81c4ea988d026f6d175385b804c23414c21839dc" translate="yes" xml:space="preserve">
          <source>of the data. Something else could be going on in this new case with the &lt;code&gt;@{$AoA[$i]}&lt;/code&gt; dereference on the left-hand-side of the assignment. It all depends on whether &lt;code&gt;$AoA[$i]&lt;/code&gt; had been undefined to start with, or whether it already contained a reference. If you had already populated @AoA with references, as in</source>
          <target state="translated">데이터의. 이 새로운 경우 에는 과제의 왼쪽에 &lt;code&gt;@{$AoA[$i]}&lt;/code&gt; 역 참조 가있는 다른 작업이 진행될 수 있습니다 . 그것은 모두 &lt;code&gt;$AoA[$i]&lt;/code&gt; 로 시작하도록 정의되지 않았는지 또는 이미 참조를 포함했는지에 달려 있습니다. 이미 @AoA를 참조로 채운 경우</target>
        </trans-unit>
        <trans-unit id="6c3f2cc9d5be10a17fbd190e3e095a2531a705de" translate="yes" xml:space="preserve">
          <source>of the data. Where that configuration file lives depends on the UNIX flavour; often it's something like</source>
          <target state="translated">데이터의. 해당 구성 파일의 위치는 UNIX의 풍미에 따라 다릅니다. 종종 그것은 같은</target>
        </trans-unit>
        <trans-unit id="13cc5014c6d0196cf69f997b544227263419ca90" translate="yes" xml:space="preserve">
          <source>of the executable (or DLL) would fail.</source>
          <target state="translated">실행 파일 (또는 DLL)의 실패.</target>
        </trans-unit>
        <trans-unit id="77f09d3ec29ecb8e62ffac6188e57a71c5779fc7" translate="yes" xml:space="preserve">
          <source>of the first node that does a match.</source>
          <target state="translated">일치하는 첫 번째 노드의</target>
        </trans-unit>
        <trans-unit id="769db93f6904c06897fea8699229bbe8313aea85" translate="yes" xml:space="preserve">
          <source>of the following keys:</source>
          <target state="translated">다음 키 중</target>
        </trans-unit>
        <trans-unit id="962460692130c4f246026cabe2eaeb96254611a1" translate="yes" xml:space="preserve">
          <source>of the functions of the layer</source>
          <target state="translated">층의 기능</target>
        </trans-unit>
        <trans-unit id="ee99dbbd0ba3e99a9e002f052ee90d1f96f6f636" translate="yes" xml:space="preserve">
          <source>of the given file</source>
          <target state="translated">주어진 파일의</target>
        </trans-unit>
        <trans-unit id="e0f23487232bb2365ebd0b25705cdc1d07e83f1b" translate="yes" xml:space="preserve">
          <source>of the initial word characters to match the first repetition, that</source>
          <target state="translated">첫 번째 반복과 일치하는 초기 단어 문자의</target>
        </trans-unit>
        <trans-unit id="247333508e060c2cd202cd22d98a8f382fe77575" translate="yes" xml:space="preserve">
          <source>of the input and output files, respectively. The name and type of the input file are used as defaults for the output file, if necessary.</source>
          <target state="translated">입력 및 출력 파일의 각각. 필요한 경우 입력 파일의 이름과 유형이 출력 파일의 기본값으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="072ed14b5da07152b1d9667101388d2f211f8665" translate="yes" xml:space="preserve">
          <source>of the left operand:</source>
          <target state="translated">왼쪽 피연산자 :</target>
        </trans-unit>
        <trans-unit id="afcaf18ff419a09ba6d7377b1fb39b2abe147b45" translate="yes" xml:space="preserve">
          <source>of the loaded extension nullifies many advantages of Perl's malloc(), such as better usage of system resources, error detection, memory usage reporting, catchable failure of memory allocations, etc.</source>
          <target state="translated">로드 된 확장 기능은 시스템 리소스 사용률 향상, 오류 감지, 메모리 사용량보고, 메모리 할당 실패 가능성 등과 같은 Perl의 malloc ()의 많은 이점을 무효화합니다.</target>
        </trans-unit>
        <trans-unit id="79423cf355c7f91a1f9e1c1eac64923e3b45609c" translate="yes" xml:space="preserve">
          <source>of the matching operation. We will meet other modifiers later in the tutorial.</source>
          <target state="translated">매칭 작업. 이 튜토리얼의 뒷부분에서 다른 수정자를 만날 것입니다.</target>
        </trans-unit>
        <trans-unit id="368846c77740745bea19cbd5cf6f80875c0f9135" translate="yes" xml:space="preserve">
          <source>of the modules and their tests, unlike other core modules.</source>
          <target state="translated">다른 핵심 모듈과 달리 모듈 및 테스트.</target>
        </trans-unit>
        <trans-unit id="6265a94e38dcbafc9d6648d566d43180b2336319" translate="yes" xml:space="preserve">
          <source>of the operands is a boolean: the other uses smartmatching, and that wins.</source>
          <target state="translated">피연산자 중 부울은 부울입니다. 다른 하나는 스마트 매칭을 사용하여 승리합니다.</target>
        </trans-unit>
        <trans-unit id="8d1b8bd9346355cdc4724d23dd2824a53c0f9a56" translate="yes" xml:space="preserve">
          <source>of the operations defined on real numbers. This means they keep their natural meaning when there is no imaginary part, provided the number is within their definition set.</source>
          <target state="translated">실수로 정의 된 연산 중 이는 숫자가 정의 세트 내에있는 경우 허수 부분이 없을 때 자연의 의미를 유지함을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="2b7013b6f6fcfd57e0afa61c0112233e488b577b" translate="yes" xml:space="preserve">
          <source>of the parsers failed. This includes:</source>
          <target state="translated">파서 중 실패했습니다. 여기에는 다음이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="038a8d363c602c2210561716fbb7d4cfdd489990" translate="yes" xml:space="preserve">
          <source>of the three well-known newline formats: CR, LF, and CRLF. See &lt;a href=&quot;perlport&quot;&gt;perlport&lt;/a&gt;.</source>
          <target state="translated">CR, LF 및 CRLF의 3 가지 잘 알려진 개행 형식 중 하나입니다. &lt;a href=&quot;perlport&quot;&gt;perlport를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6262c7fa02656cbb9672d10569b8cde2166df046" translate="yes" xml:space="preserve">
          <source>of the two arrays. But don't be fooled into thinking that &lt;code&gt;ok @foo, @bar&lt;/code&gt; means a comparison of the contents of two arrays -- you're comparing</source>
          <target state="translated">두 배열 중. 그러나 &lt;code&gt;ok @foo, @bar&lt;/code&gt; 는 두 배열의 내용을 비교한다는 의미에 속지 마십시오.</target>
        </trans-unit>
        <trans-unit id="47f7e39a39d95947937edeb7bc388bc8661c8cca" translate="yes" xml:space="preserve">
          <source>of the two possible GMT times.</source>
          <target state="translated">두 가지 가능한 GMT 시간 중</target>
        </trans-unit>
        <trans-unit id="149f7ca136761c2a16ea3e20a844cea771ea23a8" translate="yes" xml:space="preserve">
          <source>of the uncompressed data in &lt;code&gt;$input&lt;/code&gt; will have been processed. This means the subsequent call to &lt;code&gt;&lt;a href=&quot;../../functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt; can overwrite it's contents without any problem.</source>
          <target state="translated">&lt;code&gt;$input&lt;/code&gt; 의 압축되지 않은 데이터 중 하나가 처리되었습니다. 이는 후속 &lt;code&gt;&lt;a href=&quot;../../functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt; 호출이 문제없이 내용을 덮어 쓸 수 있음을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="913bc84bedb33beda1d8979eb69eed4e14f180fb" translate="yes" xml:space="preserve">
          <source>of the uncompressed data it has generated to &lt;code&gt;$output&lt;/code&gt; . This makes the interface to &lt;code&gt;inflate&lt;/code&gt; much simpler - if the method has uncompressed &lt;code&gt;$input&lt;/code&gt; successfully</source>
          <target state="translated">압축되지 않은 데이터 중 &lt;code&gt;$output&lt;/code&gt; 생성됩니다 . 메소드가 &lt;code&gt;$input&lt;/code&gt; 성공적으로 압축하지 않은 경우 인터페이스가 훨씬 간단 하게 &lt;code&gt;inflate&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="1e012cd2012d508eb2c2c89d91532f0e25ccbd35" translate="yes" xml:space="preserve">
          <source>of the value of EXPR. If EXPR is omitted, returns the length of &lt;code&gt;$_&lt;/code&gt; . If EXPR is undefined, returns &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">EXPR의 가치. EXPR을 생략하면 &lt;code&gt;$_&lt;/code&gt; 길이를 리턴합니다 . EXPR이 정의되어 있지 않으면 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="e53c625113c3cea9d668077f0dd5afc1d337d225" translate="yes" xml:space="preserve">
          <source>of the value of EXPR. If EXPR is omitted, returns the length of &lt;code&gt;$_&lt;/code&gt; . If EXPR is undefined, returns &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">EXPR의 가치. EXPR을 생략하면 &lt;code&gt;$_&lt;/code&gt; 길이를 리턴합니다 . EXPR이 정의되어 있지 않으면 &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="22fd876beda4ee0d21ddd2e67c27389649e38c38" translate="yes" xml:space="preserve">
          <source>of the values when you only want to change one. Here is an example:</source>
          <target state="translated">하나만 변경하려는 경우 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f8fac8b96c539ab3a16440d548bac808f9956bb2" translate="yes" xml:space="preserve">
          <source>of the writer of &lt;code&gt;&quot;\Q\t\E&quot;&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;&quot;\Q\t\E&quot;&lt;/code&gt; 의 작가 .</target>
        </trans-unit>
        <trans-unit id="3271556baa49e3e5d996f52f1dab1d1c69ec5964" translate="yes" xml:space="preserve">
          <source>of them&quot; or the rather distinct situation of &quot;I looked for something else (like lines in files), and along the way I saw</source>
          <target state="translated">&quot;파일의 줄과 같은 다른 것을 찾고, 내가 본 방식에 따라</target>
        </trans-unit>
        <trans-unit id="f6293c234874cc62495e95a844a2732b7ec2db50" translate="yes" xml:space="preserve">
          <source>of them.</source>
          <target state="translated">그들의.</target>
        </trans-unit>
        <trans-unit id="bcb85e53ff6767c5d10dfa149fbf7435745e3627" translate="yes" xml:space="preserve">
          <source>of these numbers. The fact that you can store such &quot;large&quot; numbers does not mean that the</source>
          <target state="translated">이 숫자 중. 이러한 &quot;큰&quot;숫자를 저장할 수 있다는 사실이</target>
        </trans-unit>
        <trans-unit id="0be84fdb26d602eb60f2575f3f2ac2f379446429" translate="yes" xml:space="preserve">
          <source>of what should be done by the glue, and let the XS compiler &lt;b&gt;xsubpp&lt;/b&gt; handle the rest.</source>
          <target state="translated">접착제로해야 할 일에 대해 XS 컴파일러 &lt;b&gt;xsubpp&lt;/b&gt; 가 나머지를 처리하도록합니다.</target>
        </trans-unit>
        <trans-unit id="d0abe1efb8faf3db79173514ff0353ae2d525808" translate="yes" xml:space="preserve">
          <source>of what's in @array at the time of the assignment. This is what you want.</source>
          <target state="translated">할당 시점에 @array에있는 내용 이것이 당신이 원하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="da7a68734367828e30b94927f4c2b43ed2c0f652" translate="yes" xml:space="preserve">
          <source>off</source>
          <target state="translated">off</target>
        </trans-unit>
        <trans-unit id="4d461d7b22e7a63a37f4c4ee9110f0e4808265cb" translate="yes" xml:space="preserve">
          <source>off. When you encode anything, the UTF8 flag on the result is always off, even when it contains a completely valid utf8 string. See &lt;a href=&quot;#The-UTF8-flag&quot;&gt;The UTF8 flag&lt;/a&gt; below.</source>
          <target state="translated">떨어져서. 어떤 것을 인코딩하면 결과에 UTF8 플래그가 완전히 유효한 utf8 문자열이 포함되어 있어도 항상 꺼져 있습니다. 아래 &lt;a href=&quot;#The-UTF8-flag&quot;&gt;의 UTF8 플래그를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="eb413c01e2ef26fc07f141ba7f20d7ca2ed62afa" translate="yes" xml:space="preserve">
          <source>offers a convenient and flexible approach to examining directory trees.</source>
          <target state="translated">디렉토리 트리 검사에 편리하고 유연한 접근 방식을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="bf0ef26d2dde7f8649c8bc6c83e56c0617946b6d" translate="yes" xml:space="preserve">
          <source>offs</source>
          <target state="translated">offs</target>
        </trans-unit>
        <trans-unit id="53a610e925bbc0a175e365d31241ae75aeead651" translate="yes" xml:space="preserve">
          <source>offset</source>
          <target state="translated">offset</target>
        </trans-unit>
        <trans-unit id="c35f50dd613aeb9803c5e79f917f08e50eb92eb0" translate="yes" xml:space="preserve">
          <source>often denote character set information, as in &quot;en_US.ISO8859-1&quot;.</source>
          <target state="translated">종종 &quot;en_US.ISO8859-1&quot;과 같이 문자 세트 정보를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="04e135795cfe56caff0e68d7940725e39d51fa46" translate="yes" xml:space="preserve">
          <source>ohv</source>
          <target state="translated">ohv</target>
        </trans-unit>
        <trans-unit id="e71334b5492813c19e36632626ee09cae206295e" translate="yes" xml:space="preserve">
          <source>okamoto@corp.hp.com</source>
          <target state="translated">okamoto@corp.hp.com</target>
        </trans-unit>
        <trans-unit id="c00dbbc9dadfbe1e232e93a729dd4752fade0abf" translate="yes" xml:space="preserve">
          <source>old</source>
          <target state="translated">old</target>
        </trans-unit>
        <trans-unit id="bb008d15365ef4503f1577a0ec25da39a42c79fe" translate="yes" xml:space="preserve">
          <source>old versions of EMX.</source>
          <target state="translated">이전 버전의 EMX.</target>
        </trans-unit>
        <trans-unit id="b9fdcd8e5c7b675d49f369aea38377eaea526dcd" translate="yes" xml:space="preserve">
          <source>old-case,</source>
          <target state="translated">old-case,</target>
        </trans-unit>
        <trans-unit id="42415e0a829ba75545fe365889996a65046f3f3a" translate="yes" xml:space="preserve">
          <source>old_checker_p</source>
          <target state="translated">old_checker_p</target>
        </trans-unit>
        <trans-unit id="709121ae3113426170e14ac52803c3a23821ed69" translate="yes" xml:space="preserve">
          <source>oldop</source>
          <target state="translated">oldop</target>
        </trans-unit>
        <trans-unit id="293e74fd9452fcff0ff40d228b342215e108db68" translate="yes" xml:space="preserve">
          <source>omit parentheses in many places doesn't mean that you ought to:</source>
          <target state="translated">여러 곳에서 괄호를 생략한다고해서 다음을 수행해야하는 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="db3d405b10675998c030223177d42e71b4e7a312" translate="yes" xml:space="preserve">
          <source>on</source>
          <target state="translated">on</target>
        </trans-unit>
        <trans-unit id="e01a5a56f35b74f7a3a89ce4f81518a646012063" translate="yes" xml:space="preserve">
          <source>on &lt;code&gt;PATH&lt;/code&gt; .</source>
          <target state="translated">에 &lt;code&gt;PATH&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1bcc2965fa3f35a4da37f8ad990b114e67f65af7" translate="yes" xml:space="preserve">
          <source>on &lt;code&gt;PATH&lt;/code&gt; . If found in</source>
          <target state="translated">에 &lt;code&gt;PATH&lt;/code&gt; . 발견되면</target>
        </trans-unit>
        <trans-unit id="3d2907641cba1caed7a4a3ffe9524f159d8475bf" translate="yes" xml:space="preserve">
          <source>on &lt;code&gt;PATH&lt;/code&gt; . In other words, &lt;code&gt;PATH&lt;/code&gt; is essentially searched twice: once by the OS for an executable, then by Perl for scripts.</source>
          <target state="translated">에 &lt;code&gt;PATH&lt;/code&gt; . 다시 말해, &lt;code&gt;PATH&lt;/code&gt; 는 기본적으로 OS에서 실행 파일을 한 번, Perl이 스크립트를 두 번 검색합니다.</target>
        </trans-unit>
        <trans-unit id="986d58f77ef83714f6103030e28cd5e2397bf345" translate="yes" xml:space="preserve">
          <source>on MacOS.</source>
          <target state="translated">MacOS에서.</target>
        </trans-unit>
        <trans-unit id="d7f815e3b43ea7ac5745917f4ad920b6897e011a" translate="yes" xml:space="preserve">
          <source>on Perls of a recent vintage:</source>
          <target state="translated">최근 빈티지의 Perls에서 :</target>
        </trans-unit>
        <trans-unit id="a7b60a77a6efb68e8721286f549d5aed2f159d6c" translate="yes" xml:space="preserve">
          <source>on Unix and applications like</source>
          <target state="translated">유닉스와 같은 응용 프로그램에서</target>
        </trans-unit>
        <trans-unit id="75c3493508462329370ff7952b213136dca8ccf0" translate="yes" xml:space="preserve">
          <source>on VMS, respectively.</source>
          <target state="translated">VMS에서 각각.</target>
        </trans-unit>
        <trans-unit id="c5c0b1d677dcc4155a1f45884a2dec5e7ea80e31" translate="yes" xml:space="preserve">
          <source>on Win32 and OS/2, or</source>
          <target state="translated">Win32 및 OS / 2에서 또는</target>
        </trans-unit>
        <trans-unit id="75de64d2991b11434137b85d0b57ca3e7cbcf47d" translate="yes" xml:space="preserve">
          <source>on Windows and VMS) in the current directory.</source>
          <target state="translated">현재 디렉토리에있는 Windows 및 VMS).</target>
        </trans-unit>
        <trans-unit id="0f01c0ef419d55f58bd698e32926176723e39fa2" translate="yes" xml:space="preserve">
          <source>on a machine named &quot;foo.example.com&quot;, that object's path would be &quot;/etc/hostname&quot;, its content would be &quot;foo\n&quot;, and it's last modification time would be 1304974868 seconds since the beginning of the epoch.</source>
          <target state="translated">&quot;foo.example.com&quot;이라는 컴퓨터에서 해당 객체의 경로는 &quot;/ etc / hostname&quot;이고 내용은 &quot;foo \ n&quot;이며 마지막 수정 시간은 에포크 (epoch)가 시작된 이후 1304974868 초입니다.</target>
        </trans-unit>
        <trans-unit id="d9ac3a6797cae8fb18431d28eaad3e4ef05640c1" translate="yes" xml:space="preserve">
          <source>on all files in those directories (and their subdirectories, etc.). &lt;b&gt;-r&lt;/b&gt; and &lt;b&gt;-a&lt;/b&gt; are mutually exclusive.</source>
          <target state="translated">해당 디렉토리의 모든 파일 (및 해당 서브 디렉토리 등) &lt;b&gt;-r&lt;/b&gt; 과 &lt;b&gt;-a&lt;/b&gt; 는 상호 배타적입니다.</target>
        </trans-unit>
        <trans-unit id="41e67fd8a36fea5ebdafc2edd7581a271f2c5123" translate="yes" xml:space="preserve">
          <source>on an I/O call, sending it a signal will not cause the I/O call to be interrupted such that the signal is acted up immediately.</source>
          <target state="translated">I / O 호출에서 신호를 보내도 신호가 즉시 작동되도록 I / O 호출이 중단되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="69be2512a0d42fb0521d773c53063e5bb6729cb3" translate="yes" xml:space="preserve">
          <source>on entry. If &lt;code&gt;PERL_SCAN_ALLOW_UNDERSCORES&lt;/code&gt; is set in</source>
          <target state="translated">입장에. &lt;code&gt;PERL_SCAN_ALLOW_UNDERSCORES&lt;/code&gt; 가 설정된 경우</target>
        </trans-unit>
        <trans-unit id="151093b05853bed491a309a09ea455c1f33e4b4c" translate="yes" xml:space="preserve">
          <source>on mips.</source>
          <target state="translated">밉스에.</target>
        </trans-unit>
        <trans-unit id="674ad1354b5cb7d02a46991529c51b1f55b0ac4b" translate="yes" xml:space="preserve">
          <source>on mixed universe machines, may be in the bsd compat library, which is often shunned.</source>
          <target state="translated">혼합 유니버스 컴퓨터의 경우 종종 꺼지는 bsd compat 라이브러리에있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ab7f3518b24b2daa7ad80da4af4c0b754773e9ea" translate="yes" xml:space="preserve">
          <source>on platforms that don't have the POSIX &lt;code&gt;ascii&lt;/code&gt; extension, this matches just the platform's native ASCII-range characters.</source>
          <target state="translated">POSIX &lt;code&gt;ascii&lt;/code&gt; 확장자 가없는 플랫폼에서는 플랫폼의 기본 ASCII 범위 문자와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="4b626abb73efa8232d4f1234bb8ee964baffd912" translate="yes" xml:space="preserve">
          <source>on platforms that don't have the POSIX &lt;code&gt;blank&lt;/code&gt; extension, this matches just the platform's native tab and space characters.</source>
          <target state="translated">POSIX &lt;code&gt;blank&lt;/code&gt; 확장이없는 플랫폼에서는 플랫폼의 기본 탭 및 공백 문자 만 일치합니다.</target>
        </trans-unit>
        <trans-unit id="992e3ee5fec5a1c4e0557ef9255a5bf9742ac209" translate="yes" xml:space="preserve">
          <source>on stack.</source>
          <target state="translated">스택에.</target>
        </trans-unit>
        <trans-unit id="f8733a406d8ee19a20fa309e2f35f82925198152" translate="yes" xml:space="preserve">
          <source>on the contents of</source>
          <target state="translated">의 내용에</target>
        </trans-unit>
        <trans-unit id="565c1b2253d3d0f78bea87fe627a7a8a041b6c67" translate="yes" xml:space="preserve">
          <source>on the corresponding</source>
          <target state="translated">해당</target>
        </trans-unit>
        <trans-unit id="1acca27ed61e77d40d051b56177c154c693d98c9" translate="yes" xml:space="preserve">
          <source>on the front. It is up to the makefile to eventually create this directory while performing installation (with</source>
          <target state="translated">전면에. 설치를 수행하는 동안 결국이 디렉토리를 작성하는 것은 makefile에 달려 있습니다.</target>
        </trans-unit>
        <trans-unit id="d1d9f98fd9d55b11789b47266bc5665db94175f5" translate="yes" xml:space="preserve">
          <source>on the front. The standard distribution will put nothing in this directory. Vendors who distribute perl may wish to place additional binaries in this directory with MakeMaker</source>
          <target state="translated">전면에. 표준 배포판은이 디렉토리에 아무것도 넣지 않습니다. Perl을 배포하는 공급 업체는 MakeMaker를 사용하여이 디렉터리에 추가 바이너리를 배치 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="929690d4e5e842d0ce2c694617eb2a8a0ac0b57a" translate="yes" xml:space="preserve">
          <source>on the front. The standard distribution will put nothing in this directory. Vendors who distribute perl may wish to place additional executable scripts in this directory with MakeMaker</source>
          <target state="translated">전면에. 표준 배포판은이 디렉토리에 아무것도 넣지 않습니다. Perl을 배포하는 공급 업체는 MakeMaker를 사용하여이 실행 디렉토리에 추가 실행 스크립트를 배치 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="541aa81a26009c29d798af40e1c06dd6a4a1b56f" translate="yes" xml:space="preserve">
          <source>on the front. The standard distribution will put nothing in this directory. Vendors who distribute perl may wish to place their own architecture-dependent modules and extensions in this directory with MakeMaker</source>
          <target state="translated">전면에. 표준 배포판은이 디렉토리에 아무것도 넣지 않습니다. Perl을 배포하는 공급 업체는 MakeMaker를 사용하여 자체 아키텍처 종속 모듈 및 확장을이 디렉토리에 배치 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f9ee59a7f616996cd585906f720a01f8f0008f47" translate="yes" xml:space="preserve">
          <source>on the front. The standard distribution will put nothing in this directory. Vendors who distribute perl may wish to place their own html pages for modules and extensions in this directory with MakeMaker</source>
          <target state="translated">전면에. 표준 배포판은이 디렉토리에 아무것도 넣지 않습니다. Perl을 배포하는 공급 업체는 MakeMaker를 사용하여이 디렉토리에 모듈 및 확장에 대한 고유 한 html 페이지를 배치 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4cb49f6327833e2b63f896789622d2c9d852f186" translate="yes" xml:space="preserve">
          <source>on the front. The standard distribution will put nothing in this directory. Vendors who distribute perl may wish to place their own html pages in this directory with MakeMaker</source>
          <target state="translated">전면에. 표준 배포판은이 디렉토리에 아무것도 넣지 않습니다. Perl을 배포하는 공급 업체는 MakeMaker를 사용하여 자신의 HTML 페이지를이 디렉토리에 배치 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b5285e2becf7d0a4674d346bda4177cd8d5bf2de" translate="yes" xml:space="preserve">
          <source>on the front. The standard distribution will put nothing in this directory. Vendors who distribute perl may wish to place their own man1 pages in this directory with MakeMaker</source>
          <target state="translated">전면에. 표준 배포판은이 디렉토리에 아무것도 넣지 않습니다. Perl을 배포하는 공급 업체는 MakeMaker를 사용하여이 디렉토리에 자신의 man1 페이지를 배치 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a51695fd6a3421e0f8936485332429f678117335" translate="yes" xml:space="preserve">
          <source>on the front. The standard distribution will put nothing in this directory. Vendors who distribute perl may wish to place their own man3 pages in this directory with MakeMaker</source>
          <target state="translated">전면에. 표준 배포판은이 디렉토리에 아무것도 넣지 않습니다. Perl을 배포하는 공급 업체는 MakeMaker를 사용하여이 디렉토리에 자신의 man3 페이지를 배치 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8641171ab25d11dbd0c16f2d0fc2c40920ca8541" translate="yes" xml:space="preserve">
          <source>on the same $buf and/or %hash.</source>
          <target state="translated">같은 $ buf 및 / 또는 % hash에.</target>
        </trans-unit>
        <trans-unit id="1cfb8a9a8f4238e464d7d3878e309d7151243ed6" translate="yes" xml:space="preserve">
          <source>on the source files.</source>
          <target state="translated">소스 파일에.</target>
        </trans-unit>
        <trans-unit id="bf2b8d9a5400956f1012803bf007fcf6257ad3a4" translate="yes" xml:space="preserve">
          <source>on themselves when you call them with &lt;code&gt;-help&lt;/code&gt; .</source>
          <target state="translated">스스로 당신이 그들을 호출 할 때 &lt;code&gt;-help&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2ce98a762585913614c87270e7af4b9943ba12ee" translate="yes" xml:space="preserve">
          <source>on what the rest of the regexp matched.</source>
          <target state="translated">나머지 정규 표현식과 일치하는 내용</target>
        </trans-unit>
        <trans-unit id="3523a7adcb31066cff353deaba026cf6f18b679f" translate="yes" xml:space="preserve">
          <source>on your LIBPATH, which broke the build of extensions.</source>
          <target state="translated">LIBPATH에서 확장 빌드가 중단되었습니다.</target>
        </trans-unit>
        <trans-unit id="7e88f6428c0c83aa75d7429a05281052ec928f45" translate="yes" xml:space="preserve">
          <source>on your local system</source>
          <target state="translated">로컬 시스템에서</target>
        </trans-unit>
        <trans-unit id="94b624013292b18fa6f28b096bd2e09df3d5d334" translate="yes" xml:space="preserve">
          <source>on your path, and EMX environment</source>
          <target state="translated">당신의 길과 EMX 환경에</target>
        </trans-unit>
        <trans-unit id="0478c39ff0f60a88e7767fdf9ab26dae75679569" translate="yes" xml:space="preserve">
          <source>on your system for an explanation of the general principles.</source>
          <target state="translated">일반적인 원칙에 대한 설명은 시스템에서</target>
        </trans-unit>
        <trans-unit id="d64e890689634ab9ed7617f82d83b57c40c432d7" translate="yes" xml:space="preserve">
          <source>on your system is a symlink to</source>
          <target state="translated">귀하의 시스템에서</target>
        </trans-unit>
        <trans-unit id="09136c630b56e0536304b9dfb9e9728a1c250005" translate="yes" xml:space="preserve">
          <source>on your system), then you should use the &lt;code&gt;&lt;a href=&quot;functions/sysopen&quot;&gt;sysopen&lt;/a&gt;&lt;/code&gt; function, which involves no such magic (but may use subtly different filemodes than Perl open(), which is mapped to C fopen()). This is another way to protect your filenames from interpretation. For example:</source>
          <target state="translated">시스템에서) 그런 다음 &lt;code&gt;&lt;a href=&quot;functions/sysopen&quot;&gt;sysopen&lt;/a&gt;&lt;/code&gt; 함수 를 사용해야합니다.이 기능에는 마술이 필요하지 않습니다 (그러나 C fopen ()에 매핑 된 Perl open ()과는 미묘하게 다른 파일 모드를 사용할 수 있습니다). 이것은 파일 이름이 해석되지 않도록 보호하는 또 다른 방법입니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d86a70963ac9f131ba08299f68b8f7ee49413e29" translate="yes" xml:space="preserve">
          <source>on your system), then you should use the &lt;code&gt;&lt;a href=&quot;sysopen&quot;&gt;sysopen&lt;/a&gt;&lt;/code&gt; function, which involves no such magic (but may use subtly different filemodes than Perl open(), which is mapped to C fopen()). This is another way to protect your filenames from interpretation. For example:</source>
          <target state="translated">시스템에서) 그런 다음 &lt;code&gt;&lt;a href=&quot;sysopen&quot;&gt;sysopen&lt;/a&gt;&lt;/code&gt; 함수 를 사용해야합니다.이 기능에는 마술이 필요하지 않습니다 (그러나 C fopen ()에 매핑 된 Perl open ()과는 미묘하게 다른 파일 모드를 사용할 수 있습니다). 이것은 파일 이름이 해석되지 않도록 보호하는 또 다른 방법입니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="51eec4f0330b095f6f27a4e862d46e5d6ab79c90" translate="yes" xml:space="preserve">
          <source>on your system.</source>
          <target state="translated">시스템에서.</target>
        </trans-unit>
        <trans-unit id="1745f93786289958b895545a174db4fb93314ee2" translate="yes" xml:space="preserve">
          <source>on your system. Also, please see</source>
          <target state="translated">시스템에서. 또한 참조하십시오</target>
        </trans-unit>
        <trans-unit id="1863835675e3970e15e5c22411ef60824eb55591" translate="yes" xml:space="preserve">
          <source>once</source>
          <target state="translated">once</target>
        </trans-unit>
        <trans-unit id="e22e9606d725092754022ccb2493b75fff815860" translate="yes" xml:space="preserve">
          <source>once before calling a function like &lt;code&gt;extract_file&lt;/code&gt; and &lt;code&gt;Archive::Tar&lt;/code&gt; will use the current directory setting from then on and won't call &lt;code&gt;Cwd::cwd()&lt;/code&gt; internally.</source>
          <target state="translated">&lt;code&gt;extract_file&lt;/code&gt; 및 &lt;code&gt;Archive::Tar&lt;/code&gt; 와 같은 함수를 호출하기 전에 현재 디렉토리 설정을 사용하고 내부적으로 &lt;code&gt;Cwd::cwd()&lt;/code&gt; 호출하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="fe05bcdcdc4928012781a5f1a2a77cbb5398e106" translate="yes" xml:space="preserve">
          <source>one</source>
          <target state="translated">one</target>
        </trans-unit>
        <trans-unit id="b32840392efb1508fc5add8cf8ac198b182fbe9c" translate="yes" xml:space="preserve">
          <source>one can remove this reference to &lt;code&gt;@ISA&lt;/code&gt; together with the &lt;code&gt;@ISA&lt;/code&gt; assignment.</source>
          <target state="translated">&lt;code&gt;@ISA&lt;/code&gt; 할당 과 함께 &lt;code&gt;@ISA&lt;/code&gt; 에 대한이 참조를 제거 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="edeef23f47b51ea957ff051bb0aa667bce12b340" translate="yes" xml:space="preserve">
          <source>one gets a fully functional &lt;b&gt;*nix&lt;/b&gt;-ish environment under DOS, say, &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;``&lt;/code&gt; and pipe-&lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; work. In fact, MakeMaker works (for static build), so one can have Perl development environment under DOS.</source>
          <target state="translated">하나는 완전한 기능을 얻을 수 &lt;b&gt;* nix에서 스크립트&lt;/b&gt; DOS, 말, 아래 -ish 환경을 &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;``&lt;/code&gt; 와 pipe- &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; 작동합니다. 실제로 MakeMaker는 (정적 빌드 용) 작동하므로 DOS에서 Perl 개발 환경을 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b1507ef05cd55a2ab605101adb0a9ca7fb82a994" translate="yes" xml:space="preserve">
          <source>one may need to use the template &lt;code&gt;c x![d] d c[2]&lt;/code&gt; . This assumes that doubles must be aligned to the size of double.</source>
          <target state="translated">&lt;code&gt;c x![d] d c[2]&lt;/code&gt; 템플릿을 사용해야 할 수도 있습니다 . 이것은 double이 double의 크기에 맞춰져야한다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="97d32d2d7d52997dceb669a3f4724f504295e63c" translate="yes" xml:space="preserve">
          <source>one of the directories in &lt;code&gt;@INC&lt;/code&gt; , or</source>
          <target state="translated">&lt;code&gt;@INC&lt;/code&gt; 의 디렉토리 중 하나 또는</target>
        </trans-unit>
        <trans-unit id="e11f47ef9a6de14cdee4552ec9f9d15c185cada9" translate="yes" xml:space="preserve">
          <source>one or more codes (separated by spaces) that, taken in order, give the code points for the case folding for</source>
          <target state="translated">순서대로 취한 케이스에 대한 코드 포인트를 제공하는 하나 이상의 코드 (공백으로 구분)</target>
        </trans-unit>
        <trans-unit id="12b91f4b2fdb83ac763b8cafa1036c7a25134e94" translate="yes" xml:space="preserve">
          <source>one or more codes (separated by spaces) that, taken in order, give the code points for the lower case of</source>
          <target state="translated">순서대로 취한 소문자에 대한 코드 포인트를 제공하는 하나 이상의 코드 (공백으로 구분)</target>
        </trans-unit>
        <trans-unit id="edf39d66b535f970d0ddd4d19304064131d08b62" translate="yes" xml:space="preserve">
          <source>one or more codes (separated by spaces) that, taken in order, give the code points for the title case of</source>
          <target state="translated">제목 케이스의 코드 포인트를 순서대로 가져 오는 하나 이상의 코드 (공백으로 구분)</target>
        </trans-unit>
        <trans-unit id="9cde4f2d20bfaf27a930b55f27c9b25fac8e1cbb" translate="yes" xml:space="preserve">
          <source>one or more codes (separated by spaces) that, taken in order, give the code points for the upper case of</source>
          <target state="translated">대문자로 된 코드 포인트를 순서대로 가져 오는 하나 이상의 코드 (공백으로 구분)</target>
        </trans-unit>
        <trans-unit id="40f4a4b5d032e6173a1ab36bbc3ab8240a34735a" translate="yes" xml:space="preserve">
          <source>one or more of:</source>
          <target state="translated">다음 중 하나 이상 :</target>
        </trans-unit>
        <trans-unit id="d00f91ed53429005dd5f421c3d9f88f00adb1bfe" translate="yes" xml:space="preserve">
          <source>one restarts iteration. Each hash or array has its own internal iterator, accessed by &lt;code&gt;&lt;a href=&quot;each&quot;&gt;each&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;values&quot;&gt;values&lt;/a&gt;&lt;/code&gt;. The iterator is implicitly reset when &lt;code&gt;&lt;a href=&quot;each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; has reached the end as just described; it can be explicitly reset by calling &lt;code&gt;&lt;a href=&quot;keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;values&quot;&gt;values&lt;/a&gt;&lt;/code&gt; on the hash or array. If you add or delete a hash's elements while iterating over it, the effect on the iterator is unspecified; for example, entries may be skipped or duplicated--so don't do that. Exception: It is always safe to delete the item most recently returned by &lt;code&gt;&lt;a href=&quot;each&quot;&gt;each()&lt;/a&gt;&lt;/code&gt;, so the following code works properly:</source>
          <target state="translated">하나는 반복을 다시 시작합니다. 각 해시 또는 배열에는 &lt;code&gt;&lt;a href=&quot;each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;values&quot;&gt;values&lt;/a&gt;&lt;/code&gt; 액세스되는 자체 내부 반복자가 있습니다 . 반복자는 &lt;code&gt;&lt;a href=&quot;each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; 설명한대로 끝에 도달하면 암시 적으로 재설정됩니다 . 해시 또는 배열에서 &lt;code&gt;&lt;a href=&quot;keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;values&quot;&gt;values&lt;/a&gt;&lt;/code&gt; 을 호출하여 명시 적으로 재설정 할 수 있습니다 . 반복하는 동안 해시 요소를 추가하거나 삭제하면 반복자에 대한 영향은 지정되지 않습니다. 예를 들어, 항목을 건너 뛰거나 복제 할 수 있으므로 그렇게하지 마십시오. 예외 : &lt;code&gt;&lt;a href=&quot;each&quot;&gt;each()&lt;/a&gt;&lt;/code&gt; 에서 가장 최근에 반환 한 항목을 삭제하는 것이 항상 안전 하므로 다음 코드가 올바르게 작동합니다.</target>
        </trans-unit>
        <trans-unit id="503f89f9f1c893433bd525f3ac4fbb11a5dc11fe" translate="yes" xml:space="preserve">
          <source>one restarts iteration. Each hash or array has its own internal iterator, accessed by &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt;. The iterator is implicitly reset when &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; has reached the end as just described; it can be explicitly reset by calling &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt; on the hash or array. If you add or delete a hash's elements while iterating over it, the effect on the iterator is unspecified; for example, entries may be skipped or duplicated--so don't do that. Exception: It is always safe to delete the item most recently returned by &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each()&lt;/a&gt;&lt;/code&gt;, so the following code works properly:</source>
          <target state="translated">하나는 반복을 다시 시작합니다. 각 해시 또는 배열에는 &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt; 액세스되는 자체 내부 반복자가 있습니다 . 반복자는 &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; 설명한대로 끝에 도달하면 암시 적으로 재설정됩니다 . 해시 또는 배열에서 &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt; 을 호출하여 명시 적으로 재설정 할 수 있습니다 . 반복하는 동안 해시 요소를 추가하거나 삭제하면 반복자에 대한 영향은 지정되지 않습니다. 예를 들어, 항목을 건너 뛰거나 복제 할 수 있으므로 그렇게하지 마십시오. 예외 : &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each()&lt;/a&gt;&lt;/code&gt; 에서 가장 최근에 반환 한 항목을 삭제하는 것이 항상 안전 하므로 다음 코드가 올바르게 작동합니다.</target>
        </trans-unit>
        <trans-unit id="debc471dc6c46b803133236a009b6de39d2fac1f" translate="yes" xml:space="preserve">
          <source>one special pod section</source>
          <target state="translated">하나의 특수 포드 섹션</target>
        </trans-unit>
        <trans-unit id="1df86dea6e2d93455f07ab964c01ee6459298ad8" translate="yes" xml:space="preserve">
          <source>one specific instance</source>
          <target state="translated">하나의 특정 사례</target>
        </trans-unit>
        <trans-unit id="7da2382ebf957a4a5fe0428ed2d3c4769ed74cd1" translate="yes" xml:space="preserve">
          <source>one).</source>
          <target state="translated">one).</target>
        </trans-unit>
        <trans-unit id="bb09f8c016f88137bac1c4b2a02e49fc1089bd88" translate="yes" xml:space="preserve">
          <source>oneliner</source>
          <target state="translated">oneliner</target>
        </trans-unit>
        <trans-unit id="f8969a18a0daab6f59b42990613def0b8b6d48eb" translate="yes" xml:space="preserve">
          <source>only</source>
          <target state="translated">only</target>
        </trans-unit>
        <trans-unit id="7ffb2b0865ec5eb38a72fccca5c47a4e31073b9a" translate="yes" xml:space="preserve">
          <source>only if the locale environment variables indicate a UTF-8 locale. This behaviour follows the</source>
          <target state="translated">로케일 환경 변수가 UTF-8 로케일을 나타내는 경우에만. 이 동작은</target>
        </trans-unit>
        <trans-unit id="92f94347d6769a823cbbf7926bf759ca8c2edf84" translate="yes" xml:space="preserve">
          <source>only makes one copy.</source>
          <target state="translated">하나의 사본 만 만듭니다.</target>
        </trans-unit>
        <trans-unit id="08b99eac5b5f289f72c6350b313e7fa47ba287d8" translate="yes" xml:space="preserve">
          <source>only when the calls are executed</source>
          <target state="translated">통화가 실행될 때만</target>
        </trans-unit>
        <trans-unit id="ed9bec0f56e9298dfc4caa5b90e4a00fe4550c6e" translate="yes" xml:space="preserve">
          <source>only without all the typing and with a better interface. Handy for quickly testing an interface.</source>
          <target state="translated">모든 타이핑이없고 더 나은 인터페이스를 제공합니다. 인터페이스를 신속하게 테스트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f872873a102feb7ceedcf478e4c5fc1ff261a848" translate="yes" xml:space="preserve">
          <source>only works on global variables</source>
          <target state="translated">전역 변수에서만 작동합니다</target>
        </trans-unit>
        <trans-unit id="6521a9390b18d28468e6d84426ec7ecdd9f585e3" translate="yes" xml:space="preserve">
          <source>ontrol character.</source>
          <target state="translated">온 트롤 캐릭터.</target>
        </trans-unit>
        <trans-unit id="0083ccc008b422d6ea79a90c85cd6521663baaba" translate="yes" xml:space="preserve">
          <source>op.c</source>
          <target state="translated">op.c</target>
        </trans-unit>
        <trans-unit id="b245f193d9cd17953b5b7a93b893001776b65883" translate="yes" xml:space="preserve">
          <source>op.h</source>
          <target state="translated">op.h</target>
        </trans-unit>
        <trans-unit id="1fd2bb13a23a46937a0910d0fa16d60fde09f1e9" translate="yes" xml:space="preserve">
          <source>op/fork.t</source>
          <target state="translated">op/fork.t</target>
        </trans-unit>
        <trans-unit id="9b71c44123875bbe50a8e4f82b54793e626f87ba" translate="yes" xml:space="preserve">
          <source>op/numconvert.......FAILED tests 1409-1440 op/regexp...........FAILED tests 483, 496 op/regexp_noamp.....FAILED tests 483, 496 pragma/overload.....FAILED tests 152-153, 170-171 pragma/warnings.....FAILED tests 14, 82, 129, 155, 192, 205, 207 lib/bigfloat........FAILED tests 351-352, 355 lib/bigfltpm........FAILED tests 354-355, 358 lib/complex.........FAILED tests 267, 487 lib/dumper..........FAILED tests 43, 45 Failed 11/231 test scripts, 95.24% okay. 57/10595 subtests failed, 99.46% okay.</source>
          <target state="translated">op / numconvert ....... FAILED 테스트 1409-1440 op / regexp ........... FAILED 테스트 483, 496 op / regexp_noamp ..... FAILED 테스트 483, 496 pragma / overload ..... FAILED 테스트 152-153, 170-171 pragma / warnings ..... FAILED 테스트 14, 82, 129, 155, 192, 205, 207 lib / bigfloat ..... FAILED 테스트 351-352, 355 lib / bigfltpm ........ FAILED 테스트 354-355, 358 lib / complex ......... FAILED 테스트 267, 487 lib / dumper ....... ... FAILED 테스트 43, 45 실패한 11/231 테스트 스크립트, 95.24 % 괜찮음. 57/10595 번의 하위 테스트에 실패했으며 99.46 %는 괜찮습니다.</target>
        </trans-unit>
        <trans-unit id="a41f2b8457a177755ad61956139145ac7a89df95" translate="yes" xml:space="preserve">
          <source>op/sprintf test failure</source>
          <target state="translated">op / sprintf 테스트 실패</target>
        </trans-unit>
        <trans-unit id="b6e0201b5ebaf87b15f9a9099bcf84f6fbf1fbc7" translate="yes" xml:space="preserve">
          <source>op/stat.t</source>
          <target state="translated">op/stat.t</target>
        </trans-unit>
        <trans-unit id="4d6442a07fa2c0fb1ab9ccbccf33976ec3338c06" translate="yes" xml:space="preserve">
          <source>op/stat.t test 4 in Solaris</source>
          <target state="translated">Solaris에서 op / stat.t 테스트 4</target>
        </trans-unit>
        <trans-unit id="355add3c5bc6139e3fecd6da90eb4c8576de6306" translate="yes" xml:space="preserve">
          <source>op_comp</source>
          <target state="translated">op_comp</target>
        </trans-unit>
        <trans-unit id="1ed64d9a3d7fa7dbb5ebc091c8bc0d2c0852087c" translate="yes" xml:space="preserve">
          <source>opaque you need to arrange for that yourself. This can be done in a variety of ways, including using &lt;a href=&quot;#Inside-Out-objects&quot;&gt;Inside-Out objects&lt;/a&gt; or modules from CPAN.</source>
          <target state="translated">불투명하게 스스로 준비해야합니다. CPAN의 &lt;a href=&quot;#Inside-Out-objects&quot;&gt;Inside-Out 객체&lt;/a&gt; 또는 모듈 사용을 포함하여 다양한 방법으로 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c6c4b89b8ccf0b9bd80a8afd68f7708852262cac" translate="yes" xml:space="preserve">
          <source>opcode</source>
          <target state="translated">opcode</target>
        </trans-unit>
        <trans-unit id="accb7486fd0968e72e353e6626d9c68909377fd5" translate="yes" xml:space="preserve">
          <source>opcode dispatcher</source>
          <target state="translated">opcode 디스패처</target>
        </trans-unit>
        <trans-unit id="a8ebcb90e6da059a5bb8ce824dccb0e8eb224a78" translate="yes" xml:space="preserve">
          <source>opcode.h</source>
          <target state="translated">opcode.h</target>
        </trans-unit>
        <trans-unit id="116c83833933af351dc1311e1297bb2ee2ad9a75" translate="yes" xml:space="preserve">
          <source>opcode.pl</source>
          <target state="translated">opcode.pl</target>
        </trans-unit>
        <trans-unit id="15d88849d5d40410917264e01f9000626e2ebd55" translate="yes" xml:space="preserve">
          <source>opcodes</source>
          <target state="translated">opcodes</target>
        </trans-unit>
        <trans-unit id="5fc7e38bffe00ca46add89145464a2eaf759d5c2" translate="yes" xml:space="preserve">
          <source>open</source>
          <target state="translated">open</target>
        </trans-unit>
        <trans-unit id="91785881b51155a18ed82f8a8d490a1262258f37" translate="yes" xml:space="preserve">
          <source>open - perl pragma to set default PerlIO layers for input and output</source>
          <target state="translated">입력 및 출력에 대한 기본 PerlIO 레이어를 설정하기위한 open-perl pragma</target>
        </trans-unit>
        <trans-unit id="35fdafc26ba7405ee74f10953d32c5993bfdf546" translate="yes" xml:space="preserve">
          <source>open FILEHANDLE</source>
          <target state="translated">FILEHANDLE을 엽니 다</target>
        </trans-unit>
        <trans-unit id="4eeb8ede0cde1006637ac8e4ef970acf487870de" translate="yes" xml:space="preserve">
          <source>open FILEHANDLE,EXPR</source>
          <target state="translated">FILEHANDLE, EXPR 열기</target>
        </trans-unit>
        <trans-unit id="366e49368351deedccd7e31414d571af90f2076e" translate="yes" xml:space="preserve">
          <source>open FILEHANDLE,MODE,EXPR</source>
          <target state="translated">FILEHANDLE, MODE, EXPR을 엽니 다.</target>
        </trans-unit>
        <trans-unit id="6678c9596b27c0859cdc94ef19d8e1ef098eb7e2" translate="yes" xml:space="preserve">
          <source>open FILEHANDLE,MODE,EXPR,LIST</source>
          <target state="translated">FILEHANDLE, MODE, EXPR, LIST를 엽니 다.</target>
        </trans-unit>
        <trans-unit id="d96c3d2e48a5837cbc06869758a9e69db28c94b8" translate="yes" xml:space="preserve">
          <source>open FILEHANDLE,MODE,REFERENCE</source>
          <target state="translated">FILEHANDLE, MODE, REFERENCE를 엽니 다</target>
        </trans-unit>
        <trans-unit id="d57e0363ba16dc3d1f5ef459dd27a7675b7de994" translate="yes" xml:space="preserve">
          <source>open pipe</source>
          <target state="translated">열린 파이프</target>
        </trans-unit>
        <trans-unit id="1f14aac1b99319741e1556b2603a913df6969c35" translate="yes" xml:space="preserve">
          <source>open to &lt;code&gt;|-&lt;/code&gt; and &lt;code&gt;-|&lt;/code&gt; are unsupported. (Win32, RISC OS)</source>
          <target state="translated">&lt;code&gt;|-&lt;/code&gt; 및 &lt;code&gt;-|&lt;/code&gt; 에 개방 지원되지 않습니다. (Win32, RISC OS)</target>
        </trans-unit>
        <trans-unit id="a7ae12c497c63a80f6e73005d5f86628dd173204" translate="yes" xml:space="preserve">
          <source>open(2)</source>
          <target state="translated">open(2)</target>
        </trans-unit>
        <trans-unit id="8136402b05748278b04c064f75fa7ea14572af4a" translate="yes" xml:space="preserve">
          <source>open2() does not wait for and reap the child process after it exits. Except for short programs where it's acceptable to let the operating system take care of this, you need to do this yourself. This is normally as simple as calling &lt;code&gt;&lt;a href=&quot;../functions/waitpid&quot;&gt;waitpid&lt;/a&gt; $pid, 0&lt;/code&gt; when you're done with the process. Failing to do this can result in an accumulation of defunct or &quot;zombie&quot; processes. See &lt;a href=&quot;../functions/waitpid&quot;&gt;waitpid&lt;/a&gt; for more information.</source>
          <target state="translated">open2 ()는 자식 프로세스가 종료 된 후 기다리지 않고 다시 가져옵니다. 운영 체제에서이를 처리 할 수있는 짧은 프로그램을 제외하고 직접 수행해야합니다. 프로세스가 끝나면 &lt;code&gt;&lt;a href=&quot;../functions/waitpid&quot;&gt;waitpid&lt;/a&gt; $pid, 0&lt;/code&gt; 을 호출하는 것만 큼 간단 합니다. 이를 수행하지 않으면 기능이 저하되거나 &quot;좀비&quot;프로세스가 누적 될 수 있습니다. 자세한 내용은 &lt;a href=&quot;../functions/waitpid&quot;&gt;waitpid&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b8b205ce7647530962ae0e01a095aee8deb56a8a" translate="yes" xml:space="preserve">
          <source>open2() returns the process ID of the child process. It doesn't return on failure: it just raises an exception matching &lt;code&gt;/^open2:/&lt;/code&gt; . However, &lt;code&gt;&lt;a href=&quot;../functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; failures in the child are not detected. You'll have to trap SIGPIPE yourself.</source>
          <target state="translated">open2 ()는 자식 프로세스의 프로세스 ID를 반환합니다. 실패시 리턴되지 않습니다 . &lt;code&gt;/^open2:/&lt;/code&gt; 일치하는 예외가 발생 합니다. 그러나 하위의 &lt;code&gt;&lt;a href=&quot;../functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; 실패는 감지되지 않습니다. SIGPIPE를 직접 잡아야합니다.</target>
        </trans-unit>
        <trans-unit id="261bf85b6f2873d7ec9ea88e81f1c0123d9c46b4" translate="yes" xml:space="preserve">
          <source>open3() does not wait for and reap the child process after it exits. Except for short programs where it's acceptable to let the operating system take care of this, you need to do this yourself. This is normally as simple as calling &lt;code&gt;&lt;a href=&quot;../functions/waitpid&quot;&gt;waitpid&lt;/a&gt; $pid, 0&lt;/code&gt; when you're done with the process. Failing to do this can result in an accumulation of defunct or &quot;zombie&quot; processes. See &lt;a href=&quot;../functions/waitpid&quot;&gt;waitpid&lt;/a&gt; for more information.</source>
          <target state="translated">open3 ()은 자식 프로세스가 종료 된 후 기다리지 않고 다시 가져옵니다. 운영 체제에서이를 처리 할 수있는 짧은 프로그램을 제외하고 직접 수행해야합니다. 프로세스가 끝나면 &lt;code&gt;&lt;a href=&quot;../functions/waitpid&quot;&gt;waitpid&lt;/a&gt; $pid, 0&lt;/code&gt; 을 호출하는 것만 큼 간단 합니다. 이를 수행하지 않으면 기능이 저하되거나 &quot;좀비&quot;프로세스가 누적 될 수 있습니다. 자세한 내용은 &lt;a href=&quot;../functions/waitpid&quot;&gt;waitpid&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="8250783ebbee91d0bf364656029893316df30363" translate="yes" xml:space="preserve">
          <source>open3() returns the process ID of the child process. It doesn't return on failure: it just raises an exception matching &lt;code&gt;/^open3:/&lt;/code&gt; . However, &lt;code&gt;&lt;a href=&quot;../functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; failures in the child (such as no such file or permission denied), are just reported to CHLD_ERR under Windows and OS/2, as it is not possible to trap them.</source>
          <target state="translated">open3 ()은 자식 프로세스의 프로세스 ID를 반환합니다. 실패시 리턴되지 않습니다 . &lt;code&gt;/^open3:/&lt;/code&gt; 일치하는 예외가 발생 합니다. 그러나 하위 파일의 &lt;code&gt;&lt;a href=&quot;../functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; 실패 (예 : 해당 파일이 없거나 권한이 거부 됨)는 Windows 및 OS / 2에서 트랩 할 수 없으므로 CHLD_ERR에 방금보고됩니다.</target>
        </trans-unit>
        <trans-unit id="f80d57a6d7659b1d759d729845aca74bf843f9b4" translate="yes" xml:space="preserve">
          <source>open_test</source>
          <target state="translated">open_test</target>
        </trans-unit>
        <trans-unit id="0211571d51730b1b934689b77408bbdf58f96435" translate="yes" xml:space="preserve">
          <source>opendir</source>
          <target state="translated">opendir</target>
        </trans-unit>
        <trans-unit id="ec89d5d8a2b9cb96ef452d5df1e4b01f700d0fe8" translate="yes" xml:space="preserve">
          <source>opendir DIRHANDLE,EXPR</source>
          <target state="translated">opendir DIRHANDLE, EXPR</target>
        </trans-unit>
        <trans-unit id="590abaace41bdb1047b7713b47b0a4c3489ca80f" translate="yes" xml:space="preserve">
          <source>opened</source>
          <target state="translated">opened</target>
        </trans-unit>
        <trans-unit id="3c0044d850fc678bf373b459a9eaaed0a1b8322d" translate="yes" xml:space="preserve">
          <source>openhandle</source>
          <target state="translated">openhandle</target>
        </trans-unit>
        <trans-unit id="3922ae1ccbfcf19856caddb1a00d16e4174cd02d" translate="yes" xml:space="preserve">
          <source>openinfo</source>
          <target state="translated">openinfo</target>
        </trans-unit>
        <trans-unit id="832f94bf5aec68f826a3dc63fa5860ab6dc9fc13" translate="yes" xml:space="preserve">
          <source>opening</source>
          <target state="translated">opening</target>
        </trans-unit>
        <trans-unit id="ec6221034ff96728094810fd88e2cdcbdef03d20" translate="yes" xml:space="preserve">
          <source>opens a filehandle to an anonymous temporary file. Also using &lt;code&gt;+&amp;lt;&lt;/code&gt; works for symmetry, but you really should consider writing something to the temporary file first. You will need to seek() to do the reading.</source>
          <target state="translated">익명 임시 파일에 대한 파일 핸들을 엽니 다. 또한 &lt;code&gt;+&amp;lt;&lt;/code&gt; 를 사용하여 대칭으로 작동하지만 먼저 임시 파일에 무언가를 쓰는 것을 고려해야합니다. 읽기를하려면 seek ()가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="0bddbee4aab0d112ef16a3b3a1a6cd8319ee0fd3" translate="yes" xml:space="preserve">
          <source>opens the UTF8-encoded file containing Unicode characters; see &lt;a href=&quot;../perluniintro&quot;&gt;perluniintro&lt;/a&gt;. Note that if layers are specified in the three-argument form, then default layers stored in ${^OPEN} (see &lt;a href=&quot;../perlvar&quot;&gt;perlvar&lt;/a&gt;; usually set by the &lt;b&gt;open&lt;/b&gt; pragma or the switch &lt;b&gt;-CioD&lt;/b&gt;) are ignored. Those layers will also be ignored if you specifying a colon with no name following it. In that case the default layer for the operating system (:raw on Unix, :crlf on Windows) is used.</source>
          <target state="translated">유니 코드 문자를 포함하는 UTF8 인코딩 파일을 엽니 다. &lt;a href=&quot;../perluniintro&quot;&gt;perluniintro를&lt;/a&gt; 참조하십시오 . 레이어가 3 인수 형식으로 지정된 경우 $ {^ OPEN} (기본적 으로 &lt;b&gt;열린&lt;/b&gt; pragma 또는 스위치 &lt;b&gt;-CioD에&lt;/b&gt; 의해 설정된 &lt;a href=&quot;../perlvar&quot;&gt;perlvar&lt;/a&gt; 참조)에 저장된 기본 레이어 는 무시됩니다. 그 뒤에 이름없이 콜론을 지정하면 해당 레이어도 무시됩니다. 이 경우 운영 체제의 기본 계층 (Windows :: raw의 Unix, : crlf)이 사용됩니다.&lt;b&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="6b64df9ee3d1631cfbc6a7da1bd34abe7ff319bb" translate="yes" xml:space="preserve">
          <source>opens the UTF8-encoded file containing Unicode characters; see &lt;a href=&quot;perluniintro&quot;&gt;perluniintro&lt;/a&gt;. Note that if layers are specified in the three-argument form, then default layers stored in ${^OPEN} (see &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt;; usually set by the &lt;b&gt;open&lt;/b&gt; pragma or the switch &lt;b&gt;-CioD&lt;/b&gt;) are ignored. Those layers will also be ignored if you specifying a colon with no name following it. In that case the default layer for the operating system (:raw on Unix, :crlf on Windows) is used.</source>
          <target state="translated">유니 코드 문자를 포함하는 UTF8 인코딩 파일을 엽니 다. &lt;a href=&quot;perluniintro&quot;&gt;perluniintro를&lt;/a&gt; 참조하십시오 . 레이어가 3 인수 형식으로 지정된 경우 $ {^ OPEN} (기본적 으로 &lt;b&gt;열린&lt;/b&gt; pragma 또는 스위치 &lt;b&gt;-CioD에&lt;/b&gt; 의해 설정된 &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt; 참조)에 저장된 기본 레이어 는 무시됩니다. 그 뒤에 이름없이 콜론을 지정하면 해당 레이어도 무시됩니다. 이 경우 운영 체제의 기본 계층 (Windows :: raw의 Unix, : crlf)이 사용됩니다.&lt;b&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="d9b90cf1a40dd198e817c8f753fdcb3e3306b611" translate="yes" xml:space="preserve">
          <source>opens the input and output files for reading (creating the appropriate filehandles)</source>
          <target state="translated">읽기 위해 입력 및 출력 파일을 엽니 다 (적절한 파일 핸들 작성)</target>
        </trans-unit>
        <trans-unit id="bd1576508968db15b26cec8c920e0afdee5f583c" translate="yes" xml:space="preserve">
          <source>operands also pass the test,</source>
          <target state="translated">피연산자도 테스트를 통과합니다.</target>
        </trans-unit>
        <trans-unit id="248a40f40660485d034295a5e3a4b8e5ff7493d5" translate="yes" xml:space="preserve">
          <source>operate on an object or class.</source>
          <target state="translated">객체 또는 클래스에서 작동합니다.</target>
        </trans-unit>
        <trans-unit id="34ed3fdc5e39fccaa21ac406e1d8726ddc8d8520" translate="yes" xml:space="preserve">
          <source>operation possible on a complex number that is the identity for real numbers is called the</source>
          <target state="translated">실수에 대한 신원 인 복소수에서 가능한 연산을</target>
        </trans-unit>
        <trans-unit id="e8c39c4d7e6f77fc86f5b18ff3d27b6831259e4f" translate="yes" xml:space="preserve">
          <source>operations</source>
          <target state="translated">operations</target>
        </trans-unit>
        <trans-unit id="c328882437b7a641f7d334940393898133c2beed" translate="yes" xml:space="preserve">
          <source>operations in Perl. Search and replace is accomplished with the &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; operator. The general form is &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s/regexp/replacement/modifiers&lt;/a&gt;&lt;/code&gt;, with everything we know about regexps and modifiers applying in this case as well. The &lt;code&gt;replacement&lt;/code&gt; is a Perl double-quoted string that replaces in the string whatever is matched with the &lt;code&gt;regexp&lt;/code&gt; . The operator &lt;code&gt;=~&lt;/code&gt; is also used here to associate a string with &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt;. If matching against &lt;code&gt;$_&lt;/code&gt; , the &lt;code&gt;$_ =~&lt;/code&gt; can be dropped. If there is a match, &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; returns the number of substitutions made; otherwise it returns false. Here are a few examples:</source>
          <target state="translated">Perl의 운영. 검색 및 교체는 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; 연산자로 수행됩니다 . 일반적인 형식은 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s/regexp/replacement/modifiers&lt;/a&gt;&lt;/code&gt; 이며,이 경우에도 정규 표현식 및 수정 자에 대해 알고있는 모든 내용이 적용됩니다. &lt;code&gt;replacement&lt;/code&gt; 문자열을 대체가과 일치 무엇이든 펄 따옴표 문자열입니다 &lt;code&gt;regexp&lt;/code&gt; . 여기서 연산자 &lt;code&gt;=~&lt;/code&gt; 는 문자열을 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; 에 연결하는 데 사용됩니다 . &lt;code&gt;$_&lt;/code&gt; 와 일치 하면 &lt;code&gt;$_ =~&lt;/code&gt; 를 삭제할 수 있습니다. 일치하는 항목이 있으면 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; 는 대체 횟수를 반환합니다. 그렇지 않으면 false를 반환합니다. 다음은 몇 가지 예입니다.</target>
        </trans-unit>
        <trans-unit id="9a60beb6d0abab6f8581714dd5f19e7494cb2572" translate="yes" xml:space="preserve">
          <source>operator mask</source>
          <target state="translated">연산자 마스크</target>
        </trans-unit>
        <trans-unit id="8c9daa2f7bbcfd6f03dfbdbef040314f3d869901" translate="yes" xml:space="preserve">
          <source>operators are executed, or when a substitution uses the &lt;code&gt;/ee&lt;/code&gt; modifier.</source>
          <target state="translated">연산자가 실행되거나 대체가 &lt;code&gt;/ee&lt;/code&gt; 수정자를 사용할 때 실행됩니다 .</target>
        </trans-unit>
        <trans-unit id="8f60214e8c70f1e5ff45025c4e747d1404dcd735" translate="yes" xml:space="preserve">
          <source>opname</source>
          <target state="translated">opname</target>
        </trans-unit>
        <trans-unit id="c62973cc56845b0e473e9e3c40b6e1f0a84662ef" translate="yes" xml:space="preserve">
          <source>ops</source>
          <target state="translated">ops</target>
        </trans-unit>
        <trans-unit id="87dc0f974280a5bf1b3ed0567282d989ca9f2a76" translate="yes" xml:space="preserve">
          <source>ops - Perl pragma to restrict unsafe operations when compiling</source>
          <target state="translated">ops-컴파일 할 때 안전하지 않은 작업을 제한하는 Perl pragma</target>
        </trans-unit>
        <trans-unit id="81a427bbcb8031f57bd744127cb24f4fd8d8ed64" translate="yes" xml:space="preserve">
          <source>opset</source>
          <target state="translated">opset</target>
        </trans-unit>
        <trans-unit id="0d1a4d8a333d78a7c872e1736c5a438800ed647d" translate="yes" xml:space="preserve">
          <source>optimized away</source>
          <target state="translated">멀리 최적화</target>
        </trans-unit>
        <trans-unit id="17f5b7d50a6353d273e263e2454baa4ee8df88e0" translate="yes" xml:space="preserve">
          <source>optimizer/debugger</source>
          <target state="translated">optimizer/debugger</target>
        </trans-unit>
        <trans-unit id="3de845d64f41a1ad8f22720c4b18e64841dfe425" translate="yes" xml:space="preserve">
          <source>option is ignored if C</source>
          <target state="translated">C이면 옵션이 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="ef2be8f17aeb0cc9ab7a5ff7154143420e7d84d4" translate="yes" xml:space="preserve">
          <source>option to &quot;=over&quot; indicates how far over to indent, generally in ems (where one em is the width of an &quot;M&quot; in the document's base font) or roughly comparable units; if there is no</source>
          <target state="translated">&quot;= over&quot;에 대한 옵션은 일반적으로 ems (여기서 하나의 em은 문서의 기본 글꼴에서 &quot;M&quot;의 너비) 또는 대략 비교할 수있는 단위로 들여 쓰기되는 정도를 나타냅니다. 없다면</target>
        </trans-unit>
        <trans-unit id="7c16e1c1c1bb6bab0d1e03cbcda6af01fcd56bd7" translate="yes" xml:space="preserve">
          <source>option, it defaults to four. (And some formatters may just ignore whatever</source>
          <target state="translated">옵션의 기본값은 4입니다. (그리고 일부 포맷터는 무엇이든 무시할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2386486faeeaf4de1663650e700bdb99d730c37b" translate="yes" xml:space="preserve">
          <source>option, this is also for Encode hackers.</source>
          <target state="translated">이 옵션은 Encode 해커 용입니다.</target>
        </trans-unit>
        <trans-unit id="12cb917fa6b139c69bd08293a23c4256c452e570" translate="yes" xml:space="preserve">
          <source>option.</source>
          <target state="translated">option.</target>
        </trans-unit>
        <trans-unit id="f9d27ba6607723ac536e17cbac71eee211242000" translate="yes" xml:space="preserve">
          <source>option. Failed lookups of the form &lt;code&gt;XXX&lt;/code&gt; that match known manpages of the form</source>
          <target state="translated">선택권. 양식의 알려진 맨 페이지와 일치 하는 양식 &lt;code&gt;XXX&lt;/code&gt; 를 조회하지 못했습니다.</target>
        </trans-unit>
        <trans-unit id="771938d3f654db0b20dfec8904aa40d12d3e9986" translate="yes" xml:space="preserve">
          <source>option. To set the right margin, see the</source>
          <target state="translated">선택권. 오른쪽 여백을 설정하려면</target>
        </trans-unit>
        <trans-unit id="48a7b8889e1542650266c14a18c8708488fa1951" translate="yes" xml:space="preserve">
          <source>optional</source>
          <target state="translated">optional</target>
        </trans-unit>
        <trans-unit id="cb2d2693781d65487c9f47d5c6caf15222ca091a" translate="yes" xml:space="preserve">
          <source>optional when just naming the subroutine, such as when it's used as an argument to defined() or undef(). Nor is it optional when you want to do an indirect subroutine call with a subroutine name or reference using the &lt;code&gt;&amp;amp;$subref()&lt;/code&gt; or &lt;code&gt;&amp;amp;{$subref}()&lt;/code&gt; constructs, although the &lt;code&gt;$subref-&amp;gt;()&lt;/code&gt; notation solves that problem. See &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt; for more about all that.</source>
          <target state="translated">서브 루틴의 이름을 지정할 때와 같이 선택적입니다 (예 : defined () 또는 undef ()의 인수로 사용되는 경우). &lt;code&gt;&amp;amp;$subref()&lt;/code&gt; &lt;code&gt;$subref-&amp;gt;()&lt;/code&gt; 표기법으로 문제를 해결할 수 있지만 &amp;amp; $ subref () 또는 &lt;code&gt;&amp;amp;{$subref}()&lt;/code&gt; 구문을 사용하여 서브 루틴 이름 또는 참조를 사용하여 간접 서브 루틴 호출을 수행하려는 경우에도 선택 사항 이 아닙니다. 이에 대한 자세한 내용은 &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e16aba208ac3bd796bf084813e352a09e6752b5a" translate="yes" xml:space="preserve">
          <source>optional. Rather, just take the most recent copy of</source>
          <target state="translated">선택 과목. 오히려 가장 최근의 사본을 가져 가십시오.</target>
        </trans-unit>
        <trans-unit id="37c43fbbe7ed57696a89d1b1033d50314f19665e" translate="yes" xml:space="preserve">
          <source>optionally supplies a &lt;code&gt;&lt;a href=&quot;functions/continue&quot;&gt;continue&lt;/a&gt;&lt;/code&gt; block that operates as a second half of the body. All of these optree inputs are consumed by this function and become part of the constructed op tree.</source>
          <target state="translated">선택적으로 본체의 후반으로 작동 하는 &lt;code&gt;&lt;a href=&quot;functions/continue&quot;&gt;continue&lt;/a&gt;&lt;/code&gt; 블록을 제공합니다. 이 optree 입력은 모두이 기능에 의해 소비되며 구성된 op 트리의 일부가됩니다.</target>
        </trans-unit>
        <trans-unit id="03366540d1b7b69625250a0b9b5b64ebcb7d6e34" translate="yes" xml:space="preserve">
          <source>optionally supplies the variable that will be aliased to each item in turn; if null, it defaults to &lt;code&gt;$_&lt;/code&gt; (either lexical or global).</source>
          <target state="translated">선택적으로 각 항목에 별명을 지정할 변수를 차례로 제공합니다. null의 경우, 디폴트는 &lt;code&gt;$_&lt;/code&gt; (어휘 또는 전역)입니다.</target>
        </trans-unit>
        <trans-unit id="513f8de9259fe7658fe14d1352c54ccf070e911f" translate="yes" xml:space="preserve">
          <source>options</source>
          <target state="translated">options</target>
        </trans-unit>
        <trans-unit id="6bce1aa2089c0a0f62f18ffa6a983bdf171f18b9" translate="yes" xml:space="preserve">
          <source>options and</source>
          <target state="translated">옵션 및</target>
        </trans-unit>
        <trans-unit id="835470bacb439d9d9ed5b0fb6adc0d05997c0a0e" translate="yes" xml:space="preserve">
          <source>options.</source>
          <target state="translated">options.</target>
        </trans-unit>
        <trans-unit id="2c5eadf5dab9690ce8259d3e461e5f038933688a" translate="yes" xml:space="preserve">
          <source>optype</source>
          <target state="translated">optype</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="6ee816959bb3d8a111788c7e6eaae5e856f480aa" translate="yes" xml:space="preserve">
          <source>or Configure &lt;code&gt;-D&lt;/code&gt; option) from an uncomputed value.</source>
          <target state="translated">계산되지 않은 값에서 &lt;code&gt;-D&lt;/code&gt; 옵션 구성 )을 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="1ccf4cbac2d29d534ff20bc5e16337064a5f22a5" translate="yes" xml:space="preserve">
          <source>or \g</source>
          <target state="translated">또는 \ g</target>
        </trans-unit>
        <trans-unit id="3927572c45dc7a8d20da56759afcb9b30937e4d2" translate="yes" xml:space="preserve">
          <source>or a</source>
          <target state="translated">또는</target>
        </trans-unit>
        <trans-unit id="6a66ae5e3e41e8711b8c3d3ca848691aa1e56ff1" translate="yes" xml:space="preserve">
          <source>or a &lt;code&gt;Devel::&lt;/code&gt; module) didn't define a &lt;code&gt;DB::sub&lt;/code&gt; routine to be called at the beginning of each ordinary subroutine call.</source>
          <target state="translated">또는 &lt;code&gt;Devel::&lt;/code&gt; 모듈)은 각 일반 서브 루틴 호출이 시작될 때 호출 될 &lt;code&gt;DB::sub&lt;/code&gt; 루틴을 정의하지 않았습니다 .</target>
        </trans-unit>
        <trans-unit id="abf7a103383c83bd3dd64aae13ddd8f4de2cb12d" translate="yes" xml:space="preserve">
          <source>or a &lt;code&gt;Devel::&lt;/code&gt; module) didn't define a routine to be called at the beginning of each statement.</source>
          <target state="translated">또는 &lt;code&gt;Devel::&lt;/code&gt; 모듈)은 각 문의 시작 부분에서 호출 할 루틴을 정의하지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="a527ab5ca307ad8c17611915cb8310fa61efe8f9" translate="yes" xml:space="preserve">
          <source>or a hash or array slice, such as:</source>
          <target state="translated">또는 해시 또는 배열 슬라이스 (예 :</target>
        </trans-unit>
        <trans-unit id="a8d1139b2649f66397c4efd056b4633c4a738f0d" translate="yes" xml:space="preserve">
          <source>or a similar shell). Alternatively, one can use the numeric first argument of the &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; Perl function (see &lt;a href=&quot;http://search.cpan.org/perldoc/OS2::Process&quot;&gt;OS2::Process&lt;/a&gt;).</source>
          <target state="translated">또는 유사한 껍질). 또는 &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; Perl 함수 의 숫자로 된 첫 번째 인수를 사용할 수 있습니다 ( &lt;a href=&quot;http://search.cpan.org/perldoc/OS2::Process&quot;&gt;OS2 :: Process&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="46a9721b9f28f26d45f05a60d2e4b71f6b76313f" translate="yes" xml:space="preserve">
          <source>or a vi clone such as</source>
          <target state="translated">또는 vi 클론과 같은</target>
        </trans-unit>
        <trans-unit id="4049d5e58fb99bbd942a8c0c4c9e2d6e1e6e7d34" translate="yes" xml:space="preserve">
          <source>or about 69 N 89 E, in the frozen wastes of Siberia.</source>
          <target state="translated">또는 시베리아의 냉동 폐기물에서 약 69 N 89 E.</target>
        </trans-unit>
        <trans-unit id="afeae2541b31100db4d70d5befa6e6818cc136ca" translate="yes" xml:space="preserve">
          <source>or alternately</source>
          <target state="translated">또는 교대로</target>
        </trans-unit>
        <trans-unit id="43ea4f7d975ff06ddcd792875b0333c9e5fbd5a2" translate="yes" xml:space="preserve">
          <source>or an empty list.</source>
          <target state="translated">또는 빈 목록.</target>
        </trans-unit>
        <trans-unit id="64c3747b998e7ea9d774b1fd5a1400f0310b6691" translate="yes" xml:space="preserve">
          <source>or as</source>
          <target state="translated">또는</target>
        </trans-unit>
        <trans-unit id="711e92422d3fc267eda1a79f89b140b2de9fd85d" translate="yes" xml:space="preserve">
          <source>or by including the string &lt;code&gt;-MCarp=verbose&lt;/code&gt; in the PERL5OPT environment variable.</source>
          <target state="translated">또는 PERL5OPT 환경 변수에 문자열 &lt;code&gt;-MCarp=verbose&lt;/code&gt; 를 포함하여 .</target>
        </trans-unit>
        <trans-unit id="ca6746af8eab54e741f7178266304f73c1d0071e" translate="yes" xml:space="preserve">
          <source>or by letting automatic decoding and encoding do all the work:</source>
          <target state="translated">또는 자동 디코딩 및 인코딩으로 모든 작업을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="790d38a19fbad90b9f62acd0ae655bbc344fdf17" translate="yes" xml:space="preserve">
          <source>or by skipping the text string part, and going directly from one binary encoding to the other:</source>
          <target state="translated">또는 텍스트 문자열 부분을 건너 뛰고 하나의 이진 인코딩에서 다른 이진 인코딩으로 직접 이동하여 :</target>
        </trans-unit>
        <trans-unit id="67a677faf0603354c76ae7545c46ab7042687628" translate="yes" xml:space="preserve">
          <source>or by using a file containing aliases:</source>
          <target state="translated">또는 별칭이 포함 된 파일을 사용하여 :</target>
        </trans-unit>
        <trans-unit id="45b169667b2745f9a74ec0f9d6a83a6af2b491d0" translate="yes" xml:space="preserve">
          <source>or change your program to explain the messages for you:</source>
          <target state="translated">또는 메시지를 설명하도록 프로그램을 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="60589dcfd20059b91d02a27d51162444b078ff93" translate="yes" xml:space="preserve">
          <source>or else it must be a reference to an array whose first element is one of these four strings, such as &lt;code&gt;[HASH, arguments...]&lt;/code&gt; .</source>
          <target state="translated">또는 &lt;code&gt;[HASH, arguments...]&lt;/code&gt; 와 같이 첫 번째 요소가이 네 문자열 중 하나 인 배열에 대한 참조 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="daeb51dc058afc0ccdd4212b428d430e528eaf6a" translate="yes" xml:space="preserve">
          <source>or equivalent). (Corollary: you can't use Perl from your C program unless Perl has been compiled on your machine, or installed properly--that's why you shouldn't blithely copy Perl executables from machine to machine without also copying the</source>
          <target state="translated">또는 동등한 것). (추천 : Perl이 컴퓨터에 컴파일되거나 제대로 설치되지 않은 경우 C 프로그램에서 Perl을 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="3a99a3df239e15b385e4c55b1e08ea070df0a2e6" translate="yes" xml:space="preserve">
          <source>or equivalent. See &lt;code&gt;INSTALL&lt;/code&gt; for details.</source>
          <target state="translated">또는 동등한 것. 자세한 내용은 &lt;code&gt;INSTALL&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="f87f65818ff86eedc3fa544bf44c00b87aca2e88" translate="yes" xml:space="preserve">
          <source>or equivalently,</source>
          <target state="translated">또는 동등하게</target>
        </trans-unit>
        <trans-unit id="c05fea263798687e5d33b0e050b51c0ff3878676" translate="yes" xml:space="preserve">
          <source>or even</source>
          <target state="translated">또는</target>
        </trans-unit>
        <trans-unit id="8811611fb40abfd0d077152965cb3e770858a375" translate="yes" xml:space="preserve">
          <source>or even a mixture of both as in:</source>
          <target state="translated">또는 다음과 같이 둘 모두의 혼합물 :</target>
        </trans-unit>
        <trans-unit id="76d91182812ba95c37a2f5904322e6dda4b4660e" translate="yes" xml:space="preserve">
          <source>or even just</source>
          <target state="translated">또는 심지어</target>
        </trans-unit>
        <trans-unit id="eb4b9e43d1c59390999b21f7e6df2642f32f4838" translate="yes" xml:space="preserve">
          <source>or even this if you'd like it to be used as either a static or a virtual method.</source>
          <target state="translated">또는 정적 또는 가상 메소드로 사용하려는 경우에도 마찬가지입니다.</target>
        </trans-unit>
        <trans-unit id="232f7c123c4222f9fbfc48968f98b0cccc7021b3" translate="yes" xml:space="preserve">
          <source>or even this, which is basically equivalent:</source>
          <target state="translated">또는 이것조차도 기본적으로 동일합니다.</target>
        </trans-unit>
        <trans-unit id="7006b26f9c8f8d3e063ffcd613fdb2355cbc1ab6" translate="yes" xml:space="preserve">
          <source>or even:</source>
          <target state="translated">또는:</target>
        </trans-unit>
        <trans-unit id="d10c1299b5ce2c74253220f2d661d7fd7ee7a3ec" translate="yes" xml:space="preserve">
          <source>or for deciding between running the tests at all:</source>
          <target state="translated">또는 테스트 실행을 결정하기 위해 :</target>
        </trans-unit>
        <trans-unit id="e51dbf70b7fa6fdc8bfe13770eedfd9badf016ee" translate="yes" xml:space="preserve">
          <source>or for initializing hash references to be used as records:</source>
          <target state="translated">또는 레코드로 사용될 해시 참조를 초기화하는 경우 :</target>
        </trans-unit>
        <trans-unit id="f3a97030c443927e3b5ea9de182b2c1b978ec9d7" translate="yes" xml:space="preserve">
          <source>or for using call-by-named-parameter to complicated functions:</source>
          <target state="translated">또는 call-by-named-parameter를 복잡한 기능에 사용하는 경우 :</target>
        </trans-unit>
        <trans-unit id="0c9156fb9792e2268dd69fbcc549b0bd4b68da8b" translate="yes" xml:space="preserve">
          <source>or from the command line:</source>
          <target state="translated">또는 명령 행에서 :</target>
        </trans-unit>
        <trans-unit id="3ba84565ccf2920308bd9fff1727db650cea7ad1" translate="yes" xml:space="preserve">
          <source>or get the official source from CPAN:</source>
          <target state="translated">또는 CPAN에서 공식 소스를 얻으십시오.</target>
        </trans-unit>
        <trans-unit id="565a10c6a7ff5343468d51121f39b9a652315cec" translate="yes" xml:space="preserve">
          <source>or how about sorted by key:</source>
          <target state="translated">또는 키별로 정렬하는 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="423263b4cf8b2f7f4b5c00e6ddcdd4f162f2df6d" translate="yes" xml:space="preserve">
          <source>or if $ENV{HOME} isn't set and you don't want to set it for some reason, do it the long way.</source>
          <target state="translated">또는 $ ENV {HOME}이 설정되어 있지 않고 어떤 이유로 설정하지 않으려면 먼 길을 가십시오.</target>
        </trans-unit>
        <trans-unit id="0b36ed745bc26f6d98dc18a34167ba460f3f347d" translate="yes" xml:space="preserve">
          <source>or if you have the &quot;env&quot; application you can do (in any shell)</source>
          <target state="translated">또는 &quot;env&quot;애플리케이션이있는 경우 (모든 쉘에서) 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="92fb3356497956ad4a38bfd3264f57194220e552" translate="yes" xml:space="preserve">
          <source>or if you just want to be running at least version, place a statement like this at the top of your program:</source>
          <target state="translated">또는 최소한 버전을 실행하려는 경우 프로그램 맨 위에 다음과 같은 문장을 넣으십시오.</target>
        </trans-unit>
        <trans-unit id="cda3eab5417a7de0a280bde03ecc9a50bfc834df" translate="yes" xml:space="preserve">
          <source>or if you know you have enough memory</source>
          <target state="translated">또는 기억력이 충분하다는 것을 알고 있다면</target>
        </trans-unit>
        <trans-unit id="f027c62753d2503a76263e62acb7698994728513" translate="yes" xml:space="preserve">
          <source>or if you meant this</source>
          <target state="translated">또는 당신이 이것을 의미한다면</target>
        </trans-unit>
        <trans-unit id="8315595eeb6eda0505ae3b6e9540fe368f6d76f0" translate="yes" xml:space="preserve">
          <source>or insert multiple css sources:</source>
          <target state="translated">또는 여러 CSS 소스를 삽입하십시오.</target>
        </trans-unit>
        <trans-unit id="51ca71dd1868d4b3473a6fa8758115fadb0d1c9b" translate="yes" xml:space="preserve">
          <source>or it can be something else.</source>
          <target state="translated">아니면 다른 것일 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="924188c47328fcb9a14794673175eac24f4c88a8" translate="yes" xml:space="preserve">
          <source>or its equivalent. Shell wildcards, pipes, and redirections will be honored. The collected standard output of the command is returned; standard error is unaffected. In scalar context, it comes back as a single (potentially multi-line) string, or &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if the command failed. In list context, returns a list of lines (however you've defined lines with &lt;code&gt;$/&lt;/code&gt; or &lt;code&gt;$INPUT_RECORD_SEPARATOR&lt;/code&gt; ), or an empty list if the command failed.</source>
          <target state="translated">또는 동등한 것. 쉘 와일드 카드, 파이프 및 리디렉션이 적용됩니다. 명령의 수집 된 표준 출력이 리턴됩니다. 표준 오류는 영향을받지 않습니다. 스칼라 컨텍스트에서는 단일 (잠재적으로 여러 줄) 문자열로 돌아 오거나 명령이 실패하면 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 입니다. 목록 컨텍스트에서 행 목록 ( &lt;code&gt;$/&lt;/code&gt; 또는 &lt;code&gt;$INPUT_RECORD_SEPARATOR&lt;/code&gt; 하여 행을 정의 했음 ) 또는 명령이 실패한 경우 빈 목록을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="9b19ed69b186a563ad451d736069071d1743c389" translate="yes" xml:space="preserve">
          <source>or just</source>
          <target state="translated">아니면 그냥</target>
        </trans-unit>
        <trans-unit id="fe3ccf04f0a9e28f47a5c223582f533ad10d8d31" translate="yes" xml:space="preserve">
          <source>or later suitable for running the script to determine inc_version_list.</source>
          <target state="translated">나중에 inc_version_list를 결정하기 위해 스크립트를 실행하는 데 적합합니다.</target>
        </trans-unit>
        <trans-unit id="a85e2ae50f577c98fa6a9b68b3e5789f88e1e436" translate="yes" xml:space="preserve">
          <source>or latest versions of</source>
          <target state="translated">또는 최신 버전</target>
        </trans-unit>
        <trans-unit id="16b129b2241854832e528aa41b8ba222d84ae88b" translate="yes" xml:space="preserve">
          <source>or list current aliases.</source>
          <target state="translated">또는 현재 별명을 나열하십시오.</target>
        </trans-unit>
        <trans-unit id="761c290d9bef717c96b7bcba4a2937e398dc355b" translate="yes" xml:space="preserve">
          <source>or maybe even this. Notice the inner loop.</source>
          <target state="translated">아니면 이것조차도. 내부 루프를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="95418ae4c998bec1ba68e7e4fd508f9df1f2394c" translate="yes" xml:space="preserve">
          <source>or maybe something like</source>
          <target state="translated">또는 아마도</target>
        </trans-unit>
        <trans-unit id="143fd13e1f12374bb9d15cfd2bfd15943bf9638c" translate="yes" xml:space="preserve">
          <source>or modify it</source>
          <target state="translated">또는 수정</target>
        </trans-unit>
        <trans-unit id="fede30d067e948f0b1df282d890c3f9b28c88f04" translate="yes" xml:space="preserve">
          <source>or more</source>
          <target state="translated">이상</target>
        </trans-unit>
        <trans-unit id="c7d8ef9fc22706ae77f648a934fdacf75e31bd66" translate="yes" xml:space="preserve">
          <source>or more safely,</source>
          <target state="translated">더 안전하게</target>
        </trans-unit>
        <trans-unit id="36125f83d36a056ddfa1bace5307e81778bd878e" translate="yes" xml:space="preserve">
          <source>or more succinctly</source>
          <target state="translated">간결하게</target>
        </trans-unit>
        <trans-unit id="e0539aa9179d9a9e4d4e1425d2c26f6fa495fceb" translate="yes" xml:space="preserve">
          <source>or perhaps as a real reference, like this:</source>
          <target state="translated">또는 다음과 같이 실제 참조로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7fd2a3610381ee02e0e3ffcc103600d48306230c" translate="yes" xml:space="preserve">
          <source>or perhaps just</source>
          <target state="translated">아니면 아마도</target>
        </trans-unit>
        <trans-unit id="be946ad7db0fc519a1b8c87df1f486559429a913" translate="yes" xml:space="preserve">
          <source>or possibly any newer version.</source>
          <target state="translated">또는 최신 버전 일 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="f091e64c511cbf8513f41494ec2d027a4a21a03e" translate="yes" xml:space="preserve">
          <source>or prefix1 prefix2</source>
          <target state="translated">또는 prefix1 prefix2</target>
        </trans-unit>
        <trans-unit id="9532d35394200cec70cb444b8462fa007241372d" translate="yes" xml:space="preserve">
          <source>or programmatically via the &lt;code&gt;Config&lt;/code&gt; module:</source>
          <target state="translated">또는 &lt;code&gt;Config&lt;/code&gt; 모듈을 통해 프로그래밍 방식으로 :</target>
        </trans-unit>
        <trans-unit id="cfd4b545340573a2aecae907c7aead87414a1faa" translate="yes" xml:space="preserve">
          <source>or re-run</source>
          <target state="translated">또는 다시 실행</target>
        </trans-unit>
        <trans-unit id="30d087d0fac3f64c2b1fa80edf4e19ed07cf36c1" translate="yes" xml:space="preserve">
          <source>or say</source>
          <target state="translated">또는 말해</target>
        </trans-unit>
        <trans-unit id="95c8dbba1b117ed5111faaa7b7894e01967ad1f1" translate="yes" xml:space="preserve">
          <source>or some such. Your choice:</source>
          <target state="translated">또는 일부. 당신의 선택 :</target>
        </trans-unit>
        <trans-unit id="546993e5171fc96ade32360810ea15023011afad" translate="yes" xml:space="preserve">
          <source>or spaced out a bit:</source>
          <target state="translated">또는 약간 떨어져 있습니다.</target>
        </trans-unit>
        <trans-unit id="68eb7630621d8cb43697d6be7a5bfea1a50c80e1" translate="yes" xml:space="preserve">
          <source>or tell each of your programs to look in that directory with the following:</source>
          <target state="translated">또는 각 프로그램에 다음을 사용하여 해당 디렉토리를 찾도록 지시하십시오.</target>
        </trans-unit>
        <trans-unit id="6f0b2ce24add914e491c80aacf6014cb9e1b7f98" translate="yes" xml:space="preserve">
          <source>or the</source>
          <target state="translated">아니면 그</target>
        </trans-unit>
        <trans-unit id="953d18bc37c73f3e53300de51793308d7b223b15" translate="yes" xml:space="preserve">
          <source>or the end of the buffer.</source>
          <target state="translated">또는 버퍼의 끝.</target>
        </trans-unit>
        <trans-unit id="94f690b85337a4026b5a7deef4ae7f867afbcd40" translate="yes" xml:space="preserve">
          <source>or the inverse map:</source>
          <target state="translated">또는 역도 :</target>
        </trans-unit>
        <trans-unit id="1253f2627c6289545cdb4758fbeb5f27b0000310" translate="yes" xml:space="preserve">
          <source>or the lazier and more convoluted</source>
          <target state="translated">또는 더 화려하고 더 복잡한</target>
        </trans-unit>
        <trans-unit id="8f1da42a4e623bf742d0edd37281375818b30121" translate="yes" xml:space="preserve">
          <source>or the loop implied by split().</source>
          <target state="translated">또는 split ()에 의해 암시 된 루프.</target>
        </trans-unit>
        <trans-unit id="60a0a1a28505caa6a30c3831d546da27adfbf3e0" translate="yes" xml:space="preserve">
          <source>or the midpoint if you know the end points:</source>
          <target state="translated">또는 종점을 알고있는 경우 중간 점 :</target>
        </trans-unit>
        <trans-unit id="63c759d3129993622811ef91715ecc9cfb5b6386" translate="yes" xml:space="preserve">
          <source>or this if false</source>
          <target state="translated">또는 이것이 거짓 인 경우</target>
        </trans-unit>
        <trans-unit id="53cf26e91fa509e97555428c86572d99948c5513" translate="yes" xml:space="preserve">
          <source>or this:</source>
          <target state="translated">아니면 이거:</target>
        </trans-unit>
        <trans-unit id="a3b383675c18e8deefae1c664cd4a155d201313c" translate="yes" xml:space="preserve">
          <source>or to block until something becomes ready just do this</source>
          <target state="translated">또는 준비가 될 때까지 차단하려면이 작업을 수행하십시오</target>
        </trans-unit>
        <trans-unit id="3b2871452f6c2466157d61025dfd2ac49e48240d" translate="yes" xml:space="preserve">
          <source>or to force an anon hash constructor use &lt;code&gt;+{&lt;/code&gt;:</source>
          <target state="translated">또는 Anon 해시 생성자를 강제로 사용하려면 &lt;code&gt;+{&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="17741d371f2e70ba5695e63fc8b37496b07b8456" translate="yes" xml:space="preserve">
          <source>or to generate the whole module with stubs inserted correctly</source>
          <target state="translated">또는 스텁이 올바르게 삽입 된 전체 모듈을 생성</target>
        </trans-unit>
        <trans-unit id="4a12cfe738ab6b8c6be63aabe6f00f91310257b1" translate="yes" xml:space="preserve">
          <source>or to run two pieces of code tests for at least 3 seconds:</source>
          <target state="translated">또는 최소 3 초 동안 두 가지 코드 테스트를 실행하려면 :</target>
        </trans-unit>
        <trans-unit id="e979fdf0e2065be461b5d82dc796248dbd5bc842" translate="yes" xml:space="preserve">
          <source>or to this otherwise:</source>
          <target state="translated">또는 그렇지 않으면 :</target>
        </trans-unit>
        <trans-unit id="f1457c5bd9ebae8518931a380bae502f29095254" translate="yes" xml:space="preserve">
          <source>or under similar names starting with &lt;code&gt;sh&lt;/code&gt; , &lt;code&gt;pdksh&lt;/code&gt; etc.</source>
          <target state="translated">또는 &lt;code&gt;sh&lt;/code&gt; , &lt;code&gt;pdksh&lt;/code&gt; 등으로 시작하는 유사한 이름으로</target>
        </trans-unit>
        <trans-unit id="cd9feccb0c9426ac8459a650d0e61280f9d56741" translate="yes" xml:space="preserve">
          <source>or upload to one of these sites:</source>
          <target state="translated">또는 다음 사이트 중 하나에 업로드하십시오.</target>
        </trans-unit>
        <trans-unit id="2d98d4b6f630a9931536e577e387e6408c675c0e" translate="yes" xml:space="preserve">
          <source>or use its fully qualified name instead.</source>
          <target state="translated">또는 정규화 된 이름을 대신 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="06e4e35f154c1c8f95de458dabe85191fd9445f2" translate="yes" xml:space="preserve">
          <source>or whatever is appropriate for your documentation.</source>
          <target state="translated">또는 문서에 적합한 모든 것.</target>
        </trans-unit>
        <trans-unit id="b074ba272a43f93a5662ce639d17865221894ab7" translate="yes" xml:space="preserve">
          <source>or whatever method you prefer.</source>
          <target state="translated">또는 원하는 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="1b19219d9597b3c70385762de70953605cd16b1a" translate="yes" xml:space="preserve">
          <source>or whatever program is specified in the environment variable &lt;code&gt;RTFREADER&lt;/code&gt; . For example, to specify that RTF files should be opened the same as they are when you double-click them, you would do &lt;code&gt;set RTFREADER=start.exe&lt;/code&gt; in your</source>
          <target state="translated">또는 환경 변수 &lt;code&gt;RTFREADER&lt;/code&gt; 에 지정된 프로그램 . 예를 들어 RTF 파일을 두 번 클릭 할 때와 동일하게 RTF 파일을 열도록 지정하려면 &lt;code&gt;set RTFREADER=start.exe&lt;/code&gt; 를 설정 하십시오.</target>
        </trans-unit>
        <trans-unit id="7cb1b49562016ba76c59c7ec044adaf8cc02dc6c" translate="yes" xml:space="preserve">
          <source>or with:</source>
          <target state="translated">또는 함께 :</target>
        </trans-unit>
        <trans-unit id="4cbe0af63482967cde760f3274006ea94b853fb4" translate="yes" xml:space="preserve">
          <source>or written in the compact form,</source>
          <target state="translated">간결한 형태로 쓰거나</target>
        </trans-unit>
        <trans-unit id="c0c468155c3fada2cf3052a2e936c1c0e8b27498" translate="yes" xml:space="preserve">
          <source>or you can edit</source>
          <target state="translated">또는 편집 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="608155304268b8ccba5d5c5aa860a2aeab995fbc" translate="yes" xml:space="preserve">
          <source>or you can edit the default by saying something like:</source>
          <target state="translated">또는 다음과 같이 말하여 기본값을 편집 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b926bf0539963733a443bcca6a992cf1a6d9b7c4" translate="yes" xml:space="preserve">
          <source>or you can use Bourne shell file-descriptor redirection:</source>
          <target state="translated">또는 Bourne 셸 파일 설명자 리디렉션을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0866f06b2d3f415b0be72d303d1aadc0c7dc018c" translate="yes" xml:space="preserve">
          <source>or your compiler's equivalent to make it easier to spot any unsafe truncations that show up.</source>
          <target state="translated">또는 표시되는 안전하지 않은 잘림을 쉽게 발견 할 수 있도록 컴파일러와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="cf7798f1209a4422c57cc1caeca7bdcdef1c76fd" translate="yes" xml:space="preserve">
          <source>or, because a repeat count &lt;code&gt;*&lt;/code&gt; means &quot;repeat as often as required&quot;, simply</source>
          <target state="translated">또는 반복 횟수 &lt;code&gt;*&lt;/code&gt; 는 &quot;필요한 횟수만큼 반복&quot;을 의미 하기 때문에 간단히</target>
        </trans-unit>
        <trans-unit id="6af916953696b3bd4a55d3707927d6f69995e340" translate="yes" xml:space="preserve">
          <source>or, for zipped modules, type</source>
          <target state="translated">또는 압축 모듈의 경우 다음을 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="6f2ff5de879b11c9244ec76fedbd12aff3349030" translate="yes" xml:space="preserve">
          <source>or, if other non-required fields are allowed, use ARRAY ~~ HASH:</source>
          <target state="translated">또는 필요하지 않은 다른 필드가 허용되면 ARRAY ~~ HASH를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="b0fe6db03f152385c420c069d21ad1cc13775669" translate="yes" xml:space="preserve">
          <source>or, if you want to modify $c instead,</source>
          <target state="translated">또는 대신 $ c를 수정하려면</target>
        </trans-unit>
        <trans-unit id="0f3afb49c8005f210b3fbbbd7fef9fa65a53b2ea" translate="yes" xml:space="preserve">
          <source>or, in most cases,</source>
          <target state="translated">또는 대부분의 경우</target>
        </trans-unit>
        <trans-unit id="5c00cf804a6d504bf6458a96acb844a28ecb8cd7" translate="yes" xml:space="preserve">
          <source>or, more directly,</source>
          <target state="translated">또는 더 직접적으로</target>
        </trans-unit>
        <trans-unit id="1d9ad0addee82809659247e9008e6f9e82aa9000" translate="yes" xml:space="preserve">
          <source>or:</source>
          <target state="translated">or:</target>
        </trans-unit>
        <trans-unit id="39368e12dca7c23b36b1cda458325a542f4a6a26" translate="yes" xml:space="preserve">
          <source>ord</source>
          <target state="translated">ord</target>
        </trans-unit>
        <trans-unit id="f1a4c922a946122edc83e4befc45cffcd61e3ad6" translate="yes" xml:space="preserve">
          <source>ord EXPR</source>
          <target state="translated">ord EXPR</target>
        </trans-unit>
        <trans-unit id="75778f9e0da9791f8741f07489722a3de59a22f0" translate="yes" xml:space="preserve">
          <source>ord,</source>
          <target state="translated">ord,</target>
        </trans-unit>
        <trans-unit id="928a8aef5e29cdc2f849481bfcbcd696dad9f6a2" translate="yes" xml:space="preserve">
          <source>order of arguments</source>
          <target state="translated">논쟁의 순서</target>
        </trans-unit>
        <trans-unit id="3a8f090ac9ccdcf587067875ec832d2cb7999c06" translate="yes" xml:space="preserve">
          <source>order.</source>
          <target state="translated">order.</target>
        </trans-unit>
        <trans-unit id="cf482dad6b7d1e0ae20e2ee9c18fae6da601f1d0" translate="yes" xml:space="preserve">
          <source>orderlib.U</source>
          <target state="translated">orderlib.U</target>
        </trans-unit>
        <trans-unit id="ec10b73d4109575df29dd7fb554a2fcbc4c763bf" translate="yes" xml:space="preserve">
          <source>ordinal</source>
          <target state="translated">ordinal</target>
        </trans-unit>
        <trans-unit id="983dbd0982f7e9b8d0db605ae0ec0a026a181adc" translate="yes" xml:space="preserve">
          <source>ordinary paragraphs, and command paragraphs that produce renderable text, like &quot;=head1&quot;), literal whitespace should generally be considered &quot;insignificant&quot;, in that one literal space has the same meaning as any (nonzero) number of literal spaces, literal newlines, and literal tabs (as long as this produces no blank lines, since those would terminate the paragraph). Pod parsers should compact literal whitespace in each processed paragraph, but may provide an option for overriding this (since some processing tasks do not require it), or may follow additional special rules (for example, specially treating period-space-space or period-newline sequences).</source>
          <target state="translated">&quot;= head1&quot;과 같이 렌더링 가능한 텍스트를 생성하는 일반 단락 및 명령 단락과 같이 리터럴 공백은 일반적으로 &quot;무의미한&quot;것으로 간주되어야합니다. 하나의 리터럴 공간은 0이 아닌 숫자의 리터럴 공백, 리터럴 개행, 리터럴 탭 (이것은 단락을 끝내기 때문에 빈 줄을 만들지 않는 한). 포드 파서는 처리 된 각 단락에서 리터럴 공백을 압축해야하지만이를 무시하는 옵션을 제공하거나 (일부 처리 작업이 필요하지 않기 때문에) 추가 특수 규칙을 따를 수 있습니다 (예 : 특히 기간 간격 또는 기간 처리). 개행 시퀀스).</target>
        </trans-unit>
        <trans-unit id="d73ef92426f2b11dfc4aed4d4bfc41c49ee1087c" translate="yes" xml:space="preserve">
          <source>original</source>
          <target state="translated">original</target>
        </trans-unit>
        <trans-unit id="d18ff89a2698d1ed269d4887d87e9d7ccd3957cc" translate="yes" xml:space="preserve">
          <source>originally</source>
          <target state="translated">originally</target>
        </trans-unit>
        <trans-unit id="025fa3725dc637ef2fd15fc53b109d2d74393789" translate="yes" xml:space="preserve">
          <source>orizontal,</source>
          <target state="translated">orizontal,</target>
        </trans-unit>
        <trans-unit id="cb32867d53aec405cb90768ac7d05864e95a6d86" translate="yes" xml:space="preserve">
          <source>orwant@media.mit.edu</source>
          <target state="translated">orwant@media.mit.edu</target>
        </trans-unit>
        <trans-unit id="50756ebb349529c09c3dffe5c7ea63310f853693" translate="yes" xml:space="preserve">
          <source>orwant@medita.mit.edu</source>
          <target state="translated">orwant@medita.mit.edu</target>
        </trans-unit>
        <trans-unit id="28f3fdbab5bbe5fb4a9eb152b196d75c7c078d1e" translate="yes" xml:space="preserve">
          <source>os2/os2.obj</source>
          <target state="translated">os2/os2.obj</target>
        </trans-unit>
        <trans-unit id="004e616948027e38351472e157df30b54eb5519d" translate="yes" xml:space="preserve">
          <source>os2/perlrexx.cmd</source>
          <target state="translated">os2/perlrexx.cmd</target>
        </trans-unit>
        <trans-unit id="17dffab9f5322786f953b00db404394df886825b" translate="yes" xml:space="preserve">
          <source>os2ish.h</source>
          <target state="translated">os2ish.h</target>
        </trans-unit>
        <trans-unit id="2c310f42636c7810a2e89ddfdf76daa5aff9ed21" translate="yes" xml:space="preserve">
          <source>os_4.0</source>
          <target state="translated">os_4.0</target>
        </trans-unit>
        <trans-unit id="ae779229d8d2279b532d1804339e5084debae282" translate="yes" xml:space="preserve">
          <source>os_4.1</source>
          <target state="translated">os_4.1</target>
        </trans-unit>
        <trans-unit id="d1e9089651b341c5a488755c787f46c3c372e46e" translate="yes" xml:space="preserve">
          <source>os_flavor</source>
          <target state="translated">os_flavor</target>
        </trans-unit>
        <trans-unit id="0383117d5405bfbda4814c3142d87ccd7654107b" translate="yes" xml:space="preserve">
          <source>os_flavor_is</source>
          <target state="translated">os_flavor_is</target>
        </trans-unit>
        <trans-unit id="d0941e68da8f38151ff86a61fc59f7c5cf9fcaa2" translate="yes" xml:space="preserve">
          <source>other</source>
          <target state="translated">other</target>
        </trans-unit>
        <trans-unit id="580bf243b6318f23e7a8c74b53d17983e53a1f5b" translate="yes" xml:space="preserve">
          <source>other language at first, if you're not sure that you've properly abstracted the language-dependent parts of your code.)</source>
          <target state="translated">코드의 언어 종속 부분을 올바르게 추상화했는지 확실하지 않은 경우 처음에 다른 언어를 사용하십시오.)</target>
        </trans-unit>
        <trans-unit id="9882d8d2e6b72e84e79b9358ff63f601b7d62e99" translate="yes" xml:space="preserve">
          <source>other lowercase Greek characters than just those, to match lowercase Greek characters in a regular expression, you could use the pattern &lt;code&gt;/(?:(?=\p{Greek})\p{Lower})+/&lt;/code&gt; (or the &lt;a href=&quot;perlrecharclass#Extended-Bracketed-Character-Classes&quot;&gt;experimental feature&lt;/a&gt;&lt;code&gt;/(?[ \p{Greek} &amp;amp; \p{Lower} ])+/&lt;/code&gt; ).</source>
          <target state="translated">정규 표현식에서 소문자 그리스어 문자와 일치시키기 위해 그 밖의 소문자 그리스어 문자를 &lt;code&gt;/(?:(?=\p{Greek})\p{Lower})+/&lt;/code&gt; (또는 &lt;a href=&quot;perlrecharclass#Extended-Bracketed-Character-Classes&quot;&gt;실험 기능 &lt;/a&gt; &lt;code&gt;/(?[ \p{Greek} &amp;amp; \p{Lower} ])+/&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="9b25599f4fdf8952e71315d8b0596fc24959506f" translate="yes" xml:space="preserve">
          <source>other operators are permitted).</source>
          <target state="translated">다른 운영자는 허용됩니다).</target>
        </trans-unit>
        <trans-unit id="1f74957aa261435e344574cee1f0c525757485e6" translate="yes" xml:space="preserve">
          <source>other operators will be permitted, so you probably don't want to use this method).</source>
          <target state="translated">다른 연산자도 허용되므로이 방법을 사용하고 싶지 않을 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="d37d54f5c2097fa363ee97ad6d9a29d539531af6" translate="yes" xml:space="preserve">
          <source>other than</source>
          <target state="translated">이것 말고도</target>
        </trans-unit>
        <trans-unit id="a771d908c2148cb182a573ce67b6e9b50a754db0" translate="yes" xml:space="preserve">
          <source>other_property</source>
          <target state="translated">other_property</target>
        </trans-unit>
        <trans-unit id="415f8af1ac4472312c944152fc58826ef4db85a4" translate="yes" xml:space="preserve">
          <source>otherlibdirs.U</source>
          <target state="translated">otherlibdirs.U</target>
        </trans-unit>
        <trans-unit id="da0809d8f1d4792759328218e75ac4d59753864e" translate="yes" xml:space="preserve">
          <source>otherwise it's necessary to protect any leading and trailing whitespace:</source>
          <target state="translated">그렇지 않으면 선행 및 후행 공백을 보호해야합니다.</target>
        </trans-unit>
        <trans-unit id="1e92ecda6a43a653582d50575bdd53660d35580d" translate="yes" xml:space="preserve">
          <source>otherwise you get the default layout.</source>
          <target state="translated">그렇지 않으면 기본 레이아웃을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="43bffbafeff1a8bfd1903373b30ef66b461bb215" translate="yes" xml:space="preserve">
          <source>otherwise. It can be considered to be the simplest possible folding for</source>
          <target state="translated">그렇지 않으면. 가장 간단한 접는 것으로 간주 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fbe4a15ae3b5ccc553cc8a9874de229e96ef8595" translate="yes" xml:space="preserve">
          <source>oundary.</source>
          <target state="translated">oundary.</target>
        </trans-unit>
        <trans-unit id="2cd7484bc1b15fccff822cd21eebb9f498794c14" translate="yes" xml:space="preserve">
          <source>our</source>
          <target state="translated">our</target>
        </trans-unit>
        <trans-unit id="b7bba9034098e0740b4aebd0e4215dfc6ed2f8c1" translate="yes" xml:space="preserve">
          <source>our TYPE VARLIST</source>
          <target state="translated">TYPE VARLIST</target>
        </trans-unit>
        <trans-unit id="a661bc91123783f2c05c14617c4e22800010c0f1" translate="yes" xml:space="preserve">
          <source>our TYPE VARLIST : ATTRS</source>
          <target state="translated">TYPE VARLIST : ATTRS</target>
        </trans-unit>
        <trans-unit id="ee1d858c2d1a192e8ab38052515bade9ed307ea4" translate="yes" xml:space="preserve">
          <source>our VARLIST</source>
          <target state="translated">우리의 VARLIST</target>
        </trans-unit>
        <trans-unit id="7b647c574b1426e5aec2e726513a2df2aca4b509" translate="yes" xml:space="preserve">
          <source>our VARLIST : ATTRS</source>
          <target state="translated">우리의 배리스터 : 공격</target>
        </trans-unit>
        <trans-unit id="7a6ba752340af1364f4e493327676b25cba6283d" translate="yes" xml:space="preserve">
          <source>our use of the &lt;code&gt;&lt;a href=&quot;../functions/abs&quot;&gt;abs&lt;/a&gt;&lt;/code&gt; notation for the norm.</source>
          <target state="translated">우리 는 표준 에 대한 &lt;code&gt;&lt;a href=&quot;../functions/abs&quot;&gt;abs&lt;/a&gt;&lt;/code&gt; 표기법을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="b06b51ed0fa951ec4ba42d400785777dc712952f" translate="yes" xml:space="preserve">
          <source>ourstash</source>
          <target state="translated">ourstash</target>
        </trans-unit>
        <trans-unit id="f4800df8d1bc61fc95220645938cd65532a64067" translate="yes" xml:space="preserve">
          <source>out</source>
          <target state="translated">out</target>
        </trans-unit>
        <trans-unit id="1f075b6c11a912029ad0c0152dec0b10de1c0625" translate="yes" xml:space="preserve">
          <source>out of the directory before letting the object go out of scope.</source>
          <target state="translated">개체가 범위를 벗어나기 전에 디렉터리에서</target>
        </trans-unit>
        <trans-unit id="0bee310e09a7bbdaadc93317c0850bc2c411a5b5" translate="yes" xml:space="preserve">
          <source>out of the directory first before calling C</source>
          <target state="translated">C를 호출하기 전에 먼저 디렉토리에서</target>
        </trans-unit>
        <trans-unit id="69950f2437eff275fbeaf77cd1fc58816b298b0f" translate="yes" xml:space="preserve">
          <source>out to get you. The pragmatic approach was to say &quot;I know the risks, but prefer the convenience&quot;, and to do anything you wanted in your signal handler, and be prepared to clean up core dumps now and again.</source>
          <target state="translated">당신을 얻을 수 있습니다. 실용적인 접근 방식은 &quot;위험을 알고 있지만 편의를 선호합니다&quot;라고 말하고 신호 처리기에서 원하는 모든 작업을 수행하고 코어 덤프를 몇 번이고 정리할 수 있도록 준비하는 것이 었습니다.</target>
        </trans-unit>
        <trans-unit id="a97dcbfa775de4ede170f59d94dd0415c6efb332" translate="yes" xml:space="preserve">
          <source>out, but see &lt;a href=&quot;../ipc/open2&quot;&gt;IPC::Open2&lt;/a&gt;, &lt;a href=&quot;../ipc/open3&quot;&gt;IPC::Open3&lt;/a&gt;, and &lt;a href=&quot;../perlipc#Bidirectional-Communication-with-Another-Process&quot;&gt;Bidirectional Communication with Another Process in perlipc&lt;/a&gt; for alternatives.)</source>
          <target state="translated">&lt;a href=&quot;../ipc/open2&quot;&gt;IPC :: Open2&lt;/a&gt; , &lt;a href=&quot;../ipc/open3&quot;&gt;IPC :: Open3&lt;/a&gt; 및 대안 &lt;a href=&quot;../perlipc#Bidirectional-Communication-with-Another-Process&quot;&gt;에 대해서는 perlipc에서 다른 프로세스&lt;/a&gt; 와의 양방향 통신을 참조하십시오 .)</target>
        </trans-unit>
        <trans-unit id="0a0062e796623f3ed6671375387b24e44006bafb" translate="yes" xml:space="preserve">
          <source>out, but see &lt;a href=&quot;ipc/open2&quot;&gt;IPC::Open2&lt;/a&gt;, &lt;a href=&quot;ipc/open3&quot;&gt;IPC::Open3&lt;/a&gt;, and &lt;a href=&quot;perlipc#Bidirectional-Communication-with-Another-Process&quot;&gt;Bidirectional Communication with Another Process in perlipc&lt;/a&gt; for alternatives.)</source>
          <target state="translated">&lt;a href=&quot;ipc/open2&quot;&gt;IPC :: Open2&lt;/a&gt; , &lt;a href=&quot;ipc/open3&quot;&gt;IPC :: Open3&lt;/a&gt; 및 대안 &lt;a href=&quot;perlipc#Bidirectional-Communication-with-Another-Process&quot;&gt;에 대해서는 perlipc에서 다른 프로세스&lt;/a&gt; 와의 양방향 통신을 참조하십시오 .)</target>
        </trans-unit>
        <trans-unit id="b1417920698f32a6d3e9b074a0dce5def3f415b9" translate="yes" xml:space="preserve">
          <source>outer</source>
          <target state="translated">outer</target>
        </trans-unit>
        <trans-unit id="5ceb804e9e465259e860c8e0beb8c9bb4e40cbeb" translate="yes" xml:space="preserve">
          <source>outfile</source>
          <target state="translated">outfile</target>
        </trans-unit>
        <trans-unit id="1029d67644815d428f554e390aa966d57a0b29b8" translate="yes" xml:space="preserve">
          <source>output</source>
          <target state="translated">output</target>
        </trans-unit>
        <trans-unit id="e109c021ea31815429030298ad22343ec79d4a6f" translate="yes" xml:space="preserve">
          <source>output fileglob string</source>
          <target state="translated">출력 파일 글로브 문자열</target>
        </trans-unit>
        <trans-unit id="06b0ffd60a8e7a5399a7587000fceee0ae552295" translate="yes" xml:space="preserve">
          <source>outputfile</source>
          <target state="translated">outputfile</target>
        </trans-unit>
        <trans-unit id="e71003c6b7dd4093ce139ac0c51a6ba38d54a439" translate="yes" xml:space="preserve">
          <source>outputs</source>
          <target state="translated">outputs</target>
        </trans-unit>
        <trans-unit id="66248d389b863089e365e17745d58140919f17a6" translate="yes" xml:space="preserve">
          <source>outputs a chart like:</source>
          <target state="translated">다음과 같은 차트를 출력합니다.</target>
        </trans-unit>
        <trans-unit id="f4744dce40223cde6314379671367e50863f19d4" translate="yes" xml:space="preserve">
          <source>outputs something like this:</source>
          <target state="translated">다음과 같이 출력합니다 :</target>
        </trans-unit>
        <trans-unit id="45e18dad51fd9e8869897fba48fa93d118e5e404" translate="yes" xml:space="preserve">
          <source>outside</source>
          <target state="translated">outside</target>
        </trans-unit>
        <trans-unit id="c93db44932c9e4dff32d6a2a95ad9589b12c5f5a" translate="yes" xml:space="preserve">
          <source>outside of string evals.</source>
          <target state="translated">끈의 바깥쪽에 있습니다.</target>
        </trans-unit>
        <trans-unit id="317418d085ee4b03b97d7de1d32a97b00f374183" translate="yes" xml:space="preserve">
          <source>over the range, without creating the entire list. So</source>
          <target state="translated">전체 목록을 만들지 않고 범위 전체에서 그래서</target>
        </trans-unit>
        <trans-unit id="28e0a33bb6b8e31833710f1b4ba6f6f4dfc0acee" translate="yes" xml:space="preserve">
          <source>over these numbers will use all of the significant digits. See &lt;a href=&quot;#Numeric-operators-and-numeric-conversions&quot;&gt;Numeric operators and numeric conversions&lt;/a&gt; for details.)</source>
          <target state="translated">이 숫자를 초과하면 모든 유효 숫자가 사용됩니다. 자세한 내용은 &lt;a href=&quot;#Numeric-operators-and-numeric-conversions&quot;&gt;숫자 연산자 및 숫자 변환&lt;/a&gt; 을 참조하십시오.)</target>
        </trans-unit>
        <trans-unit id="09f1cf27957b5981586c1d920fbdcb52aadb24a9" translate="yes" xml:space="preserve">
          <source>overload</source>
          <target state="translated">overload</target>
        </trans-unit>
        <trans-unit id="dc75e36fdd412488221b34e4be84b27abffad965" translate="yes" xml:space="preserve">
          <source>overload - Package for overloading Perl operations</source>
          <target state="translated">과부하-Perl 조작 과부하를위한 패키지</target>
        </trans-unit>
        <trans-unit id="f22cb1d46654c6b741b7eafe9fb24dd26a0c672a" translate="yes" xml:space="preserve">
          <source>overloading</source>
          <target state="translated">overloading</target>
        </trans-unit>
        <trans-unit id="4084ef9301d4b34ce295baa812ffa9454a1c6b16" translate="yes" xml:space="preserve">
          <source>overloading - perl pragma to lexically control overloading</source>
          <target state="translated">오버로딩-오버로드를 사전에 제어하기위한 perl pragma</target>
        </trans-unit>
        <trans-unit id="d9d628806c226beafc644de97f17b7411027ca00" translate="yes" xml:space="preserve">
          <source>overrules the &lt;code&gt;=&lt;/code&gt; / &lt;code&gt;:&lt;/code&gt; semantics.</source>
          <target state="translated">&lt;code&gt;=&lt;/code&gt; / &lt;code&gt;:&lt;/code&gt; 의미를 무시합니다 .</target>
        </trans-unit>
        <trans-unit id="47c44eaec72d1654cb8c92fc3aa83b369dc4befb" translate="yes" xml:space="preserve">
          <source>owercase,</source>
          <target state="translated">owercase,</target>
        </trans-unit>
        <trans-unit id="516b9783fca517eecbd1d064da2d165310b19759" translate="yes" xml:space="preserve">
          <source>p</source>
          <target state="translated">p</target>
        </trans-unit>
        <trans-unit id="0a9f25a7942ee1caa95f8b3dd20688746a4963eb" translate="yes" xml:space="preserve">
          <source>p.</source>
          <target state="translated">p.</target>
        </trans-unit>
        <trans-unit id="5b2de38a1e482fe9a6fcaf78e6df5eb56dd3b7c4" translate="yes" xml:space="preserve">
          <source>pace,</source>
          <target state="translated">pace,</target>
        </trans-unit>
        <trans-unit id="6acd621280932e6f3f2f8783e06992590b6c7a53" translate="yes" xml:space="preserve">
          <source>pack</source>
          <target state="translated">pack</target>
        </trans-unit>
        <trans-unit id="cc90b137a38deaaa26a842cc0631b4c10a422ed4" translate="yes" xml:space="preserve">
          <source>pack TEMPLATE,LIST</source>
          <target state="translated">템플릿, 목록 팩</target>
        </trans-unit>
        <trans-unit id="582681c2eae02b3f3d399c0c26d321560f6c567a" translate="yes" xml:space="preserve">
          <source>package</source>
          <target state="translated">package</target>
        </trans-unit>
        <trans-unit id="4162278c6f61d1f0e958c351aa3a0e9bbd023a0d" translate="yes" xml:space="preserve">
          <source>package NAMESPACE</source>
          <target state="translated">NAMESPACE 패키지</target>
        </trans-unit>
        <trans-unit id="d994b5c5d4ce2893d8447aaf359ad739e605e8d1" translate="yes" xml:space="preserve">
          <source>package NAMESPACE BLOCK</source>
          <target state="translated">NAMESPACE BLOCK 패키지</target>
        </trans-unit>
        <trans-unit id="5ba62fe998d91f7e1cc9ded8a043bd4b12016110" translate="yes" xml:space="preserve">
          <source>package NAMESPACE VERSION</source>
          <target state="translated">NAMESPACE VERSION 패키지</target>
        </trans-unit>
        <trans-unit id="09ee5da7f8aaac968e398561d20b3bad508faa0c" translate="yes" xml:space="preserve">
          <source>package NAMESPACE VERSION BLOCK</source>
          <target state="translated">NAMESPACE VERSION BLOCK 패키지</target>
        </trans-unit>
        <trans-unit id="173ad9d41ea34a55203c022d820513074af1ce41" translate="yes" xml:space="preserve">
          <source>package qualifier</source>
          <target state="translated">패키지 한정자</target>
        </trans-unit>
        <trans-unit id="4e8fe336018a562fcf9bc6761cdc815cb58317a1" translate="yes" xml:space="preserve">
          <source>package warns of these potential conflicts when used to split a module.</source>
          <target state="translated">패키지는 모듈을 분할하는 데 사용될 때 이러한 잠재적 충돌을 경고합니다.</target>
        </trans-unit>
        <trans-unit id="9608fb62fd28b71fbbcbf72c9fa5c4ff0661f964" translate="yes" xml:space="preserve">
          <source>package), Configure will &lt;b&gt;not&lt;/b&gt; prompt you to install</source>
          <target state="translated">패키지), 구성 메시지를 표시 &lt;b&gt;하지 않습니다&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="94540b93bffccc92bd627b0c677178e6912da40c" translate="yes" xml:space="preserve">
          <source>package.U</source>
          <target state="translated">package.U</target>
        </trans-unit>
        <trans-unit id="842563ad2357b76223eb3655874aa436609558b3" translate="yes" xml:space="preserve">
          <source>packs all of &lt;code&gt;$one&lt;/code&gt; into the first &lt;code&gt;A*&lt;/code&gt; and then all of &lt;code&gt;$two&lt;/code&gt; into the second. This is a general principle: each format character corresponds to one piece of data to be &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt;ed.</source>
          <target state="translated">모든 팩 &lt;code&gt;$one&lt;/code&gt; 처음으로 &lt;code&gt;A*&lt;/code&gt; 후 모두 &lt;code&gt;$two&lt;/code&gt; 번째로. 이것은 일반적인 원칙이다 : 하나의 데이터에 각 형식의 문자 대응은 할 &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; 에디션.</target>
        </trans-unit>
        <trans-unit id="e2642337abccbef1edfb23ec38f54369c7a73116" translate="yes" xml:space="preserve">
          <source>page for &lt;code&gt;pthread_create&lt;/code&gt; to determine the actual cause for the failure.</source>
          <target state="translated">실패의 실제 원인을 판별하려면 &lt;code&gt;pthread_create&lt;/code&gt; 페이지를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="93344d155d8e91923091a364d4b6fbe2d52b8082" translate="yes" xml:space="preserve">
          <source>pagenumber</source>
          <target state="translated">pagenumber</target>
        </trans-unit>
        <trans-unit id="cd6ad71def44ef848a8a9c5831408456a2b1d0f6" translate="yes" xml:space="preserve">
          <source>pager.U</source>
          <target state="translated">pager.U</target>
        </trans-unit>
        <trans-unit id="14d2b5230d0afdc6a9a932a046feff8c36969c00" translate="yes" xml:space="preserve">
          <source>pages.</source>
          <target state="translated">pages.</target>
        </trans-unit>
        <trans-unit id="6bc71dc295bc26b2999b5ab32406b56d5aff18f9" translate="yes" xml:space="preserve">
          <source>pairfirst</source>
          <target state="translated">pairfirst</target>
        </trans-unit>
        <trans-unit id="de41e73aa3fd7620649ac6046aa48a208e2cda3c" translate="yes" xml:space="preserve">
          <source>pairgrep</source>
          <target state="translated">pairgrep</target>
        </trans-unit>
        <trans-unit id="603518b3740dd75976ed555141e9d6edabfa0376" translate="yes" xml:space="preserve">
          <source>pairkeys</source>
          <target state="translated">pairkeys</target>
        </trans-unit>
        <trans-unit id="e6c3e599a3ee7340b2352bf4178d3b1e775e7714" translate="yes" xml:space="preserve">
          <source>pairmap</source>
          <target state="translated">pairmap</target>
        </trans-unit>
        <trans-unit id="5e0327f3ea73cf88b0f10d01c7514331e769140a" translate="yes" xml:space="preserve">
          <source>pairs</source>
          <target state="translated">pairs</target>
        </trans-unit>
        <trans-unit id="2e41a08dc9d9cc9130d3083ed05cadfbf9b2e1d0" translate="yes" xml:space="preserve">
          <source>pairs)</source>
          <target state="translated">pairs)</target>
        </trans-unit>
        <trans-unit id="fa6c6466c15c255620d530fbd745a6e6a45ac793" translate="yes" xml:space="preserve">
          <source>pairs, with which to initialize the struct. If no initializer is specified for a particular element, its default initialization is performed instead. Initializers for non-existent elements are silently ignored.</source>
          <target state="translated">구조체를 초기화하는 데 사용됩니다. 특정 요소에 대해 초기화자가 지정되지 않은 경우 기본 초기화가 대신 수행됩니다. 존재하지 않는 요소의 이니셜 라이저는 자동으로 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="5e1787c9df2ec55074ecf5202c410db4a685687d" translate="yes" xml:space="preserve">
          <source>pairs.</source>
          <target state="translated">pairs.</target>
        </trans-unit>
        <trans-unit id="726b48b44f6e54e22cb91d1f9717bc41a183a27a" translate="yes" xml:space="preserve">
          <source>pairvalues</source>
          <target state="translated">pairvalues</target>
        </trans-unit>
        <trans-unit id="f416747c2f302b11d2360559f101e49353e88038" translate="yes" xml:space="preserve">
          <source>paragraph</source>
          <target state="translated">paragraph</target>
        </trans-unit>
        <trans-unit id="df06651788c884556a0b4b290fb40475ec9a45ba" translate="yes" xml:space="preserve">
          <source>param</source>
          <target state="translated">param</target>
        </trans-unit>
        <trans-unit id="5ff8108c828a28f807a064497e125d84b47779d3" translate="yes" xml:space="preserve">
          <source>param to &lt;a href=&quot;#new&quot;&gt;new&lt;/a&gt;. Before you start writing one, read through &lt;a href=&quot;parser/iteratorfactory&quot;&gt;TAP::Parser::IteratorFactory&lt;/a&gt; to get a feel for how the system works first.</source>
          <target state="translated">&lt;a href=&quot;#new&quot;&gt;새로운&lt;/a&gt; 매개 변수 . 하나를 작성하기 전에 &lt;a href=&quot;parser/iteratorfactory&quot;&gt;TAP :: Parser :: IteratorFactory&lt;/a&gt; 를 통해 시스템이 어떻게 작동하는지 살펴보십시오.</target>
        </trans-unit>
        <trans-unit id="b440b14268b52ba00f71195ca5b8a4a69b9cb4cb" translate="yes" xml:space="preserve">
          <source>parameter can take on.</source>
          <target state="translated">매개 변수를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ec6cf9ec3d2d8bc43a901f2008be806e4613f9b6" translate="yes" xml:space="preserve">
          <source>parameter for the rpcb_gettime() XSUB can be optional so the ellipsis can be used to indicate that the XSUB will take a variable number of parameters. Perl should be able to call this XSUB with either of the following statements.</source>
          <target state="translated">rpcb_gettime () XSUB의 매개 변수는 선택적 일 수 있으므로 생략 부호를 사용하여 XSUB가 가변적 인 수의 매개 변수를 취함을 표시 할 수 있습니다. Perl은 다음 명령문 중 하나를 사용하여이 XSUB를 호출 할 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="f775bac981a374c78706db2bc270fd3bd3491c93" translate="yes" xml:space="preserve">
          <source>parameter is equivalent to an</source>
          <target state="translated">매개 변수는</target>
        </trans-unit>
        <trans-unit id="2a3c3b750b466e9ebb54f29bc744e75a024cfb6c" translate="yes" xml:space="preserve">
          <source>parameter is identical to &lt;a href=&quot;#XopENTRY&quot;&gt;XopENTRY&lt;/a&gt;.</source>
          <target state="translated">매개 변수는 &lt;a href=&quot;#XopENTRY&quot;&gt;XopENTRY와&lt;/a&gt; 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="e34baaf317eccc519487c1666aedb70de9a15d4a" translate="yes" xml:space="preserve">
          <source>parameter is reserved for future use, and must always be zero.</source>
          <target state="translated">매개 변수는 나중에 사용하기 위해 예약되어 있으며 항상 0이어야합니다.</target>
        </trans-unit>
        <trans-unit id="fe2a1f0c825db06a8cd21e57ce180f887d66eea4" translate="yes" xml:space="preserve">
          <source>parameter is reserved for future use. Currently it is only used by perl internally, so extensions should always pass zero.</source>
          <target state="translated">매개 변수는 나중에 사용하기 위해 예약되어 있습니다. 현재는 내부적으로 perl 만 사용하므로 확장은 항상 0을 통과해야합니다.</target>
        </trans-unit>
        <trans-unit id="d4a126faaf6424fdd42c7afce4c222ae8d200c4a" translate="yes" xml:space="preserve">
          <source>parameter to &lt;a href=&quot;#new&quot;&gt;new&lt;/a&gt; in the future.</source>
          <target state="translated">미래 에 &lt;a href=&quot;#new&quot;&gt;새로운&lt;/a&gt; 매개 변수 .</target>
        </trans-unit>
        <trans-unit id="648d85d4deed6cb9dfdf5959665ccd0d4101b6d1" translate="yes" xml:space="preserve">
          <source>parameter.</source>
          <target state="translated">parameter.</target>
        </trans-unit>
        <trans-unit id="5adb5029e7bfc3891f75108dac7bc219c597322e" translate="yes" xml:space="preserve">
          <source>paren.</source>
          <target state="translated">paren.</target>
        </trans-unit>
        <trans-unit id="ea05869a1d736898968b9ab8365cde49f9181b70" translate="yes" xml:space="preserve">
          <source>paren_names</source>
          <target state="translated">paren_names</target>
        </trans-unit>
        <trans-unit id="d8fd39d0bbdd2dcf322d8b11390a4c5825b11495" translate="yes" xml:space="preserve">
          <source>parent</source>
          <target state="translated">parent</target>
        </trans-unit>
        <trans-unit id="ff6755a77522fc3933ef6093d08c779ce83a8e38" translate="yes" xml:space="preserve">
          <source>parent - Establish an ISA relationship with base classes at compile time</source>
          <target state="translated">parent-컴파일 타임에 기본 클래스와 ISA 관계 설정</target>
        </trans-unit>
        <trans-unit id="0e31ca1b7da68f687e2a6f4ec07aec506ad383bb" translate="yes" xml:space="preserve">
          <source>parent is the parent node of the sibling chain. It may passed as NULL if the splicing doesn't affect the first or last op in the chain.</source>
          <target state="translated">parent는 형제 체인의 부모 노드입니다. 스 플라이 싱이 체인의 첫 번째 또는 마지막 op에 영향을 미치지 않으면 NULL로 전달 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="faa2ef9dbc9183b0d9ae78c7c82ad8891840095e" translate="yes" xml:space="preserve">
          <source>parse a file and return what you think is the ABSTRACT</source>
          <target state="translated">파일을 구문 분석하고 ABSTRACT라고 생각하는 것을 반환하십시오.</target>
        </trans-unit>
        <trans-unit id="5f590c7d343a9b15e367acc3b08a49d2661e4dbf" translate="yes" xml:space="preserve">
          <source>parse-option</source>
          <target state="translated">parse-option</target>
        </trans-unit>
        <trans-unit id="91c72c96414250ce755e3ad0ad051e585c11b50e" translate="yes" xml:space="preserve">
          <source>parse-options</source>
          <target state="translated">parse-options</target>
        </trans-unit>
        <trans-unit id="ce415aefeab81ff95814b9f11e3b82de4d685d00" translate="yes" xml:space="preserve">
          <source>parse-tree storage will not be reclaimed upon destruction!</source>
          <target state="translated">파싱 ​​트리 저장소는 삭제시 회수되지 않습니다!</target>
        </trans-unit>
        <trans-unit id="6984719c3a2e35a63580396e550e498cdd2399cf" translate="yes" xml:space="preserve">
          <source>parse_version() will try to &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; version&lt;/code&gt; before checking for &lt;code&gt;$VERSION&lt;/code&gt; so the following will work.</source>
          <target state="translated">parse_version ()은 &lt;code&gt;$VERSION&lt;/code&gt; 확인하기 전에 &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; version&lt;/code&gt; 을 &lt;a href=&quot;../functions/use&quot;&gt;사용&lt;/a&gt; 하려고 시도 하므로 다음이 작동합니다.</target>
        </trans-unit>
        <trans-unit id="f5bc35f29514424e334588dd6d39ab582523f684" translate="yes" xml:space="preserve">
          <source>parser error</source>
          <target state="translated">파서 오류</target>
        </trans-unit>
        <trans-unit id="3fc88b83767af036ec64f408a5c22693db6e3b76" translate="yes" xml:space="preserve">
          <source>part</source>
          <target state="translated">part</target>
        </trans-unit>
        <trans-unit id="c0b34dce0112b5f40680460ad168607b51c8296c" translate="yes" xml:space="preserve">
          <source>part and &lt;code&gt;b&lt;/code&gt; is the</source>
          <target state="translated">부분과 &lt;code&gt;b&lt;/code&gt; 는</target>
        </trans-unit>
        <trans-unit id="9473d2809a50283d6a8d82f7d7317aaa5f6a0f3e" translate="yes" xml:space="preserve">
          <source>part often mentions some &lt;b&gt;ISO 8859&lt;/b&gt; character set, the Latin codesets. For example, &lt;code&gt;ISO 8859-1&lt;/code&gt; is the so-called &quot;Western European codeset&quot; that can be used to encode most Western European languages adequately. Again, there are several ways to write even the name of that one standard. Lamentably.</source>
          <target state="translated">일부는 종종 &lt;b&gt;ISO 8859&lt;/b&gt; 문자 세트 인 라틴 코드 세트를 언급합니다 . 예를 들어 &lt;code&gt;ISO 8859-1&lt;/code&gt; 은 대부분의 서유럽 언어를 적절히 인코딩하는 데 사용할 수있는 소위 &quot;서유럽 어 코드 세트&quot;입니다. 이 표준의 이름조차도 여러 가지 방법으로 작성할 수 있습니다. 슬프게도.</target>
        </trans-unit>
        <trans-unit id="c27056fd21bb1b55643a8037cb73a8a55e058aa4" translate="yes" xml:space="preserve">
          <source>part. The arithmetic with complex numbers is straightforward. You have to keep track of the real and the imaginary parts, but otherwise the rules used for real numbers just apply:</source>
          <target state="translated">부품. 복소수의 산술은 간단합니다. 실수 부분과 허수 부분을 추적해야하지만 그렇지 않으면 실수에 사용 된 규칙이 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="d59c7c30f318e0676a2678baf0d81567db581d28" translate="yes" xml:space="preserve">
          <source>particular number.</source>
          <target state="translated">특정 번호.</target>
        </trans-unit>
        <trans-unit id="1b1dab5d5a911e0c5d544d4bd26dc22d9d7013ea" translate="yes" xml:space="preserve">
          <source>parts are compatible. If &lt;code&gt;$VERSION&lt;/code&gt; was specified, this is used for the check. If not specified, it defaults to &lt;code&gt;$XS_VERSION // $VERSION&lt;/code&gt; (in the module's namespace)</source>
          <target state="translated">부품이 호환됩니다. &lt;code&gt;$VERSION&lt;/code&gt; 이 지정된 경우 점검에 사용됩니다. 지정하지 않으면 기본값은 &lt;code&gt;$XS_VERSION // $VERSION&lt;/code&gt; (모듈의 네임 스페이스)입니다.</target>
        </trans-unit>
        <trans-unit id="25d9a505460276b1a79e9fe0d18ef1d0dacb7657" translate="yes" xml:space="preserve">
          <source>parts()</source>
          <target state="translated">parts()</target>
        </trans-unit>
        <trans-unit id="9d4e1e23bd5b727046a9e3b4b7db57bd8d6ee684" translate="yes" xml:space="preserve">
          <source>pass</source>
          <target state="translated">pass</target>
        </trans-unit>
        <trans-unit id="2ea0b22663596b61b2d7e9c19949043da6d5fb99" translate="yes" xml:space="preserve">
          <source>pass additional arguments to one of the four commands,</source>
          <target state="translated">네 가지 명령 중 하나에 추가 인수를 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="f75c8236b6f05e3b278bbbcf37c93260dd12e4b1" translate="yes" xml:space="preserve">
          <source>pass. If you need to know whether or not they really passed, check the &lt;code&gt;is_actual_ok&lt;/code&gt; method.</source>
          <target state="translated">통과하다. 실제로 통과했는지 여부를 알아야하는 경우 &lt;code&gt;is_actual_ok&lt;/code&gt; 메소드를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="4fde6e9f74ad8459e01362ffe2ad2ed04374fa4d" translate="yes" xml:space="preserve">
          <source>passwd(1)</source>
          <target state="translated">passwd(1)</target>
        </trans-unit>
        <trans-unit id="59b349d3e78e9b370b6c7df9bb15868dd9c9683e" translate="yes" xml:space="preserve">
          <source>patchlevel.U</source>
          <target state="translated">patchlevel.U</target>
        </trans-unit>
        <trans-unit id="9ff4d953471bbdc14c4d8d5827e3c73443bfde67" translate="yes" xml:space="preserve">
          <source>patchlevel.h</source>
          <target state="translated">patchlevel.h</target>
        </trans-unit>
        <trans-unit id="074aeb9c5551d3b52d26cf3d6568599adbff99f1" translate="yes" xml:space="preserve">
          <source>path1</source>
          <target state="translated">path1</target>
        </trans-unit>
        <trans-unit id="9b5a6faf3901c676f242550856b0d3f8d94c5c8e" translate="yes" xml:space="preserve">
          <source>path2</source>
          <target state="translated">path2</target>
        </trans-unit>
        <trans-unit id="0c6eeceb6e5744cc0a0a7d55d06e7292f43c9f8c" translate="yes" xml:space="preserve">
          <source>paths</source>
          <target state="translated">paths</target>
        </trans-unit>
        <trans-unit id="6f00ba335ef072f881a4c20667ed71b09b664ba7" translate="yes" xml:space="preserve">
          <source>paths. This automatically considers paths specified in the &lt;code&gt;PERL5LIB&lt;/code&gt; environment as this is included in</source>
          <target state="translated">경로. &lt;code&gt;PERL5LIB&lt;/code&gt; 환경에 지정된 경로가 자동으로 고려 됩니다.</target>
        </trans-unit>
        <trans-unit id="3cde9b92a19911ae48e640af7dc5b93e111c1d8f" translate="yes" xml:space="preserve">
          <source>paths. This automatically considers paths specified in the &lt;code&gt;PERL5LIB&lt;/code&gt; environment as this is prepended to</source>
          <target state="translated">경로. &lt;code&gt;PERL5LIB&lt;/code&gt; 환경에 지정된 경로 가 앞에 추가되므로 자동으로 고려 됩니다.</target>
        </trans-unit>
        <trans-unit id="91cc2e927b3bfb1d4477b744f7c70221ddb86ef1" translate="yes" xml:space="preserve">
          <source>pattern</source>
          <target state="translated">pattern</target>
        </trans-unit>
        <trans-unit id="1def414c1bc9c264a71d1656ca8805cb0e244f02" translate="yes" xml:space="preserve">
          <source>pattern code expression</source>
          <target state="translated">패턴 코드 표현</target>
        </trans-unit>
        <trans-unit id="3b712d00ecea2ff77921b67366b74413d10eb58c" translate="yes" xml:space="preserve">
          <source>patterns. If you know the</source>
          <target state="translated">패턴. 당신이 알고 있다면</target>
        </trans-unit>
        <trans-unit id="9aef50df5656d0a94bd71d74452610552695129c" translate="yes" xml:space="preserve">
          <source>pdksh</source>
          <target state="translated">pdksh</target>
        </trans-unit>
        <trans-unit id="b78f07f3d1531ee3f8950920e497011d166189c0" translate="yes" xml:space="preserve">
          <source>per se</source>
          <target state="translated">그 자체</target>
        </trans-unit>
        <trans-unit id="a50334396b6c139469a17f58358aea3c017bc126" translate="yes" xml:space="preserve">
          <source>perform the system call &lt;code&gt;&lt;a href=&quot;../functions/accept&quot;&gt;accept&lt;/a&gt;&lt;/code&gt; on the socket and return a new object. The new object will be created in the same class as the listen socket, unless &lt;code&gt;PKG&lt;/code&gt; is specified. This object can be used to communicate with the client that was trying to connect.</source>
          <target state="translated">소켓 에서 시스템 호출 &lt;code&gt;&lt;a href=&quot;../functions/accept&quot;&gt;accept&lt;/a&gt;&lt;/code&gt; 을 수행하고 새 객체를 반환하십시오. &lt;code&gt;PKG&lt;/code&gt; 를 지정 하지 않으면 청취 객체와 동일한 클래스에 새 객체가 생성 됩니다. 이 오브젝트는 연결하려는 클라이언트와 통신하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="15b94a66acd70379828a529996c8592a6535951b" translate="yes" xml:space="preserve">
          <source>perl</source>
          <target state="translated">perl</target>
        </trans-unit>
        <trans-unit id="a3de5d0c6aa12a4c23c25cba00d1bd32d1dea534" translate="yes" xml:space="preserve">
          <source>perl - The Perl 5 language interpreter</source>
          <target state="translated">perl-Perl 5 언어 통역사</target>
        </trans-unit>
        <trans-unit id="51e299839e10a61efef7076bcafc8e4e05e03517" translate="yes" xml:space="preserve">
          <source>perl -Dxxx</source>
          <target state="translated">펄 -Dxxx</target>
        </trans-unit>
        <trans-unit id="63052a621e2f58698790e79e9c046ba80de63093" translate="yes" xml:space="preserve">
          <source>perl -MO=Xref[,OPTIONS] foo.pl</source>
          <target state="translated">펄 -MO = Xref [, 옵션] foo.pl</target>
        </trans-unit>
        <trans-unit id="aed25d17833823e641e08e9f98356f5b8a7848d8" translate="yes" xml:space="preserve">
          <source>perl -d -V</source>
          <target state="translated">펄 -d -V</target>
        </trans-unit>
        <trans-unit id="8749ce41ccf73ef71d848d0157ef8a4378c79e28" translate="yes" xml:space="preserve">
          <source>perl a new file handle is created (i.e. a reference to a new glob) and associated with the PerlIO * provided. If the read/write state of the PerlIO * is not correct then you may get errors or warnings from when the file handle is used. So if you opened the PerlIO * as &quot;w&quot; it should really be an &lt;code&gt;OutputStream&lt;/code&gt; if open as &quot;r&quot; it should be an &lt;code&gt;InputStream&lt;/code&gt; .</source>
          <target state="translated">perl 새 파일 핸들이 작성되고 (즉, 새 glob에 대한 참조) PerlIO *와 연관됩니다. PerlIO *의 읽기 / 쓰기 상태가 올바르지 않으면 파일 핸들을 사용할 때 오류나 경고가 표시 될 수 있습니다. 이 같은은 PerlIO *을 열었다 그래서 경우 &quot;W&quot;그것은 정말해야 &lt;code&gt;OutputStream&lt;/code&gt; &quot;R&quot;오픈 그것이해야하는 경우 &lt;code&gt;InputStream&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="400e8d07b99f9182f59f1fe26c38b20a6d61deba" translate="yes" xml:space="preserve">
          <source>perl code which needs to be compiled and run at 'require' time, but</source>
          <target state="translated">'필수'시간에 컴파일되고 실행되어야하는 펄 코드</target>
        </trans-unit>
        <trans-unit id="4ac0498d8910b22d841bca89cbf9e33a43474156" translate="yes" xml:space="preserve">
          <source>perl installation, and the new value is not supported by EMX. See &lt;a href=&quot;#PERL_BADLANG&quot;&gt;PERL_BADLANG&lt;/a&gt;.</source>
          <target state="translated">perl 설치 및 새 값은 EMX에서 지원되지 않습니다. &lt;a href=&quot;#PERL_BADLANG&quot;&gt;PERL_BADLANG을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d92a48c8f2b5cd2a5eb3caa092ab1aa56e1c09c3" translate="yes" xml:space="preserve">
          <source>perl library</source>
          <target state="translated">펄 라이브러리</target>
        </trans-unit>
        <trans-unit id="75e7b3bce27a05c9af654c6566fb531b830fbf2b" translate="yes" xml:space="preserve">
          <source>perl needs to call an external program</source>
          <target state="translated">펄은 외부 프로그램을 호출해야합니다</target>
        </trans-unit>
        <trans-unit id="846107395173337edc3a68bff7ae79e0a9c7b8c4" translate="yes" xml:space="preserve">
          <source>perl sets &lt;code&gt;$^X&lt;/code&gt; where possible to a full path by asking the operating system. On FreeBSD the full path of the perl interpreter is found by using &lt;code&gt;sysctl&lt;/code&gt; with &lt;code&gt;KERN_PROC_PATHNAME&lt;/code&gt; if that is supported, else by reading the symlink</source>
          <target state="translated">perl 은 운영 체제에 요청하여 가능한 경우 &lt;code&gt;$^X&lt;/code&gt; 를 전체 경로로 설정합니다. FreeBSD에서는 &lt;code&gt;KERN_PROC_PATHNAME&lt;/code&gt; 과 함께 &lt;code&gt;sysctl&lt;/code&gt; 을 사용하여 perl 인터프리터의 전체 경로를 찾을 수 있습니다 . 그렇지 않으면 symlink를 읽으십시오.</target>
        </trans-unit>
        <trans-unit id="9929f6c4054a94bb5912cc75a6063d9eb9ad328f" translate="yes" xml:space="preserve">
          <source>perl the main difference is that &lt;code&gt;OutputStream&lt;/code&gt; will get the output PerlIO * - which may make a difference on a socket. Like in our example...</source>
          <target state="translated">가장 큰 차이점은 &lt;code&gt;OutputStream&lt;/code&gt; 이 출력 PerlIO *를 얻는다는 것입니다-소켓에 차이를 만들 수 있습니다. 우리의 예 에서처럼 ...</target>
        </trans-unit>
        <trans-unit id="2095b09b7010ab795f406f1c585d3797797bcd5c" translate="yes" xml:space="preserve">
          <source>perl trips up on &quot;&amp;lt;foo&amp;gt;&quot; thinking it's an input redirect. So we use the native Write command instead. Besides, its faster.</source>
          <target state="translated">펄은 &quot;&amp;lt;foo&amp;gt;&quot;로 넘어 가서 입력 리디렉션이라고 생각합니다. 대신 기본 쓰기 명령을 사용합니다. 게다가 더 빠릅니다.</target>
        </trans-unit>
        <trans-unit id="b5894404ab0603bf071fb5bdba27bc40ccda25f6" translate="yes" xml:space="preserve">
          <source>perl would only copy the &quot;abcd&quot; part of the string. That could make a big difference in something like</source>
          <target state="translated">perl은 문자열의 &quot;abcd&quot;부분 만 복사합니다. 그것은 같은 것에 큰 차이를 만들 수 있습니다</target>
        </trans-unit>
        <trans-unit id="4dc3415bcf521689fbae518ac6c5a17adf6af868" translate="yes" xml:space="preserve">
          <source>perl(1)</source>
          <target state="translated">perl(1)</target>
        </trans-unit>
        <trans-unit id="4c3ca3a8b2e26384d66db3e4061146dfbb48d52d" translate="yes" xml:space="preserve">
          <source>perl(1), ExtUtils::CBuilder(3), ExtUtils::MakeMaker(3)</source>
          <target state="translated">perl (1), ExtUtils :: CBuilder (3), ExtUtils :: MakeMaker (3)</target>
        </trans-unit>
        <trans-unit id="3bb338fb950c302764c467514d36672dcb91936d" translate="yes" xml:space="preserve">
          <source>perl(1), Module::Build(3)</source>
          <target state="translated">perl (1), 모듈 :: 빌드 (3)</target>
        </trans-unit>
        <trans-unit id="1daac93eb5df357d60bdfcaf7ef8a280b0e8e9cc" translate="yes" xml:space="preserve">
          <source>perl(1), perldebug(1), perldiag(1), perlport(1), perltrap(1), diff(1), patch(1), dbx(1), gdb(1)</source>
          <target state="translated">perl (1), perldebug (1), perldiag (1), perlport (1), perltrap (1), diff (1), patch (1), dbx (1), gdb (1)</target>
        </trans-unit>
        <trans-unit id="d639c0073deac6659d940e95b46d75c8cbae8362" translate="yes" xml:space="preserve">
          <source>perl(1), perlfunc(1), perltie(1)</source>
          <target state="translated">perl (1), perlfunc (1), perltie (1)</target>
        </trans-unit>
        <trans-unit id="bbc38b0dbcae8f7f46cd27bb03fd24205d14b9eb" translate="yes" xml:space="preserve">
          <source>perl(1), perlxs(1), perlxstut(1), ExtUtils::ParseXS</source>
          <target state="translated">perl (1), perlxs (1), perlxstut (1), ExtUtils :: ParseXS</target>
        </trans-unit>
        <trans-unit id="d6b9996e6149736487e74a8437f0a496f3c1cf04" translate="yes" xml:space="preserve">
          <source>perl(1).</source>
          <target state="translated">perl(1).</target>
        </trans-unit>
        <trans-unit id="18cb741070ebfc30f427570738e8e762e4d2a9aa" translate="yes" xml:space="preserve">
          <source>perl*.dll</source>
          <target state="translated">perl*.dll</target>
        </trans-unit>
        <trans-unit id="dcc2d91f9f287a8ccee9e5c8ed0cdc4a925e8c85" translate="yes" xml:space="preserve">
          <source>perl-changes mailing list</source>
          <target state="translated">펄 변경 메일 링리스트</target>
        </trans-unit>
        <trans-unit id="1bc32114dd59f7310e970567360d3c02d58d750d" translate="yes" xml:space="preserve">
          <source>perl.c</source>
          <target state="translated">perl.c</target>
        </trans-unit>
        <trans-unit id="6882de14b8f9945c69e33053491b68a00936a503" translate="yes" xml:space="preserve">
          <source>perl.dll</source>
          <target state="translated">perl.dll</target>
        </trans-unit>
        <trans-unit id="75f6eeec759bae7fad4a5ceff7cd79e0be1b8318" translate="yes" xml:space="preserve">
          <source>perl.exe</source>
          <target state="translated">perl.exe</target>
        </trans-unit>
        <trans-unit id="5b7c20a54d9457c406e969c35a4d529ccd713b35" translate="yes" xml:space="preserve">
          <source>perl.h</source>
          <target state="translated">perl.h</target>
        </trans-unit>
        <trans-unit id="691b414c6aaf932bb2df03a426bdfa6101eb459b" translate="yes" xml:space="preserve">
          <source>perl.html</source>
          <target state="translated">perl.html</target>
        </trans-unit>
        <trans-unit id="09d0a7e43acc61513a10899876386d1d67fbd353" translate="yes" xml:space="preserve">
          <source>perl.nlm</source>
          <target state="translated">perl.nlm</target>
        </trans-unit>
        <trans-unit id="7e87a52054f0b80c8b936486c61a4a4e07838897" translate="yes" xml:space="preserve">
          <source>perl5.004, Carp</source>
          <target state="translated">perl5.004, 잉어</target>
        </trans-unit>
        <trans-unit id="bd8ec7180c5ebfe1e38daaae6609ec2d9b342cb9" translate="yes" xml:space="preserve">
          <source>perl5.005</source>
          <target state="translated">perl5.005</target>
        </trans-unit>
        <trans-unit id="209562eee43acc1dbe1c2d588e04f1def28688be" translate="yes" xml:space="preserve">
          <source>perl5.005, Pod::InputObjects, Exporter, Symbol, Carp</source>
          <target state="translated">perl5.005, 포드 :: InputObjects, 내보내기, 심볼, 잉어</target>
        </trans-unit>
        <trans-unit id="d590a8c2ead3a88f29c411ea5d730334a81b6414" translate="yes" xml:space="preserve">
          <source>perl5.005, Pod::Parser, Exporter, Carp</source>
          <target state="translated">perl5.005, 포드 :: 파서, 수출, 잉어</target>
        </trans-unit>
        <trans-unit id="cf049633ea5930abaecfcf3c7b8d1ab3fe450467" translate="yes" xml:space="preserve">
          <source>perl5.6.1</source>
          <target state="translated">perl5.6.1</target>
        </trans-unit>
        <trans-unit id="aaa04377169f52f314d925a7adf1caa3636b68ab" translate="yes" xml:space="preserve">
          <source>perl5.6.1.exe</source>
          <target state="translated">perl5.6.1.exe</target>
        </trans-unit>
        <trans-unit id="38f6da1c7a890f746f36832a2b84a1f1b6c16015" translate="yes" xml:space="preserve">
          <source>perl5.8*.tar.gz</source>
          <target state="translated">perl5.8*.tar.gz</target>
        </trans-unit>
        <trans-unit id="0ef5d8ffdad580bf7d00de4106004109cb6bc5a2" translate="yes" xml:space="preserve">
          <source>perl5.8.2.exe</source>
          <target state="translated">perl5.8.2.exe</target>
        </trans-unit>
        <trans-unit id="1325671d9529be208bca4c6d674f4a1f76076ecf" translate="yes" xml:space="preserve">
          <source>perl5.U</source>
          <target state="translated">perl5.U</target>
        </trans-unit>
        <trans-unit id="e29e08f24e9445d1965f850e6f38498978fed7a5" translate="yes" xml:space="preserve">
          <source>perl5.def</source>
          <target state="translated">perl5.def</target>
        </trans-unit>
        <trans-unit id="1ac6dbe2433d7a02fa3644a2c169e846e1b18c0c" translate="yes" xml:space="preserve">
          <source>perl5.git.perl.org</source>
          <target state="translated">perl5.git.perl.org</target>
        </trans-unit>
        <trans-unit id="69d4d5cad28238b6700a3906bacb53af098fb07d" translate="yes" xml:space="preserve">
          <source>perl5.map</source>
          <target state="translated">perl5.map</target>
        </trans-unit>
        <trans-unit id="a1fb4877930179c2f96509bb2b4e03a0facfb38a" translate="yes" xml:space="preserve">
          <source>perl5db.pl</source>
          <target state="translated">perl5db.pl</target>
        </trans-unit>
        <trans-unit id="e4c90edeaed918b1b9c8a91cd400cf328a85db3f" translate="yes" xml:space="preserve">
          <source>perl5shim.def-leader</source>
          <target state="translated">perl5shim.def-leader</target>
        </trans-unit>
        <trans-unit id="09b413122baf412202ceddeb03136299f0d7ec8b" translate="yes" xml:space="preserve">
          <source>perl67B2.dll</source>
          <target state="translated">perl67B2.dll</target>
        </trans-unit>
        <trans-unit id="49151a3f4af2aba0cb282bc4dee19723db65f155" translate="yes" xml:space="preserve">
          <source>perl????.dll</source>
          <target state="translated">perl????.dll</target>
        </trans-unit>
        <trans-unit id="0231bd81f26124c5fc27bed4925409b700138e7f" translate="yes" xml:space="preserve">
          <source>perl@itz.pp.sci.fi</source>
          <target state="translated">perl@itz.pp.sci.fi</target>
        </trans-unit>
        <trans-unit id="ef3c47856bc964a4e15fe5669211dabc19388d2a" translate="yes" xml:space="preserve">
          <source>perlE0AC.dll</source>
          <target state="translated">perlE0AC.dll</target>
        </trans-unit>
        <trans-unit id="23f301d504a1a57d6d030b566301cb97cce876bf" translate="yes" xml:space="preserve">
          <source>perlXXX</source>
          <target state="translated">perlXXX</target>
        </trans-unit>
        <trans-unit id="927dd503b107f459a569f6e65a8bff6b25f70752" translate="yes" xml:space="preserve">
          <source>perl_.exe</source>
          <target state="translated">perl_.exe</target>
        </trans-unit>
        <trans-unit id="6d056009db22c4395cc37631ad5c3d2aa0ed0066" translate="yes" xml:space="preserve">
          <source>perl_5.8.2.exe</source>
          <target state="translated">perl_5.8.2.exe</target>
        </trans-unit>
        <trans-unit id="c4a1221352bea74df448408a4423e5cc5a83b267" translate="yes" xml:space="preserve">
          <source>perl__.exe</source>
          <target state="translated">perl__.exe</target>
        </trans-unit>
        <trans-unit id="408406d76a239689e163654a475dcd8fc59b1808" translate="yes" xml:space="preserve">
          <source>perl___.exe</source>
          <target state="translated">perl___.exe</target>
        </trans-unit>
        <trans-unit id="1c7fd22854165a158b24acf740b191330be0d60b" translate="yes" xml:space="preserve">
          <source>perl_clone takes these flags as parameters:</source>
          <target state="translated">perl_clone은 다음 플래그를 매개 변수로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="b1165a37803f747990a6bbda4c9a22db76885a3f" translate="yes" xml:space="preserve">
          <source>perl_destruct()</source>
          <target state="translated">perl_destruct()</target>
        </trans-unit>
        <trans-unit id="48a8c5c0db0f907557ba30b4fd18cb0faa67d882" translate="yes" xml:space="preserve">
          <source>perl_parse()</source>
          <target state="translated">perl_parse()</target>
        </trans-unit>
        <trans-unit id="5fe03c9d15750b56400b40ba1c82f15a05efde43" translate="yes" xml:space="preserve">
          <source>perl_run</source>
          <target state="translated">perl_run</target>
        </trans-unit>
        <trans-unit id="a2013e2e82724e07b14da201da8d9eeb4008f181" translate="yes" xml:space="preserve">
          <source>perl_ste.zip</source>
          <target state="translated">perl_ste.zip</target>
        </trans-unit>
        <trans-unit id="00e7f22435077fac1769cabed94a9ac1ec268673" translate="yes" xml:space="preserve">
          <source>perladmin.U</source>
          <target state="translated">perladmin.U</target>
        </trans-unit>
        <trans-unit id="78f18356c674df8df071c33f1e775af9dbd1f478" translate="yes" xml:space="preserve">
          <source>perlaix</source>
          <target state="translated">perlaix</target>
        </trans-unit>
        <trans-unit id="41892a3cfb09aba6304d020f114e7a812459c5d6" translate="yes" xml:space="preserve">
          <source>perlaix - Perl version 5 on IBM AIX (UNIX) systems</source>
          <target state="translated">perlaix-IBM AIX (UNIX) 시스템의 Perl 버전 5</target>
        </trans-unit>
        <trans-unit id="22e0626cd2c247fa4013414c713c1c113846345d" translate="yes" xml:space="preserve">
          <source>perlamiga</source>
          <target state="translated">perlamiga</target>
        </trans-unit>
        <trans-unit id="341363507764368a9680fc4e53a4179692a5222b" translate="yes" xml:space="preserve">
          <source>perlamiga - Perl under Amiga OS</source>
          <target state="translated">perlamiga-Amiga OS에서 Perl</target>
        </trans-unit>
        <trans-unit id="6b285b9f9c813529db4924f153618fcece4622fe" translate="yes" xml:space="preserve">
          <source>perlapi</source>
          <target state="translated">perlapi</target>
        </trans-unit>
        <trans-unit id="5dfdfcae5425f862459baeb0e5dbcecfbf6ea30f" translate="yes" xml:space="preserve">
          <source>perlapi - autogenerated documentation for the perl public API</source>
          <target state="translated">perlapi-펄 퍼블릭 API 자동 생성 문서</target>
        </trans-unit>
        <trans-unit id="a20080c3534e922c8f81dc2898e9c838f5b5ac92" translate="yes" xml:space="preserve">
          <source>perlapio</source>
          <target state="translated">perlapio</target>
        </trans-unit>
        <trans-unit id="4cf130c431347b87a87c0ca2cea5bf216fbe8d47" translate="yes" xml:space="preserve">
          <source>perlapio - perl's IO abstraction interface.</source>
          <target state="translated">perlapio-펄의 IO 추상화 인터페이스.</target>
        </trans-unit>
        <trans-unit id="3a230bd4443d2cff6b7b2f8aee5df7b71a311633" translate="yes" xml:space="preserve">
          <source>perlartistic</source>
          <target state="translated">perlartistic</target>
        </trans-unit>
        <trans-unit id="f33a2a5aae075f72010a9ce6a9c964837e066ad5" translate="yes" xml:space="preserve">
          <source>perlbook</source>
          <target state="translated">perlbook</target>
        </trans-unit>
        <trans-unit id="830b547240ca4e90c45279c6c693406159b212a9" translate="yes" xml:space="preserve">
          <source>perlbook - Books about and related to Perl</source>
          <target state="translated">perlbook-Perl 관련 책</target>
        </trans-unit>
        <trans-unit id="170e867da9da5308ceb1ce4db636a8899c0d28bd" translate="yes" xml:space="preserve">
          <source>perlboot</source>
          <target state="translated">perlboot</target>
        </trans-unit>
        <trans-unit id="96ac810e0d146792851f87a007f1bc4783099827" translate="yes" xml:space="preserve">
          <source>perlboot - Links to information on object-oriented programming in Perl</source>
          <target state="translated">perlboot-Perl의 객체 지향 프로그래밍에 대한 정보 링크</target>
        </trans-unit>
        <trans-unit id="a8150727829d08f7034b30d05cb5b2aee12bec3f" translate="yes" xml:space="preserve">
          <source>perlbot</source>
          <target state="translated">perlbot</target>
        </trans-unit>
        <trans-unit id="30afece7162848cc8030bbfb81147850ba35fdcf" translate="yes" xml:space="preserve">
          <source>perlbot - Links to information on object-oriented programming in Perl</source>
          <target state="translated">perlbot-Perl의 객체 지향 프로그래밍에 대한 정보 링크</target>
        </trans-unit>
        <trans-unit id="1aaf0f6ca21e0cbaced276f1172b8adafd199a7e" translate="yes" xml:space="preserve">
          <source>perlbs2000</source>
          <target state="translated">perlbs2000</target>
        </trans-unit>
        <trans-unit id="72c8c31117b800c1cc9c1b3834c5f0eaa008c18d" translate="yes" xml:space="preserve">
          <source>perlbs2000 - building and installing Perl for BS2000.</source>
          <target state="translated">perlbs2000-BS2000 용 Perl 빌드 및 설치</target>
        </trans-unit>
        <trans-unit id="d592b9c4702fe9f16eb2259da5ca1809a5fe6dae" translate="yes" xml:space="preserve">
          <source>perlbug</source>
          <target state="translated">perlbug</target>
        </trans-unit>
        <trans-unit id="ce35f0c471ceb50e3526e3173d2d854a47b251bb" translate="yes" xml:space="preserve">
          <source>perlbug - how to submit bug reports on Perl</source>
          <target state="translated">perlbug-Perl에 버그 보고서를 제출하는 방법</target>
        </trans-unit>
        <trans-unit id="0a7ce09a71e0a16d77d36ae7dfbf00b9f87a9a8a" translate="yes" xml:space="preserve">
          <source>perlbug@perl.org</source>
          <target state="translated">perlbug@perl.org</target>
        </trans-unit>
        <trans-unit id="5a11e78a143017710421d8a4c2c958ecb5f94afe" translate="yes" xml:space="preserve">
          <source>perlcall</source>
          <target state="translated">perlcall</target>
        </trans-unit>
        <trans-unit id="13d8b46cf48cb61863ced3231abb14231b4e4a72" translate="yes" xml:space="preserve">
          <source>perlcall - Perl calling conventions from C</source>
          <target state="translated">perlcall-C의 Perl 호출 규칙</target>
        </trans-unit>
        <trans-unit id="7ce527e5a21bc37cf2fb201a8f2e8065d95ef65b" translate="yes" xml:space="preserve">
          <source>perlce</source>
          <target state="translated">perlce</target>
        </trans-unit>
        <trans-unit id="51e1ea487297016a1a53e7d4a3cd0709f7fa21ea" translate="yes" xml:space="preserve">
          <source>perlce - Perl for WinCE</source>
          <target state="translated">perlce-WinCE 용 Perl</target>
        </trans-unit>
        <trans-unit id="3b41032b906dce49d1b3cadaf22a36d5096192dd" translate="yes" xml:space="preserve">
          <source>perlce-user@lists.sourceforge.net</source>
          <target state="translated">perlce-user@lists.sourceforge.net</target>
        </trans-unit>
        <trans-unit id="aca06e3a7190441cff1314dc82bda26e2b880880" translate="yes" xml:space="preserve">
          <source>perlcheat</source>
          <target state="translated">perlcheat</target>
        </trans-unit>
        <trans-unit id="f766ddf6b43c669a8261a7463fab3c09b38de1a8" translate="yes" xml:space="preserve">
          <source>perlcheat - Perl 5 Cheat Sheet</source>
          <target state="translated">perlcheat-펄 5 치트 시트</target>
        </trans-unit>
        <trans-unit id="a4b77e95d9cf9464847035991b17b1bfb4762162" translate="yes" xml:space="preserve">
          <source>perlclib</source>
          <target state="translated">perlclib</target>
        </trans-unit>
        <trans-unit id="f7eaed1096a2a48bb235bbc36c80a0b58913f75e" translate="yes" xml:space="preserve">
          <source>perlclib - Internal replacements for standard C library functions</source>
          <target state="translated">perlclib-표준 C 라이브러리 함수의 내부 대체</target>
        </trans-unit>
        <trans-unit id="d7c1bffc95a2ab6642bba3ae27851dcfc8925395" translate="yes" xml:space="preserve">
          <source>perlcommunity</source>
          <target state="translated">perlcommunity</target>
        </trans-unit>
        <trans-unit id="f66e951e92303edfe836cafad334630a96b27173" translate="yes" xml:space="preserve">
          <source>perlcommunity - a brief overview of the Perl community</source>
          <target state="translated">perlcommunity-Perl 커뮤니티에 대한 간략한 개요</target>
        </trans-unit>
        <trans-unit id="14b190676f4a58034ea43a2c562e4715e396ec08" translate="yes" xml:space="preserve">
          <source>perlcygwin</source>
          <target state="translated">perlcygwin</target>
        </trans-unit>
        <trans-unit id="3d94deb79a2e95dcd3555c8794fa23a25bf1df3f" translate="yes" xml:space="preserve">
          <source>perlcygwin - Perl for Cygwin</source>
          <target state="translated">perlcygwin-Cygwin 용 Perl</target>
        </trans-unit>
        <trans-unit id="86185368fa5349338c6764e48ad89694203a5bcb" translate="yes" xml:space="preserve">
          <source>perldata</source>
          <target state="translated">perldata</target>
        </trans-unit>
        <trans-unit id="ba71b9b1a36e72a8aa23591364c08b960a4f6e7d" translate="yes" xml:space="preserve">
          <source>perldata - Perl data types</source>
          <target state="translated">perldata-Perl 데이터 유형</target>
        </trans-unit>
        <trans-unit id="2cd756a2d97c4075c1915a636d9a686e5a982e08" translate="yes" xml:space="preserve">
          <source>perldb.pl</source>
          <target state="translated">perldb.pl</target>
        </trans-unit>
        <trans-unit id="32de8040274cbcc60b28435da226f66f9c8cf4d9" translate="yes" xml:space="preserve">
          <source>perldbmfilter</source>
          <target state="translated">perldbmfilter</target>
        </trans-unit>
        <trans-unit id="2e3c6be8ab850ddc6026c7331e2a80a180f75606" translate="yes" xml:space="preserve">
          <source>perldbmfilter - Perl DBM Filters</source>
          <target state="translated">perldbmfilter-Perl DBM 필터</target>
        </trans-unit>
        <trans-unit id="7e88cddec5f7bce92d6c651092eb2afd91f0324e" translate="yes" xml:space="preserve">
          <source>perldebguts</source>
          <target state="translated">perldebguts</target>
        </trans-unit>
        <trans-unit id="c9467f6cc46a14598aa87e604442c7ed3c4eca12" translate="yes" xml:space="preserve">
          <source>perldebguts - Guts of Perl debugging</source>
          <target state="translated">perldebguts-펄 디버깅의 용기</target>
        </trans-unit>
        <trans-unit id="752c0a178cd8c35b133b9b863fd010adea588ff1" translate="yes" xml:space="preserve">
          <source>perldebtut</source>
          <target state="translated">perldebtut</target>
        </trans-unit>
        <trans-unit id="2e549a2271c99313bf765bcec3d584a571089bd0" translate="yes" xml:space="preserve">
          <source>perldebtut - Perl debugging tutorial</source>
          <target state="translated">perldebtut-펄 디버깅 튜토리얼</target>
        </trans-unit>
        <trans-unit id="88b9c7ff963f9c3dc54efd33fc0ab8221d64e586" translate="yes" xml:space="preserve">
          <source>perldebug</source>
          <target state="translated">perldebug</target>
        </trans-unit>
        <trans-unit id="6d27e5d3e4515996378915384b1d965f05b042a3" translate="yes" xml:space="preserve">
          <source>perldebug - Perl debugging</source>
          <target state="translated">perldebug-펄 디버깅</target>
        </trans-unit>
        <trans-unit id="2bcf0d7c794db744071716d08bfcb70afd7e8e19" translate="yes" xml:space="preserve">
          <source>perldebug(1)</source>
          <target state="translated">perldebug(1)</target>
        </trans-unit>
        <trans-unit id="e5336153c81446f57ca1bc5e2e0127ddc764681f" translate="yes" xml:space="preserve">
          <source>perldiag</source>
          <target state="translated">perldiag</target>
        </trans-unit>
        <trans-unit id="dc092dc6d3a4d66e0f34feba0f00eacaf6bc8c19" translate="yes" xml:space="preserve">
          <source>perldiag - various Perl diagnostics</source>
          <target state="translated">perldiag-다양한 Perl 진단</target>
        </trans-unit>
        <trans-unit id="37972f86cc97d3c8be86c9f3a415ac296cef7b4a" translate="yes" xml:space="preserve">
          <source>perldiag.pod</source>
          <target state="translated">perldiag.pod</target>
        </trans-unit>
        <trans-unit id="f32bc0b06d94b9bb7c51c013fc87a43b83ec4f80" translate="yes" xml:space="preserve">
          <source>perldoc</source>
          <target state="translated">perldoc</target>
        </trans-unit>
        <trans-unit id="99f0401773a369071bc73479fa97a78598d6873e" translate="yes" xml:space="preserve">
          <source>perldoc_url_postfix</source>
          <target state="translated">perldoc_url_postfix</target>
        </trans-unit>
        <trans-unit id="b01b7b5b6f2bcbbe3614970cea4d0abad7e3e714" translate="yes" xml:space="preserve">
          <source>perldoc_url_prefix</source>
          <target state="translated">perldoc_url_prefix</target>
        </trans-unit>
        <trans-unit id="f1178ab6392133df48626ec3b5a87c2b1926d798" translate="yes" xml:space="preserve">
          <source>perldos</source>
          <target state="translated">perldos</target>
        </trans-unit>
        <trans-unit id="efecf8d0fd8ced5c59e232431aef42d5285002a4" translate="yes" xml:space="preserve">
          <source>perldos - Perl under DOS, W31, W95.</source>
          <target state="translated">perldos-DOS, W31, W95에서 Perl.</target>
        </trans-unit>
        <trans-unit id="34d3e53df2edeecc89a9be05ffe87ce3f7b005e0" translate="yes" xml:space="preserve">
          <source>perldsc</source>
          <target state="translated">perldsc</target>
        </trans-unit>
        <trans-unit id="89a89143208729270405b1873fdba5c93718257b" translate="yes" xml:space="preserve">
          <source>perldsc - Perl Data Structures Cookbook</source>
          <target state="translated">perldsc-Perl 데이터 구조 요리 책</target>
        </trans-unit>
        <trans-unit id="c13da15044ee579ef8ecb466f2342009f0976639" translate="yes" xml:space="preserve">
          <source>perldtrace</source>
          <target state="translated">perldtrace</target>
        </trans-unit>
        <trans-unit id="ba8db06dba16312bb28675f1fbc91635529fda14" translate="yes" xml:space="preserve">
          <source>perldtrace - Perl's support for DTrace</source>
          <target state="translated">perldtrace-DTrace에 대한 Perl의 지원</target>
        </trans-unit>
        <trans-unit id="2553622674993d58aace56e51120a56513440dec" translate="yes" xml:space="preserve">
          <source>perlebcdic</source>
          <target state="translated">perlebcdic</target>
        </trans-unit>
        <trans-unit id="6dd5079fd0f5fa1383ddfbb7c789ffc4d353557b" translate="yes" xml:space="preserve">
          <source>perlebcdic - Considerations for running Perl on EBCDIC platforms</source>
          <target state="translated">perlebcdic-EBCDIC 플랫폼에서 Perl을 실행하기위한 고려 사항</target>
        </trans-unit>
        <trans-unit id="0b293f1d334e6c34a0f3d5aa57a772bcb6b6289f" translate="yes" xml:space="preserve">
          <source>perlembed</source>
          <target state="translated">perlembed</target>
        </trans-unit>
        <trans-unit id="a936c7f136dc07e23a73002af62f9d908d124dae" translate="yes" xml:space="preserve">
          <source>perlembed - how to embed perl in your C program</source>
          <target state="translated">perlembed-C 프로그램에 perl을 포함시키는 방법</target>
        </trans-unit>
        <trans-unit id="f037fb5e71decd5942a305ce1420c414d6ba4327" translate="yes" xml:space="preserve">
          <source>perlexperiment</source>
          <target state="translated">perlexperiment</target>
        </trans-unit>
        <trans-unit id="394976725d15e0ec79ded150e8e3d3659b6fe631" translate="yes" xml:space="preserve">
          <source>perlexperiment - A listing of experimental features in Perl</source>
          <target state="translated">perlexperiment-Perl의 실험 기능 목록</target>
        </trans-unit>
        <trans-unit id="b1837aba4bc9fbe657c497ed6a7600eaec153625" translate="yes" xml:space="preserve">
          <source>perlfaq</source>
          <target state="translated">perlfaq</target>
        </trans-unit>
        <trans-unit id="dae9e17deeb0f6cf2b484bc770a6804c75b2891b" translate="yes" xml:space="preserve">
          <source>perlfaq - frequently asked questions about Perl</source>
          <target state="translated">perlfaq-Perl에 대한 질문과 대답</target>
        </trans-unit>
        <trans-unit id="92702fdf70f67bdcfdc0e7e18a9ecdbdb6da947d" translate="yes" xml:space="preserve">
          <source>perlfaq1</source>
          <target state="translated">perlfaq1</target>
        </trans-unit>
        <trans-unit id="999f231b23cebc5610abc30b857359aa4e1df926" translate="yes" xml:space="preserve">
          <source>perlfaq1 - General Questions About Perl</source>
          <target state="translated">perlfaq1-Perl에 대한 일반적인 질문</target>
        </trans-unit>
        <trans-unit id="eaa4c092db833bf924fc7279d11c72db34bf4019" translate="yes" xml:space="preserve">
          <source>perlfaq2</source>
          <target state="translated">perlfaq2</target>
        </trans-unit>
        <trans-unit id="a74a5613eba62846b770284f204656b9217be257" translate="yes" xml:space="preserve">
          <source>perlfaq2 - Obtaining and Learning about Perl</source>
          <target state="translated">perlfaq2-Perl 획득 및 학습</target>
        </trans-unit>
        <trans-unit id="c4990d12d4855c6d8cc1bc8c0c870c3aa05f43bb" translate="yes" xml:space="preserve">
          <source>perlfaq3</source>
          <target state="translated">perlfaq3</target>
        </trans-unit>
        <trans-unit id="48c2cfc5e1c5b9beab94534499e484893c47f6d1" translate="yes" xml:space="preserve">
          <source>perlfaq3 - Programming Tools</source>
          <target state="translated">perlfaq3-프로그래밍 도구</target>
        </trans-unit>
        <trans-unit id="33d752420af51c8a0653c82be3729188d08e9e17" translate="yes" xml:space="preserve">
          <source>perlfaq4</source>
          <target state="translated">perlfaq4</target>
        </trans-unit>
        <trans-unit id="3b6599d692ee0ab2d2ff35cea1623902188979f3" translate="yes" xml:space="preserve">
          <source>perlfaq4 - Data Manipulation</source>
          <target state="translated">perlfaq4-데이터 조작</target>
        </trans-unit>
        <trans-unit id="d5601d214b4a2dfe9fdb25620177a5badf4e76b1" translate="yes" xml:space="preserve">
          <source>perlfaq5</source>
          <target state="translated">perlfaq5</target>
        </trans-unit>
        <trans-unit id="439f1f1a69053858799617d074f408f59f100293" translate="yes" xml:space="preserve">
          <source>perlfaq5 - Files and Formats</source>
          <target state="translated">perlfaq5-파일 및 형식</target>
        </trans-unit>
        <trans-unit id="dab416c299789c3ab1d02eef3a81d057e82c8efa" translate="yes" xml:space="preserve">
          <source>perlfaq6</source>
          <target state="translated">perlfaq6</target>
        </trans-unit>
        <trans-unit id="7d73773e469628aefcb626fced6e2cbff98bf60a" translate="yes" xml:space="preserve">
          <source>perlfaq6 - Regular Expressions</source>
          <target state="translated">perlfaq6-정규식</target>
        </trans-unit>
        <trans-unit id="2908e4a757eda5bc264d5226103329df472625db" translate="yes" xml:space="preserve">
          <source>perlfaq7</source>
          <target state="translated">perlfaq7</target>
        </trans-unit>
        <trans-unit id="9e083a96b04947c92b46ae2d038b75ce2e8b0f67" translate="yes" xml:space="preserve">
          <source>perlfaq7 - General Perl Language Issues</source>
          <target state="translated">perlfaq7-일반적인 Perl 언어 문제</target>
        </trans-unit>
        <trans-unit id="16ea58c6e0e53711fc7344499461a5126674fde1" translate="yes" xml:space="preserve">
          <source>perlfaq8</source>
          <target state="translated">perlfaq8</target>
        </trans-unit>
        <trans-unit id="2e5da6525c02919e0d4c7a3adba81f90ccac9ee2" translate="yes" xml:space="preserve">
          <source>perlfaq8 - System Interaction</source>
          <target state="translated">perlfaq8-시스템 상호 작용</target>
        </trans-unit>
        <trans-unit id="3218282cb335d5995bb2b3bee9e5680970aa0e08" translate="yes" xml:space="preserve">
          <source>perlfaq9</source>
          <target state="translated">perlfaq9</target>
        </trans-unit>
        <trans-unit id="00a00479101aa68614039237a7b2f77422d3f403" translate="yes" xml:space="preserve">
          <source>perlfaq9 - Web, Email and Networking</source>
          <target state="translated">perlfaq9-웹, 이메일 및 네트워킹</target>
        </trans-unit>
        <trans-unit id="929f642bcab2ffcdf954343fb52e314a7b0ce101" translate="yes" xml:space="preserve">
          <source>perlfilter</source>
          <target state="translated">perlfilter</target>
        </trans-unit>
        <trans-unit id="a8e680abb493de0dcfb4295ba19ed833611971f5" translate="yes" xml:space="preserve">
          <source>perlfilter - Source Filters</source>
          <target state="translated">perlfilter-소스 필터</target>
        </trans-unit>
        <trans-unit id="f5e9f90213dad1d5e9b7b3aa936274181506e4b1" translate="yes" xml:space="preserve">
          <source>perlfork</source>
          <target state="translated">perlfork</target>
        </trans-unit>
        <trans-unit id="b6afccbf414675a79459f2ef4927933170a13823" translate="yes" xml:space="preserve">
          <source>perlfork - Perl's fork() emulation</source>
          <target state="translated">perlfork-펄 포크 () 에뮬레이션</target>
        </trans-unit>
        <trans-unit id="0fbfe241b484a2b8cf051336f682927baa31af78" translate="yes" xml:space="preserve">
          <source>perlform</source>
          <target state="translated">perlform</target>
        </trans-unit>
        <trans-unit id="34423a1757c0e06c14a35f039071dfe4dd9903d3" translate="yes" xml:space="preserve">
          <source>perlform - Perl formats</source>
          <target state="translated">perlform-펄 형식</target>
        </trans-unit>
        <trans-unit id="4a3ca834d52fd8a20842ac66242f9dd40a9a2ab2" translate="yes" xml:space="preserve">
          <source>perlform(1)</source>
          <target state="translated">perlform(1)</target>
        </trans-unit>
        <trans-unit id="0846d9c4b241a5dae0ac0fb59a157564a3108f59" translate="yes" xml:space="preserve">
          <source>perlfreebsd</source>
          <target state="translated">perlfreebsd</target>
        </trans-unit>
        <trans-unit id="5a56e1be2a68f40e8c17cdc79d4a7e5db3d238ac" translate="yes" xml:space="preserve">
          <source>perlfreebsd - Perl version 5 on FreeBSD systems</source>
          <target state="translated">perlfreebsd-FreeBSD 시스템의 Perl 버전 5</target>
        </trans-unit>
        <trans-unit id="93dd08264687ce387c4f7af88ffc1d41631e3043" translate="yes" xml:space="preserve">
          <source>perlfunc</source>
          <target state="translated">perlfunc</target>
        </trans-unit>
        <trans-unit id="866ec2ed4177200021485475b8756148088ee9b1" translate="yes" xml:space="preserve">
          <source>perlfunc - Perl builtin functions</source>
          <target state="translated">perlfunc-펄 내장 함수</target>
        </trans-unit>
        <trans-unit id="d3063a32ece3a1c69f45d8d277668e952bfbad0d" translate="yes" xml:space="preserve">
          <source>perlglob.bat</source>
          <target state="translated">perlglob.bat</target>
        </trans-unit>
        <trans-unit id="a94681fb06616364c1d6d7e902d32a60441df778" translate="yes" xml:space="preserve">
          <source>perlglossary</source>
          <target state="translated">perlglossary</target>
        </trans-unit>
        <trans-unit id="bc58fe4082eb41d4ed0efabd214708c94a833491" translate="yes" xml:space="preserve">
          <source>perlglossary - Perl Glossary</source>
          <target state="translated">perlglossary-펄 용어집</target>
        </trans-unit>
        <trans-unit id="3c583875e295bdec42ee1b701079b2294f98e0fc" translate="yes" xml:space="preserve">
          <source>perlguts</source>
          <target state="translated">perlguts</target>
        </trans-unit>
        <trans-unit id="a5d5b3fcfb71beb3a2970bbeb5a503434c32f792" translate="yes" xml:space="preserve">
          <source>perlguts - Introduction to the Perl API</source>
          <target state="translated">perlguts-Perl API 소개</target>
        </trans-unit>
        <trans-unit id="b5b6f34d76752779314fa9689990dfa397cb859f" translate="yes" xml:space="preserve">
          <source>perlhack</source>
          <target state="translated">perlhack</target>
        </trans-unit>
        <trans-unit id="5fef1fd7b947245a05709452b239afd79ba65604" translate="yes" xml:space="preserve">
          <source>perlhack - How to hack on Perl</source>
          <target state="translated">perlhack-Perl을 해킹하는 방법</target>
        </trans-unit>
        <trans-unit id="f30a666a3cdc47ac875c3244c1e8134c2f878b2c" translate="yes" xml:space="preserve">
          <source>perlhacktips</source>
          <target state="translated">perlhacktips</target>
        </trans-unit>
        <trans-unit id="edd9d2e3c48af3b7f33c2bd3508b6a3c8d5c1c45" translate="yes" xml:space="preserve">
          <source>perlhacktips - Tips for Perl core C code hacking</source>
          <target state="translated">perlhacktips-펄 코어 C 코드 해킹을위한 팁</target>
        </trans-unit>
        <trans-unit id="5f7fe92556a53b899c02122bd069a00585cf51bc" translate="yes" xml:space="preserve">
          <source>perlhacktut</source>
          <target state="translated">perlhacktut</target>
        </trans-unit>
        <trans-unit id="2d2e3651d095bc350944265c5472bcff2519d77c" translate="yes" xml:space="preserve">
          <source>perlhacktut - Walk through the creation of a simple C code patch</source>
          <target state="translated">perlhacktut-간단한 C 코드 패치 작성 과정을 안내합니다</target>
        </trans-unit>
        <trans-unit id="cee783bda08d996935296da15395197cb24534fb" translate="yes" xml:space="preserve">
          <source>perlhaiku</source>
          <target state="translated">perlhaiku</target>
        </trans-unit>
        <trans-unit id="ac1d9ac52c0423c4e86781968cb42f96461e7d69" translate="yes" xml:space="preserve">
          <source>perlhaiku - Perl version 5.10+ on Haiku</source>
          <target state="translated">perlhaiku-Haiku의 Perl 버전 5.10 이상</target>
        </trans-unit>
        <trans-unit id="6041f89ee7a0cc56d2c768dc510ce06399e3b7aa" translate="yes" xml:space="preserve">
          <source>perlhpux</source>
          <target state="translated">perlhpux</target>
        </trans-unit>
        <trans-unit id="a7e64c6424f14afde1539347d22198d2c0361f28" translate="yes" xml:space="preserve">
          <source>perlhpux - Perl version 5 on Hewlett-Packard Unix (HP-UX) systems</source>
          <target state="translated">perlhpux-HP-UX (Hewlett-Packard Unix) 시스템의 Perl 버전 5</target>
        </trans-unit>
        <trans-unit id="511e8b64d979947a71e482e90b8d764b3051f61c" translate="yes" xml:space="preserve">
          <source>perlhurd</source>
          <target state="translated">perlhurd</target>
        </trans-unit>
        <trans-unit id="2d0dd91203aade0a285efe9e66d47d8d9feee742" translate="yes" xml:space="preserve">
          <source>perlhurd - Perl version 5 on Hurd</source>
          <target state="translated">perlhurd-Hurd의 Perl 버전 5</target>
        </trans-unit>
        <trans-unit id="53aa76dfb3f08f6449e7e8243824d6cf57033f32" translate="yes" xml:space="preserve">
          <source>perli18n.pod</source>
          <target state="translated">perli18n.pod</target>
        </trans-unit>
        <trans-unit id="79715ba120c85279ace6ea1d88caa710435c3370" translate="yes" xml:space="preserve">
          <source>perlintern</source>
          <target state="translated">perlintern</target>
        </trans-unit>
        <trans-unit id="d8d1c608b3f3e7998b1b36a112b302e5b1a72baf" translate="yes" xml:space="preserve">
          <source>perlintern - autogenerated documentation of purely &lt;b&gt;internal&lt;/b&gt; Perl functions</source>
          <target state="translated">perlintern-순수 &lt;b&gt;내부&lt;/b&gt; Perl 함수 의 자동 생성 문서</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
