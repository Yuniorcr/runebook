<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="10a3726f3632f6869d052300b4a97061a0f2783d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../pod/usage&quot;&gt;Pod::Usage&lt;/a&gt; for details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;../pod/usage&quot;&gt;Pod :: Usage&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d290c4d73a4c9a30883498ca11623a61519662b9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../spec&quot;&gt;File::Spec&lt;/a&gt; and &lt;a href=&quot;unix&quot;&gt;File::Spec::Unix&lt;/a&gt;. This package overrides the implementation of these methods, not the semantics.</source>
          <target state="translated">&lt;a href=&quot;../spec&quot;&gt;File :: Spec&lt;/a&gt; 및 &lt;a href=&quot;unix&quot;&gt;File :: Spec :: Unix를&lt;/a&gt; 참조하십시오 . 이 패키지는 시맨틱이 아닌 이러한 메소드의 구현을 대체합니다.</target>
        </trans-unit>
        <trans-unit id="a6b10fbdc874b5a4a77103b24979b9c350436caa" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../tap/parser&quot;&gt;TAP::Parser&lt;/a&gt;, &lt;a href=&quot;../tap/harness&quot;&gt;TAP::Harness&lt;/a&gt; for the main documentation for this distribution.</source>
          <target state="translated">이 배포에 대한 기본 문서는 &lt;a href=&quot;../tap/parser&quot;&gt;TAP :: Parser&lt;/a&gt; , &lt;a href=&quot;../tap/harness&quot;&gt;TAP :: Harness&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c447f42578e43ae3e6605205bdde05967a7faf96" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../warnings&quot;&gt;warnings&lt;/a&gt; for more information about lexical warnings.</source>
          <target state="translated">어휘 경고에 대한 자세한 내용은 &lt;a href=&quot;../warnings&quot;&gt;경고&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="44b382b16fffe92577f19c159253d88a0e5a86e3" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../warnings&quot;&gt;warnings&lt;/a&gt; for more information on this module's usage.</source>
          <target state="translated">이 모듈의 사용법에 대한 자세한 내용 은 &lt;a href=&quot;../warnings&quot;&gt;경고&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="30eb3c4ed6fdf895cda2c46d24fb41f9287a7fb0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;autodie/exception&quot;&gt;autodie::exception&lt;/a&gt; for further information on interrogating exceptions.</source>
          <target state="translated">&lt;a href=&quot;autodie/exception&quot;&gt;예외&lt;/a&gt; 조사에 대한 자세한 내용 은 autodie :: exception 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="bb8954af7fb5ccdc28f9968184aa62f0cd0dd631" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;base&quot;&gt;TAP::Formatter::Base&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;base&quot;&gt;TAP :: Formatter :: Base를&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c3c2614a4bf281c7ef55cc34f337c1d619fa1884" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;bigint&quot;&gt;Math::BigInt&lt;/a&gt; for more details than you ever wanted to know about using a different low-level library.</source>
          <target state="translated">다른 저수준 라이브러리 사용에 대해 알고 자하는 것보다 자세한 내용 은 &lt;a href=&quot;bigint&quot;&gt;Math :: BigInt&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ce4247dde2e63b0f8b6a60cd50088d3656354822" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;db_file&quot;&gt;DB_File&lt;/a&gt; or &lt;a href=&quot;config&quot;&gt;Config&lt;/a&gt; for some interesting tie() implementations. A good starting point for many tie() implementations is with one of the modules &lt;a href=&quot;tie/scalar&quot;&gt;Tie::Scalar&lt;/a&gt;, &lt;a href=&quot;tie/array&quot;&gt;Tie::Array&lt;/a&gt;, &lt;a href=&quot;tie/hash&quot;&gt;Tie::Hash&lt;/a&gt;, or &lt;a href=&quot;tie/handle&quot;&gt;Tie::Handle&lt;/a&gt;.</source>
          <target state="translated">재미있는 tie () 구현에 대해서는 &lt;a href=&quot;db_file&quot;&gt;DB_File&lt;/a&gt; 또는 &lt;a href=&quot;config&quot;&gt;Config&lt;/a&gt; 를 참조하십시오 . 많은 tie () 구현의 좋은 시작점은 &lt;a href=&quot;tie/scalar&quot;&gt;Tie :: Scalar&lt;/a&gt; , &lt;a href=&quot;tie/array&quot;&gt;Tie :: Array&lt;/a&gt; , &lt;a href=&quot;tie/hash&quot;&gt;Tie :: Hash&lt;/a&gt; 또는 &lt;a href=&quot;tie/handle&quot;&gt;Tie :: Handle&lt;/a&gt; 모듈 중 하나를 사용하는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="0c9bd4f48f3f6ae98b30c07f5d71cc57a272c1d2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;db_file&quot;&gt;DB_File&lt;/a&gt;. Requires symbolic links.</source>
          <target state="translated">&lt;a href=&quot;db_file&quot;&gt;DB_File을&lt;/a&gt; 참조하십시오 . 심볼릭 링크가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="4296f20f12dfc0132d56a792670dce7e38a57723" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;encode&quot;&gt;Encode&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;encode&quot;&gt;인코딩을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8a67af7c8913351d114f65a7936594b2d41f06da" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;encode/alias&quot;&gt;Encode::Alias&lt;/a&gt; for details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;encode/alias&quot;&gt;Encode :: Alias&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="8517af08323f5f094acafe117a103b971b6890a6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;encode/encoding&quot;&gt;Encode::Encoding&lt;/a&gt; for details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;encode/encoding&quot;&gt;Encode :: Encoding&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2043e4cc4b14000fecd0ef098d0ed8991642e3a7" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;encoding&quot;&gt;encoding&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;encoding&quot;&gt;인코딩을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5ab13f06779fa0e51f4b4f1ab1ab086b89de4b8b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;expire&quot;&gt;Memoize::Expire&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;expire&quot;&gt;Memoize :: Expire를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5f5a809c446d4dccbb74031c3ad04c52cccf00c0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;faq#Apache%3a%3aGZip-Revisited&quot;&gt;IO::Compress::FAQ&lt;/a&gt;</source>
          <target state="translated">참조 &lt;a href=&quot;faq#Apache%3a%3aGZip-Revisited&quot;&gt;IO :: 압축 :: 자주 묻는 질문&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="11726ce061a925f71cc1ea30a25c1dc96572d5a2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;faq#Compressed-files-and-Net%3a%3aFTP&quot;&gt;IO::Compress::FAQ&lt;/a&gt;</source>
          <target state="translated">참조 &lt;a href=&quot;faq#Compressed-files-and-Net%3a%3aFTP&quot;&gt;IO :: 압축 :: 자주 묻는 질문&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b4bbce97bf5c8d683b28b867daee7323eefafa16" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;, &lt;a href=&quot;functions/warn&quot;&gt;warn&lt;/a&gt;, &lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;, and &lt;a href=&quot;warnings&quot;&gt;warnings&lt;/a&gt; for additional information.</source>
          <target state="translated">참조 &lt;a href=&quot;functions/die&quot;&gt;다이&lt;/a&gt; , &lt;a href=&quot;functions/warn&quot;&gt;경고&lt;/a&gt; , &lt;a href=&quot;functions/eval&quot;&gt;평가를&lt;/a&gt; 하고, &lt;a href=&quot;warnings&quot;&gt;경고&lt;/a&gt; 추가 정보를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="da7361a43bb9b0019562a0b989d95d7ab39d2deb" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;. Note also that the loop control statements described later will</source>
          <target state="translated">&lt;a href=&quot;functions/do&quot;&gt;do를&lt;/a&gt; 참조하십시오 . 또한 나중에 설명 할 루프 제어문은</target>
        </trans-unit>
        <trans-unit id="40183fcc1ae5b8277c08c3330164903ddccf2ec4" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;functions/fc&quot;&gt;fc&lt;/a&gt; for details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;functions/fc&quot;&gt;fc&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="db782e508dd1270856c14c5063a050794cf72b17" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;functions/print&quot;&gt;인쇄를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="bfb55bb6b51a2ed413b15caf26a9050829c0f423" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;functions/printf&quot;&gt;printf를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="89b99f617beb3c9ebbaa01979b8eb5328c56f3b0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;functions/quotemeta&quot;&gt;quotemeta&lt;/a&gt; for the exact definition of characters that are quoted by &lt;code&gt;\Q&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;\Q&lt;/code&gt; 로 인용되는 문자의 정확한 정의는 &lt;a href=&quot;functions/quotemeta&quot;&gt;quotemeta&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cfd34654a6d253af136f4d30dc3e3d3012379d65" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;functions/say&quot;&gt;say&lt;/a&gt; for details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;functions/say&quot;&gt;say&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="80ac004d25eee837fc4957cc10b52c48abd10e0f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;functions/seek&quot;&gt;seek&lt;/a&gt; and &lt;a href=&quot;functions/sysseek&quot;&gt;sysseek&lt;/a&gt; about the SEEK_* constants.</source>
          <target state="translated">SEEK_ * 상수에 대해서는 &lt;a href=&quot;functions/seek&quot;&gt;seek&lt;/a&gt; 및 &lt;a href=&quot;functions/sysseek&quot;&gt;sysseek를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3b0b5bdfe60761c96a19b4890ab4c2a8bb2151e3" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt; about the S_I* constants.</source>
          <target state="translated">S_I * 상수에 대한 &lt;a href=&quot;functions/stat&quot;&gt;통계&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3c60c634f7df4c71aad5b44e31e08941bfd64020" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;, &lt;a href=&quot;perldbmfilter&quot;&gt;perldbmfilter&lt;/a&gt;, &lt;a href=&quot;fcntl&quot;&gt;Fcntl&lt;/a&gt;</source>
          <target state="translated">참조 &lt;a href=&quot;functions/tie&quot;&gt;넥타이&lt;/a&gt; , &lt;a href=&quot;perldbmfilter&quot;&gt;perldbmfilter&lt;/a&gt; , &lt;a href=&quot;fcntl&quot;&gt;fcntl을&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f2bcd07d2431ac860252ec173305db3f690b09ce" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;functions/vec&quot;&gt;vec&lt;/a&gt; for information on how to manipulate individual bits in a bit vector.</source>
          <target state="translated">비트 벡터에서 개별 비트를 조작하는 방법에 대한 정보는 &lt;a href=&quot;functions/vec&quot;&gt;vec&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5e5faab760890d79b2e8bc315d24e6c65c65fe07" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://cygwin.com/faq/faq-nochunks.html#faq.using.fixing-fork-failures&quot;&gt;http://cygwin.com/faq/faq-nochunks.html#faq.using.fixing-fork-failures&lt;/a&gt; It helps if not too many DLLs are loaded in memory so the available address space is larger, e.g. stopping the MS Internet Explorer might help.</source>
          <target state="translated">&lt;a href=&quot;http://cygwin.com/faq/faq-nochunks.html#faq.using.fixing-fork-failures&quot;&gt;http://cygwin.com/faq/faq-nochunks.html#faq.using.fixing-fork-failures&lt;/a&gt; 참조 너무 많은 DLL이 메모리에로드되지 않으면 사용 가능한 주소 공간이 커지므로 도움이됩니다 (예 : MS 인터넷 중지). 탐색기가 도움이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="945e0c7eadb84d3f07c95ef0218c299b85e26b64" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://developer.blackberry.com/native/documentation/cascades/getting_started/setting_up.html&quot;&gt;http://developer.blackberry.com/native/documentation/cascades/getting_started/setting_up.html&lt;/a&gt; for instructions to set up your device prior to attempting anything else.</source>
          <target state="translated">다른 방법을 시도하기 전에 장치를 설정하는 지침 은 &lt;a href=&quot;http://developer.blackberry.com/native/documentation/cascades/getting_started/setting_up.html&quot;&gt;http://developer.blackberry.com/native/documentation/cascades/getting_started/setting_up.html&lt;/a&gt; 을 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="12695444c245fc3e26b3c842dfd1ab394b22bd66" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://search.cpan.org/dist/PGPLOT&quot;&gt;http://search.cpan.org/dist/PGPLOT&lt;/a&gt; for the code.</source>
          <target state="translated">코드는 &lt;a href=&quot;http://search.cpan.org/dist/PGPLOT&quot;&gt;http://search.cpan.org/dist/PGPLOT&lt;/a&gt; 을 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="2468367eb8d553c9e424fb8393624c4bd2fffd92" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://search.cpan.org/perldoc/IO::Deflate&quot;&gt;IO::Deflate&lt;/a&gt; and &lt;a href=&quot;http://search.cpan.org/perldoc/IO::Inflate&quot;&gt;IO::Inflate&lt;/a&gt; included with this distribution for an alternative interface for reading/writing RFC 1950 files/buffers.</source>
          <target state="translated">RFC 1950 파일 / 버퍼 읽기 / 쓰기를위한 대체 인터페이스에 대해서는이 배포판에 포함 된 &lt;a href=&quot;http://search.cpan.org/perldoc/IO::Deflate&quot;&gt;IO :: Deflate&lt;/a&gt; 및 &lt;a href=&quot;http://search.cpan.org/perldoc/IO::Inflate&quot;&gt;IO :: Inflate를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7b2f03bb8037ab899f4bb184a9045b3b297eddea" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.cpan.org%2fports%2f&quot;&gt;CPAN Ports&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;http://search.cpan.org/perldoc/http:#%2fwww.cpan.org%2fports%2f&quot;&gt;CPAN 포트&lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="8e4c2383d84186885975bc1ea266c546fbcbe6d7" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://www.alanwood.net/unicode/&quot;&gt;http://www.alanwood.net/unicode/&lt;/a&gt; and &lt;a href=&quot;http://www.cl.cam.ac.uk/~mgk25/unicode.html&quot;&gt;http://www.cl.cam.ac.uk/~mgk25/unicode.html&lt;/a&gt;</source>
          <target state="translated">참조 &lt;a href=&quot;http://www.alanwood.net/unicode/&quot;&gt;http://www.alanwood.net/unicode/&lt;/a&gt; 및 &lt;a href=&quot;http://www.cl.cam.ac.uk/~mgk25/unicode.html&quot;&gt;http://www.cl.cam.ac.uk/~mgk25/unicode.html에서&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="99ce21958aa0db22b5723ac337d2286f8c5e33a3" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://www.cs.rice.edu/~scrosby/hash/&quot;&gt;http://www.cs.rice.edu/~scrosby/hash/&lt;/a&gt; for more information, and any computer science textbook on algorithmic complexity.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;http://www.cs.rice.edu/~scrosby/hash/&quot;&gt;http://www.cs.rice.edu/~scrosby/hash/&lt;/a&gt; 및 알고리즘 복잡성에 대한 컴퓨터 과학 교과서를 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="ce02b3b9db93f433f63696e3d1917e7f9836187b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://www.perl.com/perl/misc/Artistic.html&quot;&gt;http://www.perl.com/perl/misc/Artistic.html&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;http://www.perl.com/perl/misc/Artistic.html&quot;&gt;http://www.perl.com/perl/misc/Artistic.html을&lt;/a&gt; 참조 하십시오</target>
        </trans-unit>
        <trans-unit id="cc52ab8ff41c4d0c988b0b199b0c86093ae8fd01" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://perldoc.perl.org/5.26.0/perlhist.html&quot;&gt;perlhist&lt;/a&gt; for a history of Perl revisions.</source>
          <target state="translated">Perl 개정 내역을 보려면 &lt;a href=&quot;https://perldoc.perl.org/5.26.0/perlhist.html&quot;&gt;perlhist&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0931c0ab9141f229a0c6af999f002972965c4586" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;i18n/langinfo&quot;&gt;I18N::Langinfo&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;i18n/langinfo&quot;&gt;I18N :: Langinfo&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ea88ee3cb91b0285e8521da3ad715c02458ef952" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;ipc/open2&quot;&gt;IPC::Open2&lt;/a&gt;, &lt;a href=&quot;ipc/open3&quot;&gt;IPC::Open3&lt;/a&gt;, and &lt;a href=&quot;perlipc#Bidirectional-Communication-with-Another-Process&quot;&gt;Bidirectional Communication with Another Process in perlipc&lt;/a&gt; for examples of such things.</source>
          <target state="translated">&lt;a href=&quot;ipc/open2&quot;&gt;IPC :: Open2&lt;/a&gt; , &lt;a href=&quot;ipc/open3&quot;&gt;IPC :: Open3&lt;/a&gt; 및 &lt;a href=&quot;perlipc#Bidirectional-Communication-with-Another-Process&quot;&gt;perlipc의 다른 프로세스&lt;/a&gt; 와의 양방향 통신을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="eb7c82adcc75b32ae9e253fb64a0d32eb6b79e18" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;makemaker&quot;&gt;ExtUtils::MakeMaker&lt;/a&gt; for patching and contact information.</source>
          <target state="translated">패치 및 연락처 정보는 &lt;a href=&quot;makemaker&quot;&gt;ExtUtils :: MakeMaker&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9ca559ae70940dd6aa2f3e8deb924f98b53d6a27" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;makemaker/tutorial&quot;&gt;ExtUtils::MakeMaker::Tutorial&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;makemaker/tutorial&quot;&gt;ExtUtils :: MakeMaker :: Tutorial을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7a7ca226b3ffe2ea5d0f1d6a0d50f654317a3960" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;mm_unix&quot;&gt;ExtUtils::MM_Unix&lt;/a&gt; for &lt;a href=&quot;mm_any&quot;&gt;ExtUtils::MM_Any&lt;/a&gt; for documentation on the methods overridden here.</source>
          <target state="translated">보기 &lt;a href=&quot;mm_unix&quot;&gt;위한 ExtUtils을 :: MM_Unix을&lt;/a&gt; 위한 &lt;a href=&quot;mm_any&quot;&gt;위한 ExtUtils :: MM_Any을&lt;/a&gt; 여기에 대체 방법에 대한 설명서를 위해.</target>
        </trans-unit>
        <trans-unit id="8fb95d1acac93c5f08cddc5497b853220bb3ab6e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;module/corelist&quot;&gt;Module::CoreList&lt;/a&gt; for one.</source>
          <target state="translated">하나는 &lt;a href=&quot;module/corelist&quot;&gt;Module :: CoreList&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="afe93e58af18b14c3b068b54d5ad18108232c97f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;open3&quot;&gt;IPC::Open3&lt;/a&gt; for an alternative that handles STDERR as well. This function is really just a wrapper around open3().</source>
          <target state="translated">STDERR도 처리하는 대안 은 &lt;a href=&quot;open3&quot;&gt;IPC :: Open3&lt;/a&gt; 을 참조하십시오 . 이 함수는 실제로 open3 ()의 래퍼입니다.</target>
        </trans-unit>
        <trans-unit id="7fad32865e66fae2d9c012b4a69e272f754e4ebe" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;pack&quot;&gt;pack&lt;/a&gt; for more examples and notes.</source>
          <target state="translated">더 많은 예제와 참고 사항 은 &lt;a href=&quot;pack&quot;&gt;팩&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="01c329e88ceb1777b6d32a7cc55b6911aa2a7bec" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;parser&quot;&gt;Pod::Parser&lt;/a&gt;, &lt;a href=&quot;select&quot;&gt;Pod::Select&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;parser&quot;&gt;Pod :: Parser&lt;/a&gt; , &lt;a href=&quot;select&quot;&gt;Pod :: Select를&lt;/a&gt; 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="4cd20a4a0f216e0c7f6fa18c97df852db257f281" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;parser/iteratorfactory&quot;&gt;TAP::Parser::IteratorFactory&lt;/a&gt;, &lt;a href=&quot;parser/sourcehandler&quot;&gt;TAP::Parser::SourceHandler&lt;/a&gt; and subclasses for more details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;parser/iteratorfactory&quot;&gt;TAP :: Parser :: IteratorFactory&lt;/a&gt; , &lt;a href=&quot;parser/sourcehandler&quot;&gt;TAP :: Parser :: SourceHandler&lt;/a&gt; 및 서브 클래스를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="fc836e4fa8490d1237ffacc6441c56c6507773e2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlapi#PL_keyword_plugin&quot;&gt;PL_keyword_plugin in perlapi&lt;/a&gt; for the mechanism.</source>
          <target state="translated">메커니즘 &lt;a href=&quot;perlapi#PL_keyword_plugin&quot;&gt;에&lt;/a&gt; 대해서는 perlapi의 PL_keyword_plugin 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="537dd0698345523cc865f14852d1db2c03bb7c70" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlapi#svtype&quot;&gt;svtype in perlapi&lt;/a&gt; for more details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;perlapi#svtype&quot;&gt;perlapi의 svtype&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1acf9d127e57a859c95eb32236787ede1adcc482" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perldebguts#Debugger-Internals&quot;&gt;Debugger Internals in perldebguts&lt;/a&gt; for details.</source>
          <target state="translated">자세한 내용 &lt;a href=&quot;perldebguts#Debugger-Internals&quot;&gt;은 perldebguts의 Debugger Internals를&lt;/a&gt; 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="2ef90f2eaa033cc70947d426569b755d35159524" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perldebug&quot;&gt;perldebug&lt;/a&gt; for details and variations.</source>
          <target state="translated">자세한 내용과 변형 은 &lt;a href=&quot;perldebug&quot;&gt;perldebug&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2ab48d58dafe2080846717e88408c47a657578ac" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perldebug#Configurable-Options&quot;&gt;Configurable Options in perldebug&lt;/a&gt; for a description of options parsed by &lt;code&gt;DB::parse_options(string)&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;DB::parse_options(string)&lt;/code&gt; 의해 구문 분석 된 옵션에 대한 설명은 &lt;a href=&quot;perldebug#Configurable-Options&quot;&gt;perldebug의 구성 가능한 옵션을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="507fce40ea81e1d2b2136e58ea87bdcdbec4dcf6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perldiag&quot;&gt;perldiag&lt;/a&gt; for details about error messages.</source>
          <target state="translated">오류 메시지에 대한 자세한 내용은 &lt;a href=&quot;perldiag&quot;&gt;perldiag&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fc3cede9685eccbaf724f0cc2e01b5e840d93d61" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perldiag&quot;&gt;perldiag&lt;/a&gt; for explanations of all Perl's diagnostics. The &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;
diagnostics&lt;/code&gt; pragma automatically turns Perl's normally terse warnings and errors into these longer forms.</source>
          <target state="translated">모든 Perl 진단에 대한 설명은 &lt;a href=&quot;perldiag&quot;&gt;perldiag&lt;/a&gt; 를 참조하십시오 . &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; diagnostics&lt;/code&gt; pragma는 자동으로 이러한 이상 형태로 펄의 일반적으로 간결 경고 및 오류를 켭니다.</target>
        </trans-unit>
        <trans-unit id="96d5159d1cbd73f127422735b4b7f257183ca119" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlfork&quot;&gt;perlfork&lt;/a&gt; for more details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;perlfork&quot;&gt;perlfork&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="99a8c6ca7ea639ec9ceaca35f003ab62962b4710" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlform&quot;&gt;perlform&lt;/a&gt; for many details and examples.</source>
          <target state="translated">자세한 내용과 예는 &lt;a href=&quot;perlform&quot;&gt;perlform&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ebb59b17bbac7855100933a8e5aee451474a1653" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt; for complete descriptions of each of the following supported &lt;code&gt;FileHandle&lt;/code&gt; methods, which are just front ends for the corresponding built-in functions:</source>
          <target state="translated">지원되는 다음 내장 &lt;code&gt;FileHandle&lt;/code&gt; 메소드에 대한 완전한 설명은 &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt; 를 참조하십시오 . 해당 내장 함수의 프론트 엔드입니다.</target>
        </trans-unit>
        <trans-unit id="24f1df6d0c2aa9bd5f9f7bae780034b85ed98920" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlgit&quot;&gt;perlgit&lt;/a&gt; for detailed information about Perl's Git repository.</source>
          <target state="translated">Perl의 Git 저장소에 대한 자세한 정보는 &lt;a href=&quot;perlgit&quot;&gt;perlgit&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="856a30771ae6f035504c5ee6c944c0c181d73b8a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlguts#How-multiple-interpreters-and-concurrency-are-supported&quot;&gt;How multiple interpreters and concurrency are supported in perlguts&lt;/a&gt; for further discussion about context.</source>
          <target state="translated">컨텍스트에 대한 자세한 설명은 &lt;a href=&quot;perlguts#How-multiple-interpreters-and-concurrency-are-supported&quot;&gt;Perlgut에서 다중 인터프리터 및 동시성 지원 방법을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="018cb5a7e283b5d6dcfd2da2d70718c9c3a039f4" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlguts#Localizing-changes&quot;&gt;Localizing changes in perlguts&lt;/a&gt; for how to use the save stack.</source>
          <target state="translated">저장 스택을 사용하는 방법 &lt;a href=&quot;perlguts#Localizing-changes&quot;&gt;에 대해서는 perlgut에서 변경 사항 현지화를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8daeddf17b7ab12abdff68d06e4e96aa92ce25bc" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlguts#Understanding-the-Magic-of-Tied-Hashes-and-Arrays&quot;&gt;Understanding the Magic of Tied Hashes and Arrays in perlguts&lt;/a&gt; for more information on how to use this function on tied arrays.</source>
          <target state="translated">연결된 배열에서이 기능을 사용하는 방법에 대한 자세한 내용 &lt;a href=&quot;perlguts#Understanding-the-Magic-of-Tied-Hashes-and-Arrays&quot;&gt;은 perlguts에서 묶음 해시 및 배열의 ​​마법 이해를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0afe304992d62dbdef57f985c4d7a8fa8c29cf6b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlguts#Understanding-the-Magic-of-Tied-Hashes-and-Arrays&quot;&gt;Understanding the Magic of Tied Hashes and Arrays in perlguts&lt;/a&gt; for more information on how to use this function on tied hashes.</source>
          <target state="translated">연결 해시에서이 함수를 사용하는 방법에 대한 자세한 내용 &lt;a href=&quot;perlguts#Understanding-the-Magic-of-Tied-Hashes-and-Arrays&quot;&gt;은 perlguts에서 묶음 해시 및 배열의 ​​마법 이해를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="23816187840d5b58e8ce23aa1d1f945499e59413" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlguts#Unicode-Support&quot;&gt;Unicode Support in perlguts&lt;/a&gt; for an introduction to Unicode at the XS level, and &lt;a href=&quot;perlapi#Unicode-Support&quot;&gt;Unicode Support in perlapi&lt;/a&gt; for the API details.</source>
          <target state="translated">참조 &lt;a href=&quot;perlguts#Unicode-Support&quot;&gt;perlguts에서 유니 코드 지원&lt;/a&gt; XS를 수준에서 유니 코드에 대해 소개하고, &lt;a href=&quot;perlapi#Unicode-Support&quot;&gt;perlapi에서 유니 코드 지원&lt;/a&gt; 은 API 자세한 내용은.</target>
        </trans-unit>
        <trans-unit id="9826310e53066a41827e95ae082ef5e101adb996" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlguts#XSUBs-and-the-Argument-Stack&quot;&gt;XSUBs and the Argument Stack in perlguts&lt;/a&gt; for details on how the XPUSH macros work.</source>
          <target state="translated">XPUSH 매크로의 작동 방식에 대한 자세한 내용 &lt;a href=&quot;perlguts#XSUBs-and-the-Argument-Stack&quot;&gt;은 perlguts에서 XSUB 및 인수 스택을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fda0e3817b220a865963f0c4dad0e4830032feaf" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlhack&quot;&gt;perlhack&lt;/a&gt; for an explanation of Perl development, including the &lt;a href=&quot;perlhack#SUPER-QUICK-PATCH-GUIDE&quot;&gt;Super Quick Patch Guide&lt;/a&gt; for making and submitting a small patch.</source>
          <target state="translated">작은 패치 작성 및 제출을위한 &lt;a href=&quot;perlhack#SUPER-QUICK-PATCH-GUIDE&quot;&gt;Super Quick Patch Guide&lt;/a&gt; 를 포함하여 Perl 개발에 대한 설명은 &lt;a href=&quot;perlhack&quot;&gt;perlhack&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2898d2e4a5f89f77754a8e61409566e6f2be9654" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlhack&quot;&gt;perlhack&lt;/a&gt; for details on how to submit this patch.</source>
          <target state="translated">이 패치를 제출하는 방법에 대한 자세한 내용 은 &lt;a href=&quot;perlhack&quot;&gt;perlhack&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ee1671ee83deb45f1ba85aeb36ac184cf85218eb" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlhpux#nss_delete-core-dump-from-op%2fpwent-or-op%2fgrent&quot;&gt;nss_delete core dump from op/pwent or op/grent in perlhpux&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;perlhpux#nss_delete-core-dump-from-op%2fpwent-or-op%2fgrent&quot;&gt;perlhpux의 op / pwent 또는 op / grent에서 nss_delete 코어 덤프를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c8405e2fe730d81b8f5c9bd5d83e543241916750" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlinterp&quot;&gt;perlinterp&lt;/a&gt; for more details on the files that make up the Perl interpreter, as well as details on how it works.</source>
          <target state="translated">Perl 인터프리터를 구성하는 파일에 대한 자세한 내용과 &lt;a href=&quot;perlinterp&quot;&gt;작동 방식에&lt;/a&gt; 대한 자세한 내용 은 perlinterp 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9abeb4449ef2604d5e96502e4503f28ae32dd249" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlio&quot;&gt;PerlIO&lt;/a&gt; for the &lt;code&gt;:utf8&lt;/code&gt; layer, &lt;a href=&quot;perlio/encoding&quot;&gt;PerlIO::encoding&lt;/a&gt; and &lt;a href=&quot;encode/perlio&quot;&gt;Encode::PerlIO&lt;/a&gt; for the &lt;code&gt;:encoding()&lt;/code&gt; layer, and &lt;a href=&quot;encode/supported&quot;&gt;Encode::Supported&lt;/a&gt; for many encodings supported by the &lt;code&gt;Encode&lt;/code&gt; module.</source>
          <target state="translated">참조 &lt;a href=&quot;perlio&quot;&gt;은 PerlIO는&lt;/a&gt; 대해 &lt;code&gt;:utf8&lt;/code&gt; 층 &lt;a href=&quot;perlio/encoding&quot;&gt;은 PerlIO는 : 인코딩&lt;/a&gt; 및 &lt;a href=&quot;encode/perlio&quot;&gt;인코딩은 PerlIO ::&lt;/a&gt; 위해 &lt;code&gt;:encoding()&lt;/code&gt; 층 및 &lt;a href=&quot;encode/supported&quot;&gt;인코딩은 :: 지원&lt;/a&gt; 에 의해 지원되는 다수의 인코딩을위한 &lt;code&gt;Encode&lt;/code&gt; 모듈.</target>
        </trans-unit>
        <trans-unit id="3fa171ec2c92cf5c9eaa78b53a24c1f2c996c988" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlio/via&quot;&gt;PerlIO::via&lt;/a&gt; for details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;perlio/via&quot;&gt;PerlIO :: via&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7feec36eccfe24a9f8a7490c2b31f01ace9585f8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perliol&quot;&gt;perliol&lt;/a&gt; for detailed info on PerlIO.</source>
          <target state="translated">PerlIO에 대한 자세한 내용은 &lt;a href=&quot;perliol&quot;&gt;perliol&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d7fd1c83582e8199c35bed1061ad6e5667788b6f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perliol&quot;&gt;perliol&lt;/a&gt; for more information on the Perl IO abstraction layer. Perl must have been built with &lt;code&gt;-Duseperlio&lt;/code&gt; .</source>
          <target state="translated">Perl IO 추상화 계층에 대한 자세한 정보는 &lt;a href=&quot;perliol&quot;&gt;perliol&lt;/a&gt; 을 참조하십시오 . Perl은 &lt;code&gt;-Duseperlio&lt;/code&gt; 로 빌드해야합니다 .</target>
        </trans-unit>
        <trans-unit id="b3c00cb07b2b80671a11dd5dc8ccc4445d7a1964" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlipc&quot;&gt;perlipc&lt;/a&gt; for an example of socketpair use. Perl 5.8 and later will emulate socketpair using IP sockets to localhost if your system implements sockets but not socketpair.</source>
          <target state="translated">&lt;a href=&quot;perlipc&quot;&gt;소켓 쌍&lt;/a&gt; 사용의 예는 perlipc 를 참조하십시오 . 시스템이 소켓 쌍을 구현하지 않고 소켓을 구현하는 경우 Perl 5.8 이상은 IP 소켓을 사용하여 로컬 호스트에 대한 소켓 쌍을 에뮬레이트합니다.</target>
        </trans-unit>
        <trans-unit id="de48b95e37613b5f75eaa879c8a2561ec7993e4d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlipc#Safe-Pipe-Opens&quot;&gt;Safe Pipe Opens in perlipc&lt;/a&gt; for more examples of this.</source>
          <target state="translated">참조 &lt;a href=&quot;perlipc#Safe-Pipe-Opens&quot;&gt;perlipc에 안전 파이프를 열거&lt;/a&gt; 이 더 많은 예제.</target>
        </trans-unit>
        <trans-unit id="2ec51ff1a9c16a2a5c094bd7e3d3e4d9afc76551" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlipc#Signals&quot;&gt;Signals in perlipc&lt;/a&gt; for more details.</source>
          <target state="translated">자세한 내용 &lt;a href=&quot;perlipc#Signals&quot;&gt;은 perlipc의 신호&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c30bde8dacb2d8eb0fb67145aba7ca1921b53523" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlipc#Signals&quot;&gt;Signals in perlipc&lt;/a&gt; for other examples of code to do this. Zombies are not an issue with &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;(&quot;prog &amp;amp;&quot;)&lt;/code&gt; .</source>
          <target state="translated">&lt;a href=&quot;perlipc#Signals&quot;&gt;이를 수행&lt;/a&gt; 하는 다른 코드 예제는 perlipc의 신호를 참조하십시오 . 좀비는 &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;(&quot;prog &amp;amp;&quot;)&lt;/code&gt; 문제가 아닙니다 ( &quot;prog &amp;amp;&quot;) .</target>
        </trans-unit>
        <trans-unit id="1569e04ff3547cc6071c23ed540183d9dff460a6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt; for details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4f5ede378ffc0a712bf0fa5426e3fc697fc7cac1" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt; for information on locales. The L10N files are in</source>
          <target state="translated">로케일에 대한 정보는 &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt; 을 참조하십시오 . L10N 파일은</target>
        </trans-unit>
        <trans-unit id="c8bf9c5c77cbc62b1d02711bc7615d4c76744ce0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt; for more detailed information on how Perl supports locales.</source>
          <target state="translated">Perl이 로케일을 지원하는 방법에 대한 자세한 정보는 &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ac645e018e12e374a0abdd122f552472ebe60927" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perllocale#Unicode-and-UTF-8&quot;&gt;Unicode and UTF-8 in perllocale&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;perllocale#Unicode-and-UTF-8&quot;&gt;perllocale에서 유니 코드 및 UTF-8&lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="251639eb084694b07f94fed6ff3488fc99fd4a64" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlmod&quot;&gt;perlmod&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 정보는 &lt;a href=&quot;perlmod&quot;&gt;perlmod&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ba3a8f253da47d638d7046ba2322a3afb976f0d3" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlmod#BEGIN%2c-UNITCHECK%2c-CHECK%2c-INIT-and-END&quot;&gt;BEGIN, UNITCHECK, CHECK, INIT and END in perlmod&lt;/a&gt; about the special triggered code blocks, &lt;code&gt;BEGIN&lt;/code&gt; , &lt;code&gt;UNITCHECK&lt;/code&gt; , &lt;code&gt;CHECK&lt;/code&gt; , &lt;code&gt;INIT&lt;/code&gt; and &lt;code&gt;END&lt;/code&gt; .</source>
          <target state="translated">참조 &lt;a href=&quot;perlmod#BEGIN%2c-UNITCHECK%2c-CHECK%2c-INIT-and-END&quot;&gt;BEGIN, UNITCHECK는, CHECK, INIT 및 perlmod를에서 END&lt;/a&gt; 특별한 트리거 코드 블록에 대해는, &lt;code&gt;BEGIN&lt;/code&gt; , &lt;code&gt;UNITCHECK&lt;/code&gt; , &lt;code&gt;CHECK&lt;/code&gt; , &lt;code&gt;INIT&lt;/code&gt; 및 &lt;code&gt;END&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="48920c0784fa7847466f7fc8f760b78486c8bd0e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlmod#Making-your-module-threadsafe&quot;&gt;Making your module threadsafe in perlmod&lt;/a&gt; when creating modules that may be used in threaded applications, especially if those modules use non-Perl data, or XS code.</source>
          <target state="translated">스레드 응용 프로그램에서 사용될 수있는 모듈을 작성할 때, 특히 해당 모듈이 비 Perl 데이터 또는 XS 코드를 사용하는 경우 &lt;a href=&quot;perlmod#Making-your-module-threadsafe&quot;&gt;perlmod에서 모듈 스레드 안전화를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2dbec0bf12a50070137a3b7b8cef3b5cd4178658" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlmod#Packages&quot;&gt;Packages in perlmod&lt;/a&gt; for more information about packages, modules, and classes. See &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt; for other scoping issues.</source>
          <target state="translated">패키지, 모듈 및 클래스에 대한 자세한 내용은 &lt;a href=&quot;perlmod#Packages&quot;&gt;perlmod의 패키지를&lt;/a&gt; 참조하십시오 . 다른 범위 지정 문제에 대해서는 &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c314b6a45d86fe3727f9c31efb044a2e44ccbf8c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlmod#Perl-Modules&quot;&gt;Perl Modules in perlmod&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;perlmod#Perl-Modules&quot;&gt;perlmod의 Perl 모듈을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="06c2074fd797e7147bc8190fe65185f9c82cba22" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlmodlib&quot;&gt;perlmodlib&lt;/a&gt; for a list of standard modules and pragmas. See &lt;a href=&quot;perlrun&quot;&gt;perlrun&lt;/a&gt; for the &lt;code&gt;-M&lt;/code&gt; and &lt;code&gt;-m&lt;/code&gt; command-line options to Perl that give &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; functionality from the command-line.</source>
          <target state="translated">표준 모듈 및 pragma 목록은 &lt;a href=&quot;perlmodlib&quot;&gt;perlmodlib&lt;/a&gt; 를 참조하십시오 . 명령 행 에서 기능 을 제공 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; Perl 에 대한 &lt;code&gt;-M&lt;/code&gt; 및 &lt;code&gt;-m&lt;/code&gt; 명령 행 옵션에 대해서는 &lt;a href=&quot;perlrun&quot;&gt;perlrun&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0b6df179cd0b52b85173df251cbf179f4ebcee9a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlmodlib&quot;&gt;perlmodlib&lt;/a&gt; for general style issues related to building Perl modules and classes, as well as descriptions of the standard library and CPAN, &lt;a href=&quot;exporter&quot;&gt;Exporter&lt;/a&gt; for how Perl's standard import/export mechanism works, &lt;a href=&quot;perlootut&quot;&gt;perlootut&lt;/a&gt; and &lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt; for in-depth information on creating classes, &lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt; for a hard-core reference document on objects, &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt; for an explanation of functions and scoping, and &lt;a href=&quot;perlxstut&quot;&gt;perlxstut&lt;/a&gt; and &lt;a href=&quot;perlguts&quot;&gt;perlguts&lt;/a&gt; for more information on writing extension modules.</source>
          <target state="translated">참조 &lt;a href=&quot;perlmodlib&quot;&gt;perlmodlib&lt;/a&gt; 펄 모듈과 클래스뿐만 아니라, 표준 라이브러리 및 CPAN의 설명을 구축에 관한 일반적인 스타일의 문제에 대해, &lt;a href=&quot;exporter&quot;&gt;수출&lt;/a&gt; 을위한 방법 펄의 표준 가져 오기 / 내보내기 메커니즘의 작동, &lt;a href=&quot;perlootut&quot;&gt;perlootut&lt;/a&gt; 및 &lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt; 클래스 작성에 깊이있는 정보를 &lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt; 에 대한 객체에 대한 하드 코어 참조 문서, &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt; 기능 및 범위 지정, 그리고에 대한 설명 &lt;a href=&quot;perlxstut&quot;&gt;perlxstut&lt;/a&gt; 및 &lt;a href=&quot;perlguts&quot;&gt;perlguts&lt;/a&gt; 확장 모듈을 작성에 대한 자세한 정보를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9a67f36c355c94afa5f2194abf5d2edb2e81009d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlmodlib#Pragmatic-Modules&quot;&gt;Pragmatic Modules in perlmodlib&lt;/a&gt; and &lt;a href=&quot;strict#strict-subs&quot;&gt;strict subs in strict&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;perlmodlib#Pragmatic-Modules&quot;&gt;perlmodlib의 실용 모듈&lt;/a&gt; 및 &lt;a href=&quot;strict#strict-subs&quot;&gt;strict의 엄격한 &lt;/a&gt;하위를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9da8e13c45415ffe502ec4f548998fe2b55c8623" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlmodlib#Pragmatic-Modules&quot;&gt;Pragmatic Modules in perlmodlib&lt;/a&gt;, &lt;a href=&quot;perlop#Integer-Arithmetic&quot;&gt;Integer Arithmetic in perlop&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;perlmodlib#Pragmatic-Modules&quot;&gt;perlmodlib의 실용적인 모듈&lt;/a&gt; , &lt;a href=&quot;perlop#Integer-Arithmetic&quot;&gt;perlop의 정수 산술&lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="62976d8a73c6c4cbfdf369b6880fc6ac9c73f3b0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlmodlib#Pragmatic-Modules&quot;&gt;Pragmatic Modules in perlmodlib&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;perlmodlib#Pragmatic-Modules&quot;&gt;perlmodlib의 실용 모듈을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="563e259b553a2d0543c74163b5549c690239d3e1" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt; for more details on unary operators and the comma operator.</source>
          <target state="translated">단항 연산자와 쉼표 연산자에 대한 자세한 내용 은 &lt;a href=&quot;perlop&quot;&gt;perlop&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e56170f575bd7555ba5a7ac522a6168d3e660440" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlop#Bitwise-String-Operators&quot;&gt;Bitwise String Operators in perlop&lt;/a&gt; for details.</source>
          <target state="translated">자세한 내용 &lt;a href=&quot;perlop#Bitwise-String-Operators&quot;&gt;은 perlop의 비트 단위 문자열 연산자&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="0daac143e24931678e410c1147c16bad218f0bdf" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlopentut&quot;&gt;perlopentut&lt;/a&gt; for a kinder, gentler explanation of opening files.</source>
          <target state="translated">파일 열기에 대한 친절하고 부드러운 설명은 &lt;a href=&quot;perlopentut&quot;&gt;perlopentut&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1dd9474682f3f28a797a9e84ffa970a5bc4b9ecc" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlopentut&quot;&gt;perlopentut&lt;/a&gt; to learn about the uses of the O_* constants with sysopen().</source>
          <target state="translated">sysopen ()과 함께 O_ * 상수를 사용하는 방법에 대해서는 &lt;a href=&quot;perlopentut&quot;&gt;perlopentut&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f19e2229a02aef738f8ea7f0705a7c74e50cdbe1" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlpacktut&quot;&gt;perlpacktut&lt;/a&gt; for an introduction to this function.</source>
          <target state="translated">이 기능에 대한 소개는 &lt;a href=&quot;perlpacktut&quot;&gt;perlpacktut&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0285eafffc012e2606f0adde1cbfc987985c7680" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlpod&quot;&gt;perlpod&lt;/a&gt; for more information about the pod format.</source>
          <target state="translated">포드 형식에 대한 자세한 내용은 &lt;a href=&quot;perlpod&quot;&gt;perlpod&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d34c6a98d24a87a7c24f60e7bcaa7dfda004973e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlpod#Formatting-Codes&quot;&gt;Formatting Codes in perlpod&lt;/a&gt;, and several points in &lt;a href=&quot;#Notes-on-Implementing-Pod-Processors&quot;&gt;Notes on Implementing Pod Processors&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;perlpod#Formatting-Codes&quot;&gt;perlpod의 코드 포맷&lt;/a&gt; 및 &lt;a href=&quot;#Notes-on-Implementing-Pod-Processors&quot;&gt;포드 프로세서 구현&lt;/a&gt; 에 대한 참고 사항의 몇 가지 사항을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0b4ce36dc97a65c73b2e6189ec760aafbcbf4066" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt; for additional information on valid syntax for</source>
          <target state="translated">유효한 구문에 대한 추가 정보는 &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="f8b3213fac417f18926d75a4a003d38c5e1c238b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlre#(%3f%5b-%5d)&quot;&gt;(?[ ]) in perlre&lt;/a&gt;. If you don't want to use an experimental feature, you can use one of the following:</source>
          <target state="translated">&lt;a href=&quot;perlre#(%3f%5b-%5d)&quot;&gt;perlre의 (? [])를&lt;/a&gt; 참조하십시오 . 실험 기능을 사용하지 않으려면 다음 중 하나를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1463c792e5b0f58dcb85fd04f04951c9b87eb661" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlre#n&quot;&gt;n in perlre&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용 &lt;a href=&quot;perlre#n&quot;&gt;은 perlre에서 n&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="6c3716991c5281411a2fbc0a40a0c4b755db9afa" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlrebackslash#Misc&quot;&gt;Misc in perlrebackslash&lt;/a&gt; for details.</source>
          <target state="translated">자세한 내용 &lt;a href=&quot;perlrebackslash#Misc&quot;&gt;은 perlrebackslash의 기타를&lt;/a&gt; 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="ddc98254c656473d6aaa3815176dcb32a9a66139" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlrecharclass#Backslash-sequences&quot;&gt;Backslash sequences in perlrecharclass&lt;/a&gt; for details.</source>
          <target state="translated">자세한 내용 &lt;a href=&quot;perlrecharclass#Backslash-sequences&quot;&gt;은 perlrecharclass의 백 슬래시 시퀀스를&lt;/a&gt; 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="a82392c75c07f9f8b49b790483d506827f344fa8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlrecharclass#Bracketed-Character-Classes&quot;&gt;Bracketed Character Classes in perlrecharclass&lt;/a&gt; for details.</source>
          <target state="translated">자세한 내용 &lt;a href=&quot;perlrecharclass#Bracketed-Character-Classes&quot;&gt;은 perlrecharclass의 브라켓 문자 클래스&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="23d8e0736ea0023293ece7bbd3c8ea37f080ff55" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlrecharclass#Extended-Bracketed-Character-Classes&quot;&gt;Extended Bracketed Character Classes in perlrecharclass&lt;/a&gt; for details.</source>
          <target state="translated">자세한 내용 &lt;a href=&quot;perlrecharclass#Extended-Bracketed-Character-Classes&quot;&gt;은 perlrecharclass의 확장 브래킷 문자 클래스&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d8b2f908e662577514076a06d71fc832dbf4d519" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlrecharclass#Extended-Bracketed-Character-Classes&quot;&gt;Extended Bracketed Character Classes in perlrecharclass&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;perlrecharclass#Extended-Bracketed-Character-Classes&quot;&gt;perlrecharclass의 확장 된 브라켓 문자 클래스를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b06ce23f66b1a9b680964a359a19520b20adccb3" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlrecharclass#POSIX-Character-Classes&quot;&gt;POSIX Character Classes in perlrecharclass&lt;/a&gt; for details.</source>
          <target state="translated">자세한 내용 &lt;a href=&quot;perlrecharclass#POSIX-Character-Classes&quot;&gt;은 perlrecharclass의 POSIX 문자 클래스&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="f57adcb45e08033573c3f56d2477bcd8f9d261de" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlref#Assigning-to-References&quot;&gt;Assigning to References in perlref&lt;/a&gt; for details.</source>
          <target state="translated">자세한 내용 &lt;a href=&quot;perlref#Assigning-to-References&quot;&gt;은 perlref에서 참조에 지정을 참조&lt;/a&gt; 하십시오.</target>
        </trans-unit>
        <trans-unit id="8e6e625bd7b12488354f5742899a0cebc0d1a2d5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlref#Function-Templates&quot;&gt;Function Templates in perlref&lt;/a&gt; for more about manipulating functions by name in this way.</source>
          <target state="translated">이 방법으로 이름별로 함수를 조작하는 방법에 대한 자세한 내용 &lt;a href=&quot;perlref#Function-Templates&quot;&gt;은 perlref의 함수 템플릿을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="67f9bc227802927aafe326cae82167361c057e62" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlref#Function-Templates&quot;&gt;Function Templates in perlref&lt;/a&gt; for more about references and closures. See &lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt; if you'd like to learn about calling C subroutines from Perl. See &lt;a href=&quot;perlembed&quot;&gt;perlembed&lt;/a&gt; if you'd like to learn about calling Perl subroutines from C. See &lt;a href=&quot;perlmod&quot;&gt;perlmod&lt;/a&gt; to learn about bundling up your functions in separate files. See &lt;a href=&quot;perlmodlib&quot;&gt;perlmodlib&lt;/a&gt; to learn what library modules come standard on your system. See &lt;a href=&quot;perlootut&quot;&gt;perlootut&lt;/a&gt; to learn how to make object method calls.</source>
          <target state="translated">참조 및 클로저에 대한 자세한 내용 &lt;a href=&quot;perlref#Function-Templates&quot;&gt;은 perlref의 함수 템플릿을&lt;/a&gt; 참조하십시오 . Perl에서 C 서브 루틴 호출에 대해 배우 &lt;a href=&quot;perlxs&quot;&gt;려면 perlxs를&lt;/a&gt; 참조하십시오 . 참조 &lt;a href=&quot;perlembed&quot;&gt;perlembed&lt;/a&gt; 당신은 C. 참고 항목에서 펄 서브 루틴 호출에 대해 알아 보려면 &lt;a href=&quot;perlmod&quot;&gt;perlmod를&lt;/a&gt; 별도의 파일에 기능을 번들에 대해 배울 수 있습니다. 시스템에서 표준으로 제공되는 라이브러리 모듈을 배우려면 &lt;a href=&quot;perlmodlib&quot;&gt;perlmodlib&lt;/a&gt; 를 참조하십시오 . 객체 메소드 호출을 작성하는 방법에 대해서는 &lt;a href=&quot;perlootut&quot;&gt;perlootut&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7a2c4441f9c059045721d8856b0625292d24d5b3" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlrun&quot;&gt;perlrun&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;perlrun&quot;&gt;perlrun을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="05a32756b04d398c3c77dcd7261586f5d74c0150" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlsec#Algorithmic-Complexity-Attacks&quot;&gt;Algorithmic Complexity Attacks in perlsec&lt;/a&gt; and &lt;a href=&quot;#PERL_HASH_SEED&quot;&gt;PERL_HASH_SEED&lt;/a&gt; and &lt;a href=&quot;#PERL_HASH_SEED_DEBUG&quot;&gt;PERL_HASH_SEED_DEBUG&lt;/a&gt; for more information. You can get and set the key traversal mask for a specific hash by using the &lt;code&gt;hash_traversal_mask()&lt;/code&gt; function from &lt;a href=&quot;hash/util&quot;&gt;Hash::Util&lt;/a&gt;.</source>
          <target state="translated">자세한 내용 &lt;a href=&quot;perlsec#Algorithmic-Complexity-Attacks&quot;&gt;은 perlsec&lt;/a&gt; 및 &lt;a href=&quot;#PERL_HASH_SEED&quot;&gt;PERL_HASH_SEED&lt;/a&gt; 및 &lt;a href=&quot;#PERL_HASH_SEED_DEBUG&quot;&gt;PERL_HASH_SEED_DEBUG의 &lt;/a&gt;알고리즘 복잡성 공격 을 참조하십시오. &lt;a href=&quot;hash/util&quot;&gt;Hash :: Util&lt;/a&gt; 의 &lt;code&gt;hash_traversal_mask()&lt;/code&gt; 함수를 사용하여 특정 해시의 키 순회 마스크를 가져오고 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bc83066c109af1f74bc6e736ae6976fb535c3a68" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlsec#Algorithmic-Complexity-Attacks&quot;&gt;Algorithmic Complexity Attacks in perlsec&lt;/a&gt;, &lt;a href=&quot;#PERL_PERTURB_KEYS&quot;&gt;PERL_PERTURB_KEYS&lt;/a&gt;, and &lt;a href=&quot;#PERL_HASH_SEED_DEBUG&quot;&gt;PERL_HASH_SEED_DEBUG&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 내용 &lt;a href=&quot;perlsec#Algorithmic-Complexity-Attacks&quot;&gt;은 perlsec&lt;/a&gt; , &lt;a href=&quot;#PERL_PERTURB_KEYS&quot;&gt;PERL_PERTURB_KEYS&lt;/a&gt; 및 &lt;a href=&quot;#PERL_HASH_SEED_DEBUG&quot;&gt;PERL_HASH_SEED_DEBUG의 &lt;/a&gt;알고리즘 복잡성 공격 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7578b1f97324785fc4944af282d89e98f8efd38c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt; and &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt; for details about subroutines and references; see &lt;a href=&quot;attributes&quot;&gt;attributes&lt;/a&gt; and &lt;a href=&quot;attribute/handlers&quot;&gt;Attribute::Handlers&lt;/a&gt; for more information about attributes.</source>
          <target state="translated">참조 &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt; 및 &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt; 서브 루틴 및 참조에 대한 자세한 내용을; &lt;a href=&quot;attributes&quot;&gt;속성에&lt;/a&gt; 대한 자세한 내용 은 속성 및 &lt;a href=&quot;attribute/handlers&quot;&gt;Attribute :: Handlers&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="fbff563dc59a3b875542ce0184005c83684591e8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt; for examples of using these as indirect filehandles in functions.</source>
          <target state="translated">함수에서이를 간접 파일 핸들로 사용하는 예는 &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="11900e927e19141a3c018aa0869d632e04dd84ec" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt; for other scoping issues related to my() and local(), and &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt; regarding closures.</source>
          <target state="translated">참조 &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt; 내 ()와 (로컬)와 관련된 다른 범위 지정 문제에 대해 &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt; 에 대한 폐쇄.</target>
        </trans-unit>
        <trans-unit id="9825e954666eb7c1bfeda7e6a661634f25dc5c34" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;perlsub&quot;&gt;perlsub를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c88488f2e512f35271305383f908466cf8057f33" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlsub#Persistent-Private-Variables&quot;&gt;Persistent Private Variables in perlsub&lt;/a&gt; for details.</source>
          <target state="translated">자세한 내용 &lt;a href=&quot;perlsub#Persistent-Private-Variables&quot;&gt;은 perlsub의 영구 개인 변수&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a320e9fd6f29231c75d7198e851a4c7383e39db8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlsub#Persistent-Private-Variables&quot;&gt;Persistent Private Variables in perlsub&lt;/a&gt; for more information. The discussion of closures in &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt; may help you even though we did not use anonymous subroutines in this answer. See &lt;a href=&quot;perlsub#Persistent-Private-Variables&quot;&gt;Persistent Private Variables in perlsub&lt;/a&gt; for details.</source>
          <target state="translated">자세한 정보 &lt;a href=&quot;perlsub#Persistent-Private-Variables&quot;&gt;는 perlsub의 영구 개인 변수&lt;/a&gt; 를 참조하십시오. &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt; 에서의 클로저에 대한 논의는 이 답변에서 익명의 서브 루틴을 사용하지 않았더라도 도움이 될 수 있습니다. 자세한 내용 &lt;a href=&quot;perlsub#Persistent-Private-Variables&quot;&gt;은 perlsub의 영구 개인 변수&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="5902f43c66efafac0892acaf6b04042096839dc0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlsub#Private-Variables-via-my()&quot;&gt;Private Variables via my() in perlsub&lt;/a&gt; and &lt;a href=&quot;perlsub#Temporary-Values-via-local()&quot;&gt;Temporary Values via local() in perlsub&lt;/a&gt; for excruciating details.</source>
          <target state="translated">자세한 내용 &lt;a href=&quot;perlsub#Private-Variables-via-my()&quot;&gt;은 perlsub에서 my ()를 통한 전용 변수&lt;/a&gt; 및 perlsub에서 &lt;a href=&quot;perlsub#Temporary-Values-via-local()&quot;&gt;local ()을 통한 임시 값을&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="fca40b43307292de3ffd6cd7918940ab49650e50" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlsub#Signatures&quot;&gt;Signatures in perlsub&lt;/a&gt; for details.</source>
          <target state="translated">자세한 내용 &lt;a href=&quot;perlsub#Signatures&quot;&gt;은 perlsub의 서명을&lt;/a&gt; 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="f454fad7196b37cd19f741a5805c180c5619ba68" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlsyn&quot;&gt;perlsyn&lt;/a&gt; for other examples in this style.</source>
          <target state="translated">이 스타일의 다른 예제는 &lt;a href=&quot;perlsyn&quot;&gt;perlsyn&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ca5e0e6381ecee516815ca12d328b85e216e2e52" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlsyn#Switch-Statements&quot;&gt;Switch Statements in perlsyn&lt;/a&gt; for details.</source>
          <target state="translated">자세한 내용 &lt;a href=&quot;perlsyn#Switch-Statements&quot;&gt;은 perlsyn의 스위치 문을&lt;/a&gt; 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="580fba8485f5c5a1625260f46bfa7d3fe92e342b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlunicode&quot;&gt;perlunicode&lt;/a&gt; for more about Unicode.</source>
          <target state="translated">유니 코드에 대한 자세한 내용은 &lt;a href=&quot;perlunicode&quot;&gt;perlunicode&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6bfd96ba5ce0763e2daff8d02efe4e68dcdfc7be" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlunicode#Beyond-Unicode-code-points&quot;&gt;Beyond Unicode code points in perlunicode&lt;/a&gt; for more information.</source>
          <target state="translated">자세한 정보 &lt;a href=&quot;perlunicode#Beyond-Unicode-code-points&quot;&gt;는 perlunicode에서 유니 코드 코드 포인트 너머&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4e340a20d7e0f22a460b9c2169b23aa2e358a35a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perluniintro#Unicode-and-EBCDIC&quot;&gt;Unicode and EBCDIC in perluniintro&lt;/a&gt; and &lt;a href=&quot;#CONVERSIONS&quot;&gt;CONVERSIONS&lt;/a&gt; for other options.</source>
          <target state="translated">다른 옵션 &lt;a href=&quot;perluniintro#Unicode-and-EBCDIC&quot;&gt;은 perluniintro&lt;/a&gt; 및 &lt;a href=&quot;#CONVERSIONS&quot;&gt;CONVERSIONS의 &lt;/a&gt;유니 코드 및 EBCDIC을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d42789cfdaacbb5c92c9515872baf49bf8c2e8fa" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt; for a complete list of these.</source>
          <target state="translated">전체 목록은 &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e0604ead8033077a764aa6344677fdfceddb2d21" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt; for a description of Perl's built-in variables and a discussion of legal variable names. See &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt;, &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt;, and &lt;a href=&quot;perlmod#Symbol-Tables&quot;&gt;Symbol Tables in perlmod&lt;/a&gt; for more discussion on typeglobs and the &lt;code&gt;*foo{THING}&lt;/code&gt; syntax.</source>
          <target state="translated">Perl의 내장 변수에 대한 설명과 유효한 변수 이름에 대한 설명은 &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt; 를 참조하십시오 . typeglobs 및 &lt;code&gt;*foo{THING}&lt;/code&gt; 구문 에 대한 자세한 설명 &lt;a href=&quot;perlmod#Symbol-Tables&quot;&gt;은 perlmod의 &lt;/a&gt;&lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt; , &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt; 및 Symbol Tables를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="814867dbf4101593902d2d34050b5fa67499d1a5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt; for complete descriptions of each of the following supported &lt;code&gt;FileHandle&lt;/code&gt; methods:</source>
          <target state="translated">지원되는 다음 &lt;code&gt;FileHandle&lt;/code&gt; 메소드 각각에 대한 자세한 설명은 &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="98e3e1631bf77453f6eed4d5fbc7596b58ccbf6b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt; for details on setting &lt;code&gt;%SIG&lt;/code&gt; entries and for more examples. See the Carp module for other kinds of warnings using its carp() and cluck() functions.</source>
          <target state="translated">&lt;code&gt;%SIG&lt;/code&gt; 항목 설정에 대한 자세한 내용 과 예제는 &lt;a href=&quot;perlvar&quot;&gt;perlvar&lt;/a&gt; 를 참조하십시오 . carp () 및 cluck () 함수를 사용하는 다른 종류의 경고는 Carp 모듈을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c566c9fdb8fd38a28ebc9a39b4d0c1b84510579e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt; and &lt;a href=&quot;perlxstut&quot;&gt;perlxstut&lt;/a&gt; for additional details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt; 및 &lt;a href=&quot;perlxstut&quot;&gt;perlxstut&lt;/a&gt; 를 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="e5be4ec63877dd46a323d6acef0aca557f1f53ce" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;perlxstut&quot;&gt;perlxstut&lt;/a&gt; for a tutorial on the whole extension creation process.</source>
          <target state="translated">전체 확장 작성 프로세스에 대한 자습서는 &lt;a href=&quot;perlxstut&quot;&gt;perlxstut&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e651b6ac791a176d6926f404d81718d149a809d0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;pod/html&quot;&gt;Pod::Html&lt;/a&gt; for a list of known bugs in the translator.</source>
          <target state="translated">번역기의 알려진 버그 목록은 &lt;a href=&quot;pod/html&quot;&gt;Pod :: Html&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="607e168a654f06346ceee0e0923bb2430ed2cf7c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;re#'strict'-mode&quot;&gt;'strict' in re&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;re#'strict'-mode&quot;&gt;re의 'strict'를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1bb5b43713359435a05f7058014a413c0c96e506" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;re#'strict'-mode&quot;&gt;'strict' mode in re&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;re#'strict'-mode&quot;&gt;다시 '엄격한'모드를&lt;/a&gt; 참조하십시오</target>
        </trans-unit>
        <trans-unit id="563dde6d6a958ec86edd1335087ed33faccb2cc7" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;seek&quot;&gt;seek&lt;/a&gt; for some details about mixing reading and writing.</source>
          <target state="translated">읽기와 쓰기의 혼합에 대한 자세한 내용은 &lt;a href=&quot;seek&quot;&gt;찾기&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b0421444fdb3fc6676183669854331211545c5d1" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;selfloader&quot;&gt;SelfLoader&lt;/a&gt; for more description of __DATA__, and an example of its use. Note that you cannot read from the DATA filehandle in a BEGIN block: the BEGIN block is executed as soon as it is seen (during compilation), at which point the corresponding __DATA__ (or __END__) token has not yet been seen.</source>
          <target state="translated">__DATA__에 대한 자세한 설명과 그 사용 예는 &lt;a href=&quot;selfloader&quot;&gt;SelfLoader&lt;/a&gt; 를 참조하십시오 . BEGIN 블록의 DATA 파일 핸들에서 읽을 수 없습니다. BEGIN 블록은 컴파일 중 표시되는 즉시 실행되며 해당 시점에 해당 __DATA __ (또는 __END__) 토큰이 표시되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8a5a8b8f53959db4074a0bb8ac96dd364eb59fa5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;simple&quot;&gt;Pod::Simple&lt;/a&gt; for more specific details on the methods available to all derived parsers.</source>
          <target state="translated">파생 된 모든 파서가 사용할 수있는 방법에 대한 자세한 내용은 &lt;a href=&quot;simple&quot;&gt;포드 :: 단순&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b67db36788f09e724759b4da084a895bc2435f7f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;tap/parser/iteratorfactory&quot;&gt;TAP::Parser::IteratorFactory&lt;/a&gt; for more details on how configuration is passed to</source>
          <target state="translated">구성이 전달되는 방법에 대한 자세한 내용 은 &lt;a href=&quot;tap/parser/iteratorfactory&quot;&gt;TAP :: Parser :: IteratorFactory&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2781a80c865d3f858dcd034db3d104567e0b8582" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;utf8&quot;&gt;utf8&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;utf8&quot;&gt;utf8을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="aaecbb2712f6e07f3bb4d72df95b2c397d541543" translate="yes" xml:space="preserve">
          <source>See &lt;b&gt;argument&lt;/b&gt;.</source>
          <target state="translated">&lt;b&gt;argument를&lt;/b&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5527b76a89c84a3ca14083852a888ee89dc297d3" translate="yes" xml:space="preserve">
          <source>See &lt;b&gt;base class&lt;/b&gt;.</source>
          <target state="translated">&lt;b&gt;기본 클래스를&lt;/b&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0748adf6a78e7ea444a29edad6885bee003090b4" translate="yes" xml:space="preserve">
          <source>See &lt;b&gt;data structure&lt;/b&gt;.</source>
          <target state="translated">&lt;b&gt;데이터 구조를&lt;/b&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="19d3657a7c4d7865035e86e5b6971f8109ca7410" translate="yes" xml:space="preserve">
          <source>See &lt;b&gt;data type&lt;/b&gt; and &lt;b&gt;class&lt;/b&gt;.</source>
          <target state="translated">&lt;b&gt;데이터 유형&lt;/b&gt; 및 &lt;b&gt;클래스를&lt;/b&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="536c823324eb912b5c6244acf9b1ad5b55274a15" translate="yes" xml:space="preserve">
          <source>See &lt;b&gt;derived class&lt;/b&gt;.</source>
          <target state="translated">&lt;b&gt;파생 클래스를&lt;/b&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9bbb63a1d46d83899c7bf380b014546dfe04fc11" translate="yes" xml:space="preserve">
          <source>See &lt;b&gt;exception&lt;/b&gt; or &lt;b&gt;fatal error&lt;/b&gt;.</source>
          <target state="translated">&lt;b&gt;예외&lt;/b&gt; 또는 &lt;b&gt;치명적 오류를&lt;/b&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4e8461f566a09044dc7768e7650ed2d914866938" translate="yes" xml:space="preserve">
          <source>See &lt;b&gt;file descriptor&lt;/b&gt;.</source>
          <target state="translated">&lt;b&gt;파일 기술자를&lt;/b&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="728a43e22381fb172962b9311e37123518029976" translate="yes" xml:space="preserve">
          <source>See &lt;b&gt;hash&lt;/b&gt;. Please. The term associative array is the old Perl 4 term for a &lt;b&gt;hash&lt;/b&gt;. Some languages call it a dictionary.</source>
          <target state="translated">&lt;b&gt;hash를&lt;/b&gt; 참조하십시오 . 부디. 연관 배열이라는 용어는 &lt;b&gt;해시&lt;/b&gt; 의 이전 Perl 4 용어입니다 . 일부 언어는이를 사전이라고 부릅니다.</target>
        </trans-unit>
        <trans-unit id="ecfad27e5c20c1c422bfd033e340d7a94a46d5ea" translate="yes" xml:space="preserve">
          <source>See &lt;b&gt;instance variable&lt;/b&gt;.</source>
          <target state="translated">&lt;b&gt;인스턴스 변수를&lt;/b&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="09cf9adb87abb2fdc9b722f9671176f116f6eaf1" translate="yes" xml:space="preserve">
          <source>See &lt;b&gt;little-endian&lt;/b&gt; and &lt;b&gt;big-endian&lt;/b&gt;.</source>
          <target state="translated">&lt;b&gt;little-endian&lt;/b&gt; 및 &lt;b&gt;big-endian을&lt;/b&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="53169c0ed3cca9fd3ac35d9b2a576b71c93fbd4d" translate="yes" xml:space="preserve">
          <source>See &lt;b&gt;metasymbol&lt;/b&gt;.</source>
          <target state="translated">&lt;b&gt;metasymbol을&lt;/b&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="04b090ce5f4f9a586fd7338c912c87f5ab48ad3b" translate="yes" xml:space="preserve">
          <source>See &lt;b&gt;method resolution order&lt;/b&gt;.</source>
          <target state="translated">&lt;b&gt;분석법 해결 순서를&lt;/b&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2a67ffa745980843ec4798ce242765953fac1072" translate="yes" xml:space="preserve">
          <source>See &lt;b&gt;pattern matching&lt;/b&gt;.</source>
          <target state="translated">&lt;b&gt;패턴 일치를&lt;/b&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e03f83556afaaee2a7459215684ee750fab69deb" translate="yes" xml:space="preserve">
          <source>See &lt;b&gt;regular expression&lt;/b&gt;.</source>
          <target state="translated">&lt;b&gt;정규식을&lt;/b&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b4e93b3654f60d19d5e6df12edadaceca1d7c9fc" translate="yes" xml:space="preserve">
          <source>See &lt;b&gt;reserved words&lt;/b&gt;.</source>
          <target state="translated">&lt;b&gt;예약어&lt;/b&gt; 참조 .</target>
        </trans-unit>
        <trans-unit id="b70d2dbf5552822e8a4e9a8bbd769b42f344b20e" translate="yes" xml:space="preserve">
          <source>See &lt;b&gt;script&lt;/b&gt;.</source>
          <target state="translated">&lt;b&gt;스크립트를&lt;/b&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0062ca63f61155baeb3b58435240563ecef43a39" translate="yes" xml:space="preserve">
          <source>See &lt;b&gt;standard I/O&lt;/b&gt;.</source>
          <target state="translated">&lt;b&gt;표준 I / O를&lt;/b&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c97fe936681e308451898325cb155ebbd3fa3a38" translate="yes" xml:space="preserve">
          <source>See &lt;b&gt;standard error&lt;/b&gt;.</source>
          <target state="translated">&lt;b&gt;표준 오류를&lt;/b&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9f1e232666e3d5326b83af45670f2d972b518acd" translate="yes" xml:space="preserve">
          <source>See &lt;b&gt;standard input&lt;/b&gt;.</source>
          <target state="translated">&lt;b&gt;표준 입력을&lt;/b&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8dd3a4c4d799c613a92fca0b60748ad19fcb74ad" translate="yes" xml:space="preserve">
          <source>See &lt;b&gt;standard output&lt;/b&gt;.</source>
          <target state="translated">&lt;b&gt;표준 출력을&lt;/b&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="81e346e31ae7bb88fdefcf9e8b772c0b3efeafd9" translate="yes" xml:space="preserve">
          <source>See &lt;b&gt;statement modifier&lt;/b&gt;, &lt;b&gt;regular expression&lt;/b&gt;, and &lt;b&gt;lvalue&lt;/b&gt;, not necessarily in that order.</source>
          <target state="translated">반드시 순서대로는 아니지만 &lt;b&gt;statement modifier&lt;/b&gt; , &lt;b&gt;regular expression&lt;/b&gt; 및 &lt;b&gt;lvalue를&lt;/b&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="63abefbc8f300d9b01a8f5c13b84488e6c55d52c" translate="yes" xml:space="preserve">
          <source>See &lt;b&gt;status&lt;/b&gt;.</source>
          <target state="translated">&lt;b&gt;상태를&lt;/b&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ee6f005aebce1d17193e47a0853321211fba4131" translate="yes" xml:space="preserve">
          <source>See &lt;b&gt;symbolic reference&lt;/b&gt;.</source>
          <target state="translated">&lt;b&gt;기호 참조를 참조&lt;/b&gt; 하십시오 .</target>
        </trans-unit>
        <trans-unit id="8e0f31d0091da46dadf21ed976d401fbdc1b241b" translate="yes" xml:space="preserve">
          <source>See &lt;b&gt;syntax tree&lt;/b&gt;.</source>
          <target state="translated">&lt;b&gt;구문 트리를&lt;/b&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9942ef8b2e1b0f40e37e415bcc45da2076b094f7" translate="yes" xml:space="preserve">
          <source>See &lt;b&gt;working directory&lt;/b&gt;.</source>
          <target state="translated">&lt;b&gt;작업 디렉토리를&lt;/b&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d1c3bf77896ec5e7bf92d411728c3f92460b476f" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;Archive::Tar-&amp;gt;extract_file&lt;/code&gt; for details.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;Archive::Tar-&amp;gt;extract_file&lt;/code&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="bb6744ea1b330755a03c5caecbc6012f2c2ed506" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;Archive::Tar::File&lt;/code&gt; for details about supported properties.</source>
          <target state="translated">참조 &lt;code&gt;Archive::Tar::File&lt;/code&gt; 지원 등록 정보에 대한 자세한 내용은.</target>
        </trans-unit>
        <trans-unit id="c0bd1dd87bd8e70e1edbf4cd67e8662d9ca94804" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;auto_help&lt;/code&gt; in section &lt;a href=&quot;#Configuring-Getopt%3a%3aLong&quot;&gt;Configuring Getopt::Long&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Configuring-Getopt%3a%3aLong&quot;&gt;Getopt :: Long 구성&lt;/a&gt; 섹션에서 &lt;code&gt;auto_help&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="da665e8e9ea4c05dfda727ea78d6fabfcaffdccc" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;sv_magicext&lt;/code&gt; (which &lt;code&gt;sv_magic&lt;/code&gt; now calls) for a description of the handling of the &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;namlen&lt;/code&gt; arguments.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; 및 &lt;code&gt;namlen&lt;/code&gt; 인수 처리에 대한 설명은 &lt;code&gt;sv_magicext&lt;/code&gt; ( 현재 &lt;code&gt;sv_magic&lt;/code&gt; 이 호출 함)를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="67373bb92cd7ecbf243edb9d60ad6f00f86a6052" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">또한보십시오</target>
        </trans-unit>
        <trans-unit id="40a9fc383ece7f1e65fcc691dcc88ac639270dec" translate="yes" xml:space="preserve">
          <source>See Example 3 below for an example of initialization.</source>
          <target state="translated">초기화 예는 아래 예 3을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a14749ce187bd20bd7da6610b8411db7cdd8a684" translate="yes" xml:space="preserve">
          <source>See ExtUtils::MM_Unix for a documentation of the methods provided there.</source>
          <target state="translated">제공된 방법에 대한 설명서는 ExtUtils :: MM_Unix를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="23675ee7e59903f4fcc6bbbc8585eec695f2738c" translate="yes" xml:space="preserve">
          <source>See ExtUtils::MM_Unix for a documentation of the methods provided there. This package overrides the implementation of these methods, not the semantics.</source>
          <target state="translated">제공된 방법에 대한 설명서는 ExtUtils :: MM_Unix를 참조하십시오. 이 패키지는 시맨틱이 아닌 이러한 메소드의 구현을 대체합니다.</target>
        </trans-unit>
        <trans-unit id="6e7f4022de93636a70f2034ffffc634b0c5eaaf5" translate="yes" xml:space="preserve">
          <source>See File::Spec::Unix for a documentation of the methods provided there. This package overrides the implementation of these methods, not the semantics.</source>
          <target state="translated">제공된 메소드에 대한 문서는 File :: Spec :: Unix를 참조하십시오. 이 패키지는 시맨틱이 아닌 이러한 메소드의 구현을 대체합니다.</target>
        </trans-unit>
        <trans-unit id="040029afc0c435d1070fedbcbc1dbe6449072649" translate="yes" xml:space="preserve">
          <source>See L&amp;lt;:file&amp;gt; and L&amp;lt;:mktemp&amp;gt;, L&amp;lt;:tempfile&amp;gt; for different implementations of temporary file handling.</source>
          <target state="translated">임시 파일 처리의 다른 구현에 대해서는 L &amp;lt;: file&amp;gt; 및 L &amp;lt;: mktemp&amp;gt;, L &amp;lt;: tempfile&amp;gt;을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="602796314f08763ea9cbfdfcf8d45237b3a6d56c" translate="yes" xml:space="preserve">
          <source>See L&amp;lt;:spec&amp;gt; for information on the choice of temporary directory for a particular operating system.</source>
          <target state="translated">특정 운영 체제에 대한 임시 디렉토리 선택에 대한 정보는 L &amp;lt;: spec&amp;gt;을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="78e55777cc6a58da6b4816d5f2fab7c78a0fce98" translate="yes" xml:space="preserve">
          <source>See L&amp;lt;:tempdir&amp;gt; for an alternative object-oriented wrapper for the C</source>
          <target state="translated">C의 대체 객체 지향 래퍼에 대해서는 L &amp;lt;: tempdir&amp;gt;을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="3616670bb678e824ef72b8f884f7cd63c250a2a2" translate="yes" xml:space="preserve">
          <source>See Locale::Codes for full author history.</source>
          <target state="translated">전체 저자 기록은 Locale :: Codes를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2a6abbf3a02e8d7e6adbbf788540ae8a9bb2c9c3" translate="yes" xml:space="preserve">
          <source>See Math::BigInt's bfround() function for details.</source>
          <target state="translated">자세한 내용은 Math :: BigInt의 bfround () 함수를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2d1d8acbdeab97d7d379916d75cd769f1b13fed7" translate="yes" xml:space="preserve">
          <source>See Memoize::Expire, which is a plug-in module that adds expiration functionality to Memoize. If you don't like the kinds of policies that Memoize::Expire implements, it is easy to write your own plug-in module to implement whatever policy you desire. Memoize comes with several examples. An expiration manager that implements a LRU policy is available on CPAN as Memoize::ExpireLRU.</source>
          <target state="translated">Memoize에 만료 기능을 추가하는 플러그인 모듈 인 Memoize :: Expire를 참조하십시오. Memoize :: Expire가 구현하는 정책의 종류가 마음에 들지 않으면 원하는 정책을 구현하기 위해 자체 플러그인 모듈을 작성하는 것이 쉽습니다. 메모에는 몇 가지 예가 있습니다. LRU 정책을 구현하는 만기 관리자는 CPAN에서 Memoize :: ExpireLRU로 사용 가능합니다.</target>
        </trans-unit>
        <trans-unit id="ea80271894db188740b7c5f477686f8cf867460a" translate="yes" xml:space="preserve">
          <source>See ODBM_File/Makefile.PL for an example, where an array is needed. If you specify a scalar as in</source>
          <target state="translated">배열이 필요한 예는 ODBM_File / Makefile.PL을 참조하십시오. 에서와 같이 스칼라를 지정하면</target>
        </trans-unit>
        <trans-unit id="284a29f8c15b61f241963444d7589f9d02c61896" translate="yes" xml:space="preserve">
          <source>See Server error.</source>
          <target state="translated">서버 오류를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="432cb254f15763b7805bdd86025f5f8cf43aec8f" translate="yes" xml:space="preserve">
          <source>See above.</source>
          <target state="translated">위 참조.</target>
        </trans-unit>
        <trans-unit id="2de5674c9b950736ceb1f267b92b6764d97d28bd" translate="yes" xml:space="preserve">
          <source>See above. This should be set using the &lt;code&gt;&lt;a href=&quot;../functions/qr&quot;&gt;qr&lt;/a&gt;&lt;/code&gt; quoting operator. The default is set to &lt;code&gt;&lt;a href=&quot;../functions/qr&quot;&gt;qr|^([-+@\w./]+)$|&lt;/a&gt;&lt;/code&gt;. Note that the parentheses are vital.</source>
          <target state="translated">위 참조. &lt;code&gt;&lt;a href=&quot;../functions/qr&quot;&gt;qr&lt;/a&gt;&lt;/code&gt; 인용 연산자를 사용하여 설정해야합니다 . 기본값은 &lt;code&gt;&lt;a href=&quot;../functions/qr&quot;&gt;qr|^([-+@\w./]+)$|&lt;/a&gt;&lt;/code&gt; . 괄호는 매우 중요합니다.</target>
        </trans-unit>
        <trans-unit id="2d8243a2c0e464492c9d563c4f92c56ae3421bcc" translate="yes" xml:space="preserve">
          <source>See also</source>
          <target state="translated">또한보십시오</target>
        </trans-unit>
        <trans-unit id="ab8a382e25be0097477fc99486e44a4eaa18498e" translate="yes" xml:space="preserve">
          <source>See also &quot;How can I make my Perl program take less memory?&quot;</source>
          <target state="translated">&quot;Perl 프로그램이 메모리를 덜 차지하게하려면 어떻게해야합니까?&quot;를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b03b87df29ccf9a96c0a6c18592a5afe15402ced" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#%5cb%7b%7d%2c-%5cb%2c-%5cB%7b%7d%2c-%5cB&quot;&gt;\b{gcb} &lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#%5cb%7b%7d%2c-%5cb%2c-%5cB%7b%7d%2c-%5cB&quot;&gt;\ b {gcb}&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f192185570d73f9e4777f3d0179ed00539012a0a" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#(%3fPARNO)-(%3f-PARNO)-(%3f%2bPARNO)-(%3fR)-(%3f0)&quot;&gt;(?PARNO)&lt;/a&gt; for a different, more efficient way to accomplish the same task.</source>
          <target state="translated">동일한 작업을 수행하는 다른보다 효율적인 방법 은 &lt;a href=&quot;#(%3fPARNO)-(%3f-PARNO)-(%3f%2bPARNO)-(%3fR)-(%3f0)&quot;&gt;(? PARNO)&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3589a77158a5b9f87ba699d99d29f15928e730c7" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Blocks-versus-Scripts&quot;&gt;Blocks versus Scripts&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Blocks-versus-Scripts&quot;&gt;블록과 스크립트를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b15ef7343c7f7652cb677f6cccc299824145c621" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Character-classification&quot;&gt;Character classification&lt;/a&gt;, and &lt;a href=&quot;#Character-case-changing&quot;&gt;Character case changing&lt;/a&gt;. Various functions outside this section also work specially with Unicode. Search for the string &quot;utf8&quot; in this document.</source>
          <target state="translated">&lt;a href=&quot;#Character-classification&quot;&gt;문자 분류&lt;/a&gt; 및 &lt;a href=&quot;#Character-case-changing&quot;&gt;대소 문자 변경&lt;/a&gt; 도 참조하십시오 . 이 섹션 외부의 다양한 기능은 유니 코드에서도 특별히 작동합니다. 이 문서에서 &quot;utf8&quot;문자열을 검색하십시오.</target>
        </trans-unit>
        <trans-unit id="858e5e57ae8e49908c96c28676e440fe9ce3fd13" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Quote-and-Quote-like-Operators&quot;&gt;Quote and Quote-like Operators&lt;/a&gt; toward the end of this section, as well as &lt;a href=&quot;#I%2fO-Operators&quot;&gt;I/O Operators&lt;/a&gt;.</source>
          <target state="translated">도 참조 &lt;a href=&quot;#Quote-and-Quote-like-Operators&quot;&gt;견적과 견적 같은 연산자&lt;/a&gt; 이 섹션의 끝을 향해뿐만 아니라 &lt;a href=&quot;#I%2fO-Operators&quot;&gt;I / O 연산자&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="94f252cf62959c5890d7b67aa4440dd5b5e285d2" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Terms-and-List-Operators-(Leftward)&quot;&gt;Terms and List Operators (Leftward)&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Terms-and-List-Operators-(Leftward)&quot;&gt;용어 및 목록 연산자 (왼쪽)&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="caba875660075eb3804e76fe4c78379b91129b4a" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#The-%22Unicode-Bug%22&quot;&gt;The Unicode Bug&lt;/a&gt; above.</source>
          <target state="translated">위 &lt;a href=&quot;#The-%22Unicode-Bug%22&quot;&gt;의 유니 코드 버그&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="dd6b64b3f2c71c02bbc70fd00e0624e4797d9ee9" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#Thread-Safety-of-System-Libraries&quot;&gt;Thread-Safety of System Libraries&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Thread-Safety-of-System-Libraries&quot;&gt;시스템 라이브러리의 스레드 안전성&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a2d9a4c0bef03df823525ad84d4e474cab9c19ee" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#blog()&quot;&gt;blog()&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#blog()&quot;&gt;blog ()&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c8d8a6f47fddbd2872f4758e889e1633aab774d1" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#ceil&quot;&gt;ceil&lt;/a&gt;, &lt;a href=&quot;#floor&quot;&gt;floor&lt;/a&gt;, &lt;a href=&quot;#lround&quot;&gt;lround&lt;/a&gt;, &lt;a href=&quot;#modf&quot;&gt;modf&lt;/a&gt;, and &lt;a href=&quot;#trunc&quot;&gt;trunc&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#ceil&quot;&gt;ceil&lt;/a&gt; , &lt;a href=&quot;#floor&quot;&gt;floor&lt;/a&gt; , &lt;a href=&quot;#lround&quot;&gt;lround&lt;/a&gt; , &lt;a href=&quot;#modf&quot;&gt;modf&lt;/a&gt; 및 &lt;a href=&quot;#trunc&quot;&gt;trunc&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f693a972498a768d082bf320dd3eb9faf82a6061" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#ceil&quot;&gt;ceil&lt;/a&gt;, &lt;a href=&quot;#floor&quot;&gt;floor&lt;/a&gt;, &lt;a href=&quot;#trunc&quot;&gt;trunc&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#ceil&quot;&gt;ceil&lt;/a&gt; , &lt;a href=&quot;#floor&quot;&gt;floor&lt;/a&gt; , &lt;a href=&quot;#trunc&quot;&gt;trunc&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cb862acd06c511fb848997aab8e77fbcc22f96bc" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#ceil&quot;&gt;ceil&lt;/a&gt;, &lt;a href=&quot;#floor&quot;&gt;floor&lt;/a&gt;, and &lt;a href=&quot;#round&quot;&gt;round&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#ceil&quot;&gt;ceil&lt;/a&gt; , &lt;a href=&quot;#floor&quot;&gt;floor&lt;/a&gt; 및 &lt;a href=&quot;#round&quot;&gt;round&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0a76930ab35a96cb3b3d7d6e8056b8db22e34985" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#chomp&quot;&gt;chomp&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#chomp&quot;&gt;chomp&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b055a1e11c207e13b94aaaa8cf42ef6651307f63" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#continue&quot;&gt;continue&lt;/a&gt; for an illustration of how &lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;functions/redo&quot;&gt;redo&lt;/a&gt;&lt;/code&gt; work.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;functions/redo&quot;&gt;redo&lt;/a&gt;&lt;/code&gt; 작동 방식에 대한 그림 도 &lt;a href=&quot;#continue&quot;&gt;계속&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="664f70b05592b396f0b7230a57571ee6981c3850" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#exp&quot;&gt;exp&lt;/a&gt; for the inverse operation.</source>
          <target state="translated">역 연산에 대해서는 &lt;a href=&quot;#exp&quot;&gt;exp&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e92bbb120353deeb65851ba7bc977367be7e23d3" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#expm1&quot;&gt;expm1&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#expm1&quot;&gt;expm1&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e20907c7f1f3f18a1cd9dfba23f841b9521b3a02" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#frexp&quot;&gt;frexp&lt;/a&gt; and &lt;a href=&quot;#ldexp&quot;&gt;ldexp&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#frexp&quot;&gt;frexp&lt;/a&gt; 및 &lt;a href=&quot;#ldexp&quot;&gt;ldexp&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e6334ba605210bd171886129dc560240dcd264e3" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#hv_clear&quot;&gt;hv_clear&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#hv_clear&quot;&gt;hv_clear&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5bb3270aa61a8e9a219e8fca2933e276729a3e5c" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#ilogb&quot;&gt;ilogb&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#ilogb&quot;&gt;ilogb&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2038a390f40558644402d2dbfb075919fc5f4845" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#is_invariant_string&quot;&gt;is_invariant_string&lt;/a&gt;(), &lt;a href=&quot;#is_utf8_string_loclen&quot;&gt;is_utf8_string_loclen&lt;/a&gt;(), and &lt;a href=&quot;#is_utf8_string_loc&quot;&gt;is_utf8_string_loc&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;#is_invariant_string&quot;&gt;is_invariant_string&lt;/a&gt; (), &lt;a href=&quot;#is_utf8_string_loclen&quot;&gt;is_utf8_string_loclen&lt;/a&gt; () 및 &lt;a href=&quot;#is_utf8_string_loc&quot;&gt;is_utf8_string_loc&lt;/a&gt; () 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c075f84322d3bd478ca12430aff16457c9603d4a" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#is_utf8_string&quot;&gt;is_utf8_string&lt;/a&gt;(), &lt;a href=&quot;#is_utf8_string_loclen&quot;&gt;is_utf8_string_loclen&lt;/a&gt;(), and &lt;a href=&quot;#is_utf8_string_loc&quot;&gt;is_utf8_string_loc&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;#is_utf8_string&quot;&gt;is_utf8_string&lt;/a&gt; (), &lt;a href=&quot;#is_utf8_string_loclen&quot;&gt;is_utf8_string_loclen&lt;/a&gt; () 및 &lt;a href=&quot;#is_utf8_string_loc&quot;&gt;is_utf8_string_loc&lt;/a&gt; () 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="24661fc71daa651c7fde8e4cf4ce2981eec9de00" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#is_utf8_string_loc&quot;&gt;is_utf8_string_loc&lt;/a&gt;() and &lt;a href=&quot;#is_utf8_string&quot;&gt;is_utf8_string&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;#is_utf8_string_loc&quot;&gt;is_utf8_string_loc&lt;/a&gt; () 및 &lt;a href=&quot;#is_utf8_string&quot;&gt;is_utf8_string&lt;/a&gt; () 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5cbaff39e6d415017199632a470e616f1e19f95d" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#is_utf8_string_loclen&quot;&gt;is_utf8_string_loclen&lt;/a&gt;() and &lt;a href=&quot;#is_utf8_string&quot;&gt;is_utf8_string&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;#is_utf8_string_loclen&quot;&gt;is_utf8_string_loclen&lt;/a&gt; () 및 &lt;a href=&quot;#is_utf8_string&quot;&gt;is_utf8_string&lt;/a&gt; () 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="aabcb07e7cfaf293af50a5d1698777df63583972" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#isfinite&quot;&gt;isfinite&lt;/a&gt;, and &lt;a href=&quot;#fpclassify&quot;&gt;fpclassify&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#isfinite&quot;&gt;isfinite&lt;/a&gt; 및 &lt;a href=&quot;#fpclassify&quot;&gt;fpclassify&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="21ff70d398c113b1b482cbd7e58305182ff055a7" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#isinf&quot;&gt;isinf&lt;/a&gt;, &lt;a href=&quot;#isnan&quot;&gt;isnan&lt;/a&gt;, and &lt;a href=&quot;#fpclassify&quot;&gt;fpclassify&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#isinf&quot;&gt;isinf&lt;/a&gt; , &lt;a href=&quot;#isnan&quot;&gt;isnan&lt;/a&gt; 및 &lt;a href=&quot;#fpclassify&quot;&gt;fpclassify&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="da3a984fbdfda9a3758e450455f51828721a28fe" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#isnan&quot;&gt;isnan&lt;/a&gt;, &lt;a href=&quot;#isfinite&quot;&gt;isfinite&lt;/a&gt;, and &lt;a href=&quot;#fpclassify&quot;&gt;fpclassify&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#isnan&quot;&gt;isnan&lt;/a&gt; , &lt;a href=&quot;#isfinite&quot;&gt;isfinite&lt;/a&gt; 및 &lt;a href=&quot;#fpclassify&quot;&gt;fpclassify&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f3660bcf22e0b3e27c20131126f3d0f9b9f0117e" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#isnan&quot;&gt;isnan&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#isnan&quot;&gt;isnan&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fb0a3e67b2320719a59317a8928b603e22a5e53f" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#lgamma&quot;&gt;lgamma&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#lgamma&quot;&gt;lgamma&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="705ca1f6cc7a7ee05d9dd10cfeea8147d99b89ab" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#log1p&quot;&gt;log1p&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#log1p&quot;&gt;log1p&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0693f6ef561145706cf85f2965bdaf8ea0de2bf8" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#logb&quot;&gt;logb&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#logb&quot;&gt;logb&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="03a0072e3404bbfe332c09386a0be28693d5e3ba" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#make_grammar&quot;&gt;make_grammar&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#make_grammar&quot;&gt;make_grammar&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="868b7ec0221306550a570fdbaba5284f790eaad1" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#make_result&quot;&gt;make_result&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#make_result&quot;&gt;make_result&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f8c182711f3cc11ba7c9987efcb02d0c1bd0d91a" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#map&quot;&gt;map&lt;/a&gt; for a list composed of the results of the BLOCK or EXPR.</source>
          <target state="translated">BLOCK 또는 EXPR의 결과로 구성된 목록 은 &lt;a href=&quot;#map&quot;&gt;map&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2181084db3035408ebef2c2fd15e9ebf15a821b4" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#nan&quot;&gt;nan&lt;/a&gt;, &lt;a href=&quot;#isinf&quot;&gt;isinf&lt;/a&gt;, and &lt;a href=&quot;#fpclassify&quot;&gt;fpclassify&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#nan&quot;&gt;nan&lt;/a&gt; , &lt;a href=&quot;#isinf&quot;&gt;isinf&lt;/a&gt; 및 &lt;a href=&quot;#fpclassify&quot;&gt;fpclassify&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0970e55eff62d0613ebe03421267140e37ea9590" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#quadmath_format_needed&quot;&gt;quadmath_format_needed&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#quadmath_format_needed&quot;&gt;quadmath_format_needed&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="94885f895c488377fc0b3782a6d2a63d8c4108e6" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#remquo&quot;&gt;remquo&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#remquo&quot;&gt;remquo&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a263e61a865bd6bffc4dc3c7a6fc2aa207c34712" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#round&quot;&gt;round&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#round&quot;&gt;round&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="eef0472f324b1b1a285224044fbfa565222f82b1" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#signbit&quot;&gt;signbit&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#signbit&quot;&gt;signbit&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="18edb8be670e43eac3e6249c3e9b7347fbd22037" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#sv_uni_display&quot;&gt;sv_uni_display&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#sv_uni_display&quot;&gt;sv_uni_display&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="88e872ff667d7d8dfeeb1ebbffe71abe41dea5af" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#tgamma&quot;&gt;tgamma&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#tgamma&quot;&gt;tgamma&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9dc5b5b29119e9974a1e2c360e8b1ca50d736fc7" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#undef&quot;&gt;undef&lt;/a&gt;, &lt;a href=&quot;#exists&quot;&gt;exists&lt;/a&gt;, &lt;a href=&quot;#ref&quot;&gt;ref&lt;/a&gt;.</source>
          <target state="translated">참조 &lt;a href=&quot;#undef&quot;&gt;undef를&lt;/a&gt; , &lt;a href=&quot;#exists&quot;&gt;존재&lt;/a&gt; , &lt;a href=&quot;#ref&quot;&gt;심판&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dac47d91c6d79ac62a9f6e623a74c1ef65cc5a25" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;../anydbm_file&quot;&gt;AnyDBM_File&lt;/a&gt; for a more general description of the pros and cons of the various dbm approaches, as well as &lt;a href=&quot;../db_file&quot;&gt;DB_File&lt;/a&gt; for a particularly rich implementation.</source>
          <target state="translated">다양한 dbm 접근 방식의 장단점과 특히 풍부한 구현을위한 &lt;a href=&quot;../db_file&quot;&gt;DB_File에&lt;/a&gt; 대한 일반적인 설명은 &lt;a href=&quot;../anydbm_file&quot;&gt;AnyDBM_File&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="312ddfc0e7683843cb0df77946503b368ac080f4" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;../db_file&quot;&gt;DB_File&lt;/a&gt; for other flock() examples.</source>
          <target state="translated">다른 flock () 예제 는 &lt;a href=&quot;../db_file&quot;&gt;DB_File&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e86acc20fd91f9ea01f8172e1c0f9a68f1048788" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;../perlref&quot;&gt;perlref&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../perlref&quot;&gt;perlref&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b508429b9263acf9e838c10a4f1fe24132296566" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;anydbm_file&quot;&gt;AnyDBM_File&lt;/a&gt; for a more general description of the pros and cons of the various dbm approaches, as well as &lt;a href=&quot;db_file&quot;&gt;DB_File&lt;/a&gt; for a particularly rich implementation.</source>
          <target state="translated">다양한 dbm 접근 방식의 장단점과 특히 풍부한 구현을위한 &lt;a href=&quot;db_file&quot;&gt;DB_File에&lt;/a&gt; 대한 일반적인 설명은 &lt;a href=&quot;anydbm_file&quot;&gt;AnyDBM_File&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="feb5ce40c9730fd7587808e9f860ec02bd3be1ad" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;attributes&quot;&gt;attributes.pm&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;attributes&quot;&gt;attributes.pm&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3922359b5e2cc94ef6004dee14189087b9538adb" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;chomp&quot;&gt;chomp&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;chomp&quot;&gt;chomp&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c51b1811fb584bf70eaf14342f6a310ceb94f036" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;continue&quot;&gt;continue&lt;/a&gt; for an illustration of how &lt;code&gt;&lt;a href=&quot;last&quot;&gt;last&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;next&quot;&gt;next&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;redo&quot;&gt;redo&lt;/a&gt;&lt;/code&gt; work.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;next&quot;&gt;next&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;redo&quot;&gt;redo&lt;/a&gt;&lt;/code&gt; 작동 방식에 대한 그림 도 &lt;a href=&quot;continue&quot;&gt;계속&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1d9f2093b0fbde7d0467eedd84ba92736ecc192e" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;db_file&quot;&gt;DB_File&lt;/a&gt; for other flock() examples.</source>
          <target state="translated">다른 flock () 예제 는 &lt;a href=&quot;db_file&quot;&gt;DB_File&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="72eab4295e6e160fa298c78fb9aff9f0809dd59e" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;encode#Handling-Malformed-Data&quot;&gt;Handling Malformed Data in Encode&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;encode#Handling-Malformed-Data&quot;&gt;인코딩에서 잘못된 데이터 처리를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2e637f559901257cbf0080e5c7378783b591aaaa" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;exp&quot;&gt;exp&lt;/a&gt; for the inverse operation.</source>
          <target state="translated">역 연산에 대해서는 &lt;a href=&quot;exp&quot;&gt;exp&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="32afb89976b8082427e91c7ba7b68f177d9957da" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;fatal#DIAGNOSTICS&quot;&gt;DIAGNOSTICS in Fatal&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;fatal#DIAGNOSTICS&quot;&gt;치명적인 진단을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="61443df97502e07ec91115ca890b81aba6194b6f" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;functions/close&quot;&gt;close&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;functions/close&quot;&gt;close&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="dbb958f9cb413fdbaacbf4efae0496e3ec667177" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;functions/pipe&quot;&gt;pipe&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;functions/pipe&quot;&gt;pipe&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ab6d2210c32c0fa16336844238db7c8e0eb5830d" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;functions/sysopen&quot;&gt;sysopen&lt;/a&gt; and its &lt;code&gt;O_CREAT&lt;/code&gt; flag.</source>
          <target state="translated">&lt;a href=&quot;functions/sysopen&quot;&gt;sysopen&lt;/a&gt; 및 해당 &lt;code&gt;O_CREAT&lt;/code&gt; 플래그를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a7e197eb6c34bd082986ddcd3f81baad30986106" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;functions/sysopen&quot;&gt;sysopen&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;functions/sysopen&quot;&gt;sysopen&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0b2d92b440215a9afbc0f46be4ef2ecc3855f446" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;functions/sysread&quot;&gt;sysread&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;functions/sysread&quot;&gt;sysread&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8cadfdea7910f878665cf246af7e50bb1ef44226" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;functions/syswrite&quot;&gt;syswrite&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;functions/syswrite&quot;&gt;syswrite&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f28ff989c5f5390057e474ea8b343abfa0401399" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;http://code.google.com/p/address-sanitizer/wiki/AddressSanitizer&quot;&gt;http://code.google.com/p/address-sanitizer/wiki/AddressSanitizer&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://code.google.com/p/address-sanitizer/wiki/AddressSanitizer&quot;&gt;http://code.google.com/p/address-sanitizer/wiki/AddressSanitizer&lt;/a&gt; 도 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="82106c45b9e3ca378d3051a24f5f6c2b255decb4" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;http://search.cpan.org/perldoc/Data::Dump::Streamer&quot;&gt;Data::Dump::Streamer&lt;/a&gt;, which combines B::Deparse and &lt;a href=&quot;http://search.cpan.org/perldoc/PadWalker&quot;&gt;PadWalker&lt;/a&gt; to serialize closures properly.</source>
          <target state="translated">B :: Deparse와 &lt;a href=&quot;http://search.cpan.org/perldoc/PadWalker&quot;&gt;PadWalker&lt;/a&gt; 를 결합 하여 클로저를 올바르게 직렬화 하는 &lt;a href=&quot;http://search.cpan.org/perldoc/Data::Dump::Streamer&quot;&gt;Data :: Dump :: Streamer&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="38b013a98a32f2ee2957ec73990271963411af4d" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;http://www.cpan.org/modules/by-category/15_World_Wide_Web_HTML_HTTP_CGI/&quot;&gt;http://www.cpan.org/modules/by-category/15_World_Wide_Web_HTML_HTTP_CGI/&lt;/a&gt; .</source>
          <target state="translated">&lt;a href=&quot;http://www.cpan.org/modules/by-category/15_World_Wide_Web_HTML_HTTP_CGI/&quot;&gt;http://www.cpan.org/modules/by-category/15_World_Wide_Web_HTML_HTTP_CGI/&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1aca38a03e337aedcb772fb6525dd0b1d2f3fdf4" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;i18n/langinfo&quot;&gt;I18N::Langinfo&lt;/a&gt; and &lt;code&gt;ABDAY_1&lt;/code&gt; ..&lt;code&gt;ABDAY_7&lt;/code&gt; , &lt;code&gt;DAY_1&lt;/code&gt; ..&lt;code&gt;DAY_7&lt;/code&gt; , &lt;code&gt;ABMON_1&lt;/code&gt; ..&lt;code&gt;ABMON_12&lt;/code&gt; , and &lt;code&gt;ABMON_1&lt;/code&gt; ..&lt;code&gt;ABMON_12&lt;/code&gt; .</source>
          <target state="translated">참조 &lt;a href=&quot;i18n/langinfo&quot;&gt;I18N : Langinfo&lt;/a&gt; 와 &lt;code&gt;ABDAY_1&lt;/code&gt; .. &lt;code&gt;ABDAY_7&lt;/code&gt; , &lt;code&gt;DAY_1&lt;/code&gt; .. &lt;code&gt;DAY_7&lt;/code&gt; , &lt;code&gt;ABMON_1&lt;/code&gt; .. &lt;code&gt;ABMON_12&lt;/code&gt; 및 &lt;code&gt;ABMON_1&lt;/code&gt; .. &lt;code&gt;ABMON_12&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="da50321fcfa4a145f69966ce9e58c833dd8a31ed" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;i18n/langinfo&quot;&gt;I18N::Langinfo&lt;/a&gt; and &lt;code&gt;CRNCYSTR&lt;/code&gt; .</source>
          <target state="translated">&lt;a href=&quot;i18n/langinfo&quot;&gt;I18N :: Langinfo&lt;/a&gt; 및 &lt;code&gt;CRNCYSTR&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b829e89e45a680e36a1fea3315c1376f162c2031" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;i18n/langinfo&quot;&gt;I18N::Langinfo&lt;/a&gt; and &lt;code&gt;RADIXCHAR&lt;/code&gt; .</source>
          <target state="translated">&lt;a href=&quot;i18n/langinfo&quot;&gt;I18N :: Langinfo&lt;/a&gt; 및 &lt;code&gt;RADIXCHAR&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0dcec256f7af2ce9577bceedca06f5f648fc32ea" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;map&quot;&gt;map&lt;/a&gt; for a list composed of the results of the BLOCK or EXPR.</source>
          <target state="translated">BLOCK 또는 EXPR의 결과로 구성된 목록 은 &lt;a href=&quot;map&quot;&gt;map&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ba5e022d3743e074d09494fd4057f576c9532ddc" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;perldebug&quot;&gt;perldebug&lt;/a&gt;, &lt;a href=&quot;perldebtut&quot;&gt;perldebtut&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;perldebug&quot;&gt;perldebug&lt;/a&gt; 참조 , &lt;a href=&quot;perldebtut&quot;&gt;perldebtut&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d3900b49761f7cfc17e9f59b2833dbd67b3d9bdb" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;perldsc&quot;&gt;perldsc&lt;/a&gt; and &lt;a href=&quot;perllol&quot;&gt;perllol&lt;/a&gt; for how to use references to create complex data structures, and &lt;a href=&quot;perlootut&quot;&gt;perlootut&lt;/a&gt; and &lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt; for how to use them to create objects.</source>
          <target state="translated">참조 를 사용하여 복잡한 데이터 구조를 작성하는 방법에 대해서는 &lt;a href=&quot;perldsc&quot;&gt;perldsc&lt;/a&gt; 및 &lt;a href=&quot;perllol&quot;&gt;perllol&lt;/a&gt; 을 참조하고, 이를 사용하여 오브젝트를 작성하는 방법에 대해서는 &lt;a href=&quot;perlootut&quot;&gt;perlootut&lt;/a&gt; 및 &lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4a939c6bfd06b3f233cb5194d56a9df0427e718a" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;perlfork&quot;&gt;perlfork&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;perlfork&quot;&gt;펄 포크&lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="038a0c9cb52f615684f065959a94bfe216d7fc71" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;perlmodlib#Pragmatic-Modules&quot;&gt;Pragmatic Modules in perlmodlib&lt;/a&gt; and &lt;a href=&quot;perldiag&quot;&gt;perldiag&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;perlmodlib#Pragmatic-Modules&quot;&gt;perlmodlib&lt;/a&gt; 및 &lt;a href=&quot;perldiag&quot;&gt;perldiag의 &lt;/a&gt;실용적인 모듈을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="54a2e97103596d963fe29f14a4036177ce51b589" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;perlootut&quot;&gt;perlootut&lt;/a&gt;, a tutorial that covers class creation, and &lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt;.</source>
          <target state="translated">클래스 작성 및 &lt;a href=&quot;perlobj&quot;&gt;perlobj에&lt;/a&gt; 대한 학습서 인 &lt;a href=&quot;perlootut&quot;&gt;perlootut&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="09b8181c3f9ece672518ba89da5dd2ed05d947f9" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;perlopentut&quot;&gt;perlopentut&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;perlopentut&quot;&gt;perlopentut&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f84300de0c00b2cea1c19289305e37ca7e3cef56" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;perlport#Newlines&quot;&gt;Newlines in perlport&lt;/a&gt;. Also see &lt;a href=&quot;#%24.&quot;&gt;$.&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;perlport#Newlines&quot;&gt;perlport의 개행을&lt;/a&gt; 참조하십시오 . &lt;a href=&quot;#%24.&quot;&gt;$&lt;/a&gt; 도 참조하십시오 . .</target>
        </trans-unit>
        <trans-unit id="049bfdb2960ee0bd10a6891d989bd1f10ba1feda" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="84c3eedc28e0411704fb9ad3cbda7f1a7281102c" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="10f03e3c6d8716cd8d154f5d4f40c95fd2e87f9f" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;perlrun&quot;&gt;perlrun&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;perlrun&quot;&gt;perlrun&lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="e0ef6aadcbffe5c23ec9a5346fa2be14f2cf695d" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="c300a2208a59c3e92860c0fe316027e85641a6bd" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;perlxs#Thread-aware-system-interfaces&quot;&gt;Thread-aware system interfaces in perlxs&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;perlxs#Thread-aware-system-interfaces&quot;&gt;perlxs의 스레드 인식 시스템 인터페이스를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3f250914d937ad2e085cf64d128cbfa1691f6586" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;socket&quot;&gt;Socket&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;socket&quot;&gt;소켓&lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="bc26e7328351b379ed5d17eb2dfaaeffbbb9413b" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;, &lt;a href=&quot;exists&quot;&gt;exists&lt;/a&gt;, &lt;a href=&quot;ref&quot;&gt;ref&lt;/a&gt;.</source>
          <target state="translated">참조 &lt;a href=&quot;undef&quot;&gt;undef를&lt;/a&gt; , &lt;a href=&quot;exists&quot;&gt;존재&lt;/a&gt; , &lt;a href=&quot;ref&quot;&gt;심판&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9d3fc828754e6528837615c426ddc7bef3997af8" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;warnings&quot;&gt;warnings&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;warnings&quot;&gt;경고&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9d31731dd5d45a94f24c01a2e4721ffa55ed2062" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;$Module::Load::Conditional::DEPRECATED&lt;/code&gt; , which affects the outcome of this value.</source>
          <target state="translated">이 값의 결과에 영향을주는 &lt;code&gt;$Module::Load::Conditional::DEPRECATED&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cd6010ba4ac41e571c685c864d5dfddc74518ef8" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;$]&lt;/code&gt; for a decimal representation of the Perl version.</source>
          <target state="translated">Perl 버전의 10 진수 표현에 대해서는 &lt;code&gt;$]&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7f3cadc97a35414c53b5b4ced055817f6f902bce" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;(?&amp;gt;pattern)&lt;/code&gt; and possessive quantifiers for other ways to control backtracking. In some cases, the use of &lt;code&gt;(*PRUNE)&lt;/code&gt; can be replaced with a &lt;code&gt;(?&amp;gt;pattern)&lt;/code&gt; with no functional difference; however, &lt;code&gt;(*PRUNE)&lt;/code&gt; can be used to handle cases that cannot be expressed using a &lt;code&gt;(?&amp;gt;pattern)&lt;/code&gt; alone.</source>
          <target state="translated">역 추적을 제어하는 ​​다른 방법 은 &lt;code&gt;(?&amp;gt;pattern)&lt;/code&gt; 및 소유 수량자를 참조하십시오 . 경우에 따라 &lt;code&gt;(*PRUNE)&lt;/code&gt; 을 기능적 차이없이 &lt;code&gt;(?&amp;gt;pattern)&lt;/code&gt; 으로 대체 할 수 있습니다 . 그러나 &lt;code&gt;(?&amp;gt;pattern)&lt;/code&gt; 만으로는 표현할 수없는 경우를 처리하기 위해 &lt;code&gt;(*PRUNE)&lt;/code&gt; 을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d9225ba080018d7c5c1a1d008a8d53f734ca8a25" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt;. If EXPR is omitted, exits with &lt;code&gt;0&lt;/code&gt; status. The only universally recognized values for EXPR are &lt;code&gt;0&lt;/code&gt; for success and &lt;code&gt;1&lt;/code&gt; for error; other values are subject to interpretation depending on the environment in which the Perl program is running. For example, exiting 69 (EX_UNAVAILABLE) from a</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; 참조하십시오 . EXPR을 생략하면 상태 가 &lt;code&gt;0&lt;/code&gt; 으로 종료됩니다 . EXPR에 대해 보편적으로 인식되는 유일한 값 은 성공에 &lt;code&gt;0&lt;/code&gt; , 오류에 &lt;code&gt;1&lt;/code&gt; 다른 값은 Perl 프로그램이 실행중인 환경에 따라 해석 될 수 있습니다. 예를 들어, 69 (EX_UNAVAILABLE)에서</target>
        </trans-unit>
        <trans-unit id="3cea1c25b3337bcf63df8e46046184cbf81519a6" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;each&quot;&gt;each&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;values&quot;&gt;values&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;values&quot;&gt;values&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1359ca66e378f741dfbd245fa252e05e3072e4f4" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt;. If EXPR is omitted, exits with &lt;code&gt;0&lt;/code&gt; status. The only universally recognized values for EXPR are &lt;code&gt;0&lt;/code&gt; for success and &lt;code&gt;1&lt;/code&gt; for error; other values are subject to interpretation depending on the environment in which the Perl program is running. For example, exiting 69 (EX_UNAVAILABLE) from a</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; 참조하십시오 . EXPR을 생략하면 상태 가 &lt;code&gt;0&lt;/code&gt; 으로 종료됩니다 . EXPR에 대해 보편적으로 인식되는 유일한 값 은 성공에 &lt;code&gt;0&lt;/code&gt; , 오류에 &lt;code&gt;1&lt;/code&gt; 다른 값은 Perl 프로그램이 실행중인 환경에 따라 해석 될 수 있습니다. 예를 들어, 69 (EX_UNAVAILABLE)에서</target>
        </trans-unit>
        <trans-unit id="2f24bea2ac99cea2d4c8a36087486d58737a2abb" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;functions/sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;functions/sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3fd8aa3be1dbf4a33c6a1909a8b78b0c57536b93" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;functions/sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">참조 &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; , 그리고 &lt;code&gt;&lt;a href=&quot;functions/sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a744e171fb1158e9d1732277124eef8eb6736bf9" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;functions/sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/values&quot;&gt;values&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;functions/sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2d4f0c2bfcaf936a86dc92ecec864ad87bddc74a" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;functions/unshift&quot;&gt;unshift&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;functions/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;&lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/unshift&quot;&gt;unshift&lt;/a&gt;&lt;/code&gt; do the same thing to the left end of an array that &lt;code&gt;&lt;a href=&quot;functions/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt; do to the right end.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/unshift&quot;&gt;unshift&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;functions/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 . &lt;code&gt;&lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;functions/unshift&quot;&gt;unshift&lt;/a&gt;&lt;/code&gt; 있음을 배열의 왼쪽 끝으로 같은 일을 &lt;code&gt;&lt;a href=&quot;functions/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt; 오른쪽 끝으로 않습니다.</target>
        </trans-unit>
        <trans-unit id="caf8ab2e34d97a666cef57f465212286aca5ce76" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;each&quot;&gt;each&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">참조 &lt;code&gt;&lt;a href=&quot;keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; , 그리고 &lt;code&gt;&lt;a href=&quot;sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bc3ccde61e06a276638618c5a81572f42f73aeac" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;values&quot;&gt;values&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;values&quot;&gt;values&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e3effdc9e9719c17049bd0a15fb9f730b482944c" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;unshift&quot;&gt;unshift&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;push&quot;&gt;push&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;&lt;a href=&quot;shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;unshift&quot;&gt;unshift&lt;/a&gt;&lt;/code&gt; do the same thing to the left end of an array that &lt;code&gt;&lt;a href=&quot;pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;push&quot;&gt;push&lt;/a&gt;&lt;/code&gt; do to the right end.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unshift&quot;&gt;unshift&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;push&quot;&gt;push&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 . &lt;code&gt;&lt;a href=&quot;shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;unshift&quot;&gt;unshift&lt;/a&gt;&lt;/code&gt; 있음을 배열의 왼쪽 끝으로 같은 일을 &lt;code&gt;&lt;a href=&quot;pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;push&quot;&gt;push&lt;/a&gt;&lt;/code&gt; 오른쪽 끝으로 않습니다.</target>
        </trans-unit>
        <trans-unit id="42bb17c4fce277f1b63b388f77acdc054e99f8a2" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;Apache::DProf&lt;/code&gt; which hooks &lt;code&gt;Devel::DProf&lt;/code&gt; into &lt;code&gt;mod_perl&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;Devel::DProf&lt;/code&gt; 를 &lt;code&gt;mod_perl&lt;/code&gt; 에 연결하는 &lt;code&gt;Apache::DProf&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="30c9df84a4f8d5bb6552f0fb2e215aa7a50280fb" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;Apache::SmallProf&lt;/code&gt; which hooks &lt;code&gt;Devel::SmallProf&lt;/code&gt; into &lt;code&gt;mod_perl&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;Devel::SmallProf&lt;/code&gt; 를 &lt;code&gt;mod_perl&lt;/code&gt; 에 연결하는 &lt;code&gt;Apache::SmallProf&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e33fce8ff6adc655e93cc1158e62614ab91d8bb7" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;Devel::Apache::Profiler&lt;/code&gt; which hooks &lt;code&gt;Devel::Profiler&lt;/code&gt; into &lt;code&gt;mod_perl&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;Devel::Profiler&lt;/code&gt; 를 &lt;code&gt;mod_perl&lt;/code&gt; 에 연결하는 &lt;code&gt;Devel::Apache::Profiler&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="84d36c0ff87030ed272d248a2736c8a3f6cbf3ec" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;Devel::NYTProf::Apache&lt;/code&gt; which hooks &lt;code&gt;Devel::NYTProf&lt;/code&gt; into &lt;code&gt;mod_perl&lt;/code&gt; .</source>
          <target state="translated">참조 &lt;code&gt;Devel::NYTProf::Apache&lt;/code&gt; 후크 &lt;code&gt;Devel::NYTProf&lt;/code&gt; 로 &lt;code&gt;mod_perl&lt;/code&gt; 을을 .</target>
        </trans-unit>
        <trans-unit id="86286084c63771dd6bdd5d93863fb70cc79b36c2" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;PL_sv_yes&lt;/code&gt; and &lt;code&gt;PL_sv_no&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;PL_sv_yes&lt;/code&gt; 및 &lt;code&gt;PL_sv_no&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="09945a80e8e04b2b27fe5027ac1bd4e5e6a9a0b2" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;blog()&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;blog()&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1ed855d062748c44f50e0c12d79b5b208e551776" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;identical&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;identical&lt;/code&gt; 참조 .</target>
        </trans-unit>
        <trans-unit id="86a6e1ff669076c3ac3f923bcd4119157edfdd71" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;permute&lt;/code&gt; , which is the opposite of &lt;code&gt;require_order&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;require_order&lt;/code&gt; 와 반대 인 &lt;code&gt;permute&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="bdd58dd0c357fd171783417cceab2dc185356f3d" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;sv_magicext&lt;/code&gt; in &lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt; for a more flexible way to add magic to an SV.</source>
          <target state="translated">SV에 마술을 더 유연하게 추가하는 방법 은 &lt;code&gt;sv_magicext&lt;/code&gt; 의 &lt;a href=&quot;perlapi&quot;&gt;sv_magicext&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1bafaa0d36c187ba60d6845649051a45f6ee6b67" translate="yes" xml:space="preserve">
          <source>See also Perl_sv_add_backref(), Perl_sv_del_backref(), Perl_sv_kill_backrefs()</source>
          <target state="translated">Perl_sv_add_backref (), Perl_sv_del_backref (), Perl_sv_kill_backrefs () 참조</target>
        </trans-unit>
        <trans-unit id="b8ee0d43bbd6314b08a48b2c13e478e9ccbe9925" translate="yes" xml:space="preserve">
          <source>See also bucket_info() and bucket_array().</source>
          <target state="translated">bucket_info () 및 bucket_array ()도 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="8cd9527fbd94acf64a5c84812edc3701f61dd923" translate="yes" xml:space="preserve">
          <source>See also bucket_stats() and bucket_array().</source>
          <target state="translated">bucket_stats () 및 bucket_array ()도 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="bd153b57031966245c6990a8d9df7c3a12fdc1dc" translate="yes" xml:space="preserve">
          <source>See also discussion of list operators in &lt;a href=&quot;#Terms-and-List-Operators-(Leftward)&quot;&gt;Terms and List Operators (Leftward)&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Terms-and-List-Operators-(Leftward)&quot;&gt;용어 및 목록 연산자 (왼쪽)&lt;/a&gt; 에서 목록 연산자에 대한 설명도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="303e32a7e050a24a88278e7a410b579432fbbbdf" translate="yes" xml:space="preserve">
          <source>See also exit(), warn(), and the Carp module.</source>
          <target state="translated">exit (), warn () 및 Carp 모듈도 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="34b1d500b949544057d7d0d41fbe556d19d872ff" translate="yes" xml:space="preserve">
          <source>See also getaddrinfo() for a more powerful and flexible function to look up socket addresses given hostnames or textual addresses.</source>
          <target state="translated">호스트 이름 또는 텍스트 주소가 지정된 소켓 주소를 조회하는보다 강력하고 유연한 함수는 getaddrinfo ()를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="51611c0d549c4f13d08aadfaa7eb73986d77f3f8" translate="yes" xml:space="preserve">
          <source>See also getnameinfo() for a more powerful and flexible function to turn socket addresses into human-readable textual representations.</source>
          <target state="translated">소켓 주소를 사람이 읽을 수있는 텍스트 표현으로 바꾸는 더 강력하고 유연한 함수는 getnameinfo ()도 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="3c9541f70af426eada4963661a5e76927d14033d" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;#EXAMPLES&quot;&gt;EXAMPLES&lt;/a&gt; section.</source>
          <target state="translated">&lt;a href=&quot;#EXAMPLES&quot;&gt;예&lt;/a&gt; 섹션 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="950888a5c439afc133bbbbcf76c9f289c65a4df0" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;#POSIX-FLAGS&quot;&gt;POSIX FLAGS&lt;/a&gt; below, which can be exported individually.</source>
          <target state="translated">아래 에서 &lt;a href=&quot;#POSIX-FLAGS&quot;&gt;POSIX 플래그를&lt;/a&gt; 참조하십시오 . 개별적으로 내보낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b2bbb3cbeb9546d32423b56f3b6e8cad08e47d09" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;http://search.cpan.org/perldoc/DBIx::Profile&quot;&gt;DBIx::Profile&lt;/a&gt; which will profile database queries running under the &lt;code&gt;DBIx::*&lt;/code&gt; namespace.</source>
          <target state="translated">&lt;code&gt;DBIx::*&lt;/code&gt; 네임 스페이스 에서 실행중인 데이터베이스 쿼리를 프로파일 링 하는 &lt;a href=&quot;http://search.cpan.org/perldoc/DBIx::Profile&quot;&gt;DBIx :: Profile&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1361dd7d2c2bd52b263e3b68649b6fc568d06fee" translate="yes" xml:space="preserve">
          <source>See also the OS390::Stdio module on CPAN.</source>
          <target state="translated">CPAN의 OS390 :: Stdio 모듈도 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a0a5320be18b6d51495d235fe86650b56ae37fee" translate="yes" xml:space="preserve">
          <source>See also the POSIX module's &lt;code&gt;pause&lt;/code&gt; function.</source>
          <target state="translated">POSIX 모듈의 &lt;code&gt;pause&lt;/code&gt; 기능 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="bcf22177096541c608e12df64316f788e1b9f418" translate="yes" xml:space="preserve">
          <source>See also the documentation for overload.pm regarding &lt;code&gt;=&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;=&lt;/code&gt; 에 관한 overload.pm 문서도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="24aad35d071d1f6e5724bdc66e64add6114641cb" translate="yes" xml:space="preserve">
          <source>See also the documentation for the Test and Test::Harness modules, for more environment variables that affect testing.</source>
          <target state="translated">테스트에 영향을 미치는 추가 환경 변수에 대해서는 Test 및 Test :: Harness 모듈에 대한 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="eb3ef9318d2ff536c37c7f919b9b535ff3c0da0d" translate="yes" xml:space="preserve">
          <source>See also the documentation of &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt; VERSION&lt;/code&gt; for a convenient way to fail if the running Perl interpreter is too old.</source>
          <target state="translated">또한의 문서를 참조하십시오 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; 하고 &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt; VERSION&lt;/code&gt; 실행중인 펄 인터프리터가 너무 오래 경우 실패 할 수있는 편리한 방법을.</target>
        </trans-unit>
        <trans-unit id="6a7acbe251726a5c6c893ef946218c6a477bfbb6" translate="yes" xml:space="preserve">
          <source>See also the effects of the &lt;code&gt;-C&lt;/code&gt; switch and its cousin, the &lt;code&gt;PERL_UNICODE&lt;/code&gt; environment variable, in &lt;a href=&quot;perlrun&quot;&gt;perlrun&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;perlrun&quot;&gt;perlrun&lt;/a&gt; 에서 &lt;code&gt;-C&lt;/code&gt; 스위치와 그 사촌 인 &lt;code&gt;PERL_UNICODE&lt;/code&gt; 환경 변수 의 영향을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="12dd0ec3281d19f4664ce0084bbb14814b4a8af0" translate="yes" xml:space="preserve">
          <source>See also the question later in &lt;a href=&quot;perlfaq4&quot;&gt;perlfaq4&lt;/a&gt; on sorting hashes.</source>
          <target state="translated">해시 정렬에 대해서는 나중에 &lt;a href=&quot;perlfaq4&quot;&gt;perlfaq4&lt;/a&gt; 의 질문을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c0dbd0cacf774e5e56ef712e004e689ecf38404f" translate="yes" xml:space="preserve">
          <source>See also the script &lt;code&gt;pfind&lt;/code&gt; on CPAN for a nice application of this module.</source>
          <target state="translated">이 모듈을 &lt;code&gt;pfind&lt;/code&gt; 적용하려면 CPAN 의 스크립트 pfind 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="34e3cbd59762152cba621f3c14b64923435705a7" translate="yes" xml:space="preserve">
          <source>See also the section about &lt;a href=&quot;#Infinity-and-Not-a-Number&quot;&gt;Infinity and Not a Number&lt;/a&gt; for problems in comparing NaNs.</source>
          <target state="translated">NaN 비교에 대한 문제는 &lt;a href=&quot;#Infinity-and-Not-a-Number&quot;&gt;무한대 및 숫자 아님&lt;/a&gt; 에 대한 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="371a87eafb4de078ff674d69a5a89c186532eb49" translate="yes" xml:space="preserve">
          <source>See also:</source>
          <target state="translated">또한보십시오:</target>
        </trans-unit>
        <trans-unit id="8fb61b8f7581126c42cfbb281a9efdf2f8c172ab" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#Rounding&quot;&gt;Rounding&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Rounding&quot;&gt;반올림&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9fffb7d4e9c0633d7fa04d7123f0865b0d619df2" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;encode/encoding&quot;&gt;Encode::Encoding&lt;/a&gt;</source>
          <target state="translated">참조 : &lt;a href=&quot;encode/encoding&quot;&gt;Encode :: Encoding&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a8e3d5311d7d86ca2b21b6b0c86aeb3b642adadb" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;perlop#Bitwise-String-Operators&quot;&gt;Bitwise String Operators in perlop&lt;/a&gt;</source>
          <target state="translated">참조 : &lt;a href=&quot;perlop#Bitwise-String-Operators&quot;&gt;perlop의 비트 문자열 연산자&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f33bd2fb971b9e485ec30974e79d41960f0f0eaa" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;perlrecharclass#Extended-Bracketed-Character-Classes&quot;&gt;Extended Bracketed Character Classes in perlrecharclass&lt;/a&gt;</source>
          <target state="translated">참조 : &lt;a href=&quot;perlrecharclass#Extended-Bracketed-Character-Classes&quot;&gt;perlrecharclass에서의 확장 괄호 문자 클래스&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ff63f1036be059a709c795a2c9e17166be1b529c" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;perlref#Assigning-to-References&quot;&gt;Assigning to References in perlref&lt;/a&gt;</source>
          <target state="translated">참조 : &lt;a href=&quot;perlref#Assigning-to-References&quot;&gt;perlref에서 참조에 지정&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="294c7b81d556a38e8f63c019326342cbea7a1f46" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;perlsub#Constant-Functions&quot;&gt;Constant Functions in perlsub&lt;/a&gt;</source>
          <target state="translated">참조 : &lt;a href=&quot;perlsub#Constant-Functions&quot;&gt;perlsub의 상수 함수&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="399b88ea69898133db71e6d96568e2fa890a8253" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;perlsub#Lexical-Subroutines&quot;&gt;Lexical Subroutines in perlsub&lt;/a&gt;</source>
          <target state="translated">참조 : &lt;a href=&quot;perlsub#Lexical-Subroutines&quot;&gt;perlsub의 어휘 서브 루틴&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="04083ff70a9e05cd8adfcd185f1ca1596107ee24" translate="yes" xml:space="preserve">
          <source>See also: &lt;code&gt;&quot;extract_quotelike&quot;&lt;/code&gt; and &lt;code&gt;&quot;extract_codeblock&quot;&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;&quot;extract_quotelike&quot;&lt;/code&gt; 및 &lt;code&gt;&quot;extract_codeblock&quot;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d54aa0d2b835810f29436bc75eb77b3333657eae" translate="yes" xml:space="preserve">
          <source>See attribute &lt;code&gt;depend&lt;/code&gt; below.</source>
          <target state="translated">아래의 속성에 &lt;code&gt;depend&lt;/code&gt; 다름</target>
        </trans-unit>
        <trans-unit id="e209530cb731d2c6ed80fd9e56ee0996a9dfdecf" translate="yes" xml:space="preserve">
          <source>See below and hints/qnx.sh for more information.</source>
          <target state="translated">자세한 내용은 아래 및 힌트 /qnx.sh를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="5e94ffa964eb8148a5b7b44e3218f55c7b6a5f7a" translate="yes" xml:space="preserve">
          <source>See below for more description of the switches.</source>
          <target state="translated">스위치에 대한 자세한 설명은 아래를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a8c5ac01636644c6c2c7a306c349b1544c648097" translate="yes" xml:space="preserve">
          <source>See comment on fork in &lt;a href=&quot;#Miscellaneous&quot;&gt;Miscellaneous&lt;/a&gt; below.</source>
          <target state="translated">아래 에서 &lt;a href=&quot;#Miscellaneous&quot;&gt;기타의&lt;/a&gt; 포크에 대한 주석을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b09836a76dfa7e890b82a509295f12ae70b14260" translate="yes" xml:space="preserve">
          <source>See cop.h: je_mustcatch, when set at any runlevel to TRUE, means eval ops must establish a local jmpenv to handle exception traps.</source>
          <target state="translated">cop.h : je_mustcatch를 참조하십시오. runlevel에서 TRUE로 설정하면 eval op가 예외 트랩을 처리하기 위해 로컬 jmpenv를 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="2b761641535ca282b73de8042196ecbd1e908438" translate="yes" xml:space="preserve">
          <source>See documentation of &lt;code&gt;subtest&lt;/code&gt; in Test::More.</source>
          <target state="translated">Test :: More 의 &lt;code&gt;subtest&lt;/code&gt; 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8e5b968746ee31a1cfd2e25034fe29fe133c880b" translate="yes" xml:space="preserve">
          <source>See either &lt;b&gt;instance variable&lt;/b&gt; or &lt;b&gt;character property&lt;/b&gt;.</source>
          <target state="translated">&lt;b&gt;인스턴스 변수&lt;/b&gt; 또는 &lt;b&gt;문자 속성을&lt;/b&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c93485a9bf7ab70246c2bb25b81b685338032bee" translate="yes" xml:space="preserve">
          <source>See either &lt;b&gt;switches&lt;/b&gt; or &lt;b&gt;regular expression modifiers&lt;/b&gt;.</source>
          <target state="translated">&lt;b&gt;스위치&lt;/b&gt; 또는 &lt;b&gt;정규식 수정자를&lt;/b&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="bca27e73c5af96160e310f88f005bfd242ca416d" translate="yes" xml:space="preserve">
          <source>See examples in &lt;a href=&quot;#The-NO_OUTPUT-Keyword&quot;&gt;The NO_OUTPUT Keyword&lt;/a&gt; and &lt;a href=&quot;#Returning-Undef-And-Empty-Lists&quot;&gt;Returning Undef And Empty Lists&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#The-NO_OUTPUT-Keyword&quot;&gt;NO_OUTPUT 키워드&lt;/a&gt; 및 Undef &lt;a href=&quot;#Returning-Undef-And-Empty-Lists&quot;&gt;And Empty 목록 반환 &lt;/a&gt;의 예제를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ceb23395b7ff892f97e42af84489440c4a02a6b7" translate="yes" xml:space="preserve">
          <source>See for example the limitations in Switch, which uses source filters, and thus is does not work inside a string eval, the presence of regexes with embedded newlines that are specified with raw /.../ delimiters and don't have a modifier //x are indistinguishable from code chunks beginning with the division operator /. As a workaround you must use m/.../ or m?...? for such patterns. Also, the presence of regexes specified with raw ?...? delimiters may cause mysterious errors. The workaround is to use m?...? instead. See &lt;a href=&quot;http://search.cpan.org/perldoc?Switch#LIMITATIONS&quot;&gt;http://search.cpan.org/perldoc?Switch#LIMITATIONS&lt;/a&gt;</source>
          <target state="translated">예를 들어 소스 필터를 사용하는 스위치의 제한 사항을 참조하십시오. 따라서 문자열 eval 내에서 작동하지 않습니다. raw /.../ 구분 기호로 지정되고 수정 자 / / x는 나누기 연산자 /로 시작하는 코드 청크와 구별 할 수 없습니다. 해결 방법으로 m /.../ 또는 m? ...?을 사용해야합니다. 그런 패턴을 위해. 또한 원시? ...?로 지정된 정규 표현식의 존재 구분자는 신비한 오류를 일으킬 수 있습니다. 해결 방법은 m? ...?을 사용하는 것입니다. 대신에. &lt;a href=&quot;http://search.cpan.org/perldoc?Switch#LIMITATIONS&quot;&gt;http://search.cpan.org/perldoc?Switch#LIMITATIONS를&lt;/a&gt; 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="c2924f082858dd71261929cfa3aa3fdf58f5e82c" translate="yes" xml:space="preserve">
          <source>See for the full list of hardware/OS support and expected end-of-life &lt;a href=&quot;http://www.hp.com/go/hpuxservermatrix&quot;&gt;http://www.hp.com/go/hpuxservermatrix&lt;/a&gt;</source>
          <target state="translated">하드웨어 / OS 지원 및 예상 수명 종료 전체 목록은 &lt;a href=&quot;http://www.hp.com/go/hpuxservermatrix&quot;&gt;http://www.hp.com/go/hpuxservermatrix를 참조하십시오.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e9cac07c3a5031bc58ed0d4641c1e831bf299803" translate="yes" xml:space="preserve">
          <source>See how much easier this is? It's cleaner, safer, and faster. It's cleaner because it's less noisy. It's safer because if code gets added between the inner and outer loops later on, the new code won't be accidentally executed. The &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next&lt;/a&gt;&lt;/code&gt; explicitly iterates the other loop rather than merely terminating the inner one. And it's faster because Perl executes a &lt;code&gt;foreach&lt;/code&gt; statement more rapidly than it would the equivalent &lt;code&gt;for&lt;/code&gt; loop.</source>
          <target state="translated">이것이 얼마나 쉬운 지 알아? 더 깨끗하고 안전하며 빠릅니다. 덜 시끄럽기 때문에 더 깨끗합니다. 나중에 내부 및 외부 루프 사이에 코드를 추가하면 실수로 새 코드가 실행되지 않기 때문에 더 안전합니다. &lt;code&gt;&lt;a href=&quot;functions/next&quot;&gt;next&lt;/a&gt;&lt;/code&gt; 명시 단지 내부를 종료하기보다는 다른 루프를 반복 할 때마다. Perl은 &lt;code&gt;for&lt;/code&gt; 루프 보다 &lt;code&gt;foreach&lt;/code&gt; 문을 더 빠르게 실행하기 때문에 더 빠릅니다 .</target>
        </trans-unit>
        <trans-unit id="fff03238825b47d71884937869bfce10a8b5c0e3" translate="yes" xml:space="preserve">
          <source>See https://metacpan.org/release/ExtUtils-MakeMaker.</source>
          <target state="translated">https://metacpan.org/release/ExtUtils-MakeMaker를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="88733ada1546a673c0dbee91911afa2ab1e52139" translate="yes" xml:space="preserve">
          <source>See if the web framework you are using has an authentication system and if that fits your needs.</source>
          <target state="translated">사용중인 웹 프레임 워크에 인증 시스템이 있는지, 필요에 맞는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="e2f42e5fd2aaa4c6aa831bc277c3b494ee196f99" translate="yes" xml:space="preserve">
          <source>See passwd(5) and getpwent(3) for details.</source>
          <target state="translated">자세한 내용은 passwd (5) 및 getpwent (3)를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="075e3f5e18c179398bc43c4ab7f0926aeb85cca7" translate="yes" xml:space="preserve">
          <source>See previous FAQ item.</source>
          <target state="translated">이전 FAQ 항목을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="acc2c52c24a5f8259e0f2ce1e052d9cf22c641ab" translate="yes" xml:space="preserve">
          <source>See the</source>
          <target state="translated">참조</target>
        </trans-unit>
        <trans-unit id="e3f3a8cb36b9b33d47d443f8468d020d9ca6511b" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;#Constructor-Options&quot;&gt;Constructor Options&lt;/a&gt; section for more details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;#Constructor-Options&quot;&gt;생성자 옵션&lt;/a&gt; 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="43abd257abdf69c73d5be5761204cdfb28133096" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;#HOW-IT-WORKS&quot;&gt;HOW IT WORKS&lt;/a&gt; section below to see how &lt;code&gt;IPC::Cmd&lt;/code&gt; decides what modules or function calls to use when issuing a command.</source>
          <target state="translated">을 참조하십시오 &lt;a href=&quot;#HOW-IT-WORKS&quot;&gt;어떻게 작동하는지&lt;/a&gt; 방법을 보려면 아래 섹션을 &lt;code&gt;IPC::Cmd&lt;/code&gt; 명령을 발행 할 때 모듈 또는 함수 호출을 사용할지 결정합니다.</target>
        </trans-unit>
        <trans-unit id="dd05f1a1763e3ac883d61441090452812cc7eb8c" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;http://search.cpan.org/perldoc/BSD::Resource&quot;&gt;BSD::Resource&lt;/a&gt; and your systems documentation for the gory details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;http://search.cpan.org/perldoc/BSD::Resource&quot;&gt;BSD :: Resource&lt;/a&gt; 및 시스템 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="40b878a314357dca797baa2a8cee58f135011aad" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;http://search.cpan.org/perldoc/local::lib&quot;&gt;local::lib&lt;/a&gt; documentation for more details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;http://search.cpan.org/perldoc/local::lib&quot;&gt;local :: lib&lt;/a&gt; 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="25e71bd547060c51814b7b6becb838b195fce0a3" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;opcode&quot;&gt;Opcode&lt;/a&gt; module for information about opcodes, optags, opmasks and important information about safety.</source>
          <target state="translated">opcode, optag, opmask 및 안전에 대한 중요한 정보에 대한 정보 는 &lt;a href=&quot;opcode&quot;&gt;Opcode&lt;/a&gt; 모듈을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d12dff4667632c72fccecf6522c62e799bd934d4" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; function, of which &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt;&lt;/code&gt; is the opposite.</source>
          <target state="translated">참고 항목 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; 하는의 기능을 &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt;&lt;/code&gt; 반대입니다.</target>
        </trans-unit>
        <trans-unit id="c1a694b2c9c4e7154192a15cf9fc1aa34b89f6f9" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; function, of which &lt;code&gt;&lt;a href=&quot;no&quot;&gt;no&lt;/a&gt;&lt;/code&gt; is the opposite.</source>
          <target state="translated">참고 항목 &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; 하는의 기능을 &lt;code&gt;&lt;a href=&quot;no&quot;&gt;no&lt;/a&gt;&lt;/code&gt; 반대입니다.</target>
        </trans-unit>
        <trans-unit id="b249700609418ebf44cd57258a74d127f00ece2c" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;GLOBAL VARIABLES&lt;/code&gt; section to see how to change this preference.</source>
          <target state="translated">참고 항목 &lt;code&gt;GLOBAL VARIABLES&lt;/code&gt; 이 환경 설정을 변경하는 방법을 볼 수있는 섹션.</target>
        </trans-unit>
        <trans-unit id="2b239b93bdb113b7db924e9e6e1c8679cc3b9771" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;HOW IT WORKS&lt;/code&gt; section further down for details.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;HOW IT WORKS&lt;/code&gt; 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a9f9e5a0d99ec9e84fec92a948a2b98903855c8f" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;Memoize.pm&lt;/code&gt; Page at &lt;a href=&quot;http://perl.plover.com/Memoize/&quot;&gt;http://perl.plover.com/Memoize/&lt;/a&gt; for news and upgrades. Near this page, at &lt;a href=&quot;http://perl.plover.com/MiniMemoize/&quot;&gt;http://perl.plover.com/MiniMemoize/&lt;/a&gt; there is an article about memoization and about the internals of Memoize that appeared in The Perl Journal, issue #13. (This article is also included in the Memoize distribution as `article.html'.)</source>
          <target state="translated">뉴스 및 업그레이드 는 &lt;code&gt;Memoize.pm&lt;/code&gt; 페이지 ( &lt;a href=&quot;http://perl.plover.com/Memoize/&quot;&gt;http://perl.plover.com/Memoize/)&lt;/a&gt; 를 참조하십시오 . 이 페이지 근처의 &lt;a href=&quot;http://perl.plover.com/MiniMemoize/&quot;&gt;http://perl.plover.com/MiniMemoize/&lt;/a&gt; 에는 Perl Journal, Issue # 13에 실린 메모와 메모에 대한 기사가 있습니다. (이 기사는 Memoize 배포판에`article.html '로도 포함되어 있습니다.)</target>
        </trans-unit>
        <trans-unit id="4bba6998f19fbd03af482ef65b9510cbaa5fae00" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;README&lt;/code&gt; in the &lt;code&gt;examples&lt;/code&gt; directory of this distribution.</source>
          <target state="translated">이 배포판 의 &lt;code&gt;examples&lt;/code&gt; 디렉토리 에서 &lt;code&gt;README&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="bf3a9502c15d00637d12054d98327f56167519da" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;allow()&lt;/code&gt; function for details.</source>
          <target state="translated">자세한 내용은 &lt;code&gt;allow()&lt;/code&gt; 함수를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="74d7550b08cbab72120e12fa13822ee435ab10ff" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;autoload&lt;/code&gt; function and the &lt;code&gt;autoload_remote&lt;/code&gt; function from &lt;a href=&quot;../load&quot;&gt;Module::Load&lt;/a&gt; for details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;../load&quot;&gt;Module :: Load&lt;/a&gt; 의 &lt;code&gt;autoload&lt;/code&gt; 함수 및 &lt;code&gt;autoload_remote&lt;/code&gt; 함수 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1e423604a1b60cbb6339c26afc8a58724c582f8f" translate="yes" xml:space="preserve">
          <source>See the CPAN FAQ at &lt;a href=&quot;http://www.cpan.org/misc/cpan-faq.html&quot;&gt;http://www.cpan.org/misc/cpan-faq.html&lt;/a&gt; for answers to the most frequently asked questions about CPAN.</source>
          <target state="translated">CPAN 에 관해 가장 자주 묻는 질문에 대한 답변 은 &lt;a href=&quot;http://www.cpan.org/misc/cpan-faq.html&quot;&gt;http://www.cpan.org/misc/cpan-faq.html&lt;/a&gt; 의 CPAN FAQ를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="607b3a7869f52b5842876abd8b4f375d4245815f" translate="yes" xml:space="preserve">
          <source>See the CPAN::Reporter documentation for additional details and configuration settings. If your firewall blocks outgoing traffic, you may need to configure CPAN::Reporter before sending reports.</source>
          <target state="translated">추가 세부 사항 및 구성 설정에 대해서는 CPAN :: Reporter 문서를 참조하십시오. 방화벽이 발신 트래픽을 차단하는 경우 보고서를 보내기 전에 CPAN :: Reporter를 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="7aba5ca9b45599787560bfb2afd7a0e9cf3c9f34" translate="yes" xml:space="preserve">
          <source>See the Changes file.</source>
          <target state="translated">변경 파일을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1c8c02a8fa1ad32731232c8c310d53fc47ee543e" translate="yes" xml:space="preserve">
          <source>See the INSTALL file for general information regarding 64-bit compiles. In general, the defaults should be fine for most people.</source>
          <target state="translated">64 비트 컴파일에 관한 일반 정보는 INSTALL 파일을 참조하십시오. 일반적으로 대부분의 사람들은 기본값을 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="9ba403735f1b0853cf6c42f682cd71f9040fc277" translate="yes" xml:space="preserve">
          <source>See the INSTALL file for general information regarding Configure. Only Solaris-specific issues are discussed here. Usually, the defaults should be fine.</source>
          <target state="translated">구성에 관한 일반 정보는 INSTALL 파일을 참조하십시오. 여기서는 Solaris 관련 문제 만 설명합니다. 일반적으로 기본값은 양호해야합니다.</target>
        </trans-unit>
        <trans-unit id="faa04af1eab5ace0a18b7ea38f2f5d8491391afd" translate="yes" xml:space="preserve">
          <source>See the Net::POP3 and Net::SMTP modules for examples of this.</source>
          <target state="translated">이에 대한 예는 Net :: POP3 및 Net :: SMTP 모듈을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="00f6b4f37ceaafbb02fe1c9b33be7ac70154b89e" translate="yes" xml:space="preserve">
          <source>See the Symbol module for a way to create anonymous symbol table entries.</source>
          <target state="translated">익명의 심볼 테이블 항목을 만드는 방법은 심볼 모듈을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1c93fd5ae730337ac1cf24d8d9d41ea44b6db206" translate="yes" xml:space="preserve">
          <source>See the YAML and Data::Dumper files that come with the &lt;code&gt;CPAN.pm&lt;/code&gt; distribution in the &lt;code&gt;distroprefs/&lt;/code&gt; directory for examples.</source>
          <target state="translated">예제 는 &lt;code&gt;distroprefs/&lt;/code&gt; 디렉토리 의 &lt;code&gt;CPAN.pm&lt;/code&gt; 배포 와 함께 제공되는 YAML 및 Data :: Dumper 파일을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7de8bb3c2dde975b8a0f3c38ce1f6bdae6932300" translate="yes" xml:space="preserve">
          <source>See the answer to the previous question.</source>
          <target state="translated">이전 질문에 대한 답변을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="239f1061c9f649d13d28c85c2cc34e6f36fc310a" translate="yes" xml:space="preserve">
          <source>See the appropriate</source>
          <target state="translated">적절한 참조</target>
        </trans-unit>
        <trans-unit id="838accd091e073a4e4a620e7a6475dfe1cb73c48" translate="yes" xml:space="preserve">
          <source>See the authors list in</source>
          <target state="translated">의 저자 목록보기</target>
        </trans-unit>
        <trans-unit id="44e0b1268a441d58c97c9174c3132c41e9df0b15" translate="yes" xml:space="preserve">
          <source>See the brief discussion in &lt;a href=&quot;perlpod#Formatting-Codes&quot;&gt;Formatting Codes in perlpod&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;perlpod#Formatting-Codes&quot;&gt;perlpod의 코드 포맷에&lt;/a&gt; 대한 간단한 설명을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="291a0ebbbec03b08710f5ad3e40715d6cafecaea" translate="yes" xml:space="preserve">
          <source>See the comments at the top of &lt;code&gt;embed.fnc&lt;/code&gt; for others.</source>
          <target state="translated">&lt;code&gt;embed.fnc&lt;/code&gt; 의 맨 위에있는 주석을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8c1c5dd902524760ea293fd54aa24dc28de5008d" translate="yes" xml:space="preserve">
          <source>See the discussion of &lt;code&gt;&lt;a href=&quot;#pack()&quot;&gt;pack()&lt;/a&gt;&lt;/code&gt; above.</source>
          <target state="translated">위 의 &lt;code&gt;&lt;a href=&quot;#pack()&quot;&gt;pack()&lt;/a&gt;&lt;/code&gt; 대한 설명을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="34b50de2cb94e2f5733b571c3907a9372a967f36" translate="yes" xml:space="preserve">
          <source>See the discussion of &lt;code&gt;&lt;a href=&quot;#printf()&quot;&gt;printf()&lt;/a&gt;&lt;/code&gt; above. An example of the use of sprintf would be:</source>
          <target state="translated">위 의 &lt;code&gt;&lt;a href=&quot;#printf()&quot;&gt;printf()&lt;/a&gt;&lt;/code&gt; 대한 설명을 참조하십시오 . sprintf 사용의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e4df8ddf2842e84ed3cc6225530d69e4aa2b505d" translate="yes" xml:space="preserve">
          <source>See the documentation about the copy constructor and &lt;code&gt;=&lt;/code&gt; in overload, as well as the documentation in BigInt for further details.</source>
          <target state="translated">자세한 내용은 복사 생성자 및 &lt;code&gt;=&lt;/code&gt; 과부하에 대한 설명서와 BigInt의 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="3a5795626bd886fc84b5b3161c91f427201f7acc" translate="yes" xml:space="preserve">
          <source>See the documentation for &lt;a href=&quot;http://search.cpan.org/perldoc/Text::Autoformat&quot;&gt;Text::Autoformat&lt;/a&gt; to appreciate its many capabilities.</source>
          <target state="translated">많은 기능을 이해하려면 &lt;a href=&quot;http://search.cpan.org/perldoc/Text::Autoformat&quot;&gt;Text :: Autoformat&lt;/a&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c25e441faf735f723987df3964a8c84deff8b0a3" translate="yes" xml:space="preserve">
          <source>See the documentation for &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; in &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt;.</source>
          <target state="translated">에 대한 설명서를 참조하십시오 &lt;code&gt;&lt;a href=&quot;functions/each&quot;&gt;each&lt;/a&gt;&lt;/code&gt; 에서 &lt;a href=&quot;perlfunc&quot;&gt;을 perlfunc를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9af3ab1ea4081603ca7ba1db505f142d92a5d411" translate="yes" xml:space="preserve">
          <source>See the documentation for either of those commands to see what else you can do.</source>
          <target state="translated">수행 할 수있는 다른 작업을 보려면 해당 명령 중 하나의 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="413a3d22d49065def44419ce8b97e5b6502bcdf5" translate="yes" xml:space="preserve">
          <source>See the documentation for flow-control keywords in &lt;a href=&quot;../perlsyn#Compound-Statements&quot;&gt;Compound Statements in perlsyn&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../perlsyn#Compound-Statements&quot;&gt;perlsyn의 복합 명령문에서&lt;/a&gt; 플로우 제어 키워드에 대한 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="97571b9edce8f08599cc2aae5c1b1a942d44701b" translate="yes" xml:space="preserve">
          <source>See the documentation for flow-control keywords in &lt;a href=&quot;perlsyn#Compound-Statements&quot;&gt;Compound Statements in perlsyn&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;perlsyn#Compound-Statements&quot;&gt;perlsyn의 복합 명령문에서&lt;/a&gt; 플로우 제어 키워드에 대한 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="73e4b041d28a8fef241cdecb379b15f3b0c87aba" translate="yes" xml:space="preserve">
          <source>See the documentation of &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt; VERSION&lt;/code&gt; for a convenient way to fail if the running Perl interpreter is too old.</source>
          <target state="translated">의 문서를 참조하십시오 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; VERSION&lt;/code&gt; 하고 &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt; VERSION&lt;/code&gt; 실행중인 펄 인터프리터가 너무 오래 경우 실패 할 수있는 편리한 방법을.</target>
        </trans-unit>
        <trans-unit id="9a9856c7ed82189e0c58b57cf7ab0022fab179c2" translate="yes" xml:space="preserve">
          <source>See the entry for &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; in &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt; for more details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt; 에서 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; 항목을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="579c02009e5d33672d2b3bf1f32a8aea43b4c283" translate="yes" xml:space="preserve">
          <source>See the entry on &lt;code&gt;backticks&lt;/code&gt; above.</source>
          <target state="translated">위의 &lt;code&gt;backticks&lt;/code&gt; 대한 항목을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8cdcfdb1e496ac40c473ef1643148795b19bf7d5" translate="yes" xml:space="preserve">
          <source>See the example at &lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt; 의 예제를 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="5c6243aa712e4e987437456b02e7925a1f94d2b3" translate="yes" xml:space="preserve">
          <source>See the example at &lt;code&gt;&lt;a href=&quot;readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt; 의 예제를 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="394ea296d9fea402ea28f14c1f9fbece6086398e" translate="yes" xml:space="preserve">
          <source>See the example in &lt;a href=&quot;packlist&quot;&gt;ExtUtils::Packlist&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;packlist&quot;&gt;ExtUtils :: Packlist&lt;/a&gt; 의 예제를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6142ee968e835bf0e6a4b4bc0768ee08a0e5da77" translate="yes" xml:space="preserve">
          <source>See the file</source>
          <target state="translated">파일보기</target>
        </trans-unit>
        <trans-unit id="10dad421044f18b7af163a82ed9974550acc8db7" translate="yes" xml:space="preserve">
          <source>See the file pod/perlport.pod for more information about the OpenVOS port of Perl.</source>
          <target state="translated">Perl의 OpenVOS 포트에 대한 자세한 내용은 pod / perlport.pod 파일을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="8853d25a4754f2571518c761e9e5c75905dbead7" translate="yes" xml:space="preserve">
          <source>See the filters at the end of this documents for examples of using context information using both</source>
          <target state="translated">둘 다를 사용하여 컨텍스트 정보를 사용하는 예는이 문서의 끝에있는 필터를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="afde646d9a8a44c9d93270380997df97dcfabba6" translate="yes" xml:space="preserve">
          <source>See the following pages for more information:</source>
          <target state="translated">자세한 내용은 다음 페이지를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="feed0aa953e0b86b29a7e0e2e208f79a66c19281" translate="yes" xml:space="preserve">
          <source>See the header files and the C code in the supplied OS/2-related modules for the details on usage of these functions.</source>
          <target state="translated">이 기능의 사용법에 대한 자세한 내용은 제공된 OS / 2 관련 모듈의 헤더 파일 및 C 코드를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="cad24f9fdd0b59fb39db9be5afe5f8508c3a09ce" translate="yes" xml:space="preserve">
          <source>See the individual methods/properties for details.</source>
          <target state="translated">자세한 내용은 개별 방법 / 속성을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e6fee35f7690a0f0b6ecb1890246b8a2510a2ec3" translate="yes" xml:space="preserve">
          <source>See the module &lt;a href=&quot;http://search.cpan.org/perldoc/Compress::Bzip2&quot;&gt;Compress::Bzip2&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;http://search.cpan.org/perldoc/Compress::Bzip2&quot;&gt;Compress :: Bzip2&lt;/a&gt; 모듈을 참조하십시오</target>
        </trans-unit>
        <trans-unit id="49a35fd32da3daa48c9fe6c8672989822d967a15" translate="yes" xml:space="preserve">
          <source>See the module &lt;a href=&quot;http://search.cpan.org/perldoc/String::Approx&quot;&gt;String::Approx&lt;/a&gt; available from CPAN.</source>
          <target state="translated">CPAN에서 사용 가능한 &lt;a href=&quot;http://search.cpan.org/perldoc/String::Approx&quot;&gt;String :: rox&lt;/a&gt; 모듈을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0422f47d6a927439d2983f60fd547b2b2ad5672e" translate="yes" xml:space="preserve">
          <source>See the modules under the Solaris:: and Sun::Solaris namespaces on CPAN, see &lt;a href=&quot;http://www.cpan.org/modules/by-module/Solaris/&quot;&gt;http://www.cpan.org/modules/by-module/Solaris/&lt;/a&gt; and &lt;a href=&quot;http://www.cpan.org/modules/by-module/Sun/&quot;&gt;http://www.cpan.org/modules/by-module/Sun/&lt;/a&gt;.</source>
          <target state="translated">CPAN의 Solaris :: 및 Sun :: Solaris 네임 스페이스에있는 모듈을 참조하십시오 ( &lt;a href=&quot;http://www.cpan.org/modules/by-module/Solaris/&quot;&gt;http://www.cpan.org/modules/by-module/Solaris/&lt;/a&gt; 및 &lt;a href=&quot;http://www.cpan.org/modules/by-module/Sun/&quot;&gt;http://www.cpan.org/modules/by 참조). -module / Sun /&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6bb41c596a1759330b9cb513876ca708593201a0" translate="yes" xml:space="preserve">
          <source>See the note on &lt;code&gt;MAPPING&lt;/code&gt; below.</source>
          <target state="translated">아래의 &lt;code&gt;MAPPING&lt;/code&gt; 대한 참고 사항을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="68f4783a31000cc0f3cc312dced3acc380009fdc" translate="yes" xml:space="preserve">
          <source>See the respective low-level library documentation for further details.</source>
          <target state="translated">자세한 내용은 해당 하위 수준 라이브러리 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="612405692ced11f2d636b784df0fd90038603316" translate="yes" xml:space="preserve">
          <source>See the respective math library module documentation for further details.</source>
          <target state="translated">자세한 내용은 해당 수학 라이브러리 모듈 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c03cfde13d1c8612778c8b7cda8a4e02a8a5d6ea" translate="yes" xml:space="preserve">
          <source>See the section</source>
          <target state="translated">섹션을 참조하십시오</target>
        </trans-unit>
        <trans-unit id="b55c21a2a29981505e847c69ae7d241753cd7552" translate="yes" xml:space="preserve">
          <source>See the section titled &quot;Compliance&quot; in RFC 1952 for a definition of the values used for the fields in the gzip header.</source>
          <target state="translated">gzip 헤더의 필드에 사용 된 값의 정의는 RFC 1952의 &quot;규정 준수&quot;섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9122e68aefefe819f538fe0c0dfb8e87eb5e7b86" translate="yes" xml:space="preserve">
          <source>See the source for Pod::Simple::RTF for an example of a formatter that uses Pod::Simple::PullParser.</source>
          <target state="translated">Pod :: Simple :: PullParser를 사용하는 포맷터의 예는 Pod :: Simple :: RTF 소스를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d787e04a99446f8085850e40f2ba5ba07770a2cd" translate="yes" xml:space="preserve">
          <source>See the source for Pod::Simple::Text for an example of using this class.</source>
          <target state="translated">이 클래스를 사용하는 예는 Pod :: Simple :: Text의 소스를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="3c2d503a731fb8b122b64577756341a2fe8a9f91" translate="yes" xml:space="preserve">
          <source>See the source for details.</source>
          <target state="translated">자세한 내용은 소스를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="408481221a85a1107cf74e093de1b4644532b226" translate="yes" xml:space="preserve">
          <source>See these manpages, some of which are CPAN modules: &lt;a href=&quot;perlunicode&quot;&gt;perlunicode&lt;/a&gt;, &lt;a href=&quot;perluniprops&quot;&gt;perluniprops&lt;/a&gt;, &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;, &lt;a href=&quot;perlrecharclass&quot;&gt;perlrecharclass&lt;/a&gt;, &lt;a href=&quot;perluniintro&quot;&gt;perluniintro&lt;/a&gt;, &lt;a href=&quot;perlunitut&quot;&gt;perlunitut&lt;/a&gt;, &lt;a href=&quot;perlunifaq&quot;&gt;perlunifaq&lt;/a&gt;, &lt;a href=&quot;perlio&quot;&gt;PerlIO&lt;/a&gt;, &lt;a href=&quot;db_file&quot;&gt;DB_File&lt;/a&gt;, &lt;a href=&quot;dbm_filter&quot;&gt;DBM_Filter&lt;/a&gt;, &lt;a href=&quot;dbm_filter/utf8&quot;&gt;DBM_Filter::utf8&lt;/a&gt;, &lt;a href=&quot;encode&quot;&gt;Encode&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/Encode::Locale&quot;&gt;Encode::Locale&lt;/a&gt;, &lt;a href=&quot;unicode/ucd&quot;&gt;Unicode::UCD&lt;/a&gt;, &lt;a href=&quot;unicode/normalize&quot;&gt;Unicode::Normalize&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/Unicode::GCString&quot;&gt;Unicode::GCString&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/Unicode::LineBreak&quot;&gt;Unicode::LineBreak&lt;/a&gt;, &lt;a href=&quot;unicode/collate&quot;&gt;Unicode::Collate&lt;/a&gt;, &lt;a href=&quot;unicode/collate/locale&quot;&gt;Unicode::Collate::Locale&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/Unicode::Unihan&quot;&gt;Unicode::Unihan&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/Unicode::CaseFold&quot;&gt;Unicode::CaseFold&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/Unicode::Tussle&quot;&gt;Unicode::Tussle&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/Lingua::JA::Romanize::Japanese&quot;&gt;Lingua::JA::Romanize::Japanese&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/Lingua::ZH::Romanize::Pinyin&quot;&gt;Lingua::ZH::Romanize::Pinyin&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/Lingua::KO::Romanize::Hangul&quot;&gt;Lingua::KO::Romanize::Hangul&lt;/a&gt;.</source>
          <target state="translated">: CPAN 모듈입니다 일부는 이러한 맨 페이지를 참조하십시오 &lt;a href=&quot;perlunicode&quot;&gt;perlunicode&lt;/a&gt; , &lt;a href=&quot;perluniprops&quot;&gt;perluniprops&lt;/a&gt; , &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt; , &lt;a href=&quot;perlrecharclass&quot;&gt;perlrecharclass&lt;/a&gt; , &lt;a href=&quot;perluniintro&quot;&gt;perluniintro&lt;/a&gt; , &lt;a href=&quot;perlunitut&quot;&gt;perlunitut&lt;/a&gt; , &lt;a href=&quot;perlunifaq&quot;&gt;perlunifaq&lt;/a&gt; , &lt;a href=&quot;perlio&quot;&gt;은 PerlIO&lt;/a&gt; , &lt;a href=&quot;db_file&quot;&gt;DB_File&lt;/a&gt; , &lt;a href=&quot;dbm_filter&quot;&gt;DBM_Filter을&lt;/a&gt; , &lt;a href=&quot;dbm_filter/utf8&quot;&gt;DBM_Filter : UTF8&lt;/a&gt; , &lt;a href=&quot;encode&quot;&gt;인코딩&lt;/a&gt; , &lt;a href=&quot;http://search.cpan.org/perldoc/Encode::Locale&quot;&gt;인코딩 :: 로케일&lt;/a&gt; , &lt;a href=&quot;unicode/ucd&quot;&gt;유니 코드 : UCD&lt;/a&gt; , &lt;a href=&quot;unicode/normalize&quot;&gt;유니 코드 : : Normalize&lt;/a&gt; , &lt;a href=&quot;http://search.cpan.org/perldoc/Unicode::GCString&quot;&gt;Unicode :: GCString&lt;/a&gt; , &lt;a href=&quot;http://search.cpan.org/perldoc/Unicode::LineBreak&quot;&gt;Unicode :: LineBreak&lt;/a&gt; , &lt;a href=&quot;unicode/collate&quot;&gt;Unicode :: Collate&lt;/a&gt; , &lt;a href=&quot;unicode/collate/locale&quot;&gt;Unicode :: Collate :: Locale&lt;/a&gt; ,&lt;a href=&quot;http://search.cpan.org/perldoc/Unicode::Unihan&quot;&gt;유니 코드 :: Unihan&lt;/a&gt; , &lt;a href=&quot;http://search.cpan.org/perldoc/Unicode::CaseFold&quot;&gt;유니 코드 :: CaseFold&lt;/a&gt; , &lt;a href=&quot;http://search.cpan.org/perldoc/Unicode::Tussle&quot;&gt;유니 코드 :: Tussle&lt;/a&gt; , &lt;a href=&quot;http://search.cpan.org/perldoc/Lingua::JA::Romanize::Japanese&quot;&gt;Lingua :: JA :: Romanize :: Japanese&lt;/a&gt; , &lt;a href=&quot;http://search.cpan.org/perldoc/Lingua::ZH::Romanize::Pinyin&quot;&gt;Lingua :: ZH :: Romanize :: Pinyin&lt;/a&gt; , &lt;a href=&quot;http://search.cpan.org/perldoc/Lingua::KO::Romanize::Hangul&quot;&gt;Lingua :: KO :: Romanize :: Hangul&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="30650f0df9a1acd0b0652292e24337b060a25b76" translate="yes" xml:space="preserve">
          <source>See your</source>
          <target state="translated">당신의 참조</target>
        </trans-unit>
        <trans-unit id="e46d7c35a12113e9e7669e54efe39266a3357c57" translate="yes" xml:space="preserve">
          <source>See your native chmod(2) and stat(2) documentation for more details about the &lt;code&gt;S_*&lt;/code&gt; constants. To get status info for a symbolic link instead of the target file behind the link, use the &lt;code&gt;&lt;a href=&quot;functions/lstat&quot;&gt;lstat&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;S_*&lt;/code&gt; 상수 에 대한 자세한 내용은 기본 chmod (2) 및 stat (2) 설명서를 참조하십시오 . 링크 뒤의 대상 파일 대신 기호 링크에 대한 상태 정보를 얻으려면 &lt;code&gt;&lt;a href=&quot;functions/lstat&quot;&gt;lstat&lt;/a&gt;&lt;/code&gt; 함수를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="9970744d5ba8330d81e88cb8dc9f142d55054d8d" translate="yes" xml:space="preserve">
          <source>See your native chmod(2) and stat(2) documentation for more details about the &lt;code&gt;S_*&lt;/code&gt; constants. To get status info for a symbolic link instead of the target file behind the link, use the &lt;code&gt;&lt;a href=&quot;lstat&quot;&gt;lstat&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;S_*&lt;/code&gt; 상수 에 대한 자세한 내용은 기본 chmod (2) 및 stat (2) 설명서를 참조하십시오 . 링크 뒤의 대상 파일 대신 기호 링크에 대한 상태 정보를 얻으려면 &lt;code&gt;&lt;a href=&quot;lstat&quot;&gt;lstat&lt;/a&gt;&lt;/code&gt; 함수를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="3be2ec8135463b21af282b57ee1ce24fe06e37d5" translate="yes" xml:space="preserve">
          <source>See, the whole entry is gone!</source>
          <target state="translated">항목 전체가 사라졌습니다!</target>
        </trans-unit>
        <trans-unit id="1555af10085ff0ea32cf7ff9252f6ff3cf4d9e99" translate="yes" xml:space="preserve">
          <source>Seek the IO::File to position POS, relative to WHENCE:</source>
          <target state="translated">WHENCE를 기준으로 POS를 배치하려면 IO :: File을 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="1d086939b65b06d9d3a44991f14621044cf912f1" translate="yes" xml:space="preserve">
          <source>Seek to a given position in the stream. Not yet supported.</source>
          <target state="translated">스트림에서 지정된 위치를 찾으십시오. 아직 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1dea335f8b8af18f43df2ccadf7446de12d02c86" translate="yes" xml:space="preserve">
          <source>Seeks to the beginning of the file.</source>
          <target state="translated">파일의 시작 부분을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="62c1916dc6ff314613f1d9b5bd5205d1a7f41ea9" translate="yes" xml:space="preserve">
          <source>Segfault in make</source>
          <target state="translated">Segfault 제작</target>
        </trans-unit>
        <trans-unit id="04fce5d13d8be20647c8f188f4020b39414daee7" translate="yes" xml:space="preserve">
          <source>Select a name for the module.</source>
          <target state="translated">모듈 이름을 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="b1457cb228bb4f3a070abfd3120fa19370b966d8" translate="yes" xml:space="preserve">
          <source>Select the UDP socket mechanism:</source>
          <target state="translated">UDP 소켓 메커니즘을 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="265fd1b21508be2f8973560ec771ad89f03bc658" translate="yes" xml:space="preserve">
          <source>Select the riscos hint file. The default answers for the rest of the questions are usually sufficient.</source>
          <target state="translated">riscos 힌트 파일을 선택하십시오. 나머지 질문에 대한 기본 답변으로 충분합니다.</target>
        </trans-unit>
        <trans-unit id="c1fac0c731922ce2c4368448cad241941c2fbd27" translate="yes" xml:space="preserve">
          <source>Select what to export.</source>
          <target state="translated">내보낼 것을 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="81bbdb3cd17072c5ce722e1560232e797f8c121a" translate="yes" xml:space="preserve">
          <source>SelectSaver</source>
          <target state="translated">SelectSaver</target>
        </trans-unit>
        <trans-unit id="229070ca5374c2a9cb038771a48f86c718c9d853" translate="yes" xml:space="preserve">
          <source>SelectSaver - save and restore selected file handle</source>
          <target state="translated">SelectSaver-선택한 파일 핸들 저장 및 복원</target>
        </trans-unit>
        <trans-unit id="5c943420278d1c8954b1c5773786bea97f613852" translate="yes" xml:space="preserve">
          <source>Selecting What to Export</source>
          <target state="translated">내보낼 항목 선택</target>
        </trans-unit>
        <trans-unit id="b17c7a1c4a92c96c8491e85a0462c238e3896397" translate="yes" xml:space="preserve">
          <source>Selective install</source>
          <target state="translated">선택적 설치</target>
        </trans-unit>
        <trans-unit id="84aa6bd605893b309ed096501a015b4639a428b5" translate="yes" xml:space="preserve">
          <source>Selects which scheme is to be used for conversion. Available schemes are as follows:</source>
          <target state="translated">변환에 사용할 체계를 선택하십시오. 사용 가능한 구성표는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="add69b113685f74f15320b557f83862e13c1544e" translate="yes" xml:space="preserve">
          <source>Self explanatory.</source>
          <target state="translated">자기 설명.</target>
        </trans-unit>
        <trans-unit id="54e1d154f8f2875647f17eba14956a859053e7ab" translate="yes" xml:space="preserve">
          <source>SelfLoader</source>
          <target state="translated">SelfLoader</target>
        </trans-unit>
        <trans-unit id="d8cab5e5bb875b977b911e8babfcf26bd70b64fd" translate="yes" xml:space="preserve">
          <source>SelfLoader - load functions only on demand</source>
          <target state="translated">SelfLoader-요청시에만로드 기능</target>
        </trans-unit>
        <trans-unit id="e773e20132ac6e7474cba68c63018cfb17743647" translate="yes" xml:space="preserve">
          <source>SelfLoader and AutoLoader</source>
          <target state="translated">셀프 로더 및 오토로더</target>
        </trans-unit>
        <trans-unit id="f310694fd37172c1158ec0f92581c2541456029e" translate="yes" xml:space="preserve">
          <source>SelfLoader autoloading</source>
          <target state="translated">셀프 로더 자동 로딩</target>
        </trans-unit>
        <trans-unit id="f3e306caeca3c8bc4157585e84e5dc7d26a4f2b5" translate="yes" xml:space="preserve">
          <source>Semaphores are a kind of generic locking mechanism. In their most basic form, they behave very much like lockable scalars, except that they can't hold data, and that they must be explicitly unlocked. In their advanced form, they act like a kind of counter, and can allow multiple threads to have the</source>
          <target state="translated">세마포어는 일종의 일반적인 잠금 메커니즘입니다. 가장 기본적인 형태로 데이터를 보유 할 수없고 명시 적으로 잠금을 해제해야한다는 점을 제외하면 잠금 가능한 스칼라와 매우 유사하게 작동합니다. 고급 형식에서는 일종의 카운터처럼 작동하며 여러 스레드가</target>
        </trans-unit>
        <trans-unit id="8699ad0a8f54bbc917e3bb45de5d78b0cf17084b" translate="yes" xml:space="preserve">
          <source>Semaphores created by &lt;a href=&quot;semaphore&quot;&gt;Thread::Semaphore&lt;/a&gt; can be used in both threaded and non-threaded applications. This allows you to write modules and packages that potentially make use of semaphores, and that will function in either environment.</source>
          <target state="translated">&lt;a href=&quot;semaphore&quot;&gt;Thread ::&lt;/a&gt; Semaphore로 작성된 세마포어 는 스레드 및 비스 레드 응용 프로그램 모두에서 사용할 수 있습니다. 이를 통해 잠재적으로 세마포어를 사용하고 어느 환경에서나 작동하는 모듈과 패키지를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3c22a014e16e0edc6a027ed2ae5d6eec415fc366" translate="yes" xml:space="preserve">
          <source>Semaphores don't limit their values to zero and one, so they can be used to control access to some resource that there may be more than one of (e.g., filehandles). Increment and decrement amounts aren't fixed at one either, so threads can reserve or return multiple resources at once.</source>
          <target state="translated">세마포어는 값을 0과 1로 제한하지 않으므로 둘 이상의 파일 핸들 (예 : 파일 핸들)이있는 일부 리소스에 대한 액세스를 제어하는 ​​데 사용할 수 있습니다. 증가 및 감소 양이 하나에 고정되지 않으므로 스레드가 한 번에 여러 리소스를 예약하거나 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d20dc8c89f291c0d4e65def7764a4fc1152824c3" translate="yes" xml:space="preserve">
          <source>Semaphores have two methods, &lt;code&gt;down()&lt;/code&gt; and &lt;code&gt;up()&lt;/code&gt; : &lt;code&gt;down()&lt;/code&gt; decrements the resource count, while &lt;code&gt;up()&lt;/code&gt; increments it. Calls to &lt;code&gt;down()&lt;/code&gt; will block if the semaphore's current count would decrement below zero. This program gives a quick demonstration:</source>
          <target state="translated">세마포어에는 &lt;code&gt;down()&lt;/code&gt; 및 &lt;code&gt;up()&lt;/code&gt; 두 가지 메소드가 있습니다 . &lt;code&gt;down()&lt;/code&gt; 은 자원 수를 감소시키고 &lt;code&gt;up()&lt;/code&gt; 증가시킵니다. 세마포어의 현재 카운트가 0 미만으로 감소하면 &lt;code&gt;down()&lt;/code&gt; 호출 이 차단됩니다. 이 프로그램은 빠른 데모를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="796b9a2e2e39d11dbfa1741282a431155e4bbeba" translate="yes" xml:space="preserve">
          <source>Semaphores provide a mechanism to regulate access to resources. Unlike locks, semaphores aren't tied to particular scalars, and so may be used to control access to anything you care to use them for.</source>
          <target state="translated">세마포어는 리소스에 대한 액세스를 조절하는 메커니즘을 제공합니다. 잠금과 달리 세마포어는 특정 스칼라에 묶여 있지 않으므로 사용하려는 관심 항목에 대한 액세스를 제어하는 ​​데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="356e03859529b6fe855b8990f468b4b738134047" translate="yes" xml:space="preserve">
          <source>Semaphores with counters greater than one are also useful for establishing quotas. Say, for example, that you have a number of threads that can do I/O at once. You don't want all the threads reading or writing at once though, since that can potentially swamp your I/O channels, or deplete your process's quota of filehandles. You can use a semaphore initialized to the number of concurrent I/O requests (or open files) that you want at any one time, and have your threads quietly block and unblock themselves.</source>
          <target state="translated">카운터가 1보다 큰 세마포어도 할당량을 설정하는 데 유용합니다. 예를 들어, 한 번에 I / O를 수행 할 수있는 여러 스레드가 있다고 가정하십시오. 모든 스레드가 한 번에 읽거나 쓰지 않기를 원할 것입니다. 잠재적으로 I / O 채널을 늪으로 만들거나 프로세스의 파일 핸들 할당량을 고갈시킬 수 있기 때문입니다. 한 번에 원하는 수의 동시 I / O 요청 (또는 열린 파일)으로 초기화 된 세마포어를 사용하고 스레드가 자동으로 자체 차단 및 차단 해제되도록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d787d045573b4c994cdbd4823b535d6dabe2c620" translate="yes" xml:space="preserve">
          <source>Semaphores: Synchronizing Data Access</source>
          <target state="translated">세마포어 : 데이터 액세스 동기화</target>
        </trans-unit>
        <trans-unit id="a05ee7033ccef1b142b6235829e01c52062ee7b7" translate="yes" xml:space="preserve">
          <source>Semi-list for executables.</source>
          <target state="translated">실행 파일에 대한 세미리스트</target>
        </trans-unit>
        <trans-unit id="630d774f800ee1cd20d1064679a19e8edab879c3" translate="yes" xml:space="preserve">
          <source>Semicolon omitted in &quot;short&quot; one-line BLOCK.</source>
          <target state="translated">&quot;짧은&quot;단선 BLOCK에서는 세미콜론이 생략되었습니다.</target>
        </trans-unit>
        <trans-unit id="ce25bcbf0fddbfafcbbf78d8ff1922c5ddee8929" translate="yes" xml:space="preserve">
          <source>Semicolons are required after all simple statements in Perl (except at the end of a block). Newline is not a statement delimiter.</source>
          <target state="translated">세미콜론은 Perl의 모든 간단한 문장 다음에 필요합니다 (블록 끝 제외). 줄 바꿈은 문장 구분 기호가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="da89265fe8629af6dc7f2d520015f68ac5895b1b" translate="yes" xml:space="preserve">
          <source>Send a &lt;code&gt;PORT&lt;/code&gt; (IPv4) or &lt;code&gt;EPRT&lt;/code&gt; (IPv6) command to the server. If &lt;code&gt;PORT&lt;/code&gt; is specified then it is sent to the server. If not, then a listen socket is created and the correct information sent to the server.</source>
          <target state="translated">송신 &lt;code&gt;PORT&lt;/code&gt; (IPv4)를 또는 &lt;code&gt;EPRT&lt;/code&gt; 서버 (IPv6를) 명령을 사용합니다. 경우 &lt;code&gt;PORT&lt;/code&gt; 는 다음 지정 그것은 서버로 전송됩니다. 그렇지 않으면 청취 소켓이 작성되고 올바른 정보가 서버로 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="52080e6741be66508f4cfdc06a392762420be982" translate="yes" xml:space="preserve">
          <source>Send a SITE command to the remote server and wait for a response.</source>
          <target state="translated">SITE 명령을 원격 서버로 보내고 응답을 기다리십시오.</target>
        </trans-unit>
        <trans-unit id="bbe6336423849caa2042b02152be321aae6b5054" translate="yes" xml:space="preserve">
          <source>Send a command to the command server. All arguments are first joined with a space character and CRLF is appended, this string is then sent to the command server.</source>
          <target state="translated">명령 서버로 명령을 보냅니다. 모든 인수는 먼저 공백 문자로 결합되고 CRLF가 추가되고이 문자열은 명령 서버로 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="13c260a730e1509d61e6de1590f9e61836ad529f" translate="yes" xml:space="preserve">
          <source>Send a command, that Net::FTP does not directly support, to the remote server and wait for a response.</source>
          <target state="translated">Net :: FTP가 직접 지원하지 않는 명령을 원격 서버에 보내고 응답을 기다립니다.</target>
        </trans-unit>
        <trans-unit id="06c1dceebd9dfcae281255787fb6713160305097" translate="yes" xml:space="preserve">
          <source>Send a request to the server to delete &lt;code&gt;FILENAME&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;FILENAME&lt;/code&gt; 삭제 요청을 서버에 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="f6d5a327a2f39dffcf23330396f1cf4deb1c5ff5" translate="yes" xml:space="preserve">
          <source>Send a thank-you note instead of a bug report.</source>
          <target state="translated">버그 리포트 대신 고맙습니다.</target>
        </trans-unit>
        <trans-unit id="1bf932ad3989c17c94151811580a197344612caa" translate="yes" xml:space="preserve">
          <source>Send an &lt;code&gt;NLST&lt;/code&gt; command to the server, with an optional parameter.</source>
          <target state="translated">선택적 매개 변수를 사용하여 &lt;code&gt;NLST&lt;/code&gt; 명령을 서버로 전송하십시오 .</target>
        </trans-unit>
        <trans-unit id="6b3bf632e8ef2f9feae566ac2e7c3497f279404b" translate="yes" xml:space="preserve">
          <source>Send both the USER and PASS commands. If &lt;code&gt;PASS&lt;/code&gt; is not given the &lt;code&gt;Net::POP3&lt;/code&gt; uses &lt;code&gt;Net::Netrc&lt;/code&gt; to lookup the password using the host and username. If the username is not specified then the current user name will be used.</source>
          <target state="translated">USER 및 PASS 명령을 모두 보내십시오. 경우 &lt;code&gt;PASS&lt;/code&gt; 가 주어진되지 &lt;code&gt;Net::POP3&lt;/code&gt; 사용하여 &lt;code&gt;Net::Netrc&lt;/code&gt; 호스트와 사용자 이름을 사용하여 암호를 조회 할 수 있습니다. 사용자 이름을 지정하지 않으면 현재 사용자 이름이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="0fb10510d35b8d68dbce68dcecc3a46a06267b1b" translate="yes" xml:space="preserve">
          <source>Send bug reports via &lt;a href=&quot;http://rt.cpan.org/&quot;&gt;http://rt.cpan.org/&lt;/a&gt;. Please send your generated Makefile along with your report.</source>
          <target state="translated">&lt;a href=&quot;http://rt.cpan.org/&quot;&gt;http://rt.cpan.org/&lt;/a&gt; 를 통해 버그 보고서를 보내십시오 . 생성 된 Makefile을 보고서와 함께 보내십시오.</target>
        </trans-unit>
        <trans-unit id="7ac564802d486774a9892c6aff1b1c0a2f8cafee" translate="yes" xml:space="preserve">
          <source>Send data to the remote server without performing any conversions. &lt;code&gt;DATA&lt;/code&gt; is a scalar.</source>
          <target state="translated">변환을 수행하지 않고 원격 서버로 데이터를 보냅니다. &lt;code&gt;DATA&lt;/code&gt; 는 스칼라입니다.</target>
        </trans-unit>
        <trans-unit id="57e97cdb6dd06bb0868e8cb9640a99325aaa18ea" translate="yes" xml:space="preserve">
          <source>Send data to the remote server, converting LF to CRLF. Any line starting with a '.' will be prefixed with another '.'. &lt;code&gt;DATA&lt;/code&gt; may be an array or a reference to an array.</source>
          <target state="translated">LF를 CRLF로 변환하여 원격 서버로 데이터를 보냅니다. '.'로 시작하는 모든 줄 다른 '.'접두사가 붙습니다. &lt;code&gt;DATA&lt;/code&gt; 는 배열이거나 배열에 대한 참조 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cd25761fcb28fefeb75b3177743c9ba470230188" translate="yes" xml:space="preserve">
          <source>Send error messages about invalid POD to standard error instead of appending a POD ERRORS section to the generated *roff output. This is equivalent to setting &lt;code&gt;errors&lt;/code&gt; to &lt;code&gt;stderr&lt;/code&gt; if &lt;code&gt;errors&lt;/code&gt; is not already set. It is supported for backward compatibility.</source>
          <target state="translated">생성 된 * roff 출력에 POD ERRORS 섹션을 추가하는 대신 유효하지 않은 POD에 대한 오류 메시지를 표준 오류로 보내십시오. 이 설정에 해당 &lt;code&gt;errors&lt;/code&gt; 위해 &lt;code&gt;stderr&lt;/code&gt; 에 경우 &lt;code&gt;errors&lt;/code&gt; 이미 설정되어 있지 않습니다. 이전 버전과의 호환성을 위해 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="83176277760067307722b45efeb2403c4d726af3" translate="yes" xml:space="preserve">
          <source>Send error messages about invalid POD to standard error instead of appending a POD ERRORS section to the generated output. This is equivalent to setting &lt;code&gt;errors&lt;/code&gt; to &lt;code&gt;stderr&lt;/code&gt; if &lt;code&gt;errors&lt;/code&gt; is not already set. It is supported for backward compatibility.</source>
          <target state="translated">생성 된 출력에 POD ERRORS 섹션을 추가하는 대신 유효하지 않은 POD에 대한 오류 메시지를 표준 오류로 보내십시오. 이 설정에 해당 &lt;code&gt;errors&lt;/code&gt; 위해 &lt;code&gt;stderr&lt;/code&gt; 에 경우 &lt;code&gt;errors&lt;/code&gt; 이미 설정되어 있지 않습니다. 이전 버전과의 호환성을 위해 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="175242b5e5a3a51babac9f6fd0141ab1ff1d3b80" translate="yes" xml:space="preserve">
          <source>Send messages to a remote host using the TCP socket mechanism:</source>
          <target state="translated">TCP 소켓 메커니즘을 사용하여 원격 호스트로 메시지를 보냅니다.</target>
        </trans-unit>
        <trans-unit id="4b352aef54374a51117ddaee7478eb1aed5c0620" translate="yes" xml:space="preserve">
          <source>Send messages using the TCP socket mechanism on a custom port:</source>
          <target state="translated">사용자 정의 포트에서 TCP 소켓 메커니즘을 사용하여 메시지를 보내십시오.</target>
        </trans-unit>
        <trans-unit id="95879d49e234e123b226b1861b81ec39f64c5abc" translate="yes" xml:space="preserve">
          <source>Send patches and ideas to &lt;code&gt;makemaker@perl.org&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;makemaker@perl.org&lt;/code&gt; 에 패치와 아이디어를 보내십시오 .</target>
        </trans-unit>
        <trans-unit id="2c91135e737ed31a349e0756df108a779ae22af2" translate="yes" xml:space="preserve">
          <source>Send the PASS command. Returns the number of messages in the mailbox.</source>
          <target state="translated">PASS 명령을 보냅니다. 사서함의 메시지 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a5a5c4bc54dbfee7d7df6b13afe8690b267ed309" translate="yes" xml:space="preserve">
          <source>Send the QUIT command to the remote FTP server and close the socket connection.</source>
          <target state="translated">QUIT 명령을 원격 FTP 서버로 보내고 소켓 연결을 닫으십시오.</target>
        </trans-unit>
        <trans-unit id="6ec736fe911616cab9d412d30eff7201ebe79ae5" translate="yes" xml:space="preserve">
          <source>Send the QUIT command to the remote SMTP server and close the socket connection.</source>
          <target state="translated">QUIT 명령을 원격 SMTP 서버로 보내고 소켓 연결을 닫으십시오.</target>
        </trans-unit>
        <trans-unit id="8bd48cd01789052a1aae4608930df1802a9a35fb" translate="yes" xml:space="preserve">
          <source>Send the USER command.</source>
          <target state="translated">USER 명령을 보내십시오.</target>
        </trans-unit>
        <trans-unit id="a5a01f9b9fd642efa2608d22bc54a63404559f83" translate="yes" xml:space="preserve">
          <source>Send the appropriate command to the server MAIL, SEND, SOML or SAML. &lt;code&gt;ADDRESS&lt;/code&gt; is the address of the sender. This initiates the sending of a message. The method &lt;code&gt;recipient&lt;/code&gt; should be called for each address that the message is to be sent to.</source>
          <target state="translated">적절한 명령을 서버 MAIL, SEND, SOML 또는 SAML에 전송하십시오. &lt;code&gt;ADDRESS&lt;/code&gt; 는 발신자의 주소입니다. 메시지 전송이 시작됩니다. 메시지를 보낼 각 주소에 대해 메소드 &lt;code&gt;recipient&lt;/code&gt; 를 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="ab136dc2c0bcc386b29481c5eb4c91db18355fa1" translate="yes" xml:space="preserve">
          <source>Send without asking for confirmation.</source>
          <target state="translated">확인 요청없이 보내십시오.</target>
        </trans-unit>
        <trans-unit id="76680f33d63f4baf96426d9b02d94c58ab1ea9ad" translate="yes" xml:space="preserve">
          <source>Sending a signal to a negative process ID means that you send the signal to the entire Unix process group. This code sends a hang-up signal to all processes in the current process group, and also sets $SIG{HUP} to &lt;code&gt;&quot;IGNORE&quot;&lt;/code&gt; so it doesn't kill itself:</source>
          <target state="translated">부정 프로세스 ID로 신호를 보내는 것은 전체 Unix 프로세스 그룹으로 신호를 보내는 것을 의미합니다. 이 코드는 현재 프로세스 그룹의 모든 프로세스에 끊기 신호를 보내고 $ SIG {HUP}을 &lt;code&gt;&quot;IGNORE&quot;&lt;/code&gt; 로 설정 하여 자체 종료되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9a654ee6f8d01c324fc62fd6a540d937cf4a0a44" translate="yes" xml:space="preserve">
          <source>Sending a signal to a terminated/finished thread is ignored.</source>
          <target state="translated">종료 / 완료된 스레드로 신호를 보내는 것은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="1da6243eb6698a2e9c5ba8aed1445bba73f250b4" translate="yes" xml:space="preserve">
          <source>Sends a message on a socket. Attempts to send the scalar MSG to the SOCKET filehandle. Takes the same flags as the system call of the same name. On unconnected sockets, you must specify a destination to</source>
          <target state="translated">소켓에 메시지를 보냅니다. 스칼라 MSG를 SOCKET 파일 핸들로 보내려고합니다. 같은 이름의 시스템 호출과 같은 플래그를 사용합니다. 연결되지 않은 소켓에서 대상을 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="771e146572af3680e3f5745ae30f4777037832e1" translate="yes" xml:space="preserve">
          <source>Sends a signal to a list of processes. Returns the number of arguments that were successfully used to signal (which is not necessarily the same as the number of processes actually killed, e.g. where a process group is killed).</source>
          <target state="translated">프로세스 목록으로 신호를 보냅니다. 신호 처리에 성공적으로 사용 된 인수 수를 반환합니다 (실제로 종료 된 프로세스 수 (예 : 프로세스 그룹이 종료 된 위치)와 동일 할 필요는 없음).</target>
        </trans-unit>
        <trans-unit id="e0bff1132f5af9057b37aaabd1421549847a04df" translate="yes" xml:space="preserve">
          <source>Sends the specified signal to the current process. See also &lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt; and the &lt;code&gt;$$&lt;/code&gt; in &lt;a href=&quot;perlvar#%24PID&quot;&gt;$PID in perlvar&lt;/a&gt;.</source>
          <target state="translated">지정된 신호를 현재 프로세스로 보냅니다. 또한 참조 &lt;a href=&quot;functions/kill&quot;&gt;죽일&lt;/a&gt; 와 &lt;code&gt;$$&lt;/code&gt; 에서 &lt;a href=&quot;perlvar#%24PID&quot;&gt;perlvar에서 $ PID&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="15f74f69cd66e334277cea94fbbb2c2fdda68097" translate="yes" xml:space="preserve">
          <source>Sends the specified signal to the thread. Signal names and (positive) signal numbers are the same as those supported by &lt;a href=&quot;functions/kill&quot;&gt;kill SIGNAL, LIST&lt;/a&gt;. For example, 'SIGTERM', 'TERM' and (depending on the OS) 15 are all valid arguments to &lt;code&gt;-&amp;gt;kill()&lt;/code&gt; .</source>
          <target state="translated">지정된 신호를 스레드로 보냅니다. 신호 이름 및 (양의) 신호 번호는 &lt;a href=&quot;functions/kill&quot;&gt;kill SIGNAL, LIST에서&lt;/a&gt; 지원되는 것과 동일 합니다. 예를 들어, 'SIGTERM', 'TERM'및 (OS에 따라 다름) 15는 모두 &lt;code&gt;-&amp;gt;kill()&lt;/code&gt; 유효한 인수 입니다.</target>
        </trans-unit>
        <trans-unit id="a449a6b7439f2abf27299f47fccad5c63b9cd342" translate="yes" xml:space="preserve">
          <source>Separate functionality from output</source>
          <target state="translated">기능과 출력 분리</target>
        </trans-unit>
        <trans-unit id="d02cc80e6bf2d5cc54bd43f2d3b385d1316c539b" translate="yes" xml:space="preserve">
          <source>Separated from BigInt and shaped API with the help of John Peacock.</source>
          <target state="translated">John Peacock의 도움으로 BigInt와 모양이 다른 API와 분리되었습니다.</target>
        </trans-unit>
        <trans-unit id="88aee4aceed86d713a450288b36a045eaad93f77" translate="yes" xml:space="preserve">
          <source>Separating the loading of Filter::Simple:</source>
          <target state="translated">Filter :: Simple의 로딩 분리 :</target>
        </trans-unit>
        <trans-unit id="96c4b99bf2dac21233a650fb9e4225f35f064f66" translate="yes" xml:space="preserve">
          <source>Separators accepted are \ and /.</source>
          <target state="translated">허용되는 구분 기호는 \ 및 /입니다.</target>
        </trans-unit>
        <trans-unit id="853cedcb493818fb7dd7ff54631eefab9d7c736c" translate="yes" xml:space="preserve">
          <source>September 8th, 1994; by Tim Bunce.</source>
          <target state="translated">1994 년 9 월 8 일; 팀 번스</target>
        </trans-unit>
        <trans-unit id="f9dd9bb04503c5d3dd3e8ab5f681af6d1c56048b" translate="yes" xml:space="preserve">
          <source>September, 1999; by Barrie Slaymaker: math fixes and accuracy and efficiency tweaks. Added cmpthese(). A result is now returned from timethese(). Exposed countit() (was runfor()).</source>
          <target state="translated">1999 년 9 월; 배리 슬레이 메이커 (Barrie Slaymaker) : 수학 수정과 정확성 및 효율성 조정. cmpthese ()를 추가했습니다. timethese ()에서 결과가 반환됩니다. countit () 노출 (runfor ())</target>
        </trans-unit>
        <trans-unit id="a1a0fbeb2a4b06770650abeca286ce50260e6d9c" translate="yes" xml:space="preserve">
          <source>September, 2002; by Jarkko Hietaniemi: add ':hireswallclock' special tag.</source>
          <target state="translated">2002 년 9 월; Jarkko Hietaniemi : ': hireswallclock'특수 태그를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="88ae5be2d6d888bb16dff39911d6e3067f36196d" translate="yes" xml:space="preserve">
          <source>Sequence numbers representing the scope within which a lexical is visible. Meaningless if PADNAMEt_OUTER is set.</source>
          <target state="translated">어휘가 표시되는 범위를 나타내는 시퀀스 번호. PADNAMEt_OUTER가 설정되면 의미가 없습니다.</target>
        </trans-unit>
        <trans-unit id="544f380bfe8a0f67f6564420a0e87cb049e06041" translate="yes" xml:space="preserve">
          <source>Serialization of CODE references and deserialization in a safe compartment:</source>
          <target state="translated">안전한 구획에서 코드 참조의 직렬화 및 역 직렬화 :</target>
        </trans-unit>
        <trans-unit id="8a2b4a973c93275f52c99996b779e6d6d379919c" translate="yes" xml:space="preserve">
          <source>Seriously, you can't if they are Unix password files--the Unix password system employs one-way encryption. It's more like hashing than encryption. The best you can do is check whether something else hashes to the same string. You can't turn a hash back into the original string. Programs like Crack can forcibly (and intelligently) try to guess passwords, but don't (can't) guarantee quick success.</source>
          <target state="translated">그들이 유닉스 암호 파일이라면 유닉스 암호 시스템은 단방향 암호화를 사용합니다. 암호화보다 해싱과 비슷합니다. 가장 좋은 방법은 다른 문자열이 같은 문자열에 해시되는지 확인하는 것입니다. 해시는 원래 문자열로 되돌릴 수 없습니다. Crack과 같은 프로그램은 암호를 강제로 (지능적으로) 추측 할 수 있지만 빠른 성공을 보장 할 수는 없습니다.</target>
        </trans-unit>
        <trans-unit id="4f13fa1c7820625cf04d4c7f1c83dd6398d904f3" translate="yes" xml:space="preserve">
          <source>Server and Daemon Utilities</source>
          <target state="translated">서버 및 데몬 유틸리티</target>
        </trans-unit>
        <trans-unit id="ab921e03df699faf948bd826b1cb601ef928435c" translate="yes" xml:space="preserve">
          <source>Set $x to the next bigger integer value (e.g. truncate the number to integer and then increment it by one).</source>
          <target state="translated">$ x를 다음으로 큰 정수 값으로 설정하십시오 (예 : 숫자를 정수로 자른 다음 1 씩 증가).</target>
        </trans-unit>
        <trans-unit id="fb5e64e9563743dd7dba5cbafd5756a884f0ce62" translate="yes" xml:space="preserve">
          <source>Set $x to the remainder of the division of $x by $y.</source>
          <target state="translated">$ x를 $ x를 $ y로 나눈 나머지 부분으로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="f0f87e0ec5d1b57769b831155b30feea6695fe68" translate="yes" xml:space="preserve">
          <source>Set (if argument specified) and retrieve the canonical name of POD as found in the &lt;code&gt;=head1 NAME&lt;/code&gt; section.</source>
          <target state="translated">&lt;code&gt;=head1 NAME&lt;/code&gt; 섹션 에서 찾은대로 (인수가 지정된 경우) POD의 표준 이름을 설정하고 검색 하십시오.</target>
        </trans-unit>
        <trans-unit id="6f913eab1f09444d6746c0c8ee0da1d3118faf54" translate="yes" xml:space="preserve">
          <source>Set (if argument specified) and retrieve the number of errors found.</source>
          <target state="translated">(인수가 지정된 경우) 설정하고 발견 된 오류 수를 검색하십시오.</target>
        </trans-unit>
        <trans-unit id="555abf19864aa59ef436a0bb073b4b9696ad43e3" translate="yes" xml:space="preserve">
          <source>Set (if argument specified) and retrieve the number of warnings found.</source>
          <target state="translated">(인수가 지정된 경우) 설정하고 발견 된 경고 수를 검색하십시오.</target>
        </trans-unit>
        <trans-unit id="c8c804eb9b30a04c998d826d31522b856640bf5a" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;PERL_SH_DIR&lt;/code&gt; (see &lt;a href=&quot;#PERL_SH_DIR&quot;&gt;PERL_SH_DIR&lt;/a&gt;) if you move</source>
          <target state="translated">이동할 경우 &lt;a href=&quot;#PERL_SH_DIR&quot;&gt;PERL_SH_DIR&lt;/a&gt; 설정 ( &lt;code&gt;PERL_SH_DIR&lt;/code&gt; 참조 )</target>
        </trans-unit>
        <trans-unit id="d82cba9bbef0466d60c9badd40cd24deeb77bc34" translate="yes" xml:space="preserve">
          <source>Set a breakpoint at first line of subroutine after it is compiled.</source>
          <target state="translated">서브 루틴이 컴파일 된 후 서브 루틴의 첫 번째 행에 중단 점을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="8000c21d5f6a0e70714e65dc08afbb6d1aa48fad" translate="yes" xml:space="preserve">
          <source>Set a breakpoint before the first executed line of the</source>
          <target state="translated">첫 번째 실행 라인 앞에 중단 점을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="cea53470d6bac6053a0de5a61d3cc4e2c70616d9" translate="yes" xml:space="preserve">
          <source>Set a breakpoint before the first line of the named subroutine.</source>
          <target state="translated">명명 된 서브 루틴의 첫 번째 줄 앞에 중단 점을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="5638a132c6c8ee5427997acfb725cf55f691b9cf" translate="yes" xml:space="preserve">
          <source>Set a breakpoint before the given line in a (possibly different) file. If a condition is specified, it's evaluated each time the statement is reached: a breakpoint is taken only if the condition is true. Breakpoints may only be set on lines that begin an executable statement. Conditions don't use &lt;code&gt;if&lt;/code&gt; :</source>
          <target state="translated">(아마도 다른) 파일에서 주어진 줄 앞에 중단 점을 설정하십시오. 조건이 지정되면 명령문에 도달 할 때마다 조건이 평가됩니다. 조건이 true 인 경우에만 중단 점이 사용됩니다. 중단 점은 실행 문을 시작하는 행에만 설정할 수 있습니다. 조건은 사용하지 않는 &lt;code&gt;if&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="fe3cd72abb20a5167109bc8fe1d44e573a5fe7d3" translate="yes" xml:space="preserve">
          <source>Set a breakpoint before the given line. If a condition is specified, it's evaluated each time the statement is reached: a breakpoint is taken only if the condition is true. Breakpoints may only be set on lines that begin an executable statement. Conditions don't use &lt;code&gt;if&lt;/code&gt; :</source>
          <target state="translated">주어진 줄 앞에 중단 점을 설정하십시오. 조건이 지정되면 명령문에 도달 할 때마다 조건이 평가됩니다. 조건이 true 인 경우에만 중단 점이 사용됩니다. 중단 점은 실행 문을 시작하는 행에만 설정할 수 있습니다. 조건은 사용하지 않는 &lt;code&gt;if&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ff0e698d1dcc0f8a798426c3c9fbf8e2d66e67f7" translate="yes" xml:space="preserve">
          <source>Set a default title for the page if no title can be determined from the content. The value of this string should already be &amp;amp;-escaped.</source>
          <target state="translated">내용에서 제목을 확인할 수없는 경우 페이지의 기본 제목을 설정하십시오. 이 문자열의 값은 이미 &amp;amp; 이스케이프되어야합니다.</target>
        </trans-unit>
        <trans-unit id="f2616e97365cb7f6b0e4603f26d96fcf376c23f0" translate="yes" xml:space="preserve">
          <source>Set a member of the XOP structure.</source>
          <target state="translated">XOP 구조의 멤버를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="dc9f75b0aa359534af415de26967ce708c0fc394" translate="yes" xml:space="preserve">
          <source>Set a string identifying the user's account.</source>
          <target state="translated">사용자 계정을 식별하는 문자열을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="fe86334e2d278dfbdcc3fb8bdb35ba9ec2e9c5fc" translate="yes" xml:space="preserve">
          <source>Set a value in the &lt;code&gt;c_cc&lt;/code&gt; field of a &lt;code&gt;termios&lt;/code&gt; object. The &lt;code&gt;c_cc&lt;/code&gt; field is an array so an index must be specified.</source>
          <target state="translated">&lt;code&gt;termios&lt;/code&gt; 객체 의 &lt;code&gt;c_cc&lt;/code&gt; 필드에 값을 설정하십시오 . &lt;code&gt;c_cc&lt;/code&gt; 의 인덱스를 지정해야합니다, 그래서 필드는 배열입니다.</target>
        </trans-unit>
        <trans-unit id="d5be582c93072a29a50a70d51245fdd965d5a20c" translate="yes" xml:space="preserve">
          <source>Set an action (Perl command) to happen after the prompt when you've just given a command to return to executing the script. A multi-line command may be entered by backslashing the newlines (we bet you couldn't have guessed this by now).</source>
          <target state="translated">스크립트 실행으로 돌아가라는 명령을 방금 주었을 때 프롬프트 후에 수행 할 조치 (Perl 명령)를 설정하십시오. 줄 바꾸기를 백 슬래시하여 여러 줄 명령을 입력 할 수 있습니다 (지금까지는 추측 할 수 없었습니다).</target>
        </trans-unit>
        <trans-unit id="0fc012651b8b4c32b0fb08830c02802ae741b971" translate="yes" xml:space="preserve">
          <source>Set an action (Perl command) to happen before every debugger prompt. A multi-line command may be entered by backslashing the newlines.</source>
          <target state="translated">모든 디버거 프롬프트 전에 동작 (Perl 명령)이 발생하도록 설정하십시오. 개행을 백 슬래시하여 여러 줄 명령을 입력 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eadb053e8ef1742f83d58cfc846967936fb3e20e" translate="yes" xml:space="preserve">
          <source>Set an action (debugger command) to happen before every debugger prompt. A multi-line command may be entered in the customary fashion.</source>
          <target state="translated">모든 디버거 프롬프트 전에 수행 할 조치 (디버거 명령)를 설정하십시오. 여러 줄 명령이 일반적인 방식으로 입력 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ffa1676f766d51de518d327212cbb03953035c46" translate="yes" xml:space="preserve">
          <source>Set an action to be done before the line is executed. If</source>
          <target state="translated">행이 실행되기 전에 수행 할 조치를 설정하십시오. 만약</target>
        </trans-unit>
        <trans-unit id="8ff28a72a57699005a808bb50fea4029f88ce5a2" translate="yes" xml:space="preserve">
          <source>Set an entry in the BHK structure, and set the flags to indicate it is valid.</source>
          <target state="translated">BHK 구조에서 항목을 설정하고 유효 함을 나타내도록 플래그를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="1f7f888f25e207f269d2077b56bacc68bd53447f" translate="yes" xml:space="preserve">
          <source>Set and/or get the current group. If &lt;code&gt;GROUP&lt;/code&gt; is not given then information is returned on the current group.</source>
          <target state="translated">현재 그룹을 설정 및 / 또는 가져옵니다. 경우 &lt;code&gt;GROUP&lt;/code&gt; 다음 부여되지 않은 정보는 현재 그룹에 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="f8abe979d3cfc9431b63ee219fc5e8fd8f6d7c81" translate="yes" xml:space="preserve">
          <source>Set arguments that have not been provided to the default</source>
          <target state="translated">기본값으로 제공되지 않은 인수 설정</target>
        </trans-unit>
        <trans-unit id="258050c4ed0fa2eef9213ce0f50db3368b280502" translate="yes" xml:space="preserve">
          <source>Set attributes immediately for stdout.</source>
          <target state="translated">stdout에 대한 속성을 즉시 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="b1478e96d18bd7e3396a6676029248e5b136b9cf" translate="yes" xml:space="preserve">
          <source>Set current value of extended library search path. If &lt;code&gt;type&lt;/code&gt; is present and positive, works with &amp;lt;END_LIBPATH&amp;gt;, if negative, works with &lt;code&gt;LIBPATHSTRICT&lt;/code&gt; , otherwise with &lt;code&gt;BEGIN_LIBPATH&lt;/code&gt; .</source>
          <target state="translated">확장 라이브러리 검색 경로의 현재 값을 설정하십시오. 경우 &lt;code&gt;type&lt;/code&gt; 본 긍정적 인 &amp;lt;END_LIBPATH&amp;gt;에서 부정적인 경우, 작동 작동 &lt;code&gt;LIBPATHSTRICT&lt;/code&gt; 달리와 &lt;code&gt;BEGIN_LIBPATH&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ee9c6ef001c20cf084c8558f1d4444e36b18509a" translate="yes" xml:space="preserve">
          <source>Set default PerlIO layers for input and output</source>
          <target state="translated">입력 및 출력에 대한 기본 PerlIO 레이어 설정</target>
        </trans-unit>
        <trans-unit id="68053c6dea9587ed3e9809ad25350441927ee7ba" translate="yes" xml:space="preserve">
          <source>Set each listed Boolean option to the value &lt;code&gt;1&lt;/code&gt; .</source>
          <target state="translated">나열된 각 부울 옵션을 값 &lt;code&gt;1&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="34bbdb6a82240469f9ad8d2d9feb42cd1e0de42e" translate="yes" xml:space="preserve">
          <source>Set if the pattern contain eval-groups, such as &lt;code&gt;(?{ code })&lt;/code&gt; and &lt;code&gt;(??{ code })&lt;/code&gt; .</source>
          <target state="translated">패턴에 &lt;code&gt;(?{ code })&lt;/code&gt; 및 &lt;code&gt;(??{ code })&lt;/code&gt; 와 같은 평가 그룹이 포함되어 있으면 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="4442299e6a1006852000da4e91e1acbc38c80ee5" translate="yes" xml:space="preserve">
          <source>Set if the pattern contains &lt;code&gt;\G&lt;/code&gt; .</source>
          <target state="translated">패턴에 &lt;code&gt;\G&lt;/code&gt; 가 포함되어 있으면 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="94ab3854ad150bd5fe7143364537bedb55064afe" translate="yes" xml:space="preserve">
          <source>Set if the pattern starts with &lt;code&gt;.*&lt;/code&gt;.</source>
          <target state="translated">패턴이 &lt;code&gt;.*&lt;/code&gt; 로 시작하는지 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="6c9248d9fa918c2b6a94ddbb8ca8fd246b8cd2bb" translate="yes" xml:space="preserve">
          <source>Set if the pattern starts with a repeated char (as in &lt;code&gt;x+y&lt;/code&gt;).</source>
          <target state="translated">패턴이 반복되는 문자로 시작하는지 설정하십시오 ( &lt;code&gt;x+y&lt;/code&gt; 에서와 같이 ).</target>
        </trans-unit>
        <trans-unit id="29d790ebdfd1bdd7a590e9a372101f1d05e0ec63" translate="yes" xml:space="preserve">
          <source>Set indexing base via $[</source>
          <target state="translated">$ [를 통해 인덱싱 기준 설정</target>
        </trans-unit>
        <trans-unit id="feb8723b424b50d3d7b7cf0abd922f64fdbc635a" translate="yes" xml:space="preserve">
          <source>Set it to some true value if you want to have an index (in reality a table of contents) to be added at the top of the generated HTML.</source>
          <target state="translated">생성 된 HTML의 맨 위에 색인 (실제 목차)을 추가하려면이 값을 실제 값으로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="2f4f3702d185e94f169ddb1f3074292ed4bb6358" translate="yes" xml:space="preserve">
          <source>Set only when MakeMaker is building the extensions of the Perl core distribution.</source>
          <target state="translated">MakeMaker가 Perl 코어 배포의 확장을 빌드 할 때만 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="0fe4658257dfb05b84f9d2ef686b5a25924965a2" translate="yes" xml:space="preserve">
          <source>Set option associated with the socket. Other levels than SOL_SOCKET may be specified here.</source>
          <target state="translated">소켓과 관련된 옵션을 설정하십시오. SOL_SOCKET 이외의 다른 레벨이 여기에 지정 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="92c4066c2c61e06e1e7118ec6fe43c7175fa5f23" translate="yes" xml:space="preserve">
          <source>Set or get if data connections will be initiated in passive mode.</source>
          <target state="translated">수동 모드에서 데이터 연결이 시작되는지 여부를 설정하거나 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="35a8ec7624c7f4f035d4a1cc226b27c2481a9ecc" translate="yes" xml:space="preserve">
          <source>Set or get if files will be transferred in ASCII or binary mode.</source>
          <target state="translated">파일을 ASCII 또는 바이너리 모드로 전송할지 여부를 설정하거나 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="dbbd4131f1d194712698d60b9476bf9f798c1e2f" translate="yes" xml:space="preserve">
          <source>Set or get the global or local accuracy, aka how many significant digits the results have. If you set a global accuracy, then this also applies to new()!</source>
          <target state="translated">결과의 유효 자릿수와 같은 전체 또는 로컬 정확도를 설정하거나 가져옵니다. 전역 정확도를 설정하면 new ()에도 적용됩니다!</target>
        </trans-unit>
        <trans-unit id="146f3942958232e0d21f7bac38c73f20923da62a" translate="yes" xml:space="preserve">
          <source>Set or get the timeout value (in seconds) associated with this socket. If called without any arguments then the current setting is returned. If called with an argument the current setting is changed and the previous value returned.</source>
          <target state="translated">이 소켓과 관련된 시간 초과 값 (초)을 설정하거나 가져옵니다. 인수없이 호출하면 현재 설정이 반환됩니다. 인수와 함께 호출하면 현재 설정이 변경되고 이전 값이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="f36a4dcb58387042602a6a6c89f7257c7b935b4d" translate="yes" xml:space="preserve">
          <source>Set pointer into buffer, and a count of bytes still in the buffer. Should be used only to set pointer to within range implied by previous calls to &lt;code&gt;PerlIO_get_ptr&lt;/code&gt; and &lt;code&gt;PerlIO_get_cnt&lt;/code&gt; . The two values</source>
          <target state="translated">포인터를 버퍼로 설정하고 버퍼에 여전히 바이트 수를 설정하십시오. &lt;code&gt;PerlIO_get_ptr&lt;/code&gt; 및 &lt;code&gt;PerlIO_get_cnt&lt;/code&gt; 에 대한 이전 호출이 암시하는 범위 내로 포인터를 설정하는 데만 사용해야합니다 . 두 가지 가치</target>
        </trans-unit>
        <trans-unit id="98c15be8ce82513edc5e20f2395cd31ae3ced533" translate="yes" xml:space="preserve">
          <source>Set terminal control attributes.</source>
          <target state="translated">터미널 제어 속성을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="ef1a5f874fc09882b0eaad885d1eb2cce0c7dc80" translate="yes" xml:space="preserve">
          <source>Set the &quot;current article pointer&quot; to the next article in the current newsgroup.</source>
          <target state="translated">&quot;현재 기사 포인터&quot;를 현재 뉴스 그룹의 다음 기사로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="fe9c6a4b2ad9119af782f9f176b76dfe491a13d8" translate="yes" xml:space="preserve">
          <source>Set the &quot;current article pointer&quot; to the previous article in the current newsgroup.</source>
          <target state="translated">&quot;현재 기사 포인터&quot;를 현재 뉴스 그룹의 이전 기사로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="129e44c75987d754522e8294400ec8bed47c8f13" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;N&lt;/code&gt; th value in the semaphore set to &lt;code&gt;VALUE&lt;/code&gt;</source>
          <target state="translated">세마포어 의 &lt;code&gt;N&lt;/code&gt; 번째 값을 &lt;code&gt;VALUE&lt;/code&gt; 로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="81b3ed905236c4848d2eb7b4d90c6ed8a3b1eb81" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;PATH&lt;/code&gt; environment variable so that Configure finds the Cygwin versions of programs. Any not-needed Windows directories should be removed or moved to the end of your &lt;code&gt;PATH&lt;/code&gt; .</source>
          <target state="translated">Configure가 Cygwin 버전의 프로그램을 찾도록 &lt;code&gt;PATH&lt;/code&gt; 환경 변수를 설정하십시오 . 불필요한 Windows 디렉토리는 제거하거나 &lt;code&gt;PATH&lt;/code&gt; 끝으로 이동해야합니다 .</target>
        </trans-unit>
        <trans-unit id="4a41a3429b4626ac1e2009837021aebb8ffeb644" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;c_cflag&lt;/code&gt; field of a &lt;code&gt;termios&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;termios&lt;/code&gt; 객체 의 &lt;code&gt;c_cflag&lt;/code&gt; 필드를 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="a71485df0cc15865bf7b8bbc260b24c2e05c6b7f" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;c_iflag&lt;/code&gt; field of a &lt;code&gt;termios&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;termios&lt;/code&gt; 객체 의 &lt;code&gt;c_iflag&lt;/code&gt; 필드를 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="1cc6d1351ad8ad398fce9a19c23db043fe922565" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;c_lflag&lt;/code&gt; field of a &lt;code&gt;termios&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;termios&lt;/code&gt; 객체 의 &lt;code&gt;c_lflag&lt;/code&gt; 필드를 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="94ed32b52e68bacc0adccd70e78108c281792310" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;c_oflag&lt;/code&gt; field of a &lt;code&gt;termios&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;termios&lt;/code&gt; 객체 의 &lt;code&gt;c_oflag&lt;/code&gt; 필드를 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="a978b282606d77f44b327d2e45a326d453456b0d" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;inhibit_exit&lt;/code&gt; option to 0 if you want to be able to step off the end the script. You may also need to set $finished to 0 if you want to step through global destruction.</source>
          <target state="translated">스크립트 종료를 단계적으로 해제 하려면 &lt;code&gt;inhibit_exit&lt;/code&gt; 옵션을 0으로 설정하십시오 . 전역 파괴를 진행하려면 $ finished를 0으로 설정해야 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="b7bcca13877bb147437c0598c8adc18a322e3186" translate="yes" xml:space="preserve">
          <source>Set the HTML output at the beginning and end of each file. The default header includes a title, a doctype tag (if &lt;code&gt;html_doctype&lt;/code&gt; is set), a content tag (customized by &lt;code&gt;html_header_tags&lt;/code&gt; ), a tag for a CSS file (if &lt;code&gt;html_css&lt;/code&gt; is set), and a tag for a Javascript file (if &lt;code&gt;html_javascript&lt;/code&gt; is set). The default footer simply closes the &lt;code&gt;html&lt;/code&gt; and &lt;code&gt;body&lt;/code&gt; tags.</source>
          <target state="translated">각 파일의 시작과 끝에 HTML 출력을 설정하십시오. 기본 헤더에는 제목, doctype 태그 ( &lt;code&gt;html_doctype&lt;/code&gt; 이 설정된 경우), 컨텐츠 태그 ( &lt;code&gt;html_header_tags&lt;/code&gt; 로 사용자 정의 됨 ), CSS 파일의 태그 ( &lt;code&gt;html_css&lt;/code&gt; 가 설정된 경우) 및 Javascript 파일의 태그 ( &lt;code&gt;html_javascript&lt;/code&gt; 가 세트). 기본 바닥 글은 단순히 &lt;code&gt;html&lt;/code&gt; 및 &lt;code&gt;body&lt;/code&gt; 태그 를 닫습니다 .</target>
        </trans-unit>
        <trans-unit id="98d4465bdeabff8b8498033ad82d521aff2d3640" translate="yes" xml:space="preserve">
          <source>Set the actual length of the string which is in the SV. See &lt;code&gt;SvIV_set&lt;/code&gt; .</source>
          <target state="translated">SV에있는 문자열의 실제 길이를 설정하십시오. &lt;code&gt;SvIV_set&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ab84d69f945e09c1eb7749df157a9890899786e6" translate="yes" xml:space="preserve">
          <source>Set the byte offset at which to begin the next data transfer. Net::FTP simply records this value and uses it when during the next data transfer. For this reason this method will not return an error, but setting it may cause a subsequent data transfer to fail.</source>
          <target state="translated">다음 데이터 전송을 시작할 바이트 오프셋을 설정하십시오. Net :: FTP는 단순히이 값을 기록하고 다음 데이터 전송시이를 사용합니다. 이러한 이유로이 메소드는 오류를 리턴하지 않지만이를 설정하면 후속 데이터 전송이 실패 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8cd0fd4cead65fd572452c84cd76a61272305db0" translate="yes" xml:space="preserve">
          <source>Set the centered footer. By default, this is the version of Perl you run &lt;b&gt;pod2man&lt;/b&gt; under. Note that some system an macro sets assume that the centered footer will be a modification date and will prepend something like &quot;Last modified: &quot;; if this is the case, you may want to set &lt;b&gt;--release&lt;/b&gt; to the last modified date and &lt;b&gt;--date&lt;/b&gt; to the version number.</source>
          <target state="translated">중앙 바닥 글을 설정하십시오. 기본적으로이 버전은 &lt;b&gt;pod2man&lt;/b&gt; 을 실행하는 Perl 버전입니다 . 매크로가 설정하는 일부 시스템은 중앙 바닥 글이 수정 날짜가되고 &quot;마지막으로 수정 한 날짜 :&quot;와 같은 접두어가 있다고 가정합니다. 이 경우 &lt;b&gt;--release&lt;/b&gt; 를 마지막 수정 날짜로 설정하고 &lt;b&gt;--date&lt;/b&gt; 를 버전 번호로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="321a1673ea9882b874d1a1aad6d11dc8a438079b" translate="yes" xml:space="preserve">
          <source>Set the centered footer. By default, this is the version of Perl you run Pod::Man under. Note that some system an macro sets assume that the centered footer will be a modification date and will prepend something like &quot;Last modified: &quot;; if this is the case, you may want to set &lt;code&gt;release&lt;/code&gt; to the last modified date and &lt;code&gt;date&lt;/code&gt; to the version number.</source>
          <target state="translated">중앙 바닥 글을 설정하십시오. 기본적으로이 버전은 Pod :: Man을 실행하는 Perl 버전입니다. 매크로가 설정하는 일부 시스템은 중앙 바닥 글이 수정 날짜가되고 &quot;마지막으로 수정 한 날짜 :&quot;와 같은 접두어가 있다고 가정합니다. 이 경우 &lt;code&gt;release&lt;/code&gt; 를 마지막으로 수정 한 날짜 및 &lt;code&gt;date&lt;/code&gt; 로 버전 번호 로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8214f55b990464e2e8c22afb79c6512b0ec251c3" translate="yes" xml:space="preserve">
          <source>Set the content type:</source>
          <target state="translated">컨텐츠 유형을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="960ca764a887ff7187a7bb8509e838d035f503ac" translate="yes" xml:space="preserve">
          <source>Set the content-type in the HTML head: (defaults to ISO-8859-1)</source>
          <target state="translated">HTML 헤드에서 컨텐츠 유형을 설정하십시오 (기본값은 ISO-8859-1).</target>
        </trans-unit>
        <trans-unit id="b9c66cace097e648754e60eb3adba5a65c7e471d" translate="yes" xml:space="preserve">
          <source>Set the current length of the string which is in the SV. See &lt;code&gt;SvCUR&lt;/code&gt; and &lt;code&gt;SvIV_set&lt;/code&gt; .</source>
          <target state="translated">SV에있는 문자열의 현재 길이를 설정하십시오. &lt;code&gt;SvCUR&lt;/code&gt; 및 &lt;code&gt;SvIV_set&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b1cc357837a67efdc931d9a2ed4913fd6bd1879b" translate="yes" xml:space="preserve">
          <source>Set the current pad to be pad &lt;code&gt;n&lt;/code&gt; in the padlist, saving the previous current pad. NB currently this macro expands to a string too long for some compilers, so it's best to replace it with</source>
          <target state="translated">패드 리스트에서 현재 패드를 패드 &lt;code&gt;n&lt;/code&gt; 으로 설정하여 이전 전류 패드를 저장합니다. NB 현재이 매크로는 일부 컴파일러에서 너무 긴 문자열로 확장되므로 다음과 같이 바꾸는 것이 가장 좋습니다</target>
        </trans-unit>
        <trans-unit id="1a38250e5b2747407cd2b8722d0b8d14c28da5b4" translate="yes" xml:space="preserve">
          <source>Set the current position, using the opaque value returned by &lt;code&gt;getpos()&lt;/code&gt; . Not yet supported.</source>
          <target state="translated">&lt;code&gt;getpos()&lt;/code&gt; 반환 한 불투명 한 값을 사용하여 현재 위치를 설정하십시오 . 아직 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="69382d453505c7bf8a7a7a038d3e295dc3fd2b8c" translate="yes" xml:space="preserve">
          <source>Set the default header to indicate that this page is part of the standard Perl release, if &lt;b&gt;--center&lt;/b&gt; is not also given.</source>
          <target state="translated">&lt;b&gt;--center&lt;/b&gt; 도 제공되지 않은 경우이 페이지가 표준 Perl 릴리스의 일부임을 나타내도록 기본 헤더를 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="10c12ebce94e713af1ea1defa218a79b08cdce52" translate="yes" xml:space="preserve">
          <source>Set the directive associated with this token. Used internally to fake TODO tests.</source>
          <target state="translated">이 토큰과 관련된 지시문을 설정하십시오. 내부적으로 TODO 테스트를 위조하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="0a16e5af625314bf88ad6b2bec36a4b8e1aa9a05" translate="yes" xml:space="preserve">
          <source>Set the error handling style. &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; says to throw an exception on any POD formatting error. &lt;code&gt;stderr&lt;/code&gt; says to report errors on standard error, but not to throw an exception. &lt;code&gt;pod&lt;/code&gt; says to include a POD ERRORS section in the resulting documentation summarizing the errors. &lt;code&gt;none&lt;/code&gt; ignores POD errors entirely, as much as possible.</source>
          <target state="translated">오류 처리 스타일을 설정하십시오. &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; 는 모든 POD 형식 오류에 대해 예외를 던지라고 말합니다. &lt;code&gt;stderr&lt;/code&gt; 는 표준 오류에 대한 오류를보고하지만 예외는 발생시키지 말라고 말합니다. &lt;code&gt;pod&lt;/code&gt; 는 결과 문서에 오류를 요약 한 POD ERRORS 섹션을 포함 시키라고 말합니다. &lt;code&gt;none&lt;/code&gt; 은 가능한 한 POD 오류를 완전히 무시 하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="c374003f8061a0f37ba1c8b709954cff45ff4c26" translate="yes" xml:space="preserve">
          <source>Set the formatter_class of the harness being run. Since the &lt;code&gt;HARNESS_OPTIONS&lt;/code&gt; is seperated by &lt;code&gt;:&lt;/code&gt; , we use &lt;code&gt;-&lt;/code&gt; instead.</source>
          <target state="translated">실행중인 하네스의 formatter_class를 설정하십시오. 이후 &lt;code&gt;HARNESS_OPTIONS&lt;/code&gt; 가 로 구분된다 &lt;code&gt;:&lt;/code&gt; 우리는 사용 &lt;code&gt;-&lt;/code&gt; 대신.</target>
        </trans-unit>
        <trans-unit id="4cd2954ce82dcc6c55f66520ddbd7db9e25038d3" translate="yes" xml:space="preserve">
          <source>Set the highest index in the array to the given number, equivalent to Perl's &lt;code&gt;$#array = $fill;&lt;/code&gt; .</source>
          <target state="translated">배열에서 가장 높은 인덱스를 주어진 숫자로 설정하십시오. Perl의 &lt;code&gt;$#array = $fill;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1c9b7103cb01ab810deebdec7c8ba3708db9493b" translate="yes" xml:space="preserve">
          <source>Set the input baud rate.</source>
          <target state="translated">입력 전송 속도를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="1e1a3bc8ac2300a6771401476bf158aa1fb9f610" translate="yes" xml:space="preserve">
          <source>Set the left-hand footer string to this value. By default, the modification date of the input file will be used, or the current date if input comes from &lt;code&gt;STDIN&lt;/code&gt; .</source>
          <target state="translated">왼쪽 바닥 글 문자열을이 값으로 설정하십시오. 기본적으로 입력 파일의 수정 날짜가 사용되거나 &lt;code&gt;STDIN&lt;/code&gt; 에서 입력 한 경우 현재 날짜가 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="64ca0bc6de4e6864f3583e031971a4ee1d5448cd" translate="yes" xml:space="preserve">
          <source>Set the level of debug information for this object. If &lt;code&gt;VALUE&lt;/code&gt; is not given then the current state is returned. Otherwise the state is changed to &lt;code&gt;VALUE&lt;/code&gt; and the previous state returned.</source>
          <target state="translated">이 오브젝트에 대한 디버그 정보 레벨을 설정하십시오. 경우 &lt;code&gt;VALUE&lt;/code&gt; 다음 주어지지 않는 현재 상태가 반환됩니다. 그렇지 않으면 상태가 &lt;code&gt;VALUE&lt;/code&gt; 로 변경되고 이전 상태가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="bf87375566591ae1cf3a120294b92ff86451dd36" translate="yes" xml:space="preserve">
          <source>Set the maximum level. Any higher levels than the specified one are ignored.</source>
          <target state="translated">최대 레벨을 설정하십시오. 지정된 레벨보다 높은 레벨은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="0d455f6e6aab5e848eef75fedff2472f333772e8" translate="yes" xml:space="preserve">
          <source>Set the name of the manual page to</source>
          <target state="translated">매뉴얼 페이지의 이름을</target>
        </trans-unit>
        <trans-unit id="13972b9081123782e32921714d08237e9346628e" translate="yes" xml:space="preserve">
          <source>Set the name of the manual page. Without this option, the manual name is set to the uppercased base name of the file being converted unless the manual section is 3, in which case the path is parsed to see if it is a Perl module path. If it is, a path like &lt;code&gt;.../lib/Pod/Man.pm&lt;/code&gt; is converted into a name like &lt;code&gt;Pod::Man&lt;/code&gt; . This option, if given, overrides any automatic determination of the name.</source>
          <target state="translated">매뉴얼 페이지의 이름을 설정하십시오. 이 옵션을 사용하지 않으면 매뉴얼 섹션이 3이 아닌 경우 매뉴얼 이름이 변환중인 파일의 대문자 기본 이름으로 설정됩니다.이 경우 경로가 구문 분석되어 Perl 모듈 경로인지 확인합니다. 그렇다면 &lt;code&gt;.../lib/Pod/Man.pm&lt;/code&gt; 과 같은 경로 는 &lt;code&gt;Pod::Man&lt;/code&gt; 과 같은 이름으로 변환됩니다 . 이 옵션이 제공되면 이름의 자동 결정을 무시합니다.</target>
        </trans-unit>
        <trans-unit id="1b12474a7382b60b419fef4621bdea9e461e96f3" translate="yes" xml:space="preserve">
          <source>Set the number of spaces to indent regular text, and the default indentation for &lt;code&gt;=over&lt;/code&gt; blocks. Defaults to 4 spaces if this option isn't given.</source>
          <target state="translated">일반 텍스트를 들여 쓰기 할 공백 수와 &lt;code&gt;=over&lt;/code&gt; 블록 의 기본 들여 쓰기를 설정하십시오 . 이 옵션을 지정하지 않으면 기본값은 4 칸입니다.</target>
        </trans-unit>
        <trans-unit id="4a08b4fd33e2048d6c4f1c28a1a6b7bdb127bd20" translate="yes" xml:space="preserve">
          <source>Set the number to its absolute value, e.g. change the sign from '-' to '+' and from '-inf' to '+inf', respectively. Does nothing for NaN or positive numbers.</source>
          <target state="translated">숫자를 절대 값으로 설정하십시오. 예를 들어 부호를 각각 '-'에서 '+'로, '-inf'에서 '+ inf'로 변경하십시오. NaN 또는 양수에 대해서는 아무 것도하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e91c823eccd0419f2e6a1e13e049de31dd5cf5fc" translate="yes" xml:space="preserve">
          <source>Set the output baud rate.</source>
          <target state="translated">출력 전송 속도를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="a4ef2a5ea1c9bb7c5562bc2b2f016d8973a6e1be" translate="yes" xml:space="preserve">
          <source>Set the output color.</source>
          <target state="translated">출력 색상을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="a4732b9a88448b89c53f22f559150640e50bd14c" translate="yes" xml:space="preserve">
          <source>Set the section for the &lt;code&gt;.TH&lt;/code&gt; macro. The standard section numbering convention is to use 1 for user commands, 2 for system calls, 3 for functions, 4 for devices, 5 for file formats, 6 for games, 7 for miscellaneous information, and 8 for administrator commands. There is a lot of variation here, however; some systems (like Solaris) use 4 for file formats, 5 for miscellaneous information, and 7 for devices. Still others use 1m instead of 8, or some mix of both. About the only section numbers that are reliably consistent are 1, 2, and 3.</source>
          <target state="translated">&lt;code&gt;.TH&lt;/code&gt; 매크로 의 섹션을 설정하십시오 . 표준 섹션 번호 지정 규칙은 사용자 명령 1, 시스템 호출 2, 기능 3, 장치 4, 파일 형식 5, 게임 6, 기타 정보 7, 관리자 명령 8을 사용하는 것입니다. 그러나 여기에는 많은 변형이 있습니다. Solaris와 같은 일부 시스템은 파일 형식에 4, 기타 정보에 5, 장치에 7을 사용합니다. 또 다른 사람들은 8 대신 1m을 사용하거나 두 가지를 혼합하여 사용합니다. 확실하게 일치하는 유일한 섹션 번호는 1, 2 및 3입니다.</target>
        </trans-unit>
        <trans-unit id="ff6b57adeb605260c9317d8175c37bce0585fd3f" translate="yes" xml:space="preserve">
          <source>Set the slot at offset &lt;code&gt;po&lt;/code&gt; in the current pad to &lt;code&gt;sv&lt;/code&gt;</source>
          <target state="translated">현재 패드의 오프셋 &lt;code&gt;po&lt;/code&gt; 에 슬롯 을 &lt;code&gt;sv&lt;/code&gt; 로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="b4cb27ad4c5eee83092ab663d58aaca30cd70f3d" translate="yes" xml:space="preserve">
          <source>Set the string that is included before the opening &amp;lt;html&amp;gt; tag:</source>
          <target state="translated">여는 &amp;lt;html&amp;gt; 태그 앞에 포함 된 문자열을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="30905183a403c70c69c00e9a32fe1eda8d3eeb11" translate="yes" xml:space="preserve">
          <source>Set the value at offset</source>
          <target state="translated">오프셋에서 값 설정</target>
        </trans-unit>
        <trans-unit id="a829cba7c061fa542b2731502551149a89454ffc" translate="yes" xml:space="preserve">
          <source>Set the value of a numbered capture variable. &lt;code&gt;value&lt;/code&gt; is the scalar that is to be used as the new value. It's up to the engine to make sure this is used as the new value (or reject it).</source>
          <target state="translated">번호가 매겨진 캡처 변수의 값을 설정하십시오. &lt;code&gt;value&lt;/code&gt; 는 새 값으로 사용될 스칼라입니다. 이것이 새로운 값으로 사용되는지 또는 거부하는지는 엔진에 달려 있습니다.</target>
        </trans-unit>
        <trans-unit id="d40cca8b0068b8cf59958fcbe3fe13fb1458d0b1" translate="yes" xml:space="preserve">
          <source>Set the value of one or more options. If the value has internal whitespace, it should be quoted. For example, you could set &lt;code&gt;o
pager=&quot;less -MQeicsNfr&quot;&lt;/code&gt; to call &lt;b&gt;less&lt;/b&gt; with those specific options. You may use either single or double quotes, but if you do, you must escape any embedded instances of same sort of quote you began with, as well as any escaping any escapes that immediately precede that quote but which are not meant to escape the quote itself. In other words, you follow single-quoting rules irrespective of the quote; eg: &lt;code&gt;o option='this isn\'t bad'&lt;/code&gt; or &lt;code&gt;o option=&quot;She said, \&quot;Isn't
it?\&quot;&quot;&lt;/code&gt; .</source>
          <target state="translated">하나 이상의 옵션 값을 설정하십시오. 값에 내부 공백이 있으면 따옴표로 묶어야합니다. 예를 들어, 특정 옵션을 사용하여 &lt;b&gt;덜&lt;/b&gt; 호출하도록 &lt;code&gt;o pager=&quot;less -MQeicsNfr&quot;&lt;/code&gt; 을 설정할 수 있습니다. 작은 따옴표 나 큰 따옴표를 사용할 수 있지만, 따옴표를 사용하면 시작한 것과 같은 종류의 따옴표가 포함 된 포함 된 인스턴스와 해당 따옴표 바로 앞의 이스케이프를 이스케이프 처리해야합니다. 그 자체. 즉, 인용 부호에 관계없이 작은 따옴표 규칙을 따릅니다. 예 : &lt;code&gt;o option='this isn\'t bad'&lt;/code&gt; 또는 &lt;code&gt;o option=&quot;She said, \&quot;Isn't it?\&quot;&quot;&lt;/code&gt; .&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="2cc136251cb32fcfbe3d04221687aa62a0883948" translate="yes" xml:space="preserve">
          <source>Set the value of the IV pointer in sv to val. It is possible to perform the same function of this macro with an lvalue assignment to &lt;code&gt;SvIVX&lt;/code&gt; . With future Perls, however, it will be more efficient to use &lt;code&gt;SvIV_set&lt;/code&gt; instead of the lvalue assignment to &lt;code&gt;SvIVX&lt;/code&gt; .</source>
          <target state="translated">sv의 IV 포인터 값을 val로 설정하십시오. &lt;code&gt;SvIVX&lt;/code&gt; 에 lvalue를 지정하여이 매크로와 동일한 기능을 수행 할 수 있습니다 . 미래 Perls으로, 그러나, 사용하는 것이 더 효율적입니다 &lt;code&gt;SvIV_set&lt;/code&gt; 을 에 좌변 할당 대신 &lt;code&gt;SvIVX&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="22e4c903a5d72261424a11bc3757c9f4a37a76ba" translate="yes" xml:space="preserve">
          <source>Set the value of the MAGIC pointer in sv to val. See &lt;code&gt;SvIV_set&lt;/code&gt; .</source>
          <target state="translated">sv의 MAGIC 포인터 값을 val로 설정하십시오. &lt;code&gt;SvIV_set&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1a494211327b600de30ab8718fb411a59a7f58c6" translate="yes" xml:space="preserve">
          <source>Set the value of the NV pointer in sv to val. See &lt;code&gt;SvIV_set&lt;/code&gt; .</source>
          <target state="translated">sv의 NV 포인터 값을 val로 설정하십시오. &lt;code&gt;SvIV_set&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8d9c377a0b2e06b10d8641151ba6301894489521" translate="yes" xml:space="preserve">
          <source>Set the value of the PV pointer in &lt;code&gt;sv&lt;/code&gt; to the Perl allocated &lt;code&gt;NUL&lt;/code&gt; -terminated string &lt;code&gt;val&lt;/code&gt; . See also &lt;code&gt;SvIV_set&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;sv&lt;/code&gt; 의 PV 포인터 값을 Perl 할당 &lt;code&gt;NUL&lt;/code&gt; 종료 문자열 &lt;code&gt;val&lt;/code&gt; 로 설정하십시오 . &lt;code&gt;SvIV_set&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="974caccd437c55b24a3029576f3d67323db7a99d" translate="yes" xml:space="preserve">
          <source>Set the value of the RV pointer in sv to val. See &lt;code&gt;SvIV_set&lt;/code&gt; .</source>
          <target state="translated">sv의 RV 포인터 값을 val로 설정하십시오. &lt;code&gt;SvIV_set&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3a4945f80a4ef90380ec198942123c4c53398424" translate="yes" xml:space="preserve">
          <source>Set the value of the STASH pointer in sv to val. See &lt;code&gt;SvIV_set&lt;/code&gt; .</source>
          <target state="translated">sv의 STASH 포인터 값을 val로 설정하십시오. &lt;code&gt;SvIV_set&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="61e2b8af95b67e74054b4785448a38bdfa4d841a" translate="yes" xml:space="preserve">
          <source>Set the value of the UV pointer in sv to val. See &lt;code&gt;SvIV_set&lt;/code&gt; .</source>
          <target state="translated">sv의 UV 포인터 값을 val로 설정하십시오. &lt;code&gt;SvIV_set&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ee3c9044a521bf001f33a0b0f5dc534176c74d5f" translate="yes" xml:space="preserve">
          <source>Set the value that will be embedded in the opening tags of F, C tags and verbatim text. F maps to &amp;lt;em&amp;gt;, C maps to &amp;lt;code&amp;gt;, Verbatim text maps to &amp;lt;pre&amp;gt; (Computerese defaults to &quot;&quot;)</source>
          <target state="translated">F, C 태그 및 완전 텍스트의 여는 태그에 포함될 값을 설정하십시오. F는 &amp;lt;em&amp;gt;에, C는 &amp;lt;code&amp;gt;에, Verbatim 텍스트는 &amp;lt;pre&amp;gt; (컴퓨터의 기본값은 &quot;&quot;)에 매핑됩니다.</target>
        </trans-unit>
        <trans-unit id="eb7a062a0b6ba69d7136129c02cfec08998ab139" translate="yes" xml:space="preserve">
          <source>Set the verbosity level.</source>
          <target state="translated">상세 레벨을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="d5df7fc87263e18096be39ec6768717dbc7ae7d2" translate="yes" xml:space="preserve">
          <source>Set the verbosity level:</source>
          <target state="translated">상세 레벨을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="194f7ae4760084100ac6e9d46a1742704127659d" translate="yes" xml:space="preserve">
          <source>Set this value to true if you don't want the formatter to try putting a hidden code on all Perl symbols (as best as it can notice them) that labels them as being not in English, and so not worth spellchecking.</source>
          <target state="translated">포맷터가 영어가 아닌 것으로 레이블링하여 맞춤법 검사를 할 가치가없는 모든 Perl 기호에 숨겨진 코드를 표시하지 않으려면이 값을 true로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="6fd106288bdb4ff77709d6356213cdc720c68b6d" translate="yes" xml:space="preserve">
          <source>Set this variable to &lt;code&gt;0&lt;/code&gt; if you do not want any warnings printed. Personally I recommend against doing this, but people asked for the option. Also, be advised that this is of course not threadsafe.</source>
          <target state="translated">경고를 인쇄하지 않으려면 이 변수를 &lt;code&gt;0&lt;/code&gt; 으로 설정하십시오 . 개인적으로 나는 이것을하지 않는 것이 좋지만 사람들은 옵션을 요구했습니다. 또한 이것은 스레드 안전이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="30679c688aa273db6ac778240eaadb8fcf96dea6" translate="yes" xml:space="preserve">
          <source>Set this variable to &lt;code&gt;1&lt;/code&gt; to always get the &lt;code&gt;Carp::longmess&lt;/code&gt; output of the warnings, instead of the regular &lt;code&gt;carp&lt;/code&gt; . This is the same message you would get by doing:</source>
          <target state="translated">일반 &lt;code&gt;carp&lt;/code&gt; 대신 경고 의 &lt;code&gt;Carp::longmess&lt;/code&gt; 출력 을 항상 얻으려면 이 변수를 &lt;code&gt;1&lt;/code&gt; 로 설정하십시오 . 다음과 같은 메시지가 나타납니다.</target>
        </trans-unit>
        <trans-unit id="ccf2a66ca30e8eff3f9eec8d1c8f7819471b7948" translate="yes" xml:space="preserve">
          <source>Set this variable to &lt;code&gt;1&lt;/code&gt; to make &lt;code&gt;Archive::Tar&lt;/code&gt; effectively make a copy of the file when extracting. Default is &lt;code&gt;0&lt;/code&gt; , which means the symlink stays intact. Of course, you will have to pack the file linked to as well.</source>
          <target state="translated">&lt;code&gt;Archive::Tar&lt;/code&gt; 때 Archive :: Tar가 효과적으로 파일 사본 을 만들려면 이 변수를 &lt;code&gt;1&lt;/code&gt; 로 설정하십시오 . 기본값은 &lt;code&gt;0&lt;/code&gt; 이며 심볼릭 링크는 그대로 유지됩니다. 물론, 링크 된 파일도 압축해야합니다.</target>
        </trans-unit>
        <trans-unit id="383aacff95eb6a78e74e64bda42dfd0cbc4da0e9" translate="yes" xml:space="preserve">
          <source>Set to 1 and the md5sum of files will be returned (instead of file data) my $iter = Archive::Tar-&amp;gt;iter( $file, 1, {md5 =&amp;gt; 1} ); while( my $f = $iter-&amp;gt;() ) { print $f-&amp;gt;data . &quot;\t&quot; . $f-&amp;gt;full_path . $/; }</source>
          <target state="translated">1로 설정하면 파일 데이터 대신 md5sum이 반환됩니다. my $ iter = Archive :: Tar-&amp;gt; iter ($ file, 1, {md5 =&amp;gt; 1}); while (my $ f = $ iter-&amp;gt; ()) {print $ f-&amp;gt; data. &quot;\ t&quot;. $ f-&amp;gt; full_path. $ /; }</target>
        </trans-unit>
        <trans-unit id="0e0a386d8dc4c1874b46a680e437e74ee0ffba92" translate="yes" xml:space="preserve">
          <source>Set to 1 to allow the use of non-IFS compatible LSPs (Layered Service Providers). Perl normally searches for an IFS-compatible LSP because this is required for its emulation of Windows sockets as real filehandles. However, this may cause problems if you have a firewall such as</source>
          <target state="translated">비 IFS 호환 LSP (Layered Service Providers)를 사용하려면 1로 설정하십시오. Perl은 일반적으로 IFS 호환 LSP를 검색합니다. 이는 실제 파일 핸들로 Windows 소켓을 에뮬레이션하는 데 필요하기 때문입니다. 그러나 다음과 같은 방화벽이있는 경우 문제가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="987c16056188115f9ec16c909bb6308c3ba73d79" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;&quot;1&quot;&lt;/code&gt; to have Perl resolve</source>
          <target state="translated">Perl을 해결 하려면 &lt;code&gt;&quot;1&quot;&lt;/code&gt; 로 설정</target>
        </trans-unit>
        <trans-unit id="cc83033c6d49c4dc40d2c5e241cb0a6ce60549f1" translate="yes" xml:space="preserve">
          <source>Set to a true value to normalize the TAP that is emitted in verbose modes.</source>
          <target state="translated">상세 모드에서 방출되는 TAP를 정규화하려면 true 값으로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="546342f8d8f12d542539c974b91270e85e9f6de4" translate="yes" xml:space="preserve">
          <source>Set to false to silence warnings. Inspect the output of the &lt;code&gt;error()&lt;/code&gt; method manually to see what went wrong.</source>
          <target state="translated">경고를 끄려면 false로 설정하십시오. &lt;code&gt;error()&lt;/code&gt; 메소드 의 출력을 수동으로 검사하여 무엇이 잘못되었는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="834dbdc33e6a642f5eddbc75564f9d8b610489f4" translate="yes" xml:space="preserve">
          <source>Set up a module that does a &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; Filter::Simple&lt;/code&gt; and then calls &lt;code&gt;FILTER { ... }&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; Filter::Simple&lt;/code&gt; &lt;a href=&quot;../functions/use&quot;&gt;사용&lt;/a&gt; 하는 모듈을 설정 한 다음 &lt;code&gt;FILTER { ... }&lt;/code&gt; 을 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="73a34667fa5cc5eb569d7c1aef07a1af8859d495" translate="yes" xml:space="preserve">
          <source>Set up a module that does a &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; Filter::Util::Call&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; Filter::Util::Call&lt;/code&gt; &lt;a href=&quot;../functions/use&quot;&gt;사용&lt;/a&gt; 하는 모듈을 설정 하십시오 .</target>
        </trans-unit>
        <trans-unit id="5e688569ed0e829b38315a3e8fcf014d5ccc4ea2" translate="yes" xml:space="preserve">
          <source>Set up necessary local variables for exception handling. See &lt;a href=&quot;perlguts#Exception-Handling&quot;&gt;Exception Handling in perlguts&lt;/a&gt;.</source>
          <target state="translated">예외 처리에 필요한 로컬 변수를 설정하십시오. &lt;a href=&quot;perlguts#Exception-Handling&quot;&gt;perlguts의 예외 처리를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3e4838c0ccda6d92839ab4417c66fdd6b838d3e4" translate="yes" xml:space="preserve">
          <source>Set what type of data channel protection the client and server will be using. Only &lt;code&gt;LEVEL&lt;/code&gt; s &quot;C&quot; (clear) and &quot;P&quot; (private) are supported.</source>
          <target state="translated">클라이언트와 서버가 사용할 데이터 채널 보호 유형을 설정하십시오. 만 &lt;code&gt;LEVEL&lt;/code&gt; 의 &quot;C&quot;(삭제) 및 &quot;P&quot;(개인)가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="0f18d395c62f798a17ecac938a24ac02d508300b" translate="yes" xml:space="preserve">
          <source>Set whether or not the connect behavior should enforce remote service availability as well as reachability. Normally, if the remote server reported ECONNREFUSED, it must have been reachable because of the status packet that it reported. With this option enabled, the full three-way tcp handshake must have been established successfully before it will claim it is reachable. NOTE: It still does nothing more than connect and disconnect. It does not speak any protocol (i.e., HTTP or FTP) to ensure the remote server is sane in any way. The remote server CPU could be grinding to a halt and unresponsive to any clients connecting, but if the kernel throws the ACK packet, it is considered alive anyway. To really determine if the server is responding well would be application specific and is beyond the scope of Net::Ping. For udp protocol, enabling this option demands that the remote server replies with the same udp data that it was sent as defined by the udp echo service.</source>
          <target state="translated">연결 동작이 도달 가능성뿐만 아니라 원격 서비스 가용성을 시행해야하는지 여부를 설정하십시오. 일반적으로 원격 서버가 ECONNREFUSED를보고 한 경우보고 된 상태 패킷으로 인해 원격 서버에 도달 할 수 있어야합니다. 이 옵션을 사용하면 도달 할 수 있다고 주장하기 전에 전체 3 방향 tcp 핸드 셰이크가 설정되어 있어야합니다. 참고 : 여전히 연결 및 연결 끊기 만합니다. 원격 서버가 어떤 방식 으로든 제자리에 있도록 프로토콜 (예 : HTTP 또는 FTP)을 사용하지 않습니다. 원격 서버 CPU가 연결이 중단되고 연결되는 클라이언트에 응답하지 않을 수 있지만 커널이 ACK 패킷을 던지면 어쨌든 살아있는 것으로 간주됩니다. 서버가 제대로 응답하는지 확인하려면 응용 프로그램에 따라 다르며 Net :: Ping의 범위를 벗어납니다. UDP 프로토콜의 경우이 옵션을 사용하려면 원격 서버가 udp echo 서비스에서 정의한 것과 동일한 udp 데이터로 응답해야합니다.</target>
        </trans-unit>
        <trans-unit id="a07a8228695d929da97229f651f30da0684bf45b" translate="yes" xml:space="preserve">
          <source>Set/get the class for downgrade/upgrade operations. Thuis is used for instance by &lt;a href=&quot;../bignum&quot;&gt;bignum&lt;/a&gt;. The defaults are '', thus the following operation will create a BigInt, not a BigFloat:</source>
          <target state="translated">다운 그레이드 / 업그레이드 작업을위한 클래스를 설정 / 취득합니다. Thuis는 예를 들어 &lt;a href=&quot;../bignum&quot;&gt;bignum에&lt;/a&gt; 의해 사용됩니다 . 기본값은 ''이므로 다음 작업은 BigFloat가 아닌 BigInt를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="691f046ca0340609c296b4c74a67356c9723a876" translate="yes" xml:space="preserve">
          <source>Set/get the current round mode.</source>
          <target state="translated">현재 라운드 모드를 설정 / 취득합니다.</target>
        </trans-unit>
        <trans-unit id="37d56e2c5033e2c05ba27dafc68fc7e7f70db64b" translate="yes" xml:space="preserve">
          <source>Set/get the number of digits for the default precision in divide operations.</source>
          <target state="translated">나누기 연산에서 기본 정밀도의 자릿수를 설정하거나 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="18b8ca3f3f3965e8a4d0e32c6680ecb26c5b068b" translate="yes" xml:space="preserve">
          <source>Set/retrieve the POD document name (e.g. &quot;Pod::Parser&quot;).</source>
          <target state="translated">POD 문서 이름 (예 : &quot;Pod :: Parser&quot;)을 설정 / 검색하십시오.</target>
        </trans-unit>
        <trans-unit id="87ce229873ff022aa8725cfc84a33e2e54210869" translate="yes" xml:space="preserve">
          <source>Set/retrieve the POD file name.</source>
          <target state="translated">POD 파일 이름을 설정 / 검색하십시오.</target>
        </trans-unit>
        <trans-unit id="5515910de1d3463cece3939b2b845d2ea822ab16" translate="yes" xml:space="preserve">
          <source>Set/retrieve the POD file storage path.</source>
          <target state="translated">POD 파일 저장 경로를 설정 / 검색하십시오.</target>
        </trans-unit>
        <trans-unit id="54c04c07b3166e5540744836415a0e65a4cf9f82" translate="yes" xml:space="preserve">
          <source>Set/retrieve the POD short description as found in the &lt;code&gt;=head1 NAME&lt;/code&gt; section.</source>
          <target state="translated">&lt;code&gt;=head1 NAME&lt;/code&gt; 섹션 에있는 POD 간단한 설명을 설정 / 검색 하십시오.</target>
        </trans-unit>
        <trans-unit id="f0459ef370f13af05319975f24455e8cb8659f84" translate="yes" xml:space="preserve">
          <source>Set/retrieve the textual value of the link. This string contains special markers &lt;code&gt;P&amp;lt;&amp;gt;&lt;/code&gt; and &lt;code&gt;Q&amp;lt;&amp;gt;&lt;/code&gt; that should be expanded by the translator's interior sequence expansion engine to the formatter-specific code to highlight/activate the hyperlink. The details have to be implemented in the translator.</source>
          <target state="translated">링크의 텍스트 값을 설정 / 검색합니다. 이 문자열에는 특수 마커 &lt;code&gt;P&amp;lt;&amp;gt;&lt;/code&gt; 및 &lt;code&gt;Q&amp;lt;&amp;gt;&lt;/code&gt; 가 포함되어 있으며, 이는 하이퍼 링크를 강조 표시 / 활성화하기 위해 변환기의 내부 시퀀스 확장 엔진에 의해 포맷터 특정 코드로 확장되어야합니다. 세부 사항은 번역기에서 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="419764a46761f0fffa0aea35a7f43cfa71691b84" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;Perl_rc&lt;/code&gt; to &lt;code&gt;rc&lt;/code&gt; , and sets $^E to the corresponding value.</source>
          <target state="translated">설정 &lt;code&gt;Perl_rc&lt;/code&gt; 을 에 &lt;code&gt;rc&lt;/code&gt; 및 세트 $ ^ 해당 값 E.</target>
        </trans-unit>
        <trans-unit id="63d789ee5142a732c194f4cb7f568e6b7dd23323" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;Perl_rc&lt;/code&gt; to the return value of WinGetLastError(), and sets $^E to the corresponding value.</source>
          <target state="translated">세트 &lt;code&gt;Perl_rc&lt;/code&gt; 를 WinGetLastError ()의 반환 값 및 세트 $ ^ 대응 값 E.</target>
        </trans-unit>
        <trans-unit id="de7e955a511acb169ac3ac70a054207750d70232" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;Perl_rc&lt;/code&gt; to the return value of WinGetLastError().</source>
          <target state="translated">&lt;code&gt;Perl_rc&lt;/code&gt; 를 WinGetLastError ()의 반환 값으로 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="fa98fad37059e0f6a0224425b5d152583e99f44d" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;compactDump&lt;/code&gt; and &lt;code&gt;veryCompact&lt;/code&gt; options simultaneously.</source>
          <target state="translated">&lt;code&gt;compactDump&lt;/code&gt; 및 &lt;code&gt;veryCompact&lt;/code&gt; 옵션을 동시에 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="d1ec724f2d81ce2a30fc1934fd14acd2f79f0c80" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;compactDump&lt;/code&gt; option. If the value is 1, sets to a reasonable big number.</source>
          <target state="translated">&lt;code&gt;compactDump&lt;/code&gt; 옵션을 설정합니다 . 값이 1이면 합리적인 큰 숫자로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="bf62caf04c459720678a2165a622ec33f206a57f" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;tick&lt;/code&gt; and &lt;code&gt;unctrl&lt;/code&gt; options to suitable values for printout with the given quote char. Possible values are &lt;code&gt;auto&lt;/code&gt; , &lt;code&gt;'&lt;/code&gt; and &lt;code&gt;&quot;&lt;/code&gt;.</source>
          <target state="translated">지정된 인용 부호를 사용하여 &lt;code&gt;tick&lt;/code&gt; 및 &lt;code&gt;unctrl&lt;/code&gt; 옵션을 인쇄하기에 적합한 값으로 설정 합니다. 가능한 값은 &lt;code&gt;auto&lt;/code&gt; , &lt;code&gt;'&lt;/code&gt; 및 &lt;code&gt;&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5f2eb3a09d485c46a23ddef7fa09e4c2212f3e2c" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;unctrl&lt;/code&gt; option with checking for an invalid argument. Possible values are &lt;code&gt;unctrl&lt;/code&gt; and &lt;code&gt;quote&lt;/code&gt; .</source>
          <target state="translated">잘못된 인수를 확인하여 &lt;code&gt;unctrl&lt;/code&gt; 옵션을 설정합니다 . 가능한 값은 &lt;code&gt;unctrl&lt;/code&gt; 및 &lt;code&gt;quote&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="45e333dd26438c1a1300c286b84cba0c915c5552" translate="yes" xml:space="preserve">
          <source>Sets DEV_NULL to nothing because I don't know how to do it on VMS.</source>
          <target state="translated">VMS에서 수행 방법을 모르기 때문에 DEV_NULL을 없음으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="8a3a24fcacbf3045f6de9c146889add9f9588b1b" translate="yes" xml:space="preserve">
          <source>Sets FILEHANDLE's position, just like the &lt;code&gt;fseek&lt;/code&gt; call of &lt;code&gt;stdio&lt;/code&gt; . FILEHANDLE may be an expression whose value gives the name of the filehandle. The values for WHENCE are &lt;code&gt;0&lt;/code&gt; to set the new position</source>
          <target state="translated">&lt;code&gt;stdio&lt;/code&gt; 의 &lt;code&gt;fseek&lt;/code&gt; 호출 과 같이 FILEHANDLE의 위치를 ​​설정 합니다. FILEHANDLE은 값이 파일 핸들 이름을 제공하는 표현식 일 수 있습니다. 새 위치를 설정하려면 WHENCE의 값은 &lt;code&gt;0&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3cce28c93400f831accb05f30b475b61e877d939" translate="yes" xml:space="preserve">
          <source>Sets FILEHANDLE's system position in bytes using lseek(2). FILEHANDLE may be an expression whose value gives the name of the filehandle. The values for WHENCE are &lt;code&gt;0&lt;/code&gt; to set the new position to POSITION; &lt;code&gt;1&lt;/code&gt; to set the it to the current position plus POSITION; and &lt;code&gt;2&lt;/code&gt; to set it to EOF plus POSITION, typically negative.</source>
          <target state="translated">lseek (2)를 사용하여 FILEHANDLE의 시스템 위치를 바이트 단위로 설정합니다. FILEHANDLE은 값이 파일 핸들 이름을 제공하는 표현식 일 수 있습니다. 새 위치를 POSITION으로 설정하려면 WHENCE의 값은 &lt;code&gt;0&lt;/code&gt; 입니다 . &lt;code&gt;1&lt;/code&gt; 을 현재 위치 + POSITION으로 설정합니다. 과 &lt;code&gt;2&lt;/code&gt; EOF 플러스 위치, 일반적으로 부정적으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="bb1b911e2c7e353c665b4c26821503bb0c47fef5" translate="yes" xml:space="preserve">
          <source>Sets PERL_SKIP_TTY_TEST to true before running normal test.</source>
          <target state="translated">정상 테스트를 실행하기 전에 PERL_SKIP_TTY_TEST를 true로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="0418ff3145cb972dc7d9a0b1a71a1ef6cf8cba37" translate="yes" xml:space="preserve">
          <source>Sets PL_defoutgv, the default file handle for output, to the passed in typeglob. As PL_defoutgv &quot;owns&quot; a reference on its typeglob, the reference count of the passed in typeglob is increased by one, and the reference count of the typeglob that PL_defoutgv points to is decreased by one.</source>
          <target state="translated">출력의 기본 파일 핸들 인 PL_defoutgv를 전달 된 typeglob로 설정합니다. PL_defoutgv가 typeglob에 대한 참조를 &quot;소유&quot;하므로 전달 된 typeglob의 참조 수는 1 씩 증가하고 PL_defoutgv가 가리키는 typeglob의 참조 수는 1 씩 감소합니다.</target>
        </trans-unit>
        <trans-unit id="a32ecc2237c7ab3fc00a5757f0738e34dae88a22" translate="yes" xml:space="preserve">
          <source>Sets UNIX like permissions 'mode' on all the files. e.g. 0666</source>
          <target state="translated">모든 파일에서 UNIX와 같은 권한 'mode'를 설정합니다. 예 : 0666</target>
        </trans-unit>
        <trans-unit id="38d605da2e9eb3427c6a2a3cdec1e9c177ee521f" translate="yes" xml:space="preserve">
          <source>Sets a breakpoint before the first statement executed after the specified subroutine is compiled.</source>
          <target state="translated">지정된 서브 루틴이 컴파일 된 후 첫 번째 명령문이 실행되기 전에 중단 점을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="ebf27016895d9056071f474212eb987eed42917c" translate="yes" xml:space="preserve">
          <source>Sets a new default per-thread stack size, and returns the previous setting.</source>
          <target state="translated">스레드 당 새로운 기본 스택 크기를 설정하고 이전 설정을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2c55e7129849ec0fb7e59b5665f0386b97faf02a" translate="yes" xml:space="preserve">
          <source>Sets all values in the semaphore set to those given on the &lt;code&gt;VALUES&lt;/code&gt; list. &lt;code&gt;VALUES&lt;/code&gt; must contain the correct number of values.</source>
          <target state="translated">세마포어 세트의 모든 값을 &lt;code&gt;VALUES&lt;/code&gt; 목록 에 지정된 값으로 설정 합니다. &lt;code&gt;VALUES&lt;/code&gt; 에는 올바른 수의 값이 포함되어야합니다.</target>
        </trans-unit>
        <trans-unit id="836b026ce35e78f78f71560f079ca22225c6fe9a" translate="yes" xml:space="preserve">
          <source>Sets and returns the random number seed for the &lt;code&gt;&lt;a href=&quot;functions/rand&quot;&gt;rand&lt;/a&gt;&lt;/code&gt; operator.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/rand&quot;&gt;rand&lt;/a&gt;&lt;/code&gt; 연산자 의 난수 시드를 설정하고 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="4e983d1284c4a007e72e6fbd7d1a4c9631581eec" translate="yes" xml:space="preserve">
          <source>Sets and returns the random number seed for the &lt;code&gt;&lt;a href=&quot;rand&quot;&gt;rand&lt;/a&gt;&lt;/code&gt; operator.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;rand&quot;&gt;rand&lt;/a&gt;&lt;/code&gt; 연산자 의 난수 시드를 설정하고 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="618d6fee27357361ed90e8b7f4220edca50b6a1a" translate="yes" xml:space="preserve">
          <source>Sets breakpoint on current line</source>
          <target state="translated">현재 줄에 중단 점을 설정합니다</target>
        </trans-unit>
        <trans-unit id="2cc89d204452a8656dcaf4c4306e33ee025f58fe" translate="yes" xml:space="preserve">
          <source>Sets file position in FILEHANDLE to be first line greater than or equal (stringwise) to</source>
          <target state="translated">FILEHANDLE의 파일 위치를 첫 줄보다 크거나 같도록 (문자열) 설정합니다.</target>
        </trans-unit>
        <trans-unit id="b0fc60baba67f86b5e1c8062d116af997854f9df" translate="yes" xml:space="preserve">
          <source>Sets modified time of destination to that of source.</source>
          <target state="translated">목적지의 수정 된 시간을 소스의 시간으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="644b7fcbb973cd9c06effd39831ad990dfaef35a" translate="yes" xml:space="preserve">
          <source>Sets or returns an alternative text specified in the link.</source>
          <target state="translated">링크에 지정된 대체 텍스트를 설정하거나 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1c22fdeace66367c0da67c7386d2f4f5e2c3a1f1" translate="yes" xml:space="preserve">
          <source>Sets the MRO of the given class to the &lt;code&gt;$type&lt;/code&gt; argument (either &lt;code&gt;c3&lt;/code&gt; or &lt;code&gt;dfs&lt;/code&gt; ).</source>
          <target state="translated">주어진 클래스의 MRO를 &lt;code&gt;$type&lt;/code&gt; 인수 ( &lt;code&gt;c3&lt;/code&gt; 또는 &lt;code&gt;dfs&lt;/code&gt; )로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="fde4a46e40fb48045c09644691e377f0ba99e8f1" translate="yes" xml:space="preserve">
          <source>Sets the MTIME field in the gzip header to $number.</source>
          <target state="translated">gzip 헤더의 MTIME 필드를 $ number로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="d43065cf70ac0a8eb19c630d78e3d81648e2753b" translate="yes" xml:space="preserve">
          <source>Sets the XFL byte in the gzip header to &lt;code&gt;$value&lt;/code&gt; .</source>
          <target state="translated">gzip 헤더의 XFL 바이트를 &lt;code&gt;$value&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="e028d291d4fde41fe0a3fdd9a42628da1f89b203" translate="yes" xml:space="preserve">
          <source>Sets the base URL for the HTML files. When cross-references are made, the HTML root is prepended to the URL.</source>
          <target state="translated">HTML 파일의 기본 URL을 설정합니다. 상호 참조가 이루어지면 HTML 루트 앞에 URL이 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="5264f30df0b2d9d3f6c49b4d8c0750b7451ab2df" translate="yes" xml:space="preserve">
          <source>Sets the centered page header to</source>
          <target state="translated">가운데 페이지 머리글을</target>
        </trans-unit>
        <trans-unit id="636257c1cd11b9ecb3439e7f89cb2f6bb499ffb2" translate="yes" xml:space="preserve">
          <source>Sets the centered page header to use instead of &quot;User Contributed Perl Documentation&quot;.</source>
          <target state="translated">&quot;User Contributed Perl Documentation&quot;대신 중앙 페이지 헤더를 사용하도록 설정합니다.</target>
        </trans-unit>
        <trans-unit id="7c65fa2c8bdd4ae594981736a5e8e9ff7d7aa453" translate="yes" xml:space="preserve">
          <source>Sets the config variable KEY to VALUE. The empty string can be specified as usual in shells, with &lt;code&gt;''&lt;/code&gt; or &lt;code&gt;&quot;&quot;&lt;/code&gt;</source>
          <target state="translated">구성 변수 KEY를 VALUE로 설정합니다. 빈 문자열은 쉘에서 평소와 같이 &lt;code&gt;''&lt;/code&gt; 또는 &lt;code&gt;&quot;&quot;&lt;/code&gt; 로 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="12fa70009ccfd49c6a19a03ced68f6ca52304c2e" translate="yes" xml:space="preserve">
          <source>Sets the current &lt;code&gt;cutting&lt;/code&gt; state to the given value and returns the result.</source>
          <target state="translated">현재 &lt;code&gt;cutting&lt;/code&gt; 상태를 주어진 값으로 설정하고 결과를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9c6107fe87d551884ecb7deee2ee53b3ef11fce7" translate="yes" xml:space="preserve">
          <source>Sets the current position for the &lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt; routine on DIRHANDLE. POS must be a value returned by &lt;code&gt;&lt;a href=&quot;functions/telldir&quot;&gt;telldir&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;&lt;a href=&quot;functions/seekdir&quot;&gt;seekdir&lt;/a&gt;&lt;/code&gt; also has the same caveats about possible directory compaction as the corresponding system library routine.</source>
          <target state="translated">DIRHANDLE 에서 &lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt; 루틴 의 현재 위치를 설정합니다 . POS는 &lt;code&gt;&lt;a href=&quot;functions/telldir&quot;&gt;telldir&lt;/a&gt;&lt;/code&gt; 이 반환 한 값이어야합니다 . &lt;code&gt;&lt;a href=&quot;functions/seekdir&quot;&gt;seekdir&lt;/a&gt;&lt;/code&gt; 은 또한 해당 시스템 라이브러리 루틴과 동일한 디렉토리 압축에 대해 동일한 경고를합니다.</target>
        </trans-unit>
        <trans-unit id="9e3ecdb54a0f348732126e86e4c3fec0047045ef" translate="yes" xml:space="preserve">
          <source>Sets the current position for the &lt;code&gt;&lt;a href=&quot;readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt; routine on DIRHANDLE. POS must be a value returned by &lt;code&gt;&lt;a href=&quot;telldir&quot;&gt;telldir&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;&lt;a href=&quot;seekdir&quot;&gt;seekdir&lt;/a&gt;&lt;/code&gt; also has the same caveats about possible directory compaction as the corresponding system library routine.</source>
          <target state="translated">DIRHANDLE 에서 &lt;code&gt;&lt;a href=&quot;readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt; 루틴 의 현재 위치를 설정합니다 . POS는 &lt;code&gt;&lt;a href=&quot;telldir&quot;&gt;telldir&lt;/a&gt;&lt;/code&gt; 이 반환 한 값이어야합니다 . &lt;code&gt;&lt;a href=&quot;seekdir&quot;&gt;seekdir&lt;/a&gt;&lt;/code&gt; 은 또한 해당 시스템 라이브러리 루틴과 동일한 디렉토리 압축에 대해 동일한 경고를합니다.</target>
        </trans-unit>
        <trans-unit id="30be77264aa234a4268b758bb5e6c9d2e1a0feb9" translate="yes" xml:space="preserve">
          <source>Sets the current position to the beginning of the directory for the &lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt; routine on DIRHANDLE.</source>
          <target state="translated">DIRHANDLE 에서 &lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt; 루틴 의 디렉토리 시작으로 현재 위치를 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="be5280cc0cd78c81604e4b1cafeaedf7e270c73b" translate="yes" xml:space="preserve">
          <source>Sets the current position to the beginning of the directory for the &lt;code&gt;&lt;a href=&quot;readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt; routine on DIRHANDLE.</source>
          <target state="translated">DIRHANDLE 에서 &lt;code&gt;&lt;a href=&quot;readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt; 루틴 의 디렉토리 시작으로 현재 위치를 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="8641202e53c20978a82abe0aaed8f374c2ee88ed" translate="yes" xml:space="preserve">
          <source>Sets the current priority for a process, a process group, or a user. (See setpriority(2).) Raises an exception when used on a machine that doesn't implement setpriority(2).</source>
          <target state="translated">프로세스, 프로세스 그룹 또는 사용자의 현재 우선 순위를 설정합니다. (setpriority (2)를 참조하십시오.) setpriority (2)를 구현하지 않는 컴퓨터에서 사용될 때 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="de415dc26fe0167b813d8b41becb203c77bcf037" translate="yes" xml:space="preserve">
          <source>Sets the current process group for the specified PID, &lt;code&gt;0&lt;/code&gt; for the current process. Raises an exception when used on a machine that doesn't implement POSIX setpgid(2) or BSD setpgrp(2). If the arguments are omitted, it defaults to &lt;code&gt;0,0&lt;/code&gt; . Note that the BSD 4.2 version of &lt;code&gt;&lt;a href=&quot;functions/setpgrp&quot;&gt;setpgrp&lt;/a&gt;&lt;/code&gt; does not accept any arguments, so only &lt;code&gt;&lt;a href=&quot;functions/setpgrp&quot;&gt;setpgrp(0,0)&lt;/a&gt;&lt;/code&gt; is portable. See also &lt;code&gt;POSIX::setsid()&lt;/code&gt; .</source>
          <target state="translated">지정된 PID의 현재 프로세스 그룹을 설정하고 현재 프로세스의 경우 &lt;code&gt;0&lt;/code&gt; 을 설정합니다. POSIX setpgid (2) 또는 BSD setpgrp (2)를 구현하지 않는 컴퓨터에서 사용될 때 예외가 발생합니다. 인수가 생략되면 기본값은 &lt;code&gt;0,0&lt;/code&gt; 입니다. &lt;code&gt;&lt;a href=&quot;functions/setpgrp&quot;&gt;setpgrp&lt;/a&gt;&lt;/code&gt; 의 BSD 4.2 버전은 인수를 허용하지 않으므로 &lt;code&gt;&lt;a href=&quot;functions/setpgrp&quot;&gt;setpgrp(0,0)&lt;/a&gt;&lt;/code&gt; 만 이식 가능합니다. &lt;code&gt;POSIX::setsid()&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="241ef80b4a2a966bef7fdabf75b36a0a852743fd" translate="yes" xml:space="preserve">
          <source>Sets the current process group for the specified PID, &lt;code&gt;0&lt;/code&gt; for the current process. Raises an exception when used on a machine that doesn't implement POSIX setpgid(2) or BSD setpgrp(2). If the arguments are omitted, it defaults to &lt;code&gt;0,0&lt;/code&gt; . Note that the BSD 4.2 version of &lt;code&gt;&lt;a href=&quot;setpgrp&quot;&gt;setpgrp&lt;/a&gt;&lt;/code&gt; does not accept any arguments, so only &lt;code&gt;&lt;a href=&quot;setpgrp&quot;&gt;setpgrp(0,0)&lt;/a&gt;&lt;/code&gt; is portable. See also &lt;code&gt;POSIX::setsid()&lt;/code&gt; .</source>
          <target state="translated">지정된 PID의 현재 프로세스 그룹을 설정하고 현재 프로세스의 경우 &lt;code&gt;0&lt;/code&gt; 을 설정합니다. POSIX setpgid (2) 또는 BSD setpgrp (2)를 구현하지 않는 컴퓨터에서 사용될 때 예외가 발생합니다. 인수가 생략되면 기본값은 &lt;code&gt;0,0&lt;/code&gt; 입니다. &lt;code&gt;&lt;a href=&quot;setpgrp&quot;&gt;setpgrp&lt;/a&gt;&lt;/code&gt; 의 BSD 4.2 버전은 인수를 허용하지 않으므로 &lt;code&gt;&lt;a href=&quot;setpgrp&quot;&gt;setpgrp(0,0)&lt;/a&gt;&lt;/code&gt; 만 이식 가능합니다. &lt;code&gt;POSIX::setsid()&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f75284aa5b437fc82cf79d56b0ff94804625a6c5" translate="yes" xml:space="preserve">
          <source>Sets the directory to which all cross references in the resulting HTML file will be relative. Not passing this causes all links to be absolute since this is the value that tells Pod::Html the root of the documentation tree.</source>
          <target state="translated">결과 HTML 파일의 모든 상호 참조가 상대적인 디렉토리를 설정합니다. 이것을 전달하지 않으면 모든 링크가 절대적으로됩니다. 이것은 Pod :: Html에게 문서 트리의 루트를 알려주는 값이기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="a3ab1b7e6bbd6a8e94f997553f1dc4e778b5287a" translate="yes" xml:space="preserve">
          <source>Sets the directory to which all cross references in the resulting html file will be relative. Not passing this causes all links to be absolute since this is the value that tells Pod::Html the root of the documentation tree.</source>
          <target state="translated">결과 html 파일의 모든 상호 참조가 상대적인 디렉토리를 설정합니다. 이것을 전달하지 않으면 모든 링크가 절대적으로됩니다. 이것은 Pod :: Html에게 문서 트리의 루트를 알려주는 값이기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="88c79ef3e6324c22574d5016c69c76a2e1bc9009" translate="yes" xml:space="preserve">
          <source>Sets the floating point rounding mode, see &lt;a href=&quot;#fegetround&quot;&gt;fegetround&lt;/a&gt;.</source>
          <target state="translated">부동 소수점 반올림 모드를 설정합니다 ( &lt;a href=&quot;#fegetround&quot;&gt;fegetround&lt;/a&gt; 참조) .</target>
        </trans-unit>
        <trans-unit id="46227126063f2ea245a077112e75b448294c804c" translate="yes" xml:space="preserve">
          <source>Sets the function that will be used to fix up a call to</source>
          <target state="translated">호출을 수정하는 데 사용될 기능을 설정합니다</target>
        </trans-unit>
        <trans-unit id="3ca97d8d4ea19ed97199f2a27770c7e465fe2399" translate="yes" xml:space="preserve">
          <source>Sets the generation number of the name at offset &lt;code&gt;po&lt;/code&gt; in the current ling pad (lvalue) to &lt;code&gt;gen&lt;/code&gt; . Note that &lt;code&gt;SvUV_set&lt;/code&gt; is hijacked for this purpose.</source>
          <target state="translated">현재 링 패드 (lvalue)의 오프셋 &lt;code&gt;po&lt;/code&gt; 에서 이름의 생성 번호 를 &lt;code&gt;gen&lt;/code&gt; 로 설정 합니다. 이를 위해 &lt;code&gt;SvUV_set&lt;/code&gt; 이 하이재킹 됨에 유의하십시오 .</target>
        </trans-unit>
        <trans-unit id="f344c852d3e03fd145a036b4917130abaa308bdd" translate="yes" xml:space="preserve">
          <source>Sets the initial size for the deflation buffer. If the buffer has to be reallocated to increase the size, it will grow in increments of &lt;code&gt;Bufsize&lt;/code&gt; .</source>
          <target state="translated">수축 버퍼의 초기 크기를 설정합니다. 크기를 늘리기 위해 버퍼를 재 할당 &lt;code&gt;Bufsize&lt;/code&gt; 단위로 증가 합니다.</target>
        </trans-unit>
        <trans-unit id="fe9376b4142de714d0978819d6ad38a5e8dbbabf" translate="yes" xml:space="preserve">
          <source>Sets the initial size for the inflation buffer. If the buffer has to be reallocated to increase the size, it will grow in increments of &lt;code&gt;Bufsize&lt;/code&gt; .</source>
          <target state="translated">인플레이션 버퍼의 초기 크기를 설정합니다. 크기를 늘리기 위해 버퍼를 재 할당 &lt;code&gt;Bufsize&lt;/code&gt; 단위로 증가 합니다.</target>
        </trans-unit>
        <trans-unit id="b91bb4c078fc7d0a126636b0334a9745decc8767" translate="yes" xml:space="preserve">
          <source>Sets the initial size for the output buffer used by the &lt;code&gt;$d-&amp;gt;deflate&lt;/code&gt; and &lt;code&gt;$d-&amp;gt;flush&lt;/code&gt; methods. If the buffer has to be reallocated to increase the size, it will grow in increments of &lt;code&gt;Bufsize&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;$d-&amp;gt;deflate&lt;/code&gt; 및 &lt;code&gt;$d-&amp;gt;flush&lt;/code&gt; 메소드가 사용하는 출력 버퍼의 초기 크기를 설정합니다 . 크기를 늘리기 위해 버퍼를 재 할당 &lt;code&gt;Bufsize&lt;/code&gt; 단위로 증가 합니다.</target>
        </trans-unit>
        <trans-unit id="f66e2b7f1166adb8a82f61d0398a2b4c8f9f144a" translate="yes" xml:space="preserve">
          <source>Sets the initial size for the output buffer used by the &lt;code&gt;$i-&amp;gt;inflate&lt;/code&gt; method. If the output buffer in this method has to be reallocated to increase the size, it will grow in increments of &lt;code&gt;Bufsize&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;$i-&amp;gt;inflate&lt;/code&gt; 메소드가 사용하는 출력 버퍼의 초기 크기를 설정합니다 . 크기를 늘리기 위해이 방법의 출력 버퍼를 재 할당 &lt;code&gt;Bufsize&lt;/code&gt; 단위로 증가 합니다.</target>
        </trans-unit>
        <trans-unit id="f44beb7ce8c6cb2ef09cc7354d148af06cfd3d64" translate="yes" xml:space="preserve">
          <source>Sets the key to a given &lt;code&gt;SV*&lt;/code&gt; , taking care to set the appropriate flags to indicate the presence of an &lt;code&gt;SV*&lt;/code&gt; key, and returns the same &lt;code&gt;SV*&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;SV*&lt;/code&gt; 키 가 있음을 나타내도록 적절한 플래그를 설정하여 키를 지정된 &lt;code&gt;SV*&lt;/code&gt; 로 설정 하고 동일한 &lt;code&gt;SV*&lt;/code&gt; 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="15e89128170b4ceee0bf4ce373fab73b9a97c332" translate="yes" xml:space="preserve">
          <source>Sets the last modified time field in the zip header to $number.</source>
          <target state="translated">zip 헤더의 마지막 수정 시간 필드를 $ number로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="38b389d97514c7bb25db24ba526bedb9f8b2216d" translate="yes" xml:space="preserve">
          <source>Sets the left-hand footer. By default, the modification date of the input file will be used, or the current date if stat() can't find that file (the case if the input is from &lt;code&gt;STDIN&lt;/code&gt; ), and the date will be formatted as &lt;code&gt;YYYY-MM-DD&lt;/code&gt; .</source>
          <target state="translated">왼쪽 바닥 글을 설정합니다. 기본적으로 입력 파일의 수정 날짜가 사용되거나 stat ()가 해당 파일을 찾을 수없는 경우 ( &lt;code&gt;STDIN&lt;/code&gt; 의 입력 인 경우 ) 현재 날짜가 사용되며 날짜는 &lt;code&gt;YYYY-MM-DD&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d105f6277e2009539c1ac8e150df2092a6d8f644" translate="yes" xml:space="preserve">
          <source>Sets the log mask for the current process to &lt;code&gt;$mask_priority&lt;/code&gt; and returns the old mask. If the mask argument is 0, the current log mask is not modified. See &lt;a href=&quot;#Levels&quot;&gt;Levels&lt;/a&gt; for the list of available levels. You can use the &lt;code&gt;LOG_UPTO()&lt;/code&gt; function to allow all levels up to a given priority (but it only accept the numeric macros as arguments).</source>
          <target state="translated">현재 프로세스의 로그 마스크를 &lt;code&gt;$mask_priority&lt;/code&gt; 로 설정하고 이전 마스크를 반환합니다. 마스크 인수가 0이면 현재 로그 마스크가 수정되지 않습니다. 사용 가능한 레벨 목록은 &lt;a href=&quot;#Levels&quot;&gt;레벨&lt;/a&gt; 을 참조하십시오 . 당신은 사용할 수 있습니다 &lt;code&gt;LOG_UPTO()&lt;/code&gt; 주어진 우선 순위에 모든 수준을 허용하는 기능을 (그러나 그것은 단지 인수로 숫자 매크로를 동의).</target>
        </trans-unit>
        <trans-unit id="82edfdb50dedbcc054fea4a76a2bd3b980946f83" translate="yes" xml:space="preserve">
          <source>Sets the maximum time the command is allowed to run before aborting, using the built-in &lt;code&gt;&lt;a href=&quot;../functions/alarm&quot;&gt;alarm()&lt;/a&gt;&lt;/code&gt; call. If the timeout is triggered, the &lt;code&gt;errorcode&lt;/code&gt; in the return value will be set to an object of the &lt;code&gt;IPC::Cmd::TimeOut&lt;/code&gt; class. See the &lt;a href=&quot;#error-message&quot;&gt;error message&lt;/a&gt; section below for details.</source>
          <target state="translated">내장 &lt;code&gt;&lt;a href=&quot;../functions/alarm&quot;&gt;alarm()&lt;/a&gt;&lt;/code&gt; 호출을 사용하여 중단 전에 명령을 실행할 수있는 최대 시간을 설정합니다 . 시간 제한이 트리거되는 경우, &lt;code&gt;errorcode&lt;/code&gt; 반환 값은의 객체로 설정됩니다 &lt;code&gt;IPC::Cmd::TimeOut&lt;/code&gt; 클래스입니다. 자세한 내용은 아래 &lt;a href=&quot;#error-message&quot;&gt;오류 메시지&lt;/a&gt; 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="682fa9cf99d050c0fba7523085ad62faa4146524" translate="yes" xml:space="preserve">
          <source>Sets the prototype of the function given by the &lt;code&gt;$code&lt;/code&gt; reference, or deletes it if &lt;code&gt;$prototype&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;. Returns the &lt;code&gt;$code&lt;/code&gt; reference itself.</source>
          <target state="translated">&lt;code&gt;$code&lt;/code&gt; 참조가 제공 한 함수의 프로토 타입을 설정 하거나 &lt;code&gt;$prototype&lt;/code&gt; 이 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 인 경우 삭제합니다 . &lt;code&gt;$code&lt;/code&gt; 참조 자체를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="7d70a908eb9214fc5d1f6c0a57f83628d66e50e0" translate="yes" xml:space="preserve">
          <source>Sets the quote marks used to surround C&amp;lt;&amp;gt; text to</source>
          <target state="translated">C &amp;lt;&amp;gt; 텍스트를 둘러싸는 데 사용되는 따옴표를</target>
        </trans-unit>
        <trans-unit id="444c29bfbf96689f054e0998ba5d7d599a625105" translate="yes" xml:space="preserve">
          <source>Sets the quote marks used to surround C&amp;lt;&amp;gt; text. If the value is a single character, it is used as both the left and right quote; if it is two characters, the first character is used as the left quote and the second as the right quoted; and if it is four characters, the first two are used as the left quote and the second two as the right quote.</source>
          <target state="translated">C &amp;lt;&amp;gt; 텍스트를 둘러싸는 데 사용되는 따옴표를 설정합니다. 값이 단일 문자 인 경우 왼쪽 및 오른쪽 따옴표로 사용됩니다. 두 문자 인 경우 첫 번째 문자는 왼쪽 따옴표로 사용되고 두 번째 문자는 오른쪽 따옴표로 사용됩니다. 4자인 경우 처음 두 개는 왼쪽 따옴표로 사용하고 두 번째 두 개는 오른쪽 따옴표로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="3a0b233eb34eea305c7c4099287c812f67d2ec7d" translate="yes" xml:space="preserve">
          <source>Sets the real group identifier and the effective group identifier for this process. Similar to assigning a value to the Perl's builtin &lt;code&gt;$)&lt;/code&gt; variable, see &lt;a href=&quot;perlvar#%24EGID&quot;&gt;$EGID in perlvar&lt;/a&gt;, except that the latter will change only the real user identifier, and that the setgid() uses only a single numeric argument, as opposed to a space-separated list of numbers.</source>
          <target state="translated">이 프로세스의 실제 그룹 식별자와 유효 그룹 식별자를 설정합니다. Perl의 내장 &lt;code&gt;$)&lt;/code&gt; 변수에 값을 할당하는 것과 유사하게 , 후자는 실제 사용자 식별자 만 변경하고 setgid ()는 공백이 아닌 단일 숫자 인수 만 사용한다는 점을 제외하고 &lt;a href=&quot;perlvar#%24EGID&quot;&gt;perlvar의 $ EGID를&lt;/a&gt; 참조하십시오. 분리 된 숫자 목록.</target>
        </trans-unit>
        <trans-unit id="6446262a06e2d17b931d62f0fce95ea62dd1b18f" translate="yes" xml:space="preserve">
          <source>Sets the real user identifier and the effective user identifier for this process. Similar to assigning a value to the Perl's builtin &lt;code&gt;$&amp;lt;&lt;/code&gt; variable, see &lt;a href=&quot;perlvar#%24UID&quot;&gt;$UID in perlvar&lt;/a&gt;, except that the latter will change only the real user identifier.</source>
          <target state="translated">이 프로세스의 실제 사용자 식별자 및 유효 사용자 식별자를 설정합니다. Perl의 내장 &lt;code&gt;$&amp;lt;&lt;/code&gt; 변수에 값을 지정하는 것과 유사하게 후자는 실제 사용자 ID 만 변경한다는 점을 제외하고 &lt;a href=&quot;perlvar#%24UID&quot;&gt;perlvar의 $ UID를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="02d01eed0c48fc1293b8f18b0caad609bb3115cc" translate="yes" xml:space="preserve">
          <source>Sets the sibling of o to the non-zero value sib. See also &lt;code&gt;OpLASTSIB_set&lt;/code&gt; and &lt;code&gt;OpMAYBESIB_set&lt;/code&gt; . For a higher-level interface, see &lt;code&gt;op_sibling_splice&lt;/code&gt; .</source>
          <target state="translated">o의 형제를 0이 아닌 값 sib로 설정합니다. &lt;code&gt;OpLASTSIB_set&lt;/code&gt; 및 &lt;code&gt;OpMAYBESIB_set&lt;/code&gt; 도 참조하십시오 . 고급 인터페이스는 &lt;code&gt;op_sibling_splice&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6d86afb1e7c7263c10b89aacd368ee2602cae29a" translate="yes" xml:space="preserve">
          <source>Sets the socket option requested. Returns &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; on error. Use integer constants provided by the &lt;code&gt;Socket&lt;/code&gt; module for LEVEL and OPNAME. Values for LEVEL can also be obtained from getprotobyname. OPTVAL might either be a packed string or an integer. An integer OPTVAL is shorthand for pack(&quot;i&quot;, OPTVAL).</source>
          <target state="translated">요청 된 소켓 옵션을 설정합니다. 오류시 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 를 반환 합니다. LEVEL 및 OPNAME에 &lt;code&gt;Socket&lt;/code&gt; 모듈에서 제공 한 정수 상수를 사용하십시오 . LEVEL의 값은 getprotobyname에서 얻을 수도 있습니다. OPTVAL은 묶음 문자열이거나 정수일 수 있습니다. 정수 OPTVAL은 pack ( &quot;i&quot;, OPTVAL)의 약어입니다.</target>
        </trans-unit>
        <trans-unit id="476b473e54c30f55552f8a4f709ce3c08424127a" translate="yes" xml:space="preserve">
          <source>Sets the socket option requested. Returns &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; on error. Use integer constants provided by the &lt;code&gt;Socket&lt;/code&gt; module for LEVEL and OPNAME. Values for LEVEL can also be obtained from getprotobyname. OPTVAL might either be a packed string or an integer. An integer OPTVAL is shorthand for pack(&quot;i&quot;, OPTVAL).</source>
          <target state="translated">요청 된 소켓 옵션을 설정합니다. 오류시 &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 를 반환 합니다. LEVEL 및 OPNAME에 &lt;code&gt;Socket&lt;/code&gt; 모듈에서 제공 한 정수 상수를 사용하십시오 . LEVEL의 값은 getprotobyname에서 얻을 수도 있습니다. OPTVAL은 묶음 문자열이거나 정수일 수 있습니다. 정수 OPTVAL은 pack ( &quot;i&quot;, OPTVAL)의 약어입니다.</target>
        </trans-unit>
        <trans-unit id="93bb929591d0528a35cd2069a37354aa3d054448" translate="yes" xml:space="preserve">
          <source>Sets the socket type and options to be used for the next call to &lt;code&gt;openlog()&lt;/code&gt; or &lt;code&gt;syslog()&lt;/code&gt; . Returns true on success, &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; on failure.</source>
          <target state="translated">다음 &lt;code&gt;openlog()&lt;/code&gt; 또는 &lt;code&gt;syslog()&lt;/code&gt; 호출에 사용될 소켓 유형 및 옵션을 설정합니다 . 성공하면 true를, 실패 하면 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="b86e212af2f126faa3544cc569f9b087e3aee0ca" translate="yes" xml:space="preserve">
          <source>Sets the source address from which pings will be sent. This must be the address of one of the interfaces on the local host. $local_addr may be specified as a hostname or as a text IP address such as &quot;192.168.1.1&quot;.</source>
          <target state="translated">핑을 보낼 소스 주소를 설정합니다. 로컬 호스트에있는 인터페이스 중 하나의 주소 여야합니다. $ local_addr은 호스트 이름 또는 &quot;192.168.1.1&quot;과 같은 텍스트 IP 주소로 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="92ce4dae9146598ac7553e913aebeb64b00cf916" translate="yes" xml:space="preserve">
          <source>Sets the status code to 580 and the response text to 'Unsupported command'. Returns zero.</source>
          <target state="translated">상태 코드를 580으로 설정하고 응답 텍스트를 '지원되지 않는 명령'으로 설정하십시오. 0을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9936295e045b1c4d6375ecd1e9facebf69d817b6" translate="yes" xml:space="preserve">
          <source>Sets the total number of items in the tied array associated with object</source>
          <target state="translated">객체와 관련된 묶인 배열의 총 항목 수를 설정합니다</target>
        </trans-unit>
        <trans-unit id="40249eaa342f002e4c8097a609cf593eebb47890" translate="yes" xml:space="preserve">
          <source>Sets the umask for the process to EXPR and returns the previous value. If EXPR is omitted, merely returns the current umask.</source>
          <target state="translated">프로세스의 umask를 EXPR로 설정하고 이전 값을 리턴합니다. EXPR을 생략하면 현재 umask 만 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="96a8396b70ef80374f00155bbbbd208815e4f883" translate="yes" xml:space="preserve">
          <source>Sets the value of the</source>
          <target state="translated">의 값을 설정합니다</target>
        </trans-unit>
        <trans-unit id="da35a68431a43130ea5825a62bfd2765d5c19d3d" translate="yes" xml:space="preserve">
          <source>Sets up any variable needed by the &lt;code&gt;UNDERBAR&lt;/code&gt; macro. It used to define &lt;code&gt;padoff_du&lt;/code&gt; , but it is currently a noop. However, it is strongly advised to still use it for ensuring past and future compatibility.</source>
          <target state="translated">&lt;code&gt;UNDERBAR&lt;/code&gt; 매크로에 필요한 변수를 설정합니다 . &lt;code&gt;padoff_du&lt;/code&gt; 를 정의하는 데 사용 되었지만 현재는 noop입니다. 그러나 과거와 미래의 호환성을 보장하기 위해 여전히 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="d3979a66aaf6a4132bfe358718ac0f220a93191b" translate="yes" xml:space="preserve">
          <source>Sets up macros having to do with XS code. Currently just INST_STATIC, INST_DYNAMIC and INST_BOOT.</source>
          <target state="translated">XS 코드와 관련된 매크로를 설정합니다. 현재 INST_STATIC, INST_DYNAMIC 및 INST_BOOT입니다.</target>
        </trans-unit>
        <trans-unit id="d872b0d7d162b74be74e6f23f9ddcaccb891eda0" translate="yes" xml:space="preserve">
          <source>Sets up stack and mark pointers for an XSUB, calling dSP and dMARK. Sets up the &lt;code&gt;ax&lt;/code&gt; and &lt;code&gt;items&lt;/code&gt; variables by calling &lt;code&gt;dAX&lt;/code&gt; and &lt;code&gt;dITEMS&lt;/code&gt; . This is usually handled automatically by &lt;code&gt;xsubpp&lt;/code&gt; .</source>
          <target state="translated">dSP 및 dMARK를 호출하여 XSUB의 스택 및 마크 포인터를 설정합니다. &lt;code&gt;dAX&lt;/code&gt; 및 &lt;code&gt;dITEMS&lt;/code&gt; 를 호출 하여 &lt;code&gt;ax&lt;/code&gt; 및 &lt;code&gt;items&lt;/code&gt; 변수를 설정합니다 . 이것은 일반적으로 &lt;code&gt;xsubpp&lt;/code&gt; 에 의해 자동으로 처리됩니다 .</target>
        </trans-unit>
        <trans-unit id="50c1d31f3b0a1748548fed8579f46b56c74b7d28" translate="yes" xml:space="preserve">
          <source>Sets up the &lt;code&gt;ax&lt;/code&gt; variable and stack marker variable &lt;code&gt;mark&lt;/code&gt; . This is usually handled automatically by &lt;code&gt;xsubpp&lt;/code&gt; by calling &lt;code&gt;dXSARGS&lt;/code&gt; .</source>
          <target state="translated">위 설정 &lt;code&gt;ax&lt;/code&gt; 변수 스택 마커 변수 &lt;code&gt;mark&lt;/code&gt; . 이것은 일반적으로 &lt;code&gt;dXSARGS&lt;/code&gt; 를 호출 하여 &lt;code&gt;xsubpp&lt;/code&gt; 에 의해 자동으로 처리됩니다 .</target>
        </trans-unit>
        <trans-unit id="336d4ca0113d319afd8c3b15eb7125c19977386b" translate="yes" xml:space="preserve">
          <source>Sets up the &lt;code&gt;ax&lt;/code&gt; variable. This is usually handled automatically by &lt;code&gt;xsubpp&lt;/code&gt; by calling &lt;code&gt;dXSARGS&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;ax&lt;/code&gt; 변수를 설정합니다 . 이것은 일반적으로 &lt;code&gt;dXSARGS&lt;/code&gt; 를 호출 하여 &lt;code&gt;xsubpp&lt;/code&gt; 에 의해 자동으로 처리됩니다 .</target>
        </trans-unit>
        <trans-unit id="769232c787891f58bc6352e4ad486992f3752ce0" translate="yes" xml:space="preserve">
          <source>Sets up the &lt;code&gt;items&lt;/code&gt; variable. This is usually handled automatically by &lt;code&gt;xsubpp&lt;/code&gt; by calling &lt;code&gt;dXSARGS&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;items&lt;/code&gt; 변수를 설정합니다 . 이것은 일반적으로 &lt;code&gt;dXSARGS&lt;/code&gt; 를 호출 하여 &lt;code&gt;xsubpp&lt;/code&gt; 에 의해 자동으로 처리됩니다 .</target>
        </trans-unit>
        <trans-unit id="82914d021c66bde36ac95fca91c293751209673a" translate="yes" xml:space="preserve">
          <source>Sets up the &lt;code&gt;ix&lt;/code&gt; variable for an XSUB which has aliases. This is usually handled automatically by &lt;code&gt;xsubpp&lt;/code&gt; .</source>
          <target state="translated">별명이있는 XSUB 의 &lt;code&gt;ix&lt;/code&gt; 변수를 설정 합니다. 이것은 일반적으로 &lt;code&gt;xsubpp&lt;/code&gt; 에 의해 자동으로 처리됩니다 .</target>
        </trans-unit>
        <trans-unit id="70f73bf30c084eaafe7cce604897dbd04c3dc416" translate="yes" xml:space="preserve">
          <source>Setting $!</source>
          <target state="translated">$ 설정 중!</target>
        </trans-unit>
        <trans-unit id="751f2128bdd975d372eba41571f3151993f0658a" translate="yes" xml:space="preserve">
          <source>Setting $ENV{TZ} in Threads on Win32</source>
          <target state="translated">Win32의 스레드에서 $ ENV {TZ} 설정</target>
        </trans-unit>
        <trans-unit id="7f4ae0b32e0a64452b967cad0f6223cbd4944c43" translate="yes" xml:space="preserve">
          <source>Setting &lt;a href=&quot;http://search.cpan.org/perldoc/%24Test::Builder::Level&quot;&gt;$Test::Builder::Level&lt;/a&gt; overrides. This is typically useful localized:</source>
          <target state="translated">설정 &lt;a href=&quot;http://search.cpan.org/perldoc/%24Test::Builder::Level&quot;&gt;$ 테스트 :: 빌더 :: 레벨&lt;/a&gt; 재정의를. 이것은 일반적으로 지역화되어 유용합니다.</target>
        </trans-unit>
        <trans-unit id="794ce9ed7ea02215107551f7430c3152412d539f" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;$/&lt;/code&gt; to a reference to an integer, scalar containing an integer, or scalar that's convertible to an integer will attempt to read records instead of lines, with the maximum record size being the referenced integer number of characters. So this:</source>
          <target state="translated">정수에 대한 참조, 정수를 포함하는 스칼라 또는 정수로 변환 가능한 스칼라에 대한 &lt;code&gt;$/&lt;/code&gt; 를 설정 하면 최대 레코드 크기가 참조 된 정수 문자 수인 행 대신 레코드를 읽으려고 시도합니다. 그래서 이거:</target>
        </trans-unit>
        <trans-unit id="17ddd91296b80d48f63b97d11f86bf92fa707898" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;$Storable::canonical&lt;/code&gt; may not yield frozen strings that compare equal due to possible stringification of numbers. When the string version of a scalar exists, it is the form stored; therefore, if you happen to use your numbers as strings between two freezing operations on the same data structures, you will get different results.</source>
          <target state="translated">&lt;code&gt;$Storable::canonical&lt;/code&gt; 설정 하면 가능한 숫자의 문자열 화로 인해 동일한 문자열을 비교할 수 없습니다. 스칼라의 문자열 버전이 존재하면 이는 저장된 형식입니다. 따라서 동일한 데이터 구조에서 두 동결 작업 사이에 숫자를 문자열로 사용하면 다른 결과를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="24a709bc63116d6d03dcd3b4fd0b3541521b8558" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;$|&lt;/code&gt; for an I/O stream causes data to be flushed all the way to disk on each write (</source>
          <target state="translated">&lt;code&gt;$|&lt;/code&gt; 설정 I / O 스트림이 데이터를 쓸 때마다 디스크에 플러시됩니다 (</target>
        </trans-unit>
        <trans-unit id="7bdb73ae2acf769ed4bd9afac1e469320505fda3" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos&lt;/a&gt;&lt;/code&gt; also resets the</source>
          <target state="translated">설정 &lt;code&gt;&lt;a href=&quot;functions/pos&quot;&gt;pos&lt;/a&gt;&lt;/code&gt; 가 도 재설정</target>
        </trans-unit>
        <trans-unit id="ce72a4be942d96b86ceb3742d54f6473d82ec88a" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;&lt;a href=&quot;pos&quot;&gt;pos&lt;/a&gt;&lt;/code&gt; also resets the</source>
          <target state="translated">설정 &lt;code&gt;&lt;a href=&quot;pos&quot;&gt;pos&lt;/a&gt;&lt;/code&gt; 가 도 재설정</target>
        </trans-unit>
        <trans-unit id="81e935f5e5ab31635e7b03bba630b9938eecfc87" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;PL_perl_destruct_level&lt;/code&gt; to &lt;code&gt;1&lt;/code&gt; makes everything squeaky clean:</source>
          <target state="translated">&lt;code&gt;PL_perl_destruct_level&lt;/code&gt; 을 &lt;code&gt;1&lt;/code&gt; 로 설정 하면 삐걱 거리는 모든 것이 깨끗해집니다.</target>
        </trans-unit>
        <trans-unit id="50fa85492558cd44d6b9f1afbdff70a2e4108f54" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;STDIN&lt;/code&gt; and/or &lt;code&gt;STDOUT&lt;/code&gt; individually</source>
          <target state="translated">설정 &lt;code&gt;STDIN&lt;/code&gt; 및 / 또는 &lt;code&gt;STDOUT&lt;/code&gt; 개별적</target>
        </trans-unit>
        <trans-unit id="4f9eb8079771b6da74df870a0a1370a3cb9be87d" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;complain_stderr&lt;/code&gt; also sets &lt;code&gt;no_errata_section&lt;/code&gt; .</source>
          <target state="translated">설정 &lt;code&gt;complain_stderr&lt;/code&gt; 은 또한 설정 &lt;code&gt;no_errata_section&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="10362b055af0308648ca63d33ff10a0c0f9934a6" translate="yes" xml:space="preserve">
          <source>Setting STDIN and/or STDOUT individually</source>
          <target state="translated">STDIN 및 / 또는 STDOUT 개별 설정</target>
        </trans-unit>
        <trans-unit id="7dde8cccfbe3175df65836547f417ec4e979d0f3" translate="yes" xml:space="preserve">
          <source>Setting Up Perl on Windows</source>
          <target state="translated">Windows에서 Perl 설정</target>
        </trans-unit>
        <trans-unit id="2f1417ccd3a0143c9a40476570cd8fb02ccad4ed" translate="yes" xml:space="preserve">
          <source>Setting the &lt;code&gt;%SIGRT&lt;/code&gt; elements is equivalent to calling this:</source>
          <target state="translated">&lt;code&gt;%SIGRT&lt;/code&gt; 요소를 설정하는 것은 이것을 호출하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="82ec05020c3a0391ac46c3f2c9e7e9c6639db3b3" translate="yes" xml:space="preserve">
          <source>Setting the exec bit on some locations (generally</source>
          <target state="translated">일부 위치에서 일반적으로 exec 비트 설정 (일반적으로</target>
        </trans-unit>
        <trans-unit id="7b1515ddab2e35849ea7ad601162395461e45ef5" translate="yes" xml:space="preserve">
          <source>Setting the memory limit to 0 will inhibit caching; records will be fetched from disk every time you examine them.</source>
          <target state="translated">메모리 제한을 0으로 설정하면 캐싱이 금지됩니다. 레코드는 검사 할 때마다 디스크에서 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="f70563603bae0022751c2fbafcf703970f2af6b4" translate="yes" xml:space="preserve">
          <source>Setting this adds perl command line switches to each test file run.</source>
          <target state="translated">이를 설정하면 각 테스트 파일 실행에 perl 명령 행 스위치가 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="3a36ae3404b81240dcc4f244db3b5d9e9fe68945" translate="yes" xml:space="preserve">
          <source>Setting this appropriately is useful if you want to use the RTF to spellcheck, and/or if you want it to hyphenate right.</source>
          <target state="translated">RTF를 사용하여 맞춤법을 검사하고 /하거나 하이픈을 사용하려는 경우이 설정을 적절하게 설정하면 유용합니다.</target>
        </trans-unit>
        <trans-unit id="eb28c99d71e509270976d6187ac7708f64d8198f" translate="yes" xml:space="preserve">
          <source>Setting this attribute (to a value that's a regexp) means that you want to limit the results just to items whose podnames match the given regexp. Normally this option is not needed, and the more efficient &lt;code&gt;limit_glob&lt;/code&gt; attribute is used instead.</source>
          <target state="translated">이 속성을 (정규 표현식 인 값으로) 설정하면 podname이 주어진 정규 표현식과 일치하는 항목으로 만 결과를 제한하려는 것입니다. 일반적으로이 옵션은 필요하지 않으며보다 효율적인 &lt;code&gt;limit_glob&lt;/code&gt; 속성이 대신 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="978f31a63d0a75abda9032068834ce25f6f936c4" translate="yes" xml:space="preserve">
          <source>Setting this attribute to a string value means that the searches should begin in the specified subdirectory name (like &quot;Pod&quot; or &quot;File::Find&quot;, also expressible as &quot;File/Find&quot;). For example, the search option &lt;code&gt;$search-&amp;gt;limit_glob(&quot;File::Find::R*&quot;)&lt;/code&gt; is the same as the combination of the search options &lt;code&gt;$search-&amp;gt;limit_re(&quot;^File::Find::R&quot;) -&amp;gt; dir_prefix(&quot;File::Find&quot;)&lt;/code&gt; .</source>
          <target state="translated">이 속성을 문자열 값으로 설정하면 검색이 지정된 하위 디렉토리 이름 (예 : &quot;Pod&quot;또는 &quot;File :: Find&quot;와 같이 &quot;File / Find&quot;로 표시)에서 시작해야합니다. 예를 들어, 검색 옵션 &lt;code&gt;$search-&amp;gt;limit_glob(&quot;File::Find::R*&quot;)&lt;/code&gt; 는 검색 옵션 &lt;code&gt;$search-&amp;gt;limit_re(&quot;^File::Find::R&quot;) -&amp;gt; dir_prefix(&quot;File::Find&quot;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="428f294c336f76408adb1fa256045589284c8f18" translate="yes" xml:space="preserve">
          <source>Setting this environment variable to 1 means that Perl will simply use the first suitable LSP enumerated in the catalog, which keeps</source>
          <target state="translated">이 환경 변수를 1로 설정하면 Perl이 카탈로그에 열거 된 첫 번째 적합한 LSP를 사용하기 만하면됩니다.</target>
        </trans-unit>
        <trans-unit id="4c601f26f0773d007fbfc9c3dd2bd190b39a86e1" translate="yes" xml:space="preserve">
          <source>Setting this to a true value will cause the test to ignore if the output sent by the test to the error stream does not match that declared with &lt;code&gt;test_err&lt;/code&gt; .</source>
          <target state="translated">이를 true 값으로 설정하면 테스트에서 오류 스트림으로 보낸 출력이 &lt;code&gt;test_err&lt;/code&gt; 로 선언 된 출력과 일치하지 않으면 테스트가 무시됩니다 .</target>
        </trans-unit>
        <trans-unit id="dc6a7f1ac441089e81cf334470f68a0350c3eeb4" translate="yes" xml:space="preserve">
          <source>Setting this to a true value will cause the test to ignore if the output sent by the test to the output stream does not match that declared with &lt;code&gt;test_out&lt;/code&gt; .</source>
          <target state="translated">이를 true 값으로 설정하면 테스트에서 출력 스트림으로 보낸 출력이 &lt;code&gt;test_out&lt;/code&gt; 으로 선언 된 출력과 일치하지 않으면 테스트가 무시됩니다 .</target>
        </trans-unit>
        <trans-unit id="a18b09e20cf39c98db8028c26245168d90e6eceb" translate="yes" xml:space="preserve">
          <source>Setting this to true will make the harness display the number of milliseconds each test took. You can also use</source>
          <target state="translated">이것을 true로 설정하면 하네스 디스플레이에 각 테스트에 소요 된 시간 (밀리 초)이 표시됩니다. 당신은 또한 사용할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="83b02bd49b46e2f5bcb31f889abff75ab229e8cf" translate="yes" xml:space="preserve">
          <source>Setting this variable includes the tests in</source>
          <target state="translated">이 변수를 설정하면</target>
        </trans-unit>
        <trans-unit id="748c80296dffa5e7f806097b537391f16d71d73d" translate="yes" xml:space="preserve">
          <source>Setting this variable runs all the Net::Ping modules tests, otherwise some tests that interact with the outside world are skipped. See &lt;a href=&quot;https://perldoc.perl.org/5.26.0/perl58delta.html&quot;&gt;perl58delta&lt;/a&gt;.</source>
          <target state="translated">이 변수를 설정하면 모든 Net :: Ping 모듈 테스트가 실행됩니다. 그렇지 않으면 외부 세계와 상호 작용하는 일부 테스트를 건너 뜁니다. &lt;a href=&quot;https://perldoc.perl.org/5.26.0/perl58delta.html&quot;&gt;perl58delta를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7593ed09c7d1c65b5b02df3383bcc07c6f89e435" translate="yes" xml:space="preserve">
          <source>Setting this variable skips the vrexx.t tests for OS2::REXX.</source>
          <target state="translated">이 변수를 설정하면 OS2 :: REXX에 대한 vrexx.t 테스트를 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="34781ef166af178f4a16f210ffda5361e9f8fee9" translate="yes" xml:space="preserve">
          <source>Setting this variable to any other value than &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is deprecated due to fundamental defects in its design and implementation. It is planned to remove it from a future Perl version. Its purpose was to allow your non-ASCII Perl scripts to not have to be written in UTF-8; this was useful before editors that worked on UTF-8 encoded text were common, but that was long ago. It causes problems, such as affecting the operation of other modules that aren't expecting it, causing general mayhem. Its use can lead to segfaults.</source>
          <target state="translated">설계 및 구현의 근본적인 결함으로 인해이 변수를 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 이외의 다른 값으로 설정하는 것은 더 이상 사용되지 않습니다. 향후 Perl 버전에서 제거 할 계획입니다. 그 목적은 비 ASCII Perl 스크립트를 UTF-8로 작성할 필요가 없도록하는 것입니다. UTF-8로 인코딩 된 텍스트 작업을하는 편집자들이 일반적으로 사용되기 전에는 유용했지만 오래 전에 사용되었습니다. 예상하지 못한 다른 모듈의 작동에 영향을 미쳐 일반적인 신체 상해를 유발하는 등의 문제가 발생합니다. 그것의 사용은 segfaults로 이어질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a486a54881ca4944733417c8d453b816b797adac" translate="yes" xml:space="preserve">
          <source>Setting up a cross-compilation environment</source>
          <target state="translated">크로스 컴파일 환경 설정</target>
        </trans-unit>
        <trans-unit id="6edda08937ce5437ef2f9deb1364a59b1289c766" translate="yes" xml:space="preserve">
          <source>Setting up a signal handler will need to be carefully considered and controlled. What mask is in effect when a signal handler gets called? If a user can get an imported function to get an exception and call the user's signal handler, does that user's restricted mask get re-instated before the handler is called? Does an imported handler get called with its original mask or the user's one?</source>
          <target state="translated">신호 처리기 설정을 신중하게 고려하고 제어해야합니다. 신호 처리기가 호출 될 때 어떤 마스크가 적용됩니까? 사용자가 가져온 함수에서 예외를 가져 와서 사용자의 신호 처리기를 호출 할 수있는 경우 처리기가 호출되기 전에 해당 사용자의 제한된 마스크가 복원됩니까? 가져온 핸들러는 원래 마스크 또는 사용자 마스크로 호출됩니까?</target>
        </trans-unit>
        <trans-unit id="8a164660ff7c0aea058ea9a4d65db581e8d4cbe7" translate="yes" xml:space="preserve">
          <source>Setting up tests</source>
          <target state="translated">테스트 설정</target>
        </trans-unit>
        <trans-unit id="13bf8ac5cbad88170c30283bc7715ae8986fb23c" translate="yes" xml:space="preserve">
          <source>Setuid scripts have additional constraints that can produce error messages such as &quot;Insecure dependency&quot;. See &lt;a href=&quot;perlsec&quot;&gt;perlsec&lt;/a&gt;.</source>
          <target state="translated">Setuid 스크립트에는 &quot;안전하지 않은 종속성&quot;과 같은 오류 메시지를 생성 할 수있는 추가 제약 조건이 있습니다. &lt;a href=&quot;perlsec&quot;&gt;perlsec을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cdd7bb2816b7a8f88bce0e47be39943bc369516b" translate="yes" xml:space="preserve">
          <source>Setup</source>
          <target state="translated">Setup</target>
        </trans-unit>
        <trans-unit id="7542e5edaf78a7e51c593cd897bf4d6df150673c" translate="yes" xml:space="preserve">
          <source>Setup and utilities for Perl on OS/390</source>
          <target state="translated">OS / 390에서 Perl의 설정 및 유틸리티</target>
        </trans-unit>
        <trans-unit id="e42bc033db0c04c8f20ac694388fa4c4bbcb2050" translate="yes" xml:space="preserve">
          <source>Several &quot;Eskimo&quot; languages.</source>
          <target state="translated">몇 가지 &quot;에스키모&quot;언어.</target>
        </trans-unit>
        <trans-unit id="a5a086e14a1c43e8380db16eefaab3f189882d72" translate="yes" xml:space="preserve">
          <source>Several CPAN modules may be able to help, including &lt;a href=&quot;ipc/open2&quot;&gt;IPC::Open2&lt;/a&gt; or &lt;a href=&quot;ipc/open3&quot;&gt;IPC::Open3&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/IPC::Run&quot;&gt;IPC::Run&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/Parallel::Jobs&quot;&gt;Parallel::Jobs&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/Parallel::ForkManager&quot;&gt;Parallel::ForkManager&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/POE&quot;&gt;POE&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/Proc::Background&quot;&gt;Proc::Background&lt;/a&gt;, and &lt;a href=&quot;http://search.cpan.org/perldoc/Win32::Process&quot;&gt;Win32::Process&lt;/a&gt;. There are many other modules you might use, so check those namespaces for other options too.</source>
          <target state="translated">&lt;a href=&quot;ipc/open2&quot;&gt;IPC :: Open2&lt;/a&gt; 또는 &lt;a href=&quot;ipc/open3&quot;&gt;IPC :: Open3&lt;/a&gt; , &lt;a href=&quot;http://search.cpan.org/perldoc/IPC::Run&quot;&gt;IPC :: Run&lt;/a&gt; , &lt;a href=&quot;http://search.cpan.org/perldoc/Parallel::Jobs&quot;&gt;Parallel :: Jobs&lt;/a&gt; , &lt;a href=&quot;http://search.cpan.org/perldoc/Parallel::ForkManager&quot;&gt;Parallel :: ForkManager&lt;/a&gt; , &lt;a href=&quot;http://search.cpan.org/perldoc/POE&quot;&gt;POE&lt;/a&gt; , &lt;a href=&quot;http://search.cpan.org/perldoc/Proc::Background&quot;&gt;Proc :: Background&lt;/a&gt; 및 &lt;a href=&quot;http://search.cpan.org/perldoc/Win32::Process&quot;&gt;Win32 :: Process를&lt;/a&gt; 포함한 여러 CPAN 모듈이 도움이 될 수 있습니다 . 사용할 수있는 다른 많은 모듈이 있으므로 해당 네임 스페이스에서 다른 옵션도 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="72ba89d4b4f03b960d7a7c1b62fec8c497398f12" translate="yes" xml:space="preserve">
          <source>Several Perl functions and modules depend on the existence of some optional libraries. Configure will find them if they are installed in one of the directories listed as being used for library searches. Pre-built packages for most of these are available from the Cygwin installer.</source>
          <target state="translated">여러 Perl 함수 및 모듈은 일부 선택적 라이브러리의 존재에 의존합니다. 라이브러리 검색에 사용되는 것으로 나열된 디렉토리 중 하나에 설치되어 있으면 Configure에서 해당 파일을 찾습니다. 대부분의 사전 빌드 패키지는 Cygwin 설치 프로그램에서 구할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b507fbc9e6ee713770906faa20b03579b86f6852" translate="yes" xml:space="preserve">
          <source>Several Unix/Linux related magazines frequently include articles on Perl.</source>
          <target state="translated">몇몇 유닉스 / 리눅스 관련 잡지에는 종종 Perl에 관한 기사가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="36833c191e11bf7ea7ef7228e804dddd43eea89d" translate="yes" xml:space="preserve">
          <source>Several cleanups prompted by lack of compatible perlglob.exe under Borland (GSAR 27-MAY-97)</source>
          <target state="translated">Borland (GSAR 27-MAY-97)에서 호환 가능한 perlglob.exe가 없어서 여러 가지 정리가 필요했습니다.</target>
        </trans-unit>
        <trans-unit id="db13e38fcdff385659bc07b56eda3f3ec8420c2f" translate="yes" xml:space="preserve">
          <source>Several configuration variables can be used to control the kind of output generated when using the procedural interface. These variables are usually &lt;code&gt;&lt;a href=&quot;../functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt;ized in a block so that other parts of the code are not affected by the change.</source>
          <target state="translated">절차 인터페이스를 사용할 때 생성되는 출력 종류를 제어하기 위해 여러 구성 변수를 사용할 수 있습니다. 이러한 변수는 보통 &lt;code&gt;&lt;a href=&quot;../functions/local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; 코드의 다른 부분이 변경에 의해 영향을받지 않도록 블록화된.</target>
        </trans-unit>
        <trans-unit id="025ea220ceeecd1a101f60931a1651e8d46a3ae1" translate="yes" xml:space="preserve">
          <source>Several constructs above specify a character by a number. That number gives the character's position in the character set encoding (indexed from 0). This is called synonymously its ordinal, code position, or code point. Perl works on platforms that have a native encoding currently of either ASCII/Latin1 or EBCDIC, each of which allow specification of 256 characters. In general, if the number is 255 (0xFF, 0377) or below, Perl interprets this in the platform's native encoding. If the number is 256 (0x100, 0400) or above, Perl interprets it as a Unicode code point and the result is the corresponding Unicode character. For example &lt;code&gt;\x{50}&lt;/code&gt; and &lt;code&gt;\o{120}&lt;/code&gt; both are the number 80 in decimal, which is less than 256, so the number is interpreted in the native character set encoding. In ASCII the character in the 80th position (indexed from 0) is the letter &lt;code&gt;&quot;P&quot;&lt;/code&gt; , and in EBCDIC it is the ampersand symbol &lt;code&gt;&quot;&amp;amp;&quot;&lt;/code&gt; . &lt;code&gt;\x{100}&lt;/code&gt; and &lt;code&gt;\o{400}&lt;/code&gt; are both 256 in decimal, so the number is interpreted as a Unicode code point no matter what the native encoding is. The name of the character in the 256th position (indexed by 0) in Unicode is &lt;code&gt;LATIN CAPITAL LETTER A WITH MACRON&lt;/code&gt; .</source>
          <target state="translated">위의 여러 구문은 숫자로 문자를 지정합니다. 이 숫자는 문자 세트 인코딩에서 문자의 위치를 ​​나타냅니다 (0에서 색인화 됨). 이것을 서수, 코드 위치 또는 코드 포인트와 동의어로 부릅니다. Perl은 현재 ASCII / Latin1 또는 EBCDIC의 기본 인코딩이있는 플랫폼에서 작동하며 각각 256 자 지정이 가능합니다. 일반적으로 숫자가 255 (0xFF, 0377) 이하인 경우 Perl은이를 플랫폼의 기본 인코딩으로 해석합니다. 숫자가 256 (0x100, 0400) 이상인 경우 Perl은이를 유니 코드 코드 포인트로 해석하고 결과는 해당 유니 코드 문자입니다. 예를 들어 &lt;code&gt;\x{50}&lt;/code&gt; 및 &lt;code&gt;\o{120}&lt;/code&gt; 둘 다 10 진수로 된 80이며 256보다 작으므로 숫자는 기본 문자 세트 인코딩으로 해석됩니다. ASCII에서 80 번째 위치 (0에서 색인 됨)의 문자는 문자 &lt;code&gt;&quot;P&quot;&lt;/code&gt; 이고 EBCDIC에서는 앰퍼샌드 기호 &lt;code&gt;&quot;&amp;amp;&quot;&lt;/code&gt; 입니다. &lt;code&gt;\x{100}&lt;/code&gt; 및 &lt;code&gt;\o{400}&lt;/code&gt; 은 10 진수로 256이므로 숫자는 기본 인코딩이 무엇이든 유니 코드 코드 포인트로 해석됩니다. 유니 코드에서 256 번째 위치 (0으로 색인 됨)의 문자 이름은 &lt;code&gt;LATIN CAPITAL LETTER A WITH MACRON&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="dbb881b9834838039d809c3bb093fb3ca4e17bb6" translate="yes" xml:space="preserve">
          <source>Several modules can handle this sort of parsing--&lt;a href=&quot;text/balanced&quot;&gt;Text::Balanced&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/Text::CSV&quot;&gt;Text::CSV&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/Text::CSV_XS&quot;&gt;Text::CSV_XS&lt;/a&gt;, and &lt;a href=&quot;text/parsewords&quot;&gt;Text::ParseWords&lt;/a&gt;, among others.</source>
          <target state="translated">여러 가지 모듈 (예 &lt;a href=&quot;text/balanced&quot;&gt;: Text :: Balanced&lt;/a&gt; , &lt;a href=&quot;http://search.cpan.org/perldoc/Text::CSV&quot;&gt;Text :: CSV&lt;/a&gt; , &lt;a href=&quot;http://search.cpan.org/perldoc/Text::CSV_XS&quot;&gt;Text :: CSV_XS&lt;/a&gt; 및 &lt;a href=&quot;text/parsewords&quot;&gt;Text :: ParseWords&lt;/a&gt; )을 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="ec37cc7162eb28d20005e06a7dec3c5b338debaf" translate="yes" xml:space="preserve">
          <source>Several modules let you calculate with unlimited or fixed precision (bound only by memory and CPU time). There are also some non-standard modules that provide faster implementations via external C libraries.</source>
          <target state="translated">여러 모듈을 통해 무제한 또는 고정 정밀도로 계산할 수 있습니다 (메모리 및 CPU 시간에 의해서만 바인딩 됨). 외부 C 라이브러리를 통해 더 빠른 구현을 제공하는 비표준 모듈도 있습니다.</target>
        </trans-unit>
        <trans-unit id="67c147f88fedb964246268fefad75f6aa72aeeaf" translate="yes" xml:space="preserve">
          <source>Several other minor changes</source>
          <target state="translated">다른 몇 가지 사소한 변경</target>
        </trans-unit>
        <trans-unit id="cbd707922dc7f0ac0b710570868c333b9e909d87" translate="yes" xml:space="preserve">
          <source>Several parameters correspond to &lt;code&gt;ExtUtils::Mksymlists::Mksymlists()&lt;/code&gt; options, as follows:</source>
          <target state="translated">여러 매개 변수가 &lt;code&gt;ExtUtils::Mksymlists::Mksymlists()&lt;/code&gt; 다음과 같이 옵션에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="51ce731fa04ac92371342430f3071e509e7a9526" translate="yes" xml:space="preserve">
          <source>Several required files will still be missing:</source>
          <target state="translated">몇 가지 필요한 파일이 여전히 없습니다.</target>
        </trans-unit>
        <trans-unit id="12bb0a278c9f044c640d0d62fedbff6f2aff8b1d" translate="yes" xml:space="preserve">
          <source>Several special variables also refer back to portions of the previous match. &lt;code&gt;$+&lt;/code&gt; returns whatever the last bracket match matched. &lt;code&gt;$&amp;amp;&lt;/code&gt; returns the entire matched string. (At one point &lt;code&gt;$0&lt;/code&gt; did also, but now it returns the name of the program.) &lt;code&gt;$`&lt;/code&gt; returns everything before the matched string. &lt;code&gt;$'&lt;/code&gt; returns everything after the matched string. And &lt;code&gt;$^N&lt;/code&gt; contains whatever was matched by the most-recently closed group (submatch). &lt;code&gt;$^N&lt;/code&gt; can be used in extended patterns (see below), for example to assign a submatch to a variable.</source>
          <target state="translated">여러 특수 변수도 이전 일치 부분을 다시 참조합니다. &lt;code&gt;$+&lt;/code&gt; 는 마지막 대괄호 일치 항목을 모두 반환합니다. &lt;code&gt;$&amp;amp;&lt;/code&gt; 는 일치하는 전체 문자열을 반환합니다. (한 번에 &lt;code&gt;$0&lt;/code&gt; 도 수행했지만 이제는 프로그램 이름을 반환합니다.) &lt;code&gt;$`&lt;/code&gt; 는 일치하는 문자열 앞에 모든 것을 반환합니다. &lt;code&gt;$'&lt;/code&gt; 는 일치하는 문자열 뒤의 모든 것을 반환합니다. 그리고 &lt;code&gt;$^N&lt;/code&gt; 에는 가장 최근에 닫힌 그룹 (하위 일치)과 일치하는 항목이 포함됩니다. &lt;code&gt;$^N&lt;/code&gt; 은 확장 패턴 (아래 참조)으로 사용될 수 있습니다 (예 : 변수에 하위 일치를 할당하기 위해).</target>
        </trans-unit>
        <trans-unit id="353c61ff546c0748767d65edffd80e2d9a48d8cb" translate="yes" xml:space="preserve">
          <source>Several styles of output are possible, all controlled by setting the &lt;code&gt;Indent&lt;/code&gt; flag. See &lt;a href=&quot;#Configuration-Variables-or-Methods&quot;&gt;Configuration Variables or Methods&lt;/a&gt; below for details.</source>
          <target state="translated">&lt;code&gt;Indent&lt;/code&gt; 플래그 를 설정하여 여러 가지 스타일의 출력이 가능합니다 . 자세한 내용은 아래 &lt;a href=&quot;#Configuration-Variables-or-Methods&quot;&gt;구성 변수 또는 방법을&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b3fa635b974cdf4d0bafcdf7021b5b41371ca982" translate="yes" xml:space="preserve">
          <source>Several tools needed to build perl are located in /usr/ccs/bin/: ar, as, ld, and make. Make sure that /usr/ccs/bin/ is in your PATH.</source>
          <target state="translated">perl을 빌드하는 데 필요한 여러 도구는 / usr / ccs / bin / : ar, as, ld 및 make에 있습니다. / usr / ccs / bin /이 PATH에 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="e75716eac93d8afc288ec94b4c657ebfcf948efd" translate="yes" xml:space="preserve">
          <source>Severe warnings are always enabled, unless they are explicitly disabled with the &lt;code&gt;warnings&lt;/code&gt; pragma or the &lt;b&gt;-X&lt;/b&gt; switch.</source>
          <target state="translated">&lt;code&gt;warnings&lt;/code&gt; pragma 또는 &lt;b&gt;-X&lt;/b&gt; 스위치를 사용하여 명시 적으로 비활성화하지 않으면 심각한 경고가 항상 활성화 됩니다.</target>
        </trans-unit>
        <trans-unit id="e7dd772b3854a8bc3b300bf85e9a40b9bf25a50f" translate="yes" xml:space="preserve">
          <source>Shall we always set the FTP_PASSIVE environment variable when dealing with ftp download (yes/no)?</source>
          <target state="translated">ftp 다운로드를 처리 할 때 항상 FTP_PASSIVE 환경 변수를 설정해야합니까 (예 / 아니요)?</target>
        </trans-unit>
        <trans-unit id="b8bf62db0a202cfe8b527778be027079163e0d35" translate="yes" xml:space="preserve">
          <source>Share what you did with the other people. Relax. Enjoy fruits of your work.</source>
          <target state="translated">다른 사람들과 자신이 한 일을 공유하십시오. 편하게 하다. 당신의 일의 과일을 즐기십시오.</target>
        </trans-unit>
        <trans-unit id="df3c637adb69abac13b29419d0cfa8b766ae4adc" translate="yes" xml:space="preserve">
          <source>Shared And Unshared Data</source>
          <target state="translated">공유 및 비공유 데이터</target>
        </trans-unit>
        <trans-unit id="2ad8427c8c9758999d3e74a7bdd5fb7162a57750" translate="yes" xml:space="preserve">
          <source>Shared libraries created on a platform using a particular PA-RISC version are not usable on platforms using an earlier PA-RISC version by default. However, this backwards compatibility may be enabled using the same +DAportable compiler flag (with the same PA-RISC 1.0 caveat mentioned above).</source>
          <target state="translated">특정 PA-RISC 버전을 사용하는 플랫폼에서 생성 된 공유 라이브러리는 기본적으로 이전 PA-RISC 버전을 사용하는 플랫폼에서는 사용할 수 없습니다. 그러나이 이전 버전과의 호환성은 동일한 + DAportable 컴파일러 플래그를 사용하여 활성화 할 수 있습니다 (위에서 언급 한 동일한 PA-RISC 1.0 경고와 함께).</target>
        </trans-unit>
        <trans-unit id="193a001ab941319380e15850d6f5c791732088df" translate="yes" xml:space="preserve">
          <source>Shared libraries created on an Itanium platform cannot be loaded on a PA-RISC platform. Shared libraries created on a PA-RISC platform can only be loaded on an Itanium platform if it is a PA-RISC executable that is attempting to load the PA-RISC library. A PA-RISC shared library cannot be loaded into an Itanium executable nor vice-versa.</source>
          <target state="translated">Itanium 플랫폼에서 생성 된 공유 라이브러리는 PA-RISC 플랫폼에로드 할 수 없습니다. PA-RISC 플랫폼에서 작성된 공유 라이브러리는 PA-RISC 라이브러리를로드하려는 PA-RISC 실행 파일 인 경우 Itanium 플랫폼에서만로드 할 수 있습니다. PA-RISC 공유 라이브러리는 Itanium 실행 파일로로드하거나 그 반대로로드 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="6953ee78fc5edeec2d6a50098821da893b0458f7" translate="yes" xml:space="preserve">
          <source>Shared references among objects will not stay shared: if we're serializing the list of object [A, C] where both object A and C refer to the SAME object B, and if there is a serializing hook in A that says freeze(B), then when deserializing, we'll get [A', C'] where A' refers to B', but C' refers to D, a deep clone of B'. The topology was not preserved.</source>
          <target state="translated">객체 간 공유 참조는 공유 상태를 유지하지 않습니다. 객체 A와 C가 모두 SAME 객체 B를 참조하는 객체 [A, C] 목록을 직렬화하는 경우, A에 직렬화 후크 (freeze (B)가 있음)가있는 경우 )를 deserialize 할 때 A '는 B'를 나타내지 만 C '는 B'의 깊은 클론 D를 나타냅니다. 토폴로지가 유지되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="f728eba8dfb3236f1667f74466840c95e5a7b8ee" translate="yes" xml:space="preserve">
          <source>Shared variables can only store scalars, refs of shared variables, or refs of shared data (discussed in next section):</source>
          <target state="translated">공유 변수는 스칼라, 공유 변수의 참조 또는 공유 데이터의 참조 만 저장할 수 있습니다 (다음 섹션에서 설명).</target>
        </trans-unit>
        <trans-unit id="001c163e34c30bd422c6c0b180836b52f1afdb17" translate="yes" xml:space="preserve">
          <source>Sharing Databases With C Applications</source>
          <target state="translated">C 애플리케이션과 데이터베이스 공유</target>
        </trans-unit>
        <trans-unit id="bd8715c47f235864c2ceb04d785a7b7ec14fa56b" translate="yes" xml:space="preserve">
          <source>Sharing typemaps Between CPAN Distributions</source>
          <target state="translated">CPAN 배포간에 유형 맵 공유</target>
        </trans-unit>
        <trans-unit id="0a07afc00eaa14a561ef50fb9dc88822e22b041a" translate="yes" xml:space="preserve">
          <source>Sharp shell programmers should take note of the following:</source>
          <target state="translated">샤프 쉘 프로그래머는 다음 사항에 유의해야합니다.</target>
        </trans-unit>
        <trans-unit id="6aa79f294b4ff3f2bd0e6980c0d9d3429325e3b2" translate="yes" xml:space="preserve">
          <source>Shawn M Moore &lt;code&gt;sartak@gmail.com&lt;/code&gt;</source>
          <target state="translated">숀 M 무어 &lt;code&gt;sartak@gmail.com&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="46f2fc676064cd202c006928e29b43973667f22c" translate="yes" xml:space="preserve">
          <source>Shell Traps</source>
          <target state="translated">쉘 트랩</target>
        </trans-unit>
        <trans-unit id="05e1aa29dff23edb2a5976ffe3e3f5926084ec96" translate="yes" xml:space="preserve">
          <source>Shell escapes newlines in $text.</source>
          <target state="translated">쉘은 $ text에서 줄 바꿈을 피합니다.</target>
        </trans-unit>
        <trans-unit id="411430d5faea18a48223083d430d03ec02723be9" translate="yes" xml:space="preserve">
          <source>Shell mode</source>
          <target state="translated">쉘 모드</target>
        </trans-unit>
        <trans-unit id="ae8110256e73e2d29bfd2b0361c6084818dcf5fb" translate="yes" xml:space="preserve">
          <source>Shell variables from the</source>
          <target state="translated">쉘 변수</target>
        </trans-unit>
        <trans-unit id="a5efec93b7817b727267bf3e97356065022021aa" translate="yes" xml:space="preserve">
          <source>Shell::Command which is these same functions but take arguments normally.</source>
          <target state="translated">Shell :: Command는 동일한 기능이지만 일반적으로 인수를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="5597033de9e3a9ee3ab28b086225929f8384f842" translate="yes" xml:space="preserve">
          <source>Shells (especially &lt;b&gt;csh&lt;/b&gt;) do several levels of substitution on each command line. Perl does substitution in only certain constructs such as double quotes, backticks, angle brackets, and search patterns.</source>
          <target state="translated">쉘 (특히 &lt;b&gt;csh&lt;/b&gt; )은 각 명령 행에서 여러 레벨의 대체를 수행합니다. Perl은 큰 따옴표, 백틱, 꺾쇠 괄호 및 검색 패턴과 같은 특정 구문에서만 대체를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="c3085316e59739c3d0881dec21da7ebe8e1387d1" translate="yes" xml:space="preserve">
          <source>Shells interpret scripts a little bit at a time. Perl compiles the entire program before executing it (except for &lt;code&gt;BEGIN&lt;/code&gt; blocks, which execute at compile time).</source>
          <target state="translated">쉘은 한 번에 조금씩 스크립트를 해석합니다. Perl은 프로그램을 실행하기 전에 전체 프로그램을 컴파일합니다 ( 컴파일시 실행되는 &lt;code&gt;BEGIN&lt;/code&gt; 블록 제외 ).</target>
        </trans-unit>
        <trans-unit id="d740f71b4c0205327f8285c81beee6b58843073b" translate="yes" xml:space="preserve">
          <source>Shift Operators</source>
          <target state="translated">시프트 연산자</target>
        </trans-unit>
        <trans-unit id="53ffaf0e7e7ca17703b35ea2272d3800a2b8789e" translate="yes" xml:space="preserve">
          <source>Shift object N digits right in base B and return the resulting object. This is equivalent to performing integer division by B**N and discarding the remainder, except that it might be much faster, depending on how the number is represented internally.</source>
          <target state="translated">베이스 B에서 오브젝트 N 숫자를 오른쪽으로 시프트하고 결과 오브젝트를 리턴하십시오. 이것은 B ** N으로 정수 나누기를 수행하고 나머지가 버리는 것을 제외하고는 숫자가 내부적으로 표현되는 방식에 따라 훨씬 빠를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="816ba91c6c549fed8497fc4ed9fd5be93db7467c" translate="yes" xml:space="preserve">
          <source>Shift the object N digits left in base B. This is equivalent to multiplying by B**N, except that it might be much faster, depending on how the number is represented internally.</source>
          <target state="translated">B 자의 왼쪽에있는 개체 N 자릿수를 이동합니다. 이는 숫자가 내부적으로 표현되는 방식에 따라 훨씬 빠를 수 있다는 점을 제외하고 B ** N을 곱하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2bbd5485928f42790ecd61230b448ed394726e75" translate="yes" xml:space="preserve">
          <source>Shifts $x right by $y in base $n. Default is base 2, used are usually 10 and 2, but others work, too.</source>
          <target state="translated">기본 $ n에서 $ x를 $ y만큼 오른쪽으로 이동합니다. 기본값은 기본 2이며, 일반적으로 10과 2가 사용되지만 다른 것도 작동합니다.</target>
        </trans-unit>
        <trans-unit id="cab6779d1c4d586e5a686816d2490a5a885e59ca" translate="yes" xml:space="preserve">
          <source>Shifts the first value of the array off and returns it, shortening the array by 1 and moving everything down. If there are no elements in the array, returns the undefined value. If ARRAY is omitted, shifts the &lt;code&gt;@_&lt;/code&gt; array within the lexical scope of subroutines and formats, and the &lt;code&gt;@ARGV&lt;/code&gt; array outside a subroutine and also within the lexical scopes established by the &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt; STRING&lt;/code&gt; , &lt;code&gt;BEGIN {}&lt;/code&gt; , &lt;code&gt;INIT {}&lt;/code&gt; , &lt;code&gt;CHECK {}&lt;/code&gt; , &lt;code&gt;UNITCHECK {}&lt;/code&gt; , and &lt;code&gt;END {}&lt;/code&gt; constructs.</source>
          <target state="translated">배열의 첫 번째 값을 끄고 반환하여 배열을 1만큼 줄이고 모든 것을 아래로 이동합니다. 배열에 요소가 없으면 정의되지 않은 값을 반환합니다. ARRAY가 생략되면, 시프트 &lt;code&gt;@_&lt;/code&gt; 루틴과 형식의 어휘 범위 내에서 배열하고, &lt;code&gt;@ARGV&lt;/code&gt; 의 어휘 범위에 의해 설정된 서브 루틴 외부 또한 내에 배열 &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt; STRING&lt;/code&gt; , &lt;code&gt;BEGIN {}&lt;/code&gt; , &lt;code&gt;INIT {}&lt;/code&gt; , &lt;code&gt;CHECK {}&lt;/code&gt; , &lt;code&gt;UNITCHECK {}&lt;/code&gt; 및 &lt;code&gt;END {}&lt;/code&gt; 구문입니다.</target>
        </trans-unit>
        <trans-unit id="ceb6ece5170a4ff335501d527cf25219b25ce8af" translate="yes" xml:space="preserve">
          <source>Shifts the first value of the array off and returns it, shortening the array by 1 and moving everything down. If there are no elements in the array, returns the undefined value. If ARRAY is omitted, shifts the &lt;code&gt;@_&lt;/code&gt; array within the lexical scope of subroutines and formats, and the &lt;code&gt;@ARGV&lt;/code&gt; array outside a subroutine and also within the lexical scopes established by the &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; STRING&lt;/code&gt; , &lt;code&gt;BEGIN {}&lt;/code&gt; , &lt;code&gt;INIT {}&lt;/code&gt; , &lt;code&gt;CHECK {}&lt;/code&gt; , &lt;code&gt;UNITCHECK {}&lt;/code&gt; , and &lt;code&gt;END {}&lt;/code&gt; constructs.</source>
          <target state="translated">배열의 첫 번째 값을 끄고 반환하여 배열을 1만큼 줄이고 모든 것을 아래로 이동합니다. 배열에 요소가 없으면 정의되지 않은 값을 반환합니다. ARRAY가 생략되면, 시프트 &lt;code&gt;@_&lt;/code&gt; 루틴과 형식의 어휘 범위 내에서 배열하고, &lt;code&gt;@ARGV&lt;/code&gt; 의 어휘 범위에 의해 설정된 서브 루틴 외부 또한 내에 배열 &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; STRING&lt;/code&gt; , &lt;code&gt;BEGIN {}&lt;/code&gt; , &lt;code&gt;INIT {}&lt;/code&gt; , &lt;code&gt;CHECK {}&lt;/code&gt; , &lt;code&gt;UNITCHECK {}&lt;/code&gt; 및 &lt;code&gt;END {}&lt;/code&gt; 구문입니다.</target>
        </trans-unit>
        <trans-unit id="e560762a5e85f4245145df0a3d5f14955ebfbe7e" translate="yes" xml:space="preserve">
          <source>Short for &amp;ldquo;an instance of a class&amp;rdquo;, meaning an &lt;b&gt;object&lt;/b&gt; of that &lt;b&gt;class&lt;/b&gt;.</source>
          <target state="translated">&quot;클래스의 인스턴스&quot;의 약어로, 해당 &lt;b&gt;클래스&lt;/b&gt; 의 &lt;b&gt;객체&lt;/b&gt; 를 의미합니다 .&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="bf0f9ba179007d01df18b67571c95890eacf53a2" translate="yes" xml:space="preserve">
          <source>Short for &amp;ldquo;array value&amp;rdquo;, which refers to one of Perl&amp;rsquo;s internal data types that holds an &lt;b&gt;array&lt;/b&gt;. The &lt;code&gt;AV&lt;/code&gt; type is a subclass of &lt;b&gt;SV&lt;/b&gt;.</source>
          <target state="translated">&amp;ldquo;배열 값&amp;rdquo;의 약어로, &lt;b&gt;배열&lt;/b&gt; 을 보유하는 Perl의 내부 데이터 유형 중 하나를 나타냅니다 . &lt;code&gt;AV&lt;/code&gt; 의 유형의 서브 클래스입니다 &lt;b&gt;SV&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="daa4e28096f49e40bca183e69c8dbf8fb7d81587" translate="yes" xml:space="preserve">
          <source>Short for &amp;ldquo;scalar value&amp;rdquo;. But within the Perl interpreter, every &lt;b&gt;referent&lt;/b&gt; is treated as a member of a class derived from SV, in an object-oriented sort of way. Every &lt;b&gt;value&lt;/b&gt; inside Perl is passed around as a C language &lt;code&gt;SV*&lt;/code&gt; pointer. The SV &lt;b&gt;struct&lt;/b&gt; knows its own &amp;ldquo;referent type&amp;rdquo;, and the code is smart enough (we hope) not to try to call a &lt;b&gt;hash&lt;/b&gt; function on a &lt;b&gt;subroutine&lt;/b&gt;.</source>
          <target state="translated">&quot;스칼라 값&quot;의 줄임말입니다. 그러나 Perl 인터프리터 내에서 모든 &lt;b&gt;지시자&lt;/b&gt; 는 객체 지향적 인 방식으로 SV에서 파생 된 클래스의 멤버로 취급됩니다. Perl 내부의 모든 &lt;b&gt;값&lt;/b&gt; 은 C 언어 &lt;code&gt;SV*&lt;/code&gt; 포인터 로 전달됩니다 . SV &lt;b&gt;구조체&lt;/b&gt; 는 자체 &quot;참조 유형&quot;을 알고 있으며 코드는 똑똑 하여 &lt;b&gt;서브 루틴&lt;/b&gt; 에서 &lt;b&gt;해시&lt;/b&gt; 함수 를 호출하지 않을 것 입니다.&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="5d19c4596f6bfea39cf19abcb0120dd79077a176" translate="yes" xml:space="preserve">
          <source>Short for &lt;b&gt;scratchpad&lt;/b&gt;.</source>
          <target state="translated">에 대한 짧은 &lt;b&gt;스크래치&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="11be5993935a64f6ec9ea9395f4cafbeb6afecc6" translate="yes" xml:space="preserve">
          <source>Short for Nevada, no part of which will ever be confused with civilization. NV also means an internal floating- point Numeric Value of the type a &lt;b&gt;scalar&lt;/b&gt; can hold, not to be confused with an &lt;b&gt;IV&lt;/b&gt;.</source>
          <target state="translated">네바다의 약자이며 그 어느 부분도 문명과 혼동되지 않습니다. NV는 또한 &lt;b&gt;스칼라&lt;/b&gt; 가 보유 할 수 있는 유형의 내부 부동 소수점 숫자 값을 의미 하며 &lt;b&gt;IV&lt;/b&gt; 와 혼동하지 않아야합니다 .</target>
        </trans-unit>
        <trans-unit id="753c68d3ba41db74e4df8914f2ce920431708ec4" translate="yes" xml:space="preserve">
          <source>Short for Transmission Control Protocol. A protocol wrapped around the Internet Protocol to make an unreliable packet transmission mechanism appear to the application program to be a reliable &lt;b&gt;stream&lt;/b&gt; of bytes. (Usually.)</source>
          <target state="translated">전송 제어 프로토콜의 약자. 신뢰할 수없는 패킷 전송 메커니즘이 응용 프로그램에 신뢰할 수있는 바이트 &lt;b&gt;스트림&lt;/b&gt; 인 것처럼 보이도록 인터넷 프로토콜을 감싸는 프로토콜 입니다. (보통.)</target>
        </trans-unit>
        <trans-unit id="dc5ee68c69bf44299748c4c256b80c120fb271e9" translate="yes" xml:space="preserve">
          <source>Short for a &amp;ldquo;hash value&amp;rdquo; typedef, which holds Perl&amp;rsquo;s internal representation of a hash. The &lt;code&gt;HV&lt;/code&gt; type is a subclass of &lt;b&gt;SV&lt;/b&gt;.</source>
          <target state="translated">&quot;해시 값&quot;typedef의 약자로, Perl의 내부 해시 표현을 보유합니다. &lt;code&gt;HV&lt;/code&gt; 의 유형의 서브 클래스입니다 &lt;b&gt;SV&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="641d12dc5680debd9252f30257e835d77f2b58b5" translate="yes" xml:space="preserve">
          <source>Short for a &amp;ldquo;terminal&amp;rdquo;&amp;mdash;that is, a leaf node of a &lt;b&gt;syntax tree&lt;/b&gt;. A thing that functions grammatically as an &lt;b&gt;operand&lt;/b&gt; for the operators in an expression.</source>
          <target state="translated">&quot;터미널&quot;의 약어, 즉 &lt;b&gt;구문 트리&lt;/b&gt; 의 리프 노드입니다 . 표현식에서 연산자 의 &lt;b&gt;피연산자&lt;/b&gt; 로 문법적으로 기능하는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="2a34ff2be32b26b7b9b0b3b4f346552a9899d102" translate="yes" xml:space="preserve">
          <source>Short for one member of &lt;b&gt;Perl mongers&lt;/b&gt;, a purveyor of Perl.</source>
          <target state="translated">&lt;b&gt;Perl&lt;/b&gt; 의 공급 업체 인 Perl &lt;b&gt;mongers&lt;/b&gt; 의 한 멤버의 &lt;b&gt;약자&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="215e423928369d110ed59f1768219b3b38101a83" translate="yes" xml:space="preserve">
          <source>Short integers. This is equivalent to T_IV but explicitly casts the return to type &lt;code&gt;short&lt;/code&gt; . The default typemap for &lt;code&gt;short&lt;/code&gt; is T_IV.</source>
          <target state="translated">짧은 정수. 이것은 T_IV와 동일하지만 리턴 값을 &lt;code&gt;short&lt;/code&gt; 유형으로 명시 적으로 캐스트합니다 . &lt;code&gt;short&lt;/code&gt; 의 기본 유형 맵 은 T_IV입니다.</target>
        </trans-unit>
        <trans-unit id="e173f44ce033e23615a07008598ed98e0724ec82" translate="yes" xml:space="preserve">
          <source>Short of loading the file into a database or pre-indexing the lines in the file, there are a couple of things that you can do.</source>
          <target state="translated">파일을 데이터베이스에로드하거나 파일의 행을 사전 인덱싱하지 않으면 몇 가지 작업을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="342f19ffca54484d831bc22d60422377cb72128f" translate="yes" xml:space="preserve">
          <source>Short summary: You need to create a package that defines four methods:</source>
          <target state="translated">간단한 요약 : 네 가지 방법을 정의하는 패키지를 만들어야합니다.</target>
        </trans-unit>
        <trans-unit id="c1b21662873145e63208c0c220c63eecf3382545" translate="yes" xml:space="preserve">
          <source>Short tests may produce negative figures because perl can appear to take longer to execute the empty loop than a short test; try:</source>
          <target state="translated">펄은 짧은 테스트보다 빈 루프를 실행하는 데 더 오래 걸리는 것처럼 보일 수 있으므로 짧은 테스트는 음의 수치를 생성 할 수 있습니다. 시험:</target>
        </trans-unit>
        <trans-unit id="3c291d239a5572586d5800f8940e243040b2c7b5" translate="yes" xml:space="preserve">
          <source>Shortcomings of Perl under AmigaOS</source>
          <target state="translated">AmigaOS에서 Perl의 단점</target>
        </trans-unit>
        <trans-unit id="fa78e77c849e3197f1c80d2dbbfe4db374f3b001" translate="yes" xml:space="preserve">
          <source>Shortcomings of Perl under DOS</source>
          <target state="translated">DOS에서 Perl의 단점</target>
        </trans-unit>
        <trans-unit id="a84b9d9cc1ba4235d4b9a38a4443bc225f0a9d86" translate="yes" xml:space="preserve">
          <source>Should I do anything special if I call perl from multiple threads?</source>
          <target state="translated">여러 스레드에서 perl을 호출하면 특별한 작업을 수행해야합니까?</target>
        </trans-unit>
        <trans-unit id="41623a0ef32a13c7058b74719f5d1256441b7302" translate="yes" xml:space="preserve">
          <source>Should I use a web framework?</source>
          <target state="translated">웹 프레임 워크를 사용해야합니까?</target>
        </trans-unit>
        <trans-unit id="706821549d14c573be320aadd1615ad49253a11a" translate="yes" xml:space="preserve">
          <source>Should a user have the need for compiling Perl in the LP64 environment, use the -Duse64bitall flag to Configure. This will force Perl to be compiled in a pure LP64 environment (with the +DD64 flag for HP C-ANSI-C, with no additional options for GNU gcc 64-bit on PA-RISC, and with -mlp64 for GNU gcc on Itanium). If you want to compile Perl using gcc, you will have to get a version of the compiler that supports 64-bit operations.)</source>
          <target state="translated">LP64 환경에서 Perl을 컴파일해야하는 경우 -Duse64bitall 플래그를 사용하여 구성하십시오. 이렇게하면 Perl이 순수한 LP64 환경 (PA-RISC의 GNU gcc 64 비트에 대한 추가 옵션이없고 Itanium의 GNU gcc에 대한 -mlp64가없는 HP C-ANSI-C의 경우 + DD64 플래그)에서 컴파일됩니다. ). gcc를 사용하여 Perl을 컴파일하려면 64 비트 연산을 지원하는 컴파일러 버전을 가져와야합니다.)</target>
        </trans-unit>
        <trans-unit id="efca6f20e60abb6462f2115cc6f4f778b3e904aa" translate="yes" xml:space="preserve">
          <source>Should an &lt;code&gt;ok()&lt;/code&gt; fail, it will produce some diagnostics:</source>
          <target state="translated">해야 &lt;code&gt;ok()&lt;/code&gt; 는 몇 가지 진단을 생산할 예정 실패 :</target>
        </trans-unit>
        <trans-unit id="7aa2401927f1002b79d1cf0dcfbafc98b85b5c42" translate="yes" xml:space="preserve">
          <source>Should be used if the perl library is moved from the default location in preference to &lt;code&gt;PERL(5)LIB&lt;/code&gt;, since this would not leave wrong entries in @INC. For example, if the compiled version of perl looks for @INC in</source>
          <target state="translated">@INC에 잘못된 항목이 남지 않으므로 perl 라이브러리가 환경 설정의 기본 위치에서 &lt;code&gt;PERL(5)LIB&lt;/code&gt; 로 이동 된 경우 사용해야합니다 . 예를 들어, 컴파일 된 버전의 perl이 @INC를 찾는 경우</target>
        </trans-unit>
        <trans-unit id="56e9538fa48dc5397d7704d11be1b316f1409e45" translate="yes" xml:space="preserve">
          <source>Should make stream's state consistent with layers below. That is, any buffered write data should be written, and file position of lower layers adjusted for data read from below but not actually consumed. (Should perhaps &lt;code&gt;Unread()&lt;/code&gt; such data to the lower layer.)</source>
          <target state="translated">스트림 상태를 아래 레이어와 일치시켜야합니다. 즉, 버퍼링 된 쓰기 데이터를 작성하고 하위 계층의 파일 위치는 아래에서 읽은 데이터에 맞게 조정되지만 실제로 소비되지는 않습니다. (아마도 이러한 데이터를 &lt;code&gt;Unread()&lt;/code&gt; 하위 계층으로 보내야합니다.)</target>
        </trans-unit>
        <trans-unit id="1c3d2c3d146bd37267ff2248c2cd5e844253f599" translate="yes" xml:space="preserve">
          <source>Should not be set with newer Perls, since this may hide some</source>
          <target state="translated">최신 Perls로 설정하면 안됩니다.</target>
        </trans-unit>
        <trans-unit id="ed8ff1c4976aa7b4301ba319829b15d5951b2c6e" translate="yes" xml:space="preserve">
          <source>Should probably be built into the core, and needs to stop pandering to DOS habits. Needs a dose of optimization too.</source>
          <target state="translated">아마도 코어에 내장되어 있어야하며 DOS 습관으로 넘어가는 것을 중단해야합니다. 최적화도 필요합니다.</target>
        </trans-unit>
        <trans-unit id="fbde5e966385ab1512ea67e3f35d08dd24d83ceb" translate="yes" xml:space="preserve">
          <source>Should return 0 on success, -1 on error. Optional.</source>
          <target state="translated">성공하면 0을, 에러이면 -1을 반환합니다. 선택 과목.</target>
        </trans-unit>
        <trans-unit id="f8c399f86acf033efef1e2751ef404b5ddaa2865" translate="yes" xml:space="preserve">
          <source>Should return 0 on success, -1 on error. Optional. Default is to fail, but that is likely to be changed in future.</source>
          <target state="translated">성공하면 0을, 에러이면 -1을 반환합니다. 선택 과목. 기본값은 실패이지만 향후 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="246758221cfd3e60868d6718c892fa1bb87177ab" translate="yes" xml:space="preserve">
          <source>Should return a string to be placed in the buffer. Optional. If not provided, must provide READ or reject handles open for reading in PUSHED.</source>
          <target state="translated">버퍼에 배치 할 문자열을 반환해야합니다. 선택 과목. 제공되지 않은 경우 PUSHED로 읽을 수 있도록 READ 또는 거부 핸들을 열어야합니다.</target>
        </trans-unit>
        <trans-unit id="d3cbfd0fcf4f24975313de4df8de49164d7ee2fd" translate="yes" xml:space="preserve">
          <source>Should return an object or the class, or -1 on failure. (Compare TIEHANDLE.) The arguments are an optional mode string (&quot;r&quot;, &quot;w&quot;, &quot;w+&quot;, ...) and a filehandle for the PerlIO layer below. Mandatory.</source>
          <target state="translated">객체 또는 클래스를 반환하거나 실패시 -1을 반환해야합니다. (TIEHANDLE 비교) 인수는 선택적 모드 문자열 ( &quot;r&quot;, &quot;w&quot;, &quot;w +&quot;, ...)이며 아래 PerlIO 레이어의 파일 핸들입니다. 필수.</target>
        </trans-unit>
        <trans-unit id="5642f34ce9dcd1c3ffa2dfc0c58640c6cb31044d" translate="yes" xml:space="preserve">
          <source>Should the $prefix fail to match</source>
          <target state="translated">$ prefix가 일치하지 않는 경우</target>
        </trans-unit>
        <trans-unit id="1690346ded0caeaa5dcdd766cbbfd423effb3884" translate="yes" xml:space="preserve">
          <source>Should yield no problems with AIX 5.1 / 5.2 / 5.3 / 6.1 / 7.1.</source>
          <target state="translated">AIX 5.1 / 5.2 / 5.3 / 6.1 / 7.1에서 문제가 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="377f03a2a4c9b170d5d73c84fdd0fa6c29b00142" translate="yes" xml:space="preserve">
          <source>Should yield no problems.</source>
          <target state="translated">아무 문제가 없습니다.</target>
        </trans-unit>
        <trans-unit id="0b16df946245605727ff1e16d4791f2bf174400d" translate="yes" xml:space="preserve">
          <source>Should you wish to build a statically-linked executable on a system which can dynamically load libraries, you may, in all the following examples, where the command &quot;&lt;code&gt;make&lt;/code&gt; &quot; with no arguments is executed, run the command &quot;&lt;code&gt;make perl&lt;/code&gt; &quot; instead.</source>
          <target state="translated">라이브러리를 동적으로로드 할 수있는 시스템에 정적으로 링크 된 실행 파일을 빌드하려면 다음 예제에서 인수없이 &quot; &lt;code&gt;make&lt;/code&gt; &quot; 명령 이 실행되는 대신 &quot; &lt;code&gt;make perl&lt;/code&gt; &quot; 명령을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4ad198af5ed254b36c0129bab30cb66de4af9306" translate="yes" xml:space="preserve">
          <source>Show all individual modules that have a $VERSION of zero?</source>
          <target state="translated">$ VERSION이 0 인 모든 개별 모듈을 표시 하시겠습니까?</target>
        </trans-unit>
        <trans-unit id="5886e6a19b112ccca7d7e5c6a420d33f7dc320f4" translate="yes" xml:space="preserve">
          <source>Show all individual modules that have no $VERSION?</source>
          <target state="translated">$ VERSION이없는 모든 개별 모듈을 표시 하시겠습니까?</target>
        </trans-unit>
        <trans-unit id="432657faf9897211c68f4ccc299c680506ae0f85" translate="yes" xml:space="preserve">
          <source>Show lexical variables used in functions or files</source>
          <target state="translated">함수 또는 파일에 사용 된 어휘 변수 표시</target>
        </trans-unit>
        <trans-unit id="15563729135e9ba264fbcba30a709d66c8a1dd93" translate="yes" xml:space="preserve">
          <source>Show test comments (this is a no-op if &lt;code&gt;verbose&lt;/code&gt; is selected).</source>
          <target state="translated">테스트 설명 표시 ( &lt;code&gt;verbose&lt;/code&gt; 을 선택한 경우에는 작동하지 않습니다 ).</target>
        </trans-unit>
        <trans-unit id="453672f22864e2ecabd52010a0251f21457a02b2" translate="yes" xml:space="preserve">
          <source>Show test failures (this is a no-op if &lt;code&gt;verbose&lt;/code&gt; is selected).</source>
          <target state="translated">테스트 실패 표시 ( &lt;code&gt;verbose&lt;/code&gt; 를 선택한 경우에는 작동하지 않습니다 ).</target>
        </trans-unit>
        <trans-unit id="e3deb58d49160799c00454338107f604ea794ed5" translate="yes" xml:space="preserve">
          <source>Show usage.</source>
          <target state="translated">사용법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="66970db782112b1077801cd655daa3c67c2cdecf" translate="yes" xml:space="preserve">
          <source>Shows if the given module is primarily maintained in perl core or on CPAN and bug tracker URL.</source>
          <target state="translated">주어진 모듈이 주로 perl 코어 또는 CPAN 및 버그 추적기 URL에서 유지 보수되는지 표시합니다.</target>
        </trans-unit>
        <trans-unit id="ac75e459283e311c2d85839794c7648cec7df9c2" translate="yes" xml:space="preserve">
          <source>Shuts down a Perl interpreter. See &lt;a href=&quot;perlembed&quot;&gt;perlembed&lt;/a&gt;.</source>
          <target state="translated">Perl 인터프리터를 종료합니다. &lt;a href=&quot;perlembed&quot;&gt;perlembed를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="90e62e13ea37ff3f7a2ddce5609c724fd7e64daf" translate="yes" xml:space="preserve">
          <source>Shuts down a socket connection in the manner indicated by HOW, which has the same interpretation as in the syscall of the same name.</source>
          <target state="translated">HOW로 표시된 방식으로 소켓 연결을 종료합니다. 이는 동일한 이름의 syscall에서와 동일한 해석을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="8b3d8d665a765918b70a3f5f0378d51df00b92dd" translate="yes" xml:space="preserve">
          <source>Sign</source>
          <target state="translated">Sign</target>
        </trans-unit>
        <trans-unit id="76e3a47c3cea2b4bc39210e8f1a7a4f458325f46" translate="yes" xml:space="preserve">
          <source>Signal flag. Will be set to a true value if a signal was caught. Clients may check for this flag to abort time-consuming operations.</source>
          <target state="translated">신호 플래그. 신호가 잡히면 참값으로 설정됩니다. 클라이언트는 시간이 많이 걸리는 작업을 중단하기 위해이 플래그를 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="47e8409eab6e54647df4cb7cecc41ee28c30a02b" translate="yes" xml:space="preserve">
          <source>Signal handlers deal with signal names, not numbers. Use &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt; -l&lt;/code&gt; to find their names on your system.</source>
          <target state="translated">신호 처리기는 숫자가 아닌 신호 이름을 처리합니다. &lt;code&gt;&lt;a href=&quot;functions/kill&quot;&gt;kill&lt;/a&gt; -l&lt;/code&gt; 을 사용 하여 시스템에서 이름을 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="a89722759e06611996072c09d8d893f78366be03" translate="yes" xml:space="preserve">
          <source>Signal handlers need to be set up in the threads for the signals they are expected to act upon. Here's an example for</source>
          <target state="translated">신호 처리기는 스레드에서 처리 될 것으로 예상되는 신호에 대해 설정해야합니다. 다음은 예입니다</target>
        </trans-unit>
        <trans-unit id="4c81c67cfc40c99d8beeb124cd5a299ed53f7fa3" translate="yes" xml:space="preserve">
          <source>Signal handling is also used for timeouts in Unix. While safely protected within an &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval{}&lt;/a&gt;&lt;/code&gt; block, you set a signal handler to trap alarm signals and then schedule to have one delivered to you in some number of seconds. Then try your blocking operation, clearing the alarm when it's done but not before you've exited your &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval{}&lt;/a&gt;&lt;/code&gt; block. If it goes off, you'll use die() to jump out of the block.</source>
          <target state="translated">신호 처리는 Unix의 타임 아웃에도 사용됩니다. &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval{}&lt;/a&gt;&lt;/code&gt; 블록 내에서 안전하게 보호되는 동안 , 신호 처리기를 설정하여 경보 신호를 포착 한 다음 몇 초 안에 신호를 전달하도록 예약합니다. 그런 다음 차단 작업을 시도하여 완료되면 경보를 지우고 &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval{}&lt;/a&gt;&lt;/code&gt; 블록을 종료하기 전에 경보를 해제하십시오 . 꺼지면 die ()를 사용하여 블록을 뛰어 넘습니다.</target>
        </trans-unit>
        <trans-unit id="c9cd055a7cd87b137130bb8b93c1c2e53904764f" translate="yes" xml:space="preserve">
          <source>Signal handling may not behave as on Unix platforms (where it doesn't exactly &quot;behave&quot;, either :). For instance, calling &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die()&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; from signal handlers will cause an exception, since most implementations of &lt;code&gt;signal()&lt;/code&gt; on Windows are severely crippled. Thus, signals may work only for simple things like setting a flag variable in the handler. Using signals under this port should currently be considered unsupported.</source>
          <target state="translated">신호 처리는 Unix 플랫폼에서와 같이 작동하지 않을 수 있습니다 (정확히 &quot;동작&quot;하지 않는 경우). 예를 들어, 신호 처리기에서 &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die()&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; 를 호출 하면 예외가 발생합니다 . Windows에서 대부분의 &lt;code&gt;signal()&lt;/code&gt; 구현 은 심각하게 손상 되기 때문 입니다. 따라서 신호는 처리기에서 플래그 변수를 설정하는 것과 같은 간단한 작업에만 작동 할 수 있습니다. 이 포트에서 신호를 사용하는 것은 현재 지원되지 않는 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="2e6c417fd537a17b001daa7dbea3a3b50cef51ef" translate="yes" xml:space="preserve">
          <source>Signal number zero may fail because you lack permission to send the signal when directed at a process whose real or saved UID is not identical to the real or effective UID of the sending process, even though the process is alive. You may be able to determine the cause of failure using &lt;code&gt;$!&lt;/code&gt; or &lt;code&gt;%!&lt;/code&gt; .</source>
          <target state="translated">실제 또는 저장된 UID가 전송 프로세스의 실제 또는 유효 UID와 동일하지 않은 프로세스를 지시 할 때 신호가 전송 될 수있는 권한이 없기 때문에 신호 번호 0이 실패 할 수 있습니다. &lt;code&gt;$!&lt;/code&gt; 를 사용하여 실패 원인을 판별 할 수 있습니다 . 또는 &lt;code&gt;%!&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2346a18ea3002ff04eca3a130c7f40e65c56f0c9" translate="yes" xml:space="preserve">
          <source>Signals</source>
          <target state="translated">Signals</target>
        </trans-unit>
        <trans-unit id="fec07adfbf089fdf5b54412a5f3085422a9dd0ae" translate="yes" xml:space="preserve">
          <source>Signals are</source>
          <target state="translated">신호는</target>
        </trans-unit>
        <trans-unit id="43861fb85280c34c4b0e58573e896842254a1d10" translate="yes" xml:space="preserve">
          <source>Signals in Plan 9 Perl</source>
          <target state="translated">Plan 9 Perl의 신호</target>
        </trans-unit>
        <trans-unit id="e4cf0392296064579858651f856889aadbc2805e" translate="yes" xml:space="preserve">
          <source>Signatures</source>
          <target state="translated">Signatures</target>
        </trans-unit>
        <trans-unit id="d9d7c542958055b1904998cdb447122ec36a75ab" translate="yes" xml:space="preserve">
          <source>Signed bitwise operators.</source>
          <target state="translated">부호있는 비트 연산자.</target>
        </trans-unit>
        <trans-unit id="2622f509b356185fe6a42f6313ddbc8e57057af2" translate="yes" xml:space="preserve">
          <source>Significant performance improvements</source>
          <target state="translated">상당한 성능 향상</target>
        </trans-unit>
        <trans-unit id="ae6207f79c10c58b3e0ef4c08bbf6c86acc82fd9" translate="yes" xml:space="preserve">
          <source>Signum function. Set the number to -1, 0, or 1, depending on whether the number is negative, zero, or positive, respectively. Does not modify NaNs.</source>
          <target state="translated">부호 기능. 숫자가 각각 음수인지, 0인지, 양수인지에 따라 숫자를 -1, 0 또는 1로 설정하십시오. NaN을 수정하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="31506097adfa948440134c0119e5a52038393445" translate="yes" xml:space="preserve">
          <source>Silberschatz, Abraham, and Peter B. Galvin. Operating System Concepts, 4th ed. Addison-Wesley, 1995, ISBN 0-201-59292-4</source>
          <target state="translated">Silberschatz, Abraham, Peter B. Galvin. 운영 체제 개념, 제 4 판. 애디슨-웨슬리, 1995, ISBN 0-201-59292-4</target>
        </trans-unit>
        <trans-unit id="8c4b469b48eb970781d347cff775a6eb6ed07b9c" translate="yes" xml:space="preserve">
          <source>Similar problems can occur when storing &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; in HVs:</source>
          <target state="translated">HV에 &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; 를 저장할 때 비슷한 문제가 발생할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0939c3fe5c0d5d2bff40d1b5db20a06321bba976" translate="yes" xml:space="preserve">
          <source>Similar to</source>
          <target state="translated">비슷하다</target>
        </trans-unit>
        <trans-unit id="ca29a7deeeb800f3b647ae8e447ace2495bd48e6" translate="yes" xml:space="preserve">
          <source>Similar to &quot;CHECK&quot;, but for &lt;code&gt;INIT&lt;/code&gt; -blocks, not &lt;code&gt;CHECK&lt;/code&gt; blocks.</source>
          <target state="translated">&quot;CHECK&quot;와 유사하지만 &lt;code&gt;INIT&lt;/code&gt; &lt;code&gt;CHECK&lt;/code&gt; 블록이 아닌 -blocks와 .</target>
        </trans-unit>
        <trans-unit id="a02dc2c9e4fd99225658784381bc57431376c4f2" translate="yes" xml:space="preserve">
          <source>Similar to $io-&amp;gt;seek, but sets the IO::File's position using the system call lseek(2) directly, so will confuse most perl IO operators except sysread and syswrite (see &lt;a href=&quot;../perlfunc&quot;&gt;perlfunc&lt;/a&gt; for full details)</source>
          <target state="translated">$ io-&amp;gt; seek와 비슷하지만 lseek (2) 시스템 호출을 사용하여 IO :: File의 위치를 ​​직접 설정하므로 sysread 및 syswrite를 제외한 대부분의 perl IO 연산자를 혼동합니다 (참조 &lt;a href=&quot;../perlfunc&quot;&gt; perlfunc&lt;/a&gt; 참조)</target>
        </trans-unit>
        <trans-unit id="aeabee18f75813e1d32d468eb7ba172bf546eaed" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#any&quot;&gt;any&lt;/a&gt; and &lt;a href=&quot;#all&quot;&gt;all&lt;/a&gt;, but with the return sense inverted. &lt;code&gt;none&lt;/code&gt; returns true only if no value in the &lt;code&gt;@list&lt;/code&gt; causes the &lt;code&gt;BLOCK&lt;/code&gt; to return true, and &lt;code&gt;notall&lt;/code&gt; returns true only if not all of the values do.</source>
          <target state="translated">마찬가지로 &lt;a href=&quot;#any&quot;&gt;어떤&lt;/a&gt; 및 &lt;a href=&quot;#all&quot;&gt;모든&lt;/a&gt; 하지만 반전 반환 감각. &lt;code&gt;none&lt;/code&gt; 의 값에만 true를 반환하지 &lt;code&gt;@list&lt;/code&gt; 이 원인없는 &lt;code&gt;BLOCK&lt;/code&gt; 을 true를 반환하고, &lt;code&gt;notall&lt;/code&gt; 사실 만 반환하지 않을 경우 모든 값은 않습니다.</target>
        </trans-unit>
        <trans-unit id="e0b3d2d208d62b5b40ff53db1e72a57e69459f20" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#any&quot;&gt;any&lt;/a&gt;, except that it requires all elements of the &lt;code&gt;@list&lt;/code&gt; to make the &lt;code&gt;BLOCK&lt;/code&gt; return true. If any element returns false, then it returns false. If the &lt;code&gt;BLOCK&lt;/code&gt; never returns false or the &lt;code&gt;@list&lt;/code&gt; was empty then it returns true.</source>
          <target state="translated">마찬가지로 &lt;a href=&quot;#any&quot;&gt;어떤&lt;/a&gt; , 그것은 모든 요소를 필요로한다는 점을 제외하고 &lt;code&gt;@list&lt;/code&gt; 을 하기 위해 &lt;code&gt;BLOCK&lt;/code&gt; 의 반환 사실. 어떤 요소가 false를 반환하면 false를 반환합니다. 는 IF &lt;code&gt;BLOCK&lt;/code&gt; 은 결코 반환 허위 또는 &lt;code&gt;@list&lt;/code&gt; 가 비어 그때는 true를 돌려줍니다.</target>
        </trans-unit>
        <trans-unit id="b9665cd00110ac2a060c12898dd3b9d89a35f309" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#max&quot;&gt;max&lt;/a&gt; but returns the entry in the list with the lowest numerical value. If the list is empty then &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;a href=&quot;#max&quot;&gt;max&lt;/a&gt; 와 비슷 하지만 숫자 값이 가장 낮은 목록의 항목을 반환합니다. 목록이 비어 있으면 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="1acc3d00496e9a8972d2b21602c04ac03da5cacb" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#max&quot;&gt;max&lt;/a&gt;, but treats all the entries in the list as strings and returns the highest string as defined by the &lt;code&gt;gt&lt;/code&gt; operator. If the list is empty then &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned.</source>
          <target state="translated">마찬가지로 &lt;a href=&quot;#max&quot;&gt;최대&lt;/a&gt; 문자열을 반환 가장 높은 문자열로 목록 만 취급하는 모든 항목은에 의해 정의 된 &lt;code&gt;gt&lt;/code&gt; 연산자입니다. 리스트가 비어 있으면 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="5a68b93abd1f3ba4015d6e167facf857ecad51b4" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#min&quot;&gt;min&lt;/a&gt;, but treats all the entries in the list as strings and returns the lowest string as defined by the &lt;code&gt;lt&lt;/code&gt; operator. If the list is empty then &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned.</source>
          <target state="translated">유사 &lt;a href=&quot;#min&quot;&gt;분&lt;/a&gt; 문자열 복귀 최저 문자열로서리스트하지만, 취급하는 모든 항목은에 의해 정의 &lt;code&gt;lt&lt;/code&gt; 연산자. 목록이 비어 있으면 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="720744a95bf0e839c040c184fab6270aac42881d" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#sum&quot;&gt;sum&lt;/a&gt;, except this returns 0 when given an empty list, rather than &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 대신 빈 목록이 주어지면 0을 반환한다는 점을 제외하면 &lt;a href=&quot;#sum&quot;&gt;sum&lt;/a&gt; 과 비슷합니다. .</target>
        </trans-unit>
        <trans-unit id="de0c5d81a8f59f78025d72fb656f559ed47e0b02" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;%+&lt;/code&gt; , this variable allows access to the named capture groups in the last successful match in the currently active dynamic scope. To each capture group name found in the regular expression, it associates a reference to an array containing the list of values captured by all buffers with that name (should there be several of them), in the order where they appear.</source>
          <target state="translated">&lt;code&gt;%+&lt;/code&gt; 와 유사 와 변수를 사용하면 현재 활성화 된 동적 범위에서 마지막으로 성공적으로 일치하는 명명 된 캡처 그룹에 액세스 할 수 있습니다. 정규식에서 찾은 각 캡처 그룹 이름에, 모든 버퍼에 의해 캡처 된 값 목록이 포함 된 배열에 대한 참조를 해당 이름 (여러 개가 있어야 함)이 나타난 순서대로 연관시킵니다.</target>
        </trans-unit>
        <trans-unit id="e85d1cf5a45c378c11b14a61c254003e40f86d06" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;(??{ code })&lt;/code&gt; except that it does not involve executing any code or potentially compiling a returned pattern string; instead it treats the part of the current pattern contained within a specified capture group as an independent pattern that must match at the current position. Also different is the treatment of capture buffers, unlike &lt;code&gt;(??{ code })&lt;/code&gt; recursive patterns have access to their callers match state, so one can use backreferences safely.</source>
          <target state="translated">&lt;code&gt;(??{ code })&lt;/code&gt; 실행하거나 잠재적으로 리턴 된 패턴 문자열을 컴파일하는 것을 포함하지 않는다는 점을 제외하고는 (?? {code}) 와 유사 합니다. 대신 지정된 캡처 그룹에 포함 된 현재 패턴의 일부를 현재 위치에서 일치해야하는 독립 패턴으로 처리합니다. 또한 캡처 버퍼 처리와는 달리 &lt;code&gt;(??{ code })&lt;/code&gt; 재귀 패턴이 발신자 일치 상태에 액세스 할 수있는 따라서 역 참조를 안전하게 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7b5e1028f59af1e35880841b72d98eb83a4ac03c" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;(R1)&lt;/code&gt; , this predicate checks to see if we're executing directly inside of the leftmost group with a given name (this is the same logic used by &lt;code&gt;(?&amp;amp;NAME)&lt;/code&gt; to disambiguate). It does not check the full stack, but only the name of the innermost active recursion.</source>
          <target state="translated">&lt;code&gt;(R1)&lt;/code&gt; 과 유사하게 ,이 술어는 주어진 이름으로 가장 왼쪽 그룹 내에서 직접 실행 중인지 확인합니다. &lt;code&gt;(?&amp;amp;NAME)&lt;/code&gt; 모호성)이다. 전체 스택을 확인하지 않고 가장 안쪽의 활성 재귀 이름 만 확인합니다.</target>
        </trans-unit>
        <trans-unit id="d819c8539b4d29d94e8d4689944b0f7272e6c433" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; in that it evaluates &lt;code&gt;BLOCK&lt;/code&gt; setting &lt;code&gt;$_&lt;/code&gt; to each element of &lt;code&gt;@list&lt;/code&gt; in turn. &lt;code&gt;any&lt;/code&gt; returns true if any element makes the &lt;code&gt;BLOCK&lt;/code&gt; return a true value. If &lt;code&gt;BLOCK&lt;/code&gt; never returns true or &lt;code&gt;@list&lt;/code&gt; was empty then it returns false.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; 과 유사하게 &lt;code&gt;BLOCK&lt;/code&gt; 설정 &lt;code&gt;$_&lt;/code&gt; 을 &lt;code&gt;@list&lt;/code&gt; 의 각 요소 에 차례로 평가합니다. &lt;code&gt;any&lt;/code&gt; 요소라도 &lt;code&gt;BLOCK&lt;/code&gt; 이 참 값을 리턴하게하면 참을 리턴합니다. &lt;code&gt;BLOCK&lt;/code&gt; 이 true 또는 &lt;code&gt;@list&lt;/code&gt; 를 반환하지 않는 경우 비어 다음은 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="309f2e4aced8f70bc86983e34f644c5eeda43d60" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; in that it evaluates &lt;code&gt;BLOCK&lt;/code&gt; setting &lt;code&gt;$_&lt;/code&gt; to each element of &lt;code&gt;@list&lt;/code&gt; in turn. &lt;code&gt;first&lt;/code&gt; returns the first element where the result from &lt;code&gt;BLOCK&lt;/code&gt; is a true value. If &lt;code&gt;BLOCK&lt;/code&gt; never returns true or &lt;code&gt;@list&lt;/code&gt; was empty then &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; 과 유사하게 &lt;code&gt;BLOCK&lt;/code&gt; 설정 &lt;code&gt;$_&lt;/code&gt; 을 &lt;code&gt;@list&lt;/code&gt; 의 각 요소 에 차례로 평가합니다. &lt;code&gt;first&lt;/code&gt; 는 &lt;code&gt;BLOCK&lt;/code&gt; 의 결과 가 참 값인 첫 번째 요소를 리턴합니다 . 경우 &lt;code&gt;BLOCK&lt;/code&gt; 는 true를 돌려 결코 또는 &lt;code&gt;@list&lt;/code&gt; 는 다음 비어 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="1e075f217be25d05567036ad66b6856b5e68b562" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;@+&lt;/code&gt; , the &lt;code&gt;%+&lt;/code&gt; hash allows access to the named capture buffers, should they exist, in the last successful match in the currently active dynamic scope.</source>
          <target state="translated">&lt;code&gt;@+&lt;/code&gt; 와 유사하게 &lt;code&gt;%+&lt;/code&gt; 해시는 이름이 지정된 캡처 버퍼 (있는 경우)가 현재 활성화 된 동적 범위에서 마지막으로 성공적으로 일치 할 때 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a8d5383c2abb4219427283869f7f92149d2a972c" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;Open&lt;/code&gt; , returns PerlIO* on success, &lt;code&gt;NULL&lt;/code&gt; on failure.</source>
          <target state="translated">&lt;code&gt;Open&lt;/code&gt; 과 유사하게 성공하면 PerlIO *를, 실패 하면 &lt;code&gt;NULL&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="9b9b990cdb77a226953210e003d5b8ec28f7e6d4" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;eq_array()&lt;/code&gt; , except the order of the elements is &lt;b&gt;not&lt;/b&gt; important. This is a deep check, but the irrelevancy of order only applies to the top level.</source>
          <target state="translated">&lt;code&gt;eq_array()&lt;/code&gt; 와 유사 하지만 요소의 순서는 중요 &lt;b&gt;하지 않습니다&lt;/b&gt; . 이것은 철저한 점검이지만 순서와 관련이없는 것은 최상위 레벨에만 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="799cf1cf4afc49012909146223bfe3d0985a8027" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;htmlify()&lt;/code&gt; , but turns non-alphanumerics into underscores. Note that &lt;code&gt;anchorify()&lt;/code&gt; is not exported by default.</source>
          <target state="translated">&lt;code&gt;htmlify()&lt;/code&gt; 와 유사 하지만 영숫자가 아닌 문자를 밑줄로 바꿉니다. 참고 &lt;code&gt;anchorify()&lt;/code&gt; 기본적으로 내보내지지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e12c5c9a9a0658e780b40222b20b1585f58ad997" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;is()&lt;/code&gt; , except that if $got and $expected are references, it does a deep comparison walking each data structure to see if they are equivalent. If the two structures are different, it will display the place where they start differing.</source>
          <target state="translated">$ got 및 $ expected가 참조 인 경우 &lt;code&gt;is()&lt;/code&gt; 와 유사하지만 각 데이터 구조가 동일한 지 확인하기 위해 각 데이터 구조를 자세히 비교합니다. 두 구조가 다른 경우 구조가 다른 곳을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="78a60ea110d9d9e2f388b25322faf3b4d38a6a8c" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;list&lt;/code&gt; but only active groups that match the pattern are returned. &lt;code&gt;PATTERN&lt;/code&gt; can be a group pattern.</source>
          <target state="translated">마찬가지로 &lt;code&gt;list&lt;/code&gt; 패턴과 일치하지만, 활성 그룹이 반환됩니다. &lt;code&gt;PATTERN&lt;/code&gt; 은 그룹 패턴 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8394e4ee5f103a1c48fa6ce025d057e64f7170cc" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;lock_keys()&lt;/code&gt; , with the difference being that the optional key list specifies keys that may or may not be already in the hash. Essentially this is an easier way to say</source>
          <target state="translated">&lt;code&gt;lock_keys()&lt;/code&gt; 와 유사 하지만, 선택적 키 목록은 이미 해시에 있거나 없을 수있는 키를 지정한다는 점이 다릅니다. 본질적으로 이것은 말하기 쉬운 방법입니다</target>
        </trans-unit>
        <trans-unit id="ffb0fd1c6610a16c5e7d118e0a5ba89092c8069d" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;newUNOP&lt;/code&gt; , but creates an UNOP_AUX struct instead, with op_aux initialised to aux</source>
          <target state="translated">&lt;code&gt;newUNOP&lt;/code&gt; 와 유사 하지만 대신 op_aux가 aux로 초기화되어 UNOP_AUX 구조체가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="cc376b4266acbbeb8358039fda2afe78067b9523" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;ok()&lt;/code&gt; , &lt;code&gt;is()&lt;/code&gt; and &lt;code&gt;isnt()&lt;/code&gt; compare their two arguments with &lt;code&gt;eq&lt;/code&gt; and &lt;code&gt;ne&lt;/code&gt; respectively and use the result of that to determine if the test succeeded or failed. So these:</source>
          <target state="translated">유사 &lt;code&gt;ok()&lt;/code&gt; , &lt;code&gt;is()&lt;/code&gt; 와 &lt;code&gt;isnt()&lt;/code&gt; 자신의 두 개의 인수를 비교 &lt;code&gt;eq&lt;/code&gt; 및 &lt;code&gt;ne&lt;/code&gt; 각각 시험 성공 또는 실패 여부를 결정하기 위해 그 결과를 사용합니다. 그래서 이것들 :</target>
        </trans-unit>
        <trans-unit id="2d613f276bedf9458ff8ce32e8990c5576137f0b" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;ok()&lt;/code&gt; , &lt;code&gt;like()&lt;/code&gt; matches $got against the regex &lt;code&gt;&lt;a href=&quot;../functions/qr&quot;&gt;qr/expected/&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">유사 &lt;code&gt;ok()&lt;/code&gt; , &lt;code&gt;like()&lt;/code&gt; 정규식에 대해 가지고 $ 일치 &lt;code&gt;&lt;a href=&quot;../functions/qr&quot;&gt;qr/expected/&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="050d8bfd9d6dd81a6f8789b0e8d9cd7b8f6780b4" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;save_scalar&lt;/code&gt; , but localize &lt;code&gt;@gv&lt;/code&gt; and &lt;code&gt;%gv&lt;/code&gt; .</source>
          <target state="translated">유사 &lt;code&gt;save_scalar&lt;/code&gt; 하지만 지역화 &lt;code&gt;@gv&lt;/code&gt; 및 &lt;code&gt;%gv&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="07501a6bba290a81025a9cc58f969fd7da78b384" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;save_scalar&lt;/code&gt; , but will reinstate an &lt;code&gt;SV *&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;save_scalar&lt;/code&gt; 와 유사 하지만 &lt;code&gt;SV *&lt;/code&gt; 가 복원됩니다 .</target>
        </trans-unit>
        <trans-unit id="d1390e677f6a0ebeb104aa1d188d2523b30d8bc4" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;save_svref&lt;/code&gt; , but localize &lt;code&gt;AV *&lt;/code&gt; and &lt;code&gt;HV *&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;save_svref&lt;/code&gt; 와 유사 하지만 &lt;code&gt;AV *&lt;/code&gt; 및 &lt;code&gt;HV *&lt;/code&gt; 를 현지화하십시오 .</target>
        </trans-unit>
        <trans-unit id="7cf1c2a19f0b0ee74a54bd214a8ec4d84f8e3cf9" translate="yes" xml:space="preserve">
          <source>Similar to C</source>
          <target state="translated">C와 유사</target>
        </trans-unit>
        <trans-unit id="a64ea60affb2a9690ec81f413108d64202543e9b" translate="yes" xml:space="preserve">
          <source>Similar to T_PTR except that the pointer is stored in a scalar and the reference to that scalar is returned to the caller. This can be used to hide the actual pointer value from the programmer since it is usually not required directly from within perl.</source>
          <target state="translated">포인터가 스칼라에 저장되고 해당 스칼라에 대한 참조가 호출자에게 리턴된다는 점을 제외하면 T_PTR과 유사합니다. 이것은 일반적으로 perl 내에서 직접 필요하지 않기 때문에 프로그래머로부터 실제 포인터 값을 숨기는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4ed1b14b67aa9193491a3dd6d65f8409d185456b" translate="yes" xml:space="preserve">
          <source>Similar to T_PTROBJ in that the pointer is blessed into a scalar object. The difference is that when the object is passed back into XS it must be of the correct type (inheritance is not supported) while T_PTROBJ supports inheritance.</source>
          <target state="translated">포인터가 스칼라 객체로 축복된다는 점에서 T_PTROBJ와 유사합니다. 차이점은 오브젝트가 XS로 다시 전달 될 때 올바른 유형이어야하며 (상속은 지원되지 않음) T_PTROBJ는 상속을 지원한다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="98345bece5539f546d5a8e96d6aece125a75354c" translate="yes" xml:space="preserve">
          <source>Similar to T_PTRREF except that the reference is blessed into a class. This allows the pointer to be used as an object. Most commonly used to deal with C structs. The typemap checks that the perl object passed into the XS routine is of the correct class (or part of a subclass).</source>
          <target state="translated">참조가 클래스에 축복된다는 점을 제외하고 T_PTRREF와 유사합니다. 이를 통해 포인터를 객체로 사용할 수 있습니다. C 구조체를 다루는 데 가장 일반적으로 사용됩니다. 타입 맵은 XS 루틴으로 전달 된 perl 객체가 올바른 클래스 (또는 서브 클래스의 일부)인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="a0e3f786e5320b6b926d5843480fabad22b49df4" translate="yes" xml:space="preserve">
          <source>Similar to T_PTRREF, except the pointer stored in the referenced scalar is dereferenced and copied to the output variable. This means that T_REFREF is to T_PTRREF as T_OPAQUE is to T_OPAQUEPTR. All clear?</source>
          <target state="translated">참조 된 스칼라에 저장된 포인터가 역 참조되어 출력 변수에 복사된다는 점을 제외하고 T_PTRREF와 유사합니다. 이는 T_OPAQUE가 T_OPAQUEPTR이므로 T_REFREF가 T_PTRREF임을 의미합니다. 공습 경보 해제?</target>
        </trans-unit>
        <trans-unit id="316a66a038c9003e3588353dd7b06b4570041574" translate="yes" xml:space="preserve">
          <source>Similar to key/value hash slices (and also introduced in Perl 5.20), the % array slice syntax returns a list of index/value pairs:</source>
          <target state="translated">키 / 값 해시 슬라이스와 유사하며 Perl 5.20에 도입 된 % 배열 슬라이스 구문은 인덱스 / 값 쌍의 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="fcdb3335ff45dd421a45fea8e6567734b9ec0cac" translate="yes" xml:space="preserve">
          <source>Similar to mkstemp(), except that an extra argument can be supplied with a suffix to be appended to the template.</source>
          <target state="translated">템플릿에 추가 할 접미사를 추가 인수로 제공 할 수 있다는 점을 제외하고 mkstemp ()와 유사합니다.</target>
        </trans-unit>
        <trans-unit id="4cf9bfb3c81fe1275534c974c84d67c5db310bda" translate="yes" xml:space="preserve">
          <source>Similar to perl's &lt;code&gt;&lt;a href=&quot;../functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; keyword, but interprets the given list as an even-sized list of pairs. It invokes the &lt;code&gt;BLOCK&lt;/code&gt; multiple times, in scalar context, with &lt;code&gt;$a&lt;/code&gt; and &lt;code&gt;$b&lt;/code&gt; set to successive pairs of values from the &lt;code&gt;@kvlist&lt;/code&gt; .</source>
          <target state="translated">perl의 &lt;code&gt;&lt;a href=&quot;../functions/grep&quot;&gt;grep&lt;/a&gt;&lt;/code&gt; 키워드 와 유사 하지만 주어진 목록을 짝수 크기의 쌍 목록으로 해석합니다. 스칼라 컨텍스트에서 &lt;code&gt;$a&lt;/code&gt; 및 &lt;code&gt;$b&lt;/code&gt; 가 &lt;code&gt;@kvlist&lt;/code&gt; 에서 연속적인 값 쌍으로 설정되어 &lt;code&gt;BLOCK&lt;/code&gt; 을 여러 번 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="20605e6412e378f2426dfa2ecf790a73c30912ee" translate="yes" xml:space="preserve">
          <source>Similar to perl's &lt;code&gt;&lt;a href=&quot;../functions/map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; keyword, but interprets the given list as an even-sized list of pairs. It invokes the &lt;code&gt;BLOCK&lt;/code&gt; multiple times, in list context, with &lt;code&gt;$a&lt;/code&gt; and &lt;code&gt;$b&lt;/code&gt; set to successive pairs of values from the &lt;code&gt;@kvlist&lt;/code&gt; .</source>
          <target state="translated">perl의 &lt;code&gt;&lt;a href=&quot;../functions/map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; 키워드 와 유사 하지만 주어진 목록을 짝수 크기의 쌍 목록으로 해석합니다. &lt;code&gt;$a&lt;/code&gt; 와 &lt;code&gt;$b&lt;/code&gt; 가 &lt;code&gt;@kvlist&lt;/code&gt; 에서 연속적인 값 쌍으로 설정 되어 목록 컨텍스트에서 &lt;code&gt;BLOCK&lt;/code&gt; 을 여러 번 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="d4e0979e74abc467bf78f9a39fbc983727e9baaf" translate="yes" xml:space="preserve">
          <source>Similar to strings, &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m''&lt;/a&gt;&lt;/code&gt; acts like apostrophes on a regexp; all other &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m&lt;/a&gt;&lt;/code&gt; delimiters act like quotes. If the regexp evaluates to the empty string, the regexp in the</source>
          <target state="translated">문자열과 유사하게, &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m''&lt;/a&gt;&lt;/code&gt; 은 정규 표현식에서 아포스트로피처럼 작동합니다. 다른 모든 &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m&lt;/a&gt;&lt;/code&gt; 구분 기호는 따옴표처럼 작동합니다. 정규 표현식이 빈 문자열로 평가되면</target>
        </trans-unit>
        <trans-unit id="b7ef33d2521670adf2f6b3cf61cae1999ab3778c" translate="yes" xml:space="preserve">
          <source>Similar to the &lt;a href=&quot;#first&quot;&gt;first&lt;/a&gt; function, but interprets the given list as an even-sized list of pairs. It invokes the &lt;code&gt;BLOCK&lt;/code&gt; multiple times, in scalar context, with &lt;code&gt;$a&lt;/code&gt; and &lt;code&gt;$b&lt;/code&gt; set to successive pairs of values from the &lt;code&gt;@kvlist&lt;/code&gt; .</source>
          <target state="translated">유사받는 &lt;a href=&quot;#first&quot;&gt;제&lt;/a&gt; 기능하지만 쌍 짝수 크기의 목록으로서 지정한리스트 해석한다. 스칼라 컨텍스트에서 &lt;code&gt;$a&lt;/code&gt; 및 &lt;code&gt;$b&lt;/code&gt; 가 &lt;code&gt;@kvlist&lt;/code&gt; 에서 연속적인 값 쌍으로 설정되어 &lt;code&gt;BLOCK&lt;/code&gt; 을 여러 번 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="0747626402d2dd7f7c45b97cc24e9304db46b6d7" translate="yes" xml:space="preserve">
          <source>Similar to the above, a sigil, followed by bareword text in brackets, where the first character is either a caret followed by an uppercase letter, like &lt;code&gt;${^GLOBAL_PHASE}&lt;/code&gt; or a non-&lt;code&gt;NUL&lt;/code&gt; , non-space literal control like &lt;code&gt;${\7LOBAL_PHASE}&lt;/code&gt; . Like the above, when not under &lt;code&gt;&quot;use utf8&quot;&lt;/code&gt; , the characters in &lt;code&gt;[0x80-0xFF]&lt;/code&gt; are considered controls, but as of v5.22, the use of any that are non-graphical are deprecated, and as of v5.20 the use of any ASCII-range literal control is deprecated. Support for these will be removed in a future version of perl.</source>
          <target state="translated">위와 유사하게,시길 다음에 괄호로 묶인 베어 워드 텍스트가옵니다. 첫 번째 문자는 캐럿 뒤에 &lt;code&gt;${^GLOBAL_PHASE}&lt;/code&gt; 와 같은 대문자가 되거나 &lt;code&gt;${\7LOBAL_PHASE}&lt;/code&gt; 와 같은 &lt;code&gt;NUL&lt;/code&gt; 이 아닌 비 공백 리터럴 컨트롤입니다. 7LOBAL_PHASE} . 위와 같이 &lt;code&gt;&quot;use utf8&quot;&lt;/code&gt; 아닌 경우 &lt;code&gt;[0x80-0xFF]&lt;/code&gt; 의 문자는 제어로 간주되지만 v5.22에서는 그래픽이 아닌 문자는 더 이상 사용되지 않으며 v5.20부터는 ASCII 범위의 리터럴 제어는 더 이상 사용되지 않습니다. 이것에 대한 지원은 향후 버전의 perl에서 제거 될 것입니다.</target>
        </trans-unit>
        <trans-unit id="3f2112c220c2b71523b70f673d7ec4dcde3c15e0" translate="yes" xml:space="preserve">
          <source>Similarly &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re 'Debug'&lt;/code&gt; produces debugging output, the difference being that it allows the fine tuning of what debugging output will be emitted. Options are divided into three groups, those related to compilation, those related to execution and those related to special purposes. The options are as follows:</source>
          <target state="translated">마찬가지로 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; re 'Debug'&lt;/code&gt; 차이는 디버깅 출력 출사 될지의 미세 조정을 허용중인 디버깅 출력을 생성한다. 옵션은 컴파일 관련 그룹, 실행 관련 그룹, 특수 목적 관련 그룹으로 구분됩니다. 옵션은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="84d106c3869ea4929caecddf63406cc3cb977903" translate="yes" xml:space="preserve">
          <source>Similarly all warnings are disabled in a block by either of these:</source>
          <target state="translated">마찬가지로 모든 경고는 다음 중 하나에 의해 블록에서 비활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="55dea1c41dc940323d881fe12ebce9ec69c591cf" translate="yes" xml:space="preserve">
          <source>Similarly if you opened that handle &lt;code&gt;FH&lt;/code&gt; with regular &lt;code&gt;&lt;a href=&quot;../functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../functions/sysopen&quot;&gt;sysopen&lt;/a&gt;&lt;/code&gt;, you may use:</source>
          <target state="translated">마찬가지로 정규 &lt;code&gt;&lt;a href=&quot;../functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;../functions/sysopen&quot;&gt;sysopen&lt;/a&gt;&lt;/code&gt; 으로 핸들 &lt;code&gt;FH&lt;/code&gt; 를 열면 다음을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="53be67a31768325e220272f535bb98f85e3fcddf" translate="yes" xml:space="preserve">
          <source>Similarly one could take the output of the third numbers column from recipe 2 to obtain a &lt;code&gt;$cp_1047&lt;/code&gt; table. The fourth numbers column of the output from recipe 2 could provide a &lt;code&gt;$cp_posix_bc&lt;/code&gt; table suitable for transcoding as well.</source>
          <target state="translated">마찬가지로 레시피 2에서 세 번째 숫자 열의 출력을 &lt;code&gt;$cp_1047&lt;/code&gt; 테이블 을 얻을 수 있습니다. 레시피 2의 출력의 네 번째 숫자 열은 트랜스 코딩에도 적합한 &lt;code&gt;$cp_posix_bc&lt;/code&gt; 테이블을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d0f4815a422eaba46c3d84f219793b24d2375a6b" translate="yes" xml:space="preserve">
          <source>Similarly the NULL needs to be taken into account when you are considering the length of existing keys/values.</source>
          <target state="translated">기존 키 / 값의 길이를 고려할 때 NULL도 고려해야합니다.</target>
        </trans-unit>
        <trans-unit id="cc4fb6a726563143c1c04086d201d673d7729dd3" translate="yes" xml:space="preserve">
          <source>Similarly,</source>
          <target state="translated">Similarly,</target>
        </trans-unit>
        <trans-unit id="90864fd67d3db4c105028d84006c631220f52597" translate="yes" xml:space="preserve">
          <source>Similarly, &lt;code&gt;$href-&amp;gt;{'red'}&lt;/code&gt; is part of the hash referred to by the scalar variable &lt;code&gt;$href&lt;/code&gt; , perhaps even one with no name. &lt;code&gt;$href{'red'}&lt;/code&gt; is part of the deceptively named &lt;code&gt;%href&lt;/code&gt; hash. It's easy to forget to leave out the &lt;code&gt;-&amp;gt;&lt;/code&gt; , and if you do, you'll get bizarre results when your program gets array and hash elements out of totally unexpected hashes and arrays that weren't the ones you wanted to use.</source>
          <target state="translated">마찬가지로 &lt;code&gt;$href-&amp;gt;{'red'}&lt;/code&gt; 는 스칼라 변수 &lt;code&gt;$href&lt;/code&gt; 에 의해 참조되는 해시의 일부이며 이름이없는 것입니다. &lt;code&gt;$href{'red'}&lt;/code&gt; 는 기만적으로 명명 된 &lt;code&gt;%href&lt;/code&gt; 해시의 일부입니다 . &lt;code&gt;-&amp;gt;&lt;/code&gt; 을 잊어 버리는 것은 잊어 버리기 쉬우 며 , 그렇게하면 프로그램이 사용하지 않을 완전히 예상치 못한 해시와 배열에서 배열과 해시 요소를 가져올 때 기괴한 결과를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4d9f2629494d34ddc3413b1763638df2e3855408" translate="yes" xml:space="preserve">
          <source>Similarly, &lt;code&gt;-&amp;gt;autodefer(1)&lt;/code&gt; re-enables autodeferment, and &lt;code&gt;-&amp;gt;autodefer()&lt;/code&gt; recovers the current value of the autodefer setting.</source>
          <target state="translated">마찬가지로 &lt;code&gt;-&amp;gt;autodefer(1)&lt;/code&gt; 는 자동 지연을 다시 활성화하고 &lt;code&gt;-&amp;gt;autodefer()&lt;/code&gt; 는 자동 지연 설정의 현재 값을 복구합니다.</target>
        </trans-unit>
        <trans-unit id="ed0a74921b522c90d239c941839d98f9f544df9e" translate="yes" xml:space="preserve">
          <source>Similarly, &lt;code&gt;.=&lt;/code&gt; and &lt;code&gt;x=&lt;/code&gt; operators lose their mathemagical properties if the string conversion substitution is applied.</source>
          <target state="translated">마찬가지로 &lt;code&gt;.=&lt;/code&gt; 및 &lt;code&gt;x=&lt;/code&gt; 연산자는 문자열 변환 대체가 적용되면 수학 속성을 잃습니다.</target>
        </trans-unit>
        <trans-unit id="98381cd292cecc23499c5a97dc7663476a411916" translate="yes" xml:space="preserve">
          <source>Similarly, &lt;code&gt;PERL_MAGIC_uvar&lt;/code&gt; magic can be used much like tie() to call a C function any time a scalar's value is used or changed. The &lt;code&gt;MAGIC&lt;/code&gt; 's &lt;code&gt;mg_ptr&lt;/code&gt; field points to a &lt;code&gt;ufuncs&lt;/code&gt; structure:</source>
          <target state="translated">마찬가지로 &lt;code&gt;PERL_MAGIC_uvar&lt;/code&gt; 매직은 tie ()와 매우 유사하게 스칼라 값을 사용하거나 변경할 때마다 C 함수를 호출 할 수 있습니다. &lt;code&gt;MAGIC&lt;/code&gt; 의 &lt;code&gt;mg_ptr&lt;/code&gt; 의 A와 필드 점 &lt;code&gt;ufuncs&lt;/code&gt; 의 구조 :</target>
        </trans-unit>
        <trans-unit id="e1434bb43847966624ccbd7c82a8d888d8931593" translate="yes" xml:space="preserve">
          <source>Similarly, Perl's built-in &lt;code&gt;&lt;a href=&quot;functions/ref&quot;&gt;ref&lt;/a&gt;&lt;/code&gt; function treats a reference to a blessed object specially. If you call &lt;code&gt;&lt;a href=&quot;functions/ref&quot;&gt;ref($thing)&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;$thing&lt;/code&gt; holds a reference to an object, it will return the name of the class that the object has been blessed into.</source>
          <target state="translated">마찬가지로, Perl의 내장 &lt;code&gt;&lt;a href=&quot;functions/ref&quot;&gt;ref&lt;/a&gt;&lt;/code&gt; 함수는 축복 된 객체에 대한 참조를 특별히 처리합니다. &lt;code&gt;&lt;a href=&quot;functions/ref&quot;&gt;ref($thing)&lt;/a&gt;&lt;/code&gt; 을 호출 하고 &lt;code&gt;$thing&lt;/code&gt; 은 객체에 대한 참조를 보유하면 객체가 축복받은 클래스의 이름을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ed57441510534192d07967fc62d33e33379b4e80" translate="yes" xml:space="preserve">
          <source>Similarly, a list assignment in list context produces the list of lvalues assigned to, and a list assignment in scalar context returns the number of elements produced by the expression on the right hand side of the assignment.</source>
          <target state="translated">마찬가지로 목록 컨텍스트의 목록 할당은 할당 된 lvalue 목록을 생성하고 스칼라 컨텍스트의 목록 할당은 할당의 오른쪽에있는 표현식에 의해 생성 된 요소 수를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="105351b9ff1ce0c3b0da126c3158372b6f241c09" translate="yes" xml:space="preserve">
          <source>Similarly, a value assigned to &lt;code&gt;$)&lt;/code&gt; must also be a space-separated list of numbers. The first number sets the effective gid, and the rest (if any) are passed to &lt;code&gt;setgroups()&lt;/code&gt; . To get the effect of an empty list for &lt;code&gt;setgroups()&lt;/code&gt; , just repeat the new effective gid; that is, to force an effective gid of 5 and an effectively empty &lt;code&gt;setgroups()&lt;/code&gt; list, say &lt;code&gt; $) = &quot;5 5&quot; &lt;/code&gt; .</source>
          <target state="translated">마찬가지로 &lt;code&gt;$)&lt;/code&gt; 에 지정된 값 도 공백으로 구분 된 숫자 목록이어야합니다. 첫 번째 숫자는 유효 gid를 설정하고 나머지는 (있는 경우) &lt;code&gt;setgroups()&lt;/code&gt; 로 전달됩니다 . &lt;code&gt;setgroups()&lt;/code&gt; 에 대한 빈 목록의 효과를 얻으려면 새로운 유효 gid를 반복하십시오. 즉, 효과적인 gid 5 및 효과적으로 빈 &lt;code&gt;setgroups()&lt;/code&gt; 목록 을 강제 실행하려면 &lt;code&gt; $) = &quot;5 5&quot; &lt;/code&gt; 라고 말하십시오 .</target>
        </trans-unit>
        <trans-unit id="f830d9f2bf12f89de4edd3497ea1af8e153890fe" translate="yes" xml:space="preserve">
          <source>Similarly, an expression that returns a reference to a scalar can be dereferenced via &lt;code&gt;${...}&lt;/code&gt; . Thus, the above expression may be written as:</source>
          <target state="translated">마찬가지로 스칼라에 대한 참조를 리턴하는 표현식은 &lt;code&gt;${...}&lt;/code&gt; 통해 역 참조 될 수 있습니다 . 따라서 위의 표현은 다음과 같이 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d1370fc5b87a4deef9433fab962c63dda2bb0891" translate="yes" xml:space="preserve">
          <source>Similarly, autogeneration for keys &lt;code&gt;'+='&lt;/code&gt; and &lt;code&gt;'++'&lt;/code&gt; is analogous to &lt;code&gt;'-='&lt;/code&gt; and &lt;code&gt;'--'&lt;/code&gt; above:</source>
          <target state="translated">마찬가지로 &lt;code&gt;'+='&lt;/code&gt; 및 &lt;code&gt;'++'&lt;/code&gt; 키 의 자동 생성은 위의 &lt;code&gt;'-='&lt;/code&gt; 및 &lt;code&gt;'--'&lt;/code&gt; 와 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="22f4fe3ff0b7318ce2f9a1f22a4a30c916f48517" translate="yes" xml:space="preserve">
          <source>Similarly, because of all the subscripting that is done using single words, the same rule applies to any bareword that is used for subscripting a hash. So now, instead of writing</source>
          <target state="translated">마찬가지로 단일 단어를 사용하여 수행 된 모든 첨자 때문에 동일한 규칙이 해시를 첨자하는 데 사용되는 모든 베어 워드에 적용됩니다. 지금은 글을 쓰는 대신</target>
        </trans-unit>
        <trans-unit id="1ef17c2e729b74afc14b925795781df60a813811" translate="yes" xml:space="preserve">
          <source>Similarly, decimal strings can represent only those numbers which have a finite decimal expansion. Being strings, and thus of arbitrary length, there is no practical limit for the exponent or number of decimal digits for these numbers. (But realize that what we are discussing the rules for just the</source>
          <target state="translated">마찬가지로, 십진 문자열은 유한 한 십진 확장을 갖는 숫자 만 나타낼 수 있습니다. 문자열이므로 임의의 길이이므로 이러한 숫자의 지수 또는 소수 자릿수에 대한 실제 제한은 없습니다. (그러나 우리가 단지</target>
        </trans-unit>
        <trans-unit id="d345f5b26d91c2f90c4bf682659d17c36e269cb0" translate="yes" xml:space="preserve">
          <source>Similarly, for repeated &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/()/g&lt;/a&gt;&lt;/code&gt; the second-best match is the match at the position one notch further in the string.</source>
          <target state="translated">마찬가지로, 반복 된 &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/()/g&lt;/a&gt;&lt;/code&gt; 의 경우 두 번째로 가장 일치하는 것은 문자열에서 한 단계 더 떨어진 위치에서의 일치입니다.</target>
        </trans-unit>
        <trans-unit id="dee2c36ef0fdac4abda9dcad28ab4aed983df538" translate="yes" xml:space="preserve">
          <source>Similarly, functions that return text data--such as a function that fetches a web page--should sometimes translate newlines before returning the data, if they've not yet been translated to the local newline representation. A single line of code will often suffice:</source>
          <target state="translated">마찬가지로 웹 페이지를 가져 오는 함수와 같이 텍스트 데이터를 반환하는 함수는 로컬 개행 표시로 아직 변환되지 않은 경우 데이터를 반환하기 전에 개행을 번역해야하는 경우가 있습니다. 한 줄의 코드로 충분합니다.</target>
        </trans-unit>
        <trans-unit id="6397152c0c35f4b75972d06222dcea4b97f1756f" translate="yes" xml:space="preserve">
          <source>Similarly, if the &lt;code&gt;compress&lt;/code&gt; program is available, you can use this to write a &lt;code&gt;.tar.Z&lt;/code&gt; file</source>
          <target state="translated">마찬가지로 &lt;code&gt;compress&lt;/code&gt; 프로그램을 사용할 수있는 경우이를 사용하여 &lt;code&gt;.tar.Z&lt;/code&gt; 파일 을 작성할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5e75a2bb501471358d82a9998e95b65710f45b03" translate="yes" xml:space="preserve">
          <source>Similarly, if you need the threads object, but your thread will not be returning a value (i.e.,</source>
          <target state="translated">마찬가지로 threads 객체가 필요하지만 스레드가 값을 반환하지 않는 경우 (예 :</target>
        </trans-unit>
        <trans-unit id="5871ebe0fa13ed14449c1f6ca87d126616162345" translate="yes" xml:space="preserve">
          <source>Similarly, in the failure branch we could use &lt;code&gt;PUSHs&lt;/code&gt;</source>
          <target state="translated">마찬가지로 실패 지점에서 &lt;code&gt;PUSHs&lt;/code&gt; 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9077bdc5741605a4137fa6215e60fd225b8f3e44" translate="yes" xml:space="preserve">
          <source>Similarly, it would be better to use &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'unicode_strings'&lt;/code&gt; instead of,</source>
          <target state="translated">마찬가지로 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'unicode_strings'&lt;/code&gt; 을 사용 &lt;a href=&quot;functions/use&quot;&gt;하는&lt;/a&gt; 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="c46d4cfe15f7f292996d268d497a4ca8dd6bd83c" translate="yes" xml:space="preserve">
          <source>Similarly, just because an operator lets you assume default arguments doesn't mean that you have to make use of the defaults. The defaults are there for lazy systems programmers writing one-shot programs. If you want your program to be readable, consider supplying the argument.</source>
          <target state="translated">마찬가지로 연산자가 기본 인수를 가정한다고해서 기본값을 사용해야한다는 의미는 아닙니다. 게으른 시스템 프로그래머가 원샷 프로그램을 작성하는 경우 기본값이 있습니다. 프로그램을 읽을 수있게하려면 인수를 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="aab81862aa9c1688c2206840c0db77adfc7697fb" translate="yes" xml:space="preserve">
          <source>Similarly, mixing signals and threads may be problematic. Implementations are platform-dependent, and even the POSIX semantics may not be what you expect (and Perl doesn't even give you the full POSIX API). For example, there is no way to guarantee that a signal sent to a multi-threaded Perl application will get intercepted by any particular thread. (However, a recently added feature does provide the capability to send signals between threads. See &lt;a href=&quot;threads#THREAD-SIGNALLING&quot;&gt;THREAD SIGNALLING in threads&lt;/a&gt; for more details.)</source>
          <target state="translated">마찬가지로, 신호와 스레드를 혼합하는 데 문제가있을 수 있습니다. 구현은 플랫폼에 따라 다르며 POSIX 시맨틱조차 기대하지 않을 수 있습니다 (Perl은 전체 POSIX API도 제공하지 않습니다). 예를 들어, 다중 스레드 Perl 응용 프로그램으로 전송 된 신호가 특정 스레드에 의해 차단 될 수있는 방법은 없습니다. (그러나, 최근에 추가 된 기능은 스레드 사이에 신호를 보낼 수있는 기능을 제공한다. 참조 &lt;a href=&quot;threads#THREAD-SIGNALLING&quot;&gt;스레드 스레드 신호를&lt;/a&gt; 자세한 내용은.)</target>
        </trans-unit>
        <trans-unit id="2fa030e076fa248a433f0f83ee4a1aceaeee249f" translate="yes" xml:space="preserve">
          <source>Similarly, the parameter &lt;code&gt;inc_override&lt;/code&gt; may be a reference to an array which is used in place of the default module search paths from &lt;code&gt;@INC&lt;/code&gt; .</source>
          <target state="translated">마찬가지로 &lt;code&gt;inc_override&lt;/code&gt; 매개 변수 는 &lt;code&gt;@INC&lt;/code&gt; 의 기본 모듈 검색 경로 대신 사용되는 배열에 대한 참조 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1497da8abe3ed6eca13bd6302e3d281ea65007d7" translate="yes" xml:space="preserve">
          <source>Similarly, the resultant filespec will contain the file version only if one was present in the input filespec.</source>
          <target state="translated">마찬가지로 결과 파일 스펙에는 입력 파일 스펙에 파일 버전이있는 경우에만 파일 버전이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="0dacead88183b1e9c6304a4ceec665b6c24796d7" translate="yes" xml:space="preserve">
          <source>Similarly, they can be used in regular expression literals</source>
          <target state="translated">마찬가지로 정규 표현식 리터럴에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="395326d4967b38aae5eb742109108213c899c254" translate="yes" xml:space="preserve">
          <source>Similarly, this is invalid:</source>
          <target state="translated">마찬가지로, 이것은 유효하지 않습니다 :</target>
        </trans-unit>
        <trans-unit id="6c8f54b856913d21b69f361a1a90203715ac01de" translate="yes" xml:space="preserve">
          <source>Similarly, this recipe can be used for properties that do require adjustments:</source>
          <target state="translated">마찬가지로이 레시피는 조정이 필요한 특성에 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e4b2e4fdd23d41dfea9d8225a12a424a715230bb" translate="yes" xml:space="preserve">
          <source>Similarly, this:</source>
          <target state="translated">마찬가지로, 이것은 :</target>
        </trans-unit>
        <trans-unit id="d1bdda2be136926ef9a893301ff91d18747c507f" translate="yes" xml:space="preserve">
          <source>Similarly, to copy an anonymous hash, you can use</source>
          <target state="translated">마찬가지로 익명 해시를 복사하려면</target>
        </trans-unit>
        <trans-unit id="7850beac28db723d025cfad11fb93ce97e2ced9b" translate="yes" xml:space="preserve">
          <source>Similarly, using &lt;code&gt;$^W&lt;/code&gt; to either disable or enable blocks of code is fundamentally flawed. For a start, say you want to disable warnings in a block of code. You might expect this to be enough to do the trick:</source>
          <target state="translated">마찬가지로 &lt;code&gt;$^W&lt;/code&gt; 를 사용하여 코드 블록을 비활성화하거나 활성화하는 것은 근본적으로 결함이 있습니다. 시작하려면 코드 블록에서 경고를 비활성화한다고 가정하십시오. 트릭을 수행하기에 충분할 것으로 예상 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2664530a7df4eabf1ac2e9d54c9f06c6deee6b41" translate="yes" xml:space="preserve">
          <source>Similarly, with this code</source>
          <target state="translated">마찬가지로이 코드로</target>
        </trans-unit>
        <trans-unit id="b0293d771b0de8656e1c85bf1faad486bf545599" translate="yes" xml:space="preserve">
          <source>Similarly, you may use these I/O layers on output streams to automatically convert Unicode to the specified encoding when it is written to the stream. For example, the following snippet copies the contents of the file &quot;text.jis&quot; (encoded as ISO-2022-JP, aka JIS) to the file &quot;text.utf8&quot;, encoded as UTF-8:</source>
          <target state="translated">마찬가지로 출력 스트림에서 이러한 I / O 레이어를 사용하여 유니 코드가 스트림에 기록 될 때 지정된 인코딩으로 자동 변환 할 수 있습니다. 예를 들어, 다음 스 니펫은 &quot;text.jis&quot;파일 (ISO-2022-JP, 일명 JIS)의 내용을 UTF-8로 인코딩 된 &quot;text.utf8&quot;파일에 복사합니다.</target>
        </trans-unit>
        <trans-unit id="a9548affa7e4acbe2593b885978a8755658bc00f" translate="yes" xml:space="preserve">
          <source>Similary to</source>
          <target state="translated">와 유사</target>
        </trans-unit>
        <trans-unit id="d038c3b0b4f25db2b86d3e73c906bad029553a54" translate="yes" xml:space="preserve">
          <source>Simon Cozens &amp;lt;simon AT brecon DOT co DOT uk&amp;gt; - Being there to answer zillions of annoying questions</source>
          <target state="translated">Simon Cozens &amp;lt;simon AT brecon DOT co DOT uk&amp;gt;-성가신 질문에 답하기 위해 거기에있는 것</target>
        </trans-unit>
        <trans-unit id="db6a8ce8a7b56a60b15a1e81509c2149cf995dfb" translate="yes" xml:space="preserve">
          <source>Simon Cozens and Wolfgang Laun.</source>
          <target state="translated">Simon Cozens와 Wolfgang Laun.</target>
        </trans-unit>
        <trans-unit id="911ebed02457e684e0b32e14a35ae78fa21f67e0" translate="yes" xml:space="preserve">
          <source>Simon Cozens, &lt;code&gt;simon@cpan.org&lt;/code&gt;</source>
          <target state="translated">사이먼 코 ​​젠스, &lt;code&gt;simon@cpan.org&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c339f709f7b43634c7fbcb9cbd9eccd0f9cc3ac2" translate="yes" xml:space="preserve">
          <source>Simple Mail Transfer Protocol Client</source>
          <target state="translated">단순 메일 전송 프로토콜 클라이언트</target>
        </trans-unit>
        <trans-unit id="83f59937d173df040577971290f0e1cacd671a9c" translate="yes" xml:space="preserve">
          <source>Simple Statements</source>
          <target state="translated">간단한 진술</target>
        </trans-unit>
        <trans-unit id="fd89bedbaeb791041cff4fe148dbfde653b95d00" translate="yes" xml:space="preserve">
          <source>Simple assignment is not overloadable (the &lt;code&gt;'='&lt;/code&gt; key is used for the &lt;a href=&quot;#Copy-Constructor&quot;&gt;Copy Constructor&lt;/a&gt;). Perl does have a way to make assignments to an object do whatever you want, but this involves using tie(), not overload - see &lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt; and the &lt;a href=&quot;#COOKBOOK&quot;&gt;COOKBOOK&lt;/a&gt; examples below.</source>
          <target state="translated">단순 할당은 오버로드 할 수 없습니다 ( &lt;code&gt;'='&lt;/code&gt; 키가 &lt;a href=&quot;#Copy-Constructor&quot;&gt;복사 생성자에&lt;/a&gt; 사용됨 ). Perl은 객체에 할당하는 방법이 있지만 원하는 것은 오버로드가 아닌 tie ()를 사용 합니다. 아래의 &lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt; 및 &lt;a href=&quot;#COOKBOOK&quot;&gt;COOKBOOK&lt;/a&gt; 예를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="94eac8882772ef72bea55863ece1200dedf301b7" translate="yes" xml:space="preserve">
          <source>Simple enough. Now compile and run:</source>
          <target state="translated">충분히 간단합니다. 이제 컴파일하고 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="764eff41a5149cfadde2c6b72cdd2e21368ca43b" translate="yes" xml:space="preserve">
          <source>Simple examples to open a file for reading:</source>
          <target state="translated">읽을 파일을 여는 간단한 예 :</target>
        </trans-unit>
        <trans-unit id="8bbdbbffdc1d0c057f0470ba8573e7773f1d085a" translate="yes" xml:space="preserve">
          <source>Simple interface to Locale::Maketext::Lexicon</source>
          <target state="translated">Locale :: Maketext :: Lexicon에 대한 간단한 인터페이스</target>
        </trans-unit>
        <trans-unit id="d1a65de4566d838633c7cfe8d2f3954d6165e02e" translate="yes" xml:space="preserve">
          <source>Simple methods for simple tasks</source>
          <target state="translated">간단한 작업을위한 간단한 방법</target>
        </trans-unit>
        <trans-unit id="107deb5b12e566d319794bc7ce2d8bcc70c508d0" translate="yes" xml:space="preserve">
          <source>Simple options</source>
          <target state="translated">간단한 옵션</target>
        </trans-unit>
        <trans-unit id="b3c11d00394d5efd68e3089882ea99ef88db2b49" translate="yes" xml:space="preserve">
          <source>Simple subroutine to insert the macros defined by the macro attribute into the Makefile.</source>
          <target state="translated">매크로 속성으로 정의 된 매크로를 Makefile에 삽입하는 간단한 서브 루틴.</target>
        </trans-unit>
        <trans-unit id="4f78d32b59c097fb10ad26d36f2e74fdbebe4e64" translate="yes" xml:space="preserve">
          <source>Simple word matching</source>
          <target state="translated">간단한 단어 매칭</target>
        </trans-unit>
        <trans-unit id="f7b02d0f94f21913ddb8d295324658b8720d69e0" translate="yes" xml:space="preserve">
          <source>Simple, eh?</source>
          <target state="translated">간단 해요?</target>
        </trans-unit>
        <trans-unit id="4ee1790ba48c5c5f5aec6b6de12f218c366e78db" translate="yes" xml:space="preserve">
          <source>Simple... Now look:</source>
          <target state="translated">간단 ... 이제보세요 :</target>
        </trans-unit>
        <trans-unit id="6c9330b7a2ff965f7db6cafb9f575b4d58374515" translate="yes" xml:space="preserve">
          <source>Simpler definition of attribute handlers</source>
          <target state="translated">속성 핸들러의 간단한 정의</target>
        </trans-unit>
        <trans-unit id="50c361747016ee3aff5355a6c96f0c2b139551ef" translate="yes" xml:space="preserve">
          <source>Simplest way to do it automatically is to use your version control system's revision number (you are using version control, right?).</source>
          <target state="translated">자동으로 수행하는 가장 간단한 방법은 버전 관리 시스템의 개정 번호를 사용하는 것입니다 (버전 관리를 사용하고 있습니까?).</target>
        </trans-unit>
        <trans-unit id="68be18029150583164f9438753e32a72fd3e4c87" translate="yes" xml:space="preserve">
          <source>Simplified source filtering</source>
          <target state="translated">단순화 된 소스 필터링</target>
        </trans-unit>
        <trans-unit id="66f7f6fe24549ec54694a312ab799bde4d89b2f3" translate="yes" xml:space="preserve">
          <source>Simply not portable. Get your lvalue to be of the right type, or maybe use temporary variables, or dirty tricks with unions.</source>
          <target state="translated">휴대용이 아닙니다. lvalue를 올바른 유형으로 만들거나 임시 변수를 사용하거나 공용체를 사용하여 더티 트릭을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="20084b93a5f754ce0ccd01de74eb0172d18babfc" translate="yes" xml:space="preserve">
          <source>Simply put:</source>
          <target state="translated">간단히 말해서:</target>
        </trans-unit>
        <trans-unit id="991f810db6d12637f2fd5bbddcb5e86f7ab43bb2" translate="yes" xml:space="preserve">
          <source>Simply put: for each extension linked with your Perl executable (determined during its initial configuration on your computer or when adding a new extension), a Perl subroutine is created to incorporate the extension's routines. Normally, that subroutine is named</source>
          <target state="translated">간단히 말해 : Perl 실행 파일과 연결된 각 확장 (컴퓨터의 초기 구성 중 또는 새 확장을 추가 할 때 결정)에 대해 확장의 루틴을 통합하기 위해 Perl 서브 루틴이 작성됩니다. 일반적으로 해당 서브 루틴의 이름은</target>
        </trans-unit>
        <trans-unit id="86b802f817d8db47f98e358e0df4e43c122569da" translate="yes" xml:space="preserve">
          <source>Simply run</source>
          <target state="translated">간단히 실행</target>
        </trans-unit>
        <trans-unit id="14c3e2e53d9dfb6b8072093e8b927f77f6a76d42" translate="yes" xml:space="preserve">
          <source>Simply says that we're Unix.</source>
          <target state="translated">단순히 우리가 유닉스라고 말합니다.</target>
        </trans-unit>
        <trans-unit id="22a4ed66c623d273a571652cc9ae1a89577a837f" translate="yes" xml:space="preserve">
          <source>Since</source>
          <target state="translated">Since</target>
        </trans-unit>
        <trans-unit id="60dbe9f3bc2001b2c722387a7d49aaabb3da33d1" translate="yes" xml:space="preserve">
          <source>Since # can be used for comments, # must be escaped.</source>
          <target state="translated">#은 주석에 사용될 수 있으므로 #는 이스케이프되어야합니다.</target>
        </trans-unit>
        <trans-unit id="af160de91abb536123124eac1ecabfc37de02e74" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; does a &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/wait&quot;&gt;wait&lt;/a&gt;&lt;/code&gt; it may affect a &lt;code&gt;SIGCHLD&lt;/code&gt; handler. See &lt;a href=&quot;perlipc&quot;&gt;perlipc&lt;/a&gt; for details.</source>
          <target state="translated">이후 &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; 않습니다 &lt;code&gt;&lt;a href=&quot;functions/fork&quot;&gt;fork&lt;/a&gt;&lt;/code&gt; 와 &lt;code&gt;&lt;a href=&quot;functions/wait&quot;&gt;wait&lt;/a&gt;&lt;/code&gt; 그것은 영향을 미칠 수 &lt;code&gt;SIGCHLD&lt;/code&gt; 의 핸들러를. 자세한 내용은 &lt;a href=&quot;perlipc&quot;&gt;perlipc&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="aba59b2cf00e40d21bac4c0a192544510ddcbae0" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; will also call the &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; method, the actual value for &lt;code&gt;MODULE&lt;/code&gt; must be a bareword. That is, &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; cannot load files by name, although &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; can:</source>
          <target state="translated">때문에 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; 또한 호출 &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; 방법에 대한 실제 값 &lt;code&gt;MODULE&lt;/code&gt; bareword는 있어야합니다. 즉, &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; 하지만, 이름으로 파일을로드 할 수 없습니다 &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; 캔 :</target>
        </trans-unit>
        <trans-unit id="73d2921b742823e6f578c98791a72739f4a21337" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;&lt;a href=&quot;system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; does a &lt;code&gt;&lt;a href=&quot;fork&quot;&gt;fork&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;wait&quot;&gt;wait&lt;/a&gt;&lt;/code&gt; it may affect a &lt;code&gt;SIGCHLD&lt;/code&gt; handler. See &lt;a href=&quot;../perlipc&quot;&gt;perlipc&lt;/a&gt; for details.</source>
          <target state="translated">이후 &lt;code&gt;&lt;a href=&quot;system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; 않습니다 &lt;code&gt;&lt;a href=&quot;fork&quot;&gt;fork&lt;/a&gt;&lt;/code&gt; 와 &lt;code&gt;&lt;a href=&quot;wait&quot;&gt;wait&lt;/a&gt;&lt;/code&gt; 그것은 영향을 미칠 수 &lt;code&gt;SIGCHLD&lt;/code&gt; 의 핸들러를. 자세한 내용은 &lt;a href=&quot;../perlipc&quot;&gt;perlipc&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="53cc6266d93eb2a78be0857ad5ecd43af7e2b644" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;Archive::Tar&lt;/code&gt; doesn't change the current directory internally while it is extracting the items in a tarball, all calls to &lt;code&gt;Cwd::cwd()&lt;/code&gt; can be avoided if we can guarantee that the current directory doesn't get changed externally.</source>
          <target state="translated">이후 &lt;code&gt;Archive::Tar&lt;/code&gt; 가에 타르에있는 항목, 모든 통화를 추출하는 동안 내부적으로 현재 디렉토리를 변경하지 않습니다 &lt;code&gt;Cwd::cwd()&lt;/code&gt; 우리가 현재 디렉토리 외부에서 변경되지 않음을 보장 할 수있는 경우를 피할 수있다.</target>
        </trans-unit>
        <trans-unit id="8c3c7a53144e6a3302e2a2f9e7b6229b194fa174" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;SIGINT&lt;/code&gt; and &lt;code&gt;SIGQUIT&lt;/code&gt; are ignored during the execution of &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt;, if you expect your program to terminate on receipt of these signals you will need to arrange to do so yourself based on the return value.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; 실행 중에 &lt;code&gt;SIGINT&lt;/code&gt; 및 &lt;code&gt;SIGQUIT&lt;/code&gt; 는 무시 되므로 이러한 신호를 수신하여 프로그램이 종료 될 것으로 예상되는 경우 반환 값을 기준으로 직접 조치를 취해야합니다.</target>
        </trans-unit>
        <trans-unit id="e4f45d5c1543b43feed600201b8df9285b671829" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;SIGINT&lt;/code&gt; and &lt;code&gt;SIGQUIT&lt;/code&gt; are ignored during the execution of &lt;code&gt;&lt;a href=&quot;system&quot;&gt;system&lt;/a&gt;&lt;/code&gt;, if you expect your program to terminate on receipt of these signals you will need to arrange to do so yourself based on the return value.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; 실행 중에 &lt;code&gt;SIGINT&lt;/code&gt; 및 &lt;code&gt;SIGQUIT&lt;/code&gt; 는 무시 되므로 이러한 신호를 수신하여 프로그램이 종료 될 것으로 예상되는 경우 반환 값을 기준으로 직접 조치를 취해야합니다.</target>
        </trans-unit>
        <trans-unit id="c78eaa920d9b2c6c4c17bb6231c81108ebdc9ea7" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;XSRETURN_*&lt;/code&gt; macros can be used with CODE blocks as well, one can rewrite this example as:</source>
          <target state="translated">이후 &lt;code&gt;XSRETURN_*&lt;/code&gt; 매크로뿐만 아니라 코드 블록을 사용할 수 있습니다, 하나는이 예제를 다시 작성할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="4ae1fb90f2e2a999e504c7cb0f71e0777fa542ca" translate="yes" xml:space="preserve">
          <source>Since CPAN.pm version 1.88_51 modules declared as &lt;code&gt;build_requires&lt;/code&gt; by a distribution are treated differently depending on the config variable &lt;code&gt;build_requires_install_policy&lt;/code&gt; . By setting &lt;code&gt;build_requires_install_policy&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt;&lt;/code&gt;, such a module is not installed. It is only built and tested, and then kept in the list of tested but uninstalled modules. As such, it is available during the build of the dependent module by integrating the path to the &lt;code&gt;blib/arch&lt;/code&gt; and &lt;code&gt;blib/lib&lt;/code&gt; directories in the environment variable PERL5LIB. If &lt;code&gt;build_requires_install_policy&lt;/code&gt; is set ti &lt;code&gt;yes&lt;/code&gt; , then both modules declared as &lt;code&gt;requires&lt;/code&gt; and those declared as &lt;code&gt;build_requires&lt;/code&gt; are treated alike. By setting to &lt;code&gt;ask/yes&lt;/code&gt; or &lt;code&gt;ask/&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt;&lt;/code&gt; , CPAN.pm asks the user and sets the default accordingly.</source>
          <target state="translated">분배에 의해 &lt;code&gt;build_requires&lt;/code&gt; 로 선언 된 CPAN.pm 버전 1.88_51 모듈 은 구성 변수 &lt;code&gt;build_requires_install_policy&lt;/code&gt; 에 따라 다르게 처리 됩니다. &lt;code&gt;build_requires_install_policy&lt;/code&gt; 를 &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt;&lt;/code&gt; 로 설정 하면 해당 모듈이 설치되지 않습니다. 빌드 및 테스트 된 다음 테스트되었지만 제거 된 모듈 목록에 보관됩니다. 따라서 환경 변수 PERL5LIB 의 &lt;code&gt;blib/arch&lt;/code&gt; 및 &lt;code&gt;blib/lib&lt;/code&gt; 디렉토리에 대한 경로를 통합하여 종속 모듈을 빌드하는 동안 사용 가능합니다 . &lt;code&gt;build_requires_install_policy&lt;/code&gt; 가 ti &lt;code&gt;yes&lt;/code&gt; 로 설정된 경우 모듈로 선언 된 모듈 &lt;code&gt;requires&lt;/code&gt; 과 모듈로 선언 된 모듈 &lt;code&gt;build_requires&lt;/code&gt; 로 동일 하게 취급됩니다. 을 설정하여 &lt;code&gt;ask/yes&lt;/code&gt; 또는 &lt;code&gt;ask/&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt;&lt;/code&gt; , CPAN.pm은 사용자에게 요청하고 그에 따라 기본값을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="92bd94b93ba7aa98da9b694cc55416c0183aa164" translate="yes" xml:space="preserve">
          <source>Since DLLs may be loaded at run time, to have the same mechanism for DLLs one needs to have the address range of</source>
          <target state="translated">DLL은 런타임에로드 될 수 있으므로 DLL에 대해 동일한 메커니즘을 가지려면 주소 범위가 다음과 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="b8d7eab0940cbd19c7e5c0a0410f1af9f2b70a97" translate="yes" xml:space="preserve">
          <source>Since Emacs version 19 patchlevel 22 or so, there have been both a perl-mode.el and support for the Perl debugger built in. These should come with the standard Emacs 19 distribution.</source>
          <target state="translated">Emacs 버전 19 패치 레벨 22 정도 이후로는 perl-mode.el과 Perl 디버거가 내장되어 있습니다. 표준 Emacs 19 배포판이 함께 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="ae992899a872766d28cfb8b692b2e7f7ecf24212" translate="yes" xml:space="preserve">
          <source>Since File::Spec is object oriented, subroutines should not be called directly, as in:</source>
          <target state="translated">File :: Spec은 객체 지향이므로 서브 루틴은 다음과 같이 직접 호출하면 안됩니다.</target>
        </trans-unit>
        <trans-unit id="58330cb00aafa72e888d41a23aef159c39b70e0c" translate="yes" xml:space="preserve">
          <source>Since INPUT sections allow declaration of C variables which do not appear in the parameter list of a subroutine, this may be shortened to:</source>
          <target state="translated">INPUT 섹션은 서브 루틴의 매개 변수리스트에 나타나지 않는 C 변수의 선언을 허용하므로 다음과 같이 단축 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="45546e69c804ad74560b03b1bfa0ada21545dbab" translate="yes" xml:space="preserve">
          <source>Since Math::BigInt and BigFloat also overload the normal math operations, the following line will still work:</source>
          <target state="translated">Math :: BigInt 및 BigFloat도 일반 수학 연산을 오버로드하므로 다음 행은 계속 작동합니다.</target>
        </trans-unit>
        <trans-unit id="bfdb84eddf5f43124818a551b78d4d19bef89ac6" translate="yes" xml:space="preserve">
          <source>Since OS/2 port of perl uses a remarkable EMX environment, it can run (and build extensions, and - possibly - be built itself) under any environment which can run EMX. The current list is DOS, DOS-inside-OS/2, Win0.3*, Win0.95 and WinNT. Out of many perl flavors, only one works, see &lt;a href=&quot;#perl_.exe&quot;&gt;perl_.exe&lt;/a&gt;.</source>
          <target state="translated">perl의 OS / 2 포트는 현저한 EMX 환경을 사용하므로 EMX를 실행할 수있는 모든 환경에서 확장 (빌드 및 빌드 확장 가능)을 실행할 수 있습니다. 현재 목록은 DOS, DOS-inside-OS / 2, Win0.3 *, Win0.95 및 WinNT입니다. 많은 perl 풍미 중 하나만 작동합니다 ( &lt;a href=&quot;#perl_.exe&quot;&gt;perl_.exe&lt;/a&gt; 참조) .</target>
        </trans-unit>
        <trans-unit id="6084ebce66f9d95008fbd76add0c4721f5880c4b" translate="yes" xml:space="preserve">
          <source>Since PERL_SYS_INIT3() may change &lt;code&gt;env&lt;/code&gt; , it may be more appropriate to provide &lt;code&gt;env&lt;/code&gt; as an argument to perl_parse().</source>
          <target state="translated">PERL_SYS_INIT3 ()는 &lt;code&gt;env&lt;/code&gt; 를 변경할 수 있으므로 &lt;code&gt;env&lt;/code&gt; 를 perl_parse ()에 인수로 제공하는 것이 더 적절할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="908c64d54ba36fa8efadd65bbb91e193ec071dc5" translate="yes" xml:space="preserve">
          <source>Since Perl 5.004, however, this situation is a special case and Perl creates the hash key only when you make the assignment:</source>
          <target state="translated">그러나 Perl 5.004 이후로이 상황은 특별한 경우이며 Perl은 지정을 할 때만 해시 키를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="a9ff67b0f4d57746c4f60694c82d05a6c7b9009b" translate="yes" xml:space="preserve">
          <source>Since Perl 5.16.0, the &lt;code&gt;&lt;a href=&quot;functions/__sub__&quot;&gt;__SUB__&lt;/a&gt;&lt;/code&gt; token is available under &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature
'current_sub'&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; 5.16.0&lt;/code&gt; . It will evaluate to a reference to the currently-running sub, which allows for recursive calls without knowing your subroutine's name.</source>
          <target state="translated">펄 5.16.0 이후 &lt;code&gt;&lt;a href=&quot;functions/__sub__&quot;&gt;__SUB__&lt;/a&gt;&lt;/code&gt; 의 토큰은 아래에서 볼 수 있습니다 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; feature 'current_sub'&lt;/code&gt; 와 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; 5.16.0&lt;/code&gt; 합니다. 현재 실행중인 서브에 대한 참조로 평가되어 서브 루틴의 이름을 모르고 재귀 호출을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="1fd1865b1bb90979ee802c45310e91e7b7152674" translate="yes" xml:space="preserve">
          <source>Since Perl 5.6.1 the special variables @- and @+ can functionally replace $`, $&amp;amp; and $'. These arrays contain pointers to the beginning and end of each match (see perlvar for the full story), so they give you essentially the same information, but without the risk of excessive string copying.</source>
          <target state="translated">Perl 5.6.1부터 특수 변수 @-및 @ +는 기능적으로 $`, $ &amp;amp; 및 $ '를 대체 할 수 있습니다. 이 배열에는 각 경기의 시작과 끝에 대한 포인터가 포함되어 있으므로 (전체 기사는 perlvar 참조) 본질적으로 동일한 정보를 제공하지만 과도한 문자열 복사의 위험이 없습니다.</target>
        </trans-unit>
        <trans-unit id="0c3b5811fc581b714a97d98184d154d442e77a68" translate="yes" xml:space="preserve">
          <source>Since Perl 5.8, thread programming has been available using a model called</source>
          <target state="translated">Perl 5.8부터 스레드 프로그래밍은</target>
        </trans-unit>
        <trans-unit id="8b1528960c7f653f3987ab48deb0e1d4226f3c72" translate="yes" xml:space="preserve">
          <source>Since Perl 5.8.0 a file handle referring to a string can be created by calling open with a reference to that string instead of the filename. This file handle can then be used to read from or write to the string:</source>
          <target state="translated">Perl 5.8.0부터는 파일 이름 대신 해당 문자열을 참조하여 open을 호출하여 문자열을 참조하는 파일 핸들을 작성할 수 있습니다. 그런 다음이 파일 핸들을 사용하여 문자열을 읽거나 문자열에 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bd9a4f3a496c7e0b6fbb6d2a333860ae199a0774" translate="yes" xml:space="preserve">
          <source>Since Perl 5.8.0, if the first two elements of the list are &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;, the utime(2) syscall from your C library is called with a null second argument. On most systems, this will set the file's access and modification times to the current time (i.e., equivalent to the example above) and will work even on files you don't own provided you have write permission:</source>
          <target state="translated">Perl 5.8.0부터 목록의 처음 두 요소가 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 인 경우 C 라이브러리의 utime (2) syscall이 널 (null) 초 인수와 함께 호출됩니다. 대부분의 시스템에서 이것은 파일의 액세스 및 수정 시간을 현재 시간으로 설정하고 (예 : 위의 예와 동일) 쓰기 권한이있는 경우 소유하지 않은 파일에서도 작동합니다.</target>
        </trans-unit>
        <trans-unit id="82732a952fbe092bd928ea5f2a3dfaabc967f5cd" translate="yes" xml:space="preserve">
          <source>Since Perl 5.8.0, if the first two elements of the list are &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;, the utime(2) syscall from your C library is called with a null second argument. On most systems, this will set the file's access and modification times to the current time (i.e., equivalent to the example above) and will work even on files you don't own provided you have write permission:</source>
          <target state="translated">Perl 5.8.0부터 목록의 처음 두 요소가 &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 인 경우 C 라이브러리의 utime (2) syscall이 널 (null) 초 인수와 함께 호출됩니다. 대부분의 시스템에서 이것은 파일의 액세스 및 수정 시간을 현재 시간으로 설정하고 (예 : 위의 예와 동일) 쓰기 권한이있는 경우 소유하지 않은 파일에서도 작동합니다.</target>
        </trans-unit>
        <trans-unit id="e51f3522d03a5b3a232bf4033ea382564508f931" translate="yes" xml:space="preserve">
          <source>Since Perl 5.8.0, signals have been made safer in Perl by postponing their handling until the interpreter is in a</source>
          <target state="translated">Perl 5.8.0 이후로, 통역사가</target>
        </trans-unit>
        <trans-unit id="f2d46e3f9d2d01548c43a50c625a8e637b891700" translate="yes" xml:space="preserve">
          <source>Since Perl 5.8.0, you can also use the list form of &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; for pipes. This is preferred when you wish to avoid having the shell interpret metacharacters that may be in your command string.</source>
          <target state="translated">Perl 5.8.0부터 파이프에 대해 목록 &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; 형식을 사용할 수도 있습니다 . 쉘이 명령 문자열에있을 수있는 메타 문자를 해석하지 않도록하려는 경우에 선호됩니다.</target>
        </trans-unit>
        <trans-unit id="3480b6dbc008fbf05d437030616ffbd60db1a205" translate="yes" xml:space="preserve">
          <source>Since Perl 5.9.5</source>
          <target state="translated">Perl 이후 5.9.5</target>
        </trans-unit>
        <trans-unit id="83749785256b2bd98e45a0b0907ae739a924facc" translate="yes" xml:space="preserve">
          <source>Since Perl doesn't currently do anything with the &lt;code&gt;LC_MONETARY&lt;/code&gt; category, specifying &lt;code&gt;:monetary&lt;/code&gt; does effectively nothing. Some systems have other categories, such as &lt;code&gt;LC_PAPER_SIZE&lt;/code&gt; , but Perl also doesn't know anything about them, and there is no way to specify them in this pragma's arguments.</source>
          <target state="translated">Perl은 현재 &lt;code&gt;LC_MONETARY&lt;/code&gt; 범주를 사용하여 작업을 수행하지 않으므로 &lt;code&gt;:monetary&lt;/code&gt; 를 지정 하면 사실상 아무 작업도 수행되지 않습니다. 일부 시스템에는 &lt;code&gt;LC_PAPER_SIZE&lt;/code&gt; 와 같은 다른 범주가 있지만 Perl은 이에 대해 아무것도 알지 못 하므로이 pragma의 인수에서 시스템을 지정할 방법이 없습니다.</target>
        </trans-unit>
        <trans-unit id="7873f3b494192ca12067337abef4df445eb77998" translate="yes" xml:space="preserve">
          <source>Since Perl may compile the pattern at the moment of execution of the &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr()&lt;/a&gt;&lt;/code&gt; operator, using &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr()&lt;/a&gt;&lt;/code&gt; may have speed advantages in some situations, notably if the result of &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr()&lt;/a&gt;&lt;/code&gt; is used standalone:</source>
          <target state="translated">펄의 실행 시점의 패턴을 컴파일 할 수 있으므로 &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr()&lt;/a&gt;&lt;/code&gt; 하여, 운영자 &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr()&lt;/a&gt;&lt;/code&gt; 한 결과, 특히 경우, 어떤 상황에서는 고속의 장점을 가질 수있다 &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr()&lt;/a&gt;&lt;/code&gt; 사용하는 독립이다 :</target>
        </trans-unit>
        <trans-unit id="a306c8d466811a3ef5f554b084c63b5f925fc7a3" translate="yes" xml:space="preserve">
          <source>Since Perl processes the &lt;code&gt;#!&lt;/code&gt; -line (cf. &lt;a href=&quot;perlrun#DESCRIPTION&quot;&gt;DESCRIPTION in perlrun&lt;/a&gt;, &lt;a href=&quot;perlrun#Command-Switches&quot;&gt;Command Switches in perlrun&lt;/a&gt;, &lt;a href=&quot;perldiag#No-Perl-script-found-in-input&quot;&gt;No Perl script found in input in perldiag&lt;/a&gt;), it should know when a program</source>
          <target state="translated">Perl은 &lt;code&gt;#!&lt;/code&gt; -line (참조 &lt;a href=&quot;perlrun#DESCRIPTION&quot;&gt;perlrun의 설명, perlrun&lt;/a&gt; 의 &lt;a href=&quot;perlrun#Command-Switches&quot;&gt;명령 스위치&lt;/a&gt; , &lt;a href=&quot;perldiag#No-Perl-script-found-in-input&quot;&gt;perldiag의 입력에서 Perl 스크립트를 찾을 수 없음&lt;/a&gt; ), 프로그램 시간을 알아야합니다</target>
        </trans-unit>
        <trans-unit id="8b7890be1aa1eaa7cb9334a73bda7962f1d481f1" translate="yes" xml:space="preserve">
          <source>Since Perl recognizes a Unicode Byte Order Mark at the start of files as signaling that the file is Unicode encoded as in UTF-16 (whether big-endian or little-endian) or UTF-8, Pod parsers should do the same. Otherwise, the character encoding should be understood as being UTF-8 if the first highbit byte sequence in the file seems valid as a UTF-8 sequence, or otherwise as CP-1252 (earlier versions of this specification used Latin-1 instead of CP-1252).</source>
          <target state="translated">Perl은 파일 시작 부분에서 파일이 UTF-16 (big-endian 또는 little-endian) 또는 UTF-8에서와 같이 유니 코드로 인코딩됨을 나타내는 신호로 유니 코드 바이트 순서 표시를 인식하므로 포드 파서는 동일하게 수행해야합니다. 그렇지 않으면 파일의 첫 번째 하이 비트 바이트 시퀀스가 ​​UTF-8 시퀀스로 유효하거나 CP-1252 (이 사양의 이전 버전에서는 CP 대신 라틴 -1을 사용함)로 문자 인코딩을 UTF-8로 이해해야합니다. -1252).</target>
        </trans-unit>
        <trans-unit id="6b73dcb8330d72308d60b51669745466fec012ac" translate="yes" xml:space="preserve">
          <source>Since Perl v5.22.0, calls to this function are optimized out on ASCII platforms, so there is no performance hit in using it there.</source>
          <target state="translated">Perl v5.22.0부터이 기능에 대한 호출은 ASCII 플랫폼에서 최적화되었으므로이 기능을 사용할 때 성능이 저하되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9077183204414786a18b0b5b41280a8b58d8fe93" translate="yes" xml:space="preserve">
          <source>Since Perl v5.6.0, Perl variable names may be alphanumeric strings that begin with a caret (or a control character, but this form is deprecated). These variables must be written in the form &lt;code&gt;${^Foo}&lt;/code&gt; ; the braces are not optional. &lt;code&gt;${^Foo}&lt;/code&gt; denotes the scalar variable whose name is a control-&lt;code&gt;F&lt;/code&gt; followed by two &lt;code&gt;o&lt;/code&gt; 's. These variables are reserved for future special uses by Perl, except for the ones that begin with &lt;code&gt;^_&lt;/code&gt; (control-underscore or caret-underscore). No control-character name that begins with &lt;code&gt;^_&lt;/code&gt; will acquire a special meaning in any future version of Perl; such names may therefore be used safely in programs. &lt;code&gt;$^_&lt;/code&gt; itself, however,</source>
          <target state="translated">Perl v5.6.0부터 Perl 변수 이름은 캐럿 (또는 제어 문자로 시작하지만이 양식은 더 이상 사용되지 않음)으로 시작하는 영숫자 문자열 일 수 있습니다. 이 변수는 &lt;code&gt;${^Foo}&lt;/code&gt; 형식으로 작성해야합니다 . 중괄호는 선택 사항이 아닙니다. &lt;code&gt;${^Foo}&lt;/code&gt; 는 이름이 control- &lt;code&gt;F&lt;/code&gt; 이고 두 개의 &lt;code&gt;o&lt;/code&gt; 가 오는 스칼라 변수를 나타냅니다 . 이 변수는 &lt;code&gt;^_&lt;/code&gt; (제어 밑줄 또는 캐럿 밑줄)로 시작하는 변수를 제외하고 Perl이 나중에 특수하게 사용하도록 예약되어 있습니다 . &lt;code&gt;^_&lt;/code&gt; 시작하는 제어 문자 이름은 향후 Perl 버전에서 특별한 의미를 갖지 않습니다. 따라서 이러한 이름은 프로그램에서 안전하게 사용할 수 있습니다. 그러나 &lt;code&gt;$^_&lt;/code&gt; 자체는</target>
        </trans-unit>
        <trans-unit id="33f810cef075561e9d829f100d7d5982e746f4f2" translate="yes" xml:space="preserve">
          <source>Since PodParser-1.24 the &lt;b&gt;Pod::Checker&lt;/b&gt; module uses only the &lt;b&gt;poderror&lt;/b&gt; method to print errors and warnings. The summary output (e.g. &quot;Pod syntax OK&quot;) has been dropped from the module and has been included in &lt;b&gt;podchecker&lt;/b&gt; (the script). This allows users of &lt;b&gt;Pod::Checker&lt;/b&gt; to control completely the output behavior. Users of &lt;b&gt;podchecker&lt;/b&gt; (the script) get the well-known behavior.</source>
          <target state="translated">PodParser-1.24부터 &lt;b&gt;Pod :: Checker&lt;/b&gt; 모듈은 &lt;b&gt;poderror&lt;/b&gt; 메소드 만 사용하여 오류 및 경고를 인쇄합니다. 요약 출력 (예 : &quot;Pod syntax OK&quot;)이 모듈에서 삭제되었으며 &lt;b&gt;podchecker&lt;/b&gt; (스크립트) 에 포함되었습니다 . 이를 통해 &lt;b&gt;Pod :: Checker&lt;/b&gt; 사용자 는 출력 동작을 완전히 제어 할 수 있습니다. &lt;b&gt;podchecker&lt;/b&gt; (스크립트) 사용자는 잘 알려진 동작을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="c62ae1b79550d7e8d8b071446dadbd144fa9a44a" translate="yes" xml:space="preserve">
          <source>Since Storable version 2.05, CODE references may be serialized with the help of &lt;a href=&quot;b/deparse&quot;&gt;B::Deparse&lt;/a&gt;. To enable this feature, set &lt;code&gt;$Storable::Deparse&lt;/code&gt; to a true value. To enable deserialization, &lt;code&gt;$Storable::Eval&lt;/code&gt; should be set to a true value. Be aware that deserialization is done through &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;, which is dangerous if the Storable file contains malicious data. You can set &lt;code&gt;$Storable::Eval&lt;/code&gt; to a subroutine reference which would be used instead of &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;. See below for an example using a &lt;a href=&quot;safe&quot;&gt;Safe&lt;/a&gt; compartment for deserialization of CODE references.</source>
          <target state="translated">Storable 버전 2.05부터 &lt;a href=&quot;b/deparse&quot;&gt;B :: Deparse&lt;/a&gt; 의 도움으로 CODE 참조가 직렬화 될 수 있습니다 . 이 기능을 사용하려면 &lt;code&gt;$Storable::Deparse&lt;/code&gt; 를 true 값으로 설정하십시오. 역 직렬화를 활성화하려면 &lt;code&gt;$Storable::Eval&lt;/code&gt; 을 true로 설정해야합니다. deserialization은 &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; 을 통해 수행 되므로 Storable 파일에 악성 데이터가 포함되어 있으면 위험합니다. &lt;code&gt;$Storable::Eval&lt;/code&gt; 을 &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; 대신 사용되는 서브 루틴 참조로 설정할 수 있습니다 . 코드 참조의 역 직렬화를 위해 &lt;a href=&quot;safe&quot;&gt;안전&lt;/a&gt; 구획을 사용하는 예는 아래를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f0441a16b2e74d4d0e51c5a02d816d3fcef92571" translate="yes" xml:space="preserve">
          <source>Since UTF-7 is a 7-bit (re)encoded version of UTF-16BE, It is not part of Unicode's Character Encoding Scheme. It is separately implemented in Encode::Unicode::UTF7. For details see &lt;a href=&quot;unicode/utf7&quot;&gt;Encode::Unicode::UTF7&lt;/a&gt;.</source>
          <target state="translated">UTF-7은 UTF-16BE의 7 비트 (재) 인코딩 된 버전이므로 유니 코드의 문자 인코딩 체계에 포함되지 않습니다. Encode :: Unicode :: UTF7에서 별도로 구현됩니다. 자세한 내용은 &lt;a href=&quot;unicode/utf7&quot;&gt;Encode :: Unicode :: UTF7을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2162d18e9f113918db80108542b383e4720b61a0" translate="yes" xml:space="preserve">
          <source>Since Unicode rules are not defined on these code points, if a Unicode-defined operation is done on them, Perl uses what we believe are sensible rules, while generally warning, using the &lt;code&gt;&quot;non_unicode&quot;&lt;/code&gt; category. For example, &lt;code&gt;&lt;a href=&quot;functions/uc&quot;&gt;uc(&quot;\x{11_0000}&quot;)&lt;/a&gt;&lt;/code&gt; will generate such a warning, returning the input parameter as its result, since Perl defines the uppercase of every non-Unicode code point to be the code point itself. (All the case changing operations, not just uppercasing, work this way.)</source>
          <target state="translated">이러한 코드 포인트에는 유니 코드 규칙이 정의되어 있지 않기 때문에 유니 코드 정의 작업이 수행되면 Perl은 &lt;code&gt;&quot;non_unicode&quot;&lt;/code&gt; 범주를 사용하여 일반적으로 경고하면서 합리적인 규칙을 사용합니다 . 예를 들어, &lt;code&gt;&lt;a href=&quot;functions/uc&quot;&gt;uc(&quot;\x{11_0000}&quot;)&lt;/a&gt;&lt;/code&gt; 는 이러한 경고를 생성하고 Perl은 모든 비 유니 코드 코드 포인트의 대문자를 코드 포인트 자체로 정의하므로 입력 매개 변수를 결과로 리턴합니다. (대문자뿐만 아니라 모든 경우 변경 작업은 이런 식으로 작동합니다.)</target>
        </trans-unit>
        <trans-unit id="7285a56d9c4d213c9ad280d3cdcf143edd27d7d8" translate="yes" xml:space="preserve">
          <source>Since VMS keeps track of files according to a different scheme than Unix, it's not really possible to represent the file's ID in the &lt;code&gt;st_dev&lt;/code&gt; and &lt;code&gt;st_ino&lt;/code&gt; fields of a &lt;code&gt;struct &lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; . Perl tries its best, though, and the values it uses are pretty unlikely to be the same for two different files. We can't guarantee this, though, so caveat scriptor.</source>
          <target state="translated">VMS는 Unix와 다른 방식으로 파일을 추적하기 때문에 &lt;code&gt;struct &lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt; 의 &lt;code&gt;st_dev&lt;/code&gt; 및 &lt;code&gt;st_ino&lt;/code&gt; 필드 에서 파일의 ID를 나타내는 것은 실제로 불가능합니다 . Perl은 최선을 다하지만, 사용하는 값이 서로 다른 두 파일에서 동일하지는 않습니다. 그러나 이것을 보증 할 수는 없으므로주의해야합니다.</target>
        </trans-unit>
        <trans-unit id="5c5a9b6174ae871df152be709da101732e21f32c" translate="yes" xml:space="preserve">
          <source>Since Windows has nothing as simple as an executable bit, we check the file extension.</source>
          <target state="translated">Windows는 실행 가능한 비트만큼 단순하지 않으므로 파일 확장자를 확인합니다.</target>
        </trans-unit>
        <trans-unit id="fd9730169823a0770803a5925e2496af06ca17b1" translate="yes" xml:space="preserve">
          <source>Since a TODO test does not need a reason, this function can return an empty string even when inside a TODO block. Use &lt;code&gt;$Test-&amp;gt;in_todo&lt;/code&gt; to determine if you are currently inside a TODO block.</source>
          <target state="translated">TODO 테스트는 이유가 필요하지 않으므로이 함수는 TODO 블록 내부에있는 경우에도 빈 문자열을 리턴 할 수 있습니다. &lt;code&gt;$Test-&amp;gt;in_todo&lt;/code&gt; 를 사용 하여 현재 TODO 블록 안에 있는지 판별하십시오.</target>
        </trans-unit>
        <trans-unit id="9ae46893bafbcba3b5e81c0b6866dc9c42e9443c" translate="yes" xml:space="preserve">
          <source>Since a wide character does not fit into a byte, the Digest::SHA routines croak if they encounter one. Whereas if a Unicode string contains no wide characters, the module accepts it quite happily. The following code illustrates the two cases:</source>
          <target state="translated">넓은 문자는 바이트에 맞지 않기 때문에 Digest :: SHA 루틴은 1을 만나면 삐걱 거립니다. 유니 코드 문자열에 넓은 문자가 포함되어 있지 않으면 모듈은이를 행복하게 받아들입니다. 다음 코드는 두 가지 경우를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="cf5ecd8beadbfc6894afc9b33f8c568a935ac82c" translate="yes" xml:space="preserve">
          <source>Since all &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; directives are executed at compile-time, the only way to change overloading during run-time is to</source>
          <target state="translated">모든 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; 지시문은 컴파일 타임에 실행 되므로 런타임 동안 오버로드를 변경하는 유일한 방법은</target>
        </trans-unit>
        <trans-unit id="121e9d461e86db932f5cbbcefdf834cbc71c32ee" translate="yes" xml:space="preserve">
          <source>Since all numbers are not objects, you can use all functions that are part of the BigInt or BigFloat API. It is wise to use only the bxxx() notation, and not the fxxx() notation, though. This makes you independent on the fact that the underlying object might morph into a different class than BigFloat.</source>
          <target state="translated">모든 숫자는 객체가 아니므로 BigInt 또는 BigFloat API의 일부인 모든 함수를 사용할 수 있습니다. fxxx () 표기법이 아닌 bxxx () 표기법 만 사용하는 것이 좋습니다. 따라서 기본 개체가 BigFloat와 다른 클래스로 변형 될 수 있다는 사실에 독립적으로 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a8ab3cbd0a89b8927ddf254335c455bf7a9e0853" translate="yes" xml:space="preserve">
          <source>Since all numbers are now objects, you can use all functions that are part of the BigInt API. You can only use the bxxx() notation, and not the fxxx() notation, though.</source>
          <target state="translated">모든 숫자는 이제 객체이므로 BigInt API의 일부인 모든 함수를 사용할 수 있습니다. 그러나 fxxx () 표기법이 아닌 bxxx () 표기법 만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4e2f7ef257d55f0fed05e16ea09bffefc9e8b92c" translate="yes" xml:space="preserve">
          <source>Since all numbers are now objects, you can use all functions that are part of the BigInt or BigFloat API. It is wise to use only the bxxx() notation, and not the fxxx() notation, though. This makes it possible that the underlying object might morph into a different class than BigFloat.</source>
          <target state="translated">모든 숫자는 이제 객체이므로 BigInt 또는 BigFloat API의 일부인 모든 함수를 사용할 수 있습니다. fxxx () 표기법이 아닌 bxxx () 표기법 만 사용하는 것이 좋습니다. 따라서 기본 개체가 BigFloat와 다른 클래스로 변형 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6baa6e390f30e8a9126d448dab3ed477bfa1776f" translate="yes" xml:space="preserve">
          <source>Since an expression &lt;code&gt;&quot;ab$cd,,&quot;&lt;/code&gt; is just a shortcut for &lt;code&gt;'ab' . $cd . ',,'&lt;/code&gt; , it is expected that overloaded constant strings are equipped with reasonable overloaded catenation operator, otherwise absurd results will result. Similarly, negative numbers are considered as negations of positive constants.</source>
          <target state="translated">표현식 &lt;code&gt;&quot;ab$cd,,&quot;&lt;/code&gt; 는 &lt;code&gt;'ab' . $cd . ',,'&lt;/code&gt; 바로 가기입니다 . $ cd. ',,' , 오버로드 된 상수 문자열에는 적절한 오버로드 된 catenation 연산자가 장착되어 있어야합니다. 그렇지 않으면 터무니없는 결과가 나타납니다. 마찬가지로 음수는 양의 상수에 대한 부정으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="6ad22ba0685e5d4fac9ab43140e5e8b95922e320" translate="yes" xml:space="preserve">
          <source>Since any scalar can be passed as a pattern, it's possible to implement an engine that does something with an array (&lt;code&gt;&quot;ook&quot; =~ [ qw/ eek
hlagh / ]&lt;/code&gt; ) or with the non-stringified form of a compiled regular expression (&lt;code&gt;&quot;ook&quot; =~ qr/eek/&lt;/code&gt; ). Perl's own engine will always stringify everything using the snippet above, but that doesn't mean other engines have to.</source>
          <target state="translated">스칼라를 패턴으로 전달할 수 있으므로 배열 ( &lt;code&gt;&quot;ook&quot; =~ [ qw/ eek hlagh / ]&lt;/code&gt; ) 또는 문자열 화되지 않은 형식의 컴파일 된 정규 표현식 ( &lt;code&gt;&quot;ook&quot; =~ qr/eek/&lt;/code&gt; 을 수행하는 엔진을 구현할 수 있습니다. ook &quot;= ~ qr / eek / ). Perl의 자체 엔진은 항상 위의 스 니펫을 사용하여 모든 것을 문자열 화하지만 다른 엔진이 그렇지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="641d084a3985af991bd9e2608e23022b03d9ab2f" translate="yes" xml:space="preserve">
          <source>Since blessed objects are actually stored as RV's, it is useful to use the typemap features to preprocess parameters and extract the actual SV stored within the blessed RV. See the sample for T_PTROBJ_SPECIAL below.</source>
          <target state="translated">축복받은 객체는 실제로 RV로 저장되므로 타입 맵 기능을 사용하여 매개 변수를 사전 처리하고 축복받은 RV에 저장된 실제 SV를 추출하는 것이 유용합니다. 아래의 T_PTROBJ_SPECIAL 샘플을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="8c4a595ff52b120e783068a746cfa5bbb3e02fd1" translate="yes" xml:space="preserve">
          <source>Since changing a slice changes the original array or hash that it's slicing, a &lt;code&gt;foreach&lt;/code&gt; construct will alter some--or even all--of the values of the array or hash.</source>
          <target state="translated">슬라이스를 변경하면 슬라이스하는 원래 배열이나 해시 가 변경되므로 &lt;code&gt;foreach&lt;/code&gt; 구문은 배열 또는 해시 값의 일부 또는 전체를 변경합니다.</target>
        </trans-unit>
        <trans-unit id="fe77918163189e19fb5ee32ad02fe79f3b55c3d3" translate="yes" xml:space="preserve">
          <source>Since code that runs both with and without threads is usually pretty messy, it's best to isolate the thread-specific code in its own module. In our example above, that's what &lt;code&gt;MyMod_threaded&lt;/code&gt; is, and it's only imported if we're running on a threaded Perl.</source>
          <target state="translated">스레드 유무에 관계없이 실행되는 코드는 일반적으로 매우 지저분하므로 스레드 특정 코드를 자체 모듈로 분리하는 것이 가장 좋습니다. 위의 예에서 이는 &lt;code&gt;MyMod_threaded&lt;/code&gt; 와 같 으며 스레드 된 Perl에서 실행중인 경우에만 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="7cbe078e4c38d00728f285597cf545219cabca7e" translate="yes" xml:space="preserve">
          <source>Since cygwin-1.7 pathnames are UTF-8 encoded.</source>
          <target state="translated">cygwin-1.7 경로 이름은 UTF-8로 인코딩되므로.</target>
        </trans-unit>
        <trans-unit id="266d3a18d9d36b211495f4b1c929d7f21c8d9c1c" translate="yes" xml:space="preserve">
          <source>Since cygwin-1.7 textmounts are deprecated and strongly discouraged.</source>
          <target state="translated">cygwin-1.7 텍스트 마운트는 더 이상 사용되지 않으며 사용하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="d1be23ed029f3a9d2b3315834beff1a066fe092b" translate="yes" xml:space="preserve">
          <source>Since environment variables are normally in all uppercase, no additional special formatting is generally needed; they're glaring enough as it is.</source>
          <target state="translated">환경 변수는 일반적으로 모두 대문자이므로 일반적으로 추가 특수 형식이 필요하지 않습니다. 그들은 충분히 눈부신 것입니다.</target>
        </trans-unit>
        <trans-unit id="af76bf7b4202770a0de3b09fc13dec72dab7c4f4" translate="yes" xml:space="preserve">
          <source>Since evaluation of the translation function (see &lt;a href=&quot;#CUSTOM-TRANSLATORS&quot;&gt;CUSTOM TRANSLATORS&lt;/a&gt;) happens in the middle of compilation (of a string literal), the translation function should not do any &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;s or &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt;s. This restriction should be lifted (but is low priority) in a future version of Perl.</source>
          <target state="translated">번역 함수의 평가 ( &lt;a href=&quot;#CUSTOM-TRANSLATORS&quot;&gt;CUSTOM TRANSLATORS&lt;/a&gt; 참조 )는 컴파일 도중 (문자열 리터럴) 수행되므로 변환 함수는 &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; 수행 하거나 &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; 하지 않아야합니다 . 이후 버전의 Perl에서는이 제한을 해제해야합니다 (그러나 우선 순위는 낮음).</target>
        </trans-unit>
        <trans-unit id="e702e67c36d5f56f32c4ca887c029adc55bb2d25" translate="yes" xml:space="preserve">
          <source>Since file associations don't work everywhere, and there are reportedly bugs with file associations where it does work, the old method of wrapping the perl script to make it look like a regular batch file to the OS, may be used. The install process makes available the &quot;pl2bat.bat&quot; script which can be used to wrap perl scripts into batch files. For example:</source>
          <target state="translated">파일 연결은 모든 곳에서 작동하지 않으며 파일 연결과 관련하여 버그가있는 것으로 알려져 있기 때문에 펄 스크립트를 랩핑하여 일반 배치 파일처럼 보이도록하는 오래된 방법이 OS에 사용될 수 있습니다. 설치 프로세스는 &quot;pl2bat.bat&quot;스크립트를 사용하여 perl 스크립트를 배치 파일로 랩핑하는 데 사용할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="23fd0e0c0c88af650bd14da915c09ac6e76b1837" translate="yes" xml:space="preserve">
          <source>Since hash keys are strings, the default normalizer will not distinguish between &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; and the empty string. It also won't work when the function's arguments are references. For example, consider a function &lt;code&gt;g&lt;/code&gt; which gets two arguments: A number, and a reference to an array of numbers:</source>
          <target state="translated">해시 키는 문자열이므로 기본 노멀 라이저는 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 와 빈 문자열을 구분하지 않습니다 . 함수의 인수가 참조 인 경우에도 작동하지 않습니다. 예를 들어, 두 개의 인수, 숫자 및 숫자 배열에 대한 참조를 얻는 함수 &lt;code&gt;g&lt;/code&gt; 를 고려하십시오 .</target>
        </trans-unit>
        <trans-unit id="fa1b02458a611387371114bfc83a2b6bef610aa1" translate="yes" xml:space="preserve">
          <source>Since in this example only the hostname was used, the redundant conversion of the port number into a service name may be omitted by passing the &lt;code&gt;NIx_NOSERV&lt;/code&gt; flag.</source>
          <target state="translated">이 예제에서는 호스트 이름 만 사용 &lt;code&gt;NIx_NOSERV&lt;/code&gt; 포트 번호를 서비스 이름으로 중복 변환하는 것은 NIx_NOSERV 플래그 를 전달하여 생략 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="43ba5f496d72ffff6bead4e713df055d0751d289" translate="yes" xml:space="preserve">
          <source>Since it is an actual &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt; (not a &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt;),</source>
          <target state="translated">실제 &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt;&lt;/code&gt; 이므로 ( &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; 아님),</target>
        </trans-unit>
        <trans-unit id="0d7acf7de7efee5f314675d9545729adcf4f4695" translate="yes" xml:space="preserve">
          <source>Since it is only at the compilation stage that the operator mask applies, controlled access to potentially unsafe operations can be achieved by having a handle to a wrapper subroutine (written outside the compartment) placed into the compartment. For example,</source>
          <target state="translated">오퍼레이터 마스크가 적용되는 것은 컴파일 단계에만 있기 때문에, 컴 파트먼트에 배치 된 래퍼 서브 루틴 (컴 파트먼트 외부에 기록됨)에 대한 핸들을 가짐으로써 잠재적으로 안전하지 않은 조작에 대한 제어 된 액세스를 달성 할 수 있습니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="194e3b48a27a3bdaa4b431c05b89584d736f7041" translate="yes" xml:space="preserve">
          <source>Since it's a common mistake to use &lt;code&gt;&lt;a href=&quot;exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; instead of &lt;code&gt;&lt;a href=&quot;system&quot;&gt;system&lt;/a&gt;&lt;/code&gt;, Perl warns you if &lt;code&gt;&lt;a href=&quot;exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; is called in void context and if there is a following statement that isn't &lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;warn&quot;&gt;warn&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;exit&quot;&gt;exit&lt;/a&gt;&lt;/code&gt; (if &lt;code&gt;-w&lt;/code&gt; is set--but you always do that, right?). If you</source>
          <target state="translated">그것을 사용하는 일반적인 실수 때문에 &lt;code&gt;&lt;a href=&quot;exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; 대신 &lt;code&gt;&lt;a href=&quot;system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; , 펄 경우 경고 &lt;code&gt;&lt;a href=&quot;exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; 무효 컨텍스트에서 호출되고 다음되지 않은 문이있는 경우 &lt;code&gt;&lt;a href=&quot;die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;warn&quot;&gt;warn&lt;/a&gt;&lt;/code&gt; , 또는 &lt;code&gt;&lt;a href=&quot;exit&quot;&gt;exit&lt;/a&gt;&lt;/code&gt; 하는 경우 ( &lt;code&gt;-w&lt;/code&gt; 가 설정 -하지만 항상 당신을 그렇죠?) 만약 너라면</target>
        </trans-unit>
        <trans-unit id="84dfc8fed05280b5766bcde26ffe3ad58754f68f" translate="yes" xml:space="preserve">
          <source>Since it's a common mistake to use &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; instead of &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt;, Perl warns you if &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; is called in void context and if there is a following statement that isn't &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt;&lt;/code&gt; (if &lt;code&gt;-w&lt;/code&gt; is set--but you always do that, right?). If you</source>
          <target state="translated">그것을 사용하는 일반적인 실수 때문에 &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; 대신 &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; , 펄 경우 경고 &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; 무효 컨텍스트에서 호출되고 다음되지 않은 문이있는 경우 &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/warn&quot;&gt;warn&lt;/a&gt;&lt;/code&gt; , 또는 &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt;&lt;/code&gt; 하는 경우 ( &lt;code&gt;-w&lt;/code&gt; 가 설정 -하지만 항상 당신을 그렇죠?) 만약 너라면</target>
        </trans-unit>
        <trans-unit id="738084392e8e6e74486d375f063b4666c3458a7c" translate="yes" xml:space="preserve">
          <source>Since just passing an SV to an XS function and copying the data of the SV is not enough to copy the UTF8 flags, even less right is just passing a &lt;code&gt;char *&lt;/code&gt; to an XS function.</source>
          <target state="translated">SV를 XS 함수에 전달하고 SV의 데이터를 복사하는 것만으로는 UTF8 플래그를 복사하기에 충분하지 않으므로 &lt;code&gt;char *&lt;/code&gt; 를 XS 함수에 전달하는 것만으로는 부족 합니다.</target>
        </trans-unit>
        <trans-unit id="b9469e3eb840b801f9d7d7208ec99b06d836b6ea" translate="yes" xml:space="preserve">
          <source>Since kernel threading can interrupt a thread at any time, they will uncover some of the implicit locking assumptions you may make in your program. For example, something as simple as &lt;code&gt;$x = $x + 2&lt;/code&gt; can behave unpredictably with kernel threads if &lt;code&gt;$x&lt;/code&gt; is visible to other threads, as another thread may have changed &lt;code&gt;$x&lt;/code&gt; between the time it was fetched on the right hand side and the time the new value is stored.</source>
          <target state="translated">커널 스레딩은 언제든지 스레드를 중단 할 수 있으므로 프로그램에서 내재 된 잠금 가정 중 일부를 발견합니다. 예를 들어, 간단하게 무언가에 대해서는 &lt;code&gt;$x = $x + 2&lt;/code&gt; 있으면 커널 스레드 예기치 못한 방식으로 동작 할 수 &lt;code&gt;$x&lt;/code&gt; 다른 스레드에 보이는 다른 스레드가 변경 될 수 있으므로, &lt;code&gt;$x&lt;/code&gt; 그 우측 및에 페치 된 시간 사이 새로운 값이 저장되는 시간.</target>
        </trans-unit>
        <trans-unit id="c3c7d09052cf4af0cf4ad320357c5a1a11966392" translate="yes" xml:space="preserve">
          <source>Since numbers are actually objects, you can call all the usual methods from BigInt/BigFloat on them. This even works to some extent on expressions:</source>
          <target state="translated">숫자는 실제로 객체이므로 BigInt / BigFloat에서 모든 일반적인 메소드를 호출 할 수 있습니다. 이것은 표현식에서도 어느 정도 작동합니다.</target>
        </trans-unit>
        <trans-unit id="ae2a46b8ade0fb9460587cc2799fe61eb4a8fb37" translate="yes" xml:space="preserve">
          <source>Since perl 5.17.1</source>
          <target state="translated">펄 5.17.1 이후</target>
        </trans-unit>
        <trans-unit id="3f51453ac56d21d59ae3e879a25ac51097e95502" translate="yes" xml:space="preserve">
          <source>Since perl does not (yet?) support constant objects, these constants are in seconds only, so you cannot, for example, do this: &lt;code&gt;&lt;a href=&quot;../functions/print&quot;&gt;print&lt;/a&gt; ONE_WEEK-&amp;gt;minutes;&lt;/code&gt;</source>
          <target state="translated">perl은 상수 객체를 지원하지 않기 때문에 이러한 상수는 초 단위이므로 예를 들어 다음을 수행 할 수 없습니다. &lt;code&gt;&lt;a href=&quot;../functions/print&quot;&gt;print&lt;/a&gt; ONE_WEEK-&amp;gt;minutes;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f6206d48617efe1643080f044370ee3db2757b71" translate="yes" xml:space="preserve">
          <source>Since release 1.77, CPAN.pm has been able to verify cryptographically signed module distributions using Module::Signature. The CPAN modules can be signed by their authors, thus giving more security. The simple unsigned MD5 checksums that were used before by CPAN protect mainly against accidental file corruption.</source>
          <target state="translated">릴리스 1.77부터 CPAN.pm은 Module :: Signature를 사용하여 암호화 서명 된 모듈 배포를 확인할 수있었습니다. CPAN 모듈은 작성자가 서명 할 수 있으므로 보안이 강화됩니다. CPAN에 의해 ​​이전에 사용되었던 단순한 서명되지 않은 MD5 체크섬은 주로 우발적 인 파일 손상으로부터 보호합니다.</target>
        </trans-unit>
        <trans-unit id="f410d2ff83f136d497487286db5d2eccb910e974" translate="yes" xml:space="preserve">
          <source>Since some operations can be automatically generated from others, there is a minimal set of operations that need to be overloaded in order to have the complete set of overloaded operations at one's disposal. Of course, the autogenerated operations may not do exactly what the user expects. The minimal set is:</source>
          <target state="translated">일부 작업은 다른 작업에서 자동으로 생성 될 수 있으므로 사용자가 원하는대로 전체 오버로드 작업 집합을 갖기 위해 오버로드해야하는 최소 작업 집합이 있습니다. 물론, 자동 생성 된 작업은 사용자가 기대하는 것과 정확히 일치하지 않을 수 있습니다. 최소 설정은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9e13ee98073f6b6ff77b6bcc87f449d4c9298e6d" translate="yes" xml:space="preserve">
          <source>Since static extensions are incorporated directly into</source>
          <target state="translated">정적 확장은</target>
        </trans-unit>
        <trans-unit id="a88aba659efeb2d72344fd5945ed041580ceab14" translate="yes" xml:space="preserve">
          <source>Since storage is performed recursively, you might want to stuff references to objects that share a lot of common data into a single array or hash table, and then store that object. That way, when you retrieve back the whole thing, the objects will continue to share what they originally shared.</source>
          <target state="translated">스토리지는 재귀 적으로 수행되므로 많은 공통 데이터를 공유하는 오브젝트에 대한 참조를 단일 배열 또는 해시 테이블에 넣은 다음 해당 오브젝트를 저장하려고 할 수 있습니다. 이렇게하면 전체를 다시 검색 할 때 객체가 원래 공유 한 내용을 계속 공유합니다.</target>
        </trans-unit>
        <trans-unit id="e4b31e0831fe480c7543658e6a5c02d003d2e334" translate="yes" xml:space="preserve">
          <source>Since subroutines implementing assignment operators are not required to modify their operands (see &lt;a href=&quot;#Overloadable-Operations&quot;&gt;Overloadable Operations&lt;/a&gt; above), we do not need anything special to make &lt;code&gt;+=&lt;/code&gt; and friends work, besides adding these operators to %subr and defining a copy constructor (needed since Perl has no way to know that the implementation of &lt;code&gt;'+='&lt;/code&gt; does not mutate the argument - see &lt;a href=&quot;#Copy-Constructor&quot;&gt;Copy Constructor&lt;/a&gt;).</source>
          <target state="translated">할당 연산자를 구현하는 서브 루틴은 피연산자를 수정하지 않아도되므로 ( 위의 &lt;a href=&quot;#Overloadable-Operations&quot;&gt;오버로드 가능한 연산&lt;/a&gt; 참조), % subr에 이러한 연산자를 추가하고 복사 생성자를 정의하는 것 외에 &lt;code&gt;+=&lt;/code&gt; 와 친구를 작동 시키는 데 특별한 것이 필요하지 않습니다 (Perl은 &lt;code&gt;'+='&lt;/code&gt; 의 구현이 인수를 변경하지 않는다는 것을 알 수있는 방법 은 없습니다 ( &lt;a href=&quot;#Copy-Constructor&quot;&gt;복사 생성자&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="24efb6846ccb0dd586c9a2d632cd24665dcacdba" translate="yes" xml:space="preserve">
          <source>Since the &lt;code&gt;UNIVERSAL::VERSION&lt;/code&gt; method treats the &lt;code&gt;$VERSION&lt;/code&gt; number as a simple numeric value it will regard version 1.10 as lower than 1.9. For this reason it is strongly recommended that you use numbers with at least two decimal places, e.g., 1.09.</source>
          <target state="translated">때문에 &lt;code&gt;UNIVERSAL::VERSION&lt;/code&gt; 메소드를 대우 &lt;code&gt;$VERSION&lt;/code&gt; 간단한 숫자 값 번호는보다 낮은 1.9 버전 1.10 간주한다. 이러한 이유로 소수점 이하 두 자리 이상 (예 : 1.09)의 숫자를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="9984a40959f39d46f91cc9c90e354da67e76965d" translate="yes" xml:space="preserve">
          <source>Since the &lt;code&gt;ops&lt;/code&gt; pragma currently has an irreversible global effect, it is only of significant practical use with the &lt;code&gt;-M&lt;/code&gt; option on the command line.</source>
          <target state="translated">때문에 &lt;code&gt;ops&lt;/code&gt; 프라그는 현재 돌이킬 수없는 글로벌 효과가있다, 그것은 단지와 중요한 실용적이다 &lt;code&gt;-M&lt;/code&gt; 의 명령 행 옵션을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="926a29507017e24c08c49eb96c57773fd03c95dd" translate="yes" xml:space="preserve">
          <source>Since the MD5 algorithm is byte oriented you might only add bits as multiples of 8, so you probably want to just use add() instead. The add_bits() method is provided for compatibility with other digest implementations. See &lt;a href=&quot;../digest&quot;&gt;Digest&lt;/a&gt; for description of the arguments that add_bits() take.</source>
          <target state="translated">MD5 알고리즘은 바이트 지향이므로 비트를 8의 배수로 만 추가 할 수 있으므로 add ()를 대신 사용하려고합니다. add_bits () 메소드는 다른 다이제스트 구현과의 호환성을 위해 제공됩니다. add_bits ()가 취하는 인수에 대한 설명은 &lt;a href=&quot;../digest&quot;&gt;Digest&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fcf00ba41dfb6029d72bbfa314d984c685681962" translate="yes" xml:space="preserve">
          <source>Since the MD5 algorithm is only defined for strings of bytes, it can not be used on strings that contains chars with ordinal number above 255 (Unicode strings). The MD5 functions and methods will croak if you try to feed them such input data:</source>
          <target state="translated">MD5 알고리즘은 바이트 문자열에만 정의되므로 서 수가 255 (유니 코드 문자열)보다 큰 문자를 포함하는 문자열에는 사용할 수 없습니다. MD5 함수 및 메소드는 이러한 입력 데이터를 제공하려고 시도하면 사라집니다.</target>
        </trans-unit>
        <trans-unit id="4504893c7038fe54de5cf229bf7abc99b79c512f" translate="yes" xml:space="preserve">
          <source>Since the Perl extension DLLs are always loaded with the full path, there is no need to mangle their names in a version-specific ways: their directory already reflects the corresponding version of perl, and @INC takes into account binary compatibility with older version. Starting from &lt;code&gt;5.6.2&lt;/code&gt; the name mangling scheme is fixed to be the same as for Perl 5.005_53 (same as in a popular binary release). Thus new Perls will be able to</source>
          <target state="translated">Perl 확장 DLL은 항상 전체 경로로로드되므로 버전 별 방식으로 이름을 엉망으로 만들 필요가 없습니다. 디렉토리에는 이미 해당 버전의 perl이 반영되어 있으며 @INC는 이전 버전과의 이진 호환성을 고려합니다. &lt;code&gt;5.6.2&lt;/code&gt; 부터 이름 관리 체계는 Perl 5.005_53과 동일하도록 수정되었습니다 (일반적인 바이너리 릴리스와 동일). 따라서 새로운 Perls는</target>
        </trans-unit>
        <trans-unit id="b3bc7c77475d3cf936d8648a172f314719ec1f56" translate="yes" xml:space="preserve">
          <source>Since the first character of $x matched the regex, &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; prepended an empty initial element to the list.</source>
          <target state="translated">$ x의 첫 문자가 정규식과 일치했기 때문에 &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; 은 빈 초기 요소 앞에 목록을 추가했습니다.</target>
        </trans-unit>
        <trans-unit id="2334de3a289af7777d7979b79868746517ddea3f" translate="yes" xml:space="preserve">
          <source>Since the first character of $x matched the regexp, &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; prepended an empty initial element to the list.</source>
          <target state="translated">$ x의 첫 문자가 정규 표현식과 일치하므로 &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; 은 빈 초기 요소 앞에 목록을 추가했습니다.</target>
        </trans-unit>
        <trans-unit id="c9108eba2d411db85e70e8df1569d830e2a5d25c" translate="yes" xml:space="preserve">
          <source>Since the fork() emulation runs code in multiple threads, extensions calling into non-thread-safe libraries may not work reliably when calling fork(). As Perl's threading support gradually becomes more widely adopted even on platforms with a native fork(), such extensions are expected to be fixed for thread-safety.</source>
          <target state="translated">fork () 에뮬레이션은 여러 스레드에서 코드를 실행하기 때문에 스레드가 안전하지 않은 라이브러리를 호출하는 확장은 fork ()를 호출 할 때 안정적으로 작동하지 않을 수 있습니다. Perl의 스레딩 지원은 기본 포크 ()가있는 플랫폼에서도 점점 더 널리 채택됨에 따라 이러한 확장은 스레드 안전성을 위해 수정 될 것으로 예상됩니다.</target>
        </trans-unit>
        <trans-unit id="b5c6d6292298eef29abac825fb611cdb8dbc410b" translate="yes" xml:space="preserve">
          <source>Since the logging doesn't use PerlIO, all SV allocations are logged and no extra SV allocations are introduced by enabling the logging. If compiled with &lt;code&gt;-DDEBUG_LEAKING_SCALARS&lt;/code&gt; , the serial number for each SV allocation is also logged.</source>
          <target state="translated">로깅은 PerlIO를 사용하지 않으므로 모든 SV 할당이 기록되고 로깅을 활성화하여 추가 SV 할당이 도입되지 않습니다. &lt;code&gt;-DDEBUG_LEAKING_SCALARS&lt;/code&gt; 로 컴파일하면 각 SV 할당의 일련 번호도 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="3279571aa6d0a69a5a2abdeb30f262cc44dbbdae" translate="yes" xml:space="preserve">
          <source>Since the match operator &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//&lt;/a&gt;&lt;/code&gt;, the substitution operator &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt;, and the regular expression quoting operator &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt; are double-quotish constructs, you can interpolate variables into the pattern. See the answer to &quot;How can I quote a variable to use in a regex?&quot; for more details.</source>
          <target state="translated">일치 연산자 &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//&lt;/a&gt;&lt;/code&gt; , 대체 연산자 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; 및 정규식 인용 연산자 &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt; 는 큰 따옴표 구조이므로 변수를 패턴에 보간 할 수 있습니다. &quot;정규식에서 사용할 변수를 어떻게 인용 할 수 있습니까?&quot;에 대한 답변을 참조하십시오. 상세 사항은.</target>
        </trans-unit>
        <trans-unit id="84b10458d44f04e31c63c483bc8240735b5e37c7" translate="yes" xml:space="preserve">
          <source>Since the null filehandle uses the two argument form of &lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt; it interprets special characters, so if you have a script like this:</source>
          <target state="translated">널 파일 핸들은 &lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt; 의 두 인수 형식을 사용 하므로 특수 문자를 해석하므로 다음과 같은 스크립트가있는 경우 :</target>
        </trans-unit>
        <trans-unit id="cd81accbd1bb6c167fba1a41e5f2407058ac7a87" translate="yes" xml:space="preserve">
          <source>Since the object is also a hash, you can treat it as one, using it to store data associated with the object. Typically, code inside the class can treat the hash as an accessible data structure, while code outside the class should always treat the object as opaque. This is called &lt;b&gt;encapsulation&lt;/b&gt;. Encapsulation means that the user of an object does not have to know how it is implemented. The user simply calls documented methods on the object.</source>
          <target state="translated">객체도 해시이므로 객체와 관련된 데이터를 저장하기 위해 객체를 사용하여 객체로 취급 할 수 있습니다. 일반적으로 클래스 내부의 코드는 해시를 액세스 가능한 데이터 구조로 취급 할 수 있지만 클래스 외부의 코드는 항상 객체를 불투명하게 처리해야합니다. 이것을 &lt;b&gt;캡슐화&lt;/b&gt; 라고 &lt;b&gt;합니다&lt;/b&gt; . 캡슐화는 객체의 사용자가 어떻게 구현되는지 알 필요가 없음을 의미합니다. 사용자는 단순히 객체에 대해 문서화 된 메소드를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="db12f27020b74e90b153b0c7282afabc69308986" translate="yes" xml:space="preserve">
          <source>Since the original &lt;code&gt;big5&lt;/code&gt; encoding (1984) is not supported anywhere (glibc and DOS-based systems uses &lt;code&gt;big5&lt;/code&gt; to mean &lt;code&gt;big5-eten&lt;/code&gt; ; Microsoft uses &lt;code&gt;big5&lt;/code&gt; to mean &lt;code&gt;cp950&lt;/code&gt; ), a conscious decision was made to alias &lt;code&gt;big5&lt;/code&gt; to &lt;code&gt;big5-eten&lt;/code&gt; , which is the de facto superset of the original big5.</source>
          <target state="translated">원래부터 &lt;code&gt;big5&lt;/code&gt; 인코딩 (1984)는 어디서나 지원되지 않습니다 (glibc에와 DOS 기반 시스템 사용의 &lt;code&gt;big5&lt;/code&gt; 에 평균 &lt;code&gt;big5-eten&lt;/code&gt; , Microsoft에서 사용 &lt;code&gt;big5&lt;/code&gt; 의미하는 &lt;code&gt;cp950&lt;/code&gt; ) 의식적인 결정이 별명에 만들어진, &lt;code&gt;big5&lt;/code&gt; 에 &lt;code&gt;big5-eten&lt;/code&gt; 이다 원래 big5의 사실상 수퍼 셋.</target>
        </trans-unit>
        <trans-unit id="e096824f5ca19792394259581d18c44d0fb48327" translate="yes" xml:space="preserve">
          <source>Since the path separators are different on some operating systems ('/' on Unix, ':' on MacPerl, etc...) we recommend you use the File::Spec modules wherever portability is a concern.</source>
          <target state="translated">경로 구분 기호는 일부 운영 체제 (Unix의 경우 '/', MacPerl의 경우 ':'등)가 다르므로 이식성이 문제가되는 곳에서는 File :: Spec 모듈을 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="afc1d2d6e3b782b2dd5e1481aef1464f9b2e04bc" translate="yes" xml:space="preserve">
          <source>Since the scope wasn't lexical, other modules' use of &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/ord&quot;&gt;ord&lt;/a&gt;&lt;/code&gt;,</source>
          <target state="translated">범위가 어휘 적이 지 않기 때문에 다른 모듈의 &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;functions/ord&quot;&gt;ord&lt;/a&gt;&lt;/code&gt; 사용 ,</target>
        </trans-unit>
        <trans-unit id="b0b947b7b4bc7b90e1cd94b89023d67ed8fe406b" translate="yes" xml:space="preserve">
          <source>Since the symbols listed within &lt;code&gt;%EXPORT_TAGS&lt;/code&gt; must also appear in either &lt;code&gt;@EXPORT&lt;/code&gt; or &lt;code&gt;@EXPORT_OK&lt;/code&gt; , two utility functions are provided which allow you to easily add tagged sets of symbols to &lt;code&gt;@EXPORT&lt;/code&gt; or &lt;code&gt;@EXPORT_OK&lt;/code&gt; :</source>
          <target state="translated">내 나열된 문자 때문에 &lt;code&gt;%EXPORT_TAGS&lt;/code&gt; 또한 중 하나에 표시되어야 &lt;code&gt;@EXPORT&lt;/code&gt; 또는 &lt;code&gt;@EXPORT_OK&lt;/code&gt; , 두 개의 유틸리티 기능을 쉽게에 기호 태그 세트를 추가 할 수있는 제공됩니다 &lt;code&gt;@EXPORT&lt;/code&gt; 또는 &lt;code&gt;@EXPORT_OK&lt;/code&gt; 를 :</target>
        </trans-unit>
        <trans-unit id="1a1ad4491daa19cab8cfcffcbf76d31fdb6dedaa" translate="yes" xml:space="preserve">
          <source>Since the text to insert should be different in &lt;code&gt;bytes&lt;/code&gt; mode and out of it, the function should check the current state of &lt;code&gt;bytes&lt;/code&gt; -flag as in:</source>
          <target state="translated">삽입 할 텍스트가 &lt;code&gt;bytes&lt;/code&gt; 모드 에서 달라야 하므로이 함수는 다음과 같이 &lt;code&gt;bytes&lt;/code&gt; -flag 의 현재 상태를 확인해야합니다 .</target>
        </trans-unit>
        <trans-unit id="50530d766e72e0b6fff4d2cca6e94d3aad2090a6" translate="yes" xml:space="preserve">
          <source>Since there are relatively few objects in a picture, there are only a few colors, which get looked up over and over again. Memoizing &lt;code&gt;ColorToRGB&lt;/code&gt; sped up the program by several percent.</source>
          <target state="translated">그림에는 비교적 적은 수의 물체가 있기 때문에 몇 번의 색상 만 있으며,이 색은 계속해서 또 다시 조회됩니다. ColorToRGB를 &lt;code&gt;ColorToRGB&lt;/code&gt; 하면 프로그램이 몇 퍼센트 나 빨라졌습니다.</target>
        </trans-unit>
        <trans-unit id="b29f8659dcd90c4211c87b64479756be9287fa54" translate="yes" xml:space="preserve">
          <source>Since there is a bijection between a point in the 2D plane and a complex number (i.e. the mapping is unique and reciprocal), a complex number can also be uniquely identified with polar coordinates:</source>
          <target state="translated">2D 평면의 한 점과 복소수 사이에 bijection이 있으므로 (즉, 매핑이 고유하고 상호적임) 복소수도 극좌표로 고유하게 식별 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3716c24306b4924201a3a983711259349f4d7b7c" translate="yes" xml:space="preserve">
          <source>Since these functions are different for most operating systems, each set of OS specific routines is available in a separate module, including:</source>
          <target state="translated">이러한 기능은 대부분의 운영 체제에 따라 다르므로 각 OS 특정 루틴 세트는 다음을 포함하여 별도의 모듈에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c3d20e57f802de1056f71e94f07efcc76036480f" translate="yes" xml:space="preserve">
          <source>Since things like &lt;code&gt;&lt;a href=&quot;../functions/sqrt&quot;&gt;sqrt(2)&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;1 / 3&lt;/code&gt; must presented with a limited accuracy lest a operation consumes all resources, each operation produces no more than the requested number of digits.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../functions/sqrt&quot;&gt;sqrt(2)&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;1 / 3&lt;/code&gt; 과 같은 것은 연산이 모든 리소스를 소비하지 않도록 제한된 정확도를 제공해야하기 때문에 각 연산은 요청 된 자릿수를 넘지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b1a21b989b9d575d7d2eef7cf2bea0c2bc7b6c1e" translate="yes" xml:space="preserve">
          <source>Since this document was first written, the convention has become more and more to use hexadecimal notation for code points. To do this with the recipes and to also sort is a multi-step process, so here, for convenience, is the table from above, re-sorted to be in Code Page 1047 order, and using hex notation.</source>
          <target state="translated">이 문서는 처음 작성되었으므로 코드 포인트에 16 진 표기법을 사용하는 규칙이 점점 더 커지고 있습니다. 레시피로이 작업을 수행하고 정렬하는 것도 다단계 프로세스이므로 여기에서는 편의상 위의 표를 코드 순서대로 정렬하고 16 진 표기법을 사용하여 정렬합니다.</target>
        </trans-unit>
        <trans-unit id="ef4f428bd8f59049b7e023a3a37d2ecfa135c01b" translate="yes" xml:space="preserve">
          <source>Since this is 0.something release, any future releases are almost guaranteed to be binary incompatible. As a sign of this the Symbian symbol exports are kept unfrozen and the .def files fully rebuilt every time.</source>
          <target state="translated">이것은 0.something 릴리스이므로 향후 릴리스는 바이너리와 호환되지 않는 것이 거의 보장됩니다. 이 표시로 Symbian 기호 내보내기는 고정되지 않고 .def 파일은 매번 완전히 다시 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="a29b3865557e1b6dfb498bcdde9cd5a7a83c05b9" translate="yes" xml:space="preserve">
          <source>Since this module is most often used only indirectly from extension &lt;code&gt;Makefile.PL&lt;/code&gt; files, here is an example &lt;code&gt;Makefile.PL&lt;/code&gt; entry to add a library to the build process for an extension:</source>
          <target state="translated">이 모듈은 대부분 확장 &lt;code&gt;Makefile.PL&lt;/code&gt; 파일 에서 간접적으로 만 사용되므로 확장 을위한 빌드 프로세스에 라이브러리를 추가 하는 예제 &lt;code&gt;Makefile.PL&lt;/code&gt; 항목은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="01f476f0532c2e2f8ff2160a3485f37336e92c5d" translate="yes" xml:space="preserve">
          <source>Since this module refers to perl core's Unicode database in the directory</source>
          <target state="translated">이 모듈은 디렉토리에서 펄 코어의 유니 코드 데이터베이스를 참조하기 때문에</target>
        </trans-unit>
        <trans-unit id="e87fdde57834ef3e5b68a023cf000c8017fe6842" translate="yes" xml:space="preserve">
          <source>Since this procedure may take quite a long time to complete, it makes sense to &quot;freeze&quot; your CPAN configuration by disabling periodic updates of the local copy of CPAN index: set &lt;code&gt;index_expire&lt;/code&gt; to some big value (I use 365), then save the settings</source>
          <target state="translated">이 절차를 완료하는 데 시간이 오래 걸릴 수 있으므로 CPAN 인덱스의 로컬 사본에 대한 주기적 업데이트를 비활성화하여 CPAN 구성을 &quot;고정&quot;하는 것이 좋습니다. &lt;code&gt;index_expire&lt;/code&gt; 를 큰 값으로 설정 한 다음 (365를 사용) 설정을 저장하십시오.</target>
        </trans-unit>
        <trans-unit id="db30ab250873c1062c4781e4e7b7fad867ddcab0" translate="yes" xml:space="preserve">
          <source>Since this will lead to issues as described above.</source>
          <target state="translated">위에서 설명한대로 문제가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5b8353c61df27001cdfae1689cea0393e824247d" translate="yes" xml:space="preserve">
          <source>Since threads are also subroutines, they can return values. To wait for a thread to exit and extract any values it might return, you can use the &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join()&lt;/a&gt;&lt;/code&gt; method:</source>
          <target state="translated">스레드도 서브 루틴이므로 값을 리턴 할 수 있습니다. 스레드가 종료되고 리턴 될 수있는 값을 추출하기 위해 &lt;code&gt;&lt;a href=&quot;functions/join&quot;&gt;join()&lt;/a&gt;&lt;/code&gt; 메소드를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="865359543cead83315159b60389211a49302275e" translate="yes" xml:space="preserve">
          <source>Since to call certain OS/2 API one needs to have a correctly initialized &lt;code&gt;Win&lt;/code&gt; subsystem, OS/2-specific extensions may require getting &lt;code&gt;HAB&lt;/code&gt; s and &lt;code&gt;HMQ&lt;/code&gt; s. If an extension would do it on its own, another extension could fail to initialize.</source>
          <target state="translated">특정 OS / 2 API를 호출하려면 올바르게 초기화 된 &lt;code&gt;Win&lt;/code&gt; 서브 시스템이 있어야하므로 OS / 2 특정 확장에는 &lt;code&gt;HAB&lt;/code&gt; 및 &lt;code&gt;HMQ&lt;/code&gt; 가 필요합니다 . 확장이 자체적으로 확장하는 경우 다른 확장이 초기화되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="993c2506a3b501e251a227378341211573ee7139" translate="yes" xml:space="preserve">
          <source>Since v5.6.0, Perl's CORE::glob() is implemented in terms of bsd_glob(). Note that they don't share the same prototype--CORE::glob() only accepts a single argument. Due to historical reasons, CORE::glob() will also split its argument on whitespace, treating it as multiple patterns, whereas bsd_glob() considers them as one pattern. But see &lt;code&gt;:bsd_glob&lt;/code&gt; under &lt;a href=&quot;#EXPORTS&quot;&gt;EXPORTS&lt;/a&gt;, below.</source>
          <target state="translated">v5.6.0부터 Perl의 CORE :: glob ()는 bsd_glob ()로 구현됩니다. 동일한 프로토 타입을 공유하지 않습니다. CORE :: glob ()는 단일 인수 만 허용합니다. 역사적 이유로 인해 CORE :: glob ()는 공백에 대한 인수를 여러 패턴으로 취급하지만 bsd_glob ()는이를 하나의 패턴으로 간주합니다. 그러나 아래 &lt;a href=&quot;#EXPORTS&quot;&gt;EXPORTS&lt;/a&gt; 아래의 &lt;code&gt;:bsd_glob&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4ad68534057bbff035849577fdc9d02265e92498" translate="yes" xml:space="preserve">
          <source>Since valgrind adds significant overhead, tests will take much longer to run. The valgrind tests support being run in parallel to help with this:</source>
          <target state="translated">valgrind는 상당한 오버 헤드를 추가하므로 테스트 실행 시간이 훨씬 더 오래 걸립니다. valgrind 테스트는이를 돕기 위해 병렬로 실행되도록 지원합니다.</target>
        </trans-unit>
        <trans-unit id="cddab41a34bae01a0c375cc55e93affd1f3991b2" translate="yes" xml:space="preserve">
          <source>Since version 1.26.</source>
          <target state="translated">버전 1.26부터.</target>
        </trans-unit>
        <trans-unit id="6b04b338e1bf6330ffba84da282f69c260eb86f1" translate="yes" xml:space="preserve">
          <source>Since version 1.29.</source>
          <target state="translated">버전 1.29부터.</target>
        </trans-unit>
        <trans-unit id="90fa8ea868e9b39ffa1222c302c6573df472b992" translate="yes" xml:space="preserve">
          <source>Since version 1.30.</source>
          <target state="translated">버전 1.30부터.</target>
        </trans-unit>
        <trans-unit id="b46b7661e42d1c9773df584f5695782bec0ddb2f" translate="yes" xml:space="preserve">
          <source>Since version 1.33.</source>
          <target state="translated">버전 1.33부터.</target>
        </trans-unit>
        <trans-unit id="4b40436a29419119d4b78bb2f402e947b823a0e2" translate="yes" xml:space="preserve">
          <source>Since version 1.35.</source>
          <target state="translated">버전 1.35부터.</target>
        </trans-unit>
        <trans-unit id="3a2c4273e02619f5ed86c67adac94047a5ca0b70" translate="yes" xml:space="preserve">
          <source>Since version 1.36.</source>
          <target state="translated">버전 1.36부터.</target>
        </trans-unit>
        <trans-unit id="2498504f50455260e9635ae498353ef8c9decaca" translate="yes" xml:space="preserve">
          <source>Since version 5.8 Perl uses the PerlIO I/O library. This enables you to use different encodings per IO channel. For example you may use</source>
          <target state="translated">버전 5.8부터 Perl은 PerlIO I / O 라이브러리를 사용합니다. 이를 통해 IO 채널마다 다른 인코딩을 사용할 수 있습니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="656ca296455da01a08e031bd90f196ae0bd4a55c" translate="yes" xml:space="preserve">
          <source>Since version 5.8 Perl uses the new PerlIO on BS2000. This enables you using different encodings per IO channel. For example you may use</source>
          <target state="translated">버전 5.8부터 Perl은 BS2000에서 새로운 PerlIO를 사용합니다. 이를 통해 IO 채널마다 다른 인코딩을 사용할 수 있습니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="5792847b18d8585cbe32d073b79aab824b6fbb3d" translate="yes" xml:space="preserve">
          <source>Since version 5.8.0, hashes can be</source>
          <target state="translated">버전 5.8.0부터 해시는</target>
        </trans-unit>
        <trans-unit id="3045986b0102a2064e1410bb295874d9fe22b31d" translate="yes" xml:space="preserve">
          <source>Since version &lt;code&gt;1.39&lt;/code&gt; these ARRAY references are blessed objects, recognising the two methods &lt;code&gt;key&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt; . The following code is equivalent:</source>
          <target state="translated">버전 &lt;code&gt;1.39&lt;/code&gt; 부터이 ARRAY 참조는 &lt;code&gt;key&lt;/code&gt; 와 &lt;code&gt;value&lt;/code&gt; 두 가지 방법을 인식하는 축복 된 객체 입니다. 다음 코드는 동일합니다.</target>
        </trans-unit>
        <trans-unit id="4da1ba2b2bc63ba7f5a165684b362132feb79be8" translate="yes" xml:space="preserve">
          <source>Since version v1.33, Math::BigInt and Math::BigFloat have full support for accuracy and precision based rounding, both automatically after every operation, as well as manually.</source>
          <target state="translated">버전 v1.33부터 Math :: BigInt 및 Math :: BigFloat는 모든 작업 후 자동 및 수동으로 정확도 및 정밀도 기반 반올림을 완벽하게 지원합니다.</target>
        </trans-unit>
        <trans-unit id="75e1e7b33ae8faf22bfba9121d2d99d1efb7768e" translate="yes" xml:space="preserve">
          <source>Since we didn't define a &lt;code&gt;save()&lt;/code&gt; method in the &lt;code&gt;File::MP3&lt;/code&gt; class, Perl will look at the &lt;code&gt;File::MP3&lt;/code&gt; class's parent classes to find the &lt;code&gt;save()&lt;/code&gt; method. If Perl cannot find a &lt;code&gt;save()&lt;/code&gt; method anywhere in the inheritance hierarchy, it will die.</source>
          <target state="translated">&lt;code&gt;File::MP3&lt;/code&gt; 클래스 에서 &lt;code&gt;save()&lt;/code&gt; 메소드를 정의하지 않았으므로 Perl은 &lt;code&gt;File::MP3&lt;/code&gt; 클래스의 상위 클래스를보고 &lt;code&gt;save()&lt;/code&gt; 메소드 를 찾습니다 . Perl 이 상속 계층의 어느 곳에서나 &lt;code&gt;save()&lt;/code&gt; 메소드를 찾을 수 없으면 죽습니다.</target>
        </trans-unit>
        <trans-unit id="3e236441f92cccda5b2d49a5d2e52d11313518e5" translate="yes" xml:space="preserve">
          <source>Since we don't have an NV for &lt;code&gt;$b&lt;/code&gt; , we'll have to use &lt;code&gt;sv_2nv&lt;/code&gt; to convert it. If we step again, we'll find ourselves there:</source>
          <target state="translated">&lt;code&gt;$b&lt;/code&gt; NV가 없으므로 &lt;code&gt;sv_2nv&lt;/code&gt; 를 사용 하여 변환해야합니다. 우리가 다시 밟으면, 우리는 그곳에있을 것입니다 :</target>
        </trans-unit>
        <trans-unit id="3708f0927e1925f92bdee0634ab63e7742c6b549" translate="yes" xml:space="preserve">
          <source>Since we don't know if &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; works, or even subroutines, use ad hoc tests for these three. Step carefully to avoid using the feature being tested. Tests in</source>
          <target state="translated">우리는 작품이나 서브 루틴이 &lt;code&gt;&lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt;&lt;/code&gt; 알지 못 하므로이 세 가지에 대해 임시 테스트를 사용하십시오. 테스트중인 기능을 사용하지 않도록 신중하게 단계를 수행하십시오. 테스트</target>
        </trans-unit>
        <trans-unit id="b3f9ededf0cd07d09b1ffd3609acb21770a40353" translate="yes" xml:space="preserve">
          <source>Since we feed a list of ten 2-digit hexadecimal strings to &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt;, the pack template should contain ten pack codes. If this is run on a computer with ASCII character coding, it will print &lt;code&gt;0123456789&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; 할 2 자리 16 진수 문자열 10 개의 목록을 제공 하므로 팩 템플릿에는 10 개의 팩 코드가 포함되어야합니다. ASCII 문자 코딩이있는 컴퓨터에서 실행되면 &lt;code&gt;0123456789&lt;/code&gt; 가 인쇄 됩니다.</target>
        </trans-unit>
        <trans-unit id="c1a3bb738728020d7b3d2bd56167deba0672548c" translate="yes" xml:space="preserve">
          <source>Since we said earlier:</source>
          <target state="translated">앞서 말한 이후 :</target>
        </trans-unit>
        <trans-unit id="78829eafb6296e19175ed55a3097f673b5dc1d5f" translate="yes" xml:space="preserve">
          <source>Since you can assign to a list of variables, you can also assign to an array or hash slice.</source>
          <target state="translated">변수 목록에 할당 할 수 있으므로 배열 또는 해시 슬라이스에 할당 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="35b796faff1e6866bc3d8ff9ecdff8f636cea4f9" translate="yes" xml:space="preserve">
          <source>Since you only run one test per program &lt;code&gt;new&lt;/code&gt; always returns the same Test::Builder object. No matter how many times you call &lt;code&gt;new()&lt;/code&gt; , you're getting the same object. This is called a singleton. This is done so that multiple modules share such global information as the test counter and where test output is going.</source>
          <target state="translated">프로그램 당 하나의 테스트 만 실행하므로 &lt;code&gt;new&lt;/code&gt; 는 항상 동일한 Test :: Builder 객체를 반환합니다. &lt;code&gt;new()&lt;/code&gt; 몇 번 호출 하더라도 동일한 객체를 얻습니다. 이것을 싱글 톤이라고합니다. 이는 여러 모듈이 테스트 카운터와 같은 글로벌 정보를 공유하고 테스트 출력이 진행되는 위치를 공유하기 위해 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="5df43da3b7bd5966cc2c20737e50dc599284dd8e" translate="yes" xml:space="preserve">
          <source>Since you want to be a good programmer, you probably want to use a lexical filehandle, even though formats are designed to work with bareword filehandles since the default format names take the filehandle name. However, you can control this with some Perl special per-filehandle variables: &lt;code&gt;$^&lt;/code&gt; , which names the top-of-page format, and &lt;code&gt;$~&lt;/code&gt; which shows the line format. You have to change the default filehandle to set these variables:</source>
          <target state="translated">훌륭한 프로그래머가 되려면 기본 형식 이름이 파일 핸들 이름을 갖기 때문에 형식이 베어 워드 파일 핸들과 함께 작동하도록 설계 되었더라도 어휘 파일 핸들을 사용하고 싶을 것입니다. 그러나 페이지 단위 형식의 이름을 지정하는 &lt;code&gt;$^&lt;/code&gt; 및 행 형식을 나타내는 &lt;code&gt;$~&lt;/code&gt; 와 같은 일부 Perl 특수 파일 핸들 변수 를 사용하여이를 제어 할 수 있습니다 . 다음 변수를 설정하려면 기본 파일 핸들을 변경해야합니다.</target>
        </trans-unit>
        <trans-unit id="31ee6b56ac231ef340b4b0ce7a9b1c774baa56bb" translate="yes" xml:space="preserve">
          <source>Since you're assigning to a scalar, the righthand side is in scalar context. The comma operator (yes, it's an operator!) in scalar context evaluates its lefthand side, throws away the result, and evaluates it's righthand side and returns the result. In effect, that list-lookalike assigns to &lt;code&gt;$scalar&lt;/code&gt; it's rightmost value. Many people mess this up because they choose a list-lookalike whose last element is also the count they expect:</source>
          <target state="translated">스칼라에 할당하기 때문에 오른쪽은 스칼라 컨텍스트에 있습니다. 스칼라 컨텍스트의 쉼표 연산자 (예, 연산자입니다!)는 왼쪽을 평가하고 결과를 버리고 오른쪽을 평가하여 결과를 반환합니다. 실제로, 그 목록처럼 보이는 것은 &lt;code&gt;$scalar&lt;/code&gt; 가장 오른쪽에 할당됩니다 . 많은 사람들이 마지막 요소가 기대하는 개수 인 목록과 비슷한 것을 선택하기 때문에 이것을 망칩니다.</target>
        </trans-unit>
        <trans-unit id="b227b1e063b8171583fca32f48c11de71e845c84" translate="yes" xml:space="preserve">
          <source>Single 8-bit characters.</source>
          <target state="translated">단일 8 비트 문자</target>
        </trans-unit>
        <trans-unit id="62539aaf022cade9262a4b6494d3943b6956e5a8" translate="yes" xml:space="preserve">
          <source>Single Byte Encodings</source>
          <target state="translated">단일 바이트 인코딩</target>
        </trans-unit>
        <trans-unit id="6a8a4e28358318025ab4a8b973931c58f9de9358" translate="yes" xml:space="preserve">
          <source>Single quotes indicate the text is to be treated literally with no interpolation of its content. This is similar to single quoted strings except that backslashes have no special meaning, with &lt;code&gt;\\&lt;/code&gt; being treated as two backslashes and not one as they would in every other quoting construct.</source>
          <target state="translated">작은 따옴표는 텍스트를 내용의 보간없이 문자 그대로 처리해야 함을 나타냅니다. 그 백 슬래시는 특별한 의미가없는 것을 제외하고이 함께 단일 인용 문자열과 유사하다 &lt;code&gt;\\&lt;/code&gt; 두 개의 백 슬래시로 취급하지 하나가 다른 모든 인용 구조에서와 같은된다.</target>
        </trans-unit>
        <trans-unit id="2988b7ce72e4ef43941b210b5d2de77bb3a0210b" translate="yes" xml:space="preserve">
          <source>Single space after keywords that are followed by parens, no space between function name and following paren</source>
          <target state="translated">키워드 뒤에 단일 공백이 있고 그 뒤에 공백이 있고 함수 이름과 다음에 오는 공백이 없습니다</target>
        </trans-unit>
        <trans-unit id="998773a99793919677d4844303decc2eb2f960f3" translate="yes" xml:space="preserve">
          <source>Single step. Executes until the beginning of another statement, descending into subroutine calls. If an expression is supplied that includes function calls, it too will be single-stepped.</source>
          <target state="translated">한 걸음 서브 루틴 호출로 내림차순으로 다른 명령문이 시작될 때까지 실행합니다. 함수 호출을 포함하는 표현식이 제공되면 한 단계 씩 수행됩니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
