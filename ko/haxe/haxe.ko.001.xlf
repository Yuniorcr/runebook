<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="haxe">
    <body>
      <group id="haxe">
        <trans-unit id="88282946dd41699067d56bc91106e02edd8a9354" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2005&amp;ndash;2018 Haxe Foundation</source>
          <target state="translated">&amp;copy; 2005&amp;ndash;2018 Haxe Foundation</target>
        </trans-unit>
        <trans-unit id="4e16b4a59775a24cf88a23c5e0f69ab85de089b8" translate="yes" xml:space="preserve">
          <source>(As3) If used on a property field, the getter will be invoked. It is not possible to obtain the value directly.</source>
          <target state="translated">(As3) If used on a property field, the getter will be invoked. It is not possible to obtain the value directly.</target>
        </trans-unit>
        <trans-unit id="747e4704c18809d129b89decd124888d473159a6" translate="yes" xml:space="preserve">
          <source>(As3) If used on a property field, the setter will be invoked. It is not possible to set the value directly.</source>
          <target state="translated">(As3) If used on a property field, the setter will be invoked. It is not possible to set the value directly.</target>
        </trans-unit>
        <trans-unit id="bd14680fbe28c309faf29fe2d68a3a77961eae47" translate="yes" xml:space="preserve">
          <source>(As3) This method only returns class fields that are public.</source>
          <target state="translated">(As3) This method only returns class fields that are public.</target>
        </trans-unit>
        <trans-unit id="2dd1bd45f75e46bf6dc6e659bd3813a63eda9736" translate="yes" xml:space="preserve">
          <source>(As3) This method only returns instance fields that are public.</source>
          <target state="translated">(As3) This method only returns instance fields that are public.</target>
        </trans-unit>
        <trans-unit id="f6c64b7f157f75585c10c01d0b06b320c70299fb" translate="yes" xml:space="preserve">
          <source>(Cpp) Map does not use weak keys on ObjectMap by default.</source>
          <target state="translated">(Cpp) Map does not use weak keys on ObjectMap by default.</target>
        </trans-unit>
        <trans-unit id="57dced88622dd426ce9dd6d4c2fe29a3a48dfe55" translate="yes" xml:space="preserve">
          <source>(Php) Https (SSL) connections are allowed only if the OpenSSL extension is enabled.</source>
          <target state="translated">(Php) Https (SSL) connections are allowed only if the OpenSSL extension is enabled.</target>
        </trans-unit>
        <trans-unit id="94246b5f7406574a39daade0be76941d9f829476" translate="yes" xml:space="preserve">
          <source>0, 0.0 or false for Int, Float and Bool respectively on static targets</source>
          <target state="translated">정적 대상에서 각각 Int, Float 및 Bool에 대해 0, 0.0 또는 false</target>
        </trans-unit>
        <trans-unit id="4d872f1a47fdf4d4ba4a6ddc1bb84e5daf6a6019" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;&lt;/code&gt; becomes &lt;code&gt;&amp;amp;quot&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;&quot;&lt;/code&gt; becomes &lt;code&gt;&amp;amp;quot&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="47734bfd6de50a189a9f2c2af51f7eca9752e382" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;#039;&lt;/code&gt; becomes &lt;code&gt;'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;amp;#039;&lt;/code&gt; becomes &lt;code&gt;'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="291f8d069e174aced382aecf2cc555933cb608c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;&lt;/code&gt; becomes &lt;code&gt;&amp;amp;amp&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;&amp;amp;&lt;/code&gt; becomes &lt;code&gt;&amp;amp;amp&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="6c20922728b6e6e76f5e79810e887c37dfb24c81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;amp;&lt;/code&gt; becomes &lt;code&gt;&amp;amp;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;amp;amp;&lt;/code&gt; becomes &lt;code&gt;&amp;amp;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3e8776f847bf0d6bdaaf4f10df6e63674c43a5fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;gt;&lt;/code&gt; becomes &lt;code&gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;amp;gt;&lt;/code&gt; becomes &lt;code&gt;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3a44818e9a83945c3b3498576287be677189609b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;lt;&lt;/code&gt; becomes &lt;code&gt;&amp;lt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;amp;lt;&lt;/code&gt; becomes &lt;code&gt;&amp;lt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a82fb55ad12e31a59a145e6a07ce2e913ee3c970" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;quot;&lt;/code&gt; becomes &lt;code&gt;&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;amp;quot;&lt;/code&gt; becomes &lt;code&gt;&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fa9d22c733bc0557432c376f35777a7c331892b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;&lt;/code&gt; becomes &lt;code&gt;&amp;amp;gt&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;&amp;gt;&lt;/code&gt; becomes &lt;code&gt;&amp;amp;gt&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="2254e8ba9bc8da2b4d88c81edbe9cfafda6e435a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;&lt;/code&gt; becomes &lt;code&gt;&amp;amp;lt&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;&amp;lt;&lt;/code&gt; becomes &lt;code&gt;&amp;amp;lt&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="656505c2909f7a636ae680fc2f457e90886dba58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'&lt;/code&gt; becomes &lt;code&gt;&amp;amp;#039&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;'&lt;/code&gt; becomes &lt;code&gt;&amp;amp;#039&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="fe857a4584383c6f4d71d883c14d95cb63de4695" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;+=&lt;/code&gt;&lt;code&gt;-=&lt;/code&gt;&lt;code&gt;/=&lt;/code&gt;&lt;code&gt;*=&lt;/code&gt;&lt;code&gt;&amp;lt;&amp;lt;=&lt;/code&gt;&lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt;=&lt;/code&gt;&lt;code&gt;|=&lt;/code&gt;&lt;code&gt;&amp;amp;=&lt;/code&gt;&lt;code&gt;^=&lt;/code&gt;&lt;code&gt;%=&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;+=&lt;/code&gt;&lt;code&gt;-=&lt;/code&gt;&lt;code&gt;/=&lt;/code&gt;&lt;code&gt;*=&lt;/code&gt;&lt;code&gt;&amp;lt;&amp;lt;=&lt;/code&gt;&lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt;=&lt;/code&gt;&lt;code&gt;|=&lt;/code&gt;&lt;code&gt;&amp;amp;=&lt;/code&gt;&lt;code&gt;^=&lt;/code&gt;&lt;code&gt;%=&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="70286d3d3a6ac45ee2e20f76cd945aa60fed8aa5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt; if the unit test succesfully executed the test cases.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt; 단위 테스트가 성공적으로 테스트 케이스를 실행 한 경우 true 입니다.</target>
        </trans-unit>
        <trans-unit id="2496f90dd288bec36650e6729f6722af7c0d28cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt; when succesfully unit tested.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt; 성공적으로 단위 테스트가 완료되면 true 입니다.</target>
        </trans-unit>
        <trans-unit id="9ed540327904d3794345965ce711cb27a8756f27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt; when the unit test is executed.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt; 단위 테스트가 실행되면 true 입니다.</target>
        </trans-unit>
        <trans-unit id="e67b0cc464a8c276a975669da29ccfd682df3e61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../../float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; literals</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../../float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 리터럴</target>
        </trans-unit>
        <trans-unit id="51fdde6bb4c2227b194a80ab942b315a0273f13c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;any&quot;&gt;Any&lt;/a&gt;&lt;/code&gt; is a type that is compatible with any other in both ways.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;any&quot;&gt;Any&lt;/a&gt;&lt;/code&gt; 는 두 가지 방식으로 다른 유형과 호환되는 유형입니다.</target>
        </trans-unit>
        <trans-unit id="96f892a3f20c3827740b6114342a7b9c4071191a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt;&lt;/code&gt; is used to indicate a class that can be accessed using brackets. The type parameter represents the type of the elements stored.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt;&lt;/code&gt; 는 대괄호를 사용하여 액세스 할 수있는 클래스를 나타내는 데 사용됩니다. type 매개 변수는 저장된 요소의 유형을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="bf248a6bce00b0e114ea07a917ef074c63c1cecc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;date#fromString&quot;&gt;Date.fromString&lt;/a&gt;()&lt;/code&gt; by parsing from a String.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;date#fromString&quot;&gt;Date.fromString&lt;/a&gt;()&lt;/code&gt; String에서 구문 분석하여 Date.fromString ()</target>
        </trans-unit>
        <trans-unit id="0dfe412e52983d13d9254802941f88e02d0fd329" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;date#fromTime&quot;&gt;Date.fromTime&lt;/a&gt;()&lt;/code&gt; with a given timestamp or</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;date#fromTime&quot;&gt;Date.fromTime&lt;/a&gt;()&lt;/code&gt; 지정된 타임 스탬프가있는 Date.fromTime () 또는</target>
        </trans-unit>
        <trans-unit id="31bf8e90413be4014fa4f7f4eba55c50119eaa92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;date#now&quot;&gt;Date.now&lt;/a&gt;()&lt;/code&gt; to obtain information about the current time,</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;date#now&quot;&gt;Date.now&lt;/a&gt;()&lt;/code&gt; 현재 시간에 대한 정보를 얻는 Date.now ()</target>
        </trans-unit>
        <trans-unit id="713018d1a57ba81d3ca24431fbd6b1ec242317a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;dynamic&quot;&gt;Dynamic&lt;/a&gt;&lt;/code&gt; is a special type which is compatible with all other types.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;dynamic&quot;&gt;Dynamic&lt;/a&gt;&lt;/code&gt; 은 다른 모든 유형과 호환되는 특수 유형입니다.</target>
        </trans-unit>
        <trans-unit id="117afe24e8d4c910ebde8916f71cd25ebc9ed5c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;null&quot;&gt;Null&lt;/a&gt;&lt;/code&gt; can be useful in two cases. In order to document some methods that accept or can return a &lt;code&gt;null&lt;/code&gt; value, or for the Flash compiler and AS3 generator to distinguish between base values that can be &lt;code&gt;null&lt;/code&gt; and others that can't.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;null&quot;&gt;Null&lt;/a&gt;&lt;/code&gt; 은 두 가지 경우에 유용 할 수 있습니다. &lt;code&gt;null&lt;/code&gt; 값을 승인하거나 리턴 할 수있는 일부 메소드를 문서화하기 위해또는 Flash 컴파일러와 AS3 생성기가 &lt;code&gt;null&lt;/code&gt; 수있는 기본 값과 그렇지 않은 다른기본 값을 구별하기 위해</target>
        </trans-unit>
        <trans-unit id="005fba8b89cf13124edcb11b2114d85f1678d846" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;std#int&quot;&gt;Std.int&lt;/a&gt;&lt;/code&gt; converts a &lt;code&gt;&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; to an &lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;, rounded towards 0. &lt;code&gt;&lt;a href=&quot;std#parseFloat&quot;&gt;Std.parseFloat&lt;/a&gt;&lt;/code&gt; converts a &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; to a &lt;code&gt;&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;std#int&quot;&gt;Std.int&lt;/a&gt;&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; 를 &lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 로 변환하고0으로 반올림합니다. &lt;code&gt;&lt;a href=&quot;std#parseFloat&quot;&gt;Std.parseFloat&lt;/a&gt;&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 을 &lt;code&gt;&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; 로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="57add615a39497561970bb9958873f3a0695469d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;std#int&quot;&gt;Std.int&lt;/a&gt;&lt;/code&gt; converts a &lt;code&gt;&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; to an &lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;, rounded towards 0. &lt;code&gt;&lt;a href=&quot;std#parseInt&quot;&gt;Std.parseInt&lt;/a&gt;&lt;/code&gt; converts a &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; to an &lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;std#int&quot;&gt;Std.int&lt;/a&gt;&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; 를 &lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 로 변환하고0으로 반올림합니다. &lt;code&gt;&lt;a href=&quot;std#parseInt&quot;&gt;Std.parseInt&lt;/a&gt;&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 을 &lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="d50957d182a0044905193b541e55ca6985e413d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assertEquals(expected, actual)&lt;/code&gt;: Succeeds if &lt;code&gt;expected&lt;/code&gt; and &lt;code&gt;actual&lt;/code&gt; are equal.</source>
          <target state="translated">&lt;code&gt;assertEquals(expected, actual)&lt;/code&gt; : &lt;code&gt;expected&lt;/code&gt; 과 &lt;code&gt;actual&lt;/code&gt; 가 같으면 성공합니다 .</target>
        </trans-unit>
        <trans-unit id="f5bf0b433ee75c061a1a8b09d409463d1e2555d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assertFalse(a)&lt;/code&gt;: Succeeds if &lt;code&gt;a&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;false&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;assertFalse(a)&lt;/code&gt; : &lt;code&gt;a&lt;/code&gt; 가 &lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;false&lt;/a&gt;&lt;/code&gt; 인 경우 성공합니다 .</target>
        </trans-unit>
        <trans-unit id="dc4fd7e07a4112dde661004589d8d6c3905be450" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assertTrue(a)&lt;/code&gt;: Succeeds if &lt;code&gt;a&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;assertTrue(a)&lt;/code&gt; : &lt;code&gt;a&lt;/code&gt; 가 &lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt; 이면 성공 합니다 .</target>
        </trans-unit>
        <trans-unit id="b41db89aa0a190c5dff99cd1ca6daee3776f9b49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;new &lt;a href=&quot;date&quot;&gt;Date&lt;/a&gt;()&lt;/code&gt; for a specific date,</source>
          <target state="translated">&lt;code&gt;new &lt;a href=&quot;date&quot;&gt;Date&lt;/a&gt;()&lt;/code&gt; 특정 날짜의 새 날짜 ()</target>
        </trans-unit>
        <trans-unit id="3e346bf35e1434bda34d743bd8cd8af5025c7741" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;new &lt;a href=&quot;genericstack#GenericStack&quot;&gt;GenericStack&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../int&quot;&gt;Int&lt;/a&gt;&amp;gt;()&lt;/code&gt; generates &lt;code&gt;GenericStack_Int&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;new &lt;a href=&quot;genericstack#GenericStack&quot;&gt;GenericStack&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../int&quot;&gt;Int&lt;/a&gt;&amp;gt;()&lt;/code&gt; 는 &lt;code&gt;GenericStack_Int&lt;/code&gt; 를 생성합니다</target>
        </trans-unit>
        <trans-unit id="0f8d7926e338068aac2725b4146e97035f5c3a54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;new &lt;a href=&quot;genericstack#GenericStack&quot;&gt;GenericStack&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&amp;gt;()&lt;/code&gt; generates &lt;code&gt;GenericStack_String&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;new &lt;a href=&quot;genericstack#GenericStack&quot;&gt;GenericStack&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&amp;gt;()&lt;/code&gt; 은 &lt;code&gt;GenericStack_String&lt;/code&gt; 을 생성합니다</target>
        </trans-unit>
        <trans-unit id="eb87be7ccd9fc6d1caeef3a131563cc88cce08a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;resolveClass(name:&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;):&lt;a href=&quot;../class&quot;&gt;Class&lt;/a&gt;&amp;lt;&lt;a href=&quot;../dynamic&quot;&gt;Dynamic&lt;/a&gt;&amp;gt;&lt;/code&gt; is called to determine a</source>
          <target state="translated">&lt;code&gt;resolveClass(name:&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;):&lt;a href=&quot;../class&quot;&gt;Class&lt;/a&gt;&amp;lt;&lt;a href=&quot;../dynamic&quot;&gt;Dynamic&lt;/a&gt;&amp;gt;&lt;/code&gt; 를 결정하기 위해 &amp;lt; Dynamic &amp;gt; 클래스 가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="10959e4dc986e33645144cf601f975ddd4b5b03c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;resolveEnum(name:&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;):&lt;a href=&quot;../enum&quot;&gt;Enum&lt;/a&gt;&amp;lt;&lt;a href=&quot;../dynamic&quot;&gt;Dynamic&lt;/a&gt;&amp;gt;&lt;/code&gt; is called to determine an</source>
          <target state="translated">&lt;code&gt;resolveEnum(name:&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;):&lt;a href=&quot;../enum&quot;&gt;Enum&lt;/a&gt;&amp;lt;&lt;a href=&quot;../dynamic&quot;&gt;Dynamic&lt;/a&gt;&amp;gt;&lt;/code&gt; 가 호출되어</target>
        </trans-unit>
        <trans-unit id="bdd1b24fe0cfc39cd088aa8e04c86fe21fe43518" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;str&lt;/code&gt; is parsed into tokens, which are stored for internal use. This means that multiple execute() operations on a single Template instance are more efficient than one execute() operations on multiple Template instances.</source>
          <target state="translated">&lt;code&gt;str&lt;/code&gt; 은 토큰으로 구문 분석되며 내부 용으로 저장됩니다. 즉, 단일 Template 인스턴스에 대한 여러 execute () 작업이 여러 Template 인스턴스에 대한 하나의 execute () 작업보다 효율적입니다.</target>
        </trans-unit>
        <trans-unit id="e894d7052a8072419d46381a26e29e7f0b91b921" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; and the index of each Array element increases by 1.</source>
          <target state="translated">&lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; 각 배열 요소의 길이 와 색인은 1 씩 증가합니다.</target>
        </trans-unit>
        <trans-unit id="f003c8048044763ce8318faf1539d6e6c63a6130" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; increases by 1.</source>
          <target state="translated">&lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; 는 1 씩 증가합니다.</target>
        </trans-unit>
        <trans-unit id="63d564d25967cf3fb3b8456621082d6a4c557262" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on all platforms&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;모든 플랫폼에서 사용 가능&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b4aeec77b4d6b0436d80e1c6ec2aa9993a2e81ea" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on cpp, cs, flash, hl, java, js, macro, neko, php, python&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;cpp, cs, flash, hl, java, js, macro, neko, php, python에서 사용 가능&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1e0d4f91d3ab8035610188836d096559c7ed0c7d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on cpp, cs, flash, hl, java, lua, macro, neko, php, python&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;cpp, cs, flash, hl, java, lua, macro, neko, php, python에서 사용 가능&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="777312188ff1e7b77ffc4e2891e16d2465837769" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on cpp, cs, flash, hl, java, macro, neko, php, python&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;cpp, cs, flash, hl, java, macro, neko, php, python에서 사용 가능&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b159ce319eb3bb1c1a9d4628daa3902a444e95ee" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on cpp, cs, flash, hl, js, lua, macro, neko, php, python&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;cpp, cs, flash, hl, js, lua, macro, neko, php, python에서 사용 가능&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="754159856b49a502a270b9951c57ab5f14f61b9b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on cpp, cs, flash, java, js, lua, macro, neko, php, python&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;cpp, cs, flash, java, js, lua, macro, neko, php, python에서 사용 가능&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7b01b0e24074bbe7ffc57aacff059e346d3a17ca" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on cpp, cs, flash, java, js, macro, neko, php, python&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;cpp, cs, flash, java, js, macro, neko, php, python에서 사용 가능&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fa20b0db633e995697773742f19e11bfb6667f85" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on cpp, cs, hl, java, js, lua, macro, neko, php, python&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;cpp, cs, hl, java, js, lua, macro, neko, php, python에서 사용 가능&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4056ca76ea00acf6fc8d27668275d310ce97a845" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on cpp, cs, hl, java, lua, macro, neko, php, python&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;cpp, cs, hl, java, lua, macro, neko, php, python에서 사용 가능&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4b7853d4cd18a75592ab6222c01da965bcd5a6ff" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on cpp, flash, hl, js, lua, macro, neko, php, python&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;cpp, flash, hl, js, lua, macro, neko, php, python에서 사용 가능&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="113b9f55a7d4efa4adbb60c842d0fbf507173294" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on cpp, flash, hl, js, macro, neko, php, python&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;cpp, flash, hl, js, macro, neko, php, python에서 사용 가능&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="96bc39b0b3dc3a95b5b48f51d00752dcf764ef86" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on cpp, flash, js, macro, neko, php, python&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;cpp, flash, js, macro, neko, php, python에서 사용 가능&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c8d98b6d4d5e5af0fb22e884be5ca3f4001460b7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on cpp, flash, js, php, python&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;cpp, flash, js, php, python에서 사용 가능&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="32542eccac4a63be14a419ac49ac48f81e316235" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on cpp, macro, neko, php&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;cpp, macro, neko, php에서 사용 가능&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d056f31da92404dabddc23426e40d8384f470ab3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on cs, hl, java&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;cs, hl, java에서 사용 가능&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2f3a310cae8d6a15047dc1f380a35a91674c11bb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on cs, java&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;CSS, Java에서 사용 가능&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="147f5b3493c1c8c4b6c9f17c76f326c0c11bc52e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on flash, js&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;플래시, js에서 사용 가능&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2de750d2cf35aa7d92fe919a5593ee84fe9274b7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on flash&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;플래시에서 사용 가능&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fc748bd6e2d832d5dbced2628be5222a5719ec79" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on hl&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;hl에서 사용 가능&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ef96d0728629b97da1f264537abcd8faacafae71" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on java&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;자바에서 사용 가능&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1294943e8fbbab6308d9cb3ecc7eca792671c39e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on js, lua&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;js, lua에서 사용 가능&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f758a4f654653a21994d99bf50c011ff7c508e37" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on js, macro, neko, php&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;js, macro, neko, php에서 사용 가능&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="413cc2b72f7b51634a8a6183df9d824837f115c4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on js&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;js에서 사용 가능&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="af8757b482bfb50f9bc09199d5fcf689fc90211c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on lua&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;루아에서 사용 가능&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f5808c10312b836fee6c462c14e997ffb3dd2d92" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on macro, neko, php&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;매크로, neko, PHP에서 사용 가능&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8fe09a8f09190c876d0ce2ddefefa8c1fb80dba8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on macro, neko&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;매크로, 네코에서 사용 가능&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c7ae91b6778e2011e477377de101d6b2d9fd3ccb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on macro&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;매크로에서 사용 가능&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e011c6a59c032dae2c71b94f517cd35b332cf6b2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; &quot;Use Context.getLocalTVars() instead&quot;</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않음 :&lt;/strong&gt; &quot;Context.getLocalTVars ()를 대신 사용하십시오 &lt;strong&gt;.&lt;/strong&gt; &quot;</target>
        </trans-unit>
        <trans-unit id="6f23e33c97c742d0f6b28df63b2ce16e31af5c33" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; &quot;Use high instead&quot;</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않음 :&lt;/strong&gt; &quot;대신 높이 사용&quot;</target>
        </trans-unit>
        <trans-unit id="ca39ebaf515da844938b0ce80a066a8cddd2582c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; &quot;Use low instead&quot;</source>
          <target state="translated">&lt;strong&gt;더 이상 사용되지 않음 :&lt;/strong&gt; &quot;대신 낮게 사용&quot;</target>
        </trans-unit>
        <trans-unit id="c35bccbff37a92af34c6e27a87f94d9353716921" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; &quot;readString is deprecated, use getString instead&quot;</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;더 이상 사용되지 &lt;strong&gt;않음 :&lt;/strong&gt; &quot;readString이 더 이상 사용되지 &lt;strong&gt;않습니다.&lt;/strong&gt; 대신 getString을 사용하십시오.&quot;</target>
        </trans-unit>
        <trans-unit id="4323deaec32ee720f580c54c5bc083d0dff0a1b2" translate="yes" xml:space="preserve">
          <source>@:access(haxe.MainEvent)&lt;em&gt;Available on all platforms&lt;/em&gt;</source>
          <target state="translated">@:access(haxe.MainEvent)&lt;em&gt;Available on all platforms&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e715c2605ef3130f95c48a29615188189172badd" translate="yes" xml:space="preserve">
          <source>@:buildXml(&quot;&amp;lt;include name=\&quot;${HXCPP}/src/hx/libs/regexp/Build.xml\&quot;/&amp;gt;&quot;)@:coreApi&lt;em&gt;Available on all platforms&lt;/em&gt;</source>
          <target state="translated">@:buildXml(&quot;&amp;lt;include name=\&quot;${HXCPP}/src/hx/libs/regexp/Build.xml\&quot;/&amp;gt;&quot;)@:coreApi&lt;em&gt;Available on all platforms&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="70096ec99737488ea9ee7061d0c8913ce16762f1" translate="yes" xml:space="preserve">
          <source>@:coreApi&lt;em&gt;Available on all platforms&lt;/em&gt;</source>
          <target state="translated">@:coreApi&lt;em&gt;Available on all platforms&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5daaa177a46810b2993d7d73489c318f6bf30e64" translate="yes" xml:space="preserve">
          <source>@:coreApi@:analyzer(ignore)&lt;em&gt;Available on all platforms&lt;/em&gt;</source>
          <target state="translated">@:coreApi@:analyzer(ignore)&lt;em&gt;Available on all platforms&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6565d96db9f2653fb8f5b8ff4debb8c0d4b1509f" translate="yes" xml:space="preserve">
          <source>@:coreApi@:buildXml(&quot;&amp;lt;include name=\&quot;${HXCPP}/src/hx/libs/zlib/Build.xml\&quot; /&amp;gt;&quot;)&lt;em&gt;Available on all platforms&lt;/em&gt;</source>
          <target state="translated">@:coreApi@:buildXml(&quot;&amp;lt;include name=\&quot;${HXCPP}/src/hx/libs/zlib/Build.xml\&quot; /&amp;gt;&quot;)&lt;em&gt;Available on all platforms&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="293daa01cffc84ef6079b58f32d1440d4d03d907" translate="yes" xml:space="preserve">
          <source>@:coreApi@:buildXml(&quot;&amp;lt;include name=\&quot;${HXCPP}/src/hx/libs/zlib/Build.xml\&quot;/&amp;gt;&quot;)&lt;em&gt;Available on all platforms&lt;/em&gt;</source>
          <target state="translated">@:coreApi@:buildXml(&quot;&amp;lt;include name=\&quot;${HXCPP}/src/hx/libs/zlib/Build.xml\&quot;/&amp;gt;&quot;)&lt;em&gt;Available on all platforms&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b2e01e72a25c983392c4d55bfbe5d7850baf0a3c" translate="yes" xml:space="preserve">
          <source>@:expose&lt;em&gt;Available on all platforms&lt;/em&gt;</source>
          <target state="translated">@:expose&lt;em&gt;Available on all platforms&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="36992d44a85b8870f207c151946ad4bbb6b107b7" translate="yes" xml:space="preserve">
          <source>@:generic&lt;em&gt;Available on all platforms&lt;/em&gt;</source>
          <target state="translated">@:generic&lt;em&gt;Available on all platforms&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="507a233ea35324e8a6ff3bb08312615da0eb8729" translate="yes" xml:space="preserve">
          <source>@:headerClassCode(&quot;\n inline void set(Dynamic key, ::null value) { __object_hash_set(h,key,value); }\n inline void set(Dynamic key, bool value) { __object_hash_set(h,key,value); }\n inline void set(Dynamic key, char value) { __object_hash_set_int(h,key,value); }\n inline void set(Dynamic key, unsigned char value) { __object_hash_set_int(h,key,value); }\n inline void set(Dynamic key, signed char value) { __object_hash_set_int(h,key,value); }\n inline void set(Dynamic key, short value) { __object_hash_set_int(h,key,value); }\n inline void set(Dynamic key, unsigned short value) { __object_hash_set_int(h,key,value); }\n inline void set(Dynamic key, int value) { __object_hash_set_int(h,key,value); }\n inline void set(Dynamic key, unsigned int value) { __object_hash_set_int(h,key,value); }\n inline void set(Dynamic key, float value) { __object_hash_set_float(h,key,value); }\n inline void set(Dynamic key, double value) { __object_hash_set_float(h,key,value); }\n inline void set(Dynamic key, ::String value) { __object_hash_set_string(h,key,value); }\n\n\n template&amp;lt;typename V, typename H&amp;gt;\n inline void set(Dynamic key, const ::cpp::Struct&amp;lt;V,H&amp;gt; &amp;amp;value) {__object_hash_set(h,key,value); }\n template&amp;lt;typename V&amp;gt;\n inline void set(Dynamic key, const ::cpp::Function&amp;lt;V&amp;gt; &amp;amp;value) {__object_hash_set(h,key,(Dynamic)value ); }\n template&amp;lt;typename V&amp;gt;\n inline void set(Dynamic key, const ::cpp::Pointer&amp;lt;V&amp;gt; &amp;amp;value) {__object_hash_set(h,key,(Dynamic)value ); }\n\n&quot;)@:coreApi&lt;em&gt;Available on all platforms&lt;/em&gt;</source>
          <target state="translated">@:headerClassCode(&quot;\n inline void set(Dynamic key, ::null value) { __object_hash_set(h,key,value); }\n inline void set(Dynamic key, bool value) { __object_hash_set(h,key,value); }\n inline void set(Dynamic key, char value) { __object_hash_set_int(h,key,value); }\n inline void set(Dynamic key, unsigned char value) { __object_hash_set_int(h,key,value); }\n inline void set(Dynamic key, signed char value) { __object_hash_set_int(h,key,value); }\n inline void set(Dynamic key, short value) { __object_hash_set_int(h,key,value); }\n inline void set(Dynamic key, unsigned short value) { __object_hash_set_int(h,key,value); }\n inline void set(Dynamic key, int value) { __object_hash_set_int(h,key,value); }\n inline void set(Dynamic key, unsigned int value) { __object_hash_set_int(h,key,value); }\n inline void set(Dynamic key, float value) { __object_hash_set_float(h,key,value); }\n inline void set(Dynamic key, double value) { __object_hash_set_float(h,key,value); }\n inline void set(Dynamic key, ::String value) { __object_hash_set_string(h,key,value); }\n\n\n template&amp;lt;typename V, typename H&amp;gt;\n inline void set(Dynamic key, const ::cpp::Struct&amp;lt;V,H&amp;gt; &amp;amp;value) {__object_hash_set(h,key,value); }\n template&amp;lt;typename V&amp;gt;\n inline void set(Dynamic key, const ::cpp::Function&amp;lt;V&amp;gt; &amp;amp;value) {__object_hash_set(h,key,(Dynamic)value ); }\n template&amp;lt;typename V&amp;gt;\n inline void set(Dynamic key, const ::cpp::Pointer&amp;lt;V&amp;gt; &amp;amp;value) {__object_hash_set(h,key,(Dynamic)value ); }\n\n&quot;)@:coreApi&lt;em&gt;Available on all platforms&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7115bb57aefe3f75eb9fb9650ac9596f514e2f59" translate="yes" xml:space="preserve">
          <source>@:headerClassCode(&quot;\n inline void set(Dynamic key, ::null value) { __object_hash_set(h,key,value,true); }\n inline void set(Dynamic key, bool value) { __object_hash_set(h,key,value,true); }\n inline void set(Dynamic key, char value) { __object_hash_set_int(h,key,value,true); }\n inline void set(Dynamic key, unsigned char value) { __object_hash_set_int(h,key,value,true); }\n inline void set(Dynamic key, signed char value) { __object_hash_set_int(h,key,value,true); }\n inline void set(Dynamic key, short value) { __object_hash_set_int(h,key,value,true); }\n inline void set(Dynamic key, unsigned short value) { __object_hash_set_int(h,key,value,true); }\n inline void set(Dynamic key, int value) { __object_hash_set_int(h,key,value,true); }\n inline void set(Dynamic key, unsigned int value) { __object_hash_set_int(h,key,value,true); }\n inline void set(Dynamic key, float value) { __object_hash_set_float(h,key,value,true); }\n inline void set(Dynamic key, double value) { __object_hash_set_float(h,key,value,true); }\n inline void set(Dynamic key, ::String value) { __object_hash_set_string(h,key,value,true); }\n\n template&amp;lt;typename V, typename H&amp;gt;\n inline void set(Dynamic key, const ::cpp::Struct&amp;lt;V,H&amp;gt; &amp;amp;value) {__object_hash_set(h,key,value,true); }\n template&amp;lt;typename V&amp;gt;\n inline void set(Dynamic key, const ::cpp::Pointer&amp;lt;V&amp;gt; &amp;amp;value) {__object_hash_set(h,key,(Dynamic)value,true ); }\n template&amp;lt;typename V&amp;gt;\n inline void set(Dynamic key, const ::cpp::Function&amp;lt;V&amp;gt; &amp;amp;value) {__object_hash_set(h,key,(Dynamic)value,true ); }\n&quot;)@:coreApi&lt;em&gt;Available on all platforms&lt;/em&gt;</source>
          <target state="translated">@:headerClassCode(&quot;\n inline void set(Dynamic key, ::null value) { __object_hash_set(h,key,value,true); }\n inline void set(Dynamic key, bool value) { __object_hash_set(h,key,value,true); }\n inline void set(Dynamic key, char value) { __object_hash_set_int(h,key,value,true); }\n inline void set(Dynamic key, unsigned char value) { __object_hash_set_int(h,key,value,true); }\n inline void set(Dynamic key, signed char value) { __object_hash_set_int(h,key,value,true); }\n inline void set(Dynamic key, short value) { __object_hash_set_int(h,key,value,true); }\n inline void set(Dynamic key, unsigned short value) { __object_hash_set_int(h,key,value,true); }\n inline void set(Dynamic key, int value) { __object_hash_set_int(h,key,value,true); }\n inline void set(Dynamic key, unsigned int value) { __object_hash_set_int(h,key,value,true); }\n inline void set(Dynamic key, float value) { __object_hash_set_float(h,key,value,true); }\n inline void set(Dynamic key, double value) { __object_hash_set_float(h,key,value,true); }\n inline void set(Dynamic key, ::String value) { __object_hash_set_string(h,key,value,true); }\n\n template&amp;lt;typename V, typename H&amp;gt;\n inline void set(Dynamic key, const ::cpp::Struct&amp;lt;V,H&amp;gt; &amp;amp;value) {__object_hash_set(h,key,value,true); }\n template&amp;lt;typename V&amp;gt;\n inline void set(Dynamic key, const ::cpp::Pointer&amp;lt;V&amp;gt; &amp;amp;value) {__object_hash_set(h,key,(Dynamic)value,true ); }\n template&amp;lt;typename V&amp;gt;\n inline void set(Dynamic key, const ::cpp::Function&amp;lt;V&amp;gt; &amp;amp;value) {__object_hash_set(h,key,(Dynamic)value,true ); }\n&quot;)@:coreApi&lt;em&gt;Available on all platforms&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5aa7afafdb51e7e258b7b0281d7614f33907017d" translate="yes" xml:space="preserve">
          <source>@:headerClassCode(&quot;\n inline void set(String key, ::null value) { __string_hash_set(h,key,value); }\n inline void set(String key, bool value) { __string_hash_set(h,key,value); }\n inline void set(String key, char value) { __string_hash_set_int(h,key,value); }\n inline void set(String key, unsigned char value) { __string_hash_set_int(h,key,value); }\n inline void set(String key, signed char value) { __string_hash_set_int(h,key,value); }\n inline void set(String key, short value) { __string_hash_set_int(h,key,value); }\n inline void set(String key, unsigned short value) { __string_hash_set_int(h,key,value); }\n inline void set(String key, int value) { __string_hash_set_int(h,key,value); }\n inline void set(String key, unsigned int value) { __string_hash_set_int(h,key,value); }\n inline void set(String key, float value) { __string_hash_set_float(h,key,value); }\n inline void set(String key, double value) { __string_hash_set_float(h,key,value); }\n inline void set(String key, ::String value) { __string_hash_set_string(h,key,value); }\n\n template&amp;lt;typename V, typename H&amp;gt;\n inline void set(String key, const ::cpp::Struct&amp;lt;V,H&amp;gt; &amp;amp;value) {__string_hash_set(h,key,value); }\n template&amp;lt;typename V&amp;gt;\n inline void set(String key, const ::cpp::Function&amp;lt;V&amp;gt; &amp;amp;value) {__string_hash_set(h,key,(Dynamic)value ); }\n template&amp;lt;typename V&amp;gt;\n inline void set(String key, const ::cpp::Pointer&amp;lt;V&amp;gt; &amp;amp;value) {__string_hash_set(h,key,(Dynamic)value ); }\n\n template&amp;lt;typename VALUE&amp;gt;\n inline void set(Dynamic &amp;amp;key, const VALUE &amp;amp;value) { set( (String)key, value ); }\n&quot;)@:coreApi&lt;em&gt;Available on all platforms&lt;/em&gt;</source>
          <target state="translated">@:headerClassCode(&quot;\n inline void set(String key, ::null value) { __string_hash_set(h,key,value); }\n inline void set(String key, bool value) { __string_hash_set(h,key,value); }\n inline void set(String key, char value) { __string_hash_set_int(h,key,value); }\n inline void set(String key, unsigned char value) { __string_hash_set_int(h,key,value); }\n inline void set(String key, signed char value) { __string_hash_set_int(h,key,value); }\n inline void set(String key, short value) { __string_hash_set_int(h,key,value); }\n inline void set(String key, unsigned short value) { __string_hash_set_int(h,key,value); }\n inline void set(String key, int value) { __string_hash_set_int(h,key,value); }\n inline void set(String key, unsigned int value) { __string_hash_set_int(h,key,value); }\n inline void set(String key, float value) { __string_hash_set_float(h,key,value); }\n inline void set(String key, double value) { __string_hash_set_float(h,key,value); }\n inline void set(String key, ::String value) { __string_hash_set_string(h,key,value); }\n\n template&amp;lt;typename V, typename H&amp;gt;\n inline void set(String key, const ::cpp::Struct&amp;lt;V,H&amp;gt; &amp;amp;value) {__string_hash_set(h,key,value); }\n template&amp;lt;typename V&amp;gt;\n inline void set(String key, const ::cpp::Function&amp;lt;V&amp;gt; &amp;amp;value) {__string_hash_set(h,key,(Dynamic)value ); }\n template&amp;lt;typename V&amp;gt;\n inline void set(String key, const ::cpp::Pointer&amp;lt;V&amp;gt; &amp;amp;value) {__string_hash_set(h,key,(Dynamic)value ); }\n\n template&amp;lt;typename VALUE&amp;gt;\n inline void set(Dynamic &amp;amp;key, const VALUE &amp;amp;value) { set( (String)key, value ); }\n&quot;)@:coreApi&lt;em&gt;Available on all platforms&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="47d54ba664564b9b2baebceab151e4d818fd5ef2" translate="yes" xml:space="preserve">
          <source>@:headerClassCode(&quot;\n inline void set(int key, ::null value) { __int_hash_set(h,key,value); }\n inline void set(int key, bool value) { __int_hash_set(h,key,value); }\n inline void set(int key, char value) { __int_hash_set_int(h,key,value); }\n inline void set(int key, unsigned char value) { __int_hash_set_int(h,key,value); }\n inline void set(int key, signed char value) { __int_hash_set_int(h,key,value); }\n inline void set(int key, short value) { __int_hash_set_int(h,key,value); }\n inline void set(int key, unsigned short value) { __int_hash_set_int(h,key,value); }\n inline void set(int key, int value) { __int_hash_set_int(h,key,value); }\n inline void set(int key, unsigned int value) { __int_hash_set_int(h,key,value); }\n inline void set(int key, float value) { __int_hash_set_float(h,key,value); }\n inline void set(int key, double value) { __int_hash_set_float(h,key,value); }\n inline void set(int key, ::String value) { __int_hash_set_string(h,key,value); }\n\n template&amp;lt;typename V, typename H&amp;gt;\n inline void set(int key, const ::cpp::Struct&amp;lt;V,H&amp;gt; &amp;amp;value) {__int_hash_set(h,key,value); }\n template&amp;lt;typename F&amp;gt;\n inline void set(int key, const ::cpp::Function&amp;lt;F&amp;gt; &amp;amp;value) {__int_hash_set(h,key,value); }\n template&amp;lt;typename V&amp;gt;\n inline void set(int key, const ::cpp::Pointer&amp;lt;V&amp;gt; &amp;amp;value) {__int_hash_set(h,key,(Dynamic)value ); }\n\n template&amp;lt;typename VALUE&amp;gt;\n inline void set(Dynamic &amp;amp;key, const VALUE &amp;amp;value) { set( (int)key, value ); }\n&quot;)@:coreApi&lt;em&gt;Available on all platforms&lt;/em&gt;</source>
          <target state="translated">@:headerClassCode(&quot;\n inline void set(int key, ::null value) { __int_hash_set(h,key,value); }\n inline void set(int key, bool value) { __int_hash_set(h,key,value); }\n inline void set(int key, char value) { __int_hash_set_int(h,key,value); }\n inline void set(int key, unsigned char value) { __int_hash_set_int(h,key,value); }\n inline void set(int key, signed char value) { __int_hash_set_int(h,key,value); }\n inline void set(int key, short value) { __int_hash_set_int(h,key,value); }\n inline void set(int key, unsigned short value) { __int_hash_set_int(h,key,value); }\n inline void set(int key, int value) { __int_hash_set_int(h,key,value); }\n inline void set(int key, unsigned int value) { __int_hash_set_int(h,key,value); }\n inline void set(int key, float value) { __int_hash_set_float(h,key,value); }\n inline void set(int key, double value) { __int_hash_set_float(h,key,value); }\n inline void set(int key, ::String value) { __int_hash_set_string(h,key,value); }\n\n template&amp;lt;typename V, typename H&amp;gt;\n inline void set(int key, const ::cpp::Struct&amp;lt;V,H&amp;gt; &amp;amp;value) {__int_hash_set(h,key,value); }\n template&amp;lt;typename F&amp;gt;\n inline void set(int key, const ::cpp::Function&amp;lt;F&amp;gt; &amp;amp;value) {__int_hash_set(h,key,value); }\n template&amp;lt;typename V&amp;gt;\n inline void set(int key, const ::cpp::Pointer&amp;lt;V&amp;gt; &amp;amp;value) {__int_hash_set(h,key,(Dynamic)value ); }\n\n template&amp;lt;typename VALUE&amp;gt;\n inline void set(Dynamic &amp;amp;key, const VALUE &amp;amp;value) { set( (int)key, value ); }\n&quot;)@:coreApi&lt;em&gt;Available on all platforms&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3f519a9b9c46468e0bac26270463de81294b7352" translate="yes" xml:space="preserve">
          <source>@:include(&quot;hxMath.h&quot;)&lt;em&gt;Available on all platforms&lt;/em&gt;</source>
          <target state="translated">@:include(&quot;hxMath.h&quot;)&lt;em&gt;Available on all platforms&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5b2adae5945b1152a6b0871e36e1264a3144c6a7" translate="yes" xml:space="preserve">
          <source>@:keepSub@:publicFields&lt;em&gt;Available on all platforms&lt;/em&gt;</source>
          <target state="translated">@:keepSub@:publicFields&lt;em&gt;Available on all platforms&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c08752e551e2e2ba935d7cf167052d0eed1ec746" translate="yes" xml:space="preserve">
          <source>@deprecated</source>
          <target state="translated">@deprecated</target>
        </trans-unit>
        <trans-unit id="91c0b572df56698ea05e100deade9fa91bdda781" translate="yes" xml:space="preserve">
          <source>@php In PHP versions prior to 5.3.1 VC 9 there may be unexpected results when performing arithmetic operations with &lt;code&gt;NaN&lt;/code&gt; on Windows, see &lt;a href=&quot;https://bugs.php.net/bug.php?id=42143&quot;&gt;https://bugs.php.net/bug.php?id=42143&lt;/a&gt;</source>
          <target state="translated">@php In PHP versions prior to 5.3.1 VC 9 there may be unexpected results when performing arithmetic operations with &lt;code&gt;NaN&lt;/code&gt; on Windows, see &lt;a href=&quot;https://bugs.php.net/bug.php?id=42143&quot;&gt;https://bugs.php.net/bug.php?id=42143&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c568f45c22fd32d1e164dc32bf4fd8d02b087f92" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;(e1 in e2)&lt;/code&gt; expression.</source>
          <target state="translated">&lt;code&gt;(e1 in e2)&lt;/code&gt; 식.</target>
        </trans-unit>
        <trans-unit id="f6adf8c7073238e157f779d5e5cf3156aba8edf0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;(e:t)&lt;/code&gt; expression.</source>
          <target state="translated">&lt;code&gt;(e:t)&lt;/code&gt; 식입니다.</target>
        </trans-unit>
        <trans-unit id="b5454875720ccd7d6c83439a9d666d903ea9b2c7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;(econd) ? eif : eelse&lt;/code&gt; expression.</source>
          <target state="translated">&lt;code&gt;(econd) ? eif : eelse&lt;/code&gt; 표현.</target>
        </trans-unit>
        <trans-unit id="7e6e4873f4d8fc9f74da238cd58f169db3f7651e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;Bool&lt;/a&gt;&lt;/code&gt; literal.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;Bool&lt;/a&gt;&lt;/code&gt; 리터럴.</target>
        </trans-unit>
        <trans-unit id="7807f1dfbc12493ac9a6f3ccfdb63b05aa3b8e4b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;../../float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; literal, represented as String to avoid precision loss.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; 문자열로 표현 리터럴은 정밀 손실을 방지 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e355b1311c515264a042ab3a870f30d91e6e1bd5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; literal.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 리터럴.</target>
        </trans-unit>
        <trans-unit id="48a2e2e79da0a94757c041f578b8d9f99fd66d7c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;@:generic&lt;/code&gt; base class.</source>
          <target state="translated">&lt;code&gt;@:generic&lt;/code&gt; 기본 클래스.</target>
        </trans-unit>
        <trans-unit id="a25eb968ec37700d20c36607b70a45a968719f1c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;@:genericBuild&lt;/code&gt; class</source>
          <target state="translated">&lt;code&gt;@:genericBuild&lt;/code&gt; 클래스</target>
        </trans-unit>
        <trans-unit id="f49d1f1cef8482a4cbc2d827754ff6b114cdaead" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;@m e1&lt;/code&gt; expression.</source>
          <target state="translated">&lt;code&gt;@m e1&lt;/code&gt; 식입니다.</target>
        </trans-unit>
        <trans-unit id="b0b0fd8868e94c1d4370f89a9b3b3dd3e2f34aa6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;@m e&lt;/code&gt; expression.</source>
          <target state="translated">&lt;code&gt;@m e&lt;/code&gt; 식입니다.</target>
        </trans-unit>
        <trans-unit id="b77e120993d3c9c27d396f9e40f6aa9f359ac297" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;break&lt;/code&gt; expression.</source>
          <target state="translated">&lt;code&gt;break&lt;/code&gt; 식입니다.</target>
        </trans-unit>
        <trans-unit id="065a14026924e491154a6e5eac8ee0522df456f1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;cast e&lt;/code&gt; or &lt;code&gt;cast (e, m)&lt;/code&gt; expression.</source>
          <target state="translated">&lt;code&gt;cast e&lt;/code&gt; 또는 &lt;code&gt;cast (e, m)&lt;/code&gt; 식.</target>
        </trans-unit>
        <trans-unit id="26d063230e4187bb6750bfa34aea3708818b5769" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;continue&lt;/code&gt; expression.</source>
          <target state="translated">A는 &lt;code&gt;continue&lt;/code&gt; 표현.</target>
        </trans-unit>
        <trans-unit id="d4c12aac5508954d663404a3e9a7982f75af32b5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;for&lt;/code&gt; expression.</source>
          <target state="translated">표현을 &lt;code&gt;for&lt;/code&gt; A.</target>
        </trans-unit>
        <trans-unit id="4ca754b09afe6531bcc695574edae63fe1a7c786" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;return&lt;/code&gt; or &lt;code&gt;return e&lt;/code&gt; expression.</source>
          <target state="translated">&lt;code&gt;return&lt;/code&gt; 또는 &lt;code&gt;return e&lt;/code&gt; 식입니다.</target>
        </trans-unit>
        <trans-unit id="38493fa0f935a212b27333f2e8b459ff9135a915" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;throw e&lt;/code&gt; expression.</source>
          <target state="translated">&lt;code&gt;throw e&lt;/code&gt; 식입니다.</target>
        </trans-unit>
        <trans-unit id="96278714057732bba22df4c8d8c3bf20155c6090" translate="yes" xml:space="preserve">
          <source>A Haxe String is immutable, it is not possible to modify individual characters. No method of this class changes the state of &lt;code&gt;this&lt;/code&gt; String.</source>
          <target state="translated">Haxe 문자열은 변경할 수 없으며 개별 문자를 수정할 수 없습니다. 이 클래스의 어떤 메소드 &lt;code&gt;this&lt;/code&gt; String 의 상태를 변경하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="aca9f60f812aa2ca33a8e91adb6a4ea869bba954" translate="yes" xml:space="preserve">
          <source>A Map can be instantiated without explicit type parameters. Type inference will then determine the type parameters from the usage.</source>
          <target state="translated">명시 적 유형 매개 변수없이 맵을 인스턴스화 할 수 있습니다. 그런 다음 형식 유추는 사용법에서 형식 매개 변수를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="871ca2a7241b499e905751a96a0fdf7cab9a2a7d" translate="yes" xml:space="preserve">
          <source>A String buffer is an efficient way to build a big string by appending small elements together.</source>
          <target state="translated">문자열 버퍼는 작은 요소를 함께 추가하여 큰 문자열을 만드는 효율적인 방법입니다.</target>
        </trans-unit>
        <trans-unit id="8ea3089eca2aef79001b3c7de91a969b1f2238ad" translate="yes" xml:space="preserve">
          <source>A Vector is a storage of fixed size. It can be faster than Array on some targets, and is never slower.</source>
          <target state="translated">벡터는 고정 크기의 저장소입니다. 일부 대상에서는 어레이보다 빠를 수 있으며 결코 느리지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cb3adc590cf3b6da3ae1e8910b85e68c04c86822" translate="yes" xml:space="preserve">
          <source>A binary operator.</source>
          <target state="translated">이진 연산자.</target>
        </trans-unit>
        <trans-unit id="8050f48c4b8a7979dbef2206d476cf05d399c4c7" translate="yes" xml:space="preserve">
          <source>A block declaration &lt;code&gt;{el}&lt;/code&gt;.</source>
          <target state="translated">블록 선언 &lt;code&gt;{el}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="89ac75429e1a570a757acb0fe6b7344e56c1d7cc" translate="yes" xml:space="preserve">
          <source>A block of expressions &lt;code&gt;{exprs}&lt;/code&gt;.</source>
          <target state="translated">표현의 블록 &lt;code&gt;{exprs}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="52ed57886ea7e354d2bcec6a53b17a8d3c424e25" translate="yes" xml:space="preserve">
          <source>A call &lt;code&gt;e(el)&lt;/code&gt;.</source>
          <target state="translated">전화 &lt;code&gt;e(el)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="14e9d30a403aaf7442fbb47763d39ad5cece1148" translate="yes" xml:space="preserve">
          <source>A call &lt;code&gt;e(params)&lt;/code&gt;.</source>
          <target state="translated">콜 &lt;code&gt;e(params)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e46bf2a83139d526d0573774423a60dedf1ef72d" translate="yes" xml:space="preserve">
          <source>A cell of &lt;code&gt;&lt;a href=&quot;genericstack#GenericStack&quot;&gt;haxe.ds.GenericStack&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;genericstack#GenericStack&quot;&gt;haxe.ds.GenericStack&lt;/a&gt;&lt;/code&gt; 의 셀 .</target>
        </trans-unit>
        <trans-unit id="daed94f2ac905a706b0dd3637427bd93cb020f21" translate="yes" xml:space="preserve">
          <source>A character is considered to be a space character if its character code is 9,10,11,12,13 or 32.</source>
          <target state="translated">문자 코드가 9,10,11,12,13 또는 32 인 경우 문자는 공백 문자로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="74404cd0f62a83be37d8e410f4bcf64a0738b89b" translate="yes" xml:space="preserve">
          <source>A class.</source>
          <target state="translated">수업.</target>
        </trans-unit>
        <trans-unit id="bdc02230c2e9d1dd361e8229e4b548ab7305e9b7" translate="yes" xml:space="preserve">
          <source>A closed structure is considered complete. That is, no further fields can be added to it.</source>
          <target state="translated">닫힌 구조는 완전한 것으로 간주됩니다. 즉, 더 이상 필드를 추가 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="e3ddf5573f4090beeecd3c1d8c3d42d3b2aa3a9a" translate="yes" xml:space="preserve">
          <source>A complete documentation of the supported syntax is available at: &lt;a href=&quot;https://haxe.org/manual/std-template.html&quot;&gt;https://haxe.org/manual/std-template.html&lt;/a&gt;</source>
          <target state="translated">지원되는 구문에 대한 전체 설명서는 &lt;a href=&quot;https://haxe.org/manual/std-template.html&quot;&gt;https://haxe.org/manual/std-template.html&lt;/a&gt; 에서 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c68294ed39519bfa9d0db6f1cd1ee04a548859f5" translate="yes" xml:space="preserve">
          <source>A composition of map and flatten.</source>
          <target state="translated">지도의 구성과 평평.</target>
        </trans-unit>
        <trans-unit id="51ca80745a1fe9c4c475e66c6c88342e985969c8" translate="yes" xml:space="preserve">
          <source>A concrete &lt;code&gt;@:generic&lt;/code&gt; instance, referencing the original class and the applied type parameters.</source>
          <target state="translated">원래 클래스와 적용된 형식 매개 변수를 참조 하는 구체적인 &lt;code&gt;@:generic&lt;/code&gt; 인스턴스입니다.</target>
        </trans-unit>
        <trans-unit id="069821d546b3124dcf822a15082bf50196616556" translate="yes" xml:space="preserve">
          <source>A conditional compiler flag can be set command line using &lt;code&gt;-D key=value&lt;/code&gt;.</source>
          <target state="translated">조건부 컴파일러 플래그는 &lt;code&gt;-D key=value&lt;/code&gt; 를 사용하여 명령 행을 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="589590a07c8293e40b1ca7816c9c3553b771353a" translate="yes" xml:space="preserve">
          <source>A const structure is one that appears directly in syntax. It cannot be assigned to a smaller structure type (that is, it does not allow structural sub-typing).</source>
          <target state="translated">const 구조는 구문에 직접 나타나는 구조입니다. 더 작은 구조 유형에 할당 할 수 없습니다 (즉, 구조 하위 유형을 허용하지 않음).</target>
        </trans-unit>
        <trans-unit id="1bb89b7cf3850c50755499b44b4e015f168717cb" translate="yes" xml:space="preserve">
          <source>A constant.</source>
          <target state="translated">상수.</target>
        </trans-unit>
        <trans-unit id="cd0aecf3d364249fe1d7a5e285d3bf9a25db656f" translate="yes" xml:space="preserve">
          <source>A constructor call &lt;code&gt;new c&amp;lt;params&amp;gt;(el)&lt;/code&gt;.</source>
          <target state="translated">생성자는 &lt;code&gt;new c&amp;lt;params&amp;gt;(el)&lt;/code&gt; 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="a3fec292fd1d4ceea3cd014947307ef59268e7a7" translate="yes" xml:space="preserve">
          <source>A constructor call &lt;code&gt;new t(params)&lt;/code&gt;.</source>
          <target state="translated">생성자는 &lt;code&gt;new t(params)&lt;/code&gt; 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="1de74e40b8e843a058557818330b6483426a8613" translate="yes" xml:space="preserve">
          <source>A cross-platform signed 64-bit integer. Int64 instances can be created from two 32-bit words using &lt;code&gt;&lt;a href=&quot;int64#make&quot;&gt;Int64.make&lt;/a&gt;()&lt;/code&gt;.</source>
          <target state="translated">크로스 플랫폼 부호있는 64 비트 정수 Int64 인스턴스는 &lt;code&gt;&lt;a href=&quot;int64#make&quot;&gt;Int64.make&lt;/a&gt;()&lt;/code&gt; 사용하여 두 개의 32 비트 단어로 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="55c5af888d4a43dfc4edad811b987f8280c3a6fb" translate="yes" xml:space="preserve">
          <source>A detailed explanation of the supported operations is available at &lt;a href=&quot;https://haxe.org/manual/std-regex.html&quot;&gt;https://haxe.org/manual/std-regex.html&lt;/a&gt;</source>
          <target state="translated">지원되는 작업에 대한 자세한 설명은 &lt;a href=&quot;https://haxe.org/manual/std-regex.html&quot;&gt;https://haxe.org/manual/std-regex.html&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4c1071f39b1a4fee9e194b63ea2fa12fd9f1eb3a" translate="yes" xml:space="preserve">
          <source>A dynamic, rebindable method.</source>
          <target state="translated">동적이고 리 바인딩 가능한 방법.</target>
        </trans-unit>
        <trans-unit id="3ac7939922264b44ec19458103cdc58e2668c986" translate="yes" xml:space="preserve">
          <source>A function declaration.</source>
          <target state="translated">함수 선언.</target>
        </trans-unit>
        <trans-unit id="8791f7e6f9758b2d173a68b84f21ed966bcaeca9" translate="yes" xml:space="preserve">
          <source>A linked-list of elements. The list is composed of element container objects that are chained together. It is optimized so that adding or removing an element does not imply copying the whole list content every time.</source>
          <target state="translated">요소의 링크 된 목록. 이 목록은 서로 연결된 요소 컨테이너 객체로 구성됩니다. 요소를 추가하거나 제거한다고해서 매번 전체 목록 내용이 복사되는 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="bae4b54bc10129993185c4eaf98d32e6e8ef0068" translate="yes" xml:space="preserve">
          <source>A list of all available resource names can be obtained from listNames().</source>
          <target state="translated">사용 가능한 모든 자원 이름의 목록은 listNames ()에서 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5cea0e67c1ad6225da5e4f3fe8f73f642066b5e8" translate="yes" xml:space="preserve">
          <source>A list of function arguments identified by an argument variable &lt;code&gt;v&lt;/code&gt; and an optional initialization &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">인수 변수 &lt;code&gt;v&lt;/code&gt; 및 선택적 초기화 &lt;code&gt;value&lt;/code&gt; 식별되는 함수 인수 목록 .</target>
        </trans-unit>
        <trans-unit id="24d25b024e4a1d97786adfb634642a4577f5c748" translate="yes" xml:space="preserve">
          <source>A list of function arguments.</source>
          <target state="translated">함수 인수 목록.</target>
        </trans-unit>
        <trans-unit id="7d6ca10419069621b52fb76a65d5a887a9340bda" translate="yes" xml:space="preserve">
          <source>A list of strings representing the targets where the constructor is available.</source>
          <target state="translated">생성자가 사용 가능한 대상을 나타내는 문자열 목록입니다.</target>
        </trans-unit>
        <trans-unit id="6bc914208916a908aaced78a8715bb60ff9e223e" translate="yes" xml:space="preserve">
          <source>A list of strings representing the targets where the field is available.</source>
          <target state="translated">필드를 사용할 수있는 대상을 나타내는 문자열 목록입니다.</target>
        </trans-unit>
        <trans-unit id="14c510b877afbf4a4c134dea23a8a50a731631b7" translate="yes" xml:space="preserve">
          <source>A list of strings representing the targets where the type is available.</source>
          <target state="translated">유형을 사용할 수있는 대상을 나타내는 문자열 목록입니다.</target>
        </trans-unit>
        <trans-unit id="a67e4fd06285ba85e801ca0135888f0b9698c897" translate="yes" xml:space="preserve">
          <source>A macro method.</source>
          <target state="translated">매크로 방법.</target>
        </trans-unit>
        <trans-unit id="2442918a6a90576098a00e1dfa5df60a155be9a4" translate="yes" xml:space="preserve">
          <source>A method</source>
          <target state="translated">방법</target>
        </trans-unit>
        <trans-unit id="695da28e7f9cfc3d877ad118e10a30d9fe8d0da5" translate="yes" xml:space="preserve">
          <source>A normal class.</source>
          <target state="translated">정상적인 수업.</target>
        </trans-unit>
        <trans-unit id="060bbdaf1959ec5bf2371b364fd4c344fdb3d1c3" translate="yes" xml:space="preserve">
          <source>A normal method.</source>
          <target state="translated">일반적인 방법입니다.</target>
        </trans-unit>
        <trans-unit id="d3b2fe8df4ca7abce5b33cfbaa63d65f52be301f" translate="yes" xml:space="preserve">
          <source>A package, module or sub-type dot path to keep.</source>
          <target state="translated">유지할 패키지, 모듈 또는 하위 유형 도트 경로입니다.</target>
        </trans-unit>
        <trans-unit id="37c243a55fee407e045dcc343f001f614670963f" translate="yes" xml:space="preserve">
          <source>A pure Haxe implementation of the ZLIB Inflate algorithm which allows reading compressed data without any platform-specific support.</source>
          <target state="translated">플랫폼 별 지원없이 압축 된 데이터를 읽을 수있는 ZLIB 팽창 알고리즘의 순수한 Haxe 구현.</target>
        </trans-unit>
        <trans-unit id="3a473135e90c6e906c28555b75d0ce5b85d1b8ee" translate="yes" xml:space="preserve">
          <source>A request string is composed of the following serialized values :</source>
          <target state="translated">요청 문자열은 다음 직렬화 된 값으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="27ed0d00eb63a91aacdf2b85a4aaf25a102ee8e2" translate="yes" xml:space="preserve">
          <source>A response string is composed of the following serialized values :</source>
          <target state="translated">응답 문자열은 다음 직렬화 된 값으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="3781668eddf4e87def1bd4a4994efbff127fe8b2" translate="yes" xml:space="preserve">
          <source>A special &lt;code&gt;&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; constant which denotes an invalid number.</source>
          <target state="translated">유효하지 않은 숫자를 나타내는 특수 &lt;code&gt;&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; 상수.</target>
        </trans-unit>
        <trans-unit id="be97adb010ccea8ee9fced56a8178e719a85931b" translate="yes" xml:space="preserve">
          <source>A special &lt;code&gt;&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; constant which denotes negative infinity.</source>
          <target state="translated">음의 무한대를 나타내는 특수 &lt;code&gt;&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; 상수.</target>
        </trans-unit>
        <trans-unit id="36a1b7e4d5f82e642ba7dc88389732bc6852ead6" translate="yes" xml:space="preserve">
          <source>A special &lt;code&gt;&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; constant which denotes positive infinity.</source>
          <target state="translated">양의 무한대를 나타내는 특수 &lt;code&gt;&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; 상수.</target>
        </trans-unit>
        <trans-unit id="532a44eacf5da7ab50d84a4f7b0a830772904324" translate="yes" xml:space="preserve">
          <source>A special abstract type that represents &quot;rest&quot; function argument.</source>
          <target state="translated">&quot;rest&quot;함수 인수를 나타내는 특수한 추상 유형입니다.</target>
        </trans-unit>
        <trans-unit id="54d11c2a8fc0f9a07b38c08e16d42af742bd7812" translate="yes" xml:space="preserve">
          <source>A special class for &lt;code&gt;&lt;a href=&quot;macrotype#MacroType&quot;&gt;haxe.macro.MacroType&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;macrotype#MacroType&quot;&gt;haxe.macro.MacroType&lt;/a&gt;&lt;/code&gt; 의 특수 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="26a5396ec4cf191a8e9e7d7295da30bd366bc63f" translate="yes" xml:space="preserve">
          <source>A special kind of class to encode expressions into type parameters.</source>
          <target state="translated">식을 형식 매개 변수로 인코딩하는 특수한 종류의 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="8add64ef3642b6a28a3d3c24d02f174dd7f5fc8b" translate="yes" xml:space="preserve">
          <source>A stack of elements.</source>
          <target state="translated">요소의 스택</target>
        </trans-unit>
        <trans-unit id="5ead0a43a4863d827f27807400ca15094e3eb62e" translate="yes" xml:space="preserve">
          <source>A structurally extended class.</source>
          <target state="translated">구조적으로 확장 된 수업.</target>
        </trans-unit>
        <trans-unit id="c2b2bf7f759040e72f0510e063bc3faa071b8584" translate="yes" xml:space="preserve">
          <source>A structure is only encoded when user requests it through &lt;code&gt;ref.get()&lt;/code&gt;.</source>
          <target state="translated">구조는 사용자가 &lt;code&gt;ref.get()&lt;/code&gt; 통해 요청할 때만 인코딩됩니다 .</target>
        </trans-unit>
        <trans-unit id="bfcba96145102a39924316cc530c6f078905694d" translate="yes" xml:space="preserve">
          <source>A structure that represents the constructors of an enum.</source>
          <target state="translated">열거 형의 생성자를 나타내는 구조입니다.</target>
        </trans-unit>
        <trans-unit id="e73aa2ba6b4ebf2d8a5a8031dc414c0518e13d31" translate="yes" xml:space="preserve">
          <source>A structure that represents the static fields of a class.</source>
          <target state="translated">클래스의 정적 필드를 나타내는 구조입니다.</target>
        </trans-unit>
        <trans-unit id="9680fdae6a3ec620a730de189c1b8e8c6dceff4e" translate="yes" xml:space="preserve">
          <source>A structure that represents the static fields of an abstract.</source>
          <target state="translated">초록의 정적 필드를 나타내는 구조입니다.</target>
        </trans-unit>
        <trans-unit id="48cd4241a5984a7adb42976d30e1c54b755c6ada" translate="yes" xml:space="preserve">
          <source>A tree node of &lt;code&gt;&lt;a href=&quot;balancedtree#BalancedTree&quot;&gt;haxe.ds.BalancedTree&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;balancedtree#BalancedTree&quot;&gt;haxe.ds.BalancedTree&lt;/a&gt;&lt;/code&gt; 의 트리 노드입니다 .</target>
        </trans-unit>
        <trans-unit id="7848245855c1f23d4fc11e375e8bf37f94296d6e" translate="yes" xml:space="preserve">
          <source>A type parameter class with a set of constraints.</source>
          <target state="translated">일련의 제약 조건이있는 형식 매개 변수 클래스</target>
        </trans-unit>
        <trans-unit id="74f1d0e3dde03de3f702fb8aa830d57217949e5f" translate="yes" xml:space="preserve">
          <source>A type resolver finds a &lt;code&gt;&lt;a href=&quot;../class&quot;&gt;Class&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../enum&quot;&gt;Enum&lt;/a&gt;&lt;/code&gt; instance from a given &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;. By default, the Haxe &lt;code&gt;&lt;a href=&quot;../type&quot;&gt;Type&lt;/a&gt;&lt;/code&gt; Api is used.</source>
          <target state="translated">타입 리졸버는 지정된 &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 로부터 &lt;code&gt;&lt;a href=&quot;../class&quot;&gt;Class&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;../enum&quot;&gt;Enum&lt;/a&gt;&lt;/code&gt; 인스턴스를 찾습니다 . 기본적으로 Haxe &lt;code&gt;&lt;a href=&quot;../type&quot;&gt;Type&lt;/a&gt;&lt;/code&gt; Api가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6c3786672741a800f9be18650c1cd8c3189e0670" translate="yes" xml:space="preserve">
          <source>A type resolver must provide two methods:</source>
          <target state="translated">형식 리졸버는 두 가지 방법을 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="e30b91ede58b910363bb434639e21b852f8e934e" translate="yes" xml:space="preserve">
          <source>A typed interface for bit flags. This is not a real object, only a typed interface for an actual Int. Each flag can be tested/set with the corresponding enum instance. Up to 32 flags can be stored that way.</source>
          <target state="translated">비트 플래그에 대한 형식화 된 인터페이스입니다. 이것은 실제 객체가 아니며 실제 Int에 대한 유형이 지정된 인터페이스입니다. 각 플래그는 해당 열거 인스턴스로 테스트 / 설정 될 수 있습니다. 이러한 방식으로 최대 32 개의 플래그를 저장할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0d1a5059aa222eb40147a031ec9e6cce07bc3551" translate="yes" xml:space="preserve">
          <source>A typedef.</source>
          <target state="translated">typedef.</target>
        </trans-unit>
        <trans-unit id="d2903d5e1dd76d94643d77f9d0a42b23731f310b" translate="yes" xml:space="preserve">
          <source>A unary operator.</source>
          <target state="translated">단항 연산자.</target>
        </trans-unit>
        <trans-unit id="66d820d0b6b998d496c534d1cfc394504b80d213" translate="yes" xml:space="preserve">
          <source>A variable declaration &lt;code&gt;var v&lt;/code&gt; or &lt;code&gt;var v = expr&lt;/code&gt;.</source>
          <target state="translated">변수 선언 &lt;code&gt;var v&lt;/code&gt; 또는 &lt;code&gt;var v = expr&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="19d11c98fe53568acdd0f5cc193669becf2d52cf" translate="yes" xml:space="preserve">
          <source>A variable of property, depending on the &lt;code&gt;read&lt;/code&gt; and &lt;code&gt;write&lt;/code&gt; values.</source>
          <target state="translated">&lt;code&gt;read&lt;/code&gt; 및 &lt;code&gt;write&lt;/code&gt; 값 에 따른 속성 변수입니다 .</target>
        </trans-unit>
        <trans-unit id="53c084c1bcdb475f03e39a2210288758f28a6c19" translate="yes" xml:space="preserve">
          <source>AMFConnection</source>
          <target state="translated">AMFConnection</target>
        </trans-unit>
        <trans-unit id="8da95c3112e20bafa962dd96d67921e23da58f48" translate="yes" xml:space="preserve">
          <source>AbstractType</source>
          <target state="translated">AbstractType</target>
        </trans-unit>
        <trans-unit id="dc04a3af2ea86ee424d238ac55f71cc65979ee27" translate="yes" xml:space="preserve">
          <source>Abstractdef</source>
          <target state="translated">Abstractdef</target>
        </trans-unit>
        <trans-unit id="2f81a22de0af5e9eab19326e19693f86ce612518" translate="yes" xml:space="preserve">
          <source>Access</source>
          <target state="translated">Access</target>
        </trans-unit>
        <trans-unit id="b1865fa06ce659bde1d7852fa91282e1bd2aa2e1" translate="yes" xml:space="preserve">
          <source>Access of field &lt;code&gt;cf&lt;/code&gt; on a class instance &lt;code&gt;c&lt;/code&gt; with type parameters &lt;code&gt;params&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;params&lt;/code&gt; 유형 의 클래스 인스턴스 &lt;code&gt;c&lt;/code&gt; 에서 필드 &lt;code&gt;cf&lt;/code&gt; 에 액세스합니다 .</target>
        </trans-unit>
        <trans-unit id="7f4f7d5e0f29fa0ca1c1003431f517d23150bc58" translate="yes" xml:space="preserve">
          <source>Access of field &lt;code&gt;cf&lt;/code&gt; on an anonymous structure.</source>
          <target state="translated">익명 구조에서 필드 &lt;code&gt;cf&lt;/code&gt; 의 액세스</target>
        </trans-unit>
        <trans-unit id="4e74914e0c39aa2df2246bb4fef900042c0658c5" translate="yes" xml:space="preserve">
          <source>Access through accessor function (&lt;code&gt;get&lt;/code&gt;, &lt;code&gt;set&lt;/code&gt;, &lt;code&gt;dynamic&lt;/code&gt;).</source>
          <target state="translated">접근 자 기능 ( &lt;code&gt;get&lt;/code&gt; , &lt;code&gt;set&lt;/code&gt; , &lt;code&gt;dynamic&lt;/code&gt; )을 통해 액세스합니다 .</target>
        </trans-unit>
        <trans-unit id="4631564e21f180984f0287cab5555d9a38559f9e" translate="yes" xml:space="preserve">
          <source>Access to a given attribute.</source>
          <target state="translated">주어진 속성에 액세스합니다.</target>
        </trans-unit>
        <trans-unit id="5a6290ff91d3ca437c045d950e6bf160c3076428" translate="yes" xml:space="preserve">
          <source>Access to an enum parameter (generated by the pattern matcher).</source>
          <target state="translated">열거 형 매개 변수에 액세스합니다 (패턴 매처에 의해 생성됨).</target>
        </trans-unit>
        <trans-unit id="7aefba47a5651e9239e446457b2eab289e249039" translate="yes" xml:space="preserve">
          <source>Access to the List of elements with the given name.</source>
          <target state="translated">지정된 이름을 가진 요소 목록에 액세스합니다.</target>
        </trans-unit>
        <trans-unit id="18f2b138ad83f8390514236e038edc8466333bb1" translate="yes" xml:space="preserve">
          <source>Access to the first sub element with the given name.</source>
          <target state="translated">주어진 이름으로 첫 번째 하위 요소에 액세스합니다.</target>
        </trans-unit>
        <trans-unit id="d031bf08b0d86448380182214da42c37d35b8068" translate="yes" xml:space="preserve">
          <source>Add TestCase instances to the unit test.</source>
          <target state="translated">단위 테스트에 TestCase 인스턴스를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="dd083c57f8a788aa94f81b2ec07ec35d2b650e25" translate="yes" xml:space="preserve">
          <source>Add a pending event to be run into the main loop.</source>
          <target state="translated">기본 루프에 실행할 보류중인 이벤트를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="bf9ed11421449a7b4a71bd382d46a8b6eb4e08f5" translate="yes" xml:space="preserve">
          <source>Add metadata to a (static) field or class by name. An error is thrown when &lt;code&gt;className&lt;/code&gt; or &lt;code&gt;field&lt;/code&gt; is invalid.</source>
          <target state="translated">이름별로 (정적) 필드 또는 클래스에 메타 데이터를 추가하십시오. &lt;code&gt;className&lt;/code&gt; 또는 &lt;code&gt;field&lt;/code&gt; 가 유효하지 않은 경우 오류가 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="cb4fb142c35527f2b62aa557bd442b052f97070f" translate="yes" xml:space="preserve">
          <source>Add the given UTF8 character code to the buffer.</source>
          <target state="translated">주어진 UTF8 문자 코드를 버퍼에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="d2424d4237c665727d67a7905dfc0d2bc5f24d53" translate="yes" xml:space="preserve">
          <source>Additionally, decimal notation may contain a single &lt;code&gt;.&lt;/code&gt; to denote the start of the fractions.</source>
          <target state="translated">또한 10 진수 표기법은 단일을 포함 할 수 있습니다 &lt;code&gt;.&lt;/code&gt; 분수의 시작을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="61ce312818c04c1497bfc959ae25d0e7b18a96f5" translate="yes" xml:space="preserve">
          <source>Adds a callback function &lt;code&gt;callback&lt;/code&gt; which is invoked after the compiler generation phase.</source>
          <target state="translated">컴파일러 생성 단계 후에 호출되는 콜백 함수 &lt;code&gt;callback&lt;/code&gt; 을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="12ba3fa2fdc7b7251094bb6ded91bf74666499ec" translate="yes" xml:space="preserve">
          <source>Adds a callback function &lt;code&gt;callback&lt;/code&gt; which is invoked after the compiler is done typing, but before optimization. The callback receives the types which have been typed.</source>
          <target state="translated">컴파일러가 입력을 완료 한 후 최적화하기 전에 호출되는 콜백 함수 &lt;code&gt;callback&lt;/code&gt; 을 추가합니다 . 콜백은 입력 된 유형을받습니다.</target>
        </trans-unit>
        <trans-unit id="93fd697271ac35f1be6f14cddc88a77a28a6e3ec" translate="yes" xml:space="preserve">
          <source>Adds a callback function &lt;code&gt;callback&lt;/code&gt; which is invoked after the compiler's typing phase, just before its generation phase.</source>
          <target state="translated">컴파일러의 입력 단계 후 생성 단계 직전에 호출되는 콜백 함수 &lt;code&gt;callback&lt;/code&gt; 을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="bd28a5e801466b57564b7217446a52da9fd47836" translate="yes" xml:space="preserve">
          <source>Adds a callback function &lt;code&gt;callback&lt;/code&gt; which is invoked when a type name cannot be resolved.</source>
          <target state="translated">유형 이름을 확인할 수 없을 때 호출되는 콜백 함수 &lt;code&gt;callback&lt;/code&gt; 을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="53e8a2b0e34723424ef00098ccb02753d6c848c9" translate="yes" xml:space="preserve">
          <source>Adds a child node to the Document or Element. A child node can only be inside one given parent node, which is indicated by the &lt;code&gt;parent&lt;/code&gt; property. If the child is already inside this Document or Element, it will be moved to the last position among the Document or Element's children. If the child node was previously inside a different node, it will be moved to this Document or Element.</source>
          <target state="translated">문서 또는 요소에 하위 노드를 추가합니다. 자식 노드는 주어진 부모 노드 안에 만있을 수 있으며 &lt;code&gt;parent&lt;/code&gt; 속성으로 표시됩니다 . 하위가 이미이 문서 또는 요소 안에있는 경우 문서 또는 요소의 하위 요소 중 마지막 위치로 이동합니다. 하위 노드가 이전에 다른 노드 내부에 있었던 경우이 문서 또는 요소로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="02b3577efb00e88afa7fec5ad2739b60b3a95bab" translate="yes" xml:space="preserve">
          <source>Adds a native library depending on the platform (e.g. &lt;code&gt;-swf-lib&lt;/code&gt; for Flash).</source>
          <target state="translated">플랫폼에 따라 기본 라이브러리를 추가합니다 (예 : &lt;code&gt;-swf-lib&lt;/code&gt; for Flash).</target>
        </trans-unit>
        <trans-unit id="d9af2e97bdc9f555abfad96843ee253b01a364e1" translate="yes" xml:space="preserve">
          <source>Adds a trailing slash to &lt;code&gt;path&lt;/code&gt;, if it does not have one already.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; 에 후행 슬래시 가 없으면 path를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="e4f2fe8ac7df45d146c05e479e2d6fed136e84db" translate="yes" xml:space="preserve">
          <source>Adds an argument to be passed to the native compiler (e.g. &lt;code&gt;-javac-arg&lt;/code&gt; for Java).</source>
          <target state="translated">원시 컴파일러에 전달할 인수를 추가합니다 (예 : Java의 경우 &lt;code&gt;-javac-arg&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="36694a7fe71e795d85b5f5004506680ee1843cba" translate="yes" xml:space="preserve">
          <source>Adds element &lt;code&gt;item&lt;/code&gt; at the beginning of &lt;code&gt;this&lt;/code&gt; List.</source>
          <target state="translated">를 추가 요소 &lt;code&gt;item&lt;/code&gt; 의 시작 부분에 &lt;code&gt;this&lt;/code&gt; 목록.</target>
        </trans-unit>
        <trans-unit id="2b26e76dc10125f6ad9a13c709f864344d81f8d8" translate="yes" xml:space="preserve">
          <source>Adds element &lt;code&gt;item&lt;/code&gt; at the end of &lt;code&gt;this&lt;/code&gt; List.</source>
          <target state="translated">요소 추가 &lt;code&gt;item&lt;/code&gt; 의 끝 부분에 &lt;code&gt;this&lt;/code&gt; 목록.</target>
        </trans-unit>
        <trans-unit id="52f1c55ba31c332db7c8600619283387f3e37818" translate="yes" xml:space="preserve">
          <source>Adds metadata &lt;code&gt;meta&lt;/code&gt; to all types (if &lt;code&gt;toTypes = &lt;a href=&quot;../../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt;) or fields (if &lt;code&gt;toFields = &lt;a href=&quot;../../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt;) whose dot-path matches &lt;code&gt;pathFilter&lt;/code&gt;.</source>
          <target state="translated">도트 경로가 &lt;code&gt;pathFilter&lt;/code&gt; 와 일치 하는 모든 유형 ( &lt;code&gt;toTypes = &lt;a href=&quot;../../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;../../bool&quot;&gt;true 인 경우&lt;/a&gt; ) 또는 필드 ( &lt;code&gt;toFields = &lt;a href=&quot;../../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;../../bool&quot;&gt;true 인&lt;/a&gt; 경우)에 메타 데이터 &lt;code&gt;meta&lt;/code&gt; 를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="4b65a049b449463ebb3a56ddb9aca3ae23228f6e" translate="yes" xml:space="preserve">
          <source>Adds the element &lt;code&gt;x&lt;/code&gt; at the end of &lt;code&gt;this&lt;/code&gt; Array and returns the new length of &lt;code&gt;this&lt;/code&gt; Array.</source>
          <target state="translated">요소 추가 &lt;code&gt;x&lt;/code&gt; 말에 &lt;code&gt;this&lt;/code&gt; 배열의 새 길이 반환 &lt;code&gt;this&lt;/code&gt; 배열.</target>
        </trans-unit>
        <trans-unit id="c4383cb92c658f0ef7f0118e6ab416330e33858a" translate="yes" xml:space="preserve">
          <source>Adds the element &lt;code&gt;x&lt;/code&gt; at the start of &lt;code&gt;this&lt;/code&gt; Array.</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; 배열 의 시작 부분에 &lt;code&gt;x&lt;/code&gt; 요소를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="fd8ad9b97793b7bccf04e173d542a3e89c38c916" translate="yes" xml:space="preserve">
          <source>Adds the metadata specified by &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;params&lt;/code&gt; and &lt;code&gt;pos&lt;/code&gt; to the origin of &lt;code&gt;this&lt;/code&gt; MetaAccess.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; , &lt;code&gt;params&lt;/code&gt; 및 &lt;code&gt;pos&lt;/code&gt; 로 지정된 메타 데이터 를 &lt;code&gt;this&lt;/code&gt; MetaAccess 의 오리진에 추가 합니다 .</target>
        </trans-unit>
        <trans-unit id="15916ea228038978ff5e724cafbd80324fd51736" translate="yes" xml:space="preserve">
          <source>Adler32</source>
          <target state="translated">Adler32</target>
        </trans-unit>
        <trans-unit id="c0ec5227dbe7070ac9f604198a01afa44b7999b3" translate="yes" xml:space="preserve">
          <source>Affected types are monomorphs &lt;code&gt;TMono&lt;/code&gt; and typedefs &lt;code&gt;TType(t,pl)&lt;/code&gt;.</source>
          <target state="translated">영향을받는 유형은 monomorphs &lt;code&gt;TMono&lt;/code&gt; 및 typedefs &lt;code&gt;TType(t,pl)&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5a6439bc2fb38e6d825f43df3193095a13e325cc" translate="yes" xml:space="preserve">
          <source>Affects only the macro context.</source>
          <target state="translated">매크로 컨텍스트에만 영향을줍니다.</target>
        </trans-unit>
        <trans-unit id="4612014b9db83b9c1ce0ce79a20f7165e9dbb9a0" translate="yes" xml:space="preserve">
          <source>Affects only the normal context.</source>
          <target state="translated">일반적인 상황에만 영향을 미칩니다.</target>
        </trans-unit>
        <trans-unit id="565e3b01d50da85ce05111c38fa2f1bba9775b88" translate="yes" xml:space="preserve">
          <source>Affects the characters &lt;code&gt;A-Z&lt;/code&gt;. Other characters remain unchanged.</source>
          <target state="translated">문자 &lt;code&gt;A-Z&lt;/code&gt; 영향을줍니다 . 다른 문자는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cfe65fa905fd32d0f653e0e256f436d1f39e6adc" translate="yes" xml:space="preserve">
          <source>Affects the characters &lt;code&gt;a-z&lt;/code&gt;. Other characters remain unchanged.</source>
          <target state="translated">문자 &lt;code&gt;a-z&lt;/code&gt; 영향을줍니다 . 다른 문자는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="76503d4c3f6fad0f5a617258c5fe2a603c6276b2" translate="yes" xml:space="preserve">
          <source>Affects the normal and macro contexts.</source>
          <target state="translated">일반 및 매크로 컨텍스트에 영향을줍니다.</target>
        </trans-unit>
        <trans-unit id="14b1dc8c0a1212713cfee1b2f636580db1f5df48" translate="yes" xml:space="preserve">
          <source>After calling this method, no additional invocations of &lt;code&gt;this.&lt;a href=&quot;#run&quot;&gt;run&lt;/a&gt;&lt;/code&gt; will occur.</source>
          <target state="translated">이 메소드를 호출 한 후에는 추가 호출 &lt;code&gt;this.&lt;a href=&quot;#run&quot;&gt;run&lt;/a&gt;&lt;/code&gt; 없습니다 . 실행 됩니다.</target>
        </trans-unit>
        <trans-unit id="7c48cd31d5501f6df66af8c2f84fa83c2ca895e9" translate="yes" xml:space="preserve">
          <source>After creating the Timer instance, it calls &lt;code&gt;this.&lt;a href=&quot;#run&quot;&gt;run&lt;/a&gt;&lt;/code&gt; repeatedly, with delays of &lt;code&gt;time_ms&lt;/code&gt; milliseconds, until &lt;code&gt;this.&lt;a href=&quot;#stop&quot;&gt;stop&lt;/a&gt;&lt;/code&gt; is called.</source>
          <target state="translated">Timer 인스턴스를 만든 후 이것을 호출 &lt;code&gt;this.&lt;a href=&quot;#run&quot;&gt;run&lt;/a&gt;&lt;/code&gt; &lt;code&gt;this.&lt;a href=&quot;#stop&quot;&gt;stop&lt;/a&gt;&lt;/code&gt; 때까지 &lt;code&gt;time_ms&lt;/code&gt; 밀리 초의 지연으로 반복적으로 실행 하십시오. &lt;a href=&quot;#stop&quot;&gt;중지&lt;/a&gt; 가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="5b2016394d060ca8c9d9c9b4e75e36a481c5dc9a" translate="yes" xml:space="preserve">
          <source>All functions which read data throw &lt;code&gt;&lt;a href=&quot;eof#Eof&quot;&gt;Eof&lt;/a&gt;&lt;/code&gt; when the end of the stream is reached.</source>
          <target state="translated">스트림의 끝에 도달하면 데이터를 읽는 모든 함수가 &lt;code&gt;&lt;a href=&quot;eof#Eof&quot;&gt;Eof&lt;/a&gt;&lt;/code&gt; 를 던집니다 .</target>
        </trans-unit>
        <trans-unit id="239b18c5e1b3f16f3f27b12cea7c3f7cec9b35c5" translate="yes" xml:space="preserve">
          <source>All further operations with &lt;code&gt;NaN&lt;/code&gt; as an operand will result in &lt;code&gt;NaN&lt;/code&gt;.</source>
          <target state="translated">모든 추가 작업 &lt;code&gt;NaN&lt;/code&gt; 의 피연산자로가 발생할 것이다 &lt;code&gt;NaN&lt;/code&gt; 이 .</target>
        </trans-unit>
        <trans-unit id="794046f2b39e7943ac912ce77efd5edf3b418520" translate="yes" xml:space="preserve">
          <source>All haxe-defined values and objects with the exception of functions can be serialized. Serialization of external/native objects is not guaranteed to work.</source>
          <target state="translated">함수를 제외한 모든 haxe 정의 값과 객체를 직렬화 할 수 있습니다. 외부 / 기본 개체의 직렬화가 작동하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c27dcf944f585bb63fa4ae9a2a56956a0c3d909b" translate="yes" xml:space="preserve">
          <source>All these methods can be called for compiler configuration macros.</source>
          <target state="translated">컴파일러 구성 매크로를 위해 이러한 모든 메소드를 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7ef366cf6d4be1336bb00230f1b4603a0b9e69e9" translate="yes" xml:space="preserve">
          <source>Allocate a new Utf8 buffer using an optional bytes size.</source>
          <target state="translated">선택적 바이트 크기를 사용하여 새 Utf8 버퍼를 할당하십시오.</target>
        </trans-unit>
        <trans-unit id="4ba81fda85c91c12a915d5094a227d2f3e27cf6c" translate="yes" xml:space="preserve">
          <source>Allows a connection to an AMF Remoting server such as Flash Media Server or AMFPHP.</source>
          <target state="translated">Flash Media Server 또는 AMFPHP와 같은 AMF Remoting 서버에 연결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8e7ac9ba45bb61ad6434c3f42e638c3225414800" translate="yes" xml:space="preserve">
          <source>Allows a synchronous connection to the given URL which should link to a Haxe server application.</source>
          <target state="translated">Haxe 서버 애플리케이션에 링크해야하는 지정된 URL에 대한 동기 연결을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="9d7f3fe2909f4a8c06faf454697553042972e2d4" translate="yes" xml:space="preserve">
          <source>Allows an asynchronous connection to the given URL which should link to a Haxe server application.</source>
          <target state="translated">주어진 URL에 대한 비동기 연결을 허용하며,이 URL은 Haxe 서버 애플리케이션에 링크되어야합니다.</target>
        </trans-unit>
        <trans-unit id="b471407914af5e33fafb787e8dfb8e8da19264d0" translate="yes" xml:space="preserve">
          <source>Allows communication between platforms. This is a shared API that can be called on the connection at the client code.</source>
          <target state="translated">플랫폼 간 통신을 허용합니다. 클라이언트 코드에서 연결시 호출 할 수있는 공유 API입니다.</target>
        </trans-unit>
        <trans-unit id="f6e27eb5ae9284022e77ffa592b2ab521660f627" translate="yes" xml:space="preserve">
          <source>Allows communications to a different application that runs on the same client device</source>
          <target state="translated">동일한 클라이언트 장치에서 실행되는 다른 응용 프로그램과 통신 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="189c4c60d1d50b6ed0145650930ee4b94ca96c51" translate="yes" xml:space="preserve">
          <source>Allows excluding the type from compilation.</source>
          <target state="translated">컴파일에서 유형을 제외 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7a92aa93e00df799173d1bc640664a58dd9d595d" translate="yes" xml:space="preserve">
          <source>Allows remoting communications over a socket connection</source>
          <target state="translated">소켓 연결을 통한 원격 통신 허용</target>
        </trans-unit>
        <trans-unit id="a9235aa830c2a07edc7763794dd3fb319afc2aaa" translate="yes" xml:space="preserve">
          <source>Allows to encode/decode String and bytes using Base64 encoding.</source>
          <target state="translated">Base64 인코딩을 사용하여 문자열 및 바이트를 인코딩 / 디코딩 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d2563c0066326e70b428b1c1a5454a887b93526e" translate="yes" xml:space="preserve">
          <source>Allows to encode/decode String and bytes using a power of two base dictionary.</source>
          <target state="translated">두 개의 기본 사전을 사용하여 문자열과 바이트를 인코딩 / 디코딩 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9e79c0a7835734dce01900cfb449931b90088392" translate="yes" xml:space="preserve">
          <source>Also replaces backslashes \ with slashes / and afterwards turns multiple slashes into a single one.</source>
          <target state="translated">또한 백 슬래시 (\)를 슬래시 (/)로 바꾸고 나중에 여러 슬래시를 단일 슬래시로 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="a8966341d626a5363945cadaa9a1988f8b2881ef" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;../../int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; literal.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 문자.</target>
        </trans-unit>
        <trans-unit id="106f5d1cad6fcf9fdced271bb105be60a9efb501" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;iterable&quot;&gt;Iterable&lt;/a&gt;&lt;/code&gt; is a data structure which has an &lt;code&gt;iterator()&lt;/code&gt; method. See &lt;code&gt;&lt;a href=&quot;lambda&quot;&gt;Lambda&lt;/a&gt;&lt;/code&gt; for generic functions on iterable structures.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;iterable&quot;&gt;Iterable&lt;/a&gt;&lt;/code&gt; 갖는 데이터 구조이다 &lt;code&gt;iterator()&lt;/code&gt; 방법. 반복 가능한 구조에 대한 일반 함수는 &lt;code&gt;&lt;a href=&quot;lambda&quot;&gt;Lambda&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="78d8316bbe2fa96cb556bcdff76e174761f9516d" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;iterator&quot;&gt;Iterator&lt;/a&gt;&lt;/code&gt; is a structure that permits iteration over elements of type &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;iterator&quot;&gt;Iterator&lt;/a&gt;&lt;/code&gt; 허용이 유형의 요소를 반복하는 구조 &lt;code&gt;T&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="1d9fe40fe2c168e85177ebef9a7a0f4cd00d1300" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;if(econd) eif&lt;/code&gt; or &lt;code&gt;if(econd) eif else eelse&lt;/code&gt; expression.</source>
          <target state="translated">&lt;code&gt;if(econd) eif&lt;/code&gt; 또는 &lt;code&gt;if(econd) eif else eelse&lt;/code&gt; 식입니다.</target>
        </trans-unit>
        <trans-unit id="4a8702bf12697df90318b543911da476908bff47" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;untyped e&lt;/code&gt; source code.</source>
          <target state="translated">&lt;code&gt;untyped e&lt;/code&gt; 소스 코드.</target>
        </trans-unit>
        <trans-unit id="483388265515a2287a9c581e31d005c9192bbab6" translate="yes" xml:space="preserve">
          <source>An API to access classes and enums metadata at runtime.</source>
          <target state="translated">런타임에 클래스 및 열거 메타 데이터에 액세스하는 API입니다.</target>
        </trans-unit>
        <trans-unit id="b688512591554207c93956cf40f87515ae531a3f" translate="yes" xml:space="preserve">
          <source>An Array is a storage for values. You can access it using indexes or with its API.</source>
          <target state="translated">배열은 값을 저장하는 공간입니다. 인덱스를 사용하거나 API를 사용하여 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f5e15c69d739387c4be0a5940b82956c5f233472" translate="yes" xml:space="preserve">
          <source>An Array of package, module or sub-type dot paths to keep.</source>
          <target state="translated">유지할 패키지, 모듈 또는 하위 유형 도트 경로의 배열입니다.</target>
        </trans-unit>
        <trans-unit id="bda328219a94150683fe20b765ea2d9c2f4f37f3" translate="yes" xml:space="preserve">
          <source>An Input is an abstract reader. See other classes in the &lt;code&gt;haxe.io&lt;/code&gt; package for several possible implementations.</source>
          <target state="translated">입력은 추상 독자입니다. 몇 가지 가능한 구현 방법 은 &lt;code&gt;haxe.io&lt;/code&gt; 패키지의 다른 클래스를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a08874ada0be7d355f7bf37e1d9178fcf486d30f" translate="yes" xml:space="preserve">
          <source>An Option is a wrapper type which can either have a value (Some) or not a value (None).</source>
          <target state="translated">옵션은 값 (일부)을 가질 수 있거나 값을 가질 수없는 (없음) 래퍼 유형입니다.</target>
        </trans-unit>
        <trans-unit id="ab62ffa8278a1f11ea77425402fac1aca3499295" translate="yes" xml:space="preserve">
          <source>An Output is an abstract write. A specific output implementation will only have to override the &lt;code&gt;writeByte&lt;/code&gt; and maybe the &lt;code&gt;write&lt;/code&gt;, &lt;code&gt;flush&lt;/code&gt; and &lt;code&gt;close&lt;/code&gt; methods. See &lt;code&gt;&lt;a href=&quot;https://api.haxe.org/sys/io/File.html#write&quot;&gt;File.write&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../../string#write&quot;&gt;String.write&lt;/a&gt;&lt;/code&gt; for two ways of creating an Output.</source>
          <target state="translated">출력은 추상 쓰기입니다. 특정 출력 구현은 &lt;code&gt;writeByte&lt;/code&gt; 및 &lt;code&gt;write&lt;/code&gt; , &lt;code&gt;flush&lt;/code&gt; 및 &lt;code&gt;close&lt;/code&gt; 메소드 를 대체하기 만하면 됩니다. 출력을 작성하는 두 가지 방법은 &lt;code&gt;&lt;a href=&quot;https://api.haxe.org/sys/io/File.html#write&quot;&gt;File.write&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;../../string#write&quot;&gt;String.write&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7c26104e8998bf3eec9202f00245e1e7f8743551" translate="yes" xml:space="preserve">
          <source>An abstract type allowing values to be either of &lt;code&gt;T1&lt;/code&gt; or &lt;code&gt;T2&lt;/code&gt; type. Supports implicit casts from/to either types.</source>
          <target state="translated">값이 &lt;code&gt;T1&lt;/code&gt; 또는 &lt;code&gt;T2&lt;/code&gt; 유형이 될 수있는 추상 유형입니다. 두 유형 중 하나에 대한 암시 적 캐스트를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="02e1e84923b9ae6b92bb06043fc46d84adf17ff3" translate="yes" xml:space="preserve">
          <source>An abstract type that represents a Class.</source>
          <target state="translated">클래스를 나타내는 추상 유형입니다.</target>
        </trans-unit>
        <trans-unit id="a327ba870d7f17528638596f90d7067ea6e66ef1" translate="yes" xml:space="preserve">
          <source>An abstract type that represents an Enum type.</source>
          <target state="translated">Enum 유형을 나타내는 추상 유형입니다.</target>
        </trans-unit>
        <trans-unit id="ac8a54f3049869e36ebf3673626d51f24331a11d" translate="yes" xml:space="preserve">
          <source>An abstract type that represents any enum value. See &lt;code&gt;&lt;a href=&quot;type&quot;&gt;Type&lt;/a&gt;&lt;/code&gt; for the Haxe Reflection API.</source>
          <target state="translated">열거 형 값을 나타내는 추상 형식입니다. Haxe Reflection API &lt;code&gt;&lt;a href=&quot;type&quot;&gt;Type&lt;/a&gt;&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ad21165efcab28e34ede9a0d38f96c9f941a10c4" translate="yes" xml:space="preserve">
          <source>An abstract.</source>
          <target state="translated">초록.</target>
        </trans-unit>
        <trans-unit id="a6f1e3c43d7d1c783e4d0296dc835e92880e484e" translate="yes" xml:space="preserve">
          <source>An alternative array of paths (directory names) to use to search for modules to include. Note that if you pass this argument, only the specified paths will be used for inclusion.</source>
          <target state="translated">포함 할 모듈을 검색하는 데 사용할 대체 경로 배열 (디렉토리 이름)입니다. 이 인수를 전달하면 지정된 경로 만 포함에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d4e9db352da93d0f813b0d564f45aee1eefa76fa" translate="yes" xml:space="preserve">
          <source>An array declaration &lt;code&gt;[el]&lt;/code&gt;.</source>
          <target state="translated">배열 선언 &lt;code&gt;[el]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7e04188f2b8fa472e118e1ebd657a8b0f6f14b85" translate="yes" xml:space="preserve">
          <source>An array of strings representing the names of the type parameters the field has.</source>
          <target state="translated">필드에있는 유형 매개 변수의 이름을 나타내는 문자열 배열입니다.</target>
        </trans-unit>
        <trans-unit id="4f0b024a809deedccc009b7b3a712324290cc2a7" translate="yes" xml:space="preserve">
          <source>An array of strings representing the names of the type parameters the type has.</source>
          <target state="translated">형식에 포함 된 형식 매개 변수의 이름을 나타내는 문자열 배열입니다.</target>
        </trans-unit>
        <trans-unit id="59e1fccd0529606edb08ffac8d9c60aa4fc4038a" translate="yes" xml:space="preserve">
          <source>An array of strings representing the names of the type parameters the type has. As of Haxe 3.2.0, this does not include the constraints.</source>
          <target state="translated">형식에 포함 된 형식 매개 변수의 이름을 나타내는 문자열 배열입니다. Haxe 3.2.0부터는 제약 조건이 포함되어 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2213e19e3ed42e9a543efb139c8bee21121184ee" translate="yes" xml:space="preserve">
          <source>An enum instance is the result of using an enum constructor. Given an &lt;code&gt;enum Color { Red; }&lt;/code&gt;, &lt;code&gt;getEnum(Red)&lt;/code&gt; returns &lt;code&gt;&lt;a href=&quot;enum&quot;&gt;Enum&lt;/a&gt;&amp;lt;Color&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">열거 형 인스턴스는 열거 형 생성자를 사용한 결과입니다. 주어진 &lt;code&gt;enum Color { Red; }&lt;/code&gt; , &lt;code&gt;getEnum(Red)&lt;/code&gt; 은 &lt;code&gt;&lt;a href=&quot;enum&quot;&gt;Enum&lt;/a&gt;&amp;lt;Color&amp;gt;&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="e9b38445f4dc3de7ac31cd5c76fbaa9e03203388" translate="yes" xml:space="preserve">
          <source>An enum.</source>
          <target state="translated">열거 형.</target>
        </trans-unit>
        <trans-unit id="1781c8dea722edf29c961270c700e8feb7d1d5dd" translate="yes" xml:space="preserve">
          <source>An exception is thrown if the attribute doesn't exists. Use &lt;code&gt;has&lt;/code&gt; to check the existence of an attribute.</source>
          <target state="translated">속성이 존재하지 않으면 예외가 발생합니다. 사용 &lt;code&gt;has&lt;/code&gt; 속성의 존재를 확인합니다.</target>
        </trans-unit>
        <trans-unit id="b105febb4300bf4bba3593f20d4b4a75499b338e" translate="yes" xml:space="preserve">
          <source>An exception is thrown if the element doesn't exists. Use &lt;code&gt;hasNode&lt;/code&gt; to check the existence of a node.</source>
          <target state="translated">요소가 존재하지 않으면 예외가 발생합니다. &lt;code&gt;hasNode&lt;/code&gt; 를 사용 하여 노드가 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="286ab01e6f8bd6e5eff57a85e1e7fb9dd7ef1fdf" translate="yes" xml:space="preserve">
          <source>An exception is thrown if there is no data or if there not only data but also other nodes.</source>
          <target state="translated">데이터가 없거나 데이터뿐만 아니라 다른 노드도있는 경우 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="6da3c5bed416c2c5ebbaac21e398b7f48ef45281" translate="yes" xml:space="preserve">
          <source>An implementation class of an abstract, i.e. where all its run-time code is.</source>
          <target state="translated">추상의 구현 클래스, 즉 모든 런타임 코드가있는 곳.</target>
        </trans-unit>
        <trans-unit id="57c8b7747b0892a79f289e49e8fbcee595d10c30" translate="yes" xml:space="preserve">
          <source>An implementation of JSON parser in Haxe.</source>
          <target state="translated">Haxe에서 JSON 파서 구현.</target>
        </trans-unit>
        <trans-unit id="410d61c7d01d4e39408ca8614eca64131c5bcb3f" translate="yes" xml:space="preserve">
          <source>An implementation of JSON printer in Haxe.</source>
          <target state="translated">Haxe에서 JSON 프린터 구현.</target>
        </trans-unit>
        <trans-unit id="22469e1c1eebd60e4cbf4f63bbf006a6d6ee3a01" translate="yes" xml:space="preserve">
          <source>An inline method.</source>
          <target state="translated">인라인 방법.</target>
        </trans-unit>
        <trans-unit id="1cad455794751b0f0cb487e809a96348f47917a6" translate="yes" xml:space="preserve">
          <source>An integer value is outside its allowed range</source>
          <target state="translated">정수 값이 허용 범위를 벗어났습니다</target>
        </trans-unit>
        <trans-unit id="6e9da84fd19f48f6841743375545fbe53a7bfa79" translate="yes" xml:space="preserve">
          <source>An object declaration.</source>
          <target state="translated">객체 선언.</target>
        </trans-unit>
        <trans-unit id="b0b19b5df1d06a2f1a2fb6ae8e0ebdceb28f47f0" translate="yes" xml:space="preserve">
          <source>An open structure allows having additional fields added to it, which is used during type inference. It is closed upon unification.</source>
          <target state="translated">개방형 구조는 추가 필드를 추가하여 유형 유추 중에 사용됩니다. 통일되면 문을 닫습니다.</target>
        </trans-unit>
        <trans-unit id="d8dc50fd166713cf880e6c280467ffc9df61ac97" translate="yes" xml:space="preserve">
          <source>An operation on Bytes is outside of its valid range</source>
          <target state="translated">바이트 작업이 유효한 범위를 벗어납니다</target>
        </trans-unit>
        <trans-unit id="9dd8d54e4a8989728914588953fa56aaf9fb3e3a" translate="yes" xml:space="preserve">
          <source>An optional list of function parameter type declarations.</source>
          <target state="translated">함수 매개 변수 유형 선언의 선택적 목록입니다.</target>
        </trans-unit>
        <trans-unit id="0d31353453feddd6160bcbabd73954373085fbee" translate="yes" xml:space="preserve">
          <source>An ordered list of enum constructor names.</source>
          <target state="translated">열거 형 생성자 이름의 정렬 된 목록입니다.</target>
        </trans-unit>
        <trans-unit id="9131b5b6b56007e8765a4775bc4a19b6019ddc12" translate="yes" xml:space="preserve">
          <source>An unary operator &lt;code&gt;op&lt;/code&gt; on &lt;code&gt;e&lt;/code&gt;:</source>
          <target state="translated">단항 연산자의 &lt;code&gt;op&lt;/code&gt; 에 &lt;code&gt;e&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ab3d5457090c628d095998c16b9edb1426c86b27" translate="yes" xml:space="preserve">
          <source>AnonStatus</source>
          <target state="translated">AnonStatus</target>
        </trans-unit>
        <trans-unit id="ff487595ac00557b04dad23cdb36e138b12199bb" translate="yes" xml:space="preserve">
          <source>AnonType</source>
          <target state="translated">AnonType</target>
        </trans-unit>
        <trans-unit id="322444d3bb52c341f429ca0454f292dc242f315b" translate="yes" xml:space="preserve">
          <source>Any</source>
          <target state="translated">Any</target>
        </trans-unit>
        <trans-unit id="7f91a3a3d79900c1d520772113215772298ce3ba" translate="yes" xml:space="preserve">
          <source>Any call to this function takes effect when the macro is executed, not during typing. As a consequence, this function can not introduce new local variables into the macro context and may have other restrictions.</source>
          <target state="translated">이 함수에 대한 모든 호출은 입력하는 동안이 아니라 매크로가 실행될 때 적용됩니다. 결과적으로이 함수는 새로운 로컬 변수를 매크로 컨텍스트에 도입 할 수 없으며 다른 제한이있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8d698245b5a4ca669d90c3c5fd8a061538c6c5a1" translate="yes" xml:space="preserve">
          <source>Any class with matching &lt;code&gt;hasNext()&lt;/code&gt; and &lt;code&gt;next()&lt;/code&gt; fields is considered an &lt;code&gt;&lt;a href=&quot;iterator&quot;&gt;Iterator&lt;/a&gt;&lt;/code&gt; and can then be used e.g. in &lt;code&gt;for&lt;/code&gt;-loops. This makes it easy to implement custom iterators.</source>
          <target state="translated">&lt;code&gt;hasNext()&lt;/code&gt; 및 &lt;code&gt;next()&lt;/code&gt; 필드가 일치하는 모든 클래스 는 &lt;code&gt;&lt;a href=&quot;iterator&quot;&gt;Iterator&lt;/a&gt;&lt;/code&gt; 로 간주 되며 &lt;code&gt;for&lt;/code&gt; 루프 에서 사용할 수 있습니다 . 이를 통해 사용자 정의 반복자를 쉽게 구현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="16584c178255be8fdad9baf1f1c8fd7b515afbc7" translate="yes" xml:space="preserve">
          <source>Any(&lt;a href=&quot;dynamic&quot;&gt;Dynamic&lt;/a&gt;)</source>
          <target state="translated">Any(&lt;a href=&quot;dynamic&quot;&gt;Dynamic&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="025f1f66191a6ac3a06dc7b88d956a4a8e52b209" translate="yes" xml:space="preserve">
          <source>Appends &lt;code&gt;c&lt;/code&gt; to &lt;code&gt;s&lt;/code&gt; until &lt;code&gt;s.length&lt;/code&gt; is at least &lt;code&gt;l&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;s.length&lt;/code&gt; 가 &lt;code&gt;l&lt;/code&gt; 이상이 될 때까지 &lt;code&gt;c&lt;/code&gt; 를 &lt;code&gt;s&lt;/code&gt; 에 추가 합니다.</target>
        </trans-unit>
        <trans-unit id="3ad2c6f1821a0a3c5bf76fc477aa8a72a287d665" translate="yes" xml:space="preserve">
          <source>Appends a substring of &lt;code&gt;s&lt;/code&gt; to &lt;code&gt;this&lt;/code&gt; StringBuf.</source>
          <target state="translated">의 하위에 추가 &lt;code&gt;s&lt;/code&gt; 에 &lt;code&gt;this&lt;/code&gt; StringBuf합니다.</target>
        </trans-unit>
        <trans-unit id="f37373295f3d2823f0dc5098c7c22ded66ea16c1" translate="yes" xml:space="preserve">
          <source>Appends the character identified by &lt;code&gt;c&lt;/code&gt; to &lt;code&gt;this&lt;/code&gt; StringBuf.</source>
          <target state="translated">&lt;code&gt;c&lt;/code&gt; 로 식별되는 문자 를 &lt;code&gt;this&lt;/code&gt; StringBuf 에 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="89d581df81992a14b9b5d5d964352ae05d35797e" translate="yes" xml:space="preserve">
          <source>Appends the representation of &lt;code&gt;x&lt;/code&gt; to &lt;code&gt;this&lt;/code&gt; StringBuf.</source>
          <target state="translated">의 표현에 추가 &lt;code&gt;x&lt;/code&gt; 에 &lt;code&gt;this&lt;/code&gt; StringBuf합니다.</target>
        </trans-unit>
        <trans-unit id="d36709920bb1b972cb877e71fd9ce02f7de31236" translate="yes" xml:space="preserve">
          <source>Applies the type parameters &lt;code&gt;typeParameters&lt;/code&gt; to type &lt;code&gt;t&lt;/code&gt; with the given types &lt;code&gt;concreteTypes&lt;/code&gt;.</source>
          <target state="translated">지정된 유형 &lt;code&gt;concreteTypes&lt;/code&gt; 를 사용 하여 유형 매개 변수 &lt;code&gt;typeParameters&lt;/code&gt; 를 유형 &lt;code&gt;t&lt;/code&gt; 에 적용합니다 .</target>
        </trans-unit>
        <trans-unit id="107004472b7ba4e5e31f3082ee1fb5a1239eec61" translate="yes" xml:space="preserve">
          <source>Array</source>
          <target state="translated">Array</target>
        </trans-unit>
        <trans-unit id="cbd12a239d023ee518bf08255256e27ba3b6aa6f" translate="yes" xml:space="preserve">
          <source>Array access &lt;code&gt;e1[e2]&lt;/code&gt;.</source>
          <target state="translated">어레이 액세스 &lt;code&gt;e1[e2]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0f0eb497b2b14ebc933d5eb57044486fa397dca1" translate="yes" xml:space="preserve">
          <source>Array of module names to ignore for inclusion.</source>
          <target state="translated">포함을 위해 무시할 모듈 이름의 배열입니다.</target>
        </trans-unit>
        <trans-unit id="dfe5f07935be54d26e058d11a7ad130e6ef99259" translate="yes" xml:space="preserve">
          <source>Array&amp;lt;T&amp;gt;</source>
          <target state="translated">Array&amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="7f8120e970a68240bd85c0d320d5e295ae60efb1" translate="yes" xml:space="preserve">
          <source>Array.concat()</source>
          <target state="translated">Array.concat()</target>
        </trans-unit>
        <trans-unit id="a75138abbeca84f128f4be60f7c033cd747fd3e7" translate="yes" xml:space="preserve">
          <source>Array.copy()</source>
          <target state="translated">Array.copy()</target>
        </trans-unit>
        <trans-unit id="6278fc55a31e3f815cc5eeadc9d55c3efe160136" translate="yes" xml:space="preserve">
          <source>Array.filter()</source>
          <target state="translated">Array.filter()</target>
        </trans-unit>
        <trans-unit id="d075be5db68730564490268da50f3f414b85905f" translate="yes" xml:space="preserve">
          <source>Array.indexOf()</source>
          <target state="translated">Array.indexOf()</target>
        </trans-unit>
        <trans-unit id="452852518dea4c1028ee6a067649f9ec5d9dd1b1" translate="yes" xml:space="preserve">
          <source>Array.insert()</source>
          <target state="translated">Array.insert()</target>
        </trans-unit>
        <trans-unit id="fdae32b1a90b6baaab0a28fd27aa563d2f16452a" translate="yes" xml:space="preserve">
          <source>Array.iterator()</source>
          <target state="translated">Array.iterator()</target>
        </trans-unit>
        <trans-unit id="ad5c54e02e90cd598f7759ad4bc21a224892912e" translate="yes" xml:space="preserve">
          <source>Array.join()</source>
          <target state="translated">Array.join()</target>
        </trans-unit>
        <trans-unit id="61819ffd9b9922c5d1fedb13ce708f12e9295c53" translate="yes" xml:space="preserve">
          <source>Array.lastIndexOf()</source>
          <target state="translated">Array.lastIndexOf()</target>
        </trans-unit>
        <trans-unit id="fb5ce6e940582647f2fa3ae56246c93e000d7601" translate="yes" xml:space="preserve">
          <source>Array.length</source>
          <target state="translated">Array.length</target>
        </trans-unit>
        <trans-unit id="5813e7ebce82b9b8955465c2c9f8e22a90685e9e" translate="yes" xml:space="preserve">
          <source>Array.map()</source>
          <target state="translated">Array.map()</target>
        </trans-unit>
        <trans-unit id="df1d374981aa2c51195c483bb7b3f173f6629489" translate="yes" xml:space="preserve">
          <source>Array.pop()</source>
          <target state="translated">Array.pop()</target>
        </trans-unit>
        <trans-unit id="60129d3294829838426397201529a7e53ce809c4" translate="yes" xml:space="preserve">
          <source>Array.push()</source>
          <target state="translated">Array.push()</target>
        </trans-unit>
        <trans-unit id="85783f4dbd92f3720be3881ca48520f431c4591b" translate="yes" xml:space="preserve">
          <source>Array.remove()</source>
          <target state="translated">Array.remove()</target>
        </trans-unit>
        <trans-unit id="905ce0b21ef07c3d8d242c40cd6d50cce52bac38" translate="yes" xml:space="preserve">
          <source>Array.reverse()</source>
          <target state="translated">Array.reverse()</target>
        </trans-unit>
        <trans-unit id="a2d09add6195e0224926af72155b0b0a4ed3fc44" translate="yes" xml:space="preserve">
          <source>Array.shift()</source>
          <target state="translated">Array.shift()</target>
        </trans-unit>
        <trans-unit id="3d19b41c2d11ba0e8689da80ce70255eb10a2ea0" translate="yes" xml:space="preserve">
          <source>Array.slice()</source>
          <target state="translated">Array.slice()</target>
        </trans-unit>
        <trans-unit id="b6b62bc1663721a8ba2817dd79d6b63da60557a5" translate="yes" xml:space="preserve">
          <source>Array.sort()</source>
          <target state="translated">Array.sort()</target>
        </trans-unit>
        <trans-unit id="61381df54b60a85fa03a7142d959ecc2f0e20ebf" translate="yes" xml:space="preserve">
          <source>Array.splice()</source>
          <target state="translated">Array.splice()</target>
        </trans-unit>
        <trans-unit id="b33ace5b276a0af37c4557e108b877d0d75e86c6" translate="yes" xml:space="preserve">
          <source>Array.toString()</source>
          <target state="translated">Array.toString()</target>
        </trans-unit>
        <trans-unit id="fad28543e8e94ec8c87fb5f43397e1cfa8549b8f" translate="yes" xml:space="preserve">
          <source>Array.unshift()</source>
          <target state="translated">Array.unshift()</target>
        </trans-unit>
        <trans-unit id="b3f2e985db383c94521559410abfe5a507362e26" translate="yes" xml:space="preserve">
          <source>ArrayAccess</source>
          <target state="translated">ArrayAccess</target>
        </trans-unit>
        <trans-unit id="762bcaeb1a15ecbcef97165425968b6d391bf015" translate="yes" xml:space="preserve">
          <source>ArrayAccess&amp;lt;T&amp;gt;</source>
          <target state="translated">ArrayAccess&amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="6d847af54d7a1f2d7fb25545e9d4c0184f36757f" translate="yes" xml:space="preserve">
          <source>ArrayBufferView(&lt;a href=&quot;arraybufferviewdata&quot;&gt;ArrayBufferViewData&lt;/a&gt;)</source>
          <target state="translated">ArrayBufferView(&lt;a href=&quot;arraybufferviewdata&quot;&gt;ArrayBufferViewData&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="d59e6d02a725828255559fdb12d4169a506cdc58" translate="yes" xml:space="preserve">
          <source>ArrayBufferViewData</source>
          <target state="translated">ArrayBufferViewData</target>
        </trans-unit>
        <trans-unit id="576df41107c6500ad92a8938b2296e6dd8ff1cd1" translate="yes" xml:space="preserve">
          <source>ArrayBufferViewImpl</source>
          <target state="translated">ArrayBufferViewImpl</target>
        </trans-unit>
        <trans-unit id="7ca62f7c70f8e91a7204f929db6d8b286906d76a" translate="yes" xml:space="preserve">
          <source>ArraySort</source>
          <target state="translated">ArraySort</target>
        </trans-unit>
        <trans-unit id="cc5ad33c751f2ae16ae459cb20d30d269b7cc8e5" translate="yes" xml:space="preserve">
          <source>ArraySort provides a stable implementation of merge sort through its &lt;code&gt;sort&lt;/code&gt; method. It should be used instead of &lt;code&gt;&lt;a href=&quot;../../array#sort&quot;&gt;Array.sort&lt;/a&gt;&lt;/code&gt; in cases where the order of equal elements has to be retained on all targets.</source>
          <target state="translated">ArraySort는 &lt;code&gt;sort&lt;/code&gt; 방법을 통해 안정적인 병합 정렬 구현을 제공합니다 . 모든 요소에서 동일한 요소의 순서를 유지 해야하는 경우 &lt;code&gt;&lt;a href=&quot;../../array#sort&quot;&gt;Array.sort&lt;/a&gt;&lt;/code&gt; 대신 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="941b370d441f4d7c5ab64a088703f6edd4b36dfe" translate="yes" xml:space="preserve">
          <source>AsVar&amp;lt;T&amp;gt;(T)</source>
          <target state="translated">AsVar&amp;lt;T&amp;gt;(T)</target>
        </trans-unit>
        <trans-unit id="5867255fe0b0339f00303cec83b66d13f9675f52" translate="yes" xml:space="preserve">
          <source>AsyncAdapter</source>
          <target state="translated">AsyncAdapter</target>
        </trans-unit>
        <trans-unit id="85633a790d047637f3e2d5fad02f6c8932a98e09" translate="yes" xml:space="preserve">
          <source>AsyncConnection</source>
          <target state="translated">AsyncConnection</target>
        </trans-unit>
        <trans-unit id="7bf40a202ab7407cf6f226b75579564047cca6bb" translate="yes" xml:space="preserve">
          <source>AsyncDebugConnection</source>
          <target state="translated">AsyncDebugConnection</target>
        </trans-unit>
        <trans-unit id="be934223df991bdf0c1b6fdcfa3205b0319d2d89" translate="yes" xml:space="preserve">
          <source>AsyncProxy&amp;lt;T&amp;gt;</source>
          <target state="translated">AsyncProxy&amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="b7f32def50a12a9d7502886cfd50cda17de9d212" translate="yes" xml:space="preserve">
          <source>Attrib</source>
          <target state="translated">Attrib</target>
        </trans-unit>
        <trans-unit id="be93bbecfd7ee4e70bcb3d856d9d02e48a49bfac" translate="yes" xml:space="preserve">
          <source>BalancedTree allows key-value mapping with arbitrary keys, as long as they can be ordered. By default, &lt;code&gt;&lt;a href=&quot;../../reflect#compare&quot;&gt;Reflect.compare&lt;/a&gt;&lt;/code&gt; is used in the &lt;code&gt;compare&lt;/code&gt; method, which can be overridden in subclasses.</source>
          <target state="translated">BalancedTree는 주문이 가능한 한 임의의 키로 키-값 매핑을 허용합니다. 기본적으로 &lt;code&gt;&lt;a href=&quot;../../reflect#compare&quot;&gt;Reflect.compare&lt;/a&gt;&lt;/code&gt; 는 &lt;code&gt;compare&lt;/code&gt; 메소드 에서 사용 되며 서브 클래스에서 재정의 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c4d4803f2c7bd8528aa34554e4732753b83f7af5" translate="yes" xml:space="preserve">
          <source>BalancedTree&amp;lt;K, V&amp;gt;</source>
          <target state="translated">밸런스 트리 &amp;lt;K, V&amp;gt;</target>
        </trans-unit>
        <trans-unit id="895c330ff6166a7f13701f8d9b78f313787269c8" translate="yes" xml:space="preserve">
          <source>Base64</source>
          <target state="translated">Base64</target>
        </trans-unit>
        <trans-unit id="e5e078ec036e3d4891bd273d34c38fad0bafc964" translate="yes" xml:space="preserve">
          <source>BaseCode</source>
          <target state="translated">BaseCode</target>
        </trans-unit>
        <trans-unit id="70e8126ce5599131040464a46a062a804e1fcdbc" translate="yes" xml:space="preserve">
          <source>BaseType</source>
          <target state="translated">BaseType</target>
        </trans-unit>
        <trans-unit id="9e7efb17fc1cf435e3c3c1d6452d160cfc563ed8" translate="yes" xml:space="preserve">
          <source>Basically, it wraps &lt;code&gt;&lt;a href=&quot;../reflect&quot;&gt;Reflect&lt;/a&gt;&lt;/code&gt; calls in a &lt;code&gt;&lt;a href=&quot;../map&quot;&gt;Map&lt;/a&gt;&lt;/code&gt;-like interface.</source>
          <target state="translated">기본적으로 &lt;code&gt;&lt;a href=&quot;../map&quot;&gt;Map&lt;/a&gt;&lt;/code&gt; 과 유사한 인터페이스 에서 &lt;code&gt;&lt;a href=&quot;../reflect&quot;&gt;Reflect&lt;/a&gt;&lt;/code&gt; 호출을 래핑 합니다 .</target>
        </trans-unit>
        <trans-unit id="46339e4480e4353390e8e419c67c21eb4f8949f9" translate="yes" xml:space="preserve">
          <source>Behaviour while reading after calling this method is unspecified.</source>
          <target state="translated">이 메소드를 호출 한 후 읽는 동안의 동작은 지정되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="c374e186d07d39d713ee5088176224a313cff4d1" translate="yes" xml:space="preserve">
          <source>Behaviour while writing after calling this method is unspecified.</source>
          <target state="translated">이 메소드를 호출 한 후 쓰는 동안의 동작은 지정되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="316f1b48fd2067b5254195f5f4bda4f3db3487c9" translate="yes" xml:space="preserve">
          <source>Binary operator &lt;code&gt;e1 op e2&lt;/code&gt;.</source>
          <target state="translated">이항 연산자 &lt;code&gt;e1 op e2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aafca2d781b0225274269cd6bbf4d9c8d572e230" translate="yes" xml:space="preserve">
          <source>Binds &lt;code&gt;key&lt;/code&gt; to &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 를 &lt;code&gt;value&lt;/code&gt; 에 바인딩 합니다 .</target>
        </trans-unit>
        <trans-unit id="e390225f4fd512c2d435883d40dad858b694e459" translate="yes" xml:space="preserve">
          <source>Binop</source>
          <target state="translated">Binop</target>
        </trans-unit>
        <trans-unit id="daf760a167a8047cee872015a8e80002f3b67442" translate="yes" xml:space="preserve">
          <source>Bool</source>
          <target state="translated">Bool</target>
        </trans-unit>
        <trans-unit id="a7412a41fb591dba99d247eee54c2a7e035faa2d" translate="yes" xml:space="preserve">
          <source>BufferInput</source>
          <target state="translated">BufferInput</target>
        </trans-unit>
        <trans-unit id="017e82f86f7daa417882c9fa7f9dbfa00a2442bb" translate="yes" xml:space="preserve">
          <source>Build a date-time from several components</source>
          <target state="translated">여러 구성 요소에서 날짜-시간 구축</target>
        </trans-unit>
        <trans-unit id="6c54bd189718d94e02875a1d49feb2460c3a4b15" translate="yes" xml:space="preserve">
          <source>Build an AsyncConnection from a synchronized Connection.</source>
          <target state="translated">동기화 된 연결에서 AsyncConnection을 빌드하십시오.</target>
        </trans-unit>
        <trans-unit id="f7faa402d2c4c19ba7d95f8355b6c07cc3c07544" translate="yes" xml:space="preserve">
          <source>Builds a &lt;code&gt;&lt;a href=&quot;position#Position&quot;&gt;Position&lt;/a&gt;&lt;/code&gt; from &lt;code&gt;inf&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;inf&lt;/code&gt; 에서 &lt;code&gt;&lt;a href=&quot;position#Position&quot;&gt;Position&lt;/a&gt;&lt;/code&gt; 을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="14a2632621cb43c6b952388264816bed437584e7" translate="yes" xml:space="preserve">
          <source>Builds an expression from &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;v&lt;/code&gt; 에서 식을 작성 합니다.</target>
        </trans-unit>
        <trans-unit id="8153c8e9a5d7760cca37760e8f39477805c232ed" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;&lt;a href=&quot;compiler#include&quot;&gt;Compiler.include&lt;/a&gt;&lt;/code&gt; will search for modules in the directories defined with &lt;code&gt;-cp&lt;/code&gt;. If you want to specify a different set of paths to search for modules, you can use the optional argument &lt;code&gt;classPath&lt;/code&gt;.</source>
          <target state="translated">기본적으로 &lt;code&gt;&lt;a href=&quot;compiler#include&quot;&gt;Compiler.include&lt;/a&gt;&lt;/code&gt; 는 &lt;code&gt;-cp&lt;/code&gt; 로 정의 된 디렉토리에서 모듈을 검색합니다 . 모듈을 검색하기 위해 다른 경로 세트를 지정하려는 경우 선택적 인수 &lt;code&gt;classPath&lt;/code&gt; 를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a223e998755e11431caf9667f4e9795e8ba9d7a2" translate="yes" xml:space="preserve">
          <source>By default, this method replaces only the first matched substring. If the global g modifier is in place, all matched substrings are replaced.</source>
          <target state="translated">기본적으로이 방법은 첫 번째 일치하는 부분 문자열 만 바꿉니다. 전역 g 수정자가 있으면 일치하는 모든 하위 문자열이 바뀝니다.</target>
        </trans-unit>
        <trans-unit id="caeac8d89b6d218385fe6084323ca701db9d0fd8" translate="yes" xml:space="preserve">
          <source>By default, this method splits &lt;code&gt;s&lt;/code&gt; into two parts at the first matched substring. If the global g modifier is in place, &lt;code&gt;s&lt;/code&gt; is split at each matched substring.</source>
          <target state="translated">기본적으로이 방법은 &lt;code&gt;s&lt;/code&gt; 를 처음 일치하는 하위 문자열에서 두 부분으로 나눕니다 . 전역 g 수정자가 있으면 &lt;code&gt;s&lt;/code&gt; 는 일치하는 각 하위 문자열에서 분할됩니다.</target>
        </trans-unit>
        <trans-unit id="8e5fdab92dece79d7629d6d901687613ddc6ab5a" translate="yes" xml:space="preserve">
          <source>Bytes</source>
          <target state="translated">Bytes</target>
        </trans-unit>
        <trans-unit id="559140b8450f93a25f5d0f7f9cf027cee36d9e32" translate="yes" xml:space="preserve">
          <source>BytesBuffer</source>
          <target state="translated">BytesBuffer</target>
        </trans-unit>
        <trans-unit id="7b011388821f58a18cad1bcbc5d9722e918f2f9f" translate="yes" xml:space="preserve">
          <source>BytesData</source>
          <target state="translated">BytesData</target>
        </trans-unit>
        <trans-unit id="4673495414e3a8b58642c2c241b6460bc39f1a21" translate="yes" xml:space="preserve">
          <source>BytesDataAbstract(&lt;a href=&quot;bytesdataimpl&quot;&gt;BytesDataImpl&lt;/a&gt;)</source>
          <target state="translated">BytesDataAbstract(&lt;a href=&quot;bytesdataimpl&quot;&gt;BytesDataImpl&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="7f1bcf5794798fe67bd21552a18b198323ed3fa1" translate="yes" xml:space="preserve">
          <source>BytesDataImpl</source>
          <target state="translated">BytesDataImpl</target>
        </trans-unit>
        <trans-unit id="d76cd16a89ab005f5fc93a5611c734376afd205a" translate="yes" xml:space="preserve">
          <source>BytesInput</source>
          <target state="translated">BytesInput</target>
        </trans-unit>
        <trans-unit id="263fd981287ea35a59214ad70d6ee1b0a2771055" translate="yes" xml:space="preserve">
          <source>BytesOutput</source>
          <target state="translated">BytesOutput</target>
        </trans-unit>
        <trans-unit id="9b83aee93ea1eff8bba2ed57d6eee71e23545a02" translate="yes" xml:space="preserve">
          <source>CType</source>
          <target state="translated">CType</target>
        </trans-unit>
        <trans-unit id="fab107488cc8a4195922c00bc1d25654d2ce6d31" translate="yes" xml:space="preserve">
          <source>CTypeTools</source>
          <target state="translated">CTypeTools</target>
        </trans-unit>
        <trans-unit id="45495ed8144414e6265cd3c5abe40ad86d7b578f" translate="yes" xml:space="preserve">
          <source>Calculates a Hmac of the given Bytes using a HashMethod.</source>
          <target state="translated">HashMethod를 사용하여 주어진 바이트의 Hmac을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="e1fc976a3c5a0c6dae37899f6f0ef8462824a52b" translate="yes" xml:space="preserve">
          <source>Calculates the Adler32 of the given Bytes.</source>
          <target state="translated">주어진 바이트의 Adler32를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="30110574a461cd8b5f2c88a5c5ceb4c696346d39" translate="yes" xml:space="preserve">
          <source>Calculates the CRC32 of the given data bytes</source>
          <target state="translated">주어진 데이터 바이트의 CRC32를 계산</target>
        </trans-unit>
        <trans-unit id="86014a756a7c5bae660586fa96d7b9fc75ab9fe4" translate="yes" xml:space="preserve">
          <source>Calculates the Crc32 of the given Bytes.</source>
          <target state="translated">주어진 바이트의 Crc32를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="74053ca219159639be2ec56e0a01d7275c3817ca" translate="yes" xml:space="preserve">
          <source>Call a method with the given object and arguments.</source>
          <target state="translated">주어진 객체와 인수로 메소드를 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="a926f263e0442a3e1804f45589ac091f6dc67283" translate="yes" xml:space="preserve">
          <source>Call the &lt;code&gt;chars&lt;/code&gt; function for each UTF8 char of the string.</source>
          <target state="translated">문자열의 각 UTF8 문자에 대해 &lt;code&gt;chars&lt;/code&gt; 함수를 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="6032a861f26f2da2ab3cb01a618204e1f16cd3e5" translate="yes" xml:space="preserve">
          <source>Call the event. Will do nothing is the event has been stopped.</source>
          <target state="translated">이벤트를 호출하십시오. 이벤트가 중지 된 것은 아무 것도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c880ae2dae683608578f800194affe123789856b" translate="yes" xml:space="preserve">
          <source>CallStack</source>
          <target state="translated">CallStack</target>
        </trans-unit>
        <trans-unit id="a0bc8ce0d1d2f361201db1eb2e7d7e32eca82b7e" translate="yes" xml:space="preserve">
          <source>CallStack.callStack()</source>
          <target state="translated">CallStack.callStack()</target>
        </trans-unit>
        <trans-unit id="ddeef5a25f604af8b411b5223e702ff096f6b3a7" translate="yes" xml:space="preserve">
          <source>CallStack.exceptionStack()</source>
          <target state="translated">CallStack.exceptionStack()</target>
        </trans-unit>
        <trans-unit id="e6075cd61817306feb29872adf995835923f7517" translate="yes" xml:space="preserve">
          <source>CallStack.toString()</source>
          <target state="translated">CallStack.toString()</target>
        </trans-unit>
        <trans-unit id="c63d3e3fe82ed9380d6f7112f6d76f1b3c493fcf" translate="yes" xml:space="preserve">
          <source>CallStack.wrapCallSite</source>
          <target state="translated">CallStack.wrapCallSite</target>
        </trans-unit>
        <trans-unit id="e0e632cab22ba273ef09262e7bfee448c4bfe8ca" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;f&lt;/code&gt; on all elements of &lt;code&gt;it&lt;/code&gt;, in order.</source>
          <target state="translated">호출 &lt;code&gt;f&lt;/code&gt; 를 의 모든 요소에 &lt;code&gt;it&lt;/code&gt; 위해,.</target>
        </trans-unit>
        <trans-unit id="c49fe77968ee45673f4efa23be0dfc68473f2e07" translate="yes" xml:space="preserve">
          <source>Calls function &lt;code&gt;f&lt;/code&gt; on each component of type &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;t&lt;/code&gt; 유형의 각 구성 요소에서 함수 &lt;code&gt;f&lt;/code&gt; 를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="5da33a0c6fd99ae0f2abe4d009fc7aadfd4c3d36" translate="yes" xml:space="preserve">
          <source>Calls function &lt;code&gt;f&lt;/code&gt; on each sub-expression of &lt;code&gt;e&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;e&lt;/code&gt; 의 각 하위 표현식에서 함수 &lt;code&gt;f&lt;/code&gt; 를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="8742b5ea8dfd233aa0923eca08768c934fe9358f" translate="yes" xml:space="preserve">
          <source>Calls the function &lt;code&gt;f&lt;/code&gt; for the substring of &lt;code&gt;s&lt;/code&gt; which &lt;code&gt;this&lt;/code&gt; EReg matches and replaces that substring with the result of &lt;code&gt;f&lt;/code&gt; call.</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; EReg가 일치 하는 &lt;code&gt;s&lt;/code&gt; 의 하위 문자열에 대해 함수 &lt;code&gt;f&lt;/code&gt; 를 호출하고 해당 하위 문자열을 &lt;code&gt;f&lt;/code&gt; 호출 의 결과로 바꿉니다 .</target>
        </trans-unit>
        <trans-unit id="8fd278273c9a36bf8c10338e90fc943c268d4169" translate="yes" xml:space="preserve">
          <source>Cancels &lt;code&gt;this&lt;/code&gt; Http request if &lt;code&gt;request&lt;/code&gt; has been called and a response has not yet been received.</source>
          <target state="translated">&lt;code&gt;request&lt;/code&gt; 이 호출되고 응답이 아직 수신되지 않은 &lt;code&gt;this&lt;/code&gt; Http 요청을 취소 합니다 .</target>
        </trans-unit>
        <trans-unit id="9254c4bba00f5ff69304a7921d3118fcbac7e6b8" translate="yes" xml:space="preserve">
          <source>Case</source>
          <target state="translated">Case</target>
        </trans-unit>
        <trans-unit id="a7c51e67b60b0927212f25eb1aaefb172b8a7153" translate="yes" xml:space="preserve">
          <source>Catch</source>
          <target state="translated">Catch</target>
        </trans-unit>
        <trans-unit id="d7e97259c0eabfd36dc2138cc9ad6a9553089646" translate="yes" xml:space="preserve">
          <source>Change the default JS output by using a custom generator callback</source>
          <target state="translated">사용자 정의 생성기 콜백을 사용하여 기본 JS 출력 변경</target>
        </trans-unit>
        <trans-unit id="63e936c93b7183cf9e6aaae523554b394f213cea" translate="yes" xml:space="preserve">
          <source>Character codes of the characters that will be escaped by &lt;code&gt;quoteWinArg(_, &lt;a href=&quot;bool&quot;&gt;true&lt;/a&gt;)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;quoteWinArg(_, &lt;a href=&quot;bool&quot;&gt;true&lt;/a&gt;)&lt;/code&gt; 로 이스케이프 될 문자의 문자 코드 .</target>
        </trans-unit>
        <trans-unit id="4b5e84be0e45d1f4cc38276a4ec0e7fdea116bcf" translate="yes" xml:space="preserve">
          <source>Check</source>
          <target state="translated">Check</target>
        </trans-unit>
        <trans-unit id="532ee360a8ec3c2584c6b03ded1c7170a0b2b66f" translate="yes" xml:space="preserve">
          <source>Check the existence of a sub node with the given name.</source>
          <target state="translated">지정된 이름의 하위 노드가 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="f1f5b0081ce85f9a24f2dbc916f0c2b47d8e9641" translate="yes" xml:space="preserve">
          <source>Check the existence of an attribute with the given name.</source>
          <target state="translated">이름이 지정된 속성이 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="f28c072a8181f8b4e3940b65b64090284c9ca6ef" translate="yes" xml:space="preserve">
          <source>Checks if object &lt;code&gt;value&lt;/code&gt; is an instance of class &lt;code&gt;c&lt;/code&gt;.</source>
          <target state="translated">객체 &lt;code&gt;value&lt;/code&gt; 이 &lt;code&gt;c&lt;/code&gt; 클래스의 인스턴스 인지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="e8a2bfff67e7af93d178b077696873ec520f0b24" translate="yes" xml:space="preserve">
          <source>Checks if the index of enum instance &lt;code&gt;v&lt;/code&gt; is set.</source>
          <target state="translated">열거 형 인스턴스 &lt;code&gt;v&lt;/code&gt; 의 인덱스 가 설정되어 있는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="41ff354b2b330bd1f8a0587675e43cb32a731f33" translate="yes" xml:space="preserve">
          <source>Class</source>
          <target state="translated">Class</target>
        </trans-unit>
        <trans-unit id="1b5e53adc82e88819fa087d556334a47828eab9a" translate="yes" xml:space="preserve">
          <source>Class&amp;lt;T&amp;gt;</source>
          <target state="translated">Class&amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="bf2ca85e940afd626184b2e277e102890bc7bbe3" translate="yes" xml:space="preserve">
          <source>ClassField</source>
          <target state="translated">ClassField</target>
        </trans-unit>
        <trans-unit id="57366a33e7e45270482a0ed5c8eb7865c8158998" translate="yes" xml:space="preserve">
          <source>ClassKind</source>
          <target state="translated">ClassKind</target>
        </trans-unit>
        <trans-unit id="40017119699a319edb9bc8bc5de28669cdad44ae" translate="yes" xml:space="preserve">
          <source>ClassType</source>
          <target state="translated">ClassType</target>
        </trans-unit>
        <trans-unit id="3458c21b1c0444c6972a1e85fe3faffd20047616" translate="yes" xml:space="preserve">
          <source>Classdef</source>
          <target state="translated">Classdef</target>
        </trans-unit>
        <trans-unit id="dbd9671dd637be8da2a0c10c3b5880cf73c56a14" translate="yes" xml:space="preserve">
          <source>Classes are created from &lt;code&gt;&lt;a href=&quot;../type#createEmptyInstance&quot;&gt;Type.createEmptyInstance&lt;/a&gt;&lt;/code&gt;, which means their constructors are not called.</source>
          <target state="translated">클래스는 &lt;code&gt;&lt;a href=&quot;../type#createEmptyInstance&quot;&gt;Type.createEmptyInstance&lt;/a&gt;&lt;/code&gt; 에서 생성됩니다. 즉 생성자가 호출되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="444b40b354ac4d5eeb29d8244a00860b9f515bc6" translate="yes" xml:space="preserve">
          <source>Clears the trace output.</source>
          <target state="translated">추적 출력을 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="53902d380a949520068fc287951039e91c717c71" translate="yes" xml:space="preserve">
          <source>Close the input source.</source>
          <target state="translated">입력 소스를 닫습니다.</target>
        </trans-unit>
        <trans-unit id="5fa8bd16f775a1a3fa6d232d6e29f4c77c438bb6" translate="yes" xml:space="preserve">
          <source>Close the output.</source>
          <target state="translated">출력을 닫습니다.</target>
        </trans-unit>
        <trans-unit id="45301181867740f18c533949b9b2a5ca605cbd80" translate="yes" xml:space="preserve">
          <source>Closure field access of field &lt;code&gt;cf&lt;/code&gt; on a class instance &lt;code&gt;c&lt;/code&gt; with type parameters &lt;code&gt;params&lt;/code&gt;.</source>
          <target state="translated">유형 매개 변수 &lt;code&gt;params&lt;/code&gt; 를 가진 클래스 인스턴스 &lt;code&gt;c&lt;/code&gt; 에서 필드 &lt;code&gt;cf&lt;/code&gt; 의 클로즈 필드 액세스 .</target>
        </trans-unit>
        <trans-unit id="bf419e38856b779cdcd550f54bc32124e0fef1c9" translate="yes" xml:space="preserve">
          <source>Code passed in from outside the macro cannot reference anything in its context, such as local variables. However, it is possible to reference static methods.</source>
          <target state="translated">매크로 외부에서 전달 된 코드는 해당 컨텍스트에서 로컬 변수와 같은 것을 참조 할 수 없습니다. 그러나 정적 메소드를 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ef948eb6b3a4b576dc0d13fb19ad29a2533643bd" translate="yes" xml:space="preserve">
          <source>Compare &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; in unsigned mode.</source>
          <target state="translated">부호없는 모드에서 &lt;code&gt;a&lt;/code&gt; 와 &lt;code&gt;b&lt;/code&gt; 를 비교하십시오 .</target>
        </trans-unit>
        <trans-unit id="82826c29053e45f4f214bf736e995650b4ea2d28" translate="yes" xml:space="preserve">
          <source>Compare two UTF8 strings, character by character.</source>
          <target state="translated">문자별로 두 개의 UTF8 문자열을 비교하십시오.</target>
        </trans-unit>
        <trans-unit id="d85ed1cde6b9f4f309a47994c1044a7f50ae98c1" translate="yes" xml:space="preserve">
          <source>Compares &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; in signed mode. Returns a negative value if &lt;code&gt;a &amp;lt; b&lt;/code&gt;, positive if &lt;code&gt;a &amp;gt; b&lt;/code&gt;, or 0 if &lt;code&gt;a == b&lt;/code&gt;.</source>
          <target state="translated">부호있는 모드에서 &lt;code&gt;a&lt;/code&gt; 와 &lt;code&gt;b&lt;/code&gt; 를 비교 합니다. &lt;code&gt;a &amp;lt; b&lt;/code&gt; 이면 음수 값 , &lt;code&gt;a &amp;gt; b&lt;/code&gt; 이면 양수 , &lt;code&gt;a == b&lt;/code&gt; 이면 0을 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="ceba5e45b1b70931f9e648a776ae871c08f61c95" translate="yes" xml:space="preserve">
          <source>Compares &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; in unsigned mode. Returns a negative value if &lt;code&gt;a &amp;lt; b&lt;/code&gt;, positive if &lt;code&gt;a &amp;gt; b&lt;/code&gt;, or 0 if &lt;code&gt;a == b&lt;/code&gt;.</source>
          <target state="translated">부호없는 모드에서 &lt;code&gt;a&lt;/code&gt; 와 &lt;code&gt;b&lt;/code&gt; 를 비교 합니다. &lt;code&gt;a &amp;lt; b&lt;/code&gt; 이면 음수 값 , &lt;code&gt;a &amp;gt; b&lt;/code&gt; 이면 양수 , &lt;code&gt;a == b&lt;/code&gt; 이면 0을 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="6c966125cd499f20eb18119c763011073e9f43ad" translate="yes" xml:space="preserve">
          <source>Compares &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; 와 &lt;code&gt;b&lt;/code&gt; 를 비교 합니다 .</target>
        </trans-unit>
        <trans-unit id="0b85d85670f5f81ce9ff63378658f5966ecbb2ab" translate="yes" xml:space="preserve">
          <source>Compares the functions &lt;code&gt;f1&lt;/code&gt; and &lt;code&gt;f2&lt;/code&gt;.</source>
          <target state="translated">함수 &lt;code&gt;f1&lt;/code&gt; 과 &lt;code&gt;f2&lt;/code&gt; 를 비교합니다 .</target>
        </trans-unit>
        <trans-unit id="e48e7ecc32cb7b3d8cdaa03a9d64d4beb592dd28" translate="yes" xml:space="preserve">
          <source>Compilation has completed at this point and cannot be influenced anymore. However, contextual information is still available.</source>
          <target state="translated">이 시점에서 편집이 완료되었으며 더 이상 영향을받을 수 없습니다. 그러나 상황에 맞는 정보는 계속 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="512d261beae51e0f32f684d5bc45d45b94286998" translate="yes" xml:space="preserve">
          <source>Compilation server : when using the compilation server, the resource is bound to the Haxe module which calls the macro, so it will be included again if that module is reused. If this resource concerns several modules, prefix its name with a $ sign, this will bind it to the macro module instead.</source>
          <target state="translated">컴파일 서버 : 컴파일 서버를 사용할 때 리소스는 매크로를 호출하는 Haxe 모듈에 바인딩되므로 해당 모듈을 재사용하면 다시 포함됩니다. 이 리소스가 여러 모듈에 관련된 경우 이름 앞에 $ 기호를 붙이면 대신 매크로 모듈에 바인딩됩니다.</target>
        </trans-unit>
        <trans-unit id="d605840a202b8c34d8518239d7576fd3de88fe54" translate="yes" xml:space="preserve">
          <source>CompilationServer</source>
          <target state="translated">CompilationServer</target>
        </trans-unit>
        <trans-unit id="341a20e237ff5c4b89204a3d4d8c8af5f8aa63bb" translate="yes" xml:space="preserve">
          <source>Compiler</source>
          <target state="translated">Compiler</target>
        </trans-unit>
        <trans-unit id="bcf0ebb2850c5203e3ec5b166abdcd13d72f133f" translate="yes" xml:space="preserve">
          <source>Compiler directive values are set using the &lt;code&gt;-D key=value&lt;/code&gt; command line parameter, or by calling &lt;code&gt;&lt;a href=&quot;compiler#define&quot;&gt;haxe.macro.Compiler.define&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">컴파일러 지시문 값은 &lt;code&gt;-D key=value&lt;/code&gt; 명령 행 매개 변수를 사용하거나 &lt;code&gt;&lt;a href=&quot;compiler#define&quot;&gt;haxe.macro.Compiler.define&lt;/a&gt;&lt;/code&gt; 을 호출 하여 설정 됩니다.</target>
        </trans-unit>
        <trans-unit id="3341be38c4068f766b5622be97ce7f4722383458" translate="yes" xml:space="preserve">
          <source>Compiler directives are set using the &lt;code&gt;-D&lt;/code&gt; command line parameter, or by calling &lt;code&gt;&lt;a href=&quot;compiler#define&quot;&gt;haxe.macro.Compiler.define&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">컴파일러 지시문은 &lt;code&gt;-D&lt;/code&gt; 명령 줄 매개 변수를 사용하거나 &lt;code&gt;&lt;a href=&quot;compiler#define&quot;&gt;haxe.macro.Compiler.define&lt;/a&gt;&lt;/code&gt; 을 호출 하여 설정 됩니다.</target>
        </trans-unit>
        <trans-unit id="301fd958646f44a394739603fbb695ea3b5ffc6c" translate="yes" xml:space="preserve">
          <source>Compiles only if the class specified by &lt;code&gt;c&lt;/code&gt; can be assigned to the type of &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;c&lt;/code&gt; 로 지정된 클래스 를 &lt;code&gt;value&lt;/code&gt; 유형에 할당 할 수있는 경우에만 컴파일 합니다 .</target>
        </trans-unit>
        <trans-unit id="5b123a02b401bb7b9f2149191816f41189a4d6bd" translate="yes" xml:space="preserve">
          <source>ComplexType</source>
          <target state="translated">ComplexType</target>
        </trans-unit>
        <trans-unit id="c7d1fa080174a1f37766a75c0a2c31dd28cbe85a" translate="yes" xml:space="preserve">
          <source>ComplexTypeTools</source>
          <target state="translated">ComplexTypeTools</target>
        </trans-unit>
        <trans-unit id="f5e41c09282cf7acf9139207836dfa55d9dca006" translate="yes" xml:space="preserve">
          <source>Compress</source>
          <target state="translated">Compress</target>
        </trans-unit>
        <trans-unit id="7e753af33c5e8b0b810748b18ff7f60b83d5a7d0" translate="yes" xml:space="preserve">
          <source>Concatenate a list of lists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="726c5ace982d2a4397beb31f3bcf581f589883ad" translate="yes" xml:space="preserve">
          <source>Concatenates &lt;code&gt;c&lt;/code&gt; to &lt;code&gt;s&lt;/code&gt; until &lt;code&gt;s.length&lt;/code&gt; is at least &lt;code&gt;l&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;s.length&lt;/code&gt; 가 &lt;code&gt;l&lt;/code&gt; 이상이 될 때까지 &lt;code&gt;c&lt;/code&gt; 를 &lt;code&gt;s&lt;/code&gt; 로 연결 합니다.</target>
        </trans-unit>
        <trans-unit id="6512ee1541e9a6c52d5bf7cf465332e8df25ea3c" translate="yes" xml:space="preserve">
          <source>Connection</source>
          <target state="translated">Connection</target>
        </trans-unit>
        <trans-unit id="733fd2b4c4e1bca4c7d0e3c2e1c341bcd1d34269" translate="yes" xml:space="preserve">
          <source>Constant</source>
          <target state="translated">Constant</target>
        </trans-unit>
        <trans-unit id="76ccc41ad08f9e76e8a7e4f261c218ae3a1f48ba" translate="yes" xml:space="preserve">
          <source>Construct an Int64 from two 32-bit words &lt;code&gt;high&lt;/code&gt; and &lt;code&gt;low&lt;/code&gt;.</source>
          <target state="translated">두 개의 32 비트 단어 &lt;code&gt;high&lt;/code&gt; 및 &lt;code&gt;low&lt;/code&gt; 로 Int64를 구성합니다 .</target>
        </trans-unit>
        <trans-unit id="9757c67e352fb58ac083c67ee63d3f4adb217b24" translate="yes" xml:space="preserve">
          <source>Constructible</source>
          <target state="translated">Constructible</target>
        </trans-unit>
        <trans-unit id="b84b50fd11a19e4f09e97bdfe8a5374a665311af" translate="yes" xml:space="preserve">
          <source>Constructible&amp;lt;T&amp;gt;(&lt;a href=&quot;../dynamic&quot;&gt;Dynamic&lt;/a&gt;)</source>
          <target state="translated">Constructible&amp;lt;T&amp;gt;(&lt;a href=&quot;../dynamic&quot;&gt;Dynamic&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="edb7861f190be64ab7c7a39786a00727bb16847d" translate="yes" xml:space="preserve">
          <source>Constructor</source>
          <target state="translated">Constructor</target>
        </trans-unit>
        <trans-unit id="702b9a1520640dffcacf6e327f0550252e735066" translate="yes" xml:space="preserve">
          <source>Contains type and equality checks functionalities for RTTI.</source>
          <target state="translated">RTTI에 대한 유형 및 동등성 검사 기능을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="cc11b3a28fa30ae6d3d3ad1438824cbd5224ba5c" translate="yes" xml:space="preserve">
          <source>Context</source>
          <target state="translated">Context</target>
        </trans-unit>
        <trans-unit id="8a2c7c4eb03ca798cf6ab407f31278e3688eea7c" translate="yes" xml:space="preserve">
          <source>Context provides an API for macro programming.</source>
          <target state="translated">컨텍스트는 매크로 프로그래밍을위한 API를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="67108142c7f691bdfdb3f45d4959a3f0c96fcae7" translate="yes" xml:space="preserve">
          <source>ContextAll</source>
          <target state="translated">ContextAll</target>
        </trans-unit>
        <trans-unit id="a4c63664e5b124dd330df60e13ec1250b8be6c37" translate="yes" xml:space="preserve">
          <source>ContextOptions(&lt;a href=&quot;../../int&quot;&gt;Int&lt;/a&gt;)</source>
          <target state="translated">ContextOptions(&lt;a href=&quot;../../int&quot;&gt;Int&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="03663ad3c645cab152115db13d1e91a582c21142" translate="yes" xml:space="preserve">
          <source>Convert &lt;code&gt;&lt;a href=&quot;../../xml&quot;&gt;Xml&lt;/a&gt;&lt;/code&gt; to string representation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../xml&quot;&gt;Xml&lt;/a&gt;&lt;/code&gt; 을 문자열 표현으로 변환하십시오 .</target>
        </trans-unit>
        <trans-unit id="f15a8062f93df66ce5c598dff88f5f2d810931ec" translate="yes" xml:space="preserve">
          <source>Convert a integer bitflag into a typed one (this is a no-op, it does not have any impact on speed).</source>
          <target state="translated">정수 비트 플래그를 유형이 지정된 것으로 변환하십시오 (이것은 작동하지 않으며 속도에 영향을 미치지 않습니다).</target>
        </trans-unit>
        <trans-unit id="9c9112cb3062b0960048204b9df76b98d4abdf98" translate="yes" xml:space="preserve">
          <source>Convert the typed bitflag into the corresponding int value (this is a no-op, it doesn't have any impact on speed).</source>
          <target state="translated">입력 된 비트 플래그를 해당하는 int 값으로 변환하십시오 (이것은 no-op이며 속도에 영향을 미치지 않습니다).</target>
        </trans-unit>
        <trans-unit id="b0570b573608a7fbcd62fc501718d51c09b498be" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; to an &lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;, rounded towards 0.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; 를 0으로 반올림 한 &lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="843920a499eb24700d16d23e1c7bce0757d0afb3" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; to a &lt;code&gt;&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 을 &lt;code&gt;&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="0cb0a7cdfed9d22cc113b2e37394ec486770d005" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; to an &lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 을 &lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="781095d4763524aedd833850fc92d422ba4f70a9" translate="yes" xml:space="preserve">
          <source>Converts a number of days to a timestamp.</source>
          <target state="translated">일 수를 타임 스탬프로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="41e2006d37d014c10852385d0330e50b3d8513d2" translate="yes" xml:space="preserve">
          <source>Converts a number of hours to a timestamp.</source>
          <target state="translated">많은 시간을 타임 스탬프로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="efeb3b5c296af304d0c6bf091a6dc70682535675" translate="yes" xml:space="preserve">
          <source>Converts a number of minutes to a timestamp.</source>
          <target state="translated">몇 분을 타임 스탬프로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="f72992198eec7ab48e8e6da617898e0eaaff61b4" translate="yes" xml:space="preserve">
          <source>Converts a number of seconds to a timestamp.</source>
          <target state="translated">초 수를 타임 스탬프로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="98cf9cfde7f1622fb735581937994ccf242dbe88" translate="yes" xml:space="preserve">
          <source>Converts a path given by package &lt;code&gt;pack&lt;/code&gt; and name &lt;code&gt;name&lt;/code&gt; to a &lt;code&gt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; separated by dots.</source>
          <target state="translated">패키지 &lt;code&gt;pack&lt;/code&gt; 및 이름 &lt;code&gt;name&lt;/code&gt; 으로 지정된 경로 를 점으로 구분 된 &lt;code&gt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="8f0dd215a490541e4a35766e876a3151d47c1231" translate="yes" xml:space="preserve">
          <source>Converts an array of Strings &lt;code&gt;sl&lt;/code&gt; to a field expression.</source>
          <target state="translated">문자열의 배열 변환 &lt;code&gt;sl&lt;/code&gt; 필드에 표현한다.</target>
        </trans-unit>
        <trans-unit id="34a4cd87ae8073968557f8d4c1fc5ba9771e247b" translate="yes" xml:space="preserve">
          <source>Converts any value to a String.</source>
          <target state="translated">임의의 값을 문자열로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="5bfe5b7b5be3b37e87d00be68c614d06e7c368c0" translate="yes" xml:space="preserve">
          <source>Converts expression &lt;code&gt;e&lt;/code&gt; to a human-readable String representation.</source>
          <target state="translated">표현식 &lt;code&gt;e&lt;/code&gt; 를 사람이 읽을 수있는 문자열 표현으로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="e71d969b43edb430381c19cf1d4296eb7bc0084c" translate="yes" xml:space="preserve">
          <source>Converts type &lt;code&gt;c&lt;/code&gt; to a human-readable &lt;code&gt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; representation.</source>
          <target state="translated">유형 &lt;code&gt;c&lt;/code&gt; 를 사람이 읽을 수있는 &lt;code&gt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 표현으로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="480c9ebfc28024d3ff24c332e5cacd6384b22410" translate="yes" xml:space="preserve">
          <source>Converts type &lt;code&gt;t&lt;/code&gt; to a human-readable String representation.</source>
          <target state="translated">유형 &lt;code&gt;t&lt;/code&gt; 를 사람이 읽을 수있는 문자열 표현으로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="672824061113f85f14b4e66f3464f72a446e84f1" translate="yes" xml:space="preserve">
          <source>Copies &lt;code&gt;length&lt;/code&gt; of elements from &lt;code&gt;src&lt;/code&gt; Vector, beginning at &lt;code&gt;srcPos&lt;/code&gt; to &lt;code&gt;dest&lt;/code&gt; Vector, beginning at &lt;code&gt;destPos&lt;/code&gt;</source>
          <target state="translated">복사 &lt;code&gt;length&lt;/code&gt; 의 요소의 &lt;code&gt;src&lt;/code&gt; 벡터에서 시작 &lt;code&gt;srcPos&lt;/code&gt; 에 &lt;code&gt;dest&lt;/code&gt; , 벡터에서 시작 &lt;code&gt;destPos&lt;/code&gt; 가</target>
        </trans-unit>
        <trans-unit id="a131ddcba168f57369f0e71a3ec6eb4a8ee5ca46" translate="yes" xml:space="preserve">
          <source>Copies the fields of structure &lt;code&gt;o&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;o&lt;/code&gt; 구조의 필드를 복사합니다 .</target>
        </trans-unit>
        <trans-unit id="0220ef140e692ecd2d151d5ed1f728a3b4b17cca" translate="yes" xml:space="preserve">
          <source>Crc32</source>
          <target state="translated">Crc32</target>
        </trans-unit>
        <trans-unit id="effa56c80b668ff281c2ce8e4560a7096f0e95a7" translate="yes" xml:space="preserve">
          <source>Create &lt;code&gt;&lt;a href=&quot;int64#Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; from given float.</source>
          <target state="translated">주어진 float에서 &lt;code&gt;&lt;a href=&quot;int64#Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; 를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="7e2c89bc7b260377410f7024552165a16793e058" translate="yes" xml:space="preserve">
          <source>Create &lt;code&gt;&lt;a href=&quot;int64#Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; from given string.</source>
          <target state="translated">주어진 문자열에서 &lt;code&gt;&lt;a href=&quot;int64#Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; 를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="1d6c6c91d5781ad0fa8f98cf3911187b18b6d3be" translate="yes" xml:space="preserve">
          <source>Creates a List form Iterable &lt;code&gt;it&lt;/code&gt;.</source>
          <target state="translated">Iterable &lt;code&gt;it&lt;/code&gt; 리스트 양식을 작성 합니다 .</target>
        </trans-unit>
        <trans-unit id="ef1ece11e7bdbfe227d937ed896673b6c522a522" translate="yes" xml:space="preserve">
          <source>Creates a MD5 of a String.</source>
          <target state="translated">문자열의 MD5를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="7c259739c5a285c0c944cc7ed8508691511d4c60" translate="yes" xml:space="preserve">
          <source>Creates a Sha1 of a String.</source>
          <target state="translated">문자열의 Sha1을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="e4d8b101797679ad29aee1e2aa6f39b8d81b746a" translate="yes" xml:space="preserve">
          <source>Creates a Sha224 of a String.</source>
          <target state="translated">문자열의 Sha224를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="ece122feb876dddc4c6715a17a8e7e312e5bab34" translate="yes" xml:space="preserve">
          <source>Creates a Sha256 of a String.</source>
          <target state="translated">문자열의 Sha256을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="c7b7ec697eb8bdd45bb95340741c311777019a90" translate="yes" xml:space="preserve">
          <source>Creates a copy from a given String.</source>
          <target state="translated">주어진 문자열에서 사본을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="c61f18ac112620bc0812697f75d6b6ee2068b214" translate="yes" xml:space="preserve">
          <source>Creates a new Array by applying function &lt;code&gt;f&lt;/code&gt; to all elements of &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; 의 모든 요소에 함수 &lt;code&gt;f&lt;/code&gt; 를 적용하여 새 Array를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="f6c72a6e124ffb38a45ee9021065210f6fd315cc" translate="yes" xml:space="preserve">
          <source>Creates a new Array, copy the content from the Vector to it, and returns it.</source>
          <target state="translated">새 배열을 만들고 Vector의 내용을 복사하여 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ce0f7d4af52b7c6a7411e9dd7ae9c2fde13a3f22" translate="yes" xml:space="preserve">
          <source>Creates a new Array.</source>
          <target state="translated">새로운 배열을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="115531d1237928e7ed0d18f023d0e147f7282597" translate="yes" xml:space="preserve">
          <source>Creates a new BalancedTree, which is initially empty.</source>
          <target state="translated">처음에 비어있는 새 BalancedTree를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="62164939ae5665e9edd8ac77b06722984386700d" translate="yes" xml:space="preserve">
          <source>Creates a new HashMap.</source>
          <target state="translated">새로운 HashMap을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="9b1eddb06c104a4842d884bac8e898eda42a115e" translate="yes" xml:space="preserve">
          <source>Creates a new Http instance with &lt;code&gt;url&lt;/code&gt; as parameter.</source>
          <target state="translated">&lt;code&gt;url&lt;/code&gt; 을 매개 변수로 사용하여 새 Http 인스턴스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="eb105cbcce8add46dae026a6c18f4ed91ca8daa4" translate="yes" xml:space="preserve">
          <source>Creates a new IntMap.</source>
          <target state="translated">새로운 IntMap을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="a7e512f3ef0053bbda96845c440229dfd0f11151" translate="yes" xml:space="preserve">
          <source>Creates a new List by applying function &lt;code&gt;f&lt;/code&gt; to all elements of &lt;code&gt;it&lt;/code&gt;.</source>
          <target state="translated">함수 &lt;code&gt;f&lt;/code&gt; 를 모든 요소 에 적용하여 새 목록 을 작성 &lt;code&gt;it&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9f1ea235be54a4b30a41c5c03946b98334f92e1b" translate="yes" xml:space="preserve">
          <source>Creates a new Map.</source>
          <target state="translated">새지도를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="17dd94b9ae6ebb3d05f15e604c92a726f51f0d43" translate="yes" xml:space="preserve">
          <source>Creates a new ObjectMap.</source>
          <target state="translated">새로운 ObjectMap을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="690af22bb241ea8a631340a9916a33c9fcc04fe4" translate="yes" xml:space="preserve">
          <source>Creates a new Path instance by parsing &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; 를 구문 분석하여 새 Path 인스턴스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="8ec1104536b087466d74563e737bb92e0efcb167" translate="yes" xml:space="preserve">
          <source>Creates a new Serializer instance.</source>
          <target state="translated">새 Serializer 인스턴스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="bf841d51d0c22a2de39a41df3eff23a2058af893" translate="yes" xml:space="preserve">
          <source>Creates a new StringBuf instance.</source>
          <target state="translated">새로운 StringBuf 인스턴스를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="51f91400f5902dac5d8051c80d0717c11f7e3252" translate="yes" xml:space="preserve">
          <source>Creates a new StringMap.</source>
          <target state="translated">새로운 StringMap을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="83807621c9e7d22c7bf845f3ae6326b2a32eedbc" translate="yes" xml:space="preserve">
          <source>Creates a new Template instance from &lt;code&gt;str&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;str&lt;/code&gt; 에서 새 템플릿 인스턴스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="6e7bf4317839f24a6685d0936c5a88caff9c1182" translate="yes" xml:space="preserve">
          <source>Creates a new Unserializer instance, with its internal buffer initialized to &lt;code&gt;buf&lt;/code&gt;.</source>
          <target state="translated">내부 버퍼가 &lt;code&gt;buf&lt;/code&gt; 로 초기화 된 새 Unserializer 인스턴스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="92519ab0b2eb2a38b8ef1707378367ce4b647c86" translate="yes" xml:space="preserve">
          <source>Creates a new Vector by applying function &lt;code&gt;f&lt;/code&gt; to all elements of &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; 의 모든 요소에 함수 &lt;code&gt;f&lt;/code&gt; 를 적용하여 새 Vector를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="0d26dd7c7ae874a68f3a676c31c715acc2a93a77" translate="yes" xml:space="preserve">
          <source>Creates a new Vector by copying the elements of &lt;code&gt;array&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;array&lt;/code&gt; 의 요소를 복사하여 새 Vector를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="44c714a95de27ddc3255769c7a275062c98c1d6c" translate="yes" xml:space="preserve">
          <source>Creates a new Vector of length &lt;code&gt;length&lt;/code&gt;.</source>
          <target state="translated">length &lt;code&gt;length&lt;/code&gt; 의 새로운 Vector를 작성 합니다 .</target>
        </trans-unit>
        <trans-unit id="8eb7a28c5a9535258450b3456b83d0c7f3adad1f" translate="yes" xml:space="preserve">
          <source>Creates a new WeakMap.</source>
          <target state="translated">새로운 WeakMap을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="37fd144f4bd06c72320d3b1ed175f23721f34678" translate="yes" xml:space="preserve">
          <source>Creates a new date object from the given arguments.</source>
          <target state="translated">주어진 인수에서 새로운 날짜 객체를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="6252fa98b1c0f08fa84cf6cce91a8aba5b49b615" translate="yes" xml:space="preserve">
          <source>Creates a new empty GenericStack.</source>
          <target state="translated">비어있는 GenericStack을 새로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="a170faa5db873f6672e4871d09928084bfa6a35e" translate="yes" xml:space="preserve">
          <source>Creates a new empty list.</source>
          <target state="translated">빈 목록을 새로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="33bfaed53f594009b867956a2d41e654033d22b0" translate="yes" xml:space="preserve">
          <source>Creates a new regular expression with pattern &lt;code&gt;r&lt;/code&gt; and modifiers &lt;code&gt;opt&lt;/code&gt;.</source>
          <target state="translated">패턴 &lt;code&gt;r&lt;/code&gt; 및 수정 자 &lt;code&gt;opt&lt;/code&gt; 를 사용하여 새 정규식을 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="d355b40e27165f24415aadbc2b1762470e2cc29d" translate="yes" xml:space="preserve">
          <source>Creates a new structure.</source>
          <target state="translated">새로운 구조를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="75aeaa61b633a5dac27a033e8af573c2e9a22617" translate="yes" xml:space="preserve">
          <source>Creates a new timer that will run every &lt;code&gt;time_ms&lt;/code&gt; milliseconds.</source>
          <target state="translated">&lt;code&gt;time_ms&lt;/code&gt; 밀리 초 마다 실행될 새 타이머를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="db4baf7da6d37f858dd6f1b59cfc3340f91da4fa" translate="yes" xml:space="preserve">
          <source>Creates a node of the given type.</source>
          <target state="translated">주어진 유형의 노드를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="484c0c2ee9a785c1a6ecdc91682f4f4c7440d687" translate="yes" xml:space="preserve">
          <source>Creates a shallow copy of the range of &lt;code&gt;this&lt;/code&gt; Array, starting at and including &lt;code&gt;pos&lt;/code&gt;, up to but not including &lt;code&gt;end&lt;/code&gt;.</source>
          <target state="translated">의 범위의 단순 복사본 작성 &lt;code&gt;this&lt;/code&gt; 배열은, 시작 등 &lt;code&gt;pos&lt;/code&gt; , 최대하지만 포함되지 &lt;code&gt;end&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c28b4629111d562af400d3862b35e2bb184aabb7" translate="yes" xml:space="preserve">
          <source>Creates an Array from Iterable &lt;code&gt;it&lt;/code&gt;.</source>
          <target state="translated">의 Iterable에서 배열 작성 &lt;code&gt;it&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="79e1730e90c86867dbdadc905efacee4fad4cc51" translate="yes" xml:space="preserve">
          <source>Creates an instance of class &lt;code&gt;cl&lt;/code&gt;, using &lt;code&gt;args&lt;/code&gt; as arguments to the class constructor.</source>
          <target state="translated">&lt;code&gt;args&lt;/code&gt; 를 클래스 생성자에 대한 인수로 사용하여 클래스 &lt;code&gt;cl&lt;/code&gt; 의 인스턴스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="94b699354ef72c2dddff5987a41faa8218ced98b" translate="yes" xml:space="preserve">
          <source>Creates an instance of class &lt;code&gt;cl&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cl&lt;/code&gt; 클래스의 인스턴스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="7ad4aac107a53753a1a4f44331ebb1ca98d7eb5e" translate="yes" xml:space="preserve">
          <source>Creates an instance of enum &lt;code&gt;e&lt;/code&gt; by calling its constructor &lt;code&gt;constr&lt;/code&gt; with arguments &lt;code&gt;params&lt;/code&gt;.</source>
          <target state="translated">인수 &lt;code&gt;params&lt;/code&gt; 와 함께 생성자 &lt;code&gt;constr&lt;/code&gt; 을 호출하여 enum &lt;code&gt;e&lt;/code&gt; 의 인스턴스를 작성 합니다.</target>
        </trans-unit>
        <trans-unit id="d45c1c3e82e293f404b8bff76d1f6e749f21dec8" translate="yes" xml:space="preserve">
          <source>Creates an instance of enum &lt;code&gt;e&lt;/code&gt; by calling its constructor number &lt;code&gt;index&lt;/code&gt; with arguments &lt;code&gt;params&lt;/code&gt;.</source>
          <target state="translated">인수 &lt;code&gt;params&lt;/code&gt; 로 생성자 번호 &lt;code&gt;index&lt;/code&gt; 를 호출하여 열거 형 &lt;code&gt;e&lt;/code&gt; 인스턴스를 작성 합니다.</target>
        </trans-unit>
        <trans-unit id="d65f4c57261716cb45bb4362f564e23513f94c10" translate="yes" xml:space="preserve">
          <source>Cross platform UCS2 string API.</source>
          <target state="translated">크로스 플랫폼 UCS2 문자열 API.</target>
        </trans-unit>
        <trans-unit id="295e6c1f20b9a7aa7a6a668de261d1ee6fde9f13" translate="yes" xml:space="preserve">
          <source>Cross-platform JSON API: it will automatically use the optimized native API if available. Use &lt;code&gt;-D haxeJSON&lt;/code&gt; to force usage of the Haxe implementation even if a native API is found: This will provide extra encoding features such as enums (replaced by their index) and StringMaps.</source>
          <target state="translated">크로스 플랫폼 JSON API : 사용 가능한 경우 최적화 된 기본 API를 자동으로 사용합니다. 네이티브 API가 발견 된 경우에도 &lt;code&gt;-D haxeJSON&lt;/code&gt; 을 사용하여 Haxe 구현을 강제로 사용 하십시오 . 이는 열거 형 (인덱스로 대체 됨) 및 StringMaps와 같은 추가 인코딩 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="a374f2d39933381180f8541ff2cb4c09ed98b784" translate="yes" xml:space="preserve">
          <source>Cross-platform Xml API.</source>
          <target state="translated">크로스 플랫폼 Xml API.</target>
        </trans-unit>
        <trans-unit id="eb9a4bc1c0c153e4e4b042a79113b815b7e3021d" translate="yes" xml:space="preserve">
          <source>Date</source>
          <target state="translated">Date</target>
        </trans-unit>
        <trans-unit id="2502795b4c66d9fa1b63eb8fb8c027a6c16b7ae2" translate="yes" xml:space="preserve">
          <source>Date.fromString()</source>
          <target state="translated">Date.fromString()</target>
        </trans-unit>
        <trans-unit id="3e71cc56d539e23a622a1edb53a75783409f8657" translate="yes" xml:space="preserve">
          <source>Date.fromTime()</source>
          <target state="translated">Date.fromTime()</target>
        </trans-unit>
        <trans-unit id="0f19d89669dd0bf67b95f6baa0e7e7cb0a564a93" translate="yes" xml:space="preserve">
          <source>Date.getDate()</source>
          <target state="translated">Date.getDate()</target>
        </trans-unit>
        <trans-unit id="e5701155ac035cc3f2c17ed06c6bdb185708a512" translate="yes" xml:space="preserve">
          <source>Date.getDay()</source>
          <target state="translated">Date.getDay()</target>
        </trans-unit>
        <trans-unit id="f77e036dc64528801be8dac5e5e09ff6b2b97f60" translate="yes" xml:space="preserve">
          <source>Date.getFullYear()</source>
          <target state="translated">Date.getFullYear()</target>
        </trans-unit>
        <trans-unit id="a52c61ba7f2bccb4e9cd266f1783902279ec8b67" translate="yes" xml:space="preserve">
          <source>Date.getHours()</source>
          <target state="translated">Date.getHours()</target>
        </trans-unit>
        <trans-unit id="730ca39b8eb51ff1b0051c3616d14086643a06cd" translate="yes" xml:space="preserve">
          <source>Date.getMinutes()</source>
          <target state="translated">Date.getMinutes()</target>
        </trans-unit>
        <trans-unit id="cb23e72e8c14992b097ba16358be43662d27c732" translate="yes" xml:space="preserve">
          <source>Date.getMonth()</source>
          <target state="translated">Date.getMonth()</target>
        </trans-unit>
        <trans-unit id="f09210bf04c54bd0d14095c7d874cd66cd6e751c" translate="yes" xml:space="preserve">
          <source>Date.getSeconds()</source>
          <target state="translated">Date.getSeconds()</target>
        </trans-unit>
        <trans-unit id="a6b45547231b3104bc9811649053fb92b7f42671" translate="yes" xml:space="preserve">
          <source>Date.getTime()</source>
          <target state="translated">Date.getTime()</target>
        </trans-unit>
        <trans-unit id="e147997e1535f78f4ad301fb40ea6b8f5108f570" translate="yes" xml:space="preserve">
          <source>Date.now()</source>
          <target state="translated">Date.now()</target>
        </trans-unit>
        <trans-unit id="a0c6ea77e1cd0d8d94c57ca8c8e54c0bd4c2158f" translate="yes" xml:space="preserve">
          <source>Date.toString()</source>
          <target state="translated">Date.toString()</target>
        </trans-unit>
        <trans-unit id="555635751c7e86483a9f6fe2df7cfcb6a8832760" translate="yes" xml:space="preserve">
          <source>DateTools</source>
          <target state="translated">DateTools</target>
        </trans-unit>
        <trans-unit id="32511aaeb8c405e0efa25c5391c53e78d307ba20" translate="yes" xml:space="preserve">
          <source>DateTools.days()</source>
          <target state="translated">DateTools.days()</target>
        </trans-unit>
        <trans-unit id="ac64133870ff477f293f250800e2a5be2bc192b7" translate="yes" xml:space="preserve">
          <source>DateTools.delta()</source>
          <target state="translated">DateTools.delta()</target>
        </trans-unit>
        <trans-unit id="5407b3c280a32654917a301e8f1e52179afdda1a" translate="yes" xml:space="preserve">
          <source>DateTools.format()</source>
          <target state="translated">DateTools.format()</target>
        </trans-unit>
        <trans-unit id="2d2635160624e675ce4aa6a55dbd29b3b1fa602b" translate="yes" xml:space="preserve">
          <source>DateTools.getMonthDays()</source>
          <target state="translated">DateTools.getMonthDays()</target>
        </trans-unit>
        <trans-unit id="50125c9a3f602ad29ef75623701911f63654cef5" translate="yes" xml:space="preserve">
          <source>DateTools.hours()</source>
          <target state="translated">DateTools.hours()</target>
        </trans-unit>
        <trans-unit id="dae1a8675567063be5a6b687561331f363ead126" translate="yes" xml:space="preserve">
          <source>DateTools.make()</source>
          <target state="translated">DateTools.make()</target>
        </trans-unit>
        <trans-unit id="0b0bbbb3667e606bc2889737163daa07ac06c608" translate="yes" xml:space="preserve">
          <source>DateTools.makeUtc()</source>
          <target state="translated">DateTools.makeUtc()</target>
        </trans-unit>
        <trans-unit id="c75f62b71aef2f58fcd8823ced37ad861b7d02d7" translate="yes" xml:space="preserve">
          <source>DateTools.minutes()</source>
          <target state="translated">DateTools.minutes()</target>
        </trans-unit>
        <trans-unit id="4d24263c2b9332c4eb4e6dd82d4d55a921d239cb" translate="yes" xml:space="preserve">
          <source>DateTools.parse()</source>
          <target state="translated">DateTools.parse()</target>
        </trans-unit>
        <trans-unit id="0b2b996fe13f1553d7a57378f9225e43f593f894" translate="yes" xml:space="preserve">
          <source>DateTools.seconds()</source>
          <target state="translated">DateTools.seconds()</target>
        </trans-unit>
        <trans-unit id="bbc5c05dfc2c220660a4aeb8c455809d22453fdc" translate="yes" xml:space="preserve">
          <source>Decode an URL using the standard format.</source>
          <target state="translated">표준 형식을 사용하여 URL을 디코딩하십시오.</target>
        </trans-unit>
        <trans-unit id="6b0d09461f66b6635f7d94f1c02c32906ebdd7b5" translate="yes" xml:space="preserve">
          <source>Decode an UTF8 string back to an ISO string. Throw an exception if a given UTF8 character is not supported by the decoder.</source>
          <target state="translated">UTF8 문자열을 ISO 문자열로 다시 디코딩하십시오. 디코더가 지정된 UTF8 문자를 지원하지 않는 경우 예외를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="26af3905778d196856fb792c915b9e51842d6a25" translate="yes" xml:space="preserve">
          <source>DefType</source>
          <target state="translated">DefType</target>
        </trans-unit>
        <trans-unit id="f8289cccd0c29fb8405a76c1fa5f58795c665d51" translate="yes" xml:space="preserve">
          <source>Default values of constructors arguments are not guaranteed to be taken into account.</source>
          <target state="translated">생성자 인수의 기본값은 고려되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="66a7156e86ceacc86efa37f59bbdf78303ff6dcc" translate="yes" xml:space="preserve">
          <source>Defines a new module as &lt;code&gt;modulePath&lt;/code&gt; with several &lt;code&gt;&lt;a href=&quot;typedefinition#TypeDefinition&quot;&gt;TypeDefinition&lt;/a&gt;&lt;/code&gt;&lt;code&gt;types&lt;/code&gt;. This is analogous to defining a .hx file.</source>
          <target state="translated">여러 &lt;code&gt;&lt;a href=&quot;typedefinition#TypeDefinition&quot;&gt;TypeDefinition&lt;/a&gt;&lt;/code&gt; &lt;code&gt;types&lt;/code&gt; 가진 새 모듈을 &lt;code&gt;modulePath&lt;/code&gt; 로 정의합니다 . 이것은 .hx 파일을 정의하는 것과 유사합니다.</target>
        </trans-unit>
        <trans-unit id="7ffb44b0bf5991ffd8933124db8acf52f047650e" translate="yes" xml:space="preserve">
          <source>Defines a new type from &lt;code&gt;&lt;a href=&quot;typedefinition#TypeDefinition&quot;&gt;TypeDefinition&lt;/a&gt;&lt;/code&gt;&lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;typedefinition#TypeDefinition&quot;&gt;TypeDefinition&lt;/a&gt;&lt;/code&gt; &lt;code&gt;t&lt;/code&gt; 에서 새 유형을 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="84fe5d776eacc14be765857a529f348f735590f4" translate="yes" xml:space="preserve">
          <source>Delay the execution of the event for the given time, in seconds. If t is null, the event will be run at tick() time.</source>
          <target state="translated">주어진 시간 동안 이벤트 실행을 초 단위로 지연시킵니다. t가 null 인 경우 이벤트는 tick () 시간에 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="cc40785aa147dc4a7d72df056492d573e808874b" translate="yes" xml:space="preserve">
          <source>DelayedConnection</source>
          <target state="translated">DelayedConnection</target>
        </trans-unit>
        <trans-unit id="b19fbd6fbc0f92c748cd37dbda52e752ec8dec42" translate="yes" xml:space="preserve">
          <source>Depending on the outcome of the request, this method calls the &lt;code&gt;onStatus()&lt;/code&gt;, &lt;code&gt;onError()&lt;/code&gt; or &lt;code&gt;onData()&lt;/code&gt; callback functions.</source>
          <target state="translated">요청 결과에 &lt;code&gt;onStatus()&lt;/code&gt; 메소드는 onStatus () , &lt;code&gt;onError()&lt;/code&gt; 또는 &lt;code&gt;onData()&lt;/code&gt; 콜백 함수를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="b2d72bc3c75f01af655bd145601b41b857deedb1" translate="yes" xml:space="preserve">
          <source>Depending on their type they can be obtained as String through getString(name), or as binary data through getBytes(name).</source>
          <target state="translated">유형에 따라 getString (name)을 통해 String으로, 또는 getBytes (name)을 통해 이진 데이터로 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a43697c3a5b843ea027619c441f97e1d73da52f6" translate="yes" xml:space="preserve">
          <source>Directly inject the file content at the call site.</source>
          <target state="translated">콜 사이트에 파일 내용을 직접 주입하십시오.</target>
        </trans-unit>
        <trans-unit id="ef19cbc8a701801fa1532ac065e92297fa9883b8" translate="yes" xml:space="preserve">
          <source>Disables dependency checks of the module.</source>
          <target state="translated">모듈의 종속성 검사를 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="97a89c297bf35b344332efdfeb4222c2a8743efc" translate="yes" xml:space="preserve">
          <source>Disables file modification checks, avoiding some filesystem operations.</source>
          <target state="translated">일부 파일 시스템 작업을 피하면서 파일 수정 검사를 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="5ebb3a8e66b0d7f0e18b4b41fba8fb5a14934bcf" translate="yes" xml:space="preserve">
          <source>Disables file shadowing checks. Shadowing can occur when a new file is added to a class-path that has higher priority than the class-path of the current module file.</source>
          <target state="translated">파일 섀도 잉 검사를 비활성화합니다. 새 파일이 현재 모듈 파일의 클래스 경로보다 우선 순위가 높은 클래스 경로에 추가 될 때 섀도 잉이 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="840e1b364a32917bfd70c15b7a66a756520b0ee8" translate="yes" xml:space="preserve">
          <source>Dispatch</source>
          <target state="translated">Dispatch</target>
        </trans-unit>
        <trans-unit id="5b6cbd6babd89f0abe4e8e40db7cf8c651fcdc9f" translate="yes" xml:space="preserve">
          <source>DispatchConfig</source>
          <target state="translated">DispatchConfig</target>
        </trans-unit>
        <trans-unit id="331f33178b68e4b2c3527ce61e8f11c7ed865cbd" translate="yes" xml:space="preserve">
          <source>DispatchError</source>
          <target state="translated">DispatchError</target>
        </trans-unit>
        <trans-unit id="14584937074b8143efffa59e201c8b6918a0e1eb" translate="yes" xml:space="preserve">
          <source>DispatchRule</source>
          <target state="translated">DispatchRule</target>
        </trans-unit>
        <trans-unit id="0334d2d66165c4a341f9f334f25c2e1c841f403e" translate="yes" xml:space="preserve">
          <source>Displays a compilation error &lt;code&gt;msg&lt;/code&gt; at the given &lt;code&gt;&lt;a href=&quot;position#Position&quot;&gt;Position&lt;/a&gt;&lt;/code&gt;&lt;code&gt;pos&lt;/code&gt; and aborts the compilation.</source>
          <target state="translated">주어진 &lt;code&gt;&lt;a href=&quot;position#Position&quot;&gt;Position&lt;/a&gt;&lt;/code&gt; &lt;code&gt;pos&lt;/code&gt; 에 컴파일 오류 &lt;code&gt;msg&lt;/code&gt; 를 표시하고 컴파일을 중단합니다.</target>
        </trans-unit>
        <trans-unit id="3f743efedc9ba6e4c65d4713563aaccd14c74a4b" translate="yes" xml:space="preserve">
          <source>Displays a compilation error &lt;code&gt;msg&lt;/code&gt; at the given &lt;code&gt;&lt;a href=&quot;position#Position&quot;&gt;Position&lt;/a&gt;&lt;/code&gt;&lt;code&gt;pos&lt;/code&gt; and aborts the current macro call.</source>
          <target state="translated">주어진 &lt;code&gt;&lt;a href=&quot;position#Position&quot;&gt;Position&lt;/a&gt;&lt;/code&gt; &lt;code&gt;pos&lt;/code&gt; 에서 컴파일 오류 &lt;code&gt;msg&lt;/code&gt; 를 표시 하고 현재 매크로 호출을 중단합니다.</target>
        </trans-unit>
        <trans-unit id="f2527b1582b392164c568d38615eac209bbdb3d9" translate="yes" xml:space="preserve">
          <source>Displays a compilation warning &lt;code&gt;msg&lt;/code&gt; at the given &lt;code&gt;&lt;a href=&quot;position#Position&quot;&gt;Position&lt;/a&gt;&lt;/code&gt;&lt;code&gt;pos&lt;/code&gt;.</source>
          <target state="translated">주어진 &lt;code&gt;&lt;a href=&quot;position#Position&quot;&gt;Position&lt;/a&gt;&lt;/code&gt; &lt;code&gt;pos&lt;/code&gt; 에 컴파일 경고 &lt;code&gt;msg&lt;/code&gt; 를 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="c6432f91eb74c971e3fbb2119939777657b6561f" translate="yes" xml:space="preserve">
          <source>Does not end with a &lt;code&gt;/&lt;/code&gt; or &lt;code&gt;\&lt;/code&gt; separator.</source>
          <target state="translated">&lt;code&gt;/&lt;/code&gt; 또는 &lt;code&gt;\&lt;/code&gt; 구분자로 끝나지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="ceb739dfaa883916a2f3db6aaa122bce70006b53" translate="yes" xml:space="preserve">
          <source>Dynamic</source>
          <target state="translated">Dynamic</target>
        </trans-unit>
        <trans-unit id="b6cc4d397e25fa722c4053ecf8fe1a4daa148656" translate="yes" xml:space="preserve">
          <source>Dynamic (re-)bindable access modifier.</source>
          <target state="translated">동적 (재) 바인딩 액세스 수정 자.</target>
        </trans-unit>
        <trans-unit id="7a45a78611abcee636f0d9f402d439d06bdb03d5" translate="yes" xml:space="preserve">
          <source>Dynamic field access of a field named &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">필드라는 이름의 동적 필드 액세스 &lt;code&gt;s&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="da93356b1413f56025af8bba3066db9f60ffe82d" translate="yes" xml:space="preserve">
          <source>Dynamic&amp;lt;T&amp;gt;</source>
          <target state="translated">Dynamic&amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="ff9b40949157d6cf8e4158c1fc9d6e9fbc2d1ce6" translate="yes" xml:space="preserve">
          <source>DynamicAccess</source>
          <target state="translated">DynamicAccess</target>
        </trans-unit>
        <trans-unit id="875ee6c3e8577a04b4f6b74e984b6256f068498e" translate="yes" xml:space="preserve">
          <source>DynamicAccess is an abstract type for working with anonymous structures that are intended to hold collections of objects by the string key.</source>
          <target state="translated">DynamicAccess는 문자열 키로 개체 모음을 보유하기위한 익명 구조 작업을위한 추상 유형입니다.</target>
        </trans-unit>
        <trans-unit id="ade18ced07001fe33654d7ebdd482861101b62a8" translate="yes" xml:space="preserve">
          <source>DynamicAccess&amp;lt;T&amp;gt;(&lt;a href=&quot;../dynamic&quot;&gt;Dynamic&lt;/a&gt;&amp;lt;T&amp;gt;)</source>
          <target state="translated">DynamicAccess&amp;lt;T&amp;gt;(&lt;a href=&quot;../dynamic&quot;&gt;Dynamic&lt;/a&gt;&amp;lt;T&amp;gt;)</target>
        </trans-unit>
        <trans-unit id="4093dcd11824e02f0aff41149361d63866d81b4c" translate="yes" xml:space="preserve">
          <source>DynamicAccess.exists()</source>
          <target state="translated">DynamicAccess.exists()</target>
        </trans-unit>
        <trans-unit id="b61858923058648f3330342eb665558523064607" translate="yes" xml:space="preserve">
          <source>DynamicAccess.get()</source>
          <target state="translated">DynamicAccess.get()</target>
        </trans-unit>
        <trans-unit id="c22bdd3bc391c5af49125cc9f11f762acbde6d75" translate="yes" xml:space="preserve">
          <source>DynamicAccess.keys()</source>
          <target state="translated">DynamicAccess.keys()</target>
        </trans-unit>
        <trans-unit id="4854ee497f9e93123b76285da0dd234e42a7a54f" translate="yes" xml:space="preserve">
          <source>DynamicAccess.remove()</source>
          <target state="translated">DynamicAccess.remove()</target>
        </trans-unit>
        <trans-unit id="8301ac5705ed0d013ee234d53c322a51eef0275e" translate="yes" xml:space="preserve">
          <source>DynamicAccess.set()</source>
          <target state="translated">DynamicAccess.set()</target>
        </trans-unit>
        <trans-unit id="fec44a0e36074474211d301c8d22097268fe46b9" translate="yes" xml:space="preserve">
          <source>EReg</source>
          <target state="translated">EReg</target>
        </trans-unit>
        <trans-unit id="2692bbff76cf83d0217eb6145dc7016d40317867" translate="yes" xml:space="preserve">
          <source>EReg instances can be created by calling the constructor, or with the special syntax &lt;code&gt;~/pattern/modifier&lt;/code&gt;</source>
          <target state="translated">생성자를 호출하거나 특수 구문 &lt;code&gt;~/pattern/modifier&lt;/code&gt; 를 사용하여 EReg 인스턴스를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6a85f15be907bcdde1e6694bed44957fb02d9157" translate="yes" xml:space="preserve">
          <source>EReg instances maintain an internal state, which is affected by several of its methods.</source>
          <target state="translated">EReg 인스턴스는 내부 상태를 유지하며 여러 가지 방법의 영향을받습니다.</target>
        </trans-unit>
        <trans-unit id="8fd3f830f9dae56d714e14c3534ef9ecf656d9a4" translate="yes" xml:space="preserve">
          <source>EReg.map()</source>
          <target state="translated">EReg.map()</target>
        </trans-unit>
        <trans-unit id="844315945c461e71d2cbb4a4ca25b7fc94e15fdd" translate="yes" xml:space="preserve">
          <source>EReg.match()</source>
          <target state="translated">EReg.match()</target>
        </trans-unit>
        <trans-unit id="c9a19d5e4bb3e5c6363a686970bc71716dd3473a" translate="yes" xml:space="preserve">
          <source>EReg.matchSub()</source>
          <target state="translated">EReg.matchSub()</target>
        </trans-unit>
        <trans-unit id="d038441aef0214cad47f99ca8be2833d1d10e582" translate="yes" xml:space="preserve">
          <source>EReg.matched()</source>
          <target state="translated">EReg.matched()</target>
        </trans-unit>
        <trans-unit id="616337ae7f7626d4166029df12e0fd0b9f460be4" translate="yes" xml:space="preserve">
          <source>EReg.matchedLeft()</source>
          <target state="translated">EReg.matchedLeft()</target>
        </trans-unit>
        <trans-unit id="6ed139669903ee890f8a720234d664be21fb4c63" translate="yes" xml:space="preserve">
          <source>EReg.matchedPos()</source>
          <target state="translated">EReg.matchedPos()</target>
        </trans-unit>
        <trans-unit id="424724cdc5fd710c5b19c8eb38f011e313aa5dba" translate="yes" xml:space="preserve">
          <source>EReg.matchedRight()</source>
          <target state="translated">EReg.matchedRight()</target>
        </trans-unit>
        <trans-unit id="8a8ac3b3d61be655c38776850e2d1f09c70af9e3" translate="yes" xml:space="preserve">
          <source>EReg.replace()</source>
          <target state="translated">EReg.replace()</target>
        </trans-unit>
        <trans-unit id="217a41e1d311a5cdae84ebba76f654a7dece4f3d" translate="yes" xml:space="preserve">
          <source>EReg.split()</source>
          <target state="translated">EReg.split()</target>
        </trans-unit>
        <trans-unit id="8098f4ae3e293d69b382512cc8c2bc8180760b31" translate="yes" xml:space="preserve">
          <source>Each Serializer instance maintains its own cache if this.useCache` is true.</source>
          <target state="translated">this.useCache`가 true 인 경우 각 Serializer 인스턴스는 자체 캐시를 유지합니다.</target>
        </trans-unit>
        <trans-unit id="12ec4f15441543a3136624875a0364b845f86171" translate="yes" xml:space="preserve">
          <source>Each Unserializer instance maintains its own cache.</source>
          <target state="translated">각 Unserializer 인스턴스는 자체 캐시를 유지 관리합니다.</target>
        </trans-unit>
        <trans-unit id="41217ddf6bf932c9b3b938d71fe67ca98d841873" translate="yes" xml:space="preserve">
          <source>Either represents values which are either of type &lt;code&gt;L&lt;/code&gt; (Left) or type &lt;code&gt;R&lt;/code&gt; (Right).</source>
          <target state="translated">&lt;code&gt;L&lt;/code&gt; (왼쪽) 또는 &lt;code&gt;R&lt;/code&gt; (오른쪽) 유형 의 값을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="95792dab3e1ee717026da087b89625fe36a907e3" translate="yes" xml:space="preserve">
          <source>Either&amp;lt;L, R&amp;gt;</source>
          <target state="translated">&amp;lt;L, R&amp;gt;</target>
        </trans-unit>
        <trans-unit id="dcb1b2efa1c5c7dadff21f30bed953c65eba5562" translate="yes" xml:space="preserve">
          <source>EitherType&amp;lt;T1, T2&amp;gt;(&lt;a href=&quot;../../dynamic&quot;&gt;Dynamic&lt;/a&gt;)</source>
          <target state="translated">EitherType &amp;lt;T1, T2&amp;gt; ( &lt;a href=&quot;../../dynamic&quot;&gt;동적&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="adfd86b205a2d0d394e2955d44320ffb73af40dd" translate="yes" xml:space="preserve">
          <source>Elements return by &lt;code&gt;&lt;a href=&quot;callstack#CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt; methods.</source>
          <target state="translated">요소는 &lt;code&gt;&lt;a href=&quot;callstack#CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt; 메소드에 의해 리턴됩니다 .</target>
        </trans-unit>
        <trans-unit id="9a91ba9c345dd631a8acd42369dbf6d825d87b96" translate="yes" xml:space="preserve">
          <source>Embed a JavaScript file at compile time (can be called by &lt;code&gt;--macro&lt;/code&gt; or within an &lt;code&gt;__init__&lt;/code&gt; method).</source>
          <target state="translated">컴파일 타임에 &lt;code&gt;--macro&lt;/code&gt; 또는 &lt;code&gt;__init__&lt;/code&gt; 메소드 내에서 호출 할 수있는 JavaScript 파일을 포함 시킵니다 .</target>
        </trans-unit>
        <trans-unit id="6e952912b0124405f74759351f78d81dea118a54" translate="yes" xml:space="preserve">
          <source>Empties &lt;code&gt;this&lt;/code&gt; List.</source>
          <target state="translated">하늘로 &lt;code&gt;this&lt;/code&gt; 목록.</target>
        </trans-unit>
        <trans-unit id="80c59fc5334cf2191575a07c8dd95b8a3c504f91" translate="yes" xml:space="preserve">
          <source>Encode an URL by using the standard format.</source>
          <target state="translated">표준 형식을 사용하여 URL을 인코딩하십시오.</target>
        </trans-unit>
        <trans-unit id="097ee705f584936af92479eca1e26594b686c522" translate="yes" xml:space="preserve">
          <source>Encode the input ISO string into the corresponding UTF8 one.</source>
          <target state="translated">입력 ISO 문자열을 해당 UTF8 문자열로 인코딩하십시오.</target>
        </trans-unit>
        <trans-unit id="604ad10511e82c759311314a2b0569e49dfe2a6d" translate="yes" xml:space="preserve">
          <source>Encodes &lt;code&gt;n&lt;/code&gt; into a hexadecimal representation.</source>
          <target state="translated">&lt;code&gt;n&lt;/code&gt; 을 16 진수로 인코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="b984d26eb4b9800edfc1a5972d7bcb20eee6daa8" translate="yes" xml:space="preserve">
          <source>Encodes &lt;code&gt;o&lt;/code&gt;'s value and returns the resulting JSON string.</source>
          <target state="translated">&lt;code&gt;o&lt;/code&gt; 값을 인코딩 하고 결과 JSON 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="65069ece18af22f2a8ba997f9a1597fa1e065d1f" translate="yes" xml:space="preserve">
          <source>Encodes the given &lt;code&gt;value&lt;/code&gt; and returns the resulting JSON string.</source>
          <target state="translated">주어진 &lt;code&gt;value&lt;/code&gt; 인코딩하고 결과 JSON 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2b232729c524ef9ee28d2f15d4e7830e6cff69bf" translate="yes" xml:space="preserve">
          <source>End of file status can be checked by calling &lt;code&gt;&lt;a href=&quot;stringtools#isEof&quot;&gt;StringTools.isEof&lt;/a&gt;()&lt;/code&gt; with the returned value as argument.</source>
          <target state="translated">반환 된 값을 인수로 사용하여 &lt;code&gt;&lt;a href=&quot;stringtools#isEof&quot;&gt;StringTools.isEof&lt;/a&gt;()&lt;/code&gt; 를 호출하여 파일 끝 상태를 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="71f9464e04d9f246892847e8602acc62449908bc" translate="yes" xml:space="preserve">
          <source>Endianness (word byte order) used when reading numbers.</source>
          <target state="translated">숫자를 읽을 때 사용되는 엔디안 (워드 바이트 순서).</target>
        </trans-unit>
        <trans-unit id="fb8c697013ea48000ad87d4c3dc58c33c68209ff" translate="yes" xml:space="preserve">
          <source>Endianness (word byte order) used when writing numbers.</source>
          <target state="translated">숫자를 쓸 때 사용되는 엔디안 (워드 바이트 순서).</target>
        </trans-unit>
        <trans-unit id="659c924b0ac08a157d35ca4f12c37ecb9645e621" translate="yes" xml:space="preserve">
          <source>Endianness is specified by the &lt;code&gt;bigEndian&lt;/code&gt; property.</source>
          <target state="translated">엔디안은 &lt;code&gt;bigEndian&lt;/code&gt; 속성으로 지정됩니다 .</target>
        </trans-unit>
        <trans-unit id="19172e9e47fee4109f3d1d86c3076acdc36822f2" translate="yes" xml:space="preserve">
          <source>Entry</source>
          <target state="translated">Entry</target>
        </trans-unit>
        <trans-unit id="cb9388e4a2e7f88badae204e08bb23d349474a68" translate="yes" xml:space="preserve">
          <source>EntryPoint</source>
          <target state="translated">EntryPoint</target>
        </trans-unit>
        <trans-unit id="c9ca9b6c790a84bae49da3e4456cfb40fda85e36" translate="yes" xml:space="preserve">
          <source>EntryPoint.addThread()</source>
          <target state="translated">EntryPoint.addThread()</target>
        </trans-unit>
        <trans-unit id="9a8f2042e5b0eb4897ccce256accf7d22cdf31a7" translate="yes" xml:space="preserve">
          <source>EntryPoint.run()</source>
          <target state="translated">EntryPoint.run()</target>
        </trans-unit>
        <trans-unit id="29ab7196455f2b6f7c701a9fed55c8897ecc942d" translate="yes" xml:space="preserve">
          <source>EntryPoint.runInMainThread()</source>
          <target state="translated">EntryPoint.runInMainThread()</target>
        </trans-unit>
        <trans-unit id="71f7397b6674a5a17a37f4785354d2f89a6d47ea" translate="yes" xml:space="preserve">
          <source>EntryPoint.threadCount()</source>
          <target state="translated">EntryPoint.threadCount()</target>
        </trans-unit>
        <trans-unit id="90fb927d86ddfd15624e3887d959f1d6cac8f5ed" translate="yes" xml:space="preserve">
          <source>EntryPoint.wakeup()</source>
          <target state="translated">EntryPoint.wakeup()</target>
        </trans-unit>
        <trans-unit id="20588ae8e5c269292d35f9dfffa8f2eb3fd3c259" translate="yes" xml:space="preserve">
          <source>Enum</source>
          <target state="translated">Enum</target>
        </trans-unit>
        <trans-unit id="5dddd13cfb9477d06ae4a8baf0640522ec6c3e88" translate="yes" xml:space="preserve">
          <source>Enum constructor indices are preserved from Haxe syntax, so the first declared is index 0, the next index 1 etc. The methods are optimized if the enum instance is passed directly, e.g. as has(EnumCtor). Otherwise Type.enumIndex() reflection is used.</source>
          <target state="translated">열거 형 생성자 인덱스는 Haxe 구문에서 유지되므로 선언 된 첫 번째는 인덱스 0, 다음 인덱스 1 등입니다. 열거 형 인스턴스가 직접 전달되면 메소드가 최적화됩니다 (예 : has (EnumCtor)). 그렇지 않으면 Type.enumIndex () 리플렉션이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a970348da64b6e188a02dfb82a9ce8049b9a7405" translate="yes" xml:space="preserve">
          <source>Enum&amp;lt;T&amp;gt;</source>
          <target state="translated">Enum&amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="69b06764720ac75de68cfd1a7e8332b48f19ed84" translate="yes" xml:space="preserve">
          <source>EnumField</source>
          <target state="translated">EnumField</target>
        </trans-unit>
        <trans-unit id="217014dcd14b7cd1a64e0cbc989df5fb18080dd4" translate="yes" xml:space="preserve">
          <source>EnumFlags</source>
          <target state="translated">EnumFlags</target>
        </trans-unit>
        <trans-unit id="ae7e076539440c67936d46ad14aad3016805aca4" translate="yes" xml:space="preserve">
          <source>EnumFlags&amp;lt;T&amp;gt;(&lt;a href=&quot;../int&quot;&gt;Int&lt;/a&gt;)</source>
          <target state="translated">EnumFlags&amp;lt;T&amp;gt;(&lt;a href=&quot;../int&quot;&gt;Int&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="2c21c561c31a8a3b32d605002fd88cea9458cec4" translate="yes" xml:space="preserve">
          <source>EnumFlags.has()</source>
          <target state="translated">EnumFlags.has()</target>
        </trans-unit>
        <trans-unit id="88994c7ba1d66d2cc1cff6d4b786b305619aa89b" translate="yes" xml:space="preserve">
          <source>EnumFlags.ofInt()</source>
          <target state="translated">EnumFlags.ofInt()</target>
        </trans-unit>
        <trans-unit id="871bf1cfb1f0428ad87897156e135cb01a29897f" translate="yes" xml:space="preserve">
          <source>EnumFlags.set()</source>
          <target state="translated">EnumFlags.set()</target>
        </trans-unit>
        <trans-unit id="4fa6b8ecd4f446834870503895f1f9f0ea642afc" translate="yes" xml:space="preserve">
          <source>EnumFlags.toInt()</source>
          <target state="translated">EnumFlags.toInt()</target>
        </trans-unit>
        <trans-unit id="75a5890d9960bd22d8efed2accaa1af96f8d0e64" translate="yes" xml:space="preserve">
          <source>EnumFlags.unset()</source>
          <target state="translated">EnumFlags.unset()</target>
        </trans-unit>
        <trans-unit id="959c52e85ebde203ec20d08b8ae3d007c571c353" translate="yes" xml:space="preserve">
          <source>EnumTools</source>
          <target state="translated">EnumTools</target>
        </trans-unit>
        <trans-unit id="8e76c122272234454c070538cf531c57264679ac" translate="yes" xml:space="preserve">
          <source>EnumTools.createAll()</source>
          <target state="translated">EnumTools.createAll()</target>
        </trans-unit>
        <trans-unit id="eb70d16fddb6dee427cfc1778511d6660ba91a04" translate="yes" xml:space="preserve">
          <source>EnumTools.createByIndex()</source>
          <target state="translated">EnumTools.createByIndex()</target>
        </trans-unit>
        <trans-unit id="2abd36cb065921b4929ae545c1b4214b5d198228" translate="yes" xml:space="preserve">
          <source>EnumTools.createByName()</source>
          <target state="translated">EnumTools.createByName()</target>
        </trans-unit>
        <trans-unit id="33dde4ce8377aa8b17125518a31d9289e3a1590a" translate="yes" xml:space="preserve">
          <source>EnumTools.getConstructors()</source>
          <target state="translated">EnumTools.getConstructors()</target>
        </trans-unit>
        <trans-unit id="f9f50cb6fc0721ae18b145bfdba796e2f55db01a" translate="yes" xml:space="preserve">
          <source>EnumTools.getName()</source>
          <target state="translated">EnumTools.getName()</target>
        </trans-unit>
        <trans-unit id="0c9e28fe595a8813c17c13aac2f0334ebeb7d107" translate="yes" xml:space="preserve">
          <source>EnumType</source>
          <target state="translated">EnumType</target>
        </trans-unit>
        <trans-unit id="6c1f12e97714f00099156200b5b4f82c9a31c0c4" translate="yes" xml:space="preserve">
          <source>EnumValue</source>
          <target state="translated">EnumValue</target>
        </trans-unit>
        <trans-unit id="f4237d9254c0bd65cc0b9ca234e515815bfff38a" translate="yes" xml:space="preserve">
          <source>EnumValueMap allows mapping of enum value keys to arbitrary values.</source>
          <target state="translated">EnumValueMap을 사용하면 열거 형 값 키를 임의의 값으로 매핑 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cf40ec40f9bf090c457ab42cd5ec953a38c44241" translate="yes" xml:space="preserve">
          <source>EnumValueMap&amp;lt;K, V&amp;gt;</source>
          <target state="translated">EnumValueMap &amp;lt;K, V&amp;gt;</target>
        </trans-unit>
        <trans-unit id="d0cd13a82f27a24bd7d3a452395ae124ce8923ef" translate="yes" xml:space="preserve">
          <source>EnumValueTools</source>
          <target state="translated">EnumValueTools</target>
        </trans-unit>
        <trans-unit id="c2d7764c0b4802fdc6629f0c1f99b5ab3bb60561" translate="yes" xml:space="preserve">
          <source>EnumValueTools.equals()</source>
          <target state="translated">EnumValueTools.equals()</target>
        </trans-unit>
        <trans-unit id="86824a242057a755ad1d72f931d21bfa101c5c33" translate="yes" xml:space="preserve">
          <source>EnumValueTools.getIndex()</source>
          <target state="translated">EnumValueTools.getIndex()</target>
        </trans-unit>
        <trans-unit id="7ff39c6303232b4b14cb60aab31d5d707e2b6300" translate="yes" xml:space="preserve">
          <source>EnumValueTools.getName()</source>
          <target state="translated">EnumValueTools.getName()</target>
        </trans-unit>
        <trans-unit id="7f7120fd285bfbeca4ca38bc22925348c685a267" translate="yes" xml:space="preserve">
          <source>EnumValueTools.getParameters()</source>
          <target state="translated">EnumValueTools.getParameters()</target>
        </trans-unit>
        <trans-unit id="6584a67d992ae90d720fac5d0ba5051e7a0a3ce4" translate="yes" xml:space="preserve">
          <source>EnumValueTools.match()</source>
          <target state="translated">EnumValueTools.match()</target>
        </trans-unit>
        <trans-unit id="7478ca19373c7fa54bd2c781b77e5dbd007e2e2c" translate="yes" xml:space="preserve">
          <source>Enumdef</source>
          <target state="translated">Enumdef</target>
        </trans-unit>
        <trans-unit id="ec3aedc215415465ba248c2b745d070af96045ef" translate="yes" xml:space="preserve">
          <source>Eof</source>
          <target state="translated">Eof</target>
        </trans-unit>
        <trans-unit id="7f2f6a15cf8da2b27e5a4af47b58e7ad71c0b3d9" translate="yes" xml:space="preserve">
          <source>Error</source>
          <target state="translated">Error</target>
        </trans-unit>
        <trans-unit id="847d43d4f692fc47d875f005902fb14d3cec566d" translate="yes" xml:space="preserve">
          <source>Escapes HTML special characters of the string &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">문자열 &lt;code&gt;s&lt;/code&gt; 의 HTML 특수 문자를 이스케이프합니다 .</target>
        </trans-unit>
        <trans-unit id="fcb6d99f8787bb35bca746c5bb3ff31fb501a7a9" translate="yes" xml:space="preserve">
          <source>Evaluates &lt;code&gt;e&lt;/code&gt; as macro code.</source>
          <target state="translated">&lt;code&gt;e&lt;/code&gt; 를 매크로 코드로 평가 합니다.</target>
        </trans-unit>
        <trans-unit id="5ab7721397827b925456d2a147cb5704105a62a7" translate="yes" xml:space="preserve">
          <source>Example usage:</source>
          <target state="translated">사용법 예 :</target>
        </trans-unit>
        <trans-unit id="b1dac2bdba43f0d6958b52261abdabeb315af240" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;~/haxe/i&lt;/code&gt;&lt;em&gt; The first argument &lt;em&gt;haxe&lt;/em&gt; is a string with regular expression pattern. &lt;/em&gt; The second argument &lt;em&gt;i&lt;/em&gt; is a string with regular expression flags.</source>
          <target state="translated">예 : &lt;code&gt;~/haxe/i&lt;/code&gt; &lt;em&gt;첫 번째 인수 &lt;em&gt;haxe&lt;/em&gt; 는 정규식 패턴을 가진 문자열입니다. &lt;/em&gt;두 번째 인수 &lt;em&gt;i&lt;/em&gt; 는 정규식 플래그가있는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="61fbcf725e6506f08ff55ff8d9d71b806a8fdf4a" translate="yes" xml:space="preserve">
          <source>Exceptions are serialized with &lt;code&gt;serializeException&lt;/code&gt; so they will be thrown immediately when they are unserialized.</source>
          <target state="translated">예외는 serializeException으로 &lt;code&gt;serializeException&lt;/code&gt; 되므로 직렬화 해제 되면 즉시 발생합니다.</target>
        </trans-unit>
        <trans-unit id="db39031c9f0fe8d8245f8bd97a392f88286343dd" translate="yes" xml:space="preserve">
          <source>Exclude a specific class, enum, or all classes and enums in a package from being generated. Excluded types become &lt;code&gt;extern&lt;/code&gt;.</source>
          <target state="translated">패키지의 특정 클래스, 열거 형 또는 모든 클래스와 열거 형이 생성되지 않도록 제외합니다. 제외 된 유형은 &lt;code&gt;extern&lt;/code&gt; 이 됩니다.</target>
        </trans-unit>
        <trans-unit id="2cad5e4c316409614c41d96484eb73f9ced78742" translate="yes" xml:space="preserve">
          <source>Exclude classes and enums listed in an extern file (one per line) from being generated.</source>
          <target state="translated">extern 파일 (한 줄에 하나씩)에 나열된 클래스와 열거가 생성되지 않도록 제외합니다.</target>
        </trans-unit>
        <trans-unit id="da9b049dd9f93d13a3595b83c0460a99053d5e28" translate="yes" xml:space="preserve">
          <source>Executes &lt;code&gt;this&lt;/code&gt; Template, taking into account &lt;code&gt;context&lt;/code&gt; for replacements and &lt;code&gt;macros&lt;/code&gt; for callback functions.</source>
          <target state="translated">콜백 함수의 대체 및 &lt;code&gt;macros&lt;/code&gt; 대한 &lt;code&gt;context&lt;/code&gt; 를 고려 &lt;code&gt;this&lt;/code&gt; 템플리트를 실행 합니다.</target>
        </trans-unit>
        <trans-unit id="a5292679ec28d35bb78fea0ab23b82968c9375a6" translate="yes" xml:space="preserve">
          <source>Expr</source>
          <target state="translated">Expr</target>
        </trans-unit>
        <trans-unit id="0e67d2ab39077340af2794c712a6e51917ff46b2" translate="yes" xml:space="preserve">
          <source>ExprArrayTools</source>
          <target state="translated">ExprArrayTools</target>
        </trans-unit>
        <trans-unit id="4dd6048a21613ac184a98bc6fa4df6762068e8fe" translate="yes" xml:space="preserve">
          <source>ExprDef</source>
          <target state="translated">ExprDef</target>
        </trans-unit>
        <trans-unit id="f161280872afc5d792441e3c1f89f3466770bf0e" translate="yes" xml:space="preserve">
          <source>ExprOf&amp;lt;T&amp;gt;</source>
          <target state="translated">ExprOf&amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="e6708b573016bde041f2677f3cf2d0ee73dbf799" translate="yes" xml:space="preserve">
          <source>ExprTools</source>
          <target state="translated">ExprTools</target>
        </trans-unit>
        <trans-unit id="b5bedf5ab9ba31e469faf7e534492347fc372217" translate="yes" xml:space="preserve">
          <source>ExternalConnection</source>
          <target state="translated">ExternalConnection</target>
        </trans-unit>
        <trans-unit id="50c1cd906f2119b6958b93e7c674c1eaa330f87c" translate="yes" xml:space="preserve">
          <source>ExtraField</source>
          <target state="translated">ExtraField</target>
        </trans-unit>
        <trans-unit id="2b7c79a6aafbb9c12425071df8d6c7a6b1cf8588" translate="yes" xml:space="preserve">
          <source>Extract metadata entries by given &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;name&lt;/code&gt; 메타 데이터 항목을 추출하십시오 .</target>
        </trans-unit>
        <trans-unit id="00a72a1da2e89152ad6f3b409435741b8f71e25a" translate="yes" xml:space="preserve">
          <source>Extracts the data of &lt;code&gt;this&lt;/code&gt; Vector.</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; Vector 의 데이터를 추출합니다 .</target>
        </trans-unit>
        <trans-unit id="6b1e825f49e15b9b7d11a9ed50b9b416e9c137e2" translate="yes" xml:space="preserve">
          <source>FPHelper</source>
          <target state="translated">FPHelper</target>
        </trans-unit>
        <trans-unit id="53edeba7041e670ebb7633b7ca3784fdc0fcc612" translate="yes" xml:space="preserve">
          <source>Failed access due to a &lt;code&gt;@:require&lt;/code&gt; metadata.</source>
          <target state="translated">&lt;code&gt;@:require&lt;/code&gt; 메타 데이터 로 인해 액세스하지 못했습니다 .</target>
        </trans-unit>
        <trans-unit id="8db6a2f1d3b7e19e518ffa8979d7ad15359af460" translate="yes" xml:space="preserve">
          <source>Fast</source>
          <target state="translated">Fast</target>
        </trans-unit>
        <trans-unit id="c326a4660b674d2f6ea82687a1e1abae2337541f" translate="yes" xml:space="preserve">
          <source>Field</source>
          <target state="translated">Field</target>
        </trans-unit>
        <trans-unit id="d73f7b12c01b8512528d132e8f54150b84ee1082" translate="yes" xml:space="preserve">
          <source>Field access on &lt;code&gt;e.field&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;e.field&lt;/code&gt; 의 필드 액세스 .</target>
        </trans-unit>
        <trans-unit id="9dc3801e4eb667711897bdae9bea4a527021bde2" translate="yes" xml:space="preserve">
          <source>Field access on &lt;code&gt;e&lt;/code&gt; according to &lt;code&gt;fa&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fa&lt;/code&gt; 에 따른 &lt;code&gt;e&lt;/code&gt; 의 필드 액세스 .</target>
        </trans-unit>
        <trans-unit id="7ab33b8d090a51782269219799af5ed1f1821764" translate="yes" xml:space="preserve">
          <source>Field access to an enum constructor &lt;code&gt;ef&lt;/code&gt; of enum &lt;code&gt;e&lt;/code&gt;.</source>
          <target state="translated">열거 생성자에 필드를 액세스 &lt;code&gt;ef&lt;/code&gt; 열거의 &lt;code&gt;e&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6b388752e7d53bfed09e4768ec90932401a5b25a" translate="yes" xml:space="preserve">
          <source>FieldAccess</source>
          <target state="translated">FieldAccess</target>
        </trans-unit>
        <trans-unit id="729413be94755fce8a2641b6ca14a20703827f07" translate="yes" xml:space="preserve">
          <source>FieldKind</source>
          <target state="translated">FieldKind</target>
        </trans-unit>
        <trans-unit id="79b3e5a7ea019fbf791de55508d0eff3356b75e6" translate="yes" xml:space="preserve">
          <source>FieldType</source>
          <target state="translated">FieldType</target>
        </trans-unit>
        <trans-unit id="d7decf1aa22b02ae8abf9a96849ee423eee838e4" translate="yes" xml:space="preserve">
          <source>Filter</source>
          <target state="translated">Filter</target>
        </trans-unit>
        <trans-unit id="8c6e356e2398338470ad46aa52f82a0138436d73" translate="yes" xml:space="preserve">
          <source>Find and install &lt;a href=&quot;https://lib.haxe.org/t/all/&quot;&gt;popular Haxe libraries&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://lib.haxe.org/t/all/&quot;&gt;인기있는 Haxe 라이브러리&lt;/a&gt; 찾기 및 설치</target>
        </trans-unit>
        <trans-unit id="e781f197d454b09d7ab466013555313b6d08ddb7" translate="yes" xml:space="preserve">
          <source>Flash outputs the result in a new &lt;code&gt;&lt;a href=&quot;https://api.haxe.org/flash/text/TextField.html#TextField&quot;&gt;TextField&lt;/a&gt;&lt;/code&gt; on stage. JavaScript outputs the result using &lt;code&gt;console.log&lt;/code&gt;. Other targets use native &lt;code&gt;print&lt;/code&gt; to output the result.</source>
          <target state="translated">Flash 는 스테이지 에서 결과를 새로운 &lt;code&gt;&lt;a href=&quot;https://api.haxe.org/flash/text/TextField.html#TextField&quot;&gt;TextField&lt;/a&gt;&lt;/code&gt; 로 출력합니다 . JavaScript는 &lt;code&gt;console.log&lt;/code&gt; 를 사용하여 결과를 출력합니다 . 다른 대상은 기본 &lt;code&gt;print&lt;/code&gt; 를 사용 하여 결과를 출력합니다.</target>
        </trans-unit>
        <trans-unit id="b0acea8b840d7990be1b2cf6a636056e8e5f8ac3" translate="yes" xml:space="preserve">
          <source>FlashJsConnection</source>
          <target state="translated">FlashJsConnection</target>
        </trans-unit>
        <trans-unit id="0bda41944f21238884d5c8959994da848e8e7511" translate="yes" xml:space="preserve">
          <source>FlatEnum</source>
          <target state="translated">FlatEnum</target>
        </trans-unit>
        <trans-unit id="f90506d4b512ae34c88a0d4d95dbb6ff9b1a3858" translate="yes" xml:space="preserve">
          <source>FlatEnum(&lt;a href=&quot;../dynamic&quot;&gt;Dynamic&lt;/a&gt;)</source>
          <target state="translated">FlatEnum(&lt;a href=&quot;../dynamic&quot;&gt;Dynamic&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="64435fd82de7b1d614dfb9844848a48b14c6cd2c" translate="yes" xml:space="preserve">
          <source>Float</source>
          <target state="translated">Float</target>
        </trans-unit>
        <trans-unit id="11510a7777bf8197e4a83098848bb3737b35e115" translate="yes" xml:space="preserve">
          <source>Float32Array(&lt;a href=&quot;float32arraydata&quot;&gt;Float32ArrayData&lt;/a&gt;)</source>
          <target state="translated">Float32Array(&lt;a href=&quot;float32arraydata&quot;&gt;Float32ArrayData&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="844cbd246798b994fb20578356469dd69bdf50d5" translate="yes" xml:space="preserve">
          <source>Float32ArrayData</source>
          <target state="translated">Float32ArrayData</target>
        </trans-unit>
        <trans-unit id="477a8b3ad584b27da3e54e8ad06023f6ec4bfc5f" translate="yes" xml:space="preserve">
          <source>Float64Array(&lt;a href=&quot;float64arraydata&quot;&gt;Float64ArrayData&lt;/a&gt;)</source>
          <target state="translated">Float64Array(&lt;a href=&quot;float64arraydata&quot;&gt;Float64ArrayData&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="f2fb019ec64e32888998bb2e3aaf84ddcc7d7fc3" translate="yes" xml:space="preserve">
          <source>Float64ArrayData</source>
          <target state="translated">Float64ArrayData</target>
        </trans-unit>
        <trans-unit id="c412da7fb8bed1eed25e335134a9aec3cd0f28e9" translate="yes" xml:space="preserve">
          <source>Flush any buffered data.</source>
          <target state="translated">버퍼링 된 데이터를 비 웁니다.</target>
        </trans-unit>
        <trans-unit id="a8345b1143921741394df2f483d2783c74a0d7e9" translate="yes" xml:space="preserve">
          <source>FlushMode</source>
          <target state="translated">FlushMode</target>
        </trans-unit>
        <trans-unit id="9caf5d6a43b11eb51f65ff907ca9558486d39bcf" translate="yes" xml:space="preserve">
          <source>Follows a type, including abstracts' underlying implementation</source>
          <target state="translated">초록의 기본 구현을 포함하여 유형을 따릅니다.</target>
        </trans-unit>
        <trans-unit id="be04ecbc965d028a002641c404f61fa2d930509f" translate="yes" xml:space="preserve">
          <source>Follows a type.</source>
          <target state="translated">유형을 따릅니다.</target>
        </trans-unit>
        <trans-unit id="609916a76f7784ae4e3c1c473c6a5460e534c7f2" translate="yes" xml:space="preserve">
          <source>Follows all typedefs of &lt;code&gt;t&lt;/code&gt; to reach the actual type.</source>
          <target state="translated">&lt;code&gt;t&lt;/code&gt; 의 모든 typedef를 따라 실제 유형에 도달합니다.</target>
        </trans-unit>
        <trans-unit id="2327544b07b3ad3e42d69747edf5990e73647c23" translate="yes" xml:space="preserve">
          <source>For all other types, the result is 0 if &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are equal. If they are not equal, the result depends on the type and is negative if:</source>
          <target state="translated">다른 모든 유형의 경우 &lt;code&gt;a&lt;/code&gt; 와 &lt;code&gt;b&lt;/code&gt; 가 같으면 결과는 0 입니다. 동일하지 않은 경우 결과는 유형에 따라 다르며 다음과 같은 경우 음수입니다.</target>
        </trans-unit>
        <trans-unit id="9943c2131e35a39918c80fe56b7bcbe6c83502f9" translate="yes" xml:space="preserve">
          <source>For asynchronous connections, where the results are events that will be resolved later in the execution process.</source>
          <target state="translated">비동기 연결의 경우 결과는 나중에 실행 프로세스에서 해결 될 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="afb073172e32ccfb97022463548054490b47b5f5" translate="yes" xml:space="preserve">
          <source>For example, these types of structures are often created from JSON.</source>
          <target state="translated">예를 들어, 이러한 유형의 구조는 종종 JSON에서 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="114d3c01a2e4ddc991d478cd5cfe8dbabb4a9762" translate="yes" xml:space="preserve">
          <source>For example, this is the result of -1.0 / 0.0.</source>
          <target state="translated">예를 들어, 이것은 -1.0 / 0.0의 결과입니다.</target>
        </trans-unit>
        <trans-unit id="9a53f6454abb12658c97c32ac6f8607146258608" translate="yes" xml:space="preserve">
          <source>For example, this is the result of 1.0 / 0.0.</source>
          <target state="translated">예를 들어, 이것은 1.0 / 0.0의 결과입니다.</target>
        </trans-unit>
        <trans-unit id="041a5dec481d6bf0724caeaa84bc135d7d9062d4" translate="yes" xml:space="preserve">
          <source>Format</source>
          <target state="translated">Format</target>
        </trans-unit>
        <trans-unit id="cec8c870b546c421e01961c0013a671c40c6e8a2" translate="yes" xml:space="preserve">
          <source>Format the date &lt;code&gt;d&lt;/code&gt; according to the format &lt;code&gt;f&lt;/code&gt;. The format is compatible with the &lt;code&gt;strftime&lt;/code&gt; standard format, except that there is no support in Flash and JS for day and months names (due to lack of proper internationalization API). On Haxe/Neko/Windows, some formats are not supported.</source>
          <target state="translated">형식 &lt;code&gt;f&lt;/code&gt; 에 따라 날짜 &lt;code&gt;d&lt;/code&gt; 를 형식화하십시오 . 이 형식은 적절한 국제화 API가 없기 때문에 일 및 월 이름에 대해 Flash 및 JS에서 지원되지 않는다는 점을 제외하고 &lt;code&gt;strftime&lt;/code&gt; 표준 형식 과 호환됩니다 . Haxe / Neko / Windows에서는 일부 형식이 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b6f9eb60c2c31ffe27453343bc4131d68e0af9fd" translate="yes" xml:space="preserve">
          <source>Formats &lt;code&gt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;&lt;code&gt;s&lt;/code&gt; using the usual interpolation rules.</source>
          <target state="translated">형식 &lt;code&gt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; &lt;code&gt;s&lt;/code&gt; 보통의 보간 규칙을 사용하여.</target>
        </trans-unit>
        <trans-unit id="f1e410ad1472b42cb42cc98962428637290b6706" translate="yes" xml:space="preserve">
          <source>Function</source>
          <target state="translated">Function</target>
        </trans-unit>
        <trans-unit id="04c5bdd595f13bb3daed512ae037d1fa7442cf85" translate="yes" xml:space="preserve">
          <source>Function(&lt;a href=&quot;../dynamic&quot;&gt;Dynamic&lt;/a&gt;)</source>
          <target state="translated">Function(&lt;a href=&quot;../dynamic&quot;&gt;Dynamic&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="ff905d0415b72cacc9044b1d0c15ac494008eadb" translate="yes" xml:space="preserve">
          <source>FunctionArg</source>
          <target state="translated">FunctionArg</target>
        </trans-unit>
        <trans-unit id="0bd8399d033e6e3c722f4542fb08418cc1cdabcb" translate="yes" xml:space="preserve">
          <source>FunctionArgument</source>
          <target state="translated">FunctionArgument</target>
        </trans-unit>
        <trans-unit id="d6f749c7ce583485f5de17eec1610c9d8e0a65f9" translate="yes" xml:space="preserve">
          <source>Functional fold on Iterable &lt;code&gt;it&lt;/code&gt;, using function &lt;code&gt;f&lt;/code&gt; with start argument &lt;code&gt;first&lt;/code&gt;.</source>
          <target state="translated">함수 인수는 시작 인수가 &lt;code&gt;first&lt;/code&gt; 함수 &lt;code&gt;f&lt;/code&gt; 를 사용하여 반복 가능 &lt;code&gt;it&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6fc5e5c60364ae81a00cd2de906c88f9aad88d96" translate="yes" xml:space="preserve">
          <source>GenericCell&amp;lt;T&amp;gt;</source>
          <target state="translated">GenericCell&amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="e956d7becbc817997c15d1620bbe4e9e59df3ca3" translate="yes" xml:space="preserve">
          <source>GenericStack&amp;lt;T&amp;gt;</source>
          <target state="translated">GenericStack&amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="43471c3afaf977dfc12af97c1a82892de4fb94e1" translate="yes" xml:space="preserve">
          <source>Get information about the call stack.</source>
          <target state="translated">호출 스택에 대한 정보를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="a455da17d8de7c3124e7c11b02fb09192a3017fe" translate="yes" xml:space="preserve">
          <source>Get the given attribute of an Element node. Returns &lt;code&gt;null&lt;/code&gt; if not found. Attributes are case-sensitive.</source>
          <target state="translated">지정된 Element 노드의 속성을 가져옵니다. 찾을 수 없으면 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 . 속성은 대소 문자를 구분합니다.</target>
        </trans-unit>
        <trans-unit id="c06b3a62280fc1a4c37fbc0b7eee4832a30cef09" translate="yes" xml:space="preserve">
          <source>Get the string representation of &lt;code&gt;&lt;a href=&quot;ctype#CType&quot;&gt;CType&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ctype#CType&quot;&gt;CType&lt;/a&gt;&lt;/code&gt; 의 문자열 표현을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="7279fecb37572d8cea3569f4b5097f556b1166de" translate="yes" xml:space="preserve">
          <source>Gets the type resolver of &lt;code&gt;this&lt;/code&gt; Unserializer instance.</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; Unserializer 인스턴스 의 형태 결정자를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="a56a1bcd19e8e53e270cc0ec4187052d833bb7ac" translate="yes" xml:space="preserve">
          <source>Getting Started With Haxe</source>
          <target state="translated">Haxe 시작하기</target>
        </trans-unit>
        <trans-unit id="f17d4a4d94b24a89d5fa83e7764a10b3df255bcf" translate="yes" xml:space="preserve">
          <source>Global replacements which are used across all Template instances. This has lower priority than the context argument of execute().</source>
          <target state="translated">모든 템플릿 인스턴스에서 사용되는 전역 대체. 이것은 execute ()의 컨텍스트 인수보다 우선 순위가 낮습니다.</target>
        </trans-unit>
        <trans-unit id="70f63386f973b279eb6c490ae7bc9c2d9be766c2" translate="yes" xml:space="preserve">
          <source>Hash methods for Hmac calculation.</source>
          <target state="translated">Hmac 계산을위한 해시 방법.</target>
        </trans-unit>
        <trans-unit id="707255749bd88894ac556bed03390afbf3391ab8" translate="yes" xml:space="preserve">
          <source>HashMap allows mapping of hashable objects to arbitrary values.</source>
          <target state="translated">HashMap을 사용하면 해시 가능한 객체를 임의의 값으로 매핑 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6c4ad095cdf4d18db142afb7c04cebd2a5678d4b" translate="yes" xml:space="preserve">
          <source>HashMap&amp;lt;K, V&amp;gt;(HashMapData&amp;lt;K, V&amp;gt;)</source>
          <target state="translated">HashMap &amp;lt;K, V&amp;gt; (HashMapData &amp;lt;K, V&amp;gt;)</target>
        </trans-unit>
        <trans-unit id="7080a108819410c77712d40c2ee8d140559d22a3" translate="yes" xml:space="preserve">
          <source>HashMethod</source>
          <target state="translated">HashMethod</target>
        </trans-unit>
        <trans-unit id="b86cc9f741a6ffb57c458f74200e50901a1d36b3" translate="yes" xml:space="preserve">
          <source>Haxe</source>
          <target state="translated">Haxe</target>
        </trans-unit>
        <trans-unit id="4c21330296650de2121bf2189b06abaa867d8619" translate="yes" xml:space="preserve">
          <source>Haxe API documentation</source>
          <target state="translated">Haxe API 문서</target>
        </trans-unit>
        <trans-unit id="176af15f18115d62ddf04045dad6e37cccba1f64" translate="yes" xml:space="preserve">
          <source>Haxe allows expressions in concrete type parameters, e.g. &lt;code&gt;new YourType&amp;lt;[&quot;hello&quot;, &quot;world&quot;]&amp;gt;&lt;/code&gt;. In that case the value is &lt;code&gt;TPExpr&lt;/code&gt; while in the normal case it's &lt;code&gt;TPType&lt;/code&gt;.</source>
          <target state="translated">Haxe는 구체적 유형 매개 변수 (예 : &lt;code&gt;new YourType&amp;lt;[&quot;hello&quot;, &quot;world&quot;]&amp;gt;&lt;/code&gt; 표현식을 허용합니다 . 이 경우 값은 &lt;code&gt;TPExpr&lt;/code&gt; 이고 일반적인 경우 &lt;code&gt;TPType&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="00b7e20d3eefd575d806b00d65aa52943b79cc61" translate="yes" xml:space="preserve">
          <source>Haxe is an open source toolkit based on a modern, high level, strictly typed programming language, a cross-compiler, a complete cross-platform standard library and ways to access each platform's native capabilities.</source>
          <target state="translated">Haxe는 현대적이고 수준 높은 엄격하게 프로그래밍 된 언어, 크로스 컴파일러, 완벽한 크로스 플랫폼 표준 라이브러리 및 각 플랫폼의 고유 기능에 액세스하는 방법을 기반으로하는 오픈 소스 툴킷입니다.</target>
        </trans-unit>
        <trans-unit id="0e33c1cffe6d43be4990ba443831462daa6af5e1" translate="yes" xml:space="preserve">
          <source>Helper for parsing to &lt;code&gt;&lt;a href=&quot;int64#Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; instances.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;int64#Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; 인스턴스 구문 분석을위한 도우미입니다 .</target>
        </trans-unit>
        <trans-unit id="8a45f22cfea10e03e03394133072c0b7335ba30d" translate="yes" xml:space="preserve">
          <source>Helper that converts between floating point and binary representation. Always works in low-endian encoding.</source>
          <target state="translated">부동 소수점과 이진 표현을 변환하는 도우미입니다. 항상 낮은 엔디안 인코딩에서 작동합니다.</target>
        </trans-unit>
        <trans-unit id="cc4a71065ff8ca97a2cf841b164f030229d81b91" translate="yes" xml:space="preserve">
          <source>Hmac</source>
          <target state="translated">Hmac</target>
        </trans-unit>
        <trans-unit id="fb5c6c62bf80b8c73f40fbbb8ffdc8cf06e4cb8f" translate="yes" xml:space="preserve">
          <source>Http</source>
          <target state="translated">Http</target>
        </trans-unit>
        <trans-unit id="d3338e7fbe2c6502756f9b7b59d035600e1674a0" translate="yes" xml:space="preserve">
          <source>Http.PROXY()</source>
          <target state="translated">Http.PROXY()</target>
        </trans-unit>
        <trans-unit id="f3ec7b5156d2a4f2b727af8afa30bd3cbb498e58" translate="yes" xml:space="preserve">
          <source>Http.addHeader()</source>
          <target state="translated">Http.addHeader()</target>
        </trans-unit>
        <trans-unit id="636daf3c41b834fdcfe7115f0c3fd7fd0ceb7dc6" translate="yes" xml:space="preserve">
          <source>Http.addParameter()</source>
          <target state="translated">Http.addParameter()</target>
        </trans-unit>
        <trans-unit id="dd448fc0abdb47273d0068bf0394281e0090b3b3" translate="yes" xml:space="preserve">
          <source>Http.async</source>
          <target state="translated">Http.async</target>
        </trans-unit>
        <trans-unit id="c8d33ad5979a3bf0774d63f7aa1f02b09114e70a" translate="yes" xml:space="preserve">
          <source>Http.cancel()</source>
          <target state="translated">Http.cancel()</target>
        </trans-unit>
        <trans-unit id="84aab51de8e50ac0b3093938c77b7cf3a2f33a58" translate="yes" xml:space="preserve">
          <source>Http.cnxTimeout</source>
          <target state="translated">Http.cnxTimeout</target>
        </trans-unit>
        <trans-unit id="572f57a49535d0d4de89283e5e6548051d589794" translate="yes" xml:space="preserve">
          <source>Http.customRequest()</source>
          <target state="translated">Http.customRequest()</target>
        </trans-unit>
        <trans-unit id="034573f921ea747f075b3c9d11003f8b0cecba62" translate="yes" xml:space="preserve">
          <source>Http.fileTransfer()</source>
          <target state="translated">Http.fileTransfer()</target>
        </trans-unit>
        <trans-unit id="01a7f413f46e50ff3af80726561ffb63649a520c" translate="yes" xml:space="preserve">
          <source>Http.fileTransfert()</source>
          <target state="translated">Http.fileTransfert()</target>
        </trans-unit>
        <trans-unit id="df7cb0b9d715e81687e54444246779af71b7607d" translate="yes" xml:space="preserve">
          <source>Http.noShutdown</source>
          <target state="translated">Http.noShutdown</target>
        </trans-unit>
        <trans-unit id="8d14d5456de4860b2de8e27da5dce29ef43c179b" translate="yes" xml:space="preserve">
          <source>Http.onData()</source>
          <target state="translated">Http.onData()</target>
        </trans-unit>
        <trans-unit id="81c10d0e486a278414e4807a0f04ea0f5adaa406" translate="yes" xml:space="preserve">
          <source>Http.onError()</source>
          <target state="translated">Http.onError()</target>
        </trans-unit>
        <trans-unit id="6a063785dc293083c815930c52114f2a36f0531f" translate="yes" xml:space="preserve">
          <source>Http.onStatus()</source>
          <target state="translated">Http.onStatus()</target>
        </trans-unit>
        <trans-unit id="fe7574d93e5796301a7cffc96418a85034562ac9" translate="yes" xml:space="preserve">
          <source>Http.request()</source>
          <target state="translated">Http.request()</target>
        </trans-unit>
        <trans-unit id="6fe67e9f4e207f4591e91c77a9adedbd1dccf4b8" translate="yes" xml:space="preserve">
          <source>Http.requestUrl()</source>
          <target state="translated">Http.requestUrl()</target>
        </trans-unit>
        <trans-unit id="8c70ef6e83aab6a980181fea8b56121439ee0f5b" translate="yes" xml:space="preserve">
          <source>Http.responseData</source>
          <target state="translated">Http.responseData</target>
        </trans-unit>
        <trans-unit id="89352962babe06cd9a4370a158dd75c1d27951fc" translate="yes" xml:space="preserve">
          <source>Http.responseHeaders</source>
          <target state="translated">Http.responseHeaders</target>
        </trans-unit>
        <trans-unit id="6781d7658e083dbcc64a637deb4836e135bfaf14" translate="yes" xml:space="preserve">
          <source>Http.setHeader()</source>
          <target state="translated">Http.setHeader()</target>
        </trans-unit>
        <trans-unit id="bfb852210747934c5855061304958945b8be21cf" translate="yes" xml:space="preserve">
          <source>Http.setParameter()</source>
          <target state="translated">Http.setParameter()</target>
        </trans-unit>
        <trans-unit id="9387dddd74cb837e253896fe2efe1e570a4f5d25" translate="yes" xml:space="preserve">
          <source>Http.setPostData()</source>
          <target state="translated">Http.setPostData()</target>
        </trans-unit>
        <trans-unit id="f777b3b2b8e4c1418511580ff978cd326aac6964" translate="yes" xml:space="preserve">
          <source>Http.url</source>
          <target state="translated">Http.url</target>
        </trans-unit>
        <trans-unit id="fcbf81a49e390dd267df5b8ab33c44fd37ffe5f6" translate="yes" xml:space="preserve">
          <source>Http.withCredentials</source>
          <target state="translated">Http.withCredentials</target>
        </trans-unit>
        <trans-unit id="5862000ccb06ed804f78c1ec45d448ec42c9d285" translate="yes" xml:space="preserve">
          <source>HttpAsyncConnection</source>
          <target state="translated">HttpAsyncConnection</target>
        </trans-unit>
        <trans-unit id="88ea47cf9ef65e511a762177233f48c303b521c9" translate="yes" xml:space="preserve">
          <source>HttpConnection</source>
          <target state="translated">HttpConnection</target>
        </trans-unit>
        <trans-unit id="94b5e7b33a47805b78869f5cb19ae5cdbff8727e" translate="yes" xml:space="preserve">
          <source>HuffTools</source>
          <target state="translated">HuffTools</target>
        </trans-unit>
        <trans-unit id="b04107cd15a49148e2dc5aa32a53443db467af7d" translate="yes" xml:space="preserve">
          <source>Huffman</source>
          <target state="translated">Huffman</target>
        </trans-unit>
        <trans-unit id="fb3180110bbbfa946286f3d8f10fe4b56e681d9c" translate="yes" xml:space="preserve">
          <source>IMap</source>
          <target state="translated">IMap</target>
        </trans-unit>
        <trans-unit id="481642d0c5bce74db58aa0880d8ef3c7ea40f939" translate="yes" xml:space="preserve">
          <source>IMap&amp;lt;K, V&amp;gt;</source>
          <target state="translated">IMap &amp;lt;K, V&amp;gt;</target>
        </trans-unit>
        <trans-unit id="80e4d6b5648d56671ba8087cb6bacfa43f97dae8" translate="yes" xml:space="preserve">
          <source>IMap.exists()</source>
          <target state="translated">IMap.exists()</target>
        </trans-unit>
        <trans-unit id="cb9d22416c6630b232f25c45a11ae523663b41c2" translate="yes" xml:space="preserve">
          <source>IMap.get()</source>
          <target state="translated">IMap.get()</target>
        </trans-unit>
        <trans-unit id="2a2c38f8c2a46983a2b72cedf6f241fe0d9d8ea9" translate="yes" xml:space="preserve">
          <source>IMap.iterator()</source>
          <target state="translated">IMap.iterator()</target>
        </trans-unit>
        <trans-unit id="8cac7973ca46217f3101eb7a14bb3e313c3bbb3a" translate="yes" xml:space="preserve">
          <source>IMap.keys()</source>
          <target state="translated">IMap.keys()</target>
        </trans-unit>
        <trans-unit id="9f466085c74e3279872913d30c9681bc76a6570a" translate="yes" xml:space="preserve">
          <source>IMap.remove()</source>
          <target state="translated">IMap.remove()</target>
        </trans-unit>
        <trans-unit id="f4160acf245281dfaa31976d780afbe4026c3ead" translate="yes" xml:space="preserve">
          <source>IMap.set()</source>
          <target state="translated">IMap.set()</target>
        </trans-unit>
        <trans-unit id="53e8a0feeded5b3118ee07c2a58a517a7de889bd" translate="yes" xml:space="preserve">
          <source>IMap.toString()</source>
          <target state="translated">IMap.toString()</target>
        </trans-unit>
        <trans-unit id="095392f72b24b939ad95aef01a89ffc62a3a8180" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt;, big-endian is used, otherwise &lt;code&gt;little-endian&lt;/code&gt; is used.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt; 인 경우 big-endian이 사용되고 그렇지 않으면 &lt;code&gt;little-endian&lt;/code&gt; 이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="5442c2278868e2938750c103b799d9812ac4dc23" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are null, the result is 0. If only one of them is null, the result is unspecified.</source>
          <target state="translated">경우 및 &lt;code&gt;b&lt;/code&gt; 널 (null)이며, 그 결과, 그 중 하나가 NULL 인 경우, 결과는 불특정은 0이다. &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4e6008fe52b0c70a737a17ff9e2d0c4c94e0e9fb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;a&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, the result is unspecified.</source>
          <target state="translated">경우 &lt;code&gt;a&lt;/code&gt; 이다 &lt;code&gt;null&lt;/code&gt; , 결과는 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="89d2b6bf49b8d9a3a5948ae3e1ba38250cc98c25" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;a&lt;/code&gt; is less than &lt;code&gt;b&lt;/code&gt;, the result is negative. If &lt;code&gt;b&lt;/code&gt; is less than &lt;code&gt;a&lt;/code&gt;, the result is positive. If &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are equal, the result is 0.</source>
          <target state="translated">경우 &lt;code&gt;a&lt;/code&gt; 미만인 &lt;code&gt;b&lt;/code&gt; , 결과는 네가티브이다. 경우 &lt;code&gt;b&lt;/code&gt; 보다 작은 결과는 긍정적이다. 경우 와 &lt;code&gt;b&lt;/code&gt; 동일하고, 그 결과는 0이다. &lt;code&gt;a&lt;/code&gt; &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="17b119e45f77af8ee02a5f995a0db218d2f6b08d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;a&lt;/code&gt; is the empty Array &lt;code&gt;[]&lt;/code&gt;, a copy of &lt;code&gt;this&lt;/code&gt; Array is returned.</source>
          <target state="translated">경우 &lt;code&gt;a&lt;/code&gt; 빈 배열은 &lt;code&gt;[]&lt;/code&gt; 의 사본 &lt;code&gt;this&lt;/code&gt; 배열이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="764a63dc785e94c27378fab49a19b97c8cddd465" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;a&lt;/code&gt; or &lt;code&gt;b&lt;/code&gt; are &lt;code&gt;NaN&lt;/code&gt;, the result is &lt;code&gt;NaN&lt;/code&gt;. If &lt;code&gt;a&lt;/code&gt; or &lt;code&gt;b&lt;/code&gt; are &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt;, the result is &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt;. If &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt;, the result is &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt;.</source>
          <target state="translated">경우 또는 &lt;code&gt;b&lt;/code&gt; 있다 &lt;code&gt;NaN&lt;/code&gt; 이를 , 결과는 &lt;code&gt;NaN&lt;/code&gt; 이 . 경우 또는 &lt;code&gt;b&lt;/code&gt; 있다 &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt; 결과이다 &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt; . 경우 및 &lt;code&gt;b&lt;/code&gt; 있다 &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt; 을 , 결과는 &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt; . &lt;code&gt;a&lt;/code&gt; &lt;code&gt;a&lt;/code&gt; &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9b8480ffbe69ea84483fa92de20b463c64ae1107" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;a&lt;/code&gt; or &lt;code&gt;b&lt;/code&gt; are &lt;code&gt;NaN&lt;/code&gt;, the result is &lt;code&gt;NaN&lt;/code&gt;. If &lt;code&gt;a&lt;/code&gt; or &lt;code&gt;b&lt;/code&gt; are &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt;, the result is &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt;. If &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt;, the result is &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt;.</source>
          <target state="translated">경우 또는 &lt;code&gt;b&lt;/code&gt; 있다 &lt;code&gt;NaN&lt;/code&gt; 이를 , 결과는 &lt;code&gt;NaN&lt;/code&gt; 이 . 경우 또는 &lt;code&gt;b&lt;/code&gt; 있다 &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt; 을 , 결과는 &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt; . 경우 및 &lt;code&gt;b&lt;/code&gt; 있다 &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt; 결과이다 &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt; . &lt;code&gt;a&lt;/code&gt; &lt;code&gt;a&lt;/code&gt; &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="380f0d19edd9607c0b82bca8005a8b9b544e9601" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;a&lt;/code&gt; or &lt;code&gt;b&lt;/code&gt; are &lt;code&gt;null&lt;/code&gt;, the result is unspecified.</source>
          <target state="translated">경우 또는 &lt;code&gt;b&lt;/code&gt; 있는 &lt;code&gt;null&lt;/code&gt; 결과는 불특정이다. &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0daa590138334f95dea0bb490d5db9a66a068f6b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;a&lt;/code&gt; or &lt;code&gt;b&lt;/code&gt; are null, the result is unspecified.</source>
          <target state="translated">경우 또는 &lt;code&gt;b&lt;/code&gt; 널 (null)이며, 그 결과는 지정되지 않는다. &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="593b7283525e77610bf630a51725331540ae951a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;a&lt;/code&gt; or &lt;code&gt;cmp&lt;/code&gt; are null, the result is unspecified.</source>
          <target state="translated">경우 또는 &lt;code&gt;cmp&lt;/code&gt; null의 결과는 지정되지 않습니다. &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9ca5948f43df4293bdbfc2f02d182ff4637280d4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;array&lt;/code&gt; is null, the result is unspecified.</source>
          <target state="translated">경우 &lt;code&gt;array&lt;/code&gt; NULL의 결과는 불특정이다.</target>
        </trans-unit>
        <trans-unit id="09bcd259f9fb663707cf52e33c99c934915ee6a4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;by&lt;/code&gt; contains &lt;code&gt;$1&lt;/code&gt; to &lt;code&gt;$9&lt;/code&gt;, the digit corresponds to number of a matched sub-group and its value is used instead. If no such sub-group exists, the replacement is unspecified. The string &lt;code&gt;$$&lt;/code&gt; becomes &lt;code&gt;$&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;by&lt;/code&gt; 포함되어 &lt;code&gt;$1&lt;/code&gt; 에 &lt;code&gt;$9&lt;/code&gt; , 디지트 일치하는 서브 그룹의 개수에 대응하고, 그것의 값이 대신 사용된다. 그러한 하위 그룹이 존재하지 않으면 교체는 지정되지 않습니다. 문자열 &lt;code&gt;$$&lt;/code&gt; 는 &lt;code&gt;$&lt;/code&gt; 가 됩니다.</target>
        </trans-unit>
        <trans-unit id="8b869a484cb4b9785f3df7452da79ad302197065" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;c.length&lt;/code&gt; is 1, the resulting String length is exactly &lt;code&gt;l&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;c.length&lt;/code&gt; 은 1, 결과 문자열의 길이는 정확히 &lt;code&gt;l&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9eee1d7d5826a3abea015aa104858c3252d51ed0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;c1&lt;/code&gt; or &lt;code&gt;c2&lt;/code&gt; are &lt;code&gt;null&lt;/code&gt;, the result is unspecified.</source>
          <target state="translated">경우 &lt;code&gt;c1&lt;/code&gt; 또는 &lt;code&gt;c2&lt;/code&gt; 있는 &lt;code&gt;null&lt;/code&gt; 결과는 불특정이다.</target>
        </trans-unit>
        <trans-unit id="39ffe50308ab06c7a6b04bb859f4305d5c79e858" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;c&lt;/code&gt; has no package, the class name is returned.</source>
          <target state="translated">경우 &lt;code&gt;c&lt;/code&gt; 어떤 패키지가없는 클래스 이름이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="40a947237916bc5d22367684896f83febd5c11f1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;c&lt;/code&gt; has no runtime type information, e.g. because no &lt;code&gt;@:rtti@&lt;/code&gt; was added, &lt;code&gt;null&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;c&lt;/code&gt; 에 런타임 유형 정보가없는 경우 ( 예 &lt;code&gt;@:rtti@&lt;/code&gt; 가 추가 되지 않아서) 는 &lt;code&gt;null&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="5f34e2beeb4b595e343fe346463bb6e9cd980b7d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;c&lt;/code&gt; has no super class, null is returned.</source>
          <target state="translated">경우 &lt;code&gt;c&lt;/code&gt; 더 슈퍼 클래스가 없습니다, null가 돌려 주어집니다.</target>
        </trans-unit>
        <trans-unit id="2135b5c37dd513dfa232c20674707f8f1a1d7da8" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;c&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, the result is unspecified.</source>
          <target state="translated">경우 &lt;code&gt;c&lt;/code&gt; 있다 &lt;code&gt;null&lt;/code&gt; , 결과는 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="449a95450c00cb7433caa66eed42b05d2994d9fc" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;c&lt;/code&gt; is inside a package, the package structure is returned dot- separated, with another dot separating the class name: &lt;code&gt;pack1.pack2.(...).packN.ClassName&lt;/code&gt; If &lt;code&gt;c&lt;/code&gt; is a sub-type of a Haxe module, that module is not part of the package structure.</source>
          <target state="translated">경우 &lt;code&gt;c&lt;/code&gt; : 패키지 내부에, 상기 패키지 구조는 클래스 이름 분리 점 서로 분리 도트 형 반환된다 &lt;code&gt;pack1.pack2.(...).packN.ClassName&lt;/code&gt; 만약에 &lt;code&gt;c&lt;/code&gt; 있다고하는 Haxe 모듈의 서브 타입 모듈은 패키지 구조의 일부가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="52aa70545d54db8f1788ac38807f7e25e29a8ac8" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;c&lt;/code&gt; is negative or has another invalid value, the result is unspecified.</source>
          <target state="translated">경우 &lt;code&gt;c&lt;/code&gt; 음수 또는 다른 잘못된 값이 있습니다, 그 결과는 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="94720d1c9ebfcfed65765af9c85387eaf94aec47" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;c&lt;/code&gt; is null, the result is null.</source>
          <target state="translated">경우 &lt;code&gt;c&lt;/code&gt; 널 (null)이며, 결과는 null입니다.</target>
        </trans-unit>
        <trans-unit id="1ffd90be209568bfa86486c4a24a51a62f0b56a7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;c&lt;/code&gt; is null, the result is unspecified.</source>
          <target state="translated">경우 &lt;code&gt;c&lt;/code&gt; 널 (null)이며, 결과는 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5f55dc64b9918a7502c92c080b9c9fe80f158457" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;c&lt;/code&gt; is the empty String &lt;code&gt;&quot;&quot;&lt;/code&gt; or if &lt;code&gt;l&lt;/code&gt; does not exceed &lt;code&gt;s.length&lt;/code&gt;, &lt;code&gt;s&lt;/code&gt; is returned unchanged.</source>
          <target state="translated">경우 &lt;code&gt;c&lt;/code&gt; 빈 문자열은 &lt;code&gt;&quot;&quot;&lt;/code&gt; 경우 또는 &lt;code&gt;l&lt;/code&gt; 넘지 않는 &lt;code&gt;s.length&lt;/code&gt; 를 , &lt;code&gt;s&lt;/code&gt; 의 변화가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="590f4f6f89626f839260ec96811cd100cde0e6bc" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;cl&lt;/code&gt; is null, the result is unspecified.</source>
          <target state="translated">경우 &lt;code&gt;cl&lt;/code&gt; 널 (null)이며, 결과는 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="44144c8eb0280cf8a289956a8e2e3e714b86834a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;cl&lt;/code&gt; or &lt;code&gt;args&lt;/code&gt; are null, or if the number of elements in &lt;code&gt;args&lt;/code&gt; does not match the expected number of constructor arguments, or if any argument has an invalid type, or if &lt;code&gt;cl&lt;/code&gt; has no own constructor, the result is unspecified.</source>
          <target state="translated">경우 &lt;code&gt;cl&lt;/code&gt; 또는 &lt;code&gt;args&lt;/code&gt; 널 (null), 또는의 요소 수 있다면 &lt;code&gt;args&lt;/code&gt; 생성자 인자의 예상 수와 일치하지 않거나 인수가 유효하지 않은 유형이 경우, 또는 경우 &lt;code&gt;cl&lt;/code&gt; 더 자신의 생성자가 없습니다, 결과가 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8629c2738edbabc02ddb9ccf0f019764e85e8923" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;code&lt;/code&gt; is negative or has another invalid value, the result is unspecified.</source>
          <target state="translated">&lt;code&gt;code&lt;/code&gt; 가 음수이거나 유효하지 않은 다른 값이 있으면 결과가 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="16c58e30fa83d33aa4bf0cd2e5a94fcb58153910" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;context&lt;/code&gt; has a field 'name', its value replaces all occurrences of ::name:: in the Template. Otherwise Template.globals is checked instead, If 'name' is not a field of that either, ::name:: is replaced with null.</source>
          <target state="translated">&lt;code&gt;context&lt;/code&gt; 에 'name'필드가있는 경우 해당 값은 템플리트에서 모든 :: name ::을 대체합니다. 그렇지 않으면 Template.globals가 대신 검사됩니다. 'name'이 해당 필드가 아니면 :: name ::이 null로 바뀝니다.</target>
        </trans-unit>
        <trans-unit id="27d12e20abc5b1a3ebe4451b852d1c2771bd30e5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;context&lt;/code&gt; is null, the result is unspecified. If &lt;code&gt;macros&lt;/code&gt; is null, no macros are used.</source>
          <target state="translated">경우 &lt;code&gt;context&lt;/code&gt; 널 (null)이며, 결과는 지정되지 않습니다. 경우 &lt;code&gt;macros&lt;/code&gt; null의 경우, 어떤 매크로는 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="39dac658469a7f86a83b888886357a9f86d5fa64" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;data&lt;/code&gt; is null, the corresponding Vector is also &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;data&lt;/code&gt; 널 (null)이 해당 벡터도 &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="00e43c86c65b070d1c2b7d607cc1b497a5b4c5e6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;data&lt;/code&gt; is null, the post data is considered to be absent.</source>
          <target state="translated">경우 &lt;code&gt;data&lt;/code&gt; null의 경우, 포스트 데이터가없는 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="936c10c039b41a842da9f99b441be45332251cca" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;delimiter&lt;/code&gt; is not found within &lt;code&gt;this&lt;/code&gt; String, the result is an Array with one element, which equals &lt;code&gt;this&lt;/code&gt; String.</source>
          <target state="translated">경우 &lt;code&gt;delimiter&lt;/code&gt; 내에서 발견되지 않은 &lt;code&gt;this&lt;/code&gt; 문자열, 결과는 동일 하나 개의 요소를 가진 배열 &lt;code&gt;this&lt;/code&gt; 문자열.</target>
        </trans-unit>
        <trans-unit id="dc7a7433c6571eabad9dcfa7800ca5574560d394" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;delimiter&lt;/code&gt; is not found within &lt;code&gt;this&lt;/code&gt; Ucs2, the result is an Array with one element, which equals &lt;code&gt;this&lt;/code&gt; Ucs2.</source>
          <target state="translated">경우 &lt;code&gt;delimiter&lt;/code&gt; 내에서 발견되지 않는 &lt;code&gt;this&lt;/code&gt; UCS2, 결과는 동일 하나 개의 요소를 가진 배열 &lt;code&gt;this&lt;/code&gt; UCS2는.</target>
        </trans-unit>
        <trans-unit id="b108cc0cf098db3814d96feaea257957d822b64f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;delimiter&lt;/code&gt; is null, the result is unspecified.</source>
          <target state="translated">경우 &lt;code&gt;delimiter&lt;/code&gt; 널 (null)이며, 결과는 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d2a1381e2a539eb10ad72d75baa8c803054bcb28" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;delimiter&lt;/code&gt; is the empty String &lt;code&gt;&quot;&quot;&lt;/code&gt;, &lt;code&gt;this&lt;/code&gt; String is split into an Array of &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; elements, where the elements correspond to the characters of &lt;code&gt;this&lt;/code&gt; String.</source>
          <target state="translated">경우 &lt;code&gt;delimiter&lt;/code&gt; 빈 문자열은 &lt;code&gt;&quot;&quot;&lt;/code&gt; , &lt;code&gt;this&lt;/code&gt; 문자열의 배열로 분할 &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; 요소. 여기서 요소는 &lt;code&gt;this&lt;/code&gt; 문자열 의 문자에 해당합니다 .</target>
        </trans-unit>
        <trans-unit id="696972aabdbf8085b365c74e14c14133eda3a0a6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;delimiter&lt;/code&gt; is the empty Ucs2 &quot;&quot;, &lt;code&gt;this&lt;/code&gt; Ucs2 is split into an Array of &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; elements, where the elements correspond to the characters of &lt;code&gt;this&lt;/code&gt; Ucs2.</source>
          <target state="translated">경우 &lt;code&gt;delimiter&lt;/code&gt; 빈 UCS2 &quot;&quot;입니다, &lt;code&gt;this&lt;/code&gt; UCS2는의 배열로 분할 &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; 요소. 요소 &lt;code&gt;this&lt;/code&gt; Ucs2 의 문자에 해당합니다 .</target>
        </trans-unit>
        <trans-unit id="94c48c165d0fcd308d3aac185e8fe5942a1a84cc" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;digits&lt;/code&gt; is specified, the resulting String is padded with &quot;0&quot; until its &lt;code&gt;length&lt;/code&gt; equals &lt;code&gt;digits&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;digits&lt;/code&gt; 지정되어, 결과 문자열은 때까지 &quot;0&quot;으로 채워집니다 &lt;code&gt;length&lt;/code&gt; 같다 &lt;code&gt;digits&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b36b642d2623f4376c60fe859a2a61eba652018f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;e&lt;/code&gt; has no arguments, the result is &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;e&lt;/code&gt; 에 인수가없는 경우 결과는 &lt;code&gt;[]&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e47cc83b2687ced79bdca0c09ea3aed6f0c7df76" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;e&lt;/code&gt; has no arguments, the result is [].</source>
          <target state="translated">경우 &lt;code&gt;e&lt;/code&gt; 는 인수가없고, 그 결과는 []이다.</target>
        </trans-unit>
        <trans-unit id="d8373ffebb40c59d131b47234ade274eed312288" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;e&lt;/code&gt; has no package, the enum name is returned.</source>
          <target state="translated">경우 &lt;code&gt;e&lt;/code&gt; 어떤 패키지가 없습니다, 열거 이름이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="a3f70b694e2dd046d8174779bcd7cda5b5ebf0d9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;e&lt;/code&gt; has no sub-expressions, this operation has no effect.</source>
          <target state="translated">경우 &lt;code&gt;e&lt;/code&gt; 더 하위 표현이 없습니다,이 작업은 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="0183e9656d2e9712fef3ad8eff100453a32d5845" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;e&lt;/code&gt; has no sub-expressions, this operation returns &lt;code&gt;e&lt;/code&gt; unchanged.</source>
          <target state="translated">경우 &lt;code&gt;e&lt;/code&gt; 더 하위 표현이 없습니다,이 작업의 반환 &lt;code&gt;e&lt;/code&gt; 변경.</target>
        </trans-unit>
        <trans-unit id="d10292cf787c4bc52b5c4783b29b39d6f85560e9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;e&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, the result is unspecified.</source>
          <target state="translated">경우 &lt;code&gt;e&lt;/code&gt; 이다 &lt;code&gt;null&lt;/code&gt; , 결과는 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="76f46d73052dda4fdaffae44fab660714b4855ad" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;e&lt;/code&gt; is a sub-type of a Haxe module, that module is not part of the package structure.</source>
          <target state="translated">경우 &lt;code&gt;e&lt;/code&gt; 는 Haxe 모듈의 서브 타입이며, 그 모듈 패키지 구조의 일부가 아니다.</target>
        </trans-unit>
        <trans-unit id="3832534a5d338e478d4c76ee598075b0e41ae77c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;e&lt;/code&gt; is inside a package, the package structure is returned dot- separated, with another dot separating the enum name:</source>
          <target state="translated">&lt;code&gt;e&lt;/code&gt; 가 패키지 안에 있으면 패키지 구조는 점으로 구분되어 반환되며 다른 점은 열거 형 이름을 구분합니다.</target>
        </trans-unit>
        <trans-unit id="3a581c89b5a514f4264126d59e564dcda9bab84b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;e&lt;/code&gt; is inside a package, the package structure is returned dot- separated, with another dot separating the enum name: &lt;code&gt;pack1.pack2.(...).packN.EnumName&lt;/code&gt; If &lt;code&gt;e&lt;/code&gt; is a sub-type of a Haxe module, that module is not part of the package structure.</source>
          <target state="translated">경우 &lt;code&gt;e&lt;/code&gt; 는 : 패키지 내부에, 상기 패키지 구조는 서로 열거 이름 분리 도트 분리 도트 형 반환된다 &lt;code&gt;pack1.pack2.(...).packN.EnumName&lt;/code&gt; 경우에 &lt;code&gt;e&lt;/code&gt; 있는지하는 Haxe 모듈의 서브 타입 모듈은 패키지 구조의 일부가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="f5ed824ac64c3ad8d3b03a2002712e2c06282b6d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;e&lt;/code&gt; is null, the result is unspecified.</source>
          <target state="translated">경우 &lt;code&gt;e&lt;/code&gt; 널 (null)이며, 결과는 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="891924885c6d7a50d6208c20653653e7ee25dcb9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;e&lt;/code&gt; or &lt;code&gt;constr&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, or if enum &lt;code&gt;e&lt;/code&gt; has no constructor named &lt;code&gt;constr&lt;/code&gt;, or if the number of elements in &lt;code&gt;params&lt;/code&gt; does not match the expected number of constructor arguments, or if any argument has an invalid type, the result is unspecified.</source>
          <target state="translated">경우 &lt;code&gt;e&lt;/code&gt; 또는 &lt;code&gt;constr&lt;/code&gt; 이다 &lt;code&gt;null&lt;/code&gt; , 또는 열거 경우 &lt;code&gt;e&lt;/code&gt; 생성자의 이름이 없습니다 &lt;code&gt;constr&lt;/code&gt; , 또는 요소의 수 경우 &lt;code&gt;params&lt;/code&gt; 생성자 인자의 예상 수와 일치하지 않거나 인수가 유효하지 않은 유형이있는 경우, 결과가 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5bfd6d59118a5b5969007608871f2804ab604aa2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;e&lt;/code&gt; or &lt;code&gt;constr&lt;/code&gt; is null, or if enum &lt;code&gt;e&lt;/code&gt; has no constructor named &lt;code&gt;constr&lt;/code&gt;, or if the number of elements in &lt;code&gt;params&lt;/code&gt; does not match the expected number of constructor arguments, or if any argument has an invalid type, the result is unspecified.</source>
          <target state="translated">경우 &lt;code&gt;e&lt;/code&gt; 또는 &lt;code&gt;constr&lt;/code&gt; null의 경우, 또는 열거 경우 &lt;code&gt;e&lt;/code&gt; 생성자의 이름이 없습니다 &lt;code&gt;constr&lt;/code&gt; , 또는 요소의 수 경우 &lt;code&gt;params&lt;/code&gt; 생성자 인자의 예상 수와 일치하지 않거나 인수가 유효하지 않은 유형이있는 경우, 결과가 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d622ca3d6d06ff225dc253b054d15e87cff812c5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;e&lt;/code&gt; or &lt;code&gt;index&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, or if enum &lt;code&gt;e&lt;/code&gt; has no constructor corresponding to index &lt;code&gt;index&lt;/code&gt;, or if the number of elements in &lt;code&gt;params&lt;/code&gt; does not match the expected number of constructor arguments, or if any argument has an invalid type, the result is unspecified.</source>
          <target state="translated">경우 &lt;code&gt;e&lt;/code&gt; 또는 &lt;code&gt;index&lt;/code&gt; 입니다 &lt;code&gt;null&lt;/code&gt; , 또는 열거 경우 &lt;code&gt;e&lt;/code&gt; 인덱스에 해당하는 생성자가없는 &lt;code&gt;index&lt;/code&gt; 의 요소 수있는 경우, 또는 &lt;code&gt;params&lt;/code&gt; 생성자 인자의 예상 수와 일치하지 않는 인수가 유효하지 않은 유형이있는 경우, 또는, 결과는 지정되지 .</target>
        </trans-unit>
        <trans-unit id="6974c02c56e8e1da07b0fae15f33a185fcb3781a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;end&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, the result is unspecified.</source>
          <target state="translated">하면 &lt;code&gt;end&lt;/code&gt; 입니다 &lt;code&gt;null&lt;/code&gt; , 결과는 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c49e76d161c87a565c811e117f1374f4190e4881" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;end&lt;/code&gt; is omitted or exceeds &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;&lt;/code&gt;, it defaults to the end of &lt;code&gt;this&lt;/code&gt; Array.</source>
          <target state="translated">경우 &lt;code&gt;end&lt;/code&gt; 생략되거나 초과되는 &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; 이면 &lt;code&gt;this&lt;/code&gt; 배열 의 끝 이 기본값 입니다.</target>
        </trans-unit>
        <trans-unit id="6da48888b5afd324baf600f98e5f29cf6fe80070" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;end&lt;/code&gt; is the empty String &lt;code&gt;&quot;&quot;&lt;/code&gt;, the result is true.</source>
          <target state="translated">경우 &lt;code&gt;end&lt;/code&gt; 빈 문자열은 &lt;code&gt;&quot;&quot;&lt;/code&gt; 그 결과는 true입니다.</target>
        </trans-unit>
        <trans-unit id="762b081fc6c875beea54b2ab96662dede4ac93f5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;f1&lt;/code&gt; or &lt;code&gt;f2&lt;/code&gt; are &lt;code&gt;null&lt;/code&gt;, the result is unspecified.</source>
          <target state="translated">경우 &lt;code&gt;f1&lt;/code&gt; 또는 &lt;code&gt;f2&lt;/code&gt; 있는 &lt;code&gt;null&lt;/code&gt; 결과는 불특정이다.</target>
        </trans-unit>
        <trans-unit id="de294e924c56896055e8904836428320e7aa9334" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;f1&lt;/code&gt; or &lt;code&gt;f2&lt;/code&gt; are not functions, the result is unspecified.</source>
          <target state="translated">경우 &lt;code&gt;f1&lt;/code&gt; 또는 &lt;code&gt;f2&lt;/code&gt; 기능하지 않은 결과는 불특정이다.</target>
        </trans-unit>
        <trans-unit id="4fcfff251c596841beb84993cc0c60951cc1008a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;f&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt;, the result is &lt;code&gt;&lt;a href=&quot;bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt;, otherwise the result is &lt;code&gt;&lt;a href=&quot;bool&quot;&gt;false&lt;/a&gt;&lt;/code&gt;. In particular, both &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt; and &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt; are not considered &lt;code&gt;NaN&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;f&lt;/code&gt; 는 이다 &lt;code&gt;NaN&lt;/code&gt; 의 결과는 &lt;code&gt;&lt;a href=&quot;bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt; , 그렇지 않으면 결과가, &lt;code&gt;&lt;a href=&quot;bool&quot;&gt;false&lt;/a&gt;&lt;/code&gt; . 특히 &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt; 및 &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt; 는 &lt;code&gt;NaN&lt;/code&gt; 으로 간주되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="5dfbbec4f3cc6d44b3d81e0b3ac9c1e757a81384" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;f&lt;/code&gt; is &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt;, &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt; or &lt;code&gt;NaN&lt;/code&gt;, the result is &lt;code&gt;&lt;a href=&quot;bool&quot;&gt;false&lt;/a&gt;&lt;/code&gt;, otherwise the result is &lt;code&gt;&lt;a href=&quot;bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;f&lt;/code&gt; 는 이다 &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt; , &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt; 또는 &lt;code&gt;NaN&lt;/code&gt; 의 결과는 &lt;code&gt;&lt;a href=&quot;bool&quot;&gt;false&lt;/a&gt;&lt;/code&gt; 그렇지 않으면 결과는, &lt;code&gt;&lt;a href=&quot;bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2e8a8380ae6d45b42dfe7f6a3d0edfb1a534052f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;f&lt;/code&gt; is null, the result is false.</source>
          <target state="translated">경우 &lt;code&gt;f&lt;/code&gt; 는 NULL의 결과는 거짓이다.</target>
        </trans-unit>
        <trans-unit id="10947ea7b7bcd489e1b6b4bce3f9d054607eaec9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;f&lt;/code&gt; is null, the result is unspecified.</source>
          <target state="translated">경우 &lt;code&gt;f&lt;/code&gt; 는 NULL의 결과는 불특정이다.</target>
        </trans-unit>
        <trans-unit id="1e013e33e5abd7719d2658ecbbcf39abf3f6f5b9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;field&lt;/code&gt; is null, the result is unspecified.</source>
          <target state="translated">경우 &lt;code&gt;field&lt;/code&gt; 널 (null)이며, 결과는 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6c91898678f30d56247f64ad99d0e7733fc8dedb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;fromIndex&lt;/code&gt; is specified, it will be used as the starting index to search from, otherwise search starts with the last element index. If it is negative, it will be taken as the offset from the end of &lt;code&gt;this&lt;/code&gt; Array to compute the starting index. If given or computed starting index is greater than or equal to the length of &lt;code&gt;this&lt;/code&gt; Array, the whole array will be searched, if it is less than 0, the function returns -1.</source>
          <target state="translated">경우 &lt;code&gt;fromIndex&lt;/code&gt; 의가 지정되어, 그렇지 않으면 마지막 요소 인덱스 시작 검색에서 검색 할 시작 인덱스로 사용됩니다. 음수이면 시작 인덱스를 계산하기 &lt;code&gt;this&lt;/code&gt; Array 의 끝에서 오프셋으로 간주됩니다 . 주어진 또는 계산 된 시작 색인 &lt;code&gt;this&lt;/code&gt; 배열 의 길이보다 크거나 같으면 전체 배열이 검색되며, 0보다 작 으면 -1을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="f1383d3921e4730de865ad1b5e0c9ea02a88a2f8" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;fromIndex&lt;/code&gt; is specified, it will be used as the starting index to search from, otherwise search starts with zero index. If it is negative, it will be taken as the offset from the end of &lt;code&gt;this&lt;/code&gt; Array to compute the starting index. If given or computed starting index is less than 0, the whole array will be searched, if it is greater than or equal to the length of &lt;code&gt;this&lt;/code&gt; Array, the function returns -1.</source>
          <target state="translated">경우 &lt;code&gt;fromIndex&lt;/code&gt; 의가 지정되어, 그것은 그렇지 않으면 제로 인덱스로 시작 검색에서 검색 할 시작 인덱스로 사용됩니다. 음수이면 시작 인덱스를 계산하기 &lt;code&gt;this&lt;/code&gt; Array 의 끝에서 오프셋으로 간주됩니다 . 소정의 또는 산출하는 경우는보다 큰 또는의 길이와 동일한 경우 인덱스를 시작하면, 0보다 작은 전체 어레이가 검색 될 것이다 &lt;code&gt;this&lt;/code&gt; 배열 함수 반환 -1.</target>
        </trans-unit>
        <trans-unit id="c6cc2c4e95e539d860bdc779682a09ff084db1cf" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;header&lt;/code&gt; or &lt;code&gt;value&lt;/code&gt; are null, the result is unspecified.</source>
          <target state="translated">경우 &lt;code&gt;header&lt;/code&gt; 또는 &lt;code&gt;value&lt;/code&gt; null 인, 결과는 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="00754867241e27333a2293ef339fbc282cd39b1e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;index&lt;/code&gt; is negative or exceeds &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;null&lt;/code&gt; is returned.</source>
          <target state="translated">경우 &lt;code&gt;index&lt;/code&gt; 음수 또는 초과하는 &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; 이면 &lt;code&gt;null&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="0179e02d9df6e0d55b2dd411bf80958fbe357052" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;index&lt;/code&gt; is negative or exceeds &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;&lt;/code&gt;, null is returned.</source>
          <target state="translated">경우 &lt;code&gt;index&lt;/code&gt; 음수 또는 초과하는 &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; 이면 null이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="139fc31f87015355b70ae0ead8dbe8a1bf157508" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;index&lt;/code&gt; is negative or exceeds &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;&lt;/code&gt;, the empty String &lt;code&gt;&quot;&quot;&lt;/code&gt; is returned.</source>
          <target state="translated">경우 &lt;code&gt;index&lt;/code&gt; 음수 또는 초과하는 &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; 경우, 빈 캐릭터 라인 &lt;code&gt;&quot;&quot;&lt;/code&gt; 가 돌려 주어집니다</target>
        </trans-unit>
        <trans-unit id="6cb2271178e507e08307644574f9503bc0b20d67" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;index&lt;/code&gt; is negative or exceeds &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;&lt;/code&gt;, the empty Ucs2 &quot;&quot; is returned.</source>
          <target state="translated">경우 &lt;code&gt;index&lt;/code&gt; 음수 또는 초과하는 &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; 경우, 비어있는 Ucs2 &quot;&quot;가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="eaea0b02f6bd3a9d000dc75eee9859ef64dc274d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;index&lt;/code&gt; is negative or exceeds &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;&lt;/code&gt;, the result is unspecified.</source>
          <target state="translated">경우 &lt;code&gt;index&lt;/code&gt; 음수 또는 초과하는 &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; 이면 결과가 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0b850ced8bc4ff9691b2f720ed604d657fe94928" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;isStatic&lt;/code&gt; is true, the classes' static fields are checked. Otherwise the classes' member fields are checked.</source>
          <target state="translated">경우 &lt;code&gt;isStatic&lt;/code&gt; 는 사실, 클래스 '정적 필드를 검사합니다. 그렇지 않으면 클래스 멤버 필드가 확인됩니다.</target>
        </trans-unit>
        <trans-unit id="cdbe64dda5baa9077bb268decfaff8fd53c2324a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;it&lt;/code&gt; has no elements, the result is &lt;code&gt;first&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;it&lt;/code&gt; 어떤 요소가없고, 그 결과는 &lt;code&gt;first&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="43667385253a94f1709a5571278d4e86af50f50f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;it&lt;/code&gt; is a List, this function returns a copy of it.</source>
          <target state="translated">경우 &lt;code&gt;it&lt;/code&gt; 목록은이 기능의 복사본을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d1373827262cb50479ef1a4c04be287bf3a94bc5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;it&lt;/code&gt; is an Array, this function returns a copy of it.</source>
          <target state="translated">경우 &lt;code&gt;it&lt;/code&gt; 배열은,이 함수의 복사본을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b6ffc0470ff37d2655b97f962507e09e42b2c4f9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;it&lt;/code&gt; is empty, the result is the empty List even if &lt;code&gt;f&lt;/code&gt; is null.</source>
          <target state="translated">경우 &lt;code&gt;it&lt;/code&gt; 비어, 결과는 경우에도 빈 목록입니다 &lt;code&gt;f&lt;/code&gt; 는 null의 경우는.</target>
        </trans-unit>
        <trans-unit id="ab2e2754a1f10b5fb0545101ce164670a6606055" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;it&lt;/code&gt; or &lt;code&gt;f&lt;/code&gt; are null, the result is unspecified.</source>
          <target state="translated">경우 &lt;code&gt;it&lt;/code&gt; 또는 &lt;code&gt;f&lt;/code&gt; null의 결과는 불특정이다.</target>
        </trans-unit>
        <trans-unit id="13dc56af3a9176b68f0dc291d657cfcdba98bfb3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;key&lt;/code&gt; already has a mapping, the previous value disappears.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 이미 매핑이 있으면 이전 값이 사라집니다.</target>
        </trans-unit>
        <trans-unit id="1e622d8529a162bd50fa1d8698ec3351d8efd224" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;key&lt;/code&gt; has no binding, &lt;code&gt;this&lt;/code&gt; BalancedTree is unchanged and false is returned.</source>
          <target state="translated">경우 &lt;code&gt;key&lt;/code&gt; 더 결합했다, &lt;code&gt;this&lt;/code&gt; BalancedTree는 변경되지 않고 false가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="c272d550d98a38b79e0a44b6a4c6bdef61d470ea" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;key&lt;/code&gt; is already bound to a value, that binding disappears.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 가 이미 값에 바인딩되어 있으면 해당 바인딩이 사라집니다.</target>
        </trans-unit>
        <trans-unit id="d34593b501a2cd0ea79550997406337d0ad376ef" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;key&lt;/code&gt; is not bound to any value, &lt;code&gt;null&lt;/code&gt; is returned.</source>
          <target state="translated">경우 &lt;code&gt;key&lt;/code&gt; 값에 바인딩되지 않고, &lt;code&gt;null&lt;/code&gt; 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="d915a8a1db5771a7131f9049aa247793a884a197" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;key&lt;/code&gt; is null, the result is unspecified.</source>
          <target state="translated">경우 &lt;code&gt;key&lt;/code&gt; 널 (null)이며, 결과는 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="64dbc158fd953cdfd8256027399eacd4316d3a46" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;len&lt;/code&gt; is &amp;lt; 0 or &lt;code&gt;pos&lt;/code&gt; exceeds &lt;code&gt;this&lt;/code&gt;.length, an empty Array [] is returned and &lt;code&gt;this&lt;/code&gt; Array is unchanged.</source>
          <target state="translated">경우 &lt;code&gt;len&lt;/code&gt; 있다 &amp;lt;0 또는 &lt;code&gt;pos&lt;/code&gt; 초과 &lt;code&gt;this&lt;/code&gt; .length 빈 배열은 []을 리턴하고 &lt;code&gt;this&lt;/code&gt; 배열은 변경되지 않는다.</target>
        </trans-unit>
        <trans-unit id="28f6b92ec98b5042e8d63a1d793ff2cf1a966c2a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;len&lt;/code&gt; is negative, the result is unspecified.</source>
          <target state="translated">경우 &lt;code&gt;len&lt;/code&gt; 부정적이며, 결과는 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="254022bf6cd3262ccfed5ace49a39243c3e6dfd4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;len&lt;/code&gt; is omitted or null, the substring ranges from &lt;code&gt;pos&lt;/code&gt; to the end of &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;len&lt;/code&gt; 생략는 null로부터의 문자열 범위 &lt;code&gt;pos&lt;/code&gt; 의 단부 &lt;code&gt;s&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fbe5645cae59c95b94c0f784559e4a5ce8419736" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;len&lt;/code&gt; is omitted, all characters from position &lt;code&gt;pos&lt;/code&gt; to the end of &lt;code&gt;this&lt;/code&gt; String are included.</source>
          <target state="translated">경우 &lt;code&gt;len&lt;/code&gt; 생략 위치에서 모든 문자 &lt;code&gt;pos&lt;/code&gt; 의 끝 &lt;code&gt;this&lt;/code&gt; 문자열이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="17ebc3705c51d492b50cccc55700ba485622d181" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;len&lt;/code&gt; is omitted, all characters from position &lt;code&gt;pos&lt;/code&gt; to the end of &lt;code&gt;this&lt;/code&gt; Ucs2 are included.</source>
          <target state="translated">경우 &lt;code&gt;len&lt;/code&gt; 생략 위치에서 모든 문자 &lt;code&gt;pos&lt;/code&gt; 의 끝 &lt;code&gt;this&lt;/code&gt; UCS2이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="7e8d4c2913fa88fe76baa45788cbb8a6e57400fe" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;length&lt;/code&gt; is less than or equal to 0, the result is unspecified.</source>
          <target state="translated">경우 &lt;code&gt;length&lt;/code&gt; 0보다 작거나 같으면, 결과는 불특정이다.</target>
        </trans-unit>
        <trans-unit id="5c6ee05fe763f65d470a621781c96fad13961108" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;list&lt;/code&gt; or &lt;code&gt;cmp&lt;/code&gt; are null, the result is unspecified.</source>
          <target state="translated">경우 &lt;code&gt;list&lt;/code&gt; 또는 &lt;code&gt;cmp&lt;/code&gt; null의 결과는 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="eee712597e08fd7f2ca96263898874d69c65c238" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;macros&lt;/code&gt; has a field 'name', all occurrences of $$name(args) are replaced with the result of calling that field. The first argument is always the resolve() method, followed by the given arguments. If &lt;code&gt;macros&lt;/code&gt; has no such field, the result is unspecified.</source>
          <target state="translated">&lt;code&gt;macros&lt;/code&gt; 'name'필드가 있으면 모든 $$ name (args) 항목이 해당 필드를 호출 한 결과로 바뀝니다. 첫 번째 인수는 항상 resolve () 메소드이며 주어진 인수가 뒤 따릅니다. 경우 &lt;code&gt;macros&lt;/code&gt; 그런 분야가 없습니다, 결과는 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="070e94c6a6f03f0dcf97fcdc958ce94119db45a3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;max &amp;lt;= min&lt;/code&gt;, the iterator will not act as a countdown.</source>
          <target state="translated">경우 &lt;code&gt;max &amp;lt;= min&lt;/code&gt; , 반복자 카운트 역할을 할 것이다.</target>
        </trans-unit>
        <trans-unit id="22d8c3f1a7f0cc91a50fd40ef675c6a34d2b868c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;n&lt;/code&gt; equals 0, the whole matched substring is returned.</source>
          <target state="translated">경우 &lt;code&gt;n&lt;/code&gt; 이 0 일 전체 일치하는 하위 문자열이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="b22b346642b4e9c4ff1757cf16ecf50b5d99e14e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;name&lt;/code&gt; does not match any resource name, null is returned.</source>
          <target state="translated">경우 &lt;code&gt;name&lt;/code&gt; 모든 리소스 이름과 일치하지 않는, null가 돌려 주어집니다.</target>
        </trans-unit>
        <trans-unit id="cbd4124b8e35a00b57066b79cf94fa842cac424a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;name&lt;/code&gt; is null or the path to a different type, the result is unspecified.</source>
          <target state="translated">경우 &lt;code&gt;name&lt;/code&gt; null 또는 다른 유형의 경로이며, 결과는 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d9ee4e53c0026f4150e62abb1c68631fbd7511b1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;name&lt;/code&gt; is null the result is unspecified.</source>
          <target state="translated">경우 &lt;code&gt;name&lt;/code&gt; 널 (null)이 결과는 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cd059007d8a8e4eeda5fbdf6ddb89e2e94a241ed" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;name&lt;/code&gt; is null, compilation fails with an error.</source>
          <target state="translated">경우 &lt;code&gt;name&lt;/code&gt; 널 (null)이며, 컴파일 오류와 함께 실패합니다.</target>
        </trans-unit>
        <trans-unit id="2cde034d2c75ac9983a0f038a479c8d68f1d4e01" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;name&lt;/code&gt; is the path of an existing class, that class is returned.</source>
          <target state="translated">경우 &lt;code&gt;name&lt;/code&gt; 기존 클래스의 경로이며, 그 클래스가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="3c80ffa29f1e247acf55799ea5024b940f8f06cb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;name&lt;/code&gt; is the path of an existing enum, that enum is returned.</source>
          <target state="translated">경우 &lt;code&gt;name&lt;/code&gt; 기존의 열거의 경로, 즉 열거가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="d85db023846244eb09a034c5a1185f153824dadf" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;name&lt;/code&gt; is the path to a different type, null is returned.</source>
          <target state="translated">경우 &lt;code&gt;name&lt;/code&gt; 다른 유형의 경로는, null가 돌려 주어집니다.</target>
        </trans-unit>
        <trans-unit id="f2b8fa5b36e1767954ff1624da2bbaae4588b011" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;o&lt;/code&gt; has no field named &lt;code&gt;field&lt;/code&gt;, this function is only guaranteed to work for anonymous structures.</source>
          <target state="translated">경우 &lt;code&gt;o&lt;/code&gt; 더 필드라는 이름이없는 &lt;code&gt;field&lt;/code&gt; ,이 기능은 익명 구조체에 대한 작업에 보장됩니다.</target>
        </trans-unit>
        <trans-unit id="ae99dccd545b81764059a58b652ded713dea8437" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;o&lt;/code&gt; is not an object or has no field named &lt;code&gt;field&lt;/code&gt;, the result is null.</source>
          <target state="translated">경우 &lt;code&gt;o&lt;/code&gt; 대상이 아니거나 더 필드라는 이름이없는 &lt;code&gt;field&lt;/code&gt; , 결과는 null입니다.</target>
        </trans-unit>
        <trans-unit id="e67e2908d812b49ff67e12c4c0cf3a98115272f1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;o&lt;/code&gt; is null or of a different type, null is returned.</source>
          <target state="translated">경우 &lt;code&gt;o&lt;/code&gt; null 또는 다른 유형 인, null가 돌려 주어집니다.</target>
        </trans-unit>
        <trans-unit id="f24a59d06bfe8ba966b70b1e51dd39a78d064b1e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;o&lt;/code&gt; is null, null is returned.</source>
          <target state="translated">경우 &lt;code&gt;o&lt;/code&gt; null의 경우, null가 돌려 주어집니다.</target>
        </trans-unit>
        <trans-unit id="8e9f10bab39e0f142b2a283d75faf355715b0364" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;o&lt;/code&gt; is null, the result is unspecified.</source>
          <target state="translated">경우 &lt;code&gt;o&lt;/code&gt; 널 (null)이며, 결과는 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ea0989998e09bae93a4b38d7d89c32a88cc29074" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;o&lt;/code&gt; or &lt;code&gt;field&lt;/code&gt; are null, the result is unspecified.</source>
          <target state="translated">경우 &lt;code&gt;o&lt;/code&gt; 또는 &lt;code&gt;field&lt;/code&gt; null의 결과는 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b8ada52b26fc110e0b966405551a814695ffbbfb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;once&lt;/code&gt; is true, this function does not call itself recursively, otherwise it does. This can be useful in cases where intermediate typedefs might be of interest.</source>
          <target state="translated">경우 &lt;code&gt;once&lt;/code&gt; 사실이 기능은 그렇지가 않습니다, 자신을 재귀 적으로 호출하지 않습니다. 이것은 중간 typedef가 관심이있는 경우에 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3ff1bd8031bdba0282be58128405dcdcadb02bb2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pack&lt;/code&gt; has no elements, the result is &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;pack&lt;/code&gt; 에 요소가없는 결과는 &lt;code&gt;name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3ac6784a9db8abc07427eb792e7f94de017cf1f0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pack&lt;/code&gt; is null, the result is unspecified.</source>
          <target state="translated">경우 &lt;code&gt;pack&lt;/code&gt; 널 (null)이며, 결과는 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="752e27104ce9a1f641acf50c38a5bb66a67bd678" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;path&lt;/code&gt; does not end with a &lt;code&gt;/&lt;/code&gt; or &lt;code&gt;\&lt;/code&gt;, &lt;code&gt;path&lt;/code&gt; is returned unchanged.</source>
          <target state="translated">경우 &lt;code&gt;path&lt;/code&gt; 로 끝날하지 않습니다 &lt;code&gt;/&lt;/code&gt; 또는 &lt;code&gt;\&lt;/code&gt; , &lt;code&gt;path&lt;/code&gt; 변경되지 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="478e1b194986492ce906b3d26d537e4968bce4f0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;path&lt;/code&gt; has no extension, &lt;code&gt;ext&lt;/code&gt; is added as extension.</source>
          <target state="translated">경우 &lt;code&gt;path&lt;/code&gt; 확장자가없는, &lt;code&gt;ext&lt;/code&gt; 확장으로 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="b3885a311f6e48b09b99b9a14804cc22c432ab18" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;path&lt;/code&gt; is null, the result is unspecified.</source>
          <target state="translated">경우 &lt;code&gt;path&lt;/code&gt; 널 (null)이며, 결과는 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="75f224241b57c812502a88830411e66d6b62069e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;path&lt;/code&gt; or &lt;code&gt;ext&lt;/code&gt; are null, the result is unspecified.</source>
          <target state="translated">경우 &lt;code&gt;path&lt;/code&gt; 또는 &lt;code&gt;ext&lt;/code&gt; null 인, 결과는 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e0cff83b54dbff8a1d457627638ff431da198356" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pathFilter&lt;/code&gt; is the empty String &lt;code&gt;&quot;&quot;&lt;/code&gt; it matches everything (if &lt;code&gt;recursive = &lt;a href=&quot;../../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt;) or only top-level types (if &lt;code&gt;recursive = &lt;a href=&quot;../../bool&quot;&gt;false&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">경우 &lt;code&gt;pathFilter&lt;/code&gt; 가 빈 문자열은 &lt;code&gt;&quot;&quot;&lt;/code&gt; 이 모든 것을 일치 (있는 경우 &lt;code&gt;recursive = &lt;a href=&quot;../../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt; (경우 또는에만 최상위 유형) &lt;code&gt;recursive = &lt;a href=&quot;../../bool&quot;&gt;false&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="b4cce511bc78b9d4f916c2f3ac4a4585eac5dbee" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;paths&lt;/code&gt; is empty, the empty String &lt;code&gt;&quot;&quot;&lt;/code&gt; is returned. Otherwise the paths are joined with a slash between them.</source>
          <target state="translated">&lt;code&gt;paths&lt;/code&gt; 가 비어 있으면 빈 문자열 &lt;code&gt;&quot;&quot;&lt;/code&gt; 이 반환됩니다. 그렇지 않으면 경로는 슬래시로 연결됩니다.</target>
        </trans-unit>
        <trans-unit id="cf074c636dfb34cb74e50ea200855385f6461e9d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;paths&lt;/code&gt; is null, the result is unspecified.</source>
          <target state="translated">경우 &lt;code&gt;paths&lt;/code&gt; 널 (null)이며, 결과는 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3286eebad3f8cc389551407a6ac9c3461a8783a6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pos&lt;/code&gt; exceeds &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; or if &lt;code&gt;end&lt;/code&gt; is less than or equals &lt;code&gt;pos&lt;/code&gt;, the result is &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">만약 &lt;code&gt;pos&lt;/code&gt; 가 넘는 &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;end&lt;/code&gt; 가 &lt;code&gt;pos&lt;/code&gt; 보다 작거나 같은 경우 결과는 &lt;code&gt;[]&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1316aba4ae37983ec73b98cd7eeb7fc223e1a0a4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pos&lt;/code&gt; exceeds &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;&lt;/code&gt;, the offset is &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">만약 &lt;code&gt;pos&lt;/code&gt; 가 넘는 &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; , 오프셋은 &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d6b6c8fff5b18b95a8d6be2311b50deb207e22a7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pos&lt;/code&gt; is negative, its value is calculated from the end of &lt;code&gt;this&lt;/code&gt; Array by &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt; + pos&lt;/code&gt;. If this yields a negative value, 0 is used instead.</source>
          <target state="translated">경우 &lt;code&gt;pos&lt;/code&gt; 네가티브이고, 그 값의 끝에서 계산 &lt;code&gt;this&lt;/code&gt; 별로 배열 &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt; + pos&lt;/code&gt; . 이 값이 음수이면 0이 대신 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6f32a3749c45881437e256078162ac32acb4b970" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pos&lt;/code&gt; is negative, its value is calculated from the end of &lt;code&gt;this&lt;/code&gt; String by &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt; + pos&lt;/code&gt;. If this yields a negative value, 0 is used instead.</source>
          <target state="translated">경우 &lt;code&gt;pos&lt;/code&gt; 네가티브이고, 그 값의 끝에서 계산 &lt;code&gt;this&lt;/code&gt; 별로 문자열 &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt; + pos&lt;/code&gt; . 이 값이 음수이면 0이 대신 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="ddc1f6e578d4e1e923e765c5c8176fedf83c1b67" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pos&lt;/code&gt; is negative, its value is calculated from the end of &lt;code&gt;this&lt;/code&gt; Ucs2 by &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt; + pos&lt;/code&gt;. If this yields a negative value, 0 is used instead.</source>
          <target state="translated">경우 &lt;code&gt;pos&lt;/code&gt; 네가티브이고, 그 값의 끝에서 계산 &lt;code&gt;this&lt;/code&gt; 별로 UCS2 &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt; + pos&lt;/code&gt; . 이 값이 음수이면 0이 대신 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="2f5ef5fc56f11b2d709518f0be9d2c66d6ebfde5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pos&lt;/code&gt; is negative, the offset is calculated from the end of &lt;code&gt;this&lt;/code&gt; Array, i.e. &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt; + pos&lt;/code&gt;. If this yields a negative value, the offset is 0.</source>
          <target state="translated">경우 &lt;code&gt;pos&lt;/code&gt; 네가티브이고, 상기 오프셋은 끝에서 계산 &lt;code&gt;this&lt;/code&gt; 배열, 즉 &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt; + pos&lt;/code&gt; . 이 값이 음수이면 오프셋은 0입니다.</target>
        </trans-unit>
        <trans-unit id="392b1ba2df21e7eb1f7439f2acbd9626a63ed029" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pos&lt;/code&gt; or &lt;code&gt;end&lt;/code&gt; are negative, their offsets are calculated from the end of &lt;code&gt;this&lt;/code&gt; Array by &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt; + pos&lt;/code&gt; and &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt; + end&lt;/code&gt; respectively. If this yields a negative value, 0 is used instead.</source>
          <target state="translated">경우 &lt;code&gt;pos&lt;/code&gt; 또는 &lt;code&gt;end&lt;/code&gt; 음, 그 오프셋의 끝에서 계산 &lt;code&gt;this&lt;/code&gt; 에 의해 배열 &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt; + pos&lt;/code&gt; 와 &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt; + end&lt;/code&gt; . 이 값이 음수이면 0이 대신 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="7243c7e1fd0432c11564a83e8607096617c1a36b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;post&lt;/code&gt; is true, the request is sent as POST request, otherwise it is sent as GET request.</source>
          <target state="translated">경우 &lt;code&gt;post&lt;/code&gt; 사실, 요청이 그렇지 않으면 GET 요청으로 전송, POST 요청으로 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="4a9fcf09ef52e068f9bc6db6230d35ae09d56d0e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;quotes&lt;/code&gt; is true, the following characters are also replaced:</source>
          <target state="translated">경우 &lt;code&gt;quotes&lt;/code&gt; 사실, 다음 문자도 대체된다 :</target>
        </trans-unit>
        <trans-unit id="43888a8c7548cfa880c6547a266ecd69aacd6d6b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;r1&lt;/code&gt; or &lt;code&gt;r2&lt;/code&gt; are &lt;code&gt;null&lt;/code&gt;, the result is unspecified.</source>
          <target state="translated">경우 &lt;code&gt;r1&lt;/code&gt; 또는 &lt;code&gt;r2&lt;/code&gt; 있는 &lt;code&gt;null&lt;/code&gt; , 결과는 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7149ab3f6390dc64331cf9ca26af633da2cbddec" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;r&lt;/code&gt; is null, a special resolver is used which returns null for all input values.</source>
          <target state="translated">경우 &lt;code&gt;r&lt;/code&gt; 은 null의 경우, 특별한 해결은 모든 입력 값에 null을 반환하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="7aa88a6eeac0b709bfe2f7b68288c3af7cb6d584" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;r&lt;/code&gt; or &lt;code&gt;opt&lt;/code&gt; are null, the result is unspecified.</source>
          <target state="translated">경우 &lt;code&gt;r&lt;/code&gt; 또는 &lt;code&gt;opt&lt;/code&gt; null의 결과는 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="898f6ab4f39bb29429e3e5ad7605bb3b6224dc6a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;recursive&lt;/code&gt; is true a dot-path is considered matched if it starts with &lt;code&gt;pathFilter&lt;/code&gt;. This automatically applies to path filters of packages. Otherwise an exact match is required.</source>
          <target state="translated">경우 &lt;code&gt;recursive&lt;/code&gt; 사실이로 시작하면 점으로 경로가 일치하는 것으로 간주 &lt;code&gt;pathFilter&lt;/code&gt; . 이것은 패키지의 경로 필터에 자동으로 적용됩니다. 그렇지 않으면 정확히 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="84c58eb482b1da4e76d2f2ae1c68ad8e27d16408" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;recursive&lt;/code&gt; is true, a dot-path is considered matched if it starts with the path filter. This automatically applies to path filters of packages. Otherwise an exact match is required.</source>
          <target state="translated">경우 &lt;code&gt;recursive&lt;/code&gt; 사실, 도트 경로는 경로 필터로 시작하면 일치하는 것으로 간주됩니다. 이것은 패키지의 경로 필터에 자동으로 적용됩니다. 그렇지 않으면 정확히 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="7625d58c4803d7d56d1fb30be1fd072e8b01c2c7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;replacer&lt;/code&gt; is given and is not null, it is used to retrieve actual object to be encoded. The &lt;code&gt;replacer&lt;/code&gt; function takes two parameters, the key and the value being encoded. Initial key value is an empty string.</source>
          <target state="translated">경우 &lt;code&gt;replacer&lt;/code&gt; 주어 널이, 인코딩 될 실제 객체를 검색하는 데 사용된다. &lt;code&gt;replacer&lt;/code&gt; 기능 키와 값이 인코딩되고, 두 개의 매개 변수. 초기 키 값은 빈 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="8fa46f8d4a876db5671addb829e7fa7400b8b3d6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;replacer&lt;/code&gt; is given and is not null, it is used to retrieve the actual object to be encoded. The &lt;code&gt;replacer&lt;/code&gt; function takes two parameters, the key and the value being encoded. Initial key value is an empty string.</source>
          <target state="translated">경우 &lt;code&gt;replacer&lt;/code&gt; 주어 널이, 인코딩 될 실제 객체를 검색하는 데 사용된다. &lt;code&gt;replacer&lt;/code&gt; 기능 키와 값이 인코딩되고, 두 개의 매개 변수. 초기 키 값은 빈 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="fb47052c217094509b42529aa14e011bef39c7c0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;s&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, the result is unspecified.</source>
          <target state="translated">경우 &lt;code&gt;s&lt;/code&gt; 입니다 &lt;code&gt;null&lt;/code&gt; , 결과는 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="09d7b2c9b200171fd2ef37dbd0a4cc3d3735eb71" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;s&lt;/code&gt; is a structure, the field names along with their values are returned. The field order and the operator separating field names and values are unspecified.</source>
          <target state="translated">경우 &lt;code&gt;s&lt;/code&gt; 구조이며, 그 값과 함께 필드 이름이 반환됩니다. 필드 순서와 필드 이름과 값을 구분하는 연산자는 지정되어 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="50c7ce08363d8303fe5e009ef780f536de1dbbbb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;s&lt;/code&gt; is an enum constructor without argument, the constructor's name is returned. If arguments exists, the constructor's name followed by the String representations of the arguments is returned.</source>
          <target state="translated">경우 &lt;code&gt;s&lt;/code&gt; 인수없이 열거 생성자는 생성자의 이름이 반환됩니다. 인수가 존재하면 생성자의 이름과 인수의 문자열 표현이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="a62a3397a69dcc87fd6f7d85a46f0a23807d0ced" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;s&lt;/code&gt; is an instance of a class and that class or one of its parent classes has a &lt;code&gt;toString&lt;/code&gt; method, that method is called. If no such method is present, the result is unspecified.</source>
          <target state="translated">경우 &lt;code&gt;s&lt;/code&gt; 클래스의 인스턴스와 해당 클래스 나 부모 클래스의 하나가이다 &lt;code&gt;toString&lt;/code&gt; 메소드, 메소드가 호출됩니다. 그러한 방법이 없으면 결과는 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="dfe05adc21a9e04883fc7e97397d143474268bab" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;s&lt;/code&gt; is null, the result is unspecified.</source>
          <target state="translated">경우 &lt;code&gt;s&lt;/code&gt; 널 (null)이며, 결과는 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e71c08d02928c5edfd2dd9f6b250facb3d2a686a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;s&lt;/code&gt; is of &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;bool&quot;&gt;Bool&lt;/a&gt;&lt;/code&gt;, its value is returned.</source>
          <target state="translated">경우 &lt;code&gt;s&lt;/code&gt; 입니다 &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;bool&quot;&gt;Bool&lt;/a&gt;&lt;/code&gt; , 그 값이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="2ff11b402cba63d07ee27d822ffd96239c686667" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;s&lt;/code&gt; is the empty String &lt;code&gt;&quot;&quot;&lt;/code&gt; or consists only of space characters, the result is the empty String &lt;code&gt;&quot;&quot;&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;s&lt;/code&gt; 는 빈 문자열은 &lt;code&gt;&quot;&quot;&lt;/code&gt; 또는 유일한 공백 문자로 구성되어, 결과는 빈 문자열은 &lt;code&gt;&quot;&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="da55c3730d1af6ff29633b36f5b60037fc6e2805" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;s&lt;/code&gt; is the empty String &lt;code&gt;&quot;&quot;&lt;/code&gt;, or if pos is not a valid position within &lt;code&gt;s&lt;/code&gt;, the result is false.</source>
          <target state="translated">경우 &lt;code&gt;s&lt;/code&gt; 는 빈 문자열입니다 &lt;code&gt;&quot;&quot;&lt;/code&gt; pos가 내 유효한 위치가 아닌 경우, 또는 &lt;code&gt;s&lt;/code&gt; 는 , 결과는 false입니다.</target>
        </trans-unit>
        <trans-unit id="0ffaa4da22fa28eab03f75c409cb8e7ae2abbb51" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;s&lt;/code&gt; or &lt;code&gt;by&lt;/code&gt; are null, the result is unspecified.</source>
          <target state="translated">경우 &lt;code&gt;s&lt;/code&gt; 나 &lt;code&gt;by&lt;/code&gt; null 인, 결과는 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="42e39d2ac2354f952ed73e9595ce8b73a3d58ef0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;s&lt;/code&gt; or &lt;code&gt;f&lt;/code&gt; are null, the result is unspecified.</source>
          <target state="translated">경우 &lt;code&gt;s&lt;/code&gt; 또는 &lt;code&gt;f&lt;/code&gt; null의 결과는 불특정이다.</target>
        </trans-unit>
        <trans-unit id="9454d90a09a7628f8c10a31884b93baa6ad23fbb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;s&lt;/code&gt; or &lt;code&gt;pos&lt;/code&gt; are null, the result is unspecified.</source>
          <target state="translated">경우 &lt;code&gt;s&lt;/code&gt; 또는 &lt;code&gt;pos&lt;/code&gt; 가 null의 결과는 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1a4ef23495e4a6a50b06d6b5f12bafe901d74911" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;sep&lt;/code&gt; is null, the result is unspecified.</source>
          <target state="translated">경우 &lt;code&gt;sep&lt;/code&gt; 널 (null)이며, 결과는 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="07c6f35e0f15505447b7672d44a5fc8f64be18aa" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;sl&lt;/code&gt; has no elements, the result is null.</source>
          <target state="translated">경우 &lt;code&gt;sl&lt;/code&gt; 어떤 요소가없는, 결과는 null입니다.</target>
        </trans-unit>
        <trans-unit id="9a48681ff3d46e71926f51800e4500bfe3707208" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;sl&lt;/code&gt; has one element, the result is &lt;code&gt;EConst(CIdent(sl[0])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sl&lt;/code&gt; 에 하나의 요소가 있으면 결과는 &lt;code&gt;EConst(CIdent(sl[0])&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="729b7d100c2a4f193f35048478e21ee91c870650" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;sl&lt;/code&gt; is null, the result is unspecified.</source>
          <target state="translated">경우 &lt;code&gt;sl&lt;/code&gt; 널 (null)이며, 결과는 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="99816ac6faa442145343b9f8dafe7c17923be70b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;space&lt;/code&gt; is given and is not null, the result will be pretty-printed. Successive levels will be indented by this string.</source>
          <target state="translated">경우 &lt;code&gt;space&lt;/code&gt; 주어지고 널이, 결과는 꽤 인쇄 될 것입니다. 이 문자열은 연속 레벨을 들여 씁니다.</target>
        </trans-unit>
        <trans-unit id="5c2047d1d72320f4313bed950da1a7bced8d8b36" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;start&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, the result is unspecified.</source>
          <target state="translated">경우 &lt;code&gt;start&lt;/code&gt; 이다 &lt;code&gt;null&lt;/code&gt; , 결과는 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f2263c5ec611d026e212304ac8a6af88d6849563" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;start&lt;/code&gt; is the empty String &lt;code&gt;&quot;&quot;&lt;/code&gt;, the result is true.</source>
          <target state="translated">경우 &lt;code&gt;start&lt;/code&gt; 빈 문자열은 &lt;code&gt;&quot;&quot;&lt;/code&gt; 그 결과는 true입니다.</target>
        </trans-unit>
        <trans-unit id="27833a3853c92010ecaf42a244ecac8b97dc6c31" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;startIndex&lt;/code&gt; exceeds &lt;code&gt;endIndex&lt;/code&gt;, they are swapped.</source>
          <target state="translated">경우 &lt;code&gt;startIndex&lt;/code&gt; 초과 &lt;code&gt;endIndex&lt;/code&gt; , 그들은 교환된다.</target>
        </trans-unit>
        <trans-unit id="17a021c6372c91a7405ba004039fbc01ced56774" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;startIndex&lt;/code&gt; is given, the search is performed within the substring of &lt;code&gt;this&lt;/code&gt; String from 0 to &lt;code&gt;startIndex&lt;/code&gt;. Otherwise the search is performed within &lt;code&gt;this&lt;/code&gt; String. In either case, the returned position is relative to the beginning of &lt;code&gt;this&lt;/code&gt; String.</source>
          <target state="translated">경우 &lt;code&gt;startIndex&lt;/code&gt; 주어진다 검색이의 문자열 내에서 수행되는 &lt;code&gt;this&lt;/code&gt; 0에 문자열 &lt;code&gt;startIndex&lt;/code&gt; . 그렇지 않으면 &lt;code&gt;this&lt;/code&gt; 문자열 내에서 검색이 수행됩니다 . 두 경우 모두 반환 된 위치는 &lt;code&gt;this&lt;/code&gt; 문자열 의 시작에 상대적 입니다.</target>
        </trans-unit>
        <trans-unit id="48a9c562461282ffe35d024ea1fab037e075d3e9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;startIndex&lt;/code&gt; is given, the search is performed within the substring of &lt;code&gt;this&lt;/code&gt; String starting from &lt;code&gt;startIndex&lt;/code&gt;. Otherwise the search is performed within &lt;code&gt;this&lt;/code&gt; String. In either case, the returned position is relative to the beginning of &lt;code&gt;this&lt;/code&gt; String.</source>
          <target state="translated">경우 &lt;code&gt;startIndex&lt;/code&gt; 주어진다 검색이의 문자열 내에서 수행되는 &lt;code&gt;this&lt;/code&gt; 시작 문자열 &lt;code&gt;startIndex&lt;/code&gt; . 그렇지 않으면 &lt;code&gt;this&lt;/code&gt; 문자열 내에서 검색이 수행됩니다 . 두 경우 모두 반환 된 위치는 &lt;code&gt;this&lt;/code&gt; 문자열 의 시작에 상대적 입니다.</target>
        </trans-unit>
        <trans-unit id="a44bf8fc1e90c930cd8776f32374a03f41d8a4c3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;startIndex&lt;/code&gt; is given, the search is performed within the substring of &lt;code&gt;this&lt;/code&gt; Ucs2 from 0 to &lt;code&gt;startIndex&lt;/code&gt;. Otherwise the search is performed within &lt;code&gt;this&lt;/code&gt; Ucs2. In either case, the returned position is relative to the beginning of &lt;code&gt;this&lt;/code&gt; Ucs2.</source>
          <target state="translated">경우 &lt;code&gt;startIndex&lt;/code&gt; 주어진 검색이 문자열 내에서의 수행 &lt;code&gt;this&lt;/code&gt; 0 내지 UCS2 &lt;code&gt;startIndex&lt;/code&gt; . 그렇지 않으면 &lt;code&gt;this&lt;/code&gt; Ucs2 내에서 검색이 수행됩니다 . 두 경우 모두 반환 된 위치는 &lt;code&gt;this&lt;/code&gt; Ucs2 의 시작에 상대적 입니다.</target>
        </trans-unit>
        <trans-unit id="97e008883d4cf23a61f5445ca0ac84627ba073ff" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;startIndex&lt;/code&gt; is given, the search is performed within the substring of &lt;code&gt;this&lt;/code&gt; Ucs2 starting from &lt;code&gt;startIndex&lt;/code&gt;. Otherwise the search is performed within &lt;code&gt;this&lt;/code&gt; Ucs2. In either case, the returned position is relative to the beginning of &lt;code&gt;this&lt;/code&gt; Ucs2.</source>
          <target state="translated">경우 &lt;code&gt;startIndex&lt;/code&gt; 주어진다 검색이의 문자열 내에서 수행되는 &lt;code&gt;this&lt;/code&gt; 에서 UCS2 시작하는 &lt;code&gt;startIndex&lt;/code&gt; . 그렇지 않으면 &lt;code&gt;this&lt;/code&gt; Ucs2 내에서 검색이 수행됩니다 . 두 경우 모두 반환 된 위치는 &lt;code&gt;this&lt;/code&gt; Ucs2 의 시작에 상대적 입니다.</target>
        </trans-unit>
        <trans-unit id="b2d9044d2d0213a4a430914c94c77c09a9609116" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;startIndex&lt;/code&gt; or &lt;code&gt;endIndex&lt;/code&gt; are negative, 0 is used instead.</source>
          <target state="translated">경우 &lt;code&gt;startIndex&lt;/code&gt; 또는 &lt;code&gt;endIndex&lt;/code&gt; 로는 음수, 0이 대신 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9384218cab6b0a68f78d698c678b5814d17b3cbc" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;str&lt;/code&gt; cannot be found, -1 is returned.</source>
          <target state="translated">경우 &lt;code&gt;str&lt;/code&gt; 찾을 수없는, -1이 돌려 주어집니다.</target>
        </trans-unit>
        <trans-unit id="928ee086513189f8da0c4d8ee24b37aebe75d2c1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;str&lt;/code&gt; is null, the result is unspecified.</source>
          <target state="translated">경우 &lt;code&gt;str&lt;/code&gt; 널 (null)이며, 결과는 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d17c21e8738587bfbbaa083c3b61da2fc17d12c5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;sub&lt;/code&gt; is the empty String &lt;code&gt;&quot;&quot;&lt;/code&gt;, &lt;code&gt;by&lt;/code&gt; is inserted after each character of &lt;code&gt;s&lt;/code&gt;. If &lt;code&gt;by&lt;/code&gt; is also the empty String &lt;code&gt;&quot;&quot;&lt;/code&gt;, &lt;code&gt;s&lt;/code&gt; remains unchanged.</source>
          <target state="translated">경우 &lt;code&gt;sub&lt;/code&gt; 빈 문자열은 &lt;code&gt;&quot;&quot;&lt;/code&gt; , &lt;code&gt;by&lt;/code&gt; 각 문자 뒤에 삽입 &lt;code&gt;s&lt;/code&gt; . 경우 &lt;code&gt;by&lt;/code&gt; 또한 빈 문자열 &lt;code&gt;&quot;&quot;&lt;/code&gt; , &lt;code&gt;s&lt;/code&gt; 남아 변경.</target>
        </trans-unit>
        <trans-unit id="a57e61188a49e8826f636cae9f457fe5db0a7685" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;sub&lt;/code&gt; or &lt;code&gt;by&lt;/code&gt; are null, the result is unspecified.</source>
          <target state="translated">경우 &lt;code&gt;sub&lt;/code&gt; 하거나 &lt;code&gt;by&lt;/code&gt; null의 결과는 불특정이다.</target>
        </trans-unit>
        <trans-unit id="86f8be869f2e8ed6e0e25342042deb720d5c3256" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;t1&lt;/code&gt; or &lt;code&gt;t2&lt;/code&gt; are &lt;code&gt;null&lt;/code&gt;, the result is unspecified.</source>
          <target state="translated">경우 &lt;code&gt;t1&lt;/code&gt; 또는 &lt;code&gt;t2&lt;/code&gt; 되어 &lt;code&gt;null&lt;/code&gt; 결과는 불특정이다.</target>
        </trans-unit>
        <trans-unit id="8eca1d5e24a38187577848c104c816de7428637d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;t&lt;/code&gt; is a class instance &lt;code&gt;TInst(c,pl)&lt;/code&gt;, c is returned.</source>
          <target state="translated">경우 &lt;code&gt;t&lt;/code&gt; 이 클래스의 인스턴스입니다 &lt;code&gt;TInst(c,pl)&lt;/code&gt; , C가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="7d487a3399607d4c49a0eeb7988846ae5f2678cb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;t&lt;/code&gt; is a compound type, &lt;code&gt;f&lt;/code&gt; is called on each of its components.</source>
          <target state="translated">&lt;code&gt;t&lt;/code&gt; 가 복합 유형 인 경우 각 구성 요소에서 &lt;code&gt;f&lt;/code&gt; 가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="e64c41736baccc12a6801385f00e2853732a6775" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;t&lt;/code&gt; is an enum instance &lt;code&gt;TEnum(e,pl)&lt;/code&gt;, e is returned.</source>
          <target state="translated">하면 &lt;code&gt;t&lt;/code&gt; 가 열거 인스턴스이다 &lt;code&gt;TEnum(e,pl)&lt;/code&gt; , 예를 반환한다.</target>
        </trans-unit>
        <trans-unit id="a7be9110e87141b2daa27a707de452d8a0759e3e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;t&lt;/code&gt; is not a compound type, this operation has no effect.</source>
          <target state="translated">경우 &lt;code&gt;t&lt;/code&gt; 는 복합 형 아니며,이 동작은 효과가 없다.</target>
        </trans-unit>
        <trans-unit id="38625f4df2dc40dc379fd8a17a41587c4469c3de" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;t&lt;/code&gt; is null or invalid, an exception is thrown.</source>
          <target state="translated">경우 &lt;code&gt;t&lt;/code&gt; 가 null 또는 무효 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="0c336e26ae38e407fac15a2e27cba49663bc2566" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;t&lt;/code&gt; is null, an internal exception is thrown.</source>
          <target state="translated">경우 &lt;code&gt;t&lt;/code&gt; 가 null의 경우, 내부 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="cd295a4c3b0d8aff99061890e63beb36923e93bd" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;t&lt;/code&gt; is null, the result is null.</source>
          <target state="translated">경우 &lt;code&gt;t&lt;/code&gt; 이 널 (null)이며, 결과는 null입니다.</target>
        </trans-unit>
        <trans-unit id="46f06b56d6c5d892363713b43350d816fe972e4c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;t&lt;/code&gt; is of a different type, an exception of type String is thrown.</source>
          <target state="translated">경우 &lt;code&gt;t&lt;/code&gt; 는 다른 유형 인 입력 문자열의 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="ef558355fcedd5202a393e72d3e3f09a401f7000" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;t&lt;/code&gt; or &lt;code&gt;f&lt;/code&gt; are null, the result is unspecified.</source>
          <target state="translated">경우 &lt;code&gt;t&lt;/code&gt; 또는 &lt;code&gt;f&lt;/code&gt; null의 결과는 불특정이다.</target>
        </trans-unit>
        <trans-unit id="1f764c7217540b6706311f05ebbd2f41b59cc77d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;this.&lt;a href=&quot;#backslash&quot;&gt;backslash&lt;/a&gt;&lt;/code&gt; is true, backslash is used as directory separator, otherwise slash is used. This only affects the separator between &lt;code&gt;this.&lt;a href=&quot;#dir&quot;&gt;dir&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;this.&lt;a href=&quot;#file&quot;&gt;file&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">이 경우 &lt;code&gt;this.&lt;a href=&quot;#backslash&quot;&gt;backslash&lt;/a&gt;&lt;/code&gt; 는 true이고, 백 슬래시는 디렉토리 분리 자로 사용되며, 그렇지 않으면 슬래시는 사용됩니다. 이것은이 사이의 구분자에만 영향을줍니다 &lt;code&gt;this.&lt;a href=&quot;#dir&quot;&gt;dir&lt;/a&gt;&lt;/code&gt; 와 &lt;code&gt;this.&lt;a href=&quot;#file&quot;&gt;file&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9b54c2edf215a69ae7408331b7f0651d946c468f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;this.&lt;a href=&quot;#directory&quot;&gt;directory&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;this.&lt;a href=&quot;#extension&quot;&gt;extension&lt;/a&gt;&lt;/code&gt; is null, their representation is the empty String &quot;&quot;.</source>
          <target state="translated">이 경우 &lt;code&gt;this.&lt;a href=&quot;#directory&quot;&gt;directory&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;this.&lt;a href=&quot;#extension&quot;&gt;extension&lt;/a&gt;&lt;/code&gt; 가 null 인 경우, 표현은 빈 문자열 &quot;&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="142635ef75bfe7bfa8865ab352dcb5c86fd764cd" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt; &amp;lt; 2&lt;/code&gt;, &lt;code&gt;this&lt;/code&gt; remains unchanged.</source>
          <target state="translated">이 경우 &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt; &amp;lt; 2&lt;/code&gt; , &lt;code&gt;this&lt;/code&gt; 그대로 남아있다.</target>
        </trans-unit>
        <trans-unit id="48c16b8ffb5aeb6a0daf7c36a82f223724d71480" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;this.&lt;a href=&quot;#url&quot;&gt;url&lt;/a&gt;&lt;/code&gt; is an invalid or inaccessible Url, the &lt;code&gt;onError()&lt;/code&gt; callback function is called.</source>
          <target state="translated">이 경우 &lt;code&gt;this.&lt;a href=&quot;#url&quot;&gt;url&lt;/a&gt;&lt;/code&gt; 이 유효하지 않거나 액세스 할 수없는 URL이면 &lt;code&gt;onError()&lt;/code&gt; 콜백 함수가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="bbf33f71f912fe89c9119cf8c36db4b404d32b99" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;this.&lt;a href=&quot;#url&quot;&gt;url&lt;/a&gt;&lt;/code&gt; is null, the result is unspecified.</source>
          <target state="translated">이 경우 &lt;code&gt;this.&lt;a href=&quot;#url&quot;&gt;url&lt;/a&gt;&lt;/code&gt; 이 null이면 결과가 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b2f522cca7866f6191809416e9c85143f5641004" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;this&lt;/code&gt; EReg does not match any substring, the result is &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;this&lt;/code&gt; EREG 어떤 문자열과 일치하지 않는 결과이다 &lt;code&gt;s&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8da8554223695f3980b452242d287417420347a4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;this&lt;/code&gt; String is the empty String &lt;code&gt;&quot;&quot;&lt;/code&gt;, the result is not consistent across targets and may either be &lt;code&gt;[]&lt;/code&gt; (on Js, Cpp) or &lt;code&gt;[&quot;&quot;]&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;this&lt;/code&gt; 문자열이 빈 문자열은 &lt;code&gt;&quot;&quot;&lt;/code&gt; , 결과는 대상에서 일관되지 않으며이 될 수있다 &lt;code&gt;[]&lt;/code&gt; 또는 (JS, CPP에) &lt;code&gt;[&quot;&quot;]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="22ab0cb91c800b918af635d7a843142ca09b5ce4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;this&lt;/code&gt; Ucs2 is the empty Ucs2 &quot;&quot;, the result is not consistent across targets and may either be &lt;code&gt;[]&lt;/code&gt; (on Js, Cpp) or &lt;code&gt;[&quot;&quot;]&lt;/code&gt;.</source>
          <target state="translated">하면 &lt;code&gt;this&lt;/code&gt; UCS2이 빈 UCS2을 &quot;은&quot;결과는 타겟 일관되지 않고, 어느 하나 일 수있다 &lt;code&gt;[]&lt;/code&gt; 또는 (JS, CPP에) &lt;code&gt;[&quot;&quot;]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0bda9d6cc29fe7df90da78aa730e77cfacde178b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;this&lt;/code&gt; Unserializer instance contains no more or invalid data, an exception is thrown.</source>
          <target state="translated">경우 &lt;code&gt;this&lt;/code&gt; Unserializer 인스턴스가 더 이상 또는 유효하지 않은 데이터가없는 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="28c958e7feba2abc72e03a5677018bf92f1df84f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;this&lt;/code&gt; Vector has length 0, the result is the empty String &lt;code&gt;&quot;&quot;&lt;/code&gt;. If &lt;code&gt;this&lt;/code&gt; has exactly one element, the result is equal to a call to &lt;code&gt;&lt;a href=&quot;../../std#string&quot;&gt;Std.string&lt;/a&gt;(this[0])&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;this&lt;/code&gt; 벡터의 길이가 0을 가지고, 결과는 빈 문자열은 &lt;code&gt;&quot;&quot;&lt;/code&gt; . 하면 &lt;code&gt;this&lt;/code&gt; 정확히 하나 개의 원소를 가지고, 결과는 호출 같다 &lt;code&gt;&lt;a href=&quot;../../std#string&quot;&gt;Std.string&lt;/a&gt;(this[0])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="288474bba969f589db3bb3597caee693362fa6c5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;this&lt;/code&gt; has at least one element, &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; will decrease by 1.</source>
          <target state="translated">이것이 하나 이상의 요소를 가지고 있다면 &lt;code&gt;this&lt;/code&gt; &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; 는 1 씩 줄어 듭니다.</target>
        </trans-unit>
        <trans-unit id="707d55a1fb8462ec0171174ae017e5bf01a4882f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;this&lt;/code&gt; has at least one element, &lt;code&gt;this&lt;/code&gt;.length and the index of each remaining element is decreased by 1.</source>
          <target state="translated">하면 &lt;code&gt;this&lt;/code&gt; 상기 적어도 하나 개의 원소를 가지고, &lt;code&gt;this&lt;/code&gt; .length 각각의 나머지 요소의 인덱스는 1 씩 감소한다.</target>
        </trans-unit>
        <trans-unit id="520e4d37909082c88e09eced70fbe69d35ad34ae" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;this&lt;/code&gt; is the empty Array &lt;code&gt;[]&lt;/code&gt;, &lt;code&gt;null&lt;/code&gt; is returned and the length remains 0.</source>
          <target state="translated">경우 &lt;code&gt;this&lt;/code&gt; 빈 배열 &lt;code&gt;[]&lt;/code&gt; , &lt;code&gt;null&lt;/code&gt; 반환하고, 길이는 0을 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="4e5dfe7fd60d5629bf2029489bb00faa8bf6c148" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;this&lt;/code&gt; is the empty Array &lt;code&gt;[]&lt;/code&gt;, null is returned and the length remains 0.</source>
          <target state="translated">경우 &lt;code&gt;this&lt;/code&gt; 빈 배열 &lt;code&gt;[]&lt;/code&gt; , 널 (null)을 반환하고, 길이는 0을 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="092ab2e0e5370effcead627f5540b74411e50e42" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;this&lt;/code&gt; is the empty Array &lt;code&gt;[]&lt;/code&gt;, the result is the empty String &lt;code&gt;&quot;&quot;&lt;/code&gt;. If &lt;code&gt;this&lt;/code&gt; has exactly one element, the result is equal to a call to &lt;code&gt;&lt;a href=&quot;std#string&quot;&gt;Std.string&lt;/a&gt;(this[0])&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;this&lt;/code&gt; 빈 배열은 &lt;code&gt;[]&lt;/code&gt; , 결과는 빈 문자열은 &lt;code&gt;&quot;&quot;&lt;/code&gt; . 하면 &lt;code&gt;this&lt;/code&gt; 정확히 하나 개의 원소를 가지고, 결과는 호출 같다 &lt;code&gt;&lt;a href=&quot;std#string&quot;&gt;Std.string&lt;/a&gt;(this[0])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="47e8b29d7631d410f5a5f429418ee1dd82cd6973" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;typeParameters.length&lt;/code&gt; is 0, &lt;code&gt;t&lt;/code&gt; is returned unchanged.</source>
          <target state="translated">경우 &lt;code&gt;typeParameters.length&lt;/code&gt; 가 0이고, &lt;code&gt;t&lt;/code&gt; 는 변경되지 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="d7ffa0fe1134d876d35f6108652fd7e53559c09f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;typeParameters.length&lt;/code&gt; is not equal to &lt;code&gt;concreteTypes.length&lt;/code&gt;, an exception of type &lt;code&gt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; is thrown.</source>
          <target state="translated">경우 &lt;code&gt;typeParameters.length&lt;/code&gt; 가 동일하지 않습니다 &lt;code&gt;concreteTypes.length&lt;/code&gt; , 유형의 예외 &lt;code&gt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f0f6dcb42e6cb2e9d64bb06e4b1e4e80a8335ac4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;url&lt;/code&gt; is null, the field url must be set to a value before making the call to &lt;code&gt;request()&lt;/code&gt;, or the result is unspecified.</source>
          <target state="translated">&lt;code&gt;url&lt;/code&gt; 이 null 인 경우 &lt;code&gt;request()&lt;/code&gt; 호출하기 전에 url 필드를 값으로 설정해야합니다 . 그렇지 않으면 결과가 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="89ba44aab1d46ba32c06ab958543847f04a62503" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;url&lt;/code&gt; is null, the result is unspecified.</source>
          <target state="translated">경우 &lt;code&gt;url&lt;/code&gt; 널 (null)이며, 결과는 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="54be3aca5bd581b599088891bc3b66c05d819ad2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;v&lt;/code&gt; does not exist in &lt;code&gt;it&lt;/code&gt;, the result is -1.</source>
          <target state="translated">경우 &lt;code&gt;v&lt;/code&gt; 존재하지 않는 &lt;code&gt;it&lt;/code&gt; , 결과는 -1입니다.</target>
        </trans-unit>
        <trans-unit id="b759e3a03130cf7aa18f146b712d742c46650407" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;v&lt;/code&gt; is &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt; or &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt;, the result is &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;v&lt;/code&gt; 있다 &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt; 또는 &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt; , 결과는 &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0df52d227010dabb7f8e90f94c58ba1d9896af39" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;v&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt; or infinite, the result is &lt;code&gt;NaN&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;v&lt;/code&gt; 있다 &lt;code&gt;NaN&lt;/code&gt; 의 또는 무한, 결과는 &lt;code&gt;NaN&lt;/code&gt; 가 .</target>
        </trans-unit>
        <trans-unit id="fab5488b3d1e5842c638fe85daba95b86b019579" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;v&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt;, the result is &lt;code&gt;NaN&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;v&lt;/code&gt; 있다 &lt;code&gt;NaN&lt;/code&gt; 의 결과는 &lt;code&gt;NaN&lt;/code&gt; 가 .</target>
        </trans-unit>
        <trans-unit id="2fc33f6ba6082e63e1162310cca7732fd5c1d4ab" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;v&lt;/code&gt; is &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt;, the result is &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt;. If &lt;code&gt;v&lt;/code&gt; is &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt;, the result is &lt;code&gt;0.0&lt;/code&gt;. If &lt;code&gt;v&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt;, the result is &lt;code&gt;NaN&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;v&lt;/code&gt; 있다 &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt; 이 결과는 &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt; . 경우 &lt;code&gt;v&lt;/code&gt; 이다 &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt; 이 결과는 &lt;code&gt;0.0&lt;/code&gt; . 경우 &lt;code&gt;v&lt;/code&gt; 있다 &lt;code&gt;NaN&lt;/code&gt; 의 결과는 &lt;code&gt;NaN&lt;/code&gt; 가 .</target>
        </trans-unit>
        <trans-unit id="3967af0e5193ccaa63f56e5b26bff718ce87a896" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;v&lt;/code&gt; is found by checking standard equality, it is removed from &lt;code&gt;this&lt;/code&gt; List and the function returns true.</source>
          <target state="translated">경우 &lt;code&gt;v&lt;/code&gt; 표준 평등을 확인하여 발견, 그것은에서 제거되고 &lt;code&gt;this&lt;/code&gt; 목록 및 함수는 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4a13f2a3cf56dcbd2f7ed4be4eb9d8fd7917105b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;v&lt;/code&gt; is is &lt;code&gt;NaN&lt;/code&gt;, &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt; or &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt;, the result is unspecified.</source>
          <target state="translated">경우 &lt;code&gt;v&lt;/code&gt; 있습니다 &lt;code&gt;NaN&lt;/code&gt; 를 , &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt; 또는 &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt; , 결과는 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="89d5d235486cff83ff9ada3031d62179971f9b94" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;v&lt;/code&gt; is negative (including &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt;) or &lt;code&gt;NaN&lt;/code&gt;, the result is &lt;code&gt;NaN&lt;/code&gt;. If &lt;code&gt;v&lt;/code&gt; is &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt;, the result is &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt;. If &lt;code&gt;v&lt;/code&gt; is &lt;code&gt;0.0&lt;/code&gt;, the result is &lt;code&gt;0.0&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;v&lt;/code&gt; 네거티브 (포함하다 &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt; ) 또는 &lt;code&gt;NaN&lt;/code&gt; 이 결과는 &lt;code&gt;NaN&lt;/code&gt; 이 . 경우 &lt;code&gt;v&lt;/code&gt; 있다 &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt; 이 결과는 &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt; . 경우 &lt;code&gt;v&lt;/code&gt; 인 &lt;code&gt;0.0&lt;/code&gt; 상기 결과는 &lt;code&gt;0.0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e7d74813a2c652a478bb8a500602a1f5d09af709" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;v&lt;/code&gt; is negative (including &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt;) or &lt;code&gt;NaN&lt;/code&gt;, the result is &lt;code&gt;NaN&lt;/code&gt;. If &lt;code&gt;v&lt;/code&gt; is &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt;, the result is &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt;. If &lt;code&gt;v&lt;/code&gt; is &lt;code&gt;0.0&lt;/code&gt;, the result is &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;v&lt;/code&gt; 네거티브 (포함하다 &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt; ) 또는 &lt;code&gt;NaN&lt;/code&gt; 이 결과는 &lt;code&gt;NaN&lt;/code&gt; 이 . 경우 &lt;code&gt;v&lt;/code&gt; 있다 &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt; 이 결과는 &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt; . 경우 &lt;code&gt;v&lt;/code&gt; 인 &lt;code&gt;0.0&lt;/code&gt; 상기 결과는 &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6638e24958767c4a7030ccb64e1ef3d58dc02ecc" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;v&lt;/code&gt; is null, the result is unspecified.</source>
          <target state="translated">경우 &lt;code&gt;v&lt;/code&gt; 널 (null)이며, 결과는 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cc1cb00c81b02a9b7912cd5c3aae471cb0f27d33" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;v&lt;/code&gt; is outside of the signed &lt;code&gt;&lt;a href=&quot;https://api.haxe.org/cpp/Int32.html#Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; range, or is &lt;code&gt;NaN&lt;/code&gt;, &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt; or &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt;, the result is unspecified.</source>
          <target state="translated">경우 &lt;code&gt;v&lt;/code&gt; 서명의 외부이다 &lt;code&gt;&lt;a href=&quot;https://api.haxe.org/cpp/Int32.html#Int32&quot;&gt;Int32&lt;/a&gt;&lt;/code&gt; 범위 또는이다 &lt;code&gt;NaN&lt;/code&gt; 이 , &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt; 또는 &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt; , 결과는 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2ba31fae5399a57a24e09079521db3ffe6415fb3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;v&lt;/code&gt; is positive or 0, the result is unchanged. Otherwise the result is -&lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;v&lt;/code&gt; 양수 또는 0이면, 결과는 변경되지 않는다. 그렇지 않으면 결과는 &lt;code&gt;v&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6d80b8797f5532962704f599ce2540b1420ab9e3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is null, the result is null. If &lt;code&gt;c&lt;/code&gt; is null, the result is unspecified.</source>
          <target state="translated">경우 &lt;code&gt;value&lt;/code&gt; 널 (null)이, 결과는 null입니다. 경우 &lt;code&gt;c&lt;/code&gt; 널 (null)이며, 결과는 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="47f817779f9150c00a98d985d6d03b2937b8f960" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;x &amp;lt;= 1&lt;/code&gt;, the result is always 0.</source>
          <target state="translated">경우 &lt;code&gt;x &amp;lt;= 1&lt;/code&gt; , 결과는 항상 0이다.</target>
        </trans-unit>
        <trans-unit id="177a7c5327d1f104ad407f50a8c462808aeda125" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;x&lt;/code&gt; is found by checking standard equality, it is removed from &lt;code&gt;this&lt;/code&gt; Array and all following elements are reindexed accordingly. The function then returns true.</source>
          <target state="translated">경우 &lt;code&gt;x&lt;/code&gt; 표준 평등을 확인하여 발견, 그것은에서 제거되고 &lt;code&gt;this&lt;/code&gt; 배열의 모든 다음과 같은 요소 그에 따라 인덱싱된다. 그런 다음 함수는 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0c75a030f653b86c2a8ba12607e7cefbb41d3cfc" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;x&lt;/code&gt; is found by checking standard equality, the function returns its index.</source>
          <target state="translated">경우 &lt;code&gt;x&lt;/code&gt; 표준 평등을 확인하여 발견되는 함수는 인덱스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="cf0c2991445528553984fc13791d62d3d0e964e0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;x&lt;/code&gt; is not found, &lt;code&gt;this&lt;/code&gt; Array is not changed and the function returns false.</source>
          <target state="translated">경우 &lt;code&gt;x&lt;/code&gt; 발견되지 않는, &lt;code&gt;this&lt;/code&gt; 배열을 변경하고 함수를 반환 거짓되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5860e58f2133d160cee871f46d8b56919dd63497" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;x&lt;/code&gt; is not found, the function returns -1.</source>
          <target state="translated">경우 &lt;code&gt;x&lt;/code&gt; 발견되지 않는, 함수가 반환 -1.</target>
        </trans-unit>
        <trans-unit id="5334551262919d68d5d3e54c7e5b4110a52e48f2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;x&lt;/code&gt; is null, the String &quot;null&quot; is appended.</source>
          <target state="translated">경우 &lt;code&gt;x&lt;/code&gt; 가 null의 경우, 문자열 &quot;널 (null)&quot;가 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="a53db1cfd0ac25e86e17c2d5b59e0b614e5a6ead" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;x&lt;/code&gt; is outside of the signed Int32 range, or is &lt;code&gt;NaN&lt;/code&gt;, &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt; or &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt;, the result is unspecified.</source>
          <target state="translated">경우 &lt;code&gt;x&lt;/code&gt; 서명 INT32 범위 밖이거나, 또는 &lt;code&gt;NaN&lt;/code&gt; 이 , &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt; 또는 &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt; 결과는 불특정이다.</target>
        </trans-unit>
        <trans-unit id="4f7c09d645c36b3e54600cf1c13c397d8729015d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;x&lt;/code&gt; starts with 0x or 0X, hexadecimal notation is recognized where the following digits may contain 0-9 and A-F.</source>
          <target state="translated">경우 &lt;code&gt;x&lt;/code&gt; 는 0X 또는 0X로 시작하는 다음의 숫자는 0-9 및 AF를 포함 할 수 있습니다 경우, 16 진법은 인정된다.</target>
        </trans-unit>
        <trans-unit id="b2ff2adc165128f35838796eb13ef1649298b79a" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;&lt;a href=&quot;metadata#Metadata&quot;&gt;Metadata&lt;/a&gt;&lt;/code&gt; array is obtained through a call to &lt;code&gt;get&lt;/code&gt;, a subsequent call to &lt;code&gt;add&lt;/code&gt; has no effect on that array.</source>
          <target state="translated">&lt;code&gt;get&lt;/code&gt; to 호출을 통해 &lt;code&gt;&lt;a href=&quot;metadata#Metadata&quot;&gt;Metadata&lt;/a&gt;&lt;/code&gt; 배열을 확보 한 경우 &lt;code&gt;add&lt;/code&gt; 할 후속 호출 은 해당 배열에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="517052b2d11921a468f7c188e96e6c0b5f10af2d" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;&lt;a href=&quot;metadata#Metadata&quot;&gt;Metadata&lt;/a&gt;&lt;/code&gt; array is obtained through a call to &lt;code&gt;get&lt;/code&gt;, a subsequent call to &lt;code&gt;remove&lt;/code&gt; has no effect on that array.</source>
          <target state="translated">경우 &lt;code&gt;&lt;a href=&quot;metadata#Metadata&quot;&gt;Metadata&lt;/a&gt;&lt;/code&gt; 어레이를 호출하여 얻어지는 &lt;code&gt;get&lt;/code&gt; 에 대한 후속 호출 &lt;code&gt;remove&lt;/code&gt; 그 어레이에 영향을 미치지 않는다.</target>
        </trans-unit>
        <trans-unit id="a67d1814020cfb314d941abbe3f1342de6974e02" translate="yes" xml:space="preserve">
          <source>If a call to this function is added to the compilation parameters, the compilation server should be restarted to ensure it takes effect.</source>
          <target state="translated">이 함수에 대한 호출이 컴파일 매개 변수에 추가되면, 컴파일 서버가 재시작되도록 적용해야합니다.</target>
        </trans-unit>
        <trans-unit id="e3b1910cc73c93b2df295fae59dc8d71f67d6250" translate="yes" xml:space="preserve">
          <source>If a class path was declared relative, this method returns the relative file path. Otherwise it returns the absolute file path.</source>
          <target state="translated">클래스 경로가 상대로 선언 된 경우이 메소드는 상대 파일 경로를 리턴합니다. 그렇지 않으면 절대 파일 경로를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="582139a36336f15819191818c0a79f76d761ee89" translate="yes" xml:space="preserve">
          <source>If a file is modified, also checks if its content changed. This check is not free, but useful when .hx files are auto-generated.</source>
          <target state="translated">파일이 수정되면 내용이 변경되었는지도 확인합니다. 이 검사는 무료가 아니지만 .hx 파일이 자동 생성 될 때 유용합니다.</target>
        </trans-unit>
        <trans-unit id="be5157a9df1c46cd9a803fed1e9408f10704164c" translate="yes" xml:space="preserve">
          <source>If a function has a final optional argument of this type, i.e. (..., ?pos:haxe.PosInfos), each call to that function which does not assign a value to that argument has its position added as call argument.</source>
          <target state="translated">함수에이 유형의 최종 선택적 인수 (예 : (...,? pos : haxe.PosInfos))가있는 경우 해당 인수에 값을 지정하지 않은 해당 함수에 대한 각 호출에는 위치가 호출 인수로 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="c5c8202917f425988f4b71cb6bf715b64ea5fb9e" translate="yes" xml:space="preserve">
          <source>If a match is found at the end of &lt;code&gt;s&lt;/code&gt;, the result contains a trailing empty String &quot;&quot; entry.</source>
          <target state="translated">&lt;code&gt;s&lt;/code&gt; 의 끝에 일치하는 항목이 있으면 결과에 빈 문자열 &quot;&quot;항목이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="625ed295bb819fb1df547c074ea9a7b317ef9c11" translate="yes" xml:space="preserve">
          <source>If a match is found at the start of &lt;code&gt;s&lt;/code&gt;, the result contains a leading empty String &quot;&quot; entry.</source>
          <target state="translated">&lt;code&gt;s&lt;/code&gt; 의 시작 부분에서 일치하는 항목이 있으면 결과에 선행 빈 문자열 &quot;&quot;항목이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="cb3991eb71e8fc6ccbaf0ea9fe91e0a46f54bc8a" translate="yes" xml:space="preserve">
          <source>If a previous resource was bound to &lt;code&gt;name&lt;/code&gt;, it is overwritten.</source>
          <target state="translated">이전 리소스가 &lt;code&gt;name&lt;/code&gt; 에 바인딩 된 경우 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="ba4401cad588f490266a83bf80c40678690d1e77" translate="yes" xml:space="preserve">
          <source>If a type parameter A is assigned to a type parameter B which is constrained to &lt;code&gt;&lt;a href=&quot;constructible#Constructible&quot;&gt;Constructible&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;, A must be explicitly constrained to &lt;code&gt;&lt;a href=&quot;constructible#Constructible&quot;&gt;Constructible&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; as well.</source>
          <target state="translated">파라미터 유형이 구속되는 입력 파라미터 B에 할당 된 경우 &lt;code&gt;&lt;a href=&quot;constructible#Constructible&quot;&gt;Constructible&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; A는 명시 적으로 구속하는 것이어야 &lt;code&gt;&lt;a href=&quot;constructible#Constructible&quot;&gt;Constructible&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; 도.</target>
        </trans-unit>
        <trans-unit id="f3a9cb5bb9762f4de481f85cb422ebfa6d25fa27" translate="yes" xml:space="preserve">
          <source>If an element in &lt;code&gt;pathFilters&lt;/code&gt; is the empty String &lt;code&gt;&quot;&quot;&lt;/code&gt; it matches everything (if &lt;code&gt;recursive = &lt;a href=&quot;../../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt;) or only top-level types (if &lt;code&gt;recursive = &lt;a href=&quot;../../bool&quot;&gt;false&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;pathFilters&lt;/code&gt; 의 요소 가 빈 문자열 &lt;code&gt;&quot;&quot;&lt;/code&gt; 인 경우 모든 요소 ( &lt;code&gt;recursive = &lt;a href=&quot;../../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt; ) 또는 최상위 유형 ( &lt;code&gt;recursive = &lt;a href=&quot;../../bool&quot;&gt;false&lt;/a&gt;&lt;/code&gt; 경우) 과만 일치 합니다.</target>
        </trans-unit>
        <trans-unit id="c1867be42acbe78b1d322ea4effbd6cd822964c7" translate="yes" xml:space="preserve">
          <source>If any argument is null, compilation fails with an error.</source>
          <target state="translated">인수가 널이면 컴파일이 오류와 함께 실패합니다.</target>
        </trans-unit>
        <trans-unit id="f1a1643d86531f08c9d3a3c2fc9c04a2e776401d" translate="yes" xml:space="preserve">
          <source>If any argument is null, the result is unspecified.</source>
          <target state="translated">인수가 널이면 결과가 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4e041a066b292c3d321522f0858ec439da1a361e" translate="yes" xml:space="preserve">
          <source>If any non-value is encountered, an exception of type &lt;code&gt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; is thrown.</source>
          <target state="translated">값이 아닌 것이 발견되면 &lt;code&gt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 유형의 예외 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b26cd6081d6c9a2203af2973eda84579d6442eeb" translate="yes" xml:space="preserve">
          <source>If either argument is &lt;code&gt;null&lt;/code&gt;, the result is unspecified.</source>
          <target state="translated">인수가 &lt;code&gt;null&lt;/code&gt; 인 경우 결과는 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="894ebfdb9d1fd363ca3d281aee1862314e5df40c" translate="yes" xml:space="preserve">
          <source>If given &lt;code&gt;str&lt;/code&gt; is not valid JSON, an exception will be thrown.</source>
          <target state="translated">주어진 &lt;code&gt;str&lt;/code&gt; 이 유효한 JSON이 아닌 경우 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="077e52d4f2bfa04547bd0e5b6c924cea9b21681b" translate="yes" xml:space="preserve">
          <source>If given &lt;code&gt;text&lt;/code&gt; is not valid JSON, an exception will be thrown.</source>
          <target state="translated">주어진 &lt;code&gt;text&lt;/code&gt; 가 유효한 JSON이 아닌 경우 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="0a4acb1bac9c8c59a4056ad96c33c4c3d31df8bf" translate="yes" xml:space="preserve">
          <source>If haxe.MainLoop is kept from DCE, then we will insert an haxe.EntryPoint.run() call just at then end of main(). This class can be redefined by custom frameworks so they can handle their own main loop logic.</source>
          <target state="translated">haxe.MainLoop가 DCE에서 유지되는 경우 main ()의 끝에 haxe.EntryPoint.run () 호출을 삽입합니다. 이 클래스는 커스텀 프레임 워크에 의해 재정의 될 수있어 그들 자신의 메인 루프 로직을 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="50029fa41868c801c3ea3306c6e0643ead22fa7d" translate="yes" xml:space="preserve">
          <source>If it is bound to null, subsequent calls to &lt;code&gt;trace()&lt;/code&gt; will cause an exception.</source>
          <target state="translated">널에 바인드되면 후속 &lt;code&gt;trace()&lt;/code&gt; 호출로 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9402a8edc35b805e2ebe641668235bcb00d32fb9" translate="yes" xml:space="preserve">
          <source>If it is important to distinguish these cases, &lt;code&gt;exists()&lt;/code&gt; should be used.</source>
          <target state="translated">이러한 경우를 구별하는 것이 중요하면 exist &lt;code&gt;exists()&lt;/code&gt; 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="56542a8878d7aae4e870d3e0142ce24c2a2bcf8f" translate="yes" xml:space="preserve">
          <source>If no matching element is found, false is returned.</source>
          <target state="translated">일치하는 요소가 없으면 false가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="2fe379c9d4de0f578d55790fd383d8768b37db49" translate="yes" xml:space="preserve">
          <source>If no module can be found, null is returned.</source>
          <target state="translated">모듈을 찾을 수 없으면 null이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="88e0388d3bcfa9ff7b25ff14f90df2e40377c984" translate="yes" xml:space="preserve">
          <source>If no such class exists, null is returned.</source>
          <target state="translated">그러한 클래스가 존재하지 않으면 null이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="92da04566b939dea99b2a842f9462d8ae4936420" translate="yes" xml:space="preserve">
          <source>If no such element is found, the result is false.</source>
          <target state="translated">그러한 요소가 없으면 결과는 false입니다.</target>
        </trans-unit>
        <trans-unit id="3e2b0b2f5a52923ee12a8d529d30b3954da2a7d6" translate="yes" xml:space="preserve">
          <source>If no such element is found, the result is null.</source>
          <target state="translated">그러한 요소가 없으면 결과는 null입니다.</target>
        </trans-unit>
        <trans-unit id="3688ebeae62ff891b4878900b4af10869a096a3a" translate="yes" xml:space="preserve">
          <source>If no such element is found, the result is true.</source>
          <target state="translated">그러한 요소가 없으면 결과는 true입니다.</target>
        </trans-unit>
        <trans-unit id="3020fdfd9417631b10a920682d57b482f4b0f6ab" translate="yes" xml:space="preserve">
          <source>If no such mapping exists, null is returned.</source>
          <target state="translated">이러한 매핑이 없으면 null이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="50e9c8499a74109f51e727d6f98bf284aa0c1aa4" translate="yes" xml:space="preserve">
          <source>If no such method exists, null is returned.</source>
          <target state="translated">그러한 메소드가 존재하지 않는 경우는 null가 돌려 주어집니다.</target>
        </trans-unit>
        <trans-unit id="942440d17ca7b5b263a07a86d82deb3ffba9079f" translate="yes" xml:space="preserve">
          <source>If no such type exists, null is returned.</source>
          <target state="translated">이러한 유형이 존재하지 않으면 null이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="8a80129a535087690dc9fac964cdd4a80171703d" translate="yes" xml:space="preserve">
          <source>If no type can be found, an exception of type &lt;code&gt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; is thrown.</source>
          <target state="translated">유형을 찾을 수 없으면 &lt;code&gt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 유형의 예외 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="0475c2c9d3046d1826b903e73ca134f9b0659e22" translate="yes" xml:space="preserve">
          <source>If no value is defined for &lt;code&gt;key&lt;/code&gt;, null is returned.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 에 대한 값이 정의되어 있지 않으면 null이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="717b50fd7344513ab4122eaa2f2c11e87a5994c2" translate="yes" xml:space="preserve">
          <source>If parameter &lt;code&gt;x&lt;/code&gt; or &lt;code&gt;y&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt;, &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt; or &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt;, the result is &lt;code&gt;NaN&lt;/code&gt;.</source>
          <target state="translated">매개 변수 &lt;code&gt;x&lt;/code&gt; 또는 &lt;code&gt;y&lt;/code&gt; 가 &lt;code&gt;NaN&lt;/code&gt; , &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt; 또는 &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt; 이면 결과는 &lt;code&gt;NaN&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b904e03033371c7869a1ae5a95589a72e1204501" translate="yes" xml:space="preserve">
          <source>If s is null, &quot;null&quot; is returned.</source>
          <target state="translated">s가 null이면 &quot;null&quot;이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="796050a28fe396112bbc0af15afd9e19c2a79376" translate="yes" xml:space="preserve">
          <source>If that type is a function, the result is unspecified and &lt;code&gt;&lt;a href=&quot;reflect#compareMethods&quot;&gt;Reflect.compareMethods&lt;/a&gt;&lt;/code&gt; should be used instead.</source>
          <target state="translated">해당 유형이 함수 인 경우 결과가 지정되지 않으며 대신 &lt;code&gt;&lt;a href=&quot;reflect#compareMethods&quot;&gt;Reflect.compareMethods&lt;/a&gt;&lt;/code&gt; 를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="1200dabbea8e92ce1a2f0cb7e744d28088659563" translate="yes" xml:space="preserve">
          <source>If the (possibly swapped) &lt;code&gt;endIndex&lt;/code&gt; is omitted or exceeds &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; is used instead.</source>
          <target state="translated">제 (교환 가능한) 경우 &lt;code&gt;endIndex&lt;/code&gt; 생략되거나 초과되는 &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; 대신 길이 가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="ad8433b796d29f3342c863522b001b6cafb56d04" translate="yes" xml:space="preserve">
          <source>If the (possibly swapped) &lt;code&gt;startIndex&lt;/code&gt; exceeds &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;&lt;/code&gt;, the empty String &lt;code&gt;&quot;&quot;&lt;/code&gt; is returned.</source>
          <target state="translated">(아마도 스왑 된) &lt;code&gt;startIndex&lt;/code&gt; &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; 값을 초과 하면 length의 경우, 빈 캐릭터 라인 &lt;code&gt;&quot;&quot;&lt;/code&gt; 가 돌려 주어집니다</target>
        </trans-unit>
        <trans-unit id="4da8ee227e812a9ec472dc86eb3e4c8c6bf67669" translate="yes" xml:space="preserve">
          <source>If the (possibly swapped) &lt;code&gt;startIndex&lt;/code&gt; exceeds &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;&lt;/code&gt;, the empty Ucs2 &quot;&quot; is returned.</source>
          <target state="translated">(아마도 스왑 된) &lt;code&gt;startIndex&lt;/code&gt; &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; 값을 초과 하면 length의 경우, 비어있는 Ucs2 &quot;&quot;가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="db3ece0e12f5d3f47bc695c3a16332287729a449" translate="yes" xml:space="preserve">
          <source>If the calculated position + &lt;code&gt;len&lt;/code&gt; exceeds &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;&lt;/code&gt;, the characters from that position to the end of &lt;code&gt;this&lt;/code&gt; String are returned.</source>
          <target state="translated">계산 된 위치 + &lt;code&gt;len&lt;/code&gt; &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; 값을 초과 하면 길이 의 끝까지 그 위치의 문자가 &lt;code&gt;this&lt;/code&gt; 문자열이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="3c76ddd538f3e7bb529c0052dbc5daca85b8532f" translate="yes" xml:space="preserve">
          <source>If the calculated position + &lt;code&gt;len&lt;/code&gt; exceeds &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;&lt;/code&gt;, the characters from that position to the end of &lt;code&gt;this&lt;/code&gt; Ucs2 are returned.</source>
          <target state="translated">계산 된 위치 + &lt;code&gt;len&lt;/code&gt; &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; 값을 초과 하면 길이 의 끝까지 그 위치에서 문자 &lt;code&gt;this&lt;/code&gt; UCS2가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="74fbd72d957d1ca518d3f55c77d4c6f128830626" translate="yes" xml:space="preserve">
          <source>If the compilation cache is not used, &lt;code&gt;macroCall&lt;/code&gt; expressions will not be called, but calling this function will still trigger loading of given &lt;code&gt;modulePath&lt;/code&gt;.</source>
          <target state="translated">컴파일 캐시를 사용하지 않으면 &lt;code&gt;macroCall&lt;/code&gt; 표현식이 호출되지 않지만이 함수를 호출하면 여전히 주어진 &lt;code&gt;modulePath&lt;/code&gt; 의 로드가 트리거됩니다 .</target>
        </trans-unit>
        <trans-unit id="c9b659c52e2d46f0321583a8636c3bfa50407c1d" translate="yes" xml:space="preserve">
          <source>If the compiler flag is defined but no value is set, &lt;code&gt;&lt;a href=&quot;compiler#getDefine&quot;&gt;Compiler.getDefine&lt;/a&gt;&lt;/code&gt; returns &lt;code&gt;&quot;1&quot;&lt;/code&gt; (e.g. &lt;code&gt;-D key&lt;/code&gt;).</source>
          <target state="translated">컴파일러 플래그가 정의되었지만 값이 설정되지 않은 경우 &lt;code&gt;&lt;a href=&quot;compiler#getDefine&quot;&gt;Compiler.getDefine&lt;/a&gt;&lt;/code&gt; 은 &lt;code&gt;&quot;1&quot;&lt;/code&gt; (예 : &lt;code&gt;-D key&lt;/code&gt; )을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="643085f63d63eb7e13305ab3b9be52a2d7af0ad2" translate="yes" xml:space="preserve">
          <source>If the compiler flag is not defined, &lt;code&gt;&lt;a href=&quot;compiler#getDefine&quot;&gt;Compiler.getDefine&lt;/a&gt;&lt;/code&gt; returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">컴파일러 플래그가 정의되지 않은 경우 &lt;code&gt;&lt;a href=&quot;compiler#getDefine&quot;&gt;Compiler.getDefine&lt;/a&gt;&lt;/code&gt; 은 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="5be697b37ca24d038f77c6e1e41c9ff492c1f876" translate="yes" xml:space="preserve">
          <source>If the directory is null, the empty String &lt;code&gt;&quot;&quot;&lt;/code&gt; is returned.</source>
          <target state="translated">디렉토리가 널인 경우, 빈 문자열 &lt;code&gt;&quot;&quot;&lt;/code&gt; 이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="6e20df75839c556d2bc42b6adf4fc3d20d1e201b" translate="yes" xml:space="preserve">
          <source>If the extension is null, the empty String &lt;code&gt;&quot;&quot;&lt;/code&gt; is returned.</source>
          <target state="translated">확장자가 널 (null)이면 빈 문자열 &lt;code&gt;&quot;&quot;&lt;/code&gt; 이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="fd27697de30a09cb03d9618c31429473486ea410" translate="yes" xml:space="preserve">
          <source>If the field is defined as a property, its accessors are ignored. Refer to &lt;code&gt;&lt;a href=&quot;reflect#getProperty&quot;&gt;Reflect.getProperty&lt;/a&gt;&lt;/code&gt; for a function supporting property accessors.</source>
          <target state="translated">필드가 속성으로 정의 된 경우 해당 접근자가 무시됩니다. 속성 접근 &lt;code&gt;&lt;a href=&quot;reflect#getProperty&quot;&gt;Reflect.getProperty&lt;/a&gt;&lt;/code&gt; 지원하는 함수 는 Reflect.getProperty 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a0e60f2fa841bda7220e0e73c060ee5f4e2c78c1" translate="yes" xml:space="preserve">
          <source>If the field is found, it is returned. Otherwise if &lt;code&gt;c&lt;/code&gt; has a super class, &lt;code&gt;findField&lt;/code&gt; recursively checks that super class. Otherwise null is returned.</source>
          <target state="translated">필드가 발견되면 리턴됩니다. 그렇지 않으면 &lt;code&gt;c&lt;/code&gt; 에 수퍼 클래스가 &lt;code&gt;findField&lt;/code&gt; 는 해당 수퍼 클래스를 재귀 적으로 검사합니다. 그렇지 않으면 null이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="b7a2a0ce3c0ede3a61430c03625573d7118d37ef" translate="yes" xml:space="preserve">
          <source>If the field is not a property, this function behaves like &lt;code&gt;&lt;a href=&quot;reflect#field&quot;&gt;Reflect.field&lt;/a&gt;&lt;/code&gt;, but might be slower.</source>
          <target state="translated">필드가 속성이 아닌 경우이 함수는 &lt;code&gt;&lt;a href=&quot;reflect#field&quot;&gt;Reflect.field&lt;/a&gt;&lt;/code&gt; 와 같이 동작 하지만 느려질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8e4745e1476070afc80e0d21ff5a66e6914befa2" translate="yes" xml:space="preserve">
          <source>If the field is not a property, this function behaves like &lt;code&gt;&lt;a href=&quot;reflect#setField&quot;&gt;Reflect.setField&lt;/a&gt;&lt;/code&gt;, but might be slower.</source>
          <target state="translated">필드가 속성이 아닌 경우이 함수는 &lt;code&gt;&lt;a href=&quot;reflect#setField&quot;&gt;Reflect.setField&lt;/a&gt;&lt;/code&gt; 와 같이 작동 하지만 느려질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d9a845831c3778ec868991d471436344a711d875" translate="yes" xml:space="preserve">
          <source>If the first argument to any of the methods is null, the result is unspecified.</source>
          <target state="translated">메소드에 대한 첫 번째 인수가 널인 경우 결과는 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9fceebc0eeb4061c4360812d8b02627aaa78058c" translate="yes" xml:space="preserve">
          <source>If the global g modifier was in place for the matching, only the substring to the left of the leftmost match is returned.</source>
          <target state="translated">전역 g 수정자가 일치를 위해 배치 된 경우 가장 왼쪽 일치의 왼쪽에있는 하위 문자열 만 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="294a7abf2cba60d3d3985b77f4fd118a33e06de9" translate="yes" xml:space="preserve">
          <source>If the global g modifier was in place for the matching, only the substring to the right of the leftmost match is returned.</source>
          <target state="translated">전역 g 수정자가 일치를 위해 배치 된 경우 가장 왼쪽 일치의 오른쪽에있는 하위 문자열 만 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="83f6340c850f600a431306daabd54e6dec25cf63" translate="yes" xml:space="preserve">
          <source>If the global g modifier was in place for the matching, the position and length of the leftmost substring is returned.</source>
          <target state="translated">전역 g 수정자가 일치하는 위치에 있으면 가장 왼쪽 부분 문자열의 위치와 길이가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="f3ebb6ede04831b6cefa091c0b32cee8f813ce4f" translate="yes" xml:space="preserve">
          <source>If the input cannot be recognized, the result is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">입력을 인식 할 수없는 경우 결과는 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8679e94f7f6de6d04cae4c465bd47ffc3d6b8c62" translate="yes" xml:space="preserve">
          <source>If the last slash in &lt;code&gt;path&lt;/code&gt; is a backslash, a backslash is appended to &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; 의 마지막 슬래시 가 백 슬래시이면 백 슬래시가 &lt;code&gt;path&lt;/code&gt; 에 추가됩니다 .</target>
        </trans-unit>
        <trans-unit id="8bb45e95d16a48c1b1460f533e2ad16a26b55f76" translate="yes" xml:space="preserve">
          <source>If the last slash in &lt;code&gt;path&lt;/code&gt; is a slash, or if no slash is found, a slash is appended to &lt;code&gt;path&lt;/code&gt;. In particular, this applies to the empty String &lt;code&gt;&quot;&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; 의 마지막 슬래시 가 슬래시이거나 슬래시가 없으면 슬래시가 &lt;code&gt;path&lt;/code&gt; 에 추가됩니다 . 특히, 이것은 빈 문자열 &lt;code&gt;&quot;&quot;&lt;/code&gt; 에 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="935dacc5c4604c86adc232c66ac66e05a4f7a0cf" translate="yes" xml:space="preserve">
          <source>If the most recent call to &lt;code&gt;this.&lt;a href=&quot;#match&quot;&gt;match&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;this.&lt;a href=&quot;#matchSub&quot;&gt;matchSub&lt;/a&gt;&lt;/code&gt; did not match anything, the result is unspecified.</source>
          <target state="translated">가장 최근에 전화 한 경우 &lt;code&gt;this.&lt;a href=&quot;#match&quot;&gt;match&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;this.&lt;a href=&quot;#matchSub&quot;&gt;matchSub&lt;/a&gt;&lt;/code&gt; 와 일치하는 결과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="a4ec1841bcc8bcb83715e4befe78106b8fae9d53" translate="yes" xml:space="preserve">
          <source>If the path has no directory, the value is null.</source>
          <target state="translated">경로에 디렉토리가 없으면 값은 널입니다.</target>
        </trans-unit>
        <trans-unit id="fb419ac0f7ff5285c4a98d2f2191846ae1191b94" translate="yes" xml:space="preserve">
          <source>If the path has no extension, the value is null.</source>
          <target state="translated">경로에 확장자가 없으면 값은 null입니다.</target>
        </trans-unit>
        <trans-unit id="aaf361ac1e09e5e391c44442641962dcd5d35f9f" translate="yes" xml:space="preserve">
          <source>If the resulting offset does not exceed &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;&lt;/code&gt;, all elements from and including that offset to the end of &lt;code&gt;this&lt;/code&gt; Array are moved one index ahead.</source>
          <target state="translated">결과 오프셋 &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; 값을 초과하지 않으면 length , &lt;code&gt;this&lt;/code&gt; Array 의 끝까지의 오프셋을 포함한 모든 요소 가 한 인덱스 앞으로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="c6826e82d2e2b53d59ca7ba4fc6ffa47d5820827" translate="yes" xml:space="preserve">
          <source>If the stack is empty, null is returned.</source>
          <target state="translated">스택이 비어 있으면 null이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="c3027465ed7be145d902f1709b48b5894481ed58" translate="yes" xml:space="preserve">
          <source>If the structure contains the given key, its value will be overwritten.</source>
          <target state="translated">구조에 지정된 키가 포함되어 있으면 해당 값을 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="e48fabb4500c7e166fa34e985a6f3aaa913e105b" translate="yes" xml:space="preserve">
          <source>If the structure does not contain the given key, null is returned.</source>
          <target state="translated">구조체에 주어진 키가 없으면 null이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="c49e06ae9e7ff917bfa2d3140fcf772afee7732b" translate="yes" xml:space="preserve">
          <source>If the sum of the resulting values for &lt;code&gt;len&lt;/code&gt; and &lt;code&gt;pos&lt;/code&gt; exceed &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;&lt;/code&gt;, this operation will affect the elements from &lt;code&gt;pos&lt;/code&gt; to the end of &lt;code&gt;this&lt;/code&gt; Array.</source>
          <target state="translated">&lt;code&gt;len&lt;/code&gt; 및 &lt;code&gt;pos&lt;/code&gt; 에 대한 결과 값의 합 &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; 초과하는 경우 length ,이 작업은 &lt;code&gt;pos&lt;/code&gt; &lt;code&gt;this&lt;/code&gt; Array 끝까지의 요소에 영향을줍니다 .</target>
        </trans-unit>
        <trans-unit id="04f9a405455a14d8aee45b75f5f1859b41520e2d" translate="yes" xml:space="preserve">
          <source>If the values you are serializing can contain circular references or objects repetitions, you should set &lt;code&gt;USE_CACHE&lt;/code&gt; to true to prevent infinite loops.</source>
          <target state="translated">직렬화하는 값에 순환 참조 또는 객체 반복이 포함될 수있는 경우 무한 루프를 방지하려면 &lt;code&gt;USE_CACHE&lt;/code&gt; 를 true로 설정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="ff18e65665d0542595b037f3a45c35b9ed2cdf17" translate="yes" xml:space="preserve">
          <source>If there is no file name, e.g. for &quot;.htaccess&quot; or &quot;/dir/&quot;, the value is the empty String &quot;&quot;.</source>
          <target state="translated">파일 이름이없는 경우 (예 : &quot;.htaccess&quot;또는 &quot;/ dir /&quot;), 값은 빈 문자열 &quot;&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="a80981831735eba5ad48032b2bc008e0aae3179a" translate="yes" xml:space="preserve">
          <source>If there's no metadata with such name, empty array &lt;code&gt;[]&lt;/code&gt; is returned.</source>
          <target state="translated">이러한 이름의 메타 데이터가 없으면 빈 배열 &lt;code&gt;[]&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="56a7a2deaba0eb4777264be12626743d2f2bfd10" translate="yes" xml:space="preserve">
          <source>If this constant is converted to an &lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;, e.g. through &lt;code&gt;&lt;a href=&quot;std#int&quot;&gt;Std.int&lt;/a&gt;()&lt;/code&gt;, the result is unspecified.</source>
          <target state="translated">이 상수가 예를 들어 &lt;code&gt;&lt;a href=&quot;std#int&quot;&gt;Std.int&lt;/a&gt;()&lt;/code&gt; ()를 통해 &lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 로 변환 되면 결과는 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="071ae53fa202b92d13dc5cdf45d98e5b28991bff" translate="yes" xml:space="preserve">
          <source>If this is called while hasNext() is false, the result is unspecified.</source>
          <target state="translated">hasNext ()가 false 인 동안 호출되면 결과는 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8b7c0d0c5e425d050c2a868f6ee314a139d3c97f" translate="yes" xml:space="preserve">
          <source>If this type is used as an argument type, the compiler ensures that argument expressions are bound to a local variable.</source>
          <target state="translated">이 유형이 인수 유형으로 사용되는 경우 컴파일러는 인수 표현식이 로컬 변수에 바인드되도록합니다.</target>
        </trans-unit>
        <trans-unit id="22d13745fa5f8dd08371d7652ee97b6bd3392e8d" translate="yes" xml:space="preserve">
          <source>If true and given package wasn't found in any of class paths, fail with an error.</source>
          <target state="translated">지정된 패키지가 클래스 경로에서 발견되지 않으면 오류와 함께 실패합니다.</target>
        </trans-unit>
        <trans-unit id="16005de1aa11372b258fa565a1b5b6a621d89ceb" translate="yes" xml:space="preserve">
          <source>If true the type is an interface, otherwise it is a class.</source>
          <target state="translated">true 인 경우 유형은 인터페이스이고 그렇지 않은 경우 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="37a1dee00395120f01232605595307aeec8d1f7e" translate="yes" xml:space="preserve">
          <source>If true, recurses into sub-packages for package paths.</source>
          <target state="translated">true 인 경우 패키지 경로의 하위 패키지로 되풀이됩니다.</target>
        </trans-unit>
        <trans-unit id="1bbbeeafd469f66843b9ff5a50484e413fe753e0" translate="yes" xml:space="preserve">
          <source>If true, recursively adds all sub-packages.</source>
          <target state="translated">true이면 모든 하위 패키지를 재귀 적으로 추가합니다.</target>
        </trans-unit>
        <trans-unit id="94a335406c250f3e03ed20afeeb065cab7abb3c6" translate="yes" xml:space="preserve">
          <source>If true, recursively excludes all sub-packages.</source>
          <target state="translated">true 인 경우 모든 하위 패키지를 재귀 적으로 제외합니다.</target>
        </trans-unit>
        <trans-unit id="fa50c2283bceff6f5a89280e6163a4ce6a008326" translate="yes" xml:space="preserve">
          <source>If two matching substrings appear next to each other, the result contains the empty String &lt;code&gt;&quot;&quot;&lt;/code&gt; between them.</source>
          <target state="translated">일치하는 두 개의 하위 문자열이 나란히 나타나면 결과에 빈 문자열 &lt;code&gt;&quot;&quot;&lt;/code&gt; 이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="d8638c997a870ddd6299cde782874a68732d8327" translate="yes" xml:space="preserve">
          <source>ImportExpr</source>
          <target state="translated">ImportExpr</target>
        </trans-unit>
        <trans-unit id="4155cb85c2819f5edc4b03600aec7806a26dd454" translate="yes" xml:space="preserve">
          <source>ImportMode</source>
          <target state="translated">ImportMode</target>
        </trans-unit>
        <trans-unit id="a2cc3a4b169a13dfafa692c33a9db07924fb0434" translate="yes" xml:space="preserve">
          <source>In decimal mode, parsing continues until an invalid character is detected, in which case the result up to that point is returned. For hexadecimal notation, the effect of invalid characters is unspecified.</source>
          <target state="translated">10 진수 모드에서는 유효하지 않은 문자가 감지 될 때까지 구문 분석이 계속되며이 경우 해당 지점까지의 결과가 반환됩니다. 16 진 표기법의 경우 유효하지 않은 문자의 효과는 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3c6c0837ac0840328c7057341790c3117f02a74b" translate="yes" xml:space="preserve">
          <source>In general, type parameter information cannot be obtained at runtime.</source>
          <target state="translated">일반적으로 런타임에는 유형 매개 변수 정보를 얻을 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="bcd383ba1a0a4b1555953680d971aa43da455194" translate="yes" xml:space="preserve">
          <source>In order to include module sub-types directly, their full dot path including the containing module has to be used (e.g. &lt;code&gt;&lt;a href=&quot;https://api.haxe.org/lua/lib/luv/Signal.html#Signal0&quot;&gt;msignal.Signal.Signal0&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">모듈 하위 유형을 직접 포함하려면 포함 모듈을 포함하는 전체 도트 경로를 사용해야합니다 (예 : &lt;code&gt;&lt;a href=&quot;https://api.haxe.org/lua/lib/luv/Signal.html#Signal0&quot;&gt;msignal.Signal.Signal0&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="7c27592f4a6b38f99f439f088f0424fed43f6078" translate="yes" xml:space="preserve">
          <source>In order to include single modules, their paths can be listed directly on command line: &lt;code&gt;haxe ... ModuleName pack.ModuleName&lt;/code&gt;.</source>
          <target state="translated">단일 모듈을 포함하기 위해 해당 경로를 명령 행에 직접 나열 할 수 있습니다. &lt;code&gt;haxe ... ModuleName pack.ModuleName&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7228bb756c4473409e30e389da9de938afdf10f8" translate="yes" xml:space="preserve">
          <source>In order to test if a value is &lt;code&gt;NaN&lt;/code&gt;, you should use &lt;code&gt;&lt;a href=&quot;math#isNaN&quot;&gt;Math.isNaN&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">값이 &lt;code&gt;NaN&lt;/code&gt; 인지 테스트 하려면 &lt;code&gt;&lt;a href=&quot;math#isNaN&quot;&gt;Math.isNaN&lt;/a&gt;()&lt;/code&gt; 함수를 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="c06f6241a661eebc91af2f773715a33a023cdad2" translate="yes" xml:space="preserve">
          <source>In particular, default values of constructor arguments are not guaranteed to be taken into account.</source>
          <target state="translated">특히 생성자 인수의 기본값을 고려하지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="4fd309e01b7c7aaf6d5bc55002111a89d4d7786a" translate="yes" xml:space="preserve">
          <source>In particular, this function always returns true if &lt;code&gt;it&lt;/code&gt; is empty.</source>
          <target state="translated">특히,이 함수는 항상 true를 반환 &lt;code&gt;it&lt;/code&gt; 비어 있습니다.</target>
        </trans-unit>
        <trans-unit id="7ec11a7d22d58810dcb17a460287da45c0625e59" translate="yes" xml:space="preserve">
          <source>In the context of Haxe dates, a timestamp is defined as the number of milliseconds elapsed since 1st January 1970.</source>
          <target state="translated">Haxe 날짜와 관련하여 타임 스탬프는 1970 년 1 월 1 일 이후 경과 된 밀리 초 수로 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="3845d664a45de7aa1abe756002d5f9e4475ca637" translate="yes" xml:space="preserve">
          <source>IncludePosition(&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;)</source>
          <target state="translated">IncludePosition(&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="55784548b837515f1e220d46d33611149d023020" translate="yes" xml:space="preserve">
          <source>Includes all modules in package &lt;code&gt;pack&lt;/code&gt; in the compilation.</source>
          <target state="translated">컴파일시 패키지 &lt;code&gt;pack&lt;/code&gt; 모든 모듈을 포함합니다 .</target>
        </trans-unit>
        <trans-unit id="37e52fa5d7cd46b1490c29c5a529aca672d93768" translate="yes" xml:space="preserve">
          <source>InflateImpl</source>
          <target state="translated">InflateImpl</target>
        </trans-unit>
        <trans-unit id="0cff4b0e7230aa720090fd68c20a759c13050831" translate="yes" xml:space="preserve">
          <source>Inform that we are about to write at least &lt;code&gt;nbytes&lt;/code&gt; bytes.</source>
          <target state="translated">적어도 &lt;code&gt;nbytes&lt;/code&gt; 바이트 를 쓰려고 함을 알리십시오 .</target>
        </trans-unit>
        <trans-unit id="3d6029e5c8e63f27fd7edae74fe64645d1121a38" translate="yes" xml:space="preserve">
          <source>Initializes a new Vector from &lt;code&gt;data&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;data&lt;/code&gt; 에서 새 Vector를 초기화합니다 .</target>
        </trans-unit>
        <trans-unit id="662088d394eb693a11bda44f9a935ef2ec8e4618" translate="yes" xml:space="preserve">
          <source>Initializes the bitflags to &lt;code&gt;i&lt;/code&gt;.</source>
          <target state="translated">비트 플래그를 &lt;code&gt;i&lt;/code&gt; 로 초기화합니다 .</target>
        </trans-unit>
        <trans-unit id="e6f2dd9c5d7f6d7e1b8707440d5d2257727ac158" translate="yes" xml:space="preserve">
          <source>Initially &lt;code&gt;this&lt;/code&gt; Vector contains &lt;code&gt;length&lt;/code&gt; neutral elements:</source>
          <target state="translated">처음에는 &lt;code&gt;this&lt;/code&gt; Vector에 &lt;code&gt;length&lt;/code&gt; 중립 요소가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="b42d77e7b11ba8c2357fed16f44b4f5cdb45cee0" translate="yes" xml:space="preserve">
          <source>Inline access (&lt;code&gt;inline&lt;/code&gt;).</source>
          <target state="translated">인라인 액세스 ( &lt;code&gt;inline&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="3e455359e86bd16a8fd55407e97fdda9b1f854ad" translate="yes" xml:space="preserve">
          <source>Inline access modifier. Allows expressions to be directly inserted in place of calls to them.</source>
          <target state="translated">인라인 액세스 수정 자 호출 대신 표현식을 직접 삽입 할 수 있습니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
