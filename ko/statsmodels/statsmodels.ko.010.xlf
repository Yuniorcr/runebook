<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="statsmodels">
    <body>
      <group id="statsmodels">
        <trans-unit id="b68cb70fb860c0f556b6389a398d33b05b9ddffa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;table&lt;/strong&gt; (&lt;em&gt;array-like&lt;/em&gt;) &amp;ndash; A contingency table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc77483f6ddf7999aec9bd1d46d65a47b29334cb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;table&lt;/strong&gt; (&lt;em&gt;array-like&lt;/em&gt;) &amp;ndash; A square contingency table, or DataFrame that is converted to a square form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbd8d18d216593f5d25d0ef7bae7ecff4f794561" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;table&lt;/strong&gt; (&lt;em&gt;array-like&lt;/em&gt;) &amp;ndash; A square contingency table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b01a98f989ad4628ce768f99bd7bdbb46de87ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;table&lt;/strong&gt; (&lt;em&gt;array_like&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;2-D&lt;/em&gt;) &amp;ndash; assumes subjects in rows, and categories in columns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de5064f7f82850132021beefc113bf00f7fb3018" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;table&lt;/strong&gt; (&lt;em&gt;array_like&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;2-Dim&lt;/em&gt;) &amp;ndash; square array with results of two raters, one rater in rows, second rater in columns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0730d3ccb3866f9c1b0b28e105f5e2eaf698e706" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;table&lt;/strong&gt; (&lt;em&gt;array_like&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;2d&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;(&lt;/em&gt;&lt;em&gt;k&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;k&lt;/em&gt;&lt;em&gt;)&lt;/em&gt;) &amp;ndash; a square contingency table that contains the count for k categories in rows and columns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7522ccb3b51b903cc52938d94b20ed76dcbcbcc1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;tables&lt;/strong&gt; (&lt;em&gt;list&lt;/em&gt;&lt;em&gt; or &lt;/em&gt;&lt;em&gt;ndarray&lt;/em&gt;) &amp;ndash; Either a list containing several 2x2 contingency tables, or a 2x2xk ndarray in which each slice along the third axis is a 2x2 contingency table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="304906ed85fcc80ce9add4323050f20a3d20c893" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;term&lt;/strong&gt; (&lt;em&gt;int&lt;/em&gt;&lt;em&gt; or &lt;/em&gt;&lt;em&gt;None&lt;/em&gt;) &amp;ndash; If None, results for all random effects are returned. If an integer, returns results for a given set of random effects. The value of &lt;code&gt;term&lt;/code&gt; refers to an element of the &lt;code&gt;ident&lt;/code&gt; vector, or to a position in the &lt;code&gt;vc_formulas&lt;/code&gt; list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6a9ce7c9a9cc83328d0a86821760b26860f7e08" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;term_name&lt;/strong&gt; (&lt;em&gt;str&lt;/em&gt;) &amp;ndash; name of the term for which pairwise comparisons are computed. Term names for categorical effects are created by patsy and correspond to the main part of the exog names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2be3788494d2cacb94f3beaf58d0e91e1e43d4e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;test&lt;/strong&gt; (&lt;em&gt;str {&quot;F&quot;&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;&quot;Chisq&quot;&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;&quot;Cp&quot;}&lt;/em&gt;&lt;em&gt; or &lt;/em&gt;&lt;em&gt;None&lt;/em&gt;) &amp;ndash; Test statistics to provide. Default is &amp;ldquo;F&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7f4d72757a102bbcfd4cb8390538317548d3cf2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;test&lt;/strong&gt; (str {&lt;code&gt;&quot;granger&quot;&lt;/code&gt;, &lt;code&gt;&quot;inst&quot;&lt;/code&gt;}, default: &lt;code&gt;&quot;granger&quot;&lt;/code&gt;) &amp;ndash; If &lt;code&gt;&quot;granger&quot;&lt;/code&gt;, Granger-causality has been tested. If &lt;code&gt;&quot;inst&quot;&lt;/code&gt;, instantaneous causality has been tested.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="086a670dc35b01319efdf368b6af9de1613f2d12" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;test_result&lt;/strong&gt; &amp;ndash; The result instance contains &lt;code&gt;table&lt;/code&gt; which is a pandas DataFrame with the test results: test statistic, degrees of freedom and pvalues.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a45dac3e2c4b02398e13d3e21a757e454c101519" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;test_results&lt;/strong&gt; &amp;ndash; The log-likelihood ratio and p-value for mu_array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5279ab84d310996a3eb975dc77e4e5fecea24b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;test_results&lt;/strong&gt; &amp;ndash; The log-likelihood ratio and p-value of kurt0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="396c63a9476d77fd6d2a4cd3d07376dcc3d742fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;test_results&lt;/strong&gt; &amp;ndash; The log-likelihood ratio and p-value of mu0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f41152b65f97dfebf8884910935a32465442117e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;test_results&lt;/strong&gt; &amp;ndash; The log-likelihood ratio and p-value of the joint hypothesis test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e07f445d046175d139ed44704afcafca45c66159" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;test_results&lt;/strong&gt; &amp;ndash; The log-likelihood ratio and p_value of skew0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="627d559911d2a225903883bf54b39d573ac7ffb7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;test_results&lt;/strong&gt; &amp;ndash; The log-likelihood ratio and the p_value of sig2_0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f5161b8499511a28262485ad6d3a04956ab4310" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;test_statistic&lt;/strong&gt; (&lt;em&gt;float&lt;/em&gt;) &amp;ndash;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60b4b50ef88a59686e42fd2b2510cecf5baa92d1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;test_statistic&lt;/strong&gt; (&lt;em&gt;float&lt;/em&gt;) &amp;ndash; The test&amp;rsquo;s test statistic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c950778f43da352356a0b1831b1fa03a13dfd17" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;test_stats&lt;/strong&gt; (array-like (&lt;code&gt;rank&lt;/code&gt; + 1 if &lt;code&gt;rank&lt;/code&gt; &amp;lt; &lt;code&gt;neqs&lt;/code&gt; else &lt;code&gt;rank&lt;/code&gt;)) &amp;ndash; A one-dimensional array-like object containing the test statistics of the conducted tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f7410abab3a8de6f948dfc1c63da1799a0f1cd7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;testfunc&lt;/strong&gt; (&lt;em&gt;function&lt;/em&gt;) &amp;ndash; A test function for two (independent) samples. It is assumed that the return value on position pvalidx is the p-value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="130bc03eaafdcc3cb377da4b57a1bb532574f638" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;teststat&lt;/strong&gt; (&lt;em&gt;float&lt;/em&gt;) &amp;ndash; Hansen&amp;rsquo;s test statistic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="814bf7946ef7cf2e7911df364262668838ff091c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;tf&lt;/strong&gt; &amp;ndash; True if the contrast &lt;code&gt;C&lt;/code&gt; is estimable on design &lt;code&gt;D&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="774e4204f7a00c2197ca488bbc9ef9cfc5e81fcd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;the estimated quantile.&lt;/strong&gt; (&lt;em&gt;Returns&lt;/em&gt;) &amp;ndash;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8001d950b82f0eaca49636bcd43b50f9fd423bef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;the model using maximum likelihood.&lt;/strong&gt; (&lt;em&gt;Fit&lt;/em&gt;) &amp;ndash;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cf6a40ab3338050e96df8e90ba994cb7286b85d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;the&lt;/strong&gt;&lt;strong&gt; (&lt;/strong&gt;&lt;strong&gt;implicit&lt;/strong&gt;&lt;strong&gt;) &lt;/strong&gt;&lt;strong&gt;row and column categories appearing in the&lt;/strong&gt; (&lt;em&gt;with&lt;/em&gt;) &amp;ndash;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c084754140c992cfa13db7f1be0ce0658051f9ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;threshold&lt;/strong&gt; (&lt;em&gt;float between 0 and 1&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; Percentile threshold value for outliers detection. High value means a lower sensitivity to outliers. Default is &lt;code&gt;0.95&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee2a53b917ee508c9e09d058aafa0c7544471abd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;threshold&lt;/strong&gt; (&lt;em&gt;float&lt;/em&gt;) &amp;ndash; If the threshold is larger than zero, then loading coefficients are either colored white (if style is &amp;lsquo;display&amp;rsquo;) or replace by empty string (if style is &amp;lsquo;strings&amp;rsquo;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9af81b24eb83ca1b75fcac60d45adde8562047b7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;threshold&lt;/strong&gt; (&lt;em&gt;float&lt;/em&gt;) &amp;ndash; clipping threshold for smallest eigen value, see Notes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1162e16b28a34e0fd4fed4680df097d71c67054" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;threshold&lt;/strong&gt; (&lt;em&gt;float&lt;/em&gt;) &amp;ndash; clipping threshold for smallest eigenvalue, see Notes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4066864a5b688ef258483275c10324a96d05101b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;threshold&lt;/strong&gt; (&lt;em&gt;number&lt;/em&gt;) &amp;ndash; Allowed threshold for &lt;code&gt;is_invertible&lt;/code&gt; to return True. Default is 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b05d422af79b19967799d95025546093d57d935a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;threshold&lt;/strong&gt; (&lt;em&gt;scalar&lt;/em&gt;) &amp;ndash; Number between 0 and 1. Threshold above which a prediction is considered 1 and below which a prediction is considered 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c099f90a012678062dcec51673a026933e865fe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;threshold&lt;/strong&gt; (&lt;em&gt;scalar&lt;/em&gt;&lt;em&gt; or &lt;/em&gt;&lt;em&gt;array-like&lt;/em&gt;) &amp;ndash; The threshold below which coefficients are zeroed out, only used for distributed estimation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95664a9e5b3e9b760b7b59b04f0ef6c32fad1602" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ties&lt;/strong&gt; (&lt;em&gt;string&lt;/em&gt;) &amp;ndash; The method used to handle tied times, must be either &amp;lsquo;breslow&amp;rsquo; or &amp;lsquo;efron&amp;rsquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fd2838d2a4af7ff870e4849e4f17f57d04b0b0b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;time&lt;/strong&gt; (&lt;em&gt;array-like&lt;/em&gt;) &amp;ndash; A 2d array of time (or other index) values, used by some dependence structures to define similarity relationships among observations within a cluster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4bead1fc615312239f05a29dc145de817af5f4c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;time&lt;/strong&gt; (&lt;em&gt;array-like&lt;/em&gt;) &amp;ndash; An array of times (censoring times or event times)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e9ae90e5949af2ee29876278105157c51c780ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;time&lt;/strong&gt; (&lt;em&gt;ndarray of int&lt;/em&gt;) &amp;ndash; this should contain the coding for the time period of each observation. time periods should be integers in range(maxT) where maxT is obs of i</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1178a7e4e793baf64f69488a1e103a8d4b8554a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;time_varying_regression&lt;/strong&gt; (&lt;em&gt;boolean&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; Used when an explanatory variables, &lt;code&gt;exog&lt;/code&gt;, are provided provided to select whether or not coefficients on the exogenous regressors are allowed to vary over time. Default is False.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08df37caab74eac64552739b8e531701810c21db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;em&gt;str&lt;/em&gt;) &amp;ndash; A title describing the test. It will be part of the summary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a62ab17e058f7b40f0809d8286624cbb2607a9d2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;em&gt;str&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; The figure title. If None, the default (&amp;lsquo;Correlation Matrix&amp;rsquo;) is used. If &lt;code&gt;title=''&lt;/code&gt;, then no title is added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83ab017afd35a878a5dac6690f3b177cff1e0caf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;em&gt;str&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; Title to place on plot. Default is &amp;lsquo;Autocorrelation&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c8061d360f5b2e5137ccfaa090b89b013375222" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;em&gt;str&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; Title to place on plot. Default is &amp;lsquo;Partial Autocorrelation&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98721f585fa264aae0aa4bdfafc7eb56d670983b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;em&gt;string&lt;/em&gt;) &amp;ndash; Optional title used for plots and summary output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59d14349bcd59acc59f5d40948cfdb4b6e79bae5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;em&gt;string&lt;/em&gt;) &amp;ndash; Title of the summary table (optional)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0b7005b56133b66b873129164fe65087befde3d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;em&gt;string&lt;/em&gt;) &amp;ndash; title for the axis. Use an empty string, &lt;code&gt;''&lt;/code&gt;, to avoid a title.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcfb371e9c5e6a8fd258a254aaa13ec58d53e1d9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;em&gt;string&lt;/em&gt;&lt;em&gt; or &lt;/em&gt;&lt;em&gt;None&lt;/em&gt;) &amp;ndash; if None, then a default title is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eb3dd3a7fb3cbf33ba35e09230b461291469678" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;em&gt;string&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; The title of the axis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a544f5e725402014082c00bf7304b0b4ffdb25a2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; (&lt;em&gt;string&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; Title for the top table. If not None, then this replaces the default title</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21d8fb2638100f49da4a4ce3fa4f3507fb83f149" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title_kwargs&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3.2/library/stdtypes.html#dict&quot;&gt;dict&lt;/a&gt;) &amp;ndash; Keyword arguments to pass on for the title. The key to control the fonts is fontdict.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fb819bb37322e09edd5ef161d200ffbd2b37eff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;titles&lt;/strong&gt; (&lt;em&gt;list of str&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; List of titles for the subplots. By default no title are shown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac350af6c22a5a0769e8420377ad55dbb6390d62" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;to 1.&lt;/strong&gt; (&lt;em&gt;equal&lt;/em&gt;) &amp;ndash;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0685d634f9ffcdca45f2c9c1347b1911143f5a76" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;tol&lt;/strong&gt; (&lt;em&gt;float&lt;/em&gt;) &amp;ndash; Convergence tolerance. Default is 1e-8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3b6f0f266d36a41fa55d7c72bc0b7e0e497227b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;tol&lt;/strong&gt; (&lt;em&gt;float&lt;/em&gt;) &amp;ndash; Stopping critera (error tolerance) for iterative estimation algorithms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="168a59fae18a54eee25a68a20918a7606d09eb0f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;tol&lt;/strong&gt; (&lt;em&gt;float&lt;/em&gt;) &amp;ndash; The convergence tolerance of the estimate. Default is 1e-8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5801d58320db2fe9940a30406f2b9fb3422e4231" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;tol&lt;/strong&gt; (&lt;em&gt;float&lt;/em&gt;) &amp;ndash; The convergence tolerance. Default is 1e-08.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c3351806ceefd481e207b954d038f68243c1a08" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;tol&lt;/strong&gt; (&lt;em&gt;float&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; The convergence tolerance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67b8f6ea87dd723936c48c5f571d79ec5eed75df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;tol&lt;/strong&gt; (&lt;em&gt;float&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; Tolerance for convergence. Default value is 1e-08.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9b88ecbccb3aa7a78f0e8e9fa99dc7957fd1411" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;tol&lt;/strong&gt; (&lt;em&gt;float&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; Tolerance to use when checking for convergence when using NIPALS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06e411906a4324f66c7902dbd4a94359b7af546a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;tol&lt;/strong&gt; (&lt;em&gt;float&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; Toleration for convergence. The default is 1e-06.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59b4388e7d3ef8b5578e70dd78f22b5cd9942037" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;tol_criterion&lt;/strong&gt; (&lt;em&gt;str&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; Defaults to &lt;code&gt;'deviance'&lt;/code&gt;. Can optionally be &lt;code&gt;'params'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47971c7cd3339baabbada2e8b54876fcb90716de" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;tol_em&lt;/strong&gt; (&lt;em&gt;float&lt;/em&gt;) &amp;ndash; Tolerance to use when checking for convergence of the EM algorithm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bd3a0a27b3ab2945a6456f9a396ed20c556e881" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;tolerance&lt;/strong&gt; (&lt;em&gt;float&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; The tolerance at which the Kalman filter determines convergence to steady-state. Default is 1e-19.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30cd23851a840e5242f6933e96c071cb8ee10907" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;trace&lt;/strong&gt; (&lt;em&gt;array-like&lt;/em&gt;) &amp;ndash; The &lt;code&gt;trace&lt;/code&gt; factor levels will be drawn as lines in the plot. If &lt;code&gt;trace&lt;/code&gt; is a &lt;code&gt;pandas.Series&lt;/code&gt; its name will be used as the &lt;code&gt;legendtitle&lt;/code&gt; if &lt;code&gt;legendtitle&lt;/code&gt; is None.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff1bbce2e355484fa5c688fbfa8395b1722e5af1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;trading&lt;/strong&gt; (&lt;em&gt;bool&lt;/em&gt;) &amp;ndash; Whether or not trading day effects are tested for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82f67cb577b312178d0a22275e14513a2e51b121" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;transform / untransform&lt;/strong&gt;: when &lt;code&gt;fit&lt;/code&gt; is called, the optimizer in the background will use gradient methods to select the parameters that maximize the likelihood function. By default it uses unbounded optimization, which means that it may select any parameter value. In many cases, that is not the desired behavior; variances, for example, cannot be negative. To get around this, the &lt;code&gt;transform&lt;/code&gt; method takes the unconstrained vector of parameters provided by the optimizer and returns a constrained vector of parameters used in likelihood evaluation. &lt;code&gt;untransform&lt;/code&gt; provides the reverse operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b795cf1678fcdcb7b81eb50eec8077818eba1f1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;transform&lt;/strong&gt; (&lt;em&gt;None&lt;/em&gt;&lt;em&gt; or &lt;/em&gt;&lt;em&gt;function&lt;/em&gt;) &amp;ndash; If None (default), then the data is not transformed. Given a function sample data and thresholds are transformed. If transform is log the the equivalence interval is in ratio: low &amp;lt; x1 / x2 &amp;lt; upp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d68e18120eef5e7655f9775b475f03c64b0eadf8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;transform&lt;/strong&gt; (&lt;em&gt;None&lt;/em&gt;&lt;em&gt; or &lt;/em&gt;&lt;em&gt;function&lt;/em&gt;) &amp;ndash; If None (default), then the data is not transformed. Given a function, sample data and thresholds are transformed. If transform is log, then the equivalence interval is in ratio: low &amp;lt; m1 / m2 &amp;lt; upp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f98f28c87943a8a8e39c4efbeb489c820a5387d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;transform&lt;/strong&gt; (&lt;em&gt;bool&lt;/em&gt;) &amp;ndash; Flag indicating whether to return the projection in the original space of the data (True, default) or in the space of the standardized/demeaned data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abd57d6e2bdbe6923a7633216f4d5e822001297a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;transform&lt;/strong&gt; (&lt;em&gt;bool&lt;/em&gt;) &amp;ndash; If transform is true and endog is provided, then it will be standardized using mean and scale of original data, which has to be available in this case. If transform is False, then a provided endog will be used unchanged. The original endog in the Factor class will always be standardized if endog is None, independently of &lt;code&gt;transform&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f369d1804437907bd15c175e16fdafae5924874" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;transform&lt;/strong&gt; (&lt;em&gt;bool&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; If the model was fit via a formula, do you want to pass exog through the formula. Default is True. E.g., if you fit a model y ~ log(x1) + log(x2), and transform is True, then you can pass a data structure that contains x1 and x2 in their original form. Otherwise, you&amp;rsquo;d need to log the data first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a4e21450ccf799e387d6b55d7d064e17c0f3fe1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;transform&lt;/strong&gt; (&lt;em&gt;string&lt;/em&gt;) &amp;ndash; The used to produce the interval (note that the returned interval is on the survival probability scale regardless of which transform is used). Only &lt;code&gt;log&lt;/code&gt; and &lt;code&gt;arcsin&lt;/code&gt; are implemented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5befdfd0ede76ce428b11130fc316a4a2f67d96" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;transform_M&lt;/strong&gt; (&lt;em&gt;True&lt;/em&gt;&lt;em&gt; or &lt;/em&gt;&lt;em&gt;False&lt;/em&gt;) &amp;ndash; Whether to show transform_M matrix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f902017267d687db065a41018ae2cb563ae8c02" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;transform_variance&lt;/strong&gt; (&lt;em&gt;boolean&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; Whether or not to transform the error variance term. This option is not typically used, and the default is False.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f19fb1e2c30ce648c5715dd00e7eaa1e943ab6ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;transformed&lt;/strong&gt; (&lt;em&gt;boolean&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; Whether or not &lt;code&gt;params&lt;/code&gt; is already transformed. Default is True.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="689a3d526305eab615a1a0ea60dfdddcb4b60a9b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;transformed&lt;/strong&gt; (&lt;em&gt;boolean&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; Whether or not &lt;code&gt;params&lt;/code&gt; is already transformed. If set to False, &lt;code&gt;transform_params&lt;/code&gt; is called. Default is True.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9a7d4b8381c239be0907b03934021cbdf1a5b68" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;transformed&lt;/strong&gt; (&lt;em&gt;boolean&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; Whether or not &lt;code&gt;params&lt;/code&gt; is already transformed. If set to False, &lt;code&gt;transform_params&lt;/code&gt; is called. Default is True..</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df6cf05815a9e8cbf633776cfde4e39145bb0e79" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;transformed&lt;/strong&gt; (&lt;em&gt;boolean&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; Whether or not &lt;code&gt;start_params&lt;/code&gt; is already transformed. Default is True.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91f846c78ad8e129634f7fcc24ca9edead0448f9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;transition&lt;/strong&gt; (&lt;em&gt;array_like&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; The transition matrix, \(T\). Default is set to zeros.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53999adb8a1d56b6aec8db86b941f9c51d477431" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;transparams&lt;/strong&gt; (&lt;em&gt;bool&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; Whehter or not to transform the parameters to ensure stationarity. Uses the transformation suggested in Jones (1980). If False, no checking for stationarity or invertibility is done.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="620973fb288f7e7c933e9ec54aa26bab71a7bdbb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;transparams&lt;/strong&gt; (&lt;em&gt;bool&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; Whether or not to transform the parameters to ensure stationarity. Uses the transformation suggested in Jones (1980).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d361ff9e310df4cef2449638fabc376afc250847" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;trend&lt;/strong&gt; (&lt;em&gt;array&lt;/em&gt;) &amp;ndash; The estimated trend in the data given lamb.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caa1c8761fa487ff8a5dbbabca7347c8d7be2e9d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;trend&lt;/strong&gt; (&lt;em&gt;array&lt;/em&gt;) &amp;ndash; The trend in the data with the cycles removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eccaf26c34d5ba01b9b956298ca57d9422b3689" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;trend&lt;/strong&gt; (&lt;em&gt;bool&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; Whether or not to include a trend component. Default is False. If True, &lt;code&gt;level&lt;/code&gt; must also be True.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7b5e60eefec8a9ab0285b11cc7dc79e536cca89" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;trend&lt;/strong&gt; (&lt;em&gt;boolean&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; Whether or not to plot the trend component, if applicable. Default is True.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb329c5ea2845cfe275e131a5c9f5a566124eea2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;trend&lt;/strong&gt; (&lt;em&gt;str {&quot;c&quot;&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;&quot;ct&quot;&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;&quot;ctt&quot;&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;&quot;nc&quot;}&lt;/em&gt;) &amp;ndash; &amp;ldquo;c&amp;rdquo; - add constant &amp;ldquo;ct&amp;rdquo; - constant and trend &amp;ldquo;ctt&amp;rdquo; - constant, linear and quadratic trend &amp;ldquo;nc&amp;rdquo; - co constant, no trend Note that these are prepended to the columns of the dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4eb9ac3ed276d7c53a917e180c51032f700f179" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;trend&lt;/strong&gt; (&lt;em&gt;str {&quot;c&quot;&lt;/em&gt;&lt;em&gt;,&lt;/em&gt;&lt;em&gt;&quot;t&quot;&lt;/em&gt;&lt;em&gt;,&lt;/em&gt;&lt;em&gt;&quot;ct&quot;&lt;/em&gt;&lt;em&gt;,&lt;/em&gt;&lt;em&gt;&quot;ctt&quot;}&lt;/em&gt;) &amp;ndash; &amp;ldquo;c&amp;rdquo; add constant only &amp;ldquo;t&amp;rdquo; add trend only &amp;ldquo;ct&amp;rdquo; add constant and linear trend &amp;ldquo;ctt&amp;rdquo; add constant and linear and quadratic trend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3247ff92e0b53bfdce5a76dffedc306ce0e38132" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;trend&lt;/strong&gt; (&lt;em&gt;str {&quot;nc&quot;&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;&quot;c&quot;&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;&quot;ct&quot;&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;&quot;ctt&quot;}&lt;/em&gt;) &amp;ndash;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3b6f8651c0e7f3b62c32a9518da3eaaf8730bd5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;trend&lt;/strong&gt; (&lt;em&gt;str {'c'&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;'ct'}&lt;/em&gt;) &amp;ndash;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbe3b3cab926569726207871de8cc6abe6222c54" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;trend&lt;/strong&gt; (&lt;em&gt;str {'c'&lt;/em&gt;&lt;em&gt;,&lt;/em&gt;&lt;em&gt;'nc'}&lt;/em&gt;) &amp;ndash; Whether to include a constant or not. &amp;lsquo;c&amp;rsquo; - include constant. &amp;lsquo;nc&amp;rsquo; - no constant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbfd159e2da9fc5c016d7db8e78b1fbc38e10823" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;trend&lt;/strong&gt; (&lt;em&gt;str {'c'&lt;/em&gt;&lt;em&gt;,&lt;/em&gt;&lt;em&gt;'nc'}&lt;/em&gt;) &amp;ndash; Whether to include a constant or not. &amp;lsquo;c&amp;rsquo; includes constant, &amp;lsquo;nc&amp;rsquo; no constant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d625b024574941e9632cf38d52a4395f6836dc84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;trend&lt;/strong&gt; (&lt;em&gt;str {'nc'&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;'c'&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;'ct'}&lt;/em&gt;) &amp;ndash;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6fecbf4fb57cd4278ef51ab5bc70372f5147906" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;trend&lt;/strong&gt; (&lt;em&gt;str&lt;/em&gt;) &amp;ndash; The trend to use when fitting the ARMA models.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8859242a57b2a1efb849be165ca52c9e21c5d743" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;trend&lt;/strong&gt; (&lt;em&gt;str{'n'&lt;/em&gt;&lt;em&gt;,&lt;/em&gt;&lt;em&gt;'c'&lt;/em&gt;&lt;em&gt;,&lt;/em&gt;&lt;em&gt;'t'&lt;/em&gt;&lt;em&gt;,&lt;/em&gt;&lt;em&gt;'ct'}&lt;/em&gt;&lt;em&gt; or &lt;/em&gt;&lt;em&gt;iterable&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; Parameter controlling the deterministic trend polynomial \(A(t)\). Can be specified as a string where &amp;lsquo;c&amp;rsquo; indicates a constant (i.e. a degree zero component of the trend polynomial), &amp;lsquo;t&amp;rsquo; indicates a linear trend with time, and &amp;lsquo;ct&amp;rsquo; is both. Can also be specified as an iterable defining the polynomial as in &lt;code&gt;numpy.poly1d&lt;/code&gt;, where &lt;code&gt;[1,1,0,1]&lt;/code&gt; would denote \(a + bt + ct^3\). Default is to not include a trend component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad8ad8f4a64b32a84afcf332f9f8a50d3e30b18a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;trend&lt;/strong&gt; (&lt;em&gt;{&quot;add&quot;&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;&quot;mul&quot;&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;&quot;additive&quot;&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;&quot;multiplicative&quot;&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;None}&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; Type of trend component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a021e6c79d1131d56e458bad51964ea4c314953b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;trend&lt;/strong&gt; (&lt;em&gt;{'c'&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;'nc'&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;'ct'&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;'ctt'}&lt;/em&gt;) &amp;ndash; TODO</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb060166e9460858ce16b1a7e75e7bddd13b990e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;trend&lt;/strong&gt; (&lt;em&gt;{'nc'&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;'c'&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;'t'&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;'ct'}&lt;/em&gt;) &amp;ndash; Whether or not to include a trend. To include an constant, time trend, or both, set &lt;code&gt;trend=&amp;rsquo;c&amp;rsquo;&lt;/code&gt;, &lt;code&gt;trend=&amp;rsquo;t&amp;rsquo;&lt;/code&gt;, or &lt;code&gt;trend=&amp;rsquo;ct&amp;rsquo;&lt;/code&gt;. For no trend, set &lt;code&gt;trend=&amp;rsquo;nc&amp;rsquo;&lt;/code&gt;. Default is a constant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7012d67131ec72463806c2fcc15cde022ced2917" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;trend&lt;/strong&gt; (&lt;em&gt;{'nc'&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;'c'&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;'t'&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;'ct'}&lt;/em&gt;) &amp;ndash; Whether or not to include a trend. To include an intercept, time trend, or both, set &lt;code&gt;trend=&amp;rsquo;c&amp;rsquo;&lt;/code&gt;, &lt;code&gt;trend=&amp;rsquo;t&amp;rsquo;&lt;/code&gt;, or &lt;code&gt;trend=&amp;rsquo;ct&amp;rsquo;&lt;/code&gt;. For no trend, set &lt;code&gt;trend=&amp;rsquo;nc&amp;rsquo;&lt;/code&gt;. Default is an intercept.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="529a1824bac8523408a9f60d6c597e6a25e1dbec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;trend&lt;/strong&gt; (&lt;em&gt;{'nc'&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;'c'}&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; Parameter controlling the deterministic trend polynomial. Can be specified as a string where &amp;lsquo;c&amp;rsquo; indicates a constant intercept and &amp;lsquo;nc&amp;rsquo; indicates no intercept term.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1de6dd2b1d32b81c59d3f3786d322fc3abddbc9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;trendorder&lt;/strong&gt; (&lt;em&gt;int&lt;/em&gt;) &amp;ndash; The polynomial order of the trend. &amp;lsquo;nc&amp;rsquo; = None, &amp;lsquo;c&amp;rsquo; or &amp;lsquo;t&amp;rsquo; = 0, &amp;lsquo;ct&amp;rsquo; = 1, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbc3d7834301c65a6b5d2ab3f564604161ffcfdb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;trim&lt;/strong&gt; (&lt;em&gt;str {'forward'&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;'backward'&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;'both'&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;'none'}&lt;/em&gt;&lt;em&gt; or &lt;/em&gt;&lt;em&gt;None&lt;/em&gt;) &amp;ndash;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f6d168494bd62612545bf1f7bf89a13141bbcdb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;trim&lt;/strong&gt; (&lt;em&gt;string&lt;/em&gt;) &amp;ndash;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fb8a66987a06ee597ab8e3252c54866e4c396f4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;trim_mode&lt;/strong&gt; (&lt;em&gt;'auto&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;'size'&lt;/em&gt;&lt;em&gt;, or &lt;/em&gt;&lt;em&gt;'off'&lt;/em&gt;) &amp;ndash; If not &amp;lsquo;off&amp;rsquo;, trim (set to zero) parameters that would have been zero if the solver reached the theoretical minimum. If &amp;lsquo;auto&amp;rsquo;, trim params using the Theory above. If &amp;lsquo;size&amp;rsquo;, trim params if they have very small absolute value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f3f569f92fe3c4359b1a0dd2aacca210868e26f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;tstat&lt;/strong&gt; (&lt;em&gt;float&lt;/em&gt;) &amp;ndash; t statistic for the test that including the fitted values of the first model in the second model has no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f87fd3658025f06441d059abfed868c31bd1e71f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;tstat&lt;/strong&gt; (&lt;em&gt;float&lt;/em&gt;) &amp;ndash; test statisic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45815ac676d36a8720433e402a070dd115b6dd05" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;tvalue&lt;/strong&gt; (&lt;em&gt;float&lt;/em&gt;) &amp;ndash; test statistic, based on ttest_1sample</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22661b21e3a64068d65c93a4774e479046ea34bc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;tvalues&lt;/strong&gt; (&lt;em&gt;array&lt;/em&gt;) &amp;ndash; The &amp;ldquo;t-statistics&amp;rdquo; of params. These are defined as params/bse where bse are taken from the robust covariance matrix specified in the argument to fit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="194bccbe3baa1b94c2fbd33e4f347d6182f7b675" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;tvalues&lt;/strong&gt; (&lt;em&gt;array&lt;/em&gt;) &amp;ndash; The t-values associated with &lt;code&gt;params&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6bfc61b8c1123f92228b2e263977132441cb36e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;tvalues_alpha&lt;/strong&gt; (ndarray (neqs x &lt;code&gt;coint_rank&lt;/code&gt;))</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a1322145c9514a96b7538a63e7ac01de5cda1b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;tvalues_beta&lt;/strong&gt; (ndarray (neqs x &lt;code&gt;coint_rank&lt;/code&gt;))</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e22a211f75cdf326ccbec3ea000f4650171214bc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;tvalues_det_coef&lt;/strong&gt; (&lt;em&gt;ndarray (neqs x det. terms outside the coint. relation)&lt;/em&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46b98f8df0e72dcf165f23d48ccc5b25fcbae354" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;tvalues_det_coef_coint&lt;/strong&gt; (ndarray (num_det_coef_coint x &lt;code&gt;coint_rank&lt;/code&gt;))</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73efece8f2585421b81f6d6e7c964c8bcb3b2deb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;tvalues_gamma&lt;/strong&gt; (&lt;em&gt;ndarray (neqs x neqs*(k_ar-1))&lt;/em&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cc1cc337e4cc8f73fae429b910ab0ebfffc1ae7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;two_sided&lt;/strong&gt; (&lt;em&gt;bool&lt;/em&gt;) &amp;ndash; The moving average method used in filtering. If True (default), a centered moving average is computed using the filt. If False, the filter coefficients are for past values only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed05ff1aa22c4ba8ae784f28f6d198d9faa73a0f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;txt&lt;/strong&gt; &amp;ndash; summary tables and extra text as one string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42a08fa3ca53afec1c09014c90652ce991d3d78e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;typ&lt;/strong&gt; (&lt;em&gt;str {'linear'&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;'levels'}&lt;/em&gt;) &amp;ndash;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd0ca70b3543c7e0e0191adca7260ff168c574b1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;typ&lt;/strong&gt; (&lt;em&gt;str&lt;/em&gt;&lt;em&gt; or &lt;/em&gt;&lt;em&gt;int {&quot;I&quot;&lt;/em&gt;&lt;em&gt;,&lt;/em&gt;&lt;em&gt;&quot;II&quot;&lt;/em&gt;&lt;em&gt;,&lt;/em&gt;&lt;em&gt;&quot;III&quot;}&lt;/em&gt;&lt;em&gt; or &lt;/em&gt;&lt;em&gt;{1&lt;/em&gt;&lt;em&gt;,&lt;/em&gt;&lt;em&gt;2&lt;/em&gt;&lt;em&gt;,&lt;/em&gt;&lt;em&gt;3}&lt;/em&gt;) &amp;ndash; The type of Anova test to perform. See notes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="869296e5541b639b043c4f04c03de7bff8f22ac5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ub&lt;/strong&gt; (&lt;em&gt;float&lt;/em&gt;) &amp;ndash; The upper confidence limit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab7424f66e9fd0bf467fbe783d2b6cc19a00353a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ub&lt;/strong&gt; (&lt;em&gt;lb&lt;/em&gt;&lt;em&gt;,&lt;/em&gt;) &amp;ndash; Lower and upper bound for integration. Default is set to the support of the distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="185f6c546d501c3780811461350a982a1823fba0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ucb&lt;/strong&gt; (&lt;em&gt;array-like&lt;/em&gt;) &amp;ndash; The upper confidence limits corresponding to the points in &lt;code&gt;surv_times&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6edd459dd16cc0235c37483585e474f6e2b4947" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ucb&lt;/strong&gt; (&lt;em&gt;float&lt;/em&gt;) &amp;ndash; The upper confidence limit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="004f3b5371df7322a1bc38aa4104fc3d947307c7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;unbiased&lt;/strong&gt; (&lt;em&gt;bool&lt;/em&gt;) &amp;ndash; If True, then denominators for autocovariance are n-k, otherwise n</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c79778307ae2cf0d435bc3054257468354583eb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;unbiased&lt;/strong&gt; (&lt;em&gt;bool&lt;/em&gt;) &amp;ndash; If True, then denominators is n-k, otherwise n</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf85642cdbc7e47d50179324d1702fc58ff314ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;unbiased&lt;/strong&gt; (&lt;em&gt;boolean&lt;/em&gt;) &amp;ndash; if True, then denominators for autocovariance is n-k, otherwise n</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9c5f0b0f417105043d14959567694534f0b8de2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;unbiased&lt;/strong&gt; (&lt;em&gt;boolean&lt;/em&gt;) &amp;ndash; if True, then denominators is n-k, otherwise n</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4434be7e4f0206900b32c3e89eb933c4c9beccba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;unconstrained&lt;/strong&gt; &amp;ndash; Array of unconstrained parameters used by the optimizer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e78cd969c5aacb6e4fac5864765d76f3fcc84407" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;unconstrained&lt;/strong&gt; &amp;ndash; Unconstrained parameters used by the optimizer, to be transformed to stationary coefficients of, e.g., an autoregressive or moving average component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d701e82170789a8dec00ddf9e7b5f3bae1e633c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;unconstrained&lt;/strong&gt; &amp;ndash; Unconstrained parameters used by the optimizer, to be transformed to stationary coefficients of, e.g., an autoregressive or moving average component. Will match the type of the passed &lt;code&gt;constrained&lt;/code&gt; variable (so if a list was passed, a list will be returned).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d3faf27d0e6282643b2771f5506a7fd9148c149" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;unconstrained&lt;/strong&gt; (&lt;em&gt;array&lt;/em&gt;) &amp;ndash; Unconstrained parameters used by the optimizer, to be transformed to stationary coefficients of, e.g., an autoregressive or moving average component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c8598d26b22be73970374d74a63c0085374fd39" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;unconstrained&lt;/strong&gt; (&lt;em&gt;array&lt;/em&gt;&lt;em&gt; or &lt;/em&gt;&lt;em&gt;list&lt;/em&gt;) &amp;ndash; Arbitrary matrices to be transformed to stationary coefficient matrices of the VAR. If a list, should be a list of length &lt;code&gt;order&lt;/code&gt;, where each element is an array sized &lt;code&gt;k_endog&lt;/code&gt; x &lt;code&gt;k_endog&lt;/code&gt;. If an array, should be the matrices horizontally concatenated and sized &lt;code&gt;k_endog&lt;/code&gt; x &lt;code&gt;k_endog * order&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09f22a356538f087450b5bdf0b26cf3018d59af5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;unconstrained&lt;/strong&gt; (&lt;em&gt;array_like&lt;/em&gt;) &amp;ndash; Array of unconstrained parameters used by the optimizer, to be transformed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="522e76e3f04fb57b6a78764792e422096e393360" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;unconstrained&lt;/strong&gt; (&lt;em&gt;array_like&lt;/em&gt;) &amp;ndash; Array of unconstrained parameters used by the optimizer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5d7094fb4c02410fbd864521f144ee9e0c00b9b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;unconstrained&lt;/strong&gt; (&lt;em&gt;array_like&lt;/em&gt;) &amp;ndash; Unconstrained parameters used by the optimizer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33e2f8d25d19ecf703c3e8343af1b1fdbadc025a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;unweight&lt;/strong&gt; (&lt;em&gt;bool&lt;/em&gt;) &amp;ndash; Flag indicating whether to undo the effects of the estimation weights</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="326b1880bfa4307a8407f7bcb8b531e8bf3bb1a5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;update&lt;/strong&gt;: The method &lt;code&gt;update&lt;/code&gt;, with argument &lt;code&gt;params&lt;/code&gt;, must be specified (it is used when &lt;code&gt;fit()&lt;/code&gt; is called to calculate the MLE). It takes the parameters and fills them into the appropriate state space matrices. For example, below, the &lt;code&gt;params&lt;/code&gt; vector contains variance parameters $\begin{pmatrix} \sigma_\varepsilon^2 &amp;amp; \sigma_\xi^2 &amp;amp; \sigma_\zeta^2\end{pmatrix}$, and the &lt;code&gt;update&lt;/code&gt; method must place them in the observation and state covariance matrices. More generally, the parameter vector might be mapped into many different places in all of the statespace matrices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="044391e0a68edb31b1e18869bb70a425b254470d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;update_dep&lt;/strong&gt; (&lt;em&gt;bool&lt;/em&gt;) &amp;ndash; If true, the dependence parameters are optimized, otherwise they are held fixed at their starting values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22fd85ed1b17acec8d355e666538adb6d8e31793" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;update_scale&lt;/strong&gt; (&lt;em&gt;Bool&lt;/em&gt;) &amp;ndash; If &lt;code&gt;update_scale&lt;/code&gt; is False then the scale estimate for the weights is held constant over the iteration. Otherwise, it is updated for each fit in the iteration. Default is True.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42f4af701e208ed7f45ad30ef4a68b34caa60bea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;upp&lt;/strong&gt; (&lt;em&gt;low&lt;/em&gt;&lt;em&gt;,&lt;/em&gt;) &amp;ndash; equivalence interval low &amp;lt; m1 - m2 &amp;lt; upp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e98c00fe231846f81f349c5038b140f9261c404d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;upp&lt;/strong&gt; (&lt;em&gt;low&lt;/em&gt;&lt;em&gt;,&lt;/em&gt;) &amp;ndash; equivalence interval low &amp;lt; mean &amp;lt; upp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55b3df883ce0ebf8a47e69608a65bd12bf6fd136" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;upp&lt;/strong&gt; (&lt;em&gt;low&lt;/em&gt;&lt;em&gt;,&lt;/em&gt;) &amp;ndash; equivalence interval low &amp;lt; mean of difference &amp;lt; upp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="832ce89910b36a816ba8a3a02a985fae657a7c1c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;upp&lt;/strong&gt; (&lt;em&gt;low&lt;/em&gt;&lt;em&gt;,&lt;/em&gt;) &amp;ndash; equivalence interval low &amp;lt; prop1 - prop2 &amp;lt; upp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c64bcc8619af96be7500199368a2c8757eb20eb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;upp&lt;/strong&gt; (&lt;em&gt;low&lt;/em&gt;&lt;em&gt;,&lt;/em&gt;) &amp;ndash; lower and upper limit of equivalence region</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ca07eef92ba0fb7db249a00b28adf679664b87d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;upper&lt;/strong&gt; (&lt;em&gt;lower&lt;/em&gt;&lt;em&gt;,&lt;/em&gt;) &amp;ndash; lower and upper integration limits with length equal to the number of dimensions of the multivariate normal distribution. It can contain -np.inf or np.inf for open integration intervals</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ad11407a1871d1f44394819f00a6393fbbe2d09" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;upper_bound&lt;/strong&gt; (&lt;em&gt;float&lt;/em&gt;) &amp;ndash; Maximum value of kurtosis the upper limit can be. Default is .99 confidence limit assuming normality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b908b762ebfc68e688d40e2f0b4674fb1821fb2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;upper_bound&lt;/strong&gt; (&lt;em&gt;float&lt;/em&gt;) &amp;ndash; Maximum value of skewness the upper limit can be. Default is .99 confidence limit assuming normality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b55e35e9145e4b2dfd8dfad4dbbba060289025f2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;upper_bound&lt;/strong&gt; (&lt;em&gt;float&lt;/em&gt;) &amp;ndash; Maximum value the upper confidence limit can be. Default is 99% confidence limit assuming normality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c90d00c38c20d4cbc2e897c4420312f6b5bc36bf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;upper_bound&lt;/strong&gt; (&lt;em&gt;float&lt;/em&gt;) &amp;ndash; The maximum value the upper confidence interval can take. The p-value from test_var(upper_bound) must be lower than 1 - significance level. Default is .99 confidence limit assuming normality</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52124d2da31519cc6ecf93ec43fba0874a7d8496" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;upper_bound&lt;/strong&gt; (&lt;em&gt;float&lt;/em&gt;) &amp;ndash; The maximum value the upper limit can be. Default is the 99.9% confidence value under OLS assumptions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d319e3bb85ea099abcc4cf8407b9202eedb477d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;use_basinhopping&lt;/strong&gt; (&lt;em&gt;bool&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; Should the opptimser try harder using basinhopping to find optimal values?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ec27fd8823b5f79f14f78f66ef7c165d0c58098" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;use_boxcox&lt;/strong&gt; (&lt;em&gt;{True&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;False&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;'log'&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;float}&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; Should the boxcox tranform be applied to the data first? If &amp;lsquo;log&amp;rsquo; then apply the log. If float then use lambda equal to float.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a83fb4cfdf4a06f7dc187a4e322178c726f1676f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;use_correction&lt;/strong&gt; (&lt;em&gt;'cluster'&lt;/em&gt;&lt;em&gt; or &lt;/em&gt;&lt;em&gt;'hac'&lt;/em&gt;&lt;em&gt; or &lt;/em&gt;&lt;em&gt;False&lt;/em&gt;) &amp;ndash; If False, then no small sample correction is used. If &amp;lsquo;cluster&amp;rsquo; (default), then the same correction as in cov_cluster is used. If &amp;lsquo;hac&amp;rsquo;, then the same correction as in single time series, cov_hac is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70a806efc8fef85e2aa9da520177ec9578038cac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;use_correction&lt;/strong&gt; (&lt;em&gt;'cluster'&lt;/em&gt;&lt;em&gt; or &lt;/em&gt;&lt;em&gt;'hac'&lt;/em&gt;&lt;em&gt; or &lt;/em&gt;&lt;em&gt;False&lt;/em&gt;) &amp;ndash; If False, then no small sample correction is used. If &amp;lsquo;hac&amp;rsquo; (default), then the same correction as in single time series, cov_hac is used. If &amp;lsquo;cluster&amp;rsquo;, then the same correction as in cov_cluster is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1302c63741451134a6aa7c17c9e5f56696950a75" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;use_correction&lt;/strong&gt; (&lt;em&gt;bool&lt;/em&gt;) &amp;ndash; If true (default), then the small sample correction factor is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce8feca709873eb0c526d76724cb9ee05af955b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;use_f&lt;/strong&gt; (&lt;em&gt;bool&lt;/em&gt;) &amp;ndash; If True, then the F-distribution is used. If False, then the asymptotic distribution, chisquare is used. If use_f is None, then the F distribution is used if the model specifies that use_t is True. The test statistic is proportionally adjusted for the distribution by the number of constraints in the hypothesis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbf0cf4eae8a7b245d7229dd24dbaec24966896b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;use_f&lt;/strong&gt; (&lt;em&gt;boolean&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; Whether or not to compare against the asymptotic distribution (chi-squared) or the approximate small-sample distribution (F). Default is True (i.e. default is to compare against an F distribution).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cafc4497bfbf00599718ec55adee2b3faced41e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;use_glm_weights&lt;/strong&gt; (&lt;em&gt;bool&lt;/em&gt;) &amp;ndash; Only used if the model is a GLM or GEE. If True, the residuals for the focus predictor are computed using WLS, with the weights obtained from the IRLS calculations for fitting the GLM. If False, unweighted regression is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b269a45141658996acf861fae6048dbb23b619b1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;use_pandas&lt;/strong&gt; (&lt;em&gt;bool&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; If true, returns a DataFrame when the input is a pandas Series or DataFrame. If false, return numpy ndarrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="413dea5b163d3169309069f9e65cc8f6b293ae2f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;use_sqrt&lt;/strong&gt; (&lt;em&gt;bool&lt;/em&gt;) &amp;ndash; If True, optimization is carried out using the lower triangle of the square root of the random effects covariance matrix, otherwise it is carried out using the lower triangle of the random effects covariance matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc4f3d0071a0330c55e47e019663b1736e11c2d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;use_t&lt;/strong&gt; (&lt;em&gt;bool&lt;/em&gt;) &amp;ndash; If True, the Student t-distribution is used for inference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4b1fd8b5b56a1d9cb8c1d0897b420cc4c07cc32" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;use_t&lt;/strong&gt; (&lt;em&gt;bool&lt;/em&gt;) &amp;ndash; If true, then the t distribution is used for inference. If false, then the normal distribution is used. If &lt;code&gt;use_t&lt;/code&gt; is None, then an appropriate default is used, which is &lt;code&gt;true&lt;/code&gt; if the cov_type is nonrobust, and &lt;code&gt;false&lt;/code&gt; in all other cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="808445b01c836e613abaa37f40d6061be4625205" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;use_t&lt;/strong&gt; (&lt;em&gt;bool&lt;/em&gt;) &amp;ndash; indicator whether the p-values are based on the Student-t distribution (if True) or on the normal distribution (if False)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3662872cd4e79d79457264742663568bb663c7f7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;use_t&lt;/strong&gt; (&lt;em&gt;bool&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; Flag indicating to use the Student&amp;rsquo;s t distribution when computing p-values. Default behavior depends on cov_type. See &lt;code&gt;linear_model.RegressionResults.get_robustcov_results&lt;/code&gt; for implementation details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf032333d61ce1403f5c136347160855595c342f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;use_t&lt;/strong&gt; (&lt;em&gt;bool&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; If use_t is None, then the default of the model is used. If use_t is True, then the p-values are based on the t distribution. If use_t is False, then the p-values are based on the normal distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="280b480d8411d4945c2f675ce342c628689bb37f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;use_t&lt;/strong&gt; (&lt;em&gt;bool&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; if use_t is True, then t test results are returned if use_t is False, then z test results are returned</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71a7d257a6ce83b2d15a476011bd7ae21237f572" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;use_transparams&lt;/strong&gt; (&lt;em&gt;bool&lt;/em&gt;) &amp;ndash; This parameter enable internal transformation to impose non-negativity. True to enable. Default is False. use_transparams=True imposes the no underdispersion (alpha &amp;gt; 0) constaint. In case use_transparams=True and method=&amp;rdquo;newton&amp;rdquo; or &amp;ldquo;ncg&amp;rdquo; transformation is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a23c5d456c002c0bf7fc0220dfd64c1d0992d47d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;use_vlines&lt;/strong&gt; (&lt;em&gt;bool&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; If True, vertical lines and markers are plotted. If False, only markers are plotted. The default marker is &amp;lsquo;o&amp;rsquo;; it can be overridden with a &lt;code&gt;marker&lt;/code&gt; kwarg.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1303dc806b09d282cf7562409b302352cb2d6bdd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;usedlag&lt;/strong&gt; (&lt;em&gt;int&lt;/em&gt;) &amp;ndash; Number of lags used</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fc55b66cd655c3bcd550c54bb11d7b064a9a777" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;usevar&lt;/strong&gt; (&lt;em&gt;string&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;'pooled'&lt;/em&gt;) &amp;ndash; Currently, only &amp;lsquo;pooled&amp;rsquo; is implemented. If &lt;code&gt;pooled&lt;/code&gt;, then the standard deviation of the samples is assumed to be the same. see CompareMeans.ztest_ind for different options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ba155daff2dc7914e790cd1d87717a616f0b2c4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;usevar&lt;/strong&gt; (&lt;em&gt;string&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;'pooled'&lt;/em&gt;) &amp;ndash; If &lt;code&gt;pooled&lt;/code&gt;, then the standard deviation of the samples is assumed to be the same. Only &lt;code&gt;pooled&lt;/code&gt; is currently implemented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee33e883aab06fd6ecc4a3a7bda0252ad2502702" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;usevar&lt;/strong&gt; (&lt;em&gt;string&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;'pooled'&lt;/em&gt;&lt;em&gt; or &lt;/em&gt;&lt;em&gt;'unequal'&lt;/em&gt;) &amp;ndash; If &lt;code&gt;pooled&lt;/code&gt;, then the standard deviation of the samples is assumed to be the same. If &lt;code&gt;unequal&lt;/code&gt;, then Welsh ttest with Satterthwait degrees of freedom is used</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a91b88a3ec41eaa89aac6dba4574f8428c72913e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;usevar&lt;/strong&gt; (&lt;em&gt;string&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;'pooled'&lt;/em&gt;&lt;em&gt; or &lt;/em&gt;&lt;em&gt;'unequal'&lt;/em&gt;) &amp;ndash; If &lt;code&gt;pooled&lt;/code&gt;, then the standard deviation of the samples is assumed to be the same. If &lt;code&gt;unequal&lt;/code&gt;, then the standard deviations of the samples may be different.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb922c5420848f050ee34246a03c5cd9d4d2c958" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;usevar&lt;/strong&gt; (&lt;em&gt;string&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;'pooled'&lt;/em&gt;&lt;em&gt; or &lt;/em&gt;&lt;em&gt;'unequal'&lt;/em&gt;) &amp;ndash; If &lt;code&gt;pooled&lt;/code&gt;, then the standard deviation of the samples is assumed to be the same. If &lt;code&gt;unequal&lt;/code&gt;, then the variance of Welsh ttest will be used, and the degrees of freedom are those of Satterthwaite if &lt;code&gt;use_t&lt;/code&gt; is True.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fffc581ef6ba02ad2cd52a45f317264e116a35df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;v&lt;/strong&gt; (&lt;em&gt;list&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; A list of the column number or field names (for a recarray) of variables. Default is all columns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53d423f3a0a5b3f6bd6786bc5e6013c03f505d22" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;vals&lt;/strong&gt; (&lt;em&gt;array_like&lt;/em&gt;) &amp;ndash; values that are pairwise compared</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5265d3845ab4b2fa841c9fc419c23c9f9954e343" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;value&lt;/strong&gt; &amp;ndash; The value of the parameter that was set to None in the call. The value solves the power equation given the remainding parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74ea5b8e315d4a3faeb309fd290334cf5c667e37" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;value&lt;/strong&gt; &amp;ndash; The value of the parameter that was set to None in the call. The value solves the power equation given the remaining parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54d84b771e7f48d9632e458eedeb9399370e14d5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;value&lt;/strong&gt; (&lt;em&gt;None&lt;/em&gt;&lt;em&gt; or &lt;/em&gt;&lt;em&gt;float&lt;/em&gt;&lt;em&gt; or &lt;/em&gt;&lt;em&gt;array_like&lt;/em&gt;) &amp;ndash;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aadb89222ed7e2a5eac7c91cbe9c4cfb560e07e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;value&lt;/strong&gt; (&lt;em&gt;array_like&lt;/em&gt;) &amp;ndash; value under the null hypothesis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c59f0f2f2194ab7046bc85b61ee74038ac304fff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;value&lt;/strong&gt; (&lt;em&gt;float&lt;/em&gt;) &amp;ndash; In the one sample case, value is the mean of x1 under the Null hypothesis. In the two sample case, value is the difference between mean of x1 and mean of x2 under the Null hypothesis. The test statistic is &lt;code&gt;x1_mean - x2_mean - value&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="331844eb2bc96bd90222336c222bce3ec071ae78" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;value&lt;/strong&gt; (&lt;em&gt;float&lt;/em&gt;) &amp;ndash; The value of the parameter that was set to None in the call. The value solves the power equation given the remaining parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a641553795defd99e0aaa2eb0f9465eefa6313fa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;value&lt;/strong&gt; (&lt;em&gt;float&lt;/em&gt;) &amp;ndash; difference between the means under the Null hypothesis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb2a24024284e6fcc570760c5b9808f6671028b8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;value&lt;/strong&gt; (&lt;em&gt;float&lt;/em&gt;) &amp;ndash; proportion under the Null hypothesis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b45c0b3b08ab9cf2e98ba74398e039a6a83cd786" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;value&lt;/strong&gt; (&lt;em&gt;float&lt;/em&gt;&lt;em&gt; or &lt;/em&gt;&lt;em&gt;array&lt;/em&gt;) &amp;ndash; the hypothesized value for the mean</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2f671c92a97e07d9c3d58c333d1e6200ce48177" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;value&lt;/strong&gt; (&lt;em&gt;float&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;array_like&lt;/em&gt;&lt;em&gt; or &lt;/em&gt;&lt;em&gt;None&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; This is the value of the null hypothesis equal to the proportion in the case of a one sample test. In the case of a two-sample test, the null hypothesis is that prop[0] - prop[1] = value, where prop is the proportion in the two samples. If not provided value = 0 and the null is prop[0] = prop[1]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ac5bd5aeb8ebbacf3c2ff3c8660a8558ad84300" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;var1&lt;/strong&gt; (&lt;em&gt;int&lt;/em&gt;&lt;em&gt; or &lt;/em&gt;&lt;em&gt;string&lt;/em&gt;) &amp;ndash; The column index or name of &lt;code&gt;data&lt;/code&gt; specifying the variable defining the rows of the contingency table. The variable must have only two distinct values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63115c4d4fafe2e6aae965b4eacc786926bc1b98" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;var1_name&lt;/strong&gt; (&lt;em&gt;str&lt;/em&gt;) &amp;ndash; Name of variable 1 to be plotted on the x-axis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfae1dbdd998a549de00d0ad9bddc6c9b89a2909" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;var2&lt;/strong&gt; (&lt;em&gt;int&lt;/em&gt;&lt;em&gt; or &lt;/em&gt;&lt;em&gt;string&lt;/em&gt;) &amp;ndash; The column index or name of &lt;code&gt;data&lt;/code&gt; specifying the variable defining the columns of the contingency table. The variable must have only two distinct values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d5538afc7f337bf687b5b8dd05aed75f81dafb6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;var2_name&lt;/strong&gt; (&lt;em&gt;str&lt;/em&gt;) &amp;ndash; Name of variable 2 to be plotted on the y-axis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c43cca79b8c0a539a961fb1eb232c9793bd751b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;var&lt;/strong&gt; &amp;ndash; the variance of the distribution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a2801ef3fda136551417f10918ae41304cddbcc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;var&lt;/strong&gt; &amp;ndash; variance with denominator &lt;code&gt;sum_weights - ddof&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5feb3f3963d72865a70c54014e010415a3385693" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;var_all&lt;/strong&gt; (&lt;em&gt;array_like&lt;/em&gt;) &amp;ndash; The variance for each sample</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd51ee6625f2fa9baa566dfa75f6a4d677e99f8b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;var_decomp&lt;/strong&gt; (&lt;em&gt;ndarray&lt;/em&gt;&lt;em&gt; (&lt;/em&gt;&lt;em&gt;k x k&lt;/em&gt;&lt;em&gt;)&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;lower triangular&lt;/em&gt;) &amp;ndash; Must satisfy Omega = P P&amp;rsquo;, where P is the passed matrix. Defaults to Cholesky decomposition of Omega</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ada0aab8007daecaf6d0f6b91c56369b13cf0dfc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;var_high&lt;/strong&gt; (&lt;em&gt;float&lt;/em&gt;) &amp;ndash; Highest value of the variance to plot</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6dafe6360b87f71b16c0cf2c8e97e7b81279139" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;var_low&lt;/strong&gt; (&lt;em&gt;float&lt;/em&gt;) &amp;ndash; Lowest value of the variance to plot</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e936d35d63a9d9f75f946b5479936dc1c2d7a5a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;var_order&lt;/strong&gt; (&lt;em&gt;sequence&lt;/em&gt;) &amp;ndash; Alternate variable order for Cholesky decomposition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82c388192756a479fc911c126587a3b86654ad9c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;var_pos&lt;/strong&gt; (&lt;em&gt;sequence&lt;/em&gt;) &amp;ndash; The position of the variable in exog to be tested.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76bd80a107f737d229d42b4ce8b002c245f27c23" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;var_power&lt;/strong&gt; (&lt;em&gt;float&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; The variance power. The default is 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15f8c3f22f091b749ffeab46257d1bdf6aa727b2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;var_rep&lt;/strong&gt; (&lt;em&gt;(k_ar x neqs x neqs)&lt;/em&gt;) &amp;ndash; KxK parameter matrices \(A_i\) of the corresponding VAR representation. If the return value is assigned to a variable &lt;code&gt;A&lt;/code&gt;, these matrices can be accessed via &lt;code&gt;A[i]&lt;/code&gt; for \(i=0, \ldots, k_{ar}-1\).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a8247a2c2a869acea308773b48746751f037b0e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;var_step&lt;/strong&gt; (&lt;em&gt;float&lt;/em&gt;) &amp;ndash; Increments to evaluate the mean</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5f3288bfaf0409c4c9cf1ba49f302e63806794c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;var_type&lt;/strong&gt; (&lt;em&gt;str&lt;/em&gt;) &amp;ndash;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0893a05a51361ffda948e17dfc52d0047f66f99" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;var_weights&lt;/strong&gt; (&lt;em&gt;array-like&lt;/em&gt;) &amp;ndash; 1d array of variance (analytic) weights. The default is 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cf148333da372c9a8c5455ad1b19160b08a899a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;var_weights&lt;/strong&gt; (&lt;em&gt;array-like&lt;/em&gt;) &amp;ndash; 1d array of variance (analytic) weights. The default is None. If None is selected or a blank value, then the algorithm will replace with an array of 1&amp;rsquo;s with length equal to the endog. WARNING: Using weights is not verified yet for all possible options and results, see Notes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="714c3e5c80eb0ded1deeca09b38eb3f13652ab91" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;vare&lt;/strong&gt; &amp;ndash; variance of difference along given axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13cd94e8a98544f1070dcb76a7f401117d68bd8c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;variable&lt;/strong&gt; (&lt;em&gt;integer&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; Index of the endogenous variable for which the diagnostic plots should be created. Default is 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d9388192379c7e46768f11b8bab0fad7de3d375" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;variables&lt;/strong&gt; (&lt;em&gt;int&lt;/em&gt;&lt;em&gt; or &lt;/em&gt;&lt;em&gt;str&lt;/em&gt;&lt;em&gt; or &lt;/em&gt;&lt;em&gt;iterable of int&lt;/em&gt;&lt;em&gt; or &lt;/em&gt;&lt;em&gt;string&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; Integer index or string name of the variable whose coefficient will be plotted. Can also be an iterable of integers or strings. Default is the first variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db3745b690bb3d1fea54023284155536c8fcf534" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;variance&lt;/strong&gt; (&lt;em&gt;a variance function&lt;/em&gt;) &amp;ndash; Measures the variance as a function of the mean probabilities. See the individual families for the default variance function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06f32bcd9a55e094daff0acdeb271c7f9b7486b1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;variance&lt;/strong&gt; (&lt;em&gt;float&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; The variance for approximating diffuse initial conditions. Default can be found in the Representation class documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b45cdd0d2ab167154c190fd14cbb3ff51048dd0a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;variance&lt;/strong&gt; (&lt;em&gt;float&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; The variance for approximating diffuse initial conditions. Default is 1e6.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40a1a624cf555a9ba2d2d6c23ee480b5c0486826" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;variance_prop&lt;/strong&gt; (&lt;em&gt;None&lt;/em&gt;&lt;em&gt; or &lt;/em&gt;&lt;em&gt;float in&lt;/em&gt;&lt;em&gt; (&lt;/em&gt;&lt;em&gt;0&lt;/em&gt;&lt;em&gt;,&lt;/em&gt;&lt;em&gt;1&lt;/em&gt;&lt;em&gt;)&lt;/em&gt;) &amp;ndash; If this is None, then the variances for the two one sided tests are based on the proportions equal to the equivalence limits. If variance_prop is given, then it is used to calculate the variance for the TOST statistics. If this is based on an sample, then the estimated proportion can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c334c6f8adbf65027533503061fa937be619ccab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;varjoint&lt;/strong&gt; (&lt;em&gt;array&lt;/em&gt;) &amp;ndash; joint variance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55aef0f56462869cea4aa2b62ff15e72380ce57b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;varjoint&lt;/strong&gt; (&lt;em&gt;float&lt;/em&gt;) &amp;ndash; joint variance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f943038606e9bda10468464f853cafa9e983a682" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;varnames&lt;/strong&gt; (&lt;em&gt;list of str&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; Variable names. Used for y-axis labels, and if &lt;code&gt;add_titles&lt;/code&gt; is True also for titles. If not given, integers 1..data.shape[1] are used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45ba9fe2d90ad2642d2b13cad1a97ab4867cb653" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;vars&lt;/strong&gt; (&lt;em&gt;dictionary&lt;/em&gt;) &amp;ndash; dictionary of variables with converted dummy variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f78a6c8e716eabe4e34d1cd1ec25f231b708d1fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;vc_formula&lt;/strong&gt; (&lt;em&gt;dict-like&lt;/em&gt;) &amp;ndash; Formulas describing variance components. &lt;code&gt;vc_formula[vc]&lt;/code&gt; is the formula for the component with variance parameter named &lt;code&gt;vc&lt;/code&gt;. The formula is processed into a matrix, and the columns of this matrix are linearly combined with independent random coefficients having mean zero and a common variance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cbf739a7a6e772b00360fd2d1528855ab245bd5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;vc_formulas&lt;/strong&gt; (&lt;em&gt;dictionary&lt;/em&gt;) &amp;ndash; vc_formulas[name] is a one-sided formula that creates one collection of random effects with a common variance prameter. If using a categorical expression to produce variance components, note that generally &lt;code&gt;0 + &amp;hellip;&lt;/code&gt; should be used so that an intercept is not included.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c76fd472a9cf2c6177528c6ab376b19f38f6177" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;vc_names&lt;/strong&gt; (&lt;em&gt;list of strings&lt;/em&gt;) &amp;ndash; The names of the random effect realizations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a4c89b5b7750c255c1c426aaee3f05dee32820d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;vc_p&lt;/strong&gt; (&lt;em&gt;float&lt;/em&gt;) &amp;ndash; Prior standard deviation for variance component parameters (the prior standard deviation of log(s) is vc_p, where s is the standard deviation of a random effect).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5a73d4e7c12ff66e1ad6836dd093a686197c42f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;vcomp&lt;/strong&gt; (&lt;em&gt;array-like&lt;/em&gt;) &amp;ndash; Estimate of the variance components</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0221ec6a3f09dc65d54357488ba1779f228918b6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;vcov&lt;/strong&gt; (&lt;em&gt;string&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;method used to calculate the variance-covariance matrix&lt;/em&gt;) &amp;ndash;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22013eb52aa23964ddcc1cb53c3e99efcf88fa54" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;vcp_names&lt;/strong&gt; (&lt;em&gt;list of strings&lt;/em&gt;) &amp;ndash; The names of the variance component parameters (corresponding to distinct labels in ident). If None, default names are constructed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc703e7d7ca3a0289a81dbdcb2dc91757cdd1029" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;vcp_p&lt;/strong&gt; (&lt;em&gt;float&lt;/em&gt;) &amp;ndash; The prior standard deviation for the logarithms of the standard deviations of the random effects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b038c97f968291ccd455ee198026086851e1f85a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;vecm&lt;/strong&gt; (bool, default: &lt;code&gt;False&lt;/code&gt;) &amp;ndash; &lt;code&gt;True&lt;/code&gt; indicates that the model is a VECM. In case of a VAR model this argument must be &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbf234d0de0235cc3524bf2c9c823498a5fd4e95" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;verbose&lt;/strong&gt; (&lt;em&gt;bool&lt;/em&gt;) &amp;ndash; If True, print a table with the results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d232790b3bb82a0920b34d646fa2ec843e07854" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;verbose&lt;/strong&gt; (&lt;em&gt;bool&lt;/em&gt;) &amp;ndash; If True, print the gradient norm to the screen each time it is calculated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab1656a74377253034f411da759e698c164f354a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;verbose&lt;/strong&gt; (&lt;em&gt;bool&lt;/em&gt;) &amp;ndash; Print eigenvalues of the VAR(1) companion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c71975b99a398b05a8558b8e8250f2264fb2d314" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;verbose&lt;/strong&gt; (&lt;em&gt;bool&lt;/em&gt;) &amp;ndash; print results if true</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3dd1a217fa217bb43e410d7690b8ef6d05b4342" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;verbose&lt;/strong&gt; (&lt;em&gt;bool&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;default False&lt;/em&gt;) &amp;ndash; Print order selection output to the screen</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69479ff8de4597dd8bb75f32193cf82573ab270c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;verification:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14aac8e840c9f4889fde9d5fb2bdb314544ea6ad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;vif&lt;/strong&gt; &amp;ndash; variance inflation factor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebe9e73fb16fba03ec675d2f75000f5749b1c5d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;vlines_kwargs&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3.2/library/stdtypes.html#dict&quot;&gt;dict&lt;/a&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; Optional dictionary of keyword arguments that are passed to vlines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="309745b60861bff516281dd277022f0caf720a36" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;vname&lt;/strong&gt; (&lt;em&gt;string&lt;/em&gt;) &amp;ndash; The name of the variable to be updated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c2ce46e264ff0ab5d213b5457a1451b6608b78c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;vname&lt;/strong&gt; (&lt;em&gt;string&lt;/em&gt;) &amp;ndash; The variable for which the fitting data is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7e35e9351a45122eb5556ee97b4c295e6e0e0a8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;vname&lt;/strong&gt; (&lt;em&gt;string&lt;/em&gt;) &amp;ndash; The variable for which the split data is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d933a517c7eea762e7c2459bbe4405d6e672d862" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;vtype&lt;/strong&gt; (&lt;em&gt;string&lt;/em&gt;) &amp;ndash; Either &amp;lsquo;re&amp;rsquo; or &amp;lsquo;vc&amp;rsquo;, depending on whether the profile analysis is for a random effect or a variance component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e179fbad02168d99cc6ec8f5d438365fcb232db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;w&lt;/strong&gt; &amp;ndash; The weights for the IRLS steps</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="587ef1957ee66dce49c68af24e1da3529c8fc8b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;w&lt;/strong&gt; &amp;ndash; estimate for the weighting matrix or covariance of the moment condition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="760ac8fb59697b9c86580633c2ecb3036e6d0f80" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;w&lt;/strong&gt; (&lt;em&gt;array&lt;/em&gt;) &amp;ndash; frequencies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c34dcddade7ac49e86b5a7a260bff8d385d76e3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;wargs&lt;/strong&gt; (&lt;em&gt;tuple&lt;/em&gt;&lt;em&gt; or &lt;/em&gt;&lt;a href=&quot;https://docs.python.org/3.2/library/stdtypes.html#dict&quot;&gt;dict&lt;/a&gt;) &amp;ndash; parameters that are required by some kernel methods to estimate the long-run covariance. Not used yet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcdb7217cd2f2cea6a0e80543e3339e1acf7f175" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;wargs`&lt;/strong&gt; (&lt;em&gt;tuple&lt;/em&gt;&lt;em&gt; or &lt;/em&gt;&lt;a href=&quot;https://docs.python.org/3.2/library/stdtypes.html#dict&quot;&gt;dict&lt;/a&gt;&lt;em&gt;,&lt;/em&gt;) &amp;ndash;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1178cd245e309ba3694ce3f0e70242c1ac45bfec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;wasinvertible&lt;/strong&gt; (&lt;em&gt;boolean&lt;/em&gt;) &amp;ndash; True if the MA lag-polynomial was already invertible, returned if retnew is false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e056ab4744c966e7dc34a1b38d117726e115c667" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;weights2&lt;/strong&gt; (&lt;em&gt;weights1&lt;/em&gt;&lt;em&gt;,&lt;/em&gt;) &amp;ndash; weights for each observation of data1 and data2 respectively, with same length as zero axis of corresponding dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97798f9791f9f9ba6bb47537450d59484d6fab6d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;weights&lt;/strong&gt; &amp;ndash; psi(z) = (1 - (z/c)**2)**2 for |z| &amp;lt;= R</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f88222d5a37b4431ddebc594b2366aacc2f5ea2f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;weights&lt;/strong&gt; &amp;ndash; weights(z) = 1 for |z| &amp;lt;= a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f8548fc905fe9bc1d2b81f4847d1c2f224e7898" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;weights&lt;/strong&gt; &amp;ndash; weights(z) = 1 for |z| &amp;lt;= c</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4a8ae52c93700806829c8166e9a636354e94ea0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;weights&lt;/strong&gt; &amp;ndash; weights(z) = 1 for |z| &amp;lt;= t</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="754996117fa51a258f9dfe5285a734a664b30732" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;weights&lt;/strong&gt; &amp;ndash; weights(z) = exp(-a*|z|)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58f7bdc9b498d8782ad5fd8c9cdaf66dcaefeb6b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;weights&lt;/strong&gt; &amp;ndash; weights(z) = np.ones(z.shape)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0055af97de5f67339b37caad1728b2368fc87a7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;weights&lt;/strong&gt; &amp;ndash; weights(z) = sin(z/a)/(z/a) for |z| &amp;lt;= a*pi</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="075b679f6446baa15f9b11870d1ebccf6db415ed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;weights&lt;/strong&gt; (&lt;em&gt;None&lt;/em&gt;&lt;em&gt; or &lt;/em&gt;&lt;em&gt;1-D ndarray&lt;/em&gt;) &amp;ndash; weights for each observation, with same length as zero axis of data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c62fa6e2f29d8ffccf3630ba0c997b05ac50fcba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;weights&lt;/strong&gt; (&lt;em&gt;None&lt;/em&gt;&lt;em&gt; or &lt;/em&gt;&lt;em&gt;array&lt;/em&gt;) &amp;ndash; weights are only used if other is not an instance of DescrStatsW</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3880649a7d94f8c8b346155e1b4f2d8632ba6cba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;weights&lt;/strong&gt; (&lt;em&gt;None&lt;/em&gt;&lt;em&gt; or &lt;/em&gt;&lt;em&gt;ndarray&lt;/em&gt;) &amp;ndash; case weights for the two samples. For details on weights see &lt;code&gt;DescrStatsW&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4396eac858d8e223f72ff83331acf3c94650f869" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;weights&lt;/strong&gt; (&lt;em&gt;array-like&lt;/em&gt;) &amp;ndash; An array of weights to use in the analysis. The weights must be constant within each group. These correspond to probability weights (pweights) in Stata.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c961abf0fcd5ed2d595ee9b223be191a189ecc7b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;weights&lt;/strong&gt; (&lt;em&gt;array-like&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; 1d array of weights. If you supply 1/W then the variables are pre- multiplied by 1/sqrt(W). If no weights are supplied the default value is 1 and WLS results are the same as OLS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="913888921e35eeee509e2a4cacf177130841685f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;weights&lt;/strong&gt; (&lt;em&gt;array&lt;/em&gt;) &amp;ndash; The reported weights are determined by passing the scaled residuals from the last weighted least squares fit in the IRLS algortihm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c44f8b5f0404a39192e88051bc0ae78f4563e526" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;weights&lt;/strong&gt; (&lt;em&gt;array&lt;/em&gt;) &amp;ndash; optimal weighting matrix calculated with final parameter estimates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46296d289117d897470b7105c1d1e8023a585210" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;weights&lt;/strong&gt; (&lt;em&gt;array&lt;/em&gt;) &amp;ndash; weighting matrix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c49c918332a126216a0e511789993ad1a07325b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;weights&lt;/strong&gt; (&lt;em&gt;array&lt;/em&gt;) &amp;ndash; weighting matrix for moment conditions. If weights is None, then the identity matrix is used</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a292770174a0857170fcf074bf13d2730791a91e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;weights&lt;/strong&gt; (&lt;em&gt;array&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; Series weights to use after transforming data according to standardize or demean when computing the principal components.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c3a73404f165262c80b9404dcaf3884db9e8e6e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;weights&lt;/strong&gt; (&lt;em&gt;array_like&lt;/em&gt;) &amp;ndash; The interpretation of weights depends on the wt argument. If both are None, then the simple kappa is computed. see wt for the case when wt is not None If weights is two dimensional, then it is directly used as a weight matrix. For computing the variance of kappa, the maximum of the weights is assumed to be smaller or equal to one. TODO: fix conflicting definitions in the 2-Dim case for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9a45c3c8a81ea9c1d2af5fdc5b329e722b2e34b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;weights&lt;/strong&gt; (&lt;em&gt;array_like&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; Weights interpreted as in WLS, used for the variance of the predicted residual.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1885728f00aca13f31dd4b1cdb60e94c9175d208" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;weights&lt;/strong&gt; (&lt;em&gt;tuple of None&lt;/em&gt;&lt;em&gt; or &lt;/em&gt;&lt;em&gt;ndarrays&lt;/em&gt;) &amp;ndash; Case weights for the two samples. For details on weights see &lt;code&gt;DescrStatsW&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd164be2d0e48d98a952dae926d8bd6a9db3ba4b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;weights_func&lt;/strong&gt; (&lt;em&gt;callable&lt;/em&gt;) &amp;ndash; weights_func is called with nlags as argument to get the kernel weights. default are Bartlett weights</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bdf0a4e9b3484bfd5ae7ba4142fa0426733035e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;weights_method&lt;/strong&gt; (&lt;em&gt;string 'cov'&lt;/em&gt;) &amp;ndash; If method=&amp;rsquo;cov&amp;rsquo; is cov then the matrix is calculated as simple covariance of the moment conditions. see fit method for available aoptions for the weight and covariance matrix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6d0dd35633698939d761550b1433024ae9a24ab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;weights_method&lt;/strong&gt; (&lt;em&gt;string&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;defines method for robust&lt;/em&gt;) &amp;ndash;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecd89241149bad219d64dc76f6d310d645e1fb05" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;weights_method&lt;/strong&gt; (&lt;em&gt;{'cov'&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;..}&lt;/em&gt;) &amp;ndash; method to use to estimate the optimal weighting matrix, see calc_weightmatrix for details</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad9a108fd6f7186d5f2250134f83f406ea5e0f1a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;wfactor&lt;/strong&gt; (&lt;em&gt;float&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; Factor by which the central 50% region is multiplied to find the outer region (analog of &amp;ldquo;whiskers&amp;rdquo; of a classical boxplot).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1c811626c86cf8a67dea4dfd0bbb07bc812561c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;which&lt;/strong&gt; (&lt;em&gt;'mean'&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;'linear'&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;'prob'&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional.&lt;/em&gt;) &amp;ndash; &amp;lsquo;mean&amp;rsquo; returns the exp of linear predictor exp(dot(exog,params)). &amp;lsquo;linear&amp;rsquo; returns the linear predictor dot(exog,params). &amp;lsquo;prob&amp;rsquo; return probabilities for counts from 0 to max(endog). Default is &amp;lsquo;mean&amp;rsquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b26a820e9fc43dece0e6881a2290afc260d096e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;which&lt;/strong&gt; (&lt;em&gt;string&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; Define values that will be predicted. &amp;lsquo;mean&amp;rsquo;, &amp;lsquo;mean-main&amp;rsquo;, &amp;lsquo;linear&amp;rsquo;, &amp;lsquo;mean-nonzero&amp;rsquo;, &amp;lsquo;prob-zero, &amp;lsquo;prob&amp;rsquo;, &amp;lsquo;prob-main&amp;rsquo; Default is &amp;lsquo;mean&amp;rsquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5e206faef472567ed31acb385010ee674bcfaf7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;which&lt;/strong&gt; (&lt;em&gt;{'filtered'&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;'smoothed'}&lt;/em&gt;&lt;em&gt;, or &lt;/em&gt;&lt;em&gt;None&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; Type of state estimate to plot. Default is &amp;lsquo;smoothed&amp;rsquo; if smoothed results are available otherwise &amp;lsquo;filtered&amp;rsquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a869aa7fd771b900e886f571fe2661c5d12d3c68" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;whitened&lt;/strong&gt; &amp;ndash; sqrt(weights)*X</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6471ecd4a2495162d4ba430a3a5f15f8f9518135" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;whole&lt;/strong&gt; (&lt;em&gt;{0&lt;/em&gt;&lt;em&gt;,&lt;/em&gt;&lt;em&gt;1}&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; options for scipy.signal.freqz Normally, frequencies are computed from 0 to pi (upper-half of unit-circle. If whole is non-zero compute frequencies from 0 to 2*pi.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36f73993da232c6110a91a288f0282a75210329e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;window&lt;/strong&gt; (&lt;em&gt;int&lt;/em&gt;) &amp;ndash;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1dc282e4e7a69a3578782034a6fbd450fef7916" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;window_type&lt;/strong&gt; (&lt;em&gt;{'expanding'&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;'rolling'}&lt;/em&gt;) &amp;ndash;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13db9691944b5301078db57dede9e3fabe71d687" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;windsize&lt;/strong&gt; (&lt;em&gt;int&lt;/em&gt;) &amp;ndash; window size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="690c68686c3f3e83b4225c16d9c3dd19c4867063" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;with_presample&lt;/strong&gt; (bool, default: &lt;code&gt;False&lt;/code&gt;) &amp;ndash; If &lt;code&gt;False&lt;/code&gt;, the pre-sample data (the first &lt;code&gt;k_ar&lt;/code&gt; values) will not be plotted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fec426a801168f84b06be1acd4d6b666c50c0bf1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;within&lt;/strong&gt; (&lt;em&gt;a list of string&lt;/em&gt;&lt;em&gt;(&lt;/em&gt;&lt;em&gt;s&lt;/em&gt;&lt;em&gt;)&lt;/em&gt;) &amp;ndash; The within-subject factors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c41a67b3bc1b8909a233a4ab43be808ed5a43199" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;wls_method&lt;/strong&gt; (&lt;em&gt;str&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; options are &amp;lsquo;lstsq&amp;rsquo;, &amp;lsquo;pinv&amp;rsquo; and &amp;lsquo;qr&amp;rsquo; specifies which linear algebra function to use for the irls optimization. Default is &lt;code&gt;lstsq&lt;/code&gt; which uses the same underlying svd based approach as &amp;lsquo;pinv&amp;rsquo;, but is faster during iterations. &amp;lsquo;lstsq&amp;rsquo; and &amp;lsquo;pinv&amp;rsquo; regularize the estimate in singular and near-singular cases by truncating small singular values based on &lt;code&gt;rcond&lt;/code&gt; of the respective numpy.linalg function. &amp;lsquo;qr&amp;rsquo; is only valied for cases that are not singular nor near-singular.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eb303f2dc174fb027eb0eda60cc68561c9e1d6b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;worN&lt;/strong&gt; (&lt;em&gt;{None&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;int}&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; option for scipy.signal.freqz (read &amp;ldquo;w or N&amp;rdquo;) If None, then compute at 512 frequencies around the unit circle. If a single integer, the compute at that many frequencies. Otherwise, compute the response at frequencies given in worN</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="624d8c52264353313d8b625eb0b67aa980727fe5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;writer&lt;/strong&gt; &amp;ndash; The StataWriter instance has a write_file method, which will write the file to the given &lt;code&gt;fname&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55bc3477f4bfead13b68d0ff3ad267874809db86" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;wt&lt;/strong&gt; (&lt;em&gt;None&lt;/em&gt;&lt;em&gt; or &lt;/em&gt;&lt;em&gt;string&lt;/em&gt;) &amp;ndash;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e21f79fa06cb68c7b4dfabe6a957b04b98505b8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;x12path&lt;/strong&gt; (&lt;em&gt;str&lt;/em&gt;&lt;em&gt; or &lt;/em&gt;&lt;em&gt;None&lt;/em&gt;) &amp;ndash; The path to x12 or x13 binary. If None, the program will attempt to find x13as or x12a on the PATH or by looking at X13PATH or X12PATH depending on the value of prefer_x13.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="217fb66004a283523b2ac196955e16bc50c5cb68" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;x1&lt;/strong&gt; &amp;ndash; second sample for 2 independent samples test. If None, then a one-sample test is performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb859ab0afcf20ee1b6933545cbff5c6db3370c2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;x1&lt;/strong&gt; (&lt;em&gt;1d array&lt;/em&gt;) &amp;ndash; label or group array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a90aab2f30dec8e070d4159f1625f11d1a62ddb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;x1&lt;/strong&gt; (&lt;em&gt;array_like&lt;/em&gt;&lt;em&gt; or &lt;/em&gt;&lt;em&gt;None&lt;/em&gt;) &amp;ndash; one sample or first sample for 2 independent samples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a366c61b992dd910f1550b098b4a539fb18f7213" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;x2&lt;/strong&gt; (&lt;em&gt;1d array&lt;/em&gt;&lt;em&gt; (&lt;/em&gt;&lt;em&gt;float&lt;/em&gt;&lt;em&gt;)&lt;/em&gt;) &amp;ndash; continuous variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="224d6b1b67250779b051b4a255572c1524314e6c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;x2&lt;/strong&gt; (&lt;em&gt;x1&lt;/em&gt;&lt;em&gt;,&lt;/em&gt;) &amp;ndash; The performance measure depends on the difference between these two arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fab20ae757dd2167e91093b8599bb7d6536de291" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;x2&lt;/strong&gt; (&lt;em&gt;x1&lt;/em&gt;&lt;em&gt;,&lt;/em&gt;) &amp;ndash; two dependent samples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5429f74317d427c1c15a8f7f5375611197513df3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;x2&lt;/strong&gt; (&lt;em&gt;x1&lt;/em&gt;&lt;em&gt;,&lt;/em&gt;) &amp;ndash; two independent samples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eca1234434e1836e607679dc66abeece48cc7f8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;x2&lt;/strong&gt; (&lt;em&gt;x1&lt;/em&gt;&lt;em&gt;,&lt;/em&gt;) &amp;ndash; two independent samples, see notes for 2-D case</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="766a5a2e61a45354209de6abee9ae828f6234461" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;x&lt;/strong&gt; &amp;ndash; Quantile corresponding to the upper tail probability q.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="863dedc3fda31c1ec46b491460f1e6f743cdf54f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;x&lt;/strong&gt; &amp;ndash; quantile corresponding to the lower tail probability q.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55a25ff265b4d99ec30efa22a5a406d9dc9d113d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;x&lt;/strong&gt; (&lt;em&gt;1d array&lt;/em&gt;) &amp;ndash; observations of time series for which bds statistics is calculated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3220c31ce7d5cf67fcef3daba70e8d8f72079f0b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;x&lt;/strong&gt; (&lt;em&gt;1d array&lt;/em&gt;) &amp;ndash; observations of time series for which pacf is calculated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1ee2f4ba57161be52ee0a7438f973e223810262" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;x&lt;/strong&gt; (&lt;em&gt;array-like&lt;/em&gt;) &amp;ndash;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75821d8e007a9fc1dbd9dce698690e533694da6a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;x&lt;/strong&gt; (&lt;em&gt;array-like&lt;/em&gt;) &amp;ndash; Array for which to get the bandwidth</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f06e20b39775253eb0b3cbca591df3b8337283ee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;x&lt;/strong&gt; (&lt;em&gt;array-like&lt;/em&gt;) &amp;ndash; Observations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0342b07a5ad76fcfe7ca45f201298726d78724a1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;x&lt;/strong&gt; (&lt;em&gt;array-like&lt;/em&gt;) &amp;ndash; Seasonal data to plot. If dates is None, x must be a pandas object with a PeriodIndex or DatetimeIndex with a monthly frequency.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5e98e33e4b6a5e37d83cc23f9a479c408788549" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;x&lt;/strong&gt; (&lt;em&gt;array-like&lt;/em&gt;) &amp;ndash; The &lt;code&gt;x&lt;/code&gt; factor levels constitute the x-axis. If a &lt;code&gt;pandas.Series&lt;/code&gt; is given its name will be used in &lt;code&gt;xlabel&lt;/code&gt; if &lt;code&gt;xlabel&lt;/code&gt; is None.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc603fd9350acdb667d5fc179c87e44f912a2b34" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;x&lt;/strong&gt; (&lt;em&gt;array-like&lt;/em&gt;) &amp;ndash; Time series. If 2d, individual series are in columns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d60830d2efdaeab86b3c3e137b63c031e50eb62" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;x&lt;/strong&gt; (&lt;em&gt;array-like&lt;/em&gt;) &amp;ndash; Time-series data. Should be 1d or n x 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6527f6cd50034a9f758e2c550a72bb85582625ef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;x&lt;/strong&gt; (&lt;em&gt;array&lt;/em&gt;) &amp;ndash; Time series data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ce0c20057bd523daf75b21b7644c689b191a5fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;x&lt;/strong&gt; (&lt;em&gt;array&lt;/em&gt;) &amp;ndash; Time series data. Must be 1d.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b8d30566042b7a058ad8a4fea8de09d3971cc32" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;x&lt;/strong&gt; (&lt;em&gt;array&lt;/em&gt;) &amp;ndash; X data for plot. Not needed if line is &amp;lsquo;45&amp;rsquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2365bb3d70b233e9c66ac16627ef37caf4295d7e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;x&lt;/strong&gt; (&lt;em&gt;array&lt;/em&gt;) &amp;ndash; parameters at which the derivative is evaluated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="925e4693bb0806aa73b45b525b39e2ec4f0e0fee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;x&lt;/strong&gt; (&lt;em&gt;array&lt;/em&gt;) &amp;ndash; time series data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc16a24cc0fd75ad625916b6a80d966ba98bbe6a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;x&lt;/strong&gt; (&lt;em&gt;array&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;2d&lt;/em&gt;) &amp;ndash; data for test whether the time series in the second column Granger causes the time series in the first column</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb0a6cb48ac873d969bd2dff7c53b9b1bb439974" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;x&lt;/strong&gt; (&lt;em&gt;array_like&lt;/em&gt;) &amp;ndash; Array of time-series values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54debc6c5963aedb1a9c3cc7a955a43e106819cb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;x&lt;/strong&gt; (&lt;em&gt;array_like&lt;/em&gt;) &amp;ndash; data array, 1d or 2d, if 2d then observations in rows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b71c23f50e97c0b0ca316fe617c8e06733c9a81" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;x&lt;/strong&gt; (&lt;em&gt;array_like&lt;/em&gt;) &amp;ndash; data array, currently only 1d</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1f057e7d29d1da03dd6dd3f5f533ee6f246bad2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;x&lt;/strong&gt; (&lt;em&gt;array_like&lt;/em&gt;) &amp;ndash; data values stacked for all groups</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb056b3ea99a746c47d1ab5aebc29e97c633e1ed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;x&lt;/strong&gt; (&lt;em&gt;array_like&lt;/em&gt;) &amp;ndash; data, numeric</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a121fd07aa3d2013fa5a596fac4c21b3512d9b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;x&lt;/strong&gt; (&lt;em&gt;array_like&lt;/em&gt;) &amp;ndash; data, numeric, contains either one group, if y is also given, or both groups, if additionally a group indicator is provided</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33575c5495bda37ba8ddf4c4babf18f4c1b00c84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;x&lt;/strong&gt; (&lt;em&gt;array_like&lt;/em&gt;) &amp;ndash; exogenous variable, regressors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6acb7146c9af10abb613c6553401fe70e32546a0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;x&lt;/strong&gt; (&lt;em&gt;array_like&lt;/em&gt;) &amp;ndash; quantiles</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4d799326e71f4e85d3e5ba9549f75b2b8b75914" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;x&lt;/strong&gt; (&lt;em&gt;array_like&lt;/em&gt;) &amp;ndash; value at which function derivative is evaluated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="204dec7febec7d2d03eaac61d75776690d6c751a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;x&lt;/strong&gt; (&lt;em&gt;array_like&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;1d&lt;/em&gt;) &amp;ndash; Data series</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="493bf3866f453a139ad86f23be0611cce949a9e4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;x&lt;/strong&gt; (&lt;em&gt;array_like&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;1d&lt;/em&gt;) &amp;ndash; data array,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8f3373309e12c25aa0da219fb51015173f7f241" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;x&lt;/strong&gt; (&lt;em&gt;array_like&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;1d&lt;/em&gt;) &amp;ndash; data series</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7028f94b63cf7c51d3d8cf0d10bd38a5693a137a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;x&lt;/strong&gt; (&lt;em&gt;array_like&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;1d&lt;/em&gt;) &amp;ndash; data series, regression residuals when used as diagnostic test</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c54f3280b6d226fde270a0035b84d7436ed67fb4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;x&lt;/strong&gt; (&lt;em&gt;array_like&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;1d&lt;/em&gt;) &amp;ndash; data series, sample</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57720bd0d945e91601c490420eda801852d57966" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;x&lt;/strong&gt; (&lt;em&gt;array_like&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;1d&lt;/em&gt;&lt;em&gt; or &lt;/em&gt;&lt;em&gt;2d&lt;/em&gt;) &amp;ndash; data, if 2d, then each row or column is independently detrended with the same trendorder, but independent trend estimates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3fe212b5f79f190025c19822b9c3b8f64eab7fc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;x&lt;/strong&gt; (&lt;em&gt;array_like&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;1d&lt;/em&gt;&lt;em&gt; or &lt;/em&gt;&lt;em&gt;2d&lt;/em&gt;) &amp;ndash; data; if 2d, observation in rows and variables in columns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d939fd255ae216a4980a5e347a6e0dbbdfc508a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;x&lt;/strong&gt; (&lt;em&gt;array_like&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;2d&lt;/em&gt;) &amp;ndash; 2d data, observation in rows and variables in columns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5919c24bc9f19f9583d5ea653a7fee191647e4cb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;x&lt;/strong&gt; (&lt;em&gt;array_like&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;2d&lt;/em&gt;) &amp;ndash; input data series, time in rows, variables in columns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24e02cb32bb45b10c2f38874c6f3a28f6f087e56" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;x&lt;/strong&gt; (&lt;em&gt;array_like&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;2d&lt;/em&gt;&lt;em&gt; (&lt;/em&gt;&lt;em&gt;N&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;k&lt;/em&gt;&lt;em&gt;)&lt;/em&gt;) &amp;ndash; data with N cases and k variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ee8b0e564943921804ae6f46c7bd1674ae6f8e5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;x&lt;/strong&gt; (&lt;em&gt;array_like&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;2d&lt;/em&gt;&lt;em&gt; (&lt;/em&gt;&lt;em&gt;N&lt;/em&gt;&lt;em&gt;,&lt;/em&gt;&lt;em&gt;k&lt;/em&gt;&lt;em&gt;)&lt;/em&gt;) &amp;ndash; data with N cases and k variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c620bde3e64586ef4589c26a249b615ef8b240b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;x_low, x_upp&lt;/strong&gt; &amp;ndash; lower and upper bound of rejection region</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb68a2c8f4ef2930ca97f3243b6b68096ed8c8cf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;x_var&lt;/strong&gt; (&lt;em&gt;int&lt;/em&gt;&lt;em&gt; or &lt;/em&gt;&lt;em&gt;str&lt;/em&gt;) &amp;ndash; Name or index of regressor in exog matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd81ade09cfd64f426e3f4b908e0ca8c1822be0b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;xdata&lt;/strong&gt; (&lt;em&gt;ndarray&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; The independent variable for the data. If not given, it is assumed to be an array of integers 0..N-1 with N the length of the vectors in &lt;code&gt;data&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="105e0e40674b4fb897e1e9a10b00edc22e62070c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;xlabel&lt;/strong&gt; (&lt;em&gt;str&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; Label to use for &lt;code&gt;x&lt;/code&gt;. Default is &amp;lsquo;X&amp;rsquo;. If &lt;code&gt;x&lt;/code&gt; is a &lt;code&gt;pandas.Series&lt;/code&gt; it will use the series names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11a8288a1df52b06cb86710e2bac4e51120b65d3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;xlabel&lt;/strong&gt; (&lt;em&gt;string&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; Name to be displayed on x axis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="371dfc2e5ccb2a743541c87276c645f295016809" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;xname&lt;/strong&gt; (&lt;em&gt;List of strings of length equal to the number of parameters&lt;/em&gt;) &amp;ndash; Names of the independent variables (optional)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5201f56340174d3189a89798f410920db5705f2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;xname&lt;/strong&gt; (&lt;em&gt;list of strings&lt;/em&gt;&lt;em&gt; or &lt;/em&gt;&lt;em&gt;None&lt;/em&gt;) &amp;ndash; optional names for the exogenous variables, default is &amp;ldquo;var_xx&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e67dbca4dd7145ace899b0f152b7c7a3bb1abb2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;xname&lt;/strong&gt; (&lt;em&gt;list of strings&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; Default is &lt;code&gt;var_##&lt;/code&gt; for ## in p the number of regressors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65587f7d46f16311a9de4e437b53cb4f59193769" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;xname&lt;/strong&gt; (&lt;em&gt;list of strings&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; Default is &lt;code&gt;x#&lt;/code&gt; for ## in p the number of regressors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cac59aaa76d84f15fca50f701736c967041412ae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;xname_fe&lt;/strong&gt; (&lt;em&gt;list of strings&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; Fixed effects covariate names</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08fb53210027b067ff59839e32f62f414c99af14" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;xname_re&lt;/strong&gt; (&lt;em&gt;list of strings&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; Random effects covariate names</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4c71b329fdd11933e8cd3e039928b569a58cf6c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;xnames&lt;/strong&gt; (&lt;em&gt;list of str&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; Labels for the horizontal axis. If not given (None), then the matplotlib defaults (integers) are used. If it is an empty list, [], then no ticks and labels are added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc51a71d9908e030fff9b68d8a9af09a7f3e637c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;xpoints&lt;/strong&gt; (&lt;em&gt;scalar&lt;/em&gt;&lt;em&gt; or &lt;/em&gt;&lt;em&gt;array-like&lt;/em&gt;) &amp;ndash; If scalar, the number of points equally spaced points on the time difference axis used to define bins for calculating local means. If an array, the specific points that define the bins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="143268e2d88defdea5c7acb93afd09e67ac93927" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;y1&lt;/strong&gt; (&lt;em&gt;array_like&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;1d&lt;/em&gt;) &amp;ndash; first element in cointegrating vector</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d4554f8abd8a34d602c5ca485a9df9edee588e5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;y2&lt;/strong&gt; (&lt;em&gt;array_like&lt;/em&gt;) &amp;ndash; remaining elements in cointegrating vector</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f5fb54769aa24c04d0299308fed57a94afd2af3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;y&lt;/strong&gt; &amp;ndash; Filtered array, number of columns determined by x and ar_coeff. If a pandas object is given, a pandas object is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5e9dc0e7bbd3a6323bea337124f49b4556ba2a4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;y&lt;/strong&gt; &amp;ndash; Filtered array, number of columns determined by x and filt. If a pandas object is given, a pandas object is returned. The index of the return is the exact same as the time period in &lt;code&gt;x&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c79bbf125648c9ba0e184cbfd02eb985bd045c7e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;y&lt;/strong&gt; &amp;ndash; The original data with the additional trend columns. If x is a recarray or pandas Series or DataFrame, then the trend column names are &amp;lsquo;const&amp;rsquo;, &amp;lsquo;trend&amp;rsquo; and &amp;lsquo;trend_squared&amp;rsquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37c60ab8ab8c708c424433db89d020120f607565" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;y&lt;/strong&gt; (&lt;em&gt;2d array, optional&lt;/em&gt;) &amp;ndash; Only returned if original == &amp;lsquo;sep&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fbc06f7a5c8738097a0152347601ecdce516373" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;y&lt;/strong&gt; (&lt;em&gt;array, 1d&lt;/em&gt;) &amp;ndash; filtered output series</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39480417339c8b5e65fdf6da769968cce42f66bc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;y&lt;/strong&gt; (&lt;em&gt;array-like&lt;/em&gt;) &amp;ndash;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9027be319c6f617a8c6e577213ab108e82ecee51" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;y&lt;/strong&gt; (&lt;em&gt;array-like&lt;/em&gt;) &amp;ndash; Time-series data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e9d8d7da70b8a5ef610c73498b221b523d41669" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;y&lt;/strong&gt; (&lt;em&gt;array&lt;/em&gt;) &amp;ndash; The untransformed response variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb00ede34ff2f1e5da126ba019a7bb58ebd91e28" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;y&lt;/strong&gt; (&lt;em&gt;array&lt;/em&gt;) &amp;ndash; Y data for plot. Not needed if line is &amp;lsquo;45&amp;rsquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf9b1d51cae0b019d7ada398b7a9ec71c241dd2a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;y&lt;/strong&gt; (&lt;em&gt;array_like&lt;/em&gt;) &amp;ndash; endogenous variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71a193be8270d533bc1a9aa861c17813892ff452" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;y&lt;/strong&gt; (&lt;em&gt;array_like&lt;/em&gt;&lt;em&gt; (&lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;&lt;em&gt;)&lt;/em&gt;) &amp;ndash; data, numeric</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7504f7383e375dc5edd95725ba16faf4e8a190ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;y&lt;/strong&gt; (&lt;em&gt;ndarray&lt;/em&gt;&lt;em&gt; (&lt;/em&gt;&lt;em&gt;p x k&lt;/em&gt;&lt;em&gt;)&lt;/em&gt;) &amp;ndash;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09c07a731b9758b190b1032ae48b8321d0a12850" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;y&lt;/strong&gt; (&lt;em&gt;x&lt;/em&gt;&lt;em&gt;,&lt;/em&gt;) &amp;ndash; time series data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d32188e1c56ed033f9e84db8ee6ca8140ccad6a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;y&lt;/strong&gt; (&lt;em&gt;x&lt;/em&gt;&lt;em&gt;,&lt;/em&gt;) &amp;ndash; two paired data samples. If y is None, then x can be a 2 by 2 contingency table. x and y can have more than one dimension, then the results are calculated under the assumption that axis zero contains the observation for the samples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e5e71607a107178427b3935a0a763387d4cb33d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;y_all&lt;/strong&gt; (see &lt;code&gt;endog&lt;/code&gt; in Parameters)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb3108c3dbd26dd8e9e260ec4c68ac3045e77934" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;y_lag1&lt;/strong&gt; (ndarray or &lt;code&gt;None&lt;/code&gt;, default: &lt;code&gt;None&lt;/code&gt;) &amp;ndash; Auxilliary array for internal computations. It will be calculated if not given as parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be45be0f98517cd4a33e705bb9455f2cdddffe57" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;y_true&lt;/strong&gt; (&lt;em&gt;array_like&lt;/em&gt;) &amp;ndash; (optional) If this is not None, then the array is added to the plot</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f65fcb030014c0eed2425af0d72780594db4f1b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ylabel&lt;/strong&gt; (&lt;em&gt;str&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; Label to use for &lt;code&gt;response&lt;/code&gt;. Default is &amp;lsquo;func of response&amp;rsquo;. If &lt;code&gt;response&lt;/code&gt; is a &lt;code&gt;pandas.Series&lt;/code&gt; it will use the series names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c09decb6a11d8a7b654dc8382a53594599946bbd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ylabel&lt;/strong&gt; (&lt;em&gt;str&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; The label for the y-axis. Will attempt to use the &lt;code&gt;name&lt;/code&gt; attribute of the Series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c1ea474292004985ebea43682ac76f2f6fa283d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ylabel&lt;/strong&gt; (&lt;em&gt;string&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; Name to be displayed on y axis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef95c5bd4745c3bf02e9ae460239af85808e79f7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ylabel&lt;/strong&gt; (&lt;em&gt;xlabel&lt;/em&gt;&lt;em&gt;,&lt;/em&gt;) &amp;ndash; User-provided labels for the x-axis and y-axis. If None (default), other values are used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f4b34422fd789c30281d0133ef68f5903656816" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ylabel&lt;/strong&gt; (&lt;em&gt;xlabel&lt;/em&gt;&lt;em&gt;,&lt;/em&gt;) &amp;ndash; User-provided lables for the x-axis and y-axis. If None (default), other values are used depending on the status of the kwarg &lt;code&gt;other&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78088eb0694e427a3996268f392b920221f45efc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;yname&lt;/strong&gt; (&lt;em&gt;string&lt;/em&gt;) &amp;ndash; Name of the dependent variable (optional)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="643cb69422e08214f0e6e64fc550b44f7a76dde5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;yname&lt;/strong&gt; (&lt;em&gt;string&lt;/em&gt;&lt;em&gt; or &lt;/em&gt;&lt;em&gt;None&lt;/em&gt;) &amp;ndash; optional name for the endogenous variable, default is &amp;ldquo;y&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5833d956badbb663caa8c7482c0c685df437535" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;yname&lt;/strong&gt; (&lt;em&gt;string&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; Default is &lt;code&gt;y&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bae7cfdec49ff3814eeffc1c6dd2094ae6675c80" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ynames&lt;/strong&gt; (&lt;em&gt;list of str&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; Labels for the vertical axis. Works the same way as &lt;code&gt;xnames&lt;/code&gt;. If not given, the same names as for &lt;code&gt;xnames&lt;/code&gt; are re-used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="729c54b0aab3ed2dae00a9e9221692decfbba62d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;z&lt;/strong&gt; (&lt;em&gt;array-like&lt;/em&gt;) &amp;ndash; 1d array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4542a2a62a6af6af7e878566ecc3cddc26542d4b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;z&lt;/strong&gt; (&lt;em&gt;array-like&lt;/em&gt;) &amp;ndash; &lt;code&gt;z&lt;/code&gt; is usually the linear predictor for a GLM or GEE model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42e16f25f954739f7e763bf46e09ac8bf0c3c2c8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;z&lt;/strong&gt; (&lt;em&gt;array-like&lt;/em&gt;) &amp;ndash; &lt;code&gt;z&lt;/code&gt; is usually the linear predictor of the transformed variable in the IRLS algorithm for GLM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d4402ce3d67f3a2b6be0c994318f765f3a855a4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;z&lt;/strong&gt; (&lt;em&gt;array-like&lt;/em&gt;) &amp;ndash; The value of the inverse of the CLogLog link function at &lt;code&gt;p&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="135ebd0d794b731d0cf3b202f5dac789a5688258" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;z&lt;/strong&gt; (&lt;em&gt;array-like&lt;/em&gt;) &amp;ndash; The value of the inverse of the link function at &lt;code&gt;p&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67f276690b9227583ba40c14df6e64ca450842b2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;z&lt;/strong&gt; (&lt;em&gt;array-like&lt;/em&gt;) &amp;ndash; The value of the inverse of the negative binomial link at &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bd435031e52835ea98b82284a6cde011e1d1a78" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;z&lt;/strong&gt; (&lt;em&gt;array-like&lt;/em&gt;) &amp;ndash; The value of the logit transform at &lt;code&gt;p&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c63c524b19fe3ddea5f04729e57932d83af552a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;z&lt;/strong&gt; (&lt;em&gt;array-like&lt;/em&gt;) &amp;ndash; Usually the linear predictor for a GLM or GEE model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79061822b92b1de69ee94d5da770f6237fc09a8e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;z&lt;/strong&gt; (&lt;em&gt;array-like&lt;/em&gt;) &amp;ndash; Value of the transformed mean parameters at &lt;code&gt;p&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a670f7c8ab6878eb9a0cc0b05c350aaeda47912e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;z&lt;/strong&gt; (&lt;em&gt;array&lt;/em&gt;) &amp;ndash; 1d array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ca696724696848ceb95ce295c6611fffa5f9ecd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;z&lt;/strong&gt; (&lt;em&gt;array&lt;/em&gt;) &amp;ndash; The inverse of the link function at &lt;code&gt;p&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ceb876a3d8b663e69531565d7cf367211f21af2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;z_stat&lt;/strong&gt; (&lt;em&gt;float&lt;/em&gt;) &amp;ndash; test statistic, asymptotically normally distributed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="188826a0e23149df560d297f00e2880c476adc03" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;zero&lt;/strong&gt; (&lt;em&gt;bool&lt;/em&gt;&lt;em&gt;, &lt;/em&gt;&lt;em&gt;optional&lt;/em&gt;) &amp;ndash; Flag indicating whether to include the 0-lag autocorrelation. Default is True.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b22fe8f3ce5e6ff4eb19fe7098ffebdf183bdaf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;zscore&lt;/strong&gt; (&lt;em&gt;float&lt;/em&gt;) &amp;ndash; The Z-score for the test statistic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="842b11822477872622de85dd1aafc676af93d771" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;zscores&lt;/strong&gt; (&lt;em&gt;array-like&lt;/em&gt;) &amp;ndash; A vector of Z-scores</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0e67a63ea0bd111f34f6b22cc8149d9e57089c1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;zscores&lt;/strong&gt; (&lt;em&gt;array-like&lt;/em&gt;) &amp;ndash; The observed Z-scores.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfc89f218a1dc5cccdf95459a05b3218a08a8ab5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;zscores&lt;/strong&gt; (&lt;em&gt;scalar&lt;/em&gt;&lt;em&gt; or &lt;/em&gt;&lt;em&gt;array-like&lt;/em&gt;) &amp;ndash; The point or points at which the density is to be evaluated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bd49ae08ec0ed0d076c90c87814d19b24efab82" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;zstat&lt;/strong&gt; (&lt;em&gt;float&lt;/em&gt;) &amp;ndash; test statistic for the z-test</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cee3e228a9af0e2706b58fd3e8c368172520b8c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;p&lt;/code&gt; x &lt;code&gt;p&lt;/code&gt; array equal to \((X^{T}\Sigma^{-1}X)^{-1}\).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca69de75c53e673111905f3534cd0886b6d9956a" translate="yes" xml:space="preserve">
          <source>A CompareMeans instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa763109f9098852f0b8078beee97565feced31c" translate="yes" xml:space="preserve">
          <source>A FactoredPSDMatrix instance containing the fitted matrix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e7b851e5347ca55dda57dc63337ba84b0139c76" translate="yes" xml:space="preserve">
          <source>A MixedLMResults instance containing the results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ef9ac23cec239c79f7caa689cb9174535c40e8f" translate="yes" xml:space="preserve">
          <source>A MixedLMResults instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="197b2faa9239f869c9a32d1ab71f67ba53d80837" translate="yes" xml:space="preserve">
          <source>A Poisson random effects model with random intercepts for villages and random slopes for each year within each village:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35449c9b439b5ac3ac8b6fba4a0b3327b9b9df4b" translate="yes" xml:space="preserve">
          <source>A RegressionResults class instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="261f085b321610d9e1361675e41dae6c021d8e05" translate="yes" xml:space="preserve">
          <source>A RegularizedResults instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c1f940aaa76c13514a0dd698385fc819174e8e7" translate="yes" xml:space="preserve">
          <source>A Rotnitzky and NP Jewell (1990). &amp;ldquo;Hypothesis testing of regression parameters in semiparametric generalized linear models for cluster correlated data&amp;rdquo;, Biometrika, 77, 485-497.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac8af07ce493f86231546948ae36edc32ee62659" translate="yes" xml:space="preserve">
          <source>A StratifiedTable instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f7bb7a3af3d6ada4d29a53a8d65cfb8acf79b87" translate="yes" xml:space="preserve">
          <source>A Table instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16a688b6cae019589c9bea2e41661c1f0da08bfd" translate="yes" xml:space="preserve">
          <source>A VECM(\(k_{ar} - 1\)) with deterministic terms has the form</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="889760e79f35ccb71fe134ffd88fc04dacbbb308" translate="yes" xml:space="preserve">
          <source>A VECM(\(k_{ar}-1\)) has the following form</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0ba4355fb380f69c96040f7caf56eb798992904" translate="yes" xml:space="preserve">
          <source>A base class for correlation and covariance structures of grouped data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0e58ecd3e53f43af379f1c52b6e5583221ff92d" translate="yes" xml:space="preserve">
          <source>A basic mediation analysis using formulas:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a4a35c57a7f13da3b40be6a264982bb54cf6c40" translate="yes" xml:space="preserve">
          <source>A basic mediation analysis without formulas. This may be slightly faster than the approach using formulas. If there are any interactions involving the treatment or mediator variables this approach will not work, you must use formulas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23d2272a85bdfec42add00f067a4f8f41ae9709d" translate="yes" xml:space="preserve">
          <source>A basic mixed model with fixed effects for the columns of &lt;code&gt;exog&lt;/code&gt; and a random intercept for each distinct value of &lt;code&gt;group&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a089256565ed64182fdbb2bbed4d31b55b9d5a23" translate="yes" xml:space="preserve">
          <source>A basic step function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77812d403b39947ab819cd769255e410c11c138a" translate="yes" xml:space="preserve">
          <source>A bean plot is a combination of a &lt;code&gt;violinplot&lt;/code&gt; (kernel density estimate of the probability density function per point) with a line-scatter plot of all individual data points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed6c1c8b044985c759704c966307bde620cc9a6c" translate="yes" xml:space="preserve">
          <source>A binomial (logistic) random effects model with random intercepts for villages and random slopes for each year within each village:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df3dcff7fd175ef0475a865cec5d87ee909f7e48" translate="yes" xml:space="preserve">
          <source>A bunch containing the chi^2 test statistic and p-value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54c230caf692ea47c3eddb55badb51e664f046be" translate="yes" xml:space="preserve">
          <source>A categorical variable of K categories, or levels, usually enters a regression as a sequence of K-1 dummy variables. This amounts to a linear hypothesis on the level means. That is, each test statistic for these variables amounts to testing whether the mean for that level is statistically significantly different from the mean of the base category. This dummy coding is called Treatment coding in R parlance, and we will follow this convention. There are, however, different coding methods that amount to different sets of linear hypotheses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8653039bdf6daa7013277112a6cd89c44b2f62ab" translate="yes" xml:space="preserve">
          <source>A class for conducting inference on multivariate means and correlation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65d0081f3748de5e1e04cf14850a358288da46aa" translate="yes" xml:space="preserve">
          <source>A class for holding the results from testing the cointegration rank.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33186d7b38e77313e00d3f2deb4e8be3323b756f" translate="yes" xml:space="preserve">
          <source>A class for holding the results of a mediation analysis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b106651958dd8e9959cf95e3404f5be5be8bb150" translate="yes" xml:space="preserve">
          <source>A class for writing Stata binary dta files from array-like objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcf0de75f55c38cef6636c4ec5cdd1181ff65afa" translate="yes" xml:space="preserve">
          <source>A class to compute confidence intervals and hypothesis tests involving mean, variance, kurtosis and skewness of a univariate random variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b97162d4660c71c734d3ba26d11f02344074e36" translate="yes" xml:space="preserve">
          <source>A confidence interval for the log risk ratio.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57d86f8c2285d49a4a9348f05c3b2bd7aaaf49de" translate="yes" xml:space="preserve">
          <source>A confidence interval for the odds ratio.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4e1bcd14d7873ee4ed81961db393e0c658e449c" translate="yes" xml:space="preserve">
          <source>A confidence interval for the pooled log odds ratio.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58abcbc1f259ab3b2da9561b3192d28cac5ce55f" translate="yes" xml:space="preserve">
          <source>A confidence interval for the pooled odds ratio.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f64880030231c0724084d7d010c66de7d08f3c3" translate="yes" xml:space="preserve">
          <source>A confidence interval for the risk ratio.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9fedceea57ed157b0598baf7930f51d4a416492" translate="yes" xml:space="preserve">
          <source>A confidence level for the log odds ratio.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58e6c802fe9869051bd97a574247590379916bf3" translate="yes" xml:space="preserve">
          <source>A constant has been dropped in comparison to the loglikelihood base information criteria. The information criteria should be used to compare only comparable models.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d27a85930522ce9a7a334fd32c9e6f23737cf785" translate="yes" xml:space="preserve">
          <source>A constant has been dropped in comparison to the loglikelihood base information criteria. These should be used to compare for comparable models.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69e5a5d6bf7a370c0da2c8ab7073f72f1866be4d" translate="yes" xml:space="preserve">
          <source>A contingency table is a multi-way table that describes a data set in which each observation belongs to one category for each of several variables. For example, if there are two variables, one with \(r\) levels and one with \(c\) levels, then we have a \(r \times c\) contingency table. The table can be described in terms of the number of observations that fall into a given cell of the table, e.g. \(T_{ij}\) is the number of observations that have level \(i\) for the first variable and level \(j\) for the second variable. Note that each variable must have a finite number of levels (or categories), which can be either ordered or unordered. In different contexts, the variables defining the axes of a contingency table may be called &lt;strong&gt;categorical variables&lt;/strong&gt; or &lt;strong&gt;factor variables&lt;/strong&gt;. They may be either &lt;strong&gt;nominal&lt;/strong&gt; (if their levels are unordered) or &lt;strong&gt;ordinal&lt;/strong&gt; (if their levels are ordered).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef6a780b0d4b979d2c5f23b23b946c8bb95a039b" translate="yes" xml:space="preserve">
          <source>A correlation matrix has factor structure if it can be written in the form I + XX&amp;rsquo; - diag(XX&amp;rsquo;), where X is n x k with linearly independent columns, and with each row having sum of squares at most equal to 1. The approximation is made in terms of the Frobenius norm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="642c239137ffee10452050d3683c919c65c1a22c" translate="yes" xml:space="preserve">
          <source>A dictionary of arguments affecting covariance matrix computation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfb0c07f997416ba8c8ecf0d095538f9eb79dddb" translate="yes" xml:space="preserve">
          <source>A dictionary with plotting options. All the options for &lt;code&gt;violinplot&lt;/code&gt; can be specified, they will simply be passed to &lt;code&gt;violinplot&lt;/code&gt;. Options specific to &lt;code&gt;beanplot&lt;/code&gt; are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="813ec9c7177f67f3d0c01c03ffecd5448de5a8c6" translate="yes" xml:space="preserve">
          <source>A dictionary with plotting options. Any of the following can be provided, if not present in &lt;code&gt;plot_opts&lt;/code&gt; the defaults will be used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd8d1423647b9d91eb6af3d1269a151cbad11ef4" translate="yes" xml:space="preserve">
          <source>A different way to specify independent random coefficients for the columns of &lt;code&gt;exog_re&lt;/code&gt;. In this example &lt;code&gt;groups&lt;/code&gt; must be a Pandas Series with compatible indexing with &lt;code&gt;exog_re&lt;/code&gt;, and &lt;code&gt;exog_re&lt;/code&gt; has two columns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68d0847c7f7969108178649f3a213c4d5a2ddae7" translate="yes" xml:space="preserve">
          <source>A figure containing a plot of the missing data pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b95a1babe875532ba2296c6939492e450085dbbd" translate="yes" xml:space="preserve">
          <source>A first-order autoregressive working dependence structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a8fc362aafae0c2f9a899ea7e4e229cc8b7f931" translate="yes" xml:space="preserve">
          <source>A functional boxplot is the analog of a boxplot for functional data. Functional data is any type of data that varies over a continuum, i.e. curves, probabillity distributions, seasonal data, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f31990a4b3108b052a7aa46c150a96a76787e544" translate="yes" xml:space="preserve">
          <source>A general dynamic factor model is written as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd69a7af4e1d4bc0059f17b4d70815a17ba347fe" translate="yes" xml:space="preserve">
          <source>A general state space model is of the form</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f1bc2214b9e4863b62c7dea27c56dc9f18a02b8" translate="yes" xml:space="preserve">
          <source>A generic link function for one-parameter exponential family.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9172525e2e31e67ad5ed4a4344797c15c71b9c5f" translate="yes" xml:space="preserve">
          <source>A linear function for the conditional mean is defined as default but the methods should be overwritten by subclasses, currently &lt;code&gt;LinearIVGMM&lt;/code&gt; and &lt;code&gt;NonlinearIVGMM&lt;/code&gt; are implemented as subclasses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fcce52cbcd45058171047a8d5b0c95971c07a96" translate="yes" xml:space="preserve">
          <source>A list (corresponding to the strata) containing function objects that calculate the cumulative hazard function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8ef1da40f3200b3006214f2a21e955ed7319c7d" translate="yes" xml:space="preserve">
          <source>A list (corresponding to the strata) containing the baseline cumulative hazard function evaluated at the event points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0152e44aae94cfb2da4f42f04d631cbe5481fa85" translate="yes" xml:space="preserve">
          <source>A list of objects of type scipy.stats.distributions.rv_discrete</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b22a6536254f126807e619891917e861a43a3714" translate="yes" xml:space="preserve">
          <source>A low regime is expected to persist for about fourteen years, whereas the high regime is expected to persist for only about five years.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dabb8e49d326ceae8c0e46f58294da03b5d423fb" translate="yes" xml:space="preserve">
          <source>A lowess function that outs smoothed estimates of endog at the given exog values from points (exog, endog)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b590440f5d0824cd28ad5ebb6bc449fd631bcf5b" translate="yes" xml:space="preserve">
          <source>A matrix containing the Schoenfeld residuals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e50701204298fc2e7a42f47b0542d5a22681ccfb" translate="yes" xml:space="preserve">
          <source>A matrix containing the score residuals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62ce3e9dd73674d017b710a047e1be8e0c6896bf" translate="yes" xml:space="preserve">
          <source>A matrix of dummy (indicator/binary) float variables for the categorical data. If dictnames is True, then the dictionary is returned as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3bc8e3164bfb3e96943b4f6f6896862405bd4e9" translate="yes" xml:space="preserve">
          <source>A mixed model with fixed effects for the columns of &lt;code&gt;exog&lt;/code&gt; and correlated random coefficients for the columns of &lt;code&gt;exog_re&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15a24704d796185761f3a70ed0e2ccfcdd46796a" translate="yes" xml:space="preserve">
          <source>A mixed model with fixed effects for the columns of &lt;code&gt;exog&lt;/code&gt; and independent random coefficients for the columns of &lt;code&gt;exog_re&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f819740209b131cc1ba8502ce8aaa9191bfe0450" translate="yes" xml:space="preserve">
          <source>A model must have a &amp;lsquo;fit&amp;rsquo; method that returns an object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="948e3613a490f26f86f2b7efa0b974090002c918" translate="yes" xml:space="preserve">
          <source>A moderated mediation analysis. The mediation effect is computed for people of age 20.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a43bb9c42f045d253a26eb1828e8b6bbb325c21d" translate="yes" xml:space="preserve">
          <source>A more detailed example for &lt;code&gt;anova_lm&lt;/code&gt; can be found here:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="711f40262e2cbdcced3f5ff4e23e63401c98debc" translate="yes" xml:space="preserve">
          <source>A more difficult case</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12d25a399d72b462e7a75ee1a10db246a8c50294" translate="yes" xml:space="preserve">
          <source>A more useful example is given by a dictionary with multiple indices. In this case we use a wider gap to a better visual separation of the resulting plot</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab1f1b7fc364ee0102737c7409fe3ed6b5677e26" translate="yes" xml:space="preserve">
          <source>A nested working dependence structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b5c01f0512252919dbcff06d844323205f6c8f9" translate="yes" xml:space="preserve">
          <source>A number of different methods are provided to carry out hypothesis tests about the model results and also the validity of the model assumptions (normality, whiteness / &amp;ldquo;iid-ness&amp;rdquo; of errors, etc.).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76f73f6b55b8fa3cc610241f7b19678021e66c88" translate="yes" xml:space="preserve">
          <source>A number of standard plots of regression residuals are available for the same purpose. These can be produced using the command &lt;a href=&quot;generated/statsmodels.tsa.statespace.mlemodel.mleresults.plot_diagnostics#statsmodels.tsa.statespace.mlemodel.MLEResults.plot_diagnostics&quot;&gt;&lt;code&gt;plot_diagnostics&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88feb0953c952d1d44b8bd5ce0d5b79c5a210a89" translate="yes" xml:space="preserve">
          <source>A one-sided right tail test is not covered because the direction of the inequality is hard coded in check_set. Also Peritz&amp;rsquo;s check of partitions is not possible, but I have not seen it mentioned in any more recent references. I have only partially read the step-down procedure for closed tests by Westfall.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41d90c897784c8ad1852b47835b19ffb9e489d5c" translate="yes" xml:space="preserve">
          <source>A property that returns the RegressionResults class if fit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b9bab2b1fc9a4911ee0038a4e65525605ad5a7f" translate="yes" xml:space="preserve">
          <source>A rainbow plot contains line plots of all curves in the dataset, colored in order of functional depth. The median curve is shown in black.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04e5e9233dd05c93788635546aae9ac4653eb460" translate="yes" xml:space="preserve">
          <source>A regression model with an AR(p) covariance structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce966bfd64562b27bf223ba20656e6d10b373b56" translate="yes" xml:space="preserve">
          <source>A regression model with diagonal but non-identity covariance structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0023cb3aa454b373ac0a4e281ee2bd2b0f04546" translate="yes" xml:space="preserve">
          <source>A results class for Generalized Poisson</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bbadc125add46a0733331e26c663b860dcd5b54" translate="yes" xml:space="preserve">
          <source>A results class for Logit Model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="087d27aef18e1302dc62bbe7f199d109d8f5f8bc" translate="yes" xml:space="preserve">
          <source>A results class for NegativeBinomial 1 and 2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00d768223f554b99cf799da68afa5a6fcc69e619" translate="yes" xml:space="preserve">
          <source>A results class for Probit Model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec05650455ca310ee78d182fb1098db2b975ee57" translate="yes" xml:space="preserve">
          <source>A results class for Zero Inflated Genaralized Negative Binomial</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6909138b701e7bd38e8004949b4b288fcd80b53" translate="yes" xml:space="preserve">
          <source>A results class for Zero Inflated Generalized Poisson</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2ccbf6417c165475a8d66df2033f9d96a83eba6" translate="yes" xml:space="preserve">
          <source>A results class for Zero Inflated Poisson</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c77847e05c68df4d637619adc48e23fe288f29dc" translate="yes" xml:space="preserve">
          <source>A results class for binary data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="064085aa3e284f180a033348950d3323fdd72458" translate="yes" xml:space="preserve">
          <source>A results class for count data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ba937d711ed5a95682c5d455ab07c0a0062262b" translate="yes" xml:space="preserve">
          <source>A results class for multinomial data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0d82e3e5f48b5e35f8a328053850fef97b044ff" translate="yes" xml:space="preserve">
          <source>A results class for the discrete dependent variable models.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="618980f34ff5cd8fe480eebb35406f0ec989b0e1" translate="yes" xml:space="preserve">
          <source>A results object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54171392fbbb5d56db2e1c550a32653c6415b327" translate="yes" xml:space="preserve">
          <source>A second &lt;code&gt;ProbPlot&lt;/code&gt; object can be used to compare two seperate sample sets by using the &lt;code&gt;other&lt;/code&gt; kwarg in the &lt;code&gt;qqplot&lt;/code&gt; and &lt;code&gt;ppplot&lt;/code&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f669e3b2a23ef50f2077b2859f64ff1ebf6f369" translate="yes" xml:space="preserve">
          <source>A simple example of random coefficients, as in (i) above, is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcc60783ca2e35d9e47a154cbc14830cb82f5f98" translate="yes" xml:space="preserve">
          <source>A simple example of variance components, as in (ii) above, is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e56b5a85ca22c356215990019746729aca75820c" translate="yes" xml:space="preserve">
          <source>A simple ordinary least squares model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3fefe10914bdaa40a4f51a8ab9bfe9c01c85ec7" translate="yes" xml:space="preserve">
          <source>A single MICE iteration updates all missing values using their respective imputation models, then fits the analysis model to the imputed data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7ed012a3edf92f96cc58d20d99111091feb925f" translate="yes" xml:space="preserve">
          <source>A summary of all the main results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99d3858f1befc736eaac339570c21d7c9ea826c7" translate="yes" xml:space="preserve">
          <source>A survey of women only was conducted in 1974 by &lt;em&gt;Redbook&lt;/em&gt; asking about extramarital affairs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72a8b315c7025ab6428e3447c12601a10b15d464" translate="yes" xml:space="preserve">
          <source>A two-way contingency table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fded4a03fc65cb813c7996b983d4263adba09fd" translate="yes" xml:space="preserve">
          <source>A univariate example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bba19cd47a84eeac0b47ca82027de56886768aa2" translate="yes" xml:space="preserve">
          <source>A univariate kernel density estimator is implemented in &lt;code&gt;sm.nonparametric.KDEUnivariate&lt;/code&gt;. In this example we will show the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="964ca8a442673b4fb50a5da4ae4e427b273efdf9" translate="yes" xml:space="preserve">
          <source>A vector moving average model can also be formulated. Below we show a VMA(2) on the same data, but where the innovations to the process are uncorrelated. In this example we leave out the exogenous regressor but now include the constant term.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26ec25550c1fe5b09b814eb47125bc3e3995eb9b" translate="yes" xml:space="preserve">
          <source>A violin plot is a boxplot combined with a kernel density estimate of the probability density function per point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3ae60713dc865f65517c9159d05f12cf2e80192" translate="yes" xml:space="preserve">
          <source>A working dependence structure that captures a nested hierarchy of groups, each level of which contributes to the random error term of the model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02e7efaac20b6f2d19381e5ef3f67dc2fed5bcaa" translate="yes" xml:space="preserve">
          <source>ACME : average causal mediated effect ADE : average direct effect</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee6a44109229b6e49d682e96be80a967c2a2e342" translate="yes" xml:space="preserve">
          <source>ACSkewT_gen.cdf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e207477cc1f6b5b41efc78277f5c4ec7ee32a9e" translate="yes" xml:space="preserve">
          <source>ACSkewT_gen.entropy()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd0fb989362a41d39f00c48b65e3dd1f78248125" translate="yes" xml:space="preserve">
          <source>ACSkewT_gen.expect()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="344dab1440eae1b179666d1c6a87a1ba417dc01e" translate="yes" xml:space="preserve">
          <source>ACSkewT_gen.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9db0d697f7cb753b85eab635bcf5872f4930c57d" translate="yes" xml:space="preserve">
          <source>ACSkewT_gen.fit_loc_scale()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa64ec5b16849f0101170131e892b296afda4fd9" translate="yes" xml:space="preserve">
          <source>ACSkewT_gen.freeze()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f234e2c5d682ee33feecefe228a4e0f514049ca" translate="yes" xml:space="preserve">
          <source>ACSkewT_gen.interval()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="542da43d9d5bcb857e915d97c2a28127add77831" translate="yes" xml:space="preserve">
          <source>ACSkewT_gen.isf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03ff3b5d28a9dd8df1c8a2fff584e95636b723ff" translate="yes" xml:space="preserve">
          <source>ACSkewT_gen.logcdf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a529e78bc461286e5484c0ff0c3c91dd65d89141" translate="yes" xml:space="preserve">
          <source>ACSkewT_gen.logpdf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d01b8c0e32986e4ecd1188f8f8a10f3b8a86c20e" translate="yes" xml:space="preserve">
          <source>ACSkewT_gen.logsf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2e17196e9d64da008133cb00c23bf80ecaa1622" translate="yes" xml:space="preserve">
          <source>ACSkewT_gen.mean()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2685551125bfd0ece030dfb7319544e62b0652c" translate="yes" xml:space="preserve">
          <source>ACSkewT_gen.median()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eac9809438a861c772f72c678c19156be7c6fab" translate="yes" xml:space="preserve">
          <source>ACSkewT_gen.moment()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aaabff0da4068602cb34ce6017b9b385c507e21" translate="yes" xml:space="preserve">
          <source>ACSkewT_gen.nnlf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a471f4800b054473372006d8f041f886ff893a8b" translate="yes" xml:space="preserve">
          <source>ACSkewT_gen.pdf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1cfa1f7bab4eec23bb4c11c646b937d67e54655" translate="yes" xml:space="preserve">
          <source>ACSkewT_gen.ppf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d73bed359a60ba40ff1bf734a43f67bba9d54120" translate="yes" xml:space="preserve">
          <source>ACSkewT_gen.rvs()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eed2605bd2a9e924d3345a59cc7deb331e926e1e" translate="yes" xml:space="preserve">
          <source>ACSkewT_gen.sf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6f3f8139297c3a61d7a5483e9b170e27fdda445" translate="yes" xml:space="preserve">
          <source>ACSkewT_gen.stats()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d0c750fc0630b1a1b3755605d94038c5149ce37" translate="yes" xml:space="preserve">
          <source>ACSkewT_gen.std()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccdfbb2591bd5496e64c4f291b5a967c12e23ea6" translate="yes" xml:space="preserve">
          <source>ACSkewT_gen.var()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b2ad68fb2be122b9f85ed3118cce5328006dd8b" translate="yes" xml:space="preserve">
          <source>AIC</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98ef99583e33f19cd030340de9c2a3bb45420b9b" translate="yes" xml:space="preserve">
          <source>ANOVA</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8746f2cae5858985a28a24bd7ea49d97eaed30bd" translate="yes" xml:space="preserve">
          <source>API Import for interactive use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="342cb89dbd369730b98e4c45d6bd27035441f3df" translate="yes" xml:space="preserve">
          <source>API Warning: The functions and objects in this category are spread out in various modules and might still be moved around. We expect that in future the statistical tests will return class instances with more informative reporting instead of only the raw numbers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3be86b34bf8afe61adc18752096d4fd1e9b9c38a" translate="yes" xml:space="preserve">
          <source>API import for interactive use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e18c152ba6c134f0c123fcbae43b471b33ea089" translate="yes" xml:space="preserve">
          <source>AR representation of fractional integration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6198dbcbf4467500f935ebbd17a7005fd358ec5" translate="yes" xml:space="preserve">
          <source>AR(1)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b636642333706fad698e7878719f7df7efc70ea4" translate="yes" xml:space="preserve">
          <source>AR.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f827e6969a811e7770119c0d0ec0f494ff8eceb" translate="yes" xml:space="preserve">
          <source>AR.from_formula()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="055535ab2d2d4c9dea6495408567ea9b81311f43" translate="yes" xml:space="preserve">
          <source>AR.hessian()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c7dbea29158f39b19411cfa92632d46897ef08f" translate="yes" xml:space="preserve">
          <source>AR.information()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93afe3ffb863c7840856358c649f0921040c8c76" translate="yes" xml:space="preserve">
          <source>AR.initialize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef34b061380208d995a2c0d5f59aa535bedc3148" translate="yes" xml:space="preserve">
          <source>AR.loglike()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9164bcf5f1eafcc131d744e88ad40b1473ac5d4" translate="yes" xml:space="preserve">
          <source>AR.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fee02584120f63b9f3b06f6699688c6f15770e8" translate="yes" xml:space="preserve">
          <source>AR.score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cda2e245f396c3d21a8907f73029aa5c29c3c05c" translate="yes" xml:space="preserve">
          <source>AR.select_order()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54e854c3099fff14d4083ad30cf8e771564da63a" translate="yes" xml:space="preserve">
          <source>ARIMA Example 1: Arima</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8400588524f685c8d9a850639970a8e7f1b44038" translate="yes" xml:space="preserve">
          <source>ARIMA Example 2: Arima with additive seasonal effects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3d17f6f084d92c41e7345b32231412d5c6a4c58" translate="yes" xml:space="preserve">
          <source>ARIMA Example 3: Airline Model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bd641ce55c6018ea8c82a9d54caf0729049ceed" translate="yes" xml:space="preserve">
          <source>ARIMA Example 4: ARMAX (Friedman)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fed6f484066a3a478084c8599605acd6571abbfe" translate="yes" xml:space="preserve">
          <source>ARIMA Postestimation: Example 1 - Dynamic Forecasting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a08fccddd9d41a4648266b00aba3c75ed992d43" translate="yes" xml:space="preserve">
          <source>ARIMA model in-sample and out-of-sample prediction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="758230a96f29e93ca8a6e3e60b780b3f1c7f9a2b" translate="yes" xml:space="preserve">
          <source>ARIMA(1,1,1) model on the U.S. Wholesale Price Index (WPI) dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f12b0d9787a81e3ab8a03e8d13410b5a3da00f0" translate="yes" xml:space="preserve">
          <source>ARIMA(2,1,0) x (1,1,0,12) model of monthly airline data. This example allows a multiplicative seasonal effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7db616e8e48182b0961e156afa34f61d8e77913a" translate="yes" xml:space="preserve">
          <source>ARIMA.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bc5850a2a25251d6851dee60998b49e585a6cae" translate="yes" xml:space="preserve">
          <source>ARIMA.from_formula()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddebff4e5505ab14248e12660e5c41a467fc031c" translate="yes" xml:space="preserve">
          <source>ARIMA.geterrors()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="664ef134589bfa657f13208e644f926833028a97" translate="yes" xml:space="preserve">
          <source>ARIMA.hessian()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34e5cb307a4f6d9fa2f3ad826ee2776b9bc8f930" translate="yes" xml:space="preserve">
          <source>ARIMA.information()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33708105a33fb4312f5082bebdeab629f51cb58f" translate="yes" xml:space="preserve">
          <source>ARIMA.initialize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68a085052bc32f154e0fdc54454682b3bfdfa14f" translate="yes" xml:space="preserve">
          <source>ARIMA.loglike()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eb025ed25efb79f747cb248900d25f4e56e7e29" translate="yes" xml:space="preserve">
          <source>ARIMA.loglike_css()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e135130489b4b022cd12a0b61eff65d80f211289" translate="yes" xml:space="preserve">
          <source>ARIMA.loglike_kalman()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ffe027604b7df7e06dad707170dc05a0bb55bc4" translate="yes" xml:space="preserve">
          <source>ARIMA.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="249cdbc1faea5a4077c0a79f1eb98ba7d4303144" translate="yes" xml:space="preserve">
          <source>ARIMA.score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42713263c927734df4523b295511abda030483e7" translate="yes" xml:space="preserve">
          <source>ARIMAResults.aic()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59aca10d550b2ac29a1fc6f92fc354f60ca67212" translate="yes" xml:space="preserve">
          <source>ARIMAResults.arfreq()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="769b8672834d5dcac723f1534c7121a6ddca5a7d" translate="yes" xml:space="preserve">
          <source>ARIMAResults.arparams()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0ab9c8fa8606666fd58abc6084ef74cca7a15a8" translate="yes" xml:space="preserve">
          <source>ARIMAResults.arroots()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e94b818a51cf8db90e0a27cd1e1b8d9d2f85b7ba" translate="yes" xml:space="preserve">
          <source>ARIMAResults.bic()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="504d29c2008ba401bc2a8eb65ab89fb7e8b82d89" translate="yes" xml:space="preserve">
          <source>ARIMAResults.bse()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee1153cf7b5a26070e0454508a61618727001226" translate="yes" xml:space="preserve">
          <source>ARIMAResults.conf_int()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6ad7bde11d60137915d670760575709e398a1dd" translate="yes" xml:space="preserve">
          <source>ARIMAResults.cov_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ba79e233649921dba62af12a92ab4e6b42da36a" translate="yes" xml:space="preserve">
          <source>ARIMAResults.f_test()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c35488c3be7ac6bedbed752bbd8ab67ae50dca30" translate="yes" xml:space="preserve">
          <source>ARIMAResults.fittedvalues()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d24bdde06bd3a5a556daa6bcbd9a531e9acfd226" translate="yes" xml:space="preserve">
          <source>ARIMAResults.forecast()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c945f1abaaf6a08f5c9385d33ee1753fbf0f19d" translate="yes" xml:space="preserve">
          <source>ARIMAResults.hqic()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf392e15ab4579e484be068a3fb029a9ed777647" translate="yes" xml:space="preserve">
          <source>ARIMAResults.initialize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fd0f7689d4bad2542e4da1912ebc373d31621c2" translate="yes" xml:space="preserve">
          <source>ARIMAResults.llf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc17200a8242780618e7b22f017f666b15fbc7b5" translate="yes" xml:space="preserve">
          <source>ARIMAResults.load()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbd2321ebfca79f5bd44333aad48c8b464edda3e" translate="yes" xml:space="preserve">
          <source>ARIMAResults.mafreq()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad1aec3047fa26b423144c5d42091590bfa8f8c8" translate="yes" xml:space="preserve">
          <source>ARIMAResults.maparams()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68036f5fb1975ec3a248453a02edd2f61e6ddfa3" translate="yes" xml:space="preserve">
          <source>ARIMAResults.maroots()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04f33ddc2f5fdec4405484bb9be753b12bdfb343" translate="yes" xml:space="preserve">
          <source>ARIMAResults.normalized_cov_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eda9aece0d5ec5d39d6a90a0baf249251b94da6" translate="yes" xml:space="preserve">
          <source>ARIMAResults.plot_predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00f2634e778892043910b925c9b7233f838e2e6f" translate="yes" xml:space="preserve">
          <source>ARIMAResults.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="623c75a6e1a090011d7c9e322b4365a72ec0b530" translate="yes" xml:space="preserve">
          <source>ARIMAResults.pvalues()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82171934316171af4511b477c38f42a9dfab59bc" translate="yes" xml:space="preserve">
          <source>ARIMAResults.remove_data()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f296b2915514e3e77f22604c26344d2bdb588fa" translate="yes" xml:space="preserve">
          <source>ARIMAResults.resid()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d52aafa4e58fb1e61c642d07748a71f4cb67602c" translate="yes" xml:space="preserve">
          <source>ARIMAResults.save()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6838c6be73199be506a35a11b4f887abd3951fd3" translate="yes" xml:space="preserve">
          <source>ARIMAResults.summary()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c189f7987fb88bb7b2cfcddf732fe7685c31cea" translate="yes" xml:space="preserve">
          <source>ARIMAResults.summary2()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14bda01c7679c725a166017ca3403769a2b08c46" translate="yes" xml:space="preserve">
          <source>ARIMAResults.t_test()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a95af4e0990ff7df3c365b4b6c51072ef22b1be0" translate="yes" xml:space="preserve">
          <source>ARIMAResults.t_test_pairwise()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99ba0840e0cba467409871d78a951ac3c55f7140" translate="yes" xml:space="preserve">
          <source>ARIMAResults.tvalues()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29d827e54a5ffde085e146bc43856a3c39791b58" translate="yes" xml:space="preserve">
          <source>ARIMAResults.wald_test()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0322cf326788fd88235bae22a454e4907c6eca7" translate="yes" xml:space="preserve">
          <source>ARIMAResults.wald_test_terms()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="854eaab0e4d09112fa20eb7a3e4ce61fd4a152f7" translate="yes" xml:space="preserve">
          <source>ARMA Process</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b0eb22a1f76b5b75d492c4bf48670423b1ca601" translate="yes" xml:space="preserve">
          <source>ARMA model in-sample and out-of-sample prediction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6206b03fa1b2f729c2a4d6fa3e3712e5a45646a" translate="yes" xml:space="preserve">
          <source>ARMA(1,1) model with exogenous regressors; describes consumption as an autoregressive process on which also the money supply is assumed to be an explanatory variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eadd230c7930a8de8420baa808a588b62579551" translate="yes" xml:space="preserve">
          <source>ARMA(1,2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21b298bfc9e2e335c293074236b4e7c5c0d89e15" translate="yes" xml:space="preserve">
          <source>ARMA.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b330df1b7d8d067ff7e74406dfe5fe5afca87c93" translate="yes" xml:space="preserve">
          <source>ARMA.from_formula()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e205e19eb3d3de7c84e69ec6103314823d16b9c6" translate="yes" xml:space="preserve">
          <source>ARMA.geterrors()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b52f142241d8e9c6ea1a296dab9274bbe536d1d3" translate="yes" xml:space="preserve">
          <source>ARMA.hessian()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99e11e6cfbf0cc78817f80151aad00a761306beb" translate="yes" xml:space="preserve">
          <source>ARMA.information()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd8214d6159f9c04817e46e20ec2a940f51bbf29" translate="yes" xml:space="preserve">
          <source>ARMA.initialize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f64c7a72a25af70e2eb9cc5d7de07f07cfb1619a" translate="yes" xml:space="preserve">
          <source>ARMA.loglike()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="897620f3899ccca25015aff27e0416e58ad51a1d" translate="yes" xml:space="preserve">
          <source>ARMA.loglike_css()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82eaeaf1638d86b89293bb188620153dcfb8d437" translate="yes" xml:space="preserve">
          <source>ARMA.loglike_kalman()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13693a9df2504649200e6433b2b23eacaaf44c9d" translate="yes" xml:space="preserve">
          <source>ARMA.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de3df6bc0ad518d0c5710d773553541193409d3a" translate="yes" xml:space="preserve">
          <source>ARMA.score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="393f4d0204f25f793b3f18b6d6c14b8e4b528ea0" translate="yes" xml:space="preserve">
          <source>ARMA: Artificial Data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8d2fda0a4c79a579d979c85436b50a5334f2427" translate="yes" xml:space="preserve">
          <source>ARMA: Sunspots Data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8ced8719b482413841e8cf9e876d0091a8b7d75" translate="yes" xml:space="preserve">
          <source>ARMAResults.aic()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cffe9ec23b33e589d3dfc25acd7cc7cbc2fe5c4" translate="yes" xml:space="preserve">
          <source>ARMAResults.arfreq()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deafb156afae92c7c9d6875cfcec765538902b1e" translate="yes" xml:space="preserve">
          <source>ARMAResults.arparams()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55cb7b006fa0ff4b083e9ce0db770d843cd52514" translate="yes" xml:space="preserve">
          <source>ARMAResults.arroots()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65787f9d89431a25fe5d2b772d5e5c91f2719928" translate="yes" xml:space="preserve">
          <source>ARMAResults.bic()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47f0bbaabd1968956e669a72fd278256defcd4cc" translate="yes" xml:space="preserve">
          <source>ARMAResults.bse()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5386e869938651b7deb6f90ef4aa8a6844e0313b" translate="yes" xml:space="preserve">
          <source>ARMAResults.conf_int()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e55f8644803ae5fe3fb64f2fbbcae62e3accca49" translate="yes" xml:space="preserve">
          <source>ARMAResults.cov_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97a5d765b61624fbc75c3bbda7e4321dfd537a81" translate="yes" xml:space="preserve">
          <source>ARMAResults.f_test()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40071b64400ec1542a29e614f3d5858397071962" translate="yes" xml:space="preserve">
          <source>ARMAResults.fittedvalues()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="030defcacf9f2f7f8a2e430443349020963c894c" translate="yes" xml:space="preserve">
          <source>ARMAResults.forecast()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dd001efd0ae9113124eb9032c42f3a2109b24ab" translate="yes" xml:space="preserve">
          <source>ARMAResults.hqic()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cbb6aa2e3161d70c5bba4bbfdaa8b2ae4195333" translate="yes" xml:space="preserve">
          <source>ARMAResults.initialize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1497ea470d4ede2cbd341e989b2a25677f41e7f" translate="yes" xml:space="preserve">
          <source>ARMAResults.llf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b53404dfe819581872c0837b1259b603528cadd" translate="yes" xml:space="preserve">
          <source>ARMAResults.load()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42a0434cc01a246259021f95a0bff8c7d3a978ea" translate="yes" xml:space="preserve">
          <source>ARMAResults.mafreq()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80e3060b68b16a65e80c89491ed9cb682bcc365f" translate="yes" xml:space="preserve">
          <source>ARMAResults.maparams()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c89f27ff0a50bc08dbcfe2f6778829abf0624b76" translate="yes" xml:space="preserve">
          <source>ARMAResults.maroots()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="675055e28d2f7dbd2e824d853dd668d7bbab89aa" translate="yes" xml:space="preserve">
          <source>ARMAResults.normalized_cov_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d77af10cc85c1b3ffe62608460863f217993f46" translate="yes" xml:space="preserve">
          <source>ARMAResults.plot_predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1de362e8fd2fa899cd35fcc7a135b93320301ee" translate="yes" xml:space="preserve">
          <source>ARMAResults.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a447e5d1ad9721387e18f4fe8a141d1646cb85ab" translate="yes" xml:space="preserve">
          <source>ARMAResults.pvalues()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d2cbaae2af1fc2d4e0643fd5241d5bf94390364" translate="yes" xml:space="preserve">
          <source>ARMAResults.remove_data()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5098819872ecd771024b6314d128b2ac7b3a35a5" translate="yes" xml:space="preserve">
          <source>ARMAResults.resid()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f1d8b5ca485835826f49dc867dab60a01e74af0" translate="yes" xml:space="preserve">
          <source>ARMAResults.save()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b91dcaf490bf70194886d4fb990523cf7c49847" translate="yes" xml:space="preserve">
          <source>ARMAResults.summary()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6833a88d8b7a391d81048508af5cb61b084853ed" translate="yes" xml:space="preserve">
          <source>ARMAResults.summary2()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e8e948f55be72ddb840cda0408be6b49ec335bc" translate="yes" xml:space="preserve">
          <source>ARMAResults.t_test()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c60750926e04d4649b8f740fa50e187470ce2f02" translate="yes" xml:space="preserve">
          <source>ARMAResults.t_test_pairwise()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd6b0c0aefe38b14d132dfa139259a235eb4f588" translate="yes" xml:space="preserve">
          <source>ARMAResults.tvalues()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e19a416a9d3165cd80b3333b06cdeff869463454" translate="yes" xml:space="preserve">
          <source>ARMAResults.wald_test()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0470e701f3c9544708f0a539248d2de0af196db6" translate="yes" xml:space="preserve">
          <source>ARMAResults.wald_test_terms()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c322336a752a90ae2be214c7b4c5cb1bfd823d2" translate="yes" xml:space="preserve">
          <source>ARResults.aic()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c32cd52f5066fc2f5fa67de1fbfd33254077971d" translate="yes" xml:space="preserve">
          <source>ARResults.bic()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fe9de4c1f12a2f95517b90a2d0ca75954a59125" translate="yes" xml:space="preserve">
          <source>ARResults.bse()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="620b511a78dc6d2389232c7fca68104db079aba0" translate="yes" xml:space="preserve">
          <source>ARResults.conf_int()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f476f9af96c19d408831065810674aaf17f20fa" translate="yes" xml:space="preserve">
          <source>ARResults.cov_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec1f38a5a1db7a2a6e4c21b11ca549b43306493f" translate="yes" xml:space="preserve">
          <source>ARResults.f_test()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7fa996e207e94b897b5f61ad9fbdfc71a850567" translate="yes" xml:space="preserve">
          <source>ARResults.fittedvalues()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f04b3516b073681af89cff80a185a31c0e9f0b9d" translate="yes" xml:space="preserve">
          <source>ARResults.fpe()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8029146fd0f2eb94c5160f1bd94e283489fb0a66" translate="yes" xml:space="preserve">
          <source>ARResults.hqic()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af6b8d2880ee49e9f6081969e713bb8f2db4e220" translate="yes" xml:space="preserve">
          <source>ARResults.initialize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8fd37704a80a78c29241343f8f8d40c3c3a145d" translate="yes" xml:space="preserve">
          <source>ARResults.llf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61b7235f5a104c6454f738bbc8283fa13d000738" translate="yes" xml:space="preserve">
          <source>ARResults.load()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e30c0507bb3281b79e120c77485bfb9f070f50d" translate="yes" xml:space="preserve">
          <source>ARResults.normalized_cov_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce95cdbef1ed12f86406ffa4c99aaee48317aa67" translate="yes" xml:space="preserve">
          <source>ARResults.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7516be43efe86efa35879f5063091caf422a5c0b" translate="yes" xml:space="preserve">
          <source>ARResults.pvalues()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a75dd85f1b5b78aed7d95c93611d37caf3945b3" translate="yes" xml:space="preserve">
          <source>ARResults.remove_data()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0f228825a540a3e065758a71010f9a514f98c04" translate="yes" xml:space="preserve">
          <source>ARResults.resid()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad104240e168fc62bc7748b4b17ba7a2414e3e04" translate="yes" xml:space="preserve">
          <source>ARResults.roots()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e33f3b67e5fad4273c10d956e592b06edb227b2" translate="yes" xml:space="preserve">
          <source>ARResults.save()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf4743ff92d10d41470836016cd82b7badf7715f" translate="yes" xml:space="preserve">
          <source>ARResults.scale()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be54901ac31912b3ede22dde2f218a9a4d70e2ea" translate="yes" xml:space="preserve">
          <source>ARResults.sigma2()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bc2301dbfa10a665ebbe86ca83080fdf7d9bf24" translate="yes" xml:space="preserve">
          <source>ARResults.summary()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b257f9f9358070a31f0327d9fb20f9ed68967c11" translate="yes" xml:space="preserve">
          <source>ARResults.t_test()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="654785938d7f6933200e64780d22298682a96972" translate="yes" xml:space="preserve">
          <source>ARResults.t_test_pairwise()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d68b9e50636bc481243464e1692b97940b66559c" translate="yes" xml:space="preserve">
          <source>ARResults.tvalues()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeb389f8f5a10620422bc82f0e69f62ddf4a1cf8" translate="yes" xml:space="preserve">
          <source>ARResults.wald_test()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddca7536685083480b20439ee18af3837031984e" translate="yes" xml:space="preserve">
          <source>ARResults.wald_test_terms()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="999435754294bab6da94dbdeca38ced40da02bc5" translate="yes" xml:space="preserve">
          <source>AVSALK</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c939e2dbd0df5f7942e3e064fb532c024db7072" translate="yes" xml:space="preserve">
          <source>AVYRSEXP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="396edc357f80f399293c1c859072e3f2e6c30659" translate="yes" xml:space="preserve">
          <source>AVYRSEXP:AVSALK</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8ab797bd8b7490e88478102b400748d11b8056b" translate="yes" xml:space="preserve">
          <source>Abbreviated syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="338eca4ef2e05c2be8724a81bc90c0d0bfdda284" translate="yes" xml:space="preserve">
          <source>Abstract class for discrete choice models.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c260ffe7d81bfe03902b435c66bab5c3c5d2af7a" translate="yes" xml:space="preserve">
          <source>Abstract method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6344598cb034cf87183761928fd1485ed8a7d32d" translate="yes" xml:space="preserve">
          <source>According to Greene, distribution of test statistics depends on nvar but not on nobs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3dc24f0ecce493b68067a30619abd4f914b3700" translate="yes" xml:space="preserve">
          <source>Accounts Manual&amp;ndash;Concepts, Data Sources, and Compilation. IMF. &lt;a href=&quot;http://www.imf.org/external/pubs/ft/qna/2000/Textbook/index.htm&quot;&gt;http://www.imf.org/external/pubs/ft/qna/2000/Textbook/index.htm&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5ec43ad1f1383c43082527442c6637077e46869" translate="yes" xml:space="preserve">
          <source>Adapted from matplotlib&amp;rsquo;s &lt;code&gt;xcorr&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c6e07f549f84acf4e7fcdbd309873fba88eb573" translate="yes" xml:space="preserve">
          <source>Add the contents of a DataFrame to summary table</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb2e91b3918b16f99e6ae21c7f5ac963bc1f4008" translate="yes" xml:space="preserve">
          <source>Add the contents of a Dict to summary table</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b6b414f6f5f71b7da44ee208129f6dfafc10867" translate="yes" xml:space="preserve">
          <source>Add the contents of a Numpy array to summary table</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9db61270405d4663ae4c926819c6e2e93bca7aa" translate="yes" xml:space="preserve">
          <source>Additional to these functions, sandbox regression still contains several examples, that are illustrative of the use of the regression models of statsmodels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da180d1223b3c9b77d0f84d3cda42dcd86501b65" translate="yes" xml:space="preserve">
          <source>Additional to this tools directory, several other subpackages have their own tools modules, for example &lt;code&gt;statsmodels.tsa.tsatools&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee56e84dc90b9e17cce795f4bda2ccd8eca716f8" translate="yes" xml:space="preserve">
          <source>Additionally, tests for equivalence of means are available for one sample and for two, either paired or independent, samples. These tests are based on TOST, two one-sided tests, which have as null hypothesis that the means are not &amp;ldquo;close&amp;rdquo; to each other.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c57f43c204b665b4dd29caac51fa9fbc9b463d0" translate="yes" xml:space="preserve">
          <source>Adds a column of ones to an array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74f32bd3a4141a038141ec6c2203ca8e3c866ec9" translate="yes" xml:space="preserve">
          <source>Adds a trend and/or constant to an array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0c95b927af0eb31cf8bec23be8dc657d03d4467" translate="yes" xml:space="preserve">
          <source>After &lt;a href=&quot;install&quot;&gt;installing statsmodels and its dependencies&lt;/a&gt;, we load a few modules and functions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18578b0f9fa0620d1d21baa8801460adf5039a0d" translate="yes" xml:space="preserve">
          <source>After a model has been fit predict returns the fitted values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccc2b63f19abc364fbc5a7233abb48459d47f469" translate="yes" xml:space="preserve">
          <source>After constructing the moving averages using the $\beta = 0.95$ filter of Lucas (with a window of 10 years on either side), we plot each of the series below. Although they appear to move together prior for part of the sample, after 1990 they appear to diverge.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b094cff5d2fdb495b0ac09069b8ccfe553322d8" translate="yes" xml:space="preserve">
          <source>After creation, the model is &lt;code&gt;fit&lt;/code&gt; via maximum likelihood estimation. Under the hood, good starting parameters are found using a number of steps of the expectation maximization (EM) algorithm, and a quasi-Newton (BFGS) algorithm is applied to quickly find the maximum.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08a7b1344c1c8bcd994b72b3103b3de49fde3aba" translate="yes" xml:space="preserve">
          <source>After fitting the model, each unobserved seasonal component modeled in the frequency domain is available in the results class in the &lt;code&gt;freq_seasonal&lt;/code&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f3b252b5141be7a52df062aec8bf4997ed1f595" translate="yes" xml:space="preserve">
          <source>Again, &lt;code&gt;predict&lt;/code&gt; expects a &lt;code&gt;DataFrame&lt;/code&gt; since &lt;code&gt;patsy&lt;/code&gt; is used to select columns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e13aabd1e54393f432fd2b2edb57f66ff3916bc" translate="yes" xml:space="preserve">
          <source>Akaike information criterion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7799ade128bb29924707d97a0be93f8f5f761c4" translate="yes" xml:space="preserve">
          <source>Akaike information criterion (AIC) with small sample correction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bc3e2c0a171e5ed93bbeedf725af16aa18f3be0" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;Logit&lt;/code&gt;: logit = Logit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="881457422e361e0f4c2ffc191e7b15d32597dd09" translate="yes" xml:space="preserve">
          <source>Alias of Logit: logit = Logit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd545b56d6e5c0964e6c5d3b7f0dfe609b983205" translate="yes" xml:space="preserve">
          <source>Alias of statsmodels.family.links.Power(power=-1.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac3ab90c4844a049fa7d9ca7233065bb0fd709eb" translate="yes" xml:space="preserve">
          <source>Alias of statsmodels.family.links.Power(power=1.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c52865710181d30a19c4afb0df39a4e683d8d8b0" translate="yes" xml:space="preserve">
          <source>Alias of statsmodels.family.links.Power(power=2.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8602103a7aaceb6a121b9cbd37b61747c189353" translate="yes" xml:space="preserve">
          <source>Aliases of Power: inverse = Power(power=-1) sqrt = Power(power=.5) inverse_squared = Power(power=-2.) identity = Power(power=1.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d99e18a04d2544ec50b51c8ed4d796e9ffbbacf3" translate="yes" xml:space="preserve">
          <source>All data series considered here are taken from &lt;a href=&quot;https://research.stlouisfed.org/fred2/&quot;&gt;Federal Reserve Economic Data (FRED)&lt;/a&gt;. Conveniently, the Python library &lt;a href=&quot;http://pandas.pydata.org/&quot;&gt;Pandas&lt;/a&gt; has the ability to download data from FRED directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bcc54a6397bc986857355f86ce45d3ea35df5a7" translate="yes" xml:space="preserve">
          <source>All individual equations are assumed to be well-behaved, homoeskedastic iid errors. This is basically an extension of GLS, using sparse matrices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="618efb545108ca11f1b6a1d12f59f17fd9913833" translate="yes" xml:space="preserve">
          <source>All kwargs are passed to the chosen solver with one exception. The following keyword controls what happens after the fit:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cba0de5710dc350e5e63e3b83f87262f0b0518fc" translate="yes" xml:space="preserve">
          <source>All of the lower case models accept &lt;code&gt;formula&lt;/code&gt; and &lt;code&gt;data&lt;/code&gt; arguments, whereas upper case ones take &lt;code&gt;endog&lt;/code&gt; and &lt;code&gt;exog&lt;/code&gt; design matrices. &lt;code&gt;formula&lt;/code&gt; accepts a string which describes the model in terms of a &lt;code&gt;patsy&lt;/code&gt; formula. &lt;code&gt;data&lt;/code&gt; takes a &lt;a href=&quot;http://pandas.pydata.org/&quot;&gt;pandas&lt;/a&gt; data frame or any other data structure that defines a &lt;code&gt;__getitem__&lt;/code&gt; for variable names like a structured array or a dictionary of variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2af3633b7ed87828b6f663a948042ee0782fdece" translate="yes" xml:space="preserve">
          <source>All plots contain (1 - &lt;code&gt;alpha&lt;/code&gt;) % confidence intervals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7242e6de81328c989eca5ac7de21105ed986c62" translate="yes" xml:space="preserve">
          <source>All prediction is performed by applying the deterministic part of the measurement equation using the predicted state variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="142f79a54bd9cc1559181fab53400db84a78e0dd" translate="yes" xml:space="preserve">
          <source>All procedures that are included, control FWER or FDR in the independent case, and most are robust in the positively correlated case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b609b0ef21df57d271fee4efcc18a03523d89fe6" translate="yes" xml:space="preserve">
          <source>All random effects are modeled as being independent Gaussian values (given the variance parameters). Every column of &lt;code&gt;exog_vc&lt;/code&gt; has a distinct realized random effect that is used to form the linear predictors. The elements of &lt;code&gt;ident&lt;/code&gt; determine the distinct random effect variance parameters. Two random effect realizations that have the same value in &lt;code&gt;ident&lt;/code&gt; are constrained to have the same variance. When fitting with a formula, &lt;code&gt;ident&lt;/code&gt; is constructed internally (each element of &lt;code&gt;vc_formulas&lt;/code&gt; yields a distinct label in &lt;code&gt;ident&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60460e822449a70870fbd2814a6e19521bea5191" translate="yes" xml:space="preserve">
          <source>All regression models define the same methods and follow the same structure, and can be used in a similar fashion. Some of them contain additional model specific methods and attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb544b54dac1cabcc8bca4c3d2d992b52fa021a1" translate="yes" xml:space="preserve">
          <source>All sandbox modules have to be explicitly imported to indicate that they are not yet part of the core of statsmodels. The quality and testing of the sandbox code varies widely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="532f7175c474158cff0e97eec6258919e742f030" translate="yes" xml:space="preserve">
          <source>All the likelihood, gradient, and Hessian calculations closely follow Lindstrom and Bates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8038e96c6edb18a334e4151d40faba7cb14fc395" translate="yes" xml:space="preserve">
          <source>All variables in exog are instrumented in the calculations. If variables in exog are not supposed to be instrumented, then these variables must also to be included in the instrument array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="000ed26b0f397278adb197c694ee7153862827fe" translate="yes" xml:space="preserve">
          <source>AllPairsResults instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e44a48616022e615700c176713b89f1e3d3148f" translate="yes" xml:space="preserve">
          <source>Allow specification of \(h\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95a435d57d959ee7ebbdaeb036b485bb0d174f92" translate="yes" xml:space="preserve">
          <source>Allowed perturbation methods are &amp;lsquo;gaussian&amp;rsquo; (the model parameters are set to a draw from the Gaussian approximation to the posterior distribution), and &amp;lsquo;boot&amp;rsquo; (the model parameters are set to the estimated values obtained when fitting a bootstrapped version of the data set).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="171a84324d256db91ba6d134b10d86777308f1f5" translate="yes" xml:space="preserve">
          <source>Allows tab completion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="203d45934ffd2cda666aa2df55a04af374deb64a" translate="yes" xml:space="preserve">
          <source>Also available are hypothesis test, confidence intervals and effect size for proportions that can be used with NormalIndPower.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="557694d70bb1e8768dcdd8a78d51f1d6f2ea23b4" translate="yes" xml:space="preserve">
          <source>Also used for jitter marker edge color if &lt;code&gt;jitter&lt;/code&gt; is True.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="722742fd3fff8c43d6974a79a799a5b8e2b3846a" translate="yes" xml:space="preserve">
          <source>Alternative solvers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41d885617f3d3ed41ef463a6b378c33c35e56dc7" translate="yes" xml:space="preserve">
          <source>Alternatively, we can pass the raw data and let the Table class construct the array of cell counts for us:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce259e6ca7f2c0180841482fc9387bb66002ee73" translate="yes" xml:space="preserve">
          <source>Alternatively, you can just use the &lt;code&gt;formula&lt;/code&gt; namespace of the main &lt;code&gt;statsmodels.api&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e99c1b5cdce9e4c392eaef43d9ec8b89fd30b374" translate="yes" xml:space="preserve">
          <source>Alternatively, you can specify the hypothesis tests using a string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6de8e9b90e009c42f64580bcd5ddd0f1b83fd4e" translate="yes" xml:space="preserve">
          <source>Although here we will be able to interpret the results of the model by constructing the coincident index, there is a useful and generic approach for getting a sense for what is being captured by the estimated factor. By taking the estimated factors as given, regressing them (and a constant) each (one at a time) on each of the observed variables, and recording the coefficients of determination ($R^2$ values), we can get a sense of the variables for which each factor explains a substantial portion of the variance and the variables for which it does not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0924724ddb9f3c390c4e552701b86ebd09c33489" translate="yes" xml:space="preserve">
          <source>Although it can be difficult to interpret the estimated factor loadings and factors, it is often helpful to use the cofficients of determination from univariate regressions to assess the importance of each factor in explaining the variation in each endogenous variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fec43d51ecba9f7dee05ee82350f6c3ef9eeb27" translate="yes" xml:space="preserve">
          <source>Although the model allows estimating VARMA(p,q) specifications, these models are not identified without additional restrictions on the representation matrices, which are not built-in. For this reason, it is recommended that the user proceed with error (and indeed a warning is issued when these models are specified). Nonetheless, they may in some circumstances provide useful information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f76edeffb675bef7acf5b2f7191d5c129c37f1d7" translate="yes" xml:space="preserve">
          <source>Although this class (Representation) has stringent &lt;code&gt;bind&lt;/code&gt; requirements, it is assumed that it will rarely be used directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91ebeb97bd99af38184f4bde563aaedcb63856c3" translate="yes" xml:space="preserve">
          <source>Although this model increases the likelihood, it is not preferred by the AIC and BIC mesaures which penalize the additional three parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c35171a8f66a268f75c939ebd629bc019bab25a" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;HdrResults&lt;/code&gt; instance with the following attributes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54bc1883dbeca2e816a865c9e019a4fd8298bb93" translate="yes" xml:space="preserve">
          <source>An M-estimator minimizes the function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b73b1b2921b9c6ec7d074f0e3bf87e4870c6024" translate="yes" xml:space="preserve">
          <source>An array of fitted values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e8dcc5aeb61c08a6003307732e3384881cd8f02" translate="yes" xml:space="preserve">
          <source>An array wresid standardized by the sqrt if scale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdd299d53e68ec03ba8f516938706e8f95516ff2" translate="yes" xml:space="preserve">
          <source>An array, or a GLMResults object of the same type returned by &lt;code&gt;fit&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74bd3cc46958b8c7d7f1e7660d19519f3ae561b0" translate="yes" xml:space="preserve">
          <source>An assessment of estimation methods for generalized linear mixed models with binary outcomes &lt;a href=&quot;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3866838/&quot;&gt;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3866838/&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a8f5744647f44be01e31b138f919ea1338c65fb" translate="yes" xml:space="preserve">
          <source>An autoregressive component (often used as a replacement for the white noise irregular term) can be specified as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="862f5aa6090b1f9dc7adf159986aed4e21dc869e" translate="yes" xml:space="preserve">
          <source>An autoregressive model is a good introductory example to putting models in state space form. Recall that an AR(2) model is often written as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6dc236025588460abfde8a1b0f4a08eda14c6c5" translate="yes" xml:space="preserve">
          <source>An exchangeable working dependence structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9d1dc17d3360841ad783c124ebc3b884a211bf8" translate="yes" xml:space="preserve">
          <source>An independence working dependence structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0a4bcd3996e20cb9529e90e6c7eace86f79c75b" translate="yes" xml:space="preserve">
          <source>An instance of the GEEResults class or subclass</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c63203a7cb48600d141f825cc014642245f55df3" translate="yes" xml:space="preserve">
          <source>An object specifying a linear mixed effects model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29863ab3e92061e76e7986134529bce340863040" translate="yes" xml:space="preserve">
          <source>An object specifying a linear mixed effects model. Use the &lt;code&gt;fit&lt;/code&gt; method to fit the model and obtain a results object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d579baabfff37c438bdd7698a5427a0b167e770f" translate="yes" xml:space="preserve">
          <source>Analagously for the scale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70018323184a41fcf53530afa67b4f8053b6784a" translate="yes" xml:space="preserve">
          <source>Analyses for a collection of 2x2 contingency tables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94d7946fd9a4cdb97b1271135a855a892fd382e5" translate="yes" xml:space="preserve">
          <source>Analyses that can be performed on a 2x2 contingency table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e26b4b921dbe6c8cc0236978da8af09299d755a7" translate="yes" xml:space="preserve">
          <source>Analysis of Variance models containing anova_lm for ANOVA analysis with a linear OLSModel, and AnovaRM for repeated measures ANOVA, within ANOVA for balanced data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61026a5283702ecd1dff366a074dc1c0f9f8c40f" translate="yes" xml:space="preserve">
          <source>Analytically performs orthogonal rotations towards a target matrix, i.e., we minimize:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ec6af3941692797e257be8096bb567f27769f59" translate="yes" xml:space="preserve">
          <source>Analytically solves the following Procrustes problem:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bcfc19817391a61cc37b4cd53546af2f65a7ce5" translate="yes" xml:space="preserve">
          <source>Analyze impulse responses to shocks in system</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="955a8ff2dcac5bfa5042326440e6b626a45d2aac" translate="yes" xml:space="preserve">
          <source>And the weights give an idea of how much a particular observation is down-weighted according to the scaling asked for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8f4df7b0bfa26560f450543cee4568f1d775e4f" translate="yes" xml:space="preserve">
          <source>Anderson Darling test for normality with estimated mean and variance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6761eb54e9add0a3c3d18e505c0a9d578ecd794b" translate="yes" xml:space="preserve">
          <source>Anderson-Darling test for normal distribution unknown mean and variance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17eb2cce2be2a6ddedf173d17f44dbb3eefca73c" translate="yes" xml:space="preserve">
          <source>Andrew&amp;rsquo;s Wave</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10444d906764dfc08875b389bb2eaff043796386" translate="yes" xml:space="preserve">
          <source>Andrew&amp;rsquo;s wave for M estimation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19abc094e4b59197fc1448b2c70e744f045cb91e" translate="yes" xml:space="preserve">
          <source>Andrew&amp;rsquo;s wave weighting function for the IRLS algorithm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5b7df1b02ff351dfc46c6505db8bff17f4945e7" translate="yes" xml:space="preserve">
          <source>Andrew's Wave</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0063eaf2ff43a58c42ab3e651ece92b6e05a159e" translate="yes" xml:space="preserve">
          <source>Andrew's Wave norm with Huber's Proposal 2 scaling and 'H3' covariance matrix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67dc7f5cea2477b588eb48c7bde85d184ea9f1b4" translate="yes" xml:space="preserve">
          <source>AndrewWave.psi()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24676e565476d916cdbce0ce4f4005ff5c27b97d" translate="yes" xml:space="preserve">
          <source>AndrewWave.psi_deriv()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e81a1235ad407d865433d2d2f9947ffc053c3032" translate="yes" xml:space="preserve">
          <source>AndrewWave.rho()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a21a72811e2e9df799de1ed91f466974032e60fd" translate="yes" xml:space="preserve">
          <source>AndrewWave.weights()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35c60d74a482498207875f57d1c2a9b4bb37b197" translate="yes" xml:space="preserve">
          <source>Another related statistic is the CUSUM of squares. It is available in the &lt;code&gt;cusum_squares&lt;/code&gt; attribute, but it is similarly more convenient to check it visually, using the &lt;code&gt;plot_cusum_squares&lt;/code&gt; method. In the plot below, the CUSUM of squares statistic does not move outside of the 5% significance bands, so we fail to reject the null hypothesis of stable parameters at the 5% level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="484d96d2229ae64148c971b7788149cb6899f3f8" translate="yes" xml:space="preserve">
          <source>Anova table for one or more fitted linear models.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4858e6306ae06917985022fb2828ce7971b0f18" translate="yes" xml:space="preserve">
          <source>AnovaRM.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2972769ab117f5eff80059d93dfdca87b18090a" translate="yes" xml:space="preserve">
          <source>AnovaResults instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41e9285d7cc0ce4436931b4a93739e762e380c81" translate="yes" xml:space="preserve">
          <source>Anscombe</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="926dd5a188f4c38c7750ec605561b2b2a975b732" translate="yes" xml:space="preserve">
          <source>Anscombe residuals are defined by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4f3a3e8d65c1c3c8b8fbd55f83e3c5da5a59fae" translate="yes" xml:space="preserve">
          <source>Anscombe residuals for Negative Binomial are the same as for Binomial upon setting \(n=-\frac{1}{\alpha}\). Due to the negative value of \(-\alpha*Y\) the representation with the hypergeometric function \(H2F1(x) = hyp2f1(2/3.,1/3.,5/3.,x)\) is advantageous</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb1ba100aebf7c5d36ca2671429607a78bbfc107" translate="yes" xml:space="preserve">
          <source>Anscombe, FJ. (1953) &amp;ldquo;Contribution to the discussion of H. Hotelling&amp;rsquo;s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c78603ab12a98b7003e13bf099fde0a831fd6e77" translate="yes" xml:space="preserve">
          <source>Ansley, Craig F, and Paul Newbold. 1979. &amp;ldquo;Multivariate Partial Autocorrelations.&amp;rdquo; In Proceedings of the Business and Economic Statistics Section, 349-53. American Statistical Association</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d553ef24261088879f6f096ba9b405973983220f" translate="yes" xml:space="preserve">
          <source>Ansley, Craig F., and Robert Kohn. 1986. &amp;ldquo;A Note on Reparameterizing a Vector Autoregressive Moving Average Model to Enforce Stationarity.&amp;rdquo; Journal of Statistical Computation and Simulation 24 (2): 99-106.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2720fbdfada716decfbd67798d80d663e0d2244" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;exposure&lt;/code&gt; and &lt;code&gt;offset&lt;/code&gt; provided here take precedence over the &lt;code&gt;exposure&lt;/code&gt; and &lt;code&gt;offset&lt;/code&gt; used in the model fit. If &lt;code&gt;exog&lt;/code&gt; is passed as an argument here, then any &lt;code&gt;exposure&lt;/code&gt; and &lt;code&gt;offset&lt;/code&gt; values in the fit will be ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efd5e97d88270ec5c67c7e8f3b0bb4357ac11614" translate="yes" xml:space="preserve">
          <source>Any function that is in the calling namespace is available to the formula.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f459c85f9e5b8077b97bc6c21fb284745f43d72" translate="yes" xml:space="preserve">
          <source>Any object that has a two-value &lt;code&gt;params&lt;/code&gt; attribute. Assumed that it is (intercept, slope)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7793607db8b6f27dee304e06c4f4f2c996402aac" translate="yes" xml:space="preserve">
          <source>Append a note to the bottom of the summary table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b08889b96549a7c7a136974f6b331be48a219ad" translate="yes" xml:space="preserve">
          <source>Append a note to the bottom of the summary table. In ASCII tables, the note will be wrapped to table width. Notes are not indendented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d12fa116c28cd6a07fbacc4beebefba51825724" translate="yes" xml:space="preserve">
          <source>Appendix 1: Extending the dynamic factor model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="940f61ab73ae5f9b284127fcb27aa3374b02fa57" translate="yes" xml:space="preserve">
          <source>Applicable weights</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b254f56343e15ea01953c8263cd6e64493bbd1f" translate="yes" xml:space="preserve">
          <source>Apply rotation, inplace modification of this Results instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96688ef6e73f26b039ebcd66cf275a74faf9ba51" translate="yes" xml:space="preserve">
          <source>Apply the Hamilton filter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="695a27a6ac88718e419a3a56b5a9ea69ab8e83c1" translate="yes" xml:space="preserve">
          <source>Apply the Kalman filter to the statespace model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ebd0409477c5d2b582e594dd522f3536792b4fa" translate="yes" xml:space="preserve">
          <source>Apply the Kalman smoother to the statespace model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84fe0db196295962a63e0488a15d24b0640cec6f" translate="yes" xml:space="preserve">
          <source>Apply the Kim smoother and Hamilton filter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be6cb75542bb847aedd753578a99ae8530ed69c9" translate="yes" xml:space="preserve">
          <source>Approximate F test Perform multivariate statistical tests of the hypothesis that there is no canonical correlation between endog and exog.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f7691acbcfe8d24c51b2b446f16372105714dbc" translate="yes" xml:space="preserve">
          <source>Approximate F test Perform multivariate statistical tests of the hypothesis that there is no canonical correlation between endog and exog. For each canonical correlation, testing its significance based on Wilks&amp;rsquo; lambda.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2ed137600696088855eadca244278800220587f" translate="yes" xml:space="preserve">
          <source>Approximate an arbitrary square matrix with a factor-structured matrix of the form k*I + XX&amp;rsquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d47fa4c65a7056a9c38666ad263bd77f78bec9dd" translate="yes" xml:space="preserve">
          <source>Arma process is invertible if MA roots are outside unit circle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49d2701d5f5add25b1a9abb3aab3ae8d354d6db9" translate="yes" xml:space="preserve">
          <source>Arma process is stationary if AR roots are outside unit circle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fd9fb5568cf4ebec2f6a12b66090cb4dcfa8e05" translate="yes" xml:space="preserve">
          <source>ArmaFft.acf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d7e9b3832ac7382d63714d10b42c17da8c071df" translate="yes" xml:space="preserve">
          <source>ArmaFft.acf2spdfreq()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c16247455fddda9c83824ec762a95a3646cc301" translate="yes" xml:space="preserve">
          <source>ArmaFft.acovf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32d05ba92e588f1885f6485d996065a0b5cdc878" translate="yes" xml:space="preserve">
          <source>ArmaFft.arma2ar()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89963dc24fede3f1bec8f633b76bfafef34c25cc" translate="yes" xml:space="preserve">
          <source>ArmaFft.arma2ma()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5836a041fdd31dcd40f4324a7a89d811ac004e6d" translate="yes" xml:space="preserve">
          <source>ArmaFft.fftar()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="788a2b78cdf808b9c001e17da96c4edb9e0e6c6b" translate="yes" xml:space="preserve">
          <source>ArmaFft.fftarma()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cde5b6454d994446ed729eb1f7cfc5f55203dc6d" translate="yes" xml:space="preserve">
          <source>ArmaFft.fftma()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="064251cc822f75e833a4cfacacbe464ad88ec93f" translate="yes" xml:space="preserve">
          <source>ArmaFft.filter()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0e54d57378b1ecf40c8399db7c8b3cc271c5f8e" translate="yes" xml:space="preserve">
          <source>ArmaFft.filter2()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9017fa21c8513e3f2b83f966ce7f9c854edc2d23" translate="yes" xml:space="preserve">
          <source>ArmaFft.from_coeffs()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78de1d69cdc20deb239c6ea9b21cbea5b7e4e41d" translate="yes" xml:space="preserve">
          <source>ArmaFft.from_estimation()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="485d1e846f358d0079bc81580412f3766f54b781" translate="yes" xml:space="preserve">
          <source>ArmaFft.generate_sample()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd247c519b7d070c3ce22026c9c5bfb96efa8505" translate="yes" xml:space="preserve">
          <source>ArmaFft.impulse_response()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1364dafdf0a0362e3b276845ac458d0824870d61" translate="yes" xml:space="preserve">
          <source>ArmaFft.invertroots()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa5707035b09d41ac744890fb8fe4c543703659d" translate="yes" xml:space="preserve">
          <source>ArmaFft.invpowerspd()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6071ab51b168d844c843cd0687e67f62e40a786e" translate="yes" xml:space="preserve">
          <source>ArmaFft.pacf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3560a7dd384252f5a2292787cf2b3651b9db1c6" translate="yes" xml:space="preserve">
          <source>ArmaFft.pad()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb2e006e02fa0ff6cc1c1778eeeab3c9c939668e" translate="yes" xml:space="preserve">
          <source>ArmaFft.padarr()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40c025dd4c6b1fd06121bc082d304f8e66c58f10" translate="yes" xml:space="preserve">
          <source>ArmaFft.periodogram()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="250a3fbdf1c90e4be3c7f275107b1f3778535a72" translate="yes" xml:space="preserve">
          <source>ArmaFft.plot4()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4acb42ad2dd8add6fe5bdf6aff6c0b7b8c1e8193" translate="yes" xml:space="preserve">
          <source>ArmaFft.spd()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b562bec23670abbe9f17251d9fea8e6191d188cc" translate="yes" xml:space="preserve">
          <source>ArmaFft.spddirect()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23124c436ac54031debb4d9ad9de03655ecfb2b5" translate="yes" xml:space="preserve">
          <source>ArmaFft.spdmapoly()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ff045924418c992d87aed5c8010c561a6ffed5a" translate="yes" xml:space="preserve">
          <source>ArmaFft.spdpoly()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ce1851d61fac37399d47448eadf61b0323e8bab" translate="yes" xml:space="preserve">
          <source>ArmaFft.spdroots()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adaa51e0d637a60e04c3382d139bed3666ffc917" translate="yes" xml:space="preserve">
          <source>ArmaFft.spdshift()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2103a16744f5ec3e542f1cfdd317898bd600e688" translate="yes" xml:space="preserve">
          <source>ArmaProcess.acf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b26613cd6f7a4614a8914c6caaaba39694360449" translate="yes" xml:space="preserve">
          <source>ArmaProcess.acovf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6e261de09ba0d0258cc0e2463bf91579cf5f37d" translate="yes" xml:space="preserve">
          <source>ArmaProcess.arma2ar()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67ab43de464ac78577186871fb0bed733bc101ab" translate="yes" xml:space="preserve">
          <source>ArmaProcess.arma2ma()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b58e32d1bee54a8918c2191cdbe39f1ca9260a4" translate="yes" xml:space="preserve">
          <source>ArmaProcess.from_coeffs()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f88cbefbfe450ca44882e4813c700b141295673" translate="yes" xml:space="preserve">
          <source>ArmaProcess.from_estimation()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d45b4a131e2451dfbeb3e59886eebd8fe4e93eb" translate="yes" xml:space="preserve">
          <source>ArmaProcess.generate_sample()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1327947e4ab4e4379e2be87a3d9f14a508ccb9c9" translate="yes" xml:space="preserve">
          <source>ArmaProcess.impulse_response()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f60c0b0b92a76144fe69040c372bfdc323895dd" translate="yes" xml:space="preserve">
          <source>ArmaProcess.invertroots()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6870b1231890346d8ec5a0a99bacb924e727e06" translate="yes" xml:space="preserve">
          <source>ArmaProcess.pacf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="998dc27519d79c68e77bd30aff272cc8bd09169a" translate="yes" xml:space="preserve">
          <source>ArmaProcess.periodogram()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d252ffcf4bacffb0e7a33e6c409bcab117ce8291" translate="yes" xml:space="preserve">
          <source>Array of autocorrelation coefficients. Can be obtained from acf.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be7b686d50dd3a7c4202391ef45f0c2acd19f151" translate="yes" xml:space="preserve">
          <source>Array of simulated impulse response functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="474c2840a78dfb926fae4cf9c6c66d2f71fb02bb" translate="yes" xml:space="preserve">
          <source>Artificial data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1efb7ce6e93595dd7f0529dc56e80c62108fe365" translate="yes" xml:space="preserve">
          <source>Artificial data with outliers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f98d5b7db16320e5d088fae747e0bac415cf6847" translate="yes" xml:space="preserve">
          <source>Artificial data:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baaf25d15f66feba736ef32a564f4dc452e2bd54" translate="yes" xml:space="preserve">
          <source>Artificial data: Heteroscedasticity 2 groups</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cb31424642cc63c0b37346198e2659fd28f9a9b" translate="yes" xml:space="preserve">
          <source>As a result, they suggest estimating the model using the first differences (of the logs) of the variables, demeaned and standardized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba4c333bf0d713f74be79fedfbef795c0079b934" translate="yes" xml:space="preserve">
          <source>As an example, consider the airline model ARIMA $(2,1,0) \times (1,1,0)_{12}$, with an intercept. The data process can be written in the form above as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="923e186c82c5de16c7e4d78d9bc25f235d86e417" translate="yes" xml:space="preserve">
          <source>As an example, suppose you run an experiment and for the second session some subjects are not available anymore. Is the drop-out relevant for the conclusions you draw for the experiment? In other words, can we treat the drop-out decision as exogenous for our problem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4597ed2d8056b0e19aa88d91ae0041900ab4bfa8" translate="yes" xml:space="preserve">
          <source>As can be seen in the graphs from Example 2, the Wholesale price index (WPI) is growing over time (i.e. is not stationary). Therefore an ARMA model is not a good specification. In this first example, we consider a model where the original time series is assumed to be integrated of order 1, so that the difference is assumed to be stationary, and fit a model with one autoregressive lag and one moving average lag, as well as an intercept term.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ae76260f628e5051792075dcd37ce07c68cd90c" translate="yes" xml:space="preserve">
          <source>As described above, the goal of this model was to create an interpretable series which could be used to understand the current status of the macroeconomy. This is what the coincident index is designed to do. It is constructed below. For readers interested in an explanation of the construction, see Kim and Nelson (1999) or Stock and Watson (1991).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4147a3e96e75de4e3c3137f969552bbc77cc00c6" translate="yes" xml:space="preserve">
          <source>As expected, the coefficient for &lt;code&gt;double_it(LOWINC)&lt;/code&gt; in the second model is half the size of the &lt;code&gt;LOWINC&lt;/code&gt; coefficient from the first model:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="221a5f6260278b4e48cfcb343b85cddba7288739" translate="yes" xml:space="preserve">
          <source>As in Durbin and Koopman, we force a number of the values to be missing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f113b10490b3771afa8541ea6d10410a00232b4" translate="yes" xml:space="preserve">
          <source>As in all the discrete data models presented below, we can print a nice summary of results:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d197b326bf86dc48bd92981429c2e71f559bc946" translate="yes" xml:space="preserve">
          <source>As mentioned above, both the AR and MA components should include the coefficient on the zero-lag. This is typically 1. Further, due to the conventions used in signal processing used in signal.lfilter vs. conventions in statistics for ARMA processes, the AR parameters should have the opposite sign of what you might expect. See the examples below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="288b20308d70241d2c99736d5943c2e34d8b8c04" translate="yes" xml:space="preserve">
          <source>As usual, you can obtain a full list of available information by typing &lt;code&gt;dir(res)&lt;/code&gt;. We can also look at the summary of the estimation results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13318238119c91868c5e70103c46e8e38057ed94" translate="yes" xml:space="preserve">
          <source>As we know, an AR(1) process means that near-neighbors have a stronger relation so we can give this structure by using a toeplitz matrix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="634a942c8740bad10bda04c6f6c82be3b0534b1f" translate="yes" xml:space="preserve">
          <source>As you can see the partial regression plot confirms the influence of conductor, minister, and RR.engineer on the partial relationship between income and prestige. The cases greatly decrease the effect of income on prestige. Dropping these cases confirms this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce47946374caf9f4cbc76b81fda8569629262bc2" translate="yes" xml:space="preserve">
          <source>As you can see the relationship between the variation in prestige explained by education conditional on income seems to be linear, though you can see there are some observations that are exerting considerable influence on the relationship. We can quickly look at more than one variable by using plot_ccpr_grid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88ed0dd667bd56d1facd312073cac980511a5917" translate="yes" xml:space="preserve">
          <source>As you can see there are a few worrisome observations. Both contractor and reporter have low leverage but a large residual.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de890976b6d1024117c8b8d3fff4d21c3b946f9f" translate="yes" xml:space="preserve">
          <source>As you can see, readcat has a significant linear effect on the dependent variable &lt;code&gt;write&lt;/code&gt; but not a significant quadratic or cubic effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="555cec8d3559b6a10224fb552fac00f2f43f033a" translate="yes" xml:space="preserve">
          <source>As you can see, these are only equal up to a constant. Other versions of the Helmert contrast give the actual difference in means. Regardless, the hypothesis tests are the same.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85a10e22046ae8780445f66af22a622f41c7d5c3" translate="yes" xml:space="preserve">
          <source>Aside from the original sources (&lt;a href=&quot;#id10&quot; id=&quot;id5&quot;&gt;[1]&lt;/a&gt;, &lt;a href=&quot;#id11&quot; id=&quot;id6&quot;&gt;[2]&lt;/a&gt;, and &lt;a href=&quot;#id12&quot; id=&quot;id7&quot;&gt;[3]&lt;/a&gt;), the implementation uses the formulas (though not the code) presented in &lt;a href=&quot;#id13&quot; id=&quot;id8&quot;&gt;[4]&lt;/a&gt; and &lt;a href=&quot;#id14&quot; id=&quot;id9&quot;&gt;[5]&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81a40dc3a2573e2d9465f7e132c080fd64955a21" translate="yes" xml:space="preserve">
          <source>Aside: Binomial distribution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e68321a97a7ad6b364833798152656716790e4a" translate="yes" xml:space="preserve">
          <source>Assess independence between two ordinal variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ab5e598b8b799b17af2da9cecc02a660b838953" translate="yes" xml:space="preserve">
          <source>Assess independence for nominal factors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01891c161f43c892cf50b2eb5ba03e3cd5dddd5c" translate="yes" xml:space="preserve">
          <source>Assessment of independence between rows and columns using chi^2 testing. The rows and columns are treated as nominal (unordered) categorical variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7d1aa16c3f08d25e9177f96149681ac3031e7c7" translate="yes" xml:space="preserve">
          <source>Assume that the error terms follow an AR(1) process with a trend:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2db1573ec55b05557625b6e28096704ad8711b6" translate="yes" xml:space="preserve">
          <source>Assumes input correlation matrix is symmetric.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7dedcd5350430630107bd34e680bc9ba212a25a" translate="yes" xml:space="preserve">
          <source>Assumes input correlation matrix is symmetric. The diagonal elements of returned correlation matrix is set to ones.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58ee9c72d96d707dbd66eb3fd40c2713d526a602" translate="yes" xml:space="preserve">
          <source>Assumes input covariance matrix is symmetric.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0478e5e31de57a924b516a59b64d62756d499984" translate="yes" xml:space="preserve">
          <source>Assumes that the data is 1d or 2d with (nobs, nvars) observations in rows, variables in columns, and that the same weight applies to each column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0a1cd622681c669340dc72f54399123c35d3fa2" translate="yes" xml:space="preserve">
          <source>Assumes we have a panel of time series where the time index is available. The time index is assumed to represent equal spaced periods. At least one observation per period is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64089887d8123031fad671ae4b8ef6bc7690f237" translate="yes" xml:space="preserve">
          <source>Assumes we have a panel of time series with consecutive, equal spaced time periods. Data is assumed to be in long format with time series of each individual stacked into one array. Panel can be unbalanced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cd6ae4e28fef97b957cbb655a1836b4c9448a68" translate="yes" xml:space="preserve">
          <source>Assumes we have a single time series with zero axis consecutive, equal spaced time periods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8b71c4d4fffe9880594653a96e2fa5002f6d23b" translate="yes" xml:space="preserve">
          <source>Assumes x contains constant (for counting dof and calculation of R^2). In the general description of LM test, Greene mentions that this test exaggerates the significance of results in small or moderately large samples. In this case the F-statistic is preferrable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adc5a0ae7e0f376cdbcbb24dd3b37a9dc44b4067" translate="yes" xml:space="preserve">
          <source>Asymptotically consistent estimate of covariance of the sample mean</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61a7bcbe77f125e7e69d81632fb2111565e10573" translate="yes" xml:space="preserve">
          <source>Attach the density estimate to the KDEUnivariate class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6652617f2c799eb11ee727b16c5646c48af6905" translate="yes" xml:space="preserve">
          <source>Attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="092fb84d75ea26365c3cbda5197f4855fb5e4dd4" translate="yes" xml:space="preserve">
          <source>Augmented Dickey-Fuller unit root test</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6e15994749c9938f1fd4fa298c41005d1d6042d" translate="yes" xml:space="preserve">
          <source>Autocorrelation Tests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50809ee63f83f19425241f69aa54f50ed0d58ee1" translate="yes" xml:space="preserve">
          <source>Autocorrelation function for 1d arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="113a4b9d48a47aacada5730f7751cdfefd2ed499" translate="yes" xml:space="preserve">
          <source>Autocovariance for 1D</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c93f08ecbbed323ec6add7d8a9110871d0c15a9c" translate="yes" xml:space="preserve">
          <source>Autogressive Moving-Average Processes (ARMA) and Kalman Filter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2b339146134f1a9fe1e9731db45574dedf955b3" translate="yes" xml:space="preserve">
          <source>Automatically determine parameters for t distribution including the loc and scale:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70fab58725b7734ea1d9c7e3efa5093937103edc" translate="yes" xml:space="preserve">
          <source>Autoregressive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d932714773b760362d9b8c638d331d1366348b60" translate="yes" xml:space="preserve">
          <source>Autoregressive AR(p) model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c220671494f75ac326308ab5ce0c1e437ce3dc9" translate="yes" xml:space="preserve">
          <source>Autoregressive Integrated Moving Average ARIMA(p,d,q) Model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19a0795c0c4a04bb8de81922d281897b63c4ebf2" translate="yes" xml:space="preserve">
          <source>Autoregressive Moving Average (ARMA): Artificial data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bba48ba97ea462a10d71dd5acd4702a60c76890" translate="yes" xml:space="preserve">
          <source>Autoregressive Moving Average (ARMA): Sunspots data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50c1c765f32a1a9afd27e03978ef4b89ae019ea0" translate="yes" xml:space="preserve">
          <source>Autoregressive Moving Average ARMA(p,q) Model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcd188fb50b2ae57aa67253500394052d6b3fe0e" translate="yes" xml:space="preserve">
          <source>Autoregressive, or recursive, filtering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e97973c9ff6031ce0b90ab2acd2ca812faa1a04d" translate="yes" xml:space="preserve">
          <source>Autoregressive.covariance_matrix()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42dee233e93022e90bcc008d5ef27f929e16dc34" translate="yes" xml:space="preserve">
          <source>Autoregressive.covariance_matrix_solve()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68ef944a84b9a43e9c9d8116d181c7b6ae0ddc27" translate="yes" xml:space="preserve">
          <source>Autoregressive.initialize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6be3d53e2cea6ba510e95067c33fdbd7f9d0df2b" translate="yes" xml:space="preserve">
          <source>Autoregressive.summary()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b833a19127de47bd38b3a4586ab7049b55bc3e57" translate="yes" xml:space="preserve">
          <source>Autoregressive.update()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5baff4c755a7c2b0e3c7a75f6670c71261d69aa2" translate="yes" xml:space="preserve">
          <source>Avoids importing unnecessary modules and commands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dc252a0fa25a952adac365b93e3ebc6b847e170" translate="yes" xml:space="preserve">
          <source>B Efron (2008). Microarrays, Empirical Bayes, and the Two-Groups Model. Statistical Science 23:1, 1-22.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20973ca2d4a20a84ea96ab0d34063d330af15704" translate="yes" xml:space="preserve">
          <source>B Rosner, A Munoz. Autoregressive modeling for the analysis of longitudinal data with unequally spaced examinations. Statistics in medicine. Vol 7, 59-71, 1988.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22750c558ebf1e46885611c08131132471ce9669" translate="yes" xml:space="preserve">
          <source>B.W. Silverman, &amp;ldquo;Density Estimation for Statistics and Data Analysis&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="860f01bf4167595e82cffa7306d2b247ad8b9a82" translate="yes" xml:space="preserve">
          <source>BG adds lags of residual to exog in the design matrix for the auxiliary regression with residuals as endog, see Greene 12.7.1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7434fa918f1cff45a2f9455ad4b6d3de9edd5560" translate="yes" xml:space="preserve">
          <source>BIC</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffafc21043216fb48dbcfbc6e362b093af1daaa4" translate="yes" xml:space="preserve">
          <source>BKY described several other multi-stage methods, which would be easy to implement. However, in their simulation the simple two-stage method (with iter=False) was the most robust to the presence of positive correlation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64dd60fe1a049fe6db3eb1369dec2e42bf428e21" translate="yes" xml:space="preserve">
          <source>Background</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f3dfb7fae3330fe817acba965fc9b9d76a78ce1" translate="yes" xml:space="preserve">
          <source>Backward Difference Coding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7df432ad76d13af8ed09cc8aa7e5f8969ac2dc8" translate="yes" xml:space="preserve">
          <source>Balanced panel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8309333431abbb524bb60f9d7cab2759d6e63d67" translate="yes" xml:space="preserve">
          <source>Band depth is an order statistic for functional data (see &lt;code&gt;fboxplot&lt;/code&gt;), with a higher band depth indicating larger &amp;ldquo;centrality&amp;rdquo;. In analog to scalar data, the functional curve with highest band depth is called the median curve, and the band made up from the first N/2 of N curves is the 50% central region.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="195bf4cfc42faf8176a2a69f9a9ac139f8ffbddc" translate="yes" xml:space="preserve">
          <source>Bandwidth selection (used by the fit method):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a68018a4614425fd6cc0026d821408c41a2485f5" translate="yes" xml:space="preserve">
          <source>Basic PCA using the correlation matrix of the data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="252d2da0aa0eb30deee20950d23aea48f7ea2321" translate="yes" xml:space="preserve">
          <source>Basic Statistics and t-Tests with frequency weights</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="475d68080e309f31a6060cbae3ac93aad942db9f" translate="yes" xml:space="preserve">
          <source>Basic class for instrumental variables estimation using GMM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b70ca73d36ad8e1cbc0b29ea53a6109d1ae5f3b1" translate="yes" xml:space="preserve">
          <source>Basic tools &lt;code&gt;tools&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da2a685324e967c7d22d315e8d4e496127f91605" translate="yes" xml:space="preserve">
          <source>Basic usage, how to fit the estimator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f54d2933c5737980f89cf99734051cb65a1745c" translate="yes" xml:space="preserve">
          <source>Basic use (the null Z-scores are taken to be standard normal):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97e53cce5e08330b2f914e2bd9cebb036dc19665" translate="yes" xml:space="preserve">
          <source>Baxter-King approximate band-pass filter: Inflation and Unemployment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3f516e3478307c5bfa025c516fd7463b8bbe2f7" translate="yes" xml:space="preserve">
          <source>Baxter-King bandpass filter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="398ac1331d02e55b12426ba293cdf61d5db1ffe8" translate="yes" xml:space="preserve">
          <source>BayesMixedGLMResults instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43e6902b0991a6e5f12c3dbe748344741c7f039b" translate="yes" xml:space="preserve">
          <source>BayesMixedGLMResults.random_effects()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e9ed69472630372eb033be305f2d1ff35acf17b" translate="yes" xml:space="preserve">
          <source>BayesMixedGLMResults.summary()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cdd96ba7243d7b8999d0b1cf3d3f9ba4672172b" translate="yes" xml:space="preserve">
          <source>Bayesian a.k.a.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5f9c68a89f7bfdb84a0e9d431111c7132b6cc29" translate="yes" xml:space="preserve">
          <source>Bayesian information criterion (BIC) or Schwarz criterion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1df318b2c8f986af2fd33c1c96591877c28251e5" translate="yes" xml:space="preserve">
          <source>Bean plot, builds on &lt;code&gt;violinplot&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efe0fdc37855e65ab571210caeef3116a2d3ff5c" translate="yes" xml:space="preserve">
          <source>Because of the recursive structure, some comparisons are made several times, but only unique pairs or sets are returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e5396d12d088abcd13f2a219128f00cf309da9c" translate="yes" xml:space="preserve">
          <source>Because the models can be often difficult to estimate, for the 3-regime model we employ a search over starting parameters to improve results, specifying 20 random search repetitions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="384e6cb8e38b3b359f2a3aeef4f4f5501a9e379c" translate="yes" xml:space="preserve">
          <source>Before estimating the dataset, graphs showing:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee7dd78bce0b76bc1a106da7578e54dac46332c4" translate="yes" xml:space="preserve">
          <source>Behind the scene, the dataset is represented as a matrix. Each line corresponding to a 1D curve. This matrix is then decomposed using Principal Components Analysis (PCA). This allows to represent the data using a finite number of modes, or components. This compression process allows to turn the functional representation into a scalar representation of the matrix. In other words, you can visualize each curve from its components. Each curve is thus a point in this reduced space. With 2 components, this is called a bivariate plot (2D plot).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a443618a325db2ad2efdd29a317dcae963c8961" translate="yes" xml:space="preserve">
          <source>Behind the scenes, the &lt;code&gt;SARIMAX&lt;/code&gt; model creates the design and transition matrices (and sometimes some of the other matrices) based on the model specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e94e6399da3fb3470720ce66dd8d84568a48cee1" translate="yes" xml:space="preserve">
          <source>Below is a simple VARX(2) model in two endogenous variables and an exogenous series, but no constant term. Notice that we needed to allow for more iterations than the default (which is &lt;code&gt;maxiter=50&lt;/code&gt;) in order for the likelihood estimation to converge. This is not unusual in VAR models which have to estimate a large number of parameters, often on a relatively small number of time series: this model, for example, estimates 27 parameters off of 75 observations of 3 variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dae1153b7adcc04f2c8e175a02736e92cbfa456" translate="yes" xml:space="preserve">
          <source>Below we plot the calculated coincident index along with the US recessions and the comparison coincident index USPHCI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2567e1c30ac52446f352e4fd11df5d3efe7e4cc5" translate="yes" xml:space="preserve">
          <source>Below we plot the probabilities of being in each of the regimes; only in a few periods is a high-variance regime probable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f71a182129cfdcdef8f7d9805dce091e96398f08" translate="yes" xml:space="preserve">
          <source>Below we plot the smoothed probability of the economy operating in a low-production state, and again include the NBER recessions for comparison.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e47fc5187e91dcb95982f9aeca79fc81ba984ef2" translate="yes" xml:space="preserve">
          <source>Below,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9405b93ab1ec4898ff05a2d614b5d075b56ee3b" translate="yes" xml:space="preserve">
          <source>Below, we construct &lt;code&gt;kwargs&lt;/code&gt; dictionaries for each of these model types. Notice that rather that there are two ways to specify the models. One way is to specify components directly, as in the table above. The other way is to use string names which map to various specifications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbc1bda028d10c05b51e847110fedfc4a8d349d8" translate="yes" xml:space="preserve">
          <source>Below, we follow the treatment found in Kim and Nelson (1999), of the Stock and Watson (1991) model, to formulate a dynamic factor model, estimate its parameters via maximum likelihood, and create a coincident index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce35fa75fb83ef08f8b97eb5c23daefc468bea40" translate="yes" xml:space="preserve">
          <source>Below, we specify that 20 random perturbations from the starting parameter vector are examined and the best one used as the actual starting parameters. Because of the random nature of the search, we seed the random number generator beforehand to allow replication of the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9f611b0ec26812a54fecaca29307d05c75b0a44" translate="yes" xml:space="preserve">
          <source>Benjamini, Krieger and Yekuteli, procedure in Definition 6</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35d9ae57475cf00b5b7a13e0b10cc9cc4ec55999" translate="yes" xml:space="preserve">
          <source>Berndt, Ernst R., Bronwyn Hall, Robert Hall, and Jerry Hausman. 1974. Estimation and Inference in Nonlinear Structural Models. NBER Chapters. National Bureau of Economic Research, Inc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd61af09246b14e16be55488f220f2a0d798330e" translate="yes" xml:space="preserve">
          <source>Besides basic statistics, like mean, variance, covariance and correlation for data with case weights, the classes here provide one and two sample tests for means. The t-tests have more options than those in scipy.stats, but are more restrictive in the shape of the arrays. Confidence intervals for means are provided based on the same assumptions as the t-tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45f381f054797ec68dda62c02cc9ef0f6653cfdb" translate="yes" xml:space="preserve">
          <source>Besides estimation, several process properties and additional results after estimation are available for vector autoregressive processes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe7554644fd1f48e375cc58718987dcdb2a3b7cc" translate="yes" xml:space="preserve">
          <source>Beta, the Clopper-Pearson exact interval has coverage at least 1-alpha, but is in general conservative. Most of the other methods have average coverage equal to 1-alpha, but will have smaller coverage in some cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2321db9d129eb82f7c2864e7004290b446769728" translate="yes" xml:space="preserve">
          <source>Bibtex entry:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="784e9b8f27d98c060413b0c74fb423efe595e223" translate="yes" xml:space="preserve">
          <source>Binary choice Probit model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64edfdeb04bdf9743da827d26ff267895be36a1b" translate="yes" xml:space="preserve">
          <source>Binary choice logit model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdbf0cda19b188b3ce38ce9ec8ace54f9d72eaec" translate="yes" xml:space="preserve">
          <source>BinaryModel.cdf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eb272ee10b0b489ea2773bb20a7464f0065d880" translate="yes" xml:space="preserve">
          <source>BinaryModel.cov_params_func_l1()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cafa8fc911ec32bcd5801f0a21c4e49934fc651c" translate="yes" xml:space="preserve">
          <source>BinaryModel.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74ff63abd182b57642d9e6ed1a0d97577b99719d" translate="yes" xml:space="preserve">
          <source>BinaryModel.fit_regularized()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="165f879b0281ff4a704434b73ac0a5eb3b35cef8" translate="yes" xml:space="preserve">
          <source>BinaryModel.from_formula()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e937cf6180a451ae028673ab1552210a15b7669b" translate="yes" xml:space="preserve">
          <source>BinaryModel.hessian()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="544e71ba269a0dbd17b1caed2c7cb520c3f848f0" translate="yes" xml:space="preserve">
          <source>BinaryModel.information()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f355cba6e62afec5e0a517a037dc4cb8df529c6d" translate="yes" xml:space="preserve">
          <source>BinaryModel.initialize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a485ae3039094cfd90e0a9a5a5067bf12c9f4256" translate="yes" xml:space="preserve">
          <source>BinaryModel.loglike()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5f5f684c3718b1635e6fa35143db7521bb6c7d1" translate="yes" xml:space="preserve">
          <source>BinaryModel.pdf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f393c23e7a399fbb70dd6a8963b250a57748ac9b" translate="yes" xml:space="preserve">
          <source>BinaryModel.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c346c36b7e744930cbe51a555a7ecf38da1e6027" translate="yes" xml:space="preserve">
          <source>BinaryModel.score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5af0e2e2e144f01e17d7985f90ad6f99c455c2b1" translate="yes" xml:space="preserve">
          <source>BinaryResults.aic()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61c4727cd6c766cd513da7eb49556d1f12dbe927" translate="yes" xml:space="preserve">
          <source>BinaryResults.bic()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45b2f9ac68ae12589ddbdf8ecf8794bcbbbd596c" translate="yes" xml:space="preserve">
          <source>BinaryResults.bse()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a54ac6b4a9988a9afb49fd9f8aa686f4b7a9d07c" translate="yes" xml:space="preserve">
          <source>BinaryResults.conf_int()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="037cd921131e0e09f512456afdbe0086e0091529" translate="yes" xml:space="preserve">
          <source>BinaryResults.cov_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a590627e2c6a566161d992b8a6fe2348850e753e" translate="yes" xml:space="preserve">
          <source>BinaryResults.f_test()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2416d91fa8fa66fa1517dc2dffaa6fd07e86f050" translate="yes" xml:space="preserve">
          <source>BinaryResults.fittedvalues()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="add324568d17c888e9bd07cd13d116f04a56d853" translate="yes" xml:space="preserve">
          <source>BinaryResults.get_margeff()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="797990e3a08d5b2c4f729b8fcfefb9df5b6ae33a" translate="yes" xml:space="preserve">
          <source>BinaryResults.initialize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41995edee13585cc60aada390ee59f36ffaf8cd0" translate="yes" xml:space="preserve">
          <source>BinaryResults.llf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3968ce1824bd1014934785f5ae7ae22658e1498e" translate="yes" xml:space="preserve">
          <source>BinaryResults.llnull()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f30c83826ac2737695858e2baabb19308d2194a4" translate="yes" xml:space="preserve">
          <source>BinaryResults.llr()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb4f5ebdf4ea1ab77da8fdad7ac7c834fbdbc432" translate="yes" xml:space="preserve">
          <source>BinaryResults.llr_pvalue()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89a0df12f5edef61fb27bc2c847a3eda0ab3f79d" translate="yes" xml:space="preserve">
          <source>BinaryResults.load()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5642c72ede4b1d7e9d362cb42074c31fe9801f93" translate="yes" xml:space="preserve">
          <source>BinaryResults.normalized_cov_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43797253e16374a8036aff6b70fed1e433121b02" translate="yes" xml:space="preserve">
          <source>BinaryResults.pred_table()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad03ddabf2b00d004be827eb9cfe1c56cd342996" translate="yes" xml:space="preserve">
          <source>BinaryResults.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f0c614767cf1801932a12fd884f5a6a55e703bd" translate="yes" xml:space="preserve">
          <source>BinaryResults.prsquared()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e69938d4b951ac7cdd0695d5cd87472b32db42f" translate="yes" xml:space="preserve">
          <source>BinaryResults.pvalues()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5da8debd849e194440e823701567f3b053a16c2" translate="yes" xml:space="preserve">
          <source>BinaryResults.remove_data()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d82a47a22668e78e230440342a28ad6c17f47b26" translate="yes" xml:space="preserve">
          <source>BinaryResults.resid_dev()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="267bedbf7addd989a1aba79217a8a82103f0ecf9" translate="yes" xml:space="preserve">
          <source>BinaryResults.resid_pearson()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6211ea12cdcd778f54b2e44f7ac19f2d252a51c" translate="yes" xml:space="preserve">
          <source>BinaryResults.resid_response()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="619ae925b21eb2bfb46bb4d8ba3bb7d6e3b538b9" translate="yes" xml:space="preserve">
          <source>BinaryResults.save()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c7176cdd6977704c8a1b448c616e90edc0b1d63" translate="yes" xml:space="preserve">
          <source>BinaryResults.set_null_options()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db0ce42b87a6bb863e8674fd166e83e3e41fc6a1" translate="yes" xml:space="preserve">
          <source>BinaryResults.summary()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2710d9a6e875f0b45bded38dbad90564bd21439" translate="yes" xml:space="preserve">
          <source>BinaryResults.summary2()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeefaf552db092f7095975a14e8c5931ff2bbfa5" translate="yes" xml:space="preserve">
          <source>BinaryResults.t_test()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3421aa563c6cc38fb2c83face7fa5f84697cffe" translate="yes" xml:space="preserve">
          <source>BinaryResults.t_test_pairwise()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18461fcecece78ab69bb64b757334d4b0d4d0b5e" translate="yes" xml:space="preserve">
          <source>BinaryResults.tvalues()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de50b2e7554813619e87d2de417ef6e1d0227e06" translate="yes" xml:space="preserve">
          <source>BinaryResults.wald_test()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3db63634e655a034c01bfdcf334c361f0ad4b19" translate="yes" xml:space="preserve">
          <source>BinaryResults.wald_test_terms()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d140565d21829ed903674b88499b9dd247860d61" translate="yes" xml:space="preserve">
          <source>Bind data to the statespace representation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f22fc461ba15be26425f3495add8c55aef51c91e" translate="yes" xml:space="preserve">
          <source>Binomial</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47c060a22ae38f97ee1d33c85febfc53db9047bf" translate="yes" xml:space="preserve">
          <source>Binomial \(B(n,p)\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f14de0928b015af3f19af465699019b50e25dcfe" translate="yes" xml:space="preserve">
          <source>Binomial exponential family distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="271149e5962883c2fab024a2c421d9e6a69dd789" translate="yes" xml:space="preserve">
          <source>Binomial.deviance()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45451d6b9b0e14b7a5b1609b80ea38f1b1d2f604" translate="yes" xml:space="preserve">
          <source>Binomial.fitted()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47c6bfd44ac4db2edd99302843c6692a80a547c1" translate="yes" xml:space="preserve">
          <source>Binomial.initialize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56fff2defaff8770217c1a415b7c61e1e80cc1b0" translate="yes" xml:space="preserve">
          <source>Binomial.loglike()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f2df16fbc9725af70bdf9a45bd855062c776b6f" translate="yes" xml:space="preserve">
          <source>Binomial.loglike_obs()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b8ea7ccf28c6a2e520e9de0e9e01fbb10dd141e" translate="yes" xml:space="preserve">
          <source>Binomial.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa0d731f26c71dc01957f32ff3932748fb77456c" translate="yes" xml:space="preserve">
          <source>Binomial.resid_anscombe()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="800fc365a32c759b5de58d0d20b1b47ef92cc31a" translate="yes" xml:space="preserve">
          <source>Binomial.resid_dev()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59a0bd753fd7226bcd6bf59273be936708cd066c" translate="yes" xml:space="preserve">
          <source>Binomial.starting_mu()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6559026f5a2efa6e092fae1c86d596ea2c936f1e" translate="yes" xml:space="preserve">
          <source>Binomial.weights()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c975bdd568f5ac7515a35cb7f356740ab6866b6b" translate="yes" xml:space="preserve">
          <source>BinomialBayesMixedGLM.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71acd42509abaca8e696819efd8b1897c2433793" translate="yes" xml:space="preserve">
          <source>BinomialBayesMixedGLM.fit_map()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dadf6e57634c95c06af0e98eed92d1396f1e57c" translate="yes" xml:space="preserve">
          <source>BinomialBayesMixedGLM.fit_vb()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5876c2dc1f624f52a75eb61a9fdb2fc736852307" translate="yes" xml:space="preserve">
          <source>BinomialBayesMixedGLM.from_formula()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78a7857b1eb645c9af9387d6b2ebc72a9d492b23" translate="yes" xml:space="preserve">
          <source>BinomialBayesMixedGLM.logposterior()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78632a83516cb8896c7d90af375c6f9964864eec" translate="yes" xml:space="preserve">
          <source>BinomialBayesMixedGLM.logposterior_grad()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce66f41de037c7de3b5f05438ea744373a41b7e1" translate="yes" xml:space="preserve">
          <source>BinomialBayesMixedGLM.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0ed6b8b7e0359fe422efc88043072aed619a8f0" translate="yes" xml:space="preserve">
          <source>BinomialBayesMixedGLM.vb_elbo()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3024e520f1cc63d6eb35c79a14a0dd5a369ce5a7" translate="yes" xml:space="preserve">
          <source>BinomialBayesMixedGLM.vb_elbo_base()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bdea98e80f1a8a425ef111ee1b33749de1fc71a" translate="yes" xml:space="preserve">
          <source>BinomialBayesMixedGLM.vb_elbo_grad()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6acfa2223fd31e70016d1391239e0da78756310" translate="yes" xml:space="preserve">
          <source>BinomialBayesMixedGLM.vb_elbo_grad_base()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d98e5ba810c5aaa5c5f5bedc6b53a839d0286702" translate="yes" xml:space="preserve">
          <source>Birkes, D. and Y. Dodge(1993). Alternative Methods of Regression, John Wiley and Sons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="090ee3ccd410d072e21fa5167dd414051ee54fb1" translate="yes" xml:space="preserve">
          <source>Bland JM, Altman DG (1986). &amp;ldquo;Statistical methods for assessing agreement between two methods of clinical measurement&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8e4d60625aab63f5e42a5b9fd93987f089ae0dc" translate="yes" xml:space="preserve">
          <source>Blei, Kucukelbir, McAuliffe (2017). Variational Inference: A review for Statisticians &lt;a href=&quot;https://arxiv.org/pdf/1601.00670.pdf&quot;&gt;https://arxiv.org/pdf/1601.00670.pdf&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cb7576c9ed8b4e077990c56e7380f982d2e74db" translate="yes" xml:space="preserve">
          <source>Bloem, A.M, Dippelsman, R.J. and Maehle, N.O. 2001 Quarterly National</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="949fc97630b42b8f38a77ad103ee1f2fdf00a9a6" translate="yes" xml:space="preserve">
          <source>Bofinger, E. (1975). Estimation of a density function using order statistics. Australian Journal of Statistics 17: 1-17.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c741c36d3250808cffbf58ee4e9e9ff68ee5858" translate="yes" xml:space="preserve">
          <source>Both *args and **kwargs are necessary because the optimizer from &lt;code&gt;fit&lt;/code&gt; must call this function and only supports passing arguments via *args (for example &lt;code&gt;scipy.optimize.fmin_l_bfgs&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f902f75f83ecfc5986721838801714a9a83fc7d" translate="yes" xml:space="preserve">
          <source>Both frequency and variance weights are verified for all basic results with nonrobust or heteroscedasticity robust &lt;code&gt;cov_type&lt;/code&gt;. Other robust covariance types have not yet been verified, and at least the small sample correction is currently not based on the correct total frequency count.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea186c282a850583b9e2e13175d811e87f1f72d6" translate="yes" xml:space="preserve">
          <source>Both the AR and MA components must include the coefficient on the zero-lag. In almost all cases these values should be 1. Further, due to using the lag-polynomial representation, the AR parameters should have the opposite sign of what one would write in the ARMA representation. See the examples below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1722d81224f03bccdf27f2f6ff18902c532e1578" translate="yes" xml:space="preserve">
          <source>Box plots of the individual series R-square against the number of PCs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebb60299808c4f4a8702150c6d08b6934772e010" translate="yes" xml:space="preserve">
          <source>Boxplots</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="983af29ce697be8bc4f91f76a1ddb163fdbe7e8e" translate="yes" xml:space="preserve">
          <source>Breusch Godfrey Lagrange Multiplier tests for residual autocorrelation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14375cd217727f60c07ddfcb57ef87e96e374fab" translate="yes" xml:space="preserve">
          <source>Breusch-Pagan Lagrange Multiplier test for heteroscedasticity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f921143271123175d365336a703cd7fb0492d73e" translate="yes" xml:space="preserve">
          <source>Breusch-Pagan test for no autocorrelation of residuals</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2cbee310858211642cedd10bfe38cf5547ab77a" translate="yes" xml:space="preserve">
          <source>Breush-Pagan test:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="766eafbf1d142a24907541d105e2af87308190cc" translate="yes" xml:space="preserve">
          <source>Brockwell and Davis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24eea6a50a5c2116d37d3049f3681e86222afdde" translate="yes" xml:space="preserve">
          <source>Brown, Lawrence D.; Cai, T. Tony; DasGupta, Anirban (2001). &amp;ldquo;Interval</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2202a0bd424f8d84f706c720f13a241e6a8838f" translate="yes" xml:space="preserve">
          <source>Brown, R. L., J. Durbin, and J. M. Evans. &amp;ldquo;Techniques for Testing the Constancy of Regression Relationships over Time.&amp;rdquo; Journal of the Royal Statistical Society. Series B (Methodological) 37, no. 2 (1975): 149-192.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="118e50c427a7551fed1d0254754fbe7e7fc0bd31" translate="yes" xml:space="preserve">
          <source>Brown, R. L., J. Durbin, and J. M. Evans. 1975. &amp;ldquo;Techniques for Testing the Constancy of Regression Relationships over Time.&amp;rdquo; Journal of the Royal Statistical Society. Series B (Methodological) 37 (2): 149-92.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2bbc7528272cd7fa9911a433fa2f792dea418bf" translate="yes" xml:space="preserve">
          <source>Bunch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e40bafecbc7ce631f03db66cd1a20164a750c1b" translate="yes" xml:space="preserve">
          <source>By default, each variable with missing variables is modeled using a linear regression with main effects for all other variables in the data set. Note that even when the imputation model is linear, the PMM procedure preserves the domain of each variable. Thus, for example, if all observed values for a given variable are positive, all imputed values for the variable will always be positive. The user also has the option to specify which model is used to produce imputed values for each variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37b80103091f75dde572e5dfec7aa3503614f5ae" translate="yes" xml:space="preserve">
          <source>By default, numpy arrays are row (C)-ordered and most time series are represented in the long format (with time on the 0-th axis). In this case, no copying or re-ordering needs to be performed, instead the array can simply be transposed to get it in the right order and shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c972afc73b46de3b30164c0b00f0b1e15943444d" translate="yes" xml:space="preserve">
          <source>By default, the Kalman filter computes a number of intermediate matrices at each iteration. The memory conservation options control which of those matrices are stored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="170ca186c9aeaf91b118ae001bdf5cac447e5fc2" translate="yes" xml:space="preserve">
          <source>By default, the Kalman filter follows Durbin and Koopman, 2012, in initializing the filter with predicted values. Kim and Nelson, 1999, instead initialize the filter with filtered values, which is essentially just a different timing convention.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32096c2e0eff33d844ee6d675407ace18289357d" translate="yes" xml:space="preserve">
          <source>C</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0381fb0613ab6317a916bfc6de40d10731441bf9" translate="yes" xml:space="preserve">
          <source>C(E)[T.2]</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
