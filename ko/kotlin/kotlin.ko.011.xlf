<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="kotlin">
    <body>
      <group id="kotlin">
        <trans-unit id="c4e91a8a5360a9b887f4a6f9dac1446bc61a4f07" translate="yes" xml:space="preserve">
          <source>Creates a sequence that returns the specified values.</source>
          <target state="translated">지정된 값을 반환하는 시퀀스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="1a10948e2dd791471f8ddc3b2e085347f1c7710e" translate="yes" xml:space="preserve">
          <source>Creates a sequential &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html&quot;&gt;Stream&lt;/a&gt; instance that produces elements from the original sequence.</source>
          <target state="translated">원래 시퀀스에서 요소를 생성하는 순차적 인 &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html&quot;&gt;스트림&lt;/a&gt; 인스턴스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="6fb8af385d590efbb670e788f86874b75af65b31" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.Array%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.Array%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.Array%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.Array%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;구분 기호&lt;/a&gt; 를 사용하고 제공된 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.Array%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;접두사&lt;/a&gt; 와 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.Array%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;접미사를&lt;/a&gt; 사용 하여 구분 된 모든 요소에서 문자열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="c2aaece5d33b8fff12da2c768c024eafdb0a3d5b" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.BooleanArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.BooleanArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.BooleanArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.BooleanArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;구분 기호&lt;/a&gt; 를 사용하고 제공된 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.BooleanArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;접두사&lt;/a&gt; 와 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.BooleanArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Boolean%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;접미사를&lt;/a&gt; 사용 하여 구분 된 모든 요소에서 문자열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="d8ca8d32b53a94047e4555627b85314b0e578315" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.ByteArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.ByteArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.ByteArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.ByteArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;구분 기호&lt;/a&gt; 를 사용하고 제공된 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.ByteArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;접두사&lt;/a&gt; 와 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.ByteArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Byte%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;접미사를&lt;/a&gt; 사용 하여 구분 된 모든 요소에서 문자열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="e6c5b98ccb1a724d6ce8cafad0f9447bafa63273" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.CharArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.CharArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.CharArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.CharArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;구분 기호&lt;/a&gt; 를 사용하고 제공된 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.CharArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;접두사&lt;/a&gt; 와 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.CharArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Char%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;접미사를&lt;/a&gt; 사용 하여 구분 된 모든 요소에서 문자열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="392769d12f9ea9ef7593ddf2cb6dda9e0d233ad5" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.DoubleArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.DoubleArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.DoubleArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.DoubleArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;구분 기호&lt;/a&gt; 를 사용하고 제공된 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.DoubleArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;접두사&lt;/a&gt; 와 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.DoubleArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Double%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;접미사를&lt;/a&gt; 사용 하여 구분 된 모든 요소에서 문자열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="122ade18023237924aa9b58f517ead97b9cfc70b" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.FloatArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.FloatArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.FloatArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.FloatArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;구분 기호&lt;/a&gt; 를 사용하고 제공된 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.FloatArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;접두사&lt;/a&gt; 와 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.FloatArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Float%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;접미사를&lt;/a&gt; 사용 하여 구분 된 모든 요소에서 문자열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="910c48ed78011762a3175eb3f63c11f106df4662" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.IntArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.IntArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.IntArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.IntArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;구분 기호&lt;/a&gt; 를 사용하고 제공된 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.IntArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;접두사&lt;/a&gt; 와 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.IntArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;접미사를&lt;/a&gt; 사용 하여 구분 된 모든 요소에서 문자열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="fdbb6ef3499ca688d357860a4fc82265cf978400" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.LongArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.LongArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.LongArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">&lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.LongArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;구분 기호&lt;/a&gt; 를 사용하고 제공된 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.LongArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;접두사&lt;/a&gt; 와 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.LongArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Long%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;접미사를&lt;/a&gt; 사용 하여 구분 된 모든 요소에서 문자열을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="c0946e45d76e5f16ab029ffab975c37ed42c50c1" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.ShortArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.ShortArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.ShortArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">모든 요소로부터 문자열을 생성하여 분리 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.ShortArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;구분&lt;/a&gt; 주어진 사용 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.ShortArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;프리픽스&lt;/a&gt; 및 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.ShortArray%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.Short%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;포스트 픽스를&lt;/a&gt; 제공하는 경우.</target>
        </trans-unit>
        <trans-unit id="3f6d0cb0a5c2f441a885d455bad637adb6fad484" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.collections.Iterable%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.collections.Iterable%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.collections.Iterable%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">모든 요소로부터 문자열을 생성하여 분리 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.collections.Iterable%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;구분&lt;/a&gt; 주어진 사용 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.collections.Iterable%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;프리픽스&lt;/a&gt; 및 &lt;a href=&quot;../../kotlin.collections/join-to-string#kotlin.collections%24joinToString%28kotlin.collections.Iterable%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;포스트 픽스를&lt;/a&gt; 제공하는 경우.</target>
        </trans-unit>
        <trans-unit id="33bf12f4596aaf05b08ba2925c99a7f6aff94970" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;../join-to-string#kotlin.collections%24joinToString%28kotlin.collections.Iterable%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;../join-to-string#kotlin.collections%24joinToString%28kotlin.collections.Iterable%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;../join-to-string#kotlin.collections%24joinToString%28kotlin.collections.Iterable%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">모든 요소로부터 문자열을 생성하여 분리 &lt;a href=&quot;../join-to-string#kotlin.collections%24joinToString%28kotlin.collections.Iterable%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;구분&lt;/a&gt; 주어진 사용 &lt;a href=&quot;../join-to-string#kotlin.collections%24joinToString%28kotlin.collections.Iterable%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;프리픽스&lt;/a&gt; 및 &lt;a href=&quot;../join-to-string#kotlin.collections%24joinToString%28kotlin.collections.Iterable%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;포스트 픽스를&lt;/a&gt; 제공하는 경우.</target>
        </trans-unit>
        <trans-unit id="53421e6af67f0166f040610347e545df09d5f04d" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;../join-to-string#kotlin.sequences%24joinToString%28kotlin.sequences.Sequence%28%28kotlin.sequences.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.sequences.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;../join-to-string#kotlin.sequences%24joinToString%28kotlin.sequences.Sequence%28%28kotlin.sequences.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.sequences.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;../join-to-string#kotlin.sequences%24joinToString%28kotlin.sequences.Sequence%28%28kotlin.sequences.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.sequences.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">모든 요소로부터 문자열을 생성하여 분리 &lt;a href=&quot;../join-to-string#kotlin.sequences%24joinToString%28kotlin.sequences.Sequence%28%28kotlin.sequences.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.sequences.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;구분&lt;/a&gt; 주어진 사용 &lt;a href=&quot;../join-to-string#kotlin.sequences%24joinToString%28kotlin.sequences.Sequence%28%28kotlin.sequences.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.sequences.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;프리픽스&lt;/a&gt; 및 &lt;a href=&quot;../join-to-string#kotlin.sequences%24joinToString%28kotlin.sequences.Sequence%28%28kotlin.sequences.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.sequences.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;포스트 픽스를&lt;/a&gt; 제공하는 경우.</target>
        </trans-unit>
        <trans-unit id="1d127f8330415a3b27cc71efb91ce835b353621f" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;join-to-string#kotlin.collections%24joinToString%28kotlin.Array%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;join-to-string#kotlin.collections%24joinToString%28kotlin.Array%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;join-to-string#kotlin.collections%24joinToString%28kotlin.Array%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">모든 요소로부터 문자열을 생성하여 분리 &lt;a href=&quot;join-to-string#kotlin.collections%24joinToString%28kotlin.Array%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;구분&lt;/a&gt; 주어진 사용 &lt;a href=&quot;join-to-string#kotlin.collections%24joinToString%28kotlin.Array%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;프리픽스&lt;/a&gt; 및 &lt;a href=&quot;join-to-string#kotlin.collections%24joinToString%28kotlin.Array%28%28kotlin.collections.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.collections.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;포스트 픽스를&lt;/a&gt; 제공하는 경우.</target>
        </trans-unit>
        <trans-unit id="6a6f0bf2831cb91fc3b0ee9c00139b11c87fda84" translate="yes" xml:space="preserve">
          <source>Creates a string from all the elements separated using &lt;a href=&quot;join-to-string#kotlin.sequences%24joinToString%28kotlin.sequences.Sequence%28%28kotlin.sequences.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.sequences.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;separator&lt;/a&gt; and using the given &lt;a href=&quot;join-to-string#kotlin.sequences%24joinToString%28kotlin.sequences.Sequence%28%28kotlin.sequences.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.sequences.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;join-to-string#kotlin.sequences%24joinToString%28kotlin.sequences.Sequence%28%28kotlin.sequences.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.sequences.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;postfix&lt;/a&gt; if supplied.</source>
          <target state="translated">모든 요소로부터 문자열을 생성하여 분리 &lt;a href=&quot;join-to-string#kotlin.sequences%24joinToString%28kotlin.sequences.Sequence%28%28kotlin.sequences.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.sequences.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fseparator&quot;&gt;구분&lt;/a&gt; 주어진 사용 &lt;a href=&quot;join-to-string#kotlin.sequences%24joinToString%28kotlin.sequences.Sequence%28%28kotlin.sequences.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.sequences.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fprefix&quot;&gt;프리픽스&lt;/a&gt; 및 &lt;a href=&quot;join-to-string#kotlin.sequences%24joinToString%28kotlin.sequences.Sequence%28%28kotlin.sequences.joinToString.T%29%29%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.CharSequence%2C+kotlin.Int%2C+kotlin.CharSequence%2C+kotlin.Function1%28%28kotlin.sequences.joinToString.T%2C+kotlin.CharSequence%29%29%29%2Fpostfix&quot;&gt;포스트 픽스를&lt;/a&gt; 제공하는 경우.</target>
        </trans-unit>
        <trans-unit id="961d50f105a5368c306a59a3a778f2a1e173556d" translate="yes" xml:space="preserve">
          <source>Creates a thread that runs the specified &lt;a href=&quot;thread#kotlin.concurrent%24thread%28kotlin.Boolean%2C+kotlin.Boolean%2C+java.lang.ClassLoader%2C+kotlin.String%2C+kotlin.Int%2C+kotlin.Function0%28%28kotlin.Unit%29%29%29%2Fblock&quot;&gt;block&lt;/a&gt; of code.</source>
          <target state="translated">지정된 코드 &lt;a href=&quot;thread#kotlin.concurrent%24thread%28kotlin.Boolean%2C+kotlin.Boolean%2C+java.lang.ClassLoader%2C+kotlin.String%2C+kotlin.Int%2C+kotlin.Function0%28%28kotlin.Unit%29%29%29%2Fblock&quot;&gt;블록&lt;/a&gt; 을 실행하는 스레드를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="b554e982400d94f6f75670ce9427f55496eabfd8" translate="yes" xml:space="preserve">
          <source>Creates a timer that executes the specified &lt;a href=&quot;fixed-rate-timer#kotlin.concurrent%24fixedRateTimer%28kotlin.String%2C+kotlin.Boolean%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;action&lt;/a&gt; periodically, starting at the specified &lt;a href=&quot;fixed-rate-timer#kotlin.concurrent%24fixedRateTimer%28kotlin.String%2C+kotlin.Boolean%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2FstartAt&quot;&gt;startAt&lt;/a&gt; date and with the interval of &lt;a href=&quot;fixed-rate-timer#kotlin.concurrent%24fixedRateTimer%28kotlin.String%2C+kotlin.Boolean%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Fperiod&quot;&gt;period&lt;/a&gt; milliseconds between the start of the previous task and the start of the next one.</source>
          <target state="translated">지정된 &lt;a href=&quot;fixed-rate-timer#kotlin.concurrent%24fixedRateTimer%28kotlin.String%2C+kotlin.Boolean%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2FstartAt&quot;&gt;startAt&lt;/a&gt; 날짜 부터 시작하여 이전 작업의 시작과 다음 작업의 시작 사이 의 &lt;a href=&quot;fixed-rate-timer#kotlin.concurrent%24fixedRateTimer%28kotlin.String%2C+kotlin.Boolean%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Fperiod&quot;&gt;기간 (&lt;/a&gt; 밀리 초) 간격 으로 지정된 &lt;a href=&quot;fixed-rate-timer#kotlin.concurrent%24fixedRateTimer%28kotlin.String%2C+kotlin.Boolean%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;작업을&lt;/a&gt; 주기적으로 실행하는 타이머를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="b6b7cd792eb1db8af927227f480c30bfc46524f6" translate="yes" xml:space="preserve">
          <source>Creates a timer that executes the specified &lt;a href=&quot;fixed-rate-timer#kotlin.concurrent%24fixedRateTimer%28kotlin.String%2C+kotlin.Boolean%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;action&lt;/a&gt; periodically, starting after the specified &lt;a href=&quot;fixed-rate-timer#kotlin.concurrent%24fixedRateTimer%28kotlin.String%2C+kotlin.Boolean%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2FinitialDelay&quot;&gt;initialDelay&lt;/a&gt; (expressed in milliseconds) and with the interval of &lt;a href=&quot;fixed-rate-timer#kotlin.concurrent%24fixedRateTimer%28kotlin.String%2C+kotlin.Boolean%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Fperiod&quot;&gt;period&lt;/a&gt; milliseconds between the start of the previous task and the start of the next one.</source>
          <target state="translated">지정된 &lt;a href=&quot;fixed-rate-timer#kotlin.concurrent%24fixedRateTimer%28kotlin.String%2C+kotlin.Boolean%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2FinitialDelay&quot;&gt;initialDelay&lt;/a&gt; 이후 (밀리 초로 표시됨) 시작하여 이전 작업의 시작과 다음 작업의 시작 사이 의 &lt;a href=&quot;fixed-rate-timer#kotlin.concurrent%24fixedRateTimer%28kotlin.String%2C+kotlin.Boolean%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Fperiod&quot;&gt;기간 (&lt;/a&gt; 밀리 초) 간격 으로 지정된 &lt;a href=&quot;fixed-rate-timer#kotlin.concurrent%24fixedRateTimer%28kotlin.String%2C+kotlin.Boolean%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;작업을&lt;/a&gt; 주기적으로 실행하는 타이머를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="fb76987705fc2f86a024f4c3aed9429cf6412ea9" translate="yes" xml:space="preserve">
          <source>Creates a timer that executes the specified &lt;a href=&quot;timer#kotlin.concurrent%24timer%28kotlin.String%2C+kotlin.Boolean%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;action&lt;/a&gt; periodically, starting at the specified &lt;a href=&quot;timer#kotlin.concurrent%24timer%28kotlin.String%2C+kotlin.Boolean%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2FstartAt&quot;&gt;startAt&lt;/a&gt; date and with the interval of &lt;a href=&quot;timer#kotlin.concurrent%24timer%28kotlin.String%2C+kotlin.Boolean%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Fperiod&quot;&gt;period&lt;/a&gt; milliseconds between the end of the previous task and the start of the next one.</source>
          <target state="translated">지정된 &lt;a href=&quot;timer#kotlin.concurrent%24timer%28kotlin.String%2C+kotlin.Boolean%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2FstartAt&quot;&gt;startAt&lt;/a&gt; 날짜 부터 시작 하여 이전 작업의 끝과 다음 작업의 시작 사이 의 &lt;a href=&quot;timer#kotlin.concurrent%24timer%28kotlin.String%2C+kotlin.Boolean%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Fperiod&quot;&gt;시간&lt;/a&gt; 간격 ( 밀리 초) 으로 지정된 &lt;a href=&quot;timer#kotlin.concurrent%24timer%28kotlin.String%2C+kotlin.Boolean%2C+java.util.Date%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;작업을&lt;/a&gt; 주기적으로 실행하는 타이머를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="e1cc24eca493343d12e2c45fe050ec2bb11d812a" translate="yes" xml:space="preserve">
          <source>Creates a timer that executes the specified &lt;a href=&quot;timer#kotlin.concurrent%24timer%28kotlin.String%2C+kotlin.Boolean%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;action&lt;/a&gt; periodically, starting after the specified &lt;a href=&quot;timer#kotlin.concurrent%24timer%28kotlin.String%2C+kotlin.Boolean%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2FinitialDelay&quot;&gt;initialDelay&lt;/a&gt; (expressed in milliseconds) and with the interval of &lt;a href=&quot;timer#kotlin.concurrent%24timer%28kotlin.String%2C+kotlin.Boolean%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Fperiod&quot;&gt;period&lt;/a&gt; milliseconds between the end of the previous task and the start of the next one.</source>
          <target state="translated">지정된 &lt;a href=&quot;timer#kotlin.concurrent%24timer%28kotlin.String%2C+kotlin.Boolean%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2FinitialDelay&quot;&gt;initialDelay&lt;/a&gt; 이후 (밀리 초로 표시됨) 시작하여 이전 작업의 끝과 다음 작업의 시작 사이 의 &lt;a href=&quot;timer#kotlin.concurrent%24timer%28kotlin.String%2C+kotlin.Boolean%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Fperiod&quot;&gt;기간 (&lt;/a&gt; 밀리 초) 간격 으로 지정된 &lt;a href=&quot;timer#kotlin.concurrent%24timer%28kotlin.String%2C+kotlin.Boolean%2C+kotlin.Long%2C+kotlin.Long%2C+kotlin.Function1%28%28java.util.TimerTask%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;작업을&lt;/a&gt; 주기적으로 실행하는 타이머를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="093f8c11b75317d2e1034076b3fef44bec50f9c8" translate="yes" xml:space="preserve">
          <source>Creates a tuple of type &lt;a href=&quot;-pair/index&quot;&gt;Pair&lt;/a&gt; from this and &lt;a href=&quot;to#kotlin%24to%28kotlin.to.A%2C+kotlin.to.B%29%2Fthat&quot;&gt;that&lt;/a&gt;.</source>
          <target state="translated">이것과 이것으로부터 &lt;a href=&quot;-pair/index&quot;&gt;Pair&lt;/a&gt; 형의 튜플을 작성 &lt;a href=&quot;to#kotlin%24to%28kotlin.to.A%2C+kotlin.to.B%29%2Fthat&quot;&gt;합니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9e557cb5662bab6115beaaccbd8865ba55632474" translate="yes" xml:space="preserve">
          <source>Creates a tuple of type &lt;a href=&quot;../-pair/index&quot;&gt;Pair&lt;/a&gt; from this and &lt;a href=&quot;../to#kotlin%24to%28kotlin.to.A%2C+kotlin.to.B%29%2Fthat&quot;&gt;that&lt;/a&gt;.</source>
          <target state="translated">이것과 이것으로부터 &lt;a href=&quot;../-pair/index&quot;&gt;Pair&lt;/a&gt; 형의 튜플을 작성 &lt;a href=&quot;../to#kotlin%24to%28kotlin.to.A%2C+kotlin.to.B%29%2Fthat&quot;&gt;합니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d31ca5b8fb7cb661b0a0559a6ffa2e4d118216c5" translate="yes" xml:space="preserve">
          <source>Creates a version from &lt;a href=&quot;-init-#kotlin.KotlinVersion%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Int%29%2Fmajor&quot;&gt;major&lt;/a&gt; and &lt;a href=&quot;-init-#kotlin.KotlinVersion%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Int%29%2Fminor&quot;&gt;minor&lt;/a&gt; components, leaving &lt;a href=&quot;patch&quot;&gt;patch&lt;/a&gt; component zero.</source>
          <target state="translated">&lt;a href=&quot;patch&quot;&gt;패치&lt;/a&gt; 구성 요소를 0으로 남겨두고 &lt;a href=&quot;-init-#kotlin.KotlinVersion%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Int%29%2Fmajor&quot;&gt;주요&lt;/a&gt; 구성 요소 와 &lt;a href=&quot;-init-#kotlin.KotlinVersion%24%3Cinit%3E%28kotlin.Int%2C+kotlin.Int%29%2Fminor&quot;&gt;보조&lt;/a&gt; 구성 요소 에서 버전을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="e669f229b644b1604e4140c0742c32b89805e029" translate="yes" xml:space="preserve">
          <source>Creates a version from all three components.</source>
          <target state="translated">세 구성 요소 모두에서 버전을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="2dcf822c9cd329c7445d6ff9e19773c5fd906c6f" translate="yes" xml:space="preserve">
          <source>Creates a weak reference object pointing to an object. Weak reference doesn't prevent removing object, and is nullified once object is collected.</source>
          <target state="translated">객체를 가리키는 약한 참조 객체를 만듭니다. 약한 참조는 객체 제거를 방해하지 않으며 객체가 수집되면 무효화됩니다.</target>
        </trans-unit>
        <trans-unit id="08834c5b02522e602df7f666ff21e2b712f70f4d" translate="yes" xml:space="preserve">
          <source>Creates a writer on this output stream using UTF-8 or the specified &lt;a href=&quot;writer#kotlin.io%24writer%28java.io.OutputStream%2C+java.nio.charset.Charset%29%2Fcharset&quot;&gt;charset&lt;/a&gt;.</source>
          <target state="translated">UTF-8 또는 지정된 &lt;a href=&quot;writer#kotlin.io%24writer%28java.io.OutputStream%2C+java.nio.charset.Charset%29%2Fcharset&quot;&gt;charset&lt;/a&gt; 를 사용해이 출력 스트림에 라이터를 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="c33cb35dd07a8560f5c0b436709cb377baedb202" translate="yes" xml:space="preserve">
          <source>Creates an &lt;a href=&quot;-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt; instance that wraps the original array returning its elements when being iterated.</source>
          <target state="translated">반복 될 때 요소를 반환하는 원래 배열을 래핑 하는 &lt;a href=&quot;-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt; 인스턴스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="1680a341d81bcb160ec9d7cebf2ed92a5836bc28" translate="yes" xml:space="preserve">
          <source>Creates an &lt;a href=&quot;-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt; instance that wraps the original map returning its entries when being iterated.</source>
          <target state="translated">반복 될 때 항목을 리턴하는 원래 맵을 랩핑 하는 &lt;a href=&quot;-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt; 인스턴스를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="149cf06530ff5aac4f9f616f618bccac279e8cbe" translate="yes" xml:space="preserve">
          <source>Creates an &lt;a href=&quot;../-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt; instance that wraps the original map returning its entries when being iterated.</source>
          <target state="translated">반복 될 때 항목을 리턴하는 원래 맵을 랩핑 하는 &lt;a href=&quot;../-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt; 인스턴스를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="070be7e77def6a0cfe7d0bff29e15fd8cf571104" translate="yes" xml:space="preserve">
          <source>Creates an &lt;a href=&quot;../-iterator/index#kotlin.collections.Iterator&quot;&gt;Iterator&lt;/a&gt; for an &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/Enumeration.html&quot;&gt;java.util.Enumeration&lt;/a&gt;, allowing to use it in &lt;code&gt;for&lt;/code&gt; loops.</source>
          <target state="translated">작성 &lt;a href=&quot;../-iterator/index#kotlin.collections.Iterator&quot;&gt;반복자는&lt;/a&gt; 에 대한 &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/Enumeration.html&quot;&gt;java.util.Enumeration&lt;/a&gt; 에서 사용할 수 있도록 &lt;code&gt;for&lt;/code&gt; 루프.</target>
        </trans-unit>
        <trans-unit id="fa7eeb353dcc0402efb954b10c4fd7f83f4abed5" translate="yes" xml:space="preserve">
          <source>Creates an &lt;a href=&quot;../../kotlin.collections/-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt; instance that wraps the original array returning its elements when being iterated.</source>
          <target state="translated">반복 될 때 요소를 반환하는 원래 배열을 래핑 하는 &lt;a href=&quot;../../kotlin.collections/-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt; 인스턴스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="1457740b35add09bc88a207588a58d86ab4affbf" translate="yes" xml:space="preserve">
          <source>Creates an &lt;a href=&quot;../../kotlin.collections/-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt; instance that wraps the original char sequence returning its characters when being iterated.</source>
          <target state="translated">반복 될 때 문자를 리턴하는 원래 문자 순서를 랩핑 하는 &lt;a href=&quot;../../kotlin.collections/-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt; 인스턴스를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="e6010c6545edd6fc6d3f14f22fb1ca3547170f9a" translate="yes" xml:space="preserve">
          <source>Creates an &lt;a href=&quot;../../kotlin.collections/-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt; instance that wraps the original sequence returning its elements when being iterated.</source>
          <target state="translated">반복 될 때 요소를 리턴하는 원래 순서를 랩핑 하는 &lt;a href=&quot;../../kotlin.collections/-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt; 인스턴스를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="8a00321f1e8128ded8335b65d0bdc746d39b6544" translate="yes" xml:space="preserve">
          <source>Creates an &lt;a href=&quot;../../kotlin.collections/-iterator/index#kotlin.collections.Iterator&quot;&gt;Iterator&lt;/a&gt; for iterating over the elements of the array.</source>
          <target state="translated">배열의 요소를 반복하기 위한 &lt;a href=&quot;../../kotlin.collections/-iterator/index#kotlin.collections.Iterator&quot;&gt;반복자&lt;/a&gt; 를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="492310e5133c7f522fd7194dc1b4f2fe454b95ef" translate="yes" xml:space="preserve">
          <source>Creates an &lt;a href=&quot;../kotlin.collections/-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt; instance that wraps the original char sequence returning its characters when being iterated.</source>
          <target state="translated">반복 될 때 문자를 리턴하는 원래 문자 순서를 랩핑 하는 &lt;a href=&quot;../kotlin.collections/-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt; 인스턴스를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="7c69e13959a1cb87462b9abe6172dae182fbc836" translate="yes" xml:space="preserve">
          <source>Creates an &lt;a href=&quot;../kotlin.collections/-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt; instance that wraps the original sequence returning its elements when being iterated.</source>
          <target state="translated">반복 될 때 요소를 리턴하는 원래 순서를 랩핑 하는 &lt;a href=&quot;../kotlin.collections/-iterable/index#kotlin.collections.Iterable&quot;&gt;Iterable&lt;/a&gt; 인스턴스를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="f45143f46c7813f66f23de46756b62bdb63f01ad" translate="yes" xml:space="preserve">
          <source>Creates an &lt;a href=&quot;index#kotlin.collections.ArrayList&quot;&gt;ArrayList&lt;/a&gt; filled from the &lt;a href=&quot;-init-#kotlin.collections.ArrayList%24%3Cinit%3E%28kotlin.collections.Collection%28%28kotlin.collections.ArrayList.E%29%29%29%2Felements&quot;&gt;elements&lt;/a&gt; collection.</source>
          <target state="translated">&lt;a href=&quot;-init-#kotlin.collections.ArrayList%24%3Cinit%3E%28kotlin.collections.Collection%28%28kotlin.collections.ArrayList.E%29%29%29%2Felements&quot;&gt;요소&lt;/a&gt; 컬렉션 에서 채워진 &lt;a href=&quot;index#kotlin.collections.ArrayList&quot;&gt;ArrayList&lt;/a&gt; 를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="172a80649f231445c9b3b536887e042187ed6835" translate="yes" xml:space="preserve">
          <source>Creates an empty &lt;a href=&quot;index#kotlin.collections.ArrayList&quot;&gt;ArrayList&lt;/a&gt;.</source>
          <target state="translated">빈 &lt;a href=&quot;index#kotlin.collections.ArrayList&quot;&gt;ArrayList를 작성&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="11e2e30d68d8dcfe4321ef61fa43b8effe23946d" translate="yes" xml:space="preserve">
          <source>Creates an empty directory in the specified &lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fdirectory&quot;&gt;directory&lt;/a&gt;, using the given &lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fprefix&quot;&gt;prefix&lt;/a&gt; and &lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fsuffix&quot;&gt;suffix&lt;/a&gt; to generate its name.</source>
          <target state="translated">지정된에 빈 디렉토리를 작성 &lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fdirectory&quot;&gt;디렉토리&lt;/a&gt; (가) 주어진 사용하여 &lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fprefix&quot;&gt;접두사&lt;/a&gt; 와 &lt;a href=&quot;create-temp-dir#kotlin.io%24createTempDir%28kotlin.String%2C+kotlin.String%2C+java.io.File%29%2Fsuffix&quot;&gt;접미사&lt;/a&gt; 의 이름을 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7d575cfdf73a5eabdc9d28072dc08ca9284b5430" translate="yes" xml:space="preserve">
          <source>Creates an input stream for reading data from the specified portion of this byte array.</source>
          <target state="translated">이 바이트 배열의 지정된 부분으로부터 데이터를 읽어 들이기위한 입력 스트림을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="a498de335a1698d89734ca7ad1c696c8486a6bef" translate="yes" xml:space="preserve">
          <source>Creates an input stream for reading data from this byte array.</source>
          <target state="translated">이 바이트 배열로부터 데이터를 읽어 들이기위한 입력 스트림을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="fb004f78e15245ed4e66faeef95b32cc7865a03a" translate="yes" xml:space="preserve">
          <source>Creates an instance of &lt;a href=&quot;-k-type/index#kotlin.reflect.KType&quot;&gt;KType&lt;/a&gt; with the given classifier, substituting all its type parameters with star projections. The resulting type is not marked as nullable and does not have any annotations.</source>
          <target state="translated">주어진 분류 &lt;a href=&quot;-k-type/index#kotlin.reflect.KType&quot;&gt;자를&lt;/a&gt; 사용하여 KType 의 인스턴스를 작성 하고 모든 유형 매개 변수를 별 투영으로 대체합니다. 결과 유형은 널 입력 가능으로 표시되지 않으며 주석이 없습니다.</target>
        </trans-unit>
        <trans-unit id="fe0687a80da60c10e60a92c94c276de185e697c0" translate="yes" xml:space="preserve">
          <source>Creates an instance of &lt;a href=&quot;../-k-type/index#kotlin.reflect.KType&quot;&gt;KType&lt;/a&gt; with the given classifier, substituting all its type parameters with star projections. The resulting type is not marked as nullable and does not have any annotations.</source>
          <target state="translated">주어진 분류 &lt;a href=&quot;../-k-type/index#kotlin.reflect.KType&quot;&gt;자를&lt;/a&gt; 사용하여 KType 의 인스턴스를 작성 하고 모든 유형 매개 변수를 별 투영으로 대체합니다. 결과 유형은 널 입력 가능으로 표시되지 않으며 주석이 없습니다.</target>
        </trans-unit>
        <trans-unit id="355c4798f5b6985e9a80d39a2ff6cceacda541d9" translate="yes" xml:space="preserve">
          <source>Creates an instance of &lt;a href=&quot;../kotlin.reflect/-k-type/index#kotlin.reflect.KType&quot;&gt;KType&lt;/a&gt; with the given classifier, substituting all its type parameters with star projections. The resulting type is not marked as nullable and does not have any annotations.</source>
          <target state="translated">주어진 분류 &lt;a href=&quot;../kotlin.reflect/-k-type/index#kotlin.reflect.KType&quot;&gt;자를&lt;/a&gt; 사용하여 KType 의 인스턴스를 작성 하고 모든 유형 매개 변수를 별 투영으로 대체합니다. 결과 유형은 널 입력 가능으로 표시되지 않으며 주석이 없습니다.</target>
        </trans-unit>
        <trans-unit id="032d8f86211f8339b60701af86804b368db5583d" translate="yes" xml:space="preserve">
          <source>Creates an invariant projection of a given type. Invariant projection is just the type itself, without any use-site variance modifiers applied to it. For example, in the type &lt;code&gt;Set&amp;lt;String&amp;gt;&lt;/code&gt;, &lt;code&gt;String&lt;/code&gt; is an invariant projection of the type represented by the class &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">주어진 유형의 고정 투영을 만듭니다. 불변 투영은 사용 사이트 분산 수정자가 적용되지 않은 유형 자체입니다. 예를 들어, &lt;code&gt;Set&amp;lt;String&amp;gt;&lt;/code&gt; 유형 에서 &lt;code&gt;String&lt;/code&gt; 은 &lt;code&gt;String&lt;/code&gt; 클래스가 나타내는 유형의 고정 투영입니다 .</target>
        </trans-unit>
        <trans-unit id="188d52b577049ed907518d59faef4a28341b3019" translate="yes" xml:space="preserve">
          <source>Creates an iterator for iterating over the elements of the array.</source>
          <target state="translated">배열의 요소를 반복하기위한 반복자를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="062635b077927c6a08e98c1db093e6513c40efaf" translate="yes" xml:space="preserve">
          <source>Creates an iterator over the elements of the array.</source>
          <target state="translated">배열의 요소에 대해 반복자를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="644a56faf95e507b15f944cadf10fa550567091b" translate="yes" xml:space="preserve">
          <source>Creates an unsigned byte array of the specified &lt;a href=&quot;../next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.Int%29%2Fsize&quot;&gt;size&lt;/a&gt;, filled with random bytes.</source>
          <target state="translated">지정된 &lt;a href=&quot;../next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.Int%29%2Fsize&quot;&gt;크기&lt;/a&gt; 의 부호없는 바이트 배열을 임의 바이트로 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="5d694a0ec93b05884276d54e792b91045a2ba907" translate="yes" xml:space="preserve">
          <source>Creates an unsigned byte array of the specified &lt;a href=&quot;next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.Int%29%2Fsize&quot;&gt;size&lt;/a&gt;, filled with random bytes.</source>
          <target state="translated">지정된 &lt;a href=&quot;next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.Int%29%2Fsize&quot;&gt;크기&lt;/a&gt; 의 부호없는 바이트 배열을 임의 바이트로 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="a05c8d617f3a8328401bb99287d4b9dbf5e98b4f" translate="yes" xml:space="preserve">
          <source>Creates detached object graph from value stored earlier in a C raw pointer.</source>
          <target state="translated">C 원시 포인터에 이전에 저장된 값에서 분리 된 객체 그래프를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="905e0440a71b39cacb8983c47ad7865cd04540fa" translate="yes" xml:space="preserve">
          <source>Creates stable pointer to object, ensuring associated object subgraph is disjoint in specified mode (&lt;a href=&quot;../-transfer-mode/-s-a-f-e&quot;&gt;TransferMode.SAFE&lt;/a&gt; by default). Raw value returned by &lt;a href=&quot;as-c-pointer&quot;&gt;asCPointer&lt;/a&gt; could be stored to a C variable or passed to another Kotlin machine.</source>
          <target state="translated">객체에 대한 안정적인 포인터를 만들어 관련 객체 하위 그래프가 지정된 모드 ( 기본적으로 &lt;a href=&quot;../-transfer-mode/-s-a-f-e&quot;&gt;TransferMode.SAFE)&lt;/a&gt; 에서 분리되도록합니다 . &lt;a href=&quot;as-c-pointer&quot;&gt;asCPointer&lt;/a&gt; 가 리턴 한 원시 값 은 C 변수에 저장되거나 다른 Kotlin 시스템으로 전달 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="271a82431d9fa97eadc8deb6264e0ef2cc38dd8a" translate="yes" xml:space="preserve">
          <source>Creates text node and append it to the element.</source>
          <target state="translated">텍스트 노드를 만들어 요소에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="1f355103d2a3e17a85828cdb67583359d0f4c05a" translate="yes" xml:space="preserve">
          <source>Creates unintercepted coroutine with receiver type &lt;a href=&quot;create-coroutine-unintercepted#R&quot;&gt;R&lt;/a&gt; and result type &lt;a href=&quot;create-coroutine-unintercepted#T&quot;&gt;T&lt;/a&gt;. This function creates a new, fresh instance of suspendable computation every time it is invoked.</source>
          <target state="translated">수신자 유형 &lt;a href=&quot;create-coroutine-unintercepted#R&quot;&gt;R&lt;/a&gt; 및 결과 유형 &lt;a href=&quot;create-coroutine-unintercepted#T&quot;&gt;T로&lt;/a&gt; 인터셉트되지 않은 코 루틴을 작성 합니다. 이 함수는 호출 할 때마다 새롭고 새로운 일시 중단 가능한 계산 인스턴스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="fabe2dc686b2babe37e5f9906683b798fcbfe5dc" translate="yes" xml:space="preserve">
          <source>Creates unintercepted coroutine without receiver and with result type &lt;a href=&quot;create-coroutine-unintercepted#T&quot;&gt;T&lt;/a&gt;. This function creates a new, fresh instance of suspendable computation every time it is invoked.</source>
          <target state="translated">수신자없이 결과 유형 &lt;a href=&quot;create-coroutine-unintercepted#T&quot;&gt;T로&lt;/a&gt; 인터셉트되지 않은 코 루틴을 작성 합니다. 이 함수는 호출 할 때마다 새롭고 새로운 일시 중단 가능한 계산 인스턴스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="99e17083ff94e8a04031aab60bd2f3b8b0074a79" translate="yes" xml:space="preserve">
          <source>Creating DTOs (POJOs/POCOs)</source>
          <target state="translated">DTO 생성 (POJO / POCO)</target>
        </trans-unit>
        <trans-unit id="5bbe6928a3475f1c1aa37bc2aaf2197e1a851133" translate="yes" xml:space="preserve">
          <source>Creating Hello Kotlin</source>
          <target state="translated">헬로 코 틀린 만들기</target>
        </trans-unit>
        <trans-unit id="f2eb45b71e49bc3b558945f74db4b24998a792a4" translate="yes" xml:space="preserve">
          <source>Creating Kotlin code that targets client-side JavaScript</source>
          <target state="translated">클라이언트 측 JavaScript를 대상으로하는 Kotlin 코드 작성</target>
        </trans-unit>
        <trans-unit id="a015a191b6c32e9034c4dc69a4a8a6547fa7dde4" translate="yes" xml:space="preserve">
          <source>Creating Kotlin code that targets server-side JavaScript</source>
          <target state="translated">서버 측 JavaScript를 대상으로하는 Kotlin 코드 작성</target>
        </trans-unit>
        <trans-unit id="ce8b88f0d45a9e05a0acb80a3544621deee4515d" translate="yes" xml:space="preserve">
          <source>Creating Struct and Union as &lt;code&gt;CValuesRef&amp;lt;T&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;CValuesRef&amp;lt;T&amp;gt;&lt;/code&gt; 로 구조 및 결합 작성</target>
        </trans-unit>
        <trans-unit id="d764e4c4091cd3af83661688bcd0070b7840795b" translate="yes" xml:space="preserve">
          <source>Creating Web Applications with Http Servlets</source>
          <target state="translated">Http 서블릿을 사용하여 웹 응용 프로그램 만들기</target>
        </trans-unit>
        <trans-unit id="91bc9208620d0b7ac0d6d70d7371878e3ca740f1" translate="yes" xml:space="preserve">
          <source>Creating a &lt;code&gt;CValue&amp;lt;T&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;CValue&amp;lt;T&amp;gt;&lt;/code&gt; 생성</target>
        </trans-unit>
        <trans-unit id="51e9c1badeade62d27e067d5b5176d5eeee96439" translate="yes" xml:space="preserve">
          <source>Creating a Greeting Data Class and Controller</source>
          <target state="translated">인사말 데이터 클래스 및 컨트롤러 만들기</target>
        </trans-unit>
        <trans-unit id="8f60dc47b51c5c7184e8e31baa8a1934331bcbcb" translate="yes" xml:space="preserve">
          <source>Creating a Home Controller</source>
          <target state="translated">홈 컨트롤러 만들기</target>
        </trans-unit>
        <trans-unit id="1fe7f636b4c3cc8163ad15d02aafbd937ce7ecd6" translate="yes" xml:space="preserve">
          <source>Creating a Kotlin JavaScript library with the Command Line Compiler</source>
          <target state="translated">명령 행 컴파일러를 사용하여 Kotlin JavaScript 라이브러리 작성</target>
        </trans-unit>
        <trans-unit id="9f4b0b2d75c9d2d6bc7c0ed8f0a2631a3ad378b3" translate="yes" xml:space="preserve">
          <source>Creating a Kotlin Library</source>
          <target state="translated">코 틀린 라이브러리 만들기</target>
        </trans-unit>
        <trans-unit id="4ea74668de10780b6390b876111ed84510c44765" translate="yes" xml:space="preserve">
          <source>Creating a Kotlin/JavaScript library</source>
          <target state="translated">Kotlin / JavaScript 라이브러리 작성</target>
        </trans-unit>
        <trans-unit id="3b2f68c77cb636dbe2bb3b1e6af8eba12852848e" translate="yes" xml:space="preserve">
          <source>Creating a Kotlin/Native Gradle project</source>
          <target state="translated">Kotlin / Native Gradle 프로젝트 생성</target>
        </trans-unit>
        <trans-unit id="d576ba59729b1adb7aa8a2fbb7114d10ccbd15fe" translate="yes" xml:space="preserve">
          <source>Creating a RESTful Web Service with Spring Boot</source>
          <target state="translated">Spring Boot로 RESTful 웹 서비스 생성</target>
        </trans-unit>
        <trans-unit id="875d1659f0b60a210ae22470241a1b0564c004f8" translate="yes" xml:space="preserve">
          <source>Creating a course</source>
          <target state="translated">코스 만들기</target>
        </trans-unit>
        <trans-unit id="5779ce31675e4f49452cfd03428b18f0bba00725" translate="yes" xml:space="preserve">
          <source>Creating a new project</source>
          <target state="translated">새로운 프로젝트 만들기</target>
        </trans-unit>
        <trans-unit id="91b3670f50a7235a62e631529cda3b62ff015b13" translate="yes" xml:space="preserve">
          <source>Creating a project</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4b23bfacf5d34c9319619616d3245375600ea1d" translate="yes" xml:space="preserve">
          <source>Creating a singleton</source>
          <target state="translated">싱글 톤 만들기</target>
        </trans-unit>
        <trans-unit id="091fcca5c001dbc9b7d735a1d55ab5a5f4b3212a" translate="yes" xml:space="preserve">
          <source>Creating an Android Project</source>
          <target state="translated">안드로이드 프로젝트 만들기</target>
        </trans-unit>
        <trans-unit id="5ae79fb1befc41c8a93a37b1959402c84de925a8" translate="yes" xml:space="preserve">
          <source>Creating an application targeting JavaScript</source>
          <target state="translated">JavaScript를 대상으로하는 응용 프로그램 만들기</target>
        </trans-unit>
        <trans-unit id="167edf949ab29cb746f1e2434beb01cf91923a77" translate="yes" xml:space="preserve">
          <source>Creating and running a first application</source>
          <target state="translated">첫 번째 응용 프로그램 작성 및 실행</target>
        </trans-unit>
        <trans-unit id="23c2235d034bfd3052d33a35f0e2f156cf20e65b" translate="yes" xml:space="preserve">
          <source>Creating basic classes and their instances:</source>
          <target state="translated">기본 클래스 및 해당 인스턴스 작성 :</target>
        </trans-unit>
        <trans-unit id="335208229c2cc5f4aeb2d1831c924860ce5407da" translate="yes" xml:space="preserve">
          <source>Creating bindings for a new library</source>
          <target state="translated">새 라이브러리에 대한 바인딩 작성</target>
        </trans-unit>
        <trans-unit id="25d8af1fe3f9177178c334372ae34f6512d705aa" translate="yes" xml:space="preserve">
          <source>Creating iOS Application</source>
          <target state="translated">iOS 애플리케이션 생성</target>
        </trans-unit>
        <trans-unit id="0bbcbdde173cc3954b14384f94eda12495115411" translate="yes" xml:space="preserve">
          <source>Creating instances of classes</source>
          <target state="translated">클래스 인스턴스 만들기</target>
        </trans-unit>
        <trans-unit id="8d7ec9f8d0cf9f3525b2c0412bcadf2bb077691e" translate="yes" xml:space="preserve">
          <source>Creating instances of nested, inner and anonymous inner classes is described in &lt;a href=&quot;nested-classes&quot;&gt;Nested classes&lt;/a&gt;.</source>
          <target state="translated">중첩, 내부 및 익명 내부 클래스의 인스턴스 작성은 중첩 클래스에 설명되어 &lt;a href=&quot;nested-classes&quot;&gt;있습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6ec55b6c63e301cb9aca12340ee39058119de416" translate="yes" xml:space="preserve">
          <source>Creating marker annotations</source>
          <target state="translated">마커 주석 만들기</target>
        </trans-unit>
        <trans-unit id="9d617173515b440c011c25a9478a996b59b03e82" translate="yes" xml:space="preserve">
          <source>Creating the Application class</source>
          <target state="translated">응용 프로그램 클래스 만들기</target>
        </trans-unit>
        <trans-unit id="a47a8f67c031f93257fd589df0322e2bc8af9dd3" translate="yes" xml:space="preserve">
          <source>Creating the Shared Module</source>
          <target state="translated">공유 모듈 생성</target>
        </trans-unit>
        <trans-unit id="d2a463d1fd54eb7d11c92e0e71b86fed201fe30d" translate="yes" xml:space="preserve">
          <source>Current Limitations</source>
          <target state="translated">전류 제한</target>
        </trans-unit>
        <trans-unit id="0ff7a081ba1fcd225575a0f0c0cb2159f7a7e349" translate="yes" xml:space="preserve">
          <source>Current data size, may concurrently change later on.</source>
          <target state="translated">현재 데이터 크기는 나중에 동시에 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="713b07e9490d702bdceb690d20d9ed5d803c5412" translate="yes" xml:space="preserve">
          <source>Currently the Kotlin/Native compiler produces debug info compatible with the DWARF 2 specification, so modern debugger tools can perform the following operations:</source>
          <target state="translated">현재 Kotlin / Native 컴파일러는 DWARF 2 사양과 호환되는 디버그 정보를 생성하므로 최신 디버거 도구는 다음 작업을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7b8f71c2668c0aed64bb077872227679b7061883" translate="yes" xml:space="preserve">
          <source>Currently you should not use DCE tool if your project is a shared library. It's only applicable when you are developing an application (which may use shared libraries). The reason is: DCE does not know which parts of the library are going to be used by the user's application.</source>
          <target state="translated">현재 프로젝트가 공유 라이브러리 인 경우 DCE 도구를 사용하지 않아야합니다. 응용 프로그램을 개발할 때만 적용됩니다 (공유 라이브러리를 사용할 수 있음). 그 이유는 다음과 같습니다. DCE는 사용자 응용 프로그램이 라이브러리의 어떤 부분을 사용할지 알지 못합니다.</target>
        </trans-unit>
        <trans-unit id="6e2f7653e302d483564689cc3c76773c62c4fd47" translate="yes" xml:space="preserve">
          <source>Currently, scratches are supported only in Kotlin/JVM projects.</source>
          <target state="translated">현재 스크래치는 Kotlin / JVM 프로젝트에서만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="292aba6163db8b0b2f940f22522e29628d2e30c7" translate="yes" xml:space="preserve">
          <source>Custom &lt;code&gt;Parceler&lt;/code&gt;s</source>
          <target state="translated">사용자 정의 &lt;code&gt;Parceler&lt;/code&gt; 의</target>
        </trans-unit>
        <trans-unit id="1c4db5c4b660736d3dbab3d8b61e303bbf6919b6" translate="yes" xml:space="preserve">
          <source>Custom Contracts</source>
          <target state="translated">맞춤 계약</target>
        </trans-unit>
        <trans-unit id="8865a3a68c9544ac12367c763b6303a7435e3ab1" translate="yes" xml:space="preserve">
          <source>Custom comparators are also handy when a list uses an order different from natural one, for example, a case-insensitive order for &lt;code&gt;String&lt;/code&gt; elements.</source>
          <target state="translated">사용자 정의 비교기는 목록이 자연과 다른 순서를 사용하는 경우에도 편리합니다 (예 : &lt;code&gt;String&lt;/code&gt; 요소 의 대소 문자를 구분하지 않는 순서) .</target>
        </trans-unit>
        <trans-unit id="77242d32f849b7b91b473376230b5128e0904393" translate="yes" xml:space="preserve">
          <source>Custom contracts are introduced by the call to &lt;code&gt;contract&lt;/code&gt; stdlib function, which provides DSL scope:</source>
          <target state="translated">DSL 범위를 제공하는 &lt;code&gt;contract&lt;/code&gt; stdlib 기능 호출에 의해 사용자 정의 계약이 도입됩니다 .</target>
        </trans-unit>
        <trans-unit id="5aa1de640fb90d00ad86e2515a356290d45d70d9" translate="yes" xml:space="preserve">
          <source>Custom orders</source>
          <target state="translated">맞춤 주문</target>
        </trans-unit>
        <trans-unit id="510dabf7252835d9978c83c5ec9c6ce309cf2f03" translate="yes" xml:space="preserve">
          <source>Custom source sets created in addition to the &lt;a href=&quot;#default-project-layout&quot;&gt;default ones&lt;/a&gt; should be explicitly included into the dependencies hierarchy to be able to use declarations from other source sets and, most importantly, to take part in compilations. Most often, they need a &lt;code&gt;dependsOn(commonMain)&lt;/code&gt; or &lt;code&gt;dependsOn(commonTest)&lt;/code&gt; statement, and some of the default platform-specific source sets should depend on the custom ones, directly or indirectly:</source>
          <target state="translated">&lt;a href=&quot;#default-project-layout&quot;&gt;기본&lt;/a&gt; 소스 외에 생성 된 사용자 정의 소스 세트 는 다른 소스 세트의 선언을 사용하고 가장 중요하게는 컴파일에 참여할 수 있도록 종속성 계층 구조에 명시 적으로 포함되어야합니다. 대부분의 경우 &lt;code&gt;dependsOn(commonMain)&lt;/code&gt; 또는 &lt;code&gt;dependsOn(commonTest)&lt;/code&gt; 문이 필요하며 기본 플랫폼 별 소스 세트 중 일부는 직접 또는 간접적으로 사용자 정의 소스에 의존해야합니다.</target>
        </trans-unit>
        <trans-unit id="9641d220de46bb82adcd91404005a9e912f6654c" translate="yes" xml:space="preserve">
          <source>CustomElementRegistry</source>
          <target state="translated">CustomElementRegistry</target>
        </trans-unit>
        <trans-unit id="e3ae39135530349988b9f2b37312a7da38d5e9d7" translate="yes" xml:space="preserve">
          <source>CustomEventInit</source>
          <target state="translated">CustomEventInit</target>
        </trans-unit>
        <trans-unit id="b7ddd78bc2d738dd5f328a3913edbca0e62d37a2" translate="yes" xml:space="preserve">
          <source>DASH_PUNCTUATION</source>
          <target state="translated">DASH_PUNCTUATION</target>
        </trans-unit>
        <trans-unit id="7da9e660ee43ba312a0eadb9e2826cd368fadd30" translate="yes" xml:space="preserve">
          <source>DBFlow</source>
          <target state="translated">DBFlow</target>
        </trans-unit>
        <trans-unit id="fa4185d299a864320463795980d92616fe160a5f" translate="yes" xml:space="preserve">
          <source>DBFlow defines a bunch of extensions to make its usage in Kotlin more idiomatic, which you can include in your dependencies:</source>
          <target state="translated">DBFlow는 Kotlin에서의 사용을보다 관용적으로 만들기 위해 여러 확장을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="aa3a5ae3d36048343f3b6ed675a6abcebd03915b" translate="yes" xml:space="preserve">
          <source>DCE does not perform minification (uglification) of your code by removing unnecessary whitespaces and shortening identifiers. You should use existing tools, like UglifyJS (https://github.com/mishoo/UglifyJS2) or Google Closure Compiler (https://developers.google.com/closure/compiler/) for this purpose.</source>
          <target state="translated">DCE는 불필요한 공백을 제거하고 식별자를 단축하여 코드의 축소 (추적 화)를 수행하지 않습니다. 이를 위해 UglifyJS (https://github.com/mishoo/UglifyJS2) 또는 Google Closure Compiler (https://developers.google.com/closure/compiler/)와 같은 기존 도구를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="607449471dd18a1ecd5a210d9b9d39d34771a6f4" translate="yes" xml:space="preserve">
          <source>DCE tool is currently available from Gradle.</source>
          <target state="translated">DCE 도구는 현재 Gradle에서 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="7bafdff61869a500494f4a0443ee9c0bfcb64720" translate="yes" xml:space="preserve">
          <source>DECIMAL_DIGIT_NUMBER</source>
          <target state="translated">DECIMAL_DIGIT_NUMBER</target>
        </trans-unit>
        <trans-unit id="1902b4c2b3614e4e710b092597e72b666f4e62de" translate="yes" xml:space="preserve">
          <source>DEFAULT_BUFFER_SIZE</source>
          <target state="translated">DEFAULT_BUFFER_SIZE</target>
        </trans-unit>
        <trans-unit id="7e26ca86e8689fde0bc1ba61a994c9cf74dbfa68" translate="yes" xml:space="preserve">
          <source>DOMImplementation</source>
          <target state="translated">DOMImplementation</target>
        </trans-unit>
        <trans-unit id="0bc9f0b62530ff017c6c91b4fa67c96e2492460d" translate="yes" xml:space="preserve">
          <source>DOMMatrixReadOnly</source>
          <target state="translated">DOMMatrixReadOnly</target>
        </trans-unit>
        <trans-unit id="bc2d230be05641f6476890725cf77245ddd0cd4e" translate="yes" xml:space="preserve">
          <source>DOMParser</source>
          <target state="translated">DOMParser</target>
        </trans-unit>
        <trans-unit id="536b73091cfe45ef69242c6db35a7b5fd376f931" translate="yes" xml:space="preserve">
          <source>DOMPointInit</source>
          <target state="translated">DOMPointInit</target>
        </trans-unit>
        <trans-unit id="909d75ad6b7731c724935a96a7082a7facdae2f6" translate="yes" xml:space="preserve">
          <source>DOMPointReadOnly</source>
          <target state="translated">DOMPointReadOnly</target>
        </trans-unit>
        <trans-unit id="a1e260231ffc7b5f77e0bbbf92dae64bd48ff67c" translate="yes" xml:space="preserve">
          <source>DOMQuad</source>
          <target state="translated">DOMQuad</target>
        </trans-unit>
        <trans-unit id="a696856663e8dc6d97e69006973f485c1eba6bf1" translate="yes" xml:space="preserve">
          <source>DOMRectInit</source>
          <target state="translated">DOMRectInit</target>
        </trans-unit>
        <trans-unit id="bf4907ee992b8f11e57a77ebeb8fe2280a9a7950" translate="yes" xml:space="preserve">
          <source>DOMRectList</source>
          <target state="translated">DOMRectList</target>
        </trans-unit>
        <trans-unit id="702ea8983cf1fffc7b15b640c87fdb73f01dfc97" translate="yes" xml:space="preserve">
          <source>DOMRectReadOnly</source>
          <target state="translated">DOMRectReadOnly</target>
        </trans-unit>
        <trans-unit id="8832c7fde3b423da65a9f5b85c41f43c7152cddc" translate="yes" xml:space="preserve">
          <source>DOMStringMap</source>
          <target state="translated">DOMStringMap</target>
        </trans-unit>
        <trans-unit id="dc3bf6edffd07dfbe381f9aa7a7c4de309f1c584" translate="yes" xml:space="preserve">
          <source>DOMTokenList</source>
          <target state="translated">DOMTokenList</target>
        </trans-unit>
        <trans-unit id="50637fefb475f90055c63ca741f15faf0c2d8aa9" translate="yes" xml:space="preserve">
          <source>DOT_MATCHES_ALL</source>
          <target state="translated">DOT_MATCHES_ALL</target>
        </trans-unit>
        <trans-unit id="8ab5faf932ad8859edda84dc1b3b557d86d509cc" translate="yes" xml:space="preserve">
          <source>DSL example</source>
          <target state="translated">DSL 예</target>
        </trans-unit>
        <trans-unit id="8e0e5961c9dc8c314c3d9bec3aebc5d5dceab1d6" translate="yes" xml:space="preserve">
          <source>Dagger</source>
          <target state="translated">Dagger</target>
        </trans-unit>
        <trans-unit id="8f5dcead155abae58e4489a3bd3c744c03583ea7" translate="yes" xml:space="preserve">
          <source>Dagger generates an implementation of &lt;code&gt;CoffeeShop&lt;/code&gt; that allows you to get a fully-injected &lt;code&gt;CoffeeMaker&lt;/code&gt;. You can navigate and see the implementation of &lt;code&gt;DaggerCoffeeShop&lt;/code&gt; if you open the project in IDE.</source>
          <target state="translated">Dagger 는 완전히 주입 된 &lt;code&gt;CoffeeMaker&lt;/code&gt; 를 얻을 수있는 &lt;code&gt;CoffeeShop&lt;/code&gt; 의 구현을 생성합니다 . IDE에서 프로젝트를 열면 &lt;code&gt;DaggerCoffeeShop&lt;/code&gt; 의 구현을 탐색하고 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f20dcbd9b08fb9703f8879bef939587ab26fc293" translate="yes" xml:space="preserve">
          <source>Data Binding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c54003d0e1fe3378d8a6f8ba0f92ff9d2ae47e4b" translate="yes" xml:space="preserve">
          <source>Data Classes</source>
          <target state="translated">데이터 클래스</target>
        </trans-unit>
        <trans-unit id="25c88740923ece15a2d16cf6a1e52ff72c24402d" translate="yes" xml:space="preserve">
          <source>Data Classes and Destructuring Declarations</source>
          <target state="translated">데이터 클래스와 파괴 선언</target>
        </trans-unit>
        <trans-unit id="d329cacaecc37bed4e5fba53c74606c0aee9908a" translate="yes" xml:space="preserve">
          <source>Data class overriding &lt;code&gt;copy&lt;/code&gt;</source>
          <target state="translated">데이터 클래스 재정의 &lt;code&gt;copy&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ab038a7b945db81e2822af6bc55e7e1f6c35643c" translate="yes" xml:space="preserve">
          <source>Data class representing a value from a collection or sequence, along with its index in that collection or sequence.</source>
          <target state="translated">컬렉션 또는 시퀀스의 인덱스와 함께 컬렉션 또는 시퀀스의 값을 나타내는 데이터 클래스</target>
        </trans-unit>
        <trans-unit id="8d0d0dc2f1ce54673556eb82f08e78cb7b578e8e" translate="yes" xml:space="preserve">
          <source>Data classes</source>
          <target state="translated">데이터 클래스</target>
        </trans-unit>
        <trans-unit id="b34a69fadee2adf638bc56a02902a4fe355613a2" translate="yes" xml:space="preserve">
          <source>Data classes cannot be abstract, open, sealed or inner;</source>
          <target state="translated">데이터 클래스는 추상, 공개, 봉인 또는 내부 일 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="425b14cd89372a10529ed16926e15bcdbfff8b02" translate="yes" xml:space="preserve">
          <source>DataTransfer</source>
          <target state="translated">DataTransfer</target>
        </trans-unit>
        <trans-unit id="8b221a5dbde46295ca9b03d3ef95bf345bc17788" translate="yes" xml:space="preserve">
          <source>DataTransferItem</source>
          <target state="translated">DataTransferItem</target>
        </trans-unit>
        <trans-unit id="f7120cb47ca5a4d617a103230733edaf9acbcdf2" translate="yes" xml:space="preserve">
          <source>DataTransferItemList</source>
          <target state="translated">DataTransferItemList</target>
        </trans-unit>
        <trans-unit id="16dcedc9e32ace9d82832081fe934341dd1cd877" translate="yes" xml:space="preserve">
          <source>DataView</source>
          <target state="translated">DataView</target>
        </trans-unit>
        <trans-unit id="eb9a4bc1c0c153e4e4b042a79113b815b7e3021d" translate="yes" xml:space="preserve">
          <source>Date</source>
          <target state="translated">Date</target>
        </trans-unit>
        <trans-unit id="846d191ced329d2097943633bca6335b1f9262d7" translate="yes" xml:space="preserve">
          <source>Dead code elimination is often also called 'tree shaking'.</source>
          <target state="translated">데드 코드 제거는 종종 '트리 떨림'이라고도합니다.</target>
        </trans-unit>
        <trans-unit id="0c1e9ddea0de0b23e31feaa4dc074a8f7479dfd8" translate="yes" xml:space="preserve">
          <source>Dealing with compiler bugs</source>
          <target state="translated">컴파일러 버그 다루기</target>
        </trans-unit>
        <trans-unit id="0fbdd5ca2957e4874b16a85b82aca02e4bd258fd" translate="yes" xml:space="preserve">
          <source>Debug the application</source>
          <target state="translated">응용 프로그램 디버그</target>
        </trans-unit>
        <trans-unit id="895b27c88016513d278a0ce3dc0663fae3829d58" translate="yes" xml:space="preserve">
          <source>Debugging</source>
          <target state="translated">Debugging</target>
        </trans-unit>
        <trans-unit id="66abfad53a2d8c7fd31179cc45507c14c6aaafb0" translate="yes" xml:space="preserve">
          <source>Debugging Kotlin in browser</source>
          <target state="translated">브라우저에서 Kotlin 디버깅</target>
        </trans-unit>
        <trans-unit id="626734da9fe68917919a5a44392d04c3162eb224" translate="yes" xml:space="preserve">
          <source>Debugging coroutines and threads</source>
          <target state="translated">코 루틴 및 스레드 디버깅</target>
        </trans-unit>
        <trans-unit id="f5b699f98a2551f1c0a872e7cffc95e49c88762b" translate="yes" xml:space="preserve">
          <source>Debugging in Chrome DevTools</source>
          <target state="translated">Chrome DevTools에서 디버깅</target>
        </trans-unit>
        <trans-unit id="01215d60a71f32827f8a67f7496424403c10a94c" translate="yes" xml:space="preserve">
          <source>Debugging the application</source>
          <target state="translated">응용 프로그램 디버깅</target>
        </trans-unit>
        <trans-unit id="6bd2b2a5baac6419baf232311ddedcb455f71727" translate="yes" xml:space="preserve">
          <source>Decimals: &lt;code&gt;123&lt;/code&gt;</source>
          <target state="translated">소수 : &lt;code&gt;123&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9594d42d905843075ce48e892e70d108c93bc849" translate="yes" xml:space="preserve">
          <source>Decision Making</source>
          <target state="translated">의사 결정</target>
        </trans-unit>
        <trans-unit id="d6f37721bc043c8dd7475e584d1b0bdd4b256c24" translate="yes" xml:space="preserve">
          <source>Declaration</source>
          <target state="translated">Declaration</target>
        </trans-unit>
        <trans-unit id="1783c331796c466fc89ce660373b5909402350f2" translate="yes" xml:space="preserve">
          <source>Declaration and instantiation</source>
          <target state="translated">선언과 인스턴스화</target>
        </trans-unit>
        <trans-unit id="69526f363f4c1c4bb90a49bf84072799c864d489" translate="yes" xml:space="preserve">
          <source>Declaration-site covariance and contravariance</source>
          <target state="translated">선언 사이트 공분산 및 공분산</target>
        </trans-unit>
        <trans-unit id="f5efd46800538f85d7e67a47b7a6cad936953d2e" translate="yes" xml:space="preserve">
          <source>Declaration-site variance</source>
          <target state="translated">선언 사이트 차이</target>
        </trans-unit>
        <trans-unit id="0d879e5bd2107e7fcc43b998dbd9566dd52996e4" translate="yes" xml:space="preserve">
          <source>Declaration-site variance &amp;amp; Type projections</source>
          <target state="translated">선언 사이트 차이 및 유형 예측</target>
        </trans-unit>
        <trans-unit id="bfd9dd188823ff26f847ebb4d0225407c0d4d7aa" translate="yes" xml:space="preserve">
          <source>Declaration-site variance of this type parameter. See the &lt;a href=&quot;../../../../../../docs/reference/generics#declaration-site-variance&quot;&gt;Kotlin language documentation&lt;/a&gt; for more information.</source>
          <target state="translated">이 형식 매개 변수의 선언 사이트 차이 자세한 내용은 &lt;a href=&quot;../../../../../../docs/reference/generics#declaration-site-variance&quot;&gt;Kotlin 언어 설명서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9ce1aefa86e8746e05050d3834bd558b2d5da0b5" translate="yes" xml:space="preserve">
          <source>Declare a function as infix only when it works on two objects which play a similar role. Good examples: &lt;code&gt;and&lt;/code&gt;, &lt;code&gt;to&lt;/code&gt;, &lt;code&gt;zip&lt;/code&gt;. Bad example: &lt;code&gt;add&lt;/code&gt;.</source>
          <target state="translated">기능이 유사한 역할을하는 두 개체에서 작동 할 때만 함수를 삽입으로 선언하십시오. 좋은 예 : &lt;code&gt;and&lt;/code&gt; , &lt;code&gt;to&lt;/code&gt; , &lt;code&gt;zip&lt;/code&gt; . 나쁜 예 : &lt;code&gt;add&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8141e317efc56ee18697750584f177cb4fa4437e" translate="yes" xml:space="preserve">
          <source>Declaring (static) members of a class</source>
          <target state="translated">클래스의 (정적) 멤버 선언</target>
        </trans-unit>
        <trans-unit id="6efca92889af37277cb00d1a93da58f85c0f3dff" translate="yes" xml:space="preserve">
          <source>Declaring Extensions as Members</source>
          <target state="translated">확장을 멤버로 선언</target>
        </trans-unit>
        <trans-unit id="a629716d1d1a36db6105b259501576be00e22498" translate="yes" xml:space="preserve">
          <source>Declaring Properties</source>
          <target state="translated">속성 선언</target>
        </trans-unit>
        <trans-unit id="4d179adca795cf882d1e2fcb4c827a032f922f7d" translate="yes" xml:space="preserve">
          <source>Declaring binaries</source>
          <target state="translated">바이너리 선언</target>
        </trans-unit>
        <trans-unit id="03687cebdb8a1a45896ded70c2c26f49424f77f2" translate="yes" xml:space="preserve">
          <source>Declaring optional parameters</source>
          <target state="translated">선택적 매개 변수 선언</target>
        </trans-unit>
        <trans-unit id="9e7e78b012b62dce6c259a2e257e3457ddce8d5e" translate="yes" xml:space="preserve">
          <source>Declaring variables</source>
          <target state="translated">변수 선언</target>
        </trans-unit>
        <trans-unit id="50ca464d8d74ab7e8696b7fc5d01d47f9bc40078" translate="yes" xml:space="preserve">
          <source>Decodes a string from the bytes in UTF-8 encoding in this array or its subrange.</source>
          <target state="translated">이 배열 또는 하위 범위의 UTF-8 인코딩으로 바이트에서 문자열을 디코딩합니다.</target>
        </trans-unit>
        <trans-unit id="a88fac956a784fdf0af3aaafc7b7cbaaa44dc2d4" translate="yes" xml:space="preserve">
          <source>Decodes a string from the bytes in UTF-8 encoding in this array.</source>
          <target state="translated">이 배열에서 UTF-8 인코딩으로 바이트에서 문자열을 디코딩합니다.</target>
        </trans-unit>
        <trans-unit id="367cc2e5fdfe082bdc453ff9e067bf533453c0ed" translate="yes" xml:space="preserve">
          <source>Decrements this value.</source>
          <target state="translated">이 값을 줄입니다.</target>
        </trans-unit>
        <trans-unit id="c6763c63e480b6aa1f2eebe6f3923a7dbc558e61" translate="yes" xml:space="preserve">
          <source>Decrements value by one.</source>
          <target state="translated">값을 1 씩 줄입니다.</target>
        </trans-unit>
        <trans-unit id="808d7dca8a74d84af27a2d6602c3d786de45fe1e" translate="yes" xml:space="preserve">
          <source>Default</source>
          <target state="translated">Default</target>
        </trans-unit>
        <trans-unit id="9a38baf3b03048f37add45c1488d99b0fdacb170" translate="yes" xml:space="preserve">
          <source>Default Arguments</source>
          <target state="translated">기본 인수</target>
        </trans-unit>
        <trans-unit id="004333fa2e938db560bd7c551693ae782059af6f" translate="yes" xml:space="preserve">
          <source>Default Imports</source>
          <target state="translated">기본 수입</target>
        </trans-unit>
        <trans-unit id="74dd2556fd5dce92b9c4d8ff65a0c66dd460a66b" translate="yes" xml:space="preserve">
          <source>Default Project Layout</source>
          <target state="translated">기본 프로젝트 레이아웃</target>
        </trans-unit>
        <trans-unit id="7078198f7cae420890a1abe183a812a6a35f8ed6" translate="yes" xml:space="preserve">
          <source>Default Value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d72a87e6ca669498157e500dc90d1e5fa61249d" translate="yes" xml:space="preserve">
          <source>Default implementation does nothing.</source>
          <target state="translated">기본 구현은 아무것도하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f56ba5ccdc01660a00f065dbd818701d68a03ff1" translate="yes" xml:space="preserve">
          <source>Default implementations with optional more specialized overrides is another bonus of the multiplatform library. Now, when we have a string-based API, we can cover it with basic tests:</source>
          <target state="translated">보다 특수한 재정의 옵션을 사용한 기본 구현은 멀티 플랫폼 라이브러리의 또 다른 보너스입니다. 이제 문자열 기반 API가 있으면 기본 테스트로이를 다룰 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb00dac1a7ec814c3f0bfabcc91fd624f09d93ae" translate="yes" xml:space="preserve">
          <source>Default methods are available only for targets JVM 1.8 and above.</source>
          <target state="translated">기본 메소드는 대상 JVM 1.8 이상에서만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1f529b0fd28579227a1a938ed1cf822b7ce635b0" translate="yes" xml:space="preserve">
          <source>Default methods in interfaces</source>
          <target state="translated">인터페이스의 기본 메소드</target>
        </trans-unit>
        <trans-unit id="00510f3c2eb3ca8fa74448310c01822126885a11" translate="yes" xml:space="preserve">
          <source>Default parameter values</source>
          <target state="translated">기본 매개 변수 값</target>
        </trans-unit>
        <trans-unit id="bdffe654f8554300a98d2acefcbbf1d894339b2b" translate="yes" xml:space="preserve">
          <source>Default value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c247591a0ec421cf213df87f5cfab736920f65f" translate="yes" xml:space="preserve">
          <source>Default values are defined using the &lt;strong&gt;=&lt;/strong&gt; after type along with the value.</source>
          <target state="translated">기본값은 값 과 함께 &lt;strong&gt;=&lt;/strong&gt; after type을 사용하여 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="c5a4ca79fc3b9dc619dfd98357c74e615190760f" translate="yes" xml:space="preserve">
          <source>Default values for function parameters</source>
          <target state="translated">기능 매개 변수의 기본값</target>
        </trans-unit>
        <trans-unit id="a52d4d2896f5b9308cd4cda93ca25ef7bdc3eb13" translate="yes" xml:space="preserve">
          <source>DeferScope</source>
          <target state="translated">DeferScope</target>
        </trans-unit>
        <trans-unit id="d36a311eae80bac3cfeb88f38f8a93405c81d66a" translate="yes" xml:space="preserve">
          <source>Deferred values can be selected using &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-deferred/on-await.html&quot;&gt;onAwait&lt;/a&gt; clause. Let us start with an async function that returns a deferred string value after a random delay:</source>
          <target state="translated">지연된 값은 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-deferred/on-await.html&quot;&gt;onAwait&lt;/a&gt; 절을 사용하여 선택할 수 있습니다 . 임의 지연 후 지연된 문자열 값을 반환하는 비동기 함수로 시작해 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="f715ef459873f316a735356bea952722b1f87891" translate="yes" xml:space="preserve">
          <source>Deferred values provide a convenient way to transfer a single value between coroutines. Channels provide a way to transfer a stream of values.</source>
          <target state="translated">지연된 값은 코 루틴간에 단일 값을 전송하는 편리한 방법을 제공합니다. 채널은 값 스트림을 전송하는 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="10af19f21c0846e0d21d57d9441a6d4f9e9e3e9c" translate="yes" xml:space="preserve">
          <source>Define the version of Kotlin you want to use via a &lt;em&gt;kotlin.version&lt;/em&gt; property:</source>
          <target state="translated">&lt;em&gt;kotlin.version&lt;/em&gt; 속성을 통해 사용하려는 Kotlin의 버전을 정의하십시오 .</target>
        </trans-unit>
        <trans-unit id="a45e6f082f931e76cc35b1d2866f81758dc21207" translate="yes" xml:space="preserve">
          <source>Defines names for Unicode symbols used in proper Typography.</source>
          <target state="translated">올바른 타이포그래피에 사용되는 유니 코드 기호의 이름을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="eaf85480139ce8b3345d7674369f7104c63e0e8b" translate="yes" xml:space="preserve">
          <source>Defining functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02462ee7bb41afbb3da00beda231ae5b090fc04c" translate="yes" xml:space="preserve">
          <source>Defining packages</source>
          <target state="translated">패키지 정의</target>
        </trans-unit>
        <trans-unit id="f9a8e79df5bf3ca302b1d914723d2b6350c0ffd5" translate="yes" xml:space="preserve">
          <source>Defining the project and dependencies</source>
          <target state="translated">프로젝트 및 의존성 정의</target>
        </trans-unit>
        <trans-unit id="6fb23f37daf93108649d6a0aadfd418fba192724" translate="yes" xml:space="preserve">
          <source>Defining variables</source>
          <target state="translated">변수 정의</target>
        </trans-unit>
        <trans-unit id="55341770817a3767f3abf6b917b16dc6cad31ecd" translate="yes" xml:space="preserve">
          <source>Definition file hints</source>
          <target state="translated">정의 파일 힌트</target>
        </trans-unit>
        <trans-unit id="86fdbca0dd71baf05d4d0e731fea35018ff2b87d" translate="yes" xml:space="preserve">
          <source>Deinitializes Kotlin runtime for the current thread, if was inited.</source>
          <target state="translated">현재 스레드가 초기화 된 경우 Kotlin 런타임을 초기화 해제합니다.</target>
        </trans-unit>
        <trans-unit id="8cf0fe100bdde85b284c9b3460b06f6be544fd3e" translate="yes" xml:space="preserve">
          <source>Delaying for a time while another coroutine is working is not a good approach. Let's explicitly wait (in a non-blocking way) until the background &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-job/index.html&quot;&gt;Job&lt;/a&gt; that we have launched is complete:</source>
          <target state="translated">다른 코 루틴이 작동하는 동안 시간이 지연되는 것은 좋은 방법이 아닙니다. 우리가 시작한 백그라운드 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-job/index.html&quot;&gt;작업&lt;/a&gt; 이 완료 될 때까지 (비 차단 방식으로) 명시 적으로 기다리겠습니다 .</target>
        </trans-unit>
        <trans-unit id="d9eb1a11956e5cc888e4d13347657ff7ef90d5aa" translate="yes" xml:space="preserve">
          <source>Delegated Properties</source>
          <target state="translated">위임 된 속성</target>
        </trans-unit>
        <trans-unit id="82c1773025dcf386373e640047e7d3b6ec4c2f26" translate="yes" xml:space="preserve">
          <source>Delegated properties</source>
          <target state="translated">위임 된 속성</target>
        </trans-unit>
        <trans-unit id="1a873edd160a55e0483eb179209876956ff30b1f" translate="yes" xml:space="preserve">
          <source>Delegated properties are described on a separate page: &lt;a href=&quot;delegated-properties&quot;&gt;Delegated Properties&lt;/a&gt;.</source>
          <target state="translated">위임 된 속성은 별도의 페이지에 설명되어 있습니다 : &lt;a href=&quot;delegated-properties&quot;&gt;위임 된 속성&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8363eb20dcbf9367e655b3c4cc23c2a2d59d977e" translate="yes" xml:space="preserve">
          <source>Delegated properties take values from this map (by the string keys &amp;ndash;&amp;ndash; names of properties):</source>
          <target state="translated">위임 된 속성은이 맵에서 값을 가져옵니다 (문자열 키 &amp;ndash; 속성 이름).</target>
        </trans-unit>
        <trans-unit id="7dcccba4f8856a9df41efcf1d5ea4f2cfd327cec" translate="yes" xml:space="preserve">
          <source>Delegates</source>
          <target state="translated">Delegates</target>
        </trans-unit>
        <trans-unit id="710ea31c1844269e394476da1f1443e6ca2a3b36" translate="yes" xml:space="preserve">
          <source>Delegation</source>
          <target state="translated">Delegation</target>
        </trans-unit>
        <trans-unit id="76a4d95cde894c1d7bc38dcf7ee5a2700580fa21" translate="yes" xml:space="preserve">
          <source>Delete this file with all its children. Note that if this operation fails then partial deletion may have taken place.</source>
          <target state="translated">모든 자식과 함께이 파일을 삭제하십시오. 이 작업이 실패하면 부분 삭제가 발생했을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="12b5aeca69dae0e0c7deaf5c22ac0279d161947f" translate="yes" xml:space="preserve">
          <source>Denotes an &lt;code&gt;external&lt;/code&gt; declaration that can be used without module system.</source>
          <target state="translated">모듈 시스템없이 사용할 수 있는 &lt;code&gt;external&lt;/code&gt; 선언을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="2a32014ccda5a7ce6f1870686c19e3803d7e50c8" translate="yes" xml:space="preserve">
          <source>Denotes an &lt;code&gt;external&lt;/code&gt; declaration that must be imported from native JavaScript library.</source>
          <target state="translated">기본 JavaScript 라이브러리에서 가져와야 하는 &lt;code&gt;external&lt;/code&gt; 선언을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="0562f32dc56f5c702810cbe010068ddd38dbd69a" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
          <target state="translated">Dependencies</target>
        </trans-unit>
        <trans-unit id="bbf64a22a95358bfa04118b993ea2161656f19a2" translate="yes" xml:space="preserve">
          <source>Dependencies (including interop ones)</source>
          <target state="translated">종속성 (인터럽트 포함)</target>
        </trans-unit>
        <trans-unit id="6aee742fa33aa11fbc680a59d219de7616a030a1" translate="yes" xml:space="preserve">
          <source>Dependencies are specified per source set as follows:</source>
          <target state="translated">소스 세트당 종속성은 다음과 같이 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="a1bf8971a01b6d47d63607bf14877619e76a3c41" translate="yes" xml:space="preserve">
          <source>Dependency declaration is also possible in the component block:</source>
          <target state="translated">구성 요소 블록에서 종속성 선언도 가능합니다.</target>
        </trans-unit>
        <trans-unit id="e2558bbd35c8640c622365be8cd60ab5693f2bed" translate="yes" xml:space="preserve">
          <source>Depending on the target platform, we use different &lt;a href=&quot;../../reference/building-mpp-with-gradle&quot;&gt;functions&lt;/a&gt;, e.g. &lt;code&gt;macosX64&lt;/code&gt;, &lt;code&gt;mingwX64&lt;/code&gt;, &lt;code&gt;linuxX64&lt;/code&gt;, &lt;code&gt;iosX64&lt;/code&gt;, to create the Kotlin target. The function name is the platform which we are compiling our code for. These functions optionally take the target name as a parameter, which is &lt;code&gt;&quot;native&quot;&lt;/code&gt; in our case. The specified &lt;em&gt;target name&lt;/em&gt; is used to generate the source paths and task names in the project.</source>
          <target state="translated">대상 플랫폼에 따라 &lt;code&gt;macosX64&lt;/code&gt; , &lt;code&gt;mingwX64&lt;/code&gt; , &lt;code&gt;linuxX64&lt;/code&gt; , &lt;code&gt;iosX64&lt;/code&gt; 와 같은 다른 &lt;a href=&quot;../../reference/building-mpp-with-gradle&quot;&gt;기능&lt;/a&gt; 을 사용하여 Kotlin 대상을 만듭니다. 함수 이름은 코드를 컴파일하는 플랫폼입니다. 이러한 함수는 선택적으로 대상 이름을 매개 변수로 사용하며,이 경우 &lt;code&gt;&quot;native&quot;&lt;/code&gt; 입니다. 지정된 &lt;em&gt;대상 이름&lt;/em&gt; 은 프로젝트에서 소스 경로 및 작업 이름을 생성하는 데 사용됩니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8048405643ba6bef25d30dfe59095c956c725378" translate="yes" xml:space="preserve">
          <source>Depending on the variant, the build generates the framework into the &lt;code&gt;build/bin/native/debugFramework&lt;/code&gt; and &lt;code&gt;build/bin/native/releaseFramework&lt;/code&gt; folders. Let's see what is inside</source>
          <target state="translated">변형에 따라 빌드는 &lt;code&gt;build/bin/native/debugFramework&lt;/code&gt; 및 &lt;code&gt;build/bin/native/releaseFramework&lt;/code&gt; 폴더에 프레임 워크를 생성합니다 . 안에 무엇이 있는지 보자</target>
        </trans-unit>
        <trans-unit id="798b9e0b080bdadd97be30e380836acd3d374644" translate="yes" xml:space="preserve">
          <source>Deploying Kotlin Server-side Applications</source>
          <target state="translated">Kotlin 서버 측 응용 프로그램 배포</target>
        </trans-unit>
        <trans-unit id="527600bf0272b6bf3abcb495a99c6ee346bb82b2" translate="yes" xml:space="preserve">
          <source>Deprecated</source>
          <target state="translated">Deprecated</target>
        </trans-unit>
        <trans-unit id="302492c12a53b4d434a03ea744269ffb1d2b42ce" translate="yes" xml:space="preserve">
          <source>Deprecated element will not be accessible from code.</source>
          <target state="translated">더 이상 사용되지 않는 요소는 코드에서 액세스 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="04985d606d209354e4c0bdf6e1358ebf8a4ccb08" translate="yes" xml:space="preserve">
          <source>Deprecated support for experimental coroutines, provided for compatibility. It's recommended to migrate to &lt;code&gt;kotlin.coroutines.intrinsics&lt;/code&gt; API.</source>
          <target state="translated">호환성을 위해 제공된 실험 코 루틴에 대한 지원이 중단되었습니다. &lt;code&gt;kotlin.coroutines.intrinsics&lt;/code&gt; API 로 마이그레이션하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="539273974a9ae804f07b5878e48f50da514e14b9" translate="yes" xml:space="preserve">
          <source>Deprecated support for experimental coroutines, provided for compatibility. It's recommended to migrate to &lt;code&gt;kotlin.coroutines&lt;/code&gt; API.</source>
          <target state="translated">호환성을 위해 제공된 실험 코 루틴에 대한 지원이 중단되었습니다. &lt;code&gt;kotlin.coroutines&lt;/code&gt; API 로 마이그레이션하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="7df2a723d463ebf5da79b9a658bebb4606c0e28d" translate="yes" xml:space="preserve">
          <source>Deprecation: data classes overriding copy</source>
          <target state="translated">지원 중단 : 복사를 재정의하는 데이터 클래스</target>
        </trans-unit>
        <trans-unit id="36624958c874d1922e4fbf19d0e3b3799f091c9f" translate="yes" xml:space="preserve">
          <source>Deprecation: inner classes of generic classes extending Throwable</source>
          <target state="translated">더 이상 사용되지 않음 : Throwable을 확장하는 일반 클래스의 내부 클래스</target>
        </trans-unit>
        <trans-unit id="ab28aea81dcb8e631e0158a588b35c6b9bb8c716" translate="yes" xml:space="preserve">
          <source>Deprecation: mutating backing field of a read-only property</source>
          <target state="translated">지원 중단 : 읽기 전용 속성의 백업 필드 변경</target>
        </trans-unit>
        <trans-unit id="f4f6df8fbf57a2ccc2c0341033eadbab83bb2bcd" translate="yes" xml:space="preserve">
          <source>Deprecation: nested types in enum entries</source>
          <target state="translated">지원 중단 : 열거 형 항목의 중첩 유형</target>
        </trans-unit>
        <trans-unit id="dbc762089c0916158a95b8d950c6a5e3683d4b1c" translate="yes" xml:space="preserve">
          <source>Deprecation: single named argument for vararg</source>
          <target state="translated">지원 중단 : vararg에 대한 단일 명명 된 인수</target>
        </trans-unit>
        <trans-unit id="4d159ac4945dc04545976d85f5f34241d79b594a" translate="yes" xml:space="preserve">
          <source>DeprecationLevel</source>
          <target state="translated">DeprecationLevel</target>
        </trans-unit>
        <trans-unit id="ab7b1741687e161f8bb2328b955c7ab64f3aedb3" translate="yes" xml:space="preserve">
          <source>Depth-first search, directory is visited AFTER its files</source>
          <target state="translated">깊이 우선 검색, 파일 후 디렉토리 방문</target>
        </trans-unit>
        <trans-unit id="037651e19b37eabb46e3b048f4a22f02596ad647" translate="yes" xml:space="preserve">
          <source>Depth-first search, directory is visited BEFORE its files</source>
          <target state="translated">깊이 우선 검색, 파일보다 먼저 디렉토리를 방문</target>
        </trans-unit>
        <trans-unit id="43cf02d877c19ac2bb2e51c8f7a4fd7d94a2052a" translate="yes" xml:space="preserve">
          <source>Derived class initialization order</source>
          <target state="translated">파생 클래스 초기화 순서</target>
        </trans-unit>
        <trans-unit id="c17a281db8e4c73087d63b2afbb53608f2f24527" translate="yes" xml:space="preserve">
          <source>Deriving a data class from a type that already has a &lt;code&gt;copy(...)&lt;/code&gt; function with a matching signature is deprecated in Kotlin 1.2 and is prohibited in Kotlin 1.3.</source>
          <target state="translated">일치하는 서명을 가진 &lt;code&gt;copy(...)&lt;/code&gt; 함수 가있는 유형에서 데이터 클래스를 파생하는 것은 Kotlin 1.2에서 더 이상 사용되지 않으며 Kotlin 1.3에서는 금지됩니다.</target>
        </trans-unit>
        <trans-unit id="2fd3bd3e6afc045bfbcd4e36b1046fe4a31118e1" translate="yes" xml:space="preserve">
          <source>Describes a situation when a function returns normally with a given return value.</source>
          <target state="translated">주어진 반환 값으로 함수가 정상적으로 반환되는 상황을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="b7f74295d186c5835da5910c6ecd9b24295b6889" translate="yes" xml:space="preserve">
          <source>Describes a situation when a function returns normally with any non-null return value.</source>
          <target state="translated">널이 아닌 리턴 값으로 함수가 정상적으로 리턴하는 상황을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="02faff5cf391486d94200363ccf97c36a29845f3" translate="yes" xml:space="preserve">
          <source>Describes a situation when a function returns normally with any value that is not &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">함수가 &lt;code&gt;null&lt;/code&gt; 이 아닌 값으로 정상적으로 반환되는 상황을 설명합니다 .</target>
        </trans-unit>
        <trans-unit id="fa1d7eb3bb3131462f668f204cbd6cc484b77f8b" translate="yes" xml:space="preserve">
          <source>Describes a situation when a function returns normally with the specified return &lt;a href=&quot;returns#kotlin.contracts.ContractBuilder%24returns%28kotlin.Any%29%2Fvalue&quot;&gt;value&lt;/a&gt;.</source>
          <target state="translated">지정된 반환 &lt;a href=&quot;returns#kotlin.contracts.ContractBuilder%24returns%28kotlin.Any%29%2Fvalue&quot;&gt;값&lt;/a&gt; 으로 함수가 정상적으로 반환되는 상황을 설명 합니다 .</target>
        </trans-unit>
        <trans-unit id="bf479a0d235c44afe79c60e873b396d3193fd49c" translate="yes" xml:space="preserve">
          <source>Describes a situation when a function returns normally, without any exceptions thrown.</source>
          <target state="translated">예외가 발생하지 않고 함수가 정상적으로 반환되는 상황을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="d6eb84b30671924abdb086ad3eb7958b9baa8de6" translate="yes" xml:space="preserve">
          <source>Destination directory or .jar file name</source>
          <target state="translated">대상 디렉토리 또는 .jar 파일 이름</target>
        </trans-unit>
        <trans-unit id="2a8acf95fbf5e4a22b63df20b3c2077c316bd245" translate="yes" xml:space="preserve">
          <source>Destination file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf51fcb4adddfb6b7992e0883887b8a2af792726" translate="yes" xml:space="preserve">
          <source>Destructured</source>
          <target state="translated">Destructured</target>
        </trans-unit>
        <trans-unit id="56ca5e0437411ccbc6fa42dbc7ea25edfbc879d6" translate="yes" xml:space="preserve">
          <source>Destructuring Declarations</source>
          <target state="translated">파괴 선언</target>
        </trans-unit>
        <trans-unit id="cc6c207f956f982b3f9eceae519287e9d31fdc71" translate="yes" xml:space="preserve">
          <source>Destructuring declarations also work in &lt;em&gt;for&lt;/em&gt;-loops: when you say:</source>
          <target state="translated">파괴 선언도 &lt;em&gt;for&lt;/em&gt; -loops 에서 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="9538600b70248a80970283859082e44f96e1adf1" translate="yes" xml:space="preserve">
          <source>Destructuring in Lambdas (since 1.1)</source>
          <target state="translated">람다에서의 파괴 (1.1 이후)</target>
        </trans-unit>
        <trans-unit id="c0617ad55d1641d3908e28bec4940aeb15edea5a" translate="yes" xml:space="preserve">
          <source>Destructuring in lambdas</source>
          <target state="translated">람다에서 파괴</target>
        </trans-unit>
        <trans-unit id="194fbab7abe4ad4d976eef9a3150ec1ded7d903e" translate="yes" xml:space="preserve">
          <source>Destructuring in lambdas (since 1.1)</source>
          <target state="translated">람다에서의 파괴 (1.1 이후)</target>
        </trans-unit>
        <trans-unit id="50273607265bc87623bc4400b2ab41906200ad2d" translate="yes" xml:space="preserve">
          <source>Destructuring in lambdas is described as a part of &lt;a href=&quot;multi-declarations#destructuring-in-lambdas-since-11&quot;&gt;destructuring declarations&lt;/a&gt;.</source>
          <target state="translated">람다에서의 &lt;a href=&quot;multi-declarations#destructuring-in-lambdas-since-11&quot;&gt;파괴&lt;/a&gt; 는 파괴 선언 의 일부로 설명됩니다 .</target>
        </trans-unit>
        <trans-unit id="5f5676f43d2a6ac041f3d4e368178eea5400c5c1" translate="yes" xml:space="preserve">
          <source>Detached object graph encapsulates transferrable detached subgraph which cannot be accessed externally, until it is attached with the &lt;a href=&quot;../../kotlin.native.concurrent/attach&quot;&gt;attach&lt;/a&gt; extension function.</source>
          <target state="translated">분리 된 개체 그래프는 확장 가능 &lt;a href=&quot;../../kotlin.native.concurrent/attach&quot;&gt;연결&lt;/a&gt; 기능으로 연결될 때까지 외부에서 액세스 할 수없는 전송 가능한 분리 된 하위 그래프를 캡슐화 합니다.</target>
        </trans-unit>
        <trans-unit id="e51248e3fd7469c27661bd0ad8a1f6c2c6d61d10" translate="yes" xml:space="preserve">
          <source>Detached object graph encapsulates transferrable detached subgraph which cannot be accessed externally, until it is attached with the &lt;a href=&quot;../attach&quot;&gt;attach&lt;/a&gt; extension function.</source>
          <target state="translated">분리 된 개체 그래프는 확장 가능 &lt;a href=&quot;../attach&quot;&gt;연결&lt;/a&gt; 기능으로 연결될 때까지 외부에서 액세스 할 수없는 전송 가능한 분리 된 하위 그래프를 캡슐화 합니다.</target>
        </trans-unit>
        <trans-unit id="462de32668c565664db0ea11ad515a3cedf31db9" translate="yes" xml:space="preserve">
          <source>Detached object graph encapsulates transferrable detached subgraph which cannot be accessed externally, until it is attached with the &lt;a href=&quot;attach&quot;&gt;attach&lt;/a&gt; extension function.</source>
          <target state="translated">분리 된 개체 그래프는 확장 가능 &lt;a href=&quot;attach&quot;&gt;연결&lt;/a&gt; 기능으로 연결될 때까지 외부에서 액세스 할 수없는 전송 가능한 분리 된 하위 그래프를 캡슐화 합니다.</target>
        </trans-unit>
        <trans-unit id="83d50b55671877d18384e9fd282e401c50dca26f" translate="yes" xml:space="preserve">
          <source>DetachedObjectGraph</source>
          <target state="translated">DetachedObjectGraph</target>
        </trans-unit>
        <trans-unit id="6bbf8be755a774a0bbcfcc9129bcb43de6794477" translate="yes" xml:space="preserve">
          <source>Detects a common minimal indent like it does &lt;a href=&quot;../../kotlin.text/trim-indent&quot;&gt;trimIndent&lt;/a&gt; and replaces it with the specified &lt;a href=&quot;../../kotlin.text/replace-indent#kotlin.text%24replaceIndent%28kotlin.String%2C+kotlin.String%29%2FnewIndent&quot;&gt;newIndent&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../kotlin.text/trim-indent&quot;&gt;trimIndent&lt;/a&gt; 와 같이 일반적인 최소 들여 쓰기를 감지 하여 지정된 &lt;a href=&quot;../../kotlin.text/replace-indent#kotlin.text%24replaceIndent%28kotlin.String%2C+kotlin.String%29%2FnewIndent&quot;&gt;newIndent로 바꿉니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="759cb23e79d0bcfe352dd1767c40f4e86484c2f6" translate="yes" xml:space="preserve">
          <source>Detects a common minimal indent like it does &lt;a href=&quot;trim-indent&quot;&gt;trimIndent&lt;/a&gt; and replaces it with the specified &lt;a href=&quot;replace-indent#kotlin.text%24replaceIndent%28kotlin.String%2C+kotlin.String%29%2FnewIndent&quot;&gt;newIndent&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;trim-indent&quot;&gt;trimIndent&lt;/a&gt; 와 같이 일반적인 최소 들여 쓰기를 감지 하여 지정된 &lt;a href=&quot;replace-indent#kotlin.text%24replaceIndent%28kotlin.String%2C+kotlin.String%29%2FnewIndent&quot;&gt;newIndent로 바꿉니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4de7f3cf3b3fe1a56ea6af47ee3d2b8568ca59d8" translate="yes" xml:space="preserve">
          <source>Detects a common minimal indent of all the input lines, removes it from every line and also removes the first and the last lines if they are blank (notice difference blank vs empty).</source>
          <target state="translated">모든 입력 라인의 공통 최소 들여 쓰기를 감지하고 모든 라인에서이를 제거하고 비어있는 경우 첫 번째와 마지막 라인을 제거합니다 (공백 차이와 비어 있음).</target>
        </trans-unit>
        <trans-unit id="448573a1acf6c0d0a632e432c77153d554bb05ed" translate="yes" xml:space="preserve">
          <source>Detects indent by &lt;a href=&quot;../../kotlin.text/replace-indent-by-margin#kotlin.text%24replaceIndentByMargin%28kotlin.String%2C+kotlin.String%2C+kotlin.String%29%2FmarginPrefix&quot;&gt;marginPrefix&lt;/a&gt; as it does &lt;a href=&quot;../../kotlin.text/trim-margin&quot;&gt;trimMargin&lt;/a&gt; and replace it with &lt;a href=&quot;../../kotlin.text/replace-indent-by-margin#kotlin.text%24replaceIndentByMargin%28kotlin.String%2C+kotlin.String%2C+kotlin.String%29%2FnewIndent&quot;&gt;newIndent&lt;/a&gt;.</source>
          <target state="translated">감지에 의해 들여 &lt;a href=&quot;../../kotlin.text/replace-indent-by-margin#kotlin.text%24replaceIndentByMargin%28kotlin.String%2C+kotlin.String%2C+kotlin.String%29%2FmarginPrefix&quot;&gt;marginPrefix&lt;/a&gt; 이처럼 &lt;a href=&quot;../../kotlin.text/trim-margin&quot;&gt;trimMargin를&lt;/a&gt; 하고로 교체 &lt;a href=&quot;../../kotlin.text/replace-indent-by-margin#kotlin.text%24replaceIndentByMargin%28kotlin.String%2C+kotlin.String%2C+kotlin.String%29%2FnewIndent&quot;&gt;newIndent&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ff27fb1c919a6e53c31b55dac2dc76b1369ccaaa" translate="yes" xml:space="preserve">
          <source>Detects indent by &lt;a href=&quot;replace-indent-by-margin#kotlin.text%24replaceIndentByMargin%28kotlin.String%2C+kotlin.String%2C+kotlin.String%29%2FmarginPrefix&quot;&gt;marginPrefix&lt;/a&gt; as it does &lt;a href=&quot;trim-margin&quot;&gt;trimMargin&lt;/a&gt; and replace it with &lt;a href=&quot;replace-indent-by-margin#kotlin.text%24replaceIndentByMargin%28kotlin.String%2C+kotlin.String%2C+kotlin.String%29%2FnewIndent&quot;&gt;newIndent&lt;/a&gt;.</source>
          <target state="translated">감지에 의해 들여 &lt;a href=&quot;replace-indent-by-margin#kotlin.text%24replaceIndentByMargin%28kotlin.String%2C+kotlin.String%2C+kotlin.String%29%2FmarginPrefix&quot;&gt;marginPrefix&lt;/a&gt; 이처럼 &lt;a href=&quot;trim-margin&quot;&gt;trimMargin를&lt;/a&gt; 하고로 교체 &lt;a href=&quot;replace-indent-by-margin#kotlin.text%24replaceIndentByMargin%28kotlin.String%2C+kotlin.String%2C+kotlin.String%29%2FnewIndent&quot;&gt;newIndent&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a6284a1d1ed8d8ad6502082e3f3348005e4c0a88" translate="yes" xml:space="preserve">
          <source>Determines how an annotation is stored in binary output.</source>
          <target state="translated">주석이 이진 출력에 저장되는 방식을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="9f4e38e8239446bc3109f6d54600b9fa68f13c81" translate="yes" xml:space="preserve">
          <source>Determines the type of &lt;code&gt;a&lt;/code&gt;, let it be &lt;code&gt;T&lt;/code&gt;;</source>
          <target state="translated">의 종류를 결정 &lt;code&gt;a&lt;/code&gt; , 그것은하자 &lt;code&gt;T&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="ff108cd0ac89424a1c63e0b7e9d4faaa9fdae2f9" translate="yes" xml:space="preserve">
          <source>Determines whether a character is whitespace according to the Unicode standard. Returns &lt;code&gt;true&lt;/code&gt; if the character is whitespace.</source>
          <target state="translated">유니 코드 표준에 따라 문자가 공백인지 여부를 결정합니다. 문자가 공백 &lt;code&gt;true&lt;/code&gt; 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="0df44ea37c46de95961847be769d2295c4d4c5d1" translate="yes" xml:space="preserve">
          <source>Determines whether this file belongs to the same root as &lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+kotlin.String%29%2Fother&quot;&gt;other&lt;/a&gt; and ends with all components of &lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+kotlin.String%29%2Fother&quot;&gt;other&lt;/a&gt; in the same order. So if &lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+kotlin.String%29%2Fother&quot;&gt;other&lt;/a&gt; has N components, last N components of &lt;code&gt;this&lt;/code&gt; must be the same as in &lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+kotlin.String%29%2Fother&quot;&gt;other&lt;/a&gt;. For relative &lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+kotlin.String%29%2Fother&quot;&gt;other&lt;/a&gt;, &lt;code&gt;this&lt;/code&gt; can belong to any root.</source>
          <target state="translated">이 파일이 다른 파일과 동일한 루트에 속해 있는지 확인하고 &lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+kotlin.String%29%2Fother&quot;&gt;다른&lt;/a&gt; 순서 로 &lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+kotlin.String%29%2Fother&quot;&gt;다른&lt;/a&gt; 모든 구성 요소로 끝납니다 . 그렇다면 &lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+kotlin.String%29%2Fother&quot;&gt;다른&lt;/a&gt; N 구성 요소를 가지고, 마지막 N 성분 &lt;code&gt;this&lt;/code&gt; 에서와 동일해야합니다 &lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+kotlin.String%29%2Fother&quot;&gt;다른&lt;/a&gt; . relative &lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+kotlin.String%29%2Fother&quot;&gt;other의&lt;/a&gt; 경우 &lt;code&gt;this&lt;/code&gt; 모든 루트에 속할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ff4cb6550bb3b4d85086ff0926bfdfd7ced324ad" translate="yes" xml:space="preserve">
          <source>Determines whether this file belongs to the same root as &lt;a href=&quot;starts-with#kotlin.io%24startsWith%28java.io.File%2C+java.io.File%29%2Fother&quot;&gt;other&lt;/a&gt; and starts with all components of &lt;a href=&quot;starts-with#kotlin.io%24startsWith%28java.io.File%2C+java.io.File%29%2Fother&quot;&gt;other&lt;/a&gt; in the same order. So if &lt;a href=&quot;starts-with#kotlin.io%24startsWith%28java.io.File%2C+java.io.File%29%2Fother&quot;&gt;other&lt;/a&gt; has N components, first N components of &lt;code&gt;this&lt;/code&gt; must be the same as in &lt;a href=&quot;starts-with#kotlin.io%24startsWith%28java.io.File%2C+java.io.File%29%2Fother&quot;&gt;other&lt;/a&gt;.</source>
          <target state="translated">이 파일이 다른 파일과 동일한 루트에 속해 있는지 확인하고 &lt;a href=&quot;starts-with#kotlin.io%24startsWith%28java.io.File%2C+java.io.File%29%2Fother&quot;&gt;다른&lt;/a&gt; 순서 로 &lt;a href=&quot;starts-with#kotlin.io%24startsWith%28java.io.File%2C+java.io.File%29%2Fother&quot;&gt;다른&lt;/a&gt; 모든 구성 요소로 시작합니다 . 그렇다면 &lt;a href=&quot;starts-with#kotlin.io%24startsWith%28java.io.File%2C+java.io.File%29%2Fother&quot;&gt;다른&lt;/a&gt; N 개의 구성 요소가의 첫 번째 N 성분 &lt;code&gt;this&lt;/code&gt; 에서와 동일해야합니다 &lt;a href=&quot;starts-with#kotlin.io%24startsWith%28java.io.File%2C+java.io.File%29%2Fother&quot;&gt;다른&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d6bf88572f43737b0b427a9e321cfca77dbc5372" translate="yes" xml:space="preserve">
          <source>Determines whether this file has a root or it represents a relative path.</source>
          <target state="translated">이 파일에 루트가 있는지 또는 상대 경로를 나타내는 지 판별합니다.</target>
        </trans-unit>
        <trans-unit id="dddc6211c132c415993b584dc730f460ec7ab7d4" translate="yes" xml:space="preserve">
          <source>Determines whether this file path ends with the path of &lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+java.io.File%29%2Fother&quot;&gt;other&lt;/a&gt; file.</source>
          <target state="translated">이 파일 경로가 &lt;a href=&quot;ends-with#kotlin.io%24endsWith%28java.io.File%2C+java.io.File%29%2Fother&quot;&gt;다른&lt;/a&gt; 파일 의 경로로 끝나는 지 여부를 결정합니다 .</target>
        </trans-unit>
        <trans-unit id="80f261b6ba4ad9cd101519ca55f6e50d58c5295e" translate="yes" xml:space="preserve">
          <source>Development mode</source>
          <target state="translated">개발 모드</target>
        </trans-unit>
        <trans-unit id="860e1f95d3a8d20be2e3e527091c855f4e981bdb" translate="yes" xml:space="preserve">
          <source>Dictionary</source>
          <target state="translated">Dictionary</target>
        </trans-unit>
        <trans-unit id="66334f39b8b0fe14f26e33cf08b74cb64a672551" translate="yes" xml:space="preserve">
          <source>Differences between &quot;Kotlin Coding Conventions&quot; and &quot;IntelliJ IDEA default code style&quot;</source>
          <target state="translated">&quot;코 틀린 코딩 규칙&quot;과 &quot;IntelliJ IDEA 기본 코드 스타일&quot;의 차이점</target>
        </trans-unit>
        <trans-unit id="4d052b9389172aa17e8d031bb01ccb4301b35447" translate="yes" xml:space="preserve">
          <source>Different APIs. Usually there's a need to learn a completely new API such as &lt;code&gt;thenCompose&lt;/code&gt; or &lt;code&gt;thenAccept&lt;/code&gt;, which can also vary across platforms.</source>
          <target state="translated">다른 API. 일반적으로 플랫폼마다 다를 수있는 &lt;code&gt;thenCompose&lt;/code&gt; 또는 &lt;code&gt;thenAccept&lt;/code&gt; 와 같은 완전히 새로운 API를 배워야합니다 .</target>
        </trans-unit>
        <trans-unit id="1f9f0627015d50fd47a8bae9f4260f05c039adc0" translate="yes" xml:space="preserve">
          <source>Different programming model. Similar to callbacks, the programming model moves away from a top-down imperative approach to a compositional model with chained calls. Traditional program structures such as loops, exception handling, etc. usually are no longer valid in this model.</source>
          <target state="translated">다른 프로그래밍 모델. 콜백과 유사하게 프로그래밍 모델은 하향식 명령 방식에서 체인 호출이있는 구성 모델로 이동합니다. 루프, 예외 처리 등과 같은 기존 프로그램 구조는 일반적으로이 모델에서 더 이상 유효하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5b6ebe83d80fe2194d1dbdb6663e40c82621031e" translate="yes" xml:space="preserve">
          <source>Difficulty of nested callbacks. Usually a function that is used as a callback, often ends up needing its own callback. This leads to a series of nested callbacks which lead to incomprehensible code. The pattern is often referred to as the titled christmas tree (brace represent branches of the tree).</source>
          <target state="translated">중첩 된 콜백의 어려움 일반적으로 콜백으로 사용되는 함수는 종종 자체 콜백이 필요합니다. 이로 인해 일련의 중첩 된 콜백이 발생하여 이해할 수없는 코드가 생성됩니다. 이 패턴은 종종 제목이 지정된 크리스마스 트리라고합니다 (중괄호는 나무의 가지를 나타냄).</target>
        </trans-unit>
        <trans-unit id="07461fdd8bbd77721cfe447edf9e4bd20cbd0023" translate="yes" xml:space="preserve">
          <source>Directory structure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cafb3aec55e92698494c582358ea45304a23574b" translate="yes" xml:space="preserve">
          <source>Disable internal declaration export</source>
          <target state="translated">내부 선언 내보내기 비활성화</target>
        </trans-unit>
        <trans-unit id="78dfcd9c50f960bd4c21e40451e983a8a020ea02" translate="yes" xml:space="preserve">
          <source>Disambiguating targets</source>
          <target state="translated">명확한 목표</target>
        </trans-unit>
        <trans-unit id="78a8653f70041e9014354e7e97dbb680df00d5a7" translate="yes" xml:space="preserve">
          <source>Discontinued deprecated artifacts in the compiler distribution</source>
          <target state="translated">컴파일러 배포에서 더 이상 사용되지 않는 아티팩트</target>
        </trans-unit>
        <trans-unit id="e9bbf50fb8b45100c1b7a2539b0951ff336c730d" translate="yes" xml:space="preserve">
          <source>Dispatchers and threads</source>
          <target state="translated">디스패처 및 스레드</target>
        </trans-unit>
        <trans-unit id="3b6491a4ba67aed4b435bfa8449b41c8a6251b06" translate="yes" xml:space="preserve">
          <source>Disposes the handle. It must not be &lt;a href=&quot;get&quot;&gt;used&lt;/a&gt; after that.</source>
          <target state="translated">손잡이를 버립니다. 그 후에는 &lt;a href=&quot;get&quot;&gt;사용&lt;/a&gt; 해서는 안됩니다 .</target>
        </trans-unit>
        <trans-unit id="6ee7951db01f07d84c88c38e4f1920c53234ce4b" translate="yes" xml:space="preserve">
          <source>Disposes the handle. It must not be used after that.</source>
          <target state="translated">손잡이를 버립니다. 그 후에는 사용해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="ec06ecc113854f061fc6d9ffbd14d296f147a792" translate="yes" xml:space="preserve">
          <source>Distinctions</source>
          <target state="translated">Distinctions</target>
        </trans-unit>
        <trans-unit id="76ea7428fc14a51fd5358254584c79f7dac47e89" translate="yes" xml:space="preserve">
          <source>Divides this value by the other value.</source>
          <target state="translated">이 값을 다른 값으로 나눕니다.</target>
        </trans-unit>
        <trans-unit id="c9aa55dcc69c2c71abf561fe3b47e1527e2ddf90" translate="yes" xml:space="preserve">
          <source>Do not forget about &lt;a href=&quot;http://www.oracle.com/technetwork/java/effectivejava-136174.html&quot;&gt;Effective Java, 3rd Edition&lt;/a&gt;, Item 13: &lt;em&gt;Override clone judiciously&lt;/em&gt;.</source>
          <target state="translated">에 대해 잊지 마세요 &lt;a href=&quot;http://www.oracle.com/technetwork/java/effectivejava-136174.html&quot;&gt;효과적인 자바, 제 3 판&lt;/a&gt; , 항목 13 : &lt;em&gt;재정의 복제를 신중하게&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="7b23d9bbdfefc85d448394a6669411db77eac0ed" translate="yes" xml:space="preserve">
          <source>Do not give up early! Make all the exercises green to finish the course:</source>
          <target state="translated">일찍 포기하지 마십시오! 코스를 마치려면 모든 운동을 녹색으로 만드십시오.</target>
        </trans-unit>
        <trans-unit id="604339b2897e84ca95cb164180153aa9b92f9ccd" translate="yes" xml:space="preserve">
          <source>Do not put a space before &lt;code&gt;?&lt;/code&gt; used to mark a nullable type: &lt;code&gt;String?&lt;/code&gt;</source>
          <target state="translated">전에 공백을 두지 &lt;code&gt;?&lt;/code&gt; 널 입력 가능 유형을 표시하는 데 사용됨 : &lt;code&gt;String?&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2993b64fe7851ac2250a1c240b336811f7c23e79" translate="yes" xml:space="preserve">
          <source>Do not put a space before an opening parenthesis in a primary constructor declaration, method declaration or method call.</source>
          <target state="translated">기본 생성자 선언, 메서드 선언 또는 메서드 호출에서 여는 괄호 앞에 공백을 넣지 마십시오.</target>
        </trans-unit>
        <trans-unit id="8d290ff51e50bef19d6cbbe1bd2888eebc0c194a" translate="yes" xml:space="preserve">
          <source>Do not put spaces around &lt;code&gt;::&lt;/code&gt;: &lt;code&gt;Foo::class&lt;/code&gt;, &lt;code&gt;String::length&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;::&lt;/code&gt; : &lt;code&gt;Foo::class&lt;/code&gt; , &lt;code&gt;String::length&lt;/code&gt; 주위에 공백을 두지 마십시오 .</target>
        </trans-unit>
        <trans-unit id="179e75f1f327ede1a349a061a2361c0d22573c01" translate="yes" xml:space="preserve">
          <source>Do not put spaces around angle brackets used to specify type parameters: &lt;code&gt;class Map&amp;lt;K, V&amp;gt; { ... }&lt;/code&gt;</source>
          <target state="translated">형식 매개 변수를 지정하는 데 사용되는 꺾쇠 괄호 주위에 공백을 두지 마십시오. &lt;code&gt;class Map&amp;lt;K, V&amp;gt; { ... }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7137f35d14dec35ee4b39dcac073fc47b316a778" translate="yes" xml:space="preserve">
          <source>Do not put spaces around unary operators (&lt;code&gt;a++&lt;/code&gt;)</source>
          <target state="translated">단항 연산자 주위에 공백을 두지 마십시오 ( &lt;code&gt;a++&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="559fcccf797927f3cddbdb303b4454b8fc3cbb07" translate="yes" xml:space="preserve">
          <source>Do not sort the method declarations alphabetically or by visibility, and do not separate regular methods from extension methods. Instead, put related stuff together, so that someone reading the class from top to bottom would be able to follow the logic of what's happening. Choose an order (either higher-level stuff first, or vice versa) and stick to it.</source>
          <target state="translated">메소드 선언을 사전 순 또는 가시성으로 정렬하지 말고 일반 메소드를 확장 메소드와 분리하지 마십시오. 대신, 관련 내용을 종합하여 클래스를 위에서 아래로 읽는 사람이 일어나고있는 논리를 따를 수 있도록하십시오. 주문을 선택하고 (높은 수준의 물건을 먼저 또는 그 반대로) 주문을 고수하십시오.</target>
        </trans-unit>
        <trans-unit id="d82e8757015cafb43eb445e49f46aa2d15a58e76" translate="yes" xml:space="preserve">
          <source>Do not use a labeled return for the last statement in a lambda.</source>
          <target state="translated">람다에서 마지막 명령문에 레이블이 지정된 리턴을 사용하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="8b093a7f1f8da84ae28f1d6753e11ea7dd1547d7" translate="yes" xml:space="preserve">
          <source>Do not use this function for huge files.</source>
          <target state="translated">대용량 파일에는이 기능을 사용하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="85fefe68a555a105dd9589b0f57bd9ed3b04f5a7" translate="yes" xml:space="preserve">
          <source>DocumentAndElementEventHandlers</source>
          <target state="translated">DocumentAndElementEventHandlers</target>
        </trans-unit>
        <trans-unit id="88f69bef493fba89ab946f2e087d0caf9b90e0d2" translate="yes" xml:space="preserve">
          <source>DocumentOrShadowRoot</source>
          <target state="translated">DocumentOrShadowRoot</target>
        </trans-unit>
        <trans-unit id="a5b968a6e012d1d2b06fecbe3c39c573a6d9708c" translate="yes" xml:space="preserve">
          <source>DocumentReadyState</source>
          <target state="translated">DocumentReadyState</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">Documentation</target>
        </trans-unit>
        <trans-unit id="3a0cc390f81644d0680cc454c11e51496fd81c3b" translate="yes" xml:space="preserve">
          <source>Documentation comments</source>
          <target state="translated">설명서 주석</target>
        </trans-unit>
        <trans-unit id="1d333cf81bf3bb582cb06ede8c39d94e4346b195" translate="yes" xml:space="preserve">
          <source>Documentation for a module as a whole, as well as packages in that module, is provided as a separate Markdown file, and the paths to that file is passed to Dokka using the &lt;code&gt;-include&lt;/code&gt; command line parameter or the corresponding parameters in Ant, Maven and Gradle plugins.</source>
          <target state="translated">해당 모듈의 패키지뿐만 아니라 전체 모듈에 대한 문서는 별도의 Markdown 파일로 제공되며, &lt;code&gt;-include&lt;/code&gt; 명령 줄 매개 변수 또는 Ant, Maven 및 해당 매개 변수를 사용하여 해당 파일의 경로가 Dokka로 전달됩니다. Gradle 플러그인.</target>
        </trans-unit>
        <trans-unit id="c94081ae91f83b17508d2459face00f433d22c6e" translate="yes" xml:space="preserve">
          <source>Documenting Kotlin Code</source>
          <target state="translated">코 틀린 코드 문서화</target>
        </trans-unit>
        <trans-unit id="8c20c134ae35dfbe8a7fe9c597283d56bb78d09f" translate="yes" xml:space="preserve">
          <source>Documents a value parameter of a function or a type parameter of a class, property or function. To better separate the parameter name from the description, if you prefer, you can enclose the name of the parameter in brackets. The following two syntaxes are therefore equivalent:</source>
          <target state="translated">함수의 값 매개 변수 또는 클래스, 특성 또는 함수의 유형 매개 변수를 문서화합니다. 매개 변수 이름을 설명과 더 잘 구분하기 위해 원하는 경우 매개 변수 이름을 대괄호로 묶을 수 있습니다. 따라서 다음 두 구문은 동일합니다.</target>
        </trans-unit>
        <trans-unit id="49266f90cef3d806f5f34a15d2664c581545c97e" translate="yes" xml:space="preserve">
          <source>Documents an exception which can be thrown by a method. Since Kotlin does not have checked exceptions, there is also no expectation that all possible exceptions are documented, but you can still use this tag when it provides useful information for users of the class.</source>
          <target state="translated">메소드에 의해 발생 될 수있는 예외를 문서화합니다. Kotlin은 예외를 검사하지 않았으므로 가능한 모든 예외가 문서화 될 것으로 기대하지는 않지만 클래스 사용자에게 유용한 정보를 제공 할 때이 태그를 계속 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f6db0f5a7306be8cd64173e0c7fabd018386d71f" translate="yes" xml:space="preserve">
          <source>Documents the primary constructor of a class.</source>
          <target state="translated">클래스의 기본 생성자를 문서화합니다.</target>
        </trans-unit>
        <trans-unit id="f18adbc267f261936f87731208bbfa516fad1be0" translate="yes" xml:space="preserve">
          <source>Documents the property of a class which has the specified name. This tag can be used for documenting properties declared in the primary constructor, where putting a doc comment directly before the property definition would be awkward.</source>
          <target state="translated">지정된 이름을 가진 클래스의 속성을 문서화합니다. 이 태그는 기본 생성자에서 선언 된 속성을 문서화하는 데 사용할 수 있습니다. 여기서 속성 정의 바로 앞에 문서 주석을 추가하는 것이 어색합니다.</target>
        </trans-unit>
        <trans-unit id="774992180b38d059386d310b9315ed0fe28476af" translate="yes" xml:space="preserve">
          <source>Documents the receiver of an extension function.</source>
          <target state="translated">확장 기능의 수신자를 문서화합니다.</target>
        </trans-unit>
        <trans-unit id="0a4c7c3dcf046f9c233cfa23a0f24a10a1a0bcd9" translate="yes" xml:space="preserve">
          <source>Documents the return value of a function.</source>
          <target state="translated">함수의 반환 값을 문서화합니다.</target>
        </trans-unit>
        <trans-unit id="1579785071cbfbf4e7cf75bf97e1c2e46cae5d8d" translate="yes" xml:space="preserve">
          <source>Does Kotlin have a community?</source>
          <target state="translated">코 틀린에는 커뮤니티가 있습니까?</target>
        </trans-unit>
        <trans-unit id="c6727f8ad39827f1d374d3416d8e2fc42be6ad25" translate="yes" xml:space="preserve">
          <source>Does Kotlin only target Java 6?</source>
          <target state="translated">Kotlin은 Java 6 만 대상으로합니까?</target>
        </trans-unit>
        <trans-unit id="f4ca2d4d9c6a0c693699a0dd9feaad71d708bcfe" translate="yes" xml:space="preserve">
          <source>Does not include the Kotlin standard library into the classpath</source>
          <target state="translated">Kotlin 표준 라이브러리를 클래스 경로에 포함하지 않습니다</target>
        </trans-unit>
        <trans-unit id="0df838f2d48c7a75f0c511870710f77ac1d49718" translate="yes" xml:space="preserve">
          <source>Does nothing in this ArrayList implementation.</source>
          <target state="translated">이 ArrayList 구현에서는 아무것도하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d376b12cffa9053a97f54b84ba604bc1a38aab9f" translate="yes" xml:space="preserve">
          <source>Doesn't affect a line if it doesn't contain &lt;a href=&quot;trim-margin#kotlin.text%24trimMargin%28kotlin.String%2C+kotlin.String%29%2FmarginPrefix&quot;&gt;marginPrefix&lt;/a&gt; except the first and the last blank lines.</source>
          <target state="translated">첫 번째 및 마지막 빈 행을 제외하고 &lt;a href=&quot;trim-margin#kotlin.text%24trimMargin%28kotlin.String%2C+kotlin.String%29%2FmarginPrefix&quot;&gt;marginPrefix를&lt;/a&gt; 포함하지 않으면 행에 영향을 미치지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="86d1050237805f5bef98fed1545d38f678ca7c28" translate="yes" xml:space="preserve">
          <source>Doesn't preserve the original line endings.</source>
          <target state="translated">원래 줄 끝을 유지하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fc3ec45270b94cffd4726d4162504d2aed8286b8" translate="yes" xml:space="preserve">
          <source>Dokka has plugins for Gradle, Maven and Ant, so you can integrate documentation generation into your build process.</source>
          <target state="translated">Dokka에는 Gradle, Maven 및 Ant 용 플러그인이 있으므로 문서 생성을 빌드 프로세스에 통합 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="674f2329cf52ca826ca203f63d16149b6c868108" translate="yes" xml:space="preserve">
          <source>Don't declare a method as infix if it mutates the receiver object.</source>
          <target state="translated">수신자 객체를 변경하는 경우 메소드를 삽입으로 선언하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="a7a55dbdf1fc21a3e4b49e71c869049035a76573" translate="yes" xml:space="preserve">
          <source>Don't forget to configure the &lt;a href=&quot;#configuring-dependencies&quot;&gt;standard library dependency&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#configuring-dependencies&quot;&gt;표준 라이브러리 종속성&lt;/a&gt; 을 구성하는 것을 잊지 마십시오 .</target>
        </trans-unit>
        <trans-unit id="132cf6d69030e700977aad13556944c950e60fe4" translate="yes" xml:space="preserve">
          <source>Don't include Java runtime into classpath</source>
          <target state="translated">클래스 경로에 Java 런타임을 포함시키지 마십시오</target>
        </trans-unit>
        <trans-unit id="d50dd4cf2ca5f8bf68edff09c5759784aab7da7d" translate="yes" xml:space="preserve">
          <source>Don't include Kotlin reflection implementation into classpath</source>
          <target state="translated">Kotlin 리플렉션 구현을 클래스 경로에 포함시키지 마십시오</target>
        </trans-unit>
        <trans-unit id="aad1adc11555491a7924a835262ebc43c948200a" translate="yes" xml:space="preserve">
          <source>Don't include Kotlin runtime into classpath</source>
          <target state="translated">클래스 경로에 Kotlin 런타임을 포함시키지 마십시오</target>
        </trans-unit>
        <trans-unit id="6c7fd93bb25d5d75ea22611e7f245e65f975c074" translate="yes" xml:space="preserve">
          <source>Don't put a space before &lt;code&gt;:&lt;/code&gt; when it separates a declaration and its type.</source>
          <target state="translated">앞에 공백을 넣지 마십시오 &lt;code&gt;:&lt;/code&gt; 그것은 선언과 유형을 분리 할 때.</target>
        </trans-unit>
        <trans-unit id="646bf03016f3edf964253fb0fc3017c3c4d08276" translate="yes" xml:space="preserve">
          <source>Don't split lines if the resulting two lines are also grammatically valid on their own (even if it results in a compilation error that is not directly related to the grammar of Kotlin). The following does not actually return the result of &lt;code&gt;foo()&lt;/code&gt; - it returns a special value called &lt;code&gt;Unit&lt;/code&gt;, which we'll cover later, and &lt;code&gt;foo()&lt;/code&gt; is never called.</source>
          <target state="translated">결과적인 두 줄이 문법적으로도 유효한 경우에는 줄을 나누지 마십시오 (코 틀린 문법과 직접 관련이없는 컴파일 오류가 발생하더라도). 다음은 실제의 결과를 반환하지 않습니다 &lt;code&gt;foo()&lt;/code&gt; -이 특별한라는 값 반환 &lt;code&gt;Unit&lt;/code&gt; 나중에 다룰 것이다, 그리고 &lt;code&gt;foo()&lt;/code&gt; 호출되지 않습니다를.</target>
        </trans-unit>
        <trans-unit id="09fb3893d047a836791635a0443cc9216f51e6ba" translate="yes" xml:space="preserve">
          <source>Don't use bundled Kotlin stdlib</source>
          <target state="translated">번들 Kotlin stdlib를 사용하지 마십시오</target>
        </trans-unit>
        <trans-unit id="f80cdcceee4d91537ff77825073b7036b585b343" translate="yes" xml:space="preserve">
          <source>Don't use curly braces when inserting a simple variable into a string template. Use curly braces only for longer expressions.</source>
          <target state="translated">문자열 템플릿에 간단한 변수를 삽입 할 때는 중괄호를 사용하지 마십시오. 더 긴 표현식에만 중괄호를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="81581597044514bf54d4f97266022fc991f3915e" translate="yes" xml:space="preserve">
          <source>Double</source>
          <target state="translated">Double</target>
        </trans-unit>
        <trans-unit id="3194951241cacbdd98f1aed6e5b2b42bebedb241" translate="yes" xml:space="preserve">
          <source>DoubleArray</source>
          <target state="translated">DoubleArray</target>
        </trans-unit>
        <trans-unit id="1827d562954cd23e4834e09f0e32e9b3e42fc4a5" translate="yes" xml:space="preserve">
          <source>DoubleIterator</source>
          <target state="translated">DoubleIterator</target>
        </trans-unit>
        <trans-unit id="da5c3eafb2a6fab1f0d485bd24e020a7bf7031cc" translate="yes" xml:space="preserve">
          <source>DoubleRange</source>
          <target state="translated">DoubleRange</target>
        </trans-unit>
        <trans-unit id="3cde05be63ba29d6e9c3dc318400a51421d14bf6" translate="yes" xml:space="preserve">
          <source>DoubleVar</source>
          <target state="translated">DoubleVar</target>
        </trans-unit>
        <trans-unit id="103746b98e5ac528917ab1d3e59fe03baca4727b" translate="yes" xml:space="preserve">
          <source>DoubleVarOf</source>
          <target state="translated">DoubleVarOf</target>
        </trans-unit>
        <trans-unit id="f56bdf21350350a8a2323dd95680e9a746286046" translate="yes" xml:space="preserve">
          <source>Doubles by default: &lt;code&gt;123.5&lt;/code&gt;, &lt;code&gt;123.5e10&lt;/code&gt;</source>
          <target state="translated">기본적으로 배가 : &lt;code&gt;123.5&lt;/code&gt; , &lt;code&gt;123.5e10&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="140001432d798891428681194a9dfa55bddb4614" translate="yes" xml:space="preserve">
          <source>Download and install &lt;a href=&quot;https://developer.android.com/studio/index.html&quot;&gt;Android Studio&lt;/a&gt; which includes Kotlin support out of the box.</source>
          <target state="translated">즉시 Kotlin 지원이 포함 된 &lt;a href=&quot;https://developer.android.com/studio/index.html&quot;&gt;Android Studio&lt;/a&gt; 를 다운로드하여 설치 하십시오.</target>
        </trans-unit>
        <trans-unit id="0e8ca4fb0a389212c6ed052ff927d2cd7c7cd549" translate="yes" xml:space="preserve">
          <source>Download and install the meta-runner.</source>
          <target state="translated">메타 러너를 다운로드하여 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="750aecff5e7115d4f4f730e3be7ef5843044e79b" translate="yes" xml:space="preserve">
          <source>Downloading the compiler</source>
          <target state="translated">컴파일러 다운로드</target>
        </trans-unit>
        <trans-unit id="5eeb55c228b8b7544858818654ad72eab39ff75d" translate="yes" xml:space="preserve">
          <source>DragEventInit</source>
          <target state="translated">DragEventInit</target>
        </trans-unit>
        <trans-unit id="0bb2f18a9f2730ea509eb82acef7cda97c4ce41d" translate="yes" xml:space="preserve">
          <source>DslMarker</source>
          <target state="translated">DslMarker</target>
        </trans-unit>
        <trans-unit id="51d0193dc58bcee14c37411c06f30d06e100a34c" translate="yes" xml:space="preserve">
          <source>Due to different representations, smaller types are not subtypes of bigger ones. If they were, we would have troubles of the following sort:</source>
          <target state="translated">다른 표현으로 인해 작은 유형은 더 큰 유형의 하위 유형이 아닙니다. 그렇다면 다음과 같은 문제가 생길 것입니다.</target>
        </trans-unit>
        <trans-unit id="81075e498615cc7a7ea41929fa4088ae475a42e9" translate="yes" xml:space="preserve">
          <source>Due to the current limitations, some tasks configured by the Java plugin are disabled, and the corresponding tasks added by the Kotlin plugin are used instead:</source>
          <target state="translated">현재 제한 사항으로 인해 Java 플러그인으로 구성된 일부 태스크가 사용 안함으로 설정되고 Kotlin 플러그인으로 추가 된 해당 태스크가 대신 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="5407d1d0ad8a8c1986bf04088f64de3c1cea4067" translate="yes" xml:space="preserve">
          <source>Due to the key access to elements, &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/plus&quot;&gt;&lt;code&gt;plus&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;+&lt;/code&gt;) and &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/minus&quot;&gt;&lt;code&gt;minus&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;-&lt;/code&gt;) operators work for maps differently than for other collections. &lt;code&gt;plus&lt;/code&gt; returns a &lt;code&gt;Map&lt;/code&gt; that contains elements of its both operands: a &lt;code&gt;Map&lt;/code&gt; on the left and a &lt;code&gt;Pair&lt;/code&gt; or another &lt;code&gt;Map&lt;/code&gt; on the right. When the right-hand side operand contains entries with keys present in the left-hand side &lt;code&gt;Map&lt;/code&gt;, the result map contains the entries from the right side.</source>
          <target state="translated">요소에 대한 주요 액세스 권한으로 인해 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/plus&quot;&gt; &lt;code&gt;plus&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;+&lt;/code&gt; ) 및 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/minus&quot;&gt; &lt;code&gt;minus&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;-&lt;/code&gt; ) 연산자는 다른 컬렉션과 다르게지도에 대해 작동합니다. &lt;code&gt;plus&lt;/code&gt; 는 두 피연산자 ( 왼쪽에 있는 &lt;code&gt;Map&lt;/code&gt; 과 오른쪽에있는 한 &lt;code&gt;Pair&lt;/code&gt; 또는 다른 &lt;code&gt;Map&lt;/code&gt; 요소가 포함 된 &lt;code&gt;Map&lt;/code&gt; 을 반환합니다 . 오른쪽 피연산자에 왼쪽 &lt;code&gt;Map&lt;/code&gt; 에 키 가있는 항목이 포함 된 경우 결과 맵에 오른쪽의 항목이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="5959cafc90b9976fab302fc450377426e53fb1b1" translate="yes" xml:space="preserve">
          <source>Due to the similar nature of scope functions, choosing the right one for your case can be a bit tricky. The choice mainly depends on your intent and the consistency of use in your project. Below we'll provide detailed descriptions of the distinctions between scope functions and the conventions on their usage.</source>
          <target state="translated">스코프 기능의 특성이 유사하기 때문에 귀하의 경우에 적합한 기능을 선택하는 것은 약간 까다로울 수 있습니다. 선택은 주로 프로젝트의 의도와 사용 일관성에 달려 있습니다. 아래에서는 범위 함수와 사용법에 대한 규칙의 차이점에 대한 자세한 설명을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="fbcac33cd2aae5fd2f5bd43d61fe4687672d037d" translate="yes" xml:space="preserve">
          <source>During an instance initialization, the initializer blocks are executed in the same order as they appear in the class body, interleaved with the property initializers:</source>
          <target state="translated">인스턴스 초기화 중에 이니셜 라이저 블록은 클래스 본문에 나타나는 순서대로 속성 이니셜 라이저와 인터리브됩니다.</target>
        </trans-unit>
        <trans-unit id="89eca32e31f17a93e4068b4794aa9a7213518c8c" translate="yes" xml:space="preserve">
          <source>During construction of a new instance of a derived class, the base class initialization is done as the first step (preceded only by evaluation of the arguments for the base class constructor) and thus happens before the initialization logic of the derived class is run.</source>
          <target state="translated">파생 클래스의 새 인스턴스를 생성하는 동안 기본 클래스 초기화는 첫 번째 단계 (기본 클래스 생성자에 대한 인수 평가로만 수행됨)로 수행되므로 파생 클래스의 초기화 논리가 실행되기 전에 발생합니다.</target>
        </trans-unit>
        <trans-unit id="95b790ad62c861c84e10d2d8a95af1b4cc85369a" translate="yes" xml:space="preserve">
          <source>Dynamic Type</source>
          <target state="translated">다이나믹 타입</target>
        </trans-unit>
        <trans-unit id="1bec92c134e4881eaaf2a6bd7cba072fefd54d18" translate="yes" xml:space="preserve">
          <source>Dynamic libraries are the main way to use Kotlin code from existing programs. We can use them to share our code with many platforms or languages, including JVM, &lt;a href=&quot;https://github.com/JetBrains/kotlin-native/blob/master/samples/python_extension/src/main/c/kotlin_bridge.c&quot;&gt;Python&lt;/a&gt;, iOS, Android, and others.</source>
          <target state="translated">동적 라이브러리는 기존 프로그램에서 Kotlin 코드를 사용하는 주요 방법입니다. 그것들을 사용하여 JVM, &lt;a href=&quot;https://github.com/JetBrains/kotlin-native/blob/master/samples/python_extension/src/main/c/kotlin_bridge.c&quot;&gt;Python&lt;/a&gt; , iOS, Android 등을 포함한 많은 플랫폼 또는 언어와 코드를 공유 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e0184adedf913b076626646d3f52c3b49c39ad6d" translate="yes" xml:space="preserve">
          <source>E</source>
          <target state="translated">E</target>
        </trans-unit>
        <trans-unit id="d15caa4e4c433db64527c708d6ce618053bc66c0" translate="yes" xml:space="preserve">
          <source>E.g. for next code:</source>
          <target state="translated">예를 들어 다음 코드 :</target>
        </trans-unit>
        <trans-unit id="79ee0da987021d140e8d6e8587c39d867fd71006" translate="yes" xml:space="preserve">
          <source>E.g. for the following code:</source>
          <target state="translated">예를 들어 다음 코드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b7871ed9065f6c83f82cacf6677e3ec16560ecab" translate="yes" xml:space="preserve">
          <source>EAP Builds</source>
          <target state="translated">EAP 빌드</target>
        </trans-unit>
        <trans-unit id="5bc604777adb22ae457a5473c397202e00689e23" translate="yes" xml:space="preserve">
          <source>EMPTY</source>
          <target state="translated">EMPTY</target>
        </trans-unit>
        <trans-unit id="889059f5218ab9af9e50be715febbbf437573234" translate="yes" xml:space="preserve">
          <source>ENCLOSING_MARK</source>
          <target state="translated">ENCLOSING_MARK</target>
        </trans-unit>
        <trans-unit id="2c9d04702f9d8be59da552603a90ac3e455ad308" translate="yes" xml:space="preserve">
          <source>END_PUNCTUATION</source>
          <target state="translated">END_PUNCTUATION</target>
        </trans-unit>
        <trans-unit id="0b99cebe565822c64ac5d84aecb00fe40e59cbd3" translate="yes" xml:space="preserve">
          <source>ERROR</source>
          <target state="translated">ERROR</target>
        </trans-unit>
        <trans-unit id="6f46563c4624929c3ea8e9a78058aa4bc6526dff" translate="yes" xml:space="preserve">
          <source>EUROPEAN_NUMBER</source>
          <target state="translated">EUROPEAN_NUMBER</target>
        </trans-unit>
        <trans-unit id="adc4803227e466e80770cf89d11f810e3a1d1985" translate="yes" xml:space="preserve">
          <source>EUROPEAN_NUMBER_SEPARATOR</source>
          <target state="translated">EUROPEAN_NUMBER_SEPARATOR</target>
        </trans-unit>
        <trans-unit id="6c73ba19807e39fecfb3120a9d4be19db919b958" translate="yes" xml:space="preserve">
          <source>EUROPEAN_NUMBER_TERMINATOR</source>
          <target state="translated">EUROPEAN_NUMBER_TERMINATOR</target>
        </trans-unit>
        <trans-unit id="b9318e8dd43cf90dac164eaf28c412c8270bd081" translate="yes" xml:space="preserve">
          <source>EXACTLY_ONCE</source>
          <target state="translated">EXACTLY_ONCE</target>
        </trans-unit>
        <trans-unit id="891bbd450e125f5b1ee12d035ddc1a7eef7a872c" translate="yes" xml:space="preserve">
          <source>EXPRESSION</source>
          <target state="translated">EXPRESSION</target>
        </trans-unit>
        <trans-unit id="822c0f907a120edc9af6756a2f2ce2c284f197c5" translate="yes" xml:space="preserve">
          <source>EXTENSION_RECEIVER</source>
          <target state="translated">EXTENSION_RECEIVER</target>
        </trans-unit>
        <trans-unit id="9fa15ceb7fbfcb040793c598863789e6ad8dddde" translate="yes" xml:space="preserve">
          <source>Each compilation has a default source set, which is the place for sources and dependencies that are specific to that compilation. The default source set is also used for directing other source sets to the compilation by the means of the &quot;depends on&quot; relation.</source>
          <target state="translated">각 컴파일에는 기본 소스 세트가 있으며,이 소스 세트는 해당 컴파일과 관련된 소스 및 종속성의 위치입니다. 기본 소스 세트는 또한 &quot;의존&quot;관계를 통해 다른 소스 세트를 컴파일하도록 지시하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="75794b79a3c7503d4cb9fd0d66eb5e355e381841" translate="yes" xml:space="preserve">
          <source>Each compilation is accompanied by a default &lt;a href=&quot;#configuring-source-sets&quot;&gt;source set&lt;/a&gt;, which is created automatically and should be used for sources and dependencies that are specific to that compilation. The default source set for a compilation &lt;code&gt;foo&lt;/code&gt; of a target &lt;code&gt;bar&lt;/code&gt; has the name &lt;code&gt;barFoo&lt;/code&gt;. It can also be accessed from a compilation using &lt;code&gt;defaultSourceSet&lt;/code&gt;:</source>
          <target state="translated">각 컴파일에는 자동으로 작성되는 기본 &lt;a href=&quot;#configuring-source-sets&quot;&gt;소스 세트&lt;/a&gt; 가 수반되며 해당 컴파일과 관련된 소스 및 종속성에 사용해야합니다. 대상 &lt;code&gt;bar&lt;/code&gt; 의 컴파일 &lt;code&gt;foo&lt;/code&gt; 에 대한 기본 소스 세트 의 이름은 &lt;code&gt;barFoo&lt;/code&gt; 입니다. &lt;code&gt;defaultSourceSet&lt;/code&gt; 을 사용하여 컴파일에서 액세스 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9d4e8f2c9423cf7f3b3e960de1520a01d1b94247" translate="yes" xml:space="preserve">
          <source>Each element in the list gets replaced with the &lt;a href=&quot;fill#kotlin.collections%24fill%28kotlin.collections.MutableList%28%28kotlin.collections.fill.T%29%29%2C+kotlin.collections.fill.T%29%2Fvalue&quot;&gt;value&lt;/a&gt;.</source>
          <target state="translated">목록의 각 요소는 &lt;a href=&quot;fill#kotlin.collections%24fill%28kotlin.collections.MutableList%28%28kotlin.collections.fill.T%29%29%2C+kotlin.collections.fill.T%29%2Fvalue&quot;&gt;값으로&lt;/a&gt; 바뀝니다 .</target>
        </trans-unit>
        <trans-unit id="5e2c66324047aba6ab2a31ade0c6e2c38c1338ce" translate="yes" xml:space="preserve">
          <source>Each enum constant is an object. Enum constants are separated with commas.</source>
          <target state="translated">각 열거 형 상수는 객체입니다. 열거 형 상수는 쉼표로 구분됩니다.</target>
        </trans-unit>
        <trans-unit id="288c78381723c563253b7eae6cda31fe87af7cc5" translate="yes" xml:space="preserve">
          <source>Each factory method exists in several versions. Consider them by example of the &lt;code&gt;executable&lt;/code&gt; method. All the same versions are available for all other factory methods.</source>
          <target state="translated">각 팩토리 메소드는 여러 버전으로 존재합니다. &lt;code&gt;executable&lt;/code&gt; 방법의 예제로 고려하십시오 . 다른 모든 팩토리 메소드에 대해 동일한 버전을 모두 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="286c3a296e5ddc0501582b309ba3224c6f8b3201" translate="yes" xml:space="preserve">
          <source>Each of the created frameworks contains the header file in &lt;code&gt;&amp;lt;Framework&amp;gt;/Headers/Demo.h&lt;/code&gt;. The headers do not depend on the target platform (at least with Kotlin/Native v.0.9.2). It contains the definitions for our Kotlin code and a few Kotlin-wide declarations.</source>
          <target state="translated">작성된 각 프레임 워크에는 &lt;code&gt;&amp;lt;Framework&amp;gt;/Headers/Demo.h&lt;/code&gt; 에 헤더 파일이 있습니다. 헤더는 대상 플랫폼에 의존하지 않습니다 (적어도 Kotlin / Native v.0.9.2에서는). 여기에는 Kotlin 코드에 대한 정의와 Kotlin 전체 선언이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="1ac0799f6a9a4112f1d8fe7504939fbe4d8034de" translate="yes" xml:space="preserve">
          <source>Each source set by default has its Kotlin sources under &lt;code&gt;src/&amp;lt;sourceSetName&amp;gt;/kotlin&lt;/code&gt; directory and the resources under &lt;code&gt;src/&amp;lt;sourceSetName&amp;gt;/resources&lt;/code&gt;.</source>
          <target state="translated">기본적으로 각 소스 세트에는 &lt;code&gt;src/&amp;lt;sourceSetName&amp;gt;/kotlin&lt;/code&gt; 디렉토리에 Kotlin 소스가 있고 &lt;code&gt;src/&amp;lt;sourceSetName&amp;gt;/resources&lt;/code&gt; 에 리소스가 있습니다.</target>
        </trans-unit>
        <trans-unit id="36c270f1772f1e5369f05b1e129b1452732ce2bc" translate="yes" xml:space="preserve">
          <source>Each source set has a default source directory for Kotlin sources: &lt;code&gt;src/&amp;lt;source set name&amp;gt;/kotlin&lt;/code&gt;. To add Kotlin source directories and resources to a source set, use its &lt;code&gt;kotlin&lt;/code&gt; and &lt;code&gt;resources&lt;/code&gt;&lt;code&gt;SourceDirectorySet&lt;/code&gt;s:</source>
          <target state="translated">각 소스 세트에는 Kotlin 소스에 대한 기본 소스 디렉토리 ( &lt;code&gt;src/&amp;lt;source set name&amp;gt;/kotlin&lt;/code&gt; )가 있습니다. Kotlin 소스 디렉토리 및 자원을 소스 세트에 추가하려면 해당 &lt;code&gt;kotlin&lt;/code&gt; 및 &lt;code&gt;resources&lt;/code&gt; &lt;code&gt;SourceDirectorySet&lt;/code&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="eccbae19f1793e2279bb379096b38a15107b788c" translate="yes" xml:space="preserve">
          <source>Each target includes two &lt;strong&gt;compilations&lt;/strong&gt;: &lt;code&gt;main&lt;/code&gt; and &lt;code&gt;test&lt;/code&gt; compiling product and test sources respectively. A compilation is an abstraction over a compiler invocation and described at the &lt;a href=&quot;../building-mpp-with-gradle#configuring-compilations&quot;&gt;corresponding page&lt;/a&gt;.</source>
          <target state="translated">각 대상이 포함되어 &lt;strong&gt;컴파일&lt;/strong&gt; : &lt;code&gt;main&lt;/code&gt; 와 &lt;code&gt;test&lt;/code&gt; 를 각각 컴파일 제품 및 테스트 소스를. 컴파일은 컴파일러 호출에 대한 추상화이며 &lt;a href=&quot;../building-mpp-with-gradle#configuring-compilations&quot;&gt;해당 페이지에&lt;/a&gt; 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="77cf02692234ad5fe03dd42180cdec6debe9dfd2" translate="yes" xml:space="preserve">
          <source>Earlier, Kotlin used assignments made inside a &lt;code&gt;try&lt;/code&gt; block for smart casts after the block, which could break type- and null-safety and lead to runtime failures. This release fixes this issue, making the smart casts more strict, but breaking some code that relied on such smart casts.</source>
          <target state="translated">이전에 Kotlin 은 블록 뒤의 스마트 캐스트를 위해 &lt;code&gt;try&lt;/code&gt; 블록 내부에 지정된 할당을 사용 하여 형식 및 null 안전을 중단하고 런타임 오류로 이어질 수있었습니다. 이 릴리스에서는이 문제가 해결되어 스마트 캐스트가 더 엄격 해지지 만 스마트 캐스트에 의존하는 일부 코드는 깨졌습니다.</target>
        </trans-unit>
        <trans-unit id="f3c53eb8a62fd350a8b808a2e8ad6882452c7601" translate="yes" xml:space="preserve">
          <source>Eclipse (&lt;code&gt;org.eclipse.jdt.annotation&lt;/code&gt;)</source>
          <target state="translated">이클립스 ( &lt;code&gt;org.eclipse.jdt.annotation&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="720b5dbc53190f0e13902f7885ccaf43bb9991de" translate="yes" xml:space="preserve">
          <source>Effect</source>
          <target state="translated">Effect</target>
        </trans-unit>
        <trans-unit id="4ef1415307c2764c7902e5073b06866fb4ef3897" translate="yes" xml:space="preserve">
          <source>Eight-bit UCS Transformation Format.</source>
          <target state="translated">8 비트 UCS 변환 형식.</target>
        </trans-unit>
        <trans-unit id="49fa9fd831096c82ab950bc7aa0a0a7ef8a10998" translate="yes" xml:space="preserve">
          <source>Element</source>
          <target state="translated">Element</target>
        </trans-unit>
        <trans-unit id="cffab4c6beb33b9e8e4dde3262e3a725abe28506" translate="yes" xml:space="preserve">
          <source>ElementCSSInlineStyle</source>
          <target state="translated">ElementCSSInlineStyle</target>
        </trans-unit>
        <trans-unit id="d137eed0ce5cd2a4cfee42d7643ae2ba8d6dc32f" translate="yes" xml:space="preserve">
          <source>ElementContentEditable</source>
          <target state="translated">ElementContentEditable</target>
        </trans-unit>
        <trans-unit id="ff19e297eb7330b9b685e8eed6956f8d8853a66a" translate="yes" xml:space="preserve">
          <source>ElementCreationOptions</source>
          <target state="translated">ElementCreationOptions</target>
        </trans-unit>
        <trans-unit id="70696a12cee77679875477bdbc5af610150a683d" translate="yes" xml:space="preserve">
          <source>ElementDefinitionOptions</source>
          <target state="translated">ElementDefinitionOptions</target>
        </trans-unit>
        <trans-unit id="46e6c77a0a1d3415576cf0983505dda61b4a49a4" translate="yes" xml:space="preserve">
          <source>Elements in the set returned are sorted according to the given &lt;a href=&quot;to-sorted-set#kotlin.collections%24toSortedSet%28kotlin.Array%28%28kotlin.collections.toSortedSet.T%29%29%2C+java.util.Comparator%28%28kotlin.collections.toSortedSet.T%29%29%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">반환 된 세트의 요소는 주어진 &lt;a href=&quot;to-sorted-set#kotlin.collections%24toSortedSet%28kotlin.Array%28%28kotlin.collections.toSortedSet.T%29%29%2C+java.util.Comparator%28%28kotlin.collections.toSortedSet.T%29%29%29%2Fcomparator&quot;&gt;비교기&lt;/a&gt; 에 따라 정렬됩니다 .</target>
        </trans-unit>
        <trans-unit id="d06fd310678899c14b842666da4910c5ad079e70" translate="yes" xml:space="preserve">
          <source>Elements in the set returned are sorted according to the given &lt;a href=&quot;to-sorted-set#kotlin.sequences%24toSortedSet%28kotlin.sequences.Sequence%28%28kotlin.sequences.toSortedSet.T%29%29%2C+java.util.Comparator%28%28kotlin.sequences.toSortedSet.T%29%29%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">반환 된 세트의 요소는 주어진 &lt;a href=&quot;to-sorted-set#kotlin.sequences%24toSortedSet%28kotlin.sequences.Sequence%28%28kotlin.sequences.toSortedSet.T%29%29%2C+java.util.Comparator%28%28kotlin.sequences.toSortedSet.T%29%29%29%2Fcomparator&quot;&gt;비교기&lt;/a&gt; 에 따라 정렬됩니다 .</target>
        </trans-unit>
        <trans-unit id="6a88cb2b3693e123208ae8e724fc1dc0faa56c45" translate="yes" xml:space="preserve">
          <source>Elvis Operator</source>
          <target state="translated">엘비스 운영자</target>
        </trans-unit>
        <trans-unit id="9435fb78efed9559ebdda8817e66f5e037cdb9f1" translate="yes" xml:space="preserve">
          <source>Elvis operator</source>
          <target state="translated">엘비스 연산자</target>
        </trans-unit>
        <trans-unit id="f3781e102266b0236e1e2f34ca15a94bcf3b30be" translate="yes" xml:space="preserve">
          <source>Embed source files into source map</source>
          <target state="translated">소스 파일을 소스 맵에 포함</target>
        </trans-unit>
        <trans-unit id="b467d1b8b6b53bb5ecc32ca24a87b2fec5e550f4" translate="yes" xml:space="preserve">
          <source>Embeds the body of the function with the specified qualified name into the documentation for the current element, in order to show an example of how the element could be used.</source>
          <target state="translated">요소의 사용 방법에 대한 예를 보여주기 위해 지정된 규정 된 이름의 함수 본문을 현재 요소의 문서에 포함시킵니다.</target>
        </trans-unit>
        <trans-unit id="efffc6ff2c76faf4e3da9bd05908f46360ee6c19" translate="yes" xml:space="preserve">
          <source>Empty classes aren't very interesting, so let's make a class with some &lt;em&gt;properties&lt;/em&gt;:</source>
          <target state="translated">빈 클래스는별로 흥미롭지 않으므로 몇 가지 &lt;em&gt;속성을&lt;/em&gt; 가진 클래스를 만들어 봅시다 .</target>
        </trans-unit>
        <trans-unit id="9fd5e5efc84f85d37ba0aa6b82181d579d9cc263" translate="yes" xml:space="preserve">
          <source>Empty collections</source>
          <target state="translated">빈 컬렉션</target>
        </trans-unit>
        <trans-unit id="b427299e75fecbaeeb3025bf821643b8a411487f" translate="yes" xml:space="preserve">
          <source>EmptyCoroutineContext</source>
          <target state="translated">EmptyCoroutineContext</target>
        </trans-unit>
        <trans-unit id="7ef2ebecc0cb97c031b733c92b842fed11b529d2" translate="yes" xml:space="preserve">
          <source>Enable &lt;code&gt;invokeInitializers&lt;/code&gt; option if you want the plugin to run the initialization logic from the synthetic constructor. Starting from Kotlin 1.1.3-2, it is disabled by default because of &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-18667&quot;&gt;&lt;code&gt;KT-18667&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-18668&quot;&gt;&lt;code&gt;KT-18668&lt;/code&gt;&lt;/a&gt; which will be addressed in the future.</source>
          <target state="translated">플러그인이 합성 생성자에서 초기화 로직을 실행하도록하려면 &lt;code&gt;invokeInitializers&lt;/code&gt; 옵션을 사용하십시오 . Kotlin 1.1.3-2부터는 향후에 해결 될 &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-18667&quot;&gt; &lt;code&gt;KT-18667&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://youtrack.jetbrains.com/issue/KT-18668&quot;&gt; &lt;code&gt;KT-18668&lt;/code&gt; &lt;/a&gt; 18668로 인해 기본적으로 비활성화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="6e3ada3d12644276d91abd790279f716fabc7767" translate="yes" xml:space="preserve">
          <source>Enable the official code style formatting by default starting from Kotlin 1.3 and only for new projects (old formatting can be enabled manually)</source>
          <target state="translated">Kotlin 1.3부터 ​​기본적으로 공식 코드 스타일 형식을 사용하도록 설정하고 새 프로젝트에 대해서만 사용 가능합니다 (오래된 형식은 수동으로 사용 가능).</target>
        </trans-unit>
        <trans-unit id="900f496f052ef1aab784a6675a6acce778d1fbc7" translate="yes" xml:space="preserve">
          <source>Enable verbose logging output</source>
          <target state="translated">자세한 로깅 출력 사용</target>
        </trans-unit>
        <trans-unit id="a7fde85fed255437f0dd6f222439a91515a76d1e" translate="yes" xml:space="preserve">
          <source>Enabled &lt;a href=&quot;compiler-plugins&quot;&gt;compiler plugins&lt;/a&gt;</source>
          <target state="translated">활성화 된 &lt;a href=&quot;compiler-plugins&quot;&gt;컴파일러 플러그인&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9bf2d1d72b43d7d00f66dc3259477d82291aac64" translate="yes" xml:space="preserve">
          <source>Enables Unix lines mode. In this mode, only the &lt;code&gt;'\n'&lt;/code&gt; is recognized as a line terminator.</source>
          <target state="translated">유닉스 라인 모드를 활성화합니다. 이 모드에서는 &lt;code&gt;'\n'&lt;/code&gt; 만 줄 종결 자로 인식됩니다.</target>
        </trans-unit>
        <trans-unit id="c6a24259091d007977acf52d96a64c638d463fb7" translate="yes" xml:space="preserve">
          <source>Enables case-insensitive matching.</source>
          <target state="translated">대소 문자를 구분하지 않는 일치를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="78ad37c7bf7b510807eb5d75d95837985737627a" translate="yes" xml:space="preserve">
          <source>Enables case-insensitive matching. Case comparison is Unicode-aware.</source>
          <target state="translated">대소 문자를 구분하지 않는 일치를 사용합니다. 대소 문자 비교는 유니 코드를 인식합니다.</target>
        </trans-unit>
        <trans-unit id="acf6c9c494a0dbe1b691aa73b8db57947f65afe5" translate="yes" xml:space="preserve">
          <source>Enables equivalence by canonical decomposition.</source>
          <target state="translated">표준 분해로 동등성을 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="ad1614448b99ab93c2cc9d0947ca3d403238fc64" translate="yes" xml:space="preserve">
          <source>Enables literal parsing of the pattern.</source>
          <target state="translated">패턴의 리터럴 구문 분석을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="35ed1f408c376283e160007e24f8a96d620e43ac" translate="yes" xml:space="preserve">
          <source>Enables multiline mode.</source>
          <target state="translated">여러 줄 모드를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="e1fe51857b55253ff73a9a2c9a2797fa93ec4f62" translate="yes" xml:space="preserve">
          <source>Enables the mode, when the expression &lt;code&gt;.&lt;/code&gt; matches any character, including a line terminator.</source>
          <target state="translated">expression 일 때 모드를 사용합니다 &lt;code&gt;.&lt;/code&gt; 줄 종결자를 포함하여 모든 문자와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="61f7fcd5b0acf58febf20a27beceef248b4d79e1" translate="yes" xml:space="preserve">
          <source>Enables the use of the &lt;code&gt;%&lt;/code&gt; operator for &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt; 인스턴스에 &lt;code&gt;%&lt;/code&gt; 연산자를 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="62bf98501f48e3d6638ee31f3dc892382fa44291" translate="yes" xml:space="preserve">
          <source>Enables the use of the &lt;code&gt;%&lt;/code&gt; operator for &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt; 인스턴스에 &lt;code&gt;%&lt;/code&gt; 연산자를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2d1b9cc0653169cdbc8b16ab42133b95b5cf62f4" translate="yes" xml:space="preserve">
          <source>Enables the use of the &lt;code&gt;*&lt;/code&gt; operator for &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt; 인스턴스에 &lt;code&gt;*&lt;/code&gt; 연산자를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5ec13935d7b12f8e2621b695798cfa9b310f73fb" translate="yes" xml:space="preserve">
          <source>Enables the use of the &lt;code&gt;*&lt;/code&gt; operator for &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt; 인스턴스에 &lt;code&gt;*&lt;/code&gt; 연산자를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e37cfaa4aac0c14e26761c88a4f12883f051a221" translate="yes" xml:space="preserve">
          <source>Enables the use of the &lt;code&gt;++&lt;/code&gt; operator for &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt; 인스턴스에 &lt;code&gt;++&lt;/code&gt; 연산자를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="555142761ca7eeae74a0001576503c4b52c6bb64" translate="yes" xml:space="preserve">
          <source>Enables the use of the &lt;code&gt;+&lt;/code&gt; operator for &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt; 인스턴스에 &lt;code&gt;+&lt;/code&gt; 연산자를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="29fba93702bc6b00c98feb4e72c2ec9eb8f81ccd" translate="yes" xml:space="preserve">
          <source>Enables the use of the &lt;code&gt;+&lt;/code&gt; operator for &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt; 인스턴스에 &lt;code&gt;+&lt;/code&gt; 연산자를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fcf0418be3e06165ed8f8e668f6264a1c55f1b34" translate="yes" xml:space="preserve">
          <source>Enables the use of the &lt;code&gt;--&lt;/code&gt; operator for &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt; 인스턴스에 &lt;code&gt;--&lt;/code&gt; 연산자를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b49eba52d9e61697c4a01ae81da160684a8c5dc4" translate="yes" xml:space="preserve">
          <source>Enables the use of the &lt;code&gt;-&lt;/code&gt; operator for &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt; 인스턴스에 &lt;code&gt;-&lt;/code&gt; 연산자를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c18f83d2751070b0c6b30dfd072daf35ed4491cb" translate="yes" xml:space="preserve">
          <source>Enables the use of the &lt;code&gt;-&lt;/code&gt; operator for &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt; 인스턴스에 &lt;code&gt;-&lt;/code&gt; 연산자를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b6c04c1288775e71e51d15fbd313526f30534dc7" translate="yes" xml:space="preserve">
          <source>Enables the use of the &lt;code&gt;/&lt;/code&gt; operator for &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt; 인스턴스에 &lt;code&gt;/&lt;/code&gt; 연산자를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="171342186cc81da13932d358e9a0092fadcfbb7a" translate="yes" xml:space="preserve">
          <source>Enables the use of the &lt;code&gt;/&lt;/code&gt; operator for &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt; 인스턴스에 &lt;code&gt;/&lt;/code&gt; 연산자를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e3a4e4af45919dede2113503a360a311d9019c1b" translate="yes" xml:space="preserve">
          <source>Enables the use of the unary &lt;code&gt;++&lt;/code&gt; operator for &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt; 인스턴스에 단항 &lt;code&gt;++&lt;/code&gt; 연산자를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b5570f7243cf037a733dec49cf6fb8b5598cc3a3" translate="yes" xml:space="preserve">
          <source>Enables the use of the unary &lt;code&gt;--&lt;/code&gt; operator for &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt; instances.</source>
          <target state="translated">단항의 사용 가능 &lt;code&gt;--&lt;/code&gt; 을위한 운영자 &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;의 BigDecimal&lt;/a&gt; 인스턴스를.</target>
        </trans-unit>
        <trans-unit id="e9b98fdf874bdeafb9768bfd23933d4615cfabba" translate="yes" xml:space="preserve">
          <source>Enables the use of the unary &lt;code&gt;-&lt;/code&gt; operator for &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;BigDecimal&lt;/a&gt; instances.</source>
          <target state="translated">단항의 사용 가능 &lt;code&gt;-&lt;/code&gt; 을위한 운영자 &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html&quot;&gt;의 BigDecimal&lt;/a&gt; 인스턴스를.</target>
        </trans-unit>
        <trans-unit id="d61e047cb21f08becc143f5a52736e7568f9aa72" translate="yes" xml:space="preserve">
          <source>Enables the use of the unary &lt;code&gt;-&lt;/code&gt; operator for &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;BigInteger&lt;/a&gt; instances.</source>
          <target state="translated">단항의 사용 가능 &lt;code&gt;-&lt;/code&gt; 을위한 운영자 &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/math/BigInteger.html&quot;&gt;의 BigInteger의&lt;/a&gt; 인스턴스를.</target>
        </trans-unit>
        <trans-unit id="58552fd26e8fa7feb843fdef8d3ce44846b1f9a3" translate="yes" xml:space="preserve">
          <source>Enabling experimental features</source>
          <target state="translated">실험 기능 사용</target>
        </trans-unit>
        <trans-unit id="fe70bb6ac7d4b1f90b3d1f54131e739ff3ec604d" translate="yes" xml:space="preserve">
          <source>Enabling inline classes in Gradle:</source>
          <target state="translated">Gradle에서 인라인 클래스 활성화하기 :</target>
        </trans-unit>
        <trans-unit id="2cddaef1b3907935b6973e0af7177c7b41cc1be4" translate="yes" xml:space="preserve">
          <source>Enabling inline classes in Maven</source>
          <target state="translated">Maven에서 인라인 클래스 활성화</target>
        </trans-unit>
        <trans-unit id="abb8332dea269450ae077d0adbca55842af73acc" translate="yes" xml:space="preserve">
          <source>Enabling new language constructs or relaxing limitations for existing ones.</source>
          <target state="translated">새로운 언어 구성을 활성화하거나 기존 언어에 대한 제한을 완화합니다.</target>
        </trans-unit>
        <trans-unit id="4c2ffe42c69d5ce80645de8283c5fe8b7275fcc3" translate="yes" xml:space="preserve">
          <source>Enabling the progressive mode can require you to rewrite some of your code, but it shouldn't be too much &amp;mdash; all the fixes which are enabled under progressive are carefully handpicked, reviewed, and provided with tooling migration assistance. We expect that the progressive mode will be a nice choice for any actively maintained codebases which are updated to the latest language versions quickly.</source>
          <target state="translated">프로그레시브 모드를 사용하려면 일부 코드를 다시 작성해야하지만 너무 크지 않아야합니다. 프로그레시브에서 활성화 된 모든 수정 프로그램은 신중하게 직접 선택하고 검토하며 툴링 마이그레이션 지원을 제공합니다. 최신 언어 버전으로 빠르게 업데이트되는 적극적으로 유지 관리되는 코드베이스에는 프로그레시브 모드가 적합합니다.</target>
        </trans-unit>
        <trans-unit id="2410e31d2a877c1bca39654727da50311a1d23ee" translate="yes" xml:space="preserve">
          <source>Encodes the contents of this string using the specified character set and returns the resulting byte array.</source>
          <target state="translated">지정된 문자 집합을 사용하여이 문자열의 내용을 인코딩하고 결과 바이트 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3f94b91ab41430c97f9da4fe715cc87bf63669d1" translate="yes" xml:space="preserve">
          <source>Encodes this string or its substring to an array of bytes in UTF-8 encoding.</source>
          <target state="translated">이 문자열 또는 하위 문자열을 UTF-8 인코딩의 바이트 배열로 인코딩합니다.</target>
        </trans-unit>
        <trans-unit id="88952b65da85f578e3d056e4d7d39e21191d2a4d" translate="yes" xml:space="preserve">
          <source>Encodes this string to an array of bytes in UTF-8 encoding.</source>
          <target state="translated">이 문자열을 UTF-8 인코딩의 바이트 배열로 인코딩합니다.</target>
        </trans-unit>
        <trans-unit id="656cfef3d626370283d844f1c61d9217f8d3fc5b" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.Byte%2C+kotlin.Byte%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">이 값이 지정된 &lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.Byte%2C+kotlin.Byte%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt; 보다 크지 않도록 합니다.</target>
        </trans-unit>
        <trans-unit id="c592b5bc49281936513ba6081997d620718c7dcd" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.Double%2C+kotlin.Double%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">이 값이 지정된 &lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.Double%2C+kotlin.Double%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt; 보다 크지 않도록 합니다.</target>
        </trans-unit>
        <trans-unit id="c4d569d86f5e35ed053e3095ef0285e60445aa23" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.Float%2C+kotlin.Float%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">이 값이 지정된 &lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.Float%2C+kotlin.Float%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt; 보다 크지 않도록 합니다.</target>
        </trans-unit>
        <trans-unit id="01135ec86d1739e9090b30f685121d042b98c431" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.Int%2C+kotlin.Int%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">이 값이 지정된 &lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.Int%2C+kotlin.Int%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt; 보다 크지 않도록 합니다.</target>
        </trans-unit>
        <trans-unit id="782dedb2a5052cdfca76c5418b3162085b7deb93" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.Long%2C+kotlin.Long%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">이 값이 지정된 &lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.Long%2C+kotlin.Long%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt; 보다 크지 않도록 합니다.</target>
        </trans-unit>
        <trans-unit id="28d8a80170f1b7416ef2bbfda2c35a7b80bbd456" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.Short%2C+kotlin.Short%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">이 값이 지정된 &lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.Short%2C+kotlin.Short%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt; 보다 크지 않도록 합니다.</target>
        </trans-unit>
        <trans-unit id="96f261db16afa8da791496781fa8009ef354ed31" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.UByte%2C+kotlin.UByte%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">이 값이 지정된 &lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.UByte%2C+kotlin.UByte%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt; 보다 크지 않도록 합니다.</target>
        </trans-unit>
        <trans-unit id="1b4b1359b18c494e43aef182294b0330cf92da20" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.UInt%2C+kotlin.UInt%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">이 값이 지정된 &lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.UInt%2C+kotlin.UInt%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt; 보다 크지 않도록 합니다.</target>
        </trans-unit>
        <trans-unit id="6fe4f25db6853a8b3399272a411c26fa0c6f64e4" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.ULong%2C+kotlin.ULong%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">이 값이 지정된 &lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.ULong%2C+kotlin.ULong%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt; 보다 크지 않도록 합니다.</target>
        </trans-unit>
        <trans-unit id="d019645cd6ba1dd386fdea2df4fad88850b31329" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.UShort%2C+kotlin.UShort%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">이 값이 지정된 &lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.UShort%2C+kotlin.UShort%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt; 보다 크지 않도록 합니다.</target>
        </trans-unit>
        <trans-unit id="9529283362371ceb35f0c46be993c6b3d319d9a2" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.ranges.coerceAtMost.T%2C+kotlin.ranges.coerceAtMost.T%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">이 값이 지정된 &lt;a href=&quot;../../kotlin.ranges/coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.ranges.coerceAtMost.T%2C+kotlin.ranges.coerceAtMost.T%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt; 보다 크지 않도록 합니다.</target>
        </trans-unit>
        <trans-unit id="50723df44a240655f71b8614db9893e98a21ef6f" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.Byte%2C+kotlin.Byte%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">이 값이 지정된 &lt;a href=&quot;coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.Byte%2C+kotlin.Byte%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt; 보다 크지 않도록 합니다.</target>
        </trans-unit>
        <trans-unit id="e42a63eec0e0ac707883c94b742178f1e9594b87" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.UInt%2C+kotlin.UInt%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">이 값이 지정된 &lt;a href=&quot;coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.UInt%2C+kotlin.UInt%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt; 보다 크지 않도록 합니다.</target>
        </trans-unit>
        <trans-unit id="aa0fb34e21f56f306e812998113d1de03910c92a" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not greater than the specified &lt;a href=&quot;coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.ranges.coerceAtMost.T%2C+kotlin.ranges.coerceAtMost.T%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">이 값이 지정된 &lt;a href=&quot;coerce-at-most#kotlin.ranges%24coerceAtMost%28kotlin.ranges.coerceAtMost.T%2C+kotlin.ranges.coerceAtMost.T%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt; 보다 크지 않도록 합니다.</target>
        </trans-unit>
        <trans-unit id="19c375d42f4d2bc2a22343af879580c5ad4d21e5" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.Byte%2C+kotlin.Byte%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">이 값이 지정된 &lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.Byte%2C+kotlin.Byte%29%2FminimumValue&quot;&gt;minimumValue 이상이되도록&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="aff5083914cd02a8367bf02d8c6d9d277735c245" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.Double%2C+kotlin.Double%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">이 값이 지정된 &lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.Double%2C+kotlin.Double%29%2FminimumValue&quot;&gt;minimumValue 이상이되도록&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="82118e74fa89839e0f5b1d0ee51a20e37feaba18" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.Float%2C+kotlin.Float%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">이 값이 지정된 &lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.Float%2C+kotlin.Float%29%2FminimumValue&quot;&gt;minimumValue 이상이되도록&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="c891a2e60fb263e67ec6c092a1f35152b238f973" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.Int%2C+kotlin.Int%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">이 값이 지정된 &lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.Int%2C+kotlin.Int%29%2FminimumValue&quot;&gt;minimumValue 이상이되도록&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="2caff89d57f8b0a254e5b0252fb4719adf5c08ba" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.Long%2C+kotlin.Long%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">이 값이 지정된 &lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.Long%2C+kotlin.Long%29%2FminimumValue&quot;&gt;minimumValue 이상이되도록&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="3cc25334decfc6b70d3b837359a34a88e8fea2df" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.Short%2C+kotlin.Short%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">이 값이 지정된 &lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.Short%2C+kotlin.Short%29%2FminimumValue&quot;&gt;minimumValue 이상이되도록&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="33b031b5d7c801d8dd6bba00666e31583d30223a" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.UByte%2C+kotlin.UByte%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">이 값이 지정된 &lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.UByte%2C+kotlin.UByte%29%2FminimumValue&quot;&gt;minimumValue 이상이되도록&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="9305f3aba1f8bd516f1dc6e27469835bae1cee08" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.UInt%2C+kotlin.UInt%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">이 값이 지정된 &lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.UInt%2C+kotlin.UInt%29%2FminimumValue&quot;&gt;minimumValue 이상이되도록&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="4e48692d263dcb64f5bf02b631a83489f39138a6" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.ULong%2C+kotlin.ULong%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">이 값이 지정된 &lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.ULong%2C+kotlin.ULong%29%2FminimumValue&quot;&gt;minimumValue 이상이되도록&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="36316603eaa66a130c3357bf0b5a7a8dc86a00fb" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.UShort%2C+kotlin.UShort%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">이 값이 지정된 &lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.UShort%2C+kotlin.UShort%29%2FminimumValue&quot;&gt;minimumValue 이상이되도록&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="075ba07f9a038dea1cec1b9bffd75ea3fb54ff88" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.ranges.coerceAtLeast.T%2C+kotlin.ranges.coerceAtLeast.T%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">이 값이 지정된 &lt;a href=&quot;../../kotlin.ranges/coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.ranges.coerceAtLeast.T%2C+kotlin.ranges.coerceAtLeast.T%29%2FminimumValue&quot;&gt;minimumValue 이상이되도록&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="507af5e9b2513f430e4f9a1ce31c9fab7aa336e5" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.Byte%2C+kotlin.Byte%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">이 값이 지정된 &lt;a href=&quot;coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.Byte%2C+kotlin.Byte%29%2FminimumValue&quot;&gt;minimumValue 이상이되도록&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="f36efb1bf449faf0a08f50fc913f46918231b6e0" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.UInt%2C+kotlin.UInt%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">이 값이 지정된 &lt;a href=&quot;coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.UInt%2C+kotlin.UInt%29%2FminimumValue&quot;&gt;minimumValue 이상이되도록&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="01d73e24f39678d08d61c73426cb56114a85dee2" translate="yes" xml:space="preserve">
          <source>Ensures that this value is not less than the specified &lt;a href=&quot;coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.ranges.coerceAtLeast.T%2C+kotlin.ranges.coerceAtLeast.T%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;.</source>
          <target state="translated">이 값이 지정된 &lt;a href=&quot;coerce-at-least#kotlin.ranges%24coerceAtLeast%28kotlin.ranges.coerceAtLeast.T%2C+kotlin.ranges.coerceAtLeast.T%29%2FminimumValue&quot;&gt;minimumValue 이상이되도록&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="c09bcc2e5be36bde6659db36215448f4a28b89c9" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Int%2C+kotlin.ranges.ClosedRange%28%28kotlin.Int%29%29%29%2Frange&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">이 값이 지정된 &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Int%2C+kotlin.ranges.ClosedRange%28%28kotlin.Int%29%29%29%2Frange&quot;&gt;범위&lt;/a&gt; 내에 있는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="fe8b6e2cc457ae7ed1428d7ffc40e2d0fcf710aa" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Long%2C+kotlin.ranges.ClosedRange%28%28kotlin.Long%29%29%29%2Frange&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">이 값이 지정된 &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Long%2C+kotlin.ranges.ClosedRange%28%28kotlin.Long%29%29%29%2Frange&quot;&gt;범위&lt;/a&gt; 내에 있는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="4058a8ea9636c95dbf0246f44c55ceb228dcc108" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.UInt%2C+kotlin.ranges.ClosedRange%28%28kotlin.UInt%29%29%29%2Frange&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">이 값이 지정된 &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.UInt%2C+kotlin.ranges.ClosedRange%28%28kotlin.UInt%29%29%29%2Frange&quot;&gt;범위&lt;/a&gt; 내에 있는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="7b12ca79e902892991011200a265a52c0a30e043" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.ULong%2C+kotlin.ranges.ClosedRange%28%28kotlin.ULong%29%29%29%2Frange&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">이 값이 지정된 &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.ULong%2C+kotlin.ranges.ClosedRange%28%28kotlin.ULong%29%29%29%2Frange&quot;&gt;범위&lt;/a&gt; 내에 있는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="4733bf89476d88bfd608e49b1d8787c7f370e14b" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.ranges.coerceIn.T%2C+kotlin.ranges.ClosedFloatingPointRange%28%28kotlin.ranges.coerceIn.T%29%29%29%2Frange&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">이 값이 지정된 &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.ranges.coerceIn.T%2C+kotlin.ranges.ClosedFloatingPointRange%28%28kotlin.ranges.coerceIn.T%29%29%29%2Frange&quot;&gt;범위&lt;/a&gt; 내에 있는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="d7504ca10ca1603940a6aac69287285ab9e9410d" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.Int%2C+kotlin.ranges.ClosedRange%28%28kotlin.Int%29%29%29%2Frange&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">이 값이 지정된 &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.Int%2C+kotlin.ranges.ClosedRange%28%28kotlin.Int%29%29%29%2Frange&quot;&gt;범위&lt;/a&gt; 내에 있는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="1b6b1f3c22173369d98500b0fcf1e4da111d1d5b" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.UInt%2C+kotlin.ranges.ClosedRange%28%28kotlin.UInt%29%29%29%2Frange&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">이 값이 지정된 &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.UInt%2C+kotlin.ranges.ClosedRange%28%28kotlin.UInt%29%29%29%2Frange&quot;&gt;범위&lt;/a&gt; 내에 있는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="7da6f1a8637907fa58f172b3f304c7305656ec41" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.ranges.coerceIn.T%2C+kotlin.ranges.ClosedFloatingPointRange%28%28kotlin.ranges.coerceIn.T%29%29%29%2Frange&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">이 값이 지정된 &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.ranges.coerceIn.T%2C+kotlin.ranges.ClosedFloatingPointRange%28%28kotlin.ranges.coerceIn.T%29%29%29%2Frange&quot;&gt;범위&lt;/a&gt; 내에 있는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="b559c8d692bf7a9afeee0c6bc77448ca1697db5c" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.ranges.coerceIn.T%2C+kotlin.ranges.ClosedRange%28%28kotlin.ranges.coerceIn.T%29%29%29%2Frange&quot;&gt;range&lt;/a&gt;.</source>
          <target state="translated">이 값이 지정된 &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.ranges.coerceIn.T%2C+kotlin.ranges.ClosedRange%28%28kotlin.ranges.coerceIn.T%29%29%29%2Frange&quot;&gt;범위&lt;/a&gt; 내에 있는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="7527e719a86974cfa8d1b5adcb94da5cb48f02bf" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Byte%2C+kotlin.Byte%2C+kotlin.Byte%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Byte%2C+kotlin.Byte%2C+kotlin.Byte%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">이 값이 지정된 범위 &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Byte%2C+kotlin.Byte%2C+kotlin.Byte%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt; .. &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Byte%2C+kotlin.Byte%2C+kotlin.Byte%29%2FmaximumValue&quot;&gt;maximumValue에 있도록&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="fd5d8f67cc692522c7da3307ea58b5f1af94f560" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Double%2C+kotlin.Double%2C+kotlin.Double%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Double%2C+kotlin.Double%2C+kotlin.Double%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">이 값이 지정된 범위 &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Double%2C+kotlin.Double%2C+kotlin.Double%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt; .. &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Double%2C+kotlin.Double%2C+kotlin.Double%29%2FmaximumValue&quot;&gt;maximumValue에 있도록&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="42af36c8e18fb9e0145c29d5e1bd9f331959c3b9" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Float%2C+kotlin.Float%2C+kotlin.Float%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Float%2C+kotlin.Float%2C+kotlin.Float%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">이 값이 지정된 범위 &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Float%2C+kotlin.Float%2C+kotlin.Float%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt; .. &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Float%2C+kotlin.Float%2C+kotlin.Float%29%2FmaximumValue&quot;&gt;maximumValue에 있도록&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="9720b4a5e28124e07b76cf2a6fef000470ddbda9" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Int%2C+kotlin.Int%2C+kotlin.Int%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Int%2C+kotlin.Int%2C+kotlin.Int%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">이 값이 지정된 범위 &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Int%2C+kotlin.Int%2C+kotlin.Int%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt; .. &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Int%2C+kotlin.Int%2C+kotlin.Int%29%2FmaximumValue&quot;&gt;maximumValue에 있도록&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="c20bb0db8819bb5e0f0f4f90f90370a8a1c56930" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Long%2C+kotlin.Long%2C+kotlin.Long%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Long%2C+kotlin.Long%2C+kotlin.Long%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">이 값이 지정된 범위 &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Long%2C+kotlin.Long%2C+kotlin.Long%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt; .. &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Long%2C+kotlin.Long%2C+kotlin.Long%29%2FmaximumValue&quot;&gt;maximumValue에 있도록&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="8d9bdc8f202c573d3d12671fb4b5620791854ff3" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Short%2C+kotlin.Short%2C+kotlin.Short%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Short%2C+kotlin.Short%2C+kotlin.Short%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">이 값이 지정된 범위 &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Short%2C+kotlin.Short%2C+kotlin.Short%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt; .. &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.Short%2C+kotlin.Short%2C+kotlin.Short%29%2FmaximumValue&quot;&gt;maximumValue에 있도록&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="70289eb83c7b23e71ab88b1c7e6e50ab140ba4e5" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.UByte%2C+kotlin.UByte%2C+kotlin.UByte%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.UByte%2C+kotlin.UByte%2C+kotlin.UByte%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">이 값이 지정된 범위 &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.UByte%2C+kotlin.UByte%2C+kotlin.UByte%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt; .. &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.UByte%2C+kotlin.UByte%2C+kotlin.UByte%29%2FmaximumValue&quot;&gt;maximumValue에 있도록&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="d48bc4d50d5dd56a76012fda43c787d319920175" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.UInt%2C+kotlin.UInt%2C+kotlin.UInt%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.UInt%2C+kotlin.UInt%2C+kotlin.UInt%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">이 값이 지정된 범위 &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.UInt%2C+kotlin.UInt%2C+kotlin.UInt%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt; .. &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.UInt%2C+kotlin.UInt%2C+kotlin.UInt%29%2FmaximumValue&quot;&gt;maximumValue에 있도록&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="3ae8d9596f0becbc9456de88903607686b84ce77" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.ULong%2C+kotlin.ULong%2C+kotlin.ULong%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.ULong%2C+kotlin.ULong%2C+kotlin.ULong%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">이 값이 지정된 범위 &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.ULong%2C+kotlin.ULong%2C+kotlin.ULong%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt; .. &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.ULong%2C+kotlin.ULong%2C+kotlin.ULong%29%2FmaximumValue&quot;&gt;maximumValue에 있도록&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="0fa19a167412bd0da54b14b00304794203a40431" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.UShort%2C+kotlin.UShort%2C+kotlin.UShort%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.UShort%2C+kotlin.UShort%2C+kotlin.UShort%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">이 값이 지정된 범위 &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.UShort%2C+kotlin.UShort%2C+kotlin.UShort%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt; .. &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.UShort%2C+kotlin.UShort%2C+kotlin.UShort%29%2FmaximumValue&quot;&gt;maximumValue에 있도록&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="ce38f4a83c7fbcdfa026b1f70a70063b1633ac68" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">이 값이 지정된 범위 &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt; .. &lt;a href=&quot;../../kotlin.ranges/coerce-in#kotlin.ranges%24coerceIn%28kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%29%2FmaximumValue&quot;&gt;maximumValue에 있도록&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="647c656799e54b0803ef954fc0e566593ebeec57" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.Byte%2C+kotlin.Byte%2C+kotlin.Byte%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.Byte%2C+kotlin.Byte%2C+kotlin.Byte%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">이 값이 지정된 범위 &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.Byte%2C+kotlin.Byte%2C+kotlin.Byte%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt; .. &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.Byte%2C+kotlin.Byte%2C+kotlin.Byte%29%2FmaximumValue&quot;&gt;maximumValue에 있도록&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="085b13d77397d17582ba9674bfe9a3b3ef4bc0d0" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.UInt%2C+kotlin.UInt%2C+kotlin.UInt%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.UInt%2C+kotlin.UInt%2C+kotlin.UInt%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">이 값이 지정된 범위 &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.UInt%2C+kotlin.UInt%2C+kotlin.UInt%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt; .. &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.UInt%2C+kotlin.UInt%2C+kotlin.UInt%29%2FmaximumValue&quot;&gt;maximumValue에 있도록&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="23b80d6e104e5ec2c30cca729487bf7441f1cff3" translate="yes" xml:space="preserve">
          <source>Ensures that this value lies in the specified range &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt;..&lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%29%2FmaximumValue&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="translated">이 값이 지정된 범위 &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%29%2FminimumValue&quot;&gt;minimumValue&lt;/a&gt; .. &lt;a href=&quot;coerce-in#kotlin.ranges%24coerceIn%28kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%2C+kotlin.ranges.coerceIn.T%29%2FmaximumValue&quot;&gt;maximumValue에 있도록&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="c7194e06a3b4d1c91d8aea774c5500019b5129fd" translate="yes" xml:space="preserve">
          <source>Entries of the map are iterated in the order they were specified.</source>
          <target state="translated">맵의 항목은 지정된 순서대로 반복됩니다.</target>
        </trans-unit>
        <trans-unit id="19172e9e47fee4109f3d1d86c3076acdc36822f2" translate="yes" xml:space="preserve">
          <source>Entry</source>
          <target state="translated">Entry</target>
        </trans-unit>
        <trans-unit id="20588ae8e5c269292d35f9dfffa8f2eb3fd3c259" translate="yes" xml:space="preserve">
          <source>Enum</source>
          <target state="translated">Enum</target>
        </trans-unit>
        <trans-unit id="35748b339b75707aa86eccdc826e9c484f210273" translate="yes" xml:space="preserve">
          <source>Enum Classes</source>
          <target state="translated">열거 형 클래스</target>
        </trans-unit>
        <trans-unit id="b2e5e902b1971489c8bd86ea7e44ac1bef195074" translate="yes" xml:space="preserve">
          <source>Enum Values</source>
          <target state="translated">열거 형 값</target>
        </trans-unit>
        <trans-unit id="385eabe2319af7be5d69418344d6f590f2823047" translate="yes" xml:space="preserve">
          <source>Enum classes</source>
          <target state="translated">열거 형 클래스</target>
        </trans-unit>
        <trans-unit id="937325799c883439aa3b4e58a52c889a2d66fae0" translate="yes" xml:space="preserve">
          <source>Enum constants can also declare their own anonymous classes:</source>
          <target state="translated">열거 형 상수는 자체 익명 클래스를 선언 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="a0bb971b8a00934d25b661b15120131432511336" translate="yes" xml:space="preserve">
          <source>Enum entries cannot contain nested types other than inner classes (deprecated in Kotlin 1.2).</source>
          <target state="translated">열거 형 항목은 내부 클래스 이외의 중첩 유형을 포함 할 수 없습니다 (Kotlin 1.2에서 더 이상 사용되지 않음).</target>
        </trans-unit>
        <trans-unit id="f4b6073e28f6c79e9fe65d95b5913ed2917af776" translate="yes" xml:space="preserve">
          <source>Enum that can be used to specify behaviour of the &lt;code&gt;copyRecursively()&lt;/code&gt; function in exceptional conditions.</source>
          <target state="translated">예외적 인 조건에서 &lt;code&gt;copyRecursively()&lt;/code&gt; 함수 의 동작을 지정하는 데 사용할 수있는 열거 형입니다 .</target>
        </trans-unit>
        <trans-unit id="0b7ef4706b4e2944c06aaa4c03af39bc96de6a9b" translate="yes" xml:space="preserve">
          <source>Enums can be mapped to either Kotlin enum or integral values, depending on heuristics and the &lt;a href=&quot;#definition-file-hints&quot;&gt;definition file hints&lt;/a&gt;.</source>
          <target state="translated">휴리스틱 및 &lt;a href=&quot;#definition-file-hints&quot;&gt;정의 파일 힌트&lt;/a&gt; 에 따라 열거 형을 Kotlin 열거 형 또는 정수 값에 매핑 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7a9900d84e1403f9c455cfd34c5bb3f62971e633" translate="yes" xml:space="preserve">
          <source>Equality</source>
          <target state="translated">Equality</target>
        </trans-unit>
        <trans-unit id="6b22c83cbad3afd7779a656e495c44a1b27cd751" translate="yes" xml:space="preserve">
          <source>Equality and inequality operators</source>
          <target state="translated">평등과 불평등 연산자</target>
        </trans-unit>
        <trans-unit id="748ebc730a71bae7868135d1accc56922b028b39" translate="yes" xml:space="preserve">
          <source>Equality checks: &lt;code&gt;a == b&lt;/code&gt; and &lt;code&gt;a != b&lt;/code&gt;</source>
          <target state="translated">평등 검사 : &lt;code&gt;a == b&lt;/code&gt; 및 &lt;code&gt;a != b&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7f2f6a15cf8da2b27e5a4af47b58e7ad71c0b3d9" translate="yes" xml:space="preserve">
          <source>Error</source>
          <target state="translated">Error</target>
        </trans-unit>
        <trans-unit id="039a53d57231960ec224d61b8349bfe18518e3b0" translate="yes" xml:space="preserve">
          <source>Error handling can be complicated. The propagation and chaining of errors aren't always straightforward.</source>
          <target state="translated">오류 처리가 복잡 할 수 있습니다. 오류의 전파 및 연쇄가 항상 간단한 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="c52aa93f970c79972bc37d5c3c59e2a8620d085a" translate="yes" xml:space="preserve">
          <source>Error handling is complicated. The nesting model makes error handling and propagation of these somewhat more complicated.</source>
          <target state="translated">오류 처리가 복잡합니다. 중첩 모델은 이러한 오류 처리 및 전파를 다소 복잡하게 만듭니다.</target>
        </trans-unit>
        <trans-unit id="78f2140dbbcc9fd8d65b0ee8b553a347bb18737b" translate="yes" xml:space="preserve">
          <source>ErrorEventInit</source>
          <target state="translated">ErrorEventInit</target>
        </trans-unit>
        <trans-unit id="358338848dd4deed29a7bd14128aad9bacc42494" translate="yes" xml:space="preserve">
          <source>Errors and exceptions</source>
          <target state="translated">오류 및 예외</target>
        </trans-unit>
        <trans-unit id="b0063eeadf598a7f91e76579d25f31225af1d74a" translate="yes" xml:space="preserve">
          <source>Escaping for Java identifiers that are keywords in Kotlin</source>
          <target state="translated">Kotlin에서 키워드 인 Java 식별자 이스케이프</target>
        </trans-unit>
        <trans-unit id="1d25fd0a9340484bebe5803f5ab67a703d5f008c" translate="yes" xml:space="preserve">
          <source>Escaping is done in the conventional way, with a backslash. See &lt;a href=&quot;#characters&quot;&gt;Characters&lt;/a&gt; above for the list of supported escape sequences.</source>
          <target state="translated">이스케이프는 백 슬래시와 함께 일반적인 방식으로 수행됩니다. 지원되는 이스케이프 시퀀스 목록은 위의 &lt;a href=&quot;#characters&quot;&gt;문자를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c10f3e33eb7fdf58c0e3673d8f5975481200d9d0" translate="yes" xml:space="preserve">
          <source>Essentially, coroutines are light-weight threads. They are launched with &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/launch.html&quot;&gt;launch&lt;/a&gt;&lt;em&gt;coroutine builder&lt;/em&gt; in a context of some &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/coroutine-scope.html&quot;&gt;CoroutineScope&lt;/a&gt;. Here we are launching a new coroutine in the &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-global-scope/index.html&quot;&gt;GlobalScope&lt;/a&gt;, meaning that the lifetime of the new coroutine is limited only by the lifetime of the whole application.</source>
          <target state="translated">본질적으로 코 루틴은 가벼운 실입니다. 일부 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/coroutine-scope.html&quot;&gt;CoroutineScope&lt;/a&gt; 의 컨텍스트에서 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/launch.html&quot;&gt;실행 &lt;/a&gt;&lt;em&gt;코 루틴 빌더&lt;/em&gt; 로 시작 됩니다. 여기서는 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-global-scope/index.html&quot;&gt;GlobalScope&lt;/a&gt; 에서 새로운 코 루틴을 시작합니다 . 즉, 새로운 코 루틴의 수명은 전체 응용 프로그램의 수명에 의해서만 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="59a9b2e5945e0cbc814d0dde5b0e8a0a95ba5259" translate="yes" xml:space="preserve">
          <source>Evaluation order of constructor arguments regarding &lt;code&gt;&amp;lt;clinit&amp;gt;&lt;/code&gt; call</source>
          <target state="translated">&lt;code&gt;&amp;lt;clinit&amp;gt;&lt;/code&gt; 호출 에 대한 생성자 인수의 평가 순서</target>
        </trans-unit>
        <trans-unit id="2d12eda121ccf292f1e6f3b8e534f5576492a3f2" translate="yes" xml:space="preserve">
          <source>Even if you don't know Python, this document should hopefully be a useful introduction to Kotlin, in particular if you are used to other dynamically typed languages. However, if you're coming from a Java background, you're probably better off diving directly into the excellent &lt;a href=&quot;../../reference/index&quot;&gt;official docs&lt;/a&gt; (from which this doc has drawn a lot of inspiration). To some extent, you can try to write Java code and look stuff up whenever what you're trying to do doesn't work - and some IDEs can even automatically convert Java code to Kotlin.</source>
          <target state="translated">파이썬을 모르더라도이 문서가 Kotlin에 대한 유용한 소개가 될 것입니다. 특히 다른 동적 형식 언어에 익숙한 경우 더욱 그렇습니다. 그러나 Java 배경에서 온다면 훌륭한 &lt;a href=&quot;../../reference/index&quot;&gt;공식 문서&lt;/a&gt; (이 문서에서 많은 영감을 얻었습니다)에 직접 뛰어 드는 것이 좋습니다 . 어느 정도까지는 Java 코드를 작성하려고 시도 할 때마다 작동하지 않을 수 있습니다. 일부 IDE는 Java 코드를 Kotlin으로 자동 변환 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="e9ecf8ca9a3f1b27484055f2b1906e1ef4a4efef" translate="yes" xml:space="preserve">
          <source>Even if your type is not supported directly, you can write a &lt;code&gt;Parceler&lt;/code&gt; mapping object for it.</source>
          <target state="translated">유형이 직접 지원되지 &lt;code&gt;Parceler&lt;/code&gt; 맵핑 오브젝트를 작성할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="aea29208b1c90e49c372500ccead9244a9c7a1fb" translate="yes" xml:space="preserve">
          <source>Even more examples are on &lt;a href=&quot;https://github.com/JetBrains/kotlin-examples&quot;&gt;GitHub&lt;/a&gt;</source>
          <target state="translated">더 많은 예제는 &lt;a href=&quot;https://github.com/JetBrains/kotlin-examples&quot;&gt;GitHub&lt;/a&gt; 에 있습니다.</target>
        </trans-unit>
        <trans-unit id="7d8c30df9df1ce8e280dcdfa32923dbef67a465a" translate="yes" xml:space="preserve">
          <source>Even more examples are on &lt;a href=&quot;https://github.com/JetBrains/kotlin-examples&quot;&gt;GitHub&lt;/a&gt;.</source>
          <target state="translated">더 많은 예제가 &lt;a href=&quot;https://github.com/JetBrains/kotlin-examples&quot;&gt;GitHub&lt;/a&gt; 에 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a1385120f004f9f61f7aeb2f15c759f3b41d4f34" translate="yes" xml:space="preserve">
          <source>Even more specifically, if you declare a &lt;a href=&quot;object-declarations#companion-objects&quot;&gt;companion object&lt;/a&gt; inside your class, you'll be able to call its members with the same syntax as calling static methods in Java/C#, using only the class name as a qualifier.</source>
          <target state="translated">더 구체적으로, 클래스 내 에서 &lt;a href=&quot;object-declarations#companion-objects&quot;&gt;컴패니언 객체&lt;/a&gt; 를 선언 하면 클래스 이름 만 한정자로 사용하여 Java / C #에서 정적 메서드를 호출하는 것과 동일한 구문으로 멤버를 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3897d9606879be1a26c2336653ed95ac6602ce46" translate="yes" xml:space="preserve">
          <source>Even so, sometimes we have high-level program logic that implies type safety instead. For example:</source>
          <target state="translated">그럼에도 불구하고 때로는 유형 안전성을 암시하는 고급 프로그램 로직이 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="dbd96bf60af2cd93858a146fdca307b624b21c7a" translate="yes" xml:space="preserve">
          <source>Even though it is the most preferred way to provide OSGi support, unfortunately it couldn't be done for now due to so called &lt;a href=&quot;http://wiki.osgi.org/wiki/Split_Packages&quot;&gt;&quot;package split&quot; issue&lt;/a&gt; that couldn't be easily eliminated and such a big change is not planned for now. There is &lt;code&gt;Require-Bundle&lt;/code&gt; feature but it is not the best option too and not recommended to use. So it was decided to make a separate artifact for OSGi.</source>
          <target state="translated">OSGi 지원을 제공하는 것이 가장 선호되는 방법이지만 불행히도 쉽게 제거 할 수없는 소위 &lt;a href=&quot;http://wiki.osgi.org/wiki/Split_Packages&quot;&gt;&quot;패키지 분할&quot;문제&lt;/a&gt; 로 인해 지금은이 작업을 수행 할 수 없었으며 이러한 큰 변화는 현재 계획되어 있지 않습니다. 가 &lt;code&gt;Require-Bundle&lt;/code&gt; 기능을하지만 너무하고 사용하지 않을 것을 권장 최선의 선택이 아니다. 따라서 OSGi에 대해 별도의 아티팩트를 작성하기로 결정했습니다.</target>
        </trans-unit>
        <trans-unit id="dcd39b20440b49172a45b9ff20743790f496a088" translate="yes" xml:space="preserve">
          <source>Even when we navigate with an index, it does not introduce any overhead:</source>
          <target state="translated">인덱스를 탐색 할 때에도 오버 헤드가 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ad8919ace091b14011c6439cfd5e1707b58f5abd" translate="yes" xml:space="preserve">
          <source>Event</source>
          <target state="translated">Event</target>
        </trans-unit>
        <trans-unit id="564c33e26b4fec29a028538c0231da4cb00a4e5b" translate="yes" xml:space="preserve">
          <source>EventInit</source>
          <target state="translated">EventInit</target>
        </trans-unit>
        <trans-unit id="0df10d5eb9f31c564291131f6209eb2538b12219" translate="yes" xml:space="preserve">
          <source>EventListener</source>
          <target state="translated">EventListener</target>
        </trans-unit>
        <trans-unit id="ac26147cb05290648f581f7f492a1f694d0c3ae7" translate="yes" xml:space="preserve">
          <source>EventListenerOptions</source>
          <target state="translated">EventListenerOptions</target>
        </trans-unit>
        <trans-unit id="f03fb9318f09e45d9f3193bb10d8e5967dae15e7" translate="yes" xml:space="preserve">
          <source>EventModifierInit</source>
          <target state="translated">EventModifierInit</target>
        </trans-unit>
        <trans-unit id="7618aa295e59ea02d44ad33999a0594b78372453" translate="yes" xml:space="preserve">
          <source>EventSourceInit</source>
          <target state="translated">EventSourceInit</target>
        </trans-unit>
        <trans-unit id="06d2da8cd620cdca5a8c4a25bc54d444bda9ad32" translate="yes" xml:space="preserve">
          <source>EventTarget</source>
          <target state="translated">EventTarget</target>
        </trans-unit>
        <trans-unit id="073c07d94b8dd1ed6194a2e9a28519adc1dcd7c9" translate="yes" xml:space="preserve">
          <source>Ever since version 1.0, Kotlin supported expressions with complex control flow, such as try-catch expressions and inline function calls. Such code is valid according to the Java Virtual Machine specification. Unfortunately, some bytecode processing tools do not handle such code quite well when such expressions are present in the arguments of constructor calls.</source>
          <target state="translated">버전 1.0 이후로 Kotlin은 try-catch 표현식 및 인라인 함수 호출과 같은 복잡한 제어 흐름이있는 표현식을 지원했습니다. 이러한 코드는 Java Virtual Machine 사양에 따라 유효합니다. 불행히도, 일부 바이트 코드 처리 도구는 그러한 표현식이 생성자 호출의 인수에 존재할 때 그러한 코드를 잘 처리하지 못합니다.</target>
        </trans-unit>
        <trans-unit id="8e9af70e11b1ca73e5219a9e463119c7c9692b0b" translate="yes" xml:space="preserve">
          <source>Every Android developer knows well the &lt;code&gt;findViewById()&lt;/code&gt; function. It is, without a doubt, a source of potential bugs and nasty code which is hard to read and support. While there are several libraries available that provide solutions to this problem, those libraries require annotating fields for each exposed &lt;code&gt;View&lt;/code&gt;.</source>
          <target state="translated">모든 Android 개발자는 &lt;code&gt;findViewById()&lt;/code&gt; 함수를 잘 알고 있습니다 . 의심 할 여지없이, 잠재적 인 버그와 불쾌한 코드의 소스는 읽고 지원하기가 어렵습니다. 이 문제에 대한 솔루션을 제공하는 여러 라이브러리가 있지만 해당 라이브러리에는 노출 된 각 &lt;code&gt;View&lt;/code&gt; 에 대한 주석 필드가 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="d44024cf002cece75b7307b0c5a4734b9f467460" translate="yes" xml:space="preserve">
          <source>Every C macro that expands to a constant is represented as a Kotlin property. Other macros are not supported. However, they can be exposed manually by wrapping them with supported declarations. E.g. function-like macro &lt;code&gt;FOO&lt;/code&gt; can be exposed as function &lt;code&gt;foo&lt;/code&gt; by &lt;a href=&quot;#adding-custom-declarations&quot;&gt;adding the custom declaration&lt;/a&gt; to the library:</source>
          <target state="translated">상수로 확장되는 모든 C 매크로는 Kotlin 속성으로 표시됩니다. 다른 매크로는 지원되지 않습니다. 그러나 지원되는 선언으로 감싸서 수동으로 노출시킬 수 있습니다. 매크로 예와 같은 기능 &lt;code&gt;FOO&lt;/code&gt; 는 기능으로 노출 될 수 &lt;code&gt;foo&lt;/code&gt; 에 의해 &lt;a href=&quot;#adding-custom-declarations&quot;&gt;사용자 정의 선언을 추가&lt;/a&gt; 도서관을 :</target>
        </trans-unit>
        <trans-unit id="e28c8f8f3e50c8bace74c95cde8a3b93f881cbbf" translate="yes" xml:space="preserve">
          <source>Every Kotlin course created with EduTools is structured as a list of lessons. Each lesson contains tasks. A task has the following components: a description, a &lt;code&gt;Task.kt&lt;/code&gt; file with exercise code, a &lt;code&gt;Tests.kt&lt;/code&gt; file with the task check, and any other files needed for the learner to complete the task.</source>
          <target state="translated">EduTools로 만든 모든 Kotlin 과정은 수업 목록으로 구성됩니다. 각 수업에는 작업이 포함되어 있습니다. 설명, : 작업은 다음과 같은 구성 요소가 &lt;code&gt;Task.kt&lt;/code&gt; 의 운동 코드,와 파일 &lt;code&gt;Tests.kt&lt;/code&gt; 의 작업 검사와 파일 및 작업을 완료하는 학습자에 필요한 다른 파일을.</target>
        </trans-unit>
        <trans-unit id="712f339f3b7f6b2c24d611d29b336e0fa8a399cb" translate="yes" xml:space="preserve">
          <source>Every Kotlin file should belong to a &lt;em&gt;package&lt;/em&gt;. This is somewhat similar to modules in Python, but files need to explicitly declare which package they belong to, and a package implicitly comes into existence whenever any file declares itself to belong to that package (as opposed to explicitly defining a module with &lt;code&gt;__init__.py&lt;/code&gt; and having all the files in that directory implicitly belong to the module). The package declaration must go on the top of the file:</source>
          <target state="translated">모든 Kotlin 파일은 &lt;em&gt;패키지에&lt;/em&gt; 속해야 &lt;em&gt;합니다&lt;/em&gt; . 이것은 파이썬의 모듈과 다소 비슷하지만 파일은 자신이 속한 패키지를 명시 적으로 선언해야하며 파일이 패키지에 속한다고 선언 할 때마다 패키지가 암시 적으로 존재합니다 ( &lt;code&gt;__init__.py&lt;/code&gt; 로 모듈을 명시 적으로 정의하는 것과는 반대) 해당 디렉토리의 모든 파일을 내재적으로 모듈에 속하게 함). 패키지 선언은 파일 맨 위에 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="957184e810ecd33124979aa181b56fb181e3cf91" translate="yes" xml:space="preserve">
          <source>Every block tag begins on a new line and starts with the &lt;code&gt;@&lt;/code&gt; character.</source>
          <target state="translated">모든 블록 태그는 줄 바꿈으로 시작하고 &lt;code&gt;@&lt;/code&gt; 문자로 시작 합니다.</target>
        </trans-unit>
        <trans-unit id="ef355dc6d7b5ce7246012bd3c8a9e56856406957" translate="yes" xml:space="preserve">
          <source>Every class that doesn't explicitly declare a parent class inherits from &lt;code&gt;Any&lt;/code&gt;, which is the root of the class hierarchy (similar to &lt;code&gt;object&lt;/code&gt; in Python) - more on &lt;a href=&quot;inheritance&quot;&gt;inheritance&lt;/a&gt; later. Via &lt;code&gt;Any&lt;/code&gt;, every class automatically has the following functions:</source>
          <target state="translated">부모 클래스를 명시 적으로 선언하지 않는 모든 클래스는 클래스 상속의 기초 인 &lt;code&gt;Any&lt;/code&gt; ( 파이썬의 &lt;code&gt;object&lt;/code&gt; 와 유사 )에서 &lt;a href=&quot;inheritance&quot;&gt;상속&lt;/a&gt; 합니다. &lt;code&gt;Any&lt;/code&gt; 를 통해 모든 클래스에는 자동으로 다음 기능이 있습니다.</target>
        </trans-unit>
        <trans-unit id="b953ba083693f71dab9d629490a3304ec341e941" translate="yes" xml:space="preserve">
          <source>Every enum constant has properties to obtain its name and position in the enum class declaration:</source>
          <target state="translated">모든 열거 형 상수에는 열거 형 클래스 선언에서 이름과 위치를 얻는 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="bcac05684e2dee81d1bf6970400ecaf8f8b3e967" translate="yes" xml:space="preserve">
          <source>Every file implicitly imports its own package and a number of built-in Kotlin and Java packages.</source>
          <target state="translated">모든 파일은 자체 패키지와 여러 내장 Kotlin 및 Java 패키지를 내재적으로 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="fa667469f4a415e1b99572742732f58821dc8630" translate="yes" xml:space="preserve">
          <source>Every number type has a class method to create a new instance from the related simple type. Also, there is an instance method to extract a simple value back. Schematically, declarations look like that:</source>
          <target state="translated">모든 숫자 유형에는 관련 단순 유형에서 새 인스턴스를 작성하는 클래스 메소드가 있습니다. 또한 간단한 값을 다시 추출하는 인스턴스 메소드가 있습니다. 스키마 적으로 선언은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a3a0dbd972838d1fbe40227514fc9c6be8e290db" translate="yes" xml:space="preserve">
          <source>Every number type supports the following conversions:</source>
          <target state="translated">모든 숫자 유형은 다음 변환을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="ef6da45848820d599c1a8937a78be5d39dd0ed0f" translate="yes" xml:space="preserve">
          <source>Every release ships with a standalone version of the compiler. We can download it from &lt;a href=&quot;https://github.com/JetBrains/kotlin/releases/tag/v1.3.41&quot;&gt;GitHub Releases&lt;/a&gt;. The latest release is 1.3.41.</source>
          <target state="translated">모든 릴리스에는 독립형 버전의 컴파일러가 제공됩니다. &lt;a href=&quot;https://github.com/JetBrains/kotlin/releases/tag/v1.3.41&quot;&gt;GitHub Releases&lt;/a&gt; 에서 다운로드 할 수 있습니다 . 최신 릴리스는 1.3.41입니다.</target>
        </trans-unit>
        <trans-unit id="b5994533aa728b6d163f7ab516212133e02265cf" translate="yes" xml:space="preserve">
          <source>Every task has a description that you can read in the &lt;strong&gt;Task Description&lt;/strong&gt; panel (&lt;strong&gt;View -&amp;gt; Tool Windows -&amp;gt; Task Description&lt;/strong&gt;) and exercise code in the &lt;code&gt;Task.kt&lt;/code&gt; file:</source>
          <target state="translated">모든 작업에는 &lt;strong&gt;작업 설명&lt;/strong&gt; 패널 ( &lt;strong&gt;보기-&amp;gt; 도구 창-&amp;gt; 작업 설명&lt;/strong&gt; ) 에서 읽을 수있는 설명 과 &lt;code&gt;Task.kt&lt;/code&gt; 파일의 연습 코드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="f71a789415d6265a0917595a076f9b20d52fb16d" translate="yes" xml:space="preserve">
          <source>Every variable must be &lt;em&gt;declared&lt;/em&gt;. Any attempt to use a variable that hasn't been declared yet is a syntax error; thus, you are protected from accidentally assigning to a misspelled variable. The declaration also decides what kind of data you are allowed to store in the variable.</source>
          <target state="translated">모든 변수를 &lt;em&gt;선언&lt;/em&gt; 해야합니다 . 아직 선언되지 않은 변수를 사용하려는 시도는 구문 오류입니다. 따라서 철자가 틀린 변수에 실수로 할당되지 않도록 보호됩니다. 선언은 또한 변수에 어떤 종류의 데이터를 저장할 수 있는지 결정합니다.</target>
        </trans-unit>
        <trans-unit id="0a05c1370418c2c91be6a0f9821dc8a88ccc505e" translate="yes" xml:space="preserve">
          <source>Evolving the binary format</source>
          <target state="translated">이진 형식의 진화</target>
        </trans-unit>
        <trans-unit id="6f5937facdbbf8929ff49ee312426d57efa74c7e" translate="yes" xml:space="preserve">
          <source>Examination of small programs leads to the conclusion that requiring exception specifications could both enhance developer productivity and enhance code quality, but experience with large software projects suggests a different result &amp;ndash; decreased productivity and little or no increase in code quality.</source>
          <target state="translated">작은 프로그램을 조사하면 예외 사양을 요구하면 개발자 생산성이 향상되고 코드 품질이 향상 될 수 있지만 대규모 소프트웨어 프로젝트를 경험 한 결과 생산성이 떨어지고 코드 품질이 거의 또는 전혀 향상되지 않은 다른 결과가 나타납니다.</target>
        </trans-unit>
        <trans-unit id="eb9c01b9dbc6f514c62cdb6301f33220ca486e01" translate="yes" xml:space="preserve">
          <source>Examine generated C headers</source>
          <target state="translated">생성 된 C 헤더 검사</target>
        </trans-unit>
        <trans-unit id="d9d56a471acee54c2001672aeebac5f1e0d96e35" translate="yes" xml:space="preserve">
          <source>Examining the compilation output</source>
          <target state="translated">컴파일 출력 검사</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="206722f0c6e1e021a292d1476c4112863bbd4e5b" translate="yes" xml:space="preserve">
          <source>Example: Destructuring Declarations and Maps</source>
          <target state="translated">예 : 선언 및 맵 구조화</target>
        </trans-unit>
        <trans-unit id="7d45f296f4ddd9ed3cee1886a7d1ff14b49f0db4" translate="yes" xml:space="preserve">
          <source>Example: Function Composition</source>
          <target state="translated">예 : 기능 구성</target>
        </trans-unit>
        <trans-unit id="1c713110ecc4fd6c64069db38531c3b22e08794a" translate="yes" xml:space="preserve">
          <source>Example: Returning Two Values from a Function</source>
          <target state="translated">예 : 함수에서 두 값 반환</target>
        </trans-unit>
        <trans-unit id="73c4272f37511fc890854594e8d12c23cd698331" translate="yes" xml:space="preserve">
          <source>Example: we declare</source>
          <target state="translated">예 : 우리는 선언합니다</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="20049bc069b0a04404c23d571b5e0b56f0660c02" translate="yes" xml:space="preserve">
          <source>Exception</source>
          <target state="translated">Exception</target>
        </trans-unit>
        <trans-unit id="86f1f3751a3e3d2c3f35d7e1533ba929fc329127" translate="yes" xml:space="preserve">
          <source>Exception Classes</source>
          <target state="translated">예외 클래스</target>
        </trans-unit>
        <trans-unit id="b4b0dfe7027c1d349ba13a7e79558e44ec341bd8" translate="yes" xml:space="preserve">
          <source>Exception handling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d52b1546eba125cf4b7e9f2f57a0230bf95d128b" translate="yes" xml:space="preserve">
          <source>Exception handling and supervision</source>
          <target state="translated">예외 처리 및 감독</target>
        </trans-unit>
        <trans-unit id="300a6d9d09e23a4f70d97fbd823c96cef62aaa3c" translate="yes" xml:space="preserve">
          <source>Exception propagation</source>
          <target state="translated">예외 전파</target>
        </trans-unit>
        <trans-unit id="c8af2ec677c43cacf18cf6f5b90ea5a3d11acf50" translate="yes" xml:space="preserve">
          <source>Exception thrown when top level variable is accessed from incorrect execution context.</source>
          <target state="translated">잘못된 실행 컨텍스트에서 최상위 변수에 액세스하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3cb1749c83c04a86b034d9fd59faf83d742f3547" translate="yes" xml:space="preserve">
          <source>Exception thrown whenever freezing is not possible.</source>
          <target state="translated">동결이 불가능할 때마다 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="ff5162e9f6b4f048737649b87ce2adb1e4ad5cdf" translate="yes" xml:space="preserve">
          <source>Exception thrown whenever we attempt to mutate frozen objects.</source>
          <target state="translated">고정 된 객체를 변경하려고 할 때마다 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="ce1f90f3a94299d612d1161a67a6e4ea9633a574" translate="yes" xml:space="preserve">
          <source>Exception: factory functions used to create instances of classes can have the same name as the class being created:</source>
          <target state="translated">예외 : 클래스 인스턴스를 작성하는 데 사용되는 팩토리 함수는 작성중인 클래스와 동일한 이름을 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cd3dfbe79fda3a9d92de67b1bd4f1dc9f60ab723" translate="yes" xml:space="preserve">
          <source>Exceptions</source>
          <target state="translated">Exceptions</target>
        </trans-unit>
        <trans-unit id="d10e8b2bdd0f1d5efdff34cd7ab9bdecd596bcec" translate="yes" xml:space="preserve">
          <source>Exceptions aggregation</source>
          <target state="translated">예외 집계</target>
        </trans-unit>
        <trans-unit id="4b745a5fdde0d75970ed0ed55a2060a9894aef88" translate="yes" xml:space="preserve">
          <source>Exceptions in supervised coroutines</source>
          <target state="translated">감독 코 루틴의 예외</target>
        </trans-unit>
        <trans-unit id="e553b09c329e1f113754f2dbaac3b3aaf0533a57" translate="yes" xml:space="preserve">
          <source>Exceptions pretty much work like they do in Python. You &lt;em&gt;throw&lt;/em&gt; (raise) one with &lt;code&gt;throw&lt;/code&gt;:</source>
          <target state="translated">예외는 파이썬에서와 마찬가지로 거의 작동합니다. 당신은 &lt;em&gt;던져&lt;/em&gt; (인상) 하나 &lt;code&gt;throw&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d438cc2c39f9e526b7cf5e3357c8b6419b9dcc06" translate="yes" xml:space="preserve">
          <source>Exceptions that can be passed to the &lt;code&gt;onError&lt;/code&gt; function:</source>
          <target state="translated">&lt;code&gt;onError&lt;/code&gt; 함수에 전달할 수있는 예외 :</target>
        </trans-unit>
        <trans-unit id="f726a3681e0553bff6da8faa113a1eabe65c5771" translate="yes" xml:space="preserve">
          <source>Excludes the element from the generated documentation. Can be used for elements which are not part of the official API of a module but still have to be visible externally.</source>
          <target state="translated">생성 된 문서에서 요소를 제외합니다. 모듈의 공식 API에 속하지 않지만 여전히 외부에서 볼 수 있어야하는 요소에 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4078b4cde7d9aaf6040def926ac6643dd634780c" translate="yes" xml:space="preserve">
          <source>Execute &lt;code&gt;./gradlew check&lt;/code&gt; and you will see that the tests are run three times, on JVM, on JS, and on Native!</source>
          <target state="translated">&lt;code&gt;./gradlew check&lt;/code&gt; 실행 하면 테스트가 JVM, JS 및 Native에서 세 번 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="117e5acbf802d6c99917aa10544e8a741a3c69ad" translate="yes" xml:space="preserve">
          <source>Execute if not null</source>
          <target state="translated">null이 아닌 경우 실행</target>
        </trans-unit>
        <trans-unit id="0e0ab7b9797ada82aa57a130049c898a5290b92b" translate="yes" xml:space="preserve">
          <source>Executes provided block under lock with raw pointer to the data stored in the buffer. Block is executed under the spinlock, and must be short.</source>
          <target state="translated">버퍼에 저장된 데이터에 대한 원시 포인터로 잠금 상태에서 제공된 블록을 실행합니다. 블록은 스핀 록 아래에서 실행되며 짧아야합니다.</target>
        </trans-unit>
        <trans-unit id="488594846cc639e778f89f8eaac0b080be7fbb88" translate="yes" xml:space="preserve">
          <source>Executes provided block under lock with the raw data buffer. Block is executed under the spinlock, and must be short.</source>
          <target state="translated">원시 데이터 버퍼로 잠금 상태에서 제공된 블록을 실행합니다. 블록은 스핀 록 아래에서 실행되며 짧아야합니다.</target>
        </trans-unit>
        <trans-unit id="614d4cb3f8799274e5d1a02ed4102a8b920ee64f" translate="yes" xml:space="preserve">
          <source>Executes the given &lt;a href=&quot;measure-nano-time#kotlin.system%24measureNanoTime%28kotlin.Function0%28%28kotlin.Unit%29%29%29%2Fblock&quot;&gt;block&lt;/a&gt; and returns elapsed time in nanoseconds.</source>
          <target state="translated">주어진 &lt;a href=&quot;measure-nano-time#kotlin.system%24measureNanoTime%28kotlin.Function0%28%28kotlin.Unit%29%29%29%2Fblock&quot;&gt;블록을&lt;/a&gt; 실행하고 경과 시간을 나노초로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4ebd143fb53cb41967744a45798d8a8e88db909b" translate="yes" xml:space="preserve">
          <source>Executes the given &lt;a href=&quot;measure-time-micros#kotlin.system%24measureTimeMicros%28kotlin.Function0%28%28kotlin.Unit%29%29%29%2Fblock&quot;&gt;block&lt;/a&gt; and returns elapsed time in microseconds (Kotlin/Native only).</source>
          <target state="translated">주어진 &lt;a href=&quot;measure-time-micros#kotlin.system%24measureTimeMicros%28kotlin.Function0%28%28kotlin.Unit%29%29%29%2Fblock&quot;&gt;블록을&lt;/a&gt; 실행하고 경과 시간을 마이크로 초로 반환합니다 (Kotlin / Native 만 해당).</target>
        </trans-unit>
        <trans-unit id="282e807ef96dd3abe00f20fdafa99797e00b480d" translate="yes" xml:space="preserve">
          <source>Executes the given &lt;a href=&quot;measure-time-millis#kotlin.system%24measureTimeMillis%28kotlin.Function0%28%28kotlin.Unit%29%29%29%2Fblock&quot;&gt;block&lt;/a&gt; and returns elapsed time in milliseconds.</source>
          <target state="translated">주어진 &lt;a href=&quot;measure-time-millis#kotlin.system%24measureTimeMillis%28kotlin.Function0%28%28kotlin.Unit%29%29%29%2Fblock&quot;&gt;블록을&lt;/a&gt; 실행하고 경과 시간을 밀리 초 단위로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d24b7f053f3eea01fc7419110ea4ca2bce2ddaeb" translate="yes" xml:space="preserve">
          <source>Executes the given &lt;a href=&quot;read#kotlin.concurrent%24read%28java.util.concurrent.locks.ReentrantReadWriteLock%2C+kotlin.Function0%28%28kotlin.concurrent.read.T%29%29%29%2Faction&quot;&gt;action&lt;/a&gt; under the read lock of this lock.</source>
          <target state="translated">이 잠금의 읽기 잠금 에서 지정된 &lt;a href=&quot;read#kotlin.concurrent%24read%28java.util.concurrent.locks.ReentrantReadWriteLock%2C+kotlin.Function0%28%28kotlin.concurrent.read.T%29%29%29%2Faction&quot;&gt;조치를&lt;/a&gt; 실행합니다 .</target>
        </trans-unit>
        <trans-unit id="a0d41a196bd1c586aa870febe53b2e0a6dac0ff8" translate="yes" xml:space="preserve">
          <source>Executes the given &lt;a href=&quot;use#kotlin%24use%28kotlin.use.T%2C+kotlin.Function1%28%28kotlin.use.T%2C+kotlin.use.R%29%29%29%2Fblock&quot;&gt;block&lt;/a&gt; function on this resource and then closes it down correctly whether an exception is thrown or not.</source>
          <target state="translated">이 자원에 대해 주어진 &lt;a href=&quot;use#kotlin%24use%28kotlin.use.T%2C+kotlin.Function1%28%28kotlin.use.T%2C+kotlin.use.R%29%29%29%2Fblock&quot;&gt;블록&lt;/a&gt; 기능을 실행 한 다음 예외 발생 여부에 관계없이 올바르게 종료합니다.</target>
        </trans-unit>
        <trans-unit id="2e0781fbc1659638abe69b290403b74d1e477a6d" translate="yes" xml:space="preserve">
          <source>Executes the given &lt;a href=&quot;use#kotlin.io%24use%28kotlin.io.use.T%2C+kotlin.Function1%28%28kotlin.io.use.T%2C+kotlin.io.use.R%29%29%29%2Fblock&quot;&gt;block&lt;/a&gt; function on this resource and then closes it down correctly whether an exception is thrown or not.</source>
          <target state="translated">이 자원에 대해 주어진 &lt;a href=&quot;use#kotlin.io%24use%28kotlin.io.use.T%2C+kotlin.Function1%28%28kotlin.io.use.T%2C+kotlin.io.use.R%29%29%29%2Fblock&quot;&gt;블록&lt;/a&gt; 기능을 실행 한 다음 예외 발생 여부에 관계없이 올바르게 종료합니다.</target>
        </trans-unit>
        <trans-unit id="2c1c3a22034c156ae3b217a9a4c32c610ee18bd6" translate="yes" xml:space="preserve">
          <source>Executes the given &lt;a href=&quot;with-lock#kotlin.concurrent%24withLock%28java.util.concurrent.locks.Lock%2C+kotlin.Function0%28%28kotlin.concurrent.withLock.T%29%29%29%2Faction&quot;&gt;action&lt;/a&gt; under this lock.</source>
          <target state="translated">이 잠금 상태 에서 지정된 &lt;a href=&quot;with-lock#kotlin.concurrent%24withLock%28java.util.concurrent.locks.Lock%2C+kotlin.Function0%28%28kotlin.concurrent.withLock.T%29%29%29%2Faction&quot;&gt;동작을&lt;/a&gt; 실행합니다 .</target>
        </trans-unit>
        <trans-unit id="67c84cfb8baeaffcb837ab0b1446834489eeab45" translate="yes" xml:space="preserve">
          <source>Executes the given &lt;a href=&quot;write#kotlin.concurrent%24write%28java.util.concurrent.locks.ReentrantReadWriteLock%2C+kotlin.Function0%28%28kotlin.concurrent.write.T%29%29%29%2Faction&quot;&gt;action&lt;/a&gt; under the write lock of this lock.</source>
          <target state="translated">이 잠금의 쓰기 잠금 하에서 주어진 &lt;a href=&quot;write#kotlin.concurrent%24write%28java.util.concurrent.locks.ReentrantReadWriteLock%2C+kotlin.Function0%28%28kotlin.concurrent.write.T%29%29%29%2Faction&quot;&gt;조치를&lt;/a&gt; 실행합니다 .</target>
        </trans-unit>
        <trans-unit id="d878f68e2a355fbb917f2568270a4b7dcfb4a592" translate="yes" xml:space="preserve">
          <source>Executes the given function &lt;a href=&quot;repeat#kotlin%24repeat%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;action&lt;/a&gt; specified number of &lt;a href=&quot;repeat#kotlin%24repeat%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Unit%29%29%29%2Ftimes&quot;&gt;times&lt;/a&gt;.</source>
          <target state="translated">주어진 함수의 실행 &lt;a href=&quot;repeat#kotlin%24repeat%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Unit%29%29%29%2Faction&quot;&gt;동작이&lt;/a&gt; 수 지정된 &lt;a href=&quot;repeat#kotlin%24repeat%28kotlin.Int%2C+kotlin.Function1%28%28kotlin.Int%2C+kotlin.Unit%29%29%29%2Ftimes&quot;&gt;시간&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5d7ee5a9194bd33546aeecbed83957e3a6b1fb66" translate="yes" xml:space="preserve">
          <source>Executes the given function &lt;a href=&quot;synchronized#kotlin%24synchronized%28kotlin.Any%2C+kotlin.Function0%28%28kotlin.synchronized.R%29%29%29%2Fblock&quot;&gt;block&lt;/a&gt; while holding the monitor of the given object &lt;a href=&quot;synchronized#kotlin%24synchronized%28kotlin.Any%2C+kotlin.Function0%28%28kotlin.synchronized.R%29%29%29%2Flock&quot;&gt;lock&lt;/a&gt;.</source>
          <target state="translated">주어진 객체 &lt;a href=&quot;synchronized#kotlin%24synchronized%28kotlin.Any%2C+kotlin.Function0%28%28kotlin.synchronized.R%29%29%29%2Flock&quot;&gt;잠금&lt;/a&gt; 의 모니터를 유지하면서 주어진 기능 &lt;a href=&quot;synchronized#kotlin%24synchronized%28kotlin.Any%2C+kotlin.Function0%28%28kotlin.synchronized.R%29%29%29%2Fblock&quot;&gt;블록&lt;/a&gt; 을 실행합니다 .</target>
        </trans-unit>
        <trans-unit id="e41faf78521557eb6736e0bf3af395d2b7982be4" translate="yes" xml:space="preserve">
          <source>Executing a lambda on non-null objects: &lt;code&gt;let&lt;/code&gt;</source>
          <target state="translated">null이 아닌 객체에서 람다 실행 : &lt;code&gt;let&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9cf1a2716f1a2c670bf0c7de278d2a8e68d7667f" translate="yes" xml:space="preserve">
          <source>Executing a statement if null</source>
          <target state="translated">널인 경우 명령문 실행</target>
        </trans-unit>
        <trans-unit id="3c269bf863f985e09a56ca0835c97eb0941d25b9" translate="yes" xml:space="preserve">
          <source>Expected declarations never contain any implementation code.</source>
          <target state="translated">예상되는 선언에는 구현 코드가 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b718f8c3a83788b1b360cc38380401a994fb4892" translate="yes" xml:space="preserve">
          <source>Experimental</source>
          <target state="translated">Experimental</target>
        </trans-unit>
        <trans-unit id="d621d7a06ece519175e16b02c031c6928f80477a" translate="yes" xml:space="preserve">
          <source>Experimental API Markers</source>
          <target state="translated">실험적인 API 마커</target>
        </trans-unit>
        <trans-unit id="ac76b852a915773325e2a6aa597d5290cd384ec5" translate="yes" xml:space="preserve">
          <source>Experimental APIs, subject to change in future versions of Kotlin.</source>
          <target state="translated">실험적 API. 향후 버전의 Kotlin에서 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="83e69bded5eee52fb9cf80af633d0b035eb4533a" translate="yes" xml:space="preserve">
          <source>Experimental DSL for declaring custom function contracts.</source>
          <target state="translated">맞춤형 기능 계약을 선언하기위한 실험용 DSL.</target>
        </trans-unit>
        <trans-unit id="0d95a6a73703895596be46e50da232129664280d" translate="yes" xml:space="preserve">
          <source>Experimental features</source>
          <target state="translated">실험적인 특징</target>
        </trans-unit>
        <trans-unit id="5d7f1cf8e07153923c6d0b21531a1643339069a4" translate="yes" xml:space="preserve">
          <source>Experimental features usually graduate to the stable status after some iterations.</source>
          <target state="translated">실험적 특징은 일반적으로 일부 반복 후에 안정적인 상태로 졸업합니다.</target>
        </trans-unit>
        <trans-unit id="95839ce792e67ff3e4fc9c17515cf67b4d2ce6bc" translate="yes" xml:space="preserve">
          <source>Experimental marker annotations must meet several requirements:</source>
          <target state="translated">실험 마커 주석은 다음과 같은 여러 요구 사항을 충족해야합니다.</target>
        </trans-unit>
        <trans-unit id="a9a30d212b365f3c57c7ff6cfb07a356fa6aff18" translate="yes" xml:space="preserve">
          <source>Experimental metadata publishing mode</source>
          <target state="translated">실험적인 메타 데이터 게시 모드</target>
        </trans-unit>
        <trans-unit id="798815b51c596e7360bb82efdbdec703b1bb1941" translate="yes" xml:space="preserve">
          <source>Experimental status of experimental API markers</source>
          <target state="translated">실험적인 API 마커의 실험 상태</target>
        </trans-unit>
        <trans-unit id="ada450325004db70f7b9f62cf11736e270c333f9" translate="yes" xml:space="preserve">
          <source>Experimental status of inline classes</source>
          <target state="translated">인라인 클래스의 실험 상태</target>
        </trans-unit>
        <trans-unit id="7238f4bce9d5c771de41a0852b1ae8eb6443e037" translate="yes" xml:space="preserve">
          <source>Experimental status of unsigned integers</source>
          <target state="translated">부호없는 정수의 실험 상태</target>
        </trans-unit>
        <trans-unit id="be95734df15b21d8571ecd278c36ee5d08b31707" translate="yes" xml:space="preserve">
          <source>ExperimentalContracts</source>
          <target state="translated">ExperimentalContracts</target>
        </trans-unit>
        <trans-unit id="ad810ef395525b8fdd1e4947c449bf2f1eccd04b" translate="yes" xml:space="preserve">
          <source>ExperimentalMultiplatform</source>
          <target state="translated">ExperimentalMultiplatform</target>
        </trans-unit>
        <trans-unit id="ef6b4c3b738ea2aedb5f203fffec0f3eedea7b14" translate="yes" xml:space="preserve">
          <source>ExperimentalStdlibApi</source>
          <target state="translated">ExperimentalStdlibApi</target>
        </trans-unit>
        <trans-unit id="c12c682ee6126acad804bc0d465ec31016ca1fff" translate="yes" xml:space="preserve">
          <source>ExperimentalTypeInference</source>
          <target state="translated">ExperimentalTypeInference</target>
        </trans-unit>
        <trans-unit id="f0e4f46aed2ac7c2ff93ed970bdbe71a48bfc4ca" translate="yes" xml:space="preserve">
          <source>ExperimentalUnsignedTypes</source>
          <target state="translated">ExperimentalUnsignedTypes</target>
        </trans-unit>
        <trans-unit id="7aa3684808a420bd5ec930091efde83abe389d26" translate="yes" xml:space="preserve">
          <source>Explicit Conversions</source>
          <target state="translated">명시 적 전환</target>
        </trans-unit>
        <trans-unit id="39b1b23e65cf21583e2e4ee9f34c127726f32ce5" translate="yes" xml:space="preserve">
          <source>Explicit return types</source>
          <target state="translated">명시 적 반환 유형</target>
        </trans-unit>
        <trans-unit id="b32cb310fac463afd22fd6fd3737a2207dc234c9" translate="yes" xml:space="preserve">
          <source>Explicitly declaring the return type is &lt;a href=&quot;#explicit-return-types&quot;&gt;optional&lt;/a&gt; when this can be inferred by the compiler:</source>
          <target state="translated">컴파일러가이를 유추 할 수있는 경우 반환 유형을 명시 적으로 선언하는 것은 &lt;a href=&quot;#explicit-return-types&quot;&gt;선택 사항입니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="43336edd2de8a8c0d6ca6212bebd882f4b6d4909" translate="yes" xml:space="preserve">
          <source>Exponentation: &lt;code&gt;pow&lt;/code&gt; (an extension function), &lt;code&gt;sqrt&lt;/code&gt;, &lt;code&gt;hypot&lt;/code&gt;, &lt;code&gt;exp&lt;/code&gt;, &lt;code&gt;expm1&lt;/code&gt;;</source>
          <target state="translated">지수 : &lt;code&gt;pow&lt;/code&gt; (확장 함수), &lt;code&gt;sqrt&lt;/code&gt; , &lt;code&gt;hypot&lt;/code&gt; , &lt;code&gt;exp&lt;/code&gt; , &lt;code&gt;expm1&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="51b5379cf4a7b819639a6ede1381a5a13b164f83" translate="yes" xml:space="preserve">
          <source>ExportObjCClass</source>
          <target state="translated">ExportObjCClass</target>
        </trans-unit>
        <trans-unit id="43edbf4bd908e79b67863854024df0a7c2323414" translate="yes" xml:space="preserve">
          <source>Exporting dependencies in frameworks</source>
          <target state="translated">프레임 워크에서 종속성 내보내기</target>
        </trans-unit>
        <trans-unit id="5b17190de402201512ee799bb88cd7f8d0a18cf4" translate="yes" xml:space="preserve">
          <source>Exposes the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date&quot;&gt;Date API&lt;/a&gt; to Kotlin.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date&quot;&gt;Date API&lt;/a&gt; 를 Kotlin에 노출합니다 .</target>
        </trans-unit>
        <trans-unit id="b2e20d3d831015a9df71cf80fbd82aafb9cb6d98" translate="yes" xml:space="preserve">
          <source>Exposes the &lt;a href=&quot;https://developer.mozilla.org/en/DOM/console&quot;&gt;console API&lt;/a&gt; to Kotlin.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en/DOM/console&quot;&gt;콘솔 API&lt;/a&gt; 를 Kotlin에 노출합니다 .</target>
        </trans-unit>
        <trans-unit id="6ab1b33548d4fca15fffc5b58c1ec41e7907a41b" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON&quot;&gt;JSON object&lt;/a&gt; to Kotlin.</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON&quot;&gt;JSON 객체&lt;/a&gt; 를 Kotlin에 노출합니다 .</target>
        </trans-unit>
        <trans-unit id="e4a6243c9409724b2e58fee6d381c89fa19c64f2" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval&quot;&gt;eval function&lt;/a&gt; to Kotlin.</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval&quot;&gt;평가 기능&lt;/a&gt; 을 Kotlin에 노출합니다 .</target>
        </trans-unit>
        <trans-unit id="5a8fa21de53c1f3a28b2872d04dfaa83193015b1" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined&quot;&gt;undefined property&lt;/a&gt; to Kotlin.</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined&quot;&gt;정의되지 않은 속성&lt;/a&gt; 을 Kotlin에 노출합니다 .</target>
        </trans-unit>
        <trans-unit id="0e14fd5fe707f7f567a5aee1be266c99ea9b049d" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/AbstractWorker&quot;&gt;AbstractWorker&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/AbstractWorker&quot;&gt;AbstractWorker&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="abec735cbcc57f96c140390409f054112384559d" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt; to Kotlin</source>
          <target state="translated">자바 스크립트 &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="2e178f9b3c8329a8ac144e4d638b00b44aead423" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ArrayBufferView&quot;&gt;ArrayBufferView&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ArrayBufferView&quot;&gt;ArrayBufferView&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="78bf228bd96b7863df8dc0302a649e46544534fc" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/AudioTrack&quot;&gt;AudioTrack&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/AudioTrack&quot;&gt;AudioTrack&lt;/a&gt; 을 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="8a5e4a699c98b135404243956f1da06ae6a3c23f" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Blob&quot;&gt;Blob&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Blob&quot;&gt;Blob&lt;/a&gt; 을 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="10f83d0d9f3ccc86a3665754da71ca7079fcc1cb" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Body&quot;&gt;Body&lt;/a&gt; to Kotlin</source>
          <target state="translated">자바 스크립트 &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Body&quot;&gt;본문&lt;/a&gt; 을 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="f20783e43ed5e6cdee4b24ca5efd181d2a07c885" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CSS&quot;&gt;CSS&lt;/a&gt; to Kotlin</source>
          <target state="translated">자바 스크립트 &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CSS&quot;&gt;CSS&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="66ff222964356401a7820893d69dd953e4824a2b" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CSSRule&quot;&gt;CSSRule&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CSSRule&quot;&gt;CSSRule&lt;/a&gt; 을 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="d1da806b511e98e9a4f6a3f2ae167ef1360a0255" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CSSRuleList&quot;&gt;CSSRuleList&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CSSRuleList&quot;&gt;CSSRuleList&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="a2bd067acc6233cd661be4648c3abc2e07636126" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CSSStyleDeclaration&quot;&gt;CSSStyleDeclaration&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CSSStyleDeclaration&quot;&gt;CSSStyleDeclaration&lt;/a&gt; 을 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="4e3900fa446a47f9057628dbfc49e11ebfcab28b" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Cache&quot;&gt;Cache&lt;/a&gt; to Kotlin</source>
          <target state="translated">자바 스크립트 &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Cache&quot;&gt;캐시&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="bbdbd782d9e88901e1772158661da5e7a3db90bb" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CacheStorage&quot;&gt;CacheStorage&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CacheStorage&quot;&gt;CacheStorage&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="b4f8c73e9e4d08b66f4014dcbac4bb38df823fd8" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CanvasGradient&quot;&gt;CanvasGradient&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CanvasGradient&quot;&gt;CanvasGradient&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="7f378c5e9dc1aa9ae0ca6ae667b6ace9b0e3f48d" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CanvasPattern&quot;&gt;CanvasPattern&lt;/a&gt; to Kotlin</source>
          <target state="translated">자바 스크립트 &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CanvasPattern&quot;&gt;CanvasPattern&lt;/a&gt; 을 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="0dff1e94c348f48305efe1589b113686d4613952" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D&quot;&gt;CanvasRenderingContext2D&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D&quot;&gt;CanvasRenderingContext2D&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="4930f5ad3a9da6457e5252472c3ced645ae2cead" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CaretPosition&quot;&gt;CaretPosition&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CaretPosition&quot;&gt;CaretPosition&lt;/a&gt; 을 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="89ff70f6a73ea4a50c506300b6989950e61f2c2f" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ChildNode&quot;&gt;ChildNode&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ChildNode&quot;&gt;ChildNode&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="e4a925b4141cea624f09f915c771a8b09584d369" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Client&quot;&gt;Client&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Client&quot;&gt;클라이언트&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="789a754b67eb39328c8c5b301bc2c39a0093fa36" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Clients&quot;&gt;Clients&lt;/a&gt; to Kotlin</source>
          <target state="translated">자바 스크립트 &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Clients&quot;&gt;클라이언트&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="e777b4982e65bc088b48f0713adbdb8dd5e124fb" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ConstrainBooleanParameters&quot;&gt;ConstrainBooleanParameters&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ConstrainBooleanParameters&quot;&gt;ConstrainBooleanParameters&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="24251d16da841ec785c88c102e9e7e04ab621ddd" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ConstrainDOMStringParameters&quot;&gt;ConstrainDOMStringParameters&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ConstrainDOMStringParameters&quot;&gt;ConstrainDOMStringParameters&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="9555f96c2658affea0519712bf9618a7526a3cc0" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CustomElementRegistry&quot;&gt;CustomElementRegistry&lt;/a&gt; to Kotlin</source>
          <target state="translated">자바 스크립트 &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/CustomElementRegistry&quot;&gt;CustomElementRegistry&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="599721a5d18543535db48150b253ecacb693fcbd" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DOMImplementation&quot;&gt;DOMImplementation&lt;/a&gt; to Kotlin</source>
          <target state="translated">Kotlin에 JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DOMImplementation&quot;&gt;DOMImplementation&lt;/a&gt; 노출</target>
        </trans-unit>
        <trans-unit id="e3eebd70ffb6c151ccc23dfc8ab2b798f64010aa" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DOMMatrixReadOnly&quot;&gt;DOMMatrixReadOnly&lt;/a&gt; to Kotlin</source>
          <target state="translated">Kotlin에 JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DOMMatrixReadOnly&quot;&gt;DOMMatrixReadOnly&lt;/a&gt; 노출</target>
        </trans-unit>
        <trans-unit id="a8bc9d0ca02b4b87cb6ac5dda9e03dc15d4ce13e" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DOMParser&quot;&gt;DOMParser&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DOMParser&quot;&gt;DOMParser&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="377d9cd673d55abf626add5da125727021158ac1" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DOMPointInit&quot;&gt;DOMPointInit&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DOMPointInit&quot;&gt;DOMPointInit&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="df395f12d2cf46b2abf0b8dfc447b01f81b1cc95" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DOMPointReadOnly&quot;&gt;DOMPointReadOnly&lt;/a&gt; to Kotlin</source>
          <target state="translated">Kotlin에 JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DOMPointReadOnly&quot;&gt;DOMPointReadOnly&lt;/a&gt; 노출</target>
        </trans-unit>
        <trans-unit id="fcb317c5366fd47254889133dfb6cadd5186d229" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DOMQuad&quot;&gt;DOMQuad&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DOMQuad&quot;&gt;DOMQuad&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="5c1355046bc22a15b9b555e96ce1465666a40a4c" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DOMRectReadOnly&quot;&gt;DOMRectReadOnly&lt;/a&gt; to Kotlin</source>
          <target state="translated">Kotlin에 JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DOMRectReadOnly&quot;&gt;DOMRectReadOnly&lt;/a&gt; 노출</target>
        </trans-unit>
        <trans-unit id="b966b2756ee971befb78ff1fc2f7ce0d36241720" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DOMStringMap&quot;&gt;DOMStringMap&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DOMStringMap&quot;&gt;DOMStringMap&lt;/a&gt; 을 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="be2e1a2d74c5dfab6ca0eeda618bc1cf3eb3da95" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DOMTokenList&quot;&gt;DOMTokenList&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DOMTokenList&quot;&gt;DOMTokenList&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="3e297d588fdf0551d7607ebe1a4dcbb9d8b361fc" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DataTransfer&quot;&gt;DataTransfer&lt;/a&gt; to Kotlin</source>
          <target state="translated">자바 스크립트 노출 &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DataTransfer&quot;&gt;의 dataTransfer&lt;/a&gt; 코 틀린에를</target>
        </trans-unit>
        <trans-unit id="657218ca287c4ab1d651dc874b92d90297881237" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DataTransferItem&quot;&gt;DataTransferItem&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DataTransferItem&quot;&gt;DataTransferItem&lt;/a&gt; 을 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="7161d538a8dd045951edca5302e4f4f3b01abe07" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DataTransferItemList&quot;&gt;DataTransferItemList&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DataTransferItemList&quot;&gt;DataTransferItemList&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="2ce5c44b812f7dd74e252a5c982d37c536143617" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DataView&quot;&gt;DataView&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DataView&quot;&gt;DataView&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="d6b220d67bd5020d5d0a01710584388f12e02103" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DocumentOrShadowRoot&quot;&gt;DocumentOrShadowRoot&lt;/a&gt; to Kotlin</source>
          <target state="translated">Kotlin에 JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DocumentOrShadowRoot&quot;&gt;DocumentOrShadowRoot&lt;/a&gt; 노출</target>
        </trans-unit>
        <trans-unit id="fc6c327e8c193039e557e5dbdd5862092ef6e9d1" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DoubleRange&quot;&gt;DoubleRange&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/DoubleRange&quot;&gt;DoubleRange&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="c8faab27bc840b65d0f6510393f1dd829a58ba99" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Event&quot;&gt;Event&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Event&quot;&gt;이벤트&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="31909a542544ab2a87787bc8a0f41d3fa14236b1" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/EventListener&quot;&gt;EventListener&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/EventListener&quot;&gt;EventListener&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="b0933aa986371c1e96909886bc002c8809633c57" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/EventTarget&quot;&gt;EventTarget&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/EventTarget&quot;&gt;EventTarget&lt;/a&gt; 을 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="01cc58cefd31c1f25cd29e7299dab0beb838132a" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/FileList&quot;&gt;FileList&lt;/a&gt; to Kotlin</source>
          <target state="translated">자바 스크립트 노출 &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/FileList&quot;&gt;파일리스트&lt;/a&gt; 코 틀린에를</target>
        </trans-unit>
        <trans-unit id="d954a1747055695b2aa217fbee4e6d492f1823aa" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/FileReaderSync&quot;&gt;FileReaderSync&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/FileReaderSync&quot;&gt;FileReaderSync&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="eabde8bb825c4b4670eb79217903e19e64de6c3f" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Float32Array&quot;&gt;Float32Array&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Float32Array&quot;&gt;Float32Array&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="61fbfd956a594009722cf43bce8d832b25fd78f7" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Float64Array&quot;&gt;Float64Array&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Float64Array&quot;&gt;Float64Array&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="df5d9fea1dd397884c321ca5ad54e9b66fa36f0a" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/FormData&quot;&gt;FormData&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/FormData&quot;&gt;FormData&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="47eb053564cccb602e12d23d81ca75f2907f2615" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/GeometryUtils&quot;&gt;GeometryUtils&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/GeometryUtils&quot;&gt;GeometryUtils&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="7f14bc578acf1650c2af65e1ecf877c248074503" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/GlobalEventHandlers&quot;&gt;GlobalEventHandlers&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/GlobalEventHandlers&quot;&gt;GlobalEventHandlers&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="0f97809f5b83ec31a615da48f7059bb57d24f35a" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/HTMLCollection&quot;&gt;HTMLCollection&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/HTMLCollection&quot;&gt;HTMLCollection&lt;/a&gt; 을 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="a4be2038903db95e40459a5b7b894454fe7b369c" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/HTMLHyperlinkElementUtils&quot;&gt;HTMLHyperlinkElementUtils&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/HTMLHyperlinkElementUtils&quot;&gt;HTMLHyperlinkElementUtils&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="90b22119e6b1b7ee93e4db7c22729bdf5749bffd" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Headers&quot;&gt;Headers&lt;/a&gt; to Kotlin</source>
          <target state="translated">자바 스크립트 &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Headers&quot;&gt;헤더&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="9fcc8fafc8fcb7e3b46668079b5781f28a479a4c" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/History&quot;&gt;History&lt;/a&gt; to Kotlin</source>
          <target state="translated">자바 스크립트 &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/History&quot;&gt;히스토리&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="6d9ef3b736c7f42d0c8861ab0cc6eece785a8618" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ImageBitmap&quot;&gt;ImageBitmap&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ImageBitmap&quot;&gt;ImageBitmap&lt;/a&gt; 을 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="973cbfdbca2c36b7235dfc40f619002608ec7fce" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ImageBitmapRenderingContext&quot;&gt;ImageBitmapRenderingContext&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ImageBitmapRenderingContext&quot;&gt;ImageBitmapRenderingContext&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="f82954ca62c979f2496ec6c75850738af1a3c33a" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ImageData&quot;&gt;ImageData&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ImageData&quot;&gt;ImageData&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="d285055d606a76b320c4404abab59ecb8acd058e" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Int16Array&quot;&gt;Int16Array&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Int16Array&quot;&gt;Int16Array&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="aff6d2005ba74313a48864193ff2ecf7cf78f861" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Int32Array&quot;&gt;Int32Array&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Int32Array&quot;&gt;Int32Array&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="dd8fedd33e528d064a8c3c9df21aa80a0b282f4d" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Int8Array&quot;&gt;Int8Array&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Int8Array&quot;&gt;Int8Array&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="129711733d4b366136e86fd6fcbf352f82eecce3" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/LinkStyle&quot;&gt;LinkStyle&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/LinkStyle&quot;&gt;LinkStyle&lt;/a&gt; 을 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="2b219bf877410a2e09d890c9e77587bb983243c8" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Location&quot;&gt;Location&lt;/a&gt; to Kotlin</source>
          <target state="translated">자바 스크립트 &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Location&quot;&gt;위치&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="594941baeab3b58f67ecd5c21d0b1e4b40bbc957" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaDeviceInfo&quot;&gt;MediaDeviceInfo&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaDeviceInfo&quot;&gt;MediaDeviceInfo&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="0740f2182dfbdaf8ba83fbd49306c7bbc1161276" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaError&quot;&gt;MediaError&lt;/a&gt; to Kotlin</source>
          <target state="translated">Kotlin에 JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaError&quot;&gt;MediaError&lt;/a&gt; 노출</target>
        </trans-unit>
        <trans-unit id="e79c365ce95423c640a10613c9ce3be82f04736d" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaStreamConstraints&quot;&gt;MediaStreamConstraints&lt;/a&gt; to Kotlin</source>
          <target state="translated">Kotlin에 JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaStreamConstraints&quot;&gt;MediaStreamConstraints&lt;/a&gt; 노출</target>
        </trans-unit>
        <trans-unit id="9e419166cd21b42d675612e45aa1af5c29ade451" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaTrackConstraints&quot;&gt;MediaTrackConstraints&lt;/a&gt; to Kotlin</source>
          <target state="translated">Kotlin에 JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaTrackConstraints&quot;&gt;MediaTrackConstraints&lt;/a&gt; 노출</target>
        </trans-unit>
        <trans-unit id="68291c661b34c0e31166089125357d3815b272d8" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaTrackSettings&quot;&gt;MediaTrackSettings&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaTrackSettings&quot;&gt;MediaTrackSettings&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="ff03892bef60c1998049aef0de9ee2d17148a16a" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaTrackSupportedConstraints&quot;&gt;MediaTrackSupportedConstraints&lt;/a&gt; to Kotlin</source>
          <target state="translated">Kotlin에 JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaTrackSupportedConstraints&quot;&gt;MediaTrackSupportedConstraints&lt;/a&gt; 노출</target>
        </trans-unit>
        <trans-unit id="053f12e3979b8f507eece6ee8f2dda7eba1760f7" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MessageChannel&quot;&gt;MessageChannel&lt;/a&gt; to Kotlin</source>
          <target state="translated">자바 스크립트 &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MessageChannel&quot;&gt;MessageChannel&lt;/a&gt; 을 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="a713be19005a108490c636a26437642fcf666e96" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MimeType&quot;&gt;MimeType&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MimeType&quot;&gt;MimeType&lt;/a&gt; 을 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="9dcdfd72585577cb86ed3c56b45dcd29c329a2e2" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MimeTypeArray&quot;&gt;MimeTypeArray&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MimeTypeArray&quot;&gt;MimeTypeArray&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="502e6200143e319eea72ef7a0d8f3976f09d6554" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MutationObserver&quot;&gt;MutationObserver&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MutationObserver&quot;&gt;MutationObserver&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="159d4c29526679b4def070ff47f3874ab0445340" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MutationObserverInit&quot;&gt;MutationObserverInit&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MutationObserverInit&quot;&gt;MutationObserverInit&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="c88b7e5c1859d6b4e116f43a892ec9e83413e2b9" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MutationRecord&quot;&gt;MutationRecord&lt;/a&gt; to Kotlin</source>
          <target state="translated">Kotlin에 JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MutationRecord&quot;&gt;MutationRecord&lt;/a&gt; 노출</target>
        </trans-unit>
        <trans-unit id="ae9ba33271e618704e2556ffd0b4761516dbecf0" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NamedNodeMap&quot;&gt;NamedNodeMap&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NamedNodeMap&quot;&gt;NamedNodeMap&lt;/a&gt; 을 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="b4aaf62796642329437174298aebc06b6672bbe2" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Navigator&quot;&gt;Navigator&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Navigator&quot;&gt;Navigator&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="d1fdab215bf657f2971cf9c106d747aa79a0779f" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NavigatorConcurrentHardware&quot;&gt;NavigatorConcurrentHardware&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NavigatorConcurrentHardware&quot;&gt;NavigatorConcurrentHardware&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="3eed33d131c33790c5648056a06c94987025b918" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NavigatorID&quot;&gt;NavigatorID&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NavigatorID&quot;&gt;NavigatorID&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="f13f74a7460676e529c928964a91f57efc1fb755" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NavigatorLanguage&quot;&gt;NavigatorLanguage&lt;/a&gt; to Kotlin</source>
          <target state="translated">Kotlin에 JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NavigatorLanguage&quot;&gt;NavigatorLanguage&lt;/a&gt; 노출</target>
        </trans-unit>
        <trans-unit id="db9975cc843532c7e71febf7da5b9cdef4013205" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NavigatorOnLine&quot;&gt;NavigatorOnLine&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NavigatorOnLine&quot;&gt;NavigatorOnLine&lt;/a&gt; 을 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="0cab989ab29d81fc606498b1461b54abdb616973" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NavigatorPlugins&quot;&gt;NavigatorPlugins&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NavigatorPlugins&quot;&gt;NavigatorPlugins&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="b4b114eb135375d93d610e89253f0d7f1338c498" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NodeFilter&quot;&gt;NodeFilter&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NodeFilter&quot;&gt;NodeFilter&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="837e4b2bb71ce6e6d07abaa4817afbd0a686267f" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NodeIterator&quot;&gt;NodeIterator&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NodeIterator&quot;&gt;NodeIterator&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="0350ad5d05e21f7ce6c543c4ac253ea6516c4989" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NodeList&quot;&gt;NodeList&lt;/a&gt; to Kotlin</source>
          <target state="translated">자바 스크립트 &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NodeList&quot;&gt;NodeList&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="5ce16ccc392741a3c3d2c8e565b8a10724aec773" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NonDocumentTypeChildNode&quot;&gt;NonDocumentTypeChildNode&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/NonDocumentTypeChildNode&quot;&gt;NonDocumentTypeChildNode&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="2fee1b01d1d6830d156d51f7bc02de375b36492c" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ParentNode&quot;&gt;ParentNode&lt;/a&gt; to Kotlin</source>
          <target state="translated">자바 스크립트 &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ParentNode&quot;&gt;ParentNode&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="3542685f71c53dcb7eadb5604c680f9810ac6991" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Path2D&quot;&gt;Path2D&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Path2D&quot;&gt;Path2D&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="b57066c829f4ca9971eba9b6bb3d4bd38b7aea8e" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/PerformanceNavigation&quot;&gt;PerformanceNavigation&lt;/a&gt; to Kotlin</source>
          <target state="translated">Kotlin에 JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/PerformanceNavigation&quot;&gt;PerformanceNavigation&lt;/a&gt; 공개</target>
        </trans-unit>
        <trans-unit id="5accafb6bf29fc4fbec3bd2e054128cb2ba377dd" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/PerformanceTiming&quot;&gt;PerformanceTiming&lt;/a&gt; to Kotlin</source>
          <target state="translated">Kotlin에 JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/PerformanceTiming&quot;&gt;PerformanceTiming&lt;/a&gt; 노출</target>
        </trans-unit>
        <trans-unit id="d4fbaf94b37e485b14b450d8c7247ebb96aa678e" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Plugin&quot;&gt;Plugin&lt;/a&gt; to Kotlin</source>
          <target state="translated">자바 스크립트 &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Plugin&quot;&gt;플러그인&lt;/a&gt; 을 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="a3fc9a900a38b0133fe2a34587114f7fca726c3a" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/PluginArray&quot;&gt;PluginArray&lt;/a&gt; to Kotlin</source>
          <target state="translated">자바 스크립트 &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/PluginArray&quot;&gt;플러그인 배열&lt;/a&gt; 을 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="2819f804c7a52056a59418c1fb2a86167b33fadf" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Range&quot;&gt;Range&lt;/a&gt; to Kotlin</source>
          <target state="translated">Kotlin에 JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Range&quot;&gt;범위&lt;/a&gt; 노출</target>
        </trans-unit>
        <trans-unit id="3b334cd256f0844989f2a345991c2eebcc56ff6e" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Request&quot;&gt;Request&lt;/a&gt; to Kotlin</source>
          <target state="translated">Kotlin에 JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Request&quot;&gt;요청&lt;/a&gt; 노출</target>
        </trans-unit>
        <trans-unit id="0c52d88a09c46d141a3597b85a9216845f9eb9a1" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Response&quot;&gt;Response&lt;/a&gt; to Kotlin</source>
          <target state="translated">Kotlin에 대한 JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Response&quot;&gt;응답&lt;/a&gt; 노출</target>
        </trans-unit>
        <trans-unit id="9ce8f42f6b18e9a8b089c9a14ecb5fdbaaea57c6" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAngle&quot;&gt;SVGAngle&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAngle&quot;&gt;SVGAngle&lt;/a&gt; 을 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="785e2f1f7635c086da66db4f3713f206535b9cc7" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedAngle&quot;&gt;SVGAnimatedAngle&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedAngle&quot;&gt;SVGAnimatedAngle&lt;/a&gt; 을 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="051a1286b426f5bec613b4abdcde9fa99f14ad38" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedBoolean&quot;&gt;SVGAnimatedBoolean&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedBoolean&quot;&gt;SVGAnimatedBoolean&lt;/a&gt; 을 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="81d7238d3df9d3b77c30b1ef3e78b1105e083d2a" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedEnumeration&quot;&gt;SVGAnimatedEnumeration&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedEnumeration&quot;&gt;SVGAnimatedEnumeration&lt;/a&gt; 을 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="f04b9666e3a6dca28299f7846a3b53f766f49396" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedInteger&quot;&gt;SVGAnimatedInteger&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedInteger&quot;&gt;SVGAnimatedInteger&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="7774d99aa383d400d810ee4b809f89e1ba491a62" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedLength&quot;&gt;SVGAnimatedLength&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedLength&quot;&gt;SVGAnimatedLength&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="8b0a6e7fb9a1b23faeeb1c9113ee6f85cc9c34f1" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedLengthList&quot;&gt;SVGAnimatedLengthList&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedLengthList&quot;&gt;SVGAnimatedLengthList&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="de7b4fa0a4c4bb3bdeca8e0ae307605fa182a490" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedNumber&quot;&gt;SVGAnimatedNumber&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedNumber&quot;&gt;SVGAnimatedNumber&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="176f0149ce43b70e00a21793f31c0f4848382dce" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedNumberList&quot;&gt;SVGAnimatedNumberList&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedNumberList&quot;&gt;SVGAnimatedNumberList&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="e16282d1d93a66e25ec1e4d7ffbe189596d7852d" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedPoints&quot;&gt;SVGAnimatedPoints&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedPoints&quot;&gt;SVGAnimatedPoints&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="e5a8b61ef7c19a12dc2bb8afee431431ee113f84" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedPreserveAspectRatio&quot;&gt;SVGAnimatedPreserveAspectRatio&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedPreserveAspectRatio&quot;&gt;SVGAnimatedPreserveAspectRatio&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="2e7f7e344ee33aaef20de0ecb31899cf93296303" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedRect&quot;&gt;SVGAnimatedRect&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedRect&quot;&gt;SVGAnimatedRect&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="e0e66a5ffa780d59897c918ac840cd70fa059232" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedString&quot;&gt;SVGAnimatedString&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedString&quot;&gt;SVGAnimatedString&lt;/a&gt; 을 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="0615dc49574b140ded7aa57b87618fffd3b30427" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedTransformList&quot;&gt;SVGAnimatedTransformList&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGAnimatedTransformList&quot;&gt;SVGAnimatedTransformList&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="b0e962fdeeb2551808a6e9aecbfe1a79a9cad559" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGLength&quot;&gt;SVGLength&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGLength&quot;&gt;SVGLength&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="078b1ec9b810dc9d975c22600b9c649cb85e51cf" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGLengthList&quot;&gt;SVGLengthList&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGLengthList&quot;&gt;SVGLengthList&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="e08fa2c91c7c018c66a658d4ff9e7de2e687e68f" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGNumber&quot;&gt;SVGNumber&lt;/a&gt; to Kotlin</source>
          <target state="translated">자바 스크립트 &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGNumber&quot;&gt;SVGNumber&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="abb6726d726b7d58da55bf78975506e3bf0e388b" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGNumberList&quot;&gt;SVGNumberList&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGNumberList&quot;&gt;SVGNumberList&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="30358bc4fb2dfbd2f398bd1c37fe504752cecbad" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGPreserveAspectRatio&quot;&gt;SVGPreserveAspectRatio&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGPreserveAspectRatio&quot;&gt;SVGPreserveAspectRatio&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="6164bfeb6c1430f3b51271da676a9e9d47ffdd01" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGStringList&quot;&gt;SVGStringList&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGStringList&quot;&gt;SVGStringList&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="d1783b94978b6506971caef84995623354643256" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGTests&quot;&gt;SVGTests&lt;/a&gt; to Kotlin</source>
          <target state="translated">자바 스크립트 &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGTests&quot;&gt;SVGTest&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="efac11d0375fcac4e195ad460f2e9c2b8cc9dad1" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGTransform&quot;&gt;SVGTransform&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGTransform&quot;&gt;SVGTransform&lt;/a&gt; 을 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="c2072d21623d4729dc79f90145320c926f93f51b" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGTransformList&quot;&gt;SVGTransformList&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGTransformList&quot;&gt;SVGTransformList&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="794b61c8f72bac8f0b9d3fd2652c80ce1d80694d" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGURIReference&quot;&gt;SVGURIReference&lt;/a&gt; to Kotlin</source>
          <target state="translated">Kotlin에 JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGURIReference&quot;&gt;SVGURIReference&lt;/a&gt; 노출</target>
        </trans-unit>
        <trans-unit id="7c829e3628424e61dcc945a5462eea950f2d2c1d" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGUnitTypes&quot;&gt;SVGUnitTypes&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGUnitTypes&quot;&gt;SVGUnitTypes&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="aaad2c9354613395e931347fed2604c7f33f44fd" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGZoomAndPan&quot;&gt;SVGZoomAndPan&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/SVGZoomAndPan&quot;&gt;SVGZoomAndPan&lt;/a&gt; 을 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="d0964c6b87e8f3595e610f46c83d621e45c94626" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Screen&quot;&gt;Screen&lt;/a&gt; to Kotlin</source>
          <target state="translated">자바 스크립트 &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Screen&quot;&gt;화면&lt;/a&gt; 을 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="7ab5bcdd6737147c7f9650419d9fa1d946080edd" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ScrollToOptions&quot;&gt;ScrollToOptions&lt;/a&gt; to Kotlin</source>
          <target state="translated">자바 스크립트 &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ScrollToOptions&quot;&gt;ScrollToOptions&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="caf29a99f800ee4df1f509978fc9374661efadb6" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Slotable&quot;&gt;Slotable&lt;/a&gt; to Kotlin</source>
          <target state="translated">Kotlin에 JavaScript를 &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Slotable&quot;&gt;슬롯&lt;/a&gt; 에 노출</target>
        </trans-unit>
        <trans-unit id="c7b1cd1569fb790a7933995806002a84ef72115a" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Storage&quot;&gt;Storage&lt;/a&gt; to Kotlin</source>
          <target state="translated">자바 스크립트 &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Storage&quot;&gt;저장소&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="df5f09f1c1d114ab78d0ed32fdc63bec2c70f7b2" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/StyleSheet&quot;&gt;StyleSheet&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/StyleSheet&quot;&gt;StyleSheet&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="1db3c227625f52f06785d52413b5c48e54ff34ef" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/StyleSheetList&quot;&gt;StyleSheetList&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/StyleSheetList&quot;&gt;StyleSheetList&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="debcb2b5a5a08272f50dfab5ecbad48428a5713b" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/TextMetrics&quot;&gt;TextMetrics&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/TextMetrics&quot;&gt;TextMetrics&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="51420fdb3827a705b67cb55f2acb6f7f7c1628c5" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/TimeRanges&quot;&gt;TimeRanges&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/TimeRanges&quot;&gt;TimeRanges&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="e536765260fd33a0fb1c970d29b3f7ae1e52aa5b" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Touch&quot;&gt;Touch&lt;/a&gt; to Kotlin</source>
          <target state="translated">자바 스크립트 &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Touch&quot;&gt;터치&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="a047f1c4d3aaa1f205a636e1fb3c697f871596e3" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/TreeWalker&quot;&gt;TreeWalker&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/TreeWalker&quot;&gt;TreeWalker&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="1b6755f3767c0926efceb18412b59e78e5ddd7e6" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/URL&quot;&gt;URL&lt;/a&gt; to Kotlin</source>
          <target state="translated">자바 스크립트 &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/URL&quot;&gt;URL&lt;/a&gt; 을 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="a1bf59f10e3be594d883bfdf2a6469362f387868" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/URLSearchParams&quot;&gt;URLSearchParams&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/URLSearchParams&quot;&gt;URLSearchParams&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="3dfee26dedf689461470f9f5c52687188126f29e" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Uint16Array&quot;&gt;Uint16Array&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Uint16Array&quot;&gt;Uint16Array&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="b57fa61d6662e31034b82d1030292fd5e29802f2" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Uint32Array&quot;&gt;Uint32Array&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Uint32Array&quot;&gt;Uint32Array&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="50101016b89badc5c44b4f57e7dd6fbc42c3d595" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Uint8Array&quot;&gt;Uint8Array&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Uint8Array&quot;&gt;Uint8Array&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="982e986db2fb851b76bb8066b72041ced1b81d88" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Uint8ClampedArray&quot;&gt;Uint8ClampedArray&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/Uint8ClampedArray&quot;&gt;Uint8ClampedArray&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="2e48d5873d97381debc1ed63a5d1f151e5b8c6cb" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ValidityState&quot;&gt;ValidityState&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/ValidityState&quot;&gt;ValidityState&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="181a8619cf89cb42e0df69afa8bc974fd83e4bf2" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/VideoTrack&quot;&gt;VideoTrack&lt;/a&gt; to Kotlin</source>
          <target state="translated">자바 스크립트 &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/VideoTrack&quot;&gt;VideoTrack&lt;/a&gt; 을 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="736f21bc1ba71124f7e6d21a43012838c88762f1" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WebGLActiveInfo&quot;&gt;WebGLActiveInfo&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WebGLActiveInfo&quot;&gt;WebGLActiveInfo&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="8c22a91d08cf479408a96c4aff1215bc647b37a5" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WebGLRenderingContext&quot;&gt;WebGLRenderingContext&lt;/a&gt; to Kotlin</source>
          <target state="translated">자바 스크립트 &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WebGLRenderingContext&quot;&gt;WebGLRenderingContext&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="24d413e2f6ddca096f6b75605cc7a8505e87bed0" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WebGLShaderPrecisionFormat&quot;&gt;WebGLShaderPrecisionFormat&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WebGLShaderPrecisionFormat&quot;&gt;WebGLShaderPrecisionFormat&lt;/a&gt; 을 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="720c4b07bf8a67700ee7fdae70cb56aed58d51d6" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WebGLUniformLocation&quot;&gt;WebGLUniformLocation&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WebGLUniformLocation&quot;&gt;WebGLUniformLocation&lt;/a&gt; 을 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="dbdaf28de983adc6f6372cfce201b7e91dcab861" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WindowEventHandlers&quot;&gt;WindowEventHandlers&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WindowEventHandlers&quot;&gt;WindowEventHandlers&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="b44fb2210010be4cea8c8bd9b7557abeacbf1323" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WindowLocalStorage&quot;&gt;WindowLocalStorage&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WindowLocalStorage&quot;&gt;WindowLocalStorage&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="edd5ec34a8b69af5a791317e7719446b9d28ac71" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WindowOrWorkerGlobalScope&quot;&gt;WindowOrWorkerGlobalScope&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WindowOrWorkerGlobalScope&quot;&gt;WindowOrWorkerGlobalScope&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="12ded232807775d1c78389294216756b150cc1f0" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WindowSessionStorage&quot;&gt;WindowSessionStorage&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WindowSessionStorage&quot;&gt;WindowSessionStorage&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="29a69a8bf1473782da6fb3407ef2c139a6e6233d" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WorkerLocation&quot;&gt;WorkerLocation&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WorkerLocation&quot;&gt;WorkerLocation&lt;/a&gt; 을 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="02de36425e15ec92f0499e15152296de14a85669" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WorkerNavigator&quot;&gt;WorkerNavigator&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/WorkerNavigator&quot;&gt;WorkerNavigator&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="7b37415bc97597a600acdaac8f6aa4588e841914" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/XMLSerializer&quot;&gt;XMLSerializer&lt;/a&gt; to Kotlin</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/XMLSerializer&quot;&gt;XMLSerializer&lt;/a&gt; 를 Kotlin에 노출</target>
        </trans-unit>
        <trans-unit id="169719bb7fe6c072f51b022f45191170db2da5b0" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math&quot;&gt;Math object&lt;/a&gt; to Kotlin.</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Math&quot;&gt;Math 객체&lt;/a&gt; 를 Kotlin에 노출합니다 .</target>
        </trans-unit>
        <trans-unit id="af12a69227d7123455a07f62644ac1f53f5fc9b0" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise object&lt;/a&gt; to Kotlin.</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise 객체&lt;/a&gt; 를 Kotlin에 노출합니다 .</target>
        </trans-unit>
        <trans-unit id="e9eb87eff6a035d83115bfb1ec018f9bc5372b8b" translate="yes" xml:space="preserve">
          <source>Exposes the JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/RegExp&quot;&gt;RegExp object&lt;/a&gt; to Kotlin.</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/RegExp&quot;&gt;RegExp 객체&lt;/a&gt; 를 Kotlin에 노출합니다 .</target>
        </trans-unit>
        <trans-unit id="97b695b9b9cfde3612c21b3add972cc0f21f4e26" translate="yes" xml:space="preserve">
          <source>Expression</source>
          <target state="translated">Expression</target>
        </trans-unit>
        <trans-unit id="f1c19d6b5edc0f215409941d6605832d490f7a6e" translate="yes" xml:space="preserve">
          <source>Expression body formatting</source>
          <target state="translated">표현식 본문 형식</target>
        </trans-unit>
        <trans-unit id="8250f28d9a39afd3e8181e48d1deb5e48d360b03" translate="yes" xml:space="preserve">
          <source>Expressions using values of &lt;code&gt;dynamic&lt;/code&gt; type are translated to JavaScript &quot;as is&quot;, and do not use the Kotlin operator conventions. The following operators are supported:</source>
          <target state="translated">&lt;code&gt;dynamic&lt;/code&gt; 유형의 값을 사용하는 표현식 은 &quot;있는 그대로&quot;JavaScript로 변환되며 Kotlin 연산자 규칙을 사용하지 않습니다. 다음과 같은 연산자가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="8eb6bfee0bd7f9803c91c54c8e8b8b54210eb10e" translate="yes" xml:space="preserve">
          <source>ExtendableEventInit</source>
          <target state="translated">ExtendableEventInit</target>
        </trans-unit>
        <trans-unit id="6a0d6c93904de6a1cc9d0c587fd4c50c1053901f" translate="yes" xml:space="preserve">
          <source>ExtendableMessageEventInit</source>
          <target state="translated">ExtendableMessageEventInit</target>
        </trans-unit>
        <trans-unit id="d83a59dce7cd16ba52b0e73db158eb39b8977bdb" translate="yes" xml:space="preserve">
          <source>Extending JavaScript classes</source>
          <target state="translated">자바 스크립트 클래스 확장</target>
        </trans-unit>
        <trans-unit id="0d6d521c48a1ba72b1626fab7ee2b08c70405da7" translate="yes" xml:space="preserve">
          <source>Extends &lt;a href=&quot;-match-group-collection/index&quot;&gt;MatchGroupCollection&lt;/a&gt; by introducing a way to get matched groups by name, when regex supports it.</source>
          <target state="translated">정규식에서 지원하는 경우 이름별로 일치하는 그룹을 가져 오는 방법을 도입하여 &lt;a href=&quot;-match-group-collection/index&quot;&gt;MatchGroupCollection&lt;/a&gt; 을 확장 합니다.</target>
        </trans-unit>
        <trans-unit id="5e41da74dacb9cfc137f741cb7062c82eaab0d55" translate="yes" xml:space="preserve">
          <source>Extends &lt;a href=&quot;../-match-group-collection/index&quot;&gt;MatchGroupCollection&lt;/a&gt; by introducing a way to get matched groups by name, when regex supports it.</source>
          <target state="translated">정규식에서 지원하는 경우 이름별로 일치하는 그룹을 가져 오는 방법을 도입하여 &lt;a href=&quot;../-match-group-collection/index&quot;&gt;MatchGroupCollection&lt;/a&gt; 을 확장 합니다.</target>
        </trans-unit>
        <trans-unit id="e6ce257aad19fe0416795a1c9aadc67e8ed873e3" translate="yes" xml:space="preserve">
          <source>Extends &lt;a href=&quot;../../kotlin.text/-match-group-collection/index&quot;&gt;MatchGroupCollection&lt;/a&gt; by introducing a way to get matched groups by name, when regex supports it.</source>
          <target state="translated">정규식에서 지원하는 경우 이름별로 일치하는 그룹을 가져 오는 방법을 도입하여 &lt;a href=&quot;../../kotlin.text/-match-group-collection/index&quot;&gt;MatchGroupCollection&lt;/a&gt; 을 확장 합니다.</target>
        </trans-unit>
        <trans-unit id="be3051f954b68657a9cbdc25d786b4ff25eff1c0" translate="yes" xml:space="preserve">
          <source>Extends &lt;a href=&quot;index&quot;&gt;MatchGroupCollection&lt;/a&gt; by introducing a way to get matched groups by name, when regex supports it.</source>
          <target state="translated">정규식에서 지원하는 경우 이름별로 일치하는 그룹을 가져 오는 방법을 도입하여 &lt;a href=&quot;index&quot;&gt;MatchGroupCollection&lt;/a&gt; 을 확장 합니다.</target>
        </trans-unit>
        <trans-unit id="d16da02113a4ec75748867c4632e26a2f7b7bc45" translate="yes" xml:space="preserve">
          <source>Extends the given &lt;a href=&quot;nulls-first#kotlin.comparisons%24nullsFirst%28kotlin.Comparator%28%28kotlin.comparisons.nullsFirst.T%29%29%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt; of non-nullable values to a comparator of nullable values considering &lt;code&gt;null&lt;/code&gt; value less than any other value.</source>
          <target state="translated">널 (NULL) 값이 아닌 값 의 주어진 &lt;a href=&quot;nulls-first#kotlin.comparisons%24nullsFirst%28kotlin.Comparator%28%28kotlin.comparisons.nullsFirst.T%29%29%29%2Fcomparator&quot;&gt;비교&lt;/a&gt; 자를 다른 값보다 작은 &lt;code&gt;null&lt;/code&gt; NULL) 값을 고려하여 널 (NULL) 값의 비교 자로 확장합니다 .</target>
        </trans-unit>
        <trans-unit id="cbb9ec2258d4e2b1504fbffe64af72ec3ff079e0" translate="yes" xml:space="preserve">
          <source>Extends the given &lt;a href=&quot;nulls-last#kotlin.comparisons%24nullsLast%28kotlin.Comparator%28%28kotlin.comparisons.nullsLast.T%29%29%29%2Fcomparator&quot;&gt;comparator&lt;/a&gt; of non-nullable values to a comparator of nullable values considering &lt;code&gt;null&lt;/code&gt; value greater than any other value.</source>
          <target state="translated">널 (NULL) 값이 아닌 값 의 주어진 &lt;a href=&quot;nulls-last#kotlin.comparisons%24nullsLast%28kotlin.Comparator%28%28kotlin.comparisons.nullsLast.T%29%29%29%2Fcomparator&quot;&gt;비교&lt;/a&gt; 자를 다른 값보다 큰 &lt;code&gt;null&lt;/code&gt; NULL) 값을 고려하여 널 (NULL) 값의 비교 자로 확장합니다 .</target>
        </trans-unit>
        <trans-unit id="659087d3ca23db6ae11e0a43579b5f4a260dda11" translate="yes" xml:space="preserve">
          <source>Extension</source>
          <target state="translated">Extension</target>
        </trans-unit>
        <trans-unit id="bc56dc0b9c671805d3fa3254212af0b6ec6d4765" translate="yes" xml:space="preserve">
          <source>Extension Functions</source>
          <target state="translated">확장 기능</target>
        </trans-unit>
        <trans-unit id="07d42748298f0d67ded63b428e89231e8cc38745" translate="yes" xml:space="preserve">
          <source>Extension Properties</source>
          <target state="translated">확장 속성</target>
        </trans-unit>
        <trans-unit id="f3a349da9b92423626eca70230c45e7f230c41a4" translate="yes" xml:space="preserve">
          <source>Extension and member functions</source>
          <target state="translated">확장 및 멤버 함수</target>
        </trans-unit>
        <trans-unit id="0508e77219f46be972ce3c02c3d431e8dfa41ced" translate="yes" xml:space="preserve">
          <source>Extension functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8264eafd9b93a89477b0af2f3e72bde5f7f0098" translate="yes" xml:space="preserve">
          <source>Extension functions are explained in &lt;a href=&quot;extensions&quot;&gt;their own section&lt;/a&gt;.</source>
          <target state="translated">확장 기능은 &lt;a href=&quot;extensions&quot;&gt;자체 섹션에&lt;/a&gt; 설명되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2d2a44dee5f51576e0e165d74f152ef76b696d38" translate="yes" xml:space="preserve">
          <source>Extension functions providing querying operations for collections (eager) and sequences (lazy).</source>
          <target state="translated">컬렉션 (열심 한) 및 시퀀스 (게으른)에 대한 쿼리 작업을 제공하는 확장 함수</target>
        </trans-unit>
        <trans-unit id="1fe77a025e03b7c1d219475308773f2eb67f5ea0" translate="yes" xml:space="preserve">
          <source>Extension functions/properties</source>
          <target state="translated">확장 기능 / 속성</target>
        </trans-unit>
        <trans-unit id="6fbafd05c05dff63bd87c3c487287decd1a283b0" translate="yes" xml:space="preserve">
          <source>Extension receiver of an extension function or property.</source>
          <target state="translated">확장 기능 또는 속성의 확장 수신기.</target>
        </trans-unit>
        <trans-unit id="01085898b3fab1a22bc2f04ad759a96cacb2e826" translate="yes" xml:space="preserve">
          <source>ExtensionFunctionType</source>
          <target state="translated">ExtensionFunctionType</target>
        </trans-unit>
        <trans-unit id="656bcfe284e2da39c77d4fdab55b16ad3c654719" translate="yes" xml:space="preserve">
          <source>Extensions</source>
          <target state="translated">Extensions</target>
        </trans-unit>
        <trans-unit id="65823204317e74b224cb6b2cce660c01bb0fce85" translate="yes" xml:space="preserve">
          <source>Extensions are resolved &lt;strong&gt;statically&lt;/strong&gt;</source>
          <target state="translated">확장은 &lt;strong&gt;정적으로&lt;/strong&gt; 해결됩니다&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8a9850a2bfef7f87f77e79f50f16de67a4437087" translate="yes" xml:space="preserve">
          <source>Extensions declared as members can be declared as &lt;code&gt;open&lt;/code&gt; and overridden in subclasses. This means that the dispatch of such functions is virtual with regard to the dispatch receiver type, but static with regard to the extension receiver type.</source>
          <target state="translated">멤버로 선언 된 확장은 서브 클래스에서 &lt;code&gt;open&lt;/code&gt; 및 재정의 로 선언 될 수 있습니다 . 이는 이러한 기능의 디스패치가 디스패치 리시버 유형과 관련하여 가상이지만 확장 리시버 유형과 관련하여 정적임을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="8e6d1c8a997cd22ea827a61962ef748d5ed5ca48" translate="yes" xml:space="preserve">
          <source>Extensions do not actually modify classes they extend. By defining an extension, you do not insert new members into a class, but merely make new functions callable with the dot-notation on variables of this type.</source>
          <target state="translated">확장은 실제로 확장하는 클래스를 수정하지 않습니다. 확장을 정의하면 클래스에 새 멤버를 삽입하지 않고이 유형의 변수에 대한 점 표기법으로 새 ​​함수를 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2593a8dfc13c7c0c959ccdc515619ba9d1c8d073" translate="yes" xml:space="preserve">
          <source>Extensions for &lt;a href=&quot;../../../../../docs/reference/reflection&quot;&gt;Kotlin reflection&lt;/a&gt; provided by &lt;code&gt;kotlin-reflect&lt;/code&gt; library.</source>
          <target state="translated">&lt;code&gt;kotlin-reflect&lt;/code&gt; 라이브러리에서 제공하는 &lt;a href=&quot;../../../../../docs/reference/reflection&quot;&gt;Kotlin 리플렉션&lt;/a&gt; 확장 .</target>
        </trans-unit>
        <trans-unit id="262319f6e6a669249cf95f667b1fd0fa2e5c350e" translate="yes" xml:space="preserve">
          <source>Extensions for &lt;a href=&quot;docs/reference/reflection&quot;&gt;Kotlin reflection&lt;/a&gt; provided by &lt;code&gt;kotlin-reflect&lt;/code&gt; library.</source>
          <target state="translated">&lt;code&gt;kotlin-reflect&lt;/code&gt; 라이브러리에서 제공하는 &lt;a href=&quot;docs/reference/reflection&quot;&gt;Kotlin 리플렉션&lt;/a&gt; 확장 .</target>
        </trans-unit>
        <trans-unit id="49832a1ebdf4f5668682a13c2f151f8e1267195f" translate="yes" xml:space="preserve">
          <source>Extensions for External Classes</source>
          <target state="translated">외부 클래스를위한 확장</target>
        </trans-unit>
        <trans-unit id="5f228be09712a15893b5d848c62e3c657711b680" translate="yes" xml:space="preserve">
          <source>Extensions for JDK classes making it convenient to work with files, IO, and threading.</source>
          <target state="translated">JDK 클래스 용 확장 기능으로 파일, IO 및 스레딩 작업이 편리합니다.</target>
        </trans-unit>
        <trans-unit id="4610d13ada7dc94c37cb8c0d288ed51a8b59020e" translate="yes" xml:space="preserve">
          <source>Extensions for java.io.BufferedInputStream</source>
          <target state="translated">java.io.BufferedInputStream의 확장</target>
        </trans-unit>
        <trans-unit id="90d18d9176044d4704cc79db47128df70dcfac58" translate="yes" xml:space="preserve">
          <source>Extensions for java.io.BufferedReader</source>
          <target state="translated">java.io.BufferedReader의 확장</target>
        </trans-unit>
        <trans-unit id="c9a256ac8d8337e3986435759ce63b670611d314" translate="yes" xml:space="preserve">
          <source>Extensions for java.io.File</source>
          <target state="translated">java.io.File의 확장</target>
        </trans-unit>
        <trans-unit id="353d555a82b35fa53856f04bb4a9788692ddcdaa" translate="yes" xml:space="preserve">
          <source>Extensions for java.io.InputStream</source>
          <target state="translated">java.io.InputStream의 확장</target>
        </trans-unit>
        <trans-unit id="7c866a3221824bca9b7f5d4599a0c9dc84bab82f" translate="yes" xml:space="preserve">
          <source>Extensions for java.io.OutputStream</source>
          <target state="translated">java.io.OutputStream의 확장</target>
        </trans-unit>
        <trans-unit id="11ab0c0a7f587ef465def37cfdc1deb1b4be69ba" translate="yes" xml:space="preserve">
          <source>Extensions for java.io.Reader</source>
          <target state="translated">java.io.Reader의 확장</target>
        </trans-unit>
        <trans-unit id="ddccd6f98474eb5b6f85a7e011a8615f58ab99ac" translate="yes" xml:space="preserve">
          <source>Extensions for java.io.Writer</source>
          <target state="translated">java.io.Writer의 확장</target>
        </trans-unit>
        <trans-unit id="910af862461d3bd30ea9ce035af6e32975f3ffa5" translate="yes" xml:space="preserve">
          <source>Extensions for java.lang.Appendable</source>
          <target state="translated">java.lang.Appendable의 확장</target>
        </trans-unit>
        <trans-unit id="5d734df1d86332fe5c1c0883b237481868a6eb45" translate="yes" xml:space="preserve">
          <source>Extensions for java.lang.Class</source>
          <target state="translated">java.lang.Class의 확장</target>
        </trans-unit>
        <trans-unit id="7dfb388d369e5267e4e1d8c071143d790f1da0a9" translate="yes" xml:space="preserve">
          <source>Extensions for java.lang.StringBuilder</source>
          <target state="translated">java.lang.StringBuilder의 확장</target>
        </trans-unit>
        <trans-unit id="42a7e63663d54d93bcac2363d5f99b205132dcb1" translate="yes" xml:space="preserve">
          <source>Extensions for java.lang.ThreadLocal</source>
          <target state="translated">java.lang.ThreadLocal의 확장</target>
        </trans-unit>
        <trans-unit id="e0d33457d7c5ae07736459433ab7863dd2d23048" translate="yes" xml:space="preserve">
          <source>Extensions for java.lang.reflect.Constructor</source>
          <target state="translated">java.lang.reflect.Constructor의 확장</target>
        </trans-unit>
        <trans-unit id="52860746d7cb86bbffcd7d48faaa9614487e2238" translate="yes" xml:space="preserve">
          <source>Extensions for java.lang.reflect.Field</source>
          <target state="translated">java.lang.reflect.Field의 확장</target>
        </trans-unit>
        <trans-unit id="18e154fc99122dceb560cb89e50cd85317a5ec79" translate="yes" xml:space="preserve">
          <source>Extensions for java.lang.reflect.Method</source>
          <target state="translated">java.lang.reflect.Method의 확장</target>
        </trans-unit>
        <trans-unit id="4d57a6ee49879007c6f1c94860855f9cab702a1f" translate="yes" xml:space="preserve">
          <source>Extensions for java.math.BigDecimal</source>
          <target state="translated">java.math.BigDecimal의 확장</target>
        </trans-unit>
        <trans-unit id="0418015890da6d28427d023d4a378a41e7681950" translate="yes" xml:space="preserve">
          <source>Extensions for java.math.BigInteger</source>
          <target state="translated">java.math.BigInteger의 확장</target>
        </trans-unit>
        <trans-unit id="fe35e40777eea67159ce5cc1fdd71d4c5d0d0ce1" translate="yes" xml:space="preserve">
          <source>Extensions for java.net.URL</source>
          <target state="translated">java.net.URL의 확장</target>
        </trans-unit>
        <trans-unit id="97e069f223cf669139046c0679a9b909b863d264" translate="yes" xml:space="preserve">
          <source>Extensions for java.util.Enumeration</source>
          <target state="translated">java.util.Enumeration의 확장</target>
        </trans-unit>
        <trans-unit id="6a90de809fe794a79ec52bdf3bd3fa37c93d3dea" translate="yes" xml:space="preserve">
          <source>Extensions for java.util.Random</source>
          <target state="translated">java.util.Random의 확장</target>
        </trans-unit>
        <trans-unit id="3f3041f4748454781df8851b55d5eccdd80a6c37" translate="yes" xml:space="preserve">
          <source>Extensions for java.util.Timer</source>
          <target state="translated">java.util.Timer의 확장</target>
        </trans-unit>
        <trans-unit id="86c125f61aa798d8e570c84873c21f581edee4b6" translate="yes" xml:space="preserve">
          <source>Extensions for java.util.concurrent.ConcurrentMap</source>
          <target state="translated">java.util.concurrent.ConcurrentMap의 확장</target>
        </trans-unit>
        <trans-unit id="7c4cef4cdc47c5a0bf19e79d3eb4fa62d21ca526" translate="yes" xml:space="preserve">
          <source>Extensions for java.util.concurrent.locks.Lock</source>
          <target state="translated">java.util.concurrent.locks.Lock의 확장</target>
        </trans-unit>
        <trans-unit id="b485fb17804e0e991120066ac20569bfe5c26a3c" translate="yes" xml:space="preserve">
          <source>Extensions for java.util.concurrent.locks.ReentrantReadWriteLock</source>
          <target state="translated">java.util.concurrent.locks.ReentrantReadWriteLock의 확장</target>
        </trans-unit>
        <trans-unit id="414cada964acd8bd9e1e6c02985aebf6df173ad7" translate="yes" xml:space="preserve">
          <source>Extensions for java.util.regex.Pattern</source>
          <target state="translated">java.util.regex.Pattern의 확장</target>
        </trans-unit>
        <trans-unit id="757d6146e2012199e6bb842d802f53ef4ff91fae" translate="yes" xml:space="preserve">
          <source>Extensions for java.util.stream.DoubleStream</source>
          <target state="translated">java.util.stream.DoubleStream의 확장</target>
        </trans-unit>
        <trans-unit id="2730f9b1d95c9b0be067fdfe8d1bf63f04d66c36" translate="yes" xml:space="preserve">
          <source>Extensions for java.util.stream.IntStream</source>
          <target state="translated">java.util.stream.IntStream의 확장</target>
        </trans-unit>
        <trans-unit id="a27ac102df0c42a230129dd84535df76fbd245be" translate="yes" xml:space="preserve">
          <source>Extensions for java.util.stream.LongStream</source>
          <target state="translated">java.util.stream.LongStream의 확장</target>
        </trans-unit>
        <trans-unit id="64be01bf05722c57090d4f50f3ce593da917cb7f" translate="yes" xml:space="preserve">
          <source>Extensions for java.util.stream.Stream</source>
          <target state="translated">java.util.stream.Stream의 확장</target>
        </trans-unit>
        <trans-unit id="ffd106e43f1f60a473e9c938c997ed060ed8c485" translate="yes" xml:space="preserve">
          <source>Extensions for kotlin.sequences.Sequence</source>
          <target state="translated">kotlin.sequences.Sequence의 확장</target>
        </trans-unit>
        <trans-unit id="f99ea873dfea775479c335eab5803cfde34107d6" translate="yes" xml:space="preserve">
          <source>Extensions utilize the same &lt;a href=&quot;visibility-modifiers&quot;&gt;visibility of other entities&lt;/a&gt; as regular functions declared in the same scope would. For example:</source>
          <target state="translated">확장은 같은 범위에서 선언 된 일반 함수 &lt;a href=&quot;visibility-modifiers&quot;&gt;와 다른 엔티티의 가시성을&lt;/a&gt; 활용합니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8d10c693b773b327ecf17fbda7591feccda0c54d" translate="yes" xml:space="preserve">
          <source>External</source>
          <target state="translated">External</target>
        </trans-unit>
        <trans-unit id="b218d608576f8d28f4a7419eec6029fe3056ab1d" translate="yes" xml:space="preserve">
          <source>External interfaces have some restrictions:</source>
          <target state="translated">외부 인터페이스에는 몇 가지 제한이 있습니다.</target>
        </trans-unit>
        <trans-unit id="fbe670fe71f260f3b9c49599ce41e0605a44d7d5" translate="yes" xml:space="preserve">
          <source>External parcelers can be applied using &lt;code&gt;@TypeParceler&lt;/code&gt; or &lt;code&gt;@WriteWith&lt;/code&gt; annotations:</source>
          <target state="translated">&lt;code&gt;@TypeParceler&lt;/code&gt; 또는 &lt;code&gt;@WriteWith&lt;/code&gt; 주석을 사용하여 외부 소포를 적용 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ae31299de3fd40f30a779befa5b69d1b665ecee7" translate="yes" xml:space="preserve">
          <source>ExternalObjCClass</source>
          <target state="translated">ExternalObjCClass</target>
        </trans-unit>
        <trans-unit id="8c3e992beac9ce57c5d18399f9649cfe6776dc02" translate="yes" xml:space="preserve">
          <source>Extract function refactoring</source>
          <target state="translated">함수 리팩토링 추출</target>
        </trans-unit>
        <trans-unit id="d7e4092f1ada90ff78c5ffbaece8f1d9c9fe883e" translate="yes" xml:space="preserve">
          <source>Extracts the key of an &lt;a href=&quot;key-of#kotlin.collections.Grouping%24keyOf%28kotlin.collections.Grouping.T%29%2Felement&quot;&gt;element&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;key-of#kotlin.collections.Grouping%24keyOf%28kotlin.collections.Grouping.T%29%2Felement&quot;&gt;요소&lt;/a&gt; 의 키를 추출합니다 .</target>
        </trans-unit>
        <trans-unit id="03688ba6aa340b87549088aa5739944cb6b1dc73" translate="yes" xml:space="preserve">
          <source>FAQ</source>
          <target state="translated">FAQ</target>
        </trans-unit>
        <trans-unit id="987f4e96caf5df1037efbd4ee25756938e9da844" translate="yes" xml:space="preserve">
          <source>FIELD</source>
          <target state="translated">FIELD</target>
        </trans-unit>
        <trans-unit id="b4915d3a7ef82abdf96f2b5042452a69b2ea344c" translate="yes" xml:space="preserve">
          <source>FILE</source>
          <target state="translated">FILE</target>
        </trans-unit>
        <trans-unit id="58f8d703301dc080dbc5ad227fc9eb9a6907792a" translate="yes" xml:space="preserve">
          <source>FINAL_QUOTE_PUNCTUATION</source>
          <target state="translated">FINAL_QUOTE_PUNCTUATION</target>
        </trans-unit>
        <trans-unit id="3f6103eba0b588dc2c4ca41ac7c6811788d10af9" translate="yes" xml:space="preserve">
          <source>FORMAT</source>
          <target state="translated">FORMAT</target>
        </trans-unit>
        <trans-unit id="cbbe4ab96942b98eb0abdac26822dc1d38333a1f" translate="yes" xml:space="preserve">
          <source>FS</source>
          <target state="translated">FS</target>
        </trans-unit>
        <trans-unit id="63425456f14a800f08b688a005e2e85f84241751" translate="yes" xml:space="preserve">
          <source>FUNCTION</source>
          <target state="translated">FUNCTION</target>
        </trans-unit>
        <trans-unit id="9b310938807ae01c09739cc6dfb16a87ccdf31c5" translate="yes" xml:space="preserve">
          <source>Factory functions</source>
          <target state="translated">공장 기능</target>
        </trans-unit>
        <trans-unit id="6a870f1db04a4fcdfc79d2c09cb8d2638f09b148" translate="yes" xml:space="preserve">
          <source>Fails the build if errors are detected during the compilation</source>
          <target state="translated">컴파일 중 오류가 감지되면 빌드 실패</target>
        </trans-unit>
        <trans-unit id="d7376abef46b61b2c0e7f3ea50e99785a96f7b70" translate="yes" xml:space="preserve">
          <source>Failure to call either method will result in the iteration terminating with a failed state</source>
          <target state="translated">두 메소드 중 하나를 호출하지 않으면 반복이 실패한 상태로 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="cf4e939a4bc9f1f8a5ed344753387fde48e4f393" translate="yes" xml:space="preserve">
          <source>Fan-in</source>
          <target state="translated">Fan-in</target>
        </trans-unit>
        <trans-unit id="68d396bc4617b24173f6299d8899670495af2a75" translate="yes" xml:space="preserve">
          <source>Fan-out</source>
          <target state="translated">Fan-out</target>
        </trans-unit>
        <trans-unit id="3985dc2113f752ea3d5ba01f6f5ea23216fd7920" translate="yes" xml:space="preserve">
          <source>Feature Releases and Incremental Releases</source>
          <target state="translated">기능 릴리스 및 증분 릴리스</target>
        </trans-unit>
        <trans-unit id="c785d69b047aae15681a82c14fb44770ecc346fb" translate="yes" xml:space="preserve">
          <source>Feature releases often add new features and may remove or change previously deprecated ones. Feature graduation from experimental to stable also happens in feature releases.</source>
          <target state="translated">기능 릴리스는 종종 새로운 기능을 추가하며 이전에 사용되지 않는 기능을 제거하거나 변경할 수 있습니다. 기능 릴리스에서 실험에서 안정에 이르는 기능 눈금도 발생합니다.</target>
        </trans-unit>
        <trans-unit id="fc8d8a130e59cea8845a112b8bb13aff241f58c0" translate="yes" xml:space="preserve">
          <source>FetchEventInit</source>
          <target state="translated">FetchEventInit</target>
        </trans-unit>
        <trans-unit id="2b91e715d2d02f2af55c3b002a28880144e2035c" translate="yes" xml:space="preserve">
          <source>Field, including property's backing field</source>
          <target state="translated">속성의 지원 필드를 포함한 필드</target>
        </trans-unit>
        <trans-unit id="af1f1743894e9d2075372f912106995709044999" translate="yes" xml:space="preserve">
          <source>Fields cannot be declared directly in Kotlin classes. However, when a property needs a backing field, Kotlin provides it automatically. This backing field can be referenced in the accessors using the &lt;code&gt;field&lt;/code&gt; identifier:</source>
          <target state="translated">필드는 Kotlin 클래스에서 직접 선언 할 수 없습니다. 그러나 자산에 지원 필드가 필요한 경우 Kotlin은 자동으로 제공합니다. 이 지원 필드는 &lt;code&gt;field&lt;/code&gt; 식별자를 사용하여 접근 자에서 참조 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2c3cafa4db3f3e1e51b3dff4303502dbe42b7a89" translate="yes" xml:space="preserve">
          <source>File</source>
          <target state="translated">File</target>
        </trans-unit>
        <trans-unit id="0b2ab472c98d63ec948dc1ae7415adc951da0e82" translate="yes" xml:space="preserve">
          <source>File I/O</source>
          <target state="translated">파일 I / O</target>
        </trans-unit>
        <trans-unit id="c244fb903631a89023331dc332d1f20761fe92c7" translate="yes" xml:space="preserve">
          <source>File annotations</source>
          <target state="translated">파일 주석</target>
        </trans-unit>
        <trans-unit id="4795bd822544fa93a0e6b59333ebc039830614e8" translate="yes" xml:space="preserve">
          <source>File annotations are placed after the file comment (if any), before the &lt;code&gt;package&lt;/code&gt; statement, and are separated from &lt;code&gt;package&lt;/code&gt; with a blank line (to emphasize the fact that they target the file and not the package).</source>
          <target state="translated">파일 주석은 파일 주석 다음에 (있는 경우) &lt;code&gt;package&lt;/code&gt; 문 앞에 배치 되고 빈 줄로 &lt;code&gt;package&lt;/code&gt; 와 분리됩니다 ( 패키지 가 아니라 파일을 대상으로한다는 사실을 강조하기 위해).</target>
        </trans-unit>
        <trans-unit id="11d00030429cf440a0eed93048e18bcf0f608864" translate="yes" xml:space="preserve">
          <source>FileAlreadyExistsException</source>
          <target state="translated">FileAlreadyExistsException</target>
        </trans-unit>
        <trans-unit id="dcbfb4b9458e6276e2eaed8e1c3a90abe3a03e22" translate="yes" xml:space="preserve">
          <source>FileList</source>
          <target state="translated">FileList</target>
        </trans-unit>
        <trans-unit id="1eeed9fc8ac08cae63efd3e6cfb86688ca1eb09e" translate="yes" xml:space="preserve">
          <source>FilePropertyBag</source>
          <target state="translated">FilePropertyBag</target>
        </trans-unit>
        <trans-unit id="24e9abbe8a8774b06b669d519dc39a1fc22f37ef" translate="yes" xml:space="preserve">
          <source>FileReaderSync</source>
          <target state="translated">FileReaderSync</target>
        </trans-unit>
        <trans-unit id="f2c382539a871cd69dfa9067309de203426794f4" translate="yes" xml:space="preserve">
          <source>FileSystemException</source>
          <target state="translated">FileSystemException</target>
        </trans-unit>
        <trans-unit id="2019cdf50d33b987fa3917d1d7ff358ce86d7ed1" translate="yes" xml:space="preserve">
          <source>FileTreeWalk</source>
          <target state="translated">FileTreeWalk</target>
        </trans-unit>
        <trans-unit id="9d8ed3c9c34c5bd81bf0d6039e6207425141909a" translate="yes" xml:space="preserve">
          <source>FileWalkDirection</source>
          <target state="translated">FileWalkDirection</target>
        </trans-unit>
        <trans-unit id="851077fa3616a78308f5defffcf72a0cd04b8626" translate="yes" xml:space="preserve">
          <source>Fills a subrange of the specified &lt;code&gt;UByte&lt;/code&gt;&lt;a href=&quot;../next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.UByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2Farray&quot;&gt;array&lt;/a&gt; starting from &lt;a href=&quot;../next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.UByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2FfromIndex&quot;&gt;fromIndex&lt;/a&gt; inclusive and ending &lt;a href=&quot;../next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.UByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2FtoIndex&quot;&gt;toIndex&lt;/a&gt; exclusive with random UBytes.</source>
          <target state="translated">특정의 부분 범위 채 웁니다 &lt;code&gt;UByte&lt;/code&gt; 의&lt;a href=&quot;../next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.UByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2Farray&quot;&gt;배열&lt;/a&gt; 에서 시작 &lt;a href=&quot;../next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.UByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2FfromIndex&quot;&gt;fromIndex와의&lt;/a&gt; 포함과 끝 &lt;a href=&quot;../next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.UByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2FtoIndex&quot;&gt;toIndex의의&lt;/a&gt; 임의 UBytes와 독점.</target>
        </trans-unit>
        <trans-unit id="b9e3c8271aa2538c927e4314da56ddc22303ee52" translate="yes" xml:space="preserve">
          <source>Fills a subrange of the specified &lt;code&gt;UByte&lt;/code&gt;&lt;a href=&quot;next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.UByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2Farray&quot;&gt;array&lt;/a&gt; starting from &lt;a href=&quot;next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.UByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2FfromIndex&quot;&gt;fromIndex&lt;/a&gt; inclusive and ending &lt;a href=&quot;next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.UByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2FtoIndex&quot;&gt;toIndex&lt;/a&gt; exclusive with random UBytes.</source>
          <target state="translated">특정의 부분 범위 채 웁니다 &lt;code&gt;UByte&lt;/code&gt; 의&lt;a href=&quot;next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.UByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2Farray&quot;&gt;배열&lt;/a&gt; 에서 시작 &lt;a href=&quot;next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.UByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2FfromIndex&quot;&gt;fromIndex와의&lt;/a&gt; 포함과 끝 &lt;a href=&quot;next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.UByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2FtoIndex&quot;&gt;toIndex의의&lt;/a&gt; 임의 UBytes와 독점.</target>
        </trans-unit>
        <trans-unit id="85987c9dd2c96e8f6547d6f683296a300a545e0f" translate="yes" xml:space="preserve">
          <source>Fills a subrange of the specified byte &lt;a href=&quot;../next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2Farray&quot;&gt;array&lt;/a&gt; starting from &lt;a href=&quot;../next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2FfromIndex&quot;&gt;fromIndex&lt;/a&gt; inclusive and ending &lt;a href=&quot;../next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2FtoIndex&quot;&gt;toIndex&lt;/a&gt; exclusive with random bytes.</source>
          <target state="translated">&lt;a href=&quot;../next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2FfromIndex&quot;&gt;fromIndex&lt;/a&gt; 부터 시작하여 &lt;a href=&quot;../next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2FtoIndex&quot;&gt;toIndex&lt;/a&gt; 독점을 임의의 바이트로 끝나는 지정된 바이트 &lt;a href=&quot;../next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2Farray&quot;&gt;배열&lt;/a&gt; 의 하위 범위를 채 웁니다 .</target>
        </trans-unit>
        <trans-unit id="3d9d39692d77315c88a1dfa964cb0fa1189bb377" translate="yes" xml:space="preserve">
          <source>Fills a subrange of the specified byte &lt;a href=&quot;next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2Farray&quot;&gt;array&lt;/a&gt; starting from &lt;a href=&quot;next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2FfromIndex&quot;&gt;fromIndex&lt;/a&gt; inclusive and ending &lt;a href=&quot;next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2FtoIndex&quot;&gt;toIndex&lt;/a&gt; exclusive with random bytes.</source>
          <target state="translated">&lt;a href=&quot;next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2FfromIndex&quot;&gt;fromIndex&lt;/a&gt; 부터 시작하여 &lt;a href=&quot;next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2FtoIndex&quot;&gt;toIndex&lt;/a&gt; 독점을 임의의 바이트로 끝나는 지정된 바이트 &lt;a href=&quot;next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%2C+kotlin.Int%2C+kotlin.Int%29%2Farray&quot;&gt;배열&lt;/a&gt; 의 하위 범위를 채 웁니다 .</target>
        </trans-unit>
        <trans-unit id="5c0dc43415d67e026e79beb225f338b213ba730c" translate="yes" xml:space="preserve">
          <source>Fills original array with the provided value.</source>
          <target state="translated">제공된 값으로 원래 배열을 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="89e798e1dda4e5dac33b7f11bf49290b106046be" translate="yes" xml:space="preserve">
          <source>Fills the list with the provided &lt;a href=&quot;fill#kotlin.collections%24fill%28kotlin.collections.MutableList%28%28kotlin.collections.fill.T%29%29%2C+kotlin.collections.fill.T%29%2Fvalue&quot;&gt;value&lt;/a&gt;.</source>
          <target state="translated">제공된 &lt;a href=&quot;fill#kotlin.collections%24fill%28kotlin.collections.MutableList%28%28kotlin.collections.fill.T%29%29%2C+kotlin.collections.fill.T%29%2Fvalue&quot;&gt;값으로&lt;/a&gt; 목록을 채 웁니다 .</target>
        </trans-unit>
        <trans-unit id="77be4617fe7494fb74087de5e016de347d74a0ab" translate="yes" xml:space="preserve">
          <source>Fills the provided &lt;a href=&quot;to-array#kotlin.collections.AbstractCollection%24toArray%28kotlin.Array%28%28kotlin.collections.AbstractCollection.toArray.T%29%29%29%2Farray&quot;&gt;array&lt;/a&gt; or creates new array of the same type and fills it with the elements of this collection.</source>
          <target state="translated">제공된 &lt;a href=&quot;to-array#kotlin.collections.AbstractCollection%24toArray%28kotlin.Array%28%28kotlin.collections.AbstractCollection.toArray.T%29%29%29%2Farray&quot;&gt;배열을&lt;/a&gt; 채우거나 동일한 유형의 새 배열을 만들어이 컬렉션의 요소로 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="9ce7a3ae6b4c588da234b20207da1a94d501af06" translate="yes" xml:space="preserve">
          <source>Fills the specified byte &lt;a href=&quot;../next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%29%2Farray&quot;&gt;array&lt;/a&gt; with random bytes and returns it.</source>
          <target state="translated">지정된 바이트 &lt;a href=&quot;../next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%29%2Farray&quot;&gt;배열&lt;/a&gt; 을 임의의 바이트로 채우고 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0d55dfbc1b184e2a8dd831cfa97e75d935c52da9" translate="yes" xml:space="preserve">
          <source>Fills the specified byte &lt;a href=&quot;next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%29%2Farray&quot;&gt;array&lt;/a&gt; with random bytes and returns it.</source>
          <target state="translated">지정된 바이트 &lt;a href=&quot;next-bytes#kotlin.random.Random%24nextBytes%28kotlin.ByteArray%29%2Farray&quot;&gt;배열&lt;/a&gt; 을 임의의 바이트로 채우고 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d25169886a4c44c520ccc551bbc86ac14323c755" translate="yes" xml:space="preserve">
          <source>Fills the specified unsigned byte &lt;a href=&quot;../next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.UByteArray%29%2Farray&quot;&gt;array&lt;/a&gt; with random bytes and returns it.</source>
          <target state="translated">지정된 부호없는 바이트 &lt;a href=&quot;../next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.UByteArray%29%2Farray&quot;&gt;배열&lt;/a&gt; 을 임의의 바이트로 채우고 반환합니다.</target>
        </trans-unit>
        <trans-unit id="aebe03633eefd6ce76234594610876a4e1a0dc69" translate="yes" xml:space="preserve">
          <source>Fills the specified unsigned byte &lt;a href=&quot;next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.UByteArray%29%2Farray&quot;&gt;array&lt;/a&gt; with random bytes and returns it.</source>
          <target state="translated">지정된 부호없는 바이트 &lt;a href=&quot;next-u-bytes#kotlin.random%24nextUBytes%28kotlin.random.Random%2C+kotlin.UByteArray%29%2Farray&quot;&gt;배열&lt;/a&gt; 을 임의의 바이트로 채우고 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9075edca21736af901d2add18e4d9491f2452b4d" translate="yes" xml:space="preserve">
          <source>Filtering</source>
          <target state="translated">Filtering</target>
        </trans-unit>
        <trans-unit id="fa9054484d7a6e039e4277de5a9419714828fdfe" translate="yes" xml:space="preserve">
          <source>Filtering a list</source>
          <target state="translated">목록 필터링</target>
        </trans-unit>
        <trans-unit id="9417e901507e0a69cfe6080357ed9c0901d63f40" translate="yes" xml:space="preserve">
          <source>Filtering by module maps</source>
          <target state="translated">모듈 맵으로 필터링</target>
        </trans-unit>
        <trans-unit id="51e63b81d7e9adf4e24abe5cfd7daefd74151793" translate="yes" xml:space="preserve">
          <source>Filtering by predicate</source>
          <target state="translated">술어에 의한 필터링</target>
        </trans-unit>
        <trans-unit id="db13d2fc62892a93874264f328534fe964c4ba34" translate="yes" xml:space="preserve">
          <source>Filtering headers by globs</source>
          <target state="translated">글롭으로 헤더 필터링</target>
        </trans-unit>
        <trans-unit id="b0aa5e3d2d9e2ddb22fa5005592a03e1e3622309" translate="yes" xml:space="preserve">
          <source>Filtering is one of the most popular tasks in the collection processing. In Kotlin, filtering conditions are defined by &lt;em&gt;predicates&lt;/em&gt; &amp;ndash; lambda functions that take a collection element and return a boolean value: &lt;code&gt;true&lt;/code&gt; means that the given element matches the predicate, &lt;code&gt;false&lt;/code&gt; means the opposite.</source>
          <target state="translated">필터링은 수집 처리에서 가장 많이 사용되는 작업 중 하나입니다. Kotlin에서 필터링 조건은 &lt;em&gt;술어 (&lt;/em&gt; 컬렉션 요소를 가져 와서 부울 값을 리턴하는 람다 함수) 로 정의됩니다 . &lt;code&gt;true&lt;/code&gt; 는 주어진 요소가 술어와 일치 함을 의미하고 &lt;code&gt;false&lt;/code&gt; 는 반대를 의미합니다.</target>
        </trans-unit>
        <trans-unit id="28660880ee5a7abb3d5dc99a669dacae6c5950ae" translate="yes" xml:space="preserve">
          <source>Finally the last factory method version allows customizing the binary name.</source>
          <target state="translated">마지막으로 마지막 팩토리 메소드 버전에서는 이진 이름을 사용자 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="446f94faa289cad0a11793f2097a9a3e254ace94" translate="yes" xml:space="preserve">
          <source>Finally we need to define an Application class. As Spring Boot looks for a public static main method, we need to define this in Kotlin. It could be done with the &lt;em&gt;@JvmStatic&lt;/em&gt; annotation and a companion object but here we prefer using a &lt;a href=&quot;../reference/functions&quot;&gt;top-level function&lt;/a&gt; defined outside Application class since it leads to more concise and clean code.</source>
          <target state="translated">마지막으로 Application 클래스를 정의해야합니다. Spring Boot는 공개 정적 메인 메소드를 찾을 때 Kotlin에서 정의해야합니다. &lt;em&gt;@JvmStatic&lt;/em&gt; 어노테이션 및 컴패니언 오브젝트를 사용하여 수행 할 수 있지만 여기서는 보다 간결하고 깨끗한 코드로 이어지기 때문에 Application 클래스 외부에 정의 된 &lt;a href=&quot;../reference/functions&quot;&gt;최상위 함수를&lt;/a&gt; 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="593295ace88e10040cffe008ef4c1167513b06bc" translate="yes" xml:space="preserve">
          <source>Finally, &lt;em&gt;in&lt;/em&gt;-checks have no overhead either:</source>
          <target state="translated">마지막으로, -check &lt;em&gt;에서&lt;/em&gt; 오버 헤드가 없습니다 :</target>
        </trans-unit>
        <trans-unit id="4ec4c9df9d82f5b8afd6529bbb9a8e7376248508" translate="yes" xml:space="preserve">
          <source>Finally, the API is either removed entirely, or hidden (&lt;a href=&quot;../-deprecation-level/-h-i-d-d-e-n#kotlin.DeprecationLevel.HIDDEN&quot;&gt;DeprecationLevel.HIDDEN&lt;/a&gt;) from code, so its usages look like unresolved references, while the API remains in the compiled code preserving binary compatibility with previously compiled code.</source>
          <target state="translated">마지막으로, API는 코드에서 완전히 제거되거나 숨겨 지므로 ( &lt;a href=&quot;../-deprecation-level/-h-i-d-d-e-n#kotlin.DeprecationLevel.HIDDEN&quot;&gt;DeprecationLevel.HIDDEN&lt;/a&gt; ), 사용법은 해석되지 않은 참조처럼 보이지만 API는 이전에 컴파일 된 코드와 바이너리 호환성을 유지하는 컴파일 된 코드에 남아 있습니다.</target>
        </trans-unit>
        <trans-unit id="19ea1ed6fcf9d758b3f3804a9abd699e53d6d484" translate="yes" xml:space="preserve">
          <source>Finally, there are functions that apply such operations to collection elements from right to left - &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/reduce-right-indexed&quot;&gt;&lt;code&gt;reduceRightIndexed()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/fold-right-indexed&quot;&gt;&lt;code&gt;foldRightIndexed()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">- 마지막으로, 오른쪽에서 왼쪽으로 수집 요소 등의 동작 기능을 적용있다 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/reduce-right-indexed&quot;&gt; &lt;code&gt;reduceRightIndexed()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/fold-right-indexed&quot;&gt; &lt;code&gt;foldRightIndexed()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f53948bf71af7c505a51fa698490804ab1131cd8" translate="yes" xml:space="preserve">
          <source>Finally, there are functions that simply test a predicate against collection elements:</source>
          <target state="translated">마지막으로 컬렉션 요소에 대해 단순히 술어를 테스트하는 함수가 있습니다.</target>
        </trans-unit>
        <trans-unit id="c1a8c5296921837c075cfaeca5d67cd0a04dbeda" translate="yes" xml:space="preserve">
          <source>Finally, there is a function that lets you produce sequence elements one by one or by chunks of arbitrary sizes &amp;ndash; the &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.sequences/sequence&quot;&gt;&lt;code&gt;sequence()&lt;/code&gt;&lt;/a&gt; function. This function takes a lambda expression containing calls of &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.sequences/-sequence-scope/yield&quot;&gt;&lt;code&gt;yield()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.sequences/-sequence-scope/yield-all&quot;&gt;&lt;code&gt;yieldAll()&lt;/code&gt;&lt;/a&gt; functions. They return an element to the sequence consumer and suspend the execution of &lt;code&gt;sequence()&lt;/code&gt; until the next element is requested by the consumer. &lt;code&gt;yield()&lt;/code&gt; takes a single element as an argument; &lt;code&gt;yieldAll()&lt;/code&gt; can take an &lt;code&gt;Iterable&lt;/code&gt; object, an &lt;code&gt;Iterator&lt;/code&gt;, or another &lt;code&gt;Sequence&lt;/code&gt;. A &lt;code&gt;Sequence&lt;/code&gt; argument of &lt;code&gt;yieldAll()&lt;/code&gt; can be infinite. However, such a call must be the last: all subsequent calls will never be executed.</source>
          <target state="translated">마지막으로, 시퀀스 요소를 하나씩 또는 임의의 크기의 덩어리 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.sequences/sequence&quot;&gt; &lt;code&gt;sequence()&lt;/code&gt; &lt;/a&gt; 함수 )로 생성 할 수있는 함수가 있습니다 . 이 함수는 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.sequences/-sequence-scope/yield&quot;&gt; &lt;code&gt;yield()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.sequences/-sequence-scope/yield-all&quot;&gt; &lt;code&gt;yieldAll()&lt;/code&gt; &lt;/a&gt; 함수 호출을 포함하는 람다 식을 사용합니다 . 이들은 요소를 시퀀스 소비자에게 반환하고 소비자 가 다음 요소를 요청할 때까지 &lt;code&gt;sequence()&lt;/code&gt; 의 실행을 일시 중단합니다 . &lt;code&gt;yield()&lt;/code&gt; 는 단일 요소를 인수로 사용합니다. &lt;code&gt;yieldAll()&lt;/code&gt; 은 &lt;code&gt;Iterable&lt;/code&gt; 객체, &lt;code&gt;Iterator&lt;/code&gt; 또는 다른 &lt;code&gt;Sequence&lt;/code&gt; 를 취할 수 있습니다 . &lt;code&gt;yieldAll()&lt;/code&gt; 의 &lt;code&gt;Sequence&lt;/code&gt; 인수무한 할 수 있습니다. 그러나 이러한 통화는 마지막 통화 여야합니다. 모든 후속 통화는 절대 실행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="39afcd9bc5f82d8e31f2fbcbc90b5a411497578c" translate="yes" xml:space="preserve">
          <source>Finally, there is a function that returns a new &lt;code&gt;List&lt;/code&gt; containing the collection elements in a random order - &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/shuffled&quot;&gt;&lt;code&gt;shuffled()&lt;/code&gt;&lt;/a&gt;. You can call it without arguments or with a &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.random/-random/index&quot;&gt;&lt;code&gt;Random&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">마지막으로 컬렉션 요소를 포함 하는 새로운 &lt;code&gt;List&lt;/code&gt; 를 임의의 순서로 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/shuffled&quot;&gt; &lt;code&gt;shuffled()&lt;/code&gt; &lt;/a&gt; 함수가 있습니다. 인수없이 또는 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.random/-random/index&quot;&gt; &lt;code&gt;Random&lt;/code&gt; &lt;/a&gt; 개체를 사용하여 호출 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bee211daf716d379de0eb2d0c93c568e44163eef" translate="yes" xml:space="preserve">
          <source>Finally, there is a useful &lt;code&gt;forEach()&lt;/code&gt; function that lets you automatically iterate a collection and execute the given code for each element. So, the same example would look like this:</source>
          <target state="translated">마지막으로 컬렉션을 자동으로 반복하고 각 요소에 대해 주어진 코드를 실행할 수 있는 유용한 &lt;code&gt;forEach()&lt;/code&gt; 함수가 있습니다. 따라서 동일한 예제는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a531cdec3d49eab2a8812ff6da172cf703efe854" translate="yes" xml:space="preserve">
          <source>Finally, to customize the representation of elements themselves, provide the &lt;code&gt;transform&lt;/code&gt; function.</source>
          <target state="translated">마지막으로 요소 자체의 표현을 사용자 정의하려면 &lt;code&gt;transform&lt;/code&gt; 기능을 제공하십시오 .</target>
        </trans-unit>
        <trans-unit id="f1a1903657c0708c2f71083344aa00ede3a0dc0c" translate="yes" xml:space="preserve">
          <source>Finally, you can apply a transformation to the returned ranges right away. To do this, provide the transformation as a lambda function when calling &lt;code&gt;windowed()&lt;/code&gt;.</source>
          <target state="translated">마지막으로 반환 된 범위에 즉시 변형을 적용 할 수 있습니다. 이렇게하려면 &lt;code&gt;windowed()&lt;/code&gt; 호출 할 때 변환을 람다 함수로 제공하십시오 .</target>
        </trans-unit>
        <trans-unit id="0ca7c890de7b104b7c385cda2f789cbcd93f1e51" translate="yes" xml:space="preserve">
          <source>Find how &lt;a href=&quot;#primitive-types-in-kotlin&quot;&gt;Primitive Types in Kotlin&lt;/a&gt; are mapped to C</source>
          <target state="translated">&lt;a href=&quot;#primitive-types-in-kotlin&quot;&gt;Kotlin의 기본 유형&lt;/a&gt; 이 C에 매핑되는 방법 찾기</target>
        </trans-unit>
        <trans-unit id="91ab1b7db4dcce3cefb5d70f34a89d81dabe88d8" translate="yes" xml:space="preserve">
          <source>FindBugs (&lt;code&gt;edu.umd.cs.findbugs.annotations&lt;/code&gt;)</source>
          <target state="translated">FindBugs ( &lt;code&gt;edu.umd.cs.findbugs.annotations&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="229bcc4f101c8a8f98260f713325ebf63c5df391" translate="yes" xml:space="preserve">
          <source>Finding element positions</source>
          <target state="translated">요소 위치 찾기</target>
        </trans-unit>
        <trans-unit id="f36d389c4a89754dda5dec648cbd01607dc377cb" translate="yes" xml:space="preserve">
          <source>Finds the first occurrence of any of the specified &lt;a href=&quot;../../kotlin.text/find-any-of#kotlin.text%24findAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;strings&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;../../kotlin.text/find-any-of#kotlin.text%24findAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">지정된 &lt;a href=&quot;../../kotlin.text/find-any-of#kotlin.text%24findAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; 에서 시작하여 선택적으로 대소 문자를 무시 하고이 문자 시퀀스에서 지정된 &lt;a href=&quot;../../kotlin.text/find-any-of#kotlin.text%24findAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;문자열&lt;/a&gt; 이 처음 나타나는 것을 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="c5d2045460fd1c1eb9867fb6f91988c743842d3d" translate="yes" xml:space="preserve">
          <source>Finds the first occurrence of any of the specified &lt;a href=&quot;../find-any-of#kotlin.text%24findAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;strings&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;../find-any-of#kotlin.text%24findAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">지정된 &lt;a href=&quot;../find-any-of#kotlin.text%24findAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; 에서 시작하여 선택적으로 대소 문자를 무시 하고이 문자 시퀀스에서 지정된 &lt;a href=&quot;../find-any-of#kotlin.text%24findAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;문자열&lt;/a&gt; 이 처음 나타나는 것을 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="f9adcfa727ac2114339b9ea89540b3052d79d448" translate="yes" xml:space="preserve">
          <source>Finds the first occurrence of any of the specified &lt;a href=&quot;find-any-of#kotlin.text%24findAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;strings&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;find-any-of#kotlin.text%24findAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">지정된 &lt;a href=&quot;find-any-of#kotlin.text%24findAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; 에서 시작하여 선택적으로 대소 문자를 무시 하고이 문자 시퀀스에서 지정된 &lt;a href=&quot;find-any-of#kotlin.text%24findAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;문자열&lt;/a&gt; 이 처음 나타나는 것을 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="7fdcfe57198b5ce268c0465263ebea77712f40d7" translate="yes" xml:space="preserve">
          <source>Finds the index of the first occurrence of any of the specified &lt;a href=&quot;../../kotlin.text/index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchars&quot;&gt;chars&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;../../kotlin.text/index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">지정된 &lt;a href=&quot;../../kotlin.text/index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; 에서 시작하여 선택적으로 대소 문자를 무시 하고이 문자 시퀀스에서 지정된 &lt;a href=&quot;../../kotlin.text/index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchars&quot;&gt;문자&lt;/a&gt; 가 처음 나타나는 색인을 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="d05669208f213fea94073f4b7dfd2030e95bdabd" translate="yes" xml:space="preserve">
          <source>Finds the index of the first occurrence of any of the specified &lt;a href=&quot;../../kotlin.text/index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;strings&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;../../kotlin.text/index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">지정된 &lt;a href=&quot;../../kotlin.text/index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; 에서 시작하여 선택적으로 대소 문자를 무시 하고이 문자 시퀀스에서 지정된 &lt;a href=&quot;../../kotlin.text/index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;문자열&lt;/a&gt; 이 처음 나타나는 색인을 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="87f37810b16a7e86468c6d165c040456f1de55a2" translate="yes" xml:space="preserve">
          <source>Finds the index of the first occurrence of any of the specified &lt;a href=&quot;../index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchars&quot;&gt;chars&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;../index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">지정된 &lt;a href=&quot;../index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; 에서 시작하여 선택적으로 대소 문자를 무시 하고이 문자 시퀀스에서 지정된 &lt;a href=&quot;../index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchars&quot;&gt;문자&lt;/a&gt; 가 처음 나타나는 색인을 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="63b9588d1e0c8b5a5e365863e579eb40d20febad" translate="yes" xml:space="preserve">
          <source>Finds the index of the first occurrence of any of the specified &lt;a href=&quot;../index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;strings&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;../index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">지정된 &lt;a href=&quot;../index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; 에서 시작하여 선택적으로 대소 문자를 무시 하고이 문자 시퀀스에서 지정된 &lt;a href=&quot;../index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;문자열&lt;/a&gt; 이 처음 나타나는 색인을 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="bc01891ab879b9ee334a5a559c564aacb3e76b2d" translate="yes" xml:space="preserve">
          <source>Finds the index of the first occurrence of any of the specified &lt;a href=&quot;index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchars&quot;&gt;chars&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">지정된 &lt;a href=&quot;index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; 에서 시작하여 선택적으로 대소 문자를 무시 하고이 문자 시퀀스에서 지정된 &lt;a href=&quot;index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchars&quot;&gt;문자&lt;/a&gt; 가 처음 나타나는 색인을 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="1983c1dc07932a0bc85d94b95f7ec0d26408fe92" translate="yes" xml:space="preserve">
          <source>Finds the index of the first occurrence of any of the specified &lt;a href=&quot;index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;strings&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">지정된 &lt;a href=&quot;index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; 에서 시작하여 선택적으로 대소 문자를 무시 하고이 문자 시퀀스에서 지정된 &lt;a href=&quot;index-of-any#kotlin.text%24indexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;문자열&lt;/a&gt; 이 처음 나타나는 색인을 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="674c6c9c3a08b1c18f1e984ee189fd45b43c970b" translate="yes" xml:space="preserve">
          <source>Finds the index of the last occurrence of any of the specified &lt;a href=&quot;../../kotlin.text/last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchars&quot;&gt;chars&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;../../kotlin.text/last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">지정된 &lt;a href=&quot;../../kotlin.text/last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; 부터 시작하여 선택적으로 대소 문자를 무시 하고이 문자 시퀀스에서 지정된 &lt;a href=&quot;../../kotlin.text/last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchars&quot;&gt;문자&lt;/a&gt; 가 마지막으로 나타나는 인덱스를 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="d01e387d9dc8aa0003032e7d9d83fb8e540bc837" translate="yes" xml:space="preserve">
          <source>Finds the index of the last occurrence of any of the specified &lt;a href=&quot;../../kotlin.text/last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;strings&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;../../kotlin.text/last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">지정된 &lt;a href=&quot;../../kotlin.text/last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; 에서 시작하여 선택적으로 대소 문자를 무시 하고이 문자 시퀀스에서 지정된 &lt;a href=&quot;../../kotlin.text/last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;문자열&lt;/a&gt; 이 마지막으로 나타나는 인덱스를 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="b0ed6c1ac3ed128e60b772ca566674d3454881c0" translate="yes" xml:space="preserve">
          <source>Finds the index of the last occurrence of any of the specified &lt;a href=&quot;../last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchars&quot;&gt;chars&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;../last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">지정된 &lt;a href=&quot;../last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; 부터 시작하여 선택적으로 대소 문자를 무시 하고이 문자 시퀀스에서 지정된 &lt;a href=&quot;../last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchars&quot;&gt;문자&lt;/a&gt; 가 마지막으로 나타나는 인덱스를 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="71a3468c854493867feea9cd21596eb51c24a2f0" translate="yes" xml:space="preserve">
          <source>Finds the index of the last occurrence of any of the specified &lt;a href=&quot;../last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;strings&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;../last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">지정된 &lt;a href=&quot;../last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; 에서 시작하여 선택적으로 대소 문자를 무시 하고이 문자 시퀀스에서 지정된 &lt;a href=&quot;../last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;문자열&lt;/a&gt; 이 마지막으로 나타나는 인덱스를 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="b45b81266833b2a1ff0b148d7d94b234f79d174a" translate="yes" xml:space="preserve">
          <source>Finds the index of the last occurrence of any of the specified &lt;a href=&quot;last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchars&quot;&gt;chars&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">지정된 &lt;a href=&quot;last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; 부터 시작하여 선택적으로 대소 문자를 무시 하고이 문자 시퀀스에서 지정된 &lt;a href=&quot;last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.CharArray%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fchars&quot;&gt;문자&lt;/a&gt; 가 마지막으로 나타나는 인덱스를 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="be0e9163dfd3435d499a6cb09fb2eaeb14ae574a" translate="yes" xml:space="preserve">
          <source>Finds the index of the last occurrence of any of the specified &lt;a href=&quot;last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;strings&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">지정된 &lt;a href=&quot;last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; 에서 시작하여 선택적으로 대소 문자를 무시 하고이 문자 시퀀스에서 지정된 &lt;a href=&quot;last-index-of-any#kotlin.text%24lastIndexOfAny%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;문자열&lt;/a&gt; 이 마지막으로 나타나는 인덱스를 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="b80b401d8af282b08f47b451f942a66fb84c87af" translate="yes" xml:space="preserve">
          <source>Finds the last occurrence of any of the specified &lt;a href=&quot;../../kotlin.text/find-last-any-of#kotlin.text%24findLastAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;strings&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;../../kotlin.text/find-last-any-of#kotlin.text%24findLastAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">지정된 &lt;a href=&quot;../../kotlin.text/find-last-any-of#kotlin.text%24findLastAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; 부터 시작하여 선택적으로 대소 문자를 무시 하고이 문자 시퀀스에서 지정된 &lt;a href=&quot;../../kotlin.text/find-last-any-of#kotlin.text%24findLastAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;문자열&lt;/a&gt; 의 마지막 항목을 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="eb062c37513e3d9a197b4d9c0cf603ddb5a9f14d" translate="yes" xml:space="preserve">
          <source>Finds the last occurrence of any of the specified &lt;a href=&quot;../find-last-any-of#kotlin.text%24findLastAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;strings&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;../find-last-any-of#kotlin.text%24findLastAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">지정된 &lt;a href=&quot;../find-last-any-of#kotlin.text%24findLastAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; 부터 시작하여 선택적으로 대소 문자를 무시 하고이 문자 시퀀스에서 지정된 &lt;a href=&quot;../find-last-any-of#kotlin.text%24findLastAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;문자열&lt;/a&gt; 의 마지막 항목을 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="200ba29f97fb4cacc4a651ea6bacc3a16bbcda2d" translate="yes" xml:space="preserve">
          <source>Finds the last occurrence of any of the specified &lt;a href=&quot;find-last-any-of#kotlin.text%24findLastAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;strings&lt;/a&gt; in this char sequence, starting from the specified &lt;a href=&quot;find-last-any-of#kotlin.text%24findLastAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; and optionally ignoring the case.</source>
          <target state="translated">지정된 &lt;a href=&quot;find-last-any-of#kotlin.text%24findLastAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2FstartIndex&quot;&gt;startIndex&lt;/a&gt; 부터 시작하여 선택적으로 대소 문자를 무시 하고이 문자 시퀀스에서 지정된 &lt;a href=&quot;find-last-any-of#kotlin.text%24findLastAnyOf%28kotlin.CharSequence%2C+kotlin.collections.Collection%28%28kotlin.String%29%29%2C+kotlin.Int%2C+kotlin.Boolean%29%2Fstrings&quot;&gt;문자열&lt;/a&gt; 의 마지막 항목을 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="a772f0b95a82f9b42ba3f2e47945b227fbfbe358" translate="yes" xml:space="preserve">
          <source>First and by default, &lt;a href=&quot;../-deprecation-level/-w-a-r-n-i-n-g#kotlin.DeprecationLevel.WARNING&quot;&gt;DeprecationLevel.WARNING&lt;/a&gt; is used to notify API consumers, but not to break their compilation or runtime usages.</source>
          <target state="translated">먼저 기본적으로 &lt;a href=&quot;../-deprecation-level/-w-a-r-n-i-n-g#kotlin.DeprecationLevel.WARNING&quot;&gt;DeprecationLevel.WARNING&lt;/a&gt; 은 API 소비자에게 알리는 데 사용되지만 컴파일 또는 런타임 사용을 중단하지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="10d34264de5bcf95a2368929c309f682ebf97d06" translate="yes" xml:space="preserve">
          <source>First let's create a library. Place the tiny library source code into &lt;code&gt;kotlinizer.kt&lt;/code&gt;:</source>
          <target state="translated">먼저 라이브러리를 만들어 봅시다. 작은 라이브러리 소스 코드를 &lt;code&gt;kotlinizer.kt&lt;/code&gt; 에 넣으십시오 .</target>
        </trans-unit>
        <trans-unit id="d6ebd189e555fcc845acb54b7025e742cee302fe" translate="yes" xml:space="preserve">
          <source>First of all, &lt;code&gt;select&lt;/code&gt; is &lt;em&gt;biased&lt;/em&gt; to the first clause. When several clauses are selectable at the same time, the first one among them gets selected. Here, both channels are constantly producing strings, so &lt;code&gt;a&lt;/code&gt; channel, being the first clause in select, wins. However, because we are using unbuffered channel, the &lt;code&gt;a&lt;/code&gt; gets suspended from time to time on its &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/-send-channel/send.html&quot;&gt;send&lt;/a&gt; invocation and gives a chance for &lt;code&gt;b&lt;/code&gt; to send, too.</source>
          <target state="translated">우선, &lt;code&gt;select&lt;/code&gt; 는 첫 번째 절에 &lt;em&gt;바이어스&lt;/em&gt; 됩니다. 여러 절을 동시에 선택할 수 있으면 그 중 첫 번째 절이 선택됩니다. 여기, 두 채널은 지속적으로, 그래서 문자열을 생산하고 있습니다 선택, 승리의 첫 번째 조항 인 채널. 우리가 버퍼링 채널을 사용하고 있기 때문에 그러나 &lt;code&gt;a&lt;/code&gt; 자사에서 때때로 중단됩니다 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/-send-channel/send.html&quot;&gt;보내기&lt;/a&gt; 호출 및 수있는 기회 제공 &lt;code&gt;b&lt;/code&gt; 도 보내기로합니다. &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="91387211d09f73aa2d29f7472f1dc87ceea391b3" translate="yes" xml:space="preserve">
          <source>First of all, we need to have a native pointer to pass to the C function. We use the &lt;code&gt;usePinned&lt;/code&gt; extension function to temporarily pin the native memory address of the byte array. The C function fills in the byte array with data. We use another extension function &lt;code&gt;ByteArray.stringFromUtf8()&lt;/code&gt; to turn the byte array into a Kotlin &lt;code&gt;String&lt;/code&gt;, assuming UTF-8 encoding.</source>
          <target state="translated">우선, C 함수에 전달할 기본 포인터가 필요합니다. &lt;code&gt;usePinned&lt;/code&gt; 확장 기능을 사용하여 바이트 배열의 기본 메모리 주소를 임시로 고정합니다. C 함수는 바이트 배열을 데이터로 채 웁니다. UTF-8 인코딩을 가정하면 다른 확장 함수 &lt;code&gt;ByteArray.stringFromUtf8()&lt;/code&gt; 을 사용하여 바이트 배열을 Kotlin &lt;code&gt;String&lt;/code&gt; 으로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="07ace0e77a28e647a56e3217744218e0f591c0d5" translate="yes" xml:space="preserve">
          <source>First of all, you need the Eclipse IDE installed on your system. You can download its latest version from &lt;a href=&quot;https://www.eclipse.org/downloads/&quot;&gt;download page&lt;/a&gt;. The &quot;Eclipse IDE for Java Developers&quot; bundle is recommended.</source>
          <target state="translated">우선, 시스템에 Eclipse IDE가 설치되어 있어야합니다. 최신 버전은 &lt;a href=&quot;https://www.eclipse.org/downloads/&quot;&gt;다운로드 페이지&lt;/a&gt; 에서 다운로드 할 수 있습니다 . &quot;Eclipse IDE for Java Developers&quot;번들이 권장됩니다.</target>
        </trans-unit>
        <trans-unit id="6def8856ba78db6ce14b20d1f189667c3be8cca9" translate="yes" xml:space="preserve">
          <source>First value.</source>
          <target state="translated">첫 번째 가치.</target>
        </trans-unit>
        <trans-unit id="014cd3d3385286090f24027a25e87fcac71bec38" translate="yes" xml:space="preserve">
          <source>First, create a new Kotlin Android Project for your application:</source>
          <target state="translated">먼저 응용 프로그램을위한 새로운 Kotlin Android 프로젝트를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="07544b4bf851debb973c4f3d5555c5bb476a9ca7" translate="yes" xml:space="preserve">
          <source>First, let's create a project folder. All the paths in this tutorial will be relative to this folder. Sometimes the missing directories will have to be created before any new files can be added.</source>
          <target state="translated">먼저 프로젝트 폴더를 만들어 봅시다. 이 자습서의 모든 경로는이 폴더를 기준으로합니다. 새 파일을 추가하기 전에 누락 된 디렉토리를 작성해야하는 경우가 있습니다.</target>
        </trans-unit>
        <trans-unit id="9334a12c7372e26d6be5b8bb8e8eb7dc7fd289ac" translate="yes" xml:space="preserve">
          <source>First, let's think about why Java needs those mysterious wildcards. The problem is explained in &lt;a href=&quot;http://www.oracle.com/technetwork/java/effectivejava-136174.html&quot;&gt;Effective Java, 3rd Edition&lt;/a&gt;, Item 31: &lt;em&gt;Use bounded wildcards to increase API flexibility&lt;/em&gt;. First, generic types in Java are &lt;strong&gt;invariant&lt;/strong&gt;, meaning that &lt;code&gt;List&amp;lt;String&amp;gt;&lt;/code&gt; is &lt;strong&gt;not&lt;/strong&gt; a subtype of &lt;code&gt;List&amp;lt;Object&amp;gt;&lt;/code&gt;. Why so? If List was not &lt;strong&gt;invariant&lt;/strong&gt;, it would have been no better than Java's arrays, since the following code would have compiled and caused an exception at runtime:</source>
          <target state="translated">먼저, 왜 자바가 그 신비한 와일드 카드를 필요로하는지 생각해 봅시다. 이 문제는 &lt;a href=&quot;http://www.oracle.com/technetwork/java/effectivejava-136174.html&quot;&gt;Effective Java, 3 판&lt;/a&gt; , 항목 31 : &lt;em&gt;경계 와일드 카드를 사용하여 API 유연성 향상에 설명되어&lt;/em&gt; 있습니다. 먼저 Java의 일반 유형은 &lt;strong&gt;변하지 않습니다&lt;/strong&gt; . 즉, &lt;code&gt;List&amp;lt;String&amp;gt;&lt;/code&gt; 은 &lt;code&gt;List&amp;lt;Object&amp;gt;&lt;/code&gt; 의 하위 유형 이 &lt;strong&gt;아닙니다&lt;/strong&gt; . 왜 그래? List가 &lt;strong&gt;변하지&lt;/strong&gt; 않으면 다음 코드가 컴파일되어 런타임에 예외가 발생했기 때문에 Java 배열보다 나을 것입니다.&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="903cc573c51fbef754880d4a04451b373d2ff417" translate="yes" xml:space="preserve">
          <source>First, there is &lt;em&gt;natural&lt;/em&gt; order. It is defined for inheritors of the &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin/-comparable/index&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt; interface. Natural order is used for sorting them when no other order is specified.</source>
          <target state="translated">첫째, &lt;em&gt;자연스러운&lt;/em&gt; 질서가 있습니다. &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin/-comparable/index&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; &lt;/a&gt; 인터페이스의 상속자를 위해 정의되었습니다 . 자연 순서는 다른 순서가 지정되지 않은 경우 정렬하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="31dfd703459e1b6a9ae1ed2fc671be3556bf75c9" translate="yes" xml:space="preserve">
          <source>First, we add the new project into the &lt;code&gt;settings.gradle&lt;/code&gt; file, simply by adding the following line to the end of the file:</source>
          <target state="translated">먼저 파일 끝에 다음 줄을 추가하여 새 프로젝트를 &lt;code&gt;settings.gradle&lt;/code&gt; 파일에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="141d229204c263b76a047b5bc576568829fec380" translate="yes" xml:space="preserve">
          <source>First, we need to include the compiled framework into the Xcode project. For this we add the framework to the &lt;code&gt;Embedded Binaries&lt;/code&gt; block of the &lt;code&gt;General&lt;/code&gt; section of the &lt;em&gt;target&lt;/em&gt; configuration page.</source>
          <target state="translated">먼저 컴파일 된 프레임 워크를 Xcode 프로젝트에 포함시켜야합니다. 이를 위해 &lt;em&gt;대상&lt;/em&gt; 구성 페이지 의 &lt;code&gt;General&lt;/code&gt; 섹션에있는 &lt;code&gt;Embedded Binaries&lt;/code&gt; 블록에 프레임 워크를 추가합니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8cb377ed1460ffda0b03789323fc3d1f940c32dd" translate="yes" xml:space="preserve">
          <source>First, we need to include the framework in the &lt;code&gt;General&lt;/code&gt; section of the &lt;em&gt;target&lt;/em&gt; configuration. There is the &lt;code&gt;Linked Frameworks and Libraries&lt;/code&gt; section to include our framework. This will make Xcode look at our framework and resolve imports both from Objective-C and Swift.</source>
          <target state="translated">먼저 &lt;em&gt;대상&lt;/em&gt; 구성 의 &lt;code&gt;General&lt;/code&gt; 섹션에 프레임 워크를 포함시켜야합니다 . 가 &lt;code&gt;Linked Frameworks and Libraries&lt;/code&gt; 우리의 프레임 워크를 포함하는 섹션. 그러면 Xcode가 프레임 워크를보고 Objective-C와 Swift의 가져 오기를 해결할 수 있습니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="883cc965531c81000adec116dcd945c6473014b3" translate="yes" xml:space="preserve">
          <source>First, you can explicitly check if &lt;code&gt;b&lt;/code&gt; is &lt;em&gt;null&lt;/em&gt;, and handle the two options separately:</source>
          <target state="translated">먼저 &lt;code&gt;b&lt;/code&gt; 가 &lt;em&gt;null&lt;/em&gt; 인지 명시 적으로 확인 하고 두 옵션을 개별적으로 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="db5e9d2943caab6eedc38de51f275f1c08eb5cbf" translate="yes" xml:space="preserve">
          <source>First-class delegation</source>
          <target state="translated">일류 대표단</target>
        </trans-unit>
        <trans-unit id="a4369cd318f982ecd4037bc347f7b700a90010b7" translate="yes" xml:space="preserve">
          <source>Fixing the Code</source>
          <target state="translated">코드 수정</target>
        </trans-unit>
        <trans-unit id="68839cce52f25f5e722d684d280b2b741a295de7" translate="yes" xml:space="preserve">
          <source>Flattening</source>
          <target state="translated">Flattening</target>
        </trans-unit>
        <trans-unit id="3ae6842a29a39335221041b3f30e383dacc9b9ea" translate="yes" xml:space="preserve">
          <source>Flavor support</source>
          <target state="translated">맛 지원</target>
        </trans-unit>
        <trans-unit id="64435fd82de7b1d614dfb9844848a48b14c6cd2c" translate="yes" xml:space="preserve">
          <source>Float</source>
          <target state="translated">Float</target>
        </trans-unit>
        <trans-unit id="1cbcea917c60692fe6c69a4151dd7e5bcc9da555" translate="yes" xml:space="preserve">
          <source>Float32Array</source>
          <target state="translated">Float32Array</target>
        </trans-unit>
        <trans-unit id="42ae0e778d4c2ca3c83ff2f30eea14a7dfba5a83" translate="yes" xml:space="preserve">
          <source>Float64Array</source>
          <target state="translated">Float64Array</target>
        </trans-unit>
        <trans-unit id="455a972c73b73dc4bac4b0a78033ba84362d0692" translate="yes" xml:space="preserve">
          <source>FloatArray</source>
          <target state="translated">FloatArray</target>
        </trans-unit>
        <trans-unit id="75f980af562e559d4e3cc96d1c51b44c9754fabe" translate="yes" xml:space="preserve">
          <source>FloatIterator</source>
          <target state="translated">FloatIterator</target>
        </trans-unit>
        <trans-unit id="b73efe618f9aa8e2897eb91cb0f18673e5d48a97" translate="yes" xml:space="preserve">
          <source>FloatVar</source>
          <target state="translated">FloatVar</target>
        </trans-unit>
        <trans-unit id="c0ea9f66df3119a44fa1e9b36eebfcf85cc69779" translate="yes" xml:space="preserve">
          <source>FloatVarOf</source>
          <target state="translated">FloatVarOf</target>
        </trans-unit>
        <trans-unit id="f2fcdb71bd772d3aedf2ab924de45e055aed5e47" translate="yes" xml:space="preserve">
          <source>Floating Point Numbers Comparison</source>
          <target state="translated">부동 소수점 숫자 비교</target>
        </trans-unit>
        <trans-unit id="fbbce7c2bd0495f1dfb372805ab8fe1d050e33ba" translate="yes" xml:space="preserve">
          <source>Floating point numbers equality</source>
          <target state="translated">부동 소수점 숫자 동등</target>
        </trans-unit>
        <trans-unit id="25f2649c6c900f682ec1c5457eaf2171cb22dfb9" translate="yes" xml:space="preserve">
          <source>Floating point to bits conversions</source>
          <target state="translated">부동 소수점을 비트로 변환</target>
        </trans-unit>
        <trans-unit id="b61c95ccd79a54c27f8848d6bdd0e42be0d1b3ab" translate="yes" xml:space="preserve">
          <source>Floating-point and other types</source>
          <target state="translated">부동 소수점 및 기타 유형</target>
        </trans-unit>
        <trans-unit id="0e7554a08478576bef6230269bfec3d2f920dec7" translate="yes" xml:space="preserve">
          <source>Floating-point numbers act similarly to in Python, but they come in two types, depending on how many digits you need. If you need larger precision, or to work with monetary amounts (or other situations where you must have exact results), use the non-primitive type &lt;code&gt;BigDecimal&lt;/code&gt;.</source>
          <target state="translated">부동 소수점 숫자는 Python에서와 비슷하게 작동하지만 필요한 자릿수에 따라 두 가지 유형이 있습니다. 더 큰 정밀도가 필요하거나 금전적 금액으로 작업하거나 정확한 결과가 필요한 다른 상황을 원한다면 기본이 아닌 유형 &lt;code&gt;BigDecimal&lt;/code&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="75247b1405beabbe2433c334ee457c6b63301008" translate="yes" xml:space="preserve">
          <source>Floats are tagged by &lt;code&gt;f&lt;/code&gt; or &lt;code&gt;F&lt;/code&gt;: &lt;code&gt;123.5f&lt;/code&gt;</source>
          <target state="translated">플로트에는 &lt;code&gt;f&lt;/code&gt; 또는 &lt;code&gt;F&lt;/code&gt; 태그가 있습니다 : &lt;code&gt;123.5f&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="99b116ec5966382c21a5d91ab57e879cd944d954" translate="yes" xml:space="preserve">
          <source>FocusEventInit</source>
          <target state="translated">FocusEventInit</target>
        </trans-unit>
        <trans-unit id="93a54a94f3c7246b2829b18c58f2f5f37395fb11" translate="yes" xml:space="preserve">
          <source>Fold and reduce</source>
          <target state="translated">접고 줄이십시오</target>
        </trans-unit>
        <trans-unit id="2e2afca6d0dd17580032d0ae27317e2de9b64677" translate="yes" xml:space="preserve">
          <source>Follow the &lt;a href=&quot;../tutorials/kotlin-android&quot;&gt;Getting Started with Android and Kotlin&lt;/a&gt; tutorial to create your first Kotlin application.</source>
          <target state="translated">(가)에 따라 &lt;a href=&quot;../tutorials/kotlin-android&quot;&gt;안드로이드와 코 틀린 시작하기&lt;/a&gt; 첫 번째 코 틀린 응용 프로그램을 만들 수있는 튜토리얼.</target>
        </trans-unit>
        <trans-unit id="3ea19335fbbfe973c7abd974cb5ad7401a1101f0" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;delegated-properties&quot;&gt;delegated properties&lt;/a&gt;, it is now possible to intercept delegate to property binding using the &lt;code&gt;provideDelegate&lt;/code&gt; operator. For example, if we want to check the property name before binding, we can write something like this:</source>
          <target state="translated">들면 &lt;a href=&quot;delegated-properties&quot;&gt;위임 특성&lt;/a&gt; , 상기 결합하여 속성 인터셉트 위임하는 것이 가능해 &lt;code&gt;provideDelegate&lt;/code&gt; 의 오퍼레이터. 예를 들어 바인딩 전에 속성 이름을 확인하려면 다음과 같이 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5f2a4b596e206597c0ed7295073dc6afa996e5b9" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/ThreadLocal.html&quot;&gt;&lt;code&gt;ThreadLocal&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/java.lang.-thread-local/as-context-element.html&quot;&gt;asContextElement&lt;/a&gt; extension function is here for the rescue. It creates an additional context element, which keeps the value of the given &lt;code&gt;ThreadLocal&lt;/code&gt; and restores it every time the coroutine switches its context.</source>
          <target state="translated">들어 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/lang/ThreadLocal.html&quot;&gt; &lt;code&gt;ThreadLocal&lt;/code&gt; 를&lt;/a&gt; , &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/java.lang.-thread-local/as-context-element.html&quot;&gt;asContextElement의&lt;/a&gt; 확장 기능은 구조를 위해 여기에있다. 주어진 &lt;code&gt;ThreadLocal&lt;/code&gt; 의 값을 유지 하고 코 루틴이 컨텍스트를 전환 할 때마다 복원 하는 추가 컨텍스트 요소를 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="f20274a899133f1e66b0011aed86b24f7186d1ca" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;Foo&amp;lt;T : TUpper&amp;gt;&lt;/code&gt;, where &lt;code&gt;T&lt;/code&gt; is an invariant type parameter with the upper bound &lt;code&gt;TUpper&lt;/code&gt;, &lt;code&gt;Foo&amp;lt;*&amp;gt;&lt;/code&gt; is equivalent to &lt;code&gt;Foo&amp;lt;out TUpper&amp;gt;&lt;/code&gt; for reading values and to &lt;code&gt;Foo&amp;lt;in Nothing&amp;gt;&lt;/code&gt; for writing values.</source>
          <target state="translated">들면 &lt;code&gt;Foo&amp;lt;T : TUpper&amp;gt;&lt;/code&gt; 여기서 &lt;code&gt;T&lt;/code&gt; 는 상한과 불변 타입 파라미터 &lt;code&gt;TUpper&lt;/code&gt; , &lt;code&gt;Foo&amp;lt;*&amp;gt;&lt;/code&gt; 동등 &lt;code&gt;Foo&amp;lt;out TUpper&amp;gt;&lt;/code&gt; 의 값을 판독하고하는 &lt;code&gt;Foo&amp;lt;in Nothing&amp;gt;&lt;/code&gt; 값을 기록하기위한.</target>
        </trans-unit>
        <trans-unit id="332d2c7a81fe2ca27d839eef9b44bce000ba25e2" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;Foo&amp;lt;in T&amp;gt;&lt;/code&gt;, where &lt;code&gt;T&lt;/code&gt; is a contravariant type parameter, &lt;code&gt;Foo&amp;lt;*&amp;gt;&lt;/code&gt; is equivalent to &lt;code&gt;Foo&amp;lt;in Nothing&amp;gt;&lt;/code&gt;. It means there is nothing you can &lt;em&gt;write&lt;/em&gt; to &lt;code&gt;Foo&amp;lt;*&amp;gt;&lt;/code&gt; in a safe way when &lt;code&gt;T&lt;/code&gt; is unknown.</source>
          <target state="translated">들면 &lt;code&gt;Foo&amp;lt;in T&amp;gt;&lt;/code&gt; 여기서 &lt;code&gt;T&lt;/code&gt; 는 contravariant 타입 파라미터 인 &lt;code&gt;Foo&amp;lt;*&amp;gt;&lt;/code&gt; 에 해당 &lt;code&gt;Foo&amp;lt;in Nothing&amp;gt;&lt;/code&gt; . 그것은 &lt;code&gt;T&lt;/code&gt; 를 알 수 없을 때 안전한 방법 으로 &lt;code&gt;Foo&amp;lt;*&amp;gt;&lt;/code&gt; 에 &lt;em&gt;쓸&lt;/em&gt; 수있는 것이 없다는 것을 의미 합니다.</target>
        </trans-unit>
        <trans-unit id="f764307d008b2dc88dbd4a50404093c551a59137" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;Foo&amp;lt;out T : TUpper&amp;gt;&lt;/code&gt;, where &lt;code&gt;T&lt;/code&gt; is a covariant type parameter with the upper bound &lt;code&gt;TUpper&lt;/code&gt;, &lt;code&gt;Foo&amp;lt;*&amp;gt;&lt;/code&gt; is equivalent to &lt;code&gt;Foo&amp;lt;out TUpper&amp;gt;&lt;/code&gt;. It means that when the &lt;code&gt;T&lt;/code&gt; is unknown you can safely &lt;em&gt;read&lt;/em&gt; values of &lt;code&gt;TUpper&lt;/code&gt; from &lt;code&gt;Foo&amp;lt;*&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">들면 &lt;code&gt;Foo&amp;lt;out T : TUpper&amp;gt;&lt;/code&gt; 여기서 &lt;code&gt;T&lt;/code&gt; 는 상한와 공변 타입 파라미터 &lt;code&gt;TUpper&lt;/code&gt; , &lt;code&gt;Foo&amp;lt;*&amp;gt;&lt;/code&gt; 에 해당 &lt;code&gt;Foo&amp;lt;out TUpper&amp;gt;&lt;/code&gt; . 그것은 때 것을 의미 &lt;code&gt;T&lt;/code&gt; 는 알 수 안전하게 수 &lt;em&gt;읽기&lt;/em&gt; 의 값 &lt;code&gt;TUpper&lt;/code&gt; 에서 &lt;code&gt;Foo&amp;lt;*&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="de45977bda92a2c4ac133cf321bc144db3f877f2" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;a--&lt;/code&gt; the steps are completely analogous.</source>
          <target state="translated">들어 &lt;code&gt;a--&lt;/code&gt; 단계는 완전히 유사합니다.</target>
        </trans-unit>
        <trans-unit id="f16d61f55554c0f8e3fcbdd6a01df57f3ff5b3b3" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;in&lt;/code&gt; and &lt;code&gt;!in&lt;/code&gt; the procedure is the same, but the order of arguments is reversed.</source>
          <target state="translated">의 경우 &lt;code&gt;in&lt;/code&gt; 와 &lt;code&gt;!in&lt;/code&gt; 과정은 동일하지만 인수의 순서가 역전된다.</target>
        </trans-unit>
        <trans-unit id="31f9ee789739cfb2cfe2b0d0e06d5b503a8b42d9" translate="yes" xml:space="preserve">
          <source>For &lt;em&gt;scoped&lt;/em&gt; concurrency &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/supervisor-scope.html&quot;&gt;supervisorScope&lt;/a&gt; can be used instead of &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/coroutine-scope.html&quot;&gt;coroutineScope&lt;/a&gt; for the same purpose. It propagates cancellation only in one direction and cancels all children only if it has failed itself. It also waits for all children before completion just like &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/coroutine-scope.html&quot;&gt;coroutineScope&lt;/a&gt; does.</source>
          <target state="translated">들어 &lt;em&gt;범위의&lt;/em&gt; 동시성 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/supervisor-scope.html&quot;&gt;supervisorScope는&lt;/a&gt; 대신 사용할 수 있습니다 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/coroutine-scope.html&quot;&gt;coroutineScope&lt;/a&gt; 같은 목적. 한 방향으로 만 취소를 전파하고 실패한 경우에만 모든 하위를 취소합니다. 또한 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/coroutine-scope.html&quot;&gt;coroutineScope&lt;/a&gt; 와 마찬가지로 모든 어린이가 완료되기를 기다립니다 .</target>
        </trans-unit>
        <trans-unit id="a0e12bb16ea7f7a27b9b78e993d5f87a2124f98e" translate="yes" xml:space="preserve">
          <source>For Common</source>
          <target state="translated">공통</target>
        </trans-unit>
        <trans-unit id="6f36291090388ede8a74a2268f3b0b4769b93681" translate="yes" xml:space="preserve">
          <source>For Common, JS</source>
          <target state="translated">공통의 경우 JS</target>
        </trans-unit>
        <trans-unit id="08f2b4dbf3c972b5d411304bf3e11192f1f2b5cd" translate="yes" xml:space="preserve">
          <source>For Common, JS, Native</source>
          <target state="translated">공통, JS, 기본</target>
        </trans-unit>
        <trans-unit id="c57700f7e3a3d62bcd69c71749f0f3be05b90f01" translate="yes" xml:space="preserve">
          <source>For Common, JVM</source>
          <target state="translated">공통의 경우 JVM</target>
        </trans-unit>
        <trans-unit id="c6d6fbfa8f0b28a75a50eef0c4691e291e4ed840" translate="yes" xml:space="preserve">
          <source>For Common, JVM, JS</source>
          <target state="translated">공통, JVM, JS</target>
        </trans-unit>
        <trans-unit id="97569590cb4cba4889ce7c34a4818f4359884242" translate="yes" xml:space="preserve">
          <source>For Common, JVM, Native</source>
          <target state="translated">공통, JVM, 기본</target>
        </trans-unit>
        <trans-unit id="dfb677aec3d63fca3e145c67432fc2f47b804a0f" translate="yes" xml:space="preserve">
          <source>For Common, Native</source>
          <target state="translated">공통, 기본</target>
        </trans-unit>
        <trans-unit id="f2a1cfa3398b9f0993eeb53309d74df3be92ac54" translate="yes" xml:space="preserve">
          <source>For Gradle, you can use &lt;a href=&quot;https://docs.gradle.org/current/userguide/composite_builds.html&quot;&gt;Gradle composite builds&lt;/a&gt; like this:</source>
          <target state="translated">Gradle의 경우 다음 과 같이 &lt;a href=&quot;https://docs.gradle.org/current/userguide/composite_builds.html&quot;&gt;Gradle 복합 빌드를&lt;/a&gt; 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="03e5026bb8bab6b35279081359d5bd1232248dec" translate="yes" xml:space="preserve">
          <source>For JS</source>
          <target state="translated">JS의 경우</target>
        </trans-unit>
        <trans-unit id="eb3146c22a68ff70c95d86d10c3aac2c61e9ff48" translate="yes" xml:space="preserve">
          <source>For JS, Native</source>
          <target state="translated">JS, 기본</target>
        </trans-unit>
        <trans-unit id="52a5c3b06aba4f97fbfff83904d500d04c6cf159" translate="yes" xml:space="preserve">
          <source>For JVM</source>
          <target state="translated">JVM의 경우</target>
        </trans-unit>
        <trans-unit id="f560905d6ce11426aa66b2a00de81c0fb9ddf9a2" translate="yes" xml:space="preserve">
          <source>For JVM targets, use &lt;code&gt;kotlin-test-junit&lt;/code&gt; or &lt;code&gt;kotlin-test-testng&lt;/code&gt; for the corresponding asserter implementation and annotations mapping.</source>
          <target state="translated">JVM 대상의 경우 해당 어설 터 구현 및 주석 맵핑에 &lt;code&gt;kotlin-test-junit&lt;/code&gt; 또는 &lt;code&gt;kotlin-test-testng&lt;/code&gt; 를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="e336336a19c419821bcd2958c5a320b4be56f6b6" translate="yes" xml:space="preserve">
          <source>For JVM, JS, Native</source>
          <target state="translated">JVM, JS, 기본</target>
        </trans-unit>
        <trans-unit id="4231cf261b352f7e81cbd406b3067bb406f78f5e" translate="yes" xml:space="preserve">
          <source>For JVM, Native</source>
          <target state="translated">JVM의 경우 기본</target>
        </trans-unit>
        <trans-unit id="04b10a19cf1aeb7cc946055626cdf7a2d6e7e7bc" translate="yes" xml:space="preserve">
          <source>For Kotlin types, it means that &lt;code&gt;null&lt;/code&gt; value is allowed to be represented by this type. In practice it means that the type was declared with a question mark at the end. For non-Kotlin types, it means the type or the symbol which was declared with this type is annotated with a runtime-retained nullability annotation such as javax.annotation.Nullable.</source>
          <target state="translated">Kotlin 형식의 경우이 값으로 &lt;code&gt;null&lt;/code&gt; 값을 나타낼 수 있음을 의미합니다 . 실제로 이것은 형식이 끝에 물음표로 선언되었음을 의미합니다. 코 틀린이 아닌 유형의 경우,이 유형으로 선언 된 유형 또는 기호에 javax.annotation.Nullable과 같은 런타임 보유 널 (null) 가능 어노테이션이 주석으로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="e5178c43125e009c8d866f7748cc2bbf34035517" translate="yes" xml:space="preserve">
          <source>For Kotlin/JS targets, add &lt;code&gt;kotlin-test-js&lt;/code&gt; as a test dependency. At this point, test tasks for Kotlin/JS are created but do not run tests by default; they should be manually configured to run the tests with a JavaScript test framework.</source>
          <target state="translated">Kotlin / JS 대상의 경우 테스트 종속성으로 &lt;code&gt;kotlin-test-js&lt;/code&gt; 를 추가하십시오 . 이 시점에서 Kotlin / JS에 대한 테스트 작업이 생성되지만 기본적으로 테스트는 실행하지 않습니다. JavaScript 테스트 프레임 워크로 테스트를 실행하도록 수동으로 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="a36b859180dd2062331e5d0956bbf601eda4340d" translate="yes" xml:space="preserve">
          <source>For Loops</source>
          <target state="translated">루프</target>
        </trans-unit>
        <trans-unit id="6d6e345d366909cab27a1a82d173a98512a79549" translate="yes" xml:space="preserve">
          <source>For Maven, it would be:</source>
          <target state="translated">Maven의 경우 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1b374591365e51702410472ce8ea252f95f74ff7" translate="yes" xml:space="preserve">
          <source>For Native</source>
          <target state="translated">네이티브</target>
        </trans-unit>
        <trans-unit id="fa0cf33839ec78139e380b6a981aa8d6503e8b15" translate="yes" xml:space="preserve">
          <source>For OSGi support see the &lt;a href=&quot;kotlin-osgi&quot;&gt;Kotlin OSGi page&lt;/a&gt;.</source>
          <target state="translated">OSGi 지원에 대해서는 &lt;a href=&quot;kotlin-osgi&quot;&gt;Kotlin OSGi 페이지를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f4a584c0cd636b99f6cd5deb25bfe0a9ca2e2c8a" translate="yes" xml:space="preserve">
          <source>For a &lt;strong&gt;mutable&lt;/strong&gt; property (a &lt;em&gt;var&lt;/em&gt;), a delegate has to &lt;em&gt;additionally&lt;/em&gt; provide a function named &lt;code&gt;setValue&lt;/code&gt; that takes the following parameters:</source>
          <target state="translated">A에 대한 &lt;strong&gt;가변&lt;/strong&gt; 속성 (a &lt;em&gt;VAR&lt;/em&gt; ) 대리자에게 &lt;em&gt;별도로&lt;/em&gt; 라는 기능을 제공 &lt;code&gt;setValue&lt;/code&gt; 의 다음의 파라미터를 취</target>
        </trans-unit>
        <trans-unit id="35025801cc394371dfde9934e9cf7e49df02c0ef" translate="yes" xml:space="preserve">
          <source>For a &lt;strong&gt;read-only&lt;/strong&gt; property (i.e. a &lt;em&gt;val&lt;/em&gt;), a delegate has to provide a function named &lt;code&gt;getValue&lt;/code&gt; that takes the following parameters:</source>
          <target state="translated">A에 대한 &lt;strong&gt;읽기 전용&lt;/strong&gt; 특성 (즉, &lt;em&gt;발&lt;/em&gt; ), 대리자라는 기능을 제공해야한다 &lt;code&gt;getValue&lt;/code&gt; 다음과 같은 매개 변수를 사용합니다</target>
        </trans-unit>
        <trans-unit id="21cb8d49e26bf8342dc4bb5b4ad4da91a1e77a5f" translate="yes" xml:space="preserve">
          <source>For a gradual migration, it's possible to enable the &lt;em&gt;&quot;File is not formatted according to project settings&quot;&lt;/em&gt; inspection. It will highlight the places that should be reformatted. After enabling the &lt;em&gt;&quot;Apply only to modified files&quot;&lt;/em&gt; option, inspection will show formatting problems only in modified files. Such files are probably going to be committed soon anyway.</source>
          <target state="translated">점진적 마이그레이션의 경우 &lt;em&gt;&quot;프로젝트 설정에 따라 파일 형식이 지정되지 않았습니다&quot;&lt;/em&gt; 검사 를 활성화 할 수 있습니다 . 다시 포맷해야 할 곳이 강조 표시됩니다. &lt;em&gt;&quot;수정 된 파일에만 적용&quot;&lt;/em&gt; 옵션 &lt;em&gt;을&lt;/em&gt; 활성화하면 검사에서 수정 된 파일에서만 서식 문제가 표시됩니다. 이러한 파일은 아마 곧 커밋 될 것입니다.</target>
        </trans-unit>
        <trans-unit id="6e4c801bbb25ddbc3c08a47408830082eed3477f" translate="yes" xml:space="preserve">
          <source>For a lambda with multiple parameters, you can use the &lt;code&gt;_&lt;/code&gt; character to replace the names of the parameters you don't use:</source>
          <target state="translated">여러 개의 매개 변수가있는 람다의 경우 &lt;code&gt;_&lt;/code&gt; 문자를 사용하여 사용하지 않는 매개 변수의 이름을 바꿀 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b3f1a97500bff9f685ac335e27f80b3c7d1687f3" translate="yes" xml:space="preserve">
          <source>For a low-level description, see the &lt;a href=&quot;https://github.com/JetBrains/kotlin/blob/master/spec-docs/reified-type-parameters.md&quot;&gt;spec document&lt;/a&gt;.</source>
          <target state="translated">낮은 수준의 설명은 &lt;a href=&quot;https://github.com/JetBrains/kotlin/blob/master/spec-docs/reified-type-parameters.md&quot;&gt;사양 문서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="52de52af3f48a41d7aaf8f9a39e3810b703b093a" translate="yes" xml:space="preserve">
          <source>For a more complete example of using &lt;code&gt;libcurl&lt;/code&gt;, the &lt;a href=&quot;https://github.com/JetBrains/kotlin-native/tree/master/samples/libcurl&quot;&gt;libcurl sample of the Kotlin/Native project&lt;/a&gt; shows how to abstract the code into Kotlin classes as well as display headers. It also demonstrates how to make the steps a little easier by combining them into a shell script or Gradle build. We'll cover these topics though in more detail in subsequent tutorials.</source>
          <target state="translated">&lt;code&gt;libcurl&lt;/code&gt; 사용의보다 완전한 &lt;a href=&quot;https://github.com/JetBrains/kotlin-native/tree/master/samples/libcurl&quot;&gt;예제를 위해 Kotlin / Native 프로젝트&lt;/a&gt; 의 libcurl 샘플은 코드를 Kotlin 클래스로 추상화하고 헤더를 표시하는 방법을 보여줍니다. 또한 단계를 쉘 스크립트 또는 Gradle 빌드로 결합하여 단계를 조금 더 쉽게 만드는 방법을 보여줍니다. 이후의 자습서에서이 주제에 대해 자세히 설명합니다.</target>
        </trans-unit>
        <trans-unit id="ed114e62d47b1c0762ff485fe26cc64acad1eb09" translate="yes" xml:space="preserve">
          <source>For a more complete example please refer to the &lt;a href=&quot;https://github.com/JetBrains/kotlin-native/tree/master/samples/workers&quot;&gt;workers example&lt;/a&gt; in the Kotlin/Native repository.</source>
          <target state="translated">보다 완전한 예 는 Kotlin / Native 리포지토리 의 &lt;a href=&quot;https://github.com/JetBrains/kotlin-native/tree/master/samples/workers&quot;&gt;worker&lt;/a&gt; 예제를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="05ea2ae6af0a59b8862585f8d9a02e695b4bd06e" translate="yes" xml:space="preserve">
          <source>For a more in-depth introduction to the language, check out the &lt;a href=&quot;index&quot;&gt;reference documentation&lt;/a&gt; on this site and &lt;a href=&quot;../tutorials/koans&quot;&gt;Kotlin Koans&lt;/a&gt;.</source>
          <target state="translated">언어에 대한 자세한 내용은 이 사이트와 &lt;a href=&quot;../tutorials/koans&quot;&gt;Kotlin Koans&lt;/a&gt; 의 &lt;a href=&quot;index&quot;&gt;참조 설명서&lt;/a&gt; 를 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="d8d65cf737fd6a20fca9a5968a403caa15ac7b74" translate="yes" xml:space="preserve">
          <source>For a more in-depth introduction, check out the &lt;a href=&quot;index&quot;&gt;reference documentation&lt;/a&gt; on this site and &lt;a href=&quot;../tutorials/koans&quot;&gt;Kotlin Koans&lt;/a&gt;.</source>
          <target state="translated">보다 자세한 소개 는이 사이트와 &lt;a href=&quot;../tutorials/koans&quot;&gt;Kotlin Koans&lt;/a&gt; 의 &lt;a href=&quot;index&quot;&gt;참조 문서&lt;/a&gt; 를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="fbc2c91fbdda5a2b47669726bfdd3023ba301d36" translate="yes" xml:space="preserve">
          <source>For a more technical description, see the &lt;a href=&quot;https://github.com/JetBrains/kotlin/blob/master/spec-docs/dynamic-types.md&quot;&gt;spec document&lt;/a&gt;.</source>
          <target state="translated">자세한 기술 설명은 &lt;a href=&quot;https://github.com/JetBrains/kotlin/blob/master/spec-docs/dynamic-types.md&quot;&gt;사양 문서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4905d96c37716a04ccca3bcd0aec1d2235e24e05" translate="yes" xml:space="preserve">
          <source>For a mutable property, e.g. &lt;code&gt;var y = 1&lt;/code&gt;, &lt;code&gt;::y&lt;/code&gt; returns a value of type &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.reflect/-k-mutable-property/index&quot;&gt;&lt;code&gt;KMutableProperty&amp;lt;Int&amp;gt;&lt;/code&gt;&lt;/a&gt;, which has a &lt;code&gt;set()&lt;/code&gt; method:</source>
          <target state="translated">가변 속성 (예 : &lt;code&gt;var y = 1&lt;/code&gt; 경우 &lt;code&gt;::y&lt;/code&gt; 는 &lt;code&gt;set()&lt;/code&gt; 메서드 가있는 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.reflect/-k-mutable-property/index&quot;&gt; &lt;code&gt;KMutableProperty&amp;lt;Int&amp;gt;&lt;/code&gt; &lt;/a&gt; 유형의 값을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="c04dc331c62e225f9ba430516892d65199206707" translate="yes" xml:space="preserve">
          <source>For a symbol that is declared inside a class:</source>
          <target state="translated">클래스 내에서 선언 된 심볼의 경우 :</target>
        </trans-unit>
        <trans-unit id="e993bf612bf1600b9ce9618843fca0af6ca52f9c" translate="yes" xml:space="preserve">
          <source>For a typical Unix library with a config script, the &lt;code&gt;compilerOpts&lt;/code&gt; will likely contain the output of a config script with the &lt;code&gt;--cflags&lt;/code&gt; flag (maybe without exact paths).</source>
          <target state="translated">구성 스크립트가있는 일반적인 Unix 라이브러리의 경우 &lt;code&gt;compilerOpts&lt;/code&gt; 에 &lt;code&gt;--cflags&lt;/code&gt; 플래그 가있는 구성 스크립트 출력이 포함될 수 있습니다 (정확한 경로 가 없을 수 있음 ).</target>
        </trans-unit>
        <trans-unit id="f0ffc38ab87aa0a2254afe0dac4d4f4abe21ea7b" translate="yes" xml:space="preserve">
          <source>For additional details, please consult the &lt;a href=&quot;https://github.com/Kotlin/KEEP/blob/master/proposals/scripting-support.md&quot;&gt;KEEP-75&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://github.com/Kotlin/KEEP/blob/master/proposals/scripting-support.md&quot;&gt;KEEP-75&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="86c5db154bc4017f6e19e21eebb42b806549c22c" translate="yes" xml:space="preserve">
          <source>For advanced usage, for example for integration with logging MDC, transactional contexts or any other libraries which internally use thread-locals for passing data, see documentation for &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-thread-context-element/index.html&quot;&gt;ThreadContextElement&lt;/a&gt; interface that should be implemented.</source>
          <target state="translated">예를 들어 MDC 로깅, 트랜잭션 컨텍스트 또는 내부적으로 데이터 전달을 위해 스레드 로컬을 사용하는 다른 라이브러리와의 통합과 같은 고급 사용법에 대해서는 구현해야하는 &lt;a href=&quot;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/-thread-context-element/index.html&quot;&gt;ThreadContextElement&lt;/a&gt; 인터페이스에 대한 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d1b6d864741b47438551c8743952cc88342b08e2" translate="yes" xml:space="preserve">
          <source>For all &lt;code&gt;Unix&lt;/code&gt; or &lt;code&gt;Windows&lt;/code&gt; based targets (including &lt;code&gt;Android&lt;/code&gt; and &lt;code&gt;iPhone&lt;/code&gt;) we provide the &lt;code&gt;posix&lt;/code&gt; platform lib. It contains bindings to platform's implementation of &lt;code&gt;POSIX&lt;/code&gt; standard.</source>
          <target state="translated">모든 &lt;code&gt;Unix&lt;/code&gt; 또는 &lt;code&gt;Windows&lt;/code&gt; 기반 대상 ( &lt;code&gt;Android&lt;/code&gt; 및 &lt;code&gt;iPhone&lt;/code&gt; 포함 )에 대해 &lt;code&gt;posix&lt;/code&gt; 플랫폼 lib를 제공합니다 . 여기에는 플랫폼의 &lt;code&gt;POSIX&lt;/code&gt; 표준 구현에 대한 바인딩이 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="637ba86f66e04bfb5c21e0d443fd411f1ae0d969" translate="yes" xml:space="preserve">
          <source>For an example of CocoaPods integration, refer to the &lt;a href=&quot;https://github.com/JetBrains/kotlin-native/tree/master/samples/cocoapods&quot;&gt;&lt;code&gt;cocoapods&lt;/code&gt;&lt;/a&gt; sample.</source>
          <target state="translated">CocoaPods 통합의 예는 &lt;a href=&quot;https://github.com/JetBrains/kotlin-native/tree/master/samples/cocoapods&quot;&gt; &lt;code&gt;cocoapods&lt;/code&gt; &lt;/a&gt; 샘플을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cdf11697a4677fb9ee8260c3dad7ad63798e47a6" translate="yes" xml:space="preserve">
          <source>For an extension property:</source>
          <target state="translated">확장 속성의 경우 :</target>
        </trans-unit>
        <trans-unit id="71b6ee394141461f71e0ce2d3f94fa8ad9908ffc" translate="yes" xml:space="preserve">
          <source>For bigger collections, you may want to specify the &lt;code&gt;limit&lt;/code&gt; &amp;ndash; a number of elements that will be included into result. If the collection size exceeds the &lt;code&gt;limit&lt;/code&gt;, all the other elements will be replaced with a single value of the &lt;code&gt;truncated&lt;/code&gt; argument.</source>
          <target state="translated">더 큰 컬렉션의 경우 &lt;code&gt;limit&lt;/code&gt; 를 지정하려고 할 수 있습니다. 결과에 포함될 요소 수입니다. 컬렉션 크기가 &lt;code&gt;limit&lt;/code&gt; 을 초과하면 다른 모든 요소가 &lt;code&gt;truncated&lt;/code&gt; 인수 의 단일 값으로 대체됩니다 .</target>
        </trans-unit>
        <trans-unit id="694ca7b8850a82c8e256d49268391f7fa91d2fc1" translate="yes" xml:space="preserve">
          <source>For building maps with collection elements as values, there is the function &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/associate-by&quot;&gt;&lt;code&gt;associateBy()&lt;/code&gt;&lt;/a&gt;. It takes a function that returns a key based on an element's value. If two elements are equal, only the last one remains in the map. &lt;code&gt;associateBy()&lt;/code&gt; can also be called with a value transformation function.</source>
          <target state="translated">콜렉션 요소를 값으로 사용하여 맵을 빌드하는 경우 connectBy &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/associate-by&quot;&gt; &lt;code&gt;associateBy()&lt;/code&gt; &lt;/a&gt; 함수가 있습니다 . 요소의 값에 따라 키를 반환하는 함수를 사용합니다. 두 요소가 같으면 마지막 요소 만 맵에 남아 있습니다. 값 변환 함수를 사용하여 &lt;code&gt;associateBy()&lt;/code&gt; 를 호출 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="f47b960e3cf1bba7f7326ae02c9c3b8dd9fb72b5" translate="yes" xml:space="preserve">
          <source>For certain collection operations, there is an option to specify the &lt;em&gt;destination&lt;/em&gt; object. Destination is a mutable collection to which the function appends its resulting items instead of returning them in a new object. For performing operations with destinations, there are separate functions with the &lt;code&gt;To&lt;/code&gt; postfix in their names, for example, &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/filter-to&quot;&gt;&lt;code&gt;filterTo()&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/filter&quot;&gt;&lt;code&gt;filter()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/associate-to&quot;&gt;&lt;code&gt;associateTo()&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/associate&quot;&gt;&lt;code&gt;associate()&lt;/code&gt;&lt;/a&gt;. These functions take the destination collection as an additional parameter.</source>
          <target state="translated">특정 수집 작업에는 &lt;em&gt;대상&lt;/em&gt; 객체 를 지정하는 옵션이 있습니다. 대상은 함수가 결과 항목을 새 객체로 반환하지 않고 추가하는 변경 가능한 컬렉션입니다. 대상으로 작업을 수행하는 경우, 별도의 기능으로 거기 &lt;code&gt;To&lt;/code&gt; , 예를 들어 이름에 접미사가, &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/filter-to&quot;&gt; &lt;code&gt;filterTo()&lt;/code&gt; &lt;/a&gt; 대신에 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/filter&quot;&gt; &lt;code&gt;filter()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/associate-to&quot;&gt; &lt;code&gt;associateTo()&lt;/code&gt; &lt;/a&gt; 대신 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/associate&quot;&gt; &lt;code&gt;associate()&lt;/code&gt; &lt;/a&gt; . 이 함수는 대상 컬렉션을 추가 매개 변수로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="02887bdbee3c2022f2023698adee356772aedd2e" translate="yes" xml:space="preserve">
          <source>For certain operations, there are pairs of functions for performing the same operation: one applies the operation in-place and the other returns the result as a separate collection. For example, &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sort&quot;&gt;&lt;code&gt;sort()&lt;/code&gt;&lt;/a&gt; sorts a mutable collection in-place, so it's state changes; &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sorted&quot;&gt;&lt;code&gt;sorted()&lt;/code&gt;&lt;/a&gt; creates a new collection that contains the same elements in the sorted order.</source>
          <target state="translated">특정 작업에는 동일한 작업을 수행하기위한 기능 쌍이 있습니다. 하나는 작업을 제자리에 적용하고 다른 하나는 결과를 별도의 컬렉션으로 반환합니다. 예를 들어 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sort&quot;&gt; &lt;code&gt;sort()&lt;/code&gt; &lt;/a&gt; 는 변경 가능한 컬렉션을 적절하게 정렬하므로 상태가 변경됩니다. &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/sorted&quot;&gt; &lt;code&gt;sorted()&lt;/code&gt; &lt;/a&gt; 는 정렬 된 순서로 동일한 요소를 포함하는 새 컬렉션을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="b47aa3d5261111e5dc0cf33a82d66cb2c8e5c3fe" translate="yes" xml:space="preserve">
          <source>For classes with a long supertype list, put a line break after the colon and align all supertype names horizontally:</source>
          <target state="translated">긴 수퍼 타입 ​​목록이있는 클래스의 경우 콜론 뒤에 줄 바꿈을 넣고 모든 수퍼 타입 ​​이름을 가로로 정렬하십시오.</target>
        </trans-unit>
        <trans-unit id="f5426c4f7933a1cb4871210952ed14cb2d0d066b" translate="yes" xml:space="preserve">
          <source>For classifiers representing type parameters, the type argument list must always be empty. For classes, the type argument list should contain arguments for the type parameters of the class. If the class is &lt;code&gt;inner&lt;/code&gt;, the list should follow with arguments for the type parameters of its outer class, and so forth until a class is not &lt;code&gt;inner&lt;/code&gt;, or is declared on the top level.</source>
          <target state="translated">형식 매개 변수를 나타내는 분류 자의 경우 형식 인수 목록은 항상 비어 있어야합니다. 클래스의 경우 형식 인수 목록에는 클래스의 형식 매개 변수에 대한 인수가 포함되어야합니다. 클래스 인 경우 &lt;code&gt;inner&lt;/code&gt; 클래스가 아닌 때까지, 목록 등의 외부 클래스의 형식 매개 변수에 대한 인수를 따르해야하고 &lt;code&gt;inner&lt;/code&gt; 또는 최상위에 선언됩니다.</target>
        </trans-unit>
        <trans-unit id="ed9eeecc6a0d768124a687f0cde43ed7908087f9" translate="yes" xml:space="preserve">
          <source>For completeness: it is also possible (but discouraged) to split the declaration and the initial assignment, and even to initialize in multiple places based on some condition. You can only read the variable at a point where the compiler can prove that every possible execution path will have initialized it. If you're creating a read-only variable in this way, you must also ensure that every possible execution path assigns to it &lt;em&gt;exactly&lt;/em&gt; once.</source>
          <target state="translated">완전성을 위해 선언과 초기 할당을 분리하고 어떤 조건에 따라 여러 곳에서 초기화하는 것도 가능하지만 권장하지 않습니다. 컴파일러는 가능한 모든 실행 경로가 초기화되었음을 증명할 수있는 지점에서만 변수를 읽을 수 있습니다. 이런 방식으로 읽기 전용 변수를 작성하는 경우 가능한 모든 실행 경로가 &lt;em&gt;정확히&lt;/em&gt; 한 번만 지정되도록해야 &lt;em&gt;합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="79ee8b4421a58fb8d8446ab0d337de5ea30eee34" translate="yes" xml:space="preserve">
          <source>For consistency with array literals in annotations, passing a single item for a vararg parameter in the named form (&lt;code&gt;foo(items = i)&lt;/code&gt;) has been deprecated. Please use the spread operator with the corresponding array factory functions:</source>
          <target state="translated">주석의 배열 리터럴과 일관성을 유지하기 위해 이름이 지정된 형식 ( &lt;code&gt;foo(items = i)&lt;/code&gt; ) 으로 vararg 매개 변수에 단일 항목을 전달하는 것은 더 이상 사용되지 않습니다. 해당 배열 팩토리 기능과 함께 스프레드 연산자를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="afef4be80502f3cfdb78878e430e782b609b8c37" translate="yes" xml:space="preserve">
          <source>For convenience, these functions return the destination collection back, so you can create it right in the corresponding argument of the function call:</source>
          <target state="translated">편의상 이러한 함수는 대상 컬렉션을 다시 반환하므로 함수 호출의 해당 인수에서 바로 컬렉션을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b434cd5b8ed34d1f894873e141d8af5c3688e3d4" translate="yes" xml:space="preserve">
          <source>For curly braces, put the opening brace in the end of the line where the construct begins, and the closing brace on a separate line aligned horizontally with the opening construct.</source>
          <target state="translated">중괄호의 경우, 구조가 시작되는 줄의 끝에 여는 지지대를 배치하고 여는 구조와 수평으로 정렬 된 별도의 선에 닫는 지지대를 놓습니다.</target>
        </trans-unit>
        <trans-unit id="19a64fc7bea10f2735062a2c907700c0ef67633d" translate="yes" xml:space="preserve">
          <source>For debug build it embeds placeholder LLVM IR data as a marker.</source>
          <target state="translated">디버그 빌드의 경우 자리 표시 자 LLVM IR 데이터를 마커로 포함합니다.</target>
        </trans-unit>
        <trans-unit id="f7296b3affa034e56286c14adf5ca5d09604d26c" translate="yes" xml:space="preserve">
          <source>For decades, as developers we are confronted with a problem to solve - how to prevent our applications from blocking. Whether we're developing desktop, mobile, or even server-side applications, we want to avoid having the user wait or what's worse cause bottlenecks that would prevent an application from scaling.</source>
          <target state="translated">수십 년 동안 개발자로서 우리는 응용 프로그램을 차단하는 방법을 해결하는 문제에 직면했습니다. 데스크톱, 모바일 또는 서버 측 응용 프로그램을 개발하든 사용자가 기다리지 않도록하거나 병목 현상을 일으켜 응용 프로그램의 확장을 방해하는 것을 피하고 싶습니다.</target>
        </trans-unit>
        <trans-unit id="e5618ea5aa387ca3d934fa7059f4ea5eb2684f42" translate="yes" xml:space="preserve">
          <source>For detailed usage information see the documentation for &lt;a href=&quot;../../../../../docs/reference/scope-functions#also&quot;&gt;scope functions&lt;/a&gt;.</source>
          <target state="translated">자세한 사용법 정보는 &lt;a href=&quot;../../../../../docs/reference/scope-functions#also&quot;&gt;범위 기능&lt;/a&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1d58fbd0a86a8a8236e1ea5cfe8098c23478de1f" translate="yes" xml:space="preserve">
          <source>For detailed usage information see the documentation for &lt;a href=&quot;../../../../../docs/reference/scope-functions#apply&quot;&gt;scope functions&lt;/a&gt;.</source>
          <target state="translated">자세한 사용법 정보는 &lt;a href=&quot;../../../../../docs/reference/scope-functions#apply&quot;&gt;범위 기능&lt;/a&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="757a87b936de48b2ca7dbd30472b34156baef56a" translate="yes" xml:space="preserve">
          <source>For detailed usage information see the documentation for &lt;a href=&quot;../../../../../docs/reference/scope-functions#let&quot;&gt;scope functions&lt;/a&gt;.</source>
          <target state="translated">자세한 사용법 정보는 &lt;a href=&quot;../../../../../docs/reference/scope-functions#let&quot;&gt;범위 기능&lt;/a&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9afaf366ae8ced14236278d07ef496e91fa87059" translate="yes" xml:space="preserve">
          <source>For detailed usage information see the documentation for &lt;a href=&quot;../../../../../docs/reference/scope-functions#run&quot;&gt;scope functions&lt;/a&gt;.</source>
          <target state="translated">자세한 사용법 정보는 &lt;a href=&quot;../../../../../docs/reference/scope-functions#run&quot;&gt;범위 기능&lt;/a&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c60faedb0188f0b5a90fa8dfbfa95ce16294c10e" translate="yes" xml:space="preserve">
          <source>For detailed usage information see the documentation for &lt;a href=&quot;../../../../../docs/reference/scope-functions#with&quot;&gt;scope functions&lt;/a&gt;.</source>
          <target state="translated">자세한 사용법 정보는 &lt;a href=&quot;../../../../../docs/reference/scope-functions#with&quot;&gt;범위 기능&lt;/a&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="028e4a57b533fce9ed58d13b3dddb5fa9f3454af" translate="yes" xml:space="preserve">
          <source>For details on using &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/plus-assign&quot;&gt;&lt;code&gt;plusAssign&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;+=&lt;/code&gt;) and &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/minus-assign&quot;&gt;&lt;code&gt;minusAssign&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;-=&lt;/code&gt;) operators on mutable maps, see &lt;a href=&quot;#map-write-operations&quot;&gt;Map write operations&lt;/a&gt; below.</source>
          <target state="translated">변경 가능한 맵에서 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/plus-assign&quot;&gt; &lt;code&gt;plusAssign&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;+=&lt;/code&gt; ) 및 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/minus-assign&quot;&gt; &lt;code&gt;minusAssign&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;-=&lt;/code&gt; ) 연산자 사용에 대한 자세한 내용은 아래 &lt;a href=&quot;#map-write-operations&quot;&gt;맵 쓰기 작업을&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a0931a279af808bfe00c2a0d994687a2bad1f41e" translate="yes" xml:space="preserve">
          <source>For each compilation, there is a default source set under the name composed as &lt;code&gt;&amp;lt;targetName&amp;gt;&amp;lt;CompilationName&amp;gt;&lt;/code&gt;. This default source set participates in the compilation, and thus it should be used for the platform-specific code and dependencies, and for adding other source sets to the compilation by the means of 'depends on'. For example, a project with targets &lt;code&gt;jvm6&lt;/code&gt; (JVM) and &lt;code&gt;nodeJs&lt;/code&gt; (JS) will have source sets: &lt;code&gt;commonMain&lt;/code&gt;, &lt;code&gt;commonTest&lt;/code&gt;, &lt;code&gt;jvm6Main&lt;/code&gt;, &lt;code&gt;jvm6Test&lt;/code&gt;, &lt;code&gt;nodeJsMain&lt;/code&gt;, &lt;code&gt;nodeJsTest&lt;/code&gt;.</source>
          <target state="translated">각 컴파일마다 &lt;code&gt;&amp;lt;targetName&amp;gt;&amp;lt;CompilationName&amp;gt;&lt;/code&gt; 으로 구성된 이름 아래에 기본 소스 세트가 있습니다. 이 기본 소스 세트는 컴파일에 참여하므로 플랫폼 별 코드 및 종속성 및 'depends on'을 통해 다른 소스 세트를 컴파일에 추가하는 데 사용해야합니다. 예를 들어, 대상 &lt;code&gt;jvm6&lt;/code&gt; (JVM) 및 &lt;code&gt;nodeJs&lt;/code&gt; (JS)가 있는 프로젝트의 소스 세트는 &lt;code&gt;commonMain&lt;/code&gt; , &lt;code&gt;commonTest&lt;/code&gt; , &lt;code&gt;jvm6Main&lt;/code&gt; , &lt;code&gt;jvm6Test&lt;/code&gt; , &lt;code&gt;nodeJsMain&lt;/code&gt; , &lt;code&gt;nodeJsTest&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a971809f1d47fbd85329764ce9196c05695ed736" translate="yes" xml:space="preserve">
          <source>For each key, there is always a single value associated with it. You can add and remove whole entries.</source>
          <target state="translated">각 키에는 항상 하나의 값이 연결되어 있습니다. 전체 항목을 추가 및 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f9d32997cfc2635d965d79f6a6f0696c8adae072" translate="yes" xml:space="preserve">
          <source>For enum constants, it's OK to use either uppercase underscore-separated names (&lt;code&gt;enum class Color { RED, GREEN }&lt;/code&gt;) or regular camel-humps names starting with an uppercase letter, depending on the usage.</source>
          <target state="translated">열거 형 상수의 경우 사용법에 따라 대문자 밑줄로 구분 된 이름 ( &lt;code&gt;enum class Color { RED, GREEN }&lt;/code&gt; ) 또는 대문자로 시작하는 일반 낙타 혹 이름을 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="3cdc85f184c2ea8335df38fe8b455a7815ab1f41" translate="yes" xml:space="preserve">
          <source>For every parameter with a default value, this will generate one additional overload, which has this parameter and all parameters to the right of it in the parameter list removed. In this example, the following will be generated:</source>
          <target state="translated">기본값이있는 모든 매개 변수에 대해이 매개 변수와 매개 변수 목록의 오른쪽에있는 모든 매개 변수가 제거 된 추가 과부하가 생성됩니다. 이 예에서는 다음이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="94b950f7e09b83a55502571aef5cf0416b4ce619" translate="yes" xml:space="preserve">
          <source>For every set of &lt;code&gt;.h&lt;/code&gt; files, we will be using the &lt;code&gt;cinterop&lt;/code&gt;&lt;a href=&quot;../../reference/native/c_interop&quot;&gt;C Libraries&lt;/a&gt; from Kotlin/Native to generate a Kotlin/Native library, or &lt;code&gt;.klib&lt;/code&gt;. The generated library will bridge calls from Kotlin/Native to C. It includes respective Kotlin declarations for the definitions form the &lt;code&gt;.h&lt;/code&gt; files. It is only necessary to have a &lt;code&gt;.h&lt;/code&gt; file to run the &lt;code&gt;cinterop&lt;/code&gt; tool. And we do not need to create a &lt;code&gt;lib.c&lt;/code&gt; file, unless we want to compile and run the example. More details on this are covered in the &lt;a href=&quot;../../reference/native/c_interop&quot;&gt;C Libraries&lt;/a&gt; page. It is enough for the tutorial to create the &lt;code&gt;lib.def&lt;/code&gt; file with the following content:</source>
          <target state="translated">모든 &lt;code&gt;.h&lt;/code&gt; 파일 세트에 대해 Kotlin / Native 의 &lt;code&gt;cinterop&lt;/code&gt; &lt;a href=&quot;../../reference/native/c_interop&quot;&gt;C 라이브러리&lt;/a&gt; 를 사용하여 Kotlin / Native 라이브러리 또는 &lt;code&gt;.klib&lt;/code&gt; 를 생성합니다 . 생성 된 라이브러리는 Kotlin / Native에서 C로 호출을 연결합니다. 여기에는 &lt;code&gt;.h&lt;/code&gt; 파일 형식의 정의에 대한 각 Kotlin 선언이 포함됩니다 . &lt;code&gt;cinterop&lt;/code&gt; 도구 를 실행하려면 &lt;code&gt;.h&lt;/code&gt; 파일 만 있으면됩니다 . 예제를 컴파일하고 실행하지 않는 한 &lt;code&gt;lib.c&lt;/code&gt; 파일 을 만들 필요가 없습니다 . 이에 대한 자세한 내용은 &lt;a href=&quot;../../reference/native/c_interop&quot;&gt;C 라이브러리&lt;/a&gt; 페이지 에서 다룹니다 . 학습서가 다음 컨텐츠로 &lt;code&gt;lib.def&lt;/code&gt; 파일 을 작성하면 충분 합니다.</target>
        </trans-unit>
        <trans-unit id="a79d24b8ae547d8a56979a7932df7c035d95e45d" translate="yes" xml:space="preserve">
          <source>For example &lt;code&gt;compileDebugKlibraryMacos_x64KotlinNative&lt;/code&gt;, &lt;code&gt;compileTestDebugKotlinNative&lt;/code&gt;.</source>
          <target state="translated">예를 들어 &lt;code&gt;compileDebugKlibraryMacos_x64KotlinNative&lt;/code&gt; , &lt;code&gt;compileTestDebugKotlinNative&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="90fea239952b564e524c37f54598a7c5cbd251b7" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;private&lt;/code&gt; could be used to define a property or helper function that is needed by several functions in one file, or a complex type returned by one of your private functions, without leaking them to the rest of the codebase:</source>
          <target state="translated">예를 들어, &lt;code&gt;private&lt;/code&gt; 을 사용하면 한 파일의 여러 함수에 필요한 속성 또는 도우미 함수를 정의하거나 나머지 코드베이스로 누설하지 않고 개인 함수 중 하나가 반환하는 복잡한 형식을 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="41b672a7205fead42e4ee031049451669f4c3977" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;var firstName: String&lt;/code&gt; gets compiled to the following Java declarations:</source>
          <target state="translated">예를 들어, &lt;code&gt;var firstName: String&lt;/code&gt; 은 다음 Java 선언으로 컴파일됩니다.</target>
        </trans-unit>
        <trans-unit id="2e26c3138f6c624545fd6a6aad2743d30af7ee6e" translate="yes" xml:space="preserve">
          <source>For example, adding &lt;code&gt;-Xjsr305=ignore -Xjsr305=under-migration:ignore -Xjsr305=@org.library.MyNullable:warn&lt;/code&gt; to the compiler arguments makes the compiler generate warnings for inappropriate usages of types annotated by &lt;code&gt;@org.library.MyNullable&lt;/code&gt; and ignore all other JSR-305 annotations.</source>
          <target state="translated">예를 들어, &lt;code&gt;-Xjsr305=ignore -Xjsr305=under-migration:ignore -Xjsr305=@org.library.MyNullable:warn&lt;/code&gt; 을 컴파일러 인수에 추가하면 컴파일러가 &lt;code&gt;@org.library.MyNullable&lt;/code&gt; 및 다른 모든 JSR-305 주석은 무시하십시오.</target>
        </trans-unit>
        <trans-unit id="62105b32ee578f8ede398419b9b2ca8e4ed39f3b" translate="yes" xml:space="preserve">
          <source>For example, adding the following Java class:</source>
          <target state="translated">예를 들어, 다음 Java 클래스를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="704304023cf4cdbc372fedca8efa4ba9b344de40" translate="yes" xml:space="preserve">
          <source>For example, consider a module is named &lt;code&gt;kotlin-js-example&lt;/code&gt; and it contains a function named &lt;code&gt;toKeep&lt;/code&gt; in package &lt;code&gt;org.jetbrains.kotlin.examples&lt;/code&gt;. Use the following line:</source>
          <target state="translated">예를 들어, 모듈의 이름은 고려 &lt;code&gt;kotlin-js-example&lt;/code&gt; 그것은라는 기능이 포함되어 &lt;code&gt;toKeep&lt;/code&gt; 패키지에 &lt;code&gt;org.jetbrains.kotlin.examples&lt;/code&gt; 을 . 다음 줄을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="f909490e8018194092afc3fb5cdc677fa190965f" translate="yes" xml:space="preserve">
          <source>For example, here's how you can import JQuery into a Kotlin module:</source>
          <target state="translated">예를 들어, JQuery를 Kotlin 모듈로 가져 오는 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="37483cc9fb0f554ae163c5d459de77c734124a8f" translate="yes" xml:space="preserve">
          <source>For example, if OV = 1.0 and NV = 1.1, you can observe one of the following warnings:</source>
          <target state="translated">예를 들어, OV = 1.0 및 NV = 1.1 인 경우 다음 경고 중 하나를 관찰 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7e6d325fa34b0e3eb5a531fab7231604b20e54f9" translate="yes" xml:space="preserve">
          <source>For example, if you choose &quot;Kotlin (Multiplatform Library)&quot;, a library project is created that has three &lt;a href=&quot;#setting-up-targets&quot;&gt;targets&lt;/a&gt;, one for the JVM, one for JS, and one for the Native platform that you are using. These are configured in the &lt;code&gt;build.gradle&lt;/code&gt; script in the following way:</source>
          <target state="translated">예를 들어, &quot;Kotlin (멀티 플랫폼 라이브러리)&quot;을 선택 하면 JVM, JS 및 기본 플랫폼에 대한 세 개의 &lt;a href=&quot;#setting-up-targets&quot;&gt;대상&lt;/a&gt; 이있는 라이브러리 프로젝트가 작성 됩니다. 이들은 다음과 같은 방식으로 &lt;code&gt;build.gradle&lt;/code&gt; 스크립트에서 구성됩니다 .</target>
        </trans-unit>
        <trans-unit id="9e2cac3c12317d19b9429bd6c154e728f55e225b" translate="yes" xml:space="preserve">
          <source>For example, if you want to check the property name before binding, you can write something like this:</source>
          <target state="translated">예를 들어 바인딩하기 전에 속성 이름을 확인하려면 다음과 같이 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b2e2d9ddd64f99c42afbd7403a3cecd42303d49b" translate="yes" xml:space="preserve">
          <source>For example, if you work a lot with bytes, you might want to easily get an unsigned byte in the range 0 through 255 instead of the default -128 through 127 (the result will have to be in the form of a &lt;code&gt;Short&lt;/code&gt;/&lt;code&gt;Int&lt;/code&gt;/&lt;code&gt;Long&lt;/code&gt;, though). &lt;code&gt;Byte&lt;/code&gt; is a built-in class that you can't modify, but you can define this extension function:</source>
          <target state="translated">예를 들어, 바이트로 많은 작업을 수행하는 경우 기본값 -128에서 127 대신 0에서 255 사이의 부호없는 바이트를 쉽게 얻을 수 있습니다 (결과는 &lt;code&gt;Short&lt;/code&gt; / &lt;code&gt;Int&lt;/code&gt; / &lt;code&gt;Long&lt;/code&gt; ,)하지만. &lt;code&gt;Byte&lt;/code&gt; 는 수정할 수없는 내장 클래스이지만이 확장 함수를 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dc2ee7ccaf73dc899619ee5d9d39c7987e388739" translate="yes" xml:space="preserve">
          <source>For example, in the following case there will be no backing field:</source>
          <target state="translated">예를 들어 다음과 같은 경우에는 지원 입력란이 없습니다.</target>
        </trans-unit>
        <trans-unit id="3a9c780158db1fc47c1a136b933a65ecc526133e" translate="yes" xml:space="preserve">
          <source>For example, let's make our example a bit more complicated:</source>
          <target state="translated">예를 들어, 예제를 조금 더 복잡하게 만들겠습니다.</target>
        </trans-unit>
        <trans-unit id="c1839f64eb2ce7573d6701acab747bd62c3838e1" translate="yes" xml:space="preserve">
          <source>For example, on JVM, &lt;a href=&quot;index#kotlin.reflect.KClass&quot;&gt;KClass&lt;/a&gt; instances for a primitive type (&lt;code&gt;int&lt;/code&gt;) and the corresponding wrapper type (&lt;code&gt;java.lang.Integer&lt;/code&gt;) are considered equal, because they have the same fully qualified name &quot;kotlin.Int&quot;.</source>
          <target state="translated">예를 들어, JVM에서 기본 유형 ( &lt;code&gt;int&lt;/code&gt; ) 및 해당 랩퍼 유형 ( &lt;code&gt;java.lang.Integer&lt;/code&gt; )의 &lt;a href=&quot;index#kotlin.reflect.KClass&quot;&gt;KClass&lt;/a&gt; 인스턴스 는 동일한 완전한 이름 &quot;kotlin.Int&quot;를 갖기 때문에 동일한 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="36dc75e0d04d01c4a44b30e1411da2ccccd856ca" translate="yes" xml:space="preserve">
          <source>For example, the C function returning values through pointer parameters can be used like</source>
          <target state="translated">예를 들어 포인터 매개 변수를 통해 값을 반환하는 C 함수는 다음과 같이 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="079a917fd14fe02e329ee98416d6d8eaef4f6689" translate="yes" xml:space="preserve">
          <source>For example, the following Kotlin code:</source>
          <target state="translated">예를 들어 다음 Kotlin 코드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="17bc9d0385f8ddb156c83471c2dbea8b14c1add0" translate="yes" xml:space="preserve">
          <source>For example, to create a target for each of the Kotlin/Native supported platforms (see below), use this code:</source>
          <target state="translated">예를 들어, Kotlin / Native 지원 플랫폼 (아래 참조) 각각에 대한 대상을 작성하려면 다음 코드를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="17b4ffea3f831eaa0dd821feed12e719a49e8b8e" translate="yes" xml:space="preserve">
          <source>For example, to disable DCE based on a custom condition for the &lt;code&gt;main&lt;/code&gt; source set and always for the &lt;code&gt;test&lt;/code&gt; code, add the following lines to the build script:</source>
          <target state="translated">예를 들어, &lt;code&gt;main&lt;/code&gt; 소스 세트 및 항상 &lt;code&gt;test&lt;/code&gt; 코드 에 대한 사용자 정의 조건에 따라 DCE를 사용하지 않으 려면 빌드 스크립트에 다음 행을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4bbcf5e1acf1d0538a87cdcded2402b6469d470f" translate="yes" xml:space="preserve">
          <source>For fully stable versions of the compiler the default binary compatibility protocol is the following:</source>
          <target state="translated">완전히 안정적인 버전의 컴파일러의 경우 기본 이진 호환성 프로토콜은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1890ad53fa33283873fb912de74957d361b6491e" translate="yes" xml:space="preserve">
          <source>For generic functions, using &lt;a href=&quot;inline-functions#reified-type-parameters&quot;&gt;reified type parameters&lt;/a&gt; makes the casts such as &lt;code&gt;arg as T&lt;/code&gt; checked, unless &lt;code&gt;arg&lt;/code&gt;'s type has &lt;em&gt;its own&lt;/em&gt; type arguments that are erased.</source>
          <target state="translated">일반 함수의 경우, &lt;code&gt;arg&lt;/code&gt; 유형 &lt;em&gt;에 자체&lt;/em&gt; 유형 인수가 지워지지 않는 한, &lt;a href=&quot;inline-functions#reified-type-parameters&quot;&gt;reified type 매개 변수를&lt;/a&gt; 사용하면 &lt;code&gt;arg as T&lt;/code&gt; 와 같은 캐스트 가 T로 검사 됩니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="38b15e10dc47b42201678c7bc8e7f549631406db" translate="yes" xml:space="preserve">
          <source>For information on how to do use each of these tutorials refer to the corresponding section:</source>
          <target state="translated">이러한 각 자습서를 사용하는 방법에 대한 정보는 해당 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="53871db63838c21ea25dd734e891b1c31c10f9df" translate="yes" xml:space="preserve">
          <source>For inline markup, KDoc uses the regular &lt;a href=&quot;http://daringfireball.net/projects/markdown/syntax&quot;&gt;Markdown&lt;/a&gt; syntax, extended to support a shorthand syntax for linking to other elements in the code.</source>
          <target state="translated">인라인 마크 업의 경우 KDoc은 코드의 다른 요소에 연결하기위한 간단한 구문을 지원하도록 확장 된 일반 &lt;a href=&quot;http://daringfireball.net/projects/markdown/syntax&quot;&gt;마크 다운&lt;/a&gt; 구문을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="0a82fb018c66cd1ea1c613ead3f02864bd52e930" translate="yes" xml:space="preserve">
          <source>For instance, given</source>
          <target state="translated">예를 들어, 주어진</target>
        </trans-unit>
        <trans-unit id="54fe8967f6394a3362a64d10de78a37ca1295329" translate="yes" xml:space="preserve">
          <source>For instance, when you use Spring, you don't need all the classes to be open, but only classes annotated with specific annotations like &lt;code&gt;@Configuration&lt;/code&gt; or &lt;code&gt;@Service&lt;/code&gt;. &lt;em&gt;All-open&lt;/em&gt; allows to specify such annotations.</source>
          <target state="translated">예를 들어 Spring을 사용할 때 모든 클래스를 열 필요는 없지만 &lt;code&gt;@Configuration&lt;/code&gt; 또는 &lt;code&gt;@Service&lt;/code&gt; 와 같은 특정 주석으로 주석이 달린 클래스 만 필요합니다 . &lt;em&gt;All-open&lt;/em&gt; 은 이러한 주석을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7aaad9d147155eb1a6a3e244f5b9a2a8a6e149b0" translate="yes" xml:space="preserve">
          <source>For iterating mutable collections, there is &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-mutable-iterator/index&quot;&gt;&lt;code&gt;MutableIterator&lt;/code&gt;&lt;/a&gt; that extends &lt;code&gt;Iterator&lt;/code&gt; with the element removal function &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-mutable-iterator/remove&quot;&gt;&lt;code&gt;remove()&lt;/code&gt;&lt;/a&gt;. So, you can remove elements from a collection while iterating it.</source>
          <target state="translated">변경 가능한 컬렉션을 반복하기 위해 요소 제거 함수 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-mutable-iterator/remove&quot;&gt; &lt;code&gt;remove()&lt;/code&gt; &lt;/a&gt; &lt;code&gt;Iterator&lt;/code&gt; 를 확장하는 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-mutable-iterator/index&quot;&gt; &lt;code&gt;MutableIterator&lt;/code&gt; &lt;/a&gt; 가 있습니다. 따라서 컬렉션을 반복하면서 컬렉션에서 요소를 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9623eecb005f28baef52cb3adf2863355f3a393f" translate="yes" xml:space="preserve">
          <source>For kotlin versions 1.1.50+/1.2, the default behavior is the same to &lt;code&gt;-Xjsr305=warn&lt;/code&gt;. The &lt;code&gt;strict&lt;/code&gt; value should be considered experimental (more checks may be added to it in the future).</source>
          <target state="translated">kotlin 버전 1.1.50 + / 1.2의 경우 기본 동작은 &lt;code&gt;-Xjsr305=warn&lt;/code&gt; 과 동일합니다 . &lt;code&gt;strict&lt;/code&gt; 값 (더 점검이 미래에 추가 될 수있다) 실험 고려되어야한다.</target>
        </trans-unit>
        <trans-unit id="6cc59502f4a11ebcb9c7bb01b708f5f38029db03" translate="yes" xml:space="preserve">
          <source>For lists, there is a constructor that takes the list size and the initializer function that defines the element value based on its index.</source>
          <target state="translated">리스트에는리스트 크기와 인덱스를 기반으로 요소 값을 정의하는 이니셜 라이저 함수를 사용하는 생성자가 있습니다.</target>
        </trans-unit>
        <trans-unit id="cf7a2b59658422559e19da1a59a94b59966b8fc1" translate="yes" xml:space="preserve">
          <source>For lists, there is a special iterator implementation: &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-list-iterator/index&quot;&gt;&lt;code&gt;ListIterator&lt;/code&gt;&lt;/a&gt;. It supports iterating lists in both directions: forwards and backwards. Backward iteration is implemented by the functions &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-list-iterator/has-previous&quot;&gt;&lt;code&gt;hasPrevious()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-list-iterator/previous&quot;&gt;&lt;code&gt;previous()&lt;/code&gt;&lt;/a&gt;. Additionally, the &lt;code&gt;ListIterator&lt;/code&gt; provides information about the element indices with the functions &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-list-iterator/next-index&quot;&gt;&lt;code&gt;nextIndex()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-list-iterator/previous-index&quot;&gt;&lt;code&gt;previousIndex()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">리스트에는 특별한 반복자 구현이 있습니다 : &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-list-iterator/index&quot;&gt; &lt;code&gt;ListIterator&lt;/code&gt; &lt;/a&gt; . 순방향 및 역방향의 양방향 목록 반복을 지원합니다. 뒤로 반복은 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-list-iterator/has-previous&quot;&gt; &lt;code&gt;hasPrevious()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-list-iterator/previous&quot;&gt; &lt;code&gt;previous()&lt;/code&gt; &lt;/a&gt; 함수로 구현됩니다 . 또한 &lt;code&gt;ListIterator&lt;/code&gt; 는 요소 인덱스에 대한 정보를 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-list-iterator/next-index&quot;&gt; &lt;code&gt;nextIndex()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.collections/-list-iterator/previous-index&quot;&gt; &lt;code&gt;previousIndex()&lt;/code&gt; &lt;/a&gt; 함수와 함께 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="2613f4bb9152895d1f3da19c9b902595c6bf07de" translate="yes" xml:space="preserve">
          <source>For longer documentation comments, place the opening &lt;code&gt;/**&lt;/code&gt; on a separate line and begin each subsequent line with an asterisk:</source>
          <target state="translated">더 긴 문서 설명을 보려면, &lt;code&gt;/**&lt;/code&gt; 를 별도의 줄에 놓고 각 후속 줄을 별표로 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="65b1c9d3c495af1a58e2d00003c1736af99c56da" translate="yes" xml:space="preserve">
          <source>For medium and large projects the decision may be tough. If you are not ready to update many files right away you may decide to migrate module by module, or continue with gradual migration for modified files only.</source>
          <target state="translated">중대형 프로젝트의 경우 결정이 어려울 수 있습니다. 많은 파일을 즉시 업데이트 할 준비가되지 않은 경우 모듈별로 모듈을 마이그레이션하거나 수정 된 파일에 대해서만 점진적 마이그레이션을 계속할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e162067bf7e3d179878c919852cbcdf24e4f2f1f" translate="yes" xml:space="preserve">
          <source>For members declared inside a class:</source>
          <target state="translated">클래스 안에서 선언 된 멤버의 경우 :</target>
        </trans-unit>
        <trans-unit id="a09f3bfd60f839007a27ec3a24559d939b2a35e4" translate="yes" xml:space="preserve">
          <source>For more complex properties, always put &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt; keywords on separate lines:</source>
          <target state="translated">보다 복잡한 속성의 경우 항상 &lt;code&gt;get&lt;/code&gt; 및 &lt;code&gt;set&lt;/code&gt; 키워드를 별도의 줄에 넣으십시오 .</target>
        </trans-unit>
        <trans-unit id="2c6d11cb317dc6418f5fe966cb7b00efa9ca9a48" translate="yes" xml:space="preserve">
          <source>For more complicated problems, Kotlin's extensive library of functional operations on collections comes in handy to minimize the boilerplate and turn the code into a linear top-to-bottom and left-to-right fluent data transformation pipeline. For example, the &lt;a href=&quot;http://codeforces.com/contest/1157/problem/B&quot;&gt;Problem B: Long Number&lt;/a&gt; problem takes a simple greedy algorithm to implement and it can be written using this style without a single mutable variable:</source>
          <target state="translated">보다 복잡한 문제를 해결하기 위해 Kotlin의 컬렉션에 대한 광범위한 기능 작업 라이브러리는 상용구를 최소화하고 코드를 선형 상단에서 하단 및 왼쪽에서 오른쪽으로 유창한 데이터 변환 파이프 라인으로 전환하는 데 편리합니다. 예를 들어, &lt;a href=&quot;http://codeforces.com/contest/1157/problem/B&quot;&gt;문제 B : 긴 숫자&lt;/a&gt; 문제는 간단한 욕심 알고리즘을 구현하는 데 단일 가변 변수없이이 스타일을 사용하여 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c8c7b26bf892e65f4f2f16ff179ebd4da28ea9ec" translate="yes" xml:space="preserve">
          <source>For more details about compatibility issues, see the &lt;code&gt;@JvmDefault&lt;/code&gt;&lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.jvm/-jvm-default/index&quot;&gt;reference page&lt;/a&gt;.</source>
          <target state="translated">호환성 문제에 대한 자세한 내용은 &lt;code&gt;@JvmDefault&lt;/code&gt; &lt;a href=&quot;../../api/latest/jvm/stdlib/kotlin.jvm/-jvm-default/index&quot;&gt;참조 페이지를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c2b8ad66e41103aa7e5d576dd41cf032d9cca536" translate="yes" xml:space="preserve">
          <source>For more details about interface delegation in Kotlin, see &lt;a href=&quot;delegation&quot;&gt;Delegation&lt;/a&gt;.</source>
          <target state="translated">코 틀린의 인터페이스 위임에 대한 자세한 내용은 참조 &lt;a href=&quot;delegation&quot;&gt;위임&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4f99246268b944cbfb72319adef4c2c06f42700a" translate="yes" xml:space="preserve">
          <source>For more details, see &lt;a href=&quot;visibility-modifiers#constructors&quot;&gt;Visibility Modifiers&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;visibility-modifiers#constructors&quot;&gt;가시성 수정 자를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1f8c202f6d3fc629243929f6137d51db369ef6ba" translate="yes" xml:space="preserve">
          <source>For more information about &lt;code&gt;dynamic&lt;/code&gt; see the &lt;a href=&quot;../../reference/dynamic-type&quot;&gt;reference documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;dynamic&lt;/code&gt; 대한 자세한 내용은 &lt;a href=&quot;../../reference/dynamic-type&quot;&gt;참조 설명서를 참조&lt;/a&gt; 하십시오 .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
