<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="qt">
    <body>
      <group id="qt">
        <trans-unit id="d15dfc9593f42a9d73fa13ea3b86b1d4efc0be92" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qwineventnotifier&quot;&gt;QWinEventNotifier&lt;/a&gt; class provides support for the Windows Wait functions. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ca94f5d87458cb45222152593c4270da5727217" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qwineventnotifier#setEnabled&quot;&gt;setEnabled&lt;/a&gt;() function allows you to disable as well as enable the event notifier. It is generally advisable to explicitly enable or disable the event notifier. A disabled notifier does nothing when the event object is signalled (the same effect as not creating the event notifier). Use the &lt;a href=&quot;qwineventnotifier#isEnabled&quot;&gt;isEnabled&lt;/a&gt;() function to determine the notifier's current status.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8ce16cda4e441762109498588c1dbc11e5743eb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qwinjumplist&quot;&gt;QWinJumpList&lt;/a&gt; class represents a transparent wrapper around Windows Jump Lists. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="346a87dce3a5e2adc9c39fe936d13047212bbc8b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qwinjumplistcategory&quot;&gt;QWinJumpListCategory&lt;/a&gt; class represents a jump list category. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93f45db7ec0bb348d96db9458b4ea999dfefdf1a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qwinjumplistitem&quot;&gt;QWinJumpListItem&lt;/a&gt; class represents a jump list item. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bca976d8cc722f4842f0323b33adcdd157dc817" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qwinmime&quot;&gt;QWinMime&lt;/a&gt; class maps open-standard MIME to Window Clipboard formats. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8c89dc2dcc939124a708e2a2da14a5eb449dd1f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qwintaskbarbutton&quot;&gt;QWinTaskbarButton&lt;/a&gt; class enables you to set overlay icons on a taskbar button, and provides access to its progress indicator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8508025470371bf568d766792d6751e51f6d8e90" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qwintaskbarbutton&quot;&gt;QWinTaskbarButton&lt;/a&gt; class represents the Windows taskbar button for a top-level window (Windows 7 and newer). &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9764e70d55f4d742c256e803a26dddd95346a76e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qwintaskbarprogress&quot;&gt;QWinTaskbarProgress&lt;/a&gt; class represents a progress indicator in the Windows taskbar. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28d3be17603aa225544291ec00559f26d74b1b0d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qwinthumbnailtoolbar&quot;&gt;QWinThumbnailToolBar&lt;/a&gt; class allows manipulating the thumbnail toolbar of a window. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d47dd0b3663c2ef3476e6f946237b394be3e9d2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qwinthumbnailtoolbutton&quot;&gt;QWinThumbnailToolButton&lt;/a&gt; class represents a button in a thumbnail toolbar. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e1869e8d116b4dd8bead427b32ba895c5f17fe1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt; class provides a framework for wizards. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d505d9402591de7317b09c909b0e57f6e283a0f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qwizardpage&quot;&gt;QWizardPage&lt;/a&gt; class is the base class for wizard pages. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bb2f2b758321546562263fdd0cec47c31bf11c0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qwritelocker&quot;&gt;QWriteLocker&lt;/a&gt; class is a convenience class that simplifies locking and unlocking read-write locks for write access. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="136c843697115a338a6078644967b61fbfc72778" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qxcbwindowfunctions&quot;&gt;QXcbWindowFunctions&lt;/a&gt; class is an inline class containing miscellaneous functionality for xcb window specific functionality. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22a92b1856a895087dfb9efeb88091a0865076a1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qxmlattributes&quot;&gt;QXmlAttributes&lt;/a&gt; class provides XML attributes. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="557549a701cf43aa500d3475e5b879e577a072ee" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qxmlcontenthandler&quot;&gt;QXmlContentHandler&lt;/a&gt; class provides an interface to report the logical content of XML data. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44d3d524e3fea25961a6399c6a607715d5c432fd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qxmlcontenthandler#startDocument&quot;&gt;startDocument&lt;/a&gt;() function is called at the start of the document, and &lt;a href=&quot;qxmlcontenthandler#endDocument&quot;&gt;endDocument&lt;/a&gt;() is called at the end. Before parsing begins &lt;a href=&quot;qxmlcontenthandler#setDocumentLocator&quot;&gt;setDocumentLocator&lt;/a&gt;() is called. For each element &lt;a href=&quot;qxmlcontenthandler#startElement&quot;&gt;startElement&lt;/a&gt;() is called, with &lt;a href=&quot;qxmlcontenthandler#endElement&quot;&gt;endElement&lt;/a&gt;() being called at the end of each element. The &lt;a href=&quot;qxmlcontenthandler#characters&quot;&gt;characters&lt;/a&gt;() function is called with chunks of character data; &lt;a href=&quot;qxmlcontenthandler#ignorableWhitespace&quot;&gt;ignorableWhitespace&lt;/a&gt;() is called with chunks of whitespace and &lt;a href=&quot;qxmlcontenthandler#processingInstruction&quot;&gt;processingInstruction&lt;/a&gt;() is called with processing instructions. If an entity is skipped &lt;a href=&quot;qxmlcontenthandler#skippedEntity&quot;&gt;skippedEntity&lt;/a&gt;() is called. At the beginning of prefix-URI scopes &lt;a href=&quot;qxmlcontenthandler#startPrefixMapping&quot;&gt;startPrefixMapping&lt;/a&gt;() is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7802d3411d2e483e2ce9e82d683adeb341f4d63b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qxmldeclhandler&quot;&gt;QXmlDeclHandler&lt;/a&gt; class provides an interface to report declaration content of XML data. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="816d4cf00e2bbe5eab5f2165ec6ee5d553280a82" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qxmldefaulthandler&quot;&gt;QXmlDefaultHandler&lt;/a&gt; class provides a default implementation of all the XML handler classes. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79724c7b54bdf9373ff02142c107f77d52652878" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qxmldtdhandler&quot;&gt;QXmlDTDHandler&lt;/a&gt; class provides an interface to report DTD content of XML data. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2520408b0752372fa76f13bfdb2ee4e822436598" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qxmlentityresolver&quot;&gt;QXmlEntityResolver&lt;/a&gt; class provides an interface to resolve external entities contained in XML data. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6e28feff49be6121f7551efaf6dd4093ae80c60" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qxmlerrorhandler&quot;&gt;QXmlErrorHandler&lt;/a&gt; class provides an interface to report errors in XML data. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccbca15f08a84e8e45b53d3ddef484431a856756" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qxmlformatter&quot;&gt;QXmlFormatter&lt;/a&gt; class is an implementation of &lt;a href=&quot;qxmlserializer&quot;&gt;QXmlSerializer&lt;/a&gt; for transforming &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt; output into formatted XML. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="019a3607198e16b91b4ee98c8bba893385027be2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qxmlinputsource&quot;&gt;QXmlInputSource&lt;/a&gt; class provides the input data for the &lt;a href=&quot;qxmlreader&quot;&gt;QXmlReader&lt;/a&gt; subclasses. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8906e05b2ad6702e0e7e711834d494cab00adc8d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qxmlitem&quot;&gt;QXmlItem&lt;/a&gt; class contains either an XML node or an atomic value. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c149e7b21fddb4cba14bc9b4b7a8d2676c9f145" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qxmllexicalhandler&quot;&gt;QXmlLexicalHandler&lt;/a&gt; class provides an interface to report the lexical content of XML data. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95533cf4c44382630f726f93c673fe3ead07b333" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qxmllocator&quot;&gt;QXmlLocator&lt;/a&gt; class provides the XML handler classes with information about the parsing position within a file. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13da8874994d68d157d79ad23772d32b9bc40fcc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt; class represents the name of an XML node, in an efficient, namespace-aware way. &lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt; represents the name of an XML node in a way that is both efficient and safe for comparing names. Normally, an XML node represents an XML element or attribute, but &lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt; can also represent the names of other kinds of nodes, e.g., &lt;a href=&quot;qabstractxmlreceiver#processingInstruction&quot;&gt;QAbstractXmlReceiver::processingInstruction&lt;/a&gt;() and &lt;a href=&quot;qabstractxmlreceiver#namespaceBinding&quot;&gt;QAbstractXmlReceiver::namespaceBinding&lt;/a&gt;(). &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e48ac8e28cf81e6d01466968e7d32041afe4d687" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qxmlnamepool&quot;&gt;QXmlNamePool&lt;/a&gt; class is a table of shared strings referenced by instances of &lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt;. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0377f096e5cb07ed56f11546084ad7b5aa0b33a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qxmlnamespacesupport&quot;&gt;QXmlNamespaceSupport&lt;/a&gt; class is a helper class for XML readers which want to include namespace support. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1bb1bcea4332df9977c88b963d6d48679173752" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; class identifies a node in an XML node model subclassed from &lt;a href=&quot;qabstractxmlnodemodel&quot;&gt;QAbstractXmlNodeModel&lt;/a&gt;. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d281a1bb4bee4d7338716ceba4736ce460f49b16" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qxmlparseexception&quot;&gt;QXmlParseException&lt;/a&gt; class is used to report errors with the &lt;a href=&quot;qxmlerrorhandler&quot;&gt;QXmlErrorHandler&lt;/a&gt; interface. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8afeb0314d130a858abe2a33a00e903982587fcb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt; class compiles and executes queries written in the &lt;a href=&quot;http://www.w3.org/TR/xquery/&quot;&gt;XQuery language&lt;/a&gt;. &lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt; is typically used to query XML data, but it can also query non-XML data that has been modeled to look like XML.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfa1dbff28b3082ed0ed7e62cec2b66f5e13b74c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt; class performs XQueries on XML data, or on non-XML data modeled to look like XML. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5572fbd4913d56a1a66130d803b45c5bcb02364d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qxmlreader&quot;&gt;QXmlReader&lt;/a&gt; class provides an interface for XML readers (i.e. parsers). &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a54b6400fc69075a4e171b8138685a69a41b921" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qxmlreader&quot;&gt;QXmlReader&lt;/a&gt; subclasses use the &lt;a href=&quot;qxmlinputsource#next&quot;&gt;next&lt;/a&gt;() function to read the input character by character. If you want to start from the beginning again, use &lt;a href=&quot;qxmlinputsource#reset&quot;&gt;reset&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f87eb1a58b3a495f94cc1a2488e31ef0ac16d949" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qxmlresultitems&quot;&gt;QXmlResultItems&lt;/a&gt; class iterates through the results of evaluating an &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt; in &lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt;. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8e82c30689692801d42250d433da17313c18b08" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qxmlschema&quot;&gt;QXmlSchema&lt;/a&gt; class loads, compiles and validates W3C XML Schema files that can be used further for validation of XML instance documents via &lt;a href=&quot;qxmlschemavalidator&quot;&gt;QXmlSchemaValidator&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07ad72f9ed1f6ae9ac5543d4978ac6bfa5cd5aad" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qxmlschema&quot;&gt;QXmlSchema&lt;/a&gt; class provides loading and validation of a W3C XML Schema. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f832a7499445679bd05879092b96d8f1a075396d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qxmlschemavalidator&quot;&gt;QXmlSchemaValidator&lt;/a&gt; class loads, parses an XML instance document and validates it against a W3C XML Schema that has been compiled with &lt;a href=&quot;qxmlschema&quot;&gt;QXmlSchema&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ff44463b7bb811d115a92ce7d2aacac6172d29a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qxmlschemavalidator&quot;&gt;QXmlSchemaValidator&lt;/a&gt; class validates XML instance documents against a W3C XML Schema. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81b4591d51d5ba79e00242583bb2e9521a8d7ffc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qxmlserializer&quot;&gt;QXmlSerializer&lt;/a&gt; class is an implementation of &lt;a href=&quot;qabstractxmlreceiver&quot;&gt;QAbstractXmlReceiver&lt;/a&gt; for transforming &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt; output into unformatted XML. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efc91098021ad9366999f3ffbba340ee9e07f6a4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qxmlsimplereader&quot;&gt;QXmlSimpleReader&lt;/a&gt; class provides an implementation of a simple XML parser. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="420279f8cf779394304b6ab5661f19b461525ffb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qxmlstreamattribute&quot;&gt;QXmlStreamAttribute&lt;/a&gt; class represents a single XML attribute. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ef060ac64d915291e00c4fbd851ecce70c21b7f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qxmlstreamattributes&quot;&gt;QXmlStreamAttributes&lt;/a&gt; class represents a vector of &lt;a href=&quot;qxmlstreamattribute&quot;&gt;QXmlStreamAttribute&lt;/a&gt;. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47fcbb7deb431c62e0f326321637e60a8fb79a89" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qxmlstreamentitydeclaration&quot;&gt;QXmlStreamEntityDeclaration&lt;/a&gt; class represents a DTD entity declaration. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dda80d5b4f380361bd561335bfec49866d067e35" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qxmlstreamentitydeclaration#QXmlStreamEntityDeclarations-typedef&quot;&gt;QXmlStreamEntityDeclarations&lt;/a&gt; class is defined to be a &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; of &lt;a href=&quot;qxmlstreamentitydeclaration&quot;&gt;QXmlStreamEntityDeclaration&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc04b6f4b60969eabacbc7f2c8eeeb6afb7d1daf" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qxmlstreamentityresolver&quot;&gt;QXmlStreamEntityResolver&lt;/a&gt; class provides an entity resolver for a &lt;a href=&quot;qxmlstreamreader&quot;&gt;QXmlStreamReader&lt;/a&gt;. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d24617b4afe3b2bd9552716b563da1196c666e26" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qxmlstreamnamespacedeclaration&quot;&gt;QXmlStreamNamespaceDeclaration&lt;/a&gt; class represents a namespace declaration. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0afdea5c96833adfe91d0ec5354ae8c03a41362a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qxmlstreamnamespacedeclaration#QXmlStreamNamespaceDeclarations-typedef&quot;&gt;QXmlStreamNamespaceDeclarations&lt;/a&gt; class is defined to be a &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; of &lt;a href=&quot;qxmlstreamnamespacedeclaration&quot;&gt;QXmlStreamNamespaceDeclaration&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3026335c00069a1bdccfe9d5bee33c8f0710dfa0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qxmlstreamnotationdeclaration&quot;&gt;QXmlStreamNotationDeclaration&lt;/a&gt; class represents a DTD notation declaration. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0678e7a176d84540de9a637b6aa6e947b5fbd18e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qxmlstreamnotationdeclaration#QXmlStreamNotationDeclarations-typedef&quot;&gt;QXmlStreamNotationDeclarations&lt;/a&gt; class is defined to be a &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; of &lt;a href=&quot;qxmlstreamnotationdeclaration&quot;&gt;QXmlStreamNotationDeclaration&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fa02cfe2c8a74407cb6c1f6320905ed30b207b6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qxmlstreamreader&quot;&gt;QXmlStreamReader&lt;/a&gt; and &lt;a href=&quot;qxmlstreamwriter&quot;&gt;QXmlStreamWriter&lt;/a&gt; are two new classes provided in Qt 4.3 and later. A stream reader reports an XML document as a stream of tokens. This differs from SAX as SAX applications provide handlers to receive XML events from the parser whereas the &lt;a href=&quot;qxmlstreamreader&quot;&gt;QXmlStreamReader&lt;/a&gt; drives the loop, pulling tokens from the reader when they are needed. This pulling approach makes it possible to build recursive descent parsers, allowing XML parsing code to be split into different methods or classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6389eb2c2a7ca8578e30fab245c83d69a5e34c5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qxmlstreamreader&quot;&gt;QXmlStreamReader&lt;/a&gt; class provides a fast parser for reading well-formed XML via a simple streaming API. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df52fbe2bc586c9123870601b09dc1d4d8dc74dc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qxmlstreamwriter&quot;&gt;QXmlStreamWriter&lt;/a&gt; class provides an XML writer with a simple streaming API. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ba37b6bd10b9bfe30ad50cb46f7ba2bc5ee6cec" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qxylegendmarker&quot;&gt;QXYLegendMarker&lt;/a&gt; class is a legend marker for a line, spline, or scatter series. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae89b09dc2bf38ee72b8fc49c380d1a4ac8c5938" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;qxyseries&quot;&gt;QXYSeries&lt;/a&gt; class is a base class for line, spline, and scatter series. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2920355332ac9a788021c3b360f6ca755fbbc7f4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;sql-programming#&quot;&gt;SQL Programming&lt;/a&gt; guide contains information about development using Qt SQL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c329eef76cf19d9a1eeb91190e935b1db3d7df79" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;stylesheet-reference#margin-prop&quot;&gt;margin&lt;/a&gt;, &lt;a href=&quot;stylesheet-reference#border-width-prop&quot;&gt;border-width&lt;/a&gt;, and &lt;a href=&quot;stylesheet-reference#padding-prop&quot;&gt;padding&lt;/a&gt; properties all default to zero. In that case, all four rectangles (&lt;code&gt;margin&lt;/code&gt;, &lt;code&gt;border&lt;/code&gt;, &lt;code&gt;padding&lt;/code&gt;, and &lt;code&gt;content&lt;/code&gt;) coincide exactly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="895959989b8f95cb6713e0c8edce078e3d824ef8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;stylesheet-reference#width-prop&quot;&gt;width&lt;/a&gt; and &lt;a href=&quot;stylesheet-reference#height-prop&quot;&gt;height&lt;/a&gt; properties can be used to control the size of the Sub-control. Note that setting a &lt;a href=&quot;stylesheet-reference#image-prop&quot;&gt;image&lt;/a&gt; implicitly sets the size of a Sub-control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b28e96b64d215967104e64cd23480927c9c11dd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;supported-platforms#winrt&quot;&gt;WinRT&lt;/a&gt; Runner Tool can be found in QTDIR/bin/winrtrunner. It is intended to aid in the deployment, launching, and debugging of Qt for &lt;a href=&quot;supported-platforms#winrt&quot;&gt;WinRT&lt;/a&gt; applications. It can be used from the command line, or invoked by the IDE.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8e132232cb6acbc2ff8902a4d5be1f9f8670ff9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;supported-platforms#winrt&quot;&gt;WinRT&lt;/a&gt; clipboard is local to the application; it cannot be retrieved by a desktop application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd0a5c66e57e099041c7e1fcc0f4e6cd19e6173d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;supported-platforms#winrt&quot;&gt;WinRT&lt;/a&gt; mkspec format is &lt;code&gt;&amp;lt;platform&amp;gt;-&amp;lt;architecture&amp;gt;-&amp;lt;toolchain&amp;gt;&lt;/code&gt; where architecture can be &lt;code&gt;arm&lt;/code&gt;, &lt;code&gt;x86&lt;/code&gt;, or &lt;code&gt;x64&lt;/code&gt;. The following is an example of building qtbase for &lt;a href=&quot;supported-platforms#winrt&quot;&gt;WinRT&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f4b16f7c25b5c1f6554c3fd79bfa8c17b48dca2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;testing-and-debugging#debugging-techniques&quot;&gt;Debugging Techniques&lt;/a&gt; document provides an overview of the debugging mechanisms discussed above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f875435f2c9b9f553c7670d25932fea47bc5b65" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;threads&quot;&gt;Thread Support in Qt&lt;/a&gt; page contains information on implementing threads in applications. Additional concurrent classes are provided by the &lt;a href=&quot;qtconcurrent-index&quot;&gt;Qt Concurrent&lt;/a&gt; module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0153ba416d17a1bbb5d94d407236e4c895c5ca21" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt; actually ran correctly. It selected a bunch of &lt;code&gt;xml:id&lt;/code&gt; attributes and put them in the result set. But then &lt;code&gt;xmlpatterns&lt;/code&gt; sent the result set to a &lt;a href=&quot;qxmlserializer&quot;&gt;serializer&lt;/a&gt;, which tried to output it as well-formed XML. Since the result set contains only attributes and attributes alone are not well-formed XML, the &lt;a href=&quot;qxmlserializer&quot;&gt;serializer&lt;/a&gt; reports a &lt;a href=&quot;http://www.w3.org/TR/2005/WD-xslt-xquery-serialization-20050915/#id-errors&quot;&gt;serialization error&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4d73ca0fea284b03b3845a81026015a95f903d4" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;Alt+C&lt;/b&gt; shortcut is assigned to the button, i.e., when the user presses &lt;b&gt;Alt+C&lt;/b&gt; the button will call &lt;a href=&quot;qabstractbutton#animateClick&quot;&gt;animateClick&lt;/a&gt;(). See the &lt;a href=&quot;qshortcut#mnemonic&quot;&gt;QShortcut&lt;/a&gt; documentation for details. To display an actual ampersand, use '&amp;amp;&amp;amp;'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="265dfdf1de05d2e42c58db652652c88b20a8447c" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;Back&lt;/b&gt; button (&lt;b&gt;Go Back&lt;/b&gt; on &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cb0f8bb1a80bfb64fd5aef284f1ae12f0461164" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;Cancel&lt;/b&gt; button (see also &lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;NoCancelButton&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afb9994824505c1bb4ca530ebb80135d543a52f6" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;Commit&lt;/b&gt; button</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db7b96cadec121e930011f7a2106062ac8309e6d" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;Configure Connection&lt;/b&gt; dialog (below) is displayed, showing signals from the source object and slots from the destination object that you can use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50742942a2d6d953162aeb0dcd403933185aa80d" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;Finish&lt;/b&gt; button (&lt;b&gt;Done&lt;/b&gt; on &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a4c47c153919d9b6dadf86026b21795168f6fa0" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;Help&lt;/b&gt; button (see also &lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;HaveHelpButton&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="789eec691b7d4c82f5032bc1aac158e15e732852" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;Next&lt;/b&gt; button (&lt;b&gt;Continue&lt;/b&gt; on &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ca45932b01e46400d59c07b1b576ad0325c0285" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;Object Inspector&lt;/b&gt; displays a hierarchical list of all the objects on the form that is currently being edited. To show the child objects of a container widget or a layout, click the handle next to the object label.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb41c62b30179d8462e4369e6c018f4cab4a585c" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;Print/Preview Configuration&lt;/b&gt; checkbox must be checked to activate previews of skins. You can select the styles provided from the &lt;b&gt;Style&lt;/b&gt; drop-down box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79a665160c840bfb7e7a0f4bbcf1a825f2a0d9f7" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;root object&lt;/b&gt; definition in a .qml file &lt;b&gt;defines the attributes that are available for a QML type&lt;/b&gt;. All properties, signals and methods that belong to this root object - whether they are custom declared, or come from the QML type of the root object - are externally accessible and can be read and modified for objects of this type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9d46eefdde5b8ec4aa7c7ea78472b25240301ba" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;styleData&lt;/b&gt; object contains the following read-only properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb4ec5d54dc371baf5072469a8d4f5ca05fa33c6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&quot;dlcForestOfFooBar&quot;&lt;/code&gt; is downloadable content, which unlocks a new part of the game, and once it is bought, the purchase should be persistent across the user's devices and across reinstallations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0563e36c98480a7dec00da3e484ecba6ccfacd4e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&quot;render&quot;&lt;/code&gt; aspect is hardwired and does not need to be explicitly listed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5208d307f49eba9c2243e8b39537ccc9026e83d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$$&lt;/code&gt; operator is used extensively with built-in functions that operate on strings and lists of values. For more information, see &lt;a href=&quot;qmake-language#&quot;&gt;qmake Language&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c61873d375acc3ff326ff13ea450143297a66514" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$$&lt;/code&gt; operator is used to extract the contents of a variable, and can be used to pass values between variables or supply them to functions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3197953f7fe45dff8d9cb6e2d39b609a22861de2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$[QT_INSTALL_PLUGINS]&lt;/code&gt; variable is a placeholder to the location of the installed Qt plugins. You can configure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86138a18f3f6181892e34f07f6ca9af7f45ae4bf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;FORMAT&amp;gt;.tocdepth&lt;/code&gt; variable defines how many document sections are printed in the table of contents. Setting tocdepth to &lt;code&gt;0&lt;/code&gt; disables the table of contents while leaving it undefined prints all document sections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d93ab1a7e214ffa315c8276fec86842656326501" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;ModuleIdentifier&amp;gt;&lt;/code&gt; is an identifier specified in dotted URI notation, which uniquely identifies the type namespace provided by the module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59ca51a5ddb246295c1dca62bea80175c1aa582a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;Qualifier&amp;gt;&lt;/code&gt; is an optional local namespace identifier into which the object types and JavaScript resources provided by the module will be installed, if given. If omitted, the object types and JavaScript resources provided by the module will be installed into the global namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a7faae6f78079c8e91cf789c136d686efbc67c5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;Version.Number&amp;gt;&lt;/code&gt; is a version of the form &lt;code&gt;MajorVersion.MinorVersion&lt;/code&gt; which specifies which definitions of various object types and JavaScript resources will be made available due to the import.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e460997c4951f4e924b3dbdf4462dfe4a181b2f2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;addpagemethod&amp;gt;&lt;/code&gt; tag tells</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="164c1e0bd3bf2e609ab634a356b0fa1b4ae06edc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;control&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;element&amp;gt;&lt;/code&gt; sections are mandatory, but the &lt;code&gt;&amp;lt;states&amp;gt;&lt;/code&gt; section is optional. For example, if a single file named &lt;code&gt;&quot;button-background.9.png&quot;&lt;/code&gt; is provided for &lt;a href=&quot;qml-qtquick-controls2-button&quot;&gt;Button&lt;/a&gt;, it will be used for every state that &lt;code&gt;Button&lt;/code&gt; supports. It is up to the developer to decide the set of states that they will provide images for. However, it is recommended to provide images for the most common control states where possible, such as &lt;code&gt;disabled&lt;/code&gt;, &lt;code&gt;pressed&lt;/code&gt;, etc. This will ensure that interactive controls visually behave as the end user would expect them to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="625b10337b4527812f0896d24d444e014c37bef9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;propertyspecifications&amp;gt;&lt;/code&gt; element can contain a list of property meta information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27f12281feec5fff9863ebcd5b8020f90881d13e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;*=&lt;/code&gt; operator adds a value to the list of values in a variable, but only if it is not already present. This prevents values from being included many times in a variable. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7042c750abfd6e9fd61bc6f239fa1c2fb8c5d20d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;++&lt;/code&gt; and &lt;code&gt;--&lt;/code&gt; operators are available both as prefix (&lt;code&gt;++i&lt;/code&gt;, &lt;code&gt;--i&lt;/code&gt;) and postfix (&lt;code&gt;i++&lt;/code&gt;, &lt;code&gt;i--&lt;/code&gt;) operators. The prefix versions modify the iterators and return a reference to the modified iterator; the postfix versions take a copy of the iterator before they modify it, and return that copy. In expressions where the return value is ignored, we recommend that you use the prefix operators (&lt;code&gt;++i&lt;/code&gt;, &lt;code&gt;--i&lt;/code&gt;), as these are slightly faster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4857a8284e30ef91c952760b1df8ed8696e65c09" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;+=&lt;/code&gt; operator appends a new value to the list of values in a variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="222c34cabef80e3ddfb5b2c8c62ea8bc87db7c16" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-=&lt;/code&gt; operator removes a value from the list of values in a variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fca829ff4c1c702c137d940b5cbf9c5fa555b0ec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-feature-&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dbca1dee104a4530a1aeb606409eb5e81cd8965" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-functions&lt;/code&gt; command-line option will return a list of the current tests functions. It is possible to run a single test function using the name of the test function as an argument. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45b4f0761376df1f2132b792626fc17f2a64f36c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-help&lt;/code&gt; command-line option will return all the options available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a4dff91a002ac7222a67ed0f650076835ff9cfb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-input&lt;/code&gt; command-line option can be set at runtime to run test cases from a different directory. This may be needed to run tests on a target device where the compiled-in directory name refers to a host. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="643cc7b6856739cc709abcafc19c28eadbb039dd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-opengl&lt;/code&gt; option can be used to configure Qt to use the OpenGL in the target system, a different version of OpenGL ES (with or without ANGLE), or dynamically switch between the available OpenGL implementations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d31f9ae06cf222c2dc6c8bbb5fac72771696e58" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-platform&lt;/code&gt; option sets the host platform and the compiler for building the Qt sources. The list of supported platforms and compilers is found in the &lt;a href=&quot;supported-platforms#&quot;&gt;supported platforms&lt;/a&gt; page while the full list is available in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8a5ecc3bd57d31b7d7f87f90c048ece3b536bb0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-session&lt;/code&gt; option is mandatory; otherwise &lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt; cannot tell whether it has been restored or what the current session identifier is. See &lt;a href=&quot;qguiapplication#isSessionRestored&quot;&gt;QGuiApplication::isSessionRestored&lt;/a&gt;() and &lt;a href=&quot;qguiapplication#sessionId&quot;&gt;QGuiApplication::sessionId&lt;/a&gt;() for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9859d20ca27fd6fbce6a6559010948b663e109b5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.moc&lt;/code&gt; include is based on the file name of the &lt;code&gt;.cpp&lt;/code&gt; file. For example, in the example above, the &lt;code&gt;.cpp&lt;/code&gt; file is named &lt;code&gt;tst_mytest.cpp&lt;/code&gt;. If the file was named &lt;code&gt;MyTest.cpp&lt;/code&gt;, the include would be:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fb09758dd02c37663c0ad787a04b3fe065dac71" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.pro&lt;/code&gt; file for a plugin must specify the headers and sources for both the custom widget and the plugin interface. Typically, this file only has to specify that the plugin's project is to be built as a library, but with specific plugin support for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2b6dcd1ec3b664b82a124e9370ce2920bfe77ec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;=&lt;/code&gt; operator assigns a value to a variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="920064b153d91d003ba37448275425a82572b56b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AnalogClock&lt;/code&gt; class provides a clock widget with hour and minute hands, which are automatically updated every few seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="857d933d4b378fa322f823a91dc464a9108b0e56" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;C:/&lt;/code&gt; directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fef0430e254a487c984ffbbcb9f6a2076de9cffc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CE_MenuScroller&lt;/code&gt; and &lt;code&gt;CE_MenuTearOff&lt;/code&gt; elements are handled by &lt;a href=&quot;qcommonstyle&quot;&gt;QCommonStyle&lt;/a&gt; and are not shown unless the menu is too large to fit on the screen. &lt;code&gt;PE_FrameMenu&lt;/code&gt; is only drawn for pop-up menus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="283956beffd59df6155fb65d8a9ec16330ef369e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CE_ProgressBar&lt;/code&gt; element is used by &lt;a href=&quot;qprogressbar&quot;&gt;QProgressBar&lt;/a&gt;, and it is the only element used by this widget. We start with the style structure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07cd74f0d181dfc5544406d1965264f9d00320b5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CONFIG&lt;/code&gt; variable will also be checked when resolving scopes. You may assign anything to this variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="150981380379d4f0d874dcf95e6b785bf8a92d5a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CalcFuncPtr&lt;/code&gt; is a typedef for a pointer to a custom</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10cfe869ff76d93e351fdf0bcc7ec77b1846297b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Canvas.Image&lt;/code&gt; render target is a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c5e6e0b01c9f02542a23f43ceec50ab7214b765" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Collection&lt;/code&gt; is intended to be a container where content items, that have been retrieved as pages, can be stored. This enables a developer to skip pages, for example indexes 0-9 may be stored in the collection, if the user skips to indexes 80-99, these can be stored in the collection as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ba88def1f7404bad54106a6fdf2c131ba465348" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Component&lt;/code&gt; type is commonly used to provide graphical components for views. For example, the &lt;a href=&quot;qml-qtquick-listview#delegate-prop&quot;&gt;ListView::delegate&lt;/a&gt; property requires a &lt;code&gt;Component&lt;/code&gt; to specify how each list item is to be displayed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd5aacae7d21139452f852a268e67bd5a1f66dc2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Cpp.ignoredirectives&lt;/code&gt; variable makes QDoc ignore the specified non-standard constructs, within C++ source code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dbcfb897a1d2c0813acdf2d5a6faaf79078e434" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Cpp.ignoretokens&lt;/code&gt; variable makes QDoc ignore the specified non-standard constructs, within C++ source code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0e3519b2293f445eb6b94e91c83de1973d55cc2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CustomizeWindowHint&lt;/code&gt; flag is used to enable customization of the window controls. This flag must be set to allow the &lt;code&gt;WindowTitleHint&lt;/code&gt;, &lt;code&gt;WindowSystemMenuHint&lt;/code&gt;, &lt;code&gt;WindowMinimizeButtonHint&lt;/code&gt;, &lt;code&gt;WindowMaximizeButtonHint&lt;/code&gt; and &lt;code&gt;WindowCloseButtonHint&lt;/code&gt; flags to be changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6b344ae92bce95a13fef9ccb2ca16763e49d596" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DESIGNABLE&lt;/code&gt; attribute indicates whether the property should be visible in the property editor of GUI design tool (e.g., &lt;a href=&quot;qtdesigner-manual&quot;&gt;Qt Designer&lt;/a&gt;). Most properties are &lt;code&gt;DESIGNABLE&lt;/code&gt; (default true). Instead of true or false, you can specify a boolean member function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23fa322499bbccedd6a21245742ed0772ef2d670" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DYLD_LIBRARY_PATH&lt;/code&gt; environment variable will override these settings, and any other default paths, such as a lookup of dynamic libraries inside</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc6362c9182650f490d7a26d556adf29abe182ff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HTML.footer&lt;/code&gt; variable defines the content of the generated HTML documentation's footer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66468e6df598f717c074e042023913ecfc549911" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HTML.headerstyles&lt;/code&gt; variable inserts the style information into the HTML file and the &lt;code&gt;HTML.stylesheets&lt;/code&gt; specifies which files QDoc should copy into the output directory. As well, QDoc will embed the string in the &lt;code&gt;postheader&lt;/code&gt;, &lt;code&gt;footer&lt;/code&gt;, and related variables into each HTML file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f91a5c314495bf30f35fe51e9f8d96e7fa13200" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HTML.postheader&lt;/code&gt; variable defines the content of the generated HTML documentation's postheader.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbecb365447a81ae6669ad966b4b23d72f4663ec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Message&lt;/code&gt; class only needs a suitable implementation in order to be usable. However, Qt's type system will not be able to understand how to store, retrieve and serialize instances of this class without some assistance. For example, we will be unable to store &lt;code&gt;Message&lt;/code&gt; values in &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d22b978c5070337cd0f92db1e058daa5e70e622" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MessageBoard&lt;/code&gt; type, which will be the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6db1f20bb6b19d8d880a42cdb34de3cfd7edd64" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MyStyle&lt;/code&gt; type is special in the sense that it shouldn't be instantiated, but rather used for its attached properties. For that reason, we register it in the following manner in &lt;code&gt;main.cpp&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f504f54c92be5d7bc0146fa1d1f29505e94dd91" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;QMAKESPEC&lt;/code&gt; environment variable can contain any of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c315abb1fc4769892b2ce2c7f4742c0acddaf990" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;QML_IMPORT_TRACE&lt;/code&gt; environment variable can be useful for debugging when there are problems with finding and loading modules. See &lt;a href=&quot;qtquick-debugging#debugging-module-imports&quot;&gt;Debugging module imports&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fbfa1627711869636ae945fb51573bea7de10db" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;QT&lt;/code&gt; variable contains the keyword &lt;code&gt;uiplugin&lt;/code&gt;. It indicates that the plugin uses the abstract interfaces &lt;a href=&quot;qdesignercustomwidgetinterface&quot;&gt;QDesignerCustomWidgetInterface&lt;/a&gt; and &lt;a href=&quot;qdesignercustomwidgetcollectioninterface&quot;&gt;QDesignerCustomWidgetCollectionInterface&lt;/a&gt; only and has no linkage to the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70abbee9807033f0e3d2d0a0060d930e19b279ef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Qt&lt;/code&gt; object is a global object with utility functions, properties and enums.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71c62d0dde56e3066b24de9118daa0932abee0ab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;QtMultimedia&lt;/code&gt; object is a global object with utility functions and properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="110c2395fcaa87ab92bb1cbc400e203672d42aa4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;QtProject/qtlogging.ini&lt;/code&gt; file is looked up in all directories returned by &lt;a href=&quot;qstandardpaths#StandardLocation-enum&quot;&gt;QStandardPaths::GenericConfigLocation&lt;/a&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dec73a32ed6d61ff9b9453472a7c3d75be0f1d51" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;QtQuick&lt;/code&gt; QML library is provided by the &lt;a href=&quot;qtquick-index&quot;&gt;Qt Quick&lt;/a&gt; module. For in-depth information about the various QML types and other functionality provided by Qt Quick, please see the &lt;a href=&quot;qtquick-index&quot;&gt;Qt Quick&lt;/a&gt; module documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce61c4b99874cf111c8de9ed4b27cf59b60a1809" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;READ&lt;/code&gt; function is const and returns the property type. The &lt;code&gt;WRITE&lt;/code&gt; function returns void and has exactly one parameter of the property type. The meta-object compiler enforces these requirements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c96c8418eb070e442109ded17fb69ac4b60e2228" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;READ&lt;/code&gt;, &lt;code&gt;WRITE&lt;/code&gt;, and &lt;code&gt;RESET&lt;/code&gt; functions can be inherited. They can also be virtual. When they are inherited in classes where multiple inheritance is used, they must come from the first inherited class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f9f68ded2d377c74c61602b97642e8c41fedca5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;REPC_SOURCE&lt;/code&gt; variable is only relevant for the Qt Remote Object module, so you need to add it to your project as well:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3d93014de7e5818b47e930b3c5dc27571453438" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SCRIPTABLE&lt;/code&gt; attribute indicates whether this property should be accessible by a scripting engine (default true). Instead of true or false, you can specify a boolean member function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b52088efe2b29f65b6f1e16b221c80cf2d62aa44" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;STORED&lt;/code&gt; attribute indicates whether the property should be thought of as existing on its own or as depending on other values. It also indicates whether the property value must be saved when storing the object's state. Most properties are &lt;code&gt;STORED&lt;/code&gt; (default true), but e.g., &lt;a href=&quot;qwidget#minimumWidth-prop&quot;&gt;QWidget::minimumWidth&lt;/a&gt;() has &lt;code&gt;STORED&lt;/code&gt; false, because its value is just taken from the width component of property &lt;a href=&quot;qwidget#minimumSize-prop&quot;&gt;QWidget::minimumSize&lt;/a&gt;(), which is a &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="713349f7c709fd4ab71579a62143dbc8fe36a604" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SquareButton&lt;/code&gt; type encapsulates the tree of QML objects declared in &lt;code&gt;SquareButton.qml&lt;/code&gt;. When the QML engine instantiates a &lt;code&gt;SquareButton&lt;/code&gt; object from this type, it is instantiating an object from the &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; tree declared in &lt;code&gt;SquareButton.qml&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3381a6e9da856bd61efa8ccaead2af61ce92adb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;State_Enabled&lt;/code&gt; is set when the widget is enabled. When the widget has focus the &lt;code&gt;State_HasFocus&lt;/code&gt; flag is set. Equally, the &lt;code&gt;State_Active&lt;/code&gt; flag is set when the widget is a child of the active window. The &lt;code&gt;State_MouseOver&lt;/code&gt; will only be set if the widget has the &lt;code&gt;WA_HoverEnabled&lt;/code&gt; windows flag set. Notice that keypad navigation must be enabled in Qt for the &lt;code&gt;State_HasEditFocus&lt;/code&gt; to be included; it is not included by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce395b9442abe951286bd2edef1f548f4e1ad5ad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SurfaceAboutToBeDestroyed&lt;/code&gt; event type is useful as a means of stopping rendering to a platform window before it is destroyed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5de36d9b2b4b63495c60b9a1a67231c696490743" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;UI&lt;/code&gt; file format used by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71a291d04e6b1c5c3b0e026126f76fa7566fe96e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;USER&lt;/code&gt; attribute indicates whether the property is designated as the user-facing or user-editable property for the class. Normally, there is only one &lt;code&gt;USER&lt;/code&gt; property per class (default false). e.g., &lt;a href=&quot;qabstractbutton#checked-prop&quot;&gt;QAbstractButton::checked&lt;/a&gt; is the user editable property for (checkable) buttons. Note that &lt;a href=&quot;qitemdelegate&quot;&gt;QItemDelegate&lt;/a&gt; gets and sets a widget's &lt;code&gt;USER&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b72763ebf16fa029fcba1d078f3bfc486be97383" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;XbelWriter&lt;/code&gt; class from &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtxml-streambookmarks-example.html#&quot;&gt;QXmlStream Bookmarks Example&lt;/a&gt; wraps a &lt;a href=&quot;qxmlstreamwriter&quot;&gt;QXmlStreamWriter&lt;/a&gt;. Its &lt;code&gt;writeFile()&lt;/code&gt; function illustrates the core functions of &lt;a href=&quot;qxmlstreamwriter&quot;&gt;QXmlStreamWriter&lt;/a&gt; mentioned above:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="683437499d6d3563c0a58b88f79c982ae23ac89b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;accepted&lt;/code&gt; property may be set to false in the &lt;code&gt;onPinchStarted&lt;/code&gt; handler if the gesture should not be handled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0d3080bf15d385d7c1f561dc5525903957b313c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;alias&lt;/code&gt; variable renames a QDoc command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec5d2f201a2d62218a3112858c21588d79e39b28" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;angle&lt;/code&gt;, &lt;code&gt;previousAngle&lt;/code&gt; and &lt;code&gt;rotation&lt;/code&gt; properties provide the angle between the two points and the amount of rotation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="410af5b59c8acc8306303412a5ab05503f7c209b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;annotatedattributions&lt;/code&gt; argument provides a complete list of all attributions as a set of tables containing the titles of all the attributions, and a description of each attribution. Each title is a link to the attribution's page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c048eddcc5238986e7e32b7423b0f71e67bd8c7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;annotatedclasses&lt;/code&gt; argument provides a table containing the names of all the classes, and a description of each class. Each class name is a link to the class's reference documentation. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dceca62c888f51dc7237e32e935007c58088a025" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;annotatedexamples&lt;/code&gt; argument provides a complete list of all examples as a set of tables containing the titles of all the examples, and a description of each example. Each title is a link to the example's documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b3693569dcb4a00565f4ffdd556956a3487d525" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;app&lt;/code&gt; template tells qmake to generate a Makefile that will build an application. With this template, the type of application can be specified by adding one of the following options to the &lt;a href=&quot;qmake-variable-reference#config&quot;&gt;CONFIG&lt;/a&gt; variable definition:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccec99f43151df27522ca75f07f17f236fa3ee46" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;application&lt;/code&gt; object provides access to global application state properties shared by many QML components.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46cc0a69fb62669bb670905530e9e56b92c0c985" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attributions&lt;/code&gt; argument is used to tell QDoc to generate a list of attributions in the documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5489889e38063040da1c3b6220035cf222f7173" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;author&lt;/code&gt; property could be written to using the &lt;a href=&quot;qtqml-syntax-objectattributes#grouped-properties&quot;&gt;grouped property syntax&lt;/a&gt; in QML, like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0398887936b3c15241ea0df623db422ce88d4693" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bell&lt;/code&gt; component will change to the &lt;code&gt;RINGING&lt;/code&gt; state whenever the &lt;code&gt;signal.state&lt;/code&gt; is &lt;code&gt;CRITICAL&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6122b5aed770d44fd13bd4ab4d8672a1eaa24a8d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bool&lt;/code&gt; type refers to a binary true/false value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7858df98953dc52a135ec452abe89e1973bdcb6b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;boundsBehavior&lt;/code&gt; can be one of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44dcc56ac4b905627cef8c4f62b837aa633a4efa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;boundsMovement&lt;/code&gt; can be one of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcfdf0e2f419edb68ce39a5928c1534e7323680f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;build_all&lt;/code&gt; option also ensures that both versions of the target will be installed when the installation rule is invoked:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebaea478f94739599317cad3ddda9cb5e38b4a42" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;build_all&lt;/code&gt; option can be added to the &lt;code&gt;CONFIG&lt;/code&gt; variable in the project file to ensure that the project is built in both modes by default:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9ec0fb92ea8aa6ca100099066d4c5ea2ac029c3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;calculatorform.ui&lt;/code&gt; file designed with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a80ebdeddfc389475618c03cfa4b8befbfb1919" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;categoryChanged&lt;/code&gt; signal is emitted when the category property has changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e41c16a507129b8692d510d35b2a58e3ab1e87f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;center&lt;/code&gt;, &lt;code&gt;startCenter&lt;/code&gt;, &lt;code&gt;previousCenter&lt;/code&gt; properties provide the center position between the two touch points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d143da5eebc2f90053eede783a323f4dc50a0823" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;check&lt;/code&gt; target automatically recurses through &lt;a href=&quot;qmake-variable-reference#subdirs&quot;&gt;SUBDIRS&lt;/a&gt; projects. This means it is possible to issue a &lt;code&gt;make check&lt;/code&gt; command from within a SUBDIRS project to run an entire test suite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42385ed35dd96c40d8c8954581af277736a0f09a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;checkValues()&lt;/code&gt; slot will be used to validate the values provided by the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fc5fbfcbb1b94241d5a992e1258edd5bdbc4da6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;classes&lt;/code&gt; argument provides a complete alphabetical list of the classes. The second argument, &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt;, is the common prefix for the class names. The class names will be sorted on the character that follows the common prefix. e.g. The common prefix for the Qt classes is &lt;code&gt;Q&lt;/code&gt;. The common prefix argument is optional. If no common prefix is provided, the class names will be sorted on their first character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0597defcfdef58df713f4da81994cedb91a0fb72" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;codeindent&lt;/code&gt; variable specifies the level of indentation that QDoc uses when writing code snippets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a545ec1764079a4c60bf1371bc4f24cd25b33531" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;codeprefix&lt;/code&gt; and &lt;code&gt;codesuffix&lt;/code&gt; variables specify a pair of strings that each code snippet is enclosed in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65199c1256d35ac7e8e433e3c9cb2882a77a4ba9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;configure&lt;/code&gt; option -qtlibinfix cannot take a version number as an argument. For example: &lt;code&gt;-qtlibinfix 5.6.0&lt;/code&gt; should be specified as &lt;code&gt;-qtlibinfix QtCore5.6.dll&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a364af55ea104cd49b459721486e677d14ef6680" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;configure&lt;/code&gt; script cannot detect the necessary libraries and include files if they are not in the standard paths, so it may be necessary to specify these paths using the &lt;code&gt;*_INCDIR=&lt;/code&gt;, &lt;code&gt;*_LIBDIR=&lt;/code&gt;, or &lt;code&gt;*_PREFIX=&lt;/code&gt; command-line options. For example, if your MySQL files are installed in &lt;code&gt;/usr/local/mysql&lt;/code&gt; (or in &lt;code&gt;C:\mysql&lt;/code&gt; on Windows), then pass the following parameter to configure: &lt;code&gt;MYSQL_PREFIX=/usr/local/mysql&lt;/code&gt; (or &lt;code&gt;MYSQL_PREFIX=C:\mysql&lt;/code&gt; for Windows). The particulars for each driver are explained below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5425caa9a2b6a223ad9bb397fc518c69835cbb5a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;configure&lt;/code&gt; tool runs various tests to detect capabilities of the SDP and its add-ons. It sets related flags according the test results. Check the configure summary on the console or in &lt;code&gt;./qtbase/config.summary&lt;/code&gt; if needed and set other flags manually as required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4abab65a71605dad50ffc45e4423cdfa4f9bbfa7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;contentItem&lt;/code&gt; can take up as much space as it needs within the shaded areas. If the padding lines are left out, the &lt;code&gt;contentItem&lt;/code&gt; will take as much space as it needs without exceeding the stretchable areas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cccb7d1db1609e2ea704be54236c5950416d178b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;contentX&lt;/code&gt; and &lt;code&gt;contentY&lt;/code&gt; are both &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3d830516a843b400fdb64f787c62a207c19cc75" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;contentX&lt;/code&gt; and the &lt;code&gt;contentY&lt;/code&gt; are both &lt;code&gt;-50&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c0218dca7d5d3c035a30ea19a1bc30da983c31d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;contentX&lt;/code&gt; and the &lt;code&gt;contentY&lt;/code&gt; are both &lt;code&gt;50&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="407bb96f2f7c51831ece11f2e0da6433ad0daabf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;contentX&lt;/code&gt; is &lt;code&gt;-50&lt;/code&gt; and the &lt;code&gt;contentY&lt;/code&gt; is &lt;code&gt;50&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1d30e99b60294715cd319eaaed7606deb76284c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;contentX&lt;/code&gt; is &lt;code&gt;50&lt;/code&gt; and the &lt;code&gt;contentY&lt;/code&gt; is &lt;code&gt;-50&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c363a5fa853df4af3604d8ffcc807d10606a8b8e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;coordinate&lt;/code&gt; type is used by many other types in the Qt Location module, for specifying the position of an object on a Map, the current position of a device and many other tasks. They also feature a number of important utility methods that make otherwise complex calculations simple to use, such as &lt;a href=&quot;qml-coordinate#atdistanceandazimuth&quot;&gt;atDistanceAndAzimuth&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a3d0b3715a9ae8db7b3f59a7a3d79ac52faf2e9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;copy-namespaces&lt;/code&gt; and &lt;code&gt;inherit-namespaces&lt;/code&gt; attributes have no effect. For copied comments, attributes and processing instructions, the copy has the same node identity as the original.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="007c532572592fdb68e5f03540299af8830d2c41" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;copy-namespaces&lt;/code&gt; attribute has no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fd324af16648efe373703b0a8813b3d89be1bf6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;createPopupMenu()&lt;/code&gt; function creates popup menus when the main window receives context menu events. The default implementation generates a menu with the checkable actions from the dock widgets and toolbars. You can reimplement &lt;code&gt;createPopupMenu()&lt;/code&gt; for a custom menu.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67840aef5bd05cabcfc1aeaff034159e03eac661" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;currentIndex&lt;/code&gt; property holds the index of the current item, and &lt;code&gt;currentItem&lt;/code&gt; holds the current item. Setting the &lt;a href=&quot;qml-qtquick-gridview#currentIndex-prop&quot;&gt;currentIndex&lt;/a&gt; to -1 will clear the highlight and set &lt;a href=&quot;qml-qtquick-gridview#currentItem-prop&quot;&gt;currentItem&lt;/a&gt; to null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caeffef29dc0b332dd8343565b7ef90b66ed8f6a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;currentIndex&lt;/code&gt; property holds the index of the current item, and &lt;code&gt;currentItem&lt;/code&gt; holds the current item. Setting the &lt;a href=&quot;qml-qtquick-listview#currentIndex-prop&quot;&gt;currentIndex&lt;/a&gt; to -1 will clear the highlight and set &lt;a href=&quot;qml-qtquick-listview#currentItem-prop&quot;&gt;currentItem&lt;/a&gt; to null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46484c3055aa11775d89e4f8299b42556cdead1b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;currentRoute&lt;/code&gt; property holds the current route the navigator is following. This can be the same as &lt;a href=&quot;qml-qt-labs-location-navigator#route-prop&quot;&gt;route&lt;/a&gt;, or can be different, if the navigator cannot follow the user-specified route. For example, if the position coming from &lt;a href=&quot;qml-qt-labs-location-navigator#positionSource-prop&quot;&gt;positionSource&lt;/a&gt; is considerably off route, the navigation engine may recalculate and start to follow a new route.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d9015a66b89d9b9d7012cad340e7086a8092464" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;currentRouteLeg&lt;/code&gt; property holds the current route leg the navigator is following. This is always a part of &lt;code&gt;currentRoute&lt;/code&gt;, so the &lt;a href=&quot;qml-qtlocation-routeleg#overallRoute-prop&quot;&gt;overallRoute&lt;/a&gt; property of &lt;code&gt;currentRouteLeg&lt;/code&gt; holds the same route as &lt;code&gt;currentRoute&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eebea67556a49da8290f562577c091a701fffd1d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;currentSegment&lt;/code&gt; property holds the index of the current &lt;a href=&quot;qml-qtlocation-routesegment&quot;&gt;RouteSegment&lt;/a&gt; in the &lt;code&gt;currentRoute&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42bf666723d97ff274d582a5159d5cdd4cb554f1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;date&lt;/code&gt; type refers to a date value, including the time of the day.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0184a944dc1e7ba3c341117f920294007b3a867a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;defaultCamera&lt;/code&gt; object provides information about the default camera on the system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99fa34aed802c7a07452f2c2d813e718d1b0534c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;defines&lt;/code&gt; variable specifies the C++ preprocessor symbols that QDoc will recognize and respond to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04ace117311646c9599ac1b7d5eed5fad6f6096e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;distanceToNextManeuver&lt;/code&gt; property holds the distance to the next maneuver, in meters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5faa86ed1c7ac719391c973123eda52bbf48eb8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;doc()&lt;/code&gt; function loads the &lt;code&gt;cookbook.xml&lt;/code&gt; file and returns the document node. The document node then becomes the focus for the next step &lt;code&gt;//recipe&lt;/code&gt;. Here the double slash means select all &lt;code&gt;&amp;lt;recipe&amp;gt;&lt;/code&gt; elements found below the document node, regardless of where they appear in the document tree. The query selects all &lt;code&gt;&amp;lt;recipe&amp;gt;&lt;/code&gt; elements in the cookbook. See &lt;a href=&quot;#running-the-cookbook-examples&quot;&gt;Running The Cookbook Examples&lt;/a&gt; for instructions on how to run this query (and most of the ones that follow) from the command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afbaa49eff2969f00a5a9494da8b50ae637dee97" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;doc()&lt;/code&gt; function returns the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a2680543cc8f6ab5e26b66b55d6fe8590cc1479" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;domXml()&lt;/code&gt; function returns a UI file snippet that is used by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f79d4f8b496806c6095fa5e00830a443c348d49" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;double&lt;/code&gt; type refers to a number with a decimal point and is stored in double precision, &lt;a href=&quot;http://en.wikipedia.org/wiki/IEEE_754&quot;&gt;IEEE floating point&lt;/a&gt; format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="089ce4a5708e49fcd7c8b8f3c86aac72705294cf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dumpcpp&lt;/code&gt; tool generates a C++ namespace for a type library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc34f7819ae1f48ec8d89c20b148f80089030339" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dumpdoc&lt;/code&gt; tool generates Qt-style documentation for any COM object and writes it into the file specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="050f43e4517a91b81fe389f11deb98ba40def4eb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;edition&lt;/code&gt; variable is always used with a particular edition name to define the modules for that edition:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b371b4e2207019102a85d09b06488b4adf7a4a78" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;edition&lt;/code&gt; variable specifies which modules are included in each edition of a package, and provides QDoc with information to provide class lists for each edition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b586ba51735976a7cc28369e34915aa6b410a21b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;emit&lt;/code&gt; line emits the signal &lt;code&gt;valueChanged()&lt;/code&gt; from the object, with the new value as argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aea02dbe292655f720266c270126877d921f670a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;enumeration&lt;/code&gt; type is a representation of a C++ &lt;code&gt;enum&lt;/code&gt; type. It is not possible to refer to the &lt;code&gt;enumeration&lt;/code&gt; type in QML itself; instead, the &lt;a href=&quot;qml-int&quot;&gt;int&lt;/a&gt; or &lt;a href=&quot;qml-var&quot;&gt;var&lt;/a&gt; types can be used when referring to &lt;code&gt;enumeration&lt;/code&gt; values from QML code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89492e7e03e0f6053c6e753c674702565c1babdb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;enumeration&lt;/code&gt; type refers to a named enumeration value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c0dfb814c96b80c9c621186d1b58dd0828917a8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;evdevtablet&lt;/code&gt; plugin provides basic support for Wacom and similar, pen-based tablets. It generates &lt;a href=&quot;qtabletevent&quot;&gt;QTabletEvent&lt;/a&gt; events only. To enable it, pass &lt;code&gt;QT_QPA_GENERIC_PLUGINS=evdevtablet&lt;/code&gt; in the environment or, alternatively, pass &lt;code&gt;-plugin evdevtablet&lt;/code&gt; argument on the command-line. The plugin can take a device node parameter, for example &lt;code&gt;QT_QPA_GENERIC_PLUGINS=evdevtablet:/dev/event1&lt;/code&gt;, in case the Qt's automatic device discovery (based either on</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce572732a8e232f2ec7762b35b4bde8361af860a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;exampledirs&lt;/code&gt; variable specifies the directories containing the source code of the example files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d2a253b59007497e7eb10365989a6204c84704b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;examplefiles&lt;/code&gt; argument can be only used within example documentation (see &lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#example-command&quot;&gt;\example&lt;/a&gt;), and is typically used together with the &lt;a href=&quot;#noautolist-command&quot;&gt;\noautolist&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="201b4366e9b7689c05aecf062da6a347655e84a8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;examplefiles&lt;/code&gt; argument lists the files that are part of an example project. The optional second argument is a regular expression; if provided, only the files whose path matches with the regular expression are listed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e572b6eab785da2d5b41c9c5b09e5e7e7db56c8e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;exampleimages&lt;/code&gt; argument can be only used within example documentation (see &lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#example-command&quot;&gt;\example&lt;/a&gt;), and is typically used together with the &lt;a href=&quot;#noautolist-command&quot;&gt;\noautolist&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d2775d4dfe005a5bccd01dd90484a2e956829e4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;exampleimages&lt;/code&gt; argument lists the images that are part of an example project. The optional second argument is a regular expression; if provided, only the image files whose path matches with the regular expression are listed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cf007b9d6efef7735069b1585c337435594fec7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;examples.fileextensions&lt;/code&gt; variable specifies the file extensions that qdoc will look for when collecting example files for display in the documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51e6d8e44d542705881009653edc3647a94e8a4f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;examples&lt;/code&gt; and &lt;a href=&quot;#exampledirs-variable&quot;&gt;&lt;code&gt;exampledirs&lt;/code&gt;&lt;/a&gt; variables are used by the &lt;a href=&quot;07-0-qdoc-commands-includingexternalcode#quotefromfile-command&quot;&gt;\quotefromfile&lt;/a&gt;, &lt;a href=&quot;07-0-qdoc-commands-includingexternalcode#quotefile-command&quot;&gt;\quotefile&lt;/a&gt; and &lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#example-command&quot;&gt;\example&lt;/a&gt; commands. If both the &lt;code&gt;examples&lt;/code&gt; and &lt;a href=&quot;#exampledirs-variable&quot;&gt;&lt;code&gt;exampledirs&lt;/code&gt;&lt;/a&gt; variables are defined, QDoc will search in both, first in &lt;code&gt;examples&lt;/code&gt; then in &lt;a href=&quot;#exampledirs-variable&quot;&gt;&lt;code&gt;exampledirs&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="071289ed58d27047c1c1ce61ebeb535a07a831db" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;examples&lt;/code&gt; variable allows you to specify individual example files in addition to those located in the directories specified by the &lt;a href=&quot;#exampledirs-variable&quot;&gt;&lt;code&gt;exampledirs&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f27d9f0d37762eeaabcc478a4fcc336b63330e6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;excludedirs&lt;/code&gt; variable is for listing directories that should</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6e169e3750286b6f30a66b31c36308b2c10c10d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;excludedirs&lt;/code&gt; variable is for listing directories that should not be processed by qdoc, even if the same directories are included by the &lt;code&gt;sourcedirs&lt;/code&gt; or &lt;code&gt;headerdirs&lt;/code&gt; variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0837a41f112d4ce20b2c11e76df04e2db5c3a116" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;excludefiles&lt;/code&gt; variable allows you to specify individual files that should</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d4a9bbae74beb2e7178dccce1deeb92037b6347" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;extraImage.png&lt;/code&gt; and the &lt;code&gt;extraImage2.png&lt;/code&gt; files will be copied to the HTML output directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be0381c2643a27408a3f53acddd9cb9d36020061" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;extraimages&lt;/code&gt; variable tells QDoc to incorporate specific images in the generated documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d40ee6b6314c2555321f79cd597f859411b23cb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;falsehoods&lt;/code&gt; variable defines the truth value of specified preprocessor symbols as false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58ad2b337f7128859fb917d3e6e456a12949431d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;files&lt;/code&gt; argument represents a list of one or more project files, separated by spaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e9a22cfc729a26aea169ca383e9a422a2629e0e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;flag&lt;/code&gt; may be &lt;code&gt;WOW64_32KEY&lt;/code&gt; (&lt;code&gt;32&lt;/code&gt;) or &lt;code&gt;WOW64_64KEY&lt;/code&gt; (&lt;code&gt;64&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="620a7de8aa069185bbf519808eac463e9e5819e6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;foreach&lt;/code&gt; code is significantly shorter than the equivalent code that uses iterators:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27125eb321402cfec133bf46ab03cd4dff198ba1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;formEditor&lt;/code&gt; parameter in the &lt;a href=&quot;qdesignercustomwidgetinterface#initialize&quot;&gt;QDesignerCustomWidgetInterface::initialize&lt;/a&gt;() function is a pointer to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd7e5702167adffa8ae23f9c05ec969d45591018" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;functionindex&lt;/code&gt; argument provides a complete alphabetical list of all the documented member functions. It is normally used only to generate the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbaaf89b69f71853aa30fd7a6fe81703e1aa7f49" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;gc()&lt;/code&gt; function is equivalent to calling &lt;a href=&quot;qjsengine#collectGarbage&quot;&gt;collectGarbage&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06a828bc86296858e48603af164ce9a549905ce3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;generateindex&lt;/code&gt; variable contains a boolean value that specifies whether to generate an index file when HTML documentation is generated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99c111e7ccb274b0060a0944706d35b4968ee7a1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;geocircle&lt;/code&gt; type is a &lt;a href=&quot;qml-geoshape&quot;&gt;geoshape&lt;/a&gt; that represents a circular geographic area. It is a direct representation of a &lt;a href=&quot;qgeocircle&quot;&gt;QGeoCircle&lt;/a&gt; and is defined in terms of a &lt;a href=&quot;qml-coordinate&quot;&gt;coordinate&lt;/a&gt; which specifies the &lt;a href=&quot;qml-geocircle#center&quot;&gt;center&lt;/a&gt; of the circle and a qreal which specifies the &lt;a href=&quot;qml-geocircle#radius&quot;&gt;radius&lt;/a&gt; of the circle in meters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="369d7dff3f499dc7919868616e0c557bf62878ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;geopath&lt;/code&gt; type is a &lt;a href=&quot;qml-geoshape&quot;&gt;geoshape&lt;/a&gt; that represents a geographic path. It is a direct representation of a &lt;a href=&quot;qgeopath&quot;&gt;QGeoPath&lt;/a&gt; and is defined in terms of a &lt;a href=&quot;qml-geopolygon#path&quot;&gt;path&lt;/a&gt; which holds the list of geo coordinates in the path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b024da3ff69e86cc2c63b3cab917c8b439893224" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;geopolygon&lt;/code&gt; type is a &lt;a href=&quot;qml-geoshape&quot;&gt;geoshape&lt;/a&gt; that represents a geographic polygon. It is a direct representation of &lt;a href=&quot;qgeopolygon&quot;&gt;QGeoPolygon&lt;/a&gt; and is defined in terms of a &lt;a href=&quot;qml-geopolygon#path&quot;&gt;path&lt;/a&gt; which holds a list of geo coordinates in the polygon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f09831da351593e4a056927b5ac78a27b4b2a05a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;georectangle&lt;/code&gt; type is a &lt;a href=&quot;qml-geoshape&quot;&gt;geoshape&lt;/a&gt; that represents a rectangular geographic area. The type is direct representation of a &lt;a href=&quot;qgeorectangle&quot;&gt;QGeoRectangle&lt;/a&gt;. It is defined by a pair of &lt;a href=&quot;qml-coordinate&quot;&gt;coordinates&lt;/a&gt; which represent the top-left and bottom-right corners of the &lt;code&gt;georectangle&lt;/code&gt;. The coordinates are accessible from the &lt;a href=&quot;qml-georectangle#topleft&quot;&gt;topLeft&lt;/a&gt; and &lt;a href=&quot;qml-georectangle#bottomright&quot;&gt;bottomRight&lt;/a&gt; attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3ea2c3545313e9c0ba1688c199cac33760671e5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;headerdirs&lt;/code&gt; variable specifies the directories containing the header files associated with the &lt;code&gt;.cpp&lt;/code&gt; source files used in the documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44ee9beca9fab3e1fb1b8d65ab23fb651509fa65" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;headers.fileextensions&lt;/code&gt; variable specify the extension used by the headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44a542aa1d57332115529a867985aa4d3949189c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;headers&lt;/code&gt; variable allows you to specify individual header files in addition to those located in the directories specified by the &lt;a href=&quot;#headerdirs&quot;&gt;&lt;code&gt;headerdirs&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f686e15386e643d023e7d6ba317c264dfbe5218" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;highlightItem&lt;/code&gt; is managed by the view unless &lt;a href=&quot;qml-qtquick-listview#highlightFollowsCurrentItem-prop&quot;&gt;highlightFollowsCurrentItem&lt;/a&gt; is set to false. The default &lt;a href=&quot;qquickitem#z-prop&quot;&gt;stacking order&lt;/a&gt; of the highlight item is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80591580340161e3b05ff6fb1801601cfb9aabc8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;imagedirs&lt;/code&gt; variable specifies the directories containing the images used in the documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe6f0f1d91c26f7f72e50b7a09fa75ccb51e823b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;images&lt;/code&gt; variable allows you to specify individual image files in addition to those located in the directories specified by the &lt;a href=&quot;#imagedirs&quot;&gt;&lt;code&gt;imagedirs&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5abf12477650c118c439a89d80410acae37d6f8d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;import&lt;/code&gt; statement is only network transparent if it has an &quot;as&quot; clause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c5bc0d5539cf7b7dd235b44b67e81ae1f0fca08" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;import&lt;/code&gt; statement may optionally use the &lt;code&gt;as&lt;/code&gt; keyword to specify that the types should be imported into a particular document-local namespace. If a namespace is specified, then any references to the types made available by the import must be prefixed by the local namespace qualifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7467e0033cb3618ac00330817ec601875cdc8a6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;index()&lt;/code&gt; function used in this case is unique to &lt;a href=&quot;qfilesystemmodel&quot;&gt;QFileSystemModel&lt;/a&gt;; we supply it with a directory and it returns a model index. Model indexes are discussed in &lt;a href=&quot;#model-classes&quot;&gt;Model Classes&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e716c1a102a916f2753553ec1864c862a8f4992" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;index.theme&lt;/code&gt; file describes the general attributes of the icon theme, and lists the available theme icon directories:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22e32903345ced39e8ce0143adbb8fe3bf349b55" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;indexes&lt;/code&gt; variable lists the index files that will be used to generate references.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b679c3c6df8fc2ce4cc512d97a84612cec7d81a8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;inputMethod&lt;/code&gt; object allows access to application's &lt;a href=&quot;qinputmethod&quot;&gt;QInputMethod&lt;/a&gt; object and all its properties and slots. See the &lt;a href=&quot;qinputmethod&quot;&gt;QInputMethod&lt;/a&gt; documentation for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a3fb7416df9e136de0a6a72c27778a9a9322473" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;int&lt;/code&gt; type refers to a whole number, e.g. 0, 10, or -20.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="816fd9c72e784297332e46d48e14b990a3a0e4d9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;invokableMethod()&lt;/code&gt; function is marked up using Q_INVOKABLE, causing it to be registered with the meta-object system and enabling it to be invoked using &lt;a href=&quot;qmetaobject#invokeMethod&quot;&gt;QMetaObject::invokeMethod&lt;/a&gt;(). Since &lt;code&gt;normalMethod()&lt;/code&gt; function is not registered in this way, it cannot be invoked using &lt;a href=&quot;qmetaobject#invokeMethod&quot;&gt;QMetaObject::invokeMethod&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbd1136afc25b2309453f86adfec28ae3168fbca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;jsFunction()&lt;/code&gt; is called whenever the &lt;a href=&quot;qml-qtquick-taphandler&quot;&gt;TapHandler&lt;/a&gt;'s &lt;code&gt;tapped&lt;/code&gt; signal is emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d14824f2e74306c2cc95b3b6a5dc4d96c82ec205" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;language&lt;/code&gt; variable specifies the language of the source code that is used in the documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00859d115371726ee9fc73c0491c6ab062c3b3bb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;leftMargin&lt;/code&gt; property is a new property added to an existing C++ type, &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt;, without modifying its source code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae4a31661779737dbf12abe79988b01a794808e4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;legalese&lt;/code&gt; argument tells QDoc to generate a list of licenses in the current documentation project. Each license is identified using the &lt;a href=&quot;11-qdoc-commands-specialcontent#legalese-command&quot;&gt;\legalese&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e17d911b5c7a550ded854c0b78d317438adb07f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;length&lt;/code&gt; property provides the number of items in the list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83653add6cff55addd458f6db116931814fbb835" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;lib&lt;/code&gt; template tells qmake to generate a Makefile that will build a library. When using this template, the &lt;a href=&quot;qmake-variable-reference#version&quot;&gt;VERSION&lt;/a&gt; variable is supported, in addition to the system variables that the &lt;code&gt;app&lt;/code&gt; template supports. Use the variables in your .pro file to specify information about the library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3445487e64d52d35f6861baba02de29729a4c3c0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;linuxfb&lt;/code&gt; plugin allows you to specify additional settings via the &lt;code&gt;QT_QPA_PLATFORM&lt;/code&gt; environment variable or &lt;code&gt;-platform&lt;/code&gt; command-line option. For example, &lt;code&gt;QT_QPA_PLATFORM=linuxfb:fb=/dev/fb1&lt;/code&gt; specifies that the framebuffer device &lt;code&gt;/dev/fb1&lt;/code&gt; must be used instead of the default &lt;code&gt;fb0&lt;/code&gt;. To specify multiple settings, separate the mwith a colon (:).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63c5adff71dc8352c7ab00635b6850b144e0dbba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;list&lt;/code&gt; type refers to a list of QML objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7868c1ebdd7a0f9444606262216d34a65f43bd8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;loadedChanged&lt;/code&gt; signal is emitted when the loading state has changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c686cc2e915cdd7fe423e175deaf014c2e8866be" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;loopCountChanged&lt;/code&gt; signal is emitted when the initial number of loops has changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45bc76d895116c4d244af5486b6cd2f3458074db" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;loopsRemainingChanged&lt;/code&gt; signal is emitted when the remaining number of loops has changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb8b16ffa93cbea0d2a96534e79aa35a75c43920" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;lupdate&lt;/code&gt; tool extracts user interface strings from your application. lupdate reads your application's .pro file to identify which source files contain texts to be translated. This means your source files must be listed in the &lt;code&gt;SOURCES&lt;/code&gt; or &lt;code&gt;HEADERS&lt;/code&gt; entry in the .pro file. If your files are not listed the texts in them will not be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89817bf7892aff310175fc77d4a62663f54a396d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;macro&lt;/code&gt; variable is used to create your own simple QDoc commands. The syntax is &lt;code&gt;macro.&lt;i&gt;command&lt;/i&gt; = &lt;i&gt;definition&lt;/i&gt;&lt;/code&gt;, where the definition is written using QDoc syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39fcb8323848b44936ef7d8e8802124ac633b0ec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;main/application.qml&lt;/code&gt; file can import the &lt;code&gt;mycomponents&lt;/code&gt; directory using the relative path to that directory, allowing it to use the QML object types defined within that directory:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="822ce42f893a096f71c1250216f51bfadaec658f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;main&lt;/code&gt; function creates the calculator widget by constructing a standard &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; that we use to host the user interface described by the &lt;code&gt;calculatorform.ui&lt;/code&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bf096e714b364a1332b33f0dd408974ff0c106c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;manifestmeta&lt;/code&gt; variable specifies additional meta-content for the example manifest files generated by QDoc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5358afda7bca42ba937ada7faddbad8779cc8ac" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;message&lt;/code&gt; object may only contain values of the following types:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d995f793e95c0daaf53f9919ec4041cbd419fb6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;moc&lt;/code&gt; is not the only code generator Qt is using. Another prominent example is the &lt;code&gt;uic&lt;/code&gt; (User Interface Compiler). It takes a user interface description in XML and creates C++ code that sets up the form. Outside Qt, code generators are common as well. Take for example &lt;code&gt;rpc&lt;/code&gt; and &lt;code&gt;idl&lt;/code&gt;, that enable programs or objects to communicate over process or machine boundaries. Or the vast variety of scanner and parser generators, with &lt;code&gt;lex&lt;/code&gt; and &lt;code&gt;yacc&lt;/code&gt; being the most well-known ones. They take a grammar specification as input and generate code that implements a state machine. The alternatives to code generators are hacked compilers, proprietary languages or graphical programming tools with one-way dialogs or wizards that generate obscure code during design time rather than compile time. Rather than locking our customers into a proprietary C++ compiler or into a particular Integrated Development Environment, we enable them to use whatever tools they prefer. Instead of forcing programmers to add generated code into source repositories, we encourage them to add our tools to their build system: cleaner, safer and more in the spirit of UNIX.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bb369a940adf0ebfc24f32908b049aa952b9401" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;moc&lt;/code&gt; tool reads a C++ header file. If it finds one or more class declarations that contain the &lt;a href=&quot;qobject#Q_OBJECT&quot;&gt;Q_OBJECT&lt;/a&gt; macro, it produces a C++ source file containing the meta-object code for those classes. Among other things, meta-object code is required for the signals and slots mechanism, the run-time type information, and the dynamic property system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc2490bdd03214c6661361583f41512250f74699" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;moc&lt;/code&gt; tool reads a C++ source file. If it finds one or more class declarations that contain the &lt;a href=&quot;qobject#Q_OBJECT&quot;&gt;Q_OBJECT&lt;/a&gt; macro, it produces another C++ source file which contains the meta-object code for each of those classes. This generated source file is either &lt;code&gt;#include&lt;/code&gt;'d into the class's source file or, more usually, compiled and linked with the class's implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cc40da9ba8c0a84feea133fbb1a09806d59770e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mutedChanged&lt;/code&gt; signal is emitted when the mute state has changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e10b322b7fed1562f684945af3930ad5f1091d27" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;naturallanguage&lt;/code&gt; variable specifies the natural language used for the documentation generated by qdoc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6857a976cc2a7a27fe863f577716083023df3bb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;navigation&lt;/code&gt; sub-variables, if defined, set the home page, landing page, C++ classes page, and QML types page that are visible in the generated navigation bar for each page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f476f2a341f567248e6ea79e085070c353d89142" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;nextCheckState&lt;/code&gt; callback function can override the default behavior. The following example implements a tri-state check delegate that can present a partially checked state depending on external conditions, but never cycles to the partially checked state when interactively toggled by the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efb171377bc2bd37354e2fc16f0b31ec7c363c3e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;nextCheckState&lt;/code&gt; callback function can override the default behavior. The following example implements a tri-state checkbox that can present a partially checked state depending on external conditions, but never cycles to the partially checked state when interactively toggled by the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc4f5d9b9ddefda811bd88d32218131cb93c315e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;nextManeuverIcon&lt;/code&gt; property holds the next turn icon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48ad0595f4ae2fc921ad02e62438dc3bb12269f4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;obj&lt;/code&gt; variable, of type &lt;code&gt;QObject *&lt;/code&gt;, actually refers to a &lt;code&gt;MyWidget&lt;/code&gt; object, so we can cast it appropriately:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8086636162eb13ceb00c28e7efafc9dfd3e448fe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ok&lt;/code&gt; variable is set to true if the user clicks &lt;b&gt;OK&lt;/b&gt;; otherwise, it is set to false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="428be8c67b5901775b756f8158ac7c05dd487b86" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onCompleted&lt;/code&gt; handler is not responding to a &lt;code&gt;completed&lt;/code&gt; signal from the &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; type. Instead, an object of the &lt;code&gt;Component&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1fad0d75cc7685107524dc3c3c98be595e92e73" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;org.freedesktop.DBus.Error.InteractiveAuthorizationRequired&lt;/code&gt; error indicates that authorization failed, but could have succeeded if this flag had been set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7410d84de586a94cc483ad25464b2f46e75c970" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;outputdir&lt;/code&gt; variable specifies the directory where QDoc will put the generated documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adcc7c887a94d59e5bf83c68b22820152926ef6d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;outputencoding&lt;/code&gt; variable specifies the encoding used for the documentation generated by qdoc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d20def349ff31f6fe81d587b864d68bcfbc25e61" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;outputformats&lt;/code&gt; variable specifies the format(s) of the generated documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b686cd5a7dd09e3912ccc08293e69f916f8c282" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;outputprefixes&lt;/code&gt; variable specifies a mapping between types of files and the prefixes to prepend to the HTML file names in the generated documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c15b227d439bd06d3fe67cba4b0bdfec5529eaf4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;outputsuffixes&lt;/code&gt; variable specifies a mapping between types of files and module name suffixes to append to the HTML file names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a64abe1650195122b72c5feac46b91aab5c847e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;outputsuffixes&lt;/code&gt; variable was introduced in QDoc 5.6.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a3db1f6efbd92225c4c7890392f34b5503d5a5a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;overviews&lt;/code&gt; argument is used to tell QDoc to generate a list by concatenating the contents of all the &lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#group-command&quot;&gt;\group&lt;/a&gt; pages. Qt uses it to generate the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20633c49279e2c139951edd4138aa81694a51ea3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;parent&lt;/code&gt; will be used as both the &lt;a href=&quot;qquickitem#parent-prop&quot;&gt;visual parent&lt;/a&gt; and the &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; parent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca819f9b93842c01a70a6a945807158d216322cd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;path&lt;/code&gt; member informs qmake that the files should be installed in &lt;code&gt;/usr/local/program/doc&lt;/code&gt; (the path member), and the &lt;code&gt;files&lt;/code&gt; member specifies the files that should be copied to the installation directory. In this case, everything in the &lt;code&gt;docs&lt;/code&gt; directory will be copied to &lt;code&gt;/usr/local/program/doc&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="884c677d8442261f1d82d6c453792d3c42a706c4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;paused&lt;/code&gt; property can be set to declaratively control whether or not an animation is paused.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="101b08294ea8de5dcc366567744bf1e2b539229f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;platform&lt;/code&gt; object provides info about the underlying platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="109a0535ad27fc622ee69e71a17dd33952a69cff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;playingChanged&lt;/code&gt; signal is emitted when the playing property has changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e967f33b22f430d705a10c8830b07de259e4dd13" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;point1&lt;/code&gt;, &lt;code&gt;point2&lt;/code&gt;, &lt;code&gt;startPoint1&lt;/code&gt;, &lt;code&gt;startPoint2&lt;/code&gt; properties provide the positions of the touch points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2883bf3dc013862653b66481aaa65d86992dc28" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;point&lt;/code&gt; type refers to a value with &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aae6e9b89e95e2954b62771fbc72200eb9cc9cb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;position&lt;/code&gt; is set to &lt;code&gt;-1&lt;/code&gt;, which makes the swipe open from the right. Either &lt;code&gt;swipe.right&lt;/code&gt; or &lt;code&gt;swipe.behind&lt;/code&gt; must have been specified; otherwise the call is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33bba4d06347f1405982e7f243f02950a16cf097" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;position&lt;/code&gt; is set to &lt;code&gt;1&lt;/code&gt;, which makes the swipe open from the left. Either &lt;code&gt;swipe.left&lt;/code&gt; or &lt;code&gt;swipe.behind&lt;/code&gt; must have been specified; otherwise the call is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c050e59fb86395737cde58b6883fe009f076204" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;project&lt;/code&gt; variable provides a name for the project associated with the &lt;code&gt;.qdocconf&lt;/code&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ef9f880b7838925f11c3cc74e3d56affb87adde" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;project&lt;/code&gt; variable sets the name of the QDoc build. This name is also used to form the index file, which, in this case, will be</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42803e5c4f216af46096788073136565bee7e0dd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;qdbusxml2cpp&lt;/code&gt; tool is not meant to be run every time you compile your application. Instead, it's meant to be used when developing the code or when the interface changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0715682cf4202cd3cfffd6007bb29856f195b394" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;qhp&lt;/code&gt; variable is used to define the information to be written out to Qt Help Project (&lt;code&gt;qhp&lt;/code&gt;) files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcf3d98fcba1e0d0e8c4f0c011c81373f999ae13" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;qminimal&lt;/code&gt; plugin is used for tools that link against &lt;a href=&quot;qtgui-index&quot;&gt;Qt GUI&lt;/a&gt;, but do not require window system integration (for example, &lt;code&gt;qmlplugindump&lt;/code&gt;). It also has diagnostic support for dumping window contents to image files as determined by environment variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a77d18f3678b6357e221151d137ce35f155480c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;qmlscene&lt;/code&gt; utility is meant to be used for testing your QML applications, and not as a launcher in a production environment. To launch a QML application in a production environment, develop a custom C++ application or bundle the QML file in a module. See &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-deployment.html#&quot;&gt;Deploying QML applications&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7765e1e484f4e893d6c9cf9c17e8ac5394294067" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;qscxml&lt;/code&gt; tool is invoked automatically if the QT variable in the project file includes &lt;code&gt;scxml&lt;/code&gt;, and the .scxml file to use is specified using the &lt;code&gt;STATECHARTS&lt;/code&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40ea63c112ba092f4e26409289b92b92b876ad8e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;qscxmlc&lt;/code&gt; tool reads an .scxml file and produces C++ source and header files, containing a class that implements a state machine as defined in SCXML.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ac1a499fcdf86e9c0ad1c0dc5949362de74cc69" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;qscxmlc&lt;/code&gt; tool supports the following command-line options, which can be specified using the &lt;code&gt;QSCXMLC_ARGUMENTS&lt;/code&gt; variable in the project file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="708133f3d3ca4d3020e59f26af051100f24d3f8a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;qt.conf&lt;/code&gt; file can be used to override the hard-coded paths that are compiled into the Qt library. These paths are accessible using the &lt;a href=&quot;qlibraryinfo&quot;&gt;QLibraryInfo&lt;/a&gt; class. Without &lt;code&gt;qt.conf&lt;/code&gt;, the functions in &lt;a href=&quot;qlibraryinfo&quot;&gt;QLibraryInfo&lt;/a&gt; return these hard-coded paths; otherwise they return the paths as specified in &lt;code&gt;qt.conf&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78291163910c86f40c60b23d4499c5ef964c4b53" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;qt.conf&lt;/code&gt; file is an INI text file, as described in the &lt;a href=&quot;qsettings#Format-enum&quot;&gt;QSettings&lt;/a&gt; documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96649675e1ba685fc361a98168cee377079613f4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;qt.conf&lt;/code&gt; may contain a &lt;code&gt;Platforms&lt;/code&gt; group, whose keys are comma-delimited lists of arguments to be passed to the platform plugin. The key name is the name of the platform plugin with the first letter upper-cased followed by &lt;code&gt;Arguments&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d75603e7944935773c4aa7ddd573bb35cc7d40c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;query&lt;/code&gt; property specifies that the &lt;a href=&quot;qml-qtquick-xmllistmodel-xmllistmodel&quot;&gt;XmlListModel&lt;/a&gt; generates a model item for each &lt;code&gt;&amp;lt;item&amp;gt;&lt;/code&gt; in the XML document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fe8423cce36ae08bcb0525f3c100541cae6369f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rcc&lt;/code&gt; tool is used to embed resources into a Qt application during the build process. It works by generating a C++ source file containing data specified in a Qt resource (.qrc) file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="682a6a5f476bdabc9ebf4ffbb931bfc71a90e1f5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;read()&lt;/code&gt; function accepts a &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; and sets it with &lt;a href=&quot;qxmlstreamreader#setDevice&quot;&gt;setDevice()&lt;/a&gt;. The &lt;a href=&quot;qxmlstreamreader#raiseError&quot;&gt;raiseError()&lt;/a&gt; function is used to display a custom error message, inidicating that the file's version is incorrect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac3ca2e712b25997874e755f8c07c6e1c44d6914" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;readSettings()&lt;/code&gt; and &lt;code&gt;writeSettings()&lt;/code&gt; functions must be called from the main window's constructor and close event handler as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71961aee537ca07593d698e116aa2637960bd170" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;real&lt;/code&gt; type refers to a number with decimal point, e.g. 1.2 or -29.8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d37eb9d737e83939afb0205c73fcf972c2cc2b7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rect&lt;/code&gt; type also exposes read-only &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, &lt;code&gt;top&lt;/code&gt; and &lt;code&gt;bottom&lt;/code&gt; attributes. These are the same as their &lt;a href=&quot;qrectf&quot;&gt;C++ counterparts&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42ca72847f06a68a21a6db6c43ea1a7fc1a026c4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rect&lt;/code&gt; type refers to a value with &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ef7fceae87140df90f74894cac361af491092a4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;related&lt;/code&gt; argument is used in combination with the &lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#group-command&quot;&gt;\group&lt;/a&gt; and &lt;a href=&quot;19-qdoc-commands-grouping#ingroup-command&quot;&gt;\ingroup&lt;/a&gt; commands to list all the overviews related to a specified group. For example, the page for the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1a031bcf8b0516da4e66445eb02b5327e21e089" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;remainingTravelDistance&lt;/code&gt; property holds the remaining travel distance, in meters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4865e048bf3859dc4aa7c172a4d2c4f40b4bf09e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;remainingTravelDistanceToNextWaypoint&lt;/code&gt; property holds the remaining travel distance to the next waypoint, in meters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbff4fd952269b2bff4ab6d49ebe283cd1547ab1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;remainingTravelTime&lt;/code&gt; property holds the remaining travel time, in milliseconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="049414f32e2ab2d38d5bf154134eaf29862da8cc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;remainingTravelTimeToNextWaypoint&lt;/code&gt; property holds the remaining travel time to the next waypoint, in milliseconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d04c1e6ec71acd2ce211d458f83cd09a01448fd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;result&lt;/code&gt; variable, is a normal variable allocated on the stack. When &lt;code&gt;return&lt;/code&gt; is called, and because we're returning by value, the copy constructor is called and a copy of the string is returned. No actual copying takes place thanks to the implicit sharing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfeef673ae36f1616d99d6335bc27b6965f6fe57" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;routeInfoModel&lt;/code&gt;&lt;a href=&quot;qtquick-modelviewsdata-modelview#models&quot;&gt;ListModel&lt;/a&gt; is used to grab the results of the query and construct a suitable list for display.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66b8df7c1b672782c0aab399b30acda994570cf1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;running&lt;/code&gt; property can be set to declaratively control whether or not an animation is running. The following example will animate a rectangle whenever the &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; is pressed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64014f9dc0aa5263d324f928b80a38709f9c29c0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;scale&lt;/code&gt; and &lt;code&gt;previousScale&lt;/code&gt; properties provide the scale factor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2637e5ce3f6a761b1812bb2652b78e30ae2a40d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;selectors&lt;/code&gt; property specifies which page types are listed under the table of contents entry for a subproject. Multiple selectors can be listed, separated by whitespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="662d1a3e9b6061492eb72e814f1d4eea3c0ded52" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;servicesWatched&lt;/code&gt; property holds the list of services watched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c3d330ad35286893fed93d5ddf5f784af2ed581" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setGeometry()&lt;/code&gt; function actually performs the layout. The rectangle supplied as an argument does not include &lt;code&gt;margin()&lt;/code&gt;. If relevant, use &lt;code&gt;spacing()&lt;/code&gt; as the distance between items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35f884a6f8e55ff42e0981fd0f9ac8cd2c780991" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;simpleswitch.h&lt;/code&gt; and &lt;code&gt;simpleswitch.cpp&lt;/code&gt; sources from &lt;a href=&quot;#qtro-example1&quot;&gt;Example&lt;/a&gt; can be used without modification. The difference is in the way a host node is created and connected to the &lt;a href=&quot;qtremoteobjects-registry#registry&quot;&gt;Registry&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13488131237be3072aee1bd9a68d0340e8affd5a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;size&lt;/code&gt; type refers to a value with has &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c65357f49642fd9382d61a6ed00265b020e6cfd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;slider()&lt;/code&gt; function returns a pointer to the interface's &lt;a href=&quot;qslider&quot;&gt;QSlider&lt;/a&gt;. Some values are left for the superclass's implementation. Not all values are appropriate for all accessible objects, as you can see for &lt;a href=&quot;qaccessible#Text-enum&quot;&gt;QAccessible::Value&lt;/a&gt; case. You should just return an empty string for those values where no relevant text can be provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4562eb72a9d4d0b2e5eefb93aabd61e70a53e575" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;software&lt;/code&gt; backend is fully supported. The path is rendered via &lt;a href=&quot;qpainter#strokePath&quot;&gt;QPainter::strokePath()&lt;/a&gt; and &lt;a href=&quot;qpainter#fillPath&quot;&gt;QPainter::fillPath()&lt;/a&gt; in this case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e65be597f388db52195a3dffb35a74bfcea0c09" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;someText&lt;/code&gt; value could be assigned to in a &lt;code&gt;MyLabel&lt;/code&gt; object definition, like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c539cc1684682cb542537b07498faa0f11908c57" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sourceChanged&lt;/code&gt; signal is emitted when the source has been changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3481fa854ea1a1cef58cef0a5c9fefc56211a049" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sourcedirs&lt;/code&gt; variable specifies the directories containing the &lt;code&gt;.cpp&lt;/code&gt; or &lt;code&gt;.qdoc&lt;/code&gt; files used in the documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a291fea42c1f91f42073842fdc7c454c6248017b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sourceencoding&lt;/code&gt; variable specifies the encoding used for the source code and documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82a89d3f616b6cad00dc912a9f6c014d87cfdaab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sources.fileextensions&lt;/code&gt; variable filters the files within a source directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6f6eb557679629eeb53a551d2c1d276e7aff7e9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sources&lt;/code&gt; variable allows you to specify individual source files in addition to those located in the directories specified by the &lt;a href=&quot;#sourcedirs-variable&quot;&gt;sourcedirs&lt;/a&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94c3532e1fae802b03b37d20dce9e2849b1fa976" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;spurious&lt;/code&gt; variable excludes specified QDoc warnings from the output. The warnings are specified using standard wildcard expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8286af0feae3b6e6f00ca18522435d37a42c485f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;staticMetaObject&lt;/code&gt; for the class can be exposed to JavaScript like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ece49ff041dd4f8fa21c64abba12d3bd2912dee7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;statusChanged&lt;/code&gt; signal is emitted when the status property has changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="929e94aa75fb4618066dce79ba481a2266fe26c7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;string&lt;/code&gt; type refers to a free form text string in quotes, e.g. &quot;Hello world!&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="801a4b59f9809c07dc3c9645edbb68f19867d1bd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;styleHints&lt;/code&gt; object provides platform-specific style hints and settings. See the &lt;a href=&quot;qstylehints&quot;&gt;QStyleHints&lt;/a&gt; documentation for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f8bc149ddc637e907a0f2b2a0a003be01ccb270" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;syntaxhighlighting&lt;/code&gt; variable specifies whether QDoc should perform syntax highlighting on source code quoted in the documentation it generates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b96b0699d0317bc6d86d3073e5eddf53313b9d13" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;tabsize&lt;/code&gt; variable defines the size of a tab character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72f8fcb438b02c90f8dc563603f04bf1d55010eb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;tagfile&lt;/code&gt; variable specifies the Doxygen tag file to be written when HTML is generated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5fe4ee0f2fb7ecedb513ff88f885ec3d76b9549" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;targets&lt;/code&gt; property allows multiple targets to be set. For example, this animates the &lt;code&gt;x&lt;/code&gt; property of both &lt;code&gt;itemA&lt;/code&gt; and &lt;code&gt;itemB&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e401d47eac511fb210e429a242317eaf4e8bcd4d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;this&lt;/code&gt; keyword is supported when binding properties from JavaScript. In QML binding expressions, QML signal handlers, and QML declared functions, &lt;code&gt;this&lt;/code&gt; refers to the scope object. In all other situations, the value of &lt;code&gt;this&lt;/code&gt; is undefined in QML.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e33dbe5be249a027f73a920950b5860b8ea68a3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;timeToNextManeuver&lt;/code&gt; property holds the time to the next maneuver, in milliseconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f3c1c5da027401d37744706f49e292f3fc1895c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;traveledDistance&lt;/code&gt; property holds the traveled distance, in meters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="097728f6ce2f0caba9c3926666a6347e5ef78595" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;traveledTime&lt;/code&gt; property holds the traveled time, in milliseconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ee1ded771e7b345ac93aac5d6d7814963c432c4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;type&lt;/code&gt; role can take on the following values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca135954117c81c98dc6f05d338ebd6705b9f236" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;undefined&lt;/code&gt; value can be used to reset the property value for a state. In the following example, when &lt;code&gt;myText&lt;/code&gt; changes to the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83820b59ae50edb0dc24e59053097c08cd05d30d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;unix&lt;/code&gt;&lt;a href=&quot;qmake-language#scopes-and-conditions&quot;&gt;scope&lt;/a&gt; ensures that these particular commands are only executed on Unix platforms. Appropriate commands for other platforms can be defined using other scope rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1ad582d8407fa6f196edb67f678544e0563ae25" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;url.examples&lt;/code&gt; variable holds the base URL for the examples associated with the current project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d4d55232f7bb22e03031d59645574664df0abbf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;url&lt;/code&gt; type refers to a resource locator (like a file name, for example). It can be either absolute, e.g. &quot;http://qt-project.org&quot;, or relative, e.g. &quot;pics/logo.png&quot;. A relative URL is resolved relative to the URL of the containing component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c3622989ff3b78af7ef3e3a5939673d26816a9f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;url&lt;/code&gt; variable holds the base URL for the reference documentation associated with the current project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed76d0cc7c7194c947d7f71ee661c72ca56b6945" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;url&lt;/code&gt; variable holds the base url of the project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b9fab79eb04fffd48386821d467ff482fc2ee8b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;value&lt;/code&gt; declaration of each format describes the way in which the data is encoded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ded2919fe55d1d8def293cdae3103ebd1dfc4c1c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;var&lt;/code&gt; type is a generic property type that can refer to any data type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28f927897c4e6ae1b8ad622c1b3ed85bb77007a9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;variant&lt;/code&gt; type can also hold:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1040ede1198f80d290be17389a6bf6dfdb8f548e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;variant&lt;/code&gt; type is a generic property type. It is obsolete and exists only to support old applications; new applications should use &lt;a href=&quot;qml-var&quot;&gt;var&lt;/a&gt; type properties instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2589c79b9557f2c23c1ccfbb1ddc7fdc68dd3624" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vector3d&lt;/code&gt; type refers to a value with &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, and &lt;code&gt;z&lt;/code&gt; attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6af6c803387a05da6f6cc8f08576181be0a1f01" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;version&lt;/code&gt; variable specifies the version number of the documented software.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59a6795d43d6e30d59d438d261e4502d1852a04e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;versionsym&lt;/code&gt; variable specifies a C++ preprocessor symbol that defines the version number of the documented software.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d640622a37821c11d6491aaeaf891ff4303346c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;volumeChanged&lt;/code&gt; signal is emitted when the volume has changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73cbd0316e3b24a40f07a2e5c598bf24a90995ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vxworksfb&lt;/code&gt; plugin allows specifying additional settings by passing them in the &lt;code&gt;QT_QPA_PLATFORM&lt;/code&gt; environment variable or &lt;code&gt;-platform&lt;/code&gt; command-line option. For example, &lt;code&gt;QT_QPA_PLATFORM=vxworksfb:fb=/dev/fb1&lt;/code&gt; specifies that the framebuffer device &lt;code&gt;/dev/fb1&lt;/code&gt; should be used instead of the default &lt;code&gt;fb0&lt;/code&gt;. Multiple settings can be specfified by separating them with a colon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1ca0e52bc7e1ba7bcaa89c3beacae172d777d04" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;warninglimit&lt;/code&gt; variable sets the maximum number of documentation warnings allowed. If this limit is exceeded, QDoc continues as normal but exits with the warning count as the error code. If the limit was not exceeded or &lt;code&gt;warninglimit&lt;/code&gt; was not defined, QDoc process exits with 0, assuming there were no other critical errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36e282b0d7954ac3c8e21b4a2b6368acda54572b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;warninglimit&lt;/code&gt; variable was introduced in Qt 5.11.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d7a578427be152d76b461fca7730ee28ae0298e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;watchMode&lt;/code&gt; property holds the current watch mode for this &lt;a href=&quot;qdbusservicewatcher&quot;&gt;QDBusServiceWatcher&lt;/a&gt; object. The default value for this property is QDBusServiceWatcher::WatchForOwnershipChange.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8bbd229c51ed70942d6b993dbbc792bc316e8f9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;when&lt;/code&gt; Property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b054255256319484d8cd332627a6fa9f83015d09" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;xcrun&lt;/code&gt; command can then be used to find a particular tool in the toolchain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02c3c767efdce9f82142baa9df58598a1a80953e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;~=&lt;/code&gt; operator replaces any values that match a regular expression with the specified value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c666341e2f15e37180829bcdd555778d87a146b" translate="yes" xml:space="preserve">
          <source>The &lt;i&gt;id&lt;/i&gt; Attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a2a4e0e8d213358f908b65f002ce133677c4d94" translate="yes" xml:space="preserve">
          <source>The &lt;u&gt;F&lt;/u&gt;ile menu gives the users the possibility to edit an existing file, or save a new or modified file, and exit the application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da1a7f7919b1216dd621991514a7716d6b682c64" translate="yes" xml:space="preserve">
          <source>The &lt;u&gt;Rep&lt;/u&gt;lica &lt;u&gt;C&lt;/u&gt;ompiler (repc) generates &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; header files based on an API definition file. The file (called a &quot;rep&quot; file) uses a specific (text) syntax to describe the API. By convention, these files are given a .rep file extension, short for Replica. When these files are processed by repc, repc generates both &lt;a href=&quot;qtremoteobjects-source#source&quot;&gt;Source&lt;/a&gt; and &lt;a href=&quot;qtremoteobjects-replica#replica&quot;&gt;Replica&lt;/a&gt; header files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63de0e2063515b0ee3998132f1e891fe2470f8f1" translate="yes" xml:space="preserve">
          <source>The API consists of over 20 effects provided as separate QML types. The effects cover functional areas such as blending, masking, blurring, coloring, and many more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65796c61f3135eb9e2811ba11cd89d4c2502350e" translate="yes" xml:space="preserve">
          <source>The API for deep linking in &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquickcontrols-chattutorial-example.html#stackview&quot;&gt;StackView&lt;/a&gt; is the same as for basic navigation. Pushing an array instead of a single item adds all the items in that array to the stack. The transition animation, however, is applied only for the last item in the array. The normal semantics of &lt;a href=&quot;qml-qtquick-controls2-stackview#push-method&quot;&gt;push()&lt;/a&gt; apply for deep linking, that is, it adds whatever is pushed onto the stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9b995498a0f4371ffb372957a8ddb69748cb1d2" translate="yes" xml:space="preserve">
          <source>The API for deep linking in &lt;a href=&quot;qml-qtquick-controls-stackview&quot;&gt;StackView&lt;/a&gt; is the same as for basic navigation. Pushing an array instead of a single item, will involve that all the items in that array will be pushed onto the stack. The transition animation, however, will be conducted as if only the last item in the array was pushed onto the stack. The normal semantics of &lt;a href=&quot;qml-qtquick-controls-stackview#push-method&quot;&gt;push()&lt;/a&gt; apply for deep linking, meaning that &lt;a href=&quot;qml-qtquick-controls-stackview#push-method&quot;&gt;push()&lt;/a&gt; adds whatever is pushed onto the stack. Note also that only the last item of the array will be loaded. The rest will be lazy-loaded as needed when entering the screen upon subsequent calls to pop (or when requesting the item by using</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b45fd6aa68c31a875a5958c884db73cd25b0e955" translate="yes" xml:space="preserve">
          <source>The API in Detail</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdcb41b4b9856383cb0611840233f564eebc9625" translate="yes" xml:space="preserve">
          <source>The API is similar to that of views like &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-pathview&quot;&gt;PathView&lt;/a&gt;; a &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquickcontrols-chattutorial-example.html#model&quot;&gt;model&lt;/a&gt; and &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquickcontrols-chattutorial-example.html#delegate&quot;&gt;delegate&lt;/a&gt; can be set, and the &lt;a href=&quot;qml-qtquick-controls2-tumbler#count-prop&quot;&gt;count&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-controls2-tumbler#currentItem-prop&quot;&gt;currentItem&lt;/a&gt; properties provide read-only access to information about the view. To position the view at a certain index, use &lt;a href=&quot;qml-qtquick-controls2-tumbler#positionViewAtIndex-method&quot;&gt;positionViewAtIndex()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b654a9bc30872354346736bb9b76dc0257001687" translate="yes" xml:space="preserve">
          <source>The API is split into sub-modules, which provide QML and C++ interfaces for specific purposes. They focus mainly on Map and Place information. The required position data can be retrieved using the &lt;a href=&quot;qml-qtpositioning-qtpositioning&quot;&gt;QtPositioning&lt;/a&gt; module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac23893ba4b7911391885f1c4def02ca1966e715" translate="yes" xml:space="preserve">
          <source>The API of &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt; contains functions that draw the widgets, static helper functions to do common and difficult tasks (e.g., calculating the position of slider handles) and functions to do the various calculations necessary while drawing (e.g., for the widgets to calculate their size hints). The style also helps some widgets with the layout of their contents. In addition, it creates a &lt;a href=&quot;qpalette&quot;&gt;QPalette&lt;/a&gt; that contains &lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt;es to draw with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14de0381b6c8ed03e7fdf9ab861c6c5424ca5849" translate="yes" xml:space="preserve">
          <source>The API of Qt Quick Controls 2 aims to be clean and simple. Common operations are easy, and more advanced ones are liberally documented with snippets that can be copied into your code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2a67df40834502eb31b0bbb25be0746877b6451" translate="yes" xml:space="preserve">
          <source>The API of Qt Quick Controls 2 is very similar to Qt Quick Controls 1, but it does come with some changes necessary to facilitate the improvements. The majority of changes are to do with styling; all of a control's delegates are now accessible in the control itself, instead of in a separate style object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94f66cd3a2798c68eec576c86f33646dc2200519" translate="yes" xml:space="preserve">
          <source>The API of the STL iterators is modelled on pointers in an array. For example, the &lt;code&gt;++&lt;/code&gt; operator advances the iterator to the next item, and the &lt;code&gt;*&lt;/code&gt; operator returns the item that the iterator points to. In fact, for &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; and &lt;a href=&quot;qstack&quot;&gt;QStack&lt;/a&gt;, which store their items at adjacent memory positions, the &lt;a href=&quot;qvector#iterator-typedef&quot;&gt;iterator&lt;/a&gt; type is just a typedef for &lt;code&gt;T *&lt;/code&gt;, and the &lt;a href=&quot;qvector#iterator-typedef&quot;&gt;const_iterator&lt;/a&gt; type is just a typedef for &lt;code&gt;const T *&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88b76589dabc1ae42e41d64e4f7d5fc00c5b102b" translate="yes" xml:space="preserve">
          <source>The API works just like with &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt;, as shown in the previous section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d997a0ca4238547e5fdfb2277ed9116b14e4d968" translate="yes" xml:space="preserve">
          <source>The ASCII Compatible Encoding (ACE) is defined by RFC 3490, RFC 3491 and RFC 3492. It is part of the Internationalizing Domain Names in Applications (IDNA) specification, which allows for domain names (like &lt;code&gt;&quot;example.com&quot;&lt;/code&gt;) to be written using international characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="481f106d0027eb7f0c55d4d8a6db03d5ef6172a0" translate="yes" xml:space="preserve">
          <source>The ASCII-Compatible Encoding (ACE) is defined by RFC 3490, RFC 3491 and RFC 3492. It is part of the Internationalizing Domain Names in Applications (IDNA) specification, which allows for domain names (like &lt;code&gt;&quot;example.com&quot;&lt;/code&gt;) to be written using international characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95546774de47cd3ad3807ff8ef1952067df3e9c6" translate="yes" xml:space="preserve">
          <source>The ASN.1 object identifier that specifies which extension this is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d48803746d32cac9e6ca4df553846c1a75a1efc" translate="yes" xml:space="preserve">
          <source>The AT client uses three basic concepts to acquire information about any accessible object in an application:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77af9a47683eaaddc5c0b483bd381c8ef423e066" translate="yes" xml:space="preserve">
          <source>The Accelerometer element reports on linear acceleration along the X, Y and Z axes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dc01cbef65f61cd81ac3cfe8287f416a443ca36" translate="yes" xml:space="preserve">
          <source>The Accelerometer element reports on linear acceleration along the X, Y and Z axes. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad88a5f38d81a13c306fca7c6c2d16d09e7bc421" translate="yes" xml:space="preserve">
          <source>The AccessMethods type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;AccessMethod&amp;gt;. It stores an OR combination of AccessMethod values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f938c61fb80a7b770f3bdbed405f2d7ffbf441d3" translate="yes" xml:space="preserve">
          <source>The Accessible Object Tree</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b7f796fd3906d948584451a011b200b75df01b5" translate="yes" xml:space="preserve">
          <source>The Action Editor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d43d75f4441bbd6f770c54d90d1ff3bd5398e9a6" translate="yes" xml:space="preserve">
          <source>The Active group is used for the window that has keyboard focus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b9b8115433eaec1ba52db81ac2db2ada373491f" translate="yes" xml:space="preserve">
          <source>The ActiveQt framework consists of two modules:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e3007d00d16de3ea4a69557e74f19b256625d39" translate="yes" xml:space="preserve">
          <source>The ActiveX server could not shut down properly when the last client stopped using it. It usually takes about two seconds for the application to terminate, but you might have to use the task manager to kill the process (e.g. when a client doesn't release the controls properly).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e03269ced0b76b031cf853c374556b42573d1f80" translate="yes" xml:space="preserve">
          <source>The Address QML type represents a specific location as a street address. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9af8386a4a07099d38fdc0cca7cfd81b141ffa47" translate="yes" xml:space="preserve">
          <source>The Address has a &lt;a href=&quot;qml-qtpositioning-address#text-prop&quot;&gt;text&lt;/a&gt; property which holds a formatted string. It is the recommended way to display an address to the user and typically takes the format of an address as found on an envelope, but this is not always the case. The &lt;a href=&quot;qml-qtpositioning-address#text-prop&quot;&gt;text&lt;/a&gt; may be automatically generated from constituent address properties such as &lt;a href=&quot;qml-qtpositioning-address#street-prop&quot;&gt;street&lt;/a&gt;, &lt;a href=&quot;qml-qtpositioning-address#city-prop&quot;&gt;city&lt;/a&gt; and and so on, but can also be explicitly assigned. See &lt;a href=&quot;qml-qtpositioning-address#text-prop&quot;&gt;text&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="078a8df5d3473e9f68ebe7ba8d0602b6b9e9ef0c" translate="yes" xml:space="preserve">
          <source>The Age affector allows you to alter where the particle is in its lifecycle. Common uses are to expire particles prematurely, possibly giving them time to animate out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="345e78040044f5ced7d581e1d834939d60cc6eb9" translate="yes" xml:space="preserve">
          <source>The Age affector is also sometimes known as a 'Kill' affector, because with the default parameters it will immediately expire all particles which it affects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d5385cc95aa4523bff93207d66912901373e01a" translate="yes" xml:space="preserve">
          <source>The Age affector only applies to particles which are still alive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cf1bb2f4fee1483f762ab23c1f50c6aa2635c68" translate="yes" xml:space="preserve">
          <source>The Alert Status characteristic defines the Status of alert.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6f384af3d28cd173158f33331ce9c8d4550074d" translate="yes" xml:space="preserve">
          <source>The Alignment type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;AlignmentFlag&amp;gt;. It stores an OR combination of AlignmentFlag values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eefbd70afed96bffee1b5b9d37178582956d7579" translate="yes" xml:space="preserve">
          <source>The Alternative class stores attributes of a Bluetooth Data Element Alternative. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24693440dbb77cbbed9a881e0334d8a3ebf59ffa" translate="yes" xml:space="preserve">
          <source>The Altimeter element reports on altitude.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c199cc9adeb7477df9f5218e08e550e756ccd0c3" translate="yes" xml:space="preserve">
          <source>The Altimeter element reports on altitude. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6d799acfd34b9e7f557b5a2f8c0b37b9722c372" translate="yes" xml:space="preserve">
          <source>The Analog Clock example shows how to draw the contents of a custom widget using &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;'s transformation matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08b05d619856990bbc4953bc22c5ced2938af36b" translate="yes" xml:space="preserve">
          <source>The Android NDK</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3215c0700896d6eae494ac2f7e618d434908b4a" translate="yes" xml:space="preserve">
          <source>The Android SDK Tools</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39b988021cc9e6342ccd1103cc907cf3900fcb59" translate="yes" xml:space="preserve">
          <source>The Android backend uses the &lt;code&gt;InputDevice&lt;/code&gt; API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb33d3c98886cc125e439dfac76ce9b7b6630bab" translate="yes" xml:space="preserve">
          <source>The AngledDirection element allows both the specification of a direction by angle and magnitude, as well as varying the parameters by angle or magnitude.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8fa5aa387dab0a5a91abe206f88d77911a7e4b6" translate="yes" xml:space="preserve">
          <source>The Animation Framework</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7476ac21fef5d9cfdceb22c6b067cba56798b37f" translate="yes" xml:space="preserve">
          <source>The Animation type cannot be used directly in a QML file. It exists to provide a set of common properties and methods, available across all the other animation types that inherit from it. Attempting to use the Animation type directly will result in an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a29d77cdfc4f7cf0c1c77c8eaf066f97a19700c" translate="yes" xml:space="preserve">
          <source>The AnimationOptions type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;AnimationOption&amp;gt;. It stores an OR combination of AnimationOption values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cff9c4dd0dfcf773b077b00b224166dd8a552fe" translate="yes" xml:space="preserve">
          <source>The Animator type cannot be used directly in a QML file. It exists to provide a set of common properties and methods, available across all the other animator types that inherit from it. Attempting to use the Animator type directly will result in an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28f56c212145044d3c007187a5a4ce5ff6f184b8" translate="yes" xml:space="preserve">
          <source>The Animator types can be used for animations during transitions, but they do not support the &lt;a href=&quot;qml-qtquick-transition#reversible-prop&quot;&gt;reversible&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff2a62cb2b501034b4ad1fe12b8ccff389ef2341" translate="yes" xml:space="preserve">
          <source>The Animator types can be used just like any other Animation type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5030999ea8b7fead3b63466e41cb5a5cde2675c9" translate="yes" xml:space="preserve">
          <source>The Apple &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; operating system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6b372d51b7b3f43dbed4b36fbce7bff0f86bf84" translate="yes" xml:space="preserve">
          <source>The Apple iOS operating system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b640f8bc8c8fc130e1b3e72573f105910e9e4223" translate="yes" xml:space="preserve">
          <source>The Apple platforms implement scaling and coordinate system virtualization in the in the operating system. Normally, no special configuration is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33c1805246bafe194f855b3f3413a45ddc4319f1" translate="yes" xml:space="preserve">
          <source>The Apple tvOS operating system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40dd0a8b66d269da381af3bde5c322cea472d765" translate="yes" xml:space="preserve">
          <source>The Apple watchOS operating system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75e70f8ee71a4bb69d5ca275a33b7544919c15e9" translate="yes" xml:space="preserve">
          <source>The ApplicationStates type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;ApplicationState&amp;gt;. It stores an OR combination of ApplicationState values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07745f3ec7b1167efcd1db5f73e4e48d163433ab" translate="yes" xml:space="preserve">
          <source>The AreaMonitorFeatures type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;AreaMonitorFeature&amp;gt;. It stores an OR combination of AreaMonitorFeature values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8301299f7309cb20d03c1d25e84181e39a49d678" translate="yes" xml:space="preserve">
          <source>The AreaOptions type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;AreaOption&amp;gt;. It stores an OR combination of AreaOption values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cd51672191973ffcc63fb3b3f9e836ea09fe8f6" translate="yes" xml:space="preserve">
          <source>The Armature component is aggregated by entities to give them the ability to calculate the palette of skinning transform matrices needed to properly render skinned meshes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66c51a103442180763f75b617168d5c4add8b855" translate="yes" xml:space="preserve">
          <source>The AssingmentInfo class represents a data assignment. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f8278ca7077715f70790b7831cc8fb1bbd36fe1" translate="yes" xml:space="preserve">
          <source>The AssingmentInfo class represents a data assignment. &lt;a href=&quot;qscxmlexecutablecontent-assignmentinfo#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92b7190ead532d0b01e10e97fe07310c2a264735" translate="yes" xml:space="preserve">
          <source>The Atomic API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c2635e1bfb72afbe69e00c722b45a5b29330808" translate="yes" xml:space="preserve">
          <source>The AttAccessConstraints type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;AttAccessConstraint&amp;gt;. It stores an OR combination of AttAccessConstraint values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b9f79a9a443eb9fddc1f3afad3f7d5b7554bcf4" translate="yes" xml:space="preserve">
          <source>The AutoFormatting type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;AutoFormattingFlag&amp;gt;. It stores an OR combination of AutoFormattingFlag values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c1acff68b6a4bb37e57c23cdd712d178ec9bd97" translate="yes" xml:space="preserve">
          <source>The Axis for which the accumulator should integrate axis values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="614906ddcd27f1bda097d9a4804f347b9c17e939" translate="yes" xml:space="preserve">
          <source>The AxisTypes type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;AxisType&amp;gt;. It stores an OR combination of AxisType values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b97d04d8ea9e617a8723ebd444281cb3df1b0cac" translate="yes" xml:space="preserve">
          <source>The BSP tree has an optimal size when each segment contains between 0 and 10 items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa58b491d665a1031fe9cb9d23b2a0ec69a42b66" translate="yes" xml:space="preserve">
          <source>The BT.601 color space with the value range extended to 0 to 255. It is backward compatibile with BT.601 and uses values outside BT.601 range to represent a wider range of colors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1af922258c578bbda331f3d2852dc6c5a3dd536f" translate="yes" xml:space="preserve">
          <source>The BT.709 color space with the value range extended to 0 to 255.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a8b0e6e9b3d92c0c2e65a8ee87d65214ddec6e3" translate="yes" xml:space="preserve">
          <source>The Background Component</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c4410c2a942c0eca400b04cef68c7bcfbdfd180" translate="yes" xml:space="preserve">
          <source>The Base Style Tumbler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f24f69ceac39b27e02b694755ccdf8e2ba7d8ee" translate="yes" xml:space="preserve">
          <source>The Base Style is the default style used when none is specified. It is also used as a fallback when the specified style cannot be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb77bfe9f9b82cbc7dc384e4555ad729d192f830" translate="yes" xml:space="preserve">
          <source>The Base64Options type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;Base64Option&amp;gt;. It stores an OR combination of Base64Option values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6a19df3aaab21606c9fe6ce541d362731de3880" translate="yes" xml:space="preserve">
          <source>The Basic authentication mechanism supports no outgoing options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67dd9428391242c48cf12e6618e0dcc9ca7be358" translate="yes" xml:space="preserve">
          <source>The Bearer Management API controls the system's connectivity state. This incorporates simple information such as whether the device is online and how many interfaces there are as well as enables the application developer to start, stop network interfaces and influences other connection specific details. Depending on the platform's capabilities it may even provide session management so that a network interface remains up for as long as clients have a registered interest in them while at the same time optimizes the interface's uptime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65bcc015ef944e7c29590d2ac27caf2b98da4b49" translate="yes" xml:space="preserve">
          <source>The Big5 codec provides conversion to and from the Big5 encoding. The code was originally contributed by Ming-Che Chuang &amp;lt;mingche@cobra.ee.ntu.edu.tw&amp;gt; for the Big-5+ encoding, and was included in Qt with the author's permission, and the grateful thanks of the Qt team. (Note: Ming-Che's code is QPL'd, as per an mail to qt-info@nokia.com.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b7b25677fa9e5301fecc22192e28a662ac55cda" translate="yes" xml:space="preserve">
          <source>The Big5 is currently implemented as a pure subset of the Big5-HKSCS codec, so more fine-tuning is needed to make it identical to the standard Big5 mapping as determined by Li18nux-Big5. See &lt;a href=&quot;http://www.autrijus.org/xml/&quot;&gt;http://www.autrijus.org/xml/&lt;/a&gt; for the draft Big5 (2002) standard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e50b5924d8561e104f9a8d5b8123e83478a23751" translate="yes" xml:space="preserve">
          <source>The Big5-HKSCS codec provides conversion to and from the Big5-HKSCS encoding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fef6f28d418f1d3c043e39fab55b9faebef14b46" translate="yes" xml:space="preserve">
          <source>The BindFlags type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;BindFlag&amp;gt;. It stores an OR combination of BindFlag values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bea45b56e87b4fdf059b543455d0c7d2b5884a6d" translate="yes" xml:space="preserve">
          <source>The BindMode type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;BindFlag&amp;gt;. It stores an OR combination of BindFlag values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ab483827bde84f8b32c25ea2f2073702745614a" translate="yes" xml:space="preserve">
          <source>The Binding type can prevent this warning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ed8abf839bbe71994de283383869b7334a91646" translate="yes" xml:space="preserve">
          <source>The Binding type restores any previously set direct bindings on the property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43256fad643cb3b86163f096e66956d1aa2fd617" translate="yes" xml:space="preserve">
          <source>The Blood Pressure Feature characteristic is used to describe the supported features of the Blood Pressure Sensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1d0178c5c05e481201fafb3915a3ab5f981b7d9" translate="yes" xml:space="preserve">
          <source>The Blood Pressure Measurement characteristic is a variable length structure containing a Flags field, a Blood Pressure Measurement Compound Value field, and contains additional fields such as Time Stamp, Pulse Rate and User ID as determined by the contents of the Flags field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9b65e8ec5a2cbbb7536d5137ed81a8455a9d7ff" translate="yes" xml:space="preserve">
          <source>The Bluetooth API provides connectivity between Bluetooth enabled devices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aecc822e8255b32d41bb23d6ca8fe686ba992f2" translate="yes" xml:space="preserve">
          <source>The Bluetooth adapter is powered off.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="303818e6371b3a619bf76868e3292ed2e83856b4" translate="yes" xml:space="preserve">
          <source>The Bluetooth adaptor is powered off, power it on before doing discovery.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e135e393b1a20bcee211dae2ca49beb3e1019130" translate="yes" xml:space="preserve">
          <source>The Bluetooth devices are not paired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40801f4f2cb6e9afa09e450e665de9475d72cff7" translate="yes" xml:space="preserve">
          <source>The Bluetooth devices are paired. The system will not prompt the user for authorization when the remote device initiates a connection to the local device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a14a7c6bfc1c03496537c8d89ad8c6963a2e10e3" translate="yes" xml:space="preserve">
          <source>The Bluetooth devices are paired. The system will prompt the user for authorization when the remote device initiates a connection to the local device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e88669ed12b9a8d9956c2ab18ba9527450a65872" translate="yes" xml:space="preserve">
          <source>The BlurHints type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;BlurHint&amp;gt;. It stores an OR combination of BlurHint values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b73ecea97cd054d7bc76d864c9d116175a141684" translate="yes" xml:space="preserve">
          <source>The Body Sensor Location characteristic describes the location of a sensor on the body (e.g.: chest, finger or hand).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b548fc0265047af308a2f0b20a77ea1cbab3771" translate="yes" xml:space="preserve">
          <source>The Boot Keyboard Input Report characteristic is used to transfer fixed format and length Input Report data between a HID Host operating in Boot Protocol Mode and a HID Service corresponding to a boot keyboard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9219fb5d5628530c84df0328786515230887c11b" translate="yes" xml:space="preserve">
          <source>The Boot Keyboard Output Report characteristic is used to transfer fixed format and length Output Report data between a HID Host operating in Boot Protocol Mode and a HID Service corresponding to a boot keyboard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8de0f86e09ad6c5825641099cc493a5ed9b268cd" translate="yes" xml:space="preserve">
          <source>The Boot Mouse Input Report characteristic is used to transfer fixed format and length Input Report data between a HID Host operating in Boot Protocol Mode and a HID Service corresponding to a boot mouse.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60eb44779746eb4d8b268dca2b04928207d11bc4" translate="yes" xml:space="preserve">
          <source>The Border Image example in &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-imageelements-example.html#&quot;&gt;Qt Quick Examples - Image Elements&lt;/a&gt; shows how a &lt;a href=&quot;qml-qtquick-borderimage&quot;&gt;BorderImage&lt;/a&gt; can be used to simulate a shadow effect on a rectangular item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc4719f8665c0442845ec8c35c4e2d7433e2a5da" translate="yes" xml:space="preserve">
          <source>The BoundaryReasons type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;BoundaryReason&amp;gt;. It stores an OR combination of BoundaryReason values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="299647f82b70998c5cb22070a82689b650d4fdb5" translate="yes" xml:space="preserve">
          <source>The Box Model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f7078b9865eced166a14cdec24b180c8471cca1" translate="yes" xml:space="preserve">
          <source>The Brief and Detailed Description</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5499ce78ae92ec2424c94f54e4e0e72a4590e4b9" translate="yes" xml:space="preserve">
          <source>The BufferTypeFlags type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;BufferType&amp;gt;. It stores an OR combination of BufferType values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd0bc6e3ab4b4ce43d818c55910dd16822799863" translate="yes" xml:space="preserve">
          <source>The Bundle Programming Guide contains information about bundles and the localized resource folder.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c9e1ce762fb4314f611401e2f72c03fcafc7c64" translate="yes" xml:space="preserve">
          <source>The Buses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2a21ff3b31a338d9ba8742dcbcaed987a4267a6" translate="yes" xml:space="preserve">
          <source>The ButtonFeatures type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;ButtonFeature&amp;gt;. It stores an OR combination of ButtonFeature values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0924c8be0f5c6837957eebdd5aa3165c7606fd45" translate="yes" xml:space="preserve">
          <source>The Buttons that can trigger this Action</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63db2120a6894294f1bf42086dcf9eced0777571" translate="yes" xml:space="preserve">
          <source>The Buttons that can trigger this Action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f32162b97c29f730c7987c926dd7e728a9ae0ce5" translate="yes" xml:space="preserve">
          <source>The C++ &lt;a href=&quot;qwebchannel&quot;&gt;QWebChannel&lt;/a&gt; API makes it possible to talk to any HTML client, which could run on a local or even remote machine. The only limitation is that the HTML client supports the JavaScript features used by &lt;code&gt;qwebchannel.js&lt;/code&gt;. As such, one can interact with basically any modern HTML browser or standalone JavaScript runtime, such as node.js.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fd974ad5bf2b3e9e631c911617522059747e01b" translate="yes" xml:space="preserve">
          <source>The C++ brief should start with:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c149af0c1f5e7df91abb88c59348619c240eed1" translate="yes" xml:space="preserve">
          <source>The C++ data model for SCXML lets you write C++ code for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4eec45f115ae49378b91d4505831f8d6a3b7415" translate="yes" xml:space="preserve">
          <source>The C++ heap will contain:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47c876b270cd8a7ef4d6e81a371aa7023a0024c0" translate="yes" xml:space="preserve">
          <source>The C++ language doesn't support variable-length arrays on the stack. For example, the following code won't compile:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15558bcc1607154944d6dc4fa877f3a3e97a316f" translate="yes" xml:space="preserve">
          <source>The C++ source file generated by &lt;code&gt;moc&lt;/code&gt; must be compiled and linked with the implementation of the class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce0d3774959f8a5a6f984b10377ea45f40356b69" translate="yes" xml:space="preserve">
          <source>The C++ specific configuration variables are provided to avoid erroneous documentation due to non-standard C++ constructs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b46d1b7355078508149612e0339d77d98f1cbbd1" translate="yes" xml:space="preserve">
          <source>The CA certificate database can be extended and customized with &lt;a href=&quot;qsslsocket#addCaCertificate&quot;&gt;addCaCertificate&lt;/a&gt;(), &lt;a href=&quot;qsslsocket#addCaCertificates&quot;&gt;addCaCertificates&lt;/a&gt;(), &lt;a href=&quot;qsslsocket#addDefaultCaCertificate&quot;&gt;addDefaultCaCertificate&lt;/a&gt;(), &lt;a href=&quot;qsslsocket#addDefaultCaCertificates&quot;&gt;addDefaultCaCertificates&lt;/a&gt;(), and &lt;a href=&quot;qsslconfiguration#defaultConfiguration&quot;&gt;QSslConfiguration::defaultConfiguration&lt;/a&gt;().setCaCertificates().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b98df339ac9cf3fb062556476f4217f4f549b0f" translate="yes" xml:space="preserve">
          <source>The CA certificate database is used by the socket during the handshake phase to validate the peer's certificate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3f1fe3fb448a012216e48cb09f4fecdaaf4f7a2" translate="yes" xml:space="preserve">
          <source>The CABARC tool from Microsoft can easily generate CAB archives:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="744b29a298b58916dce5363965123a2a486dc6e1" translate="yes" xml:space="preserve">
          <source>The CAN Bus API provides some common API to access the CAN devices:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b2af0ece7fee124801c01a51bbc8f0914faac2f" translate="yes" xml:space="preserve">
          <source>The CAN bus frame can have a base or an extended frame format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="324d62c0dc993224b1770195ddc10b2bbec45673" translate="yes" xml:space="preserve">
          <source>The CAN bus frame must use the base frame format (11 bit identifier).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32e721a810554d30a11a06690fb5e6d046846b6a" translate="yes" xml:space="preserve">
          <source>The CAN bus frame must use the extended frame format (29 bit identifier).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce70bfb0c019ad7de51adf30612345706f46c165" translate="yes" xml:space="preserve">
          <source>The CAN bus is offline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d0d5d350edfc72674bf1a1ee5ea154b53907c59" translate="yes" xml:space="preserve">
          <source>The CBOR URL type is an extended type represented by a string tagged as an &lt;a href=&quot;qtcborcommon#QCborKnownTags-enum&quot;&gt;Url&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6488a7e82a84a6840a7ae5b1c88c7441c6bf5deb" translate="yes" xml:space="preserve">
          <source>The CBOR UUID type is an extended type represented by a byte array tagged as an &lt;a href=&quot;qtcborcommon#QCborKnownTags-enum&quot;&gt;Uuid&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="462026873f321af49b8869d554692d7d3a663254" translate="yes" xml:space="preserve">
          <source>The CBOR built-in types are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e1f9844e5024bb010fa24ba2927e2e54870d583" translate="yes" xml:space="preserve">
          <source>The CBOR date/time types are extension types using tags: either a string (in ISO date format) tagged as a &lt;a href=&quot;qtcborcommon#QCborKnownTags-enum&quot;&gt;DateTime&lt;/a&gt; or a number (of seconds since the start of 1970, UTC) tagged as a &lt;a href=&quot;qtcborcommon#QCborKnownTags-enum&quot;&gt;UnixTime_t&lt;/a&gt;. When parsing CBOR streams, &lt;a href=&quot;qcborvalue&quot;&gt;QCborValue&lt;/a&gt; will convert &lt;a href=&quot;qtcborcommon#QCborKnownTags-enum&quot;&gt;UnixTime_t&lt;/a&gt; to the string-based type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a19aecc6c333c7b016807c7f97ff26a61011550" translate="yes" xml:space="preserve">
          <source>The CBOR regular expression type is an extended type represented by a string tagged as an &lt;a href=&quot;qtcborcommon#QCborKnownTags-enum&quot;&gt;RegularExpression&lt;/a&gt;. Note that CBOR regular expressions only store the patterns, so any flags that the &lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; object may carry will be lost.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6a8402471bfb2a2163f1ec344f2435859e72344" translate="yes" xml:space="preserve">
          <source>The CBOR stream appears to be encoding a number larger than 64-bit (data is corrupt and the error is not recoverable).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfe52691ceb585b03b962edccaf5625138ae6155" translate="yes" xml:space="preserve">
          <source>The CBOR stream contains a Break where it is not allowed (data is corrupt and the error is not recoverable).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb50b8bdd18f8c0fdd3d91ebe4b6841020942894" translate="yes" xml:space="preserve">
          <source>The CBOR stream contains a Simple Type encoded incorrectly (data is corrupt and the error is not recoverable).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37c62157d4c8247c60e19bd446cace6251967e90" translate="yes" xml:space="preserve">
          <source>The CBOR stream contains a known type in a position it is not allowed to exist (data is corrupt and the error is not recoverable).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5310caceb17ace7899fec5c63d991401fdba4395" translate="yes" xml:space="preserve">
          <source>The CBOR stream contains a known type that the implementation does not support (internal limitation, but the error is not recoverable).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f078c5c6e246ff0eb6df2eb6b16cb6f18e7b5bd" translate="yes" xml:space="preserve">
          <source>The CBOR stream contains a text string that does not decode properly as UTF-8 (data is corrupt and the error is not recoverable).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13664f676d1254e61c4afbd3b0b8806b289ba689" translate="yes" xml:space="preserve">
          <source>The CBOR stream contains an unknown/unparseable Type (data is corrupt and the and the error is not recoverable).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c64c8379cbb44dba7cb02f6ac87dc61e7fb19a6d" translate="yes" xml:space="preserve">
          <source>The CD icon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3489ac3ec567cd0d634682398405c6223d1aea9" translate="yes" xml:space="preserve">
          <source>The CGImageRef color space is set to the sRGB color space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b6394f85fa2ab487695d67d8c98d70797c11ba3" translate="yes" xml:space="preserve">
          <source>The CMAKE_AUTOMOC setting runs moc automatically when required. For more on this feature see the CMake AUTOMOC documentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81eb74a3c050158d9df29edb817a3a9a23c6ac9a" translate="yes" xml:space="preserve">
          <source>The CMYK Color Model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c3c5d6b751a2f5039bcfeec13f60fd87270f526" translate="yes" xml:space="preserve">
          <source>The CONFIG member supports the following options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6efcad6c0ddab7d85807cf260520da6d165d2bc2" translate="yes" xml:space="preserve">
          <source>The CONSTANT attribute should only be used for properties whose value is set, and finalized, only in the class constructor. All other properties that want to be used in bindings should have a NOTIFY signal instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="896b2f7e1d58ff4691c9ec2b550f468ff3ae2f83" translate="yes" xml:space="preserve">
          <source>The CP Feature characteristic is used to report a list of features supported by the device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fccfbf90496ad2aa621c76693857fcb2236d76cb" translate="yes" xml:space="preserve">
          <source>The CSC (Cycling Speed and Cadence) Feature characteristic is used to describe the supported features of the Server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="215d384f51accae913a308e77bf9a5b51bb7687a" translate="yes" xml:space="preserve">
          <source>The CSC Measurement characteristic (CSC refers to Cycling Speed and Cadence) is a variable length structure containing a Flags field and, based on the contents of the Flags field, may contain one or more additional fields as shown in the tables below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cbbb4752ac8d1ce819cde208b34a8c72a8f5e72" translate="yes" xml:space="preserve">
          <source>The CacheMode type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;CacheModeFlag&amp;gt;. It stores an OR combination of CacheModeFlag values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adae9b0a70523a5cc23719db76673bfae694aaf8" translate="yes" xml:space="preserve">
          <source>The Calendar Widget example displays some additional widgets, here run on Windows 10 and &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9744223945b6050950628185af5fd59f9b82a4d4" translate="yes" xml:space="preserve">
          <source>The Calendar Widget example shows use of QCalendarWidget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89f1ac1147522051a1680f5687bf2bb807b1a0ac" translate="yes" xml:space="preserve">
          <source>The Calendar singleton provides miscellaneous calendar related utilities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="196d9e84ef5a49b2a88b84bdc37b45281bd524cf" translate="yes" xml:space="preserve">
          <source>The Calendar this style is attached to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e40340aec291b83a8ddc359a9d692b3a40adb6e7" translate="yes" xml:space="preserve">
          <source>The Camera service should save all the capture parameters like exposure settings or image processing parameters, so changes to camera parameters after capture() is called do not affect previous capture requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c1dce8a3be66f6e7c4e3fcf694beacb442d6818" translate="yes" xml:space="preserve">
          <source>The Canvas item allows drawing of straight and curved lines, simple and complex shapes, graphs, and referenced graphic images. It can also add text, colors, shadows, gradients, and patterns, and do low level pixel operations. The Canvas output may be saved as an image file or serialized to a URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b1327b527116b316e59f7a46149b1b32b3e383e" translate="yes" xml:space="preserve">
          <source>The Canvas item supports two render targets: &lt;code&gt;Canvas.Image&lt;/code&gt; and &lt;code&gt;Canvas.FramebufferObject&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d478f45c4c9952113f67c67ae8fe867049991a90" translate="yes" xml:space="preserve">
          <source>The Canvas.FramebufferObject render target utilizes OpenGL hardware acceleration rather than rendering into system memory, which in many cases results in faster rendering. Canvas.FramebufferObject relies on the OpenGL extensions &lt;code&gt;GL_EXT_framebuffer_multisample&lt;/code&gt; and &lt;code&gt;GL_EXT_framebuffer_blit&lt;/code&gt; for antialiasing. It will also use more graphics memory when rendering strategy is anything other than Canvas.Cooperative. Framebuffer objects may not be available with Qt Quick backends other than OpenGL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb3adc82442e8d419922fc3979d38c4fb842ccfa" translate="yes" xml:space="preserve">
          <source>The Capabilities type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;Capability&amp;gt;. It stores an OR combination of Capability values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfbed84a4e54d4ab9b9d8ccade1996fb9de7c44f" translate="yes" xml:space="preserve">
          <source>The Capabilities type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;CapabilityFlag&amp;gt;. It stores an OR combination of CapabilityFlag values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6a112c4c863f228c435ee4cf5bb1db331454d7a" translate="yes" xml:space="preserve">
          <source>The CapabilityFlags type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;CapabilityFlag&amp;gt;. It stores an OR combination of CapabilityFlag values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5730adbce7e6ddbaf1f61b08b403791094513db" translate="yes" xml:space="preserve">
          <source>The CaptureDestinations type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;CaptureDestination&amp;gt;. It stores an OR combination of CaptureDestination values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="978aee2a18f5215bf29b887fb6465e6a6023c0c0" translate="yes" xml:space="preserve">
          <source>The CaptureModes type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;CaptureMode&amp;gt;. It stores an OR combination of CaptureMode values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b7176928efa5cd3444c0fa2c54fb38b591399ad" translate="yes" xml:space="preserve">
          <source>The CaretMode enum defines the different meanings of the caret (&lt;b&gt;^&lt;/b&gt;) in a regular expression. The possible values are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c9648f0bc79d3ca4ae57879b6590170e33d3ad2" translate="yes" xml:space="preserve">
          <source>The Category type represents a category that a &lt;a href=&quot;qml-qtlocation-place&quot;&gt;Place&lt;/a&gt; can be associated with. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3551dca0a51fa9df5bc9709cb2b59946e7c643d7" translate="yes" xml:space="preserve">
          <source>The ChangeFlags type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;ChangeFlag&amp;gt;. It stores an OR combination of ChangeFlag values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdc74eecf59701413f535828d5997456ed72df21" translate="yes" xml:space="preserve">
          <source>The CheckIndexOptions type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;CheckIndexOption&amp;gt;. It stores an OR combination of CheckIndexOption values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7fcfd2958250b98f4ecd6b415a197171b900ff8" translate="yes" xml:space="preserve">
          <source>The Chromium DevTools page can also be shown within the application. To set this up, you can call either &lt;a href=&quot;qwebenginepage#setInspectedPage&quot;&gt;QWebEnginePage::setInspectedPage&lt;/a&gt;() to the page to be inspected, which implicitly loads the DevTools into the &lt;code&gt;this&lt;/code&gt; page, or &lt;a href=&quot;qwebenginepage#setDevToolsPage&quot;&gt;QWebEnginePage::setDevToolsPage&lt;/a&gt;() to let the &lt;code&gt;this&lt;/code&gt; page be inspected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bf088e6479a82b3cde6850649c0027600378136" translate="yes" xml:space="preserve">
          <source>The Chromium DevTools provide the ability to inspect and debug layout and performance issues of any web content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="409dcd5feafa0a8942294a6ce29ecd33b4a275b6" translate="yes" xml:space="preserve">
          <source>The Chromium part of the code uses several private API methods, which are prohibited by the App Store.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e2b7250998c6a3ae65fe59a51c79ac35b1c0ffd" translate="yes" xml:space="preserve">
          <source>The ClearMode type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;ClearModeBit&amp;gt;. It stores an OR combination of ClearModeBit values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15653a65ecf47d9004dddc83e0a756ead3bf748d" translate="yes" xml:space="preserve">
          <source>The Clipboard</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="407cb4e6f4a350edba56b15c6f8ca5a19f47034a" translate="yes" xml:space="preserve">
          <source>The ColorDialogOptions type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;ColorDialogOption&amp;gt;. It stores an OR combination of ColorDialogOption values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90141c7d7b5c0cdb42e6b8d8f02c1db9d14660ee" translate="yes" xml:space="preserve">
          <source>The ColorRole enum defines the different symbolic color roles used in current GUIs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70d7210cf0f11246b6b047432ae6012e37d3c43b" translate="yes" xml:space="preserve">
          <source>The Column automatically positions these items in a vertical formation, like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a217686a99317c2a47feadc56e0efc85580d4f9d" translate="yes" xml:space="preserve">
          <source>The Command pattern is based on the idea that all editing in an application is done by creating instances of command objects. Command objects apply changes to the document and are stored on a command stack. Furthermore, each command knows how to undo its changes to bring the document back to its previous state. As long as the application only uses command objects to change the state of the document, it is possible to undo a sequence of commands by traversing the stack downwards and calling undo on each command in turn. It is also possible to redo a sequence of commands by traversing the stack upwards and calling redo on each command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8648a0e86f5f98aa3cb8c9f0f6f376ae203dc79f" translate="yes" xml:space="preserve">
          <source>The Common Use Cases section below demonstrates concrete examples of how these concepts fit together.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c6062faccc73d56f10fb5ff8b020e57044ec2e2" translate="yes" xml:space="preserve">
          <source>The Compass element reports on heading using magnetic north as a reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b081587e714fa924e83ab0b0945b5c30cff21ae4" translate="yes" xml:space="preserve">
          <source>The Compass element reports on heading using magnetic north as a reference. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7564f834d8db1aa1e646db4a3fa908376e7f570" translate="yes" xml:space="preserve">
          <source>The Completion Model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a942e1a0e24415640ea1cf2dadd9aa6b36d00564" translate="yes" xml:space="preserve">
          <source>The ComponentFormattingOptions type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;ComponentFormattingOption&amp;gt;. It stores an OR combination of ComponentFormattingOption values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15ceac6c4917c6f3b250ee51202bf9d01326b382" translate="yes" xml:space="preserve">
          <source>The Concept of Layouts in Qt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1edec2db696d4c3956a640be7526e1206dc9f75" translate="yes" xml:space="preserve">
          <source>The Connection handle will be invalid if it cannot create the connection, for example, the parameters were invalid. You can check if the &lt;a href=&quot;qmetaobject-connection&quot;&gt;QMetaObject::Connection&lt;/a&gt; is valid by casting it to a bool.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbf00bc30199fbccb9c415cd48ed01ce3f2d1a01" translate="yes" xml:space="preserve">
          <source>The ConnectionCapabilities type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;ConnectionCapability&amp;gt;. It stores an OR combination of ConnectionCapability values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcd1de9c3fb050f442dc98016ec583820953ec1b" translate="yes" xml:space="preserve">
          <source>The Container Classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="033f232abe55e65f64b2e2533aca8de36ad2e02a" translate="yes" xml:space="preserve">
          <source>The Context Hierarchy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fab5315881354543b1dcd7fc7353369ed5a1c296" translate="yes" xml:space="preserve">
          <source>The Context help button on title bars.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f48f59fa9a79deb105c744c7ad87a08ecaaae23" translate="yes" xml:space="preserve">
          <source>The Control Cannot be Instantiated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54de80fe1a4845dc8910813ce7b3fe1ebabbbfad" translate="yes" xml:space="preserve">
          <source>The ControlTypes type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;ControlType&amp;gt;. It stores an OR combination of ControlType values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bcc5fe2c3bd94ba22c009dbc6c40a1284eb81e2" translate="yes" xml:space="preserve">
          <source>The ConversionFlags type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;ConversionFlag&amp;gt;. It stores an OR combination of ConversionFlag values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93dcadb1f712de740831a6bdd55a4e6e08d16683" translate="yes" xml:space="preserve">
          <source>The ConversionMode type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;ConversionModeFlag&amp;gt;. It stores an OR combination of ConversionModeFlag values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="874b635506e5668711b0ab487e2c16131696902c" translate="yes" xml:space="preserve">
          <source>The Core profile does not include any of the functions that were removed in OpenGL 3.1. The Compatibility profile contains all functions in the Core profile of the same version plus all of the functions that were removed in OpenGL 3.1. In this way the Compatibility profile classes allow use of newer OpenGL functionality but also allows you to keep using your legacy OpenGL code. For new OpenGL code the Core profile should be preferred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="113f45142d41eeec0ed4dfe947ada57f4dbe767d" translate="yes" xml:space="preserve">
          <source>The CoreConfigurations type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;CoreConfiguration&amp;gt;. It stores an OR combination of CoreConfiguration values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fddf07db4a246d3587c12dac6952c564975ff38" translate="yes" xml:space="preserve">
          <source>The CornerWidgets type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;CornerWidget&amp;gt;. It stores an OR combination of CornerWidget values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d94c68b765e1b8ddb62d7cc1bd8d7f0b8f6836de" translate="yes" xml:space="preserve">
          <source>The CreateTextureOption enums are used to customize a texture is wrapped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1be2a5e4a7bebc9f1f7b311211408051c53ff0e9" translate="yes" xml:space="preserve">
          <source>The CreateTextureOption enums are used to customize how a texture is wrapped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d33aa20501655e0ac65dff70209911148bfbfdc7" translate="yes" xml:space="preserve">
          <source>The CreateTextureOptions type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;CreateTextureOption&amp;gt;. It stores an OR combination of CreateTextureOption values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c290d0c9e65123b062d3d02fc8f4e6f29a06fd5b" translate="yes" xml:space="preserve">
          <source>The Ctrl keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a2e3b40244f810f86454e5f4e90fd4f0639ec1a" translate="yes" xml:space="preserve">
          <source>The Current Directory and Other Special Paths</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6608636d55df5f6dd0147023e63899ebb170d111" translate="yes" xml:space="preserve">
          <source>The Current Time characteristic shows the same information as the ExactTime256 characteristic and information on timezone, DST and the method of update employed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a1775614bf82970020f70df9d426fbc49688191" translate="yes" xml:space="preserve">
          <source>The Cycling Power Control Point characteristic is used to request a specific function to be executed on the receiving device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e292845ac1eeeb3a02a627a98f75a58b54733f3" translate="yes" xml:space="preserve">
          <source>The Cycling Power Measurement characteristic is a variable length structure containing a Flags field, an Instantaneous Power field and, based on the contents of the Flags field, may contain one or more additional fields as shown in the table below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a1013a2b9268c6db168850b75049f67848b7774" translate="yes" xml:space="preserve">
          <source>The Cycling Power Vector characteristic is a variable length structure containing a Flags fieldand based on the contents of the Flags field, may contain one or more additional fields as shown in the table below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79d3501a09065f525f12758e7c7a175b2cc6c860" translate="yes" xml:space="preserve">
          <source>The D-Bus bus server daemon provides one special interface &lt;code&gt;org.freedesktop.DBus&lt;/code&gt; that allows clients to access certain properties of the bus, such as the current list of clients connected. The &lt;a href=&quot;qdbusconnectioninterface&quot;&gt;QDBusConnectionInterface&lt;/a&gt; class provides access to that interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="497b4cf3554ca78690f0c18204d642a932dea4ee" translate="yes" xml:space="preserve">
          <source>The D3D12 adaptation can keep multiple frames in flight, similar to modern game engines. This is somewhat different from the traditional &quot;render - swap - wait for vsync&quot; model and allows for better GPU utilization at the expense of higher resource use. This means that the renderer will be a number of frames ahead of what is displayed on the screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9d0611b688e1b2e612a93cc3e6475d9c79d55b2" translate="yes" xml:space="preserve">
          <source>The D3D12 backend also introduces support for pre-compiled shaders. All the backend's own shaders (used by the built-in materials on which the Rectangle, Image, Text, and other QML types are built with) are compiled to D3D shader bytecode when you compile Qt. Applications using &lt;a href=&quot;qml-qtquick-shadereffect&quot;&gt;ShaderEffect&lt;/a&gt; items can choose to ship bytecode either in regular files, via the Qt resource system, or use High Level Shading Language for DirectX (HLSL) source strings. Unlike OpenGL, the compilation for HLSL is properly threaded, meaning shader compilation won't block the application and its user interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36726a901a4b898334745e6a303645dd648bcce9" translate="yes" xml:space="preserve">
          <source>The DB2 header and include files should already be installed in the right directories. You just have to build the plugin as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="202b09e00a2fac2be6c41307f690bda3e4d589e3" translate="yes" xml:space="preserve">
          <source>The DBus bus allows calling a method on a given remote object without specifying the destination interface, if the method name is unique. However, if two interfaces on the remote object export the same method name, the result is undefined (one of the two may be called or an error may be returned).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38216f1cc33e2cc80d2022252de9b4d530a704ee" translate="yes" xml:space="preserve">
          <source>The DECLARE_READING macro adds some required methods to a reading class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fecbcc278746773749948f1840ab18fb70630f3d" translate="yes" xml:space="preserve">
          <source>The DER format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ba825082402ae611d5deb8bd931a6728d19c0e9" translate="yes" xml:space="preserve">
          <source>The DOM specification disallow inserting attribute nodes, but due to historical reasons QDom accept them nevertheless.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45020dbacd1ea553b58b371549c1fbe223d8704e" translate="yes" xml:space="preserve">
          <source>The DOM specification disallow inserting attribute nodes, but for historical reasons, QDom accepts them anyway.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a33d72ef8405221134e6c9c9b62b3d4e9a84467f" translate="yes" xml:space="preserve">
          <source>The DSA algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="465279f79c9d4069e2aaa8316adb2b621a9ee6de" translate="yes" xml:space="preserve">
          <source>The DST Offset characteristic describes the offset employed by daylight-saving time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e881d202421d90994a469adfc254c9ee3eee5168" translate="yes" xml:space="preserve">
          <source>The DVD icon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4685da1c5530ffac60627d210eb3abf953178026" translate="yes" xml:space="preserve">
          <source>The DataPattern enum is used to specify the use pattern for the vertex and index data in a geometry object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="472ce62c9260a78248e0daae598aad192985be31" translate="yes" xml:space="preserve">
          <source>The DataSizeFormats type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;DataSizeFormat&amp;gt;. It stores an OR combination of DataSizeFormat values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1c3f2db378d33fe856d08a4182a3747d9eafa40" translate="yes" xml:space="preserve">
          <source>The Date Time characteristic is used to represent time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acdd9f7689066801a472f39a229a5de50c997cb3" translate="yes" xml:space="preserve">
          <source>The Day Date Time characteristic presents the date, time and day of the week.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64e841093bc82bf2d6e38527a25c2d97bb80f7cd" translate="yes" xml:space="preserve">
          <source>The Day of Week characteristic describes the day of the week (Monday - Sunday).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06d6baad1c8f86a461b625ee5bac565831d52a46" translate="yes" xml:space="preserve">
          <source>The Declarative State Machine Framework</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7becd9326ac017ce477c773768edd91b6acfbfce" translate="yes" xml:space="preserve">
          <source>The Declarative State Machine Framework provides types for creating and executing state graphs in QML. It is similar to the C++ State Machine framework based on Harel's &lt;a href=&quot;http://www.wisdom.weizmann.ac.il/~dharel/SCANNED.PAPERS/Statecharts.pdf&quot;&gt;Statecharts: A visual formalism for complex systems&lt;/a&gt;, which is also the basis for UML state diagrams. Like its &lt;a href=&quot;statemachine-api&quot;&gt;C++ counterpart&lt;/a&gt;, the framework provides an API and execution model based on &lt;a href=&quot;http://www.w3.org/TR/scxml/&quot;&gt;State Chart XML (SCXML)&lt;/a&gt; to embed the elements and semantics of statecharts in QML applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="231a4b400fc7ef191b98365258c4444996b4e69a" translate="yes" xml:space="preserve">
          <source>The Default State</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b6342265bf40cddca42a841f2c1b3e43ea601cd" translate="yes" xml:space="preserve">
          <source>The Default style is a basic all-round style.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3906188b019e7e7019f0c29a4c2173e5deb9fbb" translate="yes" xml:space="preserve">
          <source>The Default style is a simple and light-weight style that offers the maximum performance for Qt Quick Controls 2. It is built with a minimal amount of Qt Quick primitives, and keeps animations and transitions to the minimum.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb50737240f17f4339050d07cbf4f5a84a08c1c2" translate="yes" xml:space="preserve">
          <source>The DeliveryFlags type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;DeliveryFlag&amp;gt;. It stores an OR combination of DeliveryFlag values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1a18ffaadd57c418e3198deede96c069aa5cd41" translate="yes" xml:space="preserve">
          <source>The Developer subscription offers a free-of-charge option for developing and testing your applications. With this, your applications can go to production under the following conditions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac1b3c691705cf58d445f6d7043bd94dc6a160e7" translate="yes" xml:space="preserve">
          <source>The Device Identification interface is modeled as an address space composed of a set of addressable data elements. The data elements are called objects and an &lt;a href=&quot;qmodbusdeviceidentification#ObjectId-enum&quot;&gt;ObjectId&lt;/a&gt; identifies them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="327985609b53fca64660ae968fb2c3e49f2a7291" translate="yes" xml:space="preserve">
          <source>The Device Name characteristic contains the name of the device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a98b6fa91fbe8dc69d66c005a6344c727cf55040" translate="yes" xml:space="preserve">
          <source>The DiagnosticNotationOptions type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;DiagnosticNotationOption&amp;gt;. It stores an OR combination of DiagnosticNotationOption values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57e648765d241ba0ce45c36d61421affed26368e" translate="yes" xml:space="preserve">
          <source>The Dial is similar to a traditional dial knob that is found on devices such as stereos or industrial equipment. It allows the user to specify a value within a range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d73e3eb0d9f2c596fc4caf06c02858324b05ab20" translate="yes" xml:space="preserve">
          <source>The Dialog type provides common QML API for native platform dialogs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef9d78083863d6f88362b0b497540d770e0238a0" translate="yes" xml:space="preserve">
          <source>The Diffie-Hellman algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91a0033bac13708ed56a96b5e7255af4db47f16c" translate="yes" xml:space="preserve">
          <source>The Diffie-Hellman parameters are unsafe and should not be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11885f9136ea51af80cdb7ebd6108360904427d4" translate="yes" xml:space="preserve">
          <source>The Diffie-Hellman parameters will be represented in Base64-encoded DER form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b7f68a48de4bdd2e8188db60f0acb87a119b154" translate="yes" xml:space="preserve">
          <source>The Digest-MD5 authentication mechanism supports no outgoing options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="061114a9810d17f028605e052c7387ce687f5c75" translate="yes" xml:space="preserve">
          <source>The Direct 3D 12 backend is not currently supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72ee344b2899af03db08b19dab4b5ec824135e80" translate="yes" xml:space="preserve">
          <source>The Direct Approach</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="576c451de61bf00685659874df331b2c360787e5" translate="yes" xml:space="preserve">
          <source>The Direct3D 12 adaptation for Windows 10, both in Win32 (&lt;code&gt;windows&lt;/code&gt; platform plugin) and in UWP (&lt;code&gt;winrt&lt;/code&gt; platform plugin), is shipped as a dynamically loaded plugin. This adaptation doesn't work on earlier Windows versions. Building this plugin is enabled automatically, whenever the necessary D3D and DXGI develpoment files are present. In practice, this currently means Visual Studio 2015 and newer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e24199896d5a837148f71fe60effe58387f5534f" translate="yes" xml:space="preserve">
          <source>The Direct3D 12 adaptation ignores the &lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt; set on the &lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; or &lt;a href=&quot;qquickview&quot;&gt;QQuickView&lt;/a&gt;, or set via &lt;a href=&quot;qsurfaceformat#setDefaultFormat&quot;&gt;QSurfaceFormat::setDefaultFormat&lt;/a&gt;(), with two exceptions: &lt;a href=&quot;qsurfaceformat#samples&quot;&gt;QSurfaceFormat::samples&lt;/a&gt;() and &lt;a href=&quot;qsurfaceformat#alphaBufferSize&quot;&gt;QSurfaceFormat::alphaBufferSize&lt;/a&gt;() are still taken into account. When the sample value is greater than 1, multisample offscreen render targets will be created with the specified sample count at the maximum supported quality level. The backend automatically performs resolving into the non-multisample swapchain buffers after each frame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ed4eb4265798c28e8ac25d2b64ba0654afc6294" translate="yes" xml:space="preserve">
          <source>The Direct3D 12 adaptation is an alternative renderer for &lt;a href=&quot;qtquick-index#&quot;&gt;Qt Quick&lt;/a&gt; 2 when running on Windows 10, both for Win32 and UWP applications. For more details, see &lt;a href=&quot;qtquick-visualcanvas-adaptations-d3d12#&quot;&gt;Direct3D 12 Adaptation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab79dbde423758abf909a4adb4a2cfe916ed46d4" translate="yes" xml:space="preserve">
          <source>The Directions type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;Direction&amp;gt;. It stores an OR combination of Direction values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="894502e67811a8aca86bc011218093c792847aef" translate="yes" xml:space="preserve">
          <source>The DirtyFlags type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;DirtyFlag&amp;gt;. It stores an OR combination of DirtyFlag values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a24c5042ca6a04942df0d2f7e0168ed0fa4982f1" translate="yes" xml:space="preserve">
          <source>The DirtyState type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;DirtyStateBit&amp;gt;. It stores an OR combination of DirtyStateBit values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc2d66c90247fb2a57ef334cfebf3a08846c77c5" translate="yes" xml:space="preserve">
          <source>The DirtyStates type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;DirtyState&amp;gt;. It stores an OR combination of DirtyState values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5f02edee8ab0a48f375bba4ebc1e382884eeb8f" translate="yes" xml:space="preserve">
          <source>The Disabled group is used for widgets (not windows) that are disabled for some reason.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77a2e1e4ab8dbb75027ab21cd32f2124a274c1b1" translate="yes" xml:space="preserve">
          <source>The DiscoveryMethods type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;DiscoveryMethod&amp;gt;. It stores an OR combination of DiscoveryMethod values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f438556bda382c05bd95e9093afe57f5a58cff0c" translate="yes" xml:space="preserve">
          <source>The DockOptions type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;DockOption&amp;gt;. It stores an OR combination of DockOption values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fad101bc348158c88a868fb15103657cd81474a5" translate="yes" xml:space="preserve">
          <source>The DockWidgetAreas type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;DockWidgetArea&amp;gt;. It stores an OR combination of DockWidgetArea values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5d369669f1ae4f39492989906811cafdb462f09" translate="yes" xml:space="preserve">
          <source>The DockWidgetFeatures type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;DockWidgetFeature&amp;gt;. It stores an OR combination of DockWidgetFeature values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d551cafb2276718447f5c8426351e6859c6456e4" translate="yes" xml:space="preserve">
          <source>The DrawFlags type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;DrawFlag&amp;gt;. It stores an OR combination of DrawFlag values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e51e8f06bc8c6f005f03c7d4ad4e8e6c76bf355a" translate="yes" xml:space="preserve">
          <source>The DropActions type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;DropAction&amp;gt;. It stores an OR combination of DropAction values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40e3cf827a2ddbc974eb99c23b8052f7c5910a0b" translate="yes" xml:space="preserve">
          <source>The ENUM type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e01f593262845a8ca199529ccb0f185880bdacac" translate="yes" xml:space="preserve">
          <source>The EUC-JP codec provides conversion to and from EUC-JP, the main legacy encoding for Unix machines in Japan.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="277a7e88f1bcdceff9bca4f951b6e23dbc562015" translate="yes" xml:space="preserve">
          <source>The EUC-KR codec provides conversion to and from EUC-KR, KR, the main legacy encoding for Unix machines in Korea.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28f348dc9ec74bda8a0b7e8366b5c8076a101310" translate="yes" xml:space="preserve">
          <source>The EchoClient example implements a WebSocket client that sends a message to a WebSocket server and dumps the answer that it gets back. This example should ideally be used with the EchoServer example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23fc5da335fab065ef02b7bd6a8a424fd736512a" translate="yes" xml:space="preserve">
          <source>The Edges type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;Edge&amp;gt;. It stores an OR combination of Edge values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf477bbfbda52c0d96a1cd9bc4358e94e298fd3e" translate="yes" xml:space="preserve">
          <source>The EditFlags type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;EditFlag&amp;gt;. It stores an OR combination of EditFlag values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f897f1b60e632f6f59452684ba1a23e4b3b7531b" translate="yes" xml:space="preserve">
          <source>The EditTriggers type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;EditTrigger&amp;gt;. It stores an OR combination of EditTrigger values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d307d1789f120925dc537c9e4cac7fa6dfc7490d" translate="yes" xml:space="preserve">
          <source>The Effect type combines a set of techniques and parameters used by those techniques to produce a rendering effect for a material.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25862e1bbce87f79fa9840550fe0794df630b950" translate="yes" xml:space="preserve">
          <source>The Elevation characteristic states the elevation above/below sea level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cb82c4c2a3f8e3fc5923ca884045b4b0e9f481c" translate="yes" xml:space="preserve">
          <source>The Elliptic Curve algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b27f8a32005c03b985eca5049e803d4c28ba51a" translate="yes" xml:space="preserve">
          <source>The EncodingOptions type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;EncodingOption&amp;gt;. It stores an OR combination of EncodingOption values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31ca268bbe4641b44952aa63360ba515f4dbcc39" translate="yes" xml:space="preserve">
          <source>The Enter key type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9102142659503aa6c2fb5d26e6da26d8fae2f2ab" translate="yes" xml:space="preserve">
          <source>The Error enum describes the reason for a grab failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e495fcf2a2c5bdfcdb45df7a6b02708269a57f96" translate="yes" xml:space="preserve">
          <source>The Error enumeration represents the errors which can occur.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e0f649b6ece46b33c07b7e6614fde0e942ce362" translate="yes" xml:space="preserve">
          <source>The Esri geoservices plugin can be loaded by using the plugin key &quot;esri&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f765679e2647b53b0f6f21baef37d934d055c11" translate="yes" xml:space="preserve">
          <source>The Event Loop and Event Handling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e98c415c18a2fb6e8f00b104026cb5f75a4c4184" translate="yes" xml:space="preserve">
          <source>The Event System</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfb665c1be052f3d1d4fee7a79b7aaa267aaf0b9" translate="yes" xml:space="preserve">
          <source>The Exact Time 256 characteristic describes the data, day and time with an accuracy of 1/256th of a second.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b37c2748185f5ddddc4a0052aeed0d8af64601a1" translate="yes" xml:space="preserve">
          <source>The Extensions type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;Extension&amp;gt;. It stores an OR combination of Extension values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59c57513f3f75027c61c2f4e3b346f3cada8ef3c" translate="yes" xml:space="preserve">
          <source>The F Number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a94ab32a6978aaf07b3a51f8b216dfd1ad470aa" translate="yes" xml:space="preserve">
          <source>The FBO will be automatically unbound after the function returns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3730b55e482a11839d76617f00048033cc8d3a2d" translate="yes" xml:space="preserve">
          <source>The Face of the device is pointing down.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d8312a0e7ae700008f6fceb0215401027886457" translate="yes" xml:space="preserve">
          <source>The Face of the device is pointing up.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="597aaa6eb31c46039f29325d090071059fc7f8bd" translate="yes" xml:space="preserve">
          <source>The Feature type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;FeatureFlag&amp;gt;. It stores an OR combination of FeatureFlag values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cd974de98f3bc9b39f2ab9724094c6474038ee8" translate="yes" xml:space="preserve">
          <source>The FeatureTypes type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;FeatureType&amp;gt;. It stores an OR combination of FeatureType values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53028deb4bd0acb68d77d32f298d34ba98e4d9e0" translate="yes" xml:space="preserve">
          <source>The FeatureWeights type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;FeatureWeight&amp;gt;. It stores an OR combination of FeatureWeight values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23a9c436968251d235277dbec8025954178f56a7" translate="yes" xml:space="preserve">
          <source>The Features type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;Feature&amp;gt;. It stores an OR combination of Feature values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2625847a7b567e11250c61300ebfc9335f881c9b" translate="yes" xml:space="preserve">
          <source>The Fields type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;Field&amp;gt;. It stores an OR combination of Field values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e4e17190455ba26367b915453318e0c23f08e03" translate="yes" xml:space="preserve">
          <source>The FileHandleFlags type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;FileHandleFlag&amp;gt;. It stores an OR combination of FileHandleFlag values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9ba360b2776fe9343ed883a1c7eff815577a648" translate="yes" xml:space="preserve">
          <source>The Filters type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;Filter&amp;gt;. It stores an OR combination of Filter values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d870d4e87794c13ee16b571833be1e7d7f0ac6da" translate="yes" xml:space="preserve">
          <source>The FindChildOptions type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;FindChildOption&amp;gt;. It stores an OR combination of FindChildOption values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b8d38b065edccecaa8861d40251ec4464eb5bcd" translate="yes" xml:space="preserve">
          <source>The FindFlags type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;FindFlag&amp;gt;. It stores an OR combination of FindFlag values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7a6c210ae1f71f7e0474c08f4dbf8072df06d52" translate="yes" xml:space="preserve">
          <source>The Flags type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;Flag&amp;gt;. It stores an OR combination of Flag values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4278a9b2f478af60327497d969b6c7cf99bb5664" translate="yes" xml:space="preserve">
          <source>The FlashModes type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;FlashMode&amp;gt;. It stores an OR combination of FlashMode values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c24459c7eeed83c9ee90cf53abd8bb5009113ccb" translate="yes" xml:space="preserve">
          <source>The Flat Style Tumbler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46a30e55af7c7b866ce2fbd3e6629e5927ad20c0" translate="yes" xml:space="preserve">
          <source>The Flat Style is designed for touch devices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9345caf312c7f10be6713aadeccf7f856adfa17" translate="yes" xml:space="preserve">
          <source>The Flickable item places its children on a surface that can be dragged and flicked, causing the view onto the child items to scroll. This behavior forms the basis of Items that are designed to show large numbers of child items, such as &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-gridview&quot;&gt;GridView&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ef7ad32e7c850adad31766c7cd12a35adf28d17" translate="yes" xml:space="preserve">
          <source>The Flow item automatically positions the child &lt;a href=&quot;qml-qtquick-text&quot;&gt;Text&lt;/a&gt; items side by side, wrapping as necessary:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b41c76fb44281f0c3d89850b31024c8f79e5554e" translate="yes" xml:space="preserve">
          <source>The Flow item positions its child items like words on a page, wrapping them to create rows or columns of items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20de9ee6b72341098fe1ea9cb112c0f2efe99019" translate="yes" xml:space="preserve">
          <source>The FocusFrame is stacked above the widget that it is &quot;focusing on&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d8c52092223972fc55667c87f0a4013cc679d90" translate="yes" xml:space="preserve">
          <source>The FocusModes type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;FocusMode&amp;gt;. It stores an OR combination of FocusMode values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05a24be7e2ed0939610be9517b3299738e4db188" translate="yes" xml:space="preserve">
          <source>The FontDialogOptions type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;FontDialogOption&amp;gt;. It stores an OR combination of FontDialogOption values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba1d53e6e8d079298348e7e1b6b0351ada557f14" translate="yes" xml:space="preserve">
          <source>The FontFilters type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;FontFilter&amp;gt;. It stores an OR combination of FontFilter values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bcc1b3e13a006e940811ba5f6280f84fe5d5971" translate="yes" xml:space="preserve">
          <source>The Foreground Component</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="223a18688e1a25bf13b3c5782794301c6113a108" translate="yes" xml:space="preserve">
          <source>The Form Layout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9d14d397ee02e85853638958757d2da4bc6e9cb" translate="yes" xml:space="preserve">
          <source>The FormatFilters type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;FormatFilter&amp;gt;. It stores an OR combination of FormatFilter values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40f892a63a537cac4f12b88ba1e276d7188366e8" translate="yes" xml:space="preserve">
          <source>The FormatOptions type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;FormatOption&amp;gt;. It stores an OR combination of FormatOption values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4ce8127fe37b5739875b1cafd45edf898969871" translate="yes" xml:space="preserve">
          <source>The FormattingOptions type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;UrlFormattingOption&amp;gt;. It stores an OR combination of UrlFormattingOption values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1619709a5e6ffce1a012ca44e7ba72995ec781b6" translate="yes" xml:space="preserve">
          <source>The FrameErrors type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;FrameError&amp;gt;. It stores an OR combination of FrameError values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c1a059dc8d089a616dd21bcf4dd7c00d641e724" translate="yes" xml:space="preserve">
          <source>The FrameFeatures type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;FrameFeature&amp;gt;. It stores an OR combination of FrameFeature values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2002439a20d54f8dd7664d65af468728bfae0717" translate="yes" xml:space="preserve">
          <source>The FrameGraph tree should be assigned to the activeFrameGraph property of a QRenderSettings component, itself being a component of the root entity in the Qt 3D scene. This is what makes it the active framegraph for the renderer. Of course, since this is a QML property binding, the active framegraph (or parts of it) can be changed on the fly at runtime. For example, if you want to use different rendering approaches for indoor and outdoor scenes or to enable or disable some special effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22948d7ff44ceb6a7fcdd57e5138a99e265f8e18" translate="yes" xml:space="preserve">
          <source>The FullyDecoded mode is similar to the behavior of the functions returning &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; in Qt 4.x, in that every character represents itself and never has any special meaning. This is true even for the percent character ('%'), which should be interpreted to mean a literal percent, not the beginning of a percent-encoded sequence. The same actual character, in all other decoding modes, is represented by the sequence &quot;%25&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f312392aeed6fa7191c6486f5140d4ef0b0d98c9" translate="yes" xml:space="preserve">
          <source>The Fusion style (&quot;fusion&quot;) is provided by QFusionStyle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d29cde0b2c6757d569fb37f9e1eda84f9355634" translate="yes" xml:space="preserve">
          <source>The Fusion style is a desktop-oriented style.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="640a0c061a593222fa2f23b886da7ec2c3f75dad" translate="yes" xml:space="preserve">
          <source>The Fusion style is a platform-agnostic style that offers a desktop-oriented look'n'feel. It implements the same design language as the &lt;a href=&quot;gallery&quot;&gt;Fusion style for Qt Widgets&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23b76839a999524a6aff4f8cdd50045c7296933f" translate="yes" xml:space="preserve">
          <source>The Fusion style uses the standard system &lt;a href=&quot;qml-qtquick-controls2-control#palette-prop&quot;&gt;palettes&lt;/a&gt; to provide colors that match the desktop environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c555504cde7863a3455458ee8945b894d53b7a4a" translate="yes" xml:space="preserve">
          <source>The GB18030 codec Qt functions were contributed to Qt by James Su &amp;lt;suzhe@gnuchina.org&amp;gt;, &amp;lt;suzhe@turbolinux.com.cn&amp;gt; who pioneered much of GB18030 development on GNU/Linux systems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47dd81c62ab9e2a7c8c8b12e0c3357406b20bf94" translate="yes" xml:space="preserve">
          <source>The GB18030 codec was contributed to Qt by Anthony Fok &amp;lt;anthony@thizlinux.com&amp;gt;, &amp;lt;foka@debian.org&amp;gt; using a Perl script to generate C++ tables from gb-18030-2000.xml while merging contributions from James Su, Justin Yu and Sean Chen. A copy of the source Perl script is available at &lt;a href=&quot;http://people.debian.org/~foka/gb18030/gen-qgb18030codec.pl&quot;&gt;http://people.debian.org/~foka/gb18030/gen-qgb18030codec.pl&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d9efd7bc949f875a771fd99946c593a5ae70f84" translate="yes" xml:space="preserve">
          <source>The GBK codec provides conversion to and from the Chinese GB18030/GBK/GB2312 encoding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff7a8c7167b7976d459fd3f462384a5fed56c673" translate="yes" xml:space="preserve">
          <source>The GBK codec was contributed to Qt by Justin Yu &amp;lt;justiny@turbolinux.com.cn&amp;gt; and Sean Chen &amp;lt;seanc@turbolinux.com.cn&amp;gt;. They may also be reached at Yu Mingjian &amp;lt;yumj@sun.ihep.ac.cn&amp;gt;, &amp;lt;yumingjian@china.com&amp;gt; Chen Xiangyang &amp;lt;chenxy@sun.ihep.ac.cn&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a506fa312237c0bb9ba823e2c2b3ef2a0a9e12a6" translate="yes" xml:space="preserve">
          <source>The GET method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc7dde28b5fa276926b6fc943806f8812dac65ad" translate="yes" xml:space="preserve">
          <source>The GUID of the product. Defaults to the value of &lt;a href=&quot;#winrt-manifest&quot;&gt;WINRT_MANIFEST&lt;/a&gt;.identity. (Windows Phone only)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f125af38f2a32e35d9b9510a5f1b69628d3fa15" translate="yes" xml:space="preserve">
          <source>The GUID of the publisher. Defaults to an invalid GUID. (Windows Phone only)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="864931bee871c4de5bc9abd07dc1139a8cf9cf03" translate="yes" xml:space="preserve">
          <source>The Gauge control displays a value within some range along a horizontal or vertical axis. It can be thought of as an extension of &lt;a href=&quot;qml-qtquick-controls-progressbar&quot;&gt;ProgressBar&lt;/a&gt;, providing tickmarks and labels to provide a visual measurement of the progress.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bef65858210f73580c49d6fd1eafccb93cc4232a" translate="yes" xml:space="preserve">
          <source>The GeocodingFeatures type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;GeocodingFeature&amp;gt;. It stores an OR combination of GeocodingFeature values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb86b6a6d31e6fa4563bf2ce9830e8b2e85623c3" translate="yes" xml:space="preserve">
          <source>The GestureFlags type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;GestureFlag&amp;gt;. It stores an OR combination of GestureFlag values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7846b3dec0b815737784ce873efd4703cb70f206" translate="yes" xml:space="preserve">
          <source>The Global Object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79c2aaa1aefa9d904c642df7745cd8c2421a7065" translate="yes" xml:space="preserve">
          <source>The Glow effect blurs the alpha channel of the source and colorizes it with &lt;a href=&quot;qml-qtgraphicaleffects-glow#color-prop&quot;&gt;color&lt;/a&gt; and places it behind the source, resulting in a halo or glow around the object. The quality of the blurred edge can be controlled using &lt;a href=&quot;qml-qtgraphicaleffects-glow#samples-prop&quot;&gt;samples&lt;/a&gt; and &lt;a href=&quot;qml-qtgraphicaleffects-glow#radius-prop&quot;&gt;radius&lt;/a&gt; and the strength of the glow can be changed using &lt;a href=&quot;qml-qtgraphicaleffects-glow#spread-prop&quot;&gt;spread&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a585af9267f36e147288500952127cd06521652" translate="yes" xml:space="preserve">
          <source>The Glucose Feature characteristic is used to describe the supported features of the Server. When read, the Glucose Feature characteristic returns a value that is used by a Client to determine the supported features of the Server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2959f9dee2efc13528d8aa913f37d31e31766bd3" translate="yes" xml:space="preserve">
          <source>The Glucose Measurement characteristic is a variable length structure containing a Flags field, a Sequence Number field, a Base Time field and, based upon the contents of the Flags field, may contain a Time Offset field, Glucose Concentration field, Type-Sample Location field and a Sensor Status Annunciation field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e82eeddbf95d9136755a654e09ca28d5bde5b790" translate="yes" xml:space="preserve">
          <source>The Gooch lighting model is explained fully in the &lt;a href=&quot;http://www.cs.northwestern.edu/~ago820/SIG98/abstract.html#&quot;&gt;original Gooch paper&lt;/a&gt;. The Gooch model mixes a diffuse object color with a user-provided cool color and warm color to produce the end points of a color ramp that is used to shade the object based upon the cosine of the angle between the vector from the fragment to the light source and the fragment's normal vector. Optionally, a specular highlight can be added on top. The relative contributions to the cool and warm colors by the diffuse color are controlled by the alpha and beta properties respecitvely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfd25d6c0597d10dacb452dce8fcd17df4bdc2b8" translate="yes" xml:space="preserve">
          <source>The Gooch lighting model uses both color and brightness to help show the curvature of 3D surfaces. This is often better than models such as Phong that rely purely upon changes in brightness. In situations such as in CAD and CAM applications where photorealism is not a goal, the Gooch shading model in conjunction with some kind of silhouette edge inking is a popular solution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdcc8bc74061821fea5ce944c60b5f1b2e93ec34" translate="yes" xml:space="preserve">
          <source>The Google Android operating system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5642ab226086f15c16d61de3e22f08c274afa7bc" translate="yes" xml:space="preserve">
          <source>The Google Play market place allows you to register your application, as well as the in-app products you want to make available to it, without publishing it. The following guide gives a brief introduction on uploading your application to Google Play and registering products.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7c9f1adac606e20025fac1cb547c3e59b35dac3" translate="yes" xml:space="preserve">
          <source>The Graphics View Architecture</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60a887695558852060bd6c9627a9b350e0259e4e" translate="yes" xml:space="preserve">
          <source>The Graphics View Coordinate System</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="091d52cd23bdc0aaa18b07ab7db7acfe0c5fb55e" translate="yes" xml:space="preserve">
          <source>The GraphicsItemFlags type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;GraphicsItemFlag&amp;gt;. It stores an OR combination of GraphicsItemFlag values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fefacc20a99b34a28537fa1a552036128ecd74d4" translate="yes" xml:space="preserve">
          <source>The Grid Layout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdf5add3f3b4d0b019d089a051cafe06272ab4fe" translate="yes" xml:space="preserve">
          <source>The Grid automatically positions the child items in a grid formation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8c16c7b123e466852005f8e89f41389764b3457" translate="yes" xml:space="preserve">
          <source>The Gyroscope element reports on rotational acceleration around the X, Y and Z axes. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be55fcafef71a61810aa59b7d3a661989e458b24" translate="yes" xml:space="preserve">
          <source>The HERE geo services plugin can be loaded by using the plugin key &quot;here&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cc8dca6af2a2a03916870655ce983319294d875" translate="yes" xml:space="preserve">
          <source>The HERE geo services plugin requires an application id and token pair to authenticate the application with the HERE services. To obtain an application id and token pair visit &lt;a href=&quot;https://developer.here.com/&quot;&gt;https://developer.here.com/&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f33a723e48f91c0a640bf482ef3c7dec7fb02cbf" translate="yes" xml:space="preserve">
          <source>The HERE plugin does not support relevancy hints. Any relevancy hints supplied to a search request are consequently ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b844d847cea76de3f62fc3ab8306af49e7d5fec6" translate="yes" xml:space="preserve">
          <source>The HERE plugin only supports provision of a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa13cc1fe72fc1d8df72685c8c7a40ec01867466" translate="yes" xml:space="preserve">
          <source>The HERE plugin supports searching with a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f25f126471b15583f462fb15a4465b376b9a68f9" translate="yes" xml:space="preserve">
          <source>The HERE provider remotely accesses places (read-only) from a REST based server. The specific capabilities and behaviours are outlined below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="289f89895a1728479345cc71a433869caa655875" translate="yes" xml:space="preserve">
          <source>The HID Control Point characteristic is a control-point attribute that defines the HID Commands when written.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2969ecd6df46c3d80d4a2a718d2b1b2bfcb720d5" translate="yes" xml:space="preserve">
          <source>The HID Information Characteristic returns the HID attributes when read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccc30e0b04dcce8485e5b4855bf449df46316af4" translate="yes" xml:space="preserve">
          <source>The HSL Color Model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b73bd7e1b1277874361b31b552741e343b3f76d6" translate="yes" xml:space="preserve">
          <source>The HSV Color Model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb3dc5b77431950ebc09bc1cb1c9db45ba49fafc" translate="yes" xml:space="preserve">
          <source>The HTML document is loaded immediately, whereas external objects are loaded asynchronously.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef119ad7ca0fe066d7fe383bd9d497eef260d911" translate="yes" xml:space="preserve">
          <source>The HTML formatting is respected as much as possible; for example, &quot;&amp;lt;b&amp;gt;bold&amp;lt;/b&amp;gt; text&quot; will produce text where the first word has a font weight that gives it a bold appearance: &quot;&lt;b&gt;bold&lt;/b&gt; text&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaa7a56d2d1a2c272749d9035b7a670c2776548d" translate="yes" xml:space="preserve">
          <source>The HTML.style variable defines the style for the generated HTML documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d8112e1ac24a05421836610370d9e169cb96e47" translate="yes" xml:space="preserve">
          <source>The HTML.stylesheets variable defines a list of stylesheets to use for the generated HTML documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8461f3e780854d0eb7f9ab284c8793727564381" translate="yes" xml:space="preserve">
          <source>The HTTP authentication realm attribute value of the &lt;code&gt;WWW-Authenticate&lt;/code&gt; header. Empty if &lt;a href=&quot;qml-qtwebengine-authenticationdialogrequest#type-prop&quot;&gt;type&lt;/a&gt; is AuthenticationTypeProxy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93ba56d05f88d217177fa6241ac792fc44828d7a" translate="yes" xml:space="preserve">
          <source>The Header File (&lt;code&gt;card.h&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3607d41cc968db75761949e247dc91be5f22e254" translate="yes" xml:space="preserve">
          <source>The High-Level API: Writing Qt Extensions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28f3b6e98b00afe88cb9ab3bd254925d958128e0" translate="yes" xml:space="preserve">
          <source>The I/O device status returns an error code. For example, if &lt;a href=&quot;qiodevice#open&quot;&gt;open&lt;/a&gt;() returns &lt;code&gt;false&lt;/code&gt;, or a read/write operation returns -1, this function can be called to find out the reason why the operation failed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d9876c080e9b4144e8bb8781feb714a9ddb7b3f" translate="yes" xml:space="preserve">
          <source>The I/O device status returns an error code. For example, if &lt;a href=&quot;qserialport#open&quot;&gt;open&lt;/a&gt;() returns &lt;code&gt;false&lt;/code&gt;, or a read/write operation returns &lt;code&gt;-1&lt;/code&gt;, this property can be used to figure out the reason why the operation failed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b64032bc494f0749d8910ac946e587231b7cb7a5" translate="yes" xml:space="preserve">
          <source>The IANA IDs and database are also know as the Olson IDs and database, named after their creator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f853c00f25eb5dc3feca3073e3c8fb181715962" translate="yes" xml:space="preserve">
          <source>The IANA IDs can and do change on a regular basis, and can vary depending on how recently the host system data was updated. As such you cannot rely on any given ID existing on any host system. You must use &lt;a href=&quot;qtimezone#availableTimeZoneIds&quot;&gt;availableTimeZoneIds&lt;/a&gt;() to determine what IANA IDs are available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19c646818d5d7de1204e87854612ce04419d7145" translate="yes" xml:space="preserve">
          <source>The ID is guaranteed to be larger than any other ID in the &lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt; so far.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c4a831270d2edf14622a4f313dee335cc1f853c" translate="yes" xml:space="preserve">
          <source>The ID is specified by the &lt;code&gt;id&lt;/code&gt; attribute of the &lt;code&gt;&amp;lt;invoke&amp;gt;&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74e9cea28b8c36f23691259900a09111c687a835" translate="yes" xml:space="preserve">
          <source>The ID is used by the &lt;code&gt;&amp;lt;cancel&amp;gt;&lt;/code&gt; element to identify the event to be canceled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b25b0c78c8aa5df2529f04208ca7b3d455fe37b3" translate="yes" xml:space="preserve">
          <source>The ID must be one of the available system IDs otherwise an invalid time zone will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="246e6fd2028a276f481e6504ff927a54f00d630d" translate="yes" xml:space="preserve">
          <source>The ID number of the point</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15c86608a04f3cd45b8bbf8d78f6214759f8e04e" translate="yes" xml:space="preserve">
          <source>The IDC tool is part of the &lt;a href=&quot;activeqt-index&quot;&gt;ActiveQt&lt;/a&gt; build system and makes it possible to turn any Qt binary into a full COM object server with only a few lines of code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2286e9cba0fef663ae4a57f5bd56e44c40fee81" translate="yes" xml:space="preserve">
          <source>The IMPLEMENT_READING macro implements the required methods for a reading class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17bb5d74435214ff0101686c2597c185300496d5" translate="yes" xml:space="preserve">
          <source>The INF files assume a static build of Qt, so no dependencies to other DLLs are listed in the INF files. To distribute an ActiveX server depending on DLLs you must add the dependencies, and provide the library files with the archive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5677b95674b68c3a2ea5b4efed5f2e34ab2c6e1" translate="yes" xml:space="preserve">
          <source>The INI file format has severe restrictions on the syntax of a key. Qt works around this by using &lt;code&gt;%&lt;/code&gt; as an escape character in keys. In addition, if you save a top-level setting (a key with no slashes in it, e.g., &quot;someKey&quot;), it will appear in the INI file's &quot;General&quot; section. To avoid overwriting other keys, if you save something using a key such as &quot;General/someKey&quot;, the key will be located in the &quot;%General&quot; section,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b8bb43893006614cfc21f2184e9265c6dffc694" translate="yes" xml:space="preserve">
          <source>The INI file format is a Windows file format that Qt supports on all platforms. In the absence of an INI standard, we try to follow what Microsoft does, with the following exceptions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="052298514b2708f84110b051bbe017f5cd534e66" translate="yes" xml:space="preserve">
          <source>The INTEGRITY RTOS is widely used in safety- and security-critical systems. Especially in the automotive industry, both Qt and the INTEGRITY RTOS can be used in conjunction with instrument clusters and infotainment systems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43a33b35db8dc6da53d7bc32f7d82abd8953bd93" translate="yes" xml:space="preserve">
          <source>The IO device should be opened before calling this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c06bfaca835d9ba4b53cd45ac245faa52fcffa8" translate="yes" xml:space="preserve">
          <source>The IP address and the netmask must be separated by a slash (/).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="970bb0286df9c6b5cf5ae958aa4e5d6b7c094456" translate="yes" xml:space="preserve">
          <source>The IPv4 any-address. Equivalent to &lt;a href=&quot;qhostaddress&quot;&gt;QHostAddress&lt;/a&gt;(&quot;0.0.0.0&quot;). A socket bound with this address will listen only on IPv4 interfaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf09e12df33bc5352d6d2e83f84cf005f8961f3a" translate="yes" xml:space="preserve">
          <source>The IPv4 broadcast address. Equivalent to &lt;a href=&quot;qhostaddress&quot;&gt;QHostAddress&lt;/a&gt;(&quot;255.255.255.255&quot;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee80e64b90abc669afb564ef1df6ef74a0dafac4" translate="yes" xml:space="preserve">
          <source>The IPv4 localhost address. Equivalent to &lt;a href=&quot;qhostaddress&quot;&gt;QHostAddress&lt;/a&gt;(&quot;127.0.0.1&quot;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d72ee78e827ab96814021d253ea51756fe41404" translate="yes" xml:space="preserve">
          <source>The IPv6 any-address. Equivalent to &lt;a href=&quot;qhostaddress&quot;&gt;QHostAddress&lt;/a&gt;(&quot;::&quot;). A socket bound with this address will listen only on IPv6 interfaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c83d87c205b868215d3f1f6062ddd7ad57219307" translate="yes" xml:space="preserve">
          <source>The IPv6 localhost address. Equivalent to &lt;a href=&quot;qhostaddress&quot;&gt;QHostAddress&lt;/a&gt;(&quot;::1&quot;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d83788bc31ca9025e5afc82763b85c8a9dbe051a" translate="yes" xml:space="preserve">
          <source>The IPv6 scope ID specifies the scope of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8b4a1c3c954373cf9bae1e5469b087810e258e7" translate="yes" xml:space="preserve">
          <source>The IR (infra-red) proximity sensor detects proximity by beaming out infra-red light and detecting how much of the light returns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a2882e2a42045de3402a2eaebe6f68f5c516ae9" translate="yes" xml:space="preserve">
          <source>The Icon type also has a parameters map which is a set of key value pairs. The precise keys to use depend on the &lt;a href=&quot;qtlocation-index#plugin-references-and-parameters&quot;&gt;plugin&lt;/a&gt; being used. The parameters map is used by the &lt;a href=&quot;location-places-qml#plugin&quot;&gt;Plugin&lt;/a&gt; to determine which URL to return.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7a14ff073dd5e51889718fab088ce96bb224839" translate="yes" xml:space="preserve">
          <source>The Icon type can be used in conjunction with an &lt;a href=&quot;qml-qtquick-image&quot;&gt;Image&lt;/a&gt; type to display an icon. The &lt;a href=&quot;qml-qtlocation-icon#url-method&quot;&gt;url()&lt;/a&gt; function is used to construct an icon URL of a requested size, the icon which most closely matches the requested size is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b363887f18bda00a5b8c2bfb69ef9bd7b465c1fe" translate="yes" xml:space="preserve">
          <source>The Icon type represents an icon image source which can have multiple sizes. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c15e95d61b485a943be315dc3f34fcc750c9b0f" translate="yes" xml:space="preserve">
          <source>The Image I/O Plugins</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18b891740683f3e64de1c74ce8c9d1c3787499e5" translate="yes" xml:space="preserve">
          <source>The Image Provider provides &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; images. The &lt;a href=&quot;qquickimageprovider#requestImage&quot;&gt;QQuickImageProvider::requestImage&lt;/a&gt;() method will be called for all image requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cfe5dd1515048198e1bf642f29bfe38010289e0" translate="yes" xml:space="preserve">
          <source>The Image Provider provides &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; images. The &lt;a href=&quot;qquickimageprovider#requestPixmap&quot;&gt;QQuickImageProvider::requestPixmap&lt;/a&gt;() method will be called for all image requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2aaaa6f234b0d3678f8723b771122bce66b3b81" translate="yes" xml:space="preserve">
          <source>The Image Provider provides &lt;a href=&quot;qsgtextureprovider&quot;&gt;QSGTextureProvider&lt;/a&gt; based images. The &lt;a href=&quot;qquickimageprovider#requestTexture&quot;&gt;QQuickImageProvider::requestTexture&lt;/a&gt;() method will be called for all image requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36485f241746bc0edf702b4176fe1a5af51442ae" translate="yes" xml:space="preserve">
          <source>The Image provider provides &lt;a href=&quot;qquicktexturefactory&quot;&gt;QQuickTextureFactory&lt;/a&gt; based images. Should only be used in &lt;a href=&quot;qquickasyncimageprovider&quot;&gt;QQuickAsyncImageProvider&lt;/a&gt; or its subclasses. The &lt;a href=&quot;qquickasyncimageprovider#requestImageResponse&quot;&gt;QQuickAsyncImageProvider::requestImageResponse&lt;/a&gt;() method will be called for all image requests. Since Qt 5.6</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0744e30d5b900b5efa57511fa5c4402a050b4811" translate="yes" xml:space="preserve">
          <source>The Image type displays an image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a12f076a53a3aef0a2d821907d143d9131e4562" translate="yes" xml:space="preserve">
          <source>The ImageConversionFlags type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;ImageConversionFlag&amp;gt;. It stores an OR combination of ImageConversionFlag values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f42a4d7e234409be7a4466570b8c6dba804a971" translate="yes" xml:space="preserve">
          <source>The Imagine Style is based on configurable image assets. &lt;a href=&quot;#detailed-desc-imagine&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89bfa7d65ffe22e8b0b48dc7bd917c9f27186bfa" translate="yes" xml:space="preserve">
          <source>The Imagine style allows customizing the &lt;a href=&quot;#imagine-path-attached-prop&quot;&gt;path&lt;/a&gt; that is used to do the image asset selection. The path can be specified for any window or item, and it automatically propagates to children in the same manner as &lt;a href=&quot;qml-qtquick-controls2-control#font-prop&quot;&gt;fonts&lt;/a&gt;. In the following example, the window and all three radio buttons appear with dark image assets (files that are located in &quot;qrc:/themes/dark&quot;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cb857141b88720c966040ebf56e062800990081" translate="yes" xml:space="preserve">
          <source>The Imagine style is based on image assets. The style comes with a default set of images, but the images can be easily changed by providing a directory with images using a predefined naming convention.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fe1ac0b26378d5f20421276acf16d63338ba605" translate="yes" xml:space="preserve">
          <source>The Imagine style must be separately imported to gain access to the attributes that are specific to the Imagine style. It should be noted that regardless of the references to the Imagine style, the same application code runs with any other style. Imagine-specific attributes only have an effect when the application is run with the Imagine style.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91197289b788bb284e5364da4e32c7daae4338a2" translate="yes" xml:space="preserve">
          <source>The Imagine style supports palette customization via the &lt;a href=&quot;qml-qtquick-controls2-control#palette-prop&quot;&gt;palette&lt;/a&gt; property and the &lt;a href=&quot;qtquickcontrols2-configuration#palette-configuration&quot;&gt;qtquickcontrols2.conf&lt;/a&gt; file. As with other styles, the exact palette roles that the Imagine style uses are style-dependent. However, as most of the visual appearance of controls (for example: backgrounds) are managed through image assets, only the roles that are typically used for text will have an effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba2458035d978b6faf6ff37e73fe1168024d7577" translate="yes" xml:space="preserve">
          <source>The Imagine style uses &lt;a href=&quot;https://developer.android.com/guide/topics/graphics/2d-graphics.html#nine-patch&quot;&gt;9-patch images&lt;/a&gt; in order to give designers control over how a particular element responds to being resized. Here is an example of a 9-patch image that represents a &lt;a href=&quot;qml-qtquick-controls2-button&quot;&gt;Button&lt;/a&gt;'s &lt;a href=&quot;qml-qtquick-controls2-control#background-prop&quot;&gt;background&lt;/a&gt;, alongside a magnified version (to make it easier to see the 9-patch lines):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="922fbc1e95c2749e8677b4c51672f72017e55d03" translate="yes" xml:space="preserve">
          <source>The Imagine style with the default images</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af3636db5de3cf518579cb2661b8d31fc9ea9856" translate="yes" xml:space="preserve">
          <source>The Implementation File (&lt;code&gt;card.cpp&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bb369d1904ca4af10d412c4711ed1eb7c6ae8da" translate="yes" xml:space="preserve">
          <source>The Inactive group is used for other windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c7a55c832c1b43d81232c77ffabe597683a7986" translate="yes" xml:space="preserve">
          <source>The InfoFlags type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;InfoFlag&amp;gt;. It stores an OR combination of InfoFlag values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94aa4b093bb310bd0c26f474e5f41ee3d96e782b" translate="yes" xml:space="preserve">
          <source>The Information included in this page is informative. The normative descriptions are contained in the applicable specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6ff48bfbd65404aaf65332a285d2d771f78a852" translate="yes" xml:space="preserve">
          <source>The InputDialogOptions type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;InputDialogOption&amp;gt;. It stores an OR combination of InputDialogOption values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65c20b7b28e8d19998c2a0198eb421ad407dad99" translate="yes" xml:space="preserve">
          <source>The InputMethodHints type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;InputMethodHint&amp;gt;. It stores an OR combination of InputMethodHint values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c7662f4856a6ac798eb6e573f0983924db577d1" translate="yes" xml:space="preserve">
          <source>The InputMethodQueries type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;InputMethodQuery&amp;gt;. It stores an OR combination of InputMethodQuery values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c217514982ce0b2ac1b009747f07c87808989b1" translate="yes" xml:space="preserve">
          <source>The Instantiator element will manage the objects it creates. Those objects are parented to the Instantiator and can also be deleted by the Instantiator if the Instantiator's properties change. Objects can also be destroyed dynamically through other means, and the Instantiator will not recreate them unless the properties of the Instantiator change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a173c3dc8b6a040c7d3b7f3e0476ee80964d3f11" translate="yes" xml:space="preserve">
          <source>The InterfaceFlags type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;InterfaceFlag&amp;gt;. It stores an OR combination of InterfaceFlag values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6cc9797993121944ea4295b3a310b88435cdaa7" translate="yes" xml:space="preserve">
          <source>The Intermediate Temperature characteristic has the same format as the Temperature Measurement characteristic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50be17b194700c1e929c8324deebfff7259ddcd3" translate="yes" xml:space="preserve">
          <source>The Item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3405bbfcb864f0235a52fbf927f78e5e343ca837" translate="yes" xml:space="preserve">
          <source>The Item type can be useful for grouping several items under a single root visual item. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bcc94cda3a35ba1a2b8593118afd12df32e32bd" translate="yes" xml:space="preserve">
          <source>The Item type is the base type for all visual items in Qt Quick.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f06e50519172efc74948185ec060df89209e9756" translate="yes" xml:space="preserve">
          <source>The Item which this handler will manipulate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dec4671752a465aab63bff570e41abaf02a4905" translate="yes" xml:space="preserve">
          <source>The ItemFlags type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;ItemFlag&amp;gt;. It stores an OR combination of ItemFlag values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45bfed4674434bfd9ba11688f6378c7a0e1ad54e" translate="yes" xml:space="preserve">
          <source>The Items Overlay geo services plugin can be loaded by using the plugin key &quot;itemsoverlay&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f87402f7f01bc4418af2758e0060dd8ad7911cee" translate="yes" xml:space="preserve">
          <source>The Iterator Classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60eb9d9bb4a95bce445e2497c2ecacc674dd0ae6" translate="yes" xml:space="preserve">
          <source>The IteratorFlags type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;IteratorFlag&amp;gt;. It stores an OR combination of IteratorFlag values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d97b5809166928112b1658a9802a6351f39baf8d" translate="yes" xml:space="preserve">
          <source>The JIS codec provides conversion to and from ISO 2022-JP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03e4abef07f9899f78b6bde980b15418c74c174a" translate="yes" xml:space="preserve">
          <source>The JSON Classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1adbb5b2d11c22ebd86547494ca5d81bbc238ae8" translate="yes" xml:space="preserve">
          <source>The JSON Object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d046c7862856f92c02438f23ea895788304bbdb1" translate="yes" xml:space="preserve">
          <source>The JSON document is too deeply nested for the parser to parse it</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="850550cc2c5d61dac23dc359fe7da27007726287" translate="yes" xml:space="preserve">
          <source>The JSON document is too large for the parser to parse it</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a756193a135e3e6c0e29186572aa35021ed2d638" translate="yes" xml:space="preserve">
          <source>The JSON support in Qt provides an easy to use C++ API to parse, modify and save JSON data. It also contains support for saving this data in a binary format that is directly &quot;mmap&quot;-able and very fast to access.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a22b5f2e7b8cc9a07a2a7f461747c888b816ca1" translate="yes" xml:space="preserve">
          <source>The Java style draws CE_CheckBoxIndicator, while &lt;a href=&quot;qcommonstyle&quot;&gt;QCommonStyle&lt;/a&gt; handles CE_CheckboxLabel. We will examine each implementation and start with CE_CheckBoxLabel:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3798c5d587e35f740d9a8fb26a2262a5428dab8" translate="yes" xml:space="preserve">
          <source>The Java style, as well as all other styles implemented in Qt, does not use &lt;code&gt;PE_FrameButtonBevel&lt;/code&gt;. It is usual that a button with a &lt;code&gt;PE_DefaultFrame&lt;/code&gt; adjusts the &lt;code&gt;PE_PanelButtonCommand&lt;/code&gt;'s rectangle by &lt;code&gt;PM_ButtonDefaultIndicator&lt;/code&gt;. The &lt;code&gt;CE_PushButtonLabel&lt;/code&gt; is found by adjusting the rect by &lt;code&gt;PM_DefaultFrameWidth&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="684f79dd51dae5da5d36a4d5d6aa15e7ae53146a" translate="yes" xml:space="preserve">
          <source>The Java-style iterators are new in Qt 4 and are the standard ones used in Qt applications. They are more convenient to use than the STL-style iterators, at the price of being slightly less efficient. Their API is modelled on Java's iterator classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9588518fa8590b8f824281f30b640fb75cdd2709" translate="yes" xml:space="preserve">
          <source>The JavaScript environment provided by QML is stricter than that in a web browser. For example, in QML you cannot add to, or modify, members of the JavaScript global object. In regular JavaScript, it is possible to do this accidentally by using a variable without declaring it. In QML this will throw an exception, so all local variables must be explicitly declared. See &lt;a href=&quot;qtqml-javascript-hostenvironment#javascript-environment-restrictions&quot;&gt;JavaScript Environment Restrictions&lt;/a&gt; for a complete description of the restrictions on JavaScript code executed from QML.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48d58f58bbd08b213337aa0c29564024f3bacb16" translate="yes" xml:space="preserve">
          <source>The JavaScript heap will contain:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6a0bc47b3fed30a03b9eb3fb96553a190aa9403" translate="yes" xml:space="preserve">
          <source>The Joint node is used to build skeletons as part of the skinned mesh support in Qt 3D. A joint can be transformed by way of its scale, rotation and translation properties. Any mesh vertices that are bound to the joint will have their transformations updated accordingly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2878497b177978d88355aa78192822dfdece06f" translate="yes" xml:space="preserve">
          <source>The KMS/DRM backend also supports custom configurations via a JSON file. Set the environment variable &lt;code&gt;QT_QPA_EGLFS_KMS_CONFIG&lt;/code&gt; to the name of the file to enable this. The file can also be embedded into the application via the Qt resource system. An example configuration is below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dd2502b67dfba2a925b811aa30b824a09469fb0" translate="yes" xml:space="preserve">
          <source>The KeyboardModifiers type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;KeyboardModifier&amp;gt;. It stores an OR combination of KeyboardModifier values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4835d8d4fbd7725ce72e80a2fd57e92c39bb4db8" translate="yes" xml:space="preserve">
          <source>The Keys attached property can be configured to handle key events before or after the item it is attached to. This makes it possible to intercept events in order to override an item's default behavior, or act as a fallback for keys not handled by the item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35d907fafb27e0a4f273f63b090dccb10e3f1289" translate="yes" xml:space="preserve">
          <source>The L2cap protocol is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a02ee6096f12260bb21d2a570596c9879cb907ed" translate="yes" xml:space="preserve">
          <source>The LN Control Point characteristic is used to request a specific function to be executed on the receiving device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9bbbb8503501edb41f6eaad1eef147df4428c1b" translate="yes" xml:space="preserve">
          <source>The LN Feature characteristic is used to report a list of features supported by the device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df0a9b175bb80a53254fd3a65d26e0c9ac177e0e" translate="yes" xml:space="preserve">
          <source>The LayoutFlags type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;LayoutFlag&amp;gt;. It stores an OR combination of LayoutFlag values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8dbc54320407bbd174680826b7dcdd34d6f148a" translate="yes" xml:space="preserve">
          <source>The Left edge of the device is pointing up.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dd1a72247e4b4418adc906509dae1f16b60629f" translate="yes" xml:space="preserve">
          <source>The Lid sensor can detect if a device's lid is closed or not. A lid can be a laptop, a laptop that converts to a tablet, or even a cover for a tablet or phone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e93ed2525a77892c9efff4a318bdbef34093654" translate="yes" xml:space="preserve">
          <source>The Lifetime of a Java Object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dac621ceee2616d94c1ec272718357b2b2d96530" translate="yes" xml:space="preserve">
          <source>The LoadHints type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;LoadHint&amp;gt;. It stores an OR combination of LoadHint values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b8ef66caa7b650f77f84fb65cfb4265b9612125" translate="yes" xml:space="preserve">
          <source>The Loader class is a URI resolver and resource loader for an SCXML compiler. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fa4adc4df00f93c8360f07dee1b5462c2e0fcbf" translate="yes" xml:space="preserve">
          <source>The Loader is an element which allows dynamic loading and unloading of components.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35bd97652194f1c1e35c01d61e0dfed5e4fc4ffc" translate="yes" xml:space="preserve">
          <source>The LocalServerError enumeration represents the errors that can occur. The most recent error can be retrieved through a call to &lt;a href=&quot;qlocalsocket#error&quot;&gt;QLocalSocket::error&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f67ce666a5f4eee866ee9c28fda24011e1a42467" translate="yes" xml:space="preserve">
          <source>The Locale object may also be passed to the &lt;a href=&quot;qml-qtqml-date&quot;&gt;Date&lt;/a&gt; and &lt;a href=&quot;qml-qtqml-number&quot;&gt;Number&lt;/a&gt; toLocaleString() and fromLocaleString() methods in order to convert to/from strings using the specified locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="939b0d6c1b7a5b55b0e1458c6380ed1cbdb4576c" translate="yes" xml:space="preserve">
          <source>The Locale object may only be created via the &lt;a href=&quot;qml-qtqml-qt#locale-method&quot;&gt;Qt.locale()&lt;/a&gt; function. It cannot be created directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fac46d2203c151565dc9307600971cb4775b5b0" translate="yes" xml:space="preserve">
          <source>The Locale object provides a number of functions and properties providing data for the specified locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c54acbd4c11d67890d52a6bfa42671f97a8398a" translate="yes" xml:space="preserve">
          <source>The LocateOptions type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;LocateOption&amp;gt;. It stores an OR combination of LocateOption values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aee4cd63558baf129a11b2054161ba9fb26bb3af" translate="yes" xml:space="preserve">
          <source>The Location API provides a library for mapping, navigation and place information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ecd7c415eab8b51803a9a63d616af1aa23b9675" translate="yes" xml:space="preserve">
          <source>The Location and Speed characteristic is a variable length structure containing a Flags field and, based on the contents of the Flags field, may contain a combination of data fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d663e3f2cc04780a82acb1cb95734d3415ea2fa" translate="yes" xml:space="preserve">
          <source>The Location type holds location data. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65cb75dd3e14063017240c1864c998583f14c6bf" translate="yes" xml:space="preserve">
          <source>The Location type is most commonly seen as the contents of a search model such as the &lt;a href=&quot;qml-qtlocation-geocodemodel&quot;&gt;GeocodeModel&lt;/a&gt;. When a &lt;a href=&quot;qml-qtlocation-geocodemodel&quot;&gt;GeocodeModel&lt;/a&gt; returns the list of locations found for a given query, it represents these as Location objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82dadde1fd9fd9ee7bd847158a374e7849b3d4c8" translate="yes" xml:space="preserve">
          <source>The LockTypes type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;LockType&amp;gt;. It stores an OR combination of LockType values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1780d0c93fccf17d62a0d683f100a64a37207c3" translate="yes" xml:space="preserve">
          <source>The LoggingMode enum defines the logging mode of the logger object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85909047b0dcaca3c58b3f5cb70ee7ba728a32e7" translate="yes" xml:space="preserve">
          <source>The Low-Level API: Extending Qt Applications</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5c939662165d20d7bfe51f12c2771f9a3fa9d55" translate="yes" xml:space="preserve">
          <source>The MIME type database is provided by the freedesktop.org shared-mime-info project. If the MIME type database cannot be found on the system, as is the case on most Windows, &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, and iOS systems, Qt will use its own copy of it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b40235a1477264c776e63c31df782ef4de3cb04" translate="yes" xml:space="preserve">
          <source>The MIME type is important because it determines which embeds the plugin is used for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a7100d108a5bf5a07c29b9d2af0439af6ec6cba" translate="yes" xml:space="preserve">
          <source>The MIME type of the image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5f3e59528bcf7f39b932c4c97c0f20e3c8e37c0" translate="yes" xml:space="preserve">
          <source>The MS C++ compiler for .NET on the other hand, can produce both normal and managed code. To write a C++ class that can be compiled into managed code, the developer must flag the class as managed using the &lt;code&gt;__gc&lt;/code&gt; keyword, and restrict the code to only use the subset of C++ known as &quot;Managed Extensions for C++&quot;, or MC++ for short. The advantage is that MC++ code can freely call and use normal C++ functions and classes. And it also works the other way around: normal C++ code can call managed functions and use managed classes (e.g. the entire .NET framework class library), including managed functions and classes implemented in C# or VB.NET. This feature of mixing managed and normal C++ code immensely eases the interoperability with .NET, and is by Microsoft referred to as the &quot;It Just Works&quot; (IJW) feature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9c6fd3ae11f4cc48a6bb0df0cc3a9bb0b42fb09" translate="yes" xml:space="preserve">
          <source>The MS compilers for C# and VB.NET will only produce managed code. Such programs cannot directly call normal, native functions or classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa434552619a483115e965b5f0c88ae2c9c30e66" translate="yes" xml:space="preserve">
          <source>The MSVC and g++ specs targeting Windows enable &lt;code&gt;precompile_header&lt;/code&gt; by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50ee0777575b69734eb3b5ff56e7a2cc186e7a03" translate="yes" xml:space="preserve">
          <source>The Mach kernel's absolute time (&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; and iOS). This clock is monotonic and does not overflow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="355765857662c7031d04cac9b6d9c3303e07c7ce" translate="yes" xml:space="preserve">
          <source>The Magnetometer element reports on magnetic field strength along the Z, Y and Z axes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7165a3b9c8f39e79ac95065e065abde92279d42" translate="yes" xml:space="preserve">
          <source>The Magnetometer element reports on magnetic field strength along the Z, Y and Z axes. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e54d40f199e500dbf5d84c2072c754fd37c4753f" translate="yes" xml:space="preserve">
          <source>The Main Window Classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c66b7ad04f22b32f6063d5bf82f637c4295cd135" translate="yes" xml:space="preserve">
          <source>The ManeuverDetails type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;ManeuverDetail&amp;gt;. It stores an OR combination of ManeuverDetail values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9a41819b116d753091442b4eeee03dab66a9f2b" translate="yes" xml:space="preserve">
          <source>The Map type displays a map. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2504e9abe29fee95e00dd7acfef1c4f64b16ae0" translate="yes" xml:space="preserve">
          <source>The Map type includes support for pinch and flick gestures to control zooming and panning. These are enabled by default, and available at any time by using the &lt;a href=&quot;qml-qtlocation-map#gesture-prop&quot;&gt;gesture&lt;/a&gt; object. The actual GestureArea is constructed specially at startup and cannot be replaced or destroyed. Its properties can be altered, however, to control its behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c31f8e2a0ead8ed20226eb8ecff993a9b919bdd3" translate="yes" xml:space="preserve">
          <source>The Map type is used to display a map or image of the Earth, with the capability to also display interactive objects tied to the map's surface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40e394babf7ccc24a5ab5c6de62271cd21b4d17a" translate="yes" xml:space="preserve">
          <source>The Mapbox GL geo services plugin can be loaded by using the plugin key &quot;mapboxgl&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3c5a0ba0f62d080329d9f3f205065748d21aa70" translate="yes" xml:space="preserve">
          <source>The Mapbox geo services plugin can be loaded by using the plugin key &quot;mapbox&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc0304970e4049305768292ea09c99d07562fcd5" translate="yes" xml:space="preserve">
          <source>The Mapbox geo services plugin requires an access token and map ID to use the Mapbox services. To create a Mapbox account visit &lt;a href=&quot;https://www.mapbox.com/#signup&quot;&gt;https://www.mapbox.com/#signup&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27100475be98ac222e5665f36aad9087aa71f586" translate="yes" xml:space="preserve">
          <source>The MappingFeatures type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;MappingFeature&amp;gt;. It stores an OR combination of MappingFeature values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8940a4e0d76e6e9244ca1ac3a73875cd0c3e3d4" translate="yes" xml:space="preserve">
          <source>The Maps and Navigation API allows people to access various kinds of geographical information, including functionality to perform geocoding, routing and the display of maps. The &lt;a href=&quot;qgeoserviceprovider&quot;&gt;QGeoServiceProvider&lt;/a&gt; aggregates the access to a set of these services that are provided by a single vendor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f329588476b6144172af077ae1b3f9d30c01ffae" translate="yes" xml:space="preserve">
          <source>The MatchFlags type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;MatchFlag&amp;gt;. It stores an OR combination of MatchFlag values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b3ee5b4fb416ae203fb15a0131438624191d749" translate="yes" xml:space="preserve">
          <source>The MatchOptions type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;MatchOption&amp;gt;. It stores an OR combination of MatchOption values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94309e03151ebde6ebd2e4181a73b71b6813cbbc" translate="yes" xml:space="preserve">
          <source>The MatchType enum defines the type of the match that should be attempted against the subject string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d455754d88c84e04056924895b82687df6acbc3c" translate="yes" xml:space="preserve">
          <source>The Material Style is based on the Google Material Design Guidelines. &lt;a href=&quot;#detailed-desc-material&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="698b5cd8311bac93158e4626d80e0b3dab76f42c" translate="yes" xml:space="preserve">
          <source>The Material style allows customizing five attributes, &lt;a href=&quot;#material-theme-attached-prop&quot;&gt;theme&lt;/a&gt;, &lt;a href=&quot;#material-primary-attached-prop&quot;&gt;primary&lt;/a&gt;, &lt;a href=&quot;#material-accent-attached-prop&quot;&gt;accent&lt;/a&gt;, &lt;a href=&quot;#material-foreground-attached-prop&quot;&gt;foreground&lt;/a&gt;, and &lt;a href=&quot;#material-background-attached-prop&quot;&gt;background&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0cb6e80d5232a1c4517088f95dbdfc71363b827" translate="yes" xml:space="preserve">
          <source>The Material style also supports a dense variant, where controls like buttons and delegates are smaller in height and use smaller font sizes. It is recommended to use the dense variant on desktop platforms, where a mouse and keyboard allow more precise and flexible user interaction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87419aadca57b441e25d35f3c63c178b1fb3231c" translate="yes" xml:space="preserve">
          <source>The Material style in dark theme</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14027fe76b700a50add091aa3cd8f00e25e90412" translate="yes" xml:space="preserve">
          <source>The Material style in light theme</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fb3c506d4f7364c0078d67610581eae9fbf08dd" translate="yes" xml:space="preserve">
          <source>The Material style is based on the &lt;a href=&quot;https://www.google.com/design/spec/material-design/introduction.html&quot;&gt;Google Material Design Guidelines&lt;/a&gt;. It allows for a unified experience across platforms and device sizes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="239f56221202842cad6d6f49f95782243f8ae9cb" translate="yes" xml:space="preserve">
          <source>The Material style must be separately imported to gain access to the attributes that are specific to the Material style. It should be noted that regardless of the references to the Material style, the same application code runs with any other style. Material-specific attributes only have an effect when the application is run with the Material style.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cc0ce03db2715e5ac83798f699832fb87d5e5cc" translate="yes" xml:space="preserve">
          <source>The Material style's implementation of the custom button imports the Material style, requests a dark theme to get light text, and creates a drop shadow for the background.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa1c39fed1338615abafccd715f9a9ceec0208c2" translate="yes" xml:space="preserve">
          <source>The Math Object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="020083cb3745712e96dde87bf8ce6697f99a7c9b" translate="yes" xml:space="preserve">
          <source>The Matrix4x4 type provides a way to apply a transformation to an &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt; through a 4x4 matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54f1272a328be0884bd86f8b340f15ac28695d2f" translate="yes" xml:space="preserve">
          <source>The Measurement Interval characteristic defines the time between measurements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab5d0399103093409b62d17f97b24ac133dd05dd" translate="yes" xml:space="preserve">
          <source>The MediaFlags type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;MediaFlag&amp;gt;. It stores an OR combination of MediaFlag values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6d92e2d36576b8dd93465408b99e0b6f2ee878e" translate="yes" xml:space="preserve">
          <source>The Menu type provides a QML API for native platform menu popups.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f537b76c3e24e79bc384174a67b1c2a1693ce5d9" translate="yes" xml:space="preserve">
          <source>The Menus example demonstrates how menus can be used in a main window application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1df907dccf21ba96a4cc83ffe6420c52d25068aa" translate="yes" xml:space="preserve">
          <source>The MessageBoard::messages() function simply creates and returns a &lt;a href=&quot;qqmllistproperty&quot;&gt;QQmlListProperty&lt;/a&gt; from its &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;T&amp;gt; &lt;code&gt;m_messages&lt;/code&gt; member, passing the appropriate list modification functions as required by the &lt;a href=&quot;qqmllistproperty&quot;&gt;QQmlListProperty&lt;/a&gt; constructor:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41cb82775cd6b2879350c2ad41737237a6c986f8" translate="yes" xml:space="preserve">
          <source>The Meta keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="585a8019b9f19e92f76af73e8a4747b136ab3150" translate="yes" xml:space="preserve">
          <source>The Meta-Object Compiler, &lt;code&gt;moc&lt;/code&gt;, is the program that handles &lt;a href=&quot;metaobjects&quot;&gt;Qt's C++ extensions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d52390977d6db0a48f36094c0978a79b84ab97f" translate="yes" xml:space="preserve">
          <source>The Meta-Object System</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81d9a9b25040d064131f4d9cd23354f5e5ad07c7" translate="yes" xml:space="preserve">
          <source>The Microsoft Windows operating system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9874adea4d19100d9a7bd0a03fa6b8b3ea67485b" translate="yes" xml:space="preserve">
          <source>The Minor Tickmark Component</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5f8d102bed0f835729860c1a93c8283b24105be" translate="yes" xml:space="preserve">
          <source>The Modbus API provides some common API to access the Modbus devices:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35d06c4e64434facbdcb2cbf6f8ce4363efd5bb0" translate="yes" xml:space="preserve">
          <source>The Modbus ASCII end of message delimiter. &lt;code&gt;char&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea5f391d63e20f9429dee0183a6a77dbcafa556b" translate="yes" xml:space="preserve">
          <source>The Modbus function &lt;a href=&quot;qmodbuspdu#FunctionCode-enum&quot;&gt;QModbusRequest::EncapsulatedInterfaceTransport&lt;/a&gt; with MEI Type 13 (0x0D) CANopen General Reference is filtered out because it is usually Modbus TCP or Modbus serial ASCII only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d8e8449c3f176f38cb5744014d541463731cfa9" translate="yes" xml:space="preserve">
          <source>The Model/View Classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57bfb92a0b2b7ea36a47ea86b5ee5fe7aa03d4f6" translate="yes" xml:space="preserve">
          <source>The MouseButtons type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;MouseButton&amp;gt;. It stores an OR combination of MouseButton values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b366950da87b6b1fd061b73a025a570c2ae1184" translate="yes" xml:space="preserve">
          <source>The MouseEventFlags type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;MouseEventFlag&amp;gt;. It stores an OR combination of MouseEventFlag values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45c15a7d6bb2705c828efcb2aa61d850b1d3ddcb" translate="yes" xml:space="preserve">
          <source>The Multiple Inheritance Approach</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="884c5c8c032c72c4690b289eb3a353a8f65b30d8" translate="yes" xml:space="preserve">
          <source>The MyClickableWidget code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bab0b102d2ac20c8888b01d86dcf21fa0c4d393e" translate="yes" xml:space="preserve">
          <source>The MySQL embedded server is a drop-in replacement for the normal client library. With the embedded MySQL server, a MySQL server is not required to use MySQL functionality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aacc87894bfeac3ab4f49c783948bd7e55d4757" translate="yes" xml:space="preserve">
          <source>The MyWidget code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bb78b6d2bac75ba0f6f5fb8ad9b813facef8d82" translate="yes" xml:space="preserve">
          <source>The N900 has an accelerometer built-in. It also features bluetooth and can pair with a gaming controller that features an accelerometer. To a developer writing a game these two devices are conceptually the same type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d47fa47e353bde0cdfdc33fc5c402e260162fc24" translate="yes" xml:space="preserve">
          <source>The NDEF record type follows the construct described in RFC 2046</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4e155264e68c44291ea1f4eae2d0fc18bc620c5" translate="yes" xml:space="preserve">
          <source>The NDEF record type follows the construct described in RFC 2046.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5b1e0ddde22aaf75803f4bd7c4fabeebd5c5647" translate="yes" xml:space="preserve">
          <source>The NDEF record type follows the construct described in RFC 3986</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89367e0ab684613eb8a5285f810297f9b2fbdd83" translate="yes" xml:space="preserve">
          <source>The NDEF record type follows the construct described in RFC 3986.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f338f936ef631c4d9937cc811fc32fa0564ba95" translate="yes" xml:space="preserve">
          <source>The NDEF record type follows the construct for external type names described the NFC RTD Specification</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e51b53803689054fcffed88464dab4ff9bcdf7e" translate="yes" xml:space="preserve">
          <source>The NDEF record type follows the construct for external type names described the NFC RTD Specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18f48b6360e0e4f0e41bf16962a6f2541e29ec25" translate="yes" xml:space="preserve">
          <source>The NDEF record type is defined by an NFC RTD Specification</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="812cdf87f44836ef19e829b90bbde80b995f0b57" translate="yes" xml:space="preserve">
          <source>The NDEF record type is defined by an NFC RTD Specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f557e1836e6ed9fe63ca71b6dc6a65ac37d3035" translate="yes" xml:space="preserve">
          <source>The NDEF record type is unknown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdb803fd12234e1dab776a833237707537037438" translate="yes" xml:space="preserve">
          <source>The NFC API provides APIs for interacting with NFC Forum Tags and NFC Forum Devices, including target detection and loss, registering NDEF message handlers, reading and writing NDEF messages on NFC Forum Tags and sending tag specific commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d185a848c2dfa0ab66e48529e5c169bf693f38f" translate="yes" xml:space="preserve">
          <source>The NFC API provides connectivity between NFC enabled devices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2244a6189a5e5c004ea8c041dc801a411459e5c3" translate="yes" xml:space="preserve">
          <source>The NTLM authentication mechanism currently supports no incoming or outgoing options. On Windows, if no</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7639ca51cf1c9d9c733764f70e7e4e2932efbad4" translate="yes" xml:space="preserve">
          <source>The Navigation characteristic is a variable length structure containing a Flags field, a Bearing field, a Heading field and, based on the contents of the Flags field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b32d8e496d42e3af2c2ab2b126adb59992687e42" translate="yes" xml:space="preserve">
          <source>The NavigationFeatures type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;NavigationFeature&amp;gt;. It stores an OR combination of NavigationFeature values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e4a3367e4c95802cd329421b41b5d925e478cec" translate="yes" xml:space="preserve">
          <source>The Navigator purpose is to use a plugin's turn-by-turn navigation implementation in a QML application in a seamless manner. This object may take control of the map position, orientation, tilting and zoom, as well as changing the map style, elements on the map such as direction information. In certain cases, it may also restrict user interaction with the Map and with the items on it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0709fb30f795d8d05ff472d07ff7b06a751c8830" translate="yes" xml:space="preserve">
          <source>The Navigator type offers functionalities to perform turn-by-turn navigation. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd8a91ba5c2fb9e0ad0537e2533542c59f016a97" translate="yes" xml:space="preserve">
          <source>The Needle Component</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d012ca4cfed791d1f4888f25723dee1953fb417b" translate="yes" xml:space="preserve">
          <source>The Network Access API is a collection of classes for performing common network operations. The API provides an abstraction layer over the specific operations and protocols used (for example, getting and posting data over HTTP), and only exposes classes, functions, and signals for general or high level concepts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3406088056ac5b6bbdc0bd0c3320ec596169611" translate="yes" xml:space="preserve">
          <source>The Network Access API is constructed around one &lt;a href=&quot;qnetworkaccessmanager&quot;&gt;QNetworkAccessManager&lt;/a&gt; object, which holds the common configuration and settings for the requests it sends. It contains the proxy and cache configuration, as well as the signals related to such issues, and reply signals that can be used to monitor the progress of a network operation. One &lt;a href=&quot;qnetworkaccessmanager&quot;&gt;QNetworkAccessManager&lt;/a&gt; instance should be enough for the whole Qt application. Since &lt;a href=&quot;qnetworkaccessmanager&quot;&gt;QNetworkAccessManager&lt;/a&gt; is based on &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;, it can only be used from the thread it belongs to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fac3e0d9a35cb85b74c1d6a5750cace38c4a52f" translate="yes" xml:space="preserve">
          <source>The Node type provides an entry point to a Qt Remote Objects network. A network can be as simple as two nodes, or an arbitrarily complex set of processes and devices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="990ba92c23a4e856e1e9c9a194b447f8abc6cb30" translate="yes" xml:space="preserve">
          <source>The Number Object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9a0f836f1a030598b7f1a0aa0e22a5748a47c7b" translate="yes" xml:space="preserve">
          <source>The Number object provides represents a number value. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed4a46f3b468c06efa255e2c5d9b7547612c67d8" translate="yes" xml:space="preserve">
          <source>The NumberFlags type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;NumberFlag&amp;gt;. It stores an OR combination of NumberFlag values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77b1c95c0d059aae91e3b2aaf15e9074ec2645d2" translate="yes" xml:space="preserve">
          <source>The NumberOptions type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;NumberOption&amp;gt;. It stores an OR combination of NumberOption values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7df2bcff58a1fb78ad22b9b58caf4612899977da" translate="yes" xml:space="preserve">
          <source>The ODBC header and include files should already be installed in the right directories. You just have to build the plugin as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20d9a2512cf6d07f57d584d30e800e62fa390ad2" translate="yes" xml:space="preserve">
          <source>The Object Cannot Be Created</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7475645fae6d5e1f5649b076c1f6c1227991b4f6" translate="yes" xml:space="preserve">
          <source>The Object Inspector</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="051805d0a6c0f6877f09222f30f2884591938245" translate="yes" xml:space="preserve">
          <source>The Object Object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8caf816e3f39b341b2e76a8055f157f6532745c" translate="yes" xml:space="preserve">
          <source>The Open Street Map geo services plugin can be loaded by using the plugin key &quot;osm&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="542eaf5bba72572c327df97eef7c2ac7ade0a4fc" translate="yes" xml:space="preserve">
          <source>The OpenGL acceleration of series drawing is meant for use cases that need fast drawing of large numbers of points. It is optimized for efficiency, and therefore the series using it lack support for many features available to non-accelerated series:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e4dea5b75e52171cc088e9cfbca988ec7f183ae" translate="yes" xml:space="preserve">
          <source>The OpenGL adaptation is the default adaptation, which is capable of providing the full Qt Quick 2 feature set. For more details, see &lt;a href=&quot;qtquick-visualcanvas-scenegraph-renderer#&quot;&gt;OpenGL Adaptation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db73e7382c759f3e2d2e2b9cf34aacc39d58fcf3" translate="yes" xml:space="preserve">
          <source>The OpenGL context can be released to free up graphics resources when the window is obscured, hidden or not rendering. When this happens is implementation specific.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67870f9a49c7ee24325767ba75a22c2627d88cae" translate="yes" xml:space="preserve">
          <source>The OpenGL context is still released when the last &lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; is deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0551084f27b010755d24dbfe999a0d619608f8ff" translate="yes" xml:space="preserve">
          <source>The OpenGL context used for rendering is bound when this function is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b3b94eb93ed9ef7a9af25e438a48b65bc38c556" translate="yes" xml:space="preserve">
          <source>The OpenGL context used for rendering the scene graph will be bound at this point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc1b6803b64da9085e6b8cd11faed2f6435819db" translate="yes" xml:space="preserve">
          <source>The OpenGL texture id value that you want Qt3D to gain access to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e1f34fb0078c5326af8273cf05c1e40b0c4d612" translate="yes" xml:space="preserve">
          <source>The OpenGL timer queries objects are queried in sequence to record the GPU timestamps at positions of interest in your rendering code. Once the results for all issues timer queries become available, the results can be fetched and QOpenGLTimerMonitor will calculate the recorded time intervals for you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cb7d05b7236ca69699af8920e41222ee0804f9f" translate="yes" xml:space="preserve">
          <source>The OpenGLWindow's context is made current in the destructor, allowing for safe destruction of any child object that may need to release OpenGL resources belonging to the context provided by this window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c876a3ad888396b94cedde95cca9168f5563496f" translate="yes" xml:space="preserve">
          <source>The OpenMode type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;OpenModeFlag&amp;gt;. It stores an OR combination of OpenModeFlag values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6dbc00a32e3c9600040ee0d0ba024de2556a7b1" translate="yes" xml:space="preserve">
          <source>The OpenStreetMap plugin retrieves the provider's information from a remote repository. This is done to prevent using hardcoded servers by default, which may become unavailable. By default this information is fetched from &lt;a href=&quot;http://maps-redirect.qt.io&quot;&gt;maps-redirect.qt.io&lt;/a&gt;. Setting this parameter changes the provider repository address to a user-specified one, which must contain the files &lt;code&gt;street&lt;/code&gt;, &lt;code&gt;satellite&lt;/code&gt;, &lt;code&gt;cycle&lt;/code&gt;, &lt;code&gt;transit&lt;/code&gt;, &lt;code&gt;night-transit&lt;/code&gt;, &lt;code&gt;terrain&lt;/code&gt; and &lt;code&gt;hiking&lt;/code&gt;, each of which must contain valid provider information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ba6e29066bfa20fa4914272afce6a5a91e58100" translate="yes" xml:space="preserve">
          <source>The Operations type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;Operation&amp;gt;. It stores an OR combination of Operation values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ceb980f5cd1d19774004cbd840f7ae3d9fce3f6" translate="yes" xml:space="preserve">
          <source>The OptimizationFlags type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;OptimizationFlag&amp;gt;. It stores an OR combination of OptimizationFlag values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25bda6f4fdaf89964a813bffb63f6f05bd70e7c5" translate="yes" xml:space="preserve">
          <source>The OptimizationHints type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;OptimizationHint&amp;gt;. It stores an OR combination of OptimizationHint values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fb9131f30a966b3c2381cab188d0fa45019580c" translate="yes" xml:space="preserve">
          <source>The Options type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;Option&amp;gt;. It stores an OR combination of Option values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3f1384f3e33411d6137a94961353ebcb7e65e95" translate="yes" xml:space="preserve">
          <source>The Oracle driver, for example, can retrieve numerical values as strings to prevent the loss of precision. If high precision doesn't matter, use this method to increase execution speed by bypassing string conversions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62110a02133a4b052ff0d0c90cf80b0aa408b21e" translate="yes" xml:space="preserve">
          <source>The Orientations type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;Orientation&amp;gt;. It stores an OR combination of Orientation values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b51faf0098a3fa976e7be177f50d7a06b30a353" translate="yes" xml:space="preserve">
          <source>The OutputFormat enum is used to describe the format &lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; should use for printing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="625bafc8548362b3ace67ccc37e5dd5b5a0a4b50" translate="yes" xml:space="preserve">
          <source>The PEM format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b147b0815c315028a377b8c57c22124947ec6a5c" translate="yes" xml:space="preserve">
          <source>The POD type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f93473ab601b0993c6b12a063d90c15f91bcf8e7" translate="yes" xml:space="preserve">
          <source>The POST method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aad0c8236a9ace257936dd4bce7e24e29218c8bd" translate="yes" xml:space="preserve">
          <source>The Package type is used in conjunction with &lt;a href=&quot;qml-qtqml-models-delegatemodel&quot;&gt;DelegateModel&lt;/a&gt; to enable delegates with a shared context to be provided to multiple views.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04c960fa2eb178f4c5623397e4b7929d1a1adb55" translate="yes" xml:space="preserve">
          <source>The PageBreakFlags type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;PageBreakFlag&amp;gt;. It stores an OR combination of PageBreakFlag values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="210e761ac362b30e98ec9c955af67fd03ee3ad01" translate="yes" xml:space="preserve">
          <source>The PaintEngineFeatures type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;PaintEngineFeature&amp;gt;. It stores an OR combination of PaintEngineFeature values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12464edf6b6b4c49926fa2a304da343dd5283da1" translate="yes" xml:space="preserve">
          <source>The Palette</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="593ed153ed7e8eae0a806d7689a03ea8bb1be318" translate="yes" xml:space="preserve">
          <source>The ParamType type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;ParamTypeFlag&amp;gt;. It stores an OR combination of ParamTypeFlag values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="780316ade2d9be1f549df8faef6dcc3837d04eed" translate="yes" xml:space="preserve">
          <source>The ParticleSystem</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fef191cea97e47e2029edbe52079b730cf317ad6" translate="yes" xml:space="preserve">
          <source>The Path Stroking example shows Qt's built-in dash patterns and shows how custom patterns can be used to extend the range of available patterns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fed6cac9fc34a091daa301058369485111744d6c" translate="yes" xml:space="preserve">
          <source>The PatternOption enum defines modifiers to the way the pattern string should be interpreted, and therefore the way the pattern matches against a subject string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d8353831f0196a2a4ab37e577251ac24c9ab84c" translate="yes" xml:space="preserve">
          <source>The PatternOptions type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;PatternOption&amp;gt;. It stores an OR combination of PatternOption values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="582dc7bd0f6b45d0330d1952fb12b2a5e791cda0" translate="yes" xml:space="preserve">
          <source>The Pause/Break key (&lt;b&gt;Note&lt;/b&gt;: Not related to pausing media)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6c32ecad43a8a25a2528ef2132383b58fd7c018" translate="yes" xml:space="preserve">
          <source>The PauseModes type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;PauseMode&amp;gt;. It stores an OR combination of PauseMode values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="779d4bad6c7837b3075eb0f02a2b4489e95bcaf4" translate="yes" xml:space="preserve">
          <source>The PdfVersion enum describes the version of the PDF file that is produced by QPrinter or &lt;a href=&quot;qpdfwriter&quot;&gt;QPdfWriter&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c2983b43e93f8215d4d04e4cc5000b2564fb973" translate="yes" xml:space="preserve">
          <source>The PeekOptions type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;PeekOption&amp;gt;. It stores an OR combination of PeekOption values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a17f091f9e67fb1dfc81a0fefa3b2e45c7821c8a" translate="yes" xml:space="preserve">
          <source>The Pepper Flash player plugin can be loaded automatically if it is installed in one of the following locations, depending on the platform:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a1a17f6386984e9299f3f9db420bb0a8efc86eb" translate="yes" xml:space="preserve">
          <source>The PerformanceHints type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;PerformanceHint&amp;gt;. It stores an OR combination of PerformanceHint values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37e32a01fea3e31e9d5eabdafd1fefd0032e5ca5" translate="yes" xml:space="preserve">
          <source>The Permissions type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;Permission&amp;gt;. It stores an OR combination of Permission values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e20534a1fbeb244e77f0690bcb54dd8c016e396f" translate="yes" xml:space="preserve">
          <source>The PinoutSignals type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;PinoutSignal&amp;gt;. It stores an OR combination of PinoutSignal values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cc03876c97432b771ca0d949118122de4cec23f" translate="yes" xml:space="preserve">
          <source>The PixmapFragmentHints type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;PixmapFragmentHint&amp;gt;. It stores an OR combination of PixmapFragmentHint values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42d4dfef04a399ee8c93ddb3d5e28f92a3212e4b" translate="yes" xml:space="preserve">
          <source>The Place type has many properties holding information about the location. Details on how to contact the place are available from the &lt;a href=&quot;qml-qtlocation-place#contactDetails-prop&quot;&gt;contactDetails&lt;/a&gt; property. Convenience properties for obtaining the primary &lt;a href=&quot;qml-qtlocation-place#primaryPhone-prop&quot;&gt;phone&lt;/a&gt;, &lt;a href=&quot;qml-qtlocation-place#primaryFax-prop&quot;&gt;fax&lt;/a&gt;, &lt;a href=&quot;qml-qtlocation-place#primaryEmail-prop&quot;&gt;email&lt;/a&gt; and &lt;a href=&quot;qml-qtlocation-place#primaryWebsite-prop&quot;&gt;website&lt;/a&gt; are also available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af68130974d9ded05c93d0a4ae9b7044c1bd2fcd" translate="yes" xml:space="preserve">
          <source>The Place type represents a location that is a position of interest. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73360d5820694dab5eac72b256eafa82ea241cff" translate="yes" xml:space="preserve">
          <source>The Place type represents a physical location with additional metadata describing that location. Contrasted with &lt;a href=&quot;mobiledevelopment#location&quot;&gt;Location&lt;/a&gt;, &lt;a href=&quot;qml-qtpositioning-address&quot;&gt;Address&lt;/a&gt;, and &lt;a href=&quot;qml-coordinate&quot;&gt;coordinate&lt;/a&gt; type which are used to describe where a location is. The basic properties of a Place are its &lt;a href=&quot;qml-qtlocation-place#name-prop&quot;&gt;name&lt;/a&gt; and &lt;a href=&quot;qml-qtlocation-place#location-prop&quot;&gt;location&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6070ef40cd427f454564da47f7d1d7890d0199cc" translate="yes" xml:space="preserve">
          <source>The Places API allows users to discover places of interest and view details about them, such as address and contact information. Some places may have additional content associated with them, such as images and reviews. The Places API also facilitates management of places and categories, allowing users to save and remove them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55dec17e660aff3f6dd595a4aa107d4a7e70e41a" translate="yes" xml:space="preserve">
          <source>The Places API allows users to discover places/points of interest and view details about them such as address and contact information; some places may even have rich content such as images and reviews. The Places API also facilitates management of places and categories, allowing users to save and remove them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92919da79a6cf05c5f6f69d06f8e99f5f6717991" translate="yes" xml:space="preserve">
          <source>The Places API is currently designed for only saving</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0463608c18c71756196b82f3dfff78dd06426ec8" translate="yes" xml:space="preserve">
          <source>The Places API only supports saving of the following</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fce042b0c476c2cb6336b25c35bd29b71526a8b2" translate="yes" xml:space="preserve">
          <source>The Places API supports the concept of favorites. Favorites are generally implemented by using two plugins, the first plugin is typically a read-only source of places (origin plugin) and a second read/write plugin (destination plugin) is used to store places from the origin as favorites.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84508a700cfe4d8cfe5f1afb02d0b7db16aa0f35" translate="yes" xml:space="preserve">
          <source>The Places submodule is the natural complement to Positioning, providing a source of geographical data about Places of Interest (POI). Besides the source information, the API provides information about the location, size, and other related information about a POI. The Places API can also retrieve images, reviews, and other content related to a place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="300539fb36e54e65fb317635d3e273f54164badb" translate="yes" xml:space="preserve">
          <source>The PlacesFeatures type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;PlacesFeature&amp;gt;. It stores an OR combination of PlacesFeature values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a7b9ef366b42dec449fe4539bed9be1e0b52e27" translate="yes" xml:space="preserve">
          <source>The Playlist type provides a way to play a list of media with the &lt;a href=&quot;qml-qtmultimedia-mediaplayer&quot;&gt;MediaPlayer&lt;/a&gt;, Audio and Video types. It can be used as a data source for view elements (such as &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt;) and other elements that interact with model data (such as Repeater). When used as a data model, each playlist item's source URL can be accessed using the &lt;code&gt;source&lt;/code&gt; role.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b72197f4f4307c1d35252305cc33f86b6a80f46" translate="yes" xml:space="preserve">
          <source>The Plugin type describes a Location based services plugin. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="475f5edd89427a8c3f8ace208fcb6752c6a4a23a" translate="yes" xml:space="preserve">
          <source>The Plugin type is used to declaratively specify which available GeoServices plugin should be used for various tasks in the Location API. Plugins are used by &lt;a href=&quot;qml-qtlocation-map&quot;&gt;Map&lt;/a&gt;, &lt;a href=&quot;qml-qtlocation-routemodel&quot;&gt;RouteModel&lt;/a&gt;, and &lt;a href=&quot;qml-qtlocation-geocodemodel&quot;&gt;GeocodeModel&lt;/a&gt; types, as well as a variety of others.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33c4b599aa889f4d56e103762ef64a6a4e283a76" translate="yes" xml:space="preserve">
          <source>The PnP_ID characteristic returns its value when read using the GATT Characteristic Value Read procedure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aae45387689ea78e6c90582f3a992334a71bbc66" translate="yes" xml:space="preserve">
          <source>The PolarOrientations type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;PolarOrientation&amp;gt;. It stores an OR combination of PolarOrientation values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7990414e52181f14bb353d660c181f2bffa53dad" translate="yes" xml:space="preserve">
          <source>The PolicyFlags type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;PolicyFlag&amp;gt;. It stores an OR combination of PolicyFlag values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae6a1429055be7dc43e870ee6bb4a62c1bfd535e" translate="yes" xml:space="preserve">
          <source>The Position Quality characteristic is a variable length structure containing a Flags field and at least one of the optional data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="151d51bc31edcabefdbdcc1a3aeff2fb2c7f202f" translate="yes" xml:space="preserve">
          <source>The Position type has different positional member variables, whose validity can be checked with appropriate validity functions (for example sometimes an update does not have speed or altitude data).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e261de75aecd93f63912661dd1aa0a77eb301de0" translate="yes" xml:space="preserve">
          <source>The Position type holds positional data at a particular point in time, such as coordinate (longitude, latitude, altitude) and speed. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="327e7a7a62ac7d0cb7de124689cb6def11e0f0db" translate="yes" xml:space="preserve">
          <source>The Position type holds values related to geographic location such as a &lt;a href=&quot;qml-qtpositioning-position#coordinate-prop&quot;&gt;coordinate&lt;/a&gt; (longitude, latitude, and altitude), the &lt;a href=&quot;qml-qtpositioning-position#timestamp-prop&quot;&gt;timestamp&lt;/a&gt; when the Position was obtained, the &lt;a href=&quot;qml-qtpositioning-position#speed-prop&quot;&gt;speed&lt;/a&gt; at that time, and the accuracy of the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8de2d8181d2ebb66aa9c4f9d49ae27863ba7230d" translate="yes" xml:space="preserve">
          <source>The Positioning component of the Qt Location API is about the geographical position, size and address of some place. Positioning contains a &lt;a href=&quot;qgeocoordinate&quot;&gt;QGeoCoordinate&lt;/a&gt; class, containing latitude, longitude and altitude in meters. &lt;a href=&quot;qgeolocation&quot;&gt;QGeoLocation&lt;/a&gt; contains a &lt;a href=&quot;qgeocoordinate&quot;&gt;QGeoCoordinate&lt;/a&gt; plus address and size information (a bounding box) so that positions can be more than mathematical points. Movement into or out of the defined bounding box areas can be monitored. The API also allows the developer to control the source of the positional information as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5fcc789996ea482f4ded3ded6bf0cc63dc4ab22" translate="yes" xml:space="preserve">
          <source>The PositioningMethods type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;PositioningMethod&amp;gt;. It stores an OR combination of PositioningMethod values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d515e6865537d69e0b5cb0f4f8cf47f478935494" translate="yes" xml:space="preserve">
          <source>The Postscript standard size &lt;a href=&quot;qpagesize#PageSizeId-enum&quot;&gt;QPageSize::Folio&lt;/a&gt; is different to the Windows DMPAPER_FOLIO size, use the Postscript standard size &lt;a href=&quot;qpagesize#PageSizeId-enum&quot;&gt;QPageSize::FanFoldGermanLegal&lt;/a&gt; if needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c9ef26fd912debd286788fab3938e8deb2e008a" translate="yes" xml:space="preserve">
          <source>The Postscript standard size QPageSize::Folio is different to the Windows DMPAPER_FOLIO size, use the Postscript standard size QPageSize::FanFoldGermanLegal if needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b260ebc0ea9ef2b4300cf8a91c4ed0a100b14d0" translate="yes" xml:space="preserve">
          <source>The Pressure characteristic states the value of a pressure sensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecf8c9a1c7528f6b43e032b73bf8cc1015275c39" translate="yes" xml:space="preserve">
          <source>The PreviewWindow class inherits &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;. The widget displays the names of its window flags set with the &lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#function&quot;&gt;setWindowFlags()&lt;/a&gt; function. It is also provided with a &lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt; that closes the window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d012b3004b35038b8be3b884bd08b5a7f6294716" translate="yes" xml:space="preserve">
          <source>The PreviewWindow class is a custom widget displaying the names of its currently set window flags in a read-only text editor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6ef6625454cce20adf0aee1a3d73cb4e2c41c8f" translate="yes" xml:space="preserve">
          <source>The PreviewWindow class is a custom widget displaying the names of its currently set window flags in a read-only text editor. &lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#preview-window&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e224fd7c3c556e02c653b1efaa8334230d407946" translate="yes" xml:space="preserve">
          <source>The PrintDialogOptions type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;PrintDialogOption&amp;gt;. It stores an OR combination of PrintDialogOption values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39dc7eaa051676cc7f0c5509ed46a9ef2cea5af0" translate="yes" xml:space="preserve">
          <source>The ProcessEventsFlags type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;ProcessEventsFlag&amp;gt;. It stores an OR combination of ProcessEventsFlag values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7d0fd60f92d86bc29db9038d7e7d2801a8253b6" translate="yes" xml:space="preserve">
          <source>The Product Declaration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd2b82e098aa75eac2350ca490104a60035116cb" translate="yes" xml:space="preserve">
          <source>The Property Editor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e76fdb552e23133d92f4fc380e061bb0d35c5fb0" translate="yes" xml:space="preserve">
          <source>The Property Editor always displays properties of the currently selected object on the form. The available properties depend on the object being edited, but all of the widgets provided have common properties such as &lt;a href=&quot;qobject#objectName-prop&quot;&gt;objectName&lt;/a&gt;, the object's internal name, and &lt;a href=&quot;qwidget#enabled-prop&quot;&gt;enabled&lt;/a&gt;, the property that determines whether an object can be interacted with or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ca0ffb058ee763c56db4592f5280a7927f1f4b4" translate="yes" xml:space="preserve">
          <source>The Property System</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20857f9844e0bf848bba150a4dd2d0c796730239" translate="yes" xml:space="preserve">
          <source>The Property-based API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fea4d278d6b99f40a2f16a424ba7a727acbcdb84" translate="yes" xml:space="preserve">
          <source>The PropertyTypes type is a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;PropertyType&amp;gt;. It stores an OR combination of PropertyType values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9096a13b7ff1578df3f49d0ad74db9d23ae0fa87" translate="yes" xml:space="preserve">
          <source>The Protocol Mode characteristic is used to expose the current protocol mode of the HID Service with which it is associated, or to set the desired protocol mode of the HID Service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45247f0c1eb35cb366ee8c562b7c783eb55d70a0" translate="yes" xml:space="preserve">
          <source>The Public Suffix List, version d6331e2b65fffbe9fe299dae1689db8de8fd6190, fetched on 2019-02-20</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7625961813f4b04b98ece48ea055aef5fdd8d0c" translate="yes" xml:space="preserve">
          <source>The QAccessibleObject and QAccessibleWidget Convenience Classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="850b45ba8233a1b3fec4bef7588f2039a8febeea" translate="yes" xml:space="preserve">
          <source>The QAccessibleSlider must reimplement &lt;a href=&quot;qaccessibleinterface#childCount&quot;&gt;QAccessibleInterface::childCount&lt;/a&gt;() since it manages children without interfaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="044f65764d1412fd474b8b03f5cf6d73dfb7c530" translate="yes" xml:space="preserve">
          <source>The QBENCHMARK_ONCE macro is for measuring performance of a code block by running it once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c230f9ad17b48e72fe8af291fe44498c55e03b9c" translate="yes" xml:space="preserve">
          <source>The QByteArrayListIterator type definition provides a Java-style const iterator for &lt;a href=&quot;qbytearraylist&quot;&gt;QByteArrayList&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11eb4dc8f7e819e32993a508e64a029483dc0f11" translate="yes" xml:space="preserve">
          <source>The QCOMPARE macro compares an</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aed6e58a340ecf8bffc80552732ce40069ff4a27" translate="yes" xml:space="preserve">
          <source>The QDB2 driver supports prepared queries, reading/writing of Unicode strings and reading/writing of BLOBs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b5d7e652de3dc2095faac76da16f55b22f47f94" translate="yes" xml:space="preserve">
          <source>The QDesktopWidget class can be used to monitor the positions of widgets and notify applications about changes to the way the desktop is split over the available screens. This enables applications to implement policies for positioning new windows so that, for example, they do not distract a user who is working on a specific task.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf3155b05ce067eb32e99f749dd3a4386cb7d618" translate="yes" xml:space="preserve">
          <source>The QDoc Configuration File</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e4e45ddace2db7a6e16a87b01e819a7f523e042" translate="yes" xml:space="preserve">
          <source>The QDoc comment lists the values of the enumeration. If the enumeration is implemented in C++, the documentation may link to the corresponding C++ enumeration. However, the QDoc comment should advise that the enumeration is a C++ enumeration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f194f18932f37ef94b7ae1f7703239a602f47634" translate="yes" xml:space="preserve">
          <source>The QDom classes are typically used as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d65f25549f522625e1d3e1a2b745c20bfcaac35" translate="yes" xml:space="preserve">
          <source>The QDom classes have a few issues of nonconformance with the XML specifications that cannot be fixed in Qt 4 without breaking backward compatibility. The Qt XML Patterns module and the &lt;a href=&quot;qxmlstreamreader&quot;&gt;QXmlStreamReader&lt;/a&gt; and &lt;a href=&quot;qxmlstreamwriter&quot;&gt;QXmlStreamWriter&lt;/a&gt; classes have a higher degree of a conformance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9c51aaa959a6a9757128320f2b2872206fe01e6" translate="yes" xml:space="preserve">
          <source>The QEXPECT_FAIL() macro marks the next &lt;a href=&quot;qtest#QCOMPARE&quot;&gt;QCOMPARE&lt;/a&gt;() or &lt;a href=&quot;qtest#QVERIFY&quot;&gt;QVERIFY&lt;/a&gt;() as an expected failure. Instead of adding a failure to the test log, an expected failure will be reported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dcc6ac39a872f821343aa9827378acdadecbf8c" translate="yes" xml:space="preserve">
          <source>The QGeoPlaceManager is owned by this &lt;a href=&quot;qgeoserviceprovider&quot;&gt;QGeoServiceProvider&lt;/a&gt; and should not be deleted separately. Users should assume that deleting the &lt;a href=&quot;qgeoserviceprovider&quot;&gt;QGeoServiceProvider&lt;/a&gt; renders the pointer returned by this method invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10e605f407ddd9126fb1f493485d01133f558b69" translate="yes" xml:space="preserve">
          <source>The QLinkedList::const_reverse_iterator typedef provides an STL-style const reverse iterator for &lt;a href=&quot;qlinkedlist&quot;&gt;QLinkedList&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faa60bfbeba1e0e58b5bb6b117321398f71128f5" translate="yes" xml:space="preserve">
          <source>The QLinkedList::reverse_iterator typedef provides an STL-style non-const reverse iterator for &lt;a href=&quot;qlinkedlist&quot;&gt;QLinkedList&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aebd766afeaeb4e5bedf86d8ee036f56fa4e22e" translate="yes" xml:space="preserve">
          <source>The QList::const_reverse_iterator typedef provides an STL-style const reverse iterator for &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f4b2cd0c692b9d25d0a786406aef5a2095d1377" translate="yes" xml:space="preserve">
          <source>The QList::reverse_iterator typedef provides an STL-style non-const reverse iterator for &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bacee59ffc844deacea0621a14a2ccbdc8c9b92c" translate="yes" xml:space="preserve">
          <source>The QML Date object extends the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date#&quot;&gt;JS Date object&lt;/a&gt; with locale aware functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70007e06d3b0f6aafa5414f07986297043706a26" translate="yes" xml:space="preserve">
          <source>The QML JavaScript host environment implements a number of host objects and functions, as detailed in the &lt;a href=&quot;qtqml-javascript-qmlglobalobject#&quot;&gt;QML Global Object&lt;/a&gt; documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="917bc15fcb3c8b4d6ee112c65e9d09f0cbd95a5b" translate="yes" xml:space="preserve">
          <source>The QML JavaScript host environment implements the following host objects and functions. These are built in and can be used from any JavaScript code loaded in QML, without additional imports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6516368ae1005c30de7ba14f99fd85ab92adc929" translate="yes" xml:space="preserve">
          <source>The QML Number object extends the JS Number object with locale aware functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bafb6a0afe6d5890efd9608331548e94502a0be" translate="yes" xml:space="preserve">
          <source>The QML Places API is built around the notion of models, views and delegates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6529c2a03881b8a3c2c0746670298ea822d5aa43" translate="yes" xml:space="preserve">
          <source>The QML Reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c628990482aa5c6c8f0ec584a0435c5f7f412a9" translate="yes" xml:space="preserve">
          <source>The QML String object extends the JS String object with the &lt;a href=&quot;qml-qtqml-string#arg-method&quot;&gt;arg()&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b4092362651f110dbe006c8459caabc18fa20fb" translate="yes" xml:space="preserve">
          <source>The QML Type System</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e47f9872a7283fd637796ecb1e62fd0d8e441a47" translate="yes" xml:space="preserve">
          <source>The QML engine automatically creates a &lt;a href=&quot;qtqml-syntax-signals#&quot;&gt;signal handler&lt;/a&gt; for any signal of a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;-derived type that is used from QML. Signal handlers are always named</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04d7b2ea8bbb98b35f13d1f7a4820dbe7fc3ed3d" translate="yes" xml:space="preserve">
          <source>The QML engine does some tricky things to try to ensure that loading and initialization of components doesn't cause frames to be skipped. However, there is no better way to reduce startup time than to avoid doing work you don't need to do, and delaying the work until it is necessary. This may be achieved by using either &lt;a href=&quot;qml-qtquick-loader&quot;&gt;Loader&lt;/a&gt; or creating components &lt;a href=&quot;qtqml-javascript-dynamicobjectcreation&quot;&gt;dynamically&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb3bd6242063a91c04ad78853619fa39d2c18351" translate="yes" xml:space="preserve">
          <source>The QML engine enforces the relationship between a property and its dependencies. When any of the dependencies change in value, the QML engine automatically re-evaluates the binding expression and assigns the new result to the property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2e40c308ba9b6835ff6c83d67ac8f0233b5fb07" translate="yes" xml:space="preserve">
          <source>The QML engine has built-in support for converting a number of Qt types to related JavaScript types, and vice-versa, when transferring data between QML and C++. This makes it possible to use these types and receive them in C++ or JavaScript without needing to implement custom types that provide access to the data values and their attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c29ff6dc2f1e226929f85e09556bb429e4423946" translate="yes" xml:space="preserve">
          <source>The QML engine has the ability to introspect &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; instances through the meta-object system. This means any QML code can access the following members of an instance of a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;-derived class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8390981177fb3a1f8ce24f25b4b30319e3733d4e" translate="yes" xml:space="preserve">
          <source>The QML engine internally handles all requests, and cleans up any QNetworkReply objects it creates. Receiving the QNetworkAccessManager::finished() signal in another thread may not provide the receiver with a valid reply object if it has already been deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd8952f25519aa8d82f1efeb426bef2f8d7d99d6" translate="yes" xml:space="preserve">
          <source>The QML engine invokes this method in order to attach an instance of the attached object type to the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f37aacf10e3ab1e77a3c847f547d808758149a6" translate="yes" xml:space="preserve">
          <source>The QML engine provides automatic type conversion between &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; values and JavaScript &lt;code&gt;ArrayBuffer&lt;/code&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43c053b797a934794e63fa191d6638c01ffe7123" translate="yes" xml:space="preserve">
          <source>The QML engine provides automatic type conversion between &lt;a href=&quot;qdatetime&quot;&gt;QDateTime&lt;/a&gt; values and JavaScript &lt;code&gt;Date&lt;/code&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="790a0e954795cd6f863bd3111ad31ca06134cb84" translate="yes" xml:space="preserve">
          <source>The QML engine provides automatic type conversion between &lt;a href=&quot;qvariant#QVariantList-typedef&quot;&gt;QVariantList&lt;/a&gt; and JavaScript arrays, and between &lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap&lt;/a&gt; and JavaScript objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db015ddafc074100889e177e308fa073b0f80efb" translate="yes" xml:space="preserve">
          <source>The QML engine provides automatic type conversion from &lt;a href=&quot;qtime&quot;&gt;QTime&lt;/a&gt; values to JavaScript &lt;code&gt;Date&lt;/code&gt; objects. As &lt;a href=&quot;qtime&quot;&gt;QTime&lt;/a&gt; values do not contain a date component, one is created for the conversion only. Thus, you should not rely on the date component of the resulting Date object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a678d12b929ae28796ffa246d47d8e4fe85ec2d1" translate="yes" xml:space="preserve">
          <source>The QML engine provides built-in support for a large number of Qt C++ data types. Additionally, custom C++ types may be registered with the QML type system to make them available to the engine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f6f7fc9d82d71ed50673e9fa913ab3793c67f8b" translate="yes" xml:space="preserve">
          <source>The QML equivalent of this function is &lt;a href=&quot;qml-qttest-testcase#isPolishScheduled-method&quot;&gt;isPolishScheduled()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b1ff6eacb8ca419a78eb818c8c5412a7556990b" translate="yes" xml:space="preserve">
          <source>The QML equivalent of this function is &lt;a href=&quot;qml-qttest-testcase#waitForItemPolished-method&quot;&gt;waitForItemPolished()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e5464ca89a1c41921a29d79aaefb7733f71d9d5" translate="yes" xml:space="preserve">
          <source>The QML implementation has a sidebar containing &lt;a href=&quot;qml-qtquick-dialogs-filedialog#shortcuts-prop&quot;&gt;shortcuts&lt;/a&gt; to common platform-specific locations, and user-modifiable favorites. It uses application-specific &lt;a href=&quot;https://doc.qt.io/qt-5.13/qt-labs-settings-qmlmodule.html&quot;&gt;settings&lt;/a&gt; to store the user's favorites, as well as other user-modifiable state, such as whether or not the sidebar is shown, the positions of the splitters, and the dialog size. The settings are stored in a section called &lt;code&gt;QQControlsFileDialog&lt;/code&gt; of the application-specific &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;. For example when testing an application with the qml tool, the &lt;code&gt;QQControlsFileDialog&lt;/code&gt; section will be created in the &lt;code&gt;Qml Runtime&lt;/code&gt; settings file (or registry entry). If an application is started via a custom C++ main() function, it is recommended to set the &lt;a href=&quot;qcoreapplication#applicationName-prop&quot;&gt;name&lt;/a&gt;, &lt;a href=&quot;qcoreapplication#organizationName-prop&quot;&gt;organization&lt;/a&gt; and &lt;a href=&quot;qcoreapplication#organizationDomain-prop&quot;&gt;domain&lt;/a&gt; in order to control the location of the application's settings. If you use &lt;a href=&quot;https://doc.qt.io/qt-5.13/qt-labs-settings-qmlmodule.html&quot;&gt;Settings&lt;/a&gt; objects in other parts of an application, they will be stored in other sections of the same file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35deff1353c74574743768d65b2d90c926c9e32b" translate="yes" xml:space="preserve">
          <source>The QML language and engine infrastructure is provided by the &lt;a href=&quot;qtqml-index&quot;&gt;Qt QML&lt;/a&gt; module. For in-depth information about the QML language, please see the &lt;a href=&quot;qtqml-index&quot;&gt;Qt QML&lt;/a&gt; module documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e1b11a86955d502c8d2a142e54f7d8e0edd7ad3" translate="yes" xml:space="preserve">
          <source>The QML language provides a number of built-in &lt;a href=&quot;qtqml-typesystem-basictypes&quot;&gt;basic types&lt;/a&gt;, and the Qt Quick module provides various &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-qmlmodule.html&quot;&gt;Qt Quick types&lt;/a&gt; for building QML applications. Types can also be provided by third-party developers through (&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtqml-modules-topic.html&quot;&gt;modules&lt;/a&gt;) or by the application developer in the application itself through &lt;a href=&quot;qtqml-documents-definetypes&quot;&gt;QML Documents&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a5800ec668f0fef9b6b72f20dec707bef00a1ff" translate="yes" xml:space="preserve">
          <source>The QML object which implements the dialog contents. Should be an &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efbf9097041c74eb90b6b3867a6fc3189fb21b4f" translate="yes" xml:space="preserve">
          <source>The QML scene graph back-end may choose to allocate textures in texture atlases. If a texture allocated in an atlas is passed to a &lt;a href=&quot;qml-qtquick-shadereffect&quot;&gt;ShaderEffect&lt;/a&gt;, it is by default copied from the texture atlas into a stand-alone texture so that the texture coordinates span from 0 to 1, and you get the expected wrap modes. However, this will increase the memory usage. To avoid the texture copy, set &lt;a href=&quot;qml-qtquick-shadereffect#supportsAtlasTextures-prop&quot;&gt;supportsAtlasTextures&lt;/a&gt; for simple shaders using qt_MultiTexCoord0, or for each &quot;uniform sampler2D &amp;lt;name&amp;gt;&quot; declare a &quot;uniform vec4 qt_SubRect_&amp;lt;name&amp;gt;&quot; which will be assigned the texture's normalized source rectangle. For stand-alone textures, the source rectangle is [0, 1]x[0, 1]. For textures in an atlas, the source rectangle corresponds to the part of the texture atlas where the texture is stored. The correct way to calculate the texture coordinate for a texture called &quot;source&quot; within a texture atlas is &quot;qt_SubRect_source.xy + qt_SubRect_source.zw * qt_MultiTexCoord0&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cde9d737407f859cba910efb0d3122bd900b4039" translate="yes" xml:space="preserve">
          <source>The QML security model is that QML content is a chain of trusted content: the user installs QML content that they trust in the same way as they install native Qt applications, or programs written with runtimes such as Python and Perl. That trust is establish by any of a number of mechanisms, including the availability of package signing on some platforms.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
