<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="qt">
    <body>
      <group id="qt">
        <trans-unit id="6efbfb139203a9b8644cf4233c74ef51b6ee293a" translate="yes" xml:space="preserve">
          <source>Inhibits playback of media content until the user interacts with the page. This is similar to how Chrome on Android behaves, while the default behavior when it is disabled is similar to Chrome on desktops. (Added in Qt 5.11)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0f22dceb992712a064ab9ebf2c3920a7519d244" translate="yes" xml:space="preserve">
          <source>IniFormat</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef6e7ad6f4fa0e3812855886f2c90348ea8f0261" translate="yes" xml:space="preserve">
          <source>Initial Geometry</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68fa16ffd48f366e4fa8d57fea78ff03fcab0191" translate="yes" xml:space="preserve">
          <source>Initialization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eebad05196a68f7bbfb9a1761a18a965a2ccb2c5" translate="yes" xml:space="preserve">
          <source>Initialization Order</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a459dff3012da591453989e5860a6fd825f63ce3" translate="yes" xml:space="preserve">
          <source>Initialize</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4abf45dd243bbe7824e98ed82fe64af7875e78a" translate="yes" xml:space="preserve">
          <source>Initialize the engine with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afa9262d09ff63d3dee58055cb7585b59156347a" translate="yes" xml:space="preserve">
          <source>Initialize the store</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bb95ccf1a5893b843de797509830d46bb4dbd21" translate="yes" xml:space="preserve">
          <source>Initializes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e8f349d7e1506c8a99b8c16bc3df30aabff4a34" translate="yes" xml:space="preserve">
          <source>Initializes &lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; with the native socket descriptor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd3d9700d2fef4e1923646807705041b3a119926" translate="yes" xml:space="preserve">
          <source>Initializes &lt;a href=&quot;qlocalsocket&quot;&gt;QLocalSocket&lt;/a&gt; with the native socket descriptor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06ea3bb0f7d5f30d6d43b0a93d126200235dc3cf" translate="yes" xml:space="preserve">
          <source>Initializes &lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; with the native socket descriptor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62d0fd5ab23bb781533fc29d425744bcc8b37670" translate="yes" xml:space="preserve">
          <source>Initializes XY-series coordinate data. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d9b2ab20b376dd39dd4836bddc6d5aee6c88df5" translate="yes" xml:space="preserve">
          <source>Initializes parts of the seat corresponding to the capabilities set in the constructor, or through setCapabilities().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ed19383d0a866bf81dc2a8bf40d1563412b85cf" translate="yes" xml:space="preserve">
          <source>Initializes the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fe573719320be099afe43f6895dc10fe6aa572a" translate="yes" xml:space="preserve">
          <source>Initializes the &lt;a href=&quot;qmaskgenerator&quot;&gt;QMaskGenerator&lt;/a&gt; by seeding the randomizer. When seed() is not called, it depends on the specific implementation of a subclass if a default seed is used or no seed is used at all. Returns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1cce7a6ef51671d104a37772f41c0e438f61fdc" translate="yes" xml:space="preserve">
          <source>Initializes the &lt;a href=&quot;qml-qtwayland-compositor-ivisurface&quot;&gt;IviSurface&lt;/a&gt;, associating it with the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afbb961c49ce795beb16b5b3b742482b0e24b62a" translate="yes" xml:space="preserve">
          <source>Initializes the &lt;a href=&quot;qml-qtwayland-compositor-waylandsurface&quot;&gt;WaylandSurface&lt;/a&gt; with the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ee7798dedf806ed466bd8af7dba9da69128d16f" translate="yes" xml:space="preserve">
          <source>Initializes the &lt;a href=&quot;qml-qtwayland-compositor-wlshell&quot;&gt;WlShell&lt;/a&gt; extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d982f00ff367ed673fafed13f64c6e096f58d332" translate="yes" xml:space="preserve">
          <source>Initializes the &lt;a href=&quot;qml-qtwayland-compositor-wlshellsurface&quot;&gt;WlShellSurface&lt;/a&gt; and associates it with the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17d073ff2986cccd09adf68241dd632b7dd65cd9" translate="yes" xml:space="preserve">
          <source>Initializes the &lt;a href=&quot;qml-qtwayland-compositor-xdgsurface&quot;&gt;XdgSurface&lt;/a&gt;, associating it with the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dec954a5ece2c4ea1083a3fdee466fafedd58be0" translate="yes" xml:space="preserve">
          <source>Initializes the &lt;a href=&quot;qml-qtwayland-compositor-xdgsurfacev5&quot;&gt;XdgSurfaceV5&lt;/a&gt;, associating it with the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e2123f59d93f3278e6c721346a0667f7bc4b006" translate="yes" xml:space="preserve">
          <source>Initializes the &lt;a href=&quot;qstyleoption#state-var&quot;&gt;state&lt;/a&gt;, &lt;a href=&quot;qstyleoption#direction-var&quot;&gt;direction&lt;/a&gt;, &lt;a href=&quot;qstyleoption#rect-var&quot;&gt;rect&lt;/a&gt;, &lt;a href=&quot;qstyleoption#palette-var&quot;&gt;palette&lt;/a&gt;, &lt;a href=&quot;qstyleoption#fontMetrics-var&quot;&gt;fontMetrics&lt;/a&gt; and &lt;a href=&quot;qstyleoption#styleObject-var&quot;&gt;styleObject&lt;/a&gt; member variables based on the specified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a7541886d0a4cf4cbaa88b409f4a0127062d8ea" translate="yes" xml:space="preserve">
          <source>Initializes the &lt;a href=&quot;qwaylandcompositor&quot;&gt;QWaylandCompositor&lt;/a&gt;. If you override this function in your subclass, be sure to call the base class implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="058f7d8700eaeebb414f55176500d073b95a0815" translate="yes" xml:space="preserve">
          <source>Initializes the &lt;a href=&quot;qwaylandivisurface&quot;&gt;QWaylandIviSurface&lt;/a&gt;, associating it with the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dd523b570687d21a92e96d43ac413bc5ac62fbb" translate="yes" xml:space="preserve">
          <source>Initializes the &lt;a href=&quot;qwaylandsurface&quot;&gt;QWaylandSurface&lt;/a&gt; with the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a40820eca443e2989610edd91c65f15a401a448f" translate="yes" xml:space="preserve">
          <source>Initializes the &lt;a href=&quot;qwaylandwlshellsurface&quot;&gt;QWaylandWlShellSurface&lt;/a&gt; and associates it with the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3d9bd4cbb662e8d3a4336c762fbbf056b8b1d03" translate="yes" xml:space="preserve">
          <source>Initializes the &lt;a href=&quot;qwaylandxdgpopupv5&quot;&gt;QWaylandXdgPopupV5&lt;/a&gt;, associating it with the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49a35e3f0e45df67d3f853696293a5a612c98153" translate="yes" xml:space="preserve">
          <source>Initializes the &lt;a href=&quot;qwaylandxdgsurface&quot;&gt;QWaylandXdgSurface&lt;/a&gt;, associating it with the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca7fe4c280b9e6338de64ec3dc34bc70da4a8df4" translate="yes" xml:space="preserve">
          <source>Initializes the &lt;a href=&quot;qwaylandxdgsurfacev5&quot;&gt;QWaylandXdgSurfaceV5&lt;/a&gt;, associating it with the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94da4654117218e160d46a96e5c39c0e1fc3cefa" translate="yes" xml:space="preserve">
          <source>Initializes the &lt;a href=&quot;qwaylandxdgsurfacev6&quot;&gt;QWaylandXdgSurfaceV6&lt;/a&gt;, associating it with the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="475fc4d926467a34b710b582f856cb7585d8254a" translate="yes" xml:space="preserve">
          <source>Initializes the NFC share</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d24f5513f35703af902e9c27b0161539e92b7b73" translate="yes" xml:space="preserve">
          <source>Initializes the Vulkan library and creates a new or adopts and existing Vulkan instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eed45a2d8d5c399b4a73a0fe97a155df2c0a1f4" translate="yes" xml:space="preserve">
          <source>Initializes the appearance of the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1182a5149ed80a12f705d86a86fb742e494b53cc" translate="yes" xml:space="preserve">
          <source>Initializes the categories of the manager engine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4062207bbdfed0957b264c8ad68dd37151e135ff" translate="yes" xml:space="preserve">
          <source>Initializes the categories of the manager.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa0d902d11247807361ab5862a7179412c4dfabe" translate="yes" xml:space="preserve">
          <source>Initializes the data model with the initial values specified by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be3e13ef4ab002d984547f76c2c74decfef4f227" translate="yes" xml:space="preserve">
          <source>Initializes the extension from the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2de4be16cd44f359d9970babc3d6095b5311ff86" translate="yes" xml:space="preserve">
          <source>Initializes the extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6a28a8444fe195e9f196c07d170cffd0f54ed96" translate="yes" xml:space="preserve">
          <source>Initializes the graphics resources used by the blitter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3174ef86cfaa20f24cd9b20b33c80c7bfa7b73de" translate="yes" xml:space="preserve">
          <source>Initializes the object in the current OpenGL context. The context must support the &lt;code&gt;GL_KHR_debug&lt;/code&gt; extension for the initialization to succeed. The object must be initialized before any logging can happen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e37befc1c2df26d532434ddee4b06773874d5976" translate="yes" xml:space="preserve">
          <source>Initializes the resources specified by the &lt;code&gt;.qrc&lt;/code&gt; file with the specified base</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fc6556fc46a019ac7081ba8cd0a635d10205b18" translate="yes" xml:space="preserve">
          <source>Initializes the scene graph resources. The context</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1a65632f4aecb7347a32f6e3b5c45e6f9eda803" translate="yes" xml:space="preserve">
          <source>Initializes the shell extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c27f8a6d9f56c1348a713491db6827b86309e32" translate="yes" xml:space="preserve">
          <source>Initializes the state machine by setting the initial values for &lt;code&gt;&amp;lt;data&amp;gt;&lt;/code&gt; elements and executing any &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tags of the &lt;code&gt;&amp;lt;scxml&amp;gt;&lt;/code&gt; tag. The initial data values are taken from the &lt;a href=&quot;qml-qtscxml-scxmlstatemachine#initialValues-prop&quot;&gt;initialValues&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1319b4a79b67a938c15a452d806e66afe48c04cc" translate="yes" xml:space="preserve">
          <source>Initializes the state machine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="223acdc468ecf450fb1c3f6bd81bcbc7c558985c" translate="yes" xml:space="preserve">
          <source>Initializes the table data. Returns the ID of the container with instructions to be executed when initializing the state machine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e76011b2adbeb4a58c4b0aeb11fdff603b3d14ad" translate="yes" xml:space="preserve">
          <source>Initializes the widget for use with the specified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26b402e11e88cda5df91d2e1ed15283198827a15" translate="yes" xml:space="preserve">
          <source>Initializes the window (sets the geometry etc.) if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab97261c06bde00fd91a72d38e3f955697434c37" translate="yes" xml:space="preserve">
          <source>Initializes the window system and constructs an application object with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24ffb716f8b33716e491af445eab03c0499eb5b0" translate="yes" xml:space="preserve">
          <source>Initializes the xdg popup, associating it with the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d12d7975049436be26d5749e7fd8cd1831da1cd" translate="yes" xml:space="preserve">
          <source>Initializes this &lt;a href=&quot;qcborarray&quot;&gt;QCborArray&lt;/a&gt; from the C++ brace-enclosed list found in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1767a0026d258ef56512e08831a51211840c153" translate="yes" xml:space="preserve">
          <source>Initializes this &lt;a href=&quot;qrandomgenerator&quot;&gt;QRandomGenerator&lt;/a&gt; object with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="509cf391657db0fe8e12b9485597f238f1f61c39" translate="yes" xml:space="preserve">
          <source>Initializes this &lt;a href=&quot;qrandomgenerator&quot;&gt;QRandomGenerator&lt;/a&gt; object with the seed sequence</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40d86e64cd6749e18ca89b97d3604fe2481a50a8" translate="yes" xml:space="preserve">
          <source>Initializes this &lt;a href=&quot;qrandomgenerator&quot;&gt;QRandomGenerator&lt;/a&gt; object with the value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56bb7d364cb74695056c20f91cec85ac24571e1e" translate="yes" xml:space="preserve">
          <source>Initializes this &lt;a href=&quot;qrandomgenerator&quot;&gt;QRandomGenerator&lt;/a&gt; object with the values found in the array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01394751693a81ce6b98794973672379b21e5438" translate="yes" xml:space="preserve">
          <source>Initializes this &lt;a href=&quot;qrandomgenerator&quot;&gt;QRandomGenerator&lt;/a&gt; object with the values found in the range from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ec2f2ac1394df865a664e65adca819e4fc833e3" translate="yes" xml:space="preserve">
          <source>Initializing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67070d9cf497aadd0e6b777fb95a6c9f239a8507" translate="yes" xml:space="preserve">
          <source>Initializing Web Engine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aff7fb301fc912ff8d80cb0bddddb894a8d80cf6" translate="yes" xml:space="preserve">
          <source>Initializing a Manager</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f6604f168dc8ea651fbab2de5869be2cd40bf07" translate="yes" xml:space="preserve">
          <source>Initializing a String</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcdb435cdb6780489f346420155af3a93d0eb96e" translate="yes" xml:space="preserve">
          <source>Initiates a connection to the host given by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f36c50c0b3876b8a544708d7432a7f97dc084462" translate="yes" xml:space="preserve">
          <source>Initiates an update of all configurations. This may be used to initiate WLAN scans or other time consuming updates which may be required to obtain the correct state for configurations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e5601809169319c71d21acf6cd1333a69876896" translate="yes" xml:space="preserve">
          <source>Initiates the capture of an image to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b350bdca8d0f4f1f5a0c137ea3078123eb5833a3" translate="yes" xml:space="preserve">
          <source>Initiates the discovery of the services, characteristics and descriptors contained by the service. The discovery process is indicated via the &lt;a href=&quot;qlowenergyservice#stateChanged&quot;&gt;stateChanged&lt;/a&gt;() signal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eecbfb4b78bd11c44af64e215bac10ed74393f3" translate="yes" xml:space="preserve">
          <source>Initiates the service discovery process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d6d3f45dc5b9b6910b4dfb696aa7762f1965eeb" translate="yes" xml:space="preserve">
          <source>Inkscape</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87a57b64eef207df9b28bc5b5f9730c03c3e352d" translate="yes" xml:space="preserve">
          <source>Inline citation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf6cd114caf68cbe31732ed02140d3a21069d266" translate="yes" xml:space="preserve">
          <source>Inline components share all the characteristics of regular top-level components and use the same &lt;code&gt;import&lt;/code&gt; list as their containing QML document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a03194cb3e95a7131f5647448f8b8004994bc6a" translate="yes" xml:space="preserve">
          <source>Inline images are added to documents through the cursor in the usual manner. Unlike many other elements, all of the image properties are specified by the image's format. This means that a &lt;a href=&quot;qtextimageformat&quot;&gt;QTextImageFormat&lt;/a&gt; object has to be created before an image can be inserted:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0033b4871ab0a7e7eb43f700b61f4122e65dc48f" translate="yes" xml:space="preserve">
          <source>Inline images are inserted with &lt;a href=&quot;qtextcursor#insertImage&quot;&gt;insertImage&lt;/a&gt;(). The image to be used can be specified in an image format, or by name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="558d7c1d83a2bbc58177be80336d99736aa3ff76" translate="yes" xml:space="preserve">
          <source>Inline images are represented by a Unicode value U+FFFC (OBJECT REPLACEMENT CHARACTER) which has an associated &lt;a href=&quot;qtextimageformat&quot;&gt;QTextImageFormat&lt;/a&gt;. The image format specifies a name with &lt;a href=&quot;qtextimageformat#setName&quot;&gt;setName&lt;/a&gt;() that is used to locate the image. The size of the rectangle that the image will occupy is specified in pixels using &lt;a href=&quot;qtextimageformat#setWidth&quot;&gt;setWidth&lt;/a&gt;() and &lt;a href=&quot;qtextimageformat#setHeight&quot;&gt;setHeight&lt;/a&gt;(). The desired image quality may be set with &lt;a href=&quot;qtextimageformat#setQuality&quot;&gt;setQuality&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92089040ac1a61479164c6e83fa982f63f92d5ef" translate="yes" xml:space="preserve">
          <source>InnerShadow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="144a9203ae9970a3c95d4297ecf5356019b64d29" translate="yes" xml:space="preserve">
          <source>InnerShadow (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb2a24b10d757b00a4d80aef486a1b9d3e3e69a1" translate="yes" xml:space="preserve">
          <source>InnerShadow QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2163a2dfc4b9743c35808529b6212ebca3142389" translate="yes" xml:space="preserve">
          <source>InnerShadow.cached</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c17f60cea80cb697ef6af1f8323198d54651f69f" translate="yes" xml:space="preserve">
          <source>InnerShadow.color</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9abdee11bcb6da9387cab85daff3fed6c6fb577" translate="yes" xml:space="preserve">
          <source>InnerShadow.fast</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31d89499d0b169541f952014886f463e7e9ecdd0" translate="yes" xml:space="preserve">
          <source>InnerShadow.horizontalOffset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="166c49d8cb6c921319262b4cb420c74dfc264219" translate="yes" xml:space="preserve">
          <source>InnerShadow.radius</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4764ba33cff4e97bf198a6d4704f73f04382a12f" translate="yes" xml:space="preserve">
          <source>InnerShadow.samples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="613c81c039fbbc8d9d4ef4716e462e40cec0e9c6" translate="yes" xml:space="preserve">
          <source>InnerShadow.source</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e3381c5bd395a27090ca2f8b9c3110d057faf57" translate="yes" xml:space="preserve">
          <source>InnerShadow.spread</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="026eb8bc010dd0ddf31890a711b07b62775d0f23" translate="yes" xml:space="preserve">
          <source>InnerShadow.verticalOffset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b568d47f2e244743b1fd7472db836ef9769c21f8" translate="yes" xml:space="preserve">
          <source>Input</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac0015e5c74d80553e3530ff3e217c6bf797cb95" translate="yes" xml:space="preserve">
          <source>Input Context</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1271c02cd73e810aa188d561e300b84284c39f0" translate="yes" xml:space="preserve">
          <source>Input Controls</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa1937aa91395a1e868f30ffd6168133d6c6f24a" translate="yes" xml:space="preserve">
          <source>Input Engine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c7935726f449ea7185a4fe42a9ddf2d1c53a2e4" translate="yes" xml:space="preserve">
          <source>Input Format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b07d4b572f43d2058559c11460d63995cabe0f5" translate="yes" xml:space="preserve">
          <source>Input Handlers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="333b7fd0c7827ba8609e6d31aeb85af7bf82f3ba" translate="yes" xml:space="preserve">
          <source>Input Iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73b1ccf23a930e927de30db6726f3f1c99afb24e" translate="yes" xml:space="preserve">
          <source>Input Iterators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c832b9a83d2bb0ad9220d7a1b8e4282f0d2cfae9" translate="yes" xml:space="preserve">
          <source>Input Method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4caf48be08ee4d4640e3d4e2ebf37900c176819b" translate="yes" xml:space="preserve">
          <source>Input Registers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="630cbac3ad3755357bd8db01e781e15971700af2" translate="yes" xml:space="preserve">
          <source>Input Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e8d1bed03a72c7e71716a0b97e83c234649a8df" translate="yes" xml:space="preserve">
          <source>Input and Output Directories</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b757636431213341ebb795a69c016efd93aa7981" translate="yes" xml:space="preserve">
          <source>Input and Output Slots</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c834868e950e8af5aacb354cba71ebdfd9e18c4" translate="yes" xml:space="preserve">
          <source>Input direction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4f5c7d6b866f52a49539180abd078bafae2b79d" translate="yes" xml:space="preserve">
          <source>Input is accepected but invalid if it contains a double that is outside the range or is in the wrong format; e.g. with too many digits after the decimal point or is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0409c1bfd4c379baaa87d075e79d1f40e1f1d98f" translate="yes" xml:space="preserve">
          <source>Input is accepted if it contains a double that is within the valid range and is in the correct format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c890e943e4ad68f2175311d55367bee77d32e2c" translate="yes" xml:space="preserve">
          <source>Input is rejected if it is not a double.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de2264ab3b2bcd2184502ff19273375afde539b2" translate="yes" xml:space="preserve">
          <source>Input item's anchor rectangle in window coordinates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea018a689f5347f6c3f1a0636c3c43007552e612" translate="yes" xml:space="preserve">
          <source>Input item's clipped rectangle in window coordinates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e9d47d662becc4c942a31860c44b11d2a4977c6" translate="yes" xml:space="preserve">
          <source>Input item's cursor rectangle in window coordinates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="306358eb0be522de8dc7cc70ce7729cd8bd6cbf1" translate="yes" xml:space="preserve">
          <source>Input method events are sent to widgets when an input method is used to enter text into a widget. Input methods are widely used to enter text for languages with non-Latin alphabets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d41c8ca7074f88695b31a0c746d861370b2a3524" translate="yes" xml:space="preserve">
          <source>Input method hints are only relevant for input items. The hints are used by the input method to indicate how it should operate. For example, if the Qt::ImhNumbersOnly flag is set, the input method may change its visual components to reflect that only numbers can be entered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ced5652bdaa293bf5eb732f6f4c3292b9e9f63f" translate="yes" xml:space="preserve">
          <source>Input method resets automatically when the focused editor changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7b041bea8e68e191063d6b4b93f72b9c5a45284" translate="yes" xml:space="preserve">
          <source>Input method visibility remains false for devices with no virtual keyboards.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="405f385dfd57c681716454296b661073e4cb4a07" translate="yes" xml:space="preserve">
          <source>Input mode key for keyboard layouts. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a343bb89c3ec36d913e79bb804e6827c906aa194" translate="yes" xml:space="preserve">
          <source>Input on eglfs and linuxfb without libinput</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c754bdb242994cfab8ec325a68c875efd5153579" translate="yes" xml:space="preserve">
          <source>Input on eglfs and vxworksfb</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de8e8d91456e58508a8d3a8baa77d1ba0980c2ba" translate="yes" xml:space="preserve">
          <source>Input parameters provided by a caller were invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00cb4cbd328dfa0f86df8f7f34caf0a61c392a74" translate="yes" xml:space="preserve">
          <source>Input settings: 8000Hz mono 8 bit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="697a5c08e8aa9685caa6eee4b835a4adb4e26785" translate="yes" xml:space="preserve">
          <source>Input validation current input invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1260328b7533264fd35ef7962915ac47269a5309" translate="yes" xml:space="preserve">
          <source>Input-Only Slots</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a59cf5de1b55efe5bae6bfe33cc2c1149be4ffc" translate="yes" xml:space="preserve">
          <source>Input-and-output</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d408580a2921053731ae01e143323d5eea428079" translate="yes" xml:space="preserve">
          <source>Input-only</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c78e94f12f144f0f7beca7fe61d47a09e99ff225" translate="yes" xml:space="preserve">
          <source>Input-only slots are normal slots that take parameters passed by value or by constant reference. However, unlike asynchronous slots, the caller is usually waiting for completion of the callee before resuming operation. Therefore, non-asynchronous slots should not block or should state it its documentation that they may do so.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1694af6c5d2495745545b92121763f8e24b43d55" translate="yes" xml:space="preserve">
          <source>Input-only slots have no special marking in their signature, except that they take only parameters passed by value or by constant reference. Optionally, slots can take a &lt;a href=&quot;qdbusmessage&quot;&gt;QDBusMessage&lt;/a&gt; parameter as a last parameter, which can be used to perform additional analysis of the method call message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be5d8808b1ce655309c4e5c932138758bc6bac02" translate="yes" xml:space="preserve">
          <source>Input/Output Classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="949121c99810ed287c6a203abd9da9d7e425f3a0" translate="yes" xml:space="preserve">
          <source>Input/Output and Networking</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2626d07211964885b26430d9d3c56f8d15a73494" translate="yes" xml:space="preserve">
          <source>Input/Output, Resources, and Containers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90f2eb87ff0368028410ff3fef44a013c20d7150" translate="yes" xml:space="preserve">
          <source>InputChord</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="333584d09179c9def45ee9f03ce6c50dc2a7543b" translate="yes" xml:space="preserve">
          <source>InputChord (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b810f3cd53f50cb3dc1ffce89d374a9122a8784" translate="yes" xml:space="preserve">
          <source>InputChord QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11e3b4240d7f1854493bfa5c7388aa288182e4cf" translate="yes" xml:space="preserve">
          <source>InputChord.chords</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ad3ed34337d9b9c861c47d288b2371706ce8ec5" translate="yes" xml:space="preserve">
          <source>InputChord.timeout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68ba2930e5df7d3ec65a9fe833276d8bb9ab6050" translate="yes" xml:space="preserve">
          <source>InputContext</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e4bc477c7c780373f77023e18b4de660e144ed5" translate="yes" xml:space="preserve">
          <source>InputContext (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e90999b4741c707a649d09fbddd9e775f4e13f6a" translate="yes" xml:space="preserve">
          <source>InputContext QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="876534f3f7c25cc4ebf638694a645e2e6203e8ec" translate="yes" xml:space="preserve">
          <source>InputContext.anchorPosition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bead8ebb110b733da8dd730051e691380837a06" translate="yes" xml:space="preserve">
          <source>InputContext.anchorRectIntersectsClipRect</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f28e14a2cec6d61eaba2c60c637b4826d35f8796" translate="yes" xml:space="preserve">
          <source>InputContext.anchorRectangle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6abf1fcc578d6e0a032e50121abbe41646dd8619" translate="yes" xml:space="preserve">
          <source>InputContext.animating</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0faa46970679f166053c8cf7add3d086f1a4ac92" translate="yes" xml:space="preserve">
          <source>InputContext.capsLockActive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c597188e4a41931ca08aa77ccb9a0df385ab93f" translate="yes" xml:space="preserve">
          <source>InputContext.clear()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bbd4858329f0a71a574179f893336c96791b3d7" translate="yes" xml:space="preserve">
          <source>InputContext.commit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2636cc74e3f2e4b978ea1882bdd67badbfd3a579" translate="yes" xml:space="preserve">
          <source>InputContext.cursorPosition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61088dd41d2a1e43cbd2b0d2b6776e86ca6d269d" translate="yes" xml:space="preserve">
          <source>InputContext.cursorRectIntersectsClipRect</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fb3d90b4f0530bb578729731c21700d3002bd7d" translate="yes" xml:space="preserve">
          <source>InputContext.cursorRectangle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ace99459fa4b0aadac0573e49b7171d8f0af48da" translate="yes" xml:space="preserve">
          <source>InputContext.inputEngine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0a6c59b432903d6cff051d6aae207cc9cda1b04" translate="yes" xml:space="preserve">
          <source>InputContext.inputMethodHints</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0a3ecf6bc6afbb5e4930e17ff6684f32a7f5de6" translate="yes" xml:space="preserve">
          <source>InputContext.locale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b776f1504c460b6a68358e16ec319a768f63ab3f" translate="yes" xml:space="preserve">
          <source>InputContext.preeditText</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fa6e5c493292e860e440c5b3a6100f1bda138dd" translate="yes" xml:space="preserve">
          <source>InputContext.selectedText</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3fb6e9d060a115f2eab2295383b7a6d6dde9252" translate="yes" xml:space="preserve">
          <source>InputContext.selectionControlVisible</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53f45f3135ded37b4daa299b68c68dd204e5d163" translate="yes" xml:space="preserve">
          <source>InputContext.sendKeyClick()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3506aea06a66e7fda32d69dfcf3644bf14510abc" translate="yes" xml:space="preserve">
          <source>InputContext.shiftActive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="535c24afce9bc2a23849141a902374699ddac204" translate="yes" xml:space="preserve">
          <source>InputContext.surroundingText</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6ef2ae2b3376a7a8f59231837280b8a8c7cd34d" translate="yes" xml:space="preserve">
          <source>InputContext.uppercase</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86bb18354e7faf2b29c2c32112ba17fd77867ced" translate="yes" xml:space="preserve">
          <source>InputContext::cursorPosition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5165cbe436d21440f5b51f08feebb1878910d237" translate="yes" xml:space="preserve">
          <source>InputContext::cursorRectangle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71fa594adc93edee49ead9fd86f132411c6b0a12" translate="yes" xml:space="preserve">
          <source>InputContext::inputMethodHints</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5a48b05dc6829cf50c70504f66135d0bafa39a7" translate="yes" xml:space="preserve">
          <source>InputContext::preeditText</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ee3df25328cf2bc88b1fc5d7929810cb6c59f43" translate="yes" xml:space="preserve">
          <source>InputContext::selectedText</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04a14f4254f63c1f60330b61fde6cbdb58f6bcff" translate="yes" xml:space="preserve">
          <source>InputContext::surroundingText</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f21b24197cc55bde4c5128008926c510ae74155" translate="yes" xml:space="preserve">
          <source>InputEngine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49060788190de6290786055fdec3866633e24c7a" translate="yes" xml:space="preserve">
          <source>InputEngine (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0325073e707cb55517126135386909e46762480" translate="yes" xml:space="preserve">
          <source>InputEngine QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75d50190a2ee879136569dfd03827598be859686" translate="yes" xml:space="preserve">
          <source>InputEngine.activeKey</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5edbb7d347786744aa6637e1430a98d7ebf2caf6" translate="yes" xml:space="preserve">
          <source>InputEngine.activeKeyChanged()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23f571fe9c8963be911f59817e377d0a40dd537e" translate="yes" xml:space="preserve">
          <source>InputEngine.inputMethod</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="977ac40d94c5866295a7894285324149b672f6ea" translate="yes" xml:space="preserve">
          <source>InputEngine.inputMethodChanged()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f87a2af41afbcd5c146808a21ef2d7327a01e41" translate="yes" xml:space="preserve">
          <source>InputEngine.inputMethodReset()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d9712cb1705c774fbbe6b3261781ebfb5e727d7" translate="yes" xml:space="preserve">
          <source>InputEngine.inputMethodUpdate()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7e24d8cd944de29ddd58645e2c8aa04b060d77a" translate="yes" xml:space="preserve">
          <source>InputEngine.inputMode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="361beba22495c6067b550cdf687cc48a3c1e3823" translate="yes" xml:space="preserve">
          <source>InputEngine.inputModeChanged()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cfb3581a72c073b2ca6803f4fab6135a60185ac" translate="yes" xml:space="preserve">
          <source>InputEngine.inputModes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d3898e8937b4412b5a53baecbeb68376ac65cdd" translate="yes" xml:space="preserve">
          <source>InputEngine.inputModesChanged()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5b09542f8364670483dd3555b3f75c71f768056" translate="yes" xml:space="preserve">
          <source>InputEngine.patternRecognitionModes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da94d3d520529de97a65e1b0161d0b80fa199126" translate="yes" xml:space="preserve">
          <source>InputEngine.patternRecognitionModesChanged()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="572ed5b41b878eb4ebdd14ab31f128f6abcddd25" translate="yes" xml:space="preserve">
          <source>InputEngine.previousKey</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3520bec6c0b827836fb33ae61272479f7765db14" translate="yes" xml:space="preserve">
          <source>InputEngine.previousKeyChanged()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6c4336404bc41d644636a644abb2ce9f8f71907" translate="yes" xml:space="preserve">
          <source>InputEngine.traceBegin()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a282dc7c8398edd0b45025553d1a7db760b5a78" translate="yes" xml:space="preserve">
          <source>InputEngine.traceEnd()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eb2079d36e3bacb5d87090e8be77c22234590b8" translate="yes" xml:space="preserve">
          <source>InputEngine.virtualKeyCancel()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7b3ae398146c1c3df14a2f729b9151608fccb48" translate="yes" xml:space="preserve">
          <source>InputEngine.virtualKeyClick()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56933581d94b34267ae1ccb1de512a8687511d7c" translate="yes" xml:space="preserve">
          <source>InputEngine.virtualKeyClicked()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e154a275816cd46eaee04536fba67cfa932d51fd" translate="yes" xml:space="preserve">
          <source>InputEngine.virtualKeyPress()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d653887176e9a505357e8dbcdd2cf583baa9d3f" translate="yes" xml:space="preserve">
          <source>InputEngine.virtualKeyRelease()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad2bbaed4025ecee69be794384fbd457c30d1fe6" translate="yes" xml:space="preserve">
          <source>InputEngine.wordCandidateListModel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="024dccbfbf706c8442ae278a939b2a03ce6b0989" translate="yes" xml:space="preserve">
          <source>InputEngine.wordCandidateListVisibleHint</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="809b262ba5892b671d28933690a239d320c2e5d5" translate="yes" xml:space="preserve">
          <source>InputHandler3D</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d305f71b045eec856362e9ba80b091a500d407d6" translate="yes" xml:space="preserve">
          <source>InputHandler3D (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb82dbc9916aa1c0b68c4037257ae205238bef1f" translate="yes" xml:space="preserve">
          <source>InputHandler3D QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96022664e6a1d4096feaae1ee27c39e98fe7fa12" translate="yes" xml:space="preserve">
          <source>InputHandler3D.rotationEnabled</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e82bdcf830b80b013ef129d6af1832b76cb2dd2e" translate="yes" xml:space="preserve">
          <source>InputHandler3D.selectionEnabled</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55777c2c65992b1484472c5e2bedf79943b6dffd" translate="yes" xml:space="preserve">
          <source>InputHandler3D.zoomAtTargetEnabled</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f34c6ad6840ece29511fd06c941707ec98d4c6f1" translate="yes" xml:space="preserve">
          <source>InputHandler3D.zoomEnabled</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3afb43ba20953a8a1e9894df3bf68810c93eef8" translate="yes" xml:space="preserve">
          <source>InputMethod (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="493a07a2d76717bdf6a43db1244ef263d2989fae" translate="yes" xml:space="preserve">
          <source>InputMethod QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fa8dd440d62ba86fab10712f11659946606161c" translate="yes" xml:space="preserve">
          <source>InputMethod.clickPreeditText()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b6e2681ef922a771e9f975c695bacf09109d92d" translate="yes" xml:space="preserve">
          <source>InputMethod.inputContext</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec42bae9dd05e30d9519164bb9ec25c9558f324f" translate="yes" xml:space="preserve">
          <source>InputMethod.inputEngine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa62e0309d6a4d839ba2ac6ff05788fdce6a440c" translate="yes" xml:space="preserve">
          <source>InputMethod.inputModes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7391263ddbc45e2264e3b1f037eaa48dcb8f7792" translate="yes" xml:space="preserve">
          <source>InputMethod.keyEvent()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc05efc7e794a0b8adbfc322e83577028d6eafc3" translate="yes" xml:space="preserve">
          <source>InputMethod.patternRecognitionModes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5393bad0a2f03f82e49f261d9963c2d46148aef2" translate="yes" xml:space="preserve">
          <source>InputMethod.reselect()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc9c837f8afc01c21584b5ead32c474237ae6349" translate="yes" xml:space="preserve">
          <source>InputMethod.reset()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="507c42c54ff93483038d18c4eeaef91bfa11e43c" translate="yes" xml:space="preserve">
          <source>InputMethod.selectionListActiveItemChanged()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc8e894449ff044ecd27e610db603d0ba721b5ff" translate="yes" xml:space="preserve">
          <source>InputMethod.selectionListChanged()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06e9a19b32ba78c454c55db208fcb0a25e48801c" translate="yes" xml:space="preserve">
          <source>InputMethod.selectionListData()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e5bee1981e2f4164bd033628d7c8434690d1407" translate="yes" xml:space="preserve">
          <source>InputMethod.selectionListItemCount()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dacdd3b16bc7e0a1d5b1917ea8468e02dd3f15e" translate="yes" xml:space="preserve">
          <source>InputMethod.selectionListItemSelected()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fff512ad39b3adb0038ba53f103726bc484db4b" translate="yes" xml:space="preserve">
          <source>InputMethod.selectionLists()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85daaa533b19cfbb94c80f3c51d7a3c270bf7c64" translate="yes" xml:space="preserve">
          <source>InputMethod.selectionListsChanged()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e85ad163f431212f7529fd93484768c1717f435e" translate="yes" xml:space="preserve">
          <source>InputMethod.setInputMode()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be8981cd7641e2d358a2841ff10b011d15d4e9f6" translate="yes" xml:space="preserve">
          <source>InputMethod.setTextCase()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea28899a7523123a5329ec60249c782bf58148cf" translate="yes" xml:space="preserve">
          <source>InputMethod.traceBegin()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8b0447ddfd64779166cbe6ed7b899ad393790fb" translate="yes" xml:space="preserve">
          <source>InputMethod.traceEnd()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8585abef66e8a060ba2d2837fdfeda9201d7486c" translate="yes" xml:space="preserve">
          <source>InputMethod.update()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6ca3cd9c32a62f7cbe2a75232e5a2c752c42373" translate="yes" xml:space="preserve">
          <source>InputModeKey (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="993dfd34cd8a69f3752d89b80c4266dcdc0e43fb" translate="yes" xml:space="preserve">
          <source>InputModeKey QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a001574dbcb1feea20e86daf127c19e5a91404f" translate="yes" xml:space="preserve">
          <source>InputModeKey.inputModeCount</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f5a93302271e9c1ae80c966ef727389fbcda620" translate="yes" xml:space="preserve">
          <source>InputModeKey.inputModeNameList</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96c941e104d7ce73dcfe856dc6af3e1df3e7bcd5" translate="yes" xml:space="preserve">
          <source>InputModeKey.inputModes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52c0e8767c6d8395410906641b0a7a7af95c039a" translate="yes" xml:space="preserve">
          <source>InputPanel (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8c6a05e0f51ac26e32627bebfff018bf3f8e877" translate="yes" xml:space="preserve">
          <source>InputPanel QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="711805444ca1d8ae9e10baf34cdd9a592eff5d1f" translate="yes" xml:space="preserve">
          <source>InputPanel.active</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7f7194ee164d918bc1655316b4126f0f007ec95" translate="yes" xml:space="preserve">
          <source>InputPanel.externalLanguageSwitch()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f558b3a6441c46ef37afb6dcdc092c80ddd9708" translate="yes" xml:space="preserve">
          <source>InputPanel.externalLanguageSwitchEnabled</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16b21fc0092e26f0c4f1508a40599ae0e8218631" translate="yes" xml:space="preserve">
          <source>InputSequence</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d700cbee4a49ebdbad52cecd030e17a8adcf12e7" translate="yes" xml:space="preserve">
          <source>InputSequence (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31d1fdb966491dfc1bf3f25147592717cfced3d5" translate="yes" xml:space="preserve">
          <source>InputSequence QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="328e530feb9cc34b9ab53ea53a0b7d18560746ab" translate="yes" xml:space="preserve">
          <source>InputSequence.buttonInterval</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="370b96da2f595fc2418cfae2bc1e87a1fad40ed5" translate="yes" xml:space="preserve">
          <source>InputSequence.buttonIntervalChanged()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e456846b8a8933cda4d5272643e69a4359885b61" translate="yes" xml:space="preserve">
          <source>InputSequence.sequences</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1505831de5eac4e3fea9dd5e4b1cf847ed7d24d4" translate="yes" xml:space="preserve">
          <source>InputSequence.timeout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49a3cc7bc9f98e1f8ac1505bc0858a7a3dfeccc2" translate="yes" xml:space="preserve">
          <source>InputSequence.timeoutChanged()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ad1a0e946b8b99b3a86d90205282623d9aaf614" translate="yes" xml:space="preserve">
          <source>InputSettings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38c7ed91cb25903a6be76e13dadf73e7c2ab6c0e" translate="yes" xml:space="preserve">
          <source>InputSettings (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9d9985242b1ff9895b0eb685f0aca97da35025c" translate="yes" xml:space="preserve">
          <source>InputSettings QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="549ff727a07a74df4197508a99550293dafbced9" translate="yes" xml:space="preserve">
          <source>InputSettings.eventSource</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="017843733aaf1c6d01e4308a22ca9b59c84a95a5" translate="yes" xml:space="preserve">
          <source>Insert &lt;a href=&quot;qchar#SpecialCharacter-enum&quot;&gt;QChar::ObjectReplacementCharacter&lt;/a&gt; with the aforementioned &lt;a href=&quot;qtextcharformat&quot;&gt;QTextCharFormat&lt;/a&gt; of the chosen object type into the document. As mentioned, the functions of &lt;a href=&quot;qtextobjectinterface&quot;&gt;QTextObjectInterface&lt;/a&gt;&lt;a href=&quot;qtextobjectinterface#intrinsicSize&quot;&gt;intrinsicSize()&lt;/a&gt; and &lt;a href=&quot;qtextobjectinterface#drawObject&quot;&gt;drawObject()&lt;/a&gt; will then be called with the &lt;a href=&quot;qtextformat&quot;&gt;QTextFormat&lt;/a&gt; as parameter whenever the replacement character is encountered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e332dd436ffbc6ae3d6992c8215224618518d10c" translate="yes" xml:space="preserve">
          <source>Insert a new line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88bbac44122f7566a2061863acc799c0dd7bec57" translate="yes" xml:space="preserve">
          <source>Insert a new paragraph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2777ac60adcb51f775ebdc7ef84daf25a321458c" translate="yes" xml:space="preserve">
          <source>Insert child widgets into the page widget, using layouts to position them as normal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8e8f122308b49e831255efc3842bb79978e11bd" translate="yes" xml:space="preserve">
          <source>Insert multiple media content</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="049933e5f7b8cb51f88265d835c3b6b4ec379deb" translate="yes" xml:space="preserve">
          <source>Insert the media</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf7ca20f56a0fc86a40e46261531228a18dcf2da" translate="yes" xml:space="preserve">
          <source>Insert the required text for the new entry, optionally using the ampersand character (&amp;amp;) to mark the letter to use as a mnemonic for the entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ff923d0fd57af3c5f190784752db14b758b197d" translate="yes" xml:space="preserve">
          <source>Insert the required text for the new menu. Inserting an ampersand character (&amp;amp;) causes the letter following it to be used as a mnemonic for the menu.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e721612d6f674be526cad14291d99a4998591ec" translate="yes" xml:space="preserve">
          <source>InsertLineSeparator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27e844e9c9c56eaa464a95bc94d5820ef1a44895" translate="yes" xml:space="preserve">
          <source>InsertParagraphSeparator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfd696db6b5c75c97a6e32b2c1ab27726dbe25c9" translate="yes" xml:space="preserve">
          <source>Insertable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d055c34c34e9cac85be008baf39f851416e95f20" translate="yes" xml:space="preserve">
          <source>Inserted but not yet successfully submitted rows in the range to be removed are immediately removed from the model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e4a5b30a9104b797ec49936de3a80e09b6f8eae" translate="yes" xml:space="preserve">
          <source>Inserting BLOBs should be done using either a prepared query where the BLOBs are bound to placeholders or &lt;a href=&quot;qsqltablemodel&quot;&gt;QSqlTableModel&lt;/a&gt;, which uses a prepared query to do this internally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="929a6c1e87305bf208f46228f23ab873d4dd4af0" translate="yes" xml:space="preserve">
          <source>Inserting Document Elements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47ac83aa59f1da1d8d3759fc090695d3bb7cfc1a" translate="yes" xml:space="preserve">
          <source>Inserting Messages in the Debug Log</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="414675f9beaef03045ae2e4ac09b8e9f6edcf99d" translate="yes" xml:space="preserve">
          <source>Inserting Objects Into a Layout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2440cda9f0684547c980dfc8b61438340113dd9b" translate="yes" xml:space="preserve">
          <source>Inserting Objects into a Layout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36c78b6dfe851c4941b85410555e50a7cbd11dca" translate="yes" xml:space="preserve">
          <source>Inserting a new tab at an index less than or equal to the current index will increment the current index, but keep the current tab.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="311ed106fe99f132258d907c813ad780525247d6" translate="yes" xml:space="preserve">
          <source>Inserting a new widget at an index less than or equal to the current index will increment the current index, but keep the current widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d018fae5ca1f60660106181cda261ce731fa585d" translate="yes" xml:space="preserve">
          <source>Inserting and removing items at either end of the list is very fast (&lt;a href=&quot;containers#algorithmic-complexity&quot;&gt;constant time&lt;/a&gt; in most cases), because &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; preallocates extra space on both sides of its internal buffer to allow for fast growth at both ends of the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b57f2a63f9f1543ddc50a83cd41644fce40d904" translate="yes" xml:space="preserve">
          <source>Inserting and removing rows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc8a2af0284a2445dcc6376f9e353081c9d437af" translate="yes" xml:space="preserve">
          <source>Inserting dropped data into a model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7858c4f1bdea6b985a53f46c41fdbcd89761f09" translate="yes" xml:space="preserve">
          <source>Inserting the &lt;a href=&quot;qml-qtquick-controls2-applicationwindow&quot;&gt;ApplicationWindow&lt;/a&gt; type is a good starting point for creating applications. An application UI has this basic layout:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38d319ff07fccb09425e8cc817c5230c14a912d8" translate="yes" xml:space="preserve">
          <source>Inserting the item somewhere else in the tree widget follows the same pattern:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff47faa4b492517ff96655872c3560fc91cf3ec0" translate="yes" xml:space="preserve">
          <source>Inserting this macro into your application's source code will allow you to make use of a static plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7dcc187da168e89515228acdcb2bb43a4632b4a" translate="yes" xml:space="preserve">
          <source>Inserting, Updating, and Deleting Records</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ffaeff164e1d6773f39ae8fe9bbe6e6ef734c6a" translate="yes" xml:space="preserve">
          <source>Insertion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="030063c5035f895ea6e15523c4d3b92f7532413a" translate="yes" xml:space="preserve">
          <source>Insertion or removal of characters. A sequence of insertions or removals within the same text block are regarded as a single undo/redo operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdcbda130e3c2e239231ece4b0f6017cc1762321" translate="yes" xml:space="preserve">
          <source>Insertion or removal of text blocks. Sequences of insertion or removals in a single operation (e.g., by selecting and then deleting text) are regarded as a single undo/redo operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08711e711134e579523d56126b09874d8022e4b2" translate="yes" xml:space="preserve">
          <source>Inserts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ffa8e3ce8e2c9bc72adee226e27363130eaff8e" translate="yes" xml:space="preserve">
          <source>Inserts a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="666538d35f9e72e7f681b9c46b2e30461822ddbf" translate="yes" xml:space="preserve">
          <source>Inserts a &lt;a href=&quot;qml-qtquick-controls-menuitem&quot;&gt;MenuItem&lt;/a&gt; with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57e5a6ab1842818093dfd9e796b118adc30bb737" translate="yes" xml:space="preserve">
          <source>Inserts a bar set specified by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2ccd3fb1b90881bf59793e26c854ea524136f42" translate="yes" xml:space="preserve">
          <source>Inserts a box-and-whiskers item specified by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32007474e641da83e80ee7c1f8da707bbc096e29" translate="yes" xml:space="preserve">
          <source>Inserts a column at</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f44d0c11f9b3e84b1150bf09b4e8ba7abfa913b1" translate="yes" xml:space="preserve">
          <source>Inserts a copy of the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="004cd2b9fc6a8963540a36a4658e03e773722fcb" translate="yes" xml:space="preserve">
          <source>Inserts a copy of the pixmap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="249850f335edf3d37f162c9a1c801d844d15f4f3" translate="yes" xml:space="preserve">
          <source>Inserts a frame with the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce0d7b56acb92de95205acb3677485a1af14f6f3" translate="yes" xml:space="preserve">
          <source>Inserts a new block at the current position and makes it the first list item of a newly created list with the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="005743e7a907b9e995ec5dfce20631b7ca614a84" translate="yes" xml:space="preserve">
          <source>Inserts a new box-and-whiskers item with the label specified by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ad57a444deb21bf925f492bc5909ef59fc5f9d7" translate="yes" xml:space="preserve">
          <source>Inserts a new empty block at the cursor &lt;a href=&quot;qtextcursor#position&quot;&gt;position&lt;/a&gt;() with block format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4036e47feb0a404abc32d75b96818d72556dd585" translate="yes" xml:space="preserve">
          <source>Inserts a new empty block at the cursor &lt;a href=&quot;qtextcursor#position&quot;&gt;position&lt;/a&gt;() with the current &lt;a href=&quot;qtextcursor#blockFormat&quot;&gt;blockFormat&lt;/a&gt;() and &lt;a href=&quot;qtextcursor#charFormat&quot;&gt;charFormat&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e721051f14578b1a096f4fbe40010fd2fa1d340" translate="yes" xml:space="preserve">
          <source>Inserts a new item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="904d090893e07c43860b3cb7efeb0341835ca307" translate="yes" xml:space="preserve">
          <source>Inserts a new item to the model at position</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aae53305e62d67ea0f04341ccd14559f84f679d" translate="yes" xml:space="preserve">
          <source>Inserts a new item with the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6458aae6056a635ce777702c80f29788fc478c47" translate="yes" xml:space="preserve">
          <source>Inserts a new item with the key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f2a38cc8aff69d46601ddb98ac9f957e39266bf" translate="yes" xml:space="preserve">
          <source>Inserts a new pair</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a86a38a8eeb9da71361e5368ba6e92b17d0ff40" translate="yes" xml:space="preserve">
          <source>Inserts a new row at position</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe203080297fca53fca9412d4f4b5a15292f004f" translate="yes" xml:space="preserve">
          <source>Inserts a new tab at</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cef97f5ec3e2048c35373b68adc95ee09d2613c" translate="yes" xml:space="preserve">
          <source>Inserts a new tab with icon</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00e9e66d7b154df52288f053a7bd72bdb65a90f6" translate="yes" xml:space="preserve">
          <source>Inserts a new tab with text</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8625cc334af9cc17899f9c463c1a87d3c3b50b21" translate="yes" xml:space="preserve">
          <source>Inserts a non-stretchable space (a &lt;a href=&quot;qspaceritem&quot;&gt;QSpacerItem&lt;/a&gt;) at position</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9143a99c7c686e660d1b32185e2a6fedb3ad28af" translate="yes" xml:space="preserve">
          <source>Inserts a number of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b32b7f80e8ab5f9458ccff8f1dfe38bed28d44f9" translate="yes" xml:space="preserve">
          <source>Inserts a pause of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d15f6784feaab6dbe74b9cae4b7396a0f13858a" translate="yes" xml:space="preserve">
          <source>Inserts a point with the coordinates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f90c88446f9e2127a69e890f89962644c2825c6" translate="yes" xml:space="preserve">
          <source>Inserts a row at</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49ed5db5f98b7193edf45a862e85968dad1dc48a" translate="yes" xml:space="preserve">
          <source>Inserts a separator into the toolbar in front of the toolbar item associated with the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d75841191c95c1229bdc8d9d89870ae4ef922ab" translate="yes" xml:space="preserve">
          <source>Inserts a separator item into the combobox at the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba0b65800f6d94866fd2560180cc0cd47972b924" translate="yes" xml:space="preserve">
          <source>Inserts a single column before the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08381782b774ead36f01ed8cfac832f4a6e68b60" translate="yes" xml:space="preserve">
          <source>Inserts a single row before the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c63f6fbfb9bea00adacff556f59392fd9a533807" translate="yes" xml:space="preserve">
          <source>Inserts a stretch of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68579c5099b8eb9ae76a39a29b89a9330ba9821a" translate="yes" xml:space="preserve">
          <source>Inserts a stretchable space (a &lt;a href=&quot;qspaceritem&quot;&gt;QSpacerItem&lt;/a&gt;) at position</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="991e98025d1a58596d8b32789690e38c5bc12260" translate="yes" xml:space="preserve">
          <source>Inserts a tab with the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aa209e021e541927fcbde78d194d8b826c5ee61" translate="yes" xml:space="preserve">
          <source>Inserts a toolbar break before the toolbar specified by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e19e1e9304176cfcea7c3a15784ca9cea3ada6da" translate="yes" xml:space="preserve">
          <source>Inserts all the items in the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3ceeaaf0f619f9f9d8c4582f3c12896da4064f2" translate="yes" xml:space="preserve">
          <source>Inserts an</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65e07e37b0b6ef34c6c51615a7ca89b5df6dd601" translate="yes" xml:space="preserve">
          <source>Inserts an empty column into the table at</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6a136fecdd785aed7f7d770bfd4c10ab7f7b710" translate="yes" xml:space="preserve">
          <source>Inserts an empty row into the table at</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b26a0f6249356d471da95a0029afd8931ba27a33" translate="yes" xml:space="preserve">
          <source>Inserts an item with the text</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e623eb46073c1aeab5823bcf36ec177246f2b9a" translate="yes" xml:space="preserve">
          <source>Inserts an ordered list at the current cursor position, deleting the current selection. Requires &lt;code&gt;contenteditable=&quot;true&quot;&lt;/code&gt;. (Added in Qt 5.10)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f87b57c28f80be479fe1da10ed80a3a8dd331f7" translate="yes" xml:space="preserve">
          <source>Inserts an unordered list at the current cursor position, deleting the current selection. Requires &lt;code&gt;contenteditable=&quot;true&quot;&lt;/code&gt;. (Added in Qt 5.10)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b43c48c0ba057fa0f69f4d1771b0a999f134a5ac" translate="yes" xml:space="preserve">
          <source>Inserts character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78d2e7048549a3be60f7e6fb129d675a16d5c3c8" translate="yes" xml:space="preserve">
          <source>Inserts item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="790257dd7d8d1e001a49a8f97c1596e60ff07693" translate="yes" xml:space="preserve">
          <source>Inserts items from the list of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8918212eaaf10f17d49f003934d8ad6b0c510f4" translate="yes" xml:space="preserve">
          <source>Inserts items with the text</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb885a5ab7ddd5cf8306caadad13aa38e4902f4f" translate="yes" xml:space="preserve">
          <source>Inserts new</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbb5c10c91ef2bbc6fb5b0353f7b11d432778d83" translate="yes" xml:space="preserve">
          <source>Inserts scripts from the list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc0cf2bb2a01e9341389f0c636c9f905616a080c" translate="yes" xml:space="preserve">
          <source>Inserts the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74ea434c0476d4a688b8c0905c00abf5454094c3" translate="yes" xml:space="preserve">
          <source>Inserts the &lt;code&gt;item&lt;/code&gt; at the index &lt;code&gt;before&lt;/code&gt; in the current menu. In this case, &lt;code&gt;item&lt;/code&gt; can be either a &lt;a href=&quot;qml-qtquick-controls-menuitem&quot;&gt;MenuItem&lt;/a&gt;, a &lt;a href=&quot;qml-qtquick-controls-menuseparator&quot;&gt;MenuSeparator&lt;/a&gt;, or a &lt;a href=&quot;qml-qtquick-controls-menu&quot;&gt;Menu&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c29a5ffaf8728abe27055a8a4c3131a030598ab" translate="yes" xml:space="preserve">
          <source>Inserts the C string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dae89d5ed0c83425e55f398f2b8a5fde0b7a740" translate="yes" xml:space="preserve">
          <source>Inserts the Latin-1 string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9502a62e25ee6c5cc6ad6221263afa912a3ccfc5" translate="yes" xml:space="preserve">
          <source>Inserts the action</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36f5682e618516503492a64f542e56336178d5b3" translate="yes" xml:space="preserve">
          <source>Inserts the actions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="711dcfeeb4e1677616080503e0273df40926bc31" translate="yes" xml:space="preserve">
          <source>Inserts the byte array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aee33e11cbf6a39e25f7f5eea6b2178ce2ebe5f" translate="yes" xml:space="preserve">
          <source>Inserts the candlestick item specified by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17348bbe06e2c5d9e8415051ca668887730431d9" translate="yes" xml:space="preserve">
          <source>Inserts the clipboard's text at the cursor position, deleting any selected text, providing the line edit is not &lt;a href=&quot;qlineedit#readOnly-prop&quot;&gt;read-only&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e3489c8273c2010e275bfce9aa7e1e935a7eee6" translate="yes" xml:space="preserve">
          <source>Inserts the contents of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d1ba263567eb700475073039a1bce1e66cf69e0" translate="yes" xml:space="preserve">
          <source>Inserts the data in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22585ab1af62d1dbae26d3e8323328ebbec7e472" translate="yes" xml:space="preserve">
          <source>Inserts the data point</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f43dbdbea8f124aafb05b1ede00bee769c1e03c8" translate="yes" xml:space="preserve">
          <source>Inserts the environment variable of name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99c79e044f22581ac2e9b0a7cee1d9e8ffb98769" translate="yes" xml:space="preserve">
          <source>Inserts the field</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd8d96f7c650513ccddd87c1bdb916e8f39aa3c5" translate="yes" xml:space="preserve">
          <source>Inserts the first</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e758123e14d1a9234c5c06601bf92d198f95f458" translate="yes" xml:space="preserve">
          <source>Inserts the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdccd90c9ed033ec89b442c99a36940b1f639743" translate="yes" xml:space="preserve">
          <source>Inserts the given list of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be544065ed2d7072e0e81a43ff6054978cc28b5d" translate="yes" xml:space="preserve">
          <source>Inserts the image defined by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cf8c522e3bc5b9690188c002b50adbfe719797c" translate="yes" xml:space="preserve">
          <source>Inserts the image defined by the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="963d735acbb04326cb7dfd7c706a3db9df3c6bac" translate="yes" xml:space="preserve">
          <source>Inserts the item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb84da962d17f5d9771a545ef6755f903d73e5b7" translate="yes" xml:space="preserve">
          <source>Inserts the items specified by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3de0e830b516ab10235356e8872347dd590f3d8" translate="yes" xml:space="preserve">
          <source>Inserts the key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eefbd05033dfefe7880b1481399d4590a6562a3" translate="yes" xml:space="preserve">
          <source>Inserts the key-value pair in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7539155dca537bdad137bc0dfb102a06e493ebe3" translate="yes" xml:space="preserve">
          <source>Inserts the list of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2afcb323fb5edd922ea78987708969411af7283" translate="yes" xml:space="preserve">
          <source>Inserts the list of URLs in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c99072c1c4d72c909f4b213bc009a93fc4766d40" translate="yes" xml:space="preserve">
          <source>Inserts the list of families</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2984fced489931a8a74704cc8f1a9ef9fb58a607" translate="yes" xml:space="preserve">
          <source>Inserts the message</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a47d747743e71afbb597185db9b17f27d77cca02" translate="yes" xml:space="preserve">
          <source>Inserts the new row</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9d022d11b5aa50f0179dec7cefc06b625c9203e" translate="yes" xml:space="preserve">
          <source>Inserts the node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7953551076ea04046550f83a349626ad4f9a84ab" translate="yes" xml:space="preserve">
          <source>Inserts the script</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c711f988761fc7f4d221660139043decb228d8d5" translate="yes" xml:space="preserve">
          <source>Inserts the slice specified by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70f60036c8256d15f4cb7ff6e79b8c790e2434cc" translate="yes" xml:space="preserve">
          <source>Inserts the specified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30ef0c0193d4d8e59c6fd3186e35e567733ac415" translate="yes" xml:space="preserve">
          <source>Inserts the string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dfcd8f9a3740eff935fb2dc8d91fbbbb7e89271" translate="yes" xml:space="preserve">
          <source>Inserts the string reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b34c15a05712c02eb49d3e6ffe8169c76509dd8" translate="yes" xml:space="preserve">
          <source>Inserts the strings from the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="731c555998021f536d80b0597ee656d8d8e88960" translate="yes" xml:space="preserve">
          <source>Inserts the text</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="928b5441db5b621beb488fbe16a06c1a5af53bc3" translate="yes" xml:space="preserve">
          <source>Inserts the values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20b5bb35ec08a58e929e9edd117e7c5092cbc174" translate="yes" xml:space="preserve">
          <source>Inset Areas</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e6959ebf7d073a0339aaff930c220173162cb09" translate="yes" xml:space="preserve">
          <source>Inset areas accounts for this by telling the control that a certain area of the 9-patch image should go outside of the control:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40012d1cd9a298b55cfbcdb8928f88f1094e8839" translate="yes" xml:space="preserve">
          <source>Inside an Affector, the changes made to the particle will only be applied if update is set to true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8733338757279ef6e83a888b4a38d783505366c3" translate="yes" xml:space="preserve">
          <source>Inside the &lt;a href=&quot;qml-qtlocation-map&quot;&gt;Map&lt;/a&gt;, a &lt;a href=&quot;qml-qtlocation-mapitemview&quot;&gt;MapItemView&lt;/a&gt; is declared, where the &lt;a href=&quot;qml-qtlocation-mapitemview#model-prop&quot;&gt;model&lt;/a&gt; property has been set to the search model and a &lt;a href=&quot;qml-qtlocation-mapitemview#delegate-prop&quot;&gt;delegate&lt;/a&gt; consisting of a &lt;a href=&quot;qml-qtlocation-mapquickitem&quot;&gt;MapQuickItem&lt;/a&gt; is used to display a marker image. A marker is shown for every place that was found by the search model. The delegate uses the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0442d225f3f91632e52f6f3e1dbafb1856891c2" translate="yes" xml:space="preserve">
          <source>Inside the Displayable component, however, &lt;code&gt;title&lt;/code&gt; refers to the property declared in Displayable.qml. The getTitle() and setTitle() functions, and the binding for the &lt;code&gt;text&lt;/code&gt; property of the Text object will all refer to the &lt;code&gt;title&lt;/code&gt; property declared in the Displayable component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eb71da07eaad54e90d0825a83f549cdd2758d55" translate="yes" xml:space="preserve">
          <source>Inside the tests directory, there has to be one subdirectory per test that contains a simple qmake project. The following code snippet illustrates the .pro file of the project:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a72f8445299894435e08252ac915e6a67a5a72c3" translate="yes" xml:space="preserve">
          <source>Inside your &lt;a href=&quot;qsyntaxhighlighter#highlightBlock&quot;&gt;highlightBlock&lt;/a&gt;() implementation you can query the end state of the previous text block using the &lt;a href=&quot;qsyntaxhighlighter#previousBlockState&quot;&gt;previousBlockState&lt;/a&gt;() function. After parsing the block you can save the last state using &lt;a href=&quot;qsyntaxhighlighter#setCurrentBlockState&quot;&gt;setCurrentBlockState&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a3f3165b610e8230aaa0455a0842461cf283799" translate="yes" xml:space="preserve">
          <source>Install Qt into a sub-directory without spaces to avoid this problem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d87ec3f2627983a9ead5ca64cc8231fa819d4e32" translate="yes" xml:space="preserve">
          <source>Install the appropriate PostgreSQL developer libraries for your compiler. Assuming that PostgreSQL was installed in &lt;code&gt;C:\psql&lt;/code&gt;, build the plugin as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f226c81162c9b408c2c9e3e796673795291c926a" translate="yes" xml:space="preserve">
          <source>Installation Process</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd487955a32da6a5675ae37e2ab37a875adcb1f1" translate="yes" xml:space="preserve">
          <source>Installation location</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9989ea5c75f4fc70e0c20ceda73b2bdca0d1b469" translate="yes" xml:space="preserve">
          <source>Installation problems</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa168cec2764ec33b12f2719da1d4bbd081a19f2" translate="yes" xml:space="preserve">
          <source>Installation variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7d9619eb06cf561eef8e8ba84f2aeed75a6589b" translate="yes" xml:space="preserve">
          <source>Installed factories are called by queryAccessibilityInterface() until one provides an interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2337a86b81eb23abc0ad1e5b62312ceed7db9737" translate="yes" xml:space="preserve">
          <source>Installed in System</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b04e7a76cc178a3ea402140e244f6ea9e533cdc" translate="yes" xml:space="preserve">
          <source>Installing Clang for QDoc</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebc6e304f03866c9429746623d6855a965a61670" translate="yes" xml:space="preserve">
          <source>Installing Files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ed401be4e597fabfd03eb60809ed76af8a84175" translate="yes" xml:space="preserve">
          <source>Installing In-Process Servers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d54fa149f515b0acabe976439a9e3bbe8b2ee3c6" translate="yes" xml:space="preserve">
          <source>Installing Qt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d5226a998928f66b3b34fc113ee1057931724e9" translate="yes" xml:space="preserve">
          <source>Installing Qt into a directory with spaces, for example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae323c367fc934a665ce4ae0a8ca3aec4da28191" translate="yes" xml:space="preserve">
          <source>Installing Stand-Alone Servers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff68532c4bfc9ea83c207e5a7a695bef2511d1fa" translate="yes" xml:space="preserve">
          <source>Installing a Custom Filter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17dee36e0fb5e0dff1bb13f48daa7982a1477c3d" translate="yes" xml:space="preserve">
          <source>Installing a singleton type allows developers to provide arbitrary functionality (methods and properties) to a client without requiring individual instances of the type to be instantiated by the client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6cddddbecdf43e0e5a3a7199e07a196f5ad7c9f" translate="yes" xml:space="preserve">
          <source>Installing a singleton type into a uri allows developers to provide arbitrary functionality (methods and properties) to clients without requiring individual instances ot the type to be instantiated by the client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f0966832f6b654821ef7ba82c4c37cc6c068c27" translate="yes" xml:space="preserve">
          <source>Installing an event filter object using &lt;a href=&quot;qobject#installEventFilter&quot;&gt;QObject::installEventFilter&lt;/a&gt; on the &lt;a href=&quot;qml-qtwebengine-webengine&quot;&gt;WebEngine&lt;/a&gt; view focus proxy object, and filtering out all touch events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bae38b08ccf91bcdfaf0f6884678b6b45a85036" translate="yes" xml:space="preserve">
          <source>Installing an event filter on &lt;a href=&quot;qcoreapplication#instance&quot;&gt;QCoreApplication::instance&lt;/a&gt;(). Such an event filter is able to process all events for all widgets, so it's just as powerful as reimplementing notify(); furthermore, it's possible to have more than one application-global event filter. Global event filters even see mouse events for &lt;a href=&quot;qwidget#enabled-prop&quot;&gt;disabled widgets&lt;/a&gt;. Note that application event filters are only called for objects that live in the main thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c13c87dde773fba07117fd91230c26703317b68" translate="yes" xml:space="preserve">
          <source>Installing an event filter on the object. Such an event filter gets all the events, including Tab and Shift+Tab key press events, as long as they do not change the focus widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fdf84908639a45a286fb97808b649d23822e742" translate="yes" xml:space="preserve">
          <source>Installing in Both Modes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd5fe3686aaf3af15de35bca663c12529a7be202" translate="yes" xml:space="preserve">
          <source>Installing or removing a &lt;a href=&quot;qtranslator&quot;&gt;QTranslator&lt;/a&gt;, or changing an installed &lt;a href=&quot;qtranslator&quot;&gt;QTranslator&lt;/a&gt; generates a &lt;a href=&quot;qevent#Type-enum&quot;&gt;LanguageChange&lt;/a&gt; event for the &lt;a href=&quot;qcoreapplication&quot;&gt;QCoreApplication&lt;/a&gt; instance. A &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt; instance will propagate the event to all toplevel widgets, where a reimplementation of changeEvent can re-translate the user interface by passing user-visible strings via the &lt;a href=&quot;qobject#tr&quot;&gt;tr&lt;/a&gt;() function to the respective property setters. User-interface classes generated by Qt Designer provide a &lt;code&gt;retranslateUi()&lt;/code&gt; function that can be called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4120f2c498fcaa5cd2d0ae4e000e029d52576a33" translate="yes" xml:space="preserve">
          <source>Installing the Prerequisites</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ea4fef7f4e45e0fa7a26ffe8cd39dd58d4994d8" translate="yes" xml:space="preserve">
          <source>Installing the source (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc14a4784e38a3b55c5de66c2372aecb64a3ff60" translate="yes" xml:space="preserve">
          <source>Installs JavaScript</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a24836cfd3bfaf4b71cbcd27b00d8f29dcaf53a1" translate="yes" xml:space="preserve">
          <source>Installs a QPictureIO picture I/O handler for the picture format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bdbe0f793ad6ed6d55bc56991d4a726d9214aff" translate="yes" xml:space="preserve">
          <source>Installs a Qt message</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9698a599259ff4be029c30dacf69c67f7a1b8114" translate="yes" xml:space="preserve">
          <source>Installs a cookie filter that can prevent sites and resources from using cookies. The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dec0f291c0c927c2b1bf74d702009a4d94d48032" translate="yes" xml:space="preserve">
          <source>Installs a function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8d7addcd8e757daeab8639a859d5179c34fdf5a" translate="yes" xml:space="preserve">
          <source>Installs an</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34a1084fa6ba366df5e492799491ae146aeb4933" translate="yes" xml:space="preserve">
          <source>Installs an event filter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d35e27d80e786f9644c15f8d30c7c3b73f025fad" translate="yes" xml:space="preserve">
          <source>Installs an event filter for this item on</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea4188812abd36303a5b73e5d4f5915f228bede6" translate="yes" xml:space="preserve">
          <source>Installs the &lt;a href=&quot;qaccessible#InterfaceFactory-typedef&quot;&gt;InterfaceFactory&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9f66d9ea3928f912ce790de04f7dd69bc4b4d1b" translate="yes" xml:space="preserve">
          <source>Installs the syntax highlighter on the given &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be52186a534bcfe5b6f67bf7f7119a2dfc63334a" translate="yes" xml:space="preserve">
          <source>Instances of &lt;a href=&quot;qaxscriptengine&quot;&gt;QAxScriptEngine&lt;/a&gt; should always have both a language and a script.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1bff8ecc6a6a4612bac56fcc52ff9cfd05dab75" translate="yes" xml:space="preserve">
          <source>Instances of &lt;a href=&quot;qgeocodereply&quot;&gt;QGeoCodeReply&lt;/a&gt; manage the state and results of these operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bf0ab75f57aa961bf20749a5078e462ae944e00" translate="yes" xml:space="preserve">
          <source>Instances of &lt;a href=&quot;qgeocodingmanager&quot;&gt;QGeoCodingManager&lt;/a&gt; can be accessed with &lt;a href=&quot;qgeoserviceprovider#geocodingManager&quot;&gt;QGeoServiceProvider::geocodingManager&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5b25f71484782d03be34c7b10ad26d4e9909701" translate="yes" xml:space="preserve">
          <source>Instances of &lt;a href=&quot;qgeoroutereply&quot;&gt;QGeoRouteReply&lt;/a&gt; manage the state and results of these operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec4ede712cda775689a12e8562352ce6dbd7811b" translate="yes" xml:space="preserve">
          <source>Instances of &lt;a href=&quot;qgeoroutingmanager&quot;&gt;QGeoRoutingManager&lt;/a&gt; can be accessed with &lt;a href=&quot;qgeoserviceprovider#routingManager&quot;&gt;QGeoServiceProvider::routingManager&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e0e785e2d1c704c3d3b009cd37cd72eab5131b6" translate="yes" xml:space="preserve">
          <source>Instances of materials using this shader can be created using the createMaterial() function which will be defined by the &lt;a href=&quot;qsgsimplematerialshader#QSG_DECLARE_SIMPLE_SHADER&quot;&gt;QSG_DECLARE_SIMPLE_SHADER&lt;/a&gt; macro.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75c703197555ded43ef38c74099b0d0fa78a38ee" translate="yes" xml:space="preserve">
          <source>Instances of subclasses of &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; should not be thought of as values that can be copied or assigned, but as unique identities. This means that when you create your own subclass of &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; (director or indirect), you should</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61a09b30b19be29dac37ce1de8a60bcc528712f3" translate="yes" xml:space="preserve">
          <source>Instances of the class can then be created in JavaScript:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a63ebc62c5e8e360269ef2d41265eeeaae8ca3c" translate="yes" xml:space="preserve">
          <source>Instances of type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dfaacc0fadfbfbeb32c46d4ebaf8d09443e361f" translate="yes" xml:space="preserve">
          <source>Instances store per-application Vulkan state and creating a &lt;code&gt;VkInstance&lt;/code&gt; object initializes the Vulkan library. In practice there will typically be a single instance constructed early on in main(). The object then stays alive until exiting the application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1c203d0fd0f6d89fe9a870e2609c2231de2df05" translate="yes" xml:space="preserve">
          <source>Instantiate &lt;a href=&quot;qopengltimemonitor#sampleCount&quot;&gt;sampleCount&lt;/a&gt;() OpenGL timer query objects that will be used to track the amount of time taken to execute OpenGL commands between successive calls to &lt;a href=&quot;qopengltimemonitor#recordSample&quot;&gt;recordSample&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="583022d2f8cb70785afae48382b98df631e75f1a" translate="yes" xml:space="preserve">
          <source>Instantiate &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt; or &lt;a href=&quot;qudpsocket&quot;&gt;QUdpSocket&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf39b3d85b640109838b4dab937841803b7520e6" translate="yes" xml:space="preserve">
          <source>Instantiate &lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt; and give it the &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt; to be run;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd7c0ee3807e8d7f2438934dfa67a1a5862e0a4a" translate="yes" xml:space="preserve">
          <source>Instantiate a backend. If the factory handles multiple identifiers it should check with the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dbdba74aeba76f9448afe1dc313c9b0988203b5" translate="yes" xml:space="preserve">
          <source>Instantiate a subclass of &lt;a href=&quot;qabstractxmlnodemodel&quot;&gt;QAbstractXmlNodeModel&lt;/a&gt; or &lt;a href=&quot;qsimplexmlnodemodel&quot;&gt;QSimpleXmlNodeModel&lt;/a&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2198ca45ee18e156628e5b39aa74dc06df99de8a" translate="yes" xml:space="preserve">
          <source>Instantiate and initialize components lazily</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c726e7c19518998720a133de56ec53ad8c397dce" translate="yes" xml:space="preserve">
          <source>Instantiate the object specifying the texture target type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f172ca4689b8f3b4597fd156abe2b7ad420a8342" translate="yes" xml:space="preserve">
          <source>Instantiated By:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ab367ea9230f8199acf493265d5d152b5c2b7e6" translate="yes" xml:space="preserve">
          <source>Instantiates a &lt;a href=&quot;qitemselectionmodel&quot;&gt;QItemSelectionModel&lt;/a&gt; to be used in conjunction with a &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; and any view supporting it. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d52fda44b83e7dbbea8dffd7c26a2de2e252a1b" translate="yes" xml:space="preserve">
          <source>Instantiates a component that can be used to interact with a QEntity by a process known as picking</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dad2707125c3ae29d2e64b14bf78a755ad354ebc" translate="yes" xml:space="preserve">
          <source>Instantiates a number of Item-based components using a provided model. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c9dbf726fc84dcfb769d12853f0fa047d931833" translate="yes" xml:space="preserve">
          <source>Instantiates:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a75dfafdd34d758fc6eef0e0ecf6eb4e7ee38d3f" translate="yes" xml:space="preserve">
          <source>Instantiating COM Objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6634bec2dadba93c78d8a801bd0743541fe45edc" translate="yes" xml:space="preserve">
          <source>Instantiating State Machines</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46c5cbf93389d67ee264f3d056d3f0535c8a8b45" translate="yes" xml:space="preserve">
          <source>Instantiator (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53b40f39af9e661e0f6d6f242689c60b369d56f1" translate="yes" xml:space="preserve">
          <source>Instantiator QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90a6ecfcf8d22cd4bf80f2ffa1a9313907bea9e1" translate="yes" xml:space="preserve">
          <source>Instantiator.active</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="655006ba10453a7b38248ea5295fb0aa5fa7c83a" translate="yes" xml:space="preserve">
          <source>Instantiator.asynchronous</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89243a2597fdc109dbfad6d857dc043b2c6a75a9" translate="yes" xml:space="preserve">
          <source>Instantiator.count</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2b535ed3812613714265d15493f221f0be4d490" translate="yes" xml:space="preserve">
          <source>Instantiator.delegate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2c0d68e10449907992692f91022d8ca2f35a89e" translate="yes" xml:space="preserve">
          <source>Instantiator.model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26bcc0096cf1c16eed7c9cba6843460f1d286246" translate="yes" xml:space="preserve">
          <source>Instantiator.object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d16ecb368a077f9c691ec3b5c2e08fd08223480e" translate="yes" xml:space="preserve">
          <source>Instantiator.objectAdded()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22764633300426def185a4aa950bc07741eb71f2" translate="yes" xml:space="preserve">
          <source>Instantiator.objectAt()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ed148dd48ba152615367875daf10c6d390fe5ab" translate="yes" xml:space="preserve">
          <source>Instantiator.objectRemoved()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6281012ab588257867684a8a30e826387bad4b3a" translate="yes" xml:space="preserve">
          <source>Instead of &lt;code&gt;%n&lt;/code&gt;, you can use &lt;code&gt;%Ln&lt;/code&gt; to produce a localized representation of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fa272c7ca5dfcca2a24f16026ebf1351f350c4b" translate="yes" xml:space="preserve">
          <source>Instead of &lt;code&gt;=&lt;/code&gt;, you can also use &lt;code&gt;~=&lt;/code&gt; to test whether a Qt property of type &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; contains a given &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9be9d21df928c6327f8b60550d7ca6c73335fd2d" translate="yes" xml:space="preserve">
          <source>Instead of a &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt;, the &lt;a href=&quot;qml-qtlocation-placesearchmodel&quot;&gt;PlaceSearchModel&lt;/a&gt; can be used in conjunction with a &lt;a href=&quot;qml-qtlocation-mapitemview&quot;&gt;MapItemView&lt;/a&gt; to display markers on a map. Firstly a &lt;a href=&quot;qml-qtlocation-map&quot;&gt;Map&lt;/a&gt; is used to define the visual region occupied by the map, in this case it fills the entirety of its parent. Other properties are specified such as the &lt;a href=&quot;qml-qtlocation-map#plugin-prop&quot;&gt;plugin&lt;/a&gt; providing the maps, and the map's &lt;a href=&quot;qml-qtlocation-map#center-prop&quot;&gt;center&lt;/a&gt; and &lt;a href=&quot;qml-qtlocation-map#zoomLevel-prop&quot;&gt;zoomLevel&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="333b89d4748415741d27249e38020853954ab5f8" translate="yes" xml:space="preserve">
          <source>Instead of creating a custom widget and implementing an interface for it, we will show how accessibility is implemented for one of Qt's standard widgets: &lt;a href=&quot;qslider&quot;&gt;QSlider&lt;/a&gt;. The accessible interface, QAccessibleSlider, inherits from QAccessibleAbstractSlider, which in turn inherits &lt;a href=&quot;qaccessiblewidget&quot;&gt;QAccessibleWidget&lt;/a&gt;. You do not need to examine the QAccessibleAbstractSlider class to read this section. If you want to take a look, the code for all of Qt's accessible interfaces are found in qtbase/src/widgets/accessible. Here is the QAccessibleSlider's constructor:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e83dd696b9190273a08956704bdc4ee38aa75bc0" translate="yes" xml:space="preserve">
          <source>Instead of declaring and implementing these three functions manually, you can use the &lt;code&gt;QAXAGG_IUNKNOWN&lt;/code&gt; macro in the class declaration of your subclass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86612cf857bcd50e9dcf58aefffefb759d537d82" translate="yes" xml:space="preserve">
          <source>Instead of ensuring that all settings in the application have unique names, the settings can be divided into unique categories that may then contain settings using the same names that are used in other categories - without a conflict.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f57f35fee6c44b1005dace5646ede51a4f362ed2" translate="yes" xml:space="preserve">
          <source>Instead of forcing the user to deal with the individual parts of the widgets, this interface gives an easier approach to the kind of widget it represents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="857da81e51529e9c46d10f9e33a3f25faeefefe0" translate="yes" xml:space="preserve">
          <source>Instead of repeatedly applying the same pinching gesture, the user may continue to touch the input device in one place, and apply a second touch to a new point, continuing the gesture. When this occurs, gesture events will continue to be delivered to the target object, containing an instance of &lt;a href=&quot;qpinchgesture&quot;&gt;QPinchGesture&lt;/a&gt; in the &lt;a href=&quot;qt#GestureState-enum&quot;&gt;Qt::GestureUpdated&lt;/a&gt; state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84f73e5c55a34903ba77b8a2027ed0be7bc493c2" translate="yes" xml:space="preserve">
          <source>Instead of showing the help in an external application like the Qt Assistant, it is also possible to embed the online help in the application. The contents can then be retrieved via the &lt;a href=&quot;qhelpengine&quot;&gt;QHelpEngine&lt;/a&gt; class and can be displayed in nearly any form. Showing the help in a &lt;a href=&quot;qtextbrowser&quot;&gt;QTextBrowser&lt;/a&gt; is probably the most common way, but embedding it in What's This help is also perfectly possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b32f2ed687d5d1d407e615babc79ae66da777683" translate="yes" xml:space="preserve">
          <source>Instead of specifying flags as a bitwise OR of the &lt;a href=&quot;qt#AlignmentFlag-enum&quot;&gt;Qt::AlignmentFlag&lt;/a&gt; and &lt;a href=&quot;qt#TextFlag-enum&quot;&gt;Qt::TextFlag&lt;/a&gt;, this overloaded function takes an</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fa32067854db1dd8a36b52e334335ed3fdb3b84" translate="yes" xml:space="preserve">
          <source>Instead of specifying quaternions directly in the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c5a730a9d2063b236aa99f8adda39d10250c7c8" translate="yes" xml:space="preserve">
          <source>Instead of uniforms, HLSL shaders are expected to use a single constant buffer, assigned to register &lt;code&gt;b0&lt;/code&gt;. The special names &lt;code&gt;qt_Matrix&lt;/code&gt;, &lt;code&gt;qt_Opacity&lt;/code&gt;, and &lt;code&gt;qt_SubRect_&amp;lt;name&amp;gt;&lt;/code&gt; function the same way as with GLSL. All other members of the buffer are expected to map to properties in the &lt;a href=&quot;qml-qtquick-shadereffect&quot;&gt;ShaderEffect&lt;/a&gt; item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="549fce3a7ab9ea73841f99b8c0f114de329dec4c" translate="yes" xml:space="preserve">
          <source>Instead of using addSubWindow(), it is also simply possible to use &lt;a href=&quot;qwidget#setParent&quot;&gt;setParent&lt;/a&gt;() when you add the subwindow to a &lt;a href=&quot;qmdiarea&quot;&gt;QMdiArea&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d8f0459c9920180468a1310427043a6ace720b2" translate="yes" xml:space="preserve">
          <source>Instead of using multiple NumberAnimations, you could use a &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-animation-example.html#pathanimation&quot;&gt;PathAnimation&lt;/a&gt; to animate an item over a curved path. For example, the &lt;code&gt;add&lt;/code&gt; transition in the previous example could be augmented with a &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-animation-example.html#pathanimation&quot;&gt;PathAnimation&lt;/a&gt; as follows: to animate newly added items along a path:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="006de98748a136464b5911244ebc3cba1bd7ef63" translate="yes" xml:space="preserve">
          <source>Instead of writing:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8439dc219eac129028c341cae8ab61f5adb9758c" translate="yes" xml:space="preserve">
          <source>Instead, always use the actual type where possible:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21b21a4dc7df181dfd0d8e374d7cef36f99b7dd5" translate="yes" xml:space="preserve">
          <source>Instead, applications can reimplement this function. Here both &lt;a href=&quot;qvulkanwindow#physicalDevice&quot;&gt;QVulkanWindow::physicalDevice&lt;/a&gt;() and &lt;a href=&quot;qvulkaninstance#surfaceForWindow&quot;&gt;QVulkanInstance::surfaceForWindow&lt;/a&gt;() are functional, but no further logical device initialization has taken place yet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d938a9ce91a4ed89001314db733dc1f5a6cb1d0c" translate="yes" xml:space="preserve">
          <source>Instead, since it's not possible to pass a custom swapper functor to STL functions, the only workaround for a template specialization for qSwap() is providing the same specialization for &lt;code&gt;std::swap()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f7cfbd2ff2d689700fc032832ca0cc7d4aabb89" translate="yes" xml:space="preserve">
          <source>Instead, we can use tryVerify() to first check that &lt;code&gt;currentItem&lt;/code&gt; isn't &lt;code&gt;null&lt;/code&gt;, and then use a regular compare afterwards:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a02ced2f6804e68bc61a2fed8513b52197b423f" translate="yes" xml:space="preserve">
          <source>Instead, you can use the &lt;a href=&quot;qvariant#value&quot;&gt;QVariant::value&lt;/a&gt;() or the qVariantValue() template function. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c58e815efc3138b8e1098f3b80ccf8fc030dd15" translate="yes" xml:space="preserve">
          <source>Instruct the database driver that no more data will be fetched from this query until it is re-executed. There is normally no need to call this function, but it may be helpful in order to free resources such as locks or cursors if you intend to re-use the query at a later time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26346521115ecc2f0cf61814b600646040cb518b" translate="yes" xml:space="preserve">
          <source>Instruct the database driver to return numerical values with a precision specified by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0188ccd32f847e62d1a93aa4a84331a2c480bf90" translate="yes" xml:space="preserve">
          <source>Instruction reads</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90e0fb5a9a81d62b370b1c82ee8d60f821ccbe1f" translate="yes" xml:space="preserve">
          <source>Instructions executed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ade397865fb62a474ba5bcc545f047b66b00363" translate="yes" xml:space="preserve">
          <source>Instructs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05f2d092fad654a65a3346ea55dccfe2cd55da69" translate="yes" xml:space="preserve">
          <source>Instructs the &lt;a href=&quot;qml-qtlocation-geocodemodel&quot;&gt;GeocodeModel&lt;/a&gt; to update its data. This is most useful when &lt;a href=&quot;qml-qtlocation-geocodemodel#autoUpdate-prop&quot;&gt;autoUpdate&lt;/a&gt; is disabled, to force a refresh when the query has been changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86e1da38d3d2d13b964371866e7005cec6fc47c6" translate="yes" xml:space="preserve">
          <source>Instructs the &lt;a href=&quot;qml-qtlocation-routemodel&quot;&gt;RouteModel&lt;/a&gt; to update its data. This is most useful when &lt;a href=&quot;qml-qtlocation-routemodel#autoUpdate-prop&quot;&gt;autoUpdate&lt;/a&gt; is disabled, to force a refresh when the query has been changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6abbd36ca5c0eb6e4e51ea2c54ea673bc9d0f8ba" translate="yes" xml:space="preserve">
          <source>Instructs the form window not to manage the specified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a20c32271628bb6eb75e9e0da624086374741af" translate="yes" xml:space="preserve">
          <source>Instructs the form window to manage the specified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c69f7406cef2ab26d9191e4ae9f5170a3e076ba1" translate="yes" xml:space="preserve">
          <source>Instructs the linker to prefer definitions in the loaded library over exported definitions in the loading application when resolving external symbols in the loaded library. This option is only supported on Linux.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bb2e9c1e94687bffb73a2a87be988c6fb7b3e39" translate="yes" xml:space="preserve">
          <source>Instructs the plugin to include Nominatim-specific information (such as geometry and class) into the returned Location objects, exposed as extendedAttributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ee502c114318ec35b1280b7097689c86be7e661" translate="yes" xml:space="preserve">
          <source>Instructs the plugin to inject the query url to nominatim into the geocode reply, for debugging purposes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac28df7feaf33911f58d7e624f2d70934144e0d8" translate="yes" xml:space="preserve">
          <source>Instructs the print engine to abort the printing process. Returns true if successful; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6048afd5b62a8f421055c2b0a5879db5cba5e651" translate="yes" xml:space="preserve">
          <source>Instructs the print engine to start a new page. Returns &lt;code&gt;true&lt;/code&gt; if the printer was able to create the new page; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aa268a06860a54d71030fa8526a5d83676a4d93" translate="yes" xml:space="preserve">
          <source>Instructs the server to listen for incoming connections on</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b5d8d9a783e681b91b3a8433e89928cfa16916a" translate="yes" xml:space="preserve">
          <source>Instructs the session to permanently accept the new access point. Once this function has been called the session may not return to the old access point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a5f731e0d4eadd97976e5b20f8ce33667a9367e" translate="yes" xml:space="preserve">
          <source>Instructs the session to roam to the new access point. The old access point remains active until the application calls &lt;a href=&quot;qnetworksession#accept&quot;&gt;accept&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6bfec98756b26f52883632f47adb4ce9a7046f3" translate="yes" xml:space="preserve">
          <source>Instructs this state to set the property with the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75f3ef16608eee25356947d15202a52976945646" translate="yes" xml:space="preserve">
          <source>Insufficient space on the target drive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c89edcac2811a6a9e8072517cae7f3cbfd5049d" translate="yes" xml:space="preserve">
          <source>Int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60f9acbe465011878d18b3240f036c41939a6938" translate="yes" xml:space="preserve">
          <source>IntValidator (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9701e314c6f9e134d6a9a1c4eb0102ca9711a7a4" translate="yes" xml:space="preserve">
          <source>IntValidator QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89adcb78f9062997666a21c8db2bd6fb221317ea" translate="yes" xml:space="preserve">
          <source>IntValidator.bottom</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ceccc69eaee9292ffd79c26bfa93b87b654f934" translate="yes" xml:space="preserve">
          <source>IntValidator.locale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2364642c93a4443e6b1cb9d5581506d0fe933975" translate="yes" xml:space="preserve">
          <source>IntValidator.top</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9edcffff4461c9083fbff857f8dcee0f0769cbd4" translate="yes" xml:space="preserve">
          <source>Integer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2bc4ddd62784971caa4e07188de20d5bfbfa959" translate="yes" xml:space="preserve">
          <source>Integer (if the number has no fraction and is in the &lt;a href=&quot;qtglobal#qint64-typedef&quot;&gt;qint64&lt;/a&gt; range) or Double</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad241595b719bca425c11bf77a19dbf80d8f97da" translate="yes" xml:space="preserve">
          <source>Integer value within a range</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33d183002f823c91a1e8fef4ab2432cbf5f06ecb" translate="yes" xml:space="preserve">
          <source>Integer vs. Floating Point Precision</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="020b42e0acbf037dde33adb59835e00091fa5587" translate="yes" xml:space="preserve">
          <source>Integer, but they are cast to &lt;code&gt;qint64&lt;/code&gt; first so values higher than 2&lt;sup&gt;63&lt;/sup&gt;-1 (&lt;code&gt;INT64_MAX&lt;/code&gt;) will be wrapped to negative</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fda87b846661d1595c0e74003b851bd4d0d126c" translate="yes" xml:space="preserve">
          <source>Integers as Models</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf62488ff8ff10754ee00e468e61b6b8d749d8d4" translate="yes" xml:space="preserve">
          <source>Integers in &lt;a href=&quot;qcborvalue&quot;&gt;QCborValue&lt;/a&gt; are limited to the range of the &lt;a href=&quot;qtglobal#qint64-typedef&quot;&gt;qint64&lt;/a&gt; type. That is, from -9,223,372,036,854,775,808 (-2&lt;sup&gt;63&lt;/sup&gt;) to 9,223,372,036,854,775,807 (2&lt;sup&gt;63&lt;/sup&gt; - 1). CBOR itself can represent integer values outside of this range, which &lt;a href=&quot;qcborvalue&quot;&gt;QCborValue&lt;/a&gt; does not support. When decoding a stream using &lt;a href=&quot;qcborvalue#fromCbor&quot;&gt;fromCbor&lt;/a&gt;() containing one of those values, &lt;a href=&quot;qcborvalue&quot;&gt;QCborValue&lt;/a&gt; will convert automatically to &lt;a href=&quot;qcborvalue#Type-enum&quot;&gt;Double&lt;/a&gt;, but that may lose up to 11 bits of precision.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00194b6835db090bb73bf874f3fe5b361deb16bb" translate="yes" xml:space="preserve">
          <source>Integers must be as small as possible. &lt;a href=&quot;qcborstreamwriter&quot;&gt;QCborStreamWriter&lt;/a&gt; always does this (no user action is required and it is not possible to write overlong integers).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01ea677550fba3d7d54c80b1da354f63620b1911" translate="yes" xml:space="preserve">
          <source>Integers, Tags, Simple types, Floating point</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b3977bc3f7d3e4668fdc82d39589081ca98cc68" translate="yes" xml:space="preserve">
          <source>Integral type for representing pointer differences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c396c81b39b4c897ed9c4f972cb108ee7d5ea027" translate="yes" xml:space="preserve">
          <source>Integral type for representing pointers in a signed integer (useful for hashing, etc.).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df0e435bd02635b19075db29fba19ed8e9465a63" translate="yes" xml:space="preserve">
          <source>Integral type for representing pointers in an unsigned integer (useful for hashing, etc.).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e789427eefe67fcf70aefda5a0d692686823281" translate="yes" xml:space="preserve">
          <source>Integral type providing Posix' &lt;code&gt;ssize_t&lt;/code&gt; for all platforms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="847c190111e1272f8e41374a8edd5dbf1d990171" translate="yes" xml:space="preserve">
          <source>Integrate Java code into your application using &lt;a href=&quot;qtandroidextras-index&quot;&gt;Qt Android Extras&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="647e3c5333c846fab82fac87b0ce80869aeaff14" translate="yes" xml:space="preserve">
          <source>Integrating Handwriting Recognition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b51bb6861191488a8484ab2e526167275fa696f6" translate="yes" xml:space="preserve">
          <source>Integrating JavaScript in QML</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7abd0aedd95514d4093140d0caf5ca6f9b46dc2b" translate="yes" xml:space="preserve">
          <source>Integrating QML and C++</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80cbe8125a99198349098db8a653b94cae84cfd0" translate="yes" xml:space="preserve">
          <source>Integrating QML and JavaScript</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="613caf884b2b83a76edd187b626f1524bd7845d2" translate="yes" xml:space="preserve">
          <source>Integrating QML with C++ Applications</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="508a29785e32fa0d5fbb79a0f3e02a8a0adcac97" translate="yes" xml:space="preserve">
          <source>Integration of custom types with Qt's meta-object system is covered in more depth in the &lt;a href=&quot;custom-types&quot;&gt;Creating Custom Qt Types&lt;/a&gt; document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed99ed60a0ec7e50733c5875fe3ac84546e94501" translate="yes" xml:space="preserve">
          <source>Integration with OpenGL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f03fea713f92f88a38f61e8ba108db49ffd3445" translate="yes" xml:space="preserve">
          <source>Intel C++ Compiler for Linux</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b98cb0288d0167d4fe30d64db0f0c4798dd8be6" translate="yes" xml:space="preserve">
          <source>Inter-Client Exchange</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c016053ab71cdea0cd977978abafb782fd075418" translate="yes" xml:space="preserve">
          <source>Inter-Process Communication in Qt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b11178a86b9dee7b1a3f15c9875691081c80f03b" translate="yes" xml:space="preserve">
          <source>InterBase/Firebird return OUT values as result set, so when calling stored procedure, only IN values need to be bound via &lt;a href=&quot;qsqlquery#bindValue&quot;&gt;QSqlQuery::bindValue&lt;/a&gt;(). The RETURN/OUT values can be retrieved via &lt;a href=&quot;qsqlquery#value&quot;&gt;QSqlQuery::value&lt;/a&gt;(). Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c46b9b0a130ecc03dc3d87c7fbe2d623aed06dd9" translate="yes" xml:space="preserve">
          <source>Interacting with Data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f0ead225f7aa8969c58aac8f3b16b7bd4930df2" translate="yes" xml:space="preserve">
          <source>Interacting with QML Objects from C++</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5da745dfc995e2b800f768ca6463bb8c97fb9ce2" translate="yes" xml:space="preserve">
          <source>Interacting with QML from C++</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58fee091f6688efafeff34bc7b823ad31bf64ad0" translate="yes" xml:space="preserve">
          <source>Interacting with QObjects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94dc8e4a59fafe99eded0ffa98b6e8ea00efeca7" translate="yes" xml:space="preserve">
          <source>Interaction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cf6d4c32a25f3c2f7093400af7b4ef8b0e10c1d" translate="yes" xml:space="preserve">
          <source>Interaction helper for panning, flicking and pinch-to-zoom gesture on a Map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e87ee963427a91d2596169226af35f59fcd3d8bd" translate="yes" xml:space="preserve">
          <source>Interaction with Map Overlay Objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d580c19ed4a073580edffe83d828e8e370d1a0a" translate="yes" xml:space="preserve">
          <source>Interaction with the dock is possible. The icon can be set by calling QWindow::setWindowIcon() from the main window in your application. The setWindowIcon() call can be made as often as necessary, providing an icon that can be easily updated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80049ac2fab52818ae244f59779dc1f7d5b78e49" translate="yes" xml:space="preserve">
          <source>Interactive elements should expose functionality triggered by mouse interaction, for example. A button should, for example, implement a click action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf0a45804e1346b35a095b55707c7421f0f9833f" translate="yes" xml:space="preserve">
          <source>Interactive help</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bad6e55f508278bbd1f2de2f51b2cfa41d861db7" translate="yes" xml:space="preserve">
          <source>Interbase</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b4db7ef1fa23cfb5e115a2a2c89d46a6a2ebc4a" translate="yes" xml:space="preserve">
          <source>Interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f292cb32d3b236b7544a77b976e14fba95f704ff" translate="yes" xml:space="preserve">
          <source>Interface and convenience methods to implementers of QGeoServiceProvider plugins who want to provide access to geographic routing information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9089649ae05f8ff73d980d0431a10905a877d4d8" translate="yes" xml:space="preserve">
          <source>Interface and convenience methods to implementers of QGeoServiceProvider plugins who want to provide support for geocoding operations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47b8320ea794114cd4bc9770342138132e58f3cb" translate="yes" xml:space="preserve">
          <source>Interface for Diffie-Hellman parameters for servers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9b3088dd76e1199b6c6c311c10dafd2c60fd737" translate="yes" xml:space="preserve">
          <source>Interface for XML readers (i.e. parsers)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8b23d830ea5b1c667d6865fb8013867d21b7016" translate="yes" xml:space="preserve">
          <source>Interface for implementers of QGeoServiceProvider plugins who want to provide access to place functionality</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cad70f8f9e7a2287e4afbcebd542170645000da2" translate="yes" xml:space="preserve">
          <source>Interface for monitoring files and directories for modifications</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeaec975d8669cc43f230b5f1525ecfeaf1afe07" translate="yes" xml:space="preserve">
          <source>Interface for private and public keys</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aca71c5c9262e5eb5c231d30dadbbc70dda71a1" translate="yes" xml:space="preserve">
          <source>Interface for reading directly from resources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74b7c36c0fa257b7f82dc6a4802c6cd6083c811c" translate="yes" xml:space="preserve">
          <source>Interface for reading from and writing to files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac5c9302495698b2ffbe117a1b9009f3938888dc" translate="yes" xml:space="preserve">
          <source>Interface for reading from and writing to open files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b24141884592c0c4c2d50fd0deced2c776a8b1a" translate="yes" xml:space="preserve">
          <source>Interface for safely writing to files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e13d9b925159a4724b3df7819e3416bc47aad366" translate="yes" xml:space="preserve">
          <source>Interface index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4242424cd5005bafd0e3e4063914addedb3ce90e" translate="yes" xml:space="preserve">
          <source>Interface management</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed50d27ab8553de012b59c731ab0aacd8db11716" translate="yes" xml:space="preserve">
          <source>Interface to manage Qt's event queue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9af38aa4503fe55906be378b97ae4da36521163" translate="yes" xml:space="preserve">
          <source>Interface to report DTD content of XML data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8a7d3908fa0e7ab32684afeb35766953476a7b3" translate="yes" xml:space="preserve">
          <source>Interface to report declaration content of XML data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2b0fe1443a7d2cc808688013846dde5d24de961" translate="yes" xml:space="preserve">
          <source>Interface to report errors in XML data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74ccd165e84370f6d2bd8ccbafc1e76d14a8794d" translate="yes" xml:space="preserve">
          <source>Interface to report the lexical content of XML data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90e537920b5b60da50bb25def5138841e1f377d8" translate="yes" xml:space="preserve">
          <source>Interface to report the logical content of XML data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d30b6095ef10edf1499d823c71f62511e65765c" translate="yes" xml:space="preserve">
          <source>Interface to resolve external entities contained in XML data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b597672c83348eed12e01b2acafa9a4c6343f7b9" translate="yes" xml:space="preserve">
          <source>Interface used for callbacks from onActivityResult() in the main Android activity. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e3a23bae6afb01bd580f994c1baa5694c4217c5" translate="yes" xml:space="preserve">
          <source>InterfaceID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b356313f979923fc829adb909098ed26a5a01aff" translate="yes" xml:space="preserve">
          <source>Interfaces</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="786241993bf4eb6c6011094b9a9318b92bdbef80" translate="yes" xml:space="preserve">
          <source>Interfaces are similar to C++ abstract classes and Java's &lt;code&gt;interface&lt;/code&gt; keyword and declare the &quot;contract&quot; that is established between caller and callee. That is, they establish the names of the methods, signals and properties that are available as well as the behavior that is expected from either side when communication is established.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcd074697aeb100dead1f0c1fdd36e43946a30b0" translate="yes" xml:space="preserve">
          <source>Interfaces between C++ and QML Code in Qt Location</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a20cfa63cfa3d8f1c4cc2a8641aed9f7f809ad6" translate="yes" xml:space="preserve">
          <source>Interfaces between C++ and QML Code in Qt Positioning</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00f604d29dce3929423d4d357b09aa7e02081b92" translate="yes" xml:space="preserve">
          <source>Interfaces using the Linux Phonet socket family, for communication with cellular modems. See the &lt;a href=&quot;https://www.kernel.org/doc/Documentation/networking/phonet.txt&quot;&gt;Linux kernel documentation&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3f7362720863c938cc46359731b1207d75ed4c8" translate="yes" xml:space="preserve">
          <source>Internal Object Type Declaration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80a03e85693311c4a7d750343063ee6f71674fc5" translate="yes" xml:space="preserve">
          <source>Internal and external transitions behave the same, except for the case of a transition whose source state is a compound state and whose target(s) is a descendant of the source. In such a case, an internal transition will not exit and re-enter its source state, while an external one will.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="274ff7a9d3ca95b6097c97c6ba42f8d0915d5e44" translate="yes" xml:space="preserve">
          <source>Internal event handling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95b4c8f1a71de917cb7754dcc436446306fa11d7" translate="yes" xml:space="preserve">
          <source>Internal implementation of the virtual &lt;a href=&quot;qpaintdevice#metric&quot;&gt;QPaintDevice::metric&lt;/a&gt;() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbb5b2a6d5252a4f6e3d33341268fab223c77c30" translate="yes" xml:space="preserve">
          <source>Internal server error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6be60ff0934af83f88a2184a2727b9759aaa4dbc" translate="yes" xml:space="preserve">
          <source>Internal spacing in the widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5085d13f966e8c07eb99103c32527165c94e6c7" translate="yes" xml:space="preserve">
          <source>Internal tables used by the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d87f8f6525277ee140678898a3feb4ed2600400" translate="yes" xml:space="preserve">
          <source>Internal texture format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc1fbd6a62deb90b8472977d640fc160c0fd7bfc" translate="yes" xml:space="preserve">
          <source>Internally the class is thin wrapper for &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; and &lt;a href=&quot;qbackingstore&quot;&gt;QBackingStore&lt;/a&gt; and is very similar to the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtgui-rasterwindow-example.html#&quot;&gt;Raster Window Example&lt;/a&gt; that uses these classes directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d1a445a8ae71a8abf6327a4a12fffad5059d9b6" translate="yes" xml:space="preserve">
          <source>Internally the data is stored as column-major format, so as to be optimal for passing to OpenGL functions, which expect column-major data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d50ae70ed4a7bf8d18775167534200cfc181389" translate="yes" xml:space="preserve">
          <source>Internally, &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; uses a hash table to perform lookups. This hash table automatically grows and shrinks to provide fast lookups without wasting too much memory. You can still control the size of the hash table by calling &lt;a href=&quot;qhash#reserve&quot;&gt;reserve&lt;/a&gt;() if you already know approximately how many items the &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; will contain, but this isn't necessary to obtain good performance. You can also call &lt;a href=&quot;qhash#capacity&quot;&gt;capacity&lt;/a&gt;() to retrieve the hash table's size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39c77e8ecf0d420e56231eee644019159905e354" translate="yes" xml:space="preserve">
          <source>Internally, &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;T&amp;gt; is represented as an array of T if &lt;code&gt;sizeof(T) &amp;lt;= sizeof(void*)&lt;/code&gt; and T has been declared to be either a &lt;code&gt;Q_MOVABLE_TYPE&lt;/code&gt; or a &lt;code&gt;Q_PRIMITIVE_TYPE&lt;/code&gt; using &lt;a href=&quot;qtglobal#Q_DECLARE_TYPEINFO&quot;&gt;Q_DECLARE_TYPEINFO&lt;/a&gt;. Otherwise, &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;T&amp;gt; is represented as an array of T* and the items are allocated on the heap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a26403a140d2675b6435b307d5580e5474b90a7f" translate="yes" xml:space="preserve">
          <source>Internally, &lt;a href=&quot;qnetworkaccessmanager&quot;&gt;QNetworkAccessManager&lt;/a&gt; may open multiple connections to a server, in order to allow it process requests in parallel. These connections may be reused, which means that the encrypted() signal would not be emitted. This means that you are only guaranteed to receive this signal for the first connection to a site in the lifespan of the &lt;a href=&quot;qnetworkaccessmanager&quot;&gt;QNetworkAccessManager&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d787bbe96a61e451626abd64b1c2b7a45c4fd101" translate="yes" xml:space="preserve">
          <source>Internally, &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; uses a hash table to perform lookups. The hash table automatically grows and shrinks to provide fast lookups without wasting memory. You can still control the size of the hash table by calling &lt;a href=&quot;qset#reserve&quot;&gt;reserve&lt;/a&gt;(), if you already know approximately how many elements the &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; will contain, but this isn't necessary to obtain good performance. You can also call &lt;a href=&quot;qset#capacity&quot;&gt;capacity&lt;/a&gt;() to retrieve the hash table's size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="824bdbbbd2c4b10743a604a334a585e9d8f8cdaf" translate="yes" xml:space="preserve">
          <source>Internally, &lt;a href=&quot;qsslcertificate&quot;&gt;QSslCertificate&lt;/a&gt; is stored as an X509 structure. You can access this handle by calling &lt;a href=&quot;qsslcertificate#handle&quot;&gt;handle&lt;/a&gt;(), but the results are likely to not be portable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b91cf45dad239804c9381d8d20522b1e565ed3fa" translate="yes" xml:space="preserve">
          <source>Internally, &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt; uses a Unicode based buffer, and &lt;a href=&quot;qtextcodec&quot;&gt;QTextCodec&lt;/a&gt; is used by &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt; to automatically support different character sets. By default, &lt;a href=&quot;qtextcodec#codecForLocale&quot;&gt;QTextCodec::codecForLocale&lt;/a&gt;() is used for reading and writing, but you can also set the codec by calling &lt;a href=&quot;qtextstream#setCodec&quot;&gt;setCodec&lt;/a&gt;(). Automatic Unicode detection is also supported. When this feature is enabled (the default behavior), &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt; will detect the UTF-16 or the UTF-32 BOM (Byte Order Mark) and switch to the appropriate UTF codec when reading. &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt; does not write a BOM by default, but you can enable this by calling &lt;a href=&quot;qtextstream#setGenerateByteOrderMark&quot;&gt;setGenerateByteOrderMark&lt;/a&gt;(true). When &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt; operates on a &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; directly, the codec is disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7bcd1ff22dd24a93c28d2df5419458279081217" translate="yes" xml:space="preserve">
          <source>Internally, CBOR booleans are represented by a pair of types, one for true and one for false. For that reason, boolean QCborValues will return true for &lt;a href=&quot;qcborvalue#isSimpleType&quot;&gt;isSimpleType&lt;/a&gt;() and one of &lt;code&gt;isSimpleType(QCborSimpleType::False)&lt;/code&gt; or &lt;code&gt;isSimpleType(QCborSimpleType::True)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3ed1af79c848f968a76b08e4abab5761bc0f099" translate="yes" xml:space="preserve">
          <source>Internally, a &lt;a href=&quot;qml-qtlocation-mapcircle&quot;&gt;MapCircle&lt;/a&gt; is implemented as a many-sided polygon. To calculate the radius points it uses a spherical model of the Earth, similar to the &lt;a href=&quot;qml-coordinate#atdistanceandazimuth&quot;&gt;atDistanceAndAzimuth&lt;/a&gt; method of the &lt;a href=&quot;qml-coordinate&quot;&gt;coordinate&lt;/a&gt; type. These two things can occasionally have implications for the accuracy of the circle's shape, depending on position and map projection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df0accf61454ab8fc96ab5a908567b833954f74a" translate="yes" xml:space="preserve">
          <source>Internally, the class &lt;a href=&quot;qxmlformatter&quot;&gt;QXmlFormatter&lt;/a&gt; is used for this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a19529e267da7517fd875bcd25b68cb33c3b1b02" translate="yes" xml:space="preserve">
          <source>Internally, the current input locale is also updated to the &lt;a href=&quot;qvirtualkeyboardinputengine&quot;&gt;QVirtualKeyboardInputEngine&lt;/a&gt; and the current input method instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12d5193105fa4f0c757e0fe7d56f69eec16e0864" translate="yes" xml:space="preserve">
          <source>Internally, the rendered frame data is cached to improve performance. You can control the memory usage by setting the QLOTTIE_RENDER_CACHE_SIZE environment variable (default value is 2).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e55879e67ef9553a9d7d8266bcec7563f71b808d" translate="yes" xml:space="preserve">
          <source>International Color Consortium License</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca48184381f6dd8bff05579a49115b93c3aed024" translate="yes" xml:space="preserve">
          <source>Internationalization (I18n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec41529ec988c31d48e2791253f7675f0f07663a" translate="yes" xml:space="preserve">
          <source>Internationalization and Localization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2abb349665b3c596e4e5822779f2112b6cbc35a" translate="yes" xml:space="preserve">
          <source>Internationalization and Localization with Qt Quick</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f94fb70ca810165ec04277fb7abf6fdc045c33a" translate="yes" xml:space="preserve">
          <source>Internationalization and Translations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccbde29b0c2649639c8bde4877993a267839bbe7" translate="yes" xml:space="preserve">
          <source>Internationalization support for text output</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39547fa8fe309e8461ab9af0af0ef58e7fe4b011" translate="yes" xml:space="preserve">
          <source>Internationalization with Qt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12a6c5dae4732a641e35cdd0cb6950a020c273a9" translate="yes" xml:space="preserve">
          <source>Internationalizing Your Application</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76d5733b82b9b85e7c7c9538c8b1cbf395dc743e" translate="yes" xml:space="preserve">
          <source>Internet Explorer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b286c3a59c89c8595d2b298fd0e05e0b038d2ca7" translate="yes" xml:space="preserve">
          <source>Internetwork control</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8ee8f70e7d8b9c0f444242c7791f8de975f2a89" translate="yes" xml:space="preserve">
          <source>Interoperability</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68ca9becb869366c2019fad49fda8924937f95b7" translate="yes" xml:space="preserve">
          <source>Interoperating with Other Applications</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="579216a4bf4b79a50711cd2f8ede750330f6ac62" translate="yes" xml:space="preserve">
          <source>Interpolate colors around a center point (&lt;a href=&quot;qconicalgradient&quot;&gt;QConicalGradient&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="853dd48ea69677e3dddb0324f1c571c9dcd876e5" translate="yes" xml:space="preserve">
          <source>Interpolate colors between a focal point and end points on a circle surrounding it (&lt;a href=&quot;qradialgradient&quot;&gt;QRadialGradient&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c7c844434952f7a7d6873645412200f791e657d" translate="yes" xml:space="preserve">
          <source>Interpolates along the shortest linear path between the rotational positions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4286a8ca2079226c8f60852b399b143b992ff06d" translate="yes" xml:space="preserve">
          <source>Interpolates along the shortest spherical path between the rotational positions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dceb51a0c9babafedc053d30866f637a74fbecf4" translate="yes" xml:space="preserve">
          <source>Interpolates colors between start and end points (&lt;a href=&quot;qlineargradient&quot;&gt;QLinearGradient&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5fbaeada52c7bf9da4fb49990c7ba99000bcce8" translate="yes" xml:space="preserve">
          <source>Interpret as an AM/PM time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33199116ba374a97f8d91283f08f29d671a3c18a" translate="yes" xml:space="preserve">
          <source>Interpreting XQuery results</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5127094825084e521d0c5ff031457ebf45865631" translate="yes" xml:space="preserve">
          <source>Interpreting the contents of this ID requires knowledge of the hardware and drivers in use (e.g. various TUIO-based touch surfaces).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aabaa49de802342df0fab1851ef79b2b20e7e08" translate="yes" xml:space="preserve">
          <source>Interpreting the contents of this ID requires knowledge of the hardware and drivers in use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94923c68ac681b4b2f83ca0d4f4c419b54ac6015" translate="yes" xml:space="preserve">
          <source>Interprets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac666a8d2e901a079f58db8f9b4602ac859f5ab1" translate="yes" xml:space="preserve">
          <source>Interrupts event dispatching. The event dispatcher will return from &lt;a href=&quot;qabstracteventdispatcher#processEvents&quot;&gt;processEvents&lt;/a&gt;() as soon as possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c48e26eade66a73cdee0b97cbf20ba6aa3e3066" translate="yes" xml:space="preserve">
          <source>Intersects the current clip path/rect/region with the one supplied in the function call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ac72156e5108255cbf494236e873305af168321" translate="yes" xml:space="preserve">
          <source>Intersects this path with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f678dda0995e0bc610b6eddf48cf8aeb36aeb773" translate="yes" xml:space="preserve">
          <source>Intersects this rectangle with the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88b8d8dcd838a12509dfccfa54186d69b7ea4d92" translate="yes" xml:space="preserve">
          <source>Intervals within the time range will be trimmed, split or deleted such that no intervals within the time range include any part of the target interval.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="902d9fcfadf44f98f30e4cfeedc8db078502d79d" translate="yes" xml:space="preserve">
          <source>Introduced in Qt 4.4, alien widgets are widgets unknown to the windowing system. They do not have a native window handle associated with them. This feature significantly speeds up widget painting, resizing, and removes flicker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53451c3064513a35eea5eca862e3f52dc56bdb7c" translate="yes" xml:space="preserve">
          <source>Introduction and Concepts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="298f3dca7e4240b0e6eae2119d7cceeb98bf97d2" translate="yes" xml:space="preserve">
          <source>Introduction to DOM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e5cacd0c9d1de31c9825ed14af49f02412fd6ef" translate="yes" xml:space="preserve">
          <source>Introduction to Model/View Programming</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be99ee5e295af601e7d782415138de0e021ce432" translate="yes" xml:space="preserve">
          <source>Introduction to QDoc</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a60ef26b46f2d85b08e69bcd757269ec6b2bc4d" translate="yes" xml:space="preserve">
          <source>Introduction to QML Test Cases</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="547b4f5f999568f26fbbf2f80a8b18760b672290" translate="yes" xml:space="preserve">
          <source>Introduction to SAX2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06a74c02894ec93718a988055ab27d78060281a8" translate="yes" xml:space="preserve">
          <source>Introductory Concepts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f6d459efec086aaa242454a455bbb8fb4a9e034" translate="yes" xml:space="preserve">
          <source>Intuitive &lt;a href=&quot;https://doc.qt.io/qt-5.13/reference-overview.html#&quot;&gt;API&lt;/a&gt;s for &lt;a href=&quot;https://doc.qt.io/qt-5.13/classes.html#&quot;&gt;C++&lt;/a&gt; and JavaScript-like programming with &lt;a href=&quot;qmlapplications#&quot;&gt;Qt Quick&lt;/a&gt; for rapid UI creation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="823ae32ca81959cfaa13f2adbec04e5033548aa0" translate="yes" xml:space="preserve">
          <source>Invalid CBOR stream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="302199ba8b22f010b6e4004fc46be10750bbd995" translate="yes" xml:space="preserve">
          <source>Invalid content was provided for sharing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fe3dee92c8d25f938abeebed888b2f83e79dcc8" translate="yes" xml:space="preserve">
          <source>Invalid data (certificate, key, cypher, etc.) was provided and its use resulted in an error in the SSL library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea0eeb53d4ab504a5c937902749a6bfaef3b2b1a" translate="yes" xml:space="preserve">
          <source>Invalid frame payload data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8725da555ba6740f4cb81f6a0addf84fd854f4d8" translate="yes" xml:space="preserve">
          <source>Invalid maneuvers are used when there is no information that needs to be attached to the endpoint of a &lt;a href=&quot;qgeoroutesegment&quot;&gt;QGeoRouteSegment&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38b0d315a5253b12fb226a6a57814782bb1ca8d6" translate="yes" xml:space="preserve">
          <source>Invalid parameters were passed to a tag type specific function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a59f06efae52e30c138550cf6052e71fd3d1ac9" translate="yes" xml:space="preserve">
          <source>Invalid usage:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c36e404fedcad259fb1f8b710d66da4011e648d5" translate="yes" xml:space="preserve">
          <source>InvalidMedia - the media cannot be played.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c9fc450b1e63daf00928865af63a2878a8d0fec" translate="yes" xml:space="preserve">
          <source>InvalidRequestError</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b343bfc8edef7982a27505cca76bf9e171177f2c" translate="yes" xml:space="preserve">
          <source>Invalidate the engine releasing its resources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28fd0da131c10039574fdf6a2387a1b7572f1e42" translate="yes" xml:space="preserve">
          <source>Invalidates all open sessions against the network interface and therefore stops the underlying network interface. This function always changes the session's &lt;a href=&quot;qnetworksession#state&quot;&gt;state&lt;/a&gt;() flag to &lt;a href=&quot;qnetworksession#State-enum&quot;&gt;Disconnected&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="396930f732f1b9e10197625d97961ea0eb15239c" translate="yes" xml:space="preserve">
          <source>Invalidates and destroys the &lt;a href=&quot;qvulkandevicefunctions&quot;&gt;QVulkanDeviceFunctions&lt;/a&gt; object for the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63acc69da023485981f875033a90db8cebf50236" translate="yes" xml:space="preserve">
          <source>Invalidates and schedules a redraw of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="617f68dafc0d99ed33bf6d23481ff2f4aaaa0832" translate="yes" xml:space="preserve">
          <source>Invalidates and schedules a redraw of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fa55c79f548c62898df83a1a0f5f787288abed8" translate="yes" xml:space="preserve">
          <source>Invalidates any cached information in this layout item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1c7f88e06661f3b9c657a064aab76e4f5b60e2a" translate="yes" xml:space="preserve">
          <source>Invalidates the current filtering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61eb128cc15d583da295effc653be5c7369d7111" translate="yes" xml:space="preserve">
          <source>Invalidates the current sorting and filtering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8e3c68e4ecb1b6f049aacf3a7c3c3a596c31057" translate="yes" xml:space="preserve">
          <source>InverseModelMatrix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e661f7bd72983f6a6d4371aa3e0af6c1aed1106" translate="yes" xml:space="preserve">
          <source>InverseModelViewMatrix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ef2cf002f8bd74e633bd46ec9ff5b31b2b36206" translate="yes" xml:space="preserve">
          <source>InverseModelViewProjectionMatrix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ad6555d1727b8811ec82aab8bbf33a5c90109aa" translate="yes" xml:space="preserve">
          <source>InverseProjectionMatrix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f8bde9fda525a665edec186dcd78af663229474" translate="yes" xml:space="preserve">
          <source>InverseViewMatrix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65cf1d14551dd4e4151a012883b3056f5c9bdb9a" translate="yes" xml:space="preserve">
          <source>InverseViewProjectionMatrix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d514461d1f2a20ff2e1bb5f30a5db01583e37b0c" translate="yes" xml:space="preserve">
          <source>InverseViewportMatrix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6c01c5ff52beb88be0fae8bb8795b83173a3836" translate="yes" xml:space="preserve">
          <source>Inversely, two connections having different connection names will always either be connected to different buses, or have a different unique name (as returned by &lt;a href=&quot;qdbusconnection#baseService&quot;&gt;baseService&lt;/a&gt;()) on that bus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fa2ee7cee68ecaea156a486358ad7d443ff492c" translate="yes" xml:space="preserve">
          <source>Invert all channels, including the alpha channel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6f3b4435a21d2db03f17e956b39cf2c26fa1421" translate="yes" xml:space="preserve">
          <source>Invert only the RGB values and leave the alpha channel unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dca87fb0afc4f2d70c4759cf137ccc73e28dacd1" translate="yes" xml:space="preserve">
          <source>Invert the current value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41a5a6b05a530daa22077eb00ce33d9e41f004aa" translate="yes" xml:space="preserve">
          <source>Inverted landscape orientation, rotated 180 degrees relative to landscape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb29bbe1651a1795e7803012b5e529310ed04c0c" translate="yes" xml:space="preserve">
          <source>Inverted portrait orientation, rotated 180 degrees relative to portrait.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="614ba9f0ee40ff48178d3333d8eafb243c7bb045" translate="yes" xml:space="preserve">
          <source>Inverting an 8-bit image means to replace all pixels using color index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f89e2e13b2d53505e4ba5beb51ed508f2f905217" translate="yes" xml:space="preserve">
          <source>Inverts all pixel values in the image using the given &lt;a href=&quot;qimage#InvertMode-enum&quot;&gt;InvertMode&lt;/a&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="183c03455e9c447f3250a0431b6af950625dab3d" translate="yes" xml:space="preserve">
          <source>Inverts all pixel values in the image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba293f01c775cf65b4737bb63033476678ce328a" translate="yes" xml:space="preserve">
          <source>Inverts the value of the bit at index position</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81f55d03d9cf38ebad7eaa836f0634d6bc0d5993" translate="yes" xml:space="preserve">
          <source>InvokeInfo Struct</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4381d0970c870f9bccbeee86a74393f59ac3dad1" translate="yes" xml:space="preserve">
          <source>InvokeInfo::autoforward</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8206e9d65f10260ed4d21eda61ce247d7b226e60" translate="yes" xml:space="preserve">
          <source>InvokeInfo::context</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7402e64f0e220b77a006d6709f773e2e1a12760f" translate="yes" xml:space="preserve">
          <source>InvokeInfo::expr</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38d0b39fb27a9b22acb33c01cdd5f2dfc5701d5f" translate="yes" xml:space="preserve">
          <source>InvokeInfo::finalize</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="596689b53ca7d90620be0ec6b273a9edaa78a33a" translate="yes" xml:space="preserve">
          <source>InvokeInfo::id</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="385a98bc9f665ae6eedf11448572b492ac6f73ea" translate="yes" xml:space="preserve">
          <source>InvokeInfo::location</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eabb765d76a8959ac813b96803f1ec194c4baa3b" translate="yes" xml:space="preserve">
          <source>InvokeInfo::prefix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37f4b18289c2f3a000794156016f542673d71d30" translate="yes" xml:space="preserve">
          <source>Invoked after class creation, but before any properties have been set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c5d65ebf8a7c7a86e94a67e797da7008ef07891" translate="yes" xml:space="preserve">
          <source>Invoked after the root component that caused this instantiation has completed construction. At this point all static values and binding values have been assigned to the class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c652c4a193a119c00ad771917bcf571273845893" translate="yes" xml:space="preserve">
          <source>InvokedServices (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b723a70a83f1081bbd8502be88feff54fff5dd7" translate="yes" xml:space="preserve">
          <source>InvokedServices QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e89c1d489a20cd5daa31f3ffbd42fc1219b9aca9" translate="yes" xml:space="preserve">
          <source>InvokedServices.children</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8064a80348b64a5df6ebb80a9c558076ddf3e16f" translate="yes" xml:space="preserve">
          <source>InvokedServices.qmlChildren</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89d0818053f38ad3dd4c981d540ad228f4a88d7b" translate="yes" xml:space="preserve">
          <source>InvokedServices.stateMachine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0653cecd1812cafe7ac03d67f761d57b75037a1" translate="yes" xml:space="preserve">
          <source>Invokes the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="403926caf9b98373530bada5936c3b9b41e12cee" translate="yes" xml:space="preserve">
          <source>Invokes the action specified by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19a0d8f5b219129e5c850a19a90607a1663b0ea5" translate="yes" xml:space="preserve">
          <source>Invokes the service with the parameters given in the constructor, passing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="def778a938250cecb483089c54dc1c291e3a04eb" translate="yes" xml:space="preserve">
          <source>Invokes this method on a &lt;a href=&quot;qobject#Q_GADGET&quot;&gt;Q_GADGET&lt;/a&gt;. Returns &lt;code&gt;true&lt;/code&gt; if the member could be invoked. Returns &lt;code&gt;false&lt;/code&gt; if there is no such member or the parameters did not match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fd9a794b68cc3e82e967ff9592720df0b5e426f" translate="yes" xml:space="preserve">
          <source>Invokes this method on the object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="521190094228156d8d614c1d4f8d823ae59819a7" translate="yes" xml:space="preserve">
          <source>Invoking QML Methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ad0b492b145db07777ac0897d486c668b634c41" translate="yes" xml:space="preserve">
          <source>Invoking the &lt;a href=&quot;qregularexpressionmatchiterator#hasNext&quot;&gt;hasNext&lt;/a&gt;() member function on the constructed object will return false, as the iterator is not iterating on a valid sequence of matches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bddaea174340270be5a83fe7aed2e32aa628eba" translate="yes" xml:space="preserve">
          <source>Irish</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de607a85708636dbeef859ca15fd3611756082c1" translate="yes" xml:space="preserve">
          <source>Irish, Ireland Gaelic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f4209f4f1a509e0a1ecea752f65dad71847167e" translate="yes" xml:space="preserve">
          <source>Is Alternative Frequency currently enabled</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a989cfaa0b13c8e65bcffebcea63eb577109d1f" translate="yes" xml:space="preserve">
          <source>Is currently being animated into a value explicitly assigned to the property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38c3afb2be1d5c11f4e714c3090fd7df8e09273c" translate="yes" xml:space="preserve">
          <source>Is easier to use (can use an integer directly)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b03ec4c67db372618c61438473d3465e98838e5" translate="yes" xml:space="preserve">
          <source>Is faster (no conversion to integer)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b760aca9613c83d76c1d8a842c2603e996fd7165" translate="yes" xml:space="preserve">
          <source>Is replaced with simple &lt;a href=&quot;qml-qtquick-controls2-scrollbar&quot;&gt;ScrollBar&lt;/a&gt;/&lt;a href=&quot;qml-qtquick-controls2-scrollindicator&quot;&gt;ScrollIndicator&lt;/a&gt; controls that can be attached to any Flickable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53dae1f2888a1dac0cf6a200eda0a4828798f032" translate="yes" xml:space="preserve">
          <source>Is set if one of the sub controls &lt;code&gt;CC_SpinUp&lt;/code&gt; or &lt;code&gt;CC_SpinDown&lt;/code&gt; is pressed on with the mouse.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7cb88ca211debbcb4ccfa2fed4163384ad7e738" translate="yes" xml:space="preserve">
          <source>Is the base of all QML animations. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="379845bcf0f21c58164cfdedeb93f17a65116be6" translate="yes" xml:space="preserve">
          <source>Is the base of all QML animators. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e519a8d6848029d5a23aa10992a6fe1e91c8825" translate="yes" xml:space="preserve">
          <source>Is this class thread-safe?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33ec2e47616bd9d7cbbec9faf74756ff4e984eaf" translate="yes" xml:space="preserve">
          <source>Is this function reentrant?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a37ffd6c22de35ce5f9a01d71d9ccaaee20b4709" translate="yes" xml:space="preserve">
          <source>Iscii-Bng, Dev, Gjr, Knd, Mlm, Ori, Pnj, Tlg, and Tml</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b50617b96967ffbee403356a54dcd844a4dfe47" translate="yes" xml:space="preserve">
          <source>Issues an OpenGL timer query at this point in the OpenGL command queue. Calling this function in a sequence in your application's rendering function, will build up details of the GPU time taken to execute the OpenGL commands between successive calls to this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="316c5953f37a6e67e5584de45c686a673745a61b" translate="yes" xml:space="preserve">
          <source>Issues the specified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff6bd96161d69f44ec125f231a68c0e462f49e16" translate="yes" xml:space="preserve">
          <source>Issues with High DPI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45e7a5bbe1ef1b964f66b1e1d230220f5336143f" translate="yes" xml:space="preserve">
          <source>It allows (z axis) rotation to be relative to an arbitrary point, and also provides a way to specify 3D-like rotations for Items. This gives more control over item rotation than the &lt;a href=&quot;qml-qtquick-item#rotation-prop&quot;&gt;rotation&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4984fdb3206365702c090708330b833f441b097f" translate="yes" xml:space="preserve">
          <source>It allows a QML class connect to another Bluetooth device and exchange strings with it. Data is sent and received using a &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; object allowing type safe transfers of QStrings. &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; is a well known format and can be decoded by non-Qt applications. Note that for the ease of use, &lt;a href=&quot;qml-qtbluetooth-bluetoothsocket&quot;&gt;BluetoothSocket&lt;/a&gt; is only well suited for use with strings. If you want to use a binary protocol for your application's communication you should consider using its C++ counterpart &lt;a href=&quot;qbluetoothsocket&quot;&gt;QBluetoothSocket&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b12bd1d383fbab4f5efe9fc2f69778a2ccfc5ca8" translate="yes" xml:space="preserve">
          <source>It allows a QML project to get information about a remote service, or describe a service for a &lt;a href=&quot;qml-qtbluetooth-bluetoothsocket&quot;&gt;BluetoothSocket&lt;/a&gt; to connect to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b4b3433cd22c8f41bbe4095e05cf6268dc8bb9a" translate="yes" xml:space="preserve">
          <source>It allows different scaling values for the x and y axes, and allows the scale to be relative to an arbitrary point. This gives more control over item scaling than the &lt;a href=&quot;qml-qtquick-item#scale-prop&quot;&gt;scale&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7ddece79928f675514b612febb4cad06af4bdd6" translate="yes" xml:space="preserve">
          <source>It allows for a combination of rotation, scale, translatation and shearing by using just one tranformation provided in a 4x4-matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f026fd7a5630d3c3fe988c2e105524badcd48ed" translate="yes" xml:space="preserve">
          <source>It also contains a hint to the renderer if this attribute is the attribute describing the position. The scene graph renderer may use this information to perform optimizations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bce71644cd326e0cd998c032adb61ef2dc96e28" translate="yes" xml:space="preserve">
          <source>It also contains some functions to ease the process of implementing different authentication flows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="493cddeffcbe0452095a7fd90b0b93f6886175e0" translate="yes" xml:space="preserve">
          <source>It also contains some helper functions to check if a version supports profiles or is a legacy version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af02a6692a3a740f2c059b27631f5a770d91067c" translate="yes" xml:space="preserve">
          <source>It also serves as the default text in menus and tooltips if the action has not been defined with &lt;a href=&quot;qaction#text-prop&quot;&gt;setText&lt;/a&gt;() or &lt;a href=&quot;qaction#toolTip-prop&quot;&gt;setToolTip&lt;/a&gt;(), and will also be used in toolbar buttons if no icon has been defined using &lt;a href=&quot;qaction#icon-prop&quot;&gt;setIcon&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c203ad6a1c7c27d13a01e3369d445de0f98f7af1" translate="yes" xml:space="preserve">
          <source>It also supports changing the acceleration mode, which controls whether the force of gravity is included in the accelerometer values or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9a8fc79765558feb0300bb02f26757bc3871342" translate="yes" xml:space="preserve">
          <source>It also supports multi-homing, meaning that a connected endpoint can have alternate IP addresses associated with it in order to route around network failure or changing conditions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30e14d615ec5de502fa147d4d19339331e025f93" translate="yes" xml:space="preserve">
          <source>It also works for any decimal values, 0.041 is increased to 0.042 by stepping once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cef09f3e06d41b65454452fa162e02412a062301" translate="yes" xml:space="preserve">
          <source>It applies this transformation to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec74539d87886723fe218f1f5f4fef1dfc156a4b" translate="yes" xml:space="preserve">
          <source>It bears repeating that the implementation of qHashBits() - like the &lt;a href=&quot;qhash#qHashx&quot;&gt;qHash&lt;/a&gt;() overloads offered by Qt - may change at any time. You &lt;b&gt;must not&lt;/b&gt; rely on the fact that qHashBits() will give the same results (for the same inputs) across different Qt versions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad7b9fddc80281837646eddd4ae396c594cdd1b8" translate="yes" xml:space="preserve">
          <source>It bears repeating that the implementation of qHashRange() - like the &lt;a href=&quot;qhash#qHashx&quot;&gt;qHash&lt;/a&gt;() overloads offered by Qt - may change at any time. You &lt;b&gt;must not&lt;/b&gt; rely on the fact that qHashRange() will give the same results (for the same inputs) across different Qt versions, even if &lt;a href=&quot;qhash#qHashx&quot;&gt;qHash&lt;/a&gt;() for the element type would.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64a0f55217642aafebe2b85ae8fc003c1bae06cb" translate="yes" xml:space="preserve">
          <source>It bears repeating that the implementation of qHashRangeCommutative() - like the &lt;a href=&quot;qhash#qHashx&quot;&gt;qHash&lt;/a&gt;() overloads offered by Qt - may change at any time. You &lt;b&gt;must not&lt;/b&gt; rely on the fact that qHashRangeCommutative() will give the same results (for the same inputs) across different Qt versions, even if &lt;a href=&quot;qhash#qHashx&quot;&gt;qHash&lt;/a&gt;() for the element type would.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5944cc5e5e18363fef910bcd4efee0b9d7c004c" translate="yes" xml:space="preserve">
          <source>It binds the entire sequence (2, 3, 1) to &lt;code&gt;$i&lt;/code&gt; one time only; the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6edb9bc8f0d65fd663144161a9ebdb55a6e2d504" translate="yes" xml:space="preserve">
          <source>It builds upon the API concepts and types in the &lt;a href=&quot;location-positioning-qml&quot;&gt;QML Positioning API&lt;/a&gt;. A more hands-on introduction of the Maps and Navigation types can be found in the &lt;a href=&quot;qml-location5-maps#&quot;&gt;Maps and Navigation tutorial&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76e018e8f1ab8bdee308e845a5c0c9ac4cc190ec" translate="yes" xml:space="preserve">
          <source>It calculates bounding rectangles with &lt;a href=&quot;qaccessibleinterface#rect&quot;&gt;rect()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="219e19c86e81f297e7203581f535136a8a3189a0" translate="yes" xml:space="preserve">
          <source>It can also be controlled with the &lt;a href=&quot;qml-qtquick-particles-particlesystem#pause-method&quot;&gt;pause()&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-particles-particlesystem#resume-method&quot;&gt;resume()&lt;/a&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79e5efdb1f3b42907410bd26d8fce88aff86ea38" translate="yes" xml:space="preserve">
          <source>It can also be controlled with the &lt;a href=&quot;qml-qtquick-particles-particlesystem#start-method&quot;&gt;start()&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-particles-particlesystem#stop-method&quot;&gt;stop()&lt;/a&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c8e19bcf4c6fd9384ad9ea3da65b7ea4e85dc0f" translate="yes" xml:space="preserve">
          <source>It can also be used on other platforms, where it will fall back to using &lt;a href=&quot;qfiledialog&quot;&gt;QFileDialog&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c19aead23c28756fafe778a7a23039aefd300005" translate="yes" xml:space="preserve">
          <source>It can also be used to manage variables that are temporarily set, such as reentrancy guards. By using this class, the variable will be reset whether the function is exited normally, exited early by a return statement, or exited by an exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="576766953327a007c542234820d8d3e3d0d82303" translate="yes" xml:space="preserve">
          <source>It can also be useful for C++ integration, as it is just a plain &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;. See the &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; documentation for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddeb01fb7f1586aef3d3140874c13b6db65e2d13" translate="yes" xml:space="preserve">
          <source>It can always be overridden on a per-instance basis by using the class in question's own setFormat() function. However, it is often more convenient to set the format for all windows once at the start of the application. It also guarantees proper behavior in cases where shared contexts are required, because settings the format via this function guarantees that all contexts and surfaces, even the ones created internally by Qt, will use the same format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24fa36164b918cd24b98323c51d1dfb678fd91e8" translate="yes" xml:space="preserve">
          <source>It can be accessed through &lt;a href=&quot;qml-qtaudioengine-audioengine#samples-prop&quot;&gt;QtAudioEngine::AudioEngine::samples&lt;/a&gt; with its unique name and must be defined inside &lt;a href=&quot;qml-qtaudioengine-audioengine&quot;&gt;AudioEngine&lt;/a&gt; or be added to it using &lt;a href=&quot;qml-qtaudioengine-audioengine#addAudioSample-method&quot;&gt;AudioEngine.addAudioSample()&lt;/a&gt; if &lt;a href=&quot;qml-qtaudioengine-audiosample&quot;&gt;AudioSample&lt;/a&gt; is created dynamically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39253f3cd3feae05e5a33d596f92a18b8ce17f2e" translate="yes" xml:space="preserve">
          <source>It can be added by calling the addRenderState() method on a &lt;a href=&quot;qt3drender-qrenderpass&quot;&gt;QRenderPass&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cd7b00495f9b9033bb6f0df4a2c067c5f5cfd1c" translate="yes" xml:space="preserve">
          <source>It can be added to a &lt;a href=&quot;qml-qt3d-render-renderpass&quot;&gt;RenderPass&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35cb0834007b85d120b70e7e3374271d030b058b" translate="yes" xml:space="preserve">
          <source>It can be added to a &lt;a href=&quot;qt3drender-qrenderpass&quot;&gt;QRenderPass&lt;/a&gt; by calling &lt;a href=&quot;qt3drender-qrenderpass#addRenderState&quot;&gt;QRenderPass::addRenderState&lt;/a&gt;():</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="756454e7ff6a7b759692a71049cdf2e00d1be48c" translate="yes" xml:space="preserve">
          <source>It can be added to the renderStates property of a &lt;a href=&quot;qml-qt3d-render-renderpass&quot;&gt;RenderPass&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="863953534b59c1406d24c245ca2bcfc1f761ba12" translate="yes" xml:space="preserve">
          <source>It can be checked or unchecked by the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddd4c2e884a5b7dc84bb431c4f54fbf755e617c3" translate="yes" xml:space="preserve">
          <source>It can be constructed by calling QTextLayout::glyphs() or QTextFragment::glyphs(). The returned QGlyphs objects will contain &lt;a href=&quot;qrawfont&quot;&gt;QRawFont&lt;/a&gt; objects which represent the actual fonts used to render each portion of the text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f55802815077653d397d9c042a23f0232b6cb09" translate="yes" xml:space="preserve">
          <source>It can be constructed by passing a &lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; object to &lt;a href=&quot;qrawfont#fromFont&quot;&gt;QRawFont::fromFont&lt;/a&gt;(). The function will return a &lt;a href=&quot;qrawfont&quot;&gt;QRawFont&lt;/a&gt; object representing the font that will be selected as response to the &lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; query and the selected writing system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65bdde1c55c3f6482b8a9f3379aedf34642cdcb9" translate="yes" xml:space="preserve">
          <source>It can be constructed by passing a file name or &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; directly to the &lt;a href=&quot;qrawfont&quot;&gt;QRawFont&lt;/a&gt; constructor, or by calling &lt;a href=&quot;qrawfont#loadFromFile&quot;&gt;loadFromFile&lt;/a&gt;() or &lt;a href=&quot;qrawfont#loadFromData&quot;&gt;loadFromData&lt;/a&gt;(). In this case, the font will not be registered in &lt;a href=&quot;qfontdatabase&quot;&gt;QFontDatabase&lt;/a&gt;, and it will not be available as part of regular font selection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c276d80a9a30740d1706d84828ebb244e57bac4" translate="yes" xml:space="preserve">
          <source>It can be divided up into four frames:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1223746ae57a94dce4395bcb2706e48ca8104c53" translate="yes" xml:space="preserve">
          <source>It can be dragged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac4f7dc8a0ca2d13e7045480e410b514bbb3f8c3" translate="yes" xml:space="preserve">
          <source>It can be edited.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="597be183245fc23b96ccdbcc67660b11f2a3a037" translate="yes" xml:space="preserve">
          <source>It can be made movable again, for instance in the case of flat lists without a tree structure, by calling this method. In such a scenario, it is recommended to call &lt;a href=&quot;qtreeview#rootIsDecorated-prop&quot;&gt;QTreeView::setRootIsDecorated&lt;/a&gt;(false) as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15b46fe0d86c02e525a5dde701316cbe8ee5fdbb" translate="yes" xml:space="preserve">
          <source>It can be one of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b7c4d914e36f712edaeb95c5553bd269c537f1e" translate="yes" xml:space="preserve">
          <source>It can be selected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4641348892fc6fdcd2d9cacf5ccc61a4a5320beb" translate="yes" xml:space="preserve">
          <source>It can be set directly in script, for example if a KeyProxy might forward keys to it and you desire it to look active when this happens (but without actually giving it active focus).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c41d785207e03aa1adb4dc982c51cdc3e5132b76" translate="yes" xml:space="preserve">
          <source>It can be set to any Item type, but is generally used with &lt;a href=&quot;qml-qtquick-controls-statusbar&quot;&gt;StatusBar&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0784486a79a740d55a513ff81b31e808caf0bb4" translate="yes" xml:space="preserve">
          <source>It can be set to any Item type, but is generally used with &lt;a href=&quot;qml-qtquick-controls-toolbar&quot;&gt;ToolBar&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="567670ddbd0ae3fec2006a1b13cb71bfe5ddfe36" translate="yes" xml:space="preserve">
          <source>It can be set to specify the type of audio being played when the backend supports audio roles unknown to Qt. Specifying a role allows the system to make appropriate decisions when it comes to volume, routing or post-processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20aa4597a59e191237d3bb6e66efd962ad684236" translate="yes" xml:space="preserve">
          <source>It can be set to specify the type of audio being played, allowing the system to make appropriate decisions when it comes to volume, routing or post-processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="283e125d8412d3960dd6a9daa6e07fb72799b119" translate="yes" xml:space="preserve">
          <source>It can be trivially modified to this legal code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99c38d3ce62724786ab29874c396ded2562633f6" translate="yes" xml:space="preserve">
          <source>It can be used as a drop target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7a23ba4f81b7d98d9ee6935314e7bca508fcd59" translate="yes" xml:space="preserve">
          <source>It can be used for example to query the list of sample rates, supported by specific audio codec.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="183b1de3935ac771e1fd8c10f79a1d6ac954fd9c" translate="yes" xml:space="preserve">
          <source>It can be used in the following manner:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ead9df0c1b0575bc0d0a33bce64a5d7d3f5aebc" translate="yes" xml:space="preserve">
          <source>It can be used like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abd99b8b533b0aeb5722d11614f365584e6a7b43" translate="yes" xml:space="preserve">
          <source>It can be used the following way:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34364e67d73845bacc0449fa4d3fc154a7472391" translate="yes" xml:space="preserve">
          <source>It can be used to check if the connection is valid and to disconnect it using &lt;a href=&quot;qobject#disconnect&quot;&gt;QObject::disconnect&lt;/a&gt;(). For a signal-functor connection without a context object, it is the only way to selectively disconnect that connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9c21c8b8ae4ca9d07b3563567eb8bc09c34c3fb" translate="yes" xml:space="preserve">
          <source>It can be used to define animations in a number of ways:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74f5affc1716e1f7cc78adcc84bf9c6eeb36bca8" translate="yes" xml:space="preserve">
          <source>It can be used to get a pointer to a &lt;a href=&quot;qcamera&quot;&gt;QCamera&lt;/a&gt; object in order to integrate with C++ code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="719bdd30f3a1d36fdc308c00432d38baabe88fe2" translate="yes" xml:space="preserve">
          <source>It can be used to get a pointer to a &lt;a href=&quot;qmediaplayer&quot;&gt;QMediaPlayer&lt;/a&gt; object in order to integrate with C++ code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d4650be314919998feb18759663ed8063cb3544" translate="yes" xml:space="preserve">
          <source>It can be useful to create a &lt;a href=&quot;qml-qtqml-qtobject&quot;&gt;QtObject&lt;/a&gt; if you need an extremely lightweight type to enclose a set of custom properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd26f5b10ac0cd1404617fdf0d0e17928c20bd47" translate="yes" xml:space="preserve">
          <source>It can display a number in just about any size. It can display decimal, hexadecimal, octal or binary numbers. It is easy to connect to data sources using the &lt;a href=&quot;qlcdnumber#display&quot;&gt;display&lt;/a&gt;() slot, which is overloaded to take any of five argument types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94a869f078fbe9528084e08bb53b5c677affb42e" translate="yes" xml:space="preserve">
          <source>It can display both plain and rich text. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e999e99adeadccdcf56950f0b1cb402a39a39e9a" translate="yes" xml:space="preserve">
          <source>It can have the following values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="914517643dabff5989680bb0fa42b9b264191cc4" translate="yes" xml:space="preserve">
          <source>It can hold one of the following values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffa07a546f629995f6f807ec2bea525a645aa9a2" translate="yes" xml:space="preserve">
          <source>It can move any number of times between inactive and active. When an item is activated, it's visible on the screen and is considered to be the current item. An item in a &lt;a href=&quot;qml-qtquick-controls-stackview&quot;&gt;StackView&lt;/a&gt; that is not visible is not activated, even if the item is currently the top-most item in the stack. When the stack becomes visible, the item that is top-most gets activated. Likewise if the stack is then hidden, the topmost item would be deactivated. Popping the item off the top of the stack at this point would not result in further deactivation since the item is not active.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="981602013db45a2004e08c5ae8649530ebe8c51e" translate="yes" xml:space="preserve">
          <source>It can often be helpful to use a &lt;a href=&quot;qml-qtquick-loader&quot;&gt;Loader&lt;/a&gt; to create a delegate that will choose different &lt;a href=&quot;qml-qtqml-component&quot;&gt;Component&lt;/a&gt;s based on the search result type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6be06a8058b5e30aa884f9f64e6d645bc5084f34" translate="yes" xml:space="preserve">
          <source>It can only refer to an object, or the property of an object, that is within the scope of the &lt;a href=&quot;qtqml-typesystem-objecttypes#&quot;&gt;type&lt;/a&gt; within which the alias is declared.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a15e0344d288486a506acea443939f47f6a52b1e" translate="yes" xml:space="preserve">
          <source>It can parse and construct URLs in both encoded and unencoded form. &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; also has support for internationalized domain names (IDNs).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15549a038b624c1c82b6784f42f79754db50d35e" translate="yes" xml:space="preserve">
          <source>It cannot contain arbitrary JavaScript expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc53e1d1f1962e58c3ef52a28e58e16ca3116859" translate="yes" xml:space="preserve">
          <source>It cannot refer to &lt;a href=&quot;#attached-properties-and-attached-signal-handlers&quot;&gt;attached properties&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab4a07c82d8fd418ee2d9897679e5a862c7e2363" translate="yes" xml:space="preserve">
          <source>It cannot refer to grouped properties; the following code will not work:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d718011d690c2a7c86ffd153d8ca57c39a7c714" translate="yes" xml:space="preserve">
          <source>It cannot refer to objects declared outside of the scope of its type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c774a12f3d7b2e724a6be900e58eef99c8e867d0" translate="yes" xml:space="preserve">
          <source>It considers everything as its argument until the next \li command, until the next &lt;a href=&quot;#table-command&quot;&gt;\endtable&lt;/a&gt;, or &lt;a href=&quot;#list-command&quot;&gt;\endlist&lt;/a&gt; command. See &lt;a href=&quot;#table-command&quot;&gt;\table&lt;/a&gt; and &lt;a href=&quot;#list-command&quot;&gt;\list&lt;/a&gt; for examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="683f4ad4925cca36470b681737c2063e3235bc5d" translate="yes" xml:space="preserve">
          <source>It contains a bitwise combination of the following flags:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae10595351d107e0b1100232f5c97e310d2de508" translate="yes" xml:space="preserve">
          <source>It contains a bitwise combination of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5a652170af614a432e7f5dc020bad5e3357d859" translate="yes" xml:space="preserve">
          <source>It contains a number of bits which are reserved for future use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de627034552374543aaf2ea3babd9803cad918ce" translate="yes" xml:space="preserve">
          <source>It contains locale specific properties for formatting data and numbers. Unless a special locale has been set, this is either the parent's locale or the default locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b3c10267dbf61cfa55764fd16dc6da382c762e4" translate="yes" xml:space="preserve">
          <source>It contains only the bare minimum you need to get a Qt application up and running.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f81199369a996a01dfdeeb066ee12855cc07ab7c" translate="yes" xml:space="preserve">
          <source>It contains the necessary information mipmap level, layer, cube face and source URL to load at the proper place data into an OpenGL texture.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa85f4882b7961774f9760cbe7ffa180bfd15cb1" translate="yes" xml:space="preserve">
          <source>It contains the new value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edd740f635ad31227c41db473f259fc8dedc4a4d" translate="yes" xml:space="preserve">
          <source>It corresponds to the Wayland &lt;code&gt;ivi_surface&lt;/code&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c875677cf59aca1579db214ecccd0eb3643e0993" translate="yes" xml:space="preserve">
          <source>It corresponds to the Wayland interface &lt;code&gt;wl_shell_surface&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d7ab84c14287c233d9637feaea440f91dca4096" translate="yes" xml:space="preserve">
          <source>It corresponds to the Wayland interface &lt;code&gt;xdg_popup&lt;/code&gt; for the unstable xdg-shell protocol v5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd387a8d318380f81a010425f4cd491cb0975525" translate="yes" xml:space="preserve">
          <source>It corresponds to the Wayland interface &lt;code&gt;xdg_popup&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff7f41e5d703902991079a77fc825755f23f8cb7" translate="yes" xml:space="preserve">
          <source>It corresponds to the Wayland interface &lt;code&gt;xdg_surface&lt;/code&gt; for the unstable xdg-shell protocol v5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="598dbcff4b6c53a9810ff3dbdc8caff169832847" translate="yes" xml:space="preserve">
          <source>It corresponds to the Wayland interface &lt;code&gt;xdg_surface&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cba404c1dfa22997e3adf32ddbb15c441436a7c3" translate="yes" xml:space="preserve">
          <source>It corresponds to the Wayland interface &lt;code&gt;xdg_toplevel&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c32e9c3a26fcfa5e9b6d5c829b69e32d46d37de" translate="yes" xml:space="preserve">
          <source>It corresponds to the Wayland interface &lt;code&gt;zxdg_popup_v6&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b23189d3c6152b079f6976750e60b3875fca0fb" translate="yes" xml:space="preserve">
          <source>It corresponds to the Wayland interface &lt;code&gt;zxdg_surface_v6&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe3eee004d263b6e6f6c423d2b674a04bf1e66be" translate="yes" xml:space="preserve">
          <source>It corresponds to the Wayland interface &lt;code&gt;zxdg_toplevel_v6&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36320ceb8b2b941fa71b9c4ac0a0e43f9f243a93" translate="yes" xml:space="preserve">
          <source>It corresponds to the Wayland interface xdg_popup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fbad593bf3c856bca988f7afbe12181233645d8" translate="yes" xml:space="preserve">
          <source>It corresponds to the Wayland interface xdg_surface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d94960f4c8fe01717abeb64f90ea03ddea1b81aa" translate="yes" xml:space="preserve">
          <source>It could be rewritten as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7854cbaa5b348027942941ef88093fd21cd9253b" translate="yes" xml:space="preserve">
          <source>It creates a modal file dialog with the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57a19ad12ba8a78de65b07b87d50a795242a17f0" translate="yes" xml:space="preserve">
          <source>It creates a new &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; element in the output and sets its &lt;code&gt;id&lt;/code&gt; attribute to be the &lt;code&gt;id&lt;/code&gt; attribute from an &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; element in the &lt;code&gt;other.html&lt;/code&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5eb04a2a2d3c56f524e4c7ef9e242d2a41da1dc" translate="yes" xml:space="preserve">
          <source>It declares a copy constructor and an assignment operator in the private section, so that if you use them by mistake, the compiler will report an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ba0405223d67e0e23594f2a7b087cb507bad3fd" translate="yes" xml:space="preserve">
          <source>It defines the application's look and feel, which is encapsulated in a &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt; object. This can be changed at runtime with &lt;a href=&quot;qapplication#setStyle&quot;&gt;setStyle&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3ed3cb647fae1c8e09170c073f57ba28de7fd37" translate="yes" xml:space="preserve">
          <source>It does not have any properties set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3acce62e4074d338db65ec656e6177d6e55e5df6" translate="yes" xml:space="preserve">
          <source>It does not matter if you need the plugin to be statically or dynamically linked with the application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04512ed337df9551c01626a7ac2b8624e38d2f75" translate="yes" xml:space="preserve">
          <source>It does not rely on the keypress events having been received by this process, which makes it possible to check the modifiers while moving a window, for instance. Note that in most cases, you should use &lt;a href=&quot;qguiapplication#keyboardModifiers&quot;&gt;keyboardModifiers&lt;/a&gt;(), which is faster and more accurate since it contains the state of the modifiers as they were when the currently processed event was received.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="087d89232ff16315383e2516545349d303a30cef" translate="yes" xml:space="preserve">
          <source>It doesn't matter whether</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ecb6ebc61063bbacb9c0c026f36ad2f9b073e1a" translate="yes" xml:space="preserve">
          <source>It effectively removes the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="586523dd1de61e24c38212f20a100a98c979028d" translate="yes" xml:space="preserve">
          <source>It exits if the environment variable QT_FATAL_CRITICALS is not empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6bc5ec246de23c168d2000a0c80fda9f82d05ed" translate="yes" xml:space="preserve">
          <source>It expands to &quot;constexpr&quot; if your compiler supports C++14 relaxed constant expressions, or to nothing otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b14daf646ead43dc35f1beadc58b1dff95da4835" translate="yes" xml:space="preserve">
          <source>It expands to &quot;constexpr&quot; if your compiler supports that C++11 keyword, or to nothing otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2fafd14a2a13054735b0b90fecc6b2a4c9038e5" translate="yes" xml:space="preserve">
          <source>It expands to &quot;final&quot; if your compiler supports that C++11 contextual keyword, or something non-standard if your compiler supports something close enough to the C++11 semantics, or to nothing otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dda4956c81f1a66f18c2382c338c70ef02f6dd00" translate="yes" xml:space="preserve">
          <source>It expands to &quot;override&quot; if your compiler supports that C++11 contextual keyword, or to nothing otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1328a7abac036019dc6108ffe87f51dc513b2ce6" translate="yes" xml:space="preserve">
          <source>It expands to &quot;std::move&quot; if your compiler supports that C++11 function, or to nothing otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a22201dd0cacb85cbedd7a1f8b71bcd9312ee34" translate="yes" xml:space="preserve">
          <source>It gives &lt;a href=&quot;qaccessibleinterface#text&quot;&gt;text()&lt;/a&gt; strings that are appropriate for a generic widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baff72efa71208d9ce3bf84d42f6c7e9ad05c6dc" translate="yes" xml:space="preserve">
          <source>It handles action and methods that can be performed on all widgets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d80eaf5aafc8276d75cb7e3929df1f695f1bbea6" translate="yes" xml:space="preserve">
          <source>It handles events, roles, and actions that are common for all &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcfa18afa04130e35cc9bc0fdd8c0670a74b26d7" translate="yes" xml:space="preserve">
          <source>It handles the navigation of the tree and hit testing of the objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25f4cfd1770b336ed72e290d4a4d907c55769643" translate="yes" xml:space="preserve">
          <source>It has a constructor, &lt;a href=&quot;qvector3d#QVector3D&quot;&gt;QVector3D::QVector3D&lt;/a&gt;(), which was documented with the following QDoc comment:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="307b0514246f0b2cbf6a25766fb90dbf848a8746" translate="yes" xml:space="preserve">
          <source>It has no effect if this &lt;a href=&quot;qwaylandview&quot;&gt;QWaylandView&lt;/a&gt; is not holding any &lt;a href=&quot;qwaylandsurface&quot;&gt;QWaylandSurface&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9214a064597d998360157e3eb1ad171cc63c9dc" translate="yes" xml:space="preserve">
          <source>It has properties to restrict the range of dragging, rotation, and zoom.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbb147382f18634242fec28ddac23ed6d1bd30b3" translate="yes" xml:space="preserve">
          <source>It has properties to restrict the range of dragging.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0da96ecf616499fd95fd33ebc5ffa269b4740bb" translate="yes" xml:space="preserve">
          <source>It holds the &lt;a href=&quot;qstyleoptiongroupbox#lineWidth-var&quot;&gt;lineWidth&lt;/a&gt; and the &lt;a href=&quot;qstyleoptiongroupbox#midLineWidth-var&quot;&gt;midLineWidth&lt;/a&gt; for drawing the panel, the group box's &lt;a href=&quot;qstyleoptiongroupbox#text-var&quot;&gt;title&lt;/a&gt; and the title's &lt;a href=&quot;qstyleoptiongroupbox#textAlignment-var&quot;&gt;alignment&lt;/a&gt; and &lt;a href=&quot;qstyleoptiongroupbox#textColor-var&quot;&gt;color&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17e69d5003726c1bac53e6cedac2584d9d7f9050" translate="yes" xml:space="preserve">
          <source>It indicates that the current menu item is a submenu.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e093bfc6d78e1e1547c0a049f6e522be5305702" translate="yes" xml:space="preserve">
          <source>It initializes the application with the user's desktop settings such as &lt;a href=&quot;qapplication#palette&quot;&gt;palette&lt;/a&gt;(), &lt;a href=&quot;qapplication#font&quot;&gt;font&lt;/a&gt;() and &lt;a href=&quot;qapplication#doubleClickInterval-prop&quot;&gt;doubleClickInterval&lt;/a&gt;(). It keeps track of these properties in case the user changes the desktop globally, for example through some kind of control panel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="717fbf1f2896e6f5e2110800645fa1bf23a79870" translate="yes" xml:space="preserve">
          <source>It initializes the application with the user's desktop settings, such as &lt;a href=&quot;qguiapplication#palette&quot;&gt;palette&lt;/a&gt;(), &lt;a href=&quot;qguiapplication#font&quot;&gt;font&lt;/a&gt;() and &lt;a href=&quot;qguiapplication#styleHints&quot;&gt;styleHints&lt;/a&gt;(). It keeps track of these properties in case the user changes the desktop globally, for example, through some kind of control panel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="158bb68a636b8a4bf14d764de8e18bcbcf4514ba" translate="yes" xml:space="preserve">
          <source>It is &lt;code&gt;true&lt;/code&gt; if the state machine has been initialized, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b828861f1e5c605a6da8279a9400c9e8ecb0aea" translate="yes" xml:space="preserve">
          <source>It is NOT recommended to use this as creating each printer instance may take a long time, especially if there are remote networked printers, and retained instances may become outdated if changes are made on the local system or remote print server. Use &lt;a href=&quot;qprinterinfo#availablePrinterNames&quot;&gt;availablePrinterNames&lt;/a&gt;() instead and only instantiate printer instances as you need them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7df1f5b7578eddafecf13d4c19140bcb447b6512" translate="yes" xml:space="preserve">
          <source>It is Qt's widgets that are styled. Some widgets do not exist at all in Java, e.g., &lt;a href=&quot;qtoolbox&quot;&gt;QToolBox&lt;/a&gt;. Others contain elements that the Java widgets don't. The tree widget is an example of the latter in which Java's JTree does not have a header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53311b03eb87fc69e7b003cf8cf53b87468551a2" translate="yes" xml:space="preserve">
          <source>It is a common pattern to enable or disable the groupbox's children when its checkbox is toggled on or off, but it is up to the application to decide on the behavior of the checkbox.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c366d914eed1e83aca437a132691aaafb5dedf8" translate="yes" xml:space="preserve">
          <source>It is a message-based protocol, designed originally for multiplex electrical wiring within automobiles, but is also used in many other contexts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0171709e02ae0c22857b4d42663d7c67cc52da9c" translate="yes" xml:space="preserve">
          <source>It is a read-only property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e887987ed98ce584e83214e2953e3ab76cc9f524" translate="yes" xml:space="preserve">
          <source>It is a separate import in order to allow you to have a QML environment without access to window system features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b57b97b79872693313dda786ba76fe317ebb8643" translate="yes" xml:space="preserve">
          <source>It is a waste of time to make a separate &lt;code&gt;.qdocinc&lt;/code&gt; file for every QDoc include snippet you want to use in multiple places in the documentation, especially given that you probably have to put the copyright/license notice in every one of these files. So if you have a large number of snippets to be included, you can put them all in a single file if you want, and surround each one with:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fc3a96f6a0375330fce259bb6e8266d9ab1a963" translate="yes" xml:space="preserve">
          <source>It is advisable to replace the generated Info.plist with your own copy, to prevent it from being overwritten the next time qmake is run. You can define a custom information property list with &lt;a href=&quot;qmake-variable-reference#qmake-info-plist&quot;&gt;QMAKE_INFO_PLIST&lt;/a&gt; variable in your .pro file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ab78b2f6648de89b1fd8c1b15e2d603939a795b" translate="yes" xml:space="preserve">
          <source>It is almost always incorrect to use the Synchronous incubation mode - elements or components that want the appearance of synchronous instantiation, but without the downsides of introducing freezes or stutters into the application, should use the &lt;a href=&quot;qqmlincubator#IncubationMode-enum&quot;&gt;AsynchronousIfNested&lt;/a&gt; incubation mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6162530598b07fc079d3bcc5b5a68ee86304e4b" translate="yes" xml:space="preserve">
          <source>It is almost never necessary to explicitly grab the keyboard in Qt, as Qt grabs and releases it sensibly. In particular, Qt grabs the keyboard when your item gains input focus, and releases it when your item loses input focus, or when the item is hidden.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd769466237fe77c02badbed366dc136951dcd80" translate="yes" xml:space="preserve">
          <source>It is almost never necessary to explicitly grab the mouse in Qt, as Qt grabs and releases it sensibly. In particular, Qt grabs the mouse when you press a mouse button, and keeps the mouse grabbed until you release the last mouse button. Also, &lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt::Popup&lt;/a&gt; widgets implicitly call grabMouse() when shown, and &lt;a href=&quot;qgraphicsitem#ungrabMouse&quot;&gt;ungrabMouse&lt;/a&gt;() when hidden.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2df1664baf4040632633d516e44021a5edfd104" translate="yes" xml:space="preserve">
          <source>It is almost never necessary to grab the mouse when using Qt, as Qt grabs and releases it sensibly. In particular, Qt grabs the mouse when a mouse button is pressed and keeps it until the last button is released.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06ce74bdab3c79e72b4e802b67e9c64c594e19e7" translate="yes" xml:space="preserve">
          <source>It is also called when the &lt;code&gt;onbeforeunload&lt;/code&gt; handler is requesting a confirmation before leaving a page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="918ea64a9cf288952cbe6d10d8635b8b1c17045a" translate="yes" xml:space="preserve">
          <source>It is also necessary to ensure that the plugin is installed together with other</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fa8e5d351235b93e4f5f477a53bb4c35645c672" translate="yes" xml:space="preserve">
          <source>It is also possible to add offsets to this rectangle's coordinates using the &lt;a href=&quot;qrect#adjust&quot;&gt;adjust&lt;/a&gt;() function, as well as retrieve a new rectangle based on adjustments of the original one using the &lt;a href=&quot;qrect#adjusted&quot;&gt;adjusted&lt;/a&gt;() function. If either of the width and height is negative, use the &lt;a href=&quot;qrect#normalized&quot;&gt;normalized&lt;/a&gt;() function to retrieve a rectangle where the corners are swapped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76ab689eeb38675ef6811fdf610699d3746a2391" translate="yes" xml:space="preserve">
          <source>It is also possible to add offsets to this rectangle's coordinates using the &lt;a href=&quot;qrectf#adjust&quot;&gt;adjust&lt;/a&gt;() function, as well as retrieve a new rectangle based on adjustments of the original one using the &lt;a href=&quot;qrectf#adjusted&quot;&gt;adjusted&lt;/a&gt;() function. If either of the width and height is negative, use the &lt;a href=&quot;qrectf#normalized&quot;&gt;normalized&lt;/a&gt;() function to retrieve a rectangle where the corners are swapped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c0258ee76afc53147ecf9674ffe18781ac56e3d" translate="yes" xml:space="preserve">
          <source>It is also possible to catch the thrown error in JavaScript:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7f83c18da726a02f0a45f554f22cea88b3dda83" translate="yes" xml:space="preserve">
          <source>It is also possible to center the popup in the window by using &lt;a href=&quot;qml-qtquick-controls2-overlay&quot;&gt;Overlay&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f05fc3d02e6ce632c08e021186ca19c5eaa6fee9" translate="yes" xml:space="preserve">
          <source>It is also possible to combine multiple layered items:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da60f9f75fea34148c723e1ab6663fd7d1515299" translate="yes" xml:space="preserve">
          <source>It is also possible to create your own static plugins, by following these steps:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01ea410c8f2f3af9ebac97523455059a19e3b3d2" translate="yes" xml:space="preserve">
          <source>It is also possible to determine if a routing waypoint has been passed by checking if &lt;a href=&quot;qgeomaneuver#waypoint&quot;&gt;waypoint&lt;/a&gt;() returns a valid &lt;a href=&quot;qgeocoordinate&quot;&gt;QGeoCoordinate&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d123453692ee09be2ba1797b38df57e086d1580" translate="yes" xml:space="preserve">
          <source>It is also possible to disable support for these libraries by using &lt;code&gt;-no&lt;/code&gt; instead of &lt;code&gt;-qt&lt;/code&gt;. For example, to use the system's xcb library and disable zlib support, enter the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9abce1fa8fc7a1fc26c050273f4e7b5515c5d54a" translate="yes" xml:space="preserve">
          <source>It is also possible to draw 2D graphics onto a &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt; subclass using &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c6460f2cd7fac16bb0d947b87f6eeebad0b3c48" translate="yes" xml:space="preserve">
          <source>It is also possible to drop Widgets onto the &lt;a href=&quot;#the-object-inspector&quot;&gt;Object Inspector&lt;/a&gt; to handle nested layouts easily.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="372ccf2f52e9e48053a626b1e2385c2a6686cacc" translate="yes" xml:space="preserve">
          <source>It is also possible to filter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8da27e376350611d95285d11a6f675949b019ca7" translate="yes" xml:space="preserve">
          <source>It is also possible to filter out certain types of node by passing certain &lt;a href=&quot;qtreewidgetitemiterator#IteratorFlag-enum&quot;&gt;flags&lt;/a&gt; to the constructor of &lt;a href=&quot;qtreewidgetitemiterator&quot;&gt;QTreeWidgetItemIterator&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a9cd6da091425f9c298c19e22f1b534444b3edf" translate="yes" xml:space="preserve">
          <source>It is also possible to get a shared pointer from an object outside of the class itself. This is especially useful in code that provides an interface to scripts, where it is currently not possible to use shared pointers. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c22c2d95f1becf636e9f75f0652c72ad6f10b783" translate="yes" xml:space="preserve">
          <source>It is also possible to have QML singleton types registered without using the &lt;a href=&quot;qqmlengine#qmlRegisterSingletonType&quot;&gt;qmlRegisterSingletonType&lt;/a&gt; function. That can be done by adding a pragma Singleton statement among the imports of the type's QML file. In addition the type must be defined in a qmldir file with a singleton keyword and the qmldir must be imported by the QML files using the singleton.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2431e2de322561aaeda2e9041d6f8bfcc2bc519" translate="yes" xml:space="preserve">
          <source>It is also possible to initialize the object from a file, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53ba905de9a0210b2bd577c0b528cab818142a66" translate="yes" xml:space="preserve">
          <source>It is also possible to instantiate components without blocking via the &lt;a href=&quot;qml-qtqml-component#incubateObject-method&quot;&gt;incubateObject()&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97666956bf09a62e9c16aac8198a6e45fb3e3d9e" translate="yes" xml:space="preserve">
          <source>It is also possible to manually enable dependencies on Qt libraries by opening the &lt;b&gt;Run&lt;/b&gt; settings of your project, expanding &lt;b&gt;Package configurations&lt;/b&gt; and selecting the &lt;b&gt;Libraries&lt;/b&gt; tab. Manually check the libraries that are dependencies of your project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="636c707658d7a99b8a61c10e5c0176e751cf341a" translate="yes" xml:space="preserve">
          <source>It is also possible to misuse &lt;a href=&quot;qcborstreamwriter&quot;&gt;QCborStreamWriter&lt;/a&gt; and produce invalid CBOR streams that will fail to be decoded by a receiver. The following actions will produce invalid streams:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9e05499ebbd0e58be0348798001c333ad3452f2" translate="yes" xml:space="preserve">
          <source>It is also possible to override the antialiasing method used by setting the environment variable &lt;code&gt;QSG_ANTIALIASING_METHOD&lt;/code&gt; to either &lt;code&gt;vertex&lt;/code&gt; or &lt;code&gt;msaa&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a6dc3e2e2acfd6c9cd819b5f38aad533a9fa384" translate="yes" xml:space="preserve">
          <source>It is also possible to perform dynamic casts using &lt;a href=&quot;qobject#qobject_cast&quot;&gt;qobject_cast&lt;/a&gt;() on &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; classes. The &lt;a href=&quot;qobject#qobject_cast&quot;&gt;qobject_cast&lt;/a&gt;() function behaves similarly to the standard C++ &lt;code&gt;dynamic_cast()&lt;/code&gt;, with the advantages that it doesn't require RTTI support and it works across dynamic library boundaries. It attempts to cast its argument to the pointer type specified in angle-brackets, returning a non-zero pointer if the object is of the correct type (determined at run-time), or &lt;code&gt;nullptr&lt;/code&gt; if the object's type is incompatible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdb68f03a0442be419ce189e77451068fb01e681" translate="yes" xml:space="preserve">
          <source>It is also possible to receive a stream of debug messages from the OpenGL server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2889cb70240788ffb44204acb38a9a94697971df" translate="yes" xml:space="preserve">
          <source>It is also possible to run a single file using the &lt;code&gt;-input&lt;/code&gt; option. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db33c652c1a5643d022e7bff49e6246a7d979b19" translate="yes" xml:space="preserve">
          <source>It is also possible to set certain default properties by modifying the &lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; before it is supplied to the print dialog. For example, applications that generate batches of reports for printing may set up the &lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; to &lt;a href=&quot;qprinter#setOutputFileName&quot;&gt;write to a local file&lt;/a&gt; by default rather than to a printer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f60135b7b5eeb67132a2bbf1d8a21f6895fed4e" translate="yes" xml:space="preserve">
          <source>It is also possible to set multiple shortcut &lt;a href=&quot;qml-qtquick-shortcut#sequences-prop&quot;&gt;sequences&lt;/a&gt;, so that the shortcut can be &lt;a href=&quot;qml-qtquick-shortcut#activated-signal&quot;&gt;activated&lt;/a&gt; via several different sequences of key presses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8526893572d2213609eb7b181c1f941c538f5115" translate="yes" xml:space="preserve">
          <source>It is also possible to set values at specified steps situated between the start and end value. The interpolation will then touch these points at the specified steps. Note that the start and end values are defined as the key values at 0.0 and 1.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58907f11a7ee5b997bf4379e8c4c134194cc383a" translate="yes" xml:space="preserve">
          <source>It is also possible to show different help texts for different regions of a widget, by using a &lt;a href=&quot;qhelpevent&quot;&gt;QHelpEvent&lt;/a&gt; of type &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::WhatsThis&lt;/a&gt;. Intercept the help event in your widget's &lt;a href=&quot;qwidget#event&quot;&gt;QWidget::event&lt;/a&gt;() function and call &lt;a href=&quot;qwhatsthis#showText&quot;&gt;QWhatsThis::showText&lt;/a&gt;() with the text you want to display for the position specified in &lt;a href=&quot;qhelpevent#pos&quot;&gt;QHelpEvent::pos&lt;/a&gt;(). If the text is rich text and the user clicks on a link, the widget also receives a &lt;a href=&quot;qwhatsthisclickedevent&quot;&gt;QWhatsThisClickedEvent&lt;/a&gt; with the link's reference as &lt;a href=&quot;qwhatsthisclickedevent#href&quot;&gt;QWhatsThisClickedEvent::href&lt;/a&gt;(). If a &lt;a href=&quot;qwhatsthisclickedevent&quot;&gt;QWhatsThisClickedEvent&lt;/a&gt; is handled (i.e. &lt;a href=&quot;qwidget#event&quot;&gt;QWidget::event&lt;/a&gt;() returns true), the help window remains visible. Call &lt;a href=&quot;qwhatsthis#hideText&quot;&gt;QWhatsThis::hideText&lt;/a&gt;() to hide it explicitly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9244191674a5b2c04ef44b034401cddef7f9141a" translate="yes" xml:space="preserve">
          <source>It is also possible to show different tool tips for different regions of a widget, by using a &lt;a href=&quot;qhelpevent&quot;&gt;QHelpEvent&lt;/a&gt; of type &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::ToolTip&lt;/a&gt;. Intercept the help event in your widget's &lt;a href=&quot;qwidget#event&quot;&gt;event()&lt;/a&gt; function and call &lt;a href=&quot;qtooltip#showText&quot;&gt;QToolTip::showText&lt;/a&gt;() with the text you want to display. The &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-widgets-tooltips-example.html#&quot;&gt;Tooltips&lt;/a&gt; example illustrates this technique.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ec11205dbe1a818a163c2297989fa3a069aca61" translate="yes" xml:space="preserve">
          <source>It is also possible to specify a member function directly, as in:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ec061b403c31a1522bc910e5dfaf840bf338b30" translate="yes" xml:space="preserve">
          <source>It is also possible to specify start and end in a single argument, with the numbers separated by two periods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb12509294d47da34a51229bbe48ad84ad549e07" translate="yes" xml:space="preserve">
          <source>It is also possible to use &lt;a href=&quot;qabstractitemmodeltester&quot;&gt;QAbstractItemModelTester&lt;/a&gt; outside of a test case. For instance, it may be useful to test an item model used by an application without the need of building an explicit unit test for such a model (which might be challenging). In order to use &lt;a href=&quot;qabstractitemmodeltester&quot;&gt;QAbstractItemModelTester&lt;/a&gt; outside of a test case, pass one of the &lt;code&gt;QAbstractItemModelTester::FailureReportingMode&lt;/code&gt; enumerators to its constructor, therefore specifying how failures should be logged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b32458ed1959b27d9c08f30ba65b748c3cf361d" translate="yes" xml:space="preserve">
          <source>It is also possible to use a delegate as the template for the items created by a Repeater. This is specified using the &lt;a href=&quot;qml-qtquick-repeater#delegate-prop&quot;&gt;delegate&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53e56b30a39183fbc13875a195f9cd389ac70fd4" translate="yes" xml:space="preserve">
          <source>It is also possible to use the &lt;code&gt;on&lt;/code&gt; keyword to tie the &lt;a href=&quot;qml-qtquick-opacityanimator&quot;&gt;OpacityAnimator&lt;/a&gt; directly to an Item instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a19848eb55088cd32ed0468f7142a5d0d05a0a1" translate="yes" xml:space="preserve">
          <source>It is also possible to use the &lt;code&gt;on&lt;/code&gt; keyword to tie the &lt;a href=&quot;qml-qtquick-rotationanimator&quot;&gt;RotationAnimator&lt;/a&gt; directly to the &lt;code&gt;rotation&lt;/code&gt; property of an Item instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdce0f3a3e277a98d60e74ce915b72408445641e" translate="yes" xml:space="preserve">
          <source>It is also possible to use the &lt;code&gt;on&lt;/code&gt; keyword to tie the &lt;a href=&quot;qml-qtquick-scaleanimator&quot;&gt;ScaleAnimator&lt;/a&gt; directly to an Item instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c80ec327ff85447ee100d1bb71fa6dd3b2df115" translate="yes" xml:space="preserve">
          <source>It is also possible to use the &lt;code&gt;on&lt;/code&gt; keyword to tie the &lt;a href=&quot;qml-qtquick-uniformanimator&quot;&gt;UniformAnimator&lt;/a&gt; directly to a uniform of a &lt;a href=&quot;qml-qtquick-shadereffect&quot;&gt;ShaderEffect&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e01460823de575901dc6f64cd863058b7be3562" translate="yes" xml:space="preserve">
          <source>It is also possible to use the &lt;code&gt;on&lt;/code&gt; keyword to tie the &lt;a href=&quot;qml-qtquick-xanimator&quot;&gt;XAnimator&lt;/a&gt; directly to an Item instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7daa6d7f3766cd43a117a7e6e32addc079bcba4" translate="yes" xml:space="preserve">
          <source>It is also possible to use the &lt;code&gt;on&lt;/code&gt; keyword to tie the &lt;a href=&quot;qml-qtquick-yanimator&quot;&gt;YAnimator&lt;/a&gt; directly to an Item instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70881c0db00dee2420383c49a6ca254a0f5476a4" translate="yes" xml:space="preserve">
          <source>It is also usual to use &lt;code&gt;PE_IndicatorCheckBox&lt;/code&gt; (instead of using &lt;code&gt;PE_IndicatorMenuCheckMark&lt;/code&gt;) and &lt;code&gt;PE_IndicatorRadioButton&lt;/code&gt; for drawing checkable menu items; we have not included them in the style tree as this is optional and varies from style to style.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df5157cc775b9e7ee0e83e062447bc9ee2a95697" translate="yes" xml:space="preserve">
          <source>It is always best to cast integers to a Qt integer type, such as &lt;a href=&quot;qtglobal#qint16-typedef&quot;&gt;qint16&lt;/a&gt; or &lt;a href=&quot;qtglobal#quint32-typedef&quot;&gt;quint32&lt;/a&gt;, when reading and writing. This ensures that you always know exactly what size integers you are reading and writing, no matter what the underlying platform and architecture the application happens to be running on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10ae19d77ab28328d9e4f5073dc624a0bf2e5900" translate="yes" xml:space="preserve">
          <source>It is always safe to remove an event filter, even during event filter activation (i.e. from the &lt;a href=&quot;qobject#eventFilter&quot;&gt;eventFilter&lt;/a&gt;() function).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bf2d74636c6daefde70cc25c6232998bb8b4e25" translate="yes" xml:space="preserve">
          <source>It is always safe to remove an event filter, even during event filter activation (i.e. from the nativeEventFilter() function).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56aa8a6e88ada08148ea931a197072313c54af7d" translate="yes" xml:space="preserve">
          <source>It is always safe to remove an event filter, even during event filter filter activation (that is, even from within the &lt;a href=&quot;qabstractnativeeventfilter#nativeEventFilter&quot;&gt;nativeEventFilter()&lt;/a&gt; function).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d14cf07f967c7a4767253322ec7c24163ade430" translate="yes" xml:space="preserve">
          <source>It is an extended radial gradient.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a92cda40432e18765c5ad2d06c71b84593fb33d" translate="yes" xml:space="preserve">
          <source>It is an indicative measure calculated from the dimensions of the map area, roughly corresponding how much zoom level could change with maximum pinch zoom. Default value is 4.0, maximum value is 10.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e766061a8aefde8309a4bc3115316659d910e0e" translate="yes" xml:space="preserve">
          <source>It is applied to all items that are created when:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ddb5a28e9a9113a838d12a815b586cb79fe380b" translate="yes" xml:space="preserve">
          <source>It is assumed that &lt;a href=&quot;qopenglbuffer#create&quot;&gt;create&lt;/a&gt;() has been called on this buffer and that it has been bound to the current context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="129e6e4bc27c2510269b13a04e570226d8f70ee3" translate="yes" xml:space="preserve">
          <source>It is assumed that this buffer has been bound to the current context, and that it was previously mapped with &lt;a href=&quot;qopenglbuffer#map&quot;&gt;map&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25534a13d5099963ed578b6caddd34729e8ef682" translate="yes" xml:space="preserve">
          <source>It is assumed that this buffer has been bound to the current context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a766809687525fe238537020d0b462294c0551aa" translate="yes" xml:space="preserve">
          <source>It is assumed the list is given in highest to lowest preference order. By calling this function all previous configurations will be invalidated and replaced with the new list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="623d5b0a45435708982ac32b50cef0c73ce57c4f" translate="yes" xml:space="preserve">
          <source>It is at this point that the surface format set using &lt;a href=&quot;qoffscreensurface#setFormat&quot;&gt;setFormat&lt;/a&gt;() gets resolved into an actual native surface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a31fb5fe9a2a1a457a12df6097699e680812e6a" translate="yes" xml:space="preserve">
          <source>It is at this point that the surface format set using &lt;a href=&quot;qwindow#setFormat&quot;&gt;setFormat&lt;/a&gt;() gets resolved into an actual native surface. However, the window remains hidden until &lt;a href=&quot;qwindow#visible-prop&quot;&gt;setVisible&lt;/a&gt;() is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c28bcedba1d45890d6d91a10dc5f317e31c8f3a" translate="yes" xml:space="preserve">
          <source>It is attached to each child item of the &lt;a href=&quot;qml-qtquick-controls2-swipeview&quot;&gt;SwipeView&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b1246f9ad07b0d01b165e9dd5dc88e69642faf1" translate="yes" xml:space="preserve">
          <source>It is attached to each instance of the delegate and also to the header, the footer and the highlight delegates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea71242f46d9f5013a2a5a6ca43e279a9780a018" translate="yes" xml:space="preserve">
          <source>It is attached to each instance of the delegate and also to the header, the footer, the section and the highlight delegates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c38e46008f8137c53006711504cd9a98470aad2" translate="yes" xml:space="preserve">
          <source>It is attached to each instance of the delegate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc92eb6b4d088ae6c3eac423e49dd78cb10de9f0" translate="yes" xml:space="preserve">
          <source>It is attached to each tab button of the &lt;a href=&quot;qtquickcontrols2-navigation#tabbar&quot;&gt;TabBar&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8538c9439c5972550d98139c45c3a0626307c25" translate="yes" xml:space="preserve">
          <source>It is available as a convenience for developers, as it offers a cleaner API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="010aa57a32da8a16628682a57841d8fb968a7c5d" translate="yes" xml:space="preserve">
          <source>It is bright (eg. shade).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9452f6a38a6280572a93e2344caf809679c134db" translate="yes" xml:space="preserve">
          <source>It is called by the QPA platform plugin. On Windows, it is called by the event dispatcher.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e34fc78ca0cddadfd1d71a057b44c0bbaee4b35" translate="yes" xml:space="preserve">
          <source>It is common for a style to have certain properties or attributes that apply to all controls. &lt;a href=&quot;qtqml-syntax-objectattributes#attached-properties-and-attached-signal-handlers&quot;&gt;Attached properties&lt;/a&gt; are a great way of extending an item in QML without having to modify any existing C++ belonging to that item. For example, both the &lt;a href=&quot;qtquickcontrols2-material#&quot;&gt;Material&lt;/a&gt; and &lt;a href=&quot;qtquickcontrols2-universal#&quot;&gt;Universal&lt;/a&gt; styles have an attached theme property that controls whether an item and its children will be rendered in a light or dark theme.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6b625dfd42310f7f1aadbb1abaae4aea0f2de45" translate="yes" xml:space="preserve">
          <source>It is common on Unix to also use the build tool to install applications and libraries; for example, by invoking &lt;code&gt;make install&lt;/code&gt;. For this reason, qmake has the concept of an &lt;code&gt;install set&lt;/code&gt;, an object which contains instructions about the way a part of a project is to be installed. For example, a collection of documentation files can be described in the following way:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3b456ff1e3f7af07002a6a66e055a7adc5746d6" translate="yes" xml:space="preserve">
          <source>It is currently not possible to set files in Xcode configuration settings from the qmake generated Xcode project file. The way the libraries are linked in the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e0fc9241cbe83d02a5bf3108392bd689bb47e49" translate="yes" xml:space="preserve">
          <source>It is customary to add a &quot;.&quot; at the end of the description.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2e1e606a9787eacf9644145f8300a30fa1a6ba7" translate="yes" xml:space="preserve">
          <source>It is dark.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8146302270fb45d397c493dd6468046828cb8bad" translate="yes" xml:space="preserve">
          <source>It is easy to move items around between the top level and lower levels in the tree. We just need to check whether the items are top-level items or not, and this information is supplied by each item's &lt;code&gt;parent()&lt;/code&gt; function. For example, we can remove the current item in the tree widget regardless of its location:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26cb0deebc5382597abfb9cef263ffa1378ccce5" translate="yes" xml:space="preserve">
          <source>It is equivalent to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75e0bfe833798efaebf20d3ba56c0a3ac5e09079" translate="yes" xml:space="preserve">
          <source>It is equivalent to &lt;code&gt;for (;;)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bc23296d0636cfb2a92d034fdb9c24e9fdd10f7" translate="yes" xml:space="preserve">
          <source>It is equivalent to a plain &lt;code&gt;int&lt;/code&gt;, except with respect to function overloading and type conversions. You should never need to use this class in your applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c4c711893861b666a75432c98b3587a7ad0e21c" translate="yes" xml:space="preserve">
          <source>It is equivalent to a regular JavaScript variable. For example, var properties can store numbers, strings, objects, arrays and functions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2916d11bc42a9fa95831147ea86ce0f13f890c50" translate="yes" xml:space="preserve">
          <source>It is equivalent to the following code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ad0e9ce2d2116d74fb4ae3071167fd7914bb1ed" translate="yes" xml:space="preserve">
          <source>It is equivalent to the following snippet, but is faster and easier to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd682ac87607826c2b9f641beda6ad968ac97712" translate="yes" xml:space="preserve">
          <source>It is equivalent to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9461ca819b79aca455e7db0ca5cfd3c74a66ccfa" translate="yes" xml:space="preserve">
          <source>It is generally advisable to explicitly enable or disable the socket notifier, especially for write notifiers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e74d2d8dea2295d8503926bc1b4e5bcc52917794" translate="yes" xml:space="preserve">
          <source>It is generally not advisable to add excessive amounts of pages to a &lt;a href=&quot;qml-qtquick-controls2-swipeview&quot;&gt;SwipeView&lt;/a&gt;. However, when the amount of pages grows larger, or individual pages are relatively complex, it may be desirable to free up resources by unloading pages that are outside the immediate reach of the user. The following example presents how to use &lt;a href=&quot;qml-qtquick-loader&quot;&gt;Loader&lt;/a&gt; to keep a maximum of three pages simultaneously instantiated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="975004d91ac6535aceecf578becbefc9384c7860" translate="yes" xml:space="preserve">
          <source>It is generally recommended that saving across plugins be handled as saving &lt;a href=&quot;qml-qtlocation-place#favorites&quot;&gt;favorites&lt;/a&gt; as explained in the Favorites section. However there is another approach which is to create a new place, set its (destination) plugin and then use the &lt;a href=&quot;qml-qtlocation-place#copyFrom-method&quot;&gt;copyFrom()&lt;/a&gt; method to copy the details of the original place. Using &lt;a href=&quot;qml-qtlocation-place#copyFrom-method&quot;&gt;copyFrom()&lt;/a&gt; only copies data that is supported by the destination plugin, plugin specific data such as the place identifier is not copied over. Once the copy is done, the place is in a suitable state to be saved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e39ad455f26cd03f557ebbfbd4f53805340369f" translate="yes" xml:space="preserve">
          <source>It is good practice to check that persistent model indexes are valid before using them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26b1103fa73cbd63a372437cb81f765f52b73d25" translate="yes" xml:space="preserve">
          <source>It is important that subclasses use this method to ensure that the engine reports its capabilities correctly. If this function is not used the engine will report that it supports no feature types at all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="174d037084f991bc15ed34658397b385c41ccb5b" translate="yes" xml:space="preserve">
          <source>It is important that subclasses use this method to ensure that the engine reports its capabilities correctly. If this function is not used the engine will report that it supports no feature weights at all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b14ab6f34d8cda255104be8a4e9ca871eb3dfdf8" translate="yes" xml:space="preserve">
          <source>It is important that subclasses use this method to ensure that the engine reports its capabilities correctly. If this function is not used the engine will report that it supports no maneuver details at all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c43299b32dd759de87f92833b7128f8045469a4" translate="yes" xml:space="preserve">
          <source>It is important that subclasses use this method to ensure that the engine reports its capabilities correctly. If this function is not used the engine will report that it supports no route optimizations at all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d676de6f84c7c803dd76e18f3e8d6ae1d3a74bc" translate="yes" xml:space="preserve">
          <source>It is important that subclasses use this method to ensure that the engine reports its capabilities correctly. If this function is not used the engine will report that it supports no segment detail at all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf9d03e573ee6966f0e0813b7eb5cbf1afe47954" translate="yes" xml:space="preserve">
          <source>It is important that subclasses use this method to ensure that the engine reports its capabilities correctly. If this function is not used the engine will report that it supports no travel modes at all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="012d0f22fd1c0dfb663f652dd7215779724ddba3" translate="yes" xml:space="preserve">
          <source>It is important that the application stores the purchase information before calling &lt;a href=&quot;qinapptransaction#finalize&quot;&gt;finalize&lt;/a&gt;(). If a transaction is not finalized (for example because the application was interrupted before it had a chance to save the information), then the transaction will be emitted again the next time the product is registered by &lt;a href=&quot;qinappstore#registerProduct&quot;&gt;QInAppStore::registerProduct&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ab729fc211c7fc438a1b472feb77695e9c74eef" translate="yes" xml:space="preserve">
          <source>It is important that the lifetime of the creation context outlive any created objects. See &lt;a href=&quot;qtqml-javascript-dynamicobjectcreation#maintaining-dynamically-created-objects&quot;&gt;Maintaining Dynamically Created Objects&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc0ab4889ed04d78385978d7ce346aae2f3489c5" translate="yes" xml:space="preserve">
          <source>It is important that this is done before &lt;a href=&quot;qgeoroutingmanagerengine#calculateRoute&quot;&gt;calculateRoute&lt;/a&gt;(), &lt;a href=&quot;qgeoroutingmanagerengine#updateRoute&quot;&gt;updateRoute&lt;/a&gt;() or any of the capability reporting functions are used to prevent incorrect or inconsistent behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c907c36acbdba58842b6001078c74f66c1675903" translate="yes" xml:space="preserve">
          <source>It is important that you first log out of the current iTunes user on your Apple device. To do this, open the &lt;b&gt;Settings&lt;/b&gt; app from the homescreen and go to the &lt;b&gt;iTunes &amp;amp; App Store&lt;/b&gt; entry. Click the first entry (which should be &lt;b&gt;Apple ID&lt;/b&gt;) and select &lt;b&gt;Sign Out&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cffedcaff560f6aa27c9f8aa9e26b809601ccc7" translate="yes" xml:space="preserve">
          <source>It is important that you have a current OpenGL context set when creating the &lt;a href=&quot;qopenglframebufferobject&quot;&gt;QOpenGLFramebufferObject&lt;/a&gt;, otherwise the initialization will fail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03ee7437446422026062e49703fd2a5c4f792985" translate="yes" xml:space="preserve">
          <source>It is important to note that changes in regular properties of JavaScript objects assigned to a var property will &lt;b&gt;not&lt;/b&gt; trigger updates of bindings that access them. The example below will display &quot;The car has 4 wheels&quot; as the change to the wheels property will not cause the reevaluation of the binding assigned to the &quot;text&quot; property:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edba41d969b8314c08ee7f1d257182c013dfed70" translate="yes" xml:space="preserve">
          <source>It is important to note that qAsConst() does not copy its argument, it just performs a &lt;code&gt;const_cast&amp;lt;const T&amp;amp;&amp;gt;(t)&lt;/code&gt;. This is also the reason why it is designed to fail for rvalues: The returned reference would go stale too soon. So while this works (but detaches the returned object):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c2278586684d35b34cc6ba1056194dd99c22c91" translate="yes" xml:space="preserve">
          <source>It is important to note that the &lt;code&gt;operator&amp;lt;&amp;lt;&lt;/code&gt; and &lt;code&gt;operator&amp;gt;&amp;gt;&lt;/code&gt; streaming functions must always produce the same number of entries in case of structures, both in reading and in writing (marshalling and demarshalling), otherwise calls and signals may start to silently fail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76c0b9977aec506b6ffbafd7a03a8d8f6a14fbac" translate="yes" xml:space="preserve">
          <source>It is important to note that the above syntax is in fact an &lt;a href=&quot;qtqml-syntax-basics#object-declarations&quot;&gt;object declaration&lt;/a&gt; which will instantiate an object which acts on a pre-existing property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4fa2a7b79a59dd440bef47d100c165686e7ed47" translate="yes" xml:space="preserve">
          <source>It is important to note that the results in the &lt;a href=&quot;qplacecontentreply&quot;&gt;QPlaceContentReply&lt;/a&gt;, is a &lt;a href=&quot;qplacecontent#Collection-typedef&quot;&gt;QPlaceContent::Collection&lt;/a&gt; which is essentially a &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;&amp;lt;int, &lt;a href=&quot;qplacecontent&quot;&gt;QPlaceContent&lt;/a&gt;&amp;gt;. The key &lt;code&gt;int&lt;/code&gt; in this case is the index of the content, and the value is the content itself. Due to the way Content is implemented it is possible to convert a content type as follows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df991ff64539213f31feaa035b09649a6567217f" translate="yes" xml:space="preserve">
          <source>It is important to note that using a low-priority worker thread is recommended to minimize the risk of starving the GUI thread (which could result in worse perceived performance). Also, remember that synchronization and locking mechanisms can be a significant cause of slow performance, and so care should be taken to avoid unnecessary locking.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4d2dc43ca3893ab0de2b9987ff1f1831106ffb3" translate="yes" xml:space="preserve">
          <source>It is important to remember that Frameworks always link with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ec23f5aaa648d329361b5660b879ffea24d0fb4" translate="yes" xml:space="preserve">
          <source>It is important to remember that a &lt;a href=&quot;qthread&quot;&gt;QThread&lt;/a&gt; instance &lt;a href=&quot;qobject#thread-affinity&quot;&gt;lives in&lt;/a&gt; the old thread that instantiated it, not in the new thread that calls &lt;a href=&quot;qthread#run&quot;&gt;run&lt;/a&gt;(). This means that all of &lt;a href=&quot;qthread&quot;&gt;QThread&lt;/a&gt;'s queued slots and &lt;a href=&quot;qmetaobject#invokeMethod&quot;&gt;invoked methods&lt;/a&gt; will execute in the old thread. Thus, a developer who wishes to invoke slots in the new thread must use the worker-object approach; new slots should not be implemented directly into a subclassed &lt;a href=&quot;qthread&quot;&gt;QThread&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f22ff167f1710ecdaf6aa9a5d8eb1a4763d74693" translate="yes" xml:space="preserve">
          <source>It is important to set this property when the widget does not provide any text. For example a button that only contains an icon needs to set this property to work with screen readers. The name should be short and equivalent to the visual information conveyed by the widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7e5eb8574e041c10f899c3971339da369260b9e" translate="yes" xml:space="preserve">
          <source>It is impossible to assign a weight to &lt;a href=&quot;qgeorouterequest#FeatureType-enum&quot;&gt;QGeoRouteRequest::NoFeature&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba50f25cd2e2c7ac90e6b2fa85b238318560387b" translate="yes" xml:space="preserve">
          <source>It is impossible to compare two numbers as strings directly. As a workaround, construct temporary values with a non-numeric prefix and compare these.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71bd4ea55e48a1e236d043fd181ff306e6781f44" translate="yes" xml:space="preserve">
          <source>It is instructive to compare &lt;a href=&quot;qexplicitlyshareddatapointer&quot;&gt;QExplicitlySharedDataPointer&lt;/a&gt; with &lt;a href=&quot;qshareddatapointer&quot;&gt;QSharedDataPointer&lt;/a&gt; by way of an example. Consider the &lt;a href=&quot;qshareddatapointer#employee-example&quot;&gt;Employee example&lt;/a&gt; in &lt;a href=&quot;qshareddatapointer&quot;&gt;QSharedDataPointer&lt;/a&gt;, modified to use explicit sharing as explained in the discussion &lt;a href=&quot;qshareddatapointer#implicit-vs-explicit-sharing&quot;&gt;Implicit vs Explicit Sharing&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b00413076cac600bb2eb053b8081483aab47f5c" translate="yes" xml:space="preserve">
          <source>It is light (eg. internal lights).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a372ecb5f20dde23cc306a871312878490424cfb" translate="yes" xml:space="preserve">
          <source>It is likely at this point that you do not have all the necessary details to complete the information required to register your app. For now, just fill out the forms with stub data as everything except the &lt;b&gt;SKU&lt;/b&gt; and &lt;b&gt;Version&lt;/b&gt; fields are editable later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76d28b8d59ed5fa49f03e9e3e07f540ec8616817" translate="yes" xml:space="preserve">
          <source>It is mandatory to call this at the end of the saving operation, otherwise the file will be discarded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bee586e821a8226e0a973f772b2cb41652532fa" translate="yes" xml:space="preserve">
          <source>It is modeled after &lt;a href=&quot;qtcpserver&quot;&gt;QTcpServer&lt;/a&gt;, and behaves the same. So, if you know how to use &lt;a href=&quot;qtcpserver&quot;&gt;QTcpServer&lt;/a&gt;, you know how to use &lt;a href=&quot;qwebsocketserver&quot;&gt;QWebSocketServer&lt;/a&gt;. This class makes it possible to accept incoming WebSocket connections. You can specify the port or have &lt;a href=&quot;qwebsocketserver&quot;&gt;QWebSocketServer&lt;/a&gt; pick one automatically. You can listen on a specific address or on all the machine's addresses. Call &lt;a href=&quot;qwebsocketserver#listen&quot;&gt;listen&lt;/a&gt;() to have the server listen for incoming connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b18da9b8db071e24e7df35de8d0f871165b4e024" translate="yes" xml:space="preserve">
          <source>It is moderately dark.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e8fa35edff019402eae8437fbebd56a6630061a" translate="yes" xml:space="preserve">
          <source>It is more efficient to use anchors rather than bindings to position items relative to each other. Consider this use of bindings to position rect2 relative to rect1:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f507a367592c795347ff2370f9a8ed7dca3cc12" translate="yes" xml:space="preserve">
          <source>It is mostly used as a container to access other types such as &lt;a href=&quot;qml-qtaudioengine-audiocategory&quot;&gt;AudioCategory&lt;/a&gt;, &lt;a href=&quot;qml-qtaudioengine-audiosample&quot;&gt;AudioSample&lt;/a&gt; and Sound.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dda7b4c6bc00b9014386313e0d52be49e51597b" translate="yes" xml:space="preserve">
          <source>It is necessary to call this function to start event handling. The main event loop receives events from the window system and dispatches these to the application widgets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="606505cd6d77ddd79ff5d656d18538652790baa0" translate="yes" xml:space="preserve">
          <source>It is necessary to first register the scheme with &lt;a href=&quot;qwebengineurlscheme#registerScheme&quot;&gt;QWebEngineUrlScheme::registerScheme&lt;/a&gt; at application startup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de6e405c93cb5bc14f06c240caaaa03ca4361ab6" translate="yes" xml:space="preserve">
          <source>It is necessary to specify a format before writing an picture, but it is not necessary to specify a format before reading an picture.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52ee4a50eba7009a5453a6049a18ca3b60cc4d5e" translate="yes" xml:space="preserve">
          <source>It is never emitted by &lt;a href=&quot;qlcdnumber#setDigitCount&quot;&gt;setDigitCount&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f161e07e48f805cb7a17fcf05290aa615986a9be" translate="yes" xml:space="preserve">
          <source>It is normal to begin using drag and drop in response to this event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58cc8e1c38f68e8deff9d8880271e58d19c5be9d" translate="yes" xml:space="preserve">
          <source>It is normally empty, because touchscreens cannot uniquely identify fingers. But when it is set, it is expected to uniquely identify a specific token (fiducial object).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8db4ac30741536454b38d43b5cc31dc6282cde73" translate="yes" xml:space="preserve">
          <source>It is normally invalid (see &lt;a href=&quot;qpointingdeviceuniqueid#isValid&quot;&gt;isValid()&lt;/a&gt;), because touchscreens cannot uniquely identify fingers. But when the &lt;a href=&quot;qtouchevent-touchpoint#InfoFlag-enum&quot;&gt;Token&lt;/a&gt; flag is set, it is expected to uniquely identify a specific token (fiducial object).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c2efce7eebe2344f5984edd91de8daea76feba5" translate="yes" xml:space="preserve">
          <source>It is not a requirement to open a session in order to monitor the underlying network interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8745ef2687adc004df7be098b6167dbc2b6f1b5" translate="yes" xml:space="preserve">
          <source>It is not always possible to abort a print job. For example, all the data has gone to the printer but the printer cannot or will not cancel the job when asked to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="370f72d25f0b3635cc3d0aeceac1f66cfc3259b3" translate="yes" xml:space="preserve">
          <source>It is not emitted when &lt;a href=&quot;qml-qtquick-animation#running-prop&quot;&gt;running&lt;/a&gt; is set to &lt;code&gt;false&lt;/code&gt;, nor for animations whose &lt;a href=&quot;qml-qtquick-animation#loops-prop&quot;&gt;loops&lt;/a&gt; property is set to &lt;code&gt;Animation.Infinite&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adea5774af0de95b05a6cea28620951ca8ecbe5e" translate="yes" xml:space="preserve">
          <source>It is not emitted when running is set to &lt;code&gt;false&lt;/code&gt;, nor for sprites whose &lt;a href=&quot;qml-qtquick-animatedsprite#loops-prop&quot;&gt;loops&lt;/a&gt; property is set to &lt;code&gt;AnimatedSprite.Infinite&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd7004a98b0fd7f3dd4bcef4010a21c5b6281566" translate="yes" xml:space="preserve">
          <source>It is not generally necessary to refer to these properties when adding child items or resources, as the default &lt;a href=&quot;qml-qtquick-item#data-prop&quot;&gt;data&lt;/a&gt; property will automatically assign child objects to the &lt;code&gt;children&lt;/code&gt; and &lt;code&gt;resources&lt;/code&gt; properties as appropriate. See the &lt;a href=&quot;qml-qtquick-item#data-prop&quot;&gt;data&lt;/a&gt; documentation for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8976c9d396db9f7d57c5e934d66758c20802941c" translate="yes" xml:space="preserve">
          <source>It is not guaranteed that a &lt;a href=&quot;qscrollevent&quot;&gt;QScrollEvent&lt;/a&gt; will be sent after an acceepted &lt;a href=&quot;qscrollprepareevent&quot;&gt;QScrollPrepareEvent&lt;/a&gt;, e.g. in a case where the maximum content position is (0,0).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0b30e2564372f87079bc08b049255a907f8ee0e" translate="yes" xml:space="preserve">
          <source>It is not instantiable; to use it, call the members of the global &lt;code&gt;Qt&lt;/code&gt; object directly. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="198eb1643ec70aa3ac8e082990a9b16239c3a817" translate="yes" xml:space="preserve">
          <source>It is not instantiable; to use it, call the members of the global &lt;code&gt;QtMultimedia&lt;/code&gt; object directly. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="747d42c2e679834f47b93d131f6825d069da4b40" translate="yes" xml:space="preserve">
          <source>It is not necessary to call this function in most cases, because it is called automatically before invoking &lt;a href=&quot;qopenglwidget#paintGL&quot;&gt;paintGL&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="565c3cb09953498797ec4b760dd2ac75786b4108" translate="yes" xml:space="preserve">
          <source>It is not necessary to call this function in most cases, because it is called automatically before invoking &lt;a href=&quot;qopenglwindow#paintGL&quot;&gt;paintGL&lt;/a&gt;(). It is provided nonetheless to support advanced, multi-threaded scenarios where a thread different than the GUI or main thread may want to update the surface or framebuffer contents. See &lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; for more information on threading related issues.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2bd03f2b1e729fdcf5fcd47df7e6ff49425e51f" translate="yes" xml:space="preserve">
          <source>It is not necessary to call this function in most cases, since the widget will make sure the context is bound and released properly when invoking &lt;a href=&quot;qopenglwidget#paintGL&quot;&gt;paintGL&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36a78afe54b3319e999e942959ef7c3c8a9a336d" translate="yes" xml:space="preserve">
          <source>It is not necessary to call this function in most cases, since the widget will make sure the context is bound and released properly when invoking &lt;a href=&quot;qopenglwindow#paintGL&quot;&gt;paintGL&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5278023ba30ef3a642da426aee380f042e1dd070" translate="yes" xml:space="preserve">
          <source>It is not necessary to construct a &lt;a href=&quot;qpauseanimation&quot;&gt;QPauseAnimation&lt;/a&gt; yourself. &lt;a href=&quot;qsequentialanimationgroup&quot;&gt;QSequentialAnimationGroup&lt;/a&gt; provides the convenience functions &lt;a href=&quot;qsequentialanimationgroup#addPause&quot;&gt;addPause()&lt;/a&gt; and &lt;a href=&quot;qsequentialanimationgroup#insertPause&quot;&gt;insertPause()&lt;/a&gt;. These functions simply take the number of milliseconds the pause should last.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f62c8b0355ca63906b99df0acd761a7cfe5e845" translate="yes" xml:space="preserve">
          <source>It is not necessary to support every role defined in &lt;a href=&quot;qt#ItemDataRole-enum&quot;&gt;Qt::ItemDataRole&lt;/a&gt;. Depending on the type of data contained within a model, it may only be useful to implement the &lt;a href=&quot;qabstractitemmodel#data&quot;&gt;data&lt;/a&gt;() function to return valid information for some of the more common roles. Most models provide at least a textual representation of item data for the &lt;a href=&quot;qt#ItemDataRole-enum&quot;&gt;Qt::DisplayRole&lt;/a&gt;, and well-behaved models should also provide valid information for the &lt;a href=&quot;qt#ItemDataRole-enum&quot;&gt;Qt::ToolTipRole&lt;/a&gt; and &lt;a href=&quot;qt#ItemDataRole-enum&quot;&gt;Qt::WhatsThisRole&lt;/a&gt;. Supporting these roles enables models to be used with standard Qt views. However, for some models that handle highly-specialized data, it may be appropriate to provide data only for user-defined roles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7c5c997f5d6e5d2c41507ae2ecf4dbff1a4c0cb" translate="yes" xml:space="preserve">
          <source>It is not possible to have the sensor report both single and double tap events. If both are needed the app should create 2 sensor objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb3951e29337bf2c6afc962fb9f3be8d4958f719" translate="yes" xml:space="preserve">
          <source>It is not possible to lock for read if the thread already has locked for write.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="407c0ca79f739dbb49c78f0b660b686510558a09" translate="yes" xml:space="preserve">
          <source>It is not possible to lock for write if the thread already has locked for read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8237e2a89c474f1de22d3ef095f336b0b21ef8bd" translate="yes" xml:space="preserve">
          <source>It is not possible to remove a title bar from a dock widget. However, a similar effect can be achieved by setting a default constructed &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; as the title bar widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdbca9cb736167f2551e7cc111d8d5a72c641fc3" translate="yes" xml:space="preserve">
          <source>It is not possible to render particle effects with the Software adaptation. Whenever possible, remove particles completely from the scene. Otherwise, they will still require some processing, even though they are not visible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a194e67d3b9ba693053771651527fab9b6d0dc13" translate="yes" xml:space="preserve">
          <source>It is not possible to retrieve the contents of a &lt;a href=&quot;qlcdnumber&quot;&gt;QLCDNumber&lt;/a&gt; object, although you can retrieve the numeric value with &lt;a href=&quot;qlcdnumber#value-prop&quot;&gt;value&lt;/a&gt;(). If you really need the text, we recommend that you connect the signals that feed the &lt;a href=&quot;qlcdnumber#display&quot;&gt;display&lt;/a&gt;() slot to another slot as well and store the value there.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f122aa3d34a498c293d428fff185f0647f2f80d" translate="yes" xml:space="preserve">
          <source>It is not possible to set the SSL-state related fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a365dba196942232257912078423f52284c491d" translate="yes" xml:space="preserve">
          <source>It is not possible to set the port with &lt;a href=&quot;qsqldatabase#setPort&quot;&gt;QSqlDatabase::setPort&lt;/a&gt;() due to limitations in the Sybase client library. Refer to the Sybase documentation for information on how to set up a Sybase client configuration file to enable connections to databases on non-default ports.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdfe83545ee39a27fb3eefcb5a42d9c208db28b5" translate="yes" xml:space="preserve">
          <source>It is not possible to simultanously request updates for more than one signal of the same monitor object. The last call to this function determines the signal upon which the updates cease to continue. At this stage only the &lt;a href=&quot;qgeoareamonitorsource#areaEntered&quot;&gt;areaEntered&lt;/a&gt;() and &lt;a href=&quot;qgeoareamonitorsource#areaExited&quot;&gt;areaExited&lt;/a&gt;() signals can be used to terminate the monitoring process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="320eea8d384cfe3b5bd1a19033202372c6c1f115" translate="yes" xml:space="preserve">
          <source>It is not recommended to hard-code colors, as applications and individual widgets can set their own palette and also use their style's palette for drawing. Note that none of Qt's widgets set their own palette. The Java style does hard-code some colors, but only as a decision of the author; it is not advised. Of course, it is not intended that the style should look good with any palette.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46576e57b039a8113850b78a8e77b75d97627490" translate="yes" xml:space="preserve">
          <source>It is not recommended to override the default values set for a page size as this may be the minimum printable area for a physical print device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a15694691ba6ba1c7e15e95fd833c0999342983d" translate="yes" xml:space="preserve">
          <source>It is not recommended to use &lt;a href=&quot;qml-qtquick-flickable#contentX-prop&quot;&gt;contentX&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-flickable#contentY-prop&quot;&gt;contentY&lt;/a&gt; to position the view at a particular index. This is unreliable since removing items from the start of the list does not cause all other items to be repositioned, and because the actual start of the view can vary based on the size of the delegates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec22e1f9eb78230c8686b28a83777566c903a4ac" translate="yes" xml:space="preserve">
          <source>It is not recommended to use &lt;a href=&quot;qml-qtquick-flickable#contentX-prop&quot;&gt;contentX&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-flickable#contentY-prop&quot;&gt;contentY&lt;/a&gt; to position the view at a particular index. This is unreliable since removing items from the start of the list does not cause all other items to be repositioned, and because the actual start of the view can vary based on the size of the delegates. The correct way to bring an item into view is with &lt;code&gt;positionViewAtIndex&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df103f2829f8eab2f7bcba5b6a4e444912eb33ab" translate="yes" xml:space="preserve">
          <source>It is not recommended to use &lt;a href=&quot;qml-qtquick-flickable#contentX-prop&quot;&gt;contentX&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-flickable#contentY-prop&quot;&gt;contentY&lt;/a&gt; to position the view at a particular index. This is unreliable since removing items from the start of the view does not cause all other items to be repositioned. The correct way to bring an item into view is with &lt;code&gt;positionViewAtIndex&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2969b6f2eb3297a4b71d4aa1cedb47e4f4925739" translate="yes" xml:space="preserve">
          <source>It is not sufficient for an attribute or element to merely be called &lt;code&gt;id&lt;/code&gt;. Its value type must also be &lt;code&gt;ID&lt;/code&gt;. However, the reserved name &lt;code&gt;xml:id&lt;/code&gt; is sufficient.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1e8640fc848463537ffc9df2a440df791599486" translate="yes" xml:space="preserve">
          <source>It is not sufficient for an attribute or element to merely be called &lt;code&gt;idref&lt;/code&gt;. It must also be of type &lt;code&gt;IDREF&lt;/code&gt;. Elements must be typed as &lt;code&gt;xs:IDREF&lt;/code&gt; or &lt;code&gt;xs:IDREFS&lt;/code&gt;, or, in the case of attributes, as &lt;code&gt;IDREF&lt;/code&gt; or &lt;code&gt;IDREFS&lt;/code&gt; in the schema.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="804fef8ec10154cd817a953dd48c757e879ee576" translate="yes" xml:space="preserve">
          <source>It is occasionally necessary to run some imperative code at application (or component instance) startup. While it is tempting to just include the startup script as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78690aa9b0ed1c83b4d660b98f6a036c92b973c9" translate="yes" xml:space="preserve">
          <source>It is often desirable to delay some processing until the component is completed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8d55342fb1f34d5127ef080bc6d1bd3721a7381" translate="yes" xml:space="preserve">
          <source>It is often desirable to give the user a special (often default) choice in addition to the range of numeric values. See &lt;a href=&quot;qabstractspinbox#specialValueText-prop&quot;&gt;setSpecialValueText&lt;/a&gt;() for how to do this with &lt;a href=&quot;qdoublespinbox&quot;&gt;QDoubleSpinBox&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f19f84c0dec2a71fde1b5515317e4e3e4265f4ad" translate="yes" xml:space="preserve">
          <source>It is often desirable to give the user a special (often default) choice in addition to the range of numeric values. See &lt;a href=&quot;qabstractspinbox#specialValueText-prop&quot;&gt;setSpecialValueText&lt;/a&gt;() for how to do this with &lt;a href=&quot;qspinbox&quot;&gt;QSpinBox&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8590b20fd476fabe22ea676780c46a698f7e2de4" translate="yes" xml:space="preserve">
          <source>It is often desirable to write your own custom model in C++ for use with a view in QML. While the optimal implementation of any such model will depend heavily on the use-case it must fulfil, some general guidelines are as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="160a6b1c7425564459a3a362f29b3742e923ee6f" translate="yes" xml:space="preserve">
          <source>It is often easier and cleaner to define an ENUM inside a class (see &lt;a href=&quot;#enum&quot;&gt;ENUM&lt;/a&gt;), but if you need a standalone enum type, using the ENUM keyword outside of a class definition can be helpful. This will generate a new class in your header files that handles marshalling, etc.. The syntax is identical to &lt;a href=&quot;#enum&quot;&gt;ENUM&lt;/a&gt;, with the exception that the declaration in this case is not contained in a &lt;code&gt;class&lt;/code&gt; declaration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="480c6a8f35b7be35ec849611ef531650d27388ac" translate="yes" xml:space="preserve">
          <source>It is often more convenient to use &lt;a href=&quot;qdeadlinetimer&quot;&gt;QDeadlineTimer&lt;/a&gt; in this case, which counts towards a timeout in the future instead of tracking elapsed time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d010f5292a2038c9bee95bcba519aeb7c0c73e17" translate="yes" xml:space="preserve">
          <source>It is often quite useful to make a custom type printable for debugging purposes, as in the following code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f5822d82ed0604bb7346cd6ad61790d10b1c9d1" translate="yes" xml:space="preserve">
          <source>It is often useful to be able to find items within an item view widget, either as a developer or as a service to present to users. All three item view convenience classes provide a common &lt;code&gt;findItems()&lt;/code&gt; function to make this as consistent and simple as possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a21453b3d943980ad7aa41fbf1ccd8accbc5010" translate="yes" xml:space="preserve">
          <source>It is ok to obtain the value of the pointer and using that value itself, like for example in debugging statements:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d21bb65e9bcc700397d9a5602e52f134cb88e660" translate="yes" xml:space="preserve">
          <source>It is only possible to call functions through dynamicCall() that have parameters or return values of datatypes supported by &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;. See the &lt;a href=&quot;qaxbase&quot;&gt;QAxBase&lt;/a&gt; class documentation for a list of supported and unsupported datatypes. If you want to call functions that have unsupported datatypes in the parameter list, use &lt;a href=&quot;qaxbase#queryInterface&quot;&gt;queryInterface&lt;/a&gt;() to retrieve the appropriate COM interface, and use the function directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9af2099d251964ebf57b90bdc95c255bc227e72f" translate="yes" xml:space="preserve">
          <source>It is only triggered for top-level, standalone animations. It will not be triggered for animations in a Behavior or Transition, or animations that are part of an animation group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65511d2a482e0599722c5cbefca357f129a5d2a9" translate="yes" xml:space="preserve">
          <source>It is perfectly OK to create an instance of &lt;a href=&quot;qmimedatabase&quot;&gt;QMimeDatabase&lt;/a&gt; every time you need to perform a lookup. The parsing of mimetypes is done on demand (when shared-mime-info is installed) or when the very first instance is constructed (when parsing XML files directly).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f797a1814c82acfaad7eb84efa973cda5156cfac" translate="yes" xml:space="preserve">
          <source>It is possible for a &lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; object to be invalid because of syntax errors in the pattern string. The &lt;a href=&quot;qregularexpression#isValid&quot;&gt;isValid&lt;/a&gt;() function will return true if the regular expression is valid, or false otherwise:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a4614ac6c8279c6ee6a9ba7c5a5822113d40371" translate="yes" xml:space="preserve">
          <source>It is possible for a custom delegate to provide editors without the use of an editor item factory. In this case, the following virtual functions must be reimplemented:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc885bdd2fcb6d6b24f79c0585f359f61d7bb804" translate="yes" xml:space="preserve">
          <source>It is possible for an aliasing property to have the same name as an existing property, effectively overwriting the existing property. For example, the following QML type has a &lt;code&gt;color&lt;/code&gt; alias property, named the same as the built-in &lt;a href=&quot;qml-qtquick-rectangle#color-prop&quot;&gt;Rectangle::color&lt;/a&gt; property:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abf20951678d3358e7e308e0d573088880963f22" translate="yes" xml:space="preserve">
          <source>It is possible for applications and libraries to insert custom messages in the debug log, for instance for marking a group of related OpenGL commands and therefore being then able to identify eventual messages coming from them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d52d6c48f12268b10686307191eed95e8d165223" translate="yes" xml:space="preserve">
          <source>It is possible for roles to contain list data. In the following example we create a list of fruit attributes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc45547eb4d42a0586a127a8486ce9a6721910c5" translate="yes" xml:space="preserve">
          <source>It is possible that a newly created &lt;a href=&quot;qgeocodereply&quot;&gt;QGeoCodeReply&lt;/a&gt; may be in a finished state, most commonly because an error has occurred. Since such an instance will never emit the &lt;a href=&quot;qgeocodereply#finished&quot;&gt;finished&lt;/a&gt;() or error(&lt;a href=&quot;qgeocodereply#Error-enum&quot;&gt;QGeoCodeReply::Error&lt;/a&gt;,&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;) signals, it is important to check the result of &lt;a href=&quot;qgeocodereply#isFinished&quot;&gt;isFinished&lt;/a&gt;() before making the connections to the signals. The documentation for &lt;a href=&quot;qgeocodingmanager&quot;&gt;QGeoCodingManager&lt;/a&gt; demonstrates how this might be carried out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7998b967136c5e4ab2a067a08f8136a06f5c34eb" translate="yes" xml:space="preserve">
          <source>It is possible that a newly created &lt;a href=&quot;qgeoroutereply&quot;&gt;QGeoRouteReply&lt;/a&gt; may be in a finished state, most commonly because an error has occurred. Since such an instance will never emit the &lt;a href=&quot;qgeoroutereply#finished&quot;&gt;finished&lt;/a&gt;() or error(&lt;a href=&quot;qgeoroutereply#Error-enum&quot;&gt;QGeoRouteReply::Error&lt;/a&gt;,&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;) signals, it is important to check the result of &lt;a href=&quot;qgeoroutereply#isFinished&quot;&gt;isFinished&lt;/a&gt;() before making the connections to the signals. The documentation for &lt;a href=&quot;qgeoroutingmanager&quot;&gt;QGeoRoutingManager&lt;/a&gt; demonstrates how this might be carried out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="507728da206e572853be7889ebeb42394d76bca8" translate="yes" xml:space="preserve">
          <source>It is possible that an included service contains yet another service. Such second level includes have to be obtained via their relevant first level &lt;a href=&quot;qlowenergyservice&quot;&gt;QLowEnergyService&lt;/a&gt; instance. Technically, this could create a circular dependency.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d065ee5c4ba894eac8a34c04e83f7dd9eb6fcd0e" translate="yes" xml:space="preserve">
          <source>It is possible that providers may only support a subset of these. See the &lt;a href=&quot;qtlocation-index#plugin-references-and-parameters&quot;&gt;plugin documentation&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dad59a08026da383ebafd37152286ae39d3294a9" translate="yes" xml:space="preserve">
          <source>It is possible to access elements in an array in two ways. The first is to use the array index as the property name:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85bbadc260fbc055218e4e62503b4b8922f4d08f" translate="yes" xml:space="preserve">
          <source>It is possible to add modules to the &lt;a href=&quot;http://freetype.sourceforge.net/freetype2/index.html&quot;&gt;FreeType 2&lt;/a&gt; font engine to support other types of font files. For more information, see the font engine's own website: &lt;a href=&quot;http://freetype.sourceforge.net/freetype2/index.html&quot;&gt;http://freetype.sourceforge.net/freetype2/index.html&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="063222f7245b62b11a62e056ecc671a399e7a783" translate="yes" xml:space="preserve">
          <source>It is possible to add support for &lt;a href=&quot;qml-qtquick-controls-exclusivegroup&quot;&gt;ExclusiveGroup&lt;/a&gt; for an object or control. It should have a &lt;code&gt;checked&lt;/code&gt; property, and either a &lt;code&gt;checkedChanged&lt;/code&gt;, &lt;code&gt;toggled()&lt;/code&gt;, or &lt;code&gt;toggled(bool)&lt;/code&gt; signal. It also needs to be bound with &lt;a href=&quot;qml-qtquick-controls-exclusivegroup#bindCheckable-method&quot;&gt;ExclusiveGroup::bindCheckable()&lt;/a&gt; when its &lt;a href=&quot;qml-qtquick-controls-exclusivegroup&quot;&gt;ExclusiveGroup&lt;/a&gt; typed property is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ca39ac0075b0065c052fd44a2e070e562b70c2f" translate="yes" xml:space="preserve">
          <source>It is possible to apply an effect on a layer at runtime using layer.effect:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb9ebeb9c71f6448277c0b246056bbd498b7ce56" translate="yes" xml:space="preserve">
          <source>It is possible to call the grabWindow() function when the window is not visible. This requires that the window is &lt;a href=&quot;qwindow#create&quot;&gt;created&lt;/a&gt; and has a valid size and that no other &lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; instances are rendering in the same process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f907026bc11813feef3696844e6d5ff9fa9e1679" translate="yes" xml:space="preserve">
          <source>It is possible to change the number of rows and columns in a model. In the string list model it only makes sense to change the number of rows, so we only reimplement the functions for inserting and removing rows. These are declared in the class definition:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="493abb28ca1f3f3fd6768e37ad4e536457307aaf" translate="yes" xml:space="preserve">
          <source>It is possible to constrain the input to an editable combobox using &lt;a href=&quot;qvalidator&quot;&gt;QValidator&lt;/a&gt;; see &lt;a href=&quot;qcombobox#setValidator&quot;&gt;setValidator&lt;/a&gt;(). By default, any input is accepted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e8835a269cbced2162831de5adaca57199fba7a" translate="yes" xml:space="preserve">
          <source>It is possible to create an instance of &lt;a href=&quot;qml-qtquick-controls2-scrollbar&quot;&gt;ScrollBar&lt;/a&gt; without using the attached property API. This is useful when the behavior of the attached scroll bar is not sufficient or a &lt;a href=&quot;qml-qtquick-flickable&quot;&gt;Flickable&lt;/a&gt; is not in use. In the following example, horizontal and vertical scroll bars are used to scroll over the text without using &lt;a href=&quot;qml-qtquick-flickable&quot;&gt;Flickable&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80dabfd5d1d51a87ed7232851ffab1471df45bf1" translate="yes" xml:space="preserve">
          <source>It is possible to create an instance of &lt;a href=&quot;qml-qtquick-controls2-scrollindicator&quot;&gt;ScrollIndicator&lt;/a&gt; without using the attached property API. This is useful when the behavior of the attached scoll indicator is not sufficient or a &lt;a href=&quot;qml-qtquick-flickable&quot;&gt;Flickable&lt;/a&gt; is not in use. In the following example, horizontal and vertical scroll indicators are used to indicate how far the user has scrolled over the text (using &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; instead of &lt;a href=&quot;qml-qtquick-flickable&quot;&gt;Flickable&lt;/a&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0fd84a36335858392ae626e0427aaaca69e5ad8" translate="yes" xml:space="preserve">
          <source>It is possible to create each side of the &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; and call &lt;a href=&quot;qremoteobjectnode#addClientSideConnection&quot;&gt;QRemoteObjectNode::addClientSideConnection&lt;/a&gt;(QIODevice *ioDevice) and &lt;a href=&quot;qremoteobjecthostbase#addHostSideConnection&quot;&gt;QRemoteObjectHostBase::addHostSideConnection&lt;/a&gt;(QIODevice *ioDevice) as shown above. This is fully supported, but requires the client know how to establish the connection or have a way to discover that information. This is exactly the problem the registry was designed to solve.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c9ecfb67d93783492d60bb1323bd04f997cf24b" translate="yes" xml:space="preserve">
          <source>It is possible to customize qmake to support new compilers and preprocessors:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08fb5c95d90a802fe13bbdc07f8c64df4e48aa12" translate="yes" xml:space="preserve">
          <source>It is possible to customize the names of the build targets depending on the target platform. For example, a library or plugin may be named using a different convention on Windows from the one used on Unix platforms:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b40433af5fc4b0ec6d03815420ece79d42778910" translate="yes" xml:space="preserve">
          <source>It is possible to defer the decision of rejecting a certificate by calling &lt;a href=&quot;qml-qtwebengine-webenginecertificateerror#defer-method&quot;&gt;defer&lt;/a&gt;, which is useful when waiting for user input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ef6937bbd477020adb4fba7786bc920609d299d" translate="yes" xml:space="preserve">
          <source>It is possible to define your own functions to provide conditions for scopes. The following example tests whether each file in a list exists and returns true if they all exist, or false if not:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25828a143424d42054836f214555faa30d4e5704" translate="yes" xml:space="preserve">
          <source>It is possible to draw into a &lt;a href=&quot;qopenglframebufferobject&quot;&gt;QOpenGLFramebufferObject&lt;/a&gt; using &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; and &lt;a href=&quot;qopenglpaintdevice&quot;&gt;QOpenGLPaintDevice&lt;/a&gt; in a separate thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eea90551f075fa99ff39ad3674fc2173a79a46a" translate="yes" xml:space="preserve">
          <source>It is possible to dynamically generate menu items. One of the easiest ways to do so is with &lt;a href=&quot;qml-qtqml-instantiator&quot;&gt;Instantiator&lt;/a&gt;. For example, to implement a &quot;Recent Files&quot; submenu, where the items are based on a list of files stored in settings, the following code could be used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cab799898968dec0f46b6f87df3fc98718d7ee36" translate="yes" xml:space="preserve">
          <source>It is possible to enable or disable messages by selecting them by:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eab9cc30f5f5f096f755d4e246c08d41b7209e5e" translate="yes" xml:space="preserve">
          <source>It is possible to filter the relations by using</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bbde10ca12a948e56a300407872e5984458b404" translate="yes" xml:space="preserve">
          <source>It is possible to get the pattern options currently set on a &lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; object by using the &lt;a href=&quot;qregularexpression#patternOptions&quot;&gt;patternOptions&lt;/a&gt;() function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83a3cbf7b2c6b49c35412b9ffba58fd375fa7d83" translate="yes" xml:space="preserve">
          <source>It is possible to give the view hints about the data it is handling in order to improve its performance when displaying large numbers of items. One approach that can be taken for views that are intended to display items with equal heights is to set the &lt;a href=&quot;qtreeview#uniformRowHeights-prop&quot;&gt;uniformRowHeights&lt;/a&gt; property to true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5619fd65b7b52c3be98938941f5639f7ce4424a" translate="yes" xml:space="preserve">
          <source>It is possible to give the view hints about the data it is handling in order to improve its performance when displaying large numbers of items. One approach that can be taken for views that are intended to display items with equal sizes is to set the &lt;a href=&quot;qlistview#uniformItemSizes-prop&quot;&gt;uniformItemSizes&lt;/a&gt; property to true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e234f92b8c4fe733f641be93a3268d1838fa8965" translate="yes" xml:space="preserve">
          <source>It is possible to have multiple items which individually receive mouse and touch events. For example, to have two actions in the &lt;code&gt;swipe.right&lt;/code&gt; item, use the following code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21f041a7d59578aee510c40252df6352b0d21268" translate="yes" xml:space="preserve">
          <source>It is possible to implement interfaces by inheriting &lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterface&lt;/a&gt; and implementing its pure virtual functions. In practice, however, it is usually preferable to inherit &lt;a href=&quot;qaccessibleobject&quot;&gt;QAccessibleObject&lt;/a&gt; or &lt;a href=&quot;qaccessiblewidget&quot;&gt;QAccessibleWidget&lt;/a&gt;, which implement part of the functionality for you. In the next section, we will see an example of implementing accessibility for a widget by inheriting the &lt;a href=&quot;qaccessiblewidget&quot;&gt;QAccessibleWidget&lt;/a&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40f9f33cce8b29087a5db311299edc647cbae5b0" translate="yes" xml:space="preserve">
          <source>It is possible to insert a node from another document into the document using &lt;a href=&quot;qdomdocument#importNode&quot;&gt;importNode&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="558faa704cc1093f2281c355d610b59a4c1649b3" translate="yes" xml:space="preserve">
          <source>It is possible to keep &lt;a href=&quot;qml-qtquick-controls2-scrollbar#binding-the-active-state-of-horizontal-and-vertical-scroll-bars&quot;&gt;both horizontal and vertical bars visible&lt;/a&gt; while scrolling in either direction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d447f4c6cf004298c362e8f59038d8787f585ecb" translate="yes" xml:space="preserve">
          <source>It is possible to keep &lt;a href=&quot;qml-qtquick-controls2-scrollindicator#binding-the-active-state-of-horizontal-and-vertical-scroll-indicators&quot;&gt;both horizontal and vertical indicators visible&lt;/a&gt; while scrolling in either direction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ce60bbeffd22deb48dd97e09a931b57b9e3a3f5" translate="yes" xml:space="preserve">
          <source>It is possible to load animations from an arbitrary offset, but they will still follow the same pattern. Consider now the red numbers. If we specify that the animation begins at pixel location 120,0, with a frame count of 5 and the same frame size as before, then it will load the frames as they are numbered in red. The first 120x40 of the image will not be used, as it starts reading 40x40 blocks from the location of 120,0. When it reaches the end of the file at 160,0, it then starts to read the next row from 0,40.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1863f7ea3766a69b11f135f5e18bbe93b4ddc48b" translate="yes" xml:space="preserve">
          <source>It is possible to look up a translation using &lt;a href=&quot;qtranslator#translate&quot;&gt;translate&lt;/a&gt;() (as &lt;a href=&quot;qobject#tr&quot;&gt;tr&lt;/a&gt;() and &lt;a href=&quot;qcoreapplication#translate&quot;&gt;QCoreApplication::translate&lt;/a&gt;() do). The &lt;a href=&quot;qtranslator#translate&quot;&gt;translate&lt;/a&gt;() function takes up to three parameters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b648e475417c034c8bc8c53fc402bbe09651006" translate="yes" xml:space="preserve">
          <source>It is possible to make the item editable by setting the &lt;a href=&quot;qt#TextInteractionFlag-enum&quot;&gt;Qt::TextEditorInteraction&lt;/a&gt; flag using &lt;a href=&quot;qgraphicstextitem#setTextInteractionFlags&quot;&gt;setTextInteractionFlags&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="315ce8d478a67fc413bec1c25b3bf0125af7076c" translate="yes" xml:space="preserve">
          <source>It is possible to mix and match service providers for the various domains, so that a geocoding manager from one service provider can be used with a geographic routing manager from another service provider.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="284ab1b869c730f4bbafe9b24cd3a9e64e4aec5d" translate="yes" xml:space="preserve">
          <source>It is possible to modify elements in an array in two ways. The first is to use the array index as the property name:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42c2e97fa640360aaaa7704434b4fe5d49aa9e00" translate="yes" xml:space="preserve">
          <source>It is possible to modify this default behavior of &lt;code&gt;SUBDIRS&lt;/code&gt; by giving additional modifiers to &lt;code&gt;SUBDIRS&lt;/code&gt; elements. Supported modifiers are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0e34d812d6eea1b3767dc849420d74899731bf1" translate="yes" xml:space="preserve">
          <source>It is possible to nest calls to beginEditBlock and &lt;a href=&quot;qtextcursor#endEditBlock&quot;&gt;endEditBlock&lt;/a&gt;. The top-most pair will determine the scope of the undo/redo operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaee15700bf298d17fe2c27b81e51d1715c040f6" translate="yes" xml:space="preserve">
          <source>It is possible to pass a starting offset and one or more match options to the &lt;a href=&quot;qregularexpression#globalMatch&quot;&gt;globalMatch&lt;/a&gt;() function, exactly like normal matching with &lt;a href=&quot;qregularexpression#match&quot;&gt;match&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b66926ec47f7813837a6daa23e74d5564d5d2c67" translate="yes" xml:space="preserve">
          <source>It is possible to print some information to the debug output by enabling the &lt;code&gt;qt.qpa.input&lt;/code&gt; logging rule, for example by setting the &lt;code&gt;QT_LOGGING_RULES&lt;/code&gt; environment variable to &lt;code&gt;qt.qpa.input=true&lt;/code&gt;. This is useful for detecting which device is being used, or to troubleshoot device discovery issues.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb035718de3f546b101a1bab19524ac4084d9838" translate="yes" xml:space="preserve">
          <source>It is possible to provide high resolution versions of images should a scaling between</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6633af5c997fb06b9dbeb56eec601ae68450b470" translate="yes" xml:space="preserve">
          <source>It is possible to recursively generate &lt;code&gt;.vcproj&lt;/code&gt; files in subdirectories and a &lt;code&gt;.sln&lt;/code&gt; file in the main directory, by typing:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fffc49bccdceb851739293dca6d6af0357b4db26" translate="yes" xml:space="preserve">
          <source>It is possible to reduce the number of entries returned by &lt;a href=&quot;qdir#entryList&quot;&gt;entryList&lt;/a&gt;() and &lt;a href=&quot;qdir#entryInfoList&quot;&gt;entryInfoList&lt;/a&gt;() by applying filters to a &lt;a href=&quot;qdir&quot;&gt;QDir&lt;/a&gt; object. You can apply a name filter to specify a pattern with wildcards that file names need to match, an attribute filter that selects properties of entries and can distinguish between files and directories, and a sort order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54b91412914df51d9fba78e81327cbf979c92621" translate="yes" xml:space="preserve">
          <source>It is possible to repeat or reflect the gradient outside its area by specifiying the &lt;a href=&quot;qgradient#Spread-enum&quot;&gt;spread method&lt;/a&gt; using the &lt;a href=&quot;qgradient#setSpread&quot;&gt;setSpread&lt;/a&gt;() function. The default is to pad the outside area with the color at the closest stop point. The currently set &lt;a href=&quot;qgradient#Spread-enum&quot;&gt;spread method&lt;/a&gt; can be retrieved using the &lt;a href=&quot;qgradient#spread&quot;&gt;spread&lt;/a&gt;() function. The &lt;a href=&quot;qgradient#Spread-enum&quot;&gt;QGradient::Spread&lt;/a&gt; enum defines three different methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c8602a7cf1778ac70c8617865e642dadce6ab15" translate="yes" xml:space="preserve">
          <source>It is possible to request a functions object for a different version and profile than that for which the context was created. To do this either use the template version of this function specifying the desired functions object type as the template parameter or by passing in a &lt;a href=&quot;qopenglversionprofile&quot;&gt;QOpenGLVersionProfile&lt;/a&gt; object as an argument to the non-template function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35d980ce985de291287a972c73847c777f7f36b2" translate="yes" xml:space="preserve">
          <source>It is possible to reserve a margin area around the viewport, see &lt;a href=&quot;qabstractscrollarea#setViewportMargins&quot;&gt;setViewportMargins&lt;/a&gt;(). The feature is mostly used to place a &lt;a href=&quot;qheaderview&quot;&gt;QHeaderView&lt;/a&gt; widget above or beside the scrolling area. Subclasses of &lt;a href=&quot;qabstractscrollarea&quot;&gt;QAbstractScrollArea&lt;/a&gt; should implement margins.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
