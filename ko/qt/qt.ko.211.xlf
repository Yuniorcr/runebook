<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="qt">
    <body>
      <group id="qt">
        <trans-unit id="fcd3f4c31c7641a86a5b31694e3f5f50d29a0881" translate="yes" xml:space="preserve">
          <source>To ensure that writers aren't blocked forever by readers, readers attempting to obtain a lock will not succeed if there is a blocked writer waiting for access, even if the lock is currently only accessed by other readers. Also, if the lock is accessed by a writer and another writer comes in, that writer will have priority over any readers that might also be waiting.</source>
          <target state="translated">독자가 작성자를 영구적으로 차단하지 못하도록하기 위해 현재 다른 독자 만 잠금에 액세스 한 경우에도 액세스를 기다리는 차단 된 작성자가있는 경우 잠금을 얻으려고 시도하는 독자는 성공하지 못합니다. 또한 작성자가 잠금에 액세스하고 다른 작성자가 들어 오면 해당 작성자는 대기중인 모든 독자보다 우선 순위를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="098d972e3d58b1e6fd218152d80fa5e9368bc655" translate="yes" xml:space="preserve">
          <source>To enter buddy editing mode, open the &lt;b&gt;Edit&lt;/b&gt; menu and select &lt;b&gt;Edit Buddies&lt;/b&gt;. This mode presents the widgets on the form in a similar way to &lt;a href=&quot;designer-connection-mode#&quot;&gt;signals and slots editing mode&lt;/a&gt; but in this mode, connections must start at label widgets. Ideally, you should connect each label widget that provides a shortcut with a suitable input widget, such as a &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt;.</source>
          <target state="translated">친구 편집 모드로 들어가려면 &lt;b&gt;편집&lt;/b&gt; 메뉴를 열고 친구 편집을 선택 &lt;b&gt;하십시오&lt;/b&gt; . 이 모드는 &lt;a href=&quot;designer-connection-mode#&quot;&gt;신호 및 슬롯 편집 모드와&lt;/a&gt; 유사한 방식으로 위젯을 양식에 표시 하지만이 모드에서는 레이블 위젯에서 연결을 시작해야합니다. 이상적으로는 &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt; 와 같은 적합한 입력 위젯이있는 바로 가기를 제공하는 각 레이블 위젯을 연결해야합니다 .</target>
        </trans-unit>
        <trans-unit id="b518ef4fdcf8b4398d07eeed0ef6533f98cc04e8" translate="yes" xml:space="preserve">
          <source>To enter tab order editing mode, open the &lt;b&gt;Edit&lt;/b&gt; menu and select &lt;b&gt;Edit Tab Order&lt;/b&gt;. In this mode, each input widget in the form is shown with a number indicating its position in the tab order. So, if the user gives the first input widget the input focus and then presses the tab key, the focus will move to the second input widget, and so on.</source>
          <target state="translated">탭 순서 편집 모드로 들어가려면 &lt;b&gt;편집&lt;/b&gt; 메뉴를 열고 탭 순서 편집을 선택 &lt;b&gt;하십시오&lt;/b&gt; . 이 모드에서는 양식의 각 입력 위젯이 탭 순서에서 위치를 나타내는 숫자와 함께 표시됩니다. 따라서 사용자가 첫 번째 입력 위젯에 입력 초점을 제공 한 다음 탭 키를 누르면 초점이 두 번째 입력 위젯으로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="9d8ae19a5c2e41ed3aedce48f94d039286b5ea0b" translate="yes" xml:space="preserve">
          <source>To evaluate script code, you create a &lt;a href=&quot;qjsengine&quot;&gt;QJSEngine&lt;/a&gt; and call its evaluate() function, passing the script code (text) to evaluate as argument.</source>
          <target state="translated">스크립트 코드를 평가하려면 &lt;a href=&quot;qjsengine&quot;&gt;QJSEngine&lt;/a&gt; 을 작성 하고 평가 ()를 인수로 평가하기 위해 스크립트 코드 (텍스트)를 전달하여 평가 () 함수를 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="ea690c515cc4e700e78abd5d299185d12e596e8f" translate="yes" xml:space="preserve">
          <source>To examine the list of supported sample counts, call &lt;a href=&quot;qvulkanwindow#supportedSampleCounts&quot;&gt;supportedSampleCounts&lt;/a&gt;().</source>
          <target state="translated">지원되는 샘플 수 목록을 확인하려면 &lt;a href=&quot;qvulkanwindow#supportedSampleCounts&quot;&gt;supportedSampleCounts&lt;/a&gt; ()를 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="157fbcb04fe3114cddc9167166ef114dafe6dfa0" translate="yes" xml:space="preserve">
          <source>To execute C++ code before any of the QML tests are run, the &lt;a href=&quot;qquicktest#QUICK_TEST_MAIN_WITH_SETUP&quot;&gt;QUICK_TEST_MAIN_WITH_SETUP&lt;/a&gt; macro can be used. This can be useful for setting context properties on the QML engine, amongst other things.</source>
          <target state="translated">QML 테스트를 실행하기 전에 C ++ 코드를 실행하려면 &lt;a href=&quot;qquicktest#QUICK_TEST_MAIN_WITH_SETUP&quot;&gt;QUICK_TEST_MAIN_WITH_SETUP&lt;/a&gt; 매크로를 사용할 수 있습니다. 이는 무엇보다도 QML 엔진에서 컨텍스트 속성을 설정하는 데 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="08bc24a870aa5d264037f07081e807cab7cc2c34" translate="yes" xml:space="preserve">
          <source>To execute an SQL statement, simply create a &lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; object and call &lt;a href=&quot;qsqlquery#exec-1&quot;&gt;QSqlQuery::exec&lt;/a&gt;() like this:</source>
          <target state="translated">SQL 문을 실행하려면 &lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; 오브젝트 를 작성하고 다음 과 같이 &lt;a href=&quot;qsqlquery#exec-1&quot;&gt;QSqlQuery :: exec&lt;/a&gt; ()를 호출 하십시오.</target>
        </trans-unit>
        <trans-unit id="ef040a336e1aa63da77d02ac33fc20deef053cfb" translate="yes" xml:space="preserve">
          <source>To execute your own code each frame connect to the &lt;a href=&quot;qml-qt3d-logic-frameaction#triggered-signal&quot;&gt;FrameAction::triggered&lt;/a&gt; signal.</source>
          <target state="translated">각 프레임마다 고유 코드를 실행하려면 &lt;a href=&quot;qml-qt3d-logic-frameaction#triggered-signal&quot;&gt;FrameAction :: triggered&lt;/a&gt; 신호에 연결하십시오 .</target>
        </trans-unit>
        <trans-unit id="a4ba6719793a8c97c86514d91abd0adba29e08fd" translate="yes" xml:space="preserve">
          <source>To execute your own code each frame connect to the &lt;a href=&quot;qt3dlogic-qframeaction#triggered&quot;&gt;QFrameAction::triggered&lt;/a&gt; signal.</source>
          <target state="translated">각 프레임마다 고유 코드를 실행하려면 &lt;a href=&quot;qt3dlogic-qframeaction#triggered&quot;&gt;QFrameAction :: triggered&lt;/a&gt; 신호에 연결하십시오 .</target>
        </trans-unit>
        <trans-unit id="ebe2c85fbb47ed7305115c4ab50e32855eec2aa8" translate="yes" xml:space="preserve">
          <source>To explain the meaning of each value it is helpful to refer to the following diagram.</source>
          <target state="translated">각 값의 의미를 설명하려면 다음 다이어그램을 참조하면 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="75b979e23d2b01523982e9e812997edbdbde04f6" translate="yes" xml:space="preserve">
          <source>To explicitly disable sandboxing, the &lt;code&gt;QTWEBENGINE_DISABLE_SANDBOX&lt;/code&gt; environment variable can be set to 1 or alternatively the &lt;code&gt;--no-sandbox&lt;/code&gt; command line argument can be passed to the user application executable.</source>
          <target state="translated">샌드 박싱을 명시 적으로 비활성화하려면 &lt;code&gt;QTWEBENGINE_DISABLE_SANDBOX&lt;/code&gt; 환경 변수를 1로 설정하거나 &lt;code&gt;--no-sandbox&lt;/code&gt; 명령 줄 인수를 사용자 응용 프로그램 실행 파일로 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="59c52f83f0896e30e75603ddcae67d64181407f9" translate="yes" xml:space="preserve">
          <source>To explicitly force either dialogs based on Qt Quick Controls 1 or Qt Quick Controls 2, set the &lt;code&gt;QTWEBENGINE_DIALOG_SET&lt;/code&gt; environment variable to either &lt;code&gt;QtQuickControls1&lt;/code&gt; or &lt;code&gt;QtQuickControls2&lt;/code&gt;.</source>
          <target state="translated">Qt Quick Controls 1 또는 Qt Quick Controls 2를 기반으로 대화 상자를 명시 적으로 강제 실행하려면 &lt;code&gt;QTWEBENGINE_DIALOG_SET&lt;/code&gt; 환경 변수를 &lt;code&gt;QtQuickControls1&lt;/code&gt; 또는 &lt;code&gt;QtQuickControls2&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="a2341487de42a5a2e3ed300b000d6a14a5df5dea" translate="yes" xml:space="preserve">
          <source>To extract many bytes at a time, use &lt;a href=&quot;qbytearray#left&quot;&gt;left&lt;/a&gt;(), &lt;a href=&quot;qbytearray#right&quot;&gt;right&lt;/a&gt;(), or &lt;a href=&quot;qbytearray#mid&quot;&gt;mid&lt;/a&gt;().</source>
          <target state="translated">한 번에 많은 바이트를 추출하려면 &lt;a href=&quot;qbytearray#left&quot;&gt;left&lt;/a&gt; (), &lt;a href=&quot;qbytearray#right&quot;&gt;right&lt;/a&gt; () 또는 &lt;a href=&quot;qbytearray#mid&quot;&gt;mid&lt;/a&gt; ()를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="316ba941aafac5984a08e986533c49f01e07a992" translate="yes" xml:space="preserve">
          <source>To facilitate remembering of the naming formats and their purposes, the following table can be used:</source>
          <target state="translated">명명 형식과 그 목적을 쉽게 기억할 수 있도록 다음 표를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5ff245492816dc263495ad273d578bf10ba67490" translate="yes" xml:space="preserve">
          <source>To fetch an icon from the current icon theme:</source>
          <target state="translated">현재 아이콘 테마에서 아이콘을 가져 오려면 :</target>
        </trans-unit>
        <trans-unit id="bca762ec2e69c67e257674b82583f78483910859" translate="yes" xml:space="preserve">
          <source>To filter another item's events, install this item as an event filter for the other item. Example:</source>
          <target state="translated">다른 항목의 이벤트를 필터링하려면이 항목을 다른 항목의 이벤트 필터로 설치하십시오. 예:</target>
        </trans-unit>
        <trans-unit id="e025683429ecfe8fe5bf63f7c7cda4d97aa7162c" translate="yes" xml:space="preserve">
          <source>To find a suitable route we will need to use a &lt;a href=&quot;qml-qtlocation-routequery&quot;&gt;RouteQuery&lt;/a&gt; to define the selection criteria and adding any required waypoints. The &lt;a href=&quot;qml-qtlocation-routemodel&quot;&gt;RouteModel&lt;/a&gt; should return a list of &lt;a href=&quot;qml-qtlocation-routesegment&quot;&gt;RouteSegment&lt;/a&gt;s that defines the route to the destination complete with navigation advice at the joins between segments, called &lt;a href=&quot;qml-qtlocation-routemaneuver&quot;&gt;RouteManeuver&lt;/a&gt;s</source>
          <target state="translated">적절한 경로를 찾으려면 &lt;a href=&quot;qml-qtlocation-routequery&quot;&gt;RouteQuery&lt;/a&gt; 를 사용하여 선택 기준을 정의하고 필요한 웨이 포인트를 추가해야합니다. &lt;a href=&quot;qml-qtlocation-routemodel&quot;&gt;RouteModel는&lt;/a&gt; 목록을 반환해야 &lt;a href=&quot;qml-qtlocation-routesegment&quot;&gt;RouteSegment&lt;/a&gt; (가) 세그먼트 간의 조인에서 호출, 네비게이션 조언을 대상 전체에의하도록 정의 경로를 &lt;a href=&quot;qml-qtlocation-routemaneuver&quot;&gt;RouteManeuver&lt;/a&gt; 의</target>
        </trans-unit>
        <trans-unit id="d2d2cac33bdbaad4e88784a5c47022b2e91ba8f9" translate="yes" xml:space="preserve">
          <source>To find all the &lt;code&gt;name&lt;/code&gt; attributes in the cookbook and select them all regardless of their namespace, replace the namespace prefix with the wildcard and write &lt;code&gt;name&lt;/code&gt; (the attribute name) as the local name:</source>
          <target state="translated">요리 책에서 모든 &lt;code&gt;name&lt;/code&gt; 속성 을 찾아 네임 스페이스와 상관없이 모두 선택하려면 네임 스페이스 접두사를 와일드 카드로 바꾸고 로컬 이름으로 &lt;code&gt;name&lt;/code&gt; (속성 이름)을 쓰십시오 .</target>
        </trans-unit>
        <trans-unit id="76b6ab61f80351fc5e60ce537164f149142f35c8" translate="yes" xml:space="preserve">
          <source>To find and select all the attributes of the</source>
          <target state="translated">모든 속성을 찾아서 선택하려면</target>
        </trans-unit>
        <trans-unit id="10df266c7a6f1ed314c658639e3c3b8a4a03e704" translate="yes" xml:space="preserve">
          <source>To find out font metrics use a &lt;a href=&quot;qfontmetrics&quot;&gt;QFontMetrics&lt;/a&gt; object, e.g.</source>
          <target state="translated">글꼴 메트릭을 찾으려면 &lt;a href=&quot;qfontmetrics&quot;&gt;QFontMetrics&lt;/a&gt; 객체를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="3e76aae9bbb004f7451a228e032f6a787e47d003" translate="yes" xml:space="preserve">
          <source>To find out if a node has children use &lt;a href=&quot;qdomnode#hasChildNodes&quot;&gt;hasChildNodes&lt;/a&gt;() and to get a list of all of a node's children use &lt;a href=&quot;qdomnode#childNodes&quot;&gt;childNodes&lt;/a&gt;().</source>
          <target state="translated">노드에 자식이 있는지 확인하려면 &lt;a href=&quot;qdomnode#hasChildNodes&quot;&gt;hasChildNodes&lt;/a&gt; ()를 사용하고 모든 노드의 자식 목록을 얻으려면 &lt;a href=&quot;qdomnode#childNodes&quot;&gt;childNodes&lt;/a&gt; ()를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="96af90d9a0d68bc4ca1331c22b670b48f19fa8d4" translate="yes" xml:space="preserve">
          <source>To find out more about using the QML language, see the &lt;a href=&quot;qtqml-index&quot;&gt;Qt QML&lt;/a&gt; module documentation.</source>
          <target state="translated">QML 언어 사용에 대한 자세한 내용은 &lt;a href=&quot;qtqml-index&quot;&gt;Qt QML&lt;/a&gt; 모듈 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="59c106e4718093be2df3b313300ae3d290de3cf7" translate="yes" xml:space="preserve">
          <source>To find out which backend is in use, you can enable basic scene graph information logging via the &lt;code&gt;QSG_INFO&lt;/code&gt; environment variable or the &lt;code&gt;qt.scenegraph.general&lt;/code&gt; logging category. This results in some information being printed onto the debug output, during application startup.</source>
          <target state="translated">사용중인 백엔드를 찾으려면 &lt;code&gt;QSG_INFO&lt;/code&gt; 환경 변수 또는 &lt;code&gt;qt.scenegraph.general&lt;/code&gt; logging 범주 를 통해 기본 장면 그래프 정보 로깅을 활성화 할 수 있습니다 . 이로 인해 응용 프로그램 시작 중 일부 정보가 디버그 출력에 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="c518bbca0a12b2496d24d38d6ff55dba960f966c" translate="yes" xml:space="preserve">
          <source>To find selected files, &lt;a href=&quot;qfileselector&quot;&gt;QFileSelector&lt;/a&gt; looks in the same directory as the base file. If there are any directories of the form +&amp;lt;selector&amp;gt; with an active selector, &lt;a href=&quot;qfileselector&quot;&gt;QFileSelector&lt;/a&gt; will prefer a file with the same file name from that directory over the base file. These directories can be nested to check against multiple selectors, for example:</source>
          <target state="translated">선택된 파일을 찾기 위해 &lt;a href=&quot;qfileselector&quot;&gt;QFileSelector&lt;/a&gt; 는 기본 파일과 동일한 디렉토리를 찾습니다. 활성 선택 &lt;a href=&quot;qfileselector&quot;&gt;기가&lt;/a&gt; 있는 + &amp;lt;selector&amp;gt; 형식의 디렉토리가있는 경우 QFileSelector 는 기본 파일보다 디렉토리와 동일한 파일 이름을 가진 파일을 선호합니다. 이러한 디렉토리는 다음과 같이 여러 선택기에 대해 검사하기 위해 중첩 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fcbab6e362ec3601970ba5d071d3886d2467c69e" translate="yes" xml:space="preserve">
          <source>To find the bounding rectangle of the element in logical coordinates, you can apply the matrix on the rectangle returned from &lt;a href=&quot;qsvgrenderer#boundsOnElement&quot;&gt;boundsOnElement&lt;/a&gt;().</source>
          <target state="translated">논리 좌표에서 요소의 경계 사각형을 찾으려면 &lt;a href=&quot;qsvgrenderer#boundsOnElement&quot;&gt;boundsOnElement&lt;/a&gt; () 에서 반환 된 사각형에 행렬을 적용 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="075c5cac4a9b3ecb0f6a68e7f0243f48bfad35d6" translate="yes" xml:space="preserve">
          <source>To fix this, the &lt;code&gt;displaced&lt;/code&gt; transition should additionally ensure the item properties are set to the end values specified in the &lt;code&gt;add&lt;/code&gt; transition, effectively resetting these values whenever an item is displaced. In this case, it means setting the item opacity and scale to 1.0:</source>
          <target state="translated">이 문제를 해결하려면 &lt;code&gt;displaced&lt;/code&gt; 전환에서 항목 속성이 &lt;code&gt;add&lt;/code&gt; 전환에 지정된 최종 값으로 설정되어 항목이 변위 될 때마다 이러한 값을 효과적으로 재설정해야합니다. 이 경우 항목 불투명도 및 배율을 1.0으로 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="731d83545b666b6b7267ecea79d6915e8e5024bc" translate="yes" xml:space="preserve">
          <source>To force &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; to use a specific file format, it is necessary to build and ship your own database plugin with your own &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; library as illustrated above. Some versions of &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; can be forced to write a specific file format by setting the &lt;code&gt;SQLITE_DEFAULT_FILE_FORMAT&lt;/code&gt; define when building &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; 가 특정 파일 형식을 사용 하도록하려면 위에서 설명한대로 고유 한 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; 라이브러리를 사용하여 고유 한 데이터베이스 플러그인을 빌드하고 제공해야합니다 . 일부 버전의 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite는이&lt;/a&gt; 설정에 따라 특정 파일 형식을 작성하도록 강요 할 수 &lt;code&gt;SQLITE_DEFAULT_FILE_FORMAT&lt;/code&gt; 을 구축 할 때 정의 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite는&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="58794de9b3fd4cf94252281b03765a671d833bc1" translate="yes" xml:space="preserve">
          <source>To force a given backend, set the &lt;code&gt;QT_GAMEPAD&lt;/code&gt; environment variable to the name of the desired backend.</source>
          <target state="translated">지정된 백엔드를 강제 실행하려면 &lt;code&gt;QT_GAMEPAD&lt;/code&gt; 환경 변수를 원하는 백엔드 이름으로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="73281bc0237dc9e78e45e2cf995105af4c47f76b" translate="yes" xml:space="preserve">
          <source>To force asynchronous image loading, even for image sources that do not have the &lt;code&gt;asynchronous&lt;/code&gt; property set to &lt;code&gt;true&lt;/code&gt;, you may pass the &lt;code&gt;QQmlImageProviderBase::ForceAsynchronousImageLoading&lt;/code&gt; flag to the image provider constructor. This ensures that all image requests for the provider are handled in a separate thread.</source>
          <target state="translated">&lt;code&gt;asynchronous&lt;/code&gt; 속성을 &lt;code&gt;true&lt;/code&gt; 로 설정 하지 않은 이미지 소스의 경우에도 비동기 이미지를 강제로로드하기 위해 &lt;code&gt;QQmlImageProviderBase::ForceAsynchronousImageLoading&lt;/code&gt; 플래그를 이미지 공급자 생성자에 전달할 수 있습니다 . 이렇게하면 공급자에 대한 모든 이미지 요청이 별도의 스레드에서 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="762d8ab0c4364d5d8237bdafbde07d17a4ecca48" translate="yes" xml:space="preserve">
          <source>To force fetching of the entire result set, you can use the following:</source>
          <target state="translated">전체 결과 집합을 강제로 가져 오려면 다음을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a6eab8e155640da183f2697ccb87034cb2e5b51f" translate="yes" xml:space="preserve">
          <source>To format the text as a hypertext link use &lt;a href=&quot;qtextcharformat#setAnchor&quot;&gt;setAnchor&lt;/a&gt;().</source>
          <target state="translated">텍스트를 하이퍼 텍스트 링크로 형식화하려면 &lt;a href=&quot;qtextcharformat#setAnchor&quot;&gt;setAnchor&lt;/a&gt; ()를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="1d9cd32ebfaa8e9fd461b614b75e934522265644" translate="yes" xml:space="preserve">
          <source>To fully benefit from Unicode, we recommend using &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; for storing all user-visible strings, and performing all text file I/O using &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt;.</source>
          <target state="translated">유니 코드를 최대한 활용하려면 사용자가 볼 수있는 모든 문자열을 저장하기 위해 &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; 을 사용하고 &lt;a href=&quot;qtextstream&quot;&gt;QTextStream을&lt;/a&gt; 사용하여 모든 텍스트 파일 I / O를 수행하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="de8cbc1be9f7b1db7f2f61e902937c5c2c19afc8" translate="yes" xml:space="preserve">
          <source>To further reduce the burden on the system there are optional attributes which can set. Each monitored area can have an expiry date which automatically removes the to-be-monitored area from the monitoring source once the expiry date has been reached. Another option is to adjust the persistence of a monitored area. A &lt;a href=&quot;qgeoareamonitorinfo&quot;&gt;QGeoAreaMonitorInfo&lt;/a&gt; that &lt;a href=&quot;qgeoareamonitorinfo#isPersistent&quot;&gt;isPersistent&lt;/a&gt;() will remain active beyond the current applications lifetime. If an area is entered while the monitoring application is not running the application will be started. Note that this feature is not available on all platforms. Its availability can be checked via &lt;a href=&quot;qgeoareamonitorsource#supportedAreaMonitorFeatures&quot;&gt;QGeoAreaMonitorSource::supportedAreaMonitorFeatures&lt;/a&gt;().</source>
          <target state="translated">시스템의 부담을 더 줄이기 위해 설정할 수있는 선택적 속성이 있습니다. 모니터링되는 각 영역에는 만료 날짜가있을 수 있으며, 만료 날짜에 도달하면 모니터링 대상 영역을 모니터링 소스에서 자동으로 제거합니다. 다른 옵션은 모니터링되는 영역의 지속성을 조정하는 것입니다. &lt;a href=&quot;qgeoareamonitorinfo&quot;&gt;QGeoAreaMonitorInfo는&lt;/a&gt; 것을 &lt;a href=&quot;qgeoareamonitorinfo#isPersistent&quot;&gt;isPersistent은&lt;/a&gt; () 현재의 응용 프로그램 수명이 끝나도 그대로 적용됩니다. 모니터링 응용 프로그램이 실행되지 않는 동안 영역을 입력하면 응용 프로그램이 시작됩니다. 이 기능은 모든 플랫폼에서 사용 가능하지는 않습니다. &lt;a href=&quot;qgeoareamonitorsource#supportedAreaMonitorFeatures&quot;&gt;QGeoAreaMonitorSource :: supportedAreaMonitorFeatures&lt;/a&gt; () 를 통해 가용성을 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ebcac9153dd443a67ebcfe0a84f938e955a0d4d2" translate="yes" xml:space="preserve">
          <source>To gamma correct to a standard PC color-space, set gamma to &lt;code&gt;1/2.2&lt;/code&gt;.</source>
          <target state="translated">표준 PC 색 공간으로 감마 보정하려면 감마를 &lt;code&gt;1/2.2&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="6627c669ad3f44b7bc1928712d0dd1bd772e250a" translate="yes" xml:space="preserve">
          <source>To generate a C++ namespace for a type library, call &lt;code&gt;dumpcpp&lt;/code&gt; with the following command-line parameters:</source>
          <target state="translated">형식 라이브러리에 대한 C ++ 네임 스페이스를 생성하려면 다음 명령 줄 매개 변수를 사용하여 &lt;code&gt;dumpcpp&lt;/code&gt; 를 호출 하십시오 .</target>
        </trans-unit>
        <trans-unit id="5e82995ec17912679c6b0f41330b98919cb8b864" translate="yes" xml:space="preserve">
          <source>To generate a C++ namespace for the type library you want to access, use the &lt;a href=&quot;activeqt-dumpcpp#&quot;&gt;dumpcpp&lt;/a&gt; tool. Run this tool manually on the type library you want to use, or integrate it into the build system by adding the type libraries to the &lt;code&gt;TYPELIBS&lt;/code&gt; variable in your application's &lt;code&gt;.pro&lt;/code&gt; file:</source>
          <target state="translated">액세스하려는 형식 라이브러리에 대한 C ++ 네임 스페이스를 생성하려면 &lt;a href=&quot;activeqt-dumpcpp#&quot;&gt;dumpcpp&lt;/a&gt; 도구를 사용하십시오 . 사용하려는 유형 라이브러리에서이 도구를 수동으로 실행하거나 애플리케이션의 &lt;code&gt;.pro&lt;/code&gt; 파일 에서 &lt;code&gt;TYPELIBS&lt;/code&gt; 변수에 유형 라이브러리를 추가하여 빌드 시스템에 통합 하십시오.</target>
        </trans-unit>
        <trans-unit id="aff2baa97b21eba568c49ce5df49a11cd8637920" translate="yes" xml:space="preserve">
          <source>To generate a custom keymap, the</source>
          <target state="translated">맞춤 키맵을 생성하려면</target>
        </trans-unit>
        <trans-unit id="bd14554f1b5d49210e2bacc49223ed904de6c2d9" translate="yes" xml:space="preserve">
          <source>To generate both the compressed help and the collection file in one go, modify the help collection project file so that it instructs the help generator to create the compressed help first:</source>
          <target state="translated">압축 도움말과 콜렉션 파일을 한 번에 생성하려면 도움말 콜렉션 프로젝트 파일을 수정하여 도움말 생성기가 압축 도움말을 먼저 작성하도록 지시하십시오.</target>
        </trans-unit>
        <trans-unit id="73dbfc4ba643bb0b1b8373dd3bfe35bbd1379cae" translate="yes" xml:space="preserve">
          <source>To generate documentation, QDoc uses configuration files, with the &lt;code&gt;qdocconf&lt;/code&gt; extension, to store configuration settings.</source>
          <target state="translated">문서를 생성하기 위해 QDoc은 &lt;code&gt;qdocconf&lt;/code&gt; 확장자를 가진 구성 파일을 사용하여 구성 설정을 저장합니다.</target>
        </trans-unit>
        <trans-unit id="ded7a7e159e28b409aaecb9984c89d4556f93791" translate="yes" xml:space="preserve">
          <source>To generate message authentication code, pass hash algorithm &lt;a href=&quot;qcryptographichash#Algorithm-enum&quot;&gt;QCryptographicHash::Algorithm&lt;/a&gt; to constructor, then set key and message by &lt;a href=&quot;qmessageauthenticationcode#setKey&quot;&gt;setKey&lt;/a&gt;() and &lt;a href=&quot;qmessageauthenticationcode#addData&quot;&gt;addData&lt;/a&gt;() functions. Result can be acquired by &lt;a href=&quot;qmessageauthenticationcode#result&quot;&gt;result&lt;/a&gt;() function.</source>
          <target state="translated">메시지 인증 코드를 생성하려면 해시 알고리즘 &lt;a href=&quot;qcryptographichash#Algorithm-enum&quot;&gt;QCryptographicHash :: Algorithm&lt;/a&gt; 을 생성자에 전달한 다음 &lt;a href=&quot;qmessageauthenticationcode#setKey&quot;&gt;setKey&lt;/a&gt; () 및 &lt;a href=&quot;qmessageauthenticationcode#addData&quot;&gt;addData&lt;/a&gt; () 함수로 키와 메시지를 설정 하십시오 . 결과 () 함수 로 &lt;a href=&quot;qmessageauthenticationcode#result&quot;&gt;결과를&lt;/a&gt; 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3429fceeff154de5ef5dbf05f3fbb3cdfb26f6cc" translate="yes" xml:space="preserve">
          <source>To generate the IDL the widgets exposed as ActiveX controls need to be instantiated (the constructor is called). At this point, nothing else but a &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt; object exists. Your widget constructor must not rely on any other objects to be created, e.g. it should check for null-pointers.</source>
          <target state="translated">IDL을 생성하려면 ActiveX 컨트롤로 노출 된 위젯을 인스턴스화해야합니다 (생성자 호출). 이 시점에서 &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt; 오브젝트 외에는 존재 하지 않습니다 . 위젯 생성자는 생성 될 다른 객체에 의존해서는 안됩니다. 예를 들어 null 포인터를 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="c942b0c284806957abe837f006bd3d262cdb45e2" translate="yes" xml:space="preserve">
          <source>To generate the documentation, QDoc goes through the source code and generates documentation for C++ types such as classes. QDoc then associates member functions, properties, and other types to the appropriate class.</source>
          <target state="translated">문서를 생성하기 위해 QDoc은 소스 코드를 살펴보고 클래스와 같은 C ++ 유형에 대한 문서를 생성합니다. 그런 다음 QDoc은 멤버 함수, 특성 및 기타 유형을 해당 클래스에 연관시킵니다.</target>
        </trans-unit>
        <trans-unit id="02b12ec3edf1f51b48b44941ce700c9aa09a5e38" translate="yes" xml:space="preserve">
          <source>To get a context compatible with a given OpenGL version or profile, or to request depth and stencil buffers, call &lt;a href=&quot;qopenglwidget#setFormat&quot;&gt;setFormat&lt;/a&gt;():</source>
          <target state="translated">주어진 OpenGL 버전 또는 프로파일과 호환되는 컨텍스트를 얻거나 깊이 및 스텐실 버퍼를 요청하려면 &lt;a href=&quot;qopenglwidget#setFormat&quot;&gt;setFormat&lt;/a&gt; ()을 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="185429b53eb76f72894247b2034eb8ce14ca0ae5" translate="yes" xml:space="preserve">
          <source>To get a semi-transparent &lt;a href=&quot;qquickwidget&quot;&gt;QQuickWidget&lt;/a&gt;, call this function with</source>
          <target state="translated">반투명 &lt;a href=&quot;qquickwidget&quot;&gt;QQuickWidget&lt;/a&gt; 을 얻으려면 이 함수를</target>
        </trans-unit>
        <trans-unit id="dccc25ead1d098d9e6a7ce10513b2a13fdd0f8a3" translate="yes" xml:space="preserve">
          <source>To get an upper- or lowercase version of a string use &lt;a href=&quot;qstring#toUpper&quot;&gt;toUpper&lt;/a&gt;() or &lt;a href=&quot;qstring#toLower&quot;&gt;toLower&lt;/a&gt;().</source>
          <target state="translated">문자열의 대문자 또는 소문자 버전을 얻으려면 &lt;a href=&quot;qstring#toUpper&quot;&gt;toUpper&lt;/a&gt; () 또는 &lt;a href=&quot;qstring#toLower&quot;&gt;toLower&lt;/a&gt; ()를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="6c974e5c914cd0d51c87101b39dc8f4b27c02ee9" translate="yes" xml:space="preserve">
          <source>To get range control (e.g., for an IP address) use masks together with &lt;a href=&quot;qlineedit#setValidator&quot;&gt;validators&lt;/a&gt;.</source>
          <target state="translated">범위 제어를 받으려면 (예 : IP 주소) 마스크를 &lt;a href=&quot;qlineedit#setValidator&quot;&gt;유효성 검사기&lt;/a&gt; 와 함께 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="9c4dd71ed75db99db48d52c4fc477c81633fd6f3" translate="yes" xml:space="preserve">
          <source>To get started please refer to the &lt;a href=&quot;qdomdocument&quot;&gt;QDomDocument&lt;/a&gt; documentation. You might also want to take a look at the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtxml-dombookmarks-example.html#&quot;&gt;DOM Bookmarks Example&lt;/a&gt;, which illustrates how to read and write an XML bookmark file (XBEL) using DOM.</source>
          <target state="translated">시작하려면 &lt;a href=&quot;qdomdocument&quot;&gt;QDomDocument&lt;/a&gt; 설명서 를 참조하십시오 . &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtxml-dombookmarks-example.html#&quot;&gt;DOM을&lt;/a&gt; 사용하여 XML 책갈피 파일 (XBEL)을 읽고 쓰는 방법을 보여주는 DOM 책갈피 예제를 살펴볼 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1e9901ff2bacaedc805ab8c3d0793aa054f5ffd7" translate="yes" xml:space="preserve">
          <source>To get started, the simplest &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt; subclass could like like the following:</source>
          <target state="translated">시작하기 위해 가장 간단한 &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt; 서브 클래스는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="052797e7bb2f08a559e597c1cede0b75b887e61a" translate="yes" xml:space="preserve">
          <source>To get the MyScript SDK or additional information, please contact MyScript at &lt;a href=&quot;mailto:qt@myscript.com&quot;&gt;qt@myscript.com&lt;/a&gt;.</source>
          <target state="translated">MyScript SDK 또는 추가 정보를 얻으려면 MyScript ( &lt;a href=&quot;mailto:qt@myscript.com&quot;&gt;qt@myscript.com)에&lt;/a&gt; 문의하십시오 .</target>
        </trans-unit>
        <trans-unit id="9a13ff8fc0781e265661157e27fad5952a7dc67a" translate="yes" xml:space="preserve">
          <source>To get the current &lt;a href=&quot;qpagelayout#Orientation-enum&quot;&gt;QPageLayout::Orientation&lt;/a&gt; use &lt;a href=&quot;qpagedpaintdevice#pageLayout&quot;&gt;pageLayout&lt;/a&gt;().pageOrientation().</source>
          <target state="translated">현재 &lt;a href=&quot;qpagelayout#Orientation-enum&quot;&gt;QPageLayout :: Orientation&lt;/a&gt; 을 가져 오려면 &lt;a href=&quot;qpagedpaintdevice#pageLayout&quot;&gt;pageLayout&lt;/a&gt; () .pageOrientation ()을 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="544234d34d796c7ce012db54ab99220d44a86c18" translate="yes" xml:space="preserve">
          <source>To get the current &lt;a href=&quot;qpagelayout#Orientation-enum&quot;&gt;QPageLayout::Orientation&lt;/a&gt; use &lt;a href=&quot;qpdfwriter#pageLayout&quot;&gt;pageLayout&lt;/a&gt;().pageOrientation().</source>
          <target state="translated">현재 &lt;a href=&quot;qpagelayout#Orientation-enum&quot;&gt;QPageLayout :: Orientation&lt;/a&gt; 을 가져 오려면 &lt;a href=&quot;qpdfwriter#pageLayout&quot;&gt;pageLayout&lt;/a&gt; () .pageOrientation ()을 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="bb45271b656c7827cfe29ea71e716aa6a087ec4a" translate="yes" xml:space="preserve">
          <source>To get the current &lt;a href=&quot;qpagesize&quot;&gt;QPageSize&lt;/a&gt; use &lt;a href=&quot;qpagedpaintdevice#pageLayout&quot;&gt;pageLayout&lt;/a&gt;().&lt;a href=&quot;qpagedpaintdevice#pageSize&quot;&gt;pageSize&lt;/a&gt;().</source>
          <target state="translated">현재 &lt;a href=&quot;qpagesize&quot;&gt;QPageSize&lt;/a&gt; 를 얻으려면 &lt;a href=&quot;qpagedpaintdevice#pageLayout&quot;&gt;pageLayout&lt;/a&gt; ()을 사용 하십시오 . &lt;a href=&quot;qpagedpaintdevice#pageSize&quot;&gt;pageSize&lt;/a&gt; ().</target>
        </trans-unit>
        <trans-unit id="0796e11a9fcb2aad12f1c86d01df3b6f6c88c9ea" translate="yes" xml:space="preserve">
          <source>To get the current &lt;a href=&quot;qpagesize&quot;&gt;QPageSize&lt;/a&gt; use &lt;a href=&quot;qpdfwriter#pageLayout&quot;&gt;pageLayout&lt;/a&gt;().&lt;a href=&quot;qpagedpaintdevice#pageSize&quot;&gt;pageSize&lt;/a&gt;().</source>
          <target state="translated">현재 &lt;a href=&quot;qpagesize&quot;&gt;QPageSize&lt;/a&gt; 를 얻으려면 &lt;a href=&quot;qpdfwriter#pageLayout&quot;&gt;pageLayout&lt;/a&gt; ()을 사용 하십시오 . &lt;a href=&quot;qpagedpaintdevice#pageSize&quot;&gt;pageSize&lt;/a&gt; ().</target>
        </trans-unit>
        <trans-unit id="19eba6f5d253f33074053451beb8241c06325bc5" translate="yes" xml:space="preserve">
          <source>To get the current page margins use &lt;a href=&quot;qpagedpaintdevice#pageLayout&quot;&gt;pageLayout&lt;/a&gt;().pageMargins().</source>
          <target state="translated">현재 페이지 여백을 얻으려면 &lt;a href=&quot;qpagedpaintdevice#pageLayout&quot;&gt;pageLayout&lt;/a&gt; () .pageMargins ()를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="5017f703627ff112f625a31d77f47879c52f553e" translate="yes" xml:space="preserve">
          <source>To get the current page margins use &lt;a href=&quot;qpdfwriter#pageLayout&quot;&gt;pageLayout&lt;/a&gt;().pageMargins().</source>
          <target state="translated">현재 페이지 여백을 얻으려면 &lt;a href=&quot;qpdfwriter#pageLayout&quot;&gt;pageLayout&lt;/a&gt; () .pageMargins ()를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="3220362a19dcf18d24c386fefe43dda44c5db107" translate="yes" xml:space="preserve">
          <source>To get the definition of the COM interfaces you will have to use the header files provided with the component you want to use. Some compilers can also import type libraries using the #import compiler directive. See the component documentation to find out which type libraries you have to import, and how to use them.</source>
          <target state="translated">COM 인터페이스의 정의를 얻으려면 사용하려는 구성 요소와 함께 제공된 헤더 파일을 사용해야합니다. 일부 컴파일러는 #import 컴파일러 지시문을 사용하여 형식 라이브러리를 가져올 수도 있습니다. 가져와야 할 형식 라이브러리와 사용 방법을 알려면 구성 요소 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1fdfc2261aed4e409cc98b0d730d90703abf2f9b" translate="yes" xml:space="preserve">
          <source>To get the effect of the &lt;code&gt;QBENCHMARK_ONCE&lt;/code&gt; macro, prefix the test function name with &quot;benchmark_once_&quot;.</source>
          <target state="translated">&lt;code&gt;QBENCHMARK_ONCE&lt;/code&gt; 매크로 의 효과를 얻으려면 테스트 함수 이름 앞에 &quot;benchmark_once_&quot;를 붙입니다.</target>
        </trans-unit>
        <trans-unit id="678b74647535d082e051b6aee1b8b8b58b536d34" translate="yes" xml:space="preserve">
          <source>To get the optimal rendering result using &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;, you should use the platform independent &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; as paint device; i.e. using &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; will ensure that the result has an identical pixel representation on any platform.</source>
          <target state="translated">&lt;a href=&quot;qpainter&quot;&gt;QPainter를&lt;/a&gt; 사용하여 최적의 렌더링 결과를 얻으려면 플랫폼 독립적 인 &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; 를 페인트 장치로 사용해야합니다 . 즉, &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; 를 사용 하면 결과가 모든 플랫폼에서 동일한 픽셀 표현을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="a9c9d808bdba36fca78eaf9cfc9ffbf7c925ab1b" translate="yes" xml:space="preserve">
          <source>To get the window that currently has focus, use &lt;a href=&quot;qguiapplication#focusWindow&quot;&gt;QGuiApplication::focusWindow&lt;/a&gt;().</source>
          <target state="translated">현재 포커스가있는 창을 가져 오려면 &lt;a href=&quot;qguiapplication#focusWindow&quot;&gt;QGuiApplication :: focusWindow&lt;/a&gt; ()를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="9934d68cb2d8b9cca97b3fbc21af6c0f95f93f24" translate="yes" xml:space="preserve">
          <source>To give custom widgets special behavior in</source>
          <target state="translated">사용자 정의 위젯에 특별한 동작을 제공하려면</target>
        </trans-unit>
        <trans-unit id="cd74d52af1cc6667dbe87804ee6298a63943651e" translate="yes" xml:space="preserve">
          <source>To give the user more information to help him answer the question, set the &lt;a href=&quot;qmessagebox#detailedText-prop&quot;&gt;detailed text&lt;/a&gt; property. If the &lt;a href=&quot;qmessagebox#detailedText-prop&quot;&gt;detailed text&lt;/a&gt; property is set, the &lt;b&gt;Show Details...&lt;/b&gt; button will be shown.</source>
          <target state="translated">사용자가 질문에 대답하는 데 도움이되는 추가 정보를 제공하려면 &lt;a href=&quot;qmessagebox#detailedText-prop&quot;&gt;세부 텍스트&lt;/a&gt; 속성을 설정하십시오 . &lt;a href=&quot;qmessagebox#detailedText-prop&quot;&gt;자세한 텍스트&lt;/a&gt; 속성이 설정되어 있으면 &lt;b&gt;Show Details ...&lt;/b&gt; 버튼이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="f1a5550ff85d9a528a115445951502a5c0cf0af8" translate="yes" xml:space="preserve">
          <source>To handle plural forms in the native language, you need to load a translation file for this language, too. The lupdate tool has the &lt;code&gt;-pluralonly&lt;/code&gt; command line option, which allows the creation of TS files containing only entries with plural forms.</source>
          <target state="translated">모국어로 복수 형식을 처리하려면이 언어에 대한 번역 파일도로드해야합니다. lupdate 도구에는 &lt;code&gt;-pluralonly&lt;/code&gt; 명령 행 옵션이 있으며,이 옵션을 사용하면 복수 형식의 항목 만 포함하는 TS 파일을 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a15d1f729c28b2c53eb0141c43919c2a3c1dad97" translate="yes" xml:space="preserve">
          <source>To have Configure pick up OpenSSL automatically, set the following variables to point to where your OpenSSL includes and libraries are located:</source>
          <target state="translated">OpenSSL 구성이 자동으로 선택되도록하려면 OpenSSL 포함 및 라이브러리가있는 위치를 가리 키도록 다음 변수를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="d2d3c0fb03da9706a95426414f1a189618414810" translate="yes" xml:space="preserve">
          <source>To have the style of toolbuttons follow the system settings, set this property to &lt;a href=&quot;qt#ToolButtonStyle-enum&quot;&gt;Qt::ToolButtonFollowStyle&lt;/a&gt;. On Unix, the user settings from the desktop environment will be used. On other platforms, &lt;a href=&quot;qt#ToolButtonStyle-enum&quot;&gt;Qt::ToolButtonFollowStyle&lt;/a&gt; means icon only.</source>
          <target state="translated">툴 버튼 스타일이 시스템 설정을 따르도록하려면이 속성을 &lt;a href=&quot;qt#ToolButtonStyle-enum&quot;&gt;Qt :: ToolButtonFollowStyle&lt;/a&gt; 로 설정하십시오 . Unix에서는 데스크탑 환경의 사용자 설정이 사용됩니다. 다른 플랫폼에서 &lt;a href=&quot;qt#ToolButtonStyle-enum&quot;&gt;Qt :: ToolButtonFollowStyle&lt;/a&gt; 은 아이콘 만 의미합니다.</target>
        </trans-unit>
        <trans-unit id="6b574ae289007ff417d9bfd22021ddba65205964" translate="yes" xml:space="preserve">
          <source>To have the web engine view rendered correctly, it is possible to manually create a new offscreen context that is shared with the &lt;code&gt;QQuickRenderControl&lt;/code&gt; and to call the non-public function &lt;code&gt;qt_gl_set_global_share_context()&lt;/code&gt;, rather than calling &lt;code&gt;initialize()&lt;/code&gt;. If &lt;code&gt;initialize()&lt;/code&gt; is called after setting a global context, it will do nothing.</source>
          <target state="translated">웹 엔진보기를 올바르게 렌더링하려면 &lt;code&gt;QQuickRenderControl&lt;/code&gt; 과 공유되는 새 오프 스크린 컨텍스트를 수동으로 작성하고 &lt;code&gt;initialize()&lt;/code&gt; 호출하는 대신 비공개 함수 &lt;code&gt;qt_gl_set_global_share_context()&lt;/code&gt; 를 호출 할 수 있습니다 . 경우 &lt;code&gt;initialize()&lt;/code&gt; 글로벌 컨텍스트를 설정 한 후라고, 그것은 아무것도하지 않는 것입니다.</target>
        </trans-unit>
        <trans-unit id="58caee709dbcb3d944f3c1ef72d5c63b35bba55b" translate="yes" xml:space="preserve">
          <source>To height of the value bar is automatically resized according to &lt;a href=&quot;qml-qtquick-extras-gauge#value-prop&quot;&gt;value&lt;/a&gt;, and does not need to be specified.</source>
          <target state="translated">값 바의 높이를 자동으로 따라 크기를 조정 &lt;a href=&quot;qml-qtquick-extras-gauge#value-prop&quot;&gt;값&lt;/a&gt; , 그리고 지정할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="625f3c7f6db8fdb8e9e4484b84b625633e7f94a7" translate="yes" xml:space="preserve">
          <source>To help with this problem, developers pass an additional integer argument to the &lt;a href=&quot;qobject#tr&quot;&gt;tr()&lt;/a&gt; function, and typically use a special notation for plurals in each translatable string.</source>
          <target state="translated">이 문제를 해결하기 위해 개발자는 &lt;a href=&quot;qobject#tr&quot;&gt;tr ()&lt;/a&gt; 함수에 추가 정수 인수를 전달 하고 일반적으로 각 번역 가능한 문자열에서 복수에 대한 특수 표기법을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="006b3a904da07333ede576f23761176a2db66b09" translate="yes" xml:space="preserve">
          <source>To ignore this gesture set the &lt;code&gt;pinch.accepted&lt;/code&gt; property to false. The gesture will be canceled and no further events will be sent.</source>
          <target state="translated">이 동작을 무시하려면 &lt;code&gt;pinch.accepted&lt;/code&gt; 속성을 false로 설정하십시오 . 제스처가 취소되고 더 이상 이벤트가 전송되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fd1ce23b45cece4a8dfb5c39812f0976aadd222e" translate="yes" xml:space="preserve">
          <source>To illustrate the use of remote objects, on the source side we need to:</source>
          <target state="translated">원격 객체 사용을 설명하기 위해 소스 측에서 다음을 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="b0f6d688d4e050fcd5137ae1c9b6e10e959b2bb4" translate="yes" xml:space="preserve">
          <source>To illustrate what these properties refer to, we can use the following example:</source>
          <target state="translated">이러한 속성이 무엇을 나타내는 지 설명하기 위해 다음 예제를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="768ad204f0f0a6f3f47784484619167f71a77167" translate="yes" xml:space="preserve">
          <source>To illustrate, we present an image of an accessible object tree. Beneath the tree is a table with examples of object relationships.</source>
          <target state="translated">설명하기 위해 접근 가능한 객체 트리의 이미지를 제시합니다. 트리 아래에는 개체 관계의 예가있는 테이블이 있습니다.</target>
        </trans-unit>
        <trans-unit id="f57768e2d62f32dc980fccbccbe5218e18100605" translate="yes" xml:space="preserve">
          <source>To imitate the matching of a shell we can use wildcard mode.</source>
          <target state="translated">쉘 일치를 모방하기 위해 와일드 카드 모드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4a339c65ee743637c923979807bbf7928ea94156" translate="yes" xml:space="preserve">
          <source>To implement a COM object with Qt, create a subclass of &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; or any existing &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; subclass. If the class is a subclass of &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;, the COM object will be an ActiveX control.</source>
          <target state="translated">Qt를 가진 COM 객체를 구현하기 위해,의 서브 클래스 만들 수 &lt;a href=&quot;qobject&quot;&gt;있는 QObject&lt;/a&gt; 또는 기존 &lt;a href=&quot;qobject&quot;&gt;QObject를의&lt;/a&gt; 서브 클래스를. 클래스가 &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; 의 서브 클래스 인 경우 COM 개체는 ActiveX 컨트롤이됩니다.</target>
        </trans-unit>
        <trans-unit id="dc4a3b3f0d257bd9b81098032ef24f8b483c7063" translate="yes" xml:space="preserve">
          <source>To implement a Qt SQL driver as a plugin (so that it is recognized and loaded by the Qt library at runtime), the driver must use the &lt;a href=&quot;#Q_PLUGIN_METADATA&quot;&gt;Q_PLUGIN_METADATA&lt;/a&gt;() macro. Read &lt;a href=&quot;plugins-howto&quot;&gt;How to Create Qt Plugins&lt;/a&gt; for more information on this. You can also check out how this is done in the SQL plugins that are provided with Qt in &lt;code&gt;QTDIR/qtbase/src/plugins/sqldrivers&lt;/code&gt;.</source>
          <target state="translated">Qt SQL 드라이버를 플러그인으로 구현하려면 (런타임에 Qt 라이브러리에 의해 인식되고로드되도록) 드라이버는 &lt;a href=&quot;#Q_PLUGIN_METADATA&quot;&gt;Q_PLUGIN_METADATA&lt;/a&gt; () 매크로를 사용해야합니다 . 이에 대한 자세한 정보는 &lt;a href=&quot;plugins-howto&quot;&gt;Qt 플러그인 작성 방법을&lt;/a&gt; 읽으십시오 . &lt;code&gt;QTDIR/qtbase/src/plugins/sqldrivers&lt;/code&gt; 의 Qt와 함께 제공되는 SQL 플러그인에서이를 수행하는 방법도 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d2be2ac0632b5d1649d278fea4ae2e90c25c1443" translate="yes" xml:space="preserve">
          <source>To implement a custom URL scheme for &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwebengine-module.html&quot;&gt;QtWebEngine&lt;/a&gt;, you first have to create an instance of &lt;a href=&quot;qwebengineurlscheme&quot;&gt;QWebEngineUrlScheme&lt;/a&gt; and register it using &lt;a href=&quot;qwebengineurlscheme#registerScheme&quot;&gt;QWebEngineUrlScheme::registerScheme&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwebengine-module.html&quot;&gt;QtWebEngine&lt;/a&gt; 에 대한 사용자 정의 URL 스킴을 구현하려면 먼저 &lt;a href=&quot;qwebengineurlscheme&quot;&gt;QWebEngineUrlScheme&lt;/a&gt; 인스턴스를 작성하고 &lt;a href=&quot;qwebengineurlscheme#registerScheme&quot;&gt;QWebEngineUrlScheme :: registerScheme&lt;/a&gt; ()를 사용하여 등록해야합니다 .</target>
        </trans-unit>
        <trans-unit id="908e59e61babb9b5f94baa0a0cc4204987a11eba" translate="yes" xml:space="preserve">
          <source>To implement a factory, subclass &lt;a href=&quot;qqmlnetworkaccessmanagerfactory&quot;&gt;QQmlNetworkAccessManagerFactory&lt;/a&gt; and implement the virtual &lt;a href=&quot;qqmlnetworkaccessmanagerfactory#create&quot;&gt;create&lt;/a&gt;() method, then assign it to the relevant QML engine using &lt;a href=&quot;qqmlengine#setNetworkAccessManagerFactory&quot;&gt;QQmlEngine::setNetworkAccessManagerFactory&lt;/a&gt;().</source>
          <target state="translated">팩토리를 구현하려면 &lt;a href=&quot;qqmlnetworkaccessmanagerfactory&quot;&gt;QQmlNetworkAccessManagerFactory를&lt;/a&gt; 서브 클래스로 &lt;a href=&quot;qqmlnetworkaccessmanagerfactory#create&quot;&gt;작성&lt;/a&gt; 하고 virtual create () 메소드를 구현 한 후 &lt;a href=&quot;qqmlengine#setNetworkAccessManagerFactory&quot;&gt;QQmlEngine :: setNetworkAccessManagerFactory&lt;/a&gt; ()를 사용하여 관련 QML 엔진에 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="a4bc0cc7c60c088bc88a65d035f601bc08c169f0" translate="yes" xml:space="preserve">
          <source>To implement drag and drop actions for a type of information that is not covered by the &lt;a href=&quot;qdrag&quot;&gt;QDrag&lt;/a&gt; convenience functions, the first and most important step is to look for existing formats that are appropriate: The Internet Assigned Numbers Authority (&lt;a href=&quot;http://www.iana.org&quot;&gt;IANA&lt;/a&gt;) provides a &lt;a href=&quot;http://www.iana.org/assignments/media-types/&quot;&gt;hierarchical list of MIME media types&lt;/a&gt; at the Information Sciences Institute (&lt;a href=&quot;http://www.isi.edu&quot;&gt;ISI&lt;/a&gt;). Using standard MIME types maximizes the interoperability of your application with other software now and in the future.</source>
          <target state="translated">&lt;a href=&quot;qdrag&quot;&gt;QDrag&lt;/a&gt; 편의 기능에서 다루지 않는 정보 유형에 대해 끌어서 놓기 조치를 구현하려면 가장 중요한 첫 번째 단계는 적절한 기존 형식을 찾는 것입니다. &lt;a href=&quot;http://www.iana.org&quot;&gt;IANA&lt;/a&gt; (Internet Assigned Numbers Authority )는 다음과 같은 &lt;a href=&quot;http://www.iana.org/assignments/media-types/&quot;&gt;계층 적 목록을&lt;/a&gt; 제공합니다. MIME 미디어 유형의 정보 과학 연구소 (에서 &lt;a href=&quot;http://www.isi.edu&quot;&gt;ISI&lt;/a&gt; ). 표준 MIME 유형을 사용하면 현재와 미래에 다른 소프트웨어와 응용 프로그램의 상호 운용성이 극대화됩니다.</target>
        </trans-unit>
        <trans-unit id="e028b129f996e83c8c5ba5a749c702ff3b16c8cf" translate="yes" xml:space="preserve">
          <source>To implement support for a custom networked scheme, see setNetworkAccessManagerFactory.</source>
          <target state="translated">사용자 정의 네트워크 구성표에 대한 지원을 구현하려면 setNetworkAccessManagerFactory를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="3d975aef7c3ca42a6198fe3d6145b05a438af56f" translate="yes" xml:space="preserve">
          <source>To implement support for a new backend, you must derive from &lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt; and reimplement the virtual &lt;a href=&quot;qpaintdevice#paintEngine&quot;&gt;paintEngine&lt;/a&gt;() function to tell &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; which paint engine should be used to draw on this particular device. Note that you also must create a corresponding paint engine to be able to draw on the device, i.e derive from &lt;a href=&quot;qpaintengine&quot;&gt;QPaintEngine&lt;/a&gt; and reimplement its virtual functions.</source>
          <target state="translated">새로운 백엔드에 대한 지원을 구현하려면 &lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt; 에서 파생 하고 virtual &lt;a href=&quot;qpaintdevice#paintEngine&quot;&gt;paintEngine&lt;/a&gt; () 함수를 다시 구현 하여이 특정 장치에 어떤 페인트 엔진을 사용해야하는지 &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; 에 알려야 합니다. 또한 장치에 그릴 수 있도록 해당 페인트 엔진을 만들어야합니다. 즉 &lt;a href=&quot;qpaintengine&quot;&gt;QPaintEngine&lt;/a&gt; 에서 파생 하여 가상 기능을 다시 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="fe0472f92c49677952f74acd0472c08f23c99724" translate="yes" xml:space="preserve">
          <source>To implement this function create a derivative of &lt;a href=&quot;qabstractplanarvideobuffer&quot;&gt;QAbstractPlanarVideoBuffer&lt;/a&gt; and implement its map function instance instead.</source>
          <target state="translated">이 함수를 구현하려면 &lt;a href=&quot;qabstractplanarvideobuffer&quot;&gt;QAbstractPlanarVideoBuffer&lt;/a&gt; 의 파생물을 작성하고 대신 맵 함수 인스턴스를 구현하십시오.</target>
        </trans-unit>
        <trans-unit id="e57baf652275f5bd09812fc7631bed3b732be2c0" translate="yes" xml:space="preserve">
          <source>To import Qt Charts QML types, add the following import statement to your &lt;code&gt;.qml&lt;/code&gt; file:</source>
          <target state="translated">Qt 차트 QML 유형을 가져 오려면 &lt;code&gt;.qml&lt;/code&gt; 파일에 다음 import 문을 추가 하십시오.</target>
        </trans-unit>
        <trans-unit id="9706bc12bb5fecf5f24e6d2f135552b3765653c3" translate="yes" xml:space="preserve">
          <source>To import Qt Data Visualization QML types, add the following import statement to your &lt;code&gt;.qml&lt;/code&gt; file:</source>
          <target state="translated">Qt Data Visualization QML 유형을 가져 오려면 &lt;code&gt;.qml&lt;/code&gt; 파일에 다음 import 문을 추가 하십시오.</target>
        </trans-unit>
        <trans-unit id="c68645c4214e6de06941f2f3b7d2ba7cf44ebd5d" translate="yes" xml:space="preserve">
          <source>To import the QML types into your application, use the following import statement in your .qml file:</source>
          <target state="translated">QML 유형을 애플리케이션으로 가져 오려면 .qml 파일에서 다음 import 문을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="ebe927566ef045ad033e13343c25e44971d2af0e" translate="yes" xml:space="preserve">
          <source>To include code snippets from an external file, use the &lt;a href=&quot;07-0-qdoc-commands-includingexternalcode#snippet-command&quot;&gt;\snippet&lt;/a&gt; and &lt;a href=&quot;07-0-qdoc-commands-includingexternalcode#codeline-command&quot;&gt;\codeline&lt;/a&gt; commands.</source>
          <target state="translated">외부 파일의 코드 스 니펫을 포함 시키려면 &lt;a href=&quot;07-0-qdoc-commands-includingexternalcode#snippet-command&quot;&gt;\ snippet&lt;/a&gt; 및 &lt;a href=&quot;07-0-qdoc-commands-includingexternalcode#codeline-command&quot;&gt;\ codeline&lt;/a&gt; 명령을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="3193d971b24038413842acc771855127922ec5d7" translate="yes" xml:space="preserve">
          <source>To include the &lt;code&gt;#&lt;/code&gt; character in variable assignments, it is necessary to use the contents of the built-in &lt;a href=&quot;qmake-variable-reference#literal-hash&quot;&gt;LITERAL_HASH&lt;/a&gt; variable.</source>
          <target state="translated">변수 할당에 &lt;code&gt;#&lt;/code&gt; 문자 를 포함 시키려면 내장 &lt;a href=&quot;qmake-variable-reference#literal-hash&quot;&gt;LITERAL_HASH&lt;/a&gt; 변수 의 내용을 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="2027ff02580e6c3a230537dd7dddda41723104b9" translate="yes" xml:space="preserve">
          <source>To include the definitions of the module's classes and functions, use the following directive:</source>
          <target state="translated">모듈의 클래스와 함수에 대한 정의를 포함하려면 다음 지시문을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="dab785d8e8fcf72a49638451cfe5da33d5602994" translate="yes" xml:space="preserve">
          <source>To include the definitions of the module's classes and functions, use the following include statement:</source>
          <target state="translated">모듈 클래스 및 함수의 정의를 포함 시키려면 다음 include 문을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="25604e04d87942d1b1ab46483ecf24327afcedad" translate="yes" xml:space="preserve">
          <source>To include the definitions of the module's classes, use the following directive:</source>
          <target state="translated">모듈 클래스의 정의를 포함하려면 다음 지시문을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="c9fc611d452ec4a784733e0eac0de194a266727f" translate="yes" xml:space="preserve">
          <source>To include the definitions of the module's functions and classes, use the following directives:</source>
          <target state="translated">모듈의 함수 및 클래스에 대한 정의를 포함 시키려면 다음 지시문을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="bf24b763e4224da08358c601ce5e3fdfe2817151" translate="yes" xml:space="preserve">
          <source>To include the definitions of the modules' classes, use the following directives:</source>
          <target state="translated">모듈 클래스의 정의를 포함하려면 다음 지시문을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="52e2f17553c064aeddf2e9a86d855ab01adaabb8" translate="yes" xml:space="preserve">
          <source>To include the file and line number, an object must be passed. If the file and line number is not available for that instance (either it was not instantiated by the QML engine or location information is disabled), &quot;unknown location&quot; will be used instead.</source>
          <target state="translated">파일과 줄 번호를 포함 시키려면 객체를 전달해야합니다. 해당 인스턴스에서 파일 및 행 번호를 사용할 수없는 경우 (QML 엔진에서 인스턴스화하지 않았거나 위치 정보가 사용 불가능한 경우) &quot;알 수없는 위치&quot;가 대신 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="15fceb8eb65ee33a1b589fd642d01c3486c72e67" translate="yes" xml:space="preserve">
          <source>To include the file and line number, an object must be passed. If the file and line number is not available for that instance (either it was not instantiated by the QML engine or location information is disabled), &quot;unknown location&quot; will be used instead. For example,</source>
          <target state="translated">파일과 줄 번호를 포함 시키려면 객체를 전달해야합니다. 해당 인스턴스에 대해 파일 및 행 번호를 사용할 수없는 경우 (QML 엔진에서 인스턴스화하지 않았거나 위치 정보가 사용 불가능한 경우) &quot;알 수없는 위치&quot;가 대신 사용됩니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="0d4a3965f288470c2d6f1e14100d7e8ef5703120" translate="yes" xml:space="preserve">
          <source>To indicate that all possible mouse buttons are to be accepted, the special value 'Qt.AllButtons' may be used:</source>
          <target state="translated">가능한 모든 마우스 버튼이 허용됨을 나타 내기 위해 특수 값 'Qt.AllButtons'를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0e38cb42c57654dc72cfe785a4be1f2aaf30d597" translate="yes" xml:space="preserve">
          <source>To indicate that the errors are not fatal and that the connection should proceed, the &lt;a href=&quot;qnetworkreply#ignoreSslErrors&quot;&gt;QNetworkReply::ignoreSslErrors&lt;/a&gt;() function should be called from the slot connected to this signal. If it is not called, the SSL session will be torn down before any data is exchanged (including the URL).</source>
          <target state="translated">오류가 치명적이지 않고 연결이 진행 &lt;a href=&quot;qnetworkreply#ignoreSslErrors&quot;&gt;중임을 나타내&lt;/a&gt; 려면이 신호에 연결된 슬롯에서 QNetworkReply :: ignoreSslErrors () 함수를 호출해야합니다. 호출되지 않으면 데이터를 교환하기 전에 (URL을 포함하여) SSL 세션이 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="2b4aa01dfffaeedbbc2f003769dfb03c94500995" translate="yes" xml:space="preserve">
          <source>To indicate that the errors are not fatal and that the connection should proceed, the &lt;a href=&quot;qnetworkreply#ignoreSslErrors&quot;&gt;ignoreSslErrors&lt;/a&gt;() function should be called from the slot connected to this signal. If it is not called, the SSL session will be torn down before any data is exchanged (including the URL).</source>
          <target state="translated">오류가 치명적이지 않고 연결이 진행 &lt;a href=&quot;qnetworkreply#ignoreSslErrors&quot;&gt;중임을 나타내&lt;/a&gt; 려면이 신호에 연결된 슬롯에서 ignoreSslErrors () 함수를 호출해야합니다. 호출되지 않으면 데이터를 교환하기 전에 (URL을 포함하여) SSL 세션이 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="f8934fe20165efd0dfd6a5d9f226af5a9128617e" translate="yes" xml:space="preserve">
          <source>To indicate which methods are suitable for your application, set the &lt;a href=&quot;qml-qtpositioning-positionsource#preferredPositioningMethods-prop&quot;&gt;preferredPositioningMethods&lt;/a&gt; property. If the preferred methods are not available, the default source of location data for the platform will be chosen instead. If no default source is available (because none are installed for the runtime platform, or because it is disabled), the &lt;a href=&quot;qml-qtpositioning-positionsource#valid-prop&quot;&gt;valid&lt;/a&gt; property will be set to false.</source>
          <target state="translated">응용 프로그램에 적합한 방법을 나타내려면 &lt;a href=&quot;qml-qtpositioning-positionsource#preferredPositioningMethods-prop&quot;&gt;preferredPositioningMethods&lt;/a&gt; 속성을 설정하십시오 . 선호하는 방법을 사용할 수없는 경우 플랫폼의 기본 위치 데이터 소스가 대신 선택됩니다. 사용 가능한 기본 소스가없는 경우 (런타임 플랫폼에 설치되지 않았거나 비활성화되어 있기 때문에) &lt;a href=&quot;qml-qtpositioning-positionsource#valid-prop&quot;&gt;유효한&lt;/a&gt; 특성이 false로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="e1559d097b634d12f53dde0cfc3de08555469dd4" translate="yes" xml:space="preserve">
          <source>To inform</source>
          <target state="translated">알려</target>
        </trans-unit>
        <trans-unit id="68b98554ab9892616328af77d7acf0a56213c458" translate="yes" xml:space="preserve">
          <source>To initialize a licensed control use the following pattern:</source>
          <target state="translated">라이센스가 부여 된 컨트롤을 초기화하려면 다음 패턴을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="a9b9000504404ed9ab779fb2be3b4dacabcf29d7" translate="yes" xml:space="preserve">
          <source>To initialize the bits to true, either pass &lt;code&gt;true&lt;/code&gt; as second argument to the constructor, or call &lt;a href=&quot;qbitarray#fill&quot;&gt;fill&lt;/a&gt;() later on.</source>
          <target state="translated">비트를 true로 초기화하려면 &lt;code&gt;true&lt;/code&gt; 를 생성자에 두 번째 인수로 전달 하거나 나중에 &lt;a href=&quot;qbitarray#fill&quot;&gt;fill&lt;/a&gt; ()을 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="ce4ab601cb873cd7b2d2c920826fe079e26dc15b" translate="yes" xml:space="preserve">
          <source>To initialize the control before it is activated, reimplement this function and add your initialization code before you call &lt;a href=&quot;qaxwidget#createHostWindow&quot;&gt;createHostWindow&lt;/a&gt;(true).</source>
          <target state="translated">컨트롤을 활성화하기 전에 초기화하려면 &lt;a href=&quot;qaxwidget#createHostWindow&quot;&gt;createHostWindow&lt;/a&gt; (true) 를 호출하기 전에이 함수를 다시 구현하고 초기화 코드를 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="e924d18ae3b4a19ba53cef35e55ca35dd34110fa" translate="yes" xml:space="preserve">
          <source>To initialize the control on a different machine use the following pattern:</source>
          <target state="translated">다른 머신에서 제어를 초기화하려면 다음 패턴을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="c38ebea234d99fa40f9b4a8b2aeb30afe6ec9313" translate="yes" xml:space="preserve">
          <source>To initialize the control's properties, use</source>
          <target state="translated">컨트롤의 속성을 초기화하려면</target>
        </trans-unit>
        <trans-unit id="51cd53a47f4fe23410e0ffcdf7809fc8f559730f" translate="yes" xml:space="preserve">
          <source>To insert a (key, value) pair into the hash, you can use operator[]():</source>
          <target state="translated">해시에 (키, 값) 쌍을 삽입하려면 operator [] ()를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="619f4327aafdc4c818ac746e4cdd55aa02194395" translate="yes" xml:space="preserve">
          <source>To insert a (key, value) pair into the map, you can use operator[]():</source>
          <target state="translated">맵에 (키, 값) 쌍을 삽입하려면 operator [] ()를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="48fb17b5d2391757208ab9e22124ff066120fc29" translate="yes" xml:space="preserve">
          <source>To insert a value into the set, use &lt;a href=&quot;qset#insert&quot;&gt;insert&lt;/a&gt;():</source>
          <target state="translated">세트에 사용 된 값을 삽입하려면 &lt;a href=&quot;qset#insert&quot;&gt;삽입&lt;/a&gt; ) (:</target>
        </trans-unit>
        <trans-unit id="627a04eaa418ddd7ab045c696148132fa3a8eaea" translate="yes" xml:space="preserve">
          <source>To insert an item at the end, pass &lt;code&gt;menuItems.length&lt;/code&gt;.</source>
          <target state="translated">끝에 항목을 삽입하려면 &lt;code&gt;menuItems.length&lt;/code&gt; 를 전달하십시오 .</target>
        </trans-unit>
        <trans-unit id="14d2bc665c3256569dd629e9cf2dc593041cc76d" translate="yes" xml:space="preserve">
          <source>To install a specific package, use &lt;code&gt;sdkmanager&lt;/code&gt; from &lt;code&gt;&amp;lt;ANDROID_SDK_ROOT&amp;gt;/tools/bin&lt;/code&gt;. For example, the following command installs the &lt;code&gt;android-10&lt;/code&gt; platforms package on Ubuntu:</source>
          <target state="translated">특정 패키지를 설치하려면 &lt;code&gt;&amp;lt;ANDROID_SDK_ROOT&amp;gt;/tools/bin&lt;/code&gt; 의 &lt;code&gt;sdkmanager&lt;/code&gt; 를 사용 하십시오 . 예를 들어 다음 명령 은 Ubuntu에 &lt;code&gt;android-10&lt;/code&gt; 플랫폼 패키지를 설치합니다 .</target>
        </trans-unit>
        <trans-unit id="23acbbaf0daac2a08a16d3420a11b9ee334f5f15" translate="yes" xml:space="preserve">
          <source>To instantiate a COM object use the &lt;a href=&quot;qaxbase#control-prop&quot;&gt;QAxBase::setControl&lt;/a&gt;() API, or pass the name of the object directly into the constructor of the &lt;a href=&quot;qaxbase&quot;&gt;QAxBase&lt;/a&gt; subclass you are using.</source>
          <target state="translated">COM 오브젝트를 인스턴스화하려면 &lt;a href=&quot;qaxbase#control-prop&quot;&gt;QAxBase :: setControl&lt;/a&gt; () API를 사용하거나 오브젝트 이름을 사용 중인 &lt;a href=&quot;qaxbase&quot;&gt;QAxBase&lt;/a&gt; 서브 클래스 의 생성자로 직접 전달하십시오 .</target>
        </trans-unit>
        <trans-unit id="5832ce925e1e52a8c7908a758555d393b0b036a9" translate="yes" xml:space="preserve">
          <source>To instantiate a script engine, use &lt;a href=&quot;qaxscriptmanager#addObject&quot;&gt;QAxScriptManager::addObject&lt;/a&gt;() to register the COM objects you want to access from script, and &lt;a href=&quot;qaxscriptmanager#load&quot;&gt;QAxScriptManager::load&lt;/a&gt;() to load the script code into the engine. Then call the script functions using &lt;a href=&quot;qaxscriptmanager#call&quot;&gt;QAxScriptManager::call&lt;/a&gt;() or &lt;a href=&quot;qaxscript#call&quot;&gt;QAxScript::call&lt;/a&gt;().</source>
          <target state="translated">스크립트 엔진을 인스턴스화하려면 &lt;a href=&quot;qaxscriptmanager#addObject&quot;&gt;QAxScriptManager :: addObject&lt;/a&gt; ()를 사용하여 스크립트에서 액세스하려는 COM 오브젝트를 등록하고 &lt;a href=&quot;qaxscriptmanager#load&quot;&gt;QAxScriptManager :: load&lt;/a&gt; ()를 사용하여 스크립트 코드를 엔진에로드하십시오. 그런 다음 &lt;a href=&quot;qaxscriptmanager#call&quot;&gt;QAxScriptManager :: call&lt;/a&gt; () 또는 &lt;a href=&quot;qaxscript#call&quot;&gt;QAxScript :: call&lt;/a&gt; ()을 사용하여 스크립트 함수를 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="89213ef1ed9f24a6dccabf389fe11eaa725bac4d" translate="yes" xml:space="preserve">
          <source>To integrate a custom widget with</source>
          <target state="translated">사용자 정의 위젯을</target>
        </trans-unit>
        <trans-unit id="39740ededb581a7293c01b1d0675ab08b15083a6" translate="yes" xml:space="preserve">
          <source>To integrate custom Direct3D 12 rendering, use &lt;a href=&quot;qsgrendernode&quot;&gt;QSGRenderNode&lt;/a&gt; in combination with &lt;a href=&quot;qsgrendererinterface&quot;&gt;QSGRendererInterface&lt;/a&gt;. This approach doesn't rely on OpenGL contexts or API specifics like framebuffers, and allows exposing the graphics device and command buffer from the adaptation. It's not necessarily suitable for easy integration of all types of content, in particular true 3D, so it'll likely get complemented by an alternative to &lt;a href=&quot;qquickframebufferobject&quot;&gt;QQuickFramebufferObject&lt;/a&gt; in future releases.</source>
          <target state="translated">사용자 정의 Direct3D 12 렌더링을 통합하려면 &lt;a href=&quot;qsgrendernode&quot;&gt;QSGRenderNode&lt;/a&gt; 를 &lt;a href=&quot;qsgrendererinterface&quot;&gt;QSGRendererInterface&lt;/a&gt; 와 함께 사용 하십시오 . 이 접근 방식은 OpenGL 컨텍스트 또는 프레임 버퍼와 같은 API 관련 사항에 의존하지 않으며 그래픽 장치와 명령 버퍼를 적응에서 노출시킬 수 있습니다. 모든 유형의 컨텐츠, 특히 진정한 3D의 쉬운 통합에 반드시 적합한 것은 &lt;a href=&quot;qquickframebufferobject&quot;&gt;아니므&lt;/a&gt; 로 향후 릴리스에서 QQuickFramebufferObject 의 대안으로 보완 될 것 입니다.</target>
        </trans-unit>
        <trans-unit id="31641f5e01dd170a39a5028bd9bd53ae87fe0d89" translate="yes" xml:space="preserve">
          <source>To interact with running tasks using signals and slots, use &lt;a href=&quot;qfuturewatcher&quot;&gt;QFutureWatcher&lt;/a&gt;.</source>
          <target state="translated">신호와 슬롯을 사용하여 실행중인 작업과 상호 작용하려면 &lt;a href=&quot;qfuturewatcher&quot;&gt;QFutureWatcher를&lt;/a&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="c472dd814b3501e33d5d64b42a79d25792ff4b35" translate="yes" xml:space="preserve">
          <source>To intercept drag and drop events for the scene, you reimplement &lt;a href=&quot;qgraphicsscene#dragEnterEvent&quot;&gt;QGraphicsScene::dragEnterEvent&lt;/a&gt;() and whichever event handlers your particular scene needs, in a &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; subclass. You can read more about drag and drop in Graphics View in the documentation for each of &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt;'s event handlers.</source>
          <target state="translated">장면의 끌어서 놓기 이벤트를 가로 채기 위해 &lt;a href=&quot;qgraphicsscene#dragEnterEvent&quot;&gt;QGraphicsScene :: dragEnterEvent&lt;/a&gt; () 및 &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; 서브 클래스 에서 특정 장면에 필요한 이벤트 핸들러 를 다시 구현 합니다 . &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt; 의 각 이벤트 핸들러 에 대한 문서에서 기하 창의 끌어서 놓기에 대한 자세한 내용을 읽을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e4d573df507990e2ba2b3015c9a61ea59c7463c7" translate="yes" xml:space="preserve">
          <source>To iterate over a list, you can either use index positions or &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;'s Java-style and STL-style iterator types:</source>
          <target state="translated">리스트를 반복하기 위해 인덱스 위치 또는 &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; 의 Java 스타일 및 STL 스타일 반복자 유형을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c846b2032dd567c323f0ac0f578838ec99896264" translate="yes" xml:space="preserve">
          <source>To iterate over the list, you can use the &lt;a href=&quot;containers#foreach&quot;&gt;foreach&lt;/a&gt; pseudo-keyword:</source>
          <target state="translated">목록을 반복하기 위해 &lt;a href=&quot;containers#foreach&quot;&gt;foreach&lt;/a&gt; 의사 키워드를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dc709163fa36baf96bb24486cd5864f83e6c07bc" translate="yes" xml:space="preserve">
          <source>To keep the behavior of dynamically created state machines and compiled state machines the same, the</source>
          <target state="translated">동적으로 생성 된 상태 머신과 컴파일 된 상태 머신의 동작을 동일하게 유지하려면</target>
        </trans-unit>
        <trans-unit id="3a1accd2dff71491dc0d71a73153736fc2de834c" translate="yes" xml:space="preserve">
          <source>To keep track of some &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;s, create a &lt;a href=&quot;qobjectcleanuphandler&quot;&gt;QObjectCleanupHandler&lt;/a&gt;, and &lt;a href=&quot;qobjectcleanuphandler#add&quot;&gt;add&lt;/a&gt;() the objects you are interested in. If you are no longer interested in tracking a particular object, use &lt;a href=&quot;qobjectcleanuphandler#remove&quot;&gt;remove&lt;/a&gt;() to remove it from the cleanup handler. If an object being tracked by the cleanup handler gets deleted by someone else it will automatically be removed from the cleanup handler. You can delete all the objects in the cleanup handler with &lt;a href=&quot;qobjectcleanuphandler#clear&quot;&gt;clear&lt;/a&gt;(), or by destroying the cleanup handler. &lt;a href=&quot;qobjectcleanuphandler#isEmpty&quot;&gt;isEmpty&lt;/a&gt;() returns &lt;code&gt;true&lt;/code&gt; if the &lt;a href=&quot;qobjectcleanuphandler&quot;&gt;QObjectCleanupHandler&lt;/a&gt; has no objects to keep track of.</source>
          <target state="translated">일부 추적 유지하지 않으려면 &lt;a href=&quot;qobject&quot;&gt;QObject를&lt;/a&gt; ,들 만들 &lt;a href=&quot;qobjectcleanuphandler&quot;&gt;QObjectCleanupHandler을&lt;/a&gt; 하고 &lt;a href=&quot;qobjectcleanuphandler#add&quot;&gt;추가&lt;/a&gt; 를 이용해서에 관심이 객체) (. 더 이상 특정 객체 추적에 관심이 있다면, 사용의 &lt;a href=&quot;qobjectcleanuphandler#remove&quot;&gt;제거는&lt;/a&gt; () 정리 처리기에서 제거합니다. 정리 처리기에서 추적중인 개체가 다른 사람에 의해 삭제되면 정리 처리기에서 자동으로 제거됩니다. &lt;a href=&quot;qobjectcleanuphandler#clear&quot;&gt;clear&lt;/a&gt; ()를 사용하거나 정리 처리기를 제거 하여 정리 처리기의 모든 개체를 삭제할 수 있습니다 . &lt;a href=&quot;qobjectcleanuphandler&quot;&gt;QObjectCleanupHandler에&lt;/a&gt; 추적 할 오브젝트가없는 경우 &lt;a href=&quot;qobjectcleanuphandler#isEmpty&quot;&gt;isEmpty&lt;/a&gt; ()는 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="c6a701197ececd2b1a13097aff3b0d4ce1cec4dd" translate="yes" xml:space="preserve">
          <source>To kill all the particles in the system, use an Age affector.</source>
          <target state="translated">시스템의 모든 입자를 죽이려면 Age 영향자를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="2ed85ef8590db93553fbb995ff96656ee42d602f" translate="yes" xml:space="preserve">
          <source>To launch your project with Visual Studio a corresponding project needs to be created. &lt;code&gt;qmake&lt;/code&gt; supports converting a &lt;code&gt;.pro&lt;/code&gt; project into Visual Studio format by passing the parameters &lt;code&gt;-tp&lt;/code&gt; vc.</source>
          <target state="translated">Visual Studio로 프로젝트를 시작하려면 해당 프로젝트를 만들어야합니다. &lt;code&gt;qmake&lt;/code&gt; 는 &lt;code&gt;-tp&lt;/code&gt; vc 매개 변수를 전달하여 &lt;code&gt;.pro&lt;/code&gt; 프로젝트를 Visual Studio 형식으로 변환하는 것을 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="3160e69c1f88ddeaffc59249b0753ae8891d79ce" translate="yes" xml:space="preserve">
          <source>To learn more about uses of QML code, there are several code samples which show how QML types are used. In addition, there are several demos which show how QML code is used in applications.</source>
          <target state="translated">QML 코드 사용에 대한 자세한 내용은 QML 유형 사용 방법을 보여주는 몇 가지 코드 샘플이 있습니다. 또한 애플리케이션에서 QML 코드가 사용되는 방법을 보여주는 몇 가지 데모가 있습니다.</target>
        </trans-unit>
        <trans-unit id="ae939a15d9d0f7b8a1934cce8e1153a6450f1e95" translate="yes" xml:space="preserve">
          <source>To limit the size of items in a horizontal view, use the following properties:</source>
          <target state="translated">가로보기에서 항목 크기를 제한하려면 다음 속성을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="c54711cc61671edaa8a2d699f7474f7a251e9afe" translate="yes" xml:space="preserve">
          <source>To limit the size of items in a vertical view, use the following properties:</source>
          <target state="translated">세로보기에서 항목 크기를 제한하려면 다음 속성을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="68eec605815734a511520b06c66c4f1d88038238" translate="yes" xml:space="preserve">
          <source>To link against the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-module.html&quot;&gt;QtWidgets&lt;/a&gt; library, add the following to your qmake project file:</source>
          <target state="translated">&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-module.html&quot;&gt;QtWidgets&lt;/a&gt; 라이브러리에 링크하려면 qmake 프로젝트 파일에 다음을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="41f8bd669eb626c069a30c9b615d512c8ded8723" translate="yes" xml:space="preserve">
          <source>To link against the C++ libraries, add the following to your &lt;code&gt;qmake&lt;/code&gt; project file:</source>
          <target state="translated">C ++ 라이브러리에 링크하려면 &lt;code&gt;qmake&lt;/code&gt; 프로젝트 파일에 다음을 추가 하십시오.</target>
        </trans-unit>
        <trans-unit id="a27668ad0d6b00fb6b29a4e7e90b6c0152f154ee" translate="yes" xml:space="preserve">
          <source>To link against the Qt Android Extras module, add this line to your project file:</source>
          <target state="translated">Qt Android Extras 모듈과 연결하려면이 줄을 프로젝트 파일에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="041569c678412c7ad9cce1eda03aeb296c2a3531" translate="yes" xml:space="preserve">
          <source>To link against the Qt Charts module, add this line to your &lt;code&gt;qmake&lt;/code&gt; project file:</source>
          <target state="translated">Qt 차트 모듈과 연결하려면 &lt;code&gt;qmake&lt;/code&gt; 프로젝트 파일에 다음 줄을 추가 하십시오.</target>
        </trans-unit>
        <trans-unit id="b6d0bc4b34689225615bdc1ccb98ea1b8cdea08f" translate="yes" xml:space="preserve">
          <source>To link against the Qt Data Visualization module, add this line to your &lt;code&gt;qmake&lt;/code&gt; project file:</source>
          <target state="translated">Qt Data Visualization 모듈에 링크하려면 &lt;code&gt;qmake&lt;/code&gt; 프로젝트 파일에 다음 행을 추가 하십시오.</target>
        </trans-unit>
        <trans-unit id="f5939def498999b5004ecefe7a9cd9a131e4497f" translate="yes" xml:space="preserve">
          <source>To link against the Qt Help module, add this line to the project file:</source>
          <target state="translated">Qt 도움말 모듈에 연결하려면 프로젝트 파일에 다음 줄을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="d1ff20e35e1cae61dba75a517bc6afbf59bdd0f0" translate="yes" xml:space="preserve">
          <source>To link against the Qt Network Authorization module, add this line to the project file:</source>
          <target state="translated">Qt 네트워크 인증 모듈에 연결하려면이 줄을 프로젝트 파일에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="a446a86eafdce44e2da40210110b22d68c122d8d" translate="yes" xml:space="preserve">
          <source>To link against the Qt Network module, add this line to the project file:</source>
          <target state="translated">Qt 네트워크 모듈과 연결하려면 다음 줄을 프로젝트 파일에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="a82331cadd56724182404023de38b6c52c54f94c" translate="yes" xml:space="preserve">
          <source>To link against the Qt SQL module, add this line to the project file:</source>
          <target state="translated">Qt SQL 모듈과 연결하려면이 줄을 프로젝트 파일에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="550a0072bcec6d0a4422e4f84d722a4959b14de7" translate="yes" xml:space="preserve">
          <source>To link against the corresponding C++ libraries, add the following to your &lt;code&gt;qmake&lt;/code&gt; project file:</source>
          <target state="translated">해당 C ++ 라이브러리에 링크하려면 &lt;code&gt;qmake&lt;/code&gt; 프로젝트 파일에 다음을 추가 하십시오.</target>
        </trans-unit>
        <trans-unit id="553a82fffee6fc20ca9b22ede59db116aeaac219" translate="yes" xml:space="preserve">
          <source>To link against the corresponding C++ libraries, add the following to your qmake project file:</source>
          <target state="translated">해당 C ++ 라이브러리에 링크하려면 qmake 프로젝트 파일에 다음을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="ef5395256966e863a10aaefacb703c4ab74fef40" translate="yes" xml:space="preserve">
          <source>To link against the module, add this line to your &lt;a href=&quot;qmake-manual&quot;&gt;qmake&lt;/a&gt;&lt;code&gt;.pro&lt;/code&gt; file:</source>
          <target state="translated">모듈과 연결하려면 &lt;a href=&quot;qmake-manual&quot;&gt;qmake &lt;/a&gt; &lt;code&gt;.pro&lt;/code&gt; 파일에 다음 줄을 추가 하십시오.</target>
        </trans-unit>
        <trans-unit id="4c15c07c63b0fdb1d03e9056c8633dcf3b398744" translate="yes" xml:space="preserve">
          <source>To link against the module, add this line to your qmake .pro file:</source>
          <target state="translated">모듈과 연결하려면 qmake .pro 파일에 다음 줄을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="05cdb606e8e440fb4c1159865d15947fe4e68a5f" translate="yes" xml:space="preserve">
          <source>To link against the module, add this line to your qmake &lt;code&gt;.pro&lt;/code&gt; file:</source>
          <target state="translated">모듈과 연결하려면 qmake &lt;code&gt;.pro&lt;/code&gt; 파일에 다음 줄을 추가 하십시오.</target>
        </trans-unit>
        <trans-unit id="536245d9ecf28fc27080b6fde95b2e9b382beda5" translate="yes" xml:space="preserve">
          <source>To link plugins statically, you need to add the required plugins to your build using &lt;code&gt;QTPLUGIN&lt;/code&gt;.</source>
          <target state="translated">플러그인을 정적으로 링크하려면 &lt;code&gt;QTPLUGIN&lt;/code&gt; 을 사용하여 빌드에 필수 플러그인을 추가해야합니다 .</target>
        </trans-unit>
        <trans-unit id="c151992632d8e5822e1428f581719db7fdf5b114" translate="yes" xml:space="preserve">
          <source>To link to the Qt Quick Test C++ library, see &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquicktest-module.html&quot;&gt;Qt Quick Test C++ API&lt;/a&gt;.</source>
          <target state="translated">Qt Quick Test C ++ 라이브러리에 링크하려면 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquicktest-module.html&quot;&gt;Qt Quick Test C ++ API를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5720cca875b568000278f0e6e8b49a2eecf0a0fa" translate="yes" xml:space="preserve">
          <source>To list overviews that are related to a certain group, you must generate the list explicitly using the &lt;a href=&quot;12-0-qdoc-commands-miscellaneous#generatelist-command&quot;&gt;\generatelist&lt;/a&gt; command with the &lt;code&gt;related&lt;/code&gt; argument.</source>
          <target state="translated">특정 그룹과 관련된 개요를 나열하려면 &lt;code&gt;related&lt;/code&gt; 인수 와 함께 &lt;a href=&quot;12-0-qdoc-commands-miscellaneous#generatelist-command&quot;&gt;\ generatelist&lt;/a&gt; 명령을 사용하여 명시 적으로 목록을 생성해야합니다 .</target>
        </trans-unit>
        <trans-unit id="a10c29f487de310a36a9f801fb143ad5f15223a1" translate="yes" xml:space="preserve">
          <source>To load Qt Graphical Effects, add the following import statement to your .qml file:</source>
          <target state="translated">Qt Graphical Effects를로드하려면 .qml 파일에 다음 import 문을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="df7c410485f6d6cd74f0493a183a3aacc06576e4" translate="yes" xml:space="preserve">
          <source>To load a .qml file, run the tool and select the file to be opened, or provide the file path on the command prompt:</source>
          <target state="translated">.qml 파일을로드하려면 도구를 실행하고 열 파일을 선택하거나 명령 프롬프트에서 파일 경로를 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="753b64b85907eae631eaca29735a401b0d3eec7d" translate="yes" xml:space="preserve">
          <source>To load a specific physical font, typically represented by a single file, use &lt;a href=&quot;qrawfont&quot;&gt;QRawFont&lt;/a&gt; instead.</source>
          <target state="translated">일반적으로 단일 파일로 표시되는 특정 실제 글꼴을로드하려면 대신 &lt;a href=&quot;qrawfont&quot;&gt;QRawFont를&lt;/a&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="3b70dd932a4f527611b23806c442f1c16bd2862b" translate="yes" xml:space="preserve">
          <source>To load an SCXML file, &lt;a href=&quot;qscxmlstatemachine#fromFile&quot;&gt;QScxmlStateMachine::fromFile&lt;/a&gt; or &lt;a href=&quot;qscxmlstatemachine#fromData&quot;&gt;QScxmlStateMachine::fromData&lt;/a&gt; should be used. Using &lt;a href=&quot;qscxmlcompiler&quot;&gt;QScxmlCompiler&lt;/a&gt; directly is only needed when the compiler needs to use a custom &lt;a href=&quot;qscxmlcompiler-loader&quot;&gt;QScxmlCompiler::Loader&lt;/a&gt;.</source>
          <target state="translated">SCXML 파일을로드하려면 &lt;a href=&quot;qscxmlstatemachine#fromFile&quot;&gt;QScxmlStateMachine :: fromFile&lt;/a&gt; 또는 &lt;a href=&quot;qscxmlstatemachine#fromData&quot;&gt;QScxmlStateMachine :: fromData를&lt;/a&gt; 사용해야합니다. 사용 &lt;a href=&quot;qscxmlcompiler&quot;&gt;QScxmlCompiler는&lt;/a&gt; 직접에만 컴파일러가 사용자 정의 사용할 필요가있을 때 필요 &lt;a href=&quot;qscxmlcompiler-loader&quot;&gt;QScxmlCompiler :: 로더&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a5709ff13f4130be160f9671835547e6c540e2e2" translate="yes" xml:space="preserve">
          <source>To load the Qt Location module, add the following statement to your .qml files</source>
          <target state="translated">Qt 위치 모듈을로드하려면 .qml 파일에 다음 명령문을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="97edd80909bd4c4f57c17e539eb5e7249439ffa4" translate="yes" xml:space="preserve">
          <source>To load the Qt Positioning module, add the following statement to your .qml files</source>
          <target state="translated">Qt 포지셔닝 모듈을로드하려면 .qml 파일에 다음 명령문을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="514255d7dc0d157f5e943da95f690d92fdc65e47" translate="yes" xml:space="preserve">
          <source>To look up a host's IP addresses asynchronously, call &lt;a href=&quot;qhostinfo#lookupHost&quot;&gt;lookupHost&lt;/a&gt;(), which takes the host name or IP address, a receiver object, and a slot signature as arguments and returns an ID. You can abort the lookup by calling &lt;a href=&quot;qhostinfo#abortHostLookup&quot;&gt;abortHostLookup&lt;/a&gt;() with the lookup ID.</source>
          <target state="translated">호스트의 IP 주소를 비동기식으로 &lt;a href=&quot;qhostinfo#lookupHost&quot;&gt;조회&lt;/a&gt; 하려면 호스트 이름 또는 IP 주소, 수신자 오브젝트 및 슬롯 서명을 인수로 사용하고 ID를 리턴하는 lookupHost ()를 호출 하십시오. 조회 ID와 함께 &lt;a href=&quot;qhostinfo#abortHostLookup&quot;&gt;abortHostLookup&lt;/a&gt; ()을 호출하여 조회를 중단 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c3e0f2510aef3f0994086992307fa28fcda7c6e7" translate="yes" xml:space="preserve">
          <source>To look up a value, use operator[]() or &lt;a href=&quot;qhash#value&quot;&gt;value&lt;/a&gt;():</source>
          <target state="translated">값을 찾으려면 operator [] () 또는 &lt;a href=&quot;qhash#value&quot;&gt;value&lt;/a&gt; ()를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="465cea4289469ac456741aec62a5df63ba123129" translate="yes" xml:space="preserve">
          <source>To look up a value, use operator[]() or &lt;a href=&quot;qmap#value&quot;&gt;value&lt;/a&gt;():</source>
          <target state="translated">값을 찾으려면 operator [] () 또는 &lt;a href=&quot;qmap#value&quot;&gt;value&lt;/a&gt; ()를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="624a94a94edc9e656cdef529278975ffbf879e7e" translate="yes" xml:space="preserve">
          <source>To look up objects in the cache, use &lt;a href=&quot;qcache#object&quot;&gt;object&lt;/a&gt;() or operator[](). This function looks up an object by its key, and returns either a pointer to the cached object (which is owned by the cache) or &lt;code&gt;nullptr&lt;/code&gt;.</source>
          <target state="translated">캐시에서 객체를 찾으려면 &lt;a href=&quot;qcache#object&quot;&gt;object&lt;/a&gt; () 또는 operator [] ()를 사용하십시오. 이 함수는 키로 객체를 조회하고 캐시 된 객체 (캐시가 소유 한)에 대한 포인터 또는 &lt;code&gt;nullptr&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="f437ffccca44f2ed4d4f07ca858f517debac4e8f" translate="yes" xml:space="preserve">
          <source>To make &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; as efficient as possible, its member functions don't validate their input before using it. Except for &lt;a href=&quot;qlist#isEmpty&quot;&gt;isEmpty&lt;/a&gt;(), member functions always assume the list is</source>
          <target state="translated">&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; 를 가능한 한 효율적으로 만들기 위해 멤버 함수는 사용하기 전에 입력을 확인하지 않습니다. &lt;a href=&quot;qlist#isEmpty&quot;&gt;isEmpty를&lt;/a&gt; 제외하고 ()를 멤버 함수는 항상 목록이</target>
        </trans-unit>
        <trans-unit id="c3c955d5a17bb889417bbcdacdc44300ff117647" translate="yes" xml:space="preserve">
          <source>To make &lt;code&gt;qmake&lt;/code&gt; find the PostgreSQL header files and shared libraries, run &lt;code&gt;qmake&lt;/code&gt; the following way (assuming that the PostgreSQL client is installed in &lt;code&gt;/usr&lt;/code&gt;):</source>
          <target state="translated">&lt;code&gt;qmake&lt;/code&gt; 가 PostgreSQL 헤더 파일 및 공유 라이브러리를 찾게 하려면 PostgreSQL 클라이언트가 &lt;code&gt;/usr&lt;/code&gt; 에 설치되어 있다고 가정하면 다음과 같이 &lt;code&gt;qmake&lt;/code&gt; 를 실행 하십시오 .</target>
        </trans-unit>
        <trans-unit id="311080827d2b898605b517a7d8251488ac146a95" translate="yes" xml:space="preserve">
          <source>To make Qt WebEngine work correctly when streaming to an AppleTV from a MacBook that supports GPU switching, it is important to add the &lt;code&gt;NSSupportsAutomaticGraphicsSwitching&lt;/code&gt; option to the application Info.plist file, with the value set to &lt;code&gt;YES&lt;/code&gt;. Otherwise rendering issues might occur when creating new web engine view instances after Airplay is switched on or off.</source>
          <target state="translated">GPU 전환을 지원하는 MacBook에서 AppleTV로 스트리밍 할 때 Qt WebEngine이 제대로 작동하게하려면 &lt;code&gt;NSSupportsAutomaticGraphicsSwitching&lt;/code&gt; 옵션을 값이 &lt;code&gt;YES&lt;/code&gt; 로 설정된 응용 프로그램 Info.plist 파일 에 추가해야합니다 . 그렇지 않으면 Airplay를 켜거나 끈 후에 새 웹 엔진보기 인스턴스를 만들 때 렌더링 문제가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3c2391383f6f75298e80a81c87ecb970ebe24674" translate="yes" xml:space="preserve">
          <source>To make a COM server available to the COM system it must be registered in the system registry using five unique identifiers. These identifiers are provided by tools like &lt;code&gt;guidgen&lt;/code&gt; or &lt;code&gt;uuidgen&lt;/code&gt;. The registration information allows COM to localize the binary providing a requested ActiveX control, marshall remote procedure calls to the control and read type information about the methods and properties exposed by the control.</source>
          <target state="translated">COM 시스템에서 COM 서버를 사용할 수있게하려면 5 개의 고유 식별자를 사용하여 시스템 레지스트리에 등록해야합니다. 이 식별자는 &lt;code&gt;guidgen&lt;/code&gt; 또는 &lt;code&gt;uuidgen&lt;/code&gt; 과 같은 도구로 제공됩니다 . 등록 정보를 통해 COM은 요청 된 ActiveX 컨트롤을 제공하는 바이너리를 지역화하고 원격 프로 시저 호출을 컨트롤에 마샬링하고 컨트롤에 의해 노출 된 메서드 및 속성에 대한 형식 정보를 읽을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="527a2d83064ef702816d23b060084472147cd9e9" translate="yes" xml:space="preserve">
          <source>To make a connectionn, press the left mouse button and drag the cursor towards the object you want to connect it to. As you do this, a line will extend from the source object to the cursor. If the cursor is over another object on the form, the line will end with an arrow head that points to the destination object. This indicates that a connection will be made between the two objects when you release the mouse button.</source>
          <target state="translated">연결하려면 마우스 왼쪽 버튼을 누르고 커서를 연결하려는 객체쪽으로 끕니다. 이렇게하면 선이 소스 객체에서 커서로 확장됩니다. 커서가 양식의 다른 개체 위에 있으면 선은 대상 개체를 가리키는 화살표 머리로 끝납니다. 이것은 마우스 버튼을 놓을 때 두 객체 사이에 연결됨을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="d7a75f30f4018587763ee8c6eec785aaf8a06f7d" translate="yes" xml:space="preserve">
          <source>To make a custom widget available to the loader, you can use the &lt;a href=&quot;quiloader#addPluginPath&quot;&gt;addPluginPath&lt;/a&gt;() function; to remove all available widgets, you can call the &lt;a href=&quot;quiloader#clearPluginPaths&quot;&gt;clearPluginPaths&lt;/a&gt;() function.</source>
          <target state="translated">로더에서 사용자 정의 위젯을 사용 가능하게하려면 &lt;a href=&quot;quiloader#addPluginPath&quot;&gt;addPluginPath&lt;/a&gt; () 함수를 사용할 수 있습니다 . 사용 가능한 모든 위젯을 제거하려면 &lt;a href=&quot;quiloader#clearPluginPaths&quot;&gt;clearPluginPaths&lt;/a&gt; () 함수를 호출 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1c6b702f1f707c0596f03022623d88a21de1a3b7" translate="yes" xml:space="preserve">
          <source>To make a sensible surface, the x-value of each successive item in all rows must be either ascending or descending throughout the row. Similarly, the z-value of each successive item in all columns must be either ascending or descending throughout the column.</source>
          <target state="translated">적절한 표면을 만들려면 모든 행에서 각 연속 항목의 x 값이 행 전체에서 오름차순 또는 내림차순이어야합니다. 마찬가지로 모든 열에서 각 연속 항목의 z- 값은 열 전체에서 오름차순 또는 내림차순이어야합니다.</target>
        </trans-unit>
        <trans-unit id="b46a6d10e5894afee0dba3a55b8ce5a45bc95ae9" translate="yes" xml:space="preserve">
          <source>To make it less abstract consider the following example:</source>
          <target state="translated">덜 추상적이려면 다음 예제를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="170c5b07d3e670d6bf05faa2c65ea4512b93d7b1" translate="yes" xml:space="preserve">
          <source>To make sure currency numbers are localized, use the &lt;a href=&quot;qml-qtqml-number&quot;&gt;Number&lt;/a&gt; type. This type has similar functions as the Date type for converting numbers into localized currency strings.</source>
          <target state="translated">통화 번호가 현지화되도록하려면 &lt;a href=&quot;qml-qtqml-number&quot;&gt;숫자&lt;/a&gt; 유형을 사용하십시오 . 이 유형에는 숫자를 현지화 된 통화 문자열로 변환하기위한 날짜 유형과 비슷한 기능이 있습니다.</target>
        </trans-unit>
        <trans-unit id="efb6c3b4d0c4b7f83e2e07f01327fe69f8b85d1e" translate="yes" xml:space="preserve">
          <source>To make the Qt &lt;a href=&quot;qml-qtwebview-webview&quot;&gt;WebView&lt;/a&gt; module function correctly across all platforms, it is necessary to call &lt;a href=&quot;qtwebview#initialize&quot;&gt;QtWebView::initialize&lt;/a&gt;() right after creating the &lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt; instance.</source>
          <target state="translated">Qt &lt;a href=&quot;qml-qtwebview-webview&quot;&gt;WebView&lt;/a&gt; 모듈이 모든 플랫폼에서 올바르게 작동하도록 하려면 &lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt; 인스턴스를 생성 한 직후 &lt;a href=&quot;qtwebview#initialize&quot;&gt;QtWebView :: initialize&lt;/a&gt; () 를 호출 해야 합니다.</target>
        </trans-unit>
        <trans-unit id="1b6d13a263e47af71ff3489eb100003e76599e85" translate="yes" xml:space="preserve">
          <source>To make the Qt WebView module function correctly across all platforms, it's necessary to call &lt;a href=&quot;qtwebview#initialize&quot;&gt;QtWebView::initialize&lt;/a&gt;() right after creating the &lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt; instance.</source>
          <target state="translated">Qt WebView 모듈이 모든 플랫폼에서 올바르게 작동하도록 하려면 &lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt; 인스턴스를 생성 한 직후 &lt;a href=&quot;qtwebview#initialize&quot;&gt;QtWebView :: initialize&lt;/a&gt; () 를 호출 해야 합니다.</target>
        </trans-unit>
        <trans-unit id="5704123cb0c077229327d895044209de75e9bd34" translate="yes" xml:space="preserve">
          <source>To make the Trace rendering available in the keyboard, this type must be declared as the &lt;a href=&quot;qml-qtquick-virtualkeyboard-styles-keyboardstyle#traceCanvasDelegate-prop&quot;&gt;KeyboardStyle.traceCanvasDelegate&lt;/a&gt; component.</source>
          <target state="translated">키보드에서 추적 렌더링을 사용하려면이 유형을 &lt;a href=&quot;qml-qtquick-virtualkeyboard-styles-keyboardstyle#traceCanvasDelegate-prop&quot;&gt;KeyboardStyle.traceCanvasDelegate&lt;/a&gt; 구성 요소 로 선언해야합니다 .</target>
        </trans-unit>
        <trans-unit id="97c1fc9dd562495f4d7641d29cde6f4019b4f85a" translate="yes" xml:space="preserve">
          <source>To make the process read EOF right away, pass &lt;a href=&quot;qprocess#nullDevice&quot;&gt;nullDevice&lt;/a&gt;() here. This is cleaner than using &lt;a href=&quot;qprocess#closeWriteChannel&quot;&gt;closeWriteChannel&lt;/a&gt;() before writing any data, because it can be set up prior to starting the process.</source>
          <target state="translated">프로세스가 EOF를 즉시 읽도록하려면 여기에 &lt;a href=&quot;qprocess#nullDevice&quot;&gt;nullDevice&lt;/a&gt; ()를 전달 하십시오. 프로세스를 시작하기 전에 설정할 수 있기 때문에 데이터를 쓰기 전에 &lt;a href=&quot;qprocess#closeWriteChannel&quot;&gt;closeWriteChannel&lt;/a&gt; ()을 사용하는 것보다 깨끗 합니다.</target>
        </trans-unit>
        <trans-unit id="48ae93d06a58b4cdb9ac9b01fd13498b5272f909" translate="yes" xml:space="preserve">
          <source>To make the properties bindable for the ActiveX client, use multiple inheritance from the &lt;a href=&quot;qaxbindable&quot;&gt;QAxBindable&lt;/a&gt; class:</source>
          <target state="translated">ActiveX 클라이언트에 대해 특성을 바인드 가능하게하려면 &lt;a href=&quot;qaxbindable&quot;&gt;QAxBindable&lt;/a&gt; 클래스의 다중 상속을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="600b894eb9b833ba411bf23e7a914f09d85785fc" translate="yes" xml:space="preserve">
          <source>To make the target global, the code above needs to be included into every subdirs subproject. In addition, to make these targets do anything, non-subdirs subprojects need to include respective code. The easiest way to achieve this is creating a custom feature file. For example:</source>
          <target state="translated">대상을 전역으로 만들려면 위의 코드를 모든 하위 디렉토리 하위 프로젝트에 포함시켜야합니다. 또한 이러한 대상이 무엇이든 수행하도록하려면 서브 서브가 아닌 서브 프로젝트는 각각의 코드를 포함해야합니다. 이를 달성하는 가장 쉬운 방법은 사용자 정의 기능 파일을 작성하는 것입니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b33a5489ba287c8d947e06f865a21e6ead131d68" translate="yes" xml:space="preserve">
          <source>To make things easier for this example, the TimeExample source directory is in &lt;code&gt;imports/TimeExample&lt;/code&gt;, and we build &lt;a href=&quot;configure-options#source-build-and-install-directories&quot;&gt;in-source&lt;/a&gt;. However, the structure of the source directory is not so important, as the &lt;code&gt;qmldir&lt;/code&gt; file can specify paths to installed QML files.</source>
          <target state="translated">이 예제를보다 쉽게하기 위해 TimeExample 소스 디렉토리는 &lt;code&gt;imports/TimeExample&lt;/code&gt; 에 있으며 &lt;a href=&quot;configure-options#source-build-and-install-directories&quot;&gt;in-source를&lt;/a&gt; 빌드 합니다 . 그러나 &lt;code&gt;qmldir&lt;/code&gt; 파일이 설치된 QML 파일에 대한 경로를 지정할 수 있으므로 소스 디렉토리의 구조는 그다지 중요하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="74bb33068f232a3d9bd51634644f169b20c96b53" translate="yes" xml:space="preserve">
          <source>To make this function available, you need to load the respective feature file:</source>
          <target state="translated">이 기능을 사용하려면 해당 기능 파일을로드해야합니다.</target>
        </trans-unit>
        <trans-unit id="e74387758952d3004ccbc4dd34ebd5f60a42021a" translate="yes" xml:space="preserve">
          <source>To make this provider accessible to QML, it is registered with the QML engine with a &quot;colors&quot; identifier:</source>
          <target state="translated">이 제공자가 QML에 액세스 할 수 있도록하기 위해 &quot;컬러&quot;식별자를 사용하여 QML 엔진에 등록합니다.</target>
        </trans-unit>
        <trans-unit id="1e0e265f109902a6046589b5d07e2f5e3f9a47dc" translate="yes" xml:space="preserve">
          <source>To make this type available, we create a plugin class named &lt;code&gt;QExampleQmlPlugin&lt;/code&gt; which is a subclass of &lt;a href=&quot;qqmlextensionplugin&quot;&gt;QQmlExtensionPlugin&lt;/a&gt;. It overrides the &lt;a href=&quot;qqmlextensionplugin#registerTypes&quot;&gt;registerTypes()&lt;/a&gt; method in order to register the &lt;code&gt;TimeModel&lt;/code&gt; type using &lt;a href=&quot;qqmlengine#qmlRegisterType-1&quot;&gt;qmlRegisterType&lt;/a&gt;(). It also uses the &lt;a href=&quot;#Q_PLUGIN_METADATA&quot;&gt;Q_PLUGIN_METADATA&lt;/a&gt;() macro in the class definition to register the plugin with the Qt meta object system using a unique identifier for the plugin.</source>
          <target state="translated">이 유형을 사용 가능하게하기 위해 &lt;code&gt;QExampleQmlPlugin&lt;/code&gt; 의 서브 클래스 인 &lt;a href=&quot;qqmlextensionplugin&quot;&gt;QExampleQmlPlugin&lt;/a&gt; 이라는 플러그인 클래스를 작성합니다 . 이 재정의 &lt;a href=&quot;qqmlextensionplugin#registerTypes&quot;&gt;registerTypes ()&lt;/a&gt; 레지스터 위해 방법 &lt;code&gt;TimeModel&lt;/code&gt; 의 사용 유형 &lt;a href=&quot;qqmlengine#qmlRegisterType-1&quot;&gt;qmlRegisterType을&lt;/a&gt; (). 또한 클래스 정의에서 &lt;a href=&quot;#Q_PLUGIN_METADATA&quot;&gt;Q_PLUGIN_METADATA&lt;/a&gt; () 매크로를 사용하여 플러그인의 고유 식별자를 사용하여 Qt 메타 오브젝트 시스템에 플러그인을 등록합니다.</target>
        </trans-unit>
        <trans-unit id="ed67f435e7a8aae2a389d5b8cb54fb327ff71805" translate="yes" xml:space="preserve">
          <source>To make this work, the widget itself and</source>
          <target state="translated">이 작업을하려면 위젯 자체와</target>
        </trans-unit>
        <trans-unit id="6e46a911b58cc1db1f40da4967591a42a3febe59" translate="yes" xml:space="preserve">
          <source>To make user-visible text translatable, it must be wrapped in calls to the &lt;a href=&quot;qobject#tr&quot;&gt;tr&lt;/a&gt;() function. This is explained in detail in the &lt;a href=&quot;i18n-source-translation&quot;&gt;Writing Source Code for Translation&lt;/a&gt; document.</source>
          <target state="translated">사용자가 볼 수있는 텍스트를 번역 가능하게하려면 &lt;a href=&quot;qobject#tr&quot;&gt;tr&lt;/a&gt; () 함수 를 호출하여 래핑해야합니다 . 자세한 내용은 &lt;a href=&quot;i18n-source-translation&quot;&gt;번역 용 소스 코드 작성&lt;/a&gt; 문서 에 자세히 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="e9830802265edf981a47a23afe689395d24181dc" translate="yes" xml:space="preserve">
          <source>To make your application perform idle processing (by executing a special function whenever there are no pending events), use a &lt;a href=&quot;qtimer&quot;&gt;QTimer&lt;/a&gt; with 0 timeout. More advanced idle processing schemes can be achieved using &lt;a href=&quot;qcoreapplication#processEvents&quot;&gt;processEvents&lt;/a&gt;().</source>
          <target state="translated">보류중인 이벤트가 없을 때마다 특수 기능을 실행하여 응용 프로그램이 유휴 처리를 수행하도록하려면 타임 아웃이 0 인 &lt;a href=&quot;qtimer&quot;&gt;QTimer&lt;/a&gt; 를 사용하십시오 . &lt;a href=&quot;qcoreapplication#processEvents&quot;&gt;processEvents&lt;/a&gt; ()를 사용하여 고급 유휴 처리 체계를 달성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e044a4360a53be2b4c9f91ae0a1f0ce3976a9723" translate="yes" xml:space="preserve">
          <source>To make your application perform idle processing (i.e. executing a special function whenever there are no pending events), use a &lt;a href=&quot;qtimer&quot;&gt;QTimer&lt;/a&gt; with 0 timeout. More sophisticated idle processing schemes can be achieved using &lt;a href=&quot;qeventloop#processEvents&quot;&gt;processEvents&lt;/a&gt;().</source>
          <target state="translated">응용 프로그램이 유휴 처리를 수행하게하려면 (즉, 보류중인 이벤트가 없을 때마다 특수 기능을 실행하려면) 타임 아웃이 0 인 &lt;a href=&quot;qtimer&quot;&gt;QTimer&lt;/a&gt; 를 사용하십시오 . &lt;a href=&quot;qeventloop#processEvents&quot;&gt;processEvents&lt;/a&gt; ()를 사용하여보다 정교한 유휴 처리 체계를 달성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9e8a38f8844c54226669e806536dde2590387109" translate="yes" xml:space="preserve">
          <source>To make your application perform idle processing, e.g., executing a special function whenever there are no pending events, use a &lt;a href=&quot;qtimer&quot;&gt;QTimer&lt;/a&gt; with 0 timeout. More advanced idle processing schemes can be achieved using &lt;a href=&quot;qcoreapplication#processEvents&quot;&gt;processEvents&lt;/a&gt;().</source>
          <target state="translated">보류중인 이벤트가 없을 때마다 특수 기능을 실행하는 등의 유휴 처리를 응용 프로그램에서 수행하려면 타임 아웃이 0 인 &lt;a href=&quot;qtimer&quot;&gt;QTimer&lt;/a&gt; 를 사용하십시오 . &lt;a href=&quot;qcoreapplication#processEvents&quot;&gt;processEvents&lt;/a&gt; ()를 사용하여 고급 유휴 처리 체계를 달성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="074480ff18c26be3acf20c02c876cbf0ab872f4a" translate="yes" xml:space="preserve">
          <source>To make your application perform idle processing, i.e., executing a special function whenever there are no pending events, use a &lt;a href=&quot;qtimer&quot;&gt;QTimer&lt;/a&gt; with 0 timeout. More advanced idle processing schemes can be achieved using &lt;a href=&quot;qcoreapplication#processEvents&quot;&gt;processEvents&lt;/a&gt;().</source>
          <target state="translated">대기중인 이벤트가 없을 때마다 응용 프로그램이 유휴 처리, 즉 특수 기능을 실행하도록하려면 시간 초과 가없는 &lt;a href=&quot;qtimer&quot;&gt;QTimer&lt;/a&gt; 를 사용하십시오 . &lt;a href=&quot;qcoreapplication#processEvents&quot;&gt;processEvents&lt;/a&gt; ()를 사용하여 고급 유휴 처리 체계를 달성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="74a77b956aceffc3c579e433de582461e71c0d9d" translate="yes" xml:space="preserve">
          <source>To make your own layout manager, implement the functions &lt;a href=&quot;qlayout#addItem&quot;&gt;addItem&lt;/a&gt;(), &lt;a href=&quot;qlayoutitem#sizeHint&quot;&gt;sizeHint&lt;/a&gt;(), &lt;a href=&quot;qlayout#setGeometry&quot;&gt;setGeometry&lt;/a&gt;(), &lt;a href=&quot;qlayout#itemAt&quot;&gt;itemAt&lt;/a&gt;() and &lt;a href=&quot;qlayout#takeAt&quot;&gt;takeAt&lt;/a&gt;(). You should also implement &lt;a href=&quot;qlayout#minimumSize&quot;&gt;minimumSize&lt;/a&gt;() to ensure your layout isn't resized to zero size if there is too little space. To support children whose heights depend on their widths, implement &lt;a href=&quot;qlayoutitem#hasHeightForWidth&quot;&gt;hasHeightForWidth&lt;/a&gt;() and &lt;a href=&quot;qlayoutitem#heightForWidth&quot;&gt;heightForWidth&lt;/a&gt;(). See the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-layouts-borderlayout-example.html#&quot;&gt;Border Layout&lt;/a&gt; and &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-layouts-flowlayout-example.html#&quot;&gt;Flow Layout&lt;/a&gt; examples for more information about implementing custom layout managers.</source>
          <target state="translated">자체 레이아웃 관리자를 만들려면 &lt;a href=&quot;qlayout#addItem&quot;&gt;addItem&lt;/a&gt; (), &lt;a href=&quot;qlayoutitem#sizeHint&quot;&gt;sizeHint&lt;/a&gt; (), &lt;a href=&quot;qlayout#setGeometry&quot;&gt;setGeometry&lt;/a&gt; (), &lt;a href=&quot;qlayout#itemAt&quot;&gt;itemAt&lt;/a&gt; () 및 &lt;a href=&quot;qlayout#takeAt&quot;&gt;takeAt&lt;/a&gt; () 함수를 구현하십시오 . 공간이 너무 작은 경우 레이아웃의 크기가 0으로 조정되지 않도록 &lt;a href=&quot;qlayout#minimumSize&quot;&gt;minimumSize&lt;/a&gt; ()를 구현해야 합니다. 높이가 너비에 의존하는 자식을 지원하려면 &lt;a href=&quot;qlayoutitem#hasHeightForWidth&quot;&gt;hasHeightForWidth&lt;/a&gt; () 및 &lt;a href=&quot;qlayoutitem#heightForWidth&quot;&gt;heightForWidth&lt;/a&gt; ()를 구현 하십시오 . 참고 항목 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-layouts-borderlayout-example.html#&quot;&gt;테두리 레이아웃&lt;/a&gt; 및 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-layouts-flowlayout-example.html#&quot;&gt;플로우 레이아웃&lt;/a&gt; 사용자 정의 레이아웃 매니저를 구현하는 방법에 대한 자세한 내용은 예를.</target>
        </trans-unit>
        <trans-unit id="860adb15edbf1341eeee302843d420b99f26e635" translate="yes" xml:space="preserve">
          <source>To make your project use precompiled headers, you only need to define the &lt;a href=&quot;qmake-variable-reference#precompiled-header&quot;&gt;PRECOMPILED_HEADER&lt;/a&gt; variable in your project file:</source>
          <target state="translated">프로젝트에서 사전 컴파일 된 헤더를 사용하려면 프로젝트 파일에서 &lt;a href=&quot;qmake-variable-reference#precompiled-header&quot;&gt;PRECOMPILED_HEADER&lt;/a&gt; 변수 만 정의하면 됩니다.</target>
        </trans-unit>
        <trans-unit id="22f7f2fdcdb3aa5aa6e65a6e95e5ff852426627f" translate="yes" xml:space="preserve">
          <source>To mark a Qt class as licensed specify a &quot;LicenseKey&quot; using the &lt;a href=&quot;qobject#Q_CLASSINFO&quot;&gt;Q_CLASSINFO&lt;/a&gt;() macro.</source>
          <target state="translated">Qt 클래스를 라이센스가있는 것으로 표시하려면 &lt;a href=&quot;qobject#Q_CLASSINFO&quot;&gt;Q_CLASSINFO&lt;/a&gt; () 매크로를 사용하여 &quot;LicenseKey&quot;를 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="d3a6d12e050bc056f11633e945b965e84bf792c2" translate="yes" xml:space="preserve">
          <source>To minimize compatibility issues, any &lt;code&gt;@&lt;/code&gt; that doesn't appear at the first position in the value or that isn't followed by a Qt type (&lt;code&gt;Point&lt;/code&gt;, &lt;code&gt;Rect&lt;/code&gt;, &lt;code&gt;Size&lt;/code&gt;, etc.) is treated as a normal character.</source>
          <target state="translated">호환성 문제를 최소화하기 위해 값의 첫 번째 위치에 나타나지 않거나 Qt 유형 ( &lt;code&gt;Point&lt;/code&gt; , &lt;code&gt;Rect&lt;/code&gt; , &lt;code&gt;Size&lt;/code&gt; 등)이 뒤 따르지 않는 &lt;code&gt;@&lt;/code&gt; 는 일반 문자로 취급됩니다.</target>
        </trans-unit>
        <trans-unit id="dbbc11591696f7475166d9111393a42ebd2f2511" translate="yes" xml:space="preserve">
          <source>To modify a color group you call the functions &lt;a href=&quot;qpalette#setColor&quot;&gt;setColor&lt;/a&gt;() and &lt;a href=&quot;qpalette#setBrush&quot;&gt;setBrush&lt;/a&gt;(), depending on whether you want a pure color or a pixmap pattern.</source>
          <target state="translated">색상 그룹을 수정하려면 순수한 색상을 원하는지 또는 픽스맵 패턴을 원하는지에 따라 함수 &lt;a href=&quot;qpalette#setColor&quot;&gt;setColor&lt;/a&gt; () 및 &lt;a href=&quot;qpalette#setBrush&quot;&gt;setBrush&lt;/a&gt; () 를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="8c0e19c04b9168dc2f39467316ebef46d282a255" translate="yes" xml:space="preserve">
          <source>To modify array elements, use the &lt;a href=&quot;qjsvalue#setProperty-1&quot;&gt;setProperty(quint32 arrayIndex, const QJSValue &amp;amp;value)&lt;/a&gt; overload instead.</source>
          <target state="translated">배열 요소를 수정하려면 대신 &lt;a href=&quot;qjsvalue#setProperty-1&quot;&gt;setProperty (quint32 arrayIndex, const QJSValue &amp;amp; value)&lt;/a&gt; 오버로드를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="2af6400ae7389e6c602c4d02e24f0effc3196358" translate="yes" xml:space="preserve">
          <source>To modify the form settings, open the &lt;b&gt;Form&lt;/b&gt; menu and select &lt;b&gt;Form Settings...&lt;/b&gt;</source>
          <target state="translated">양식 설정을 수정하려면 &lt;b&gt;양식&lt;/b&gt; 메뉴를 열고 &lt;b&gt;양식 설정 ...을&lt;/b&gt; 선택하십시오 &lt;b&gt;.&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="ee2fca47d7b6422125613396699ae65387f0776f" translate="yes" xml:space="preserve">
          <source>To move a widget within a layout, hold down &lt;b&gt;Shift&lt;/b&gt; and &lt;b&gt;Control&lt;/b&gt; while dragging the widget. This extends the selection to the widget's parent layout.</source>
          <target state="translated">레이아웃 내에서 위젯을 이동하려면 위젯 을 드래그하는 동안 &lt;b&gt;Shift&lt;/b&gt; 및 &lt;b&gt;Control&lt;/b&gt; 을 누른 상태로 유지 하십시오. 이것은 선택을 위젯의 부모 레이아웃으로 확장합니다.</target>
        </trans-unit>
        <trans-unit id="d8a59e836851ee839a25c2abf177e213855dae62" translate="yes" xml:space="preserve">
          <source>To move an object to the main thread, use QApplication::instance() to retrieve a pointer to the current application, and then use QApplication::thread() to retrieve the thread in which the application lives. For example:</source>
          <target state="translated">주 스레드로 객체를 이동하려면 QApplication :: instance ()를 사용하여 현재 응용 프로그램에 대한 포인터를 검색 한 다음 QApplication :: thread ()를 사용하여 응용 프로그램이있는 스레드를 검색하십시오. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a1fc7d8930b7cb6ca6e370f2e45dedcbb8d058c0" translate="yes" xml:space="preserve">
          <source>To move rows within the same parent, specify the row to move them to.</source>
          <target state="translated">동일한 부모 내에서 행을 이동하려면 이동할 행을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="4cc90b9a72822229fc1d4dc495b6bcbcab697266" translate="yes" xml:space="preserve">
          <source>To navigate through a &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;, you can also use &lt;a href=&quot;containers#foreach&quot;&gt;foreach&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; 을 탐색하려면 &lt;a href=&quot;containers#foreach&quot;&gt;foreach&lt;/a&gt; 를 사용할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4c0017e1db6e61eef7631032130dc4955aff4cee" translate="yes" xml:space="preserve">
          <source>To obtain a list of substitutions use &lt;a href=&quot;qfont#substitutes&quot;&gt;substitutes&lt;/a&gt;().</source>
          <target state="translated">대체 목록을 얻으려면 &lt;a href=&quot;qfont#substitutes&quot;&gt;대체&lt;/a&gt; ()를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="ed7652e1feb5d67022d95e8698bbafb050e81fde" translate="yes" xml:space="preserve">
          <source>To obtain a list of unique keys, where each key from the map only occurs once, use &lt;a href=&quot;qhash#uniqueKeys&quot;&gt;uniqueKeys&lt;/a&gt;().</source>
          <target state="translated">맵의 각 키가 한 번만 발생하는 고유 키 목록을 얻으려면 &lt;a href=&quot;qhash#uniqueKeys&quot;&gt;uniqueKeys&lt;/a&gt; ()를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="52798863d567b8726801f1b51967c5e6c3cddf37" translate="yes" xml:space="preserve">
          <source>To obtain a list of unique keys, where each key from the map only occurs once, use &lt;a href=&quot;qmap#uniqueKeys&quot;&gt;uniqueKeys&lt;/a&gt;().</source>
          <target state="translated">맵의 각 키가 한 번만 발생하는 고유 키 목록을 얻으려면 &lt;a href=&quot;qmap#uniqueKeys&quot;&gt;uniqueKeys&lt;/a&gt; ()를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="be5cb1c0f6c45ef422cd1e4d05c52d6c52c6eb5a" translate="yes" xml:space="preserve">
          <source>To obtain a model index that corresponds to an item of data, three properties must be specified to the model: a row number, a column number, and the model index of a parent item. The following sections describe and explain these properties in detail.</source>
          <target state="translated">데이터 항목에 해당하는 모델 색인을 얻으려면 행 번호, 열 번호 및 상위 항목의 모델 색인이라는 세 가지 특성을 모델에 지정해야합니다. 다음 섹션에서는 이러한 속성을 자세히 설명하고 설명합니다.</target>
        </trans-unit>
        <trans-unit id="7f6b89bf1afbacec850f7a44399ede13ee125170" translate="yes" xml:space="preserve">
          <source>To obtain a model index that refers to an existing item in a model, call &lt;a href=&quot;qabstractitemmodel#index&quot;&gt;QAbstractItemModel::index&lt;/a&gt;() with the required row and column values, and the model index of the parent. When referring to top-level items in a model, supply &lt;a href=&quot;qmodelindex#QModelIndex&quot;&gt;QModelIndex&lt;/a&gt;() as the parent index.</source>
          <target state="translated">모델의 기존 항목을 참조하는 모델 색인을 얻으려면 필수 행 및 열 값과 상위의 모델 색인을 사용하여 &lt;a href=&quot;qabstractitemmodel#index&quot;&gt;QAbstractItemModel :: index&lt;/a&gt; ()를 호출 하십시오. 모델에서 최상위 항목을 참조 할 때는 &lt;a href=&quot;qmodelindex#QModelIndex&quot;&gt;QModelIndex&lt;/a&gt; ()를 상위 인덱스로 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="160405715496d7f87445c5eebb0e973d3613cb42" translate="yes" xml:space="preserve">
          <source>To obtain a model index, we specify the row number, column number (zero for the first column), and the appropriate model index for the parent of all the items that we want. The text stored in each item is retrieved using the model's &lt;a href=&quot;qfilesystemmodel#data&quot;&gt;data()&lt;/a&gt; function. We specify the model index and the &lt;a href=&quot;qt#ItemDataRole-enum&quot;&gt;DisplayRole&lt;/a&gt; to obtain data for the item in the form of a string.</source>
          <target state="translated">모델 인덱스를 얻기 위해 행 번호, 열 번호 (첫 번째 열의 경우 0) 및 원하는 모든 항목의 부모에 대한 적절한 모델 인덱스를 지정합니다. 각 항목에 저장된 텍스트는 모델의 &lt;a href=&quot;qfilesystemmodel#data&quot;&gt;data ()&lt;/a&gt; 함수를 사용하여 검색 됩니다. 모델 색인과 &lt;a href=&quot;qt#ItemDataRole-enum&quot;&gt;DisplayRole&lt;/a&gt; 을 지정하여 문자열 형식으로 항목에 대한 데이터를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="b606a5a9fa2e12ad16e04ebbb384d8414db88f72" translate="yes" xml:space="preserve">
          <source>To obtain a pointer to the actual character data, call &lt;a href=&quot;qbytearray#data&quot;&gt;data&lt;/a&gt;() or &lt;a href=&quot;qbytearray#constData&quot;&gt;constData&lt;/a&gt;(). These functions return a pointer to the beginning of the data. The pointer is guaranteed to remain valid until a non-const function is called on the &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;. It is also guaranteed that the data ends with a '\0' byte unless the &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; was created from a &lt;a href=&quot;qbytearray#fromRawData&quot;&gt;raw data&lt;/a&gt;. This '\0' byte is automatically provided by &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; and is not counted in &lt;a href=&quot;qbytearray#size&quot;&gt;size&lt;/a&gt;().</source>
          <target state="translated">실제 문자 데이터에 대한 포인터를 얻으려면 &lt;a href=&quot;qbytearray#data&quot;&gt;data&lt;/a&gt; () 또는 &lt;a href=&quot;qbytearray#constData&quot;&gt;constData&lt;/a&gt; ()를 호출하십시오 . 이 함수는 데이터 시작 부분에 대한 포인터를 반환합니다. 포인터는 비 Const 함수가 &lt;a href=&quot;qbytearray&quot;&gt;QByteArray에서&lt;/a&gt; 호출 될 때까지 유효하게 유지 됩니다. 또한 &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; 가 &lt;a href=&quot;qbytearray#fromRawData&quot;&gt;원시 데이터&lt;/a&gt; 에서 작성 되지 않은 경우 데이터가 '\ 0'바이트로 끝나는 것이 보장 됩니다 . 이 '\ 0'바이트는 &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; 에 의해 자동으로 제공되며 &lt;a href=&quot;qbytearray#size&quot;&gt;크기&lt;/a&gt; ()로 계산되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="05ee1b228a32e6c965953cc98f3f75899aad5390" translate="yes" xml:space="preserve">
          <source>To obtain a pointer to the actual character data, call &lt;a href=&quot;qstring#data&quot;&gt;data&lt;/a&gt;() or &lt;a href=&quot;qstring#constData&quot;&gt;constData&lt;/a&gt;(). These functions return a pointer to the beginning of the &lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt; data. The pointer is guaranteed to remain valid until a non-const function is called on the &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;.</source>
          <target state="translated">실제 문자 데이터에 대한 포인터를 얻으려면 &lt;a href=&quot;qstring#data&quot;&gt;data&lt;/a&gt; () 또는 &lt;a href=&quot;qstring#constData&quot;&gt;constData&lt;/a&gt; ()를 호출하십시오 . 이 함수는 &lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt; 데이터 의 시작에 대한 포인터를 리턴합니다 . 포인터는 비 문자열 함수가 &lt;a href=&quot;qstring&quot;&gt;QString에서&lt;/a&gt; 호출 될 때까지 유효하게 유지 됩니다.</target>
        </trans-unit>
        <trans-unit id="cbf43a61623fd07ec3c37f34714761c3bef9d6e7" translate="yes" xml:space="preserve">
          <source>To obtain the contents of an environment value at the time when the generated Makefile is processed, use the &lt;code&gt;$(...)&lt;/code&gt; operator:</source>
          <target state="translated">생성 된 Makefile이 처리 될 때 환경 값의 내용을 얻으려면 &lt;code&gt;$(...)&lt;/code&gt; 연산자를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="c4a149d500f63a95c6ca3162bc63f6022a1c9c9d" translate="yes" xml:space="preserve">
          <source>To obtain the contents of an environment value when qmake is run, use the &lt;code&gt;$$(...)&lt;/code&gt; operator:</source>
          <target state="translated">qmake가 실행될 때 환경 값의 내용을 얻으려면 &lt;code&gt;$$(...)&lt;/code&gt; 연산자를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="8c4a39c35506d0503c98c5bbbcf06b860b5035ac" translate="yes" xml:space="preserve">
          <source>To obtain the current &lt;a href=&quot;qpagelayout#Orientation-enum&quot;&gt;QPageLayout::Orientation&lt;/a&gt; use &lt;a href=&quot;qprinter#pageLayout&quot;&gt;pageLayout&lt;/a&gt;().pageOrientation().</source>
          <target state="translated">현재 &lt;a href=&quot;qpagelayout#Orientation-enum&quot;&gt;QPageLayout :: Orientation&lt;/a&gt; 을 얻으려면 &lt;a href=&quot;qprinter#pageLayout&quot;&gt;pageLayout&lt;/a&gt; () .pageOrientation ()을 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="530ed8c4db2d7f6394dd3fa584f74097d4bdaeee" translate="yes" xml:space="preserve">
          <source>To obtain the current &lt;a href=&quot;qpagesize&quot;&gt;QPageSize&lt;/a&gt; use &lt;a href=&quot;qprinter#pageLayout&quot;&gt;pageLayout&lt;/a&gt;().pageSize().</source>
          <target state="translated">현재 &lt;a href=&quot;qpagesize&quot;&gt;QPageSize&lt;/a&gt; 를 얻으려면 &lt;a href=&quot;qprinter#pageLayout&quot;&gt;pageLayout&lt;/a&gt; () .pageSize ()를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="4195d25851e3a4f9d835a1338b583d69b46af3a2" translate="yes" xml:space="preserve">
          <source>To obtain the current page margins use &lt;a href=&quot;qprinter#pageLayout&quot;&gt;pageLayout&lt;/a&gt;().pageMargins().</source>
          <target state="translated">현재 페이지 여백을 얻으려면 &lt;a href=&quot;qprinter#pageLayout&quot;&gt;pageLayout&lt;/a&gt; () .pageMargins ()를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="9a24d0bc0536006289d50e218f90def3ff112d07" translate="yes" xml:space="preserve">
          <source>To obtain the definition size, call &lt;a href=&quot;qpagesize#definitionSize&quot;&gt;QPageSize::definitionSize&lt;/a&gt;().</source>
          <target state="translated">정의 크기를 얻으려면 &lt;a href=&quot;qpagesize#definitionSize&quot;&gt;QPageSize :: definitionSize&lt;/a&gt; ()를 호출 하십시오 .</target>
        </trans-unit>
        <trans-unit id="e3d70abd0d7a453a1dce6b7f9a3b4b9387117794" translate="yes" xml:space="preserve">
          <source>To obtain the definition units, call &lt;a href=&quot;qpagesize#definitionUnits&quot;&gt;QPageSize::definitionUnits&lt;/a&gt;().</source>
          <target state="translated">정의 단위를 얻으려면 &lt;a href=&quot;qpagesize#definitionUnits&quot;&gt;QPageSize :: definitionUnits&lt;/a&gt; ()를 호출 하십시오 .</target>
        </trans-unit>
        <trans-unit id="b5024ec8596aaa47c883b07a5a2876ccfbeb667e" translate="yes" xml:space="preserve">
          <source>To obtain the dimensions of a particular screen, call the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qdesktopwidget-obsolete.html#screenGeometry&quot;&gt;screenGeometry&lt;/a&gt;() function. On some desktop environments, not all of the screen is available for applications to use; for example, an application dock or menu bar may take up some space. Use the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qdesktopwidget-obsolete.html#availableGeometry&quot;&gt;availableGeometry&lt;/a&gt;() function to obtain the available area for applications.</source>
          <target state="translated">특정 화면의 크기를 얻으려면 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qdesktopwidget-obsolete.html#screenGeometry&quot;&gt;screenGeometry&lt;/a&gt; () 함수를 호출하십시오 . 일부 데스크탑 환경에서는 응용 프로그램이 모든 화면을 사용할 수있는 것은 아닙니다. 예를 들어, 응용 프로그램 도크 또는 메뉴 막대가 약간의 공간을 차지할 수 있습니다. 사용 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qdesktopwidget-obsolete.html#availableGeometry&quot;&gt;availableGeometry&lt;/a&gt; 애플리케이션에 사용할 수있는 영역을 얻기 위해 () 함수를.</target>
        </trans-unit>
        <trans-unit id="e2e4946ae56a282edf4759be3f0bb2eb1f303eb3" translate="yes" xml:space="preserve">
          <source>To only expose the functions and properties of the class itself, reimplement this function to return</source>
          <target state="translated">클래스 자체의 함수와 속성 만 노출 시키려면이 함수를 다시 구현하여</target>
        </trans-unit>
        <trans-unit id="7f8a6c635a01856f699395cc57db807ea443a75a" translate="yes" xml:space="preserve">
          <source>To optimize drawing with &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;, Qt provides the &lt;a href=&quot;qpixmapcache&quot;&gt;QPixmapCache&lt;/a&gt; class which can be used to store temporary pixmaps that are expensive to generate without using more storage space than the cache limit.</source>
          <target state="translated">&lt;a href=&quot;qpixmap&quot;&gt;QPixmap으로&lt;/a&gt; 도면을 최적화하기 위해 Qt는 &lt;a href=&quot;qpixmapcache&quot;&gt;QPixmapCache&lt;/a&gt; 클래스를 제공합니다. QPixmapCache 클래스는 캐시 제한보다 많은 저장 공간을 사용하지 않고 생성하는 데 비용이 많이 드는 임시 픽스맵을 저장하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bacc97a3f12258a9042085c60ab7571f0bbded59" translate="yes" xml:space="preserve">
          <source>To override certain aspects of the form builder's behavior, subclass &lt;a href=&quot;qabstractformbuilder&quot;&gt;QAbstractFormBuilder&lt;/a&gt; and reimplement the relevant virtual functions:</source>
          <target state="translated">양식 작성기 동작의 특정 측면을 대체하려면 &lt;a href=&quot;qabstractformbuilder&quot;&gt;QAbstractFormBuilder를&lt;/a&gt; 서브 클래스 로 만들고 관련 가상 함수를 다시 구현하십시오.</target>
        </trans-unit>
        <trans-unit id="1570e840a4478b7a0acd2574e0b4213a6c80fb20" translate="yes" xml:space="preserve">
          <source>To override the default, assign a handler object to this property. The handler should implement a handleSubsurfaceAdded(&lt;a href=&quot;qml-qtwayland-compositor-waylandsurface&quot;&gt;WaylandSurface&lt;/a&gt;) function.</source>
          <target state="translated">기본값을 대체하려면 핸들러 오브젝트를이 특성에 지정하십시오. 핸들러는 handleSubsurfaceAdded ( &lt;a href=&quot;qml-qtwayland-compositor-waylandsurface&quot;&gt;WaylandSurface&lt;/a&gt; ) 함수를 구현해야 합니다.</target>
        </trans-unit>
        <trans-unit id="2ada62394c9dc79a93cbb16f591763962c1c3b17" translate="yes" xml:space="preserve">
          <source>To perform runtime decisions based on the adaptation, use &lt;a href=&quot;qsgrendererinterface&quot;&gt;QSGRendererInterface&lt;/a&gt; from C++ and &lt;a href=&quot;qml-qtquick-graphicsinfo&quot;&gt;GraphicsInfo&lt;/a&gt; from QML. They can also be used to check the level of shader support: shading language, compilation approach, and so on.</source>
          <target state="translated">적응을 기반으로 런타임 결정을 수행하려면 C ++의 &lt;a href=&quot;qsgrendererinterface&quot;&gt;QSGRendererInterface&lt;/a&gt; 와 QML의 &lt;a href=&quot;qml-qtquick-graphicsinfo&quot;&gt;GraphicsInfo&lt;/a&gt; 를 사용하십시오. 셰이딩 언어, 컴파일 방식 등 셰이더 지원 수준을 확인하는 데에도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3a63cda06f00a8a2ca921e8b16cd7c66fcad735e" translate="yes" xml:space="preserve">
          <source>To place an invocation in an event loop, make a queued &lt;a href=&quot;signalsandslots&quot;&gt;signal-slot&lt;/a&gt; connection. Whenever the signal is emitted, its arguments will be recorded by the event system. The thread that the signal receiver &lt;a href=&quot;qobject#thread-affinity&quot;&gt;lives in&lt;/a&gt; will then run the slot. Alternatively, call &lt;a href=&quot;qmetaobject#invokeMethod&quot;&gt;QMetaObject::invokeMethod&lt;/a&gt;() to achieve the same effect without signals. In both cases, a &lt;a href=&quot;qt#ConnectionType-enum&quot;&gt;queued connection&lt;/a&gt; must be used because a &lt;a href=&quot;qt#ConnectionType-enum&quot;&gt;direct connection&lt;/a&gt; bypasses the event system and runs the method immediately in the current thread.</source>
          <target state="translated">이벤트 루프에서 호출을하려면 큐잉 된 &lt;a href=&quot;signalsandslots&quot;&gt;신호 슬롯&lt;/a&gt; 연결을 작성하십시오. 신호가 방출 될 때마다 해당 인수는 이벤트 시스템에 의해 기록됩니다. 신호 수신기가 스레드 &lt;a href=&quot;qobject#thread-affinity&quot;&gt;에 살고는&lt;/a&gt; 다음 슬롯을 실행합니다. 또는 신호없이 동일한 효과를 얻으려면 &lt;a href=&quot;qmetaobject#invokeMethod&quot;&gt;QMetaObject :: invokeMethod&lt;/a&gt; ()를 호출 하십시오 . 두 경우 모두, &lt;a href=&quot;qt#ConnectionType-enum&quot;&gt;직접 연결&lt;/a&gt; 은 이벤트 시스템을 우회하고 현재 스레드에서 메소드를 즉시 실행 하기 때문에 &lt;a href=&quot;qt#ConnectionType-enum&quot;&gt;대기중인 연결을&lt;/a&gt; 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="c805fc83f313e75c1ecc9a2b58dba163895f1c33" translate="yes" xml:space="preserve">
          <source>To play a file:</source>
          <target state="translated">파일을 재생하려면</target>
        </trans-unit>
        <trans-unit id="e5584f448534789fcaeb5798974920fcba6e5aa2" translate="yes" xml:space="preserve">
          <source>To play each of these frames at a speed of 500 milliseconds per frame, the following code can be used:</source>
          <target state="translated">이러한 프레임 각각을 프레임 당 500 밀리 초의 속도로 재생하려면 다음 코드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5c9b3887c9417c94b897a9022164e53bae1b55e5" translate="yes" xml:space="preserve">
          <source>To populate the column with values, &lt;a href=&quot;qtest#newRow&quot;&gt;newRow&lt;/a&gt;() can be used. Use &lt;a href=&quot;qtest#QFETCH&quot;&gt;QFETCH&lt;/a&gt;() to fetch the data in the actual test.</source>
          <target state="translated">열을 값으로 채우려면 &lt;a href=&quot;qtest#newRow&quot;&gt;newRow&lt;/a&gt; ()를 사용할 수 있습니다. 실제 테스트에서 데이터를 페치 하려면 &lt;a href=&quot;qtest#QFETCH&quot;&gt;QFETCH&lt;/a&gt; ()를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="181210190531c628a95b8b729a989398c7d00f88" translate="yes" xml:space="preserve">
          <source>To populate the model with the table's data, call &lt;a href=&quot;qsqltablemodel#select&quot;&gt;select&lt;/a&gt;().</source>
          <target state="translated">모델을 테이블의 데이터로 채우려면 &lt;a href=&quot;qsqltablemodel#select&quot;&gt;select&lt;/a&gt; ()를 호출 하십시오 .</target>
        </trans-unit>
        <trans-unit id="09e85ce1f6641894a3f94f2d2ab9e88efe4da050" translate="yes" xml:space="preserve">
          <source>To prevent characters from being encoded pass them to</source>
          <target state="translated">문자가 인코딩되지 않도록하려면</target>
        </trans-unit>
        <trans-unit id="bb57ac565f82644afa92a4fbe8cd9d5d107e9550" translate="yes" xml:space="preserve">
          <source>To prevent loops or excessive evaluation, developers should ensure that the property change signal is only emitted when the property value has actually changed. Also, if a property or group of properties is infrequently used, it is permitted to use the same NOTIFY signal for several properties. This should be done with care to ensure that performance doesn't suffer.</source>
          <target state="translated">루프 또는 과도한 평가를 방지하려면 개발자는 속성 값이 실제로 변경된 경우에만 속성 변경 신호가 방출되도록해야합니다. 또한 속성 또는 속성 그룹이 자주 사용되지 않는 경우 여러 속성에 대해 동일한 NOTIFY 신호를 사용할 수 있습니다. 성능이 저하되지 않도록주의해서 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="d1691a85c1c65800800205ec53c1a12e6dbbee89" translate="yes" xml:space="preserve">
          <source>To prevent the built-in layouts from being built into the virtual keyboard plugin when using custom layouts, add &lt;code&gt;disable-layouts&lt;/code&gt; to the &lt;code&gt;CONFIG&lt;/code&gt; qmake variable. For more information, see &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtvirtualkeyboard-build.html#advanced-configuration-options&quot;&gt;Advanced Configuration Options&lt;/a&gt;.</source>
          <target state="translated">사용자 정의 레이아웃을 사용할 때 내장 레이아웃이 가상 키보드 플러그인에 내장되지 않도록하려면 &lt;code&gt;CONFIG&lt;/code&gt; qmake 변수에 &lt;code&gt;disable-layouts&lt;/code&gt; 를 추가 하십시오. 자세한 정보는 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtvirtualkeyboard-build.html#advanced-configuration-options&quot;&gt;고급 구성 옵션을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9d7a18a95511ede21104fb439beaf50c34fd1734" translate="yes" xml:space="preserve">
          <source>To prevent this construct from compiling (and failing at runtime), qAsConst() has a second, deleted, overload which binds to rvalues.</source>
          <target state="translated">이 구문이 컴파일되지 않고 런타임에 실패하지 않도록하기 위해 qAsConst ()에는 rvalue에 바인딩되는 삭제 된 두 번째 오버로드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="beef2344d7ad73db1aaf2f0a46b5b1173b7f76da" translate="yes" xml:space="preserve">
          <source>To preview your form with skins, open the &lt;b&gt;Edit&lt;/b&gt; menu and select &lt;b&gt;Preferences...&lt;/b&gt;</source>
          <target state="translated">스킨으로 양식을 미리 보려면 &lt;b&gt;편집&lt;/b&gt; 메뉴를 열고 &lt;b&gt;기본 설정 ...을&lt;/b&gt; 선택하십시오 &lt;b&gt;.&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="4442a94181e5036a5be6b6222b4c519c25f85f63" translate="yes" xml:space="preserve">
          <source>To print a form, select the &lt;b&gt;Print...&lt;/b&gt; option.</source>
          <target state="translated">양식을 인쇄하려면 인쇄 &lt;b&gt;...&lt;/b&gt; 옵션을 선택하십시오 .</target>
        </trans-unit>
        <trans-unit id="9c1ef17c2c607756ee60d5773adbd2571aa578ca" translate="yes" xml:space="preserve">
          <source>To print a widget, you can use the &lt;a href=&quot;qwidget#render&quot;&gt;QWidget::render&lt;/a&gt;() function. As mentioned, the printer's resolution is usually higher than the screen resolution, so you will have to scale the painter. You may also want to position the widget on the page. The following code sample shows how this may look.</source>
          <target state="translated">위젯을 인쇄하기 위해 &lt;a href=&quot;qwidget#render&quot;&gt;QWidget :: render&lt;/a&gt; () 함수를 사용할 수 있습니다 . 앞에서 언급했듯이 프린터의 해상도는 일반적으로 화면 해상도보다 높으므로 화가의 크기를 조정해야합니다. 페이지에 위젯을 배치 할 수도 있습니다. 다음 코드 샘플은이 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="7f6dadd9647fc94e8188107643c2ef20ae605f93" translate="yes" xml:space="preserve">
          <source>To print non-printable characters without transformation, enable the &lt;a href=&quot;qdebug#noquote&quot;&gt;noquote&lt;/a&gt;() functionality. Note that some &lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; backends might not be 8-bit clean.</source>
          <target state="translated">변환없이 인쇄 할 수없는 문자를 인쇄하려면 &lt;a href=&quot;qdebug#noquote&quot;&gt;따옴표&lt;/a&gt; () 기능을 활성화하십시오 . 일부 &lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; 백엔드는 8 비트 정리가 아닐 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="47fd93605177749d94e49b03df2ee93e092c3eab" translate="yes" xml:space="preserve">
          <source>To produce quality API documentation, the Qt API references follow a particular language guidelines. While the contents of this page demonstrates how to create API documentation, the style guidelines demonstrate how the reference materials follow a consistent use of language.</source>
          <target state="translated">품질 API 문서를 생성하기 위해 Qt API 참조는 특정 언어 지침을 따릅니다. 이 페이지의 내용은 API 문서를 작성하는 방법을 보여 주지만 스타일 가이드 라인은 참조 자료가 일관된 언어 사용을 따르는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="9549cbbbf3aec7660a062a605b29706e3d8e22f5" translate="yes" xml:space="preserve">
          <source>To provide a list property, a C++ class must implement the operation callbacks, and then return an appropriate &lt;a href=&quot;qqmllistproperty&quot;&gt;QQmlListProperty&lt;/a&gt; value from the property getter. List properties should have no setter. In the example above, the &lt;a href=&quot;qobject#Q_PROPERTY&quot;&gt;Q_PROPERTY&lt;/a&gt;() declarative will look like this:</source>
          <target state="translated">목록 특성을 제공하려면 C ++ 클래스가 조작 콜백을 구현 한 후 특성 getter에서 적절한 &lt;a href=&quot;qqmllistproperty&quot;&gt;QQmlListProperty&lt;/a&gt; 값 을 리턴해야합니다 . 목록 속성에는 setter가 없어야합니다. 위의 예에서 &lt;a href=&quot;qobject#Q_PROPERTY&quot;&gt;Q_PROPERTY&lt;/a&gt; () 선언은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="50918fec65d8b6815bd8babd7660da1a254bdb1d" translate="yes" xml:space="preserve">
          <source>To provide accessibility support for a widget or other user interface element, you need to implement the &lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterface&lt;/a&gt; and distribute it in a &lt;a href=&quot;qaccessibleplugin&quot;&gt;QAccessiblePlugin&lt;/a&gt;. It is also possible to compile the interface into the application and provide a &lt;a href=&quot;qaccessible#InterfaceFactory-typedef&quot;&gt;QAccessible::InterfaceFactory&lt;/a&gt; for it. The factory can be used if you link statically or do not want the added complexity of plugins. This can be an advantage if you, for instance, are delivering a 3-rd party library.</source>
          <target state="translated">위젯 또는 다른 사용자 인터페이스 요소에 대한 접근성 지원을 제공하기 위해, 당신은 구현해야 &lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterface을&lt;/a&gt; 하고 그것을 배포 &lt;a href=&quot;qaccessibleplugin&quot;&gt;QAccessiblePlugin&lt;/a&gt; . 인터페이스를 응용 프로그램으로 컴파일하고 &lt;a href=&quot;qaccessible#InterfaceFactory-typedef&quot;&gt;QAccessible :: InterfaceFactory&lt;/a&gt; 를 제공 할 수도 있습니다. 정적으로 링크하거나 플러그인의 복잡성을 추가하지 않으려는 경우 팩토리를 사용할 수 있습니다. 예를 들어 타사 라이브러리를 제공하는 경우 이점이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6a059dd211bfacdbc6cf5efdd8e17633bd74592a" translate="yes" xml:space="preserve">
          <source>To provide attributes for each COM class, use the &lt;a href=&quot;qobject#Q_CLASSINFO&quot;&gt;Q_CLASSINFO&lt;/a&gt; macro, which is part of Qt's meta object system.</source>
          <target state="translated">각 COM 클래스에 대한 속성을 제공하려면 Qt의 메타 오브젝트 시스템의 일부인 &lt;a href=&quot;qobject#Q_CLASSINFO&quot;&gt;Q_CLASSINFO&lt;/a&gt; 매크로를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="4d4a670f1b25bb5d882d5eb88f755c50b8502bf0" translate="yes" xml:space="preserve">
          <source>To provide completions, &lt;a href=&quot;qcompleter&quot;&gt;QCompleter&lt;/a&gt; needs to know the path from an index. This is provided by &lt;a href=&quot;qcompleter#pathFromIndex&quot;&gt;pathFromIndex&lt;/a&gt;(). The default implementation of &lt;a href=&quot;qcompleter#pathFromIndex&quot;&gt;pathFromIndex&lt;/a&gt;(), returns the data for the &lt;a href=&quot;qt#ItemDataRole-enum&quot;&gt;edit role&lt;/a&gt; for list models and the absolute file path if the mode is a &lt;a href=&quot;qfilesystemmodel&quot;&gt;QFileSystemModel&lt;/a&gt;.</source>
          <target state="translated">완료를 제공하려면 &lt;a href=&quot;qcompleter&quot;&gt;QCompleter&lt;/a&gt; 가 색인의 경로를 알아야합니다. 이것은 &lt;a href=&quot;qcompleter#pathFromIndex&quot;&gt;pathFromIndex&lt;/a&gt; ()에 의해 제공됩니다 . &lt;a href=&quot;qcompleter#pathFromIndex&quot;&gt;pathFromIndex&lt;/a&gt; () 의 기본 구현은 모드가 &lt;a href=&quot;qfilesystemmodel&quot;&gt;QFileSystemModel 인&lt;/a&gt; 경우 목록 모델 의 &lt;a href=&quot;qt#ItemDataRole-enum&quot;&gt;편집 역할&lt;/a&gt; 및 절대 파일 경로에 대한 데이터를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="684a6ed9fef84b7bd2f77b817e6c49d000e2b72c" translate="yes" xml:space="preserve">
          <source>To provide custom editing, there are two approaches that can be used. The first approach is to create an editor widget and display it directly on top of the item. To do this you must reimplement &lt;a href=&quot;qabstractitemdelegate#createEditor&quot;&gt;createEditor&lt;/a&gt;() to provide an editor widget, &lt;a href=&quot;qabstractitemdelegate#setEditorData&quot;&gt;setEditorData&lt;/a&gt;() to populate the editor with the data from the model, and &lt;a href=&quot;qabstractitemdelegate#setModelData&quot;&gt;setModelData&lt;/a&gt;() so that the delegate can update the model with data from the editor.</source>
          <target state="translated">사용자 정의 편집을 제공하기 위해 사용할 수있는 두 가지 방법이 있습니다. 첫 번째 방법은 편집기 위젯을 작성하여 항목 위에 직접 표시하는 것입니다. 이를 수행하려면 편집기 위젯을 제공하도록 &lt;a href=&quot;qabstractitemdelegate#createEditor&quot;&gt;createEditor&lt;/a&gt; () , 모델의 데이터로 편집기를 채우는 &lt;a href=&quot;qabstractitemdelegate#setEditorData&quot;&gt;setEditorData&lt;/a&gt; () 및 대리자가 편집기의 데이터로 모델을 업데이트 할 수 있도록 &lt;a href=&quot;qabstractitemdelegate#setModelData&quot;&gt;setModelData&lt;/a&gt; () 를 다시 구현해야합니다 .</target>
        </trans-unit>
        <trans-unit id="0b816ba21d8ec13f92d87cecb3a38bb1fd9f673c" translate="yes" xml:space="preserve">
          <source>To provide read-only access to data provided by a model, the following functions</source>
          <target state="translated">모델에서 제공하는 데이터에 대한 읽기 전용 액세스를 제공하기 위해 다음 기능</target>
        </trans-unit>
        <trans-unit id="f4772fdf23c86d89ca9620ad40f24cb15d373293" translate="yes" xml:space="preserve">
          <source>To provide the expected behavior for Qt applications on macOS, the &lt;a href=&quot;qt#Key-enum&quot;&gt;Qt::Key_Meta&lt;/a&gt;, &lt;a href=&quot;qt#KeyboardModifier-enum&quot;&gt;Qt::MetaModifier&lt;/a&gt;, and &lt;a href=&quot;qt#Modifier-enum&quot;&gt;Qt::META&lt;/a&gt; enum values correspond to the Control keys on the standard Apple keyboard, and the &lt;a href=&quot;qt#Key-enum&quot;&gt;Qt::Key_Control&lt;/a&gt;, &lt;a href=&quot;qt#KeyboardModifier-enum&quot;&gt;Qt::ControlModifier&lt;/a&gt;, and &lt;a href=&quot;qt#Modifier-enum&quot;&gt;Qt::CTRL&lt;/a&gt; enum values correspond to the Command keys.</source>
          <target state="translated">macOS에서 Qt 응용 프로그램에 예상되는 동작을 제공하기 위해 &lt;a href=&quot;qt#Key-enum&quot;&gt;Qt :: Key_Meta&lt;/a&gt; , &lt;a href=&quot;qt#KeyboardModifier-enum&quot;&gt;Qt :: MetaModifier&lt;/a&gt; 및 &lt;a href=&quot;qt#Modifier-enum&quot;&gt;Qt :: META&lt;/a&gt; 열거 형 값은 표준 Apple 키보드의 Control 키에 해당하며 &lt;a href=&quot;qt#Key-enum&quot;&gt;Qt :: Key_Control&lt;/a&gt; , &lt;a href=&quot;qt#KeyboardModifier-enum&quot;&gt;Qt :: ControlModifier&lt;/a&gt; 및 &lt;a href=&quot;qt#Modifier-enum&quot;&gt;Qt :: CTRL&lt;/a&gt; 열거 형 값은 Command 키에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="3e75c11ca7a1cb22eea34f4e846dfdf9c7e42e9d" translate="yes" xml:space="preserve">
          <source>To provide the functionality of a &lt;a href=&quot;qmediaobject&quot;&gt;QMediaObject&lt;/a&gt; media services implement &lt;a href=&quot;qmediacontrol&quot;&gt;QMediaControl&lt;/a&gt; interfaces. Services typically implement one core media control which provides the core feature of a media object, and some number of additional controls which provide either optional features of the media object, or features of a secondary media object or peripheral object.</source>
          <target state="translated">&lt;a href=&quot;qmediaobject&quot;&gt;QMediaObject&lt;/a&gt; 미디어 서비스 의 기능을 제공하기 위해 &lt;a href=&quot;qmediacontrol&quot;&gt;QMediaControl&lt;/a&gt; 인터페이스를 구현 하십시오 . 서비스는 일반적으로 미디어 개체의 핵심 기능을 제공하는 하나의 핵심 미디어 컨트롤과 미디어 개체의 선택적 기능 또는 보조 미디어 개체 또는 주변 개체의 기능을 제공하는 몇 가지 추가 컨트롤을 구현합니다.</target>
        </trans-unit>
        <trans-unit id="0bb1b8c33e0b4bbe52a3894cc52a4d5e6f26bad6" translate="yes" xml:space="preserve">
          <source>To provide the functionality of the extension in a compositor, create an instance of the &lt;a href=&quot;qml-qtwayland-compositor-wlscaler&quot;&gt;WlScaler&lt;/a&gt; component and add it to the list of extensions supported by the compositor:</source>
          <target state="translated">컴포 지터에서 확장 기능을 제공하려면 &lt;a href=&quot;qml-qtwayland-compositor-wlscaler&quot;&gt;WlScaler&lt;/a&gt; 구성 요소 의 인스턴스를 작성하고 컴포 지터에서 지원하는 확장 목록에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="f0661f540e85bff637f5e0e199354fa53e7b999c" translate="yes" xml:space="preserve">
          <source>To provide the functionality of the extension in a compositor, create an instance of the &lt;a href=&quot;qml-qtwayland-compositor-xdgdecorationmanagerv1&quot;&gt;XdgDecorationManagerV1&lt;/a&gt; component and add it to the list of extensions supported by the compositor:</source>
          <target state="translated">컴포 지터에서 확장 기능을 제공하려면 &lt;a href=&quot;qml-qtwayland-compositor-xdgdecorationmanagerv1&quot;&gt;XdgDecorationManagerV1&lt;/a&gt; 컴포넌트 의 인스턴스를 작성하고 컴포 지터가 지원하는 확장 목록에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="56d8d10f4cf7249e95b7b451a13fd26d4e29a19a" translate="yes" xml:space="preserve">
          <source>To provide the functionality of the shell extension in a compositor, create an instance of the &lt;a href=&quot;qml-qtwayland-compositor-iviapplication&quot;&gt;IviApplication&lt;/a&gt; component and add it to the list of extensions supported by the compositor:</source>
          <target state="translated">컴포 지터에서 셸 확장 기능을 제공하려면 &lt;a href=&quot;qml-qtwayland-compositor-iviapplication&quot;&gt;IviApplication&lt;/a&gt; 컴포넌트 의 인스턴스를 작성하고 컴포 지터에서 지원하는 확장 목록에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="f7b55873c5fe6a01d9998f8f17a49f27333c3b46" translate="yes" xml:space="preserve">
          <source>To provide the functionality of the shell extension in a compositor, create an instance of the &lt;a href=&quot;qml-qtwayland-compositor-wlshell&quot;&gt;WlShell&lt;/a&gt; component and add it to the list of extensions supported by the compositor:</source>
          <target state="translated">컴포 지터에서 셸 확장 기능을 제공하려면 &lt;a href=&quot;qml-qtwayland-compositor-wlshell&quot;&gt;WlShell&lt;/a&gt; 구성 요소 의 인스턴스를 만들어 컴포 지터에서 지원하는 확장 목록에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="581dfb96e0b0a5f47fc321c0454c11ae8134eadd" translate="yes" xml:space="preserve">
          <source>To provide the functionality of the shell extension in a compositor, create an instance of the &lt;a href=&quot;qml-qtwayland-compositor-xdgshell&quot;&gt;XdgShell&lt;/a&gt; component and add it to the list of extensions supported by the compositor:</source>
          <target state="translated">컴포 지터에서 셸 확장 기능을 제공하려면 &lt;a href=&quot;qml-qtwayland-compositor-xdgshell&quot;&gt;XdgShell&lt;/a&gt; 컴포넌트 의 인스턴스를 작성하고 컴포 지터에서 지원하는 확장 목록에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="8fae6e20d084294202124fadd42c6449ec7b8a3e" translate="yes" xml:space="preserve">
          <source>To provide the functionality of the shell extension in a compositor, create an instance of the &lt;a href=&quot;qml-qtwayland-compositor-xdgshellv5&quot;&gt;XdgShellV5&lt;/a&gt; component and add it as a child of the compositor:</source>
          <target state="translated">컴포 지터에서 쉘 확장 기능을 제공하려면 &lt;a href=&quot;qml-qtwayland-compositor-xdgshellv5&quot;&gt;XdgShellV5&lt;/a&gt; 컴포넌트 의 인스턴스를 작성하고 컴포 지터 의 하위로 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="b46029233f7f35ba182ad8fe5298847dc6bb1c53" translate="yes" xml:space="preserve">
          <source>To provide the functionality of the shell extension in a compositor, create an instance of the &lt;a href=&quot;qml-qtwayland-compositor-xdgshellv6&quot;&gt;XdgShellV6&lt;/a&gt; component and add it to the list of extensions supported by the compositor:</source>
          <target state="translated">컴포 지터에서 쉘 확장 기능을 제공하려면 &lt;a href=&quot;qml-qtwayland-compositor-xdgshellv6&quot;&gt;XdgShellV6&lt;/a&gt; 컴포넌트 의 인스턴스를 작성하고 컴포 지터가 지원하는 확장 목록에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="32a9b543a8a38cc656812a2f6bbe996a8b1e8111" translate="yes" xml:space="preserve">
          <source>To provide your own syntax highlighting, you must subclass &lt;a href=&quot;qsyntaxhighlighter&quot;&gt;QSyntaxHighlighter&lt;/a&gt; and reimplement &lt;a href=&quot;qsyntaxhighlighter#highlightBlock&quot;&gt;highlightBlock&lt;/a&gt;().</source>
          <target state="translated">고유 한 구문 강조를 제공하려면 &lt;a href=&quot;qsyntaxhighlighter&quot;&gt;QSyntaxHighlighter&lt;/a&gt; 를 서브 클래스로 만들고 &lt;a href=&quot;qsyntaxhighlighter#highlightBlock&quot;&gt;highlightBlock&lt;/a&gt; ()을 다시 구현 해야합니다 .</target>
        </trans-unit>
        <trans-unit id="e25b781306cda9c13adebd46c71bf419f457d783" translate="yes" xml:space="preserve">
          <source>To provide your own syntax highlighting, you must subclass &lt;a href=&quot;qsyntaxhighlighter&quot;&gt;QSyntaxHighlighter&lt;/a&gt; and reimplement highlightBlock(). In your reimplementation you should parse the block's</source>
          <target state="translated">고유 한 구문 강조를 제공하려면 &lt;a href=&quot;qsyntaxhighlighter&quot;&gt;QSyntaxHighlighter&lt;/a&gt; 를 서브 클래스로 작성 하고 highlightBlock ()을 다시 구현 해야합니다 . 다시 구현할 때 블록을 구문 분석해야합니다.</target>
        </trans-unit>
        <trans-unit id="a9021b7dc49431bf4058aed26133573c3495e50f" translate="yes" xml:space="preserve">
          <source>To query if a given queue family within a physical device can be used to perform presentation to a given surface, call &lt;a href=&quot;qvulkaninstance#supportsPresent&quot;&gt;supportsPresent&lt;/a&gt;(). This encapsulates both the generic &lt;code&gt;vkGetPhysicalDeviceSurfaceSupportKHR&lt;/code&gt; and the WSI-specific &lt;code&gt;vkGetPhysicalDevice*PresentationSupportKHR&lt;/code&gt; checks.</source>
          <target state="translated">물리적 장치 내에서 지정된 큐 제품군을 사용하여 지정된 표면에 프리젠 테이션을 수행 할 수 있는지 조회하려면 &lt;a href=&quot;qvulkaninstance#supportsPresent&quot;&gt;supportsPresent&lt;/a&gt; ()를 호출하십시오 . 일반 &lt;code&gt;vkGetPhysicalDeviceSurfaceSupportKHR&lt;/code&gt; 및 WSI 특정 &lt;code&gt;vkGetPhysicalDevice*PresentationSupportKHR&lt;/code&gt; 검사를 모두 캡슐화 합니다.</target>
        </trans-unit>
        <trans-unit id="329bfa34839f5178772b6541f8a595a32420bf6f" translate="yes" xml:space="preserve">
          <source>To query the actual format after initialization, call &lt;a href=&quot;qvulkanwindow#colorFormat&quot;&gt;colorFormat&lt;/a&gt;().</source>
          <target state="translated">초기화 후 실제 형식을 쿼리하려면 &lt;a href=&quot;qvulkanwindow#colorFormat&quot;&gt;colorFormat&lt;/a&gt; ()을 호출 하십시오 .</target>
        </trans-unit>
        <trans-unit id="014f4a6715690fddf255b7469ab7ed9972d9539d" translate="yes" xml:space="preserve">
          <source>To query the supported sample counts, call &lt;a href=&quot;qvulkanwindow#supportedSampleCounts&quot;&gt;supportedSampleCounts&lt;/a&gt;(). When the returned set contains 4, 8, ..., passing one of those values to &lt;a href=&quot;qvulkanwindow#setSampleCount&quot;&gt;setSampleCount&lt;/a&gt;() requests multisample rendering.</source>
          <target state="translated">지원되는 샘플 수를 쿼리하려면 &lt;a href=&quot;qvulkanwindow#supportedSampleCounts&quot;&gt;supportedSampleCounts&lt;/a&gt; ()를 호출하십시오 . 리턴 된 세트에 4, 8, ...이 포함 된 경우 해당 값 중 하나를 &lt;a href=&quot;qvulkanwindow#setSampleCount&quot;&gt;setSampleCount&lt;/a&gt; ()에 전달하면 다중 샘플 렌더링이 요청됩니다.</target>
        </trans-unit>
        <trans-unit id="11fac3b979a31ee87a91f02045e90d5c520d1007" translate="yes" xml:space="preserve">
          <source>To rapidly update custom widgets that constantly paint over their entire areas with opaque content, e.g., video streaming widgets, it is better to set the widget's &lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt::WA_OpaquePaintEvent&lt;/a&gt;, avoiding any unnecessary overhead associated with repainting the widget's background.</source>
          <target state="translated">비디오 스트리밍 위젯과 같이 불투명 한 컨텐츠로 전체 영역을 지속적으로 페인트하는 사용자 정의 위젯을 빠르게 업데이트하려면 위젯의 &lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt :: WA_OpaquePaintEvent&lt;/a&gt; 를 설정 하여 위젯의 배경을 다시 칠하는 것과 관련된 불필요한 오버 헤드를 피하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="df17cf20977251b7dd92221a49dbac1b87edbd76" translate="yes" xml:space="preserve">
          <source>To rapidly update custom widgets with simple background colors, such as real-time plotting or graphing widgets, it is better to define a suitable background color (using &lt;a href=&quot;qwidget#setBackgroundRole&quot;&gt;setBackgroundRole&lt;/a&gt;() with the &lt;a href=&quot;qpalette#ColorRole-enum&quot;&gt;QPalette::Window&lt;/a&gt; role), set the &lt;a href=&quot;qwidget#autoFillBackground-prop&quot;&gt;autoFillBackground&lt;/a&gt; property, and only implement the necessary drawing functionality in the widget's &lt;a href=&quot;qwidget#paintEvent&quot;&gt;paintEvent&lt;/a&gt;().</source>
          <target state="translated">실시간 플로팅 또는 그래프 위젯과 같은 간단한 배경색으로 사용자 정의 위젯을 빠르게 업데이트하려면 &lt;a href=&quot;qpalette#ColorRole-enum&quot;&gt;QPalette :: Window&lt;/a&gt; 역할 과 함께 &lt;a href=&quot;qwidget#setBackgroundRole&quot;&gt;setBackgroundRole&lt;/a&gt; ()을 사용하여 적절한 배경색을 정의 하고 &lt;a href=&quot;qwidget#autoFillBackground-prop&quot;&gt;autoFillBackground&lt;/a&gt; 속성 만 설정하는 것이 좋습니다. 위젯의 &lt;a href=&quot;qwidget#paintEvent&quot;&gt;paintEvent&lt;/a&gt; () 에서 필요한 그리기 기능을 구현하십시오 .</target>
        </trans-unit>
        <trans-unit id="73713180d489718892546c676db3a1aadd9be178" translate="yes" xml:space="preserve">
          <source>To read a date value returned from a C++ extension class, use &lt;a href=&quot;qml-qtqml-qt#formatDate-method&quot;&gt;Qt.formatDate()&lt;/a&gt; and &lt;a href=&quot;qml-qtqml-qt#formatDateTime-method&quot;&gt;Qt.formatDateTime()&lt;/a&gt;.</source>
          <target state="translated">C ++ 확장 클래스에서 리턴 된 날짜 값을 읽으려면 &lt;a href=&quot;qml-qtqml-qt#formatDate-method&quot;&gt;Qt.formatDate ()&lt;/a&gt; 및 &lt;a href=&quot;qml-qtqml-qt#formatDateTime-method&quot;&gt;Qt.formatDateTime ()을 사용하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a2b0585f5068ae36eedccf3f94663649dcbdc51f" translate="yes" xml:space="preserve">
          <source>To read an image, you start by constructing a &lt;a href=&quot;qimagereader&quot;&gt;QImageReader&lt;/a&gt; object. Pass either a file name or a device pointer, and the image format to &lt;a href=&quot;qimagereader&quot;&gt;QImageReader&lt;/a&gt;'s constructor. You can then set several options, such as the clip rect (by calling &lt;a href=&quot;qimagereader#setClipRect&quot;&gt;setClipRect&lt;/a&gt;()) and scaled size (by calling &lt;a href=&quot;qimagereader#setScaledSize&quot;&gt;setScaledSize&lt;/a&gt;()). &lt;a href=&quot;qimagereader#canRead&quot;&gt;canRead&lt;/a&gt;() returns the image if the &lt;a href=&quot;qimagereader&quot;&gt;QImageReader&lt;/a&gt; can read the image (i.e., the image format is supported and the device is open for reading). Call &lt;a href=&quot;qimagereader#read&quot;&gt;read&lt;/a&gt;() to read the image.</source>
          <target state="translated">이미지를 읽으려면 먼저 &lt;a href=&quot;qimagereader&quot;&gt;QImageReader&lt;/a&gt; 객체 를 구성 해야 합니다. 파일 이름이나 장치 포인터 및 이미지 형식을 &lt;a href=&quot;qimagereader&quot;&gt;QImageReader&lt;/a&gt; 의 생성자에 전달하십시오. 그런 다음 클립 rect ( &lt;a href=&quot;qimagereader#setClipRect&quot;&gt;setClipRect&lt;/a&gt; () 호출 ) 및 크기 조정 ( &lt;a href=&quot;qimagereader#setScaledSize&quot;&gt;setScaledSize&lt;/a&gt; () 호출)과 같은 여러 옵션을 설정할 수 있습니다 . &lt;a href=&quot;qimagereader#canRead&quot;&gt;canRead&lt;/a&gt; ()는 &lt;a href=&quot;qimagereader&quot;&gt;QImageReader&lt;/a&gt; 가 이미지를 읽을 수있는 경우 이미지를 반환합니다 (즉, 이미지 형식이 지원되고 장치가 읽기 위해 열려 있습니다). 이미지를 읽으려면 &lt;a href=&quot;qimagereader#read&quot;&gt;read&lt;/a&gt; ()를 호출 하십시오.</target>
        </trans-unit>
        <trans-unit id="fd206fc3519b5f6fafd1c4a11582f29d0a9f2834" translate="yes" xml:space="preserve">
          <source>To read back an array, use &lt;a href=&quot;qsettings#beginReadArray&quot;&gt;beginReadArray&lt;/a&gt;().</source>
          <target state="translated">배열을 다시 읽으려면 &lt;a href=&quot;qsettings#beginReadArray&quot;&gt;beginReadArray&lt;/a&gt; ()를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="3b1fd2fc99d1066c9770f0e4b54dda63081a62bf" translate="yes" xml:space="preserve">
          <source>To read input XML data a special class &lt;a href=&quot;qxmlinputsource&quot;&gt;QXmlInputSource&lt;/a&gt; is used.</source>
          <target state="translated">입력 XML 데이터를 읽으려면 특수 클래스 &lt;a href=&quot;qxmlinputsource&quot;&gt;QXmlInputSource&lt;/a&gt; 가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="c4fa46efe482e401e77b226024272c8b56b1f1c9" translate="yes" xml:space="preserve">
          <source>To read or write files in various encodings, use &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt; and its &lt;a href=&quot;qtextstream#setCodec&quot;&gt;setCodec()&lt;/a&gt; function. See the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-tools-codecs-example.html&quot;&gt;Codecs&lt;/a&gt; example for an application of &lt;a href=&quot;qtextcodec&quot;&gt;QTextCodec&lt;/a&gt; to file I/O.</source>
          <target state="translated">다양한 인코딩으로 파일을 읽거나 쓰려면 &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt; 및 해당 &lt;a href=&quot;qtextstream#setCodec&quot;&gt;setCodec ()&lt;/a&gt; 함수를 사용하십시오. 파일 I / O 에 &lt;a href=&quot;qtextcodec&quot;&gt;QTextCodec&lt;/a&gt; 를 적용 하려면 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-tools-codecs-example.html&quot;&gt;코덱&lt;/a&gt; 예제를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2d2ef3897c0f90b19494eedab7161a906b3b77ae" translate="yes" xml:space="preserve">
          <source>To receive a notification when a particular signal is emitted for a particular object, the object definition should declare a signal handler named</source>
          <target state="translated">특정 신호가 특정 객체에 대해 방출 될 때 알림을 받으려면 객체 정의에서 이름이 지정된 신호 핸들러를 선언해야합니다.</target>
        </trans-unit>
        <trans-unit id="a2023f3fe6b383a1163fbb8bcd9e901163e64c50" translate="yes" xml:space="preserve">
          <source>To receive a notification when a state machine sends out an event, a connection can be created to the corresponding signal.</source>
          <target state="translated">상태 머신이 이벤트를 보낼 때 알림을 수신하기 위해 해당 신호에 대한 연결을 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cbbba7758a3a5edf0093bcbfb9ea4821c3d38ebd" translate="yes" xml:space="preserve">
          <source>To receive data from a source, connect to its &lt;a href=&quot;qgeopositioninfosource#positionUpdated&quot;&gt;positionUpdated()&lt;/a&gt; signal, then call either &lt;a href=&quot;qgeopositioninfosource#startUpdates&quot;&gt;startUpdates()&lt;/a&gt; or &lt;a href=&quot;qgeopositioninfosource#requestUpdate&quot;&gt;requestUpdate()&lt;/a&gt; to begin.</source>
          <target state="translated">소스에서 데이터를 수신하려면 &lt;a href=&quot;qgeopositioninfosource#positionUpdated&quot;&gt;positionUpdated ()&lt;/a&gt; 신호에 연결 한 다음 &lt;a href=&quot;qgeopositioninfosource#startUpdates&quot;&gt;startUpdates ()&lt;/a&gt; 또는 &lt;a href=&quot;qgeopositioninfosource#requestUpdate&quot;&gt;requestUpdate ()&lt;/a&gt; 를 호출 하여 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="02510da006a9932e8e43a24330998cf2b72274e3" translate="yes" xml:space="preserve">
          <source>To receive errors related to loading and executing QML with &lt;a href=&quot;qquickview&quot;&gt;QQuickView&lt;/a&gt;, you can connect to the &lt;a href=&quot;qquickview#statusChanged&quot;&gt;statusChanged&lt;/a&gt;() signal and monitor for &lt;a href=&quot;qquickview#Status-enum&quot;&gt;QQuickView::Error&lt;/a&gt;. The errors are available via &lt;a href=&quot;qquickview#errors&quot;&gt;QQuickView::errors&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qquickview&quot;&gt;QQuickView로&lt;/a&gt; QML로드 및 실행과 관련된 오류를 수신 하기 위해 &lt;a href=&quot;qquickview#statusChanged&quot;&gt;statusChanged&lt;/a&gt; () 신호에 연결하고 &lt;a href=&quot;qquickview#Status-enum&quot;&gt;QQuickView :: Error를&lt;/a&gt; 모니터 할 수 있습니다 . 오류는 &lt;a href=&quot;qquickview#errors&quot;&gt;QQuickView :: errors&lt;/a&gt; () 를 통해 사용 가능 합니다.</target>
        </trans-unit>
        <trans-unit id="eab91045a4ab2be32bcd180cc12d795ccdaaf3a4" translate="yes" xml:space="preserve">
          <source>To receive errors related to loading and executing QML with &lt;a href=&quot;qquickwidget&quot;&gt;QQuickWidget&lt;/a&gt;, you can connect to the &lt;a href=&quot;qquickwidget#statusChanged&quot;&gt;statusChanged&lt;/a&gt;() signal and monitor for &lt;a href=&quot;qquickwidget#Status-enum&quot;&gt;QQuickWidget::Error&lt;/a&gt;. The errors are available via &lt;a href=&quot;qquickwidget#errors&quot;&gt;QQuickWidget::errors&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qquickwidget&quot;&gt;QQuickWidget으로&lt;/a&gt; QML로드 및 실행과 관련된 오류를 수신 하기 위해 &lt;a href=&quot;qquickwidget#statusChanged&quot;&gt;statusChanged&lt;/a&gt; () 신호에 연결하고 &lt;a href=&quot;qquickwidget#Status-enum&quot;&gt;QQuickWidget :: Error를&lt;/a&gt; 모니터링 할 수 있습니다 . 오류는 &lt;a href=&quot;qquickwidget#errors&quot;&gt;QQuickWidget :: errors&lt;/a&gt; () 를 통해 사용 가능 합니다.</target>
        </trans-unit>
        <trans-unit id="a74d05b35ef0bdbab729493f205103770d0a89e4" translate="yes" xml:space="preserve">
          <source>To record to a file:</source>
          <target state="translated">파일에 기록하려면</target>
        </trans-unit>
        <trans-unit id="6413e6020938a8fbd25187715d3a6b45449b8398" translate="yes" xml:space="preserve">
          <source>To refer to a specific object, provide an &lt;code&gt;id&lt;/code&gt;. For example:</source>
          <target state="translated">특정 객체를 참조하려면 &lt;code&gt;id&lt;/code&gt; 를 제공하십시오 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="508c3a1c79fc39cbbfcc2bab71fc89c8a732577a" translate="yes" xml:space="preserve">
          <source>To register &lt;code&gt;CppType&lt;/code&gt; version 1 for &lt;code&gt;MyTypes 1.1&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;MyTypes 1.1&lt;/code&gt; 에 &lt;code&gt;CppType&lt;/code&gt; 버전 1 을 등록하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="f0122e3e0b3fe7dd92827130daf9d252b87b3421" translate="yes" xml:space="preserve">
          <source>To register a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;-derived class as an instantiable QML object type, call &lt;a href=&quot;qqmlengine#qmlRegisterType-1&quot;&gt;qmlRegisterType&lt;/a&gt;() to register the class as QML type into a particular type namespace. Clients can then import that namespace in order to use the type.</source>
          <target state="translated">레지스터하기 &lt;a href=&quot;qobject&quot;&gt;QObject를&lt;/a&gt; 인스턴스 작성 QML 오브젝트 유형으로 유도 된 클래스를 호출 &lt;a href=&quot;qqmlengine#qmlRegisterType-1&quot;&gt;qmlRegisterType는&lt;/a&gt; () 특정 유형의 네임 스페이스로 QML 유형으로 클래스를 등록합니다. 클라이언트는 유형을 사용하기 위해 해당 네임 스페이스를 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="19fcc109b32eaf67d45cd0c02c3e3ed102bcab7f" translate="yes" xml:space="preserve">
          <source>To register a field, call &lt;a href=&quot;qwizardpage#registerField&quot;&gt;QWizardPage::registerField&lt;/a&gt;() field. For example:</source>
          <target state="translated">필드를 등록하려면 &lt;a href=&quot;qwizardpage#registerField&quot;&gt;QWizardPage :: registerField&lt;/a&gt; () 필드를 호출 하십시오 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="aa3c5090caf0a77c609f7edcf5b3f2d3f4293ce7" translate="yes" xml:space="preserve">
          <source>To register a new product, click the &lt;b&gt;Create New&lt;/b&gt; button in the top left corner of the page. The first choice you will be given is the type of in-app purchase you would like to create. The Qt Purchasing API currently only supports Consumable and Non-Consumable types so limit your selection to these. See &lt;a href=&quot;qinappproduct&quot;&gt;QInAppProduct&lt;/a&gt; for an explanation about the different product types.</source>
          <target state="translated">새 제품을 등록하려면 페이지 왼쪽 상단에서 &lt;b&gt;새로 만들기&lt;/b&gt; 버튼을 클릭 하십시오. 가장 먼저 선택해야 할 것은 인앱 구매 유형입니다. Qt 구매 API는 현재 소모품 및 비 소모품 유형 만 지원하므로 선택 범위를이 유형으로 제한하십시오. 다른 제품 유형에 대한 설명은 &lt;a href=&quot;qinappproduct&quot;&gt;QInAppProduct&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a50d21ffe69190248ab71c6463ee3c5ce60c0080" translate="yes" xml:space="preserve">
          <source>To register a type, it must be declared as a meta-type with the &lt;a href=&quot;qmetatype#Q_DECLARE_METATYPE&quot;&gt;Q_DECLARE_METATYPE&lt;/a&gt;() macro, and then registered as in the following example:</source>
          <target state="translated">유형을 등록하려면 &lt;a href=&quot;qmetatype#Q_DECLARE_METATYPE&quot;&gt;Q_DECLARE_METATYPE&lt;/a&gt; () 매크로를 사용하여 메타 유형으로 선언 한 후 다음 예제와 같이 등록해야합니다.</target>
        </trans-unit>
        <trans-unit id="06a49d11418d0fb6f855f664d658af0277efd867" translate="yes" xml:space="preserve">
          <source>To register the new class revision to a particular version the following function is used:</source>
          <target state="translated">새 클래스 개정을 특정 버전으로 등록하기 위해 다음 기능이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="ac48727e1088aa1108892814a7ecaaacd614ae8a" translate="yes" xml:space="preserve">
          <source>To remove a category ensure that the &lt;a href=&quot;location-places-qml#plugin&quot;&gt;plugin&lt;/a&gt; and &lt;a href=&quot;qml-qtlocation-category#categoryId-prop&quot;&gt;categoryId&lt;/a&gt; properties are set and call the &lt;a href=&quot;qml-qtlocation-category#remove-method&quot;&gt;remove()&lt;/a&gt; method.</source>
          <target state="translated">카테고리를 제거하려면 &lt;a href=&quot;location-places-qml#plugin&quot;&gt;플러그인&lt;/a&gt; 및 &lt;a href=&quot;qml-qtlocation-category#categoryId-prop&quot;&gt;categoryId&lt;/a&gt; 특성이 설정되어 있는지 확인 하고 &lt;a href=&quot;qml-qtlocation-category#remove-method&quot;&gt;remove ()&lt;/a&gt; 메소드를 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="a6ba48e108bd16a0eac9728fdfab72dcfae0e0ed" translate="yes" xml:space="preserve">
          <source>To remove a database connection, first close the database using &lt;a href=&quot;qsqldatabase#close&quot;&gt;QSqlDatabase::close&lt;/a&gt;(), then remove it using the static method &lt;a href=&quot;qsqldatabase#removeDatabase&quot;&gt;QSqlDatabase::removeDatabase&lt;/a&gt;().</source>
          <target state="translated">데이터베이스 연결을 제거하려면 먼저 &lt;a href=&quot;qsqldatabase#close&quot;&gt;QSqlDatabase :: close&lt;/a&gt; ()를 사용하여 데이터베이스를 닫은 다음 정적 메소드 &lt;a href=&quot;qsqldatabase#removeDatabase&quot;&gt;QSqlDatabase :: removeDatabase&lt;/a&gt; ()를 사용하여 데이터베이스 를 제거하십시오 .</target>
        </trans-unit>
        <trans-unit id="2822de9b415cc410688346330e63c846fb52ecc2" translate="yes" xml:space="preserve">
          <source>To remove a place, ensure that a Place object with a valid &lt;a href=&quot;qml-qtlocation-place#placeId-prop&quot;&gt;placeId&lt;/a&gt; property exists and call its &lt;a href=&quot;qml-qtlocation-place#remove-method&quot;&gt;remove()&lt;/a&gt; method. The &lt;a href=&quot;qml-qtlocation-place#status-prop&quot;&gt;status&lt;/a&gt; property will change to Place.Removing and then to Place.Ready if the save was successful or to Place.Error if an error occurs.</source>
          <target state="translated">작업 공간을 제거하려면 올바른 &lt;a href=&quot;qml-qtlocation-place#placeId-prop&quot;&gt;placeId&lt;/a&gt; 특성을 가진 Place 오브젝트가 존재 하는지 확인 하고 &lt;a href=&quot;qml-qtlocation-place#remove-method&quot;&gt;remove ()&lt;/a&gt; 메소드를 호출 하십시오 . &lt;a href=&quot;qml-qtlocation-place#status-prop&quot;&gt;상태&lt;/a&gt; 오류가 발생하면 저장이 성공 또는 Place.Error에 경우 속성은 Place.Ready에 다음 Place.Removing로 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="92edbb266e1add1b9fca2fa727319d1179753056" translate="yes" xml:space="preserve">
          <source>To remove a temporary message, use the &lt;a href=&quot;qstatusbar#clearMessage&quot;&gt;clearMessage&lt;/a&gt;() slot, or set a time limit when calling &lt;a href=&quot;qstatusbar#showMessage&quot;&gt;showMessage&lt;/a&gt;(). For example:</source>
          <target state="translated">임시 메시지를 제거하려면 &lt;a href=&quot;qstatusbar#clearMessage&quot;&gt;clearMessage&lt;/a&gt; () 슬롯을 사용하거나 &lt;a href=&quot;qstatusbar#showMessage&quot;&gt;showMessage&lt;/a&gt; ()를 호출 할 때 시간 제한을 설정하십시오 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="15fa7c332988cb7a2319f204616bbf8cc7707210" translate="yes" xml:space="preserve">
          <source>To remove a widget from a layout, call &lt;a href=&quot;qlayout#removeWidget&quot;&gt;removeWidget&lt;/a&gt;(). Calling &lt;a href=&quot;qwidget#hide&quot;&gt;QWidget::hide&lt;/a&gt;() on a widget also effectively removes the widget from the layout until &lt;a href=&quot;qwidget#show&quot;&gt;QWidget::show&lt;/a&gt;() is called.</source>
          <target state="translated">레이아웃에서 위젯을 제거하려면 &lt;a href=&quot;qlayout#removeWidget&quot;&gt;removeWidget&lt;/a&gt; ()을 호출하십시오 . 위젯에서 &lt;a href=&quot;qwidget#hide&quot;&gt;QWidget :: hide&lt;/a&gt; ()를 호출 하면 &lt;a href=&quot;qwidget#show&quot;&gt;QWidget :: show&lt;/a&gt; ()가 호출 될 때까지 레이아웃에서 위젯을 효과적으로 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="fa15a90fdc4f766410d16201fd608cdef4bdb3dd" translate="yes" xml:space="preserve">
          <source>To remove an item (row) from the list entirely, either delete the item or use &lt;a href=&quot;qlistwidget#takeItem&quot;&gt;takeItem&lt;/a&gt;().</source>
          <target state="translated">목록에서 항목 (행)을 완전히 제거하려면 항목을 삭제하거나 &lt;a href=&quot;qlistwidget#takeItem&quot;&gt;takeItem&lt;/a&gt; ()을 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="837bbf98eb769a1a2a26382645937a23f7c25711" translate="yes" xml:space="preserve">
          <source>To remove an update interval that was previously set, call &lt;a href=&quot;qgeopositioninfosource#updateInterval-prop&quot;&gt;setUpdateInterval&lt;/a&gt;() with a value of 0.</source>
          <target state="translated">이전에 설정된 업데이트 간격을 제거하려면 값이 0 인 &lt;a href=&quot;qgeopositioninfosource#updateInterval-prop&quot;&gt;setUpdateInterval&lt;/a&gt; ()을 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="ef0cb5458bba8024e553144d0a60d2c35ed2b623" translate="yes" xml:space="preserve">
          <source>To remove an update interval that was previously set, call &lt;a href=&quot;qgeosatelliteinfosource#updateInterval-prop&quot;&gt;setUpdateInterval&lt;/a&gt;() with a value of 0.</source>
          <target state="translated">이전에 설정된 업데이트 간격을 제거하려면 값이 0 인 &lt;a href=&quot;qgeosatelliteinfosource#updateInterval-prop&quot;&gt;setUpdateInterval&lt;/a&gt; ()을 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="affd1f635705924fa2f6375f5c2939170d9b83da" translate="yes" xml:space="preserve">
          <source>To remove constraints, set the size to &lt;a href=&quot;qwidget#QWIDGETSIZE_MAX&quot;&gt;QWIDGETSIZE_MAX&lt;/a&gt;.</source>
          <target state="translated">제한 조건을 제거하려면 크기를 &lt;a href=&quot;qwidget#QWIDGETSIZE_MAX&quot;&gt;QWIDGETSIZE_MAX로&lt;/a&gt; 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="3c3f90f91f48eeff28a80626cf3604ede8ec0e01" translate="yes" xml:space="preserve">
          <source>To remove the default connection, which may have been created with a call to &lt;a href=&quot;qsqldatabase#addDatabase&quot;&gt;addDatabase&lt;/a&gt;() not specifying a connection name, you can retrieve the default connection name by calling &lt;a href=&quot;qsqldatabase#connectionName&quot;&gt;connectionName&lt;/a&gt;() on the database returned by &lt;a href=&quot;qsqldatabase#database&quot;&gt;database&lt;/a&gt;(). Note that if a default database hasn't been created an invalid database will be returned.</source>
          <target state="translated">연결 이름을 지정하지 않고 &lt;a href=&quot;qsqldatabase#addDatabase&quot;&gt;addDatabase&lt;/a&gt; ()를 호출하여 작성된 기본 연결을 제거하려면 데이터베이스 ()에서 리턴 한 &lt;a href=&quot;qsqldatabase#database&quot;&gt;데이터베이스&lt;/a&gt; 에서 &lt;a href=&quot;qsqldatabase#connectionName&quot;&gt;connectionName&lt;/a&gt; ()을 호출하여 기본 연결 이름을 검색 할 수 있습니다 . 기본 데이터베이스가 작성되지 않은 경우 유효하지 않은 데이터베이스가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="8a47ae9cd8aed8f07ba5786f138d84ae5ac1deda" translate="yes" xml:space="preserve">
          <source>To rename a page in a toolbox, make the toolbox your current pange and change its &lt;code&gt;currentItemText&lt;/code&gt; property from the &lt;b&gt;Property Editor&lt;/b&gt;.</source>
          <target state="translated">도구 상자에서 페이지 이름을 바꾸려면 도구 상자를 현재 팬으로 만들고 &lt;b&gt;속성 편집기&lt;/b&gt; 에서 &lt;code&gt;currentItemText&lt;/code&gt; 속성을 변경하십시오 .&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="dbeba5e767f18e9b46ce3c7d2617733b7fff8d30" translate="yes" xml:space="preserve">
          <source>To render an item in a custom way, you must implement &lt;a href=&quot;qabstractitemdelegate#paint&quot;&gt;paint&lt;/a&gt;() and &lt;a href=&quot;qabstractitemdelegate#sizeHint&quot;&gt;sizeHint&lt;/a&gt;(). The &lt;a href=&quot;qstyleditemdelegate&quot;&gt;QStyledItemDelegate&lt;/a&gt; class provides default implementations for these functions; if you do not need custom rendering, subclass that class instead.</source>
          <target state="translated">항목을 사용자 정의 방식으로 렌더링하려면 &lt;a href=&quot;qabstractitemdelegate#paint&quot;&gt;paint&lt;/a&gt; () 및 &lt;a href=&quot;qabstractitemdelegate#sizeHint&quot;&gt;sizeHint&lt;/a&gt; ()를 구현해야합니다 . &lt;a href=&quot;qstyleditemdelegate&quot;&gt;QStyledItemDelegate의&lt;/a&gt; 클래스는 이러한 기능에 대한 기본 구현을 제공합니다; 사용자 정의 렌더링이 필요하지 않은 경우 대신 해당 클래스를 서브 클래스 화하십시오.</target>
        </trans-unit>
        <trans-unit id="2a9d1b36aa1cae0d6a0d8473d26d40898454494c" translate="yes" xml:space="preserve">
          <source>To render into the FBO, the user should subclass the Renderer class and reimplement its &lt;a href=&quot;qquickframebufferobject-renderer#render&quot;&gt;Renderer::render&lt;/a&gt;() function. The Renderer subclass is returned from &lt;a href=&quot;qquickframebufferobject#createRenderer&quot;&gt;createRenderer&lt;/a&gt;().</source>
          <target state="translated">FBO로 렌더링하려면 사용자는 Renderer 클래스를 서브 클래스로 만들고 &lt;a href=&quot;qquickframebufferobject-renderer#render&quot;&gt;Renderer :: render&lt;/a&gt; () 함수를 다시 구현해야 합니다. RenderR 서브 클래스는 &lt;a href=&quot;qquickframebufferobject#createRenderer&quot;&gt;createRenderer&lt;/a&gt; () 에서 리턴됩니다 .</target>
        </trans-unit>
        <trans-unit id="86e94297cce091110d19c0725926d4c8e7f56a1d" translate="yes" xml:space="preserve">
          <source>To replace the current selection with a new selection, combine the other selection flags with the &lt;a href=&quot;qitemselectionmodel#SelectionFlag-enum&quot;&gt;Current&lt;/a&gt; flag. A command using this flag instructs the selection model to replace its current collection of model indexes with those specified in a call to &lt;a href=&quot;qitemselectionmodel#select&quot;&gt;select()&lt;/a&gt;. To clear all selections before you start adding new ones, combine the other selection flags with the &lt;a href=&quot;qitemselectionmodel#SelectionFlag-enum&quot;&gt;Clear&lt;/a&gt; flag. This has the effect of resetting the selection model's collection of model indexes.</source>
          <target state="translated">현재 선택을 새 선택으로 바꾸려면 다른 선택 플래그를 &lt;a href=&quot;qitemselectionmodel#SelectionFlag-enum&quot;&gt;현재&lt;/a&gt; 플래그와 결합하십시오 . 이 플래그를 사용하는 명령은 선택 모델이 현재 모델 색인 콜렉션을 &lt;a href=&quot;qitemselectionmodel#select&quot;&gt;select ()&lt;/a&gt; 호출에 지정된 것으로 대체하도록 지시합니다 . 새로운 선택을 추가하기 전에 모든 선택을 지우려면 다른 선택 플래그를 &lt;a href=&quot;qitemselectionmodel#SelectionFlag-enum&quot;&gt;Clear&lt;/a&gt; 플래그와 결합하십시오 . 이는 선택 모델의 모델 색인 콜렉션을 재설정하는 효과가 있습니다.</target>
        </trans-unit>
        <trans-unit id="4a749a4f31090e7dbc16ae253d1eaa04cd7283ec" translate="yes" xml:space="preserve">
          <source>To replace this with real data, bind the real data object to the root context in C++ using &lt;a href=&quot;qqmlcontext#setContextProperty&quot;&gt;QQmlContext::setContextProperty&lt;/a&gt;(). This is detailed in &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtqml-cppintegration-topic.html&quot;&gt;Integrating QML and C++&lt;/a&gt;.</source>
          <target state="translated">이것을 실제 데이터로 바꾸려면 &lt;a href=&quot;qqmlcontext#setContextProperty&quot;&gt;QQmlContext :: setContextProperty&lt;/a&gt; ()를 사용하여 실제 데이터 오브젝트를 C ++의 루트 컨텍스트에 바인드하십시오 . 자세한 내용은 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtqml-cppintegration-topic.html&quot;&gt;QML 및 C ++ 통합에&lt;/a&gt; 자세히 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="594a9ea7e7f4a4a294e83aafd44c2a922b50a7b8" translate="yes" xml:space="preserve">
          <source>To request a specific configuration for the context, use &lt;a href=&quot;qwindow#setFormat&quot;&gt;setFormat&lt;/a&gt;() like for any other &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt;. This allows, among others, requesting a given OpenGL version and profile, or enabling depth and stencil buffers.</source>
          <target state="translated">컨텍스트에 대한 특정 구성을 요청하려면 다른 &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; 와 마찬가지로 &lt;a href=&quot;qwindow#setFormat&quot;&gt;setFormat&lt;/a&gt; ()을 사용 하십시오 . 이를 통해 특히 주어진 OpenGL 버전 및 프로파일을 요청하거나 깊이 및 스텐실 버퍼를 활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c324bc2d7754687deaa6daf1bedf5481a68c0f52" translate="yes" xml:space="preserve">
          <source>To reset an anchor you can assign &lt;code&gt;undefined&lt;/code&gt;:</source>
          <target state="translated">앵커를 재설정하려면 &lt;code&gt;undefined&lt;/code&gt; 를 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e433303c99c0b096d2c938a107c0ff70a3cfd2ea" translate="yes" xml:space="preserve">
          <source>To reset this property back to the default value, set its value to &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">이 특성을 다시 기본값으로 재설정하려면 해당 값을 &lt;code&gt;undefined&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="6ccc12302b08c6000e0e262d64ce361031e0ab04" translate="yes" xml:space="preserve">
          <source>To resolve such a URL, it's necessary to remove the scheme beforehand:</source>
          <target state="translated">이러한 URL을 해결하려면 체계를 미리 제거해야합니다.</target>
        </trans-unit>
        <trans-unit id="d75ef3ec1110d073e8dd85d376695718f5646afd" translate="yes" xml:space="preserve">
          <source>To respond to clicks on the &lt;a href=&quot;qml-qtquick-controls2-swipedelegate&quot;&gt;SwipeDelegate&lt;/a&gt; itself, use its &lt;a href=&quot;qml-qtquick-controls2-abstractbutton#clicked-signal&quot;&gt;clicked()&lt;/a&gt; signal.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-controls2-swipedelegate&quot;&gt;SwipeDelegate&lt;/a&gt; 자체의 클릭에 응답하려면 &lt;a href=&quot;qml-qtquick-controls2-abstractbutton#clicked-signal&quot;&gt;clicked ()&lt;/a&gt; 신호를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="64d58c3d7d37b3c8f977577463f6949cfee15e4d" translate="yes" xml:space="preserve">
          <source>To restore geometry saved using &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;, you can use code like this:</source>
          <target state="translated">&lt;a href=&quot;qsettings&quot;&gt;QSettings를&lt;/a&gt; 사용하여 저장된 형상을 복원하려면 다음과 같은 코드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5b80ec36ed4a98d0d43de3fcae10ebba1e3b37ac" translate="yes" xml:space="preserve">
          <source>To restore the default network configuration set the network configuration to the value returned from &lt;a href=&quot;qnetworkconfigurationmanager#defaultConfiguration&quot;&gt;QNetworkConfigurationManager::defaultConfiguration&lt;/a&gt;().</source>
          <target state="translated">기본 네트워크 구성을 복원하려면 네트워크 구성을 &lt;a href=&quot;qnetworkconfigurationmanager#defaultConfiguration&quot;&gt;QNetworkConfigurationManager :: defaultConfiguration&lt;/a&gt; () 에서 리턴 된 값으로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="80b95619de770057cc4fddc28765d88e8523aee4" translate="yes" xml:space="preserve">
          <source>To restore the message handler, call &lt;code&gt;qInstallMessageHandler(0)&lt;/code&gt;.</source>
          <target state="translated">메시지 핸들러를 복원하려면 &lt;code&gt;qInstallMessageHandler(0)&lt;/code&gt; 호출 하십시오 .</target>
        </trans-unit>
        <trans-unit id="17974335d1d2d2ac666686d65e67c80e2461b06d" translate="yes" xml:space="preserve">
          <source>To restore the saved state, pass the return value and</source>
          <target state="translated">저장된 상태를 복원하려면 반환 값을 전달하고</target>
        </trans-unit>
        <trans-unit id="6f5797e3fc705f2f1c8ba903b8335ddcade92718" translate="yes" xml:space="preserve">
          <source>To restore the saved state, pass the return value to &lt;a href=&quot;qheaderview#restoreState&quot;&gt;restoreState&lt;/a&gt;().</source>
          <target state="translated">저장된 상태를 복원하려면 리턴 값을 &lt;a href=&quot;qheaderview#restoreState&quot;&gt;restoreState&lt;/a&gt; ()에 전달하십시오 .</target>
        </trans-unit>
        <trans-unit id="03f140f0708c3476da51d90c225039df55ebf8ab" translate="yes" xml:space="preserve">
          <source>To retrieve a single candidate string, call &lt;a href=&quot;qcompleter#completionPrefix-prop&quot;&gt;setCompletionPrefix&lt;/a&gt;() with the text that needs to be completed and call &lt;a href=&quot;qcompleter#currentCompletion&quot;&gt;currentCompletion&lt;/a&gt;(). You can iterate through the list of completions as below:</source>
          <target state="translated">단일 후보 문자열을 검색하려면 완료해야하는 텍스트로 &lt;a href=&quot;qcompleter#completionPrefix-prop&quot;&gt;setCompletionPrefix&lt;/a&gt; ()를 호출하고 &lt;a href=&quot;qcompleter#currentCompletion&quot;&gt;currentCompletion&lt;/a&gt; ()을 호출하십시오 . 다음과 같이 완료 목록을 반복 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f31ceceb5c5591e3e937b7dcb86a978a24b91af4" translate="yes" xml:space="preserve">
          <source>To retrieve results asynchronously, connect to the &lt;a href=&quot;qbluetoothdevicediscoveryagent#deviceDiscovered&quot;&gt;deviceDiscovered&lt;/a&gt;() signal. To get a list of all discovered devices, call &lt;a href=&quot;qbluetoothdevicediscoveryagent#discoveredDevices&quot;&gt;discoveredDevices&lt;/a&gt;() after the &lt;a href=&quot;qbluetoothdevicediscoveryagent#finished&quot;&gt;finished&lt;/a&gt;() signal.</source>
          <target state="translated">비동기 적으로 결과를 검색하려면 &lt;a href=&quot;qbluetoothdevicediscoveryagent#deviceDiscovered&quot;&gt;deviceDiscovered&lt;/a&gt; () 신호에 연결하십시오 . 발견 된 모든 장치의 목록을 얻으려면 &lt;a href=&quot;qbluetoothdevicediscoveryagent#finished&quot;&gt;완료&lt;/a&gt; () 신호 다음에 &lt;a href=&quot;qbluetoothdevicediscoveryagent#discoveredDevices&quot;&gt;discoverDevices&lt;/a&gt; ()를 호출 하십시오 .</target>
        </trans-unit>
        <trans-unit id="7b632de8df6719a26e27cb47b343bf0a4bec9471" translate="yes" xml:space="preserve">
          <source>To retrieve the instance, you can use &lt;a href=&quot;qvariant#qvariant_cast&quot;&gt;qvariant_cast&lt;/a&gt;:</source>
          <target state="translated">인스턴스를 검색하기 위해 &lt;a href=&quot;qvariant#qvariant_cast&quot;&gt;qvariant_cast&lt;/a&gt; 를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e5dc91419bdf35c045e6e9f54df9be47ab53a4e2" translate="yes" xml:space="preserve">
          <source>To retrieve the name of the local host, use the static &lt;a href=&quot;qhostinfo#localHostName&quot;&gt;QHostInfo::localHostName&lt;/a&gt;() function.</source>
          <target state="translated">로컬 호스트의 이름을 검색하려면 정적 &lt;a href=&quot;qhostinfo#localHostName&quot;&gt;QHostInfo :: localHostName&lt;/a&gt; () 함수를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="98a69fdd54276a2643fbcfb8300e0a3fd69b77ac" translate="yes" xml:space="preserve">
          <source>To retrieve the permissons for a directory, use the &lt;a href=&quot;qdir#entryInfoList&quot;&gt;entryInfoList&lt;/a&gt;() function to get the associated &lt;a href=&quot;qfileinfo&quot;&gt;QFileInfo&lt;/a&gt; objects and then use the QFileInfo::permissons() to obtain the permissions and ownership for each file.</source>
          <target state="translated">디렉토리에 대한 권한을 검색하려면 &lt;a href=&quot;qdir#entryInfoList&quot;&gt;entryInfoList&lt;/a&gt; () 함수를 사용하여 연관된 &lt;a href=&quot;qfileinfo&quot;&gt;QFileInfo&lt;/a&gt; 오브젝트를 가져온 다음 QFileInfo :: permissons ()를 사용하여 각 파일에 대한 권한 및 소유권을 확보하십시오.</target>
        </trans-unit>
        <trans-unit id="8d740df668787dabeea4c9050f73d7b4ecae1287" translate="yes" xml:space="preserve">
          <source>To retrieve the top level categories we use the &lt;a href=&quot;qplacemanager#childCategories&quot;&gt;QPlaceManager::childCategories&lt;/a&gt;() function but do not provide a category identifier.</source>
          <target state="translated">최상위 카테고리를 검색하기 위해 &lt;a href=&quot;qplacemanager#childCategories&quot;&gt;QPlaceManager :: childCategories&lt;/a&gt; () 함수를 사용하지만 카테고리 식별자는 제공하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="301c8599ed4e2148ec01a3f9309c4f8580e00ea0" translate="yes" xml:space="preserve">
          <source>To retrieve values from a query, &lt;a href=&quot;qsqlquery#value&quot;&gt;value&lt;/a&gt;() should be used since its index-based lookup is faster.</source>
          <target state="translated">쿼리에서 &lt;a href=&quot;qsqlquery#value&quot;&gt;값&lt;/a&gt; 을 검색하려면 인덱스 기반 조회가 더 빠르므로 value ()를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="f114d02c380f770276d07316fe3958c457eeff0c" translate="yes" xml:space="preserve">
          <source>To return from full-screen mode, call &lt;a href=&quot;qwidget#showNormal&quot;&gt;showNormal&lt;/a&gt;().</source>
          <target state="translated">전체 화면 모드에서 돌아가려면 &lt;a href=&quot;qwidget#showNormal&quot;&gt;showNormal&lt;/a&gt; ()을 호출 하십시오 .</target>
        </trans-unit>
        <trans-unit id="e9d2d426738b2ef826206cd5312ecf0c270e8702" translate="yes" xml:space="preserve">
          <source>To rotate the graph, hold down the right mouse button and move the mouse. Zooming is done using mouse wheel. Both assume the default input handler is in use.</source>
          <target state="translated">그래프를 회전하려면 마우스 오른쪽 버튼을 누른 상태에서 마우스를 움직입니다. 마우스 휠을 사용하여 확대 / 축소합니다. 둘 다 기본 입력 핸들러가 사용 중이라고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="faf053fda86937f709dbd23e090450b828e1ae11" translate="yes" xml:space="preserve">
          <source>To run QDoc in single execution mode, add &lt;code&gt;-single-exec&lt;/code&gt; to the command line and pass QDoc a master &lt;code&gt;qdocconf&lt;/code&gt; file that is simply a list of file paths for qdocconf files of all the Qt5 modules. For example:</source>
          <target state="translated">단일 실행 모드에서 QDoc을 실행하려면 명령 행 에 &lt;code&gt;-single-exec&lt;/code&gt; 를 추가 하고 모든 Qt5 모듈의 qdocconf 파일에 대한 파일 경로 목록 인 마스터 &lt;code&gt;qdocconf&lt;/code&gt; 파일을 QDoc에 전달하십시오. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="76f39f8063cc48f6eafc2328867bad942a20aacc" translate="yes" xml:space="preserve">
          <source>To run a function in another thread, use QtConcurrent::run():</source>
          <target state="translated">다른 스레드에서 함수를 실행하려면 QtConcurrent :: run ()을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="c17fa1519956cbfd9a6a69ceee1349ccad4ddbd4" translate="yes" xml:space="preserve">
          <source>To run a query set up with &lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt;, call one of the evaluation functions.</source>
          <target state="translated">&lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery로&lt;/a&gt; 설정된 쿼리를 실행하려면 평가 함수 중 하나를 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="26c07f96a13eec13286a78e391273783fe5668c7" translate="yes" xml:space="preserve">
          <source>To run an application with the Fusion style, see &lt;a href=&quot;qtquickcontrols2-styles#using-styles-in-qt-quick-controls-2&quot;&gt;Using Styles in Qt Quick Controls 2&lt;/a&gt;.</source>
          <target state="translated">Fusion 스타일로 애플리케이션을 실행하려면 &lt;a href=&quot;qtquickcontrols2-styles#using-styles-in-qt-quick-controls-2&quot;&gt;Qt Quick Controls 2에서 스타일 사용을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2eaf063a44e37cddb38cdb6aef7f9b4539314127" translate="yes" xml:space="preserve">
          <source>To run an application with the Imagine style, see &lt;a href=&quot;qtquickcontrols2-styles#using-styles-in-qt-quick-controls-2&quot;&gt;Using Styles in Qt Quick Controls 2&lt;/a&gt;.</source>
          <target state="translated">Imagine 스타일로 응용 프로그램을 실행하려면 &lt;a href=&quot;qtquickcontrols2-styles#using-styles-in-qt-quick-controls-2&quot;&gt;Qt Quick Controls 2에서 스타일 사용을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="aa686bc109ea11b8d0a8ca092a586b5859780e2d" translate="yes" xml:space="preserve">
          <source>To run an application with the Material style, see &lt;a href=&quot;qtquickcontrols2-styles#using-styles-in-qt-quick-controls-2&quot;&gt;Using Styles in Qt Quick Controls 2&lt;/a&gt;.</source>
          <target state="translated">머티리얼 스타일로 애플리케이션을 실행하려면 &lt;a href=&quot;qtquickcontrols2-styles#using-styles-in-qt-quick-controls-2&quot;&gt;Qt 퀵 컨트롤 2에서 스타일 사용을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2621857427f32875d53773918b0c6256a7157317" translate="yes" xml:space="preserve">
          <source>To run an application with the Universal style, see &lt;a href=&quot;qtquickcontrols2-styles#using-styles-in-qt-quick-controls-2&quot;&gt;Using Styles in Qt Quick Controls 2&lt;/a&gt;.</source>
          <target state="translated">범용 스타일로 응용 프로그램을 실행하려면 &lt;a href=&quot;qtquickcontrols2-styles#using-styles-in-qt-quick-controls-2&quot;&gt;Qt 빠른 컨트롤 2에서 스타일 사용을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fa84d73af734a236eb2c1d65cbcb2955c762e5f2" translate="yes" xml:space="preserve">
          <source>To run code in one of a &lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt;'s threads, reimplement &lt;a href=&quot;qrunnable#run&quot;&gt;QRunnable::run&lt;/a&gt;() and instantiate the subclassed &lt;a href=&quot;qrunnable&quot;&gt;QRunnable&lt;/a&gt;. Use &lt;a href=&quot;qthreadpool#start&quot;&gt;QThreadPool::start&lt;/a&gt;() to put the &lt;a href=&quot;qrunnable&quot;&gt;QRunnable&lt;/a&gt; in the &lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt;'s run queue. When a thread becomes available, the code within &lt;a href=&quot;qrunnable#run&quot;&gt;QRunnable::run&lt;/a&gt;() will execute in that thread.</source>
          <target state="translated">&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; 의 스레드 중 하나에서 코드를 실행하려면 &lt;a href=&quot;qrunnable#run&quot;&gt;QRunnable :: run&lt;/a&gt; ()을 다시 구현 하고 서브 클래스 &lt;a href=&quot;qrunnable&quot;&gt;QRunnable을&lt;/a&gt; 인스턴스화하십시오 . 사용 &lt;a href=&quot;qthreadpool#start&quot;&gt;QThreadPool :: 시작은&lt;/a&gt; ()에 넣어 &lt;a href=&quot;qrunnable&quot;&gt;QRunnable을&lt;/a&gt; 에 &lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; 의 실행 큐. 스레드가 사용 가능 해지면 &lt;a href=&quot;qrunnable#run&quot;&gt;QRunnable :: run&lt;/a&gt; () 내의 코드 가 해당 스레드에서 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="8010ec276c059111b8a503e306b3de8fe9e85674" translate="yes" xml:space="preserve">
          <source>To run qdoc, the project configuration file is supplied as an argument.</source>
          <target state="translated">qdoc을 실행하기 위해 프로젝트 구성 파일이 인수로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="81a18d49c7209db6d41a9da7f0b66f3110568d29" translate="yes" xml:space="preserve">
          <source>To run the emulator, the following dependencies are also necessary:</source>
          <target state="translated">에뮬레이터를 실행하려면 다음과 같은 종속성도 필요합니다.</target>
        </trans-unit>
        <trans-unit id="feba6d02fec904ca1f39bde7ed78b0b473b31b68" translate="yes" xml:space="preserve">
          <source>To run the installer, you need a Qt Account. You can use your Qt Account credentials to sign-in to all Qt services, including the forums and wiki. If you do not already have a Qt Account, you can create one during the installation process.</source>
          <target state="translated">설치 프로그램을 실행하려면 Qt 계정이 필요합니다. Qt 계정 자격 증명을 사용하여 포럼 및 위키를 포함한 모든 Qt 서비스에 로그인 할 수 있습니다. Qt 계정이없는 경우 설치 과정에서 계정을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a8fc222c6977e8c4b622da8c6e1179b9f92b5908" translate="yes" xml:space="preserve">
          <source>To save a form as an image, choose the &lt;b&gt;Save Image...&lt;/b&gt; option. The file will be saved in &lt;code&gt;.png&lt;/code&gt; format.</source>
          <target state="translated">양식을 이미지로 저장하려면 이미지 &lt;b&gt;저장 ...&lt;/b&gt; 옵션을 선택하십시오. 파일은 &lt;code&gt;.png&lt;/code&gt; 형식 으로 저장 됩니다.</target>
        </trans-unit>
        <trans-unit id="adf5710f3147d770530b0e8a94c68b95a6d1f2a7" translate="yes" xml:space="preserve">
          <source>To save the geometry when the window closes, you can implement a close event like this:</source>
          <target state="translated">창이 닫힐 때 지오메트리를 저장하려면 다음과 같이 close 이벤트를 구현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="657fcc107faeb4dc2548a4b026b5645c58172172" translate="yes" xml:space="preserve">
          <source>To save writing many nested scopes, you can nest scopes using the &lt;code&gt;:&lt;/code&gt; operator. The nested scopes in the above example can be rewritten in the following way:</source>
          <target state="translated">많은 중첩 범위 작성을 저장하기 위해 &lt;code&gt;:&lt;/code&gt; 연산자를 사용하여 범위를 중첩 할 수 있습니다 . 위 예제에서 중첩 범위는 다음과 같이 다시 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="740b79019e52ead788ce7271a3007ab284569676" translate="yes" xml:space="preserve">
          <source>To schedule a repaint, call the &lt;a href=&quot;qpaintdevicewindow#update-2&quot;&gt;update&lt;/a&gt;() function. Note that this will not immediately result in a call to &lt;a href=&quot;qopenglwindow#paintGL&quot;&gt;paintGL&lt;/a&gt;(). Calling &lt;a href=&quot;qpaintdevicewindow#update-2&quot;&gt;update&lt;/a&gt;() multiple times in a row will not change the behavior in any way.</source>
          <target state="translated">다시 그리기를 예약하려면 &lt;a href=&quot;qpaintdevicewindow#update-2&quot;&gt;update&lt;/a&gt; () 함수를 호출하십시오 . 이로 &lt;a href=&quot;qopenglwindow#paintGL&quot;&gt;인해 paintGL&lt;/a&gt; () 이 즉시 호출되지는 않습니다 . 한 번에 &lt;a href=&quot;qpaintdevicewindow#update-2&quot;&gt;update&lt;/a&gt; ()를 여러 번 호출 해도 동작은 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4112effc0505763565e689e43abce6a12702903b" translate="yes" xml:space="preserve">
          <source>To see examples on how to implement actions and methods, you could examine the implementations for Qt's standard widgets such as QAccessiblePushButton.</source>
          <target state="translated">액션과 메소드를 구현하는 방법에 대한 예제를 보려면 QAccessiblePushButton과 같은 Qt의 표준 위젯에 대한 구현을 조사 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ea954213c0b59ba32179e738434af803430a08b7" translate="yes" xml:space="preserve">
          <source>To see if your favorite Qt class has similar stream operators defined, check the &lt;b&gt;Related Non-Members&lt;/b&gt; section of the class's documentation page.</source>
          <target state="translated">선호하는 Qt 클래스에 유사한 스트림 연산자가 정의되어 있는지 확인 하려면 클래스 문서 페이지의 &lt;b&gt;관련 비회원&lt;/b&gt; 섹션을 확인 하십시오.</target>
        </trans-unit>
        <trans-unit id="a2d5f269d290a4fc1784f9011adeed78a671f7a5" translate="yes" xml:space="preserve">
          <source>To see the configuration options, run &lt;code&gt;qmlscene&lt;/code&gt; with the &lt;code&gt;-help&lt;/code&gt; argument.</source>
          <target state="translated">구성 옵션을 보려면 &lt;code&gt;-help&lt;/code&gt; 인수 와 함께 &lt;code&gt;qmlscene&lt;/code&gt; 을 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="387c460aab59a4761085ef8da897247d5ca40a43" translate="yes" xml:space="preserve">
          <source>To see the order in which events are received when using forwardTo, see &lt;a href=&quot;qml-qtquick-keys#key-handling-priorities&quot;&gt;Key Handling Priorities&lt;/a&gt;.</source>
          <target state="translated">forwardTo를 사용할 때 이벤트가 수신되는 순서를 보려면 &lt;a href=&quot;qml-qtquick-keys#key-handling-priorities&quot;&gt;키 처리 우선 순위를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6ada1b74eb9c990f8387bf96cd3bb81be4593870" translate="yes" xml:space="preserve">
          <source>To select (mark) text hold down the Shift key whilst pressing one of the movement keystrokes, for example,</source>
          <target state="translated">텍스트를 선택 (표시)하려면 Shift 키를 누른 상태에서 이동 키를 누른 상태에서</target>
        </trans-unit>
        <trans-unit id="83a3f7e991c5ff32e37902eff353c5567714c0a0" translate="yes" xml:space="preserve">
          <source>To select a new language, use the &lt;a href=&quot;qml-qtquick-virtualkeyboard-settings-virtualkeyboardsettings#locale-prop&quot;&gt;VirtualKeyboardSettings.locale&lt;/a&gt; property.</source>
          <target state="translated">새 언어를 선택하려면 &lt;a href=&quot;qml-qtquick-virtualkeyboard-settings-virtualkeyboardsettings#locale-prop&quot;&gt;VirtualKeyboardSettings.locale&lt;/a&gt; 속성을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="01f6b6be77da816361a14a66a2d3e9b1a30b5f39" translate="yes" xml:space="preserve">
          <source>To select additional objects, hold down the &lt;b&gt;Control&lt;/b&gt; key and click on them. If more than one object is selected, the current object will be displayed with resize handles of a different color.</source>
          <target state="translated">추가 객체를 선택하려면 &lt;b&gt;Control&lt;/b&gt; 키를 누른 상태에서 클릭하십시오. 둘 이상의 객체를 선택하면 현재 객체가 다른 색상의 크기 조정 핸들과 함께 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="7e00290ff9716d93bbc6824cab2592ce802d10bf" translate="yes" xml:space="preserve">
          <source>To select all items in a model, it is necessary to create a selection for each level of the model that covers all items in that level. We do this by retrieving the indexes corresponding to the top-left and bottom-right items with a given parent index:</source>
          <target state="translated">모델의 모든 항목을 선택하려면 해당 레벨의 모든 항목을 포함하는 모델의 각 레벨에 대한 선택을 작성해야합니다. 우리는 주어진 부모 인덱스로 왼쪽 위와 오른쪽 아래 항목에 해당하는 인덱스를 검색하여이를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="ab55f11c0c605de56bf8d152ca1e768df5f6b837" translate="yes" xml:space="preserve">
          <source>To select these items in the model, and see the corresponding change in the table view, we need to construct a selection object then apply it to the selection model:</source>
          <target state="translated">모델에서 이러한 항목을 선택하고 테이블보기에서 해당 변경 사항을 보려면 선택 오브젝트를 구성한 다음 선택 모델에 적용해야합니다.</target>
        </trans-unit>
        <trans-unit id="eef51061a6ed9bb97de593d90b78f46a795a0d72" translate="yes" xml:space="preserve">
          <source>To send events, for example mouse or keyboard events, to the scene, use &lt;a href=&quot;qcoreapplication#sendEvent&quot;&gt;QCoreApplication::sendEvent&lt;/a&gt;() with the &lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; instance as the receiver.</source>
          <target state="translated">마우스 또는 키보드 이벤트와 같은 이벤트를 장면으로 보내려면 &lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; 인스턴스를 수신기로하여 &lt;a href=&quot;qcoreapplication#sendEvent&quot;&gt;QCoreApplication :: sendEvent&lt;/a&gt; ()를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="fa9cf6864de2d8bdae98579d3f163308a991736b" translate="yes" xml:space="preserve">
          <source>To set &quot;What's This?&quot; help on a menu item (with or without a shortcut key), set the help on the item's action.</source>
          <target state="translated">&quot;무엇입니까?&quot;를 설정하려면 바로 가기 키가 있거나없는 메뉴 항목에 대한 도움말을 보려면 항목의 작업에 대한 도움말을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="f7d136789ae52fb9598afb09acf7a2bd8827d4fe" translate="yes" xml:space="preserve">
          <source>To set a &lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt; value as a 4x4 matrix in a shader, use &lt;code&gt;setUniformValue(location, QMatrix4x4(value))&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt; 값을 셰이더에서 4x4 행렬로 설정하려면 &lt;code&gt;setUniformValue(location, QMatrix4x4(value))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8c48c8a40e8eecd6a32b4700c2856d0171f5e191" translate="yes" xml:space="preserve">
          <source>To set a &lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt; value as a 4x4 matrix in a shader, use &lt;code&gt;setUniformValue(name, QMatrix4x4(value))&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt; 값을 셰이더에서 4x4 행렬로 설정하려면 &lt;code&gt;setUniformValue(name, QMatrix4x4(value))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d4f40d31fed3e23edc15483954b98d9007af6b89" translate="yes" xml:space="preserve">
          <source>To set a continuous byte stream mode, instantiate &lt;a href=&quot;qsctpsocket&quot;&gt;QSctpSocket&lt;/a&gt; and call &lt;a href=&quot;qsctpsocket#setMaximumChannelCount&quot;&gt;setMaximumChannelCount&lt;/a&gt;() with a negative value. This gives the ability to use &lt;a href=&quot;qsctpsocket&quot;&gt;QSctpSocket&lt;/a&gt; as a regular buffered &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;. You can call &lt;a href=&quot;qabstractsocket#connectToHost&quot;&gt;connectToHost&lt;/a&gt;() to initiate connection with endpoint, &lt;a href=&quot;qiodevice#write&quot;&gt;write&lt;/a&gt;() to transmit and &lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt;() to receive data from the peer, but you cannot distinguish message boundaries.</source>
          <target state="translated">연속 바이트 스트림 모드를 설정하려면 &lt;a href=&quot;qsctpsocket&quot;&gt;QSctpSocket을&lt;/a&gt; 인스턴스화 하고 음수 값으로 &lt;a href=&quot;qsctpsocket#setMaximumChannelCount&quot;&gt;setMaximumChannelCount&lt;/a&gt; ()를 호출하십시오 . 이를 통해 &lt;a href=&quot;qsctpsocket&quot;&gt;QSctpSocket&lt;/a&gt; 을 일반 버퍼링 된 &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt; 으로 사용할 수 있습니다 . &lt;a href=&quot;qabstractsocket#connectToHost&quot;&gt;connectToHost&lt;/a&gt; ()를 호출 하여 엔드 포인트와의 연결을 시작하고 &lt;a href=&quot;qiodevice#write&quot;&gt;쓰기&lt;/a&gt; ()를 전송 및 &lt;a href=&quot;qiodevice#read&quot;&gt;읽기&lt;/a&gt; ()하여 피어로부터 데이터를 수신 할 수 있지만 메시지 경계를 구별 할 수는 없습니다.</target>
        </trans-unit>
        <trans-unit id="9f53ea5a48de53c822c012aeefc61014f8be3030" translate="yes" xml:space="preserve">
          <source>To set a cursor shape use &lt;a href=&quot;qcursor#setShape&quot;&gt;QCursor::setShape&lt;/a&gt;() or use the &lt;a href=&quot;qcursor&quot;&gt;QCursor&lt;/a&gt; constructor which takes the shape as argument, or you can use one of the predefined cursors defined in the &lt;a href=&quot;qt#CursorShape-enum&quot;&gt;Qt::CursorShape&lt;/a&gt; enum.</source>
          <target state="translated">커서 모양을 설정하려면 &lt;a href=&quot;qcursor#setShape&quot;&gt;QCursor :: setShape&lt;/a&gt; ()를 사용하거나 모양을 인수로 사용하는 &lt;a href=&quot;qcursor&quot;&gt;QCursor&lt;/a&gt; 생성자를 사용하거나 &lt;a href=&quot;qt#CursorShape-enum&quot;&gt;Qt :: CursorShape&lt;/a&gt; 열거 형에 정의 된 사전 정의 된 커서 중 하나를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="69874207da40c8e57ed138d99db0538c16cf43f4" translate="yes" xml:space="preserve">
          <source>To set an arbitrary transform origin point use the &lt;a href=&quot;qml-qtquick-scale&quot;&gt;Scale&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-rotation&quot;&gt;Rotation&lt;/a&gt; transform types with &lt;a href=&quot;qml-qtquick-item#transform-prop&quot;&gt;transform&lt;/a&gt;.</source>
          <target state="translated">임의의 변형 원점을 설정하려면 &lt;a href=&quot;qml-qtquick-scale&quot;&gt;scale&lt;/a&gt; 또는 &lt;a href=&quot;qml-qtquick-rotation&quot;&gt;Rotation&lt;/a&gt; 변형 유형을 &lt;a href=&quot;qml-qtquick-item#transform-prop&quot;&gt;transform&lt;/a&gt; 과 함께 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="9e74fbab69caa9e4bc36beb8e1da3ff403d89ff6" translate="yes" xml:space="preserve">
          <source>To set an item as the current item without selecting it, call</source>
          <target state="translated">항목을 선택하지 않고 현재 항목으로 설정하려면</target>
        </trans-unit>
        <trans-unit id="5756c23b411752a7da105100cbd843b8260faf10" translate="yes" xml:space="preserve">
          <source>To set individual elements in the array, use the &lt;a href=&quot;qjsvalue#setProperty-1&quot;&gt;setProperty(quint32 arrayIndex, const QJSValue &amp;amp;value)&lt;/a&gt; overload. For example, to fill the array above with integers:</source>
          <target state="translated">배열에서 개별 요소를 설정하려면 &lt;a href=&quot;qjsvalue#setProperty-1&quot;&gt;setProperty (quint32 arrayIndex, const QJSValue &amp;amp; value)&lt;/a&gt; 오버로드를 사용하십시오. 예를 들어, 위의 배열을 정수로 채우려면 :</target>
        </trans-unit>
        <trans-unit id="ff62840c5182229261dd22a4c53ae6422f856183" translate="yes" xml:space="preserve">
          <source>To set only one property, the other can be set to &lt;code&gt;-1&lt;/code&gt;. For example, if you only want to animate the duration and not velocity, use the following code:</source>
          <target state="translated">하나의 특성 만 설정하기 위해 다른 특성을 &lt;code&gt;-1&lt;/code&gt; 로 설정할 수 있습니다 . 예를 들어 속도가 아닌 지속 시간에만 애니메이션을 적용하려면 다음 코드를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="84c632306b3da38aa41c054e86c9547b6c98182a" translate="yes" xml:space="preserve">
          <source>To set or get the position of the mouse cursor use the static methods &lt;a href=&quot;qcursor#pos&quot;&gt;QCursor::pos&lt;/a&gt;() and &lt;a href=&quot;qcursor#setPos&quot;&gt;QCursor::setPos&lt;/a&gt;().</source>
          <target state="translated">마우스 커서의 위치를 ​​설정하거나 가져 오려면 정적 메소드 &lt;a href=&quot;qcursor#pos&quot;&gt;QCursor :: pos&lt;/a&gt; () 및 &lt;a href=&quot;qcursor#setPos&quot;&gt;QCursor :: setPos&lt;/a&gt; ()를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="ad1e14311abaed179f60e85c9666e783bb25cb3d" translate="yes" xml:space="preserve">
          <source>To set or query properties the following functions are provided: &lt;a href=&quot;qxmlreader#setProperty&quot;&gt;QXmlReader::setProperty&lt;/a&gt;(), &lt;a href=&quot;qxmlreader#property&quot;&gt;QXmlReader::property&lt;/a&gt;() and &lt;a href=&quot;qxmlreader#hasProperty&quot;&gt;QXmlReader::hasProperty&lt;/a&gt;().</source>
          <target state="translated">속성을 설정하거나 쿼리하기 위해 &lt;a href=&quot;qxmlreader#setProperty&quot;&gt;QXmlReader :: setProperty&lt;/a&gt; (), &lt;a href=&quot;qxmlreader#property&quot;&gt;QXmlReader :: property&lt;/a&gt; () 및 &lt;a href=&quot;qxmlreader#hasProperty&quot;&gt;QXmlReader :: hasProperty&lt;/a&gt; () 함수가 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="83e2fbf9df9bb17ebc7d4c3cb3f0842c14429c8b" translate="yes" xml:space="preserve">
          <source>To set such a parameter, declare a &lt;a href=&quot;qml-qtlocation-pluginparameter&quot;&gt;PluginParameter&lt;/a&gt; inside a &lt;a href=&quot;location-places-qml#plugin&quot;&gt;Plugin&lt;/a&gt; object, and give it &lt;a href=&quot;qml-qtlocation-pluginparameter#name-prop&quot;&gt;name&lt;/a&gt; and &lt;a href=&quot;qml-qtlocation-pluginparameter#value-prop&quot;&gt;value&lt;/a&gt; properties. A list of valid parameter names for each plugin is available from the &lt;a href=&quot;qtlocation-index#plugin-references-and-parameters&quot;&gt;plugin reference pages&lt;/a&gt;.</source>
          <target state="translated">이러한 매개 변수를 설정하려면 &lt;a href=&quot;location-places-qml#plugin&quot;&gt;Plugin&lt;/a&gt; 객체 내에 &lt;a href=&quot;qml-qtlocation-pluginparameter&quot;&gt;PluginParameter를&lt;/a&gt; 선언하고 &lt;a href=&quot;qml-qtlocation-pluginparameter#name-prop&quot;&gt;이름&lt;/a&gt; 및 &lt;a href=&quot;qml-qtlocation-pluginparameter#value-prop&quot;&gt;값&lt;/a&gt; 속성을 지정하십시오. 각 플러그인의 유효한 매개 변수 이름 목록은 &lt;a href=&quot;qtlocation-index#plugin-references-and-parameters&quot;&gt;플러그인 참조 페이지&lt;/a&gt; 에서 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c570b9629a12a412d70288fd0a7d25be92044e41" translate="yes" xml:space="preserve">
          <source>To set the gradient stops, define them as children of the &lt;a href=&quot;qml-qtdatavisualization-colorgradient&quot;&gt;ColorGradient&lt;/a&gt;.</source>
          <target state="translated">그라데이션 중지 점을 설정하려면 &lt;a href=&quot;qml-qtdatavisualization-colorgradient&quot;&gt;ColorGradient의&lt;/a&gt; 자식으로 정의하십시오 .</target>
        </trans-unit>
        <trans-unit id="e8832bab5c4648d704fac44703f71ddc4b1762ad" translate="yes" xml:space="preserve">
          <source>To set the gradient stops, define them as children of the Gradient.</source>
          <target state="translated">그라디언트 스톱을 설정하려면 그라디언트의 하위로 정의하십시오.</target>
        </trans-unit>
        <trans-unit id="061a46bcaf8a6753e9a88ff9b74e803b1f3b051e" translate="yes" xml:space="preserve">
          <source>To set the item's ellipse, pass a &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; to &lt;a href=&quot;qgraphicsellipseitem&quot;&gt;QGraphicsEllipseItem&lt;/a&gt;'s constructor, or call &lt;a href=&quot;qgraphicsellipseitem#setRect&quot;&gt;setRect&lt;/a&gt;(). The &lt;a href=&quot;qgraphicsellipseitem#rect&quot;&gt;rect&lt;/a&gt;() function returns the current ellipse geometry.</source>
          <target state="translated">항목의 타원을 설정하려면 &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; 를 &lt;a href=&quot;qgraphicsellipseitem&quot;&gt;QGraphicsEllipseItem&lt;/a&gt; 의 생성자에 전달하거나 &lt;a href=&quot;qgraphicsellipseitem#setRect&quot;&gt;setRect&lt;/a&gt; ()를 호출 하십시오 . &lt;a href=&quot;qgraphicsellipseitem#rect&quot;&gt;RECT&lt;/a&gt; () 함수는 현재 타원 형상을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7391f1638e013db097fc80c158b3cce41bd56035" translate="yes" xml:space="preserve">
          <source>To set the item's line, pass a &lt;a href=&quot;qlinef&quot;&gt;QLineF&lt;/a&gt; to &lt;a href=&quot;qgraphicslineitem&quot;&gt;QGraphicsLineItem&lt;/a&gt;'s constructor, or call the &lt;a href=&quot;qgraphicslineitem#setLine&quot;&gt;setLine&lt;/a&gt;() function. The &lt;a href=&quot;qgraphicslineitem#line&quot;&gt;line&lt;/a&gt;() function returns the current line. By default the line is black with a width of 0, but you can change this by calling &lt;a href=&quot;qgraphicslineitem#setPen&quot;&gt;setPen&lt;/a&gt;().</source>
          <target state="translated">아이템 라인을 설정하려면 &lt;a href=&quot;qlinef&quot;&gt;QLineF&lt;/a&gt; 를 &lt;a href=&quot;qgraphicslineitem&quot;&gt;QGraphicsLineItem&lt;/a&gt; 생성자에 전달하거나 &lt;a href=&quot;qgraphicslineitem#setLine&quot;&gt;setLine&lt;/a&gt; () 함수를 호출하십시오 . &lt;a href=&quot;qgraphicslineitem#line&quot;&gt;라인&lt;/a&gt; () 함수는 현재 행을 반환합니다. 기본적으로 선은 너비가 0 인 검은 색이지만 &lt;a href=&quot;qgraphicslineitem#setPen&quot;&gt;setPen&lt;/a&gt; () 을 호출하여 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="db4dffe0dc7f4f180f9dac44388f85e4511d2009" translate="yes" xml:space="preserve">
          <source>To set the item's path, pass a &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; to &lt;a href=&quot;qgraphicspathitem&quot;&gt;QGraphicsPathItem&lt;/a&gt;'s constructor, or call the &lt;a href=&quot;qgraphicspathitem#setPath&quot;&gt;setPath&lt;/a&gt;() function. The &lt;a href=&quot;qgraphicspathitem#path&quot;&gt;path&lt;/a&gt;() function returns the current path.</source>
          <target state="translated">항목의 경로를 설정하려면 &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; 를 &lt;a href=&quot;qgraphicspathitem&quot;&gt;QGraphicsPathItem&lt;/a&gt; 의 생성자로 전달하거나 &lt;a href=&quot;qgraphicspathitem#setPath&quot;&gt;setPath&lt;/a&gt; () 함수를 호출하십시오 . &lt;a href=&quot;qgraphicspathitem#path&quot;&gt;경로&lt;/a&gt; () 함수는 현재 경로를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6c00e99aa772027e3ccc76894ae38b9ff4aa0cf2" translate="yes" xml:space="preserve">
          <source>To set the item's pixmap, pass a &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; to &lt;a href=&quot;qgraphicspixmapitem&quot;&gt;QGraphicsPixmapItem&lt;/a&gt;'s constructor, or call the &lt;a href=&quot;qgraphicspixmapitem#setPixmap&quot;&gt;setPixmap&lt;/a&gt;() function. The &lt;a href=&quot;qgraphicspixmapitem#pixmap&quot;&gt;pixmap&lt;/a&gt;() function returns the current pixmap.</source>
          <target state="translated">항목의 픽스맵을 설정하려면 &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; 을 &lt;a href=&quot;qgraphicspixmapitem&quot;&gt;QGraphicsPixmapItem&lt;/a&gt; 의 생성자에 전달하거나 &lt;a href=&quot;qgraphicspixmapitem#setPixmap&quot;&gt;setPixmap&lt;/a&gt; () 함수를 호출하십시오 . &lt;a href=&quot;qgraphicspixmapitem#pixmap&quot;&gt;픽스맵&lt;/a&gt; () 함수는 현재 픽스맵을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="44f4ee9f46b0b051febda9f8f589f38ea30da233" translate="yes" xml:space="preserve">
          <source>To set the item's polygon, pass a &lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; to &lt;a href=&quot;qgraphicspolygonitem&quot;&gt;QGraphicsPolygonItem&lt;/a&gt;'s constructor, or call the &lt;a href=&quot;qgraphicspolygonitem#setPolygon&quot;&gt;setPolygon&lt;/a&gt;() function. The &lt;a href=&quot;qgraphicspolygonitem#polygon&quot;&gt;polygon&lt;/a&gt;() function returns the current polygon.</source>
          <target state="translated">항목의 다각형을 설정하려면 &lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; 를 &lt;a href=&quot;qgraphicspolygonitem&quot;&gt;QGraphicsPolygonItem&lt;/a&gt; 의 생성자에 전달하거나 &lt;a href=&quot;qgraphicspolygonitem#setPolygon&quot;&gt;setPolygon&lt;/a&gt; () 함수를 호출하십시오 . &lt;a href=&quot;qgraphicspolygonitem#polygon&quot;&gt;폴리곤&lt;/a&gt; () 함수는 현재 다각형을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="87f5784688f2afd1aef4d7327f48ad6368ed3b7a" translate="yes" xml:space="preserve">
          <source>To set the item's rectangle, pass a &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; to &lt;a href=&quot;qgraphicsrectitem&quot;&gt;QGraphicsRectItem&lt;/a&gt;'s constructor, or call the &lt;a href=&quot;qgraphicsrectitem#setRect&quot;&gt;setRect&lt;/a&gt;() function. The &lt;a href=&quot;qgraphicsrectitem#rect&quot;&gt;rect&lt;/a&gt;() function returns the current rectangle.</source>
          <target state="translated">항목의 사각형을 설정하려면 &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; 를 &lt;a href=&quot;qgraphicsrectitem&quot;&gt;QGraphicsRectItem&lt;/a&gt; 의 생성자에 전달하거나 &lt;a href=&quot;qgraphicsrectitem#setRect&quot;&gt;setRect&lt;/a&gt; () 함수를 호출하십시오 . &lt;a href=&quot;qgraphicsrectitem#rect&quot;&gt;RECT&lt;/a&gt; () 함수는 현재 사각형을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1c8fc84a401eb2427dff60845c0f471b47250427" translate="yes" xml:space="preserve">
          <source>To set the item's text, pass a &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; to &lt;a href=&quot;qgraphicstextitem&quot;&gt;QGraphicsTextItem&lt;/a&gt;'s constructor, or call &lt;a href=&quot;qgraphicstextitem#setHtml&quot;&gt;setHtml&lt;/a&gt;()/&lt;a href=&quot;qgraphicstextitem#setPlainText&quot;&gt;setPlainText&lt;/a&gt;().</source>
          <target state="translated">항목의 텍스트를 설정하려면 &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; 을 &lt;a href=&quot;qgraphicstextitem&quot;&gt;QGraphicsTextItem&lt;/a&gt; 의 생성자에 전달하거나 &lt;a href=&quot;qgraphicstextitem#setHtml&quot;&gt;setHtml&lt;/a&gt; () / &lt;a href=&quot;qgraphicstextitem#setPlainText&quot;&gt;setPlainText&lt;/a&gt; ()를 호출 하십시오 .</target>
        </trans-unit>
        <trans-unit id="587f0fd211f7b78a3e68f7e794a9eac713cc32cf" translate="yes" xml:space="preserve">
          <source>To set the item's text, you can either pass a &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; to &lt;a href=&quot;qgraphicssimpletextitem&quot;&gt;QGraphicsSimpleTextItem&lt;/a&gt;'s constructor, or call &lt;a href=&quot;qgraphicssimpletextitem#setText&quot;&gt;setText&lt;/a&gt;() to change the text later. To set the text fill color, call &lt;a href=&quot;qabstractgraphicsshapeitem#setBrush&quot;&gt;setBrush&lt;/a&gt;().</source>
          <target state="translated">항목의 텍스트를 설정하려면 &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; 을 &lt;a href=&quot;qgraphicssimpletextitem&quot;&gt;QGraphicsSimpleTextItem&lt;/a&gt; 의 생성자로 전달하거나 &lt;a href=&quot;qgraphicssimpletextitem#setText&quot;&gt;setText&lt;/a&gt; ()를 호출 하여 나중에 텍스트를 변경할 수 있습니다. 텍스트 채우기 색상을 설정하려면 &lt;a href=&quot;qabstractgraphicsshapeitem#setBrush&quot;&gt;setBrush&lt;/a&gt; ()를 호출 하십시오 .</target>
        </trans-unit>
        <trans-unit id="d916691cc9eb71bea7a6f2a778d879468953d17f" translate="yes" xml:space="preserve">
          <source>To set the layout direction based on the &lt;a href=&quot;qtquick-positioning-righttoleft#default-layout-direction&quot;&gt;default layout direction&lt;/a&gt; of the application, use the following code:</source>
          <target state="translated">응용 프로그램 의 &lt;a href=&quot;qtquick-positioning-righttoleft#default-layout-direction&quot;&gt;기본 레이아웃 방향&lt;/a&gt; 을 기준으로 레이아웃 방향을 설정하려면 다음 코드를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="eccb229829bfa9f57f9793f404bde79fa899ca61" translate="yes" xml:space="preserve">
          <source>To set the model on which &lt;a href=&quot;qcompleter&quot;&gt;QCompleter&lt;/a&gt; should operate, call &lt;a href=&quot;qcompleter#setModel&quot;&gt;setModel&lt;/a&gt;(). By default, &lt;a href=&quot;qcompleter&quot;&gt;QCompleter&lt;/a&gt; will attempt to match the &lt;a href=&quot;qcompleter#completionPrefix-prop&quot;&gt;completion prefix&lt;/a&gt; (i.e., the word that the user has started typing) against the &lt;a href=&quot;qt#ItemDataRole-enum&quot;&gt;Qt::EditRole&lt;/a&gt; data stored in column 0 in the model case sensitively. This can be changed using &lt;a href=&quot;qcompleter#completionRole-prop&quot;&gt;setCompletionRole&lt;/a&gt;(), &lt;a href=&quot;qcompleter#completionColumn-prop&quot;&gt;setCompletionColumn&lt;/a&gt;(), and &lt;a href=&quot;qcompleter#caseSensitivity-prop&quot;&gt;setCaseSensitivity&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qcompleter&quot;&gt;QCompleter&lt;/a&gt; 가 작동 해야하는 모델을 설정하려면 &lt;a href=&quot;qcompleter#setModel&quot;&gt;setModel&lt;/a&gt; ()을 호출하십시오 . 기본적으로 &lt;a href=&quot;qcompleter&quot;&gt;QCompleter&lt;/a&gt; 는 모델 케이스의 0 열에 저장된 &lt;a href=&quot;qt#ItemDataRole-enum&quot;&gt;Qt :: EditRole&lt;/a&gt; 데이터와 대소 문자를 구분하여 &lt;a href=&quot;qcompleter#completionPrefix-prop&quot;&gt;접두사&lt;/a&gt; (즉, 사용자가 입력하기 시작한 단어) 를 일치 시키려고 시도 합니다. 이것은 &lt;a href=&quot;qcompleter#completionRole-prop&quot;&gt;setCompletionRole&lt;/a&gt; (), &lt;a href=&quot;qcompleter#completionColumn-prop&quot;&gt;setCompletionColumn&lt;/a&gt; () 및 &lt;a href=&quot;qcompleter#caseSensitivity-prop&quot;&gt;setCaseSensitivity&lt;/a&gt; ()를 사용하여 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="25aca77bc8cba7ebf1fe31e73a6d8925ae6f65cc" translate="yes" xml:space="preserve">
          <source>To set the scheme, the following call is used:</source>
          <target state="translated">체계를 설정하려면 다음 호출이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d62fa8d99c112b8a3751341565b723b5a0cfaa13" translate="yes" xml:space="preserve">
          <source>To set the size of the minor tickmarks, specify an &lt;a href=&quot;qml-qtquick-item#implicitWidth-prop&quot;&gt;implicitWidth&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-item#implicitHeight-prop&quot;&gt;implicitHeight&lt;/a&gt;.</source>
          <target state="translated">작은 눈금의 크기를 설정하려면 &lt;a href=&quot;qml-qtquick-item#implicitWidth-prop&quot;&gt;implicitWidth&lt;/a&gt; 및 &lt;a href=&quot;qml-qtquick-item#implicitHeight-prop&quot;&gt;implicitHeight를&lt;/a&gt; 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="069ea43437d6360614bbc10e8d01b9d929eaabdf" translate="yes" xml:space="preserve">
          <source>To set the size of the tickmarks, specify an &lt;a href=&quot;qml-qtquick-item#implicitWidth-prop&quot;&gt;implicitWidth&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-item#implicitHeight-prop&quot;&gt;implicitHeight&lt;/a&gt;.</source>
          <target state="translated">눈금의 크기를 설정하려면 &lt;a href=&quot;qml-qtquick-item#implicitWidth-prop&quot;&gt;implicitWidth&lt;/a&gt; 및 &lt;a href=&quot;qml-qtquick-item#implicitHeight-prop&quot;&gt;implicitHeight를&lt;/a&gt; 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="dd524d036c8a4f5cddad01412bc6de37c11220b5" translate="yes" xml:space="preserve">
          <source>To set the value to NULL, use &lt;a href=&quot;qsqlfield#clear&quot;&gt;clear&lt;/a&gt;().</source>
          <target state="translated">값을 NULL로 설정하려면 &lt;a href=&quot;qsqlfield#clear&quot;&gt;clear&lt;/a&gt; ()를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="a1ce87cc40a0b03b8c578fd75cf3bf38eba46af8" translate="yes" xml:space="preserve">
          <source>To set the visibility to &lt;a href=&quot;qwindow#Visibility-enum&quot;&gt;AutomaticVisibility&lt;/a&gt; means to give the window a default visible state, which might be &lt;a href=&quot;qwindow#Visibility-enum&quot;&gt;FullScreen&lt;/a&gt; or &lt;a href=&quot;qwindow#Visibility-enum&quot;&gt;Windowed&lt;/a&gt; depending on the platform. However when reading the visibility property you will always get the actual state, never &lt;code&gt;AutomaticVisibility&lt;/code&gt;.</source>
          <target state="translated">가시성을 &lt;a href=&quot;qwindow#Visibility-enum&quot;&gt;AutomaticVisibility로&lt;/a&gt; 설정 한다는 것은 창에 기본 표시 상태를 제공하는 것으로 플랫폼에 따라 &lt;a href=&quot;qwindow#Visibility-enum&quot;&gt;FullScreen&lt;/a&gt; 또는 &lt;a href=&quot;qwindow#Visibility-enum&quot;&gt;Windowed&lt;/a&gt; 일 수 있습니다. 그러나 가시성 속성을 읽을 때 항상 &lt;code&gt;AutomaticVisibility&lt;/code&gt; 상태가 아닌 실제 상태를 얻습니다 .</target>
        </trans-unit>
        <trans-unit id="c1aafea08b3c916e1992413898c75c9f79481775" translate="yes" xml:space="preserve">
          <source>To set the visibility to &lt;a href=&quot;qwindow#Visibility-enum&quot;&gt;AutomaticVisibility&lt;/a&gt; means to give the window a default visible state, which might be fullscreen or windowed depending on the platform. When reading the visibility property you will always get the actual state, never &lt;a href=&quot;qwindow#Visibility-enum&quot;&gt;AutomaticVisibility&lt;/a&gt;.</source>
          <target state="translated">가시성을 &lt;a href=&quot;qwindow#Visibility-enum&quot;&gt;AutomaticVisibility로&lt;/a&gt; 설정 한다는 것은 창에 기본 표시 상태를 제공하는 것으로 플랫폼에 따라 전체 화면 또는 창이 표시 될 수 있습니다. 가시성 속성을 읽을 때 항상 &lt;a href=&quot;qwindow#Visibility-enum&quot;&gt;AutomaticVisibility가&lt;/a&gt; 아닌 실제 상태를 얻습니다 .</target>
        </trans-unit>
        <trans-unit id="0d6d3a9a9257b6f0202e1e54ab22cd17fead68eb" translate="yes" xml:space="preserve">
          <source>To set up a manual tab focus chain, see &lt;a href=&quot;qml-qtquick-keynavigation&quot;&gt;KeyNavigation&lt;/a&gt;. Tab key events used by Keys or &lt;a href=&quot;qml-qtquick-keynavigation&quot;&gt;KeyNavigation&lt;/a&gt; have precedence over focus chain behavior; ignore the events in other key handlers to allow it to propagate.</source>
          <target state="translated">수동 탭 포커스 체인을 설정하려면 &lt;a href=&quot;qml-qtquick-keynavigation&quot;&gt;KeyNavigation을&lt;/a&gt; 참조하십시오 . Keys 또는 &lt;a href=&quot;qml-qtquick-keynavigation&quot;&gt;KeyNavigation에서&lt;/a&gt; 사용하는 탭 키 이벤트 는 포커스 체인 동작보다 우선합니다. 다른 키 핸들러의 이벤트를 무시하여 전파되도록하십시오.</target>
        </trans-unit>
        <trans-unit id="01c4ad4edfdba3b201f1ef8c84325ca2b659e814" translate="yes" xml:space="preserve">
          <source>To set up sharing between &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt; instances belonging to different windows, set the &lt;a href=&quot;qt#ApplicationAttribute-enum&quot;&gt;Qt::AA_ShareOpenGLContexts&lt;/a&gt; application attribute before instantiating &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt;. This will trigger sharing between all &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt; instances without any further steps.</source>
          <target state="translated">다른 창에 속하는 &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt; 인스턴스 간에 공유를 설정하려면 &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt; 을 인스턴스화하기 전에 &lt;a href=&quot;qt#ApplicationAttribute-enum&quot;&gt;Qt :: AA_ShareOpenGLContexts&lt;/a&gt; 애플리케이션 속성을 설정하십시오 . 추가 단계없이 모든 &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt; 인스턴스 간의 공유가 트리거됩니다 .</target>
        </trans-unit>
        <trans-unit id="034c0e0fe9d9ff64eff3b21ad06690f5712f2144" translate="yes" xml:space="preserve">
          <source>To set/get the default horizontal alignment of &lt;a href=&quot;qml-qtquick-controls-textarea&quot;&gt;TextArea&lt;/a&gt;, use the property &lt;code&gt;horizontalAlignment&lt;/code&gt;.</source>
          <target state="translated">설정하려면 /의 기본 수평 정렬 얻을 &lt;a href=&quot;qml-qtquick-controls-textarea&quot;&gt;텍스트 영역을&lt;/a&gt; , 속성 사용 &lt;code&gt;horizontalAlignment&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d52ba65fb99d53387a22a3723f50a76c2a635201" translate="yes" xml:space="preserve">
          <source>To share an action between a menu and a toolbar, drag its icon from the action editor to the toolbar rather than from the menu where its entry is located. See &lt;a href=&quot;#adding-an-action&quot;&gt;Adding an Action&lt;/a&gt; for more information about this process.</source>
          <target state="translated">메뉴와 도구 모음간에 조치를 공유하려면 해당 항목이있는 메뉴가 아니라 조치 편집기에서 도구 모음으로 아이콘을 끌어 오십시오. 이 프로세스에 대한 자세한 정보 &lt;a href=&quot;#adding-an-action&quot;&gt;는 조치 추가를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="12d78a9f9e3b90f51a061c86d0ee458532d95585" translate="yes" xml:space="preserve">
          <source>To show a color dialog, construct an instance of &lt;a href=&quot;qml-qt-labs-platform-colordialog&quot;&gt;ColorDialog&lt;/a&gt;, set the desired properties, and call &lt;a href=&quot;qml-qt-labs-platform-dialog#open-method&quot;&gt;open()&lt;/a&gt;. The &lt;a href=&quot;qml-qt-labs-platform-colordialog#currentColor-prop&quot;&gt;currentColor&lt;/a&gt; property can be used to determine the currently selected color in the dialog. The &lt;a href=&quot;qml-qt-labs-platform-colordialog#color-prop&quot;&gt;color&lt;/a&gt; property is updated only after the final selection has been made by accepting the dialog.</source>
          <target state="translated">색상 대화 상자를 표시하려면 &lt;a href=&quot;qml-qt-labs-platform-colordialog&quot;&gt;ColorDialog&lt;/a&gt; 인스턴스를 구성 하고 원하는 속성을 설정 한 다음 &lt;a href=&quot;qml-qt-labs-platform-dialog#open-method&quot;&gt;open ()을&lt;/a&gt; 호출하십시오 . &lt;a href=&quot;qml-qt-labs-platform-colordialog#currentColor-prop&quot;&gt;CurrentColor에의&lt;/a&gt; 속성은 대화 상자에서 현재 선택한 색상을 결정하는 데 사용할 수 있습니다. &lt;a href=&quot;qml-qt-labs-platform-colordialog#color-prop&quot;&gt;색&lt;/a&gt; 속성은 최종 선택 대화 상자를 받아 만든 후에 만 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="71729f75e4443319235925fd9226815efc10e752" translate="yes" xml:space="preserve">
          <source>To show a file dialog, construct an instance of &lt;a href=&quot;qml-qt-labs-platform-filedialog&quot;&gt;FileDialog&lt;/a&gt;, set the desired properties, and call &lt;a href=&quot;qml-qt-labs-platform-dialog#open-method&quot;&gt;open()&lt;/a&gt;. The &lt;a href=&quot;qml-qt-labs-platform-filedialog#currentFile-prop&quot;&gt;currentFile&lt;/a&gt; or &lt;a href=&quot;qml-qt-labs-platform-filedialog#currentFiles-prop&quot;&gt;currentFiles&lt;/a&gt; properties can be used to determine the currently selected file(s) in the dialog. The &lt;a href=&quot;qml-qt-labs-platform-filedialog#file-prop&quot;&gt;file&lt;/a&gt; and &lt;a href=&quot;qml-qt-labs-platform-filedialog#files-prop&quot;&gt;files&lt;/a&gt; properties are updated only after the final selection has been made by accepting the dialog.</source>
          <target state="translated">파일 대화 상자를 표시하려면 &lt;a href=&quot;qml-qt-labs-platform-filedialog&quot;&gt;FileDialog&lt;/a&gt; 인스턴스를 생성 하고 원하는 속성을 설정 한 다음 &lt;a href=&quot;qml-qt-labs-platform-dialog#open-method&quot;&gt;open ()을&lt;/a&gt; 호출하십시오 . &lt;a href=&quot;qml-qt-labs-platform-filedialog#currentFile-prop&quot;&gt;currentFile&lt;/a&gt; 또는 &lt;a href=&quot;qml-qt-labs-platform-filedialog#currentFiles-prop&quot;&gt;currentFiles&lt;/a&gt; 속성 대화 상자에서 현재 선택된 파일을 확인하는 데 사용할 수 있습니다. &lt;a href=&quot;qml-qt-labs-platform-filedialog#file-prop&quot;&gt;파일&lt;/a&gt; 및 &lt;a href=&quot;qml-qt-labs-platform-filedialog#files-prop&quot;&gt;파일&lt;/a&gt; 속성은 최종 선택 대화 상자를 받아 만든 후에 만 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="c6ab49efa2c138d458a1399fedd68c2a5f3304f8" translate="yes" xml:space="preserve">
          <source>To show a folder dialog, construct an instance of &lt;a href=&quot;qml-qt-labs-platform-folderdialog&quot;&gt;FolderDialog&lt;/a&gt;, set the desired properties, and call &lt;a href=&quot;qml-qt-labs-platform-dialog#open-method&quot;&gt;open()&lt;/a&gt;. The &lt;a href=&quot;qml-qt-labs-platform-folderdialog#currentFolder-prop&quot;&gt;currentFolder&lt;/a&gt; property can be used to determine the currently selected folder in the dialog. The &lt;a href=&quot;qml-qt-labs-platform-folderdialog#folder-prop&quot;&gt;folder&lt;/a&gt; property is updated only after the final selection has been made by accepting the dialog.</source>
          <target state="translated">폴더 대화 상자를 표시하려면 &lt;a href=&quot;qml-qt-labs-platform-folderdialog&quot;&gt;FolderDialog&lt;/a&gt; 인스턴스를 생성 하고 원하는 속성을 설정 한 다음 &lt;a href=&quot;qml-qt-labs-platform-dialog#open-method&quot;&gt;open ()을&lt;/a&gt; 호출하십시오 . &lt;a href=&quot;qml-qt-labs-platform-folderdialog#currentFolder-prop&quot;&gt;currentFolder의&lt;/a&gt; 속성은 대화 상자에서 현재 선택한 폴더를 확인하는 데 사용할 수 있습니다. &lt;a href=&quot;qml-qt-labs-platform-folderdialog#folder-prop&quot;&gt;폴더&lt;/a&gt; 속성은 최종 선택 대화 상자를 받아 만든 후에 만 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="e9ed6039ad770d1428b099b03e4736029a600ee6" translate="yes" xml:space="preserve">
          <source>To show a font dialog, construct an instance of &lt;a href=&quot;qml-qt-labs-platform-fontdialog&quot;&gt;FontDialog&lt;/a&gt;, set the desired properties, and call &lt;a href=&quot;qml-qt-labs-platform-dialog#open-method&quot;&gt;open()&lt;/a&gt;. The &lt;a href=&quot;qml-qt-labs-platform-fontdialog#currentFont-prop&quot;&gt;currentFont&lt;/a&gt; property can be used to determine the currently selected font in the dialog. The &lt;a href=&quot;qml-qt-labs-platform-fontdialog#font-prop&quot;&gt;font&lt;/a&gt; property is updated only after the final selection has been made by accepting the dialog.</source>
          <target state="translated">글꼴 대화 상자를 표시하려면 &lt;a href=&quot;qml-qt-labs-platform-fontdialog&quot;&gt;FontDialog&lt;/a&gt; 인스턴스를 생성 하고 원하는 속성을 설정 한 다음 &lt;a href=&quot;qml-qt-labs-platform-dialog#open-method&quot;&gt;open ()을&lt;/a&gt; 호출하십시오 . &lt;a href=&quot;qml-qt-labs-platform-fontdialog#currentFont-prop&quot;&gt;currentFont의&lt;/a&gt; 속성은 대화 상자에서 현재 선택한 글꼴을 확인하는 데 사용할 수 있습니다. &lt;a href=&quot;qml-qt-labs-platform-fontdialog#font-prop&quot;&gt;글꼴&lt;/a&gt; 속성은 최종 선택 대화 상자를 받아 만든 후에 만 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="c1d11e62870bad9a2050193f62497908b10ce192" translate="yes" xml:space="preserve">
          <source>To show a message dialog, construct an instance of &lt;a href=&quot;qml-qt-labs-platform-messagedialog&quot;&gt;MessageDialog&lt;/a&gt;, set the desired properties, and call &lt;a href=&quot;qml-qt-labs-platform-dialog#open-method&quot;&gt;open()&lt;/a&gt;.</source>
          <target state="translated">메시지 대화 상자를 표시하려면 &lt;a href=&quot;qml-qt-labs-platform-messagedialog&quot;&gt;MessageDialog&lt;/a&gt; 의 인스턴스를 구성 하고 원하는 속성을 설정 한 다음 &lt;a href=&quot;qml-qt-labs-platform-dialog#open-method&quot;&gt;open ()을&lt;/a&gt; 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="d39302e102fd32e71d3964641a606110a61c7374" translate="yes" xml:space="preserve">
          <source>To show a native dialog, construct an instance of one of the concrete Dialog implementations, set the desired properties, and call &lt;a href=&quot;qml-qt-labs-platform-dialog#open-method&quot;&gt;open()&lt;/a&gt;. Dialog emits &lt;a href=&quot;qml-qt-labs-platform-dialog#accepted-signal&quot;&gt;accepted()&lt;/a&gt; or &lt;a href=&quot;qml-qt-labs-platform-dialog#rejected-signal&quot;&gt;rejected()&lt;/a&gt; when the user is done with the dialog.</source>
          <target state="translated">기본 대화 상자를 표시하려면 구체적인 Dialog 구현 중 하나의 인스턴스를 구성하고 원하는 특성을 설정 한 후 &lt;a href=&quot;qml-qt-labs-platform-dialog#open-method&quot;&gt;open ()을&lt;/a&gt; 호출하십시오 . 대화를 방출은 &lt;a href=&quot;qml-qt-labs-platform-dialog#accepted-signal&quot;&gt;()를 수용&lt;/a&gt; 또는 &lt;a href=&quot;qml-qt-labs-platform-dialog#rejected-signal&quot;&gt;() 거부&lt;/a&gt; 사용자가 대화 상자가 완료되면.</target>
        </trans-unit>
        <trans-unit id="474bae090b1b4ad6eddb58dd990af0ff53114ff1" translate="yes" xml:space="preserve">
          <source>To show the user where the item currently being dragged will be placed if dropped, set the view's &lt;a href=&quot;qabstractitemview#showDropIndicator-prop&quot;&gt;showDropIndicator&lt;/a&gt; property. This provides the user with continuously updating information about item placement within the view.</source>
          <target state="translated">놓을 경우 현재 끌고있는 항목이있는 위치를 사용자에게 표시하려면보기의 &lt;a href=&quot;qabstractitemview#showDropIndicator-prop&quot;&gt;showDropIndicator&lt;/a&gt; 속성을 설정하십시오 . 이를 통해 사용자는보기 내의 항목 배치에 대한 정보를 지속적으로 업데이트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1d6b729f39a0d778d1390b62b1b22e0037272a87" translate="yes" xml:space="preserve">
          <source>To show this in practice, we review the source code for the implicitly shared &lt;code&gt;Employee&lt;/code&gt; class. In the header file we define the two classes &lt;code&gt;Employee&lt;/code&gt; and &lt;code&gt;EmployeeData&lt;/code&gt;.</source>
          <target state="translated">실제로이를 보여주기 위해 암시 적으로 공유 된 &lt;code&gt;Employee&lt;/code&gt; 클래스 의 소스 코드를 검토합니다 . 헤더 파일에서 &lt;code&gt;Employee&lt;/code&gt; 와 &lt;code&gt;EmployeeData&lt;/code&gt; 의 두 클래스를 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="ec028b5bea51403f894a79512d68b65fac732666" translate="yes" xml:space="preserve">
          <source>To signify that a document is an article, you append the article keyword to the \page command:</source>
          <target state="translated">문서가 기사임을 나타 내기 위해 기사 키워드를 \ page 명령에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="5cd6c16df56cfe8a544abfbd6c403c5179b933e1" translate="yes" xml:space="preserve">
          <source>To simplify binding and maintaining larger data sets, a context object can be set on a &lt;a href=&quot;qqmlcontext&quot;&gt;QQmlContext&lt;/a&gt;. All the properties of the context object are available by name in the context, as though they were all individually added through calls to &lt;a href=&quot;qqmlcontext#setContextProperty&quot;&gt;QQmlContext::setContextProperty&lt;/a&gt;(). Changes to the property's values are detected through the property's notify signal. Setting a context object is both faster and easier than manually adding and maintaining context property values.</source>
          <target state="translated">더 큰 데이터 세트의 바인딩 및 유지 보수를 단순화하기 위해 &lt;a href=&quot;qqmlcontext&quot;&gt;QQmlContext&lt;/a&gt; 에 컨텍스트 오브젝트를 설정할 수 있습니다 . 컨텍스트 오브젝트의 모든 특성은 &lt;a href=&quot;qqmlcontext#setContextProperty&quot;&gt;QQmlContext :: setContextProperty&lt;/a&gt; ()에 대한 호출을 통해 개별적으로 추가 된 것처럼 컨텍스트에서 이름으로 사용 가능합니다 . 속성 값의 변경은 속성의 알림 신호를 통해 감지됩니다. 컨텍스트 속성 값을 수동으로 추가하고 유지 관리하는 것보다 컨텍스트 개체를 설정하는 것이 더 빠르고 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="8dcda5108eab727100439171d3b81357d07b893d" translate="yes" xml:space="preserve">
          <source>To simplify interaction with items using a transformed view, &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; provides mapTo... and mapFrom... functions that can translate between items' and the scene's coordinates. For example, you can call &lt;a href=&quot;qgraphicsitem#mapToScene&quot;&gt;mapToScene&lt;/a&gt;() to map an item coordiate to a scene coordinate, or &lt;a href=&quot;qgraphicsitem#mapFromScene&quot;&gt;mapFromScene&lt;/a&gt;() to map from scene coordinates to item coordinates.</source>
          <target state="translated">변환 된 뷰를 사용하여 항목과의 상호 작용을 단순화하기 위해 &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; 은 항목과 장면 좌표간에 변환 할 수있는 mapTo ... 및 mapFrom ... 함수를 제공합니다. 예를 들어 &lt;a href=&quot;qgraphicsitem#mapToScene&quot;&gt;mapToScene&lt;/a&gt; ()을 호출 하여 항목 좌표를 장면 좌표에 매핑 하거나 &lt;a href=&quot;qgraphicsitem#mapFromScene&quot;&gt;mapFromScene&lt;/a&gt; ()을 사용하여 장면 좌표에서 항목 좌표로 매핑 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9dbe3d702108cae56c138601d5a2e9e05e21bd36" translate="yes" xml:space="preserve">
          <source>To simplify interation with items using a transformed view, &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; provides &lt;a href=&quot;qwidget#mapTo&quot;&gt;mapTo&lt;/a&gt;... and &lt;a href=&quot;qwidget#mapFrom&quot;&gt;mapFrom&lt;/a&gt;... functions that can translate between scene and view coordinates. For example, you can call &lt;a href=&quot;qgraphicsview#mapToScene&quot;&gt;mapToScene&lt;/a&gt;() to map a view coordiate to a floating point scene coordinate, or &lt;a href=&quot;qgraphicsview#mapFromScene&quot;&gt;mapFromScene&lt;/a&gt;() to map from floating point scene coordinates to view coordinates.</source>
          <target state="translated">변환 된 뷰를 사용하여 항목과의 상호 작용을 단순화하기 위해 &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; 는 장면과 뷰 좌표 사이를 변환 할 수있는 &lt;a href=&quot;qwidget#mapTo&quot;&gt;mapTo&lt;/a&gt; ... 및 &lt;a href=&quot;qwidget#mapFrom&quot;&gt;mapFrom&lt;/a&gt; ... 기능을 제공합니다 . 예를 들어 &lt;a href=&quot;qgraphicsview#mapToScene&quot;&gt;mapToScene&lt;/a&gt; ()을 호출 하여 뷰 좌표를 부동 소수점 장면 좌표 에 매핑 하거나 &lt;a href=&quot;qgraphicsview#mapFromScene&quot;&gt;mapFromScene&lt;/a&gt; ()을 사용하여 부동 소수점 장면 좌표에서 뷰 좌표로 매핑 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="57598bda0e6694e6cad632af86c2fae4b551dea2" translate="yes" xml:space="preserve">
          <source>To simplify interation with items using a transformed view, &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; provides &lt;a href=&quot;qwidget#mapTo&quot;&gt;mapTo&lt;/a&gt;... and &lt;a href=&quot;qwidget#mapFrom&quot;&gt;mapFrom&lt;/a&gt;... functions that can translate between scene and view coordinates. For example, you can call &lt;a href=&quot;qgraphicsview#mapToScene&quot;&gt;mapToScene&lt;/a&gt;() to map a view coordinate to a floating point scene coordinate, or &lt;a href=&quot;qgraphicsview#mapFromScene&quot;&gt;mapFromScene&lt;/a&gt;() to map from floating point scene coordinates to view coordinates.</source>
          <target state="translated">변환 된 뷰를 사용하여 항목과의 상호 작용을 단순화하기 위해 &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; 는 장면과 뷰 좌표 사이를 변환 할 수있는 &lt;a href=&quot;qwidget#mapTo&quot;&gt;mapTo&lt;/a&gt; ... 및 &lt;a href=&quot;qwidget#mapFrom&quot;&gt;mapFrom&lt;/a&gt; ... 기능을 제공합니다 . 예를 들어 &lt;a href=&quot;qgraphicsview#mapToScene&quot;&gt;mapToScene&lt;/a&gt; ()을 호출 하여 뷰 좌표를 부동 소수점 장면 좌표 에 매핑 하거나 &lt;a href=&quot;qgraphicsview#mapFromScene&quot;&gt;mapFromScene&lt;/a&gt; ()을 사용하여 부동 소수점 장면 좌표에서 뷰 좌표에 매핑 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6e12dc82e4ef2269cf9a3dadd1da6b316999cffb" translate="yes" xml:space="preserve">
          <source>To simulate a sequence of touch events on a specific device for a window or widget, call &lt;a href=&quot;qtest#touchEvent&quot;&gt;QTest::touchEvent&lt;/a&gt; to create a &lt;a href=&quot;qtest-qtoucheventsequence&quot;&gt;QTouchEventSequence&lt;/a&gt; instance. Add touch events to the sequence by calling &lt;a href=&quot;qtest-qtoucheventsequence#press&quot;&gt;press&lt;/a&gt;(), &lt;a href=&quot;qtest-qtoucheventsequence#move&quot;&gt;move&lt;/a&gt;(), &lt;a href=&quot;qtest-qtoucheventsequence#release&quot;&gt;release&lt;/a&gt;() and &lt;a href=&quot;qtest-qtoucheventsequence#stationary&quot;&gt;stationary&lt;/a&gt;(), and let the instance run out of scope to commit the sequence to the event system.</source>
          <target state="translated">창이나 위젯에 대해 특정 장치에서 일련의 터치 이벤트를 시뮬레이션하려면 &lt;a href=&quot;qtest#touchEvent&quot;&gt;QTest :: touchEvent&lt;/a&gt; 를 호출 하여 &lt;a href=&quot;qtest-qtoucheventsequence&quot;&gt;QTouchEventSequence&lt;/a&gt; 인스턴스 를 작성하십시오 . &lt;a href=&quot;qtest-qtoucheventsequence#press&quot;&gt;프레스&lt;/a&gt; (), &lt;a href=&quot;qtest-qtoucheventsequence#move&quot;&gt;이동&lt;/a&gt; (), &lt;a href=&quot;qtest-qtoucheventsequence#release&quot;&gt;릴리스&lt;/a&gt; () 및 &lt;a href=&quot;qtest-qtoucheventsequence#stationary&quot;&gt;고정&lt;/a&gt; () 을 호출하여 터치 이벤트를 시퀀스에 추가 하고 인스턴스가 범위를 벗어나 이벤트 시퀀스에 시퀀스를 커밋하도록합니다.</target>
        </trans-unit>
        <trans-unit id="9dfe1b2df557306e9615c93910faf54c2c481a32" translate="yes" xml:space="preserve">
          <source>To skip the post-processing step, also set the &lt;code&gt;qaxserver_no_postlink&lt;/code&gt; configuration.</source>
          <target state="translated">사후 처리 단계를 건너 뛰려면 &lt;code&gt;qaxserver_no_postlink&lt;/code&gt; 구성 도 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="0890ac3690cc3e62db27d971329d2444400b2e61" translate="yes" xml:space="preserve">
          <source>To solve this problem, QML introduces a concept known as a</source>
          <target state="translated">이 문제를 해결하기 위해 QML은</target>
        </trans-unit>
        <trans-unit id="84bd264dac6221c57df0588e686273701a1f917f" translate="yes" xml:space="preserve">
          <source>To solve this problem, a QWindowsWindowFunction can be used to enable a native Windows flag which will set &lt;code&gt;WS_BORDER&lt;/code&gt; when showing in full screen mode. This can be utilized as follows:</source>
          <target state="translated">이 문제를 해결하기 위해 QWindowsWindowFunction을 사용하여 전체 화면 모드로 표시 할 때 &lt;code&gt;WS_BORDER&lt;/code&gt; 를 설정하는 기본 Windows 플래그를 사용할 수 있습니다 . 이것은 다음과 같이 활용 될 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="6e82604c703aadd313f71d9e180c259c4952eb2b" translate="yes" xml:space="preserve">
          <source>To solve this problem, the model/view framework uses proxy models to manage the information supplied between individual models and views. Proxy models are components that behave like ordinary models from the perspective of a view, and access data from source models on behalf of that view. The signals and slots used by the model/view framework ensure that each view is updated appropriately no matter how many proxy models are placed between itself and the source model.</source>
          <target state="translated">이 문제를 해결하기 위해 모델 / 뷰 프레임 워크는 프록시 모델을 사용하여 개별 모델과 뷰간에 제공되는 정보를 관리합니다. 프록시 모델은보기 관점에서 일반 모델처럼 작동하고 해당보기 대신 소스 모델의 데이터에 액세스하는 구성 요소입니다. 모델 / 뷰 프레임 워크에서 사용하는 신호 및 슬롯은 소스 모델과 소스 모델 사이에 프록시 모델 수에 관계없이 각 뷰가 적절하게 업데이트되도록합니다.</target>
        </trans-unit>
        <trans-unit id="c60a655e10c297046db74a287893a4657a33ba59" translate="yes" xml:space="preserve">
          <source>To sort the model, you can use &lt;a href=&quot;qabstractitemmodel#sort&quot;&gt;sort&lt;/a&gt;().</source>
          <target state="translated">모델을 정렬하려면, 당신이 사용할 수있는 &lt;a href=&quot;qabstractitemmodel#sort&quot;&gt;종류의&lt;/a&gt; ().</target>
        </trans-unit>
        <trans-unit id="3eeb0c559edbf750f79f0828b87e8a3726c85cdb" translate="yes" xml:space="preserve">
          <source>To specify a path containing spaces, quote the path using the technique described in &lt;a href=&quot;qmake-project-files#whitespace&quot;&gt;Whitespace&lt;/a&gt;.</source>
          <target state="translated">공백이 포함 된 경로를 지정하려면 &lt;a href=&quot;qmake-project-files#whitespace&quot;&gt;공백에&lt;/a&gt; 설명 된 기술을 사용하여 경로를 인용하십시오 .</target>
        </trans-unit>
        <trans-unit id="0c48b21c10573e2a264dea371254b7ddff165494" translate="yes" xml:space="preserve">
          <source>To specify a prefix for a file name, prepend the prefix followed by a single colon (e.g., &quot;images:undo.png&quot;, &quot;xmldocs:books.xml&quot;).</source>
          <target state="translated">파일 이름의 접두사를 지정하려면 접두사 뒤에 단일 콜론을 추가하십시오 (예 : &quot;images : undo.png&quot;, &quot;xmldocs : books.xml&quot;).</target>
        </trans-unit>
        <trans-unit id="3346a542382eae5a86e880b742328e298a629ee9" translate="yes" xml:space="preserve">
          <source>To specify a relative path to a local directory:</source>
          <target state="translated">로컬 디렉토리의 상대 경로를 지정하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="e545fbaadb3b69bbde547c14aac9d4eddbbd8b02" translate="yes" xml:space="preserve">
          <source>To specify a resource file you must enable the resource editor by opening the &lt;b&gt;Tools&lt;/b&gt; menu, and switching on the &lt;b&gt;Resource Browser&lt;/b&gt; option.</source>
          <target state="translated">리소스 파일을 지정하려면 &lt;b&gt;도구&lt;/b&gt; 메뉴 를 열고 &lt;b&gt;리소스 브라우저&lt;/b&gt; 옵션을 &lt;b&gt;켜서&lt;/b&gt; 리소스 편집기를 활성화해야합니다 .</target>
        </trans-unit>
        <trans-unit id="35035e0edf62baf5ecb6820217e25b7360c33864" translate="yes" xml:space="preserve">
          <source>To specify additional search paths in project files, use &lt;a href=&quot;#libs&quot;&gt;LIBS&lt;/a&gt; like that, instead:</source>
          <target state="translated">프로젝트 파일에 추가 검색 경로를 지정하려면 대신 &lt;a href=&quot;#libs&quot;&gt;LIBS&lt;/a&gt; 를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="1f21ec14504f11bdc55c4492d35a9bba2b6d4a82" translate="yes" xml:space="preserve">
          <source>To specify an easing curve you need to specify at least the type. For some curves you can also specify amplitude, period and/or overshoot (more details provided after the table). The default easing curve is &lt;code&gt;Easing.Linear&lt;/code&gt;.</source>
          <target state="translated">여유 곡선을 지정하려면 최소한 유형을 지정해야합니다. 일부 곡선의 경우 진폭,주기 및 / 또는 오버 슈트를 지정할 수도 있습니다 (자세한 내용은 표 다음에 제공). 기본 여유 곡선은 &lt;code&gt;Easing.Linear&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d9ff38837a7ea116a36039fd78691d73de16f78b" translate="yes" xml:space="preserve">
          <source>To specify an easing curve you need to specify at least the type. For some curves you can also specify amplitude, period and/or overshoot. The default easing curve is Linear.</source>
          <target state="translated">여유 곡선을 지정하려면 최소한 유형을 지정해야합니다. 일부 곡선의 경우 진폭,주기 및 / 또는 오버 슈트를 지정할 수도 있습니다. 기본 여유 곡선은 선형입니다.</target>
        </trans-unit>
        <trans-unit id="b55c8f792411648a6b1e6b210856ad80cbeb4b3a" translate="yes" xml:space="preserve">
          <source>To specify an easing curve you need to specify at least the type. For some curves you can also specify amplitude, period, overshoot or custom bezierCurve data. The default easing curve is &lt;code&gt;Easing.Linear&lt;/code&gt;.</source>
          <target state="translated">여유 곡선을 지정하려면 최소한 유형을 지정해야합니다. 일부 곡선의 경우 진폭,주기, 오버 슈트 또는 사용자 지정 bezierCurve 데이터를 지정할 수도 있습니다. 기본 여유 곡선은 &lt;code&gt;Easing.Linear&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c136a976e0449347c6070972df1785288009f156" translate="yes" xml:space="preserve">
          <source>To specify layout functions for the form's margin and spacing, check the &lt;b&gt;Layout Function&lt;/b&gt; group box to enable the line edits.</source>
          <target state="translated">양식의 여백 및 간격에 대한 레이아웃 기능을 지정하려면 &lt;b&gt;레이아웃 기능&lt;/b&gt; 그룹 상자를 선택하여 선 편집을 활성화하십시오.</target>
        </trans-unit>
        <trans-unit id="6310bae4a9abdb8764d23aa8dd3c2ba64094c463" translate="yes" xml:space="preserve">
          <source>To specify libraries in a project file, use &lt;a href=&quot;#libs&quot;&gt;LIBS&lt;/a&gt; instead.</source>
          <target state="translated">프로젝트 파일에서 라이브러리를 지정하려면 대신 &lt;a href=&quot;#libs&quot;&gt;LIBS를&lt;/a&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="cef33dbb768004e1ae60d3b67b7fe2372c07789c" translate="yes" xml:space="preserve">
          <source>To specify private libraries in a library project file, use &lt;a href=&quot;#libs-private&quot;&gt;LIBS_PRIVATE&lt;/a&gt; instead.</source>
          <target state="translated">라이브러리 프로젝트 파일에서 개인 라이브러리를 지정하려면 대신 &lt;a href=&quot;#libs-private&quot;&gt;LIBS_PRIVATE를&lt;/a&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="5504f767acf757dcf5f76e49d05a524bb92d9ce9" translate="yes" xml:space="preserve">
          <source>To specify that an image should be loaded by an image provider, use the &lt;b&gt;&quot;image:&quot;&lt;/b&gt; scheme for the URL source of the image, followed by the identifiers of the image provider and the requested image. For example:</source>
          <target state="translated">이미지 제공자가 이미지를로드하도록 지정하려면 이미지 의 URL 소스에 &lt;b&gt;&quot;image :&quot;&lt;/b&gt; 스킴을 사용하고 이미지 제공자 의 식별자 및 요청 된 이미지를 사용하십시오. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="129ff86d1373f6aac61895fe9c95304a28982bf6" translate="yes" xml:space="preserve">
          <source>To specify that the &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; will react to multiple buttons, &lt;a href=&quot;qt#MouseButton-enum&quot;&gt;Qt::MouseButtons&lt;/a&gt; flag values are combined using the &quot;|&quot; (or) operator:</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; 가 여러 버튼에 반응하도록 지정하기 위해 &lt;a href=&quot;qt#MouseButton-enum&quot;&gt;Qt :: MouseButtons&lt;/a&gt; 플래그 값은 &quot;|&quot; (또는) 연산자 :</target>
        </trans-unit>
        <trans-unit id="1857cbb7066a66a4a1747a66d5e39c6089f70938" translate="yes" xml:space="preserve">
          <source>To specify the location of a server, use the CODEBASE attribute in the OBJECT tag of your web-site. The value can point to the server file itself, to an INF file listing other files the server requires (e.g. the Qt DLL), or a compressed CAB archive.</source>
          <target state="translated">서버의 위치를 ​​지정하려면 웹 사이트의 OBJECT 태그에서 CODEBASE 속성을 사용하십시오. 이 값은 서버 파일 자체, 서버에 필요한 다른 파일 (예 : Qt DLL) 또는 압축 된 CAB 아카이브를 나열하는 INF 파일을 가리킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8cfe9e57af5c38f5f3595c0979fe0e2147668e27" translate="yes" xml:space="preserve">
          <source>To specify the rectangle, it requires a &lt;a href=&quot;qml-qtlocation-maprectangle#topLeft-prop&quot;&gt;topLeft&lt;/a&gt; and &lt;a href=&quot;qml-qtlocation-maprectangle#bottomRight-prop&quot;&gt;bottomRight&lt;/a&gt; point, both given by a &lt;a href=&quot;qml-coordinate&quot;&gt;coordinate&lt;/a&gt;.</source>
          <target state="translated">사각형을 지정하려면 &lt;a href=&quot;qml-coordinate&quot;&gt;좌표에&lt;/a&gt; 의해 지정된 &lt;a href=&quot;qml-qtlocation-maprectangle#topLeft-prop&quot;&gt;topLeft&lt;/a&gt; 및 &lt;a href=&quot;qml-qtlocation-maprectangle#bottomRight-prop&quot;&gt;bottomRight&lt;/a&gt; 포인트 가 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="40a52e8cffdce1eee35ed71af0879cd00219e085" translate="yes" xml:space="preserve">
          <source>To specify the style and color of lines and outlines, use the &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;'s &lt;a href=&quot;qpen&quot;&gt;pen&lt;/a&gt; combined with &lt;a href=&quot;qt#PenStyle-enum&quot;&gt;Qt::PenStyle&lt;/a&gt; and &lt;a href=&quot;qt#GlobalColor-enum&quot;&gt;Qt::GlobalColor&lt;/a&gt;:</source>
          <target state="translated">사용, 선, 윤곽의 스타일과 색상을 지정하려면 &lt;a href=&quot;qpainter&quot;&gt;QPainter를&lt;/a&gt; 의 &lt;a href=&quot;qpen&quot;&gt;펜&lt;/a&gt; 과 함께 &lt;a href=&quot;qt#PenStyle-enum&quot;&gt;Qt는 :: PenStyle&lt;/a&gt; 와 &lt;a href=&quot;qt#GlobalColor-enum&quot;&gt;Qt는 :: GlobalColor를&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="7656f79f83810d490b78e1988007f5eac22de6f5" translate="yes" xml:space="preserve">
          <source>To start a computation, use one of the APIs in the &lt;a href=&quot;qtconcurrent-index&quot;&gt;Qt Concurrent&lt;/a&gt; framework.</source>
          <target state="translated">계산을 시작하려면 &lt;a href=&quot;qtconcurrent-index&quot;&gt;Qt Concurrent&lt;/a&gt; 프레임 워크 에서 API 중 하나를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="a8c378962136265b66dbf6a3c002cccbe95b16cd" translate="yes" xml:space="preserve">
          <source>To start a drag from an item, create a &lt;a href=&quot;qdrag&quot;&gt;QDrag&lt;/a&gt; object, passing a pointer to the widget that starts the drag. Items can be observed by many views at the same time, but only one view can start the drag. Drags are in most cases started as a result of pressing or moving the mouse, so in mousePressEvent() or mouseMoveEvent(), you can get the originating widget pointer from the event. For example:</source>
          <target state="translated">항목에서 드래그를 시작하려면 드래그를 시작하는 위젯에 포인터를 전달하여 &lt;a href=&quot;qdrag&quot;&gt;QDrag&lt;/a&gt; 객체를 만듭니다 . 많은 뷰에서 동시에 항목을 볼 수 있지만 하나의 뷰만 드래그를 시작할 수 있습니다. 대부분의 경우 마우스를 누르거나 움직이면 드래그가 시작되므로 mousePressEvent () 또는 mouseMoveEvent ()에서는 이벤트에서 원래 위젯 포인터를 가져올 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e8f7e82e0b3188fc04a7621f02019209a9dbf12a" translate="yes" xml:space="preserve">
          <source>To start a drag, create a &lt;a href=&quot;qdrag&quot;&gt;QDrag&lt;/a&gt; object, and call its exec() function. In most applications, it is a good idea to begin a drag and drop operation only after a mouse button has been pressed and the cursor has been moved a certain distance. However, the simplest way to enable dragging from a widget is to reimplement the widget's &lt;a href=&quot;qwidget#mousePressEvent&quot;&gt;mousePressEvent()&lt;/a&gt; and start a drag and drop operation:</source>
          <target state="translated">드래그를 시작하려면 &lt;a href=&quot;qdrag&quot;&gt;QDrag&lt;/a&gt; 객체를 만들고 exec () 함수를 호출하십시오. 대부분의 응용 프로그램에서는 마우스 버튼을 누르고 커서를 일정 거리만큼 이동 한 후에 만 ​​드래그 앤 드롭 작업을 시작하는 것이 좋습니다. 그러나 위젯에서 드래그를 활성화하는 가장 간단한 방법은 위젯의 &lt;a href=&quot;qwidget#mousePressEvent&quot;&gt;mousePressEvent ()&lt;/a&gt; 를 다시 구현하고 드래그 앤 드롭 작업을 시작하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="85ec5a6cf778da62e136c4057f68658caf8edd56" translate="yes" xml:space="preserve">
          <source>To start a process, pass the name and command line arguments of the program you want to run as arguments to &lt;a href=&quot;qprocess#start&quot;&gt;start&lt;/a&gt;(). Arguments are supplied as individual strings in a &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt;.</source>
          <target state="translated">프로세스를 시작하려면 실행할 인수로 실행할 프로그램의 이름 및 명령 행 인수를 전달하여 &lt;a href=&quot;qprocess#start&quot;&gt;시작하십시오&lt;/a&gt; (). 인수는 &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; 에서 개별 문자열로 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="ec55cc9fc62d63b86b8930cbf8185f96c71e483b" translate="yes" xml:space="preserve">
          <source>To start a top-level animation group, you simply use the &lt;a href=&quot;qabstractanimation#start&quot;&gt;start()&lt;/a&gt; function from &lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation&lt;/a&gt;. By a top-level animation group, we think of a group that itself is not contained within another group. Starting sub groups directly is not supported, and may lead to unexpected behavior.</source>
          <target state="translated">최상위 애니메이션 그룹을 시작하려면 &lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation&lt;/a&gt; 의 &lt;a href=&quot;qabstractanimation#start&quot;&gt;start ()&lt;/a&gt; 함수를 사용하면 됩니다. 최상위 애니메이션 그룹에서는 그룹 자체가 다른 그룹에 포함되지 않은 그룹을 생각합니다. 하위 그룹을 직접 시작하는 것은 지원되지 않으며 예기치 않은 동작이 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c94556b9382ed54894af0dd84a15e528118af92a" translate="yes" xml:space="preserve">
          <source>To start at another page than the page with the lowest ID, call &lt;a href=&quot;qwizard#startId-prop&quot;&gt;setStartId&lt;/a&gt;().</source>
          <target state="translated">ID가 가장 낮은 페이지가 아닌 다른 페이지에서 시작하려면 &lt;a href=&quot;qwizard#startId-prop&quot;&gt;setStartId&lt;/a&gt; ()를 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="420072f9c8f654c269ce68fbd7e572dce58e9c54" translate="yes" xml:space="preserve">
          <source>To start the process of restoring purchases, call the &lt;a href=&quot;qinappstore#restorePurchases&quot;&gt;QInAppStore::restorePurchases&lt;/a&gt;() function. This emits the &lt;a href=&quot;qinappstore#transactionReady&quot;&gt;QInAppStore::transactionReady&lt;/a&gt;() signal for each of the application's unlockable products that were purchased previously by the current user. The status of these transactions will be &lt;a href=&quot;qinapptransaction#TransactionStatus-enum&quot;&gt;QInAppTransaction::PurchaseRestored&lt;/a&gt;.</source>
          <target state="translated">구매 복구 프로세스를 시작하려면 &lt;a href=&quot;qinappstore#restorePurchases&quot;&gt;QInAppStore :: restorePurchases&lt;/a&gt; () 함수를 호출하십시오 . 이것은 방출 &lt;a href=&quot;qinappstore#transactionReady&quot;&gt;QInAppStore :: transactionReady&lt;/a&gt; 현재 사용자가 이전에 구입 한 응용 프로그램의 잠금 해제 각 제품의 () 신호를. 이러한 트랜잭션의 상태는 &lt;a href=&quot;qinapptransaction#TransactionStatus-enum&quot;&gt;QInAppTransaction :: PurchaseRestored&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ea4b611b1a6307b87a8584d6fb48284ea0fdde97" translate="yes" xml:space="preserve">
          <source>To start the process of restoring purchases, you should call the restorePurchases() method in the &lt;a href=&quot;qml-qtpurchasing-store&quot;&gt;Store&lt;/a&gt; object. This will cause the onPurchaseRestored handler to be called in each of the application's unlockable products that has previously been purchased by the current user.</source>
          <target state="translated">구매 복구 프로세스를 시작하려면 &lt;a href=&quot;qml-qtpurchasing-store&quot;&gt;Store&lt;/a&gt; 오브젝트 에서 restorePurchases () 메소드를 호출해야 합니다. 이로 인해 현재 사용자가 이전에 구매 한 각 응용 프로그램의 잠금 해제 가능한 제품에서 onPurchaseRestored 핸들러가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="0d72b8fc568c51fec8123ea8efb181ac03bdc0f7" translate="yes" xml:space="preserve">
          <source>To state the problem more formally, using States and Behaviors together can cause unexpected behavior when:</source>
          <target state="translated">문제를보다 공식적으로 설명하기 위해 다음과 같은 경우 상태와 동작을 함께 사용하면 예기치 않은 동작이 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e3d843022091463e248a1657150850cf239ec969" translate="yes" xml:space="preserve">
          <source>To store an image, you start by constructing a &lt;a href=&quot;qimagewriter&quot;&gt;QImageWriter&lt;/a&gt; object. Pass either a file name or a device pointer, and the image format to &lt;a href=&quot;qimagewriter&quot;&gt;QImageWriter&lt;/a&gt;'s constructor. You can then set several options, such as the gamma level (by calling &lt;a href=&quot;qimagewriter#setGamma&quot;&gt;setGamma&lt;/a&gt;()) and quality (by calling &lt;a href=&quot;qimagewriter#setQuality&quot;&gt;setQuality&lt;/a&gt;()). &lt;a href=&quot;qimagewriter#canWrite&quot;&gt;canWrite&lt;/a&gt;() returns &lt;code&gt;true&lt;/code&gt; if &lt;a href=&quot;qimagewriter&quot;&gt;QImageWriter&lt;/a&gt; can write the image (i.e., the image format is supported and the device is open for writing). Call &lt;a href=&quot;qimagewriter#write&quot;&gt;write&lt;/a&gt;() to write the image to the device.</source>
          <target state="translated">이미지를 저장하려면 먼저 &lt;a href=&quot;qimagewriter&quot;&gt;QImageWriter&lt;/a&gt; 객체 를 구성하십시오 . 파일 이름이나 장치 포인터 및 이미지 형식을 &lt;a href=&quot;qimagewriter&quot;&gt;QImageWriter&lt;/a&gt; 의 생성자에 전달하십시오. 그런 다음 감마 레벨 ( &lt;a href=&quot;qimagewriter#setGamma&quot;&gt;setGamma&lt;/a&gt; () 호출 ) 및 품질 ( &lt;a href=&quot;qimagewriter#setQuality&quot;&gt;setQuality&lt;/a&gt; () 호출)과 같은 몇 가지 옵션을 설정할 수 있습니다 . &lt;a href=&quot;qimagewriter#canWrite&quot;&gt;canWrite&lt;/a&gt; ()는 &lt;a href=&quot;qimagewriter&quot;&gt;QImageWriter&lt;/a&gt; 가 이미지를 쓸 수있는 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 (즉, 이미지 형식이 지원되고 디바이스가 쓰기 위해 열려 있음). 이미지를 장치에 쓰려면 &lt;a href=&quot;qimagewriter#write&quot;&gt;write&lt;/a&gt; ()를 호출 하십시오.</target>
        </trans-unit>
        <trans-unit id="20893195962fbd627c933d0c81a7c8d0ea367c59" translate="yes" xml:space="preserve">
          <source>To style a button in Qt Quick Controls 2:</source>
          <target state="translated">Qt Quick Controls 2에서 버튼 스타일을 지정하려면 :</target>
        </trans-unit>
        <trans-unit id="a7e69f212adb059d4de637b8ca4025ac03b9dca7" translate="yes" xml:space="preserve">
          <source>To style individual sections of the menu, use the &lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle#menuItem-prop&quot;&gt;menuItem&lt;/a&gt; component:</source>
          <target state="translated">메뉴의 개별 섹션 스타일을 지정하려면 &lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle#menuItem-prop&quot;&gt;menuItem&lt;/a&gt; 구성 요소를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="93b9ff68b94ed04a953808de1201686a3e2c296b" translate="yes" xml:space="preserve">
          <source>To subclass &lt;a href=&quot;qabstractbutton&quot;&gt;QAbstractButton&lt;/a&gt;, you must reimplement at least &lt;a href=&quot;qabstractbutton#paintEvent&quot;&gt;paintEvent&lt;/a&gt;() to draw the button's outline and its text or pixmap. It is generally advisable to reimplement &lt;a href=&quot;qwidget#sizeHint-prop&quot;&gt;sizeHint&lt;/a&gt;() as well, and sometimes &lt;a href=&quot;qabstractbutton#hitButton&quot;&gt;hitButton&lt;/a&gt;() (to determine whether a button press is within the button). For buttons with more than two states (like tri-state buttons), you will also have to reimplement &lt;a href=&quot;qabstractbutton#checkStateSet&quot;&gt;checkStateSet&lt;/a&gt;() and &lt;a href=&quot;qabstractbutton#nextCheckState&quot;&gt;nextCheckState&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qabstractbutton&quot;&gt;QAbstractButton&lt;/a&gt; 을 서브 클래 싱하려면 최소한 &lt;a href=&quot;qabstractbutton#paintEvent&quot;&gt;paintEvent&lt;/a&gt; ()를 다시 구현 하여 버튼의 외곽선과 텍스트 또는 픽스맵을 그려야합니다. 일반적으로 &lt;a href=&quot;qwidget#sizeHint-prop&quot;&gt;sizeHint&lt;/a&gt; () 를 다시 구현 하고 때로는 &lt;a href=&quot;qabstractbutton#hitButton&quot;&gt;buttonButton&lt;/a&gt; 이 버튼 내에 있는지 여부를 확인하기 위해 hitButton () 을 다시 구현하는 것이 좋습니다 . 상태가 3 개 이상인 상태가 3 개 이상인 버튼의 경우 &lt;a href=&quot;qabstractbutton#checkStateSet&quot;&gt;checkStateSet&lt;/a&gt; () 및 &lt;a href=&quot;qabstractbutton#nextCheckState&quot;&gt;nextCheckState&lt;/a&gt; () 를 다시 구현해야합니다 .</target>
        </trans-unit>
        <trans-unit id="a7860d026fa9322b6ee12c5adfed72a2d4a653cd" translate="yes" xml:space="preserve">
          <source>To subclass &lt;a href=&quot;qabstractproxymodel&quot;&gt;QAbstractProxyModel&lt;/a&gt;, you need to implement &lt;a href=&quot;qabstractproxymodel#mapFromSource&quot;&gt;mapFromSource&lt;/a&gt;() and &lt;a href=&quot;qabstractproxymodel#mapToSource&quot;&gt;mapToSource&lt;/a&gt;(). The &lt;a href=&quot;qabstractproxymodel#mapSelectionFromSource&quot;&gt;mapSelectionFromSource&lt;/a&gt;() and &lt;a href=&quot;qabstractproxymodel#mapSelectionToSource&quot;&gt;mapSelectionToSource&lt;/a&gt;() functions only need to be reimplemented if you need a behavior different from the default behavior.</source>
          <target state="translated">&lt;a href=&quot;qabstractproxymodel&quot;&gt;QAbstractProxyModel&lt;/a&gt; 을 서브 클래스하려면 &lt;a href=&quot;qabstractproxymodel#mapFromSource&quot;&gt;mapFromSource&lt;/a&gt; () 및 &lt;a href=&quot;qabstractproxymodel#mapToSource&quot;&gt;mapToSource&lt;/a&gt; () 를 구현해야합니다 . &lt;a href=&quot;qabstractproxymodel#mapSelectionFromSource&quot;&gt;mapSelectionFromSource&lt;/a&gt; ()와 &lt;a href=&quot;qabstractproxymodel#mapSelectionToSource&quot;&gt;mapSelectionToSource&lt;/a&gt; 기본 동작과 행동 다른 필요한 경우 () 함수는 다시 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="936d372bbc70ed637c45fff1f22618dfd1c94060" translate="yes" xml:space="preserve">
          <source>To substitute a pattern use &lt;a href=&quot;qstring#replace&quot;&gt;QString::replace&lt;/a&gt;().</source>
          <target state="translated">패턴을 대체하려면 &lt;a href=&quot;qstring#replace&quot;&gt;QString :: replace&lt;/a&gt; ()를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="3946a88968d2066ac1aff1497f951d03330010af" translate="yes" xml:space="preserve">
          <source>To subtract times of precision greater than 1 millisecond, use &lt;a href=&quot;qdeadlinetimer#addNSecs&quot;&gt;addNSecs&lt;/a&gt;().</source>
          <target state="translated">1 밀리 초보다 큰 정밀도 시간을 빼려면 &lt;a href=&quot;qdeadlinetimer#addNSecs&quot;&gt;addNSecs&lt;/a&gt; ()를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="798f345f952d34a95b336b681e05706f6530acb6" translate="yes" xml:space="preserve">
          <source>To summarize, in case of Hunspell usage, the following paths are considered:</source>
          <target state="translated">요약하면, Hunspell 사용의 경우 다음 경로가 고려됩니다.</target>
        </trans-unit>
        <trans-unit id="0a4d6aaaf1f918add49e651e730f283b0c8e30ca" translate="yes" xml:space="preserve">
          <source>To support all resolutions and devices, several images should be created. A detailed list of what is required is available at &lt;a href=&quot;https://developer.apple.com/library/content/qa/qa1686/_index.html#&quot;&gt;Icon files&lt;/a&gt;. The filename is not important, but the actual pixel size is. Just a few icons are required. However, to support both iPhone and iPad, the following images are required:</source>
          <target state="translated">모든 해상도와 장치를 지원하려면 여러 이미지를 만들어야합니다. 필요한 것에 대한 자세한 목록은 &lt;a href=&quot;https://developer.apple.com/library/content/qa/qa1686/_index.html#&quot;&gt;아이콘 파일&lt;/a&gt; 에서 볼 수 있습니다 . 파일 이름은 중요하지 않지만 실제 픽셀 크기입니다. 몇 개의 아이콘 만 있으면됩니다. 그러나 iPhone과 iPad를 모두 지원하려면 다음 이미지가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="4040e37a158a47238f099568f71e632ea1830ac1" translate="yes" xml:space="preserve">
          <source>To support an additional media type, simply set the data in the &lt;a href=&quot;qmimedata&quot;&gt;QMimeData&lt;/a&gt; object with the &lt;a href=&quot;qmimedata#setData&quot;&gt;setData()&lt;/a&gt; function, supplying the full MIME type and a &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; containing the data in the appropriate format. The following code takes a pixmap from a label and stores it as a Portable Network Graphics (PNG) file in a &lt;a href=&quot;qmimedata&quot;&gt;QMimeData&lt;/a&gt; object:</source>
          <target state="translated">추가 미디어 유형을 지원하려면 &lt;a href=&quot;qmimedata&quot;&gt;setM &lt;/a&gt;&lt;a href=&quot;qmimedata#setData&quot;&gt;()&lt;/a&gt; 함수 를 사용하여 QMimeData 객체 의 데이터를 설정 하고 전체 MIME 유형과 적절한 형식의 데이터를 포함 하는 &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; 를 제공하십시오. 다음 코드는 레이블에서 픽스맵을 가져 와서 &lt;a href=&quot;qmimedata&quot;&gt;QMimeData&lt;/a&gt; 객체 에 PNG (Portable Network Graphics) 파일로 저장 합니다.</target>
        </trans-unit>
        <trans-unit id="b64693f525c36b0f741a83f96717dbddc851f56a" translate="yes" xml:space="preserve">
          <source>To support command compression, &lt;a href=&quot;qundocommand&quot;&gt;QUndoCommand&lt;/a&gt; has an &lt;a href=&quot;qundocommand#id&quot;&gt;id&lt;/a&gt;() and the virtual function &lt;a href=&quot;qundocommand#mergeWith&quot;&gt;mergeWith&lt;/a&gt;(). These functions are used by &lt;a href=&quot;qundostack#push&quot;&gt;QUndoStack::push&lt;/a&gt;().</source>
          <target state="translated">명령 압축을 지원하기 위해 &lt;a href=&quot;qundocommand&quot;&gt;QUndoCommand&lt;/a&gt; 에는 &lt;a href=&quot;qundocommand#id&quot;&gt;id&lt;/a&gt; () 및 가상 함수 &lt;a href=&quot;qundocommand#mergeWith&quot;&gt;mergeWith&lt;/a&gt; ()가 있습니다. 이 함수들은 &lt;a href=&quot;qundostack#push&quot;&gt;QUndoStack :: push&lt;/a&gt; ()에 의해 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="b2ab870c93f7392d5b0a39b32cf28672f411c225" translate="yes" xml:space="preserve">
          <source>To support command macros, a &lt;a href=&quot;qundocommand&quot;&gt;QUndoCommand&lt;/a&gt; object can have any number of child commands. Undoing or redoing the parent command will cause the child commands to be undone or redone. A command can be assigned to a parent explicitly in the constructor. In this case, the command will be owned by the parent.</source>
          <target state="translated">명령 매크로를 지원하기 위해 &lt;a href=&quot;qundocommand&quot;&gt;QUndoCommand&lt;/a&gt; 오브젝트는 여러 개의 하위 명령을 가질 수 있습니다. 부모 명령을 실행 취소하거나 다시 실행하면 자식 명령이 실행 취소되거나 다시 실행됩니다. 생성자에서 명시 적으로 부모에게 명령을 할당 할 수 있습니다. 이 경우 명령은 부모가 소유합니다.</target>
        </trans-unit>
        <trans-unit id="14d0ffdd8f6dc6d77cad64ef2e2544268a59fcfb" translate="yes" xml:space="preserve">
          <source>To support earlier iOS versions, one can use the &lt;code&gt;UILaunchImageFile&lt;/code&gt; string in the Info.plist:</source>
          <target state="translated">이전 iOS 버전을 지원하기 위해 Info.plist에서 &lt;code&gt;UILaunchImageFile&lt;/code&gt; 문자열을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cf7f17d4b6412ebc1137ed6f7a663d5feafcd329" translate="yes" xml:space="preserve">
          <source>To support encoding like that of HTML forms, &lt;a href=&quot;qurlquery&quot;&gt;QUrlQuery&lt;/a&gt; also never decodes the &quot;%2B&quot; sequence to a plus sign nor encode a plus sign. In fact, any &quot;%2B&quot; or &quot;+&quot; sequences found in the keys, values, or query string are left exactly like written (except for the uppercasing of &quot;%2b&quot; to &quot;%2B&quot;).</source>
          <target state="translated">HTML 형식의 인코딩과 같은 인코딩을 지원하기 위해 &lt;a href=&quot;qurlquery&quot;&gt;QUrlQuery&lt;/a&gt; 는 &quot;% 2B&quot;시퀀스를 더하기 부호로 디코딩하거나 더하기 부호를 인코딩하지 않습니다. 실제로 키, 값 또는 쿼리 문자열에있는 &quot;% 2B&quot;또는 &quot;+&quot;시퀀스는 &quot;% 2b&quot;에서 &quot;% 2B&quot;까지의 대문자를 제외하고는 기록 된 그대로 그대로 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="f9b07d42b830833478d51838f091000bb2e474b8" translate="yes" xml:space="preserve">
          <source>To support the iPhone 6, a launch file (an interface builder .xib file or a storyboard file) should be provided. For more information, see &lt;a href=&quot;https://developer.apple.com/library/ios/documentati%20on/userexperience/conceptual/MobileHIG/LaunchImages.html&quot;&gt;Launch Images&lt;/a&gt;. Assuming that you called the launch file Launch.xib, it can be added to the Info.plist as follows:</source>
          <target state="translated">iPhone 6을 지원하려면 시작 파일 (인터페이스 빌더 .xib 파일 또는 스토리 보드 파일)이 제공되어야합니다. 자세한 내용은 &lt;a href=&quot;https://developer.apple.com/library/ios/documentati%20on/userexperience/conceptual/MobileHIG/LaunchImages.html&quot;&gt;이미지 시작을&lt;/a&gt; 참조하십시오 . 시작 파일 Launch.xib를 호출했다고 가정하면 다음과 같이 Info.plist에 추가 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="191e67a48ba9d4e31ec9689925718d0933608e13" translate="yes" xml:space="preserve">
          <source>To suppress the output at run-time, install your own message handler with &lt;a href=&quot;qtglobal#qInstallMessageHandler&quot;&gt;qInstallMessageHandler&lt;/a&gt;().</source>
          <target state="translated">런타임시 출력을 억제하려면 &lt;a href=&quot;qtglobal#qInstallMessageHandler&quot;&gt;qInstallMessageHandler&lt;/a&gt; ()를 사용하여 고유 한 메시지 핸들러를 설치하십시오 .</target>
        </trans-unit>
        <trans-unit id="8c6402e9d882c05b1ace285877d822ce63cf2cfb" translate="yes" xml:space="preserve">
          <source>To suppress the output at runtime, install your own message handler with &lt;a href=&quot;qtglobal#qInstallMessageHandler&quot;&gt;qInstallMessageHandler&lt;/a&gt;().</source>
          <target state="translated">런타임시 출력을 억제하려면 &lt;a href=&quot;qtglobal#qInstallMessageHandler&quot;&gt;qInstallMessageHandler&lt;/a&gt; ()를 사용하여 고유 한 메시지 핸들러를 설치하십시오 .</target>
        </trans-unit>
        <trans-unit id="cda8eb58e829d3b87fef4bbf8ce885071d800d94" translate="yes" xml:space="preserve">
          <source>To suppress the re-use of cached results, pass &lt;code&gt;CONFIG+=recheck&lt;/code&gt; to qmake.</source>
          <target state="translated">캐시 된 결과의 재사용을 억제하려면 &lt;code&gt;CONFIG+=recheck&lt;/code&gt; 를 qmake에 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="47a97d4a801136ad82e372eb334d727fdaa1de2e" translate="yes" xml:space="preserve">
          <source>To synchronously invoke the &lt;code&gt;compute(QString, int, double)&lt;/code&gt; slot on some arbitrary object &lt;code&gt;obj&lt;/code&gt; retrieve its return value:</source>
          <target state="translated">임의의 객체 &lt;code&gt;obj&lt;/code&gt; 에서 &lt;code&gt;compute(QString, int, double)&lt;/code&gt; 슬롯 을 동 기적으로 호출하려면 반환 값을 검색하십시오.</target>
        </trans-unit>
        <trans-unit id="7e17f6e02592d1bb365732229701d0970bf1ee58" translate="yes" xml:space="preserve">
          <source>To take advantage of &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt;'s default implementation for the built-in MIME type, new models must provide reimplementations of the following functions:</source>
          <target state="translated">내장 MIME 유형에 대한 &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; 의 기본 구현을 활용하려면 새 모델이 다음 기능을 다시 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="92aeee4b5dc5436d95a1da26834632ea9eaa62fb" translate="yes" xml:space="preserve">
          <source>To take advantage of in-app purchasing functionality on iOS, register your application and all the available products in &lt;a href=&quot;http://itunesconnect.apple.com&quot;&gt;iTunes Connect&lt;/a&gt;. This guide provides a brief introduction on how to register an application and it's in-app products on App Store.</source>
          <target state="translated">iOS에서 인앱 구매 기능을 이용하려면 &lt;a href=&quot;http://itunesconnect.apple.com&quot;&gt;iTunes Connect&lt;/a&gt; 에 응용 프로그램 및 사용 가능한 모든 제품을 등록 하십시오 . 이 가이드는 App Store에서 응용 프로그램 및 인앱 제품을 등록하는 방법에 대한 간략한 소개를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="8c906271ba6734b5a48aa1a5d932192da173cd3f" translate="yes" xml:space="preserve">
          <source>To take full advantage of this function, assign the result to an &lt;code&gt;auto&lt;/code&gt; variable:</source>
          <target state="translated">이 기능을 최대한 활용하려면 결과를 &lt;code&gt;auto&lt;/code&gt; 변수에 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="222dbea56966fa8c4076270f3cf1dd6cc13df1f5" translate="yes" xml:space="preserve">
          <source>To take one example, a &lt;code&gt;char *&lt;/code&gt; string is written as a 32-bit integer equal to the length of the string including the '\0' byte, followed by all the characters of the string including the '\0' byte. When reading a &lt;code&gt;char *&lt;/code&gt; string, 4 bytes are read to create the 32-bit length value, then that many characters for the &lt;code&gt;char *&lt;/code&gt; string including the '\0' terminator are read.</source>
          <target state="translated">한 가지 예를 들어, &lt;code&gt;char *&lt;/code&gt; 문자열은 '\ 0'바이트를 포함하는 문자열의 길이와 동일한 32 비트 정수로 작성되고 '\ 0'바이트를 포함하는 문자열의 모든 문자가 뒤 따릅니다. 읽을 때 &lt;code&gt;char *&lt;/code&gt; 문자열을 4 바이트 다음, 32 비트 길이 값을 만들 읽어 그 많은 문자 &lt;code&gt;char *&lt;/code&gt; 문자열 읽기 터미네이터 '\ 0'을 포함.</target>
        </trans-unit>
        <trans-unit id="1beba4fc7bb8fc461fe9b73bccadbc07c1902fd6" translate="yes" xml:space="preserve">
          <source>To test a string against a wildcard expression, use &lt;a href=&quot;qregexp#exactMatch&quot;&gt;exactMatch&lt;/a&gt;(). For example:</source>
          <target state="translated">와일드 카드 식에 대해 문자열을 테스트하려면 &lt;a href=&quot;qregexp#exactMatch&quot;&gt;exactMatch&lt;/a&gt; ()를 사용 하십시오 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5836adc8bc62a70bace92a743c85a00840cff2be" translate="yes" xml:space="preserve">
          <source>To test color values for equality, use the &lt;a href=&quot;qml-qtqml-qt#colorEqual-method&quot;&gt;Qt.colorEqual()&lt;/a&gt; function. This allows colors to be accurately compared whether they are in property form or in any of the acceptable string specification forms.</source>
          <target state="translated">색상 값이 &lt;a href=&quot;qml-qtqml-qt#colorEqual-method&quot;&gt;동일한 지&lt;/a&gt; 테스트하려면 Qt.colorEqual () 함수를 사용하십시오 . 따라서 색상이 속성 형식이든 수용 가능한 문자열 사양 형식이든 관계없이 색상을 정확하게 비교할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="89d36868a6d3b7e91f05acf15841bec39ff5269f" translate="yes" xml:space="preserve">
          <source>To test whether a given key exists, call &lt;a href=&quot;qsettings#contains&quot;&gt;contains&lt;/a&gt;(). To remove the setting associated with a key, call &lt;a href=&quot;qsettings#remove&quot;&gt;remove&lt;/a&gt;(). To obtain the list of all keys, call &lt;a href=&quot;qsettings#allKeys&quot;&gt;allKeys&lt;/a&gt;(). To remove all keys, call &lt;a href=&quot;qsettings#clear&quot;&gt;clear&lt;/a&gt;().</source>
          <target state="translated">주어진 키가 존재하는지 테스트하려면 &lt;a href=&quot;qsettings#contains&quot;&gt;contains&lt;/a&gt; ()를 호출하십시오 . 키와 관련된 설정을 제거하려면 remove ()를 호출 &lt;a href=&quot;qsettings#remove&quot;&gt;하십시오&lt;/a&gt; . 모든 키 목록을 얻으려면 &lt;a href=&quot;qsettings#allKeys&quot;&gt;allKeys&lt;/a&gt; ()를 호출하십시오 . 모든 키를 제거하려면 &lt;a href=&quot;qsettings#clear&quot;&gt;clear&lt;/a&gt; ()를 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="a9f3c35f9588afa1f46ff1d47dd632a126c88f4c" translate="yes" xml:space="preserve">
          <source>To test whether a page has been visited or not, call &lt;a href=&quot;qwizard#hasVisitedPage&quot;&gt;hasVisitedPage&lt;/a&gt;(). For example:</source>
          <target state="translated">페이지 방문 여부를 테스트하려면 &lt;a href=&quot;qwizard#hasVisitedPage&quot;&gt;hasVisitedPage&lt;/a&gt; ()를 호출 하십시오 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ad2fdbade77f14ca4c491341e583f563b20f4fb1" translate="yes" xml:space="preserve">
          <source>To test whether an instance of &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; contains a data type that is compatible with the data type you are interested in, use &lt;a href=&quot;qvariant#canConvert-1&quot;&gt;canConvert&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; 인스턴스에 관심 있는 데이터 유형과 호환되는 데이터 유형이 포함되어 있는지 테스트하려면 &lt;a href=&quot;qvariant#canConvert-1&quot;&gt;canConvert&lt;/a&gt; ()를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="6ba45459743d213db1afef3b183409daeb62feca" translate="yes" xml:space="preserve">
          <source>To test whether an item belongs to the set or not, use &lt;a href=&quot;qset#contains&quot;&gt;contains&lt;/a&gt;():</source>
          <target state="translated">항목이 세트에 속하는지 테스트하려면 &lt;a href=&quot;qset#contains&quot;&gt;contains&lt;/a&gt; ()를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="8db0e22e126e00d9ed6c76671a1106cfb8ee2b27" translate="yes" xml:space="preserve">
          <source>To test whether gamepad input is detected, select &lt;b&gt;Gamepad Controller Settings&lt;/b&gt; from the context menu, select &lt;b&gt;Properties &amp;gt; Test&lt;/b&gt;, and start testing. You can also run the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtgamepad-quickgamepad-example.html#&quot;&gt;quickGamepad&lt;/a&gt; example to test.</source>
          <target state="translated">게임 패드 입력이 감지되는지 테스트하려면 상황에 맞는 메뉴에서 &lt;b&gt;게임 패드 컨트롤러 설정&lt;/b&gt; 을 선택하고 &lt;b&gt;속성&amp;gt; 테스트를&lt;/b&gt; 선택한 &lt;b&gt;다음 테스트&lt;/b&gt; 를 시작하십시오. &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtgamepad-quickgamepad-example.html#&quot;&gt;quickGamepad&lt;/a&gt; 예제를 실행하여 테스트 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ce545934c30be24a06e0cb0681c75dae980f967d" translate="yes" xml:space="preserve">
          <source>To traverse nodes use &lt;a href=&quot;qdomnode#firstChild&quot;&gt;firstChild&lt;/a&gt;() to get a node's first child (if any), and &lt;a href=&quot;qdomnode#nextSibling&quot;&gt;nextSibling&lt;/a&gt;() to traverse. &lt;a href=&quot;qdomnode&quot;&gt;QDomNode&lt;/a&gt; also provides &lt;a href=&quot;qdomnode#lastChild&quot;&gt;lastChild&lt;/a&gt;(), &lt;a href=&quot;qdomnode#previousSibling&quot;&gt;previousSibling&lt;/a&gt;() and &lt;a href=&quot;qdomnode#parentNode&quot;&gt;parentNode&lt;/a&gt;(). To find the first child node with a particular node name use &lt;a href=&quot;qdomnode#namedItem&quot;&gt;namedItem&lt;/a&gt;().</source>
          <target state="translated">노드를 순회하려면 &lt;a href=&quot;qdomnode#firstChild&quot;&gt;firstChild&lt;/a&gt; ()를 사용 하여 노드의 첫 번째 하위 (있는 경우)를 가져오고 &lt;a href=&quot;qdomnode#nextSibling&quot;&gt;nextSibling&lt;/a&gt; ()을 사용하여 순회하십시오. &lt;a href=&quot;qdomnode&quot;&gt;QDomNode&lt;/a&gt; 는 &lt;a href=&quot;qdomnode#lastChild&quot;&gt;lastChild&lt;/a&gt; (), &lt;a href=&quot;qdomnode#previousSibling&quot;&gt;previousSibling&lt;/a&gt; () 및 &lt;a href=&quot;qdomnode#parentNode&quot;&gt;parentNode&lt;/a&gt; () 도 제공합니다 . 특정 노드 이름을 가진 첫 번째 하위 노드를 찾으려면 &lt;a href=&quot;qdomnode#namedItem&quot;&gt;namedItem&lt;/a&gt; ()을 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="14ea7e1407bcee40f23360a11154300e2ca51217" translate="yes" xml:space="preserve">
          <source>To try out the attached property, we create a &lt;a href=&quot;qml-qtquick-row&quot;&gt;Row&lt;/a&gt; with two Buttons in &lt;code&gt;main.qml&lt;/code&gt;:</source>
          <target state="translated">연결된 속성을 시험해보기 위해 &lt;code&gt;main.qml&lt;/code&gt; 에 두 개의 버튼이 있는 &lt;a href=&quot;qml-qtquick-row&quot;&gt;행&lt;/a&gt; 을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="969e5a301387ee4b27b541eb6eaed7424fefdf00" translate="yes" xml:space="preserve">
          <source>To turn a standard Qt application into a COM server using the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qaxserver-module.html&quot;&gt;QAxServer&lt;/a&gt; library you must add &lt;code&gt;axserver&lt;/code&gt; to the QT variable in your &lt;code&gt;.pro&lt;/code&gt; file.</source>
          <target state="translated">&lt;a href=&quot;https://doc.qt.io/qt-5.13/qaxserver-module.html&quot;&gt;QAxServer&lt;/a&gt; 라이브러리를 사용하여 표준 Qt 애플리케이션을 COM 서버로 전환하려면 &lt;code&gt;.pro&lt;/code&gt; 파일 의 QT 변수에 &lt;code&gt;axserver&lt;/code&gt; 를 추가해야 합니다.</target>
        </trans-unit>
        <trans-unit id="71839fd573b414eb70f94151b0d25d4287a6f88b" translate="yes" xml:space="preserve">
          <source>To turn off the prefix display, set this property to an empty string. The default is no prefix. The prefix is not displayed when &lt;a href=&quot;qdoublespinbox#value-prop&quot;&gt;value&lt;/a&gt;() == &lt;a href=&quot;qdoublespinbox#minimum-prop&quot;&gt;minimum&lt;/a&gt;() and &lt;a href=&quot;qabstractspinbox#specialValueText-prop&quot;&gt;specialValueText&lt;/a&gt;() is set.</source>
          <target state="translated">접두사 표시를 끄려면이 속성을 빈 문자열로 설정하십시오. 기본값은 접두사가 없습니다. &lt;a href=&quot;qdoublespinbox#value-prop&quot;&gt;value&lt;/a&gt; () == &lt;a href=&quot;qdoublespinbox#minimum-prop&quot;&gt;minimum&lt;/a&gt; () 및 &lt;a href=&quot;qabstractspinbox#specialValueText-prop&quot;&gt;specialValueText&lt;/a&gt; ()가 설정 되어 있으면 접두사가 표시되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="fefcec6c72e59dd80e574d8686e4ad6a5e6dfaad" translate="yes" xml:space="preserve">
          <source>To turn off the prefix display, set this property to an empty string. The default is no prefix. The prefix is not displayed when &lt;a href=&quot;qspinbox#value-prop&quot;&gt;value&lt;/a&gt;() == &lt;a href=&quot;qspinbox#minimum-prop&quot;&gt;minimum&lt;/a&gt;() and &lt;a href=&quot;qabstractspinbox#specialValueText-prop&quot;&gt;specialValueText&lt;/a&gt;() is set.</source>
          <target state="translated">접두사 표시를 끄려면이 속성을 빈 문자열로 설정하십시오. 기본값은 접두사가 없습니다. &lt;a href=&quot;qspinbox#value-prop&quot;&gt;value&lt;/a&gt; () == &lt;a href=&quot;qspinbox#minimum-prop&quot;&gt;minimum&lt;/a&gt; () 및 &lt;a href=&quot;qabstractspinbox#specialValueText-prop&quot;&gt;specialValueText&lt;/a&gt; ()가 설정 되어 있으면 접두사가 표시되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="80f698bb5de60817817a79e8733121a75f4a70ee" translate="yes" xml:space="preserve">
          <source>To turn off the special-value text display, call this function with an empty string. The default is no special-value text, i.e. the numeric value is shown as usual.</source>
          <target state="translated">특수 값 텍스트 표시를 끄려면 빈 문자열로이 함수를 호출하십시오. 기본값은 특수 값 텍스트가 아니며 숫자 값이 평소와 같이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="45e22aef464ae0ad3be5f48c6879fa6b46bfc130" translate="yes" xml:space="preserve">
          <source>To turn off the suffix display, set this property to an empty string. The default is no suffix. The suffix is not displayed for the &lt;a href=&quot;qdoublespinbox#minimum-prop&quot;&gt;minimum&lt;/a&gt;() if &lt;a href=&quot;qabstractspinbox#specialValueText-prop&quot;&gt;specialValueText&lt;/a&gt;() is set.</source>
          <target state="translated">접미사 표시를 끄려면이 속성을 빈 문자열로 설정하십시오. 기본값은 접미사가 없습니다. &lt;a href=&quot;qabstractspinbox#specialValueText-prop&quot;&gt;specialValueText&lt;/a&gt; ()가 설정된 경우 접미사는 &lt;a href=&quot;qdoublespinbox#minimum-prop&quot;&gt;최소&lt;/a&gt; ()로 표시되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="c099d86ebf9b45a1833d500f63a6fa0fe59afaf7" translate="yes" xml:space="preserve">
          <source>To turn off the suffix display, set this property to an empty string. The default is no suffix. The suffix is not displayed for the &lt;a href=&quot;qspinbox#minimum-prop&quot;&gt;minimum&lt;/a&gt;() if &lt;a href=&quot;qabstractspinbox#specialValueText-prop&quot;&gt;specialValueText&lt;/a&gt;() is set.</source>
          <target state="translated">접미사 표시를 끄려면이 속성을 빈 문자열로 설정하십시오. 기본값은 접미사가 없습니다. &lt;a href=&quot;qabstractspinbox#specialValueText-prop&quot;&gt;specialValueText&lt;/a&gt; ()가 설정된 경우 접미사는 &lt;a href=&quot;qspinbox#minimum-prop&quot;&gt;최소&lt;/a&gt; ()로 표시되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="7fc8709b7a0caadbfb000846e267b43f57e03ded" translate="yes" xml:space="preserve">
          <source>To understand this behavior, recall that the empty string matches everywhere, so the above is qualitatively the same as:</source>
          <target state="translated">이 동작을 이해하려면 빈 문자열이 모든 곳에서 일치하므로 위의 내용은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4fdbb14ad9db98c1e62bf6d4261b4cccfa4e87ed" translate="yes" xml:space="preserve">
          <source>To undo a &lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt;, simply set a null icon in its place:</source>
          <target state="translated">&lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; 을 실행 취소하려면 그 자리에 null 아이콘을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="39ca2d2ccc6331f3ca85c3accf27fce072625a12" translate="yes" xml:space="preserve">
          <source>To unload the currently loaded object, set this property to &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">현재로드 된 객체를 언로드하려면이 속성을 &lt;code&gt;undefined&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="fcb5ad3078fc97e23c38e06f8b0def582feadbd3" translate="yes" xml:space="preserve">
          <source>To unload the currently loaded object, set this property to an empty string, or set &lt;a href=&quot;qml-qtquick-loader#sourceComponent-prop&quot;&gt;sourceComponent&lt;/a&gt; to &lt;code&gt;undefined&lt;/code&gt;. Setting &lt;code&gt;source&lt;/code&gt; to a new URL will also cause the item created by the previous URL to be unloaded.</source>
          <target state="translated">현재로드 된 객체를 언로드하려면이 속성을 빈 문자열로 설정하거나 &lt;a href=&quot;qml-qtquick-loader#sourceComponent-prop&quot;&gt;sourceComponent&lt;/a&gt; 를 &lt;code&gt;undefined&lt;/code&gt; 로 설정하십시오 . &lt;code&gt;source&lt;/code&gt; 를 새 URL로 설정 하면 이전 URL로 작성된 항목이 언로드됩니다.</target>
        </trans-unit>
        <trans-unit id="19b16aab0bd2fff4baf0a6606cda935ab0710ca7" translate="yes" xml:space="preserve">
          <source>To unset a previously set buddy, call this function with</source>
          <target state="translated">이전에 설정된 친구를 설정 해제하려면</target>
        </trans-unit>
        <trans-unit id="cada0ab71385a7bc1e645a44c1203e88a4bc6b22" translate="yes" xml:space="preserve">
          <source>To unset the request interceptor, set a &lt;code&gt;nullptr&lt;/code&gt;.</source>
          <target state="translated">요청 인터셉터를 설정 해제하려면 &lt;code&gt;nullptr&lt;/code&gt; 을 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="450df011222b3d91946d7a17d14d8b0e23b400c1" translate="yes" xml:space="preserve">
          <source>To update the content of the texture, call &lt;a href=&quot;qsgdynamictexture#updateTexture&quot;&gt;updateTexture&lt;/a&gt;() explicitly. Simply calling &lt;a href=&quot;qsgtexture#bind&quot;&gt;bind&lt;/a&gt;() will not update the texture.</source>
          <target state="translated">텍스처의 내용을 업데이트하려면 &lt;a href=&quot;qsgdynamictexture#updateTexture&quot;&gt;updateTexture&lt;/a&gt; ()를 명시 적으로 호출 하십시오 . &lt;a href=&quot;qsgtexture#bind&quot;&gt;bind&lt;/a&gt; ()를 호출 하면 텍스처가 업데이트되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ad48bfe8378ab09af1850e79d573150ff4f0cab3" translate="yes" xml:space="preserve">
          <source>To update the currently selected items, use the bitwise OR of &lt;a href=&quot;qitemselectionmodel#SelectionFlag-enum&quot;&gt;QItemSelectionModel::Current&lt;/a&gt; and any of the other &lt;a href=&quot;qitemselectionmodel#SelectionFlag-enum&quot;&gt;SelectionFlags&lt;/a&gt;. If you omit the &lt;a href=&quot;qitemselectionmodel#SelectionFlag-enum&quot;&gt;QItemSelectionModel::Current&lt;/a&gt; command, a new current selection will be created, and the previous one added to the whole selection. All functions operate on both layers; for example, &lt;a href=&quot;qtablewidget#selectedItems&quot;&gt;selecteditems()&lt;/a&gt; will return items from both layers.</source>
          <target state="translated">현재 선택된 항목을 업데이트하려면 &lt;a href=&quot;qitemselectionmodel#SelectionFlag-enum&quot;&gt;QItemSelectionModel :: Current&lt;/a&gt; 및 기타 &lt;a href=&quot;qitemselectionmodel#SelectionFlag-enum&quot;&gt;SelectionFlags&lt;/a&gt; 의 비트 단위 OR을 사용하십시오 . &lt;a href=&quot;qitemselectionmodel#SelectionFlag-enum&quot;&gt;QItemSelectionModel :: Current&lt;/a&gt; 명령 을 생략하면 새로운 현재 선택이 작성되고 이전 선택이 전체 선택에 추가됩니다. 모든 기능은 두 계층에서 작동합니다. 예를 들어 &lt;a href=&quot;qtablewidget#selectedItems&quot;&gt;selecteditems ()&lt;/a&gt; 는 두 레이어에서 항목을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="984cb0adbf60c8b27fb328300cbf8521faf1b8b9" translate="yes" xml:space="preserve">
          <source>To use &lt;a href=&quot;qqmlparserstatus&quot;&gt;QQmlParserStatus&lt;/a&gt;, you must inherit both a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;-derived class and &lt;a href=&quot;qqmlparserstatus&quot;&gt;QQmlParserStatus&lt;/a&gt;, and use the &lt;a href=&quot;qobject#Q_INTERFACES&quot;&gt;Q_INTERFACES&lt;/a&gt;() macro.</source>
          <target state="translated">&lt;a href=&quot;qqmlparserstatus&quot;&gt;QQmlParserStatus&lt;/a&gt; 를 사용하려면 &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; 파생 클래스와 &lt;a href=&quot;qqmlparserstatus&quot;&gt;QQmlParserStatus를&lt;/a&gt; 모두 상속 하고 &lt;a href=&quot;qobject#Q_INTERFACES&quot;&gt;Q_INTERFACES&lt;/a&gt; () 매크로를 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="8249bb13edcf63efce302738767bc58acbfef77c" translate="yes" xml:space="preserve">
          <source>To use D-Bus functionality, you need to install the libdbus-1 library, for example through Homebrew, Fink or MacPorts. You may want to include those libraries in your application's bundle if you're deploying to other systems. Additionally, note that there is no system bus on macOS and that the session bus will only be started after launchd is configured to manage it.</source>
          <target state="translated">D-Bus 기능을 사용하려면 예를 들어 Homebrew, Fink 또는 MacPorts를 통해 libdbus-1 라이브러리를 설치해야합니다. 다른 시스템에 배포하는 경우 해당 라이브러리를 응용 프로그램 번들에 포함시킬 수 있습니다. 또한 macOS에는 시스템 버스가 없으며 시작을 관리하도록 구성된 후에 만 ​​버스가 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="378a3f1a414093385a9d06b63b24da29da93fc56" translate="yes" xml:space="preserve">
          <source>To use Qt Help classes, add this directive into the C++ files:</source>
          <target state="translated">Qt 도움말 클래스를 사용하려면이 지시문을 C ++ 파일에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="c0bcc3d12a06341a94d7bfe8d823090f8300a4d6" translate="yes" xml:space="preserve">
          <source>To use Qt Network Authorization classes, add this directive into C++ files:</source>
          <target state="translated">Qt 네트워크 인증 클래스를 사용하려면이 지시문을 C ++ 파일에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="9448677fd6e60d0a26397cc18d3e19ab2bc9edc7" translate="yes" xml:space="preserve">
          <source>To use Qt Network classes,add this directive into the C++ files:</source>
          <target state="translated">Qt 네트워크 클래스를 사용하려면이 지시문을 C ++ 파일에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="e41d5440e0b997de4cc633c883c5d3775478c1bf" translate="yes" xml:space="preserve">
          <source>To use a &lt;a href=&quot;qcompleter&quot;&gt;QCompleter&lt;/a&gt; with a &lt;a href=&quot;qvalidator&quot;&gt;QValidator&lt;/a&gt; or &lt;a href=&quot;qlineedit#inputMask-prop&quot;&gt;QLineEdit::inputMask&lt;/a&gt;, you need to ensure that the model provided to &lt;a href=&quot;qcompleter&quot;&gt;QCompleter&lt;/a&gt; contains valid entries. You can use the &lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel&lt;/a&gt; to ensure that the &lt;a href=&quot;qcompleter&quot;&gt;QCompleter&lt;/a&gt;'s model contains only valid entries.</source>
          <target state="translated">사용하려면 &lt;a href=&quot;qcompleter&quot;&gt;QCompleter를&lt;/a&gt; 로모그래퍼 &lt;a href=&quot;qvalidator&quot;&gt;QValidator&lt;/a&gt; 또는 &lt;a href=&quot;qlineedit#inputMask-prop&quot;&gt;QLineEdit :: inputMask&lt;/a&gt; , 당신은 제공 모델 있는지 확인해야 &lt;a href=&quot;qcompleter&quot;&gt;QCompleter이&lt;/a&gt; 유효한 항목이 포함되어 있습니다. 당신은 사용할 수 있습니다 &lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel를&lt;/a&gt; 수 있도록 &lt;a href=&quot;qcompleter&quot;&gt;QCompleter&lt;/a&gt; 의 모델에만 유효 항목이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="2895526cb27a58e9f2c27fd99ed1c3363ea5d1da" translate="yes" xml:space="preserve">
          <source>To use a compiled state machine in QML, you can register it as a QML type:</source>
          <target state="translated">QML에서 컴파일 된 상태 머신을 사용하려면이를 QML 유형으로 등록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d7814902fb0cdd976d8b884c9ff43167eb034f7b" translate="yes" xml:space="preserve">
          <source>To use a custom enumeration as a data type, its class must be registered and the enumeration must also be declared with &lt;a href=&quot;qobject#Q_ENUM&quot;&gt;Q_ENUM&lt;/a&gt;() to register it with Qt's meta object system. For example, the &lt;code&gt;Message&lt;/code&gt; class below has a &lt;code&gt;Status&lt;/code&gt; enum:</source>
          <target state="translated">사용자 정의 열거를 데이터 유형으로 사용하려면 클래스 를 등록하고 Qt의 메타 오브젝트 시스템에 등록하기 위해 &lt;a href=&quot;qobject#Q_ENUM&quot;&gt;Q_ENUM&lt;/a&gt; ()으로 열거를 선언해야합니다 . 예를 들어 아래 &lt;code&gt;Message&lt;/code&gt; 클래스에는 &lt;code&gt;Status&lt;/code&gt; 열거 형이 있습니다.</target>
        </trans-unit>
        <trans-unit id="b13bba4339f077507ad5f6f705b3ef41bd4e2e90" translate="yes" xml:space="preserve">
          <source>To use a custom widget for the final column when you select an item overload this function and return a widget.</source>
          <target state="translated">항목을 선택할 때 최종 열에 사용자 정의 위젯을 사용하려면이 함수를 오버로드하고 위젯을 리턴하십시오.</target>
        </trans-unit>
        <trans-unit id="397ba603fbe9dabab31029d89f202f1a9480b748" translate="yes" xml:space="preserve">
          <source>To use a dedicated thread pool, you can pass the &lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; as the first argument:</source>
          <target state="translated">전용 스레드 풀을 사용하기 위해 &lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; 을 첫 번째 인수로 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5b0352dd058496e18226b115a21e65f9f6196355" translate="yes" xml:space="preserve">
          <source>To use a different selection mode as described in &lt;a href=&quot;qml-qtquick-controls-treeview#selectionMode-prop&quot;&gt;selectionMode&lt;/a&gt;, an &lt;a href=&quot;qml-qtqml-models-itemselectionmodel&quot;&gt;ItemSelectionModel&lt;/a&gt; must by set to the selection.</source>
          <target state="translated">기재의 다른 선택 모드를 사용하도록 &lt;a href=&quot;qml-qtquick-controls-treeview#selectionMode-prop&quot;&gt;의 selectionMode&lt;/a&gt; , &lt;a href=&quot;qml-qtqml-models-itemselectionmodel&quot;&gt;ItemSelectionModel의&lt;/a&gt; 선택에 의해 세트한다.</target>
        </trans-unit>
        <trans-unit id="f02935baa67b9780550d68fe6b7e9fca6a104a46" translate="yes" xml:space="preserve">
          <source>To use a final state, you create a &lt;a href=&quot;qfinalstate&quot;&gt;QFinalState&lt;/a&gt; object and add a transition to it from another state. Example:</source>
          <target state="translated">최종 상태를 사용하려면 &lt;a href=&quot;qfinalstate&quot;&gt;QFinalState&lt;/a&gt; 객체 를 생성하고 다른 상태에서 전환을 추가합니다. 예:</target>
        </trans-unit>
        <trans-unit id="3bb4747b55a68c6e897f0a7283e335f1fb2a7bf7" translate="yes" xml:space="preserve">
          <source>To use a final state, you create a &lt;a href=&quot;qml-qtqml-statemachine-finalstate&quot;&gt;FinalState&lt;/a&gt; object and add a transition to it from another state.</source>
          <target state="translated">최종 상태를 사용하려면 &lt;a href=&quot;qml-qtqml-statemachine-finalstate&quot;&gt;FinalState&lt;/a&gt; 객체 를 만들고 다른 상태에서 전환을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="5221bd5b6617c0b473516e17c87fbf084ffc2491" translate="yes" xml:space="preserve">
          <source>To use a plugin created in this way, it is necessary to ensure that the plugin is located on a path that</source>
          <target state="translated">이러한 방식으로 생성 된 플러그인을 사용하려면 플러그인이 다음과 같은 경로에 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="3913887631eb2f7bf573aa0e7b909323b02bf65c" translate="yes" xml:space="preserve">
          <source>To use a texture, call the &lt;a href=&quot;qsgtexture#bind&quot;&gt;bind&lt;/a&gt;() function. The texture parameters specifying how the texture is bound, can be specified with &lt;a href=&quot;qsgtexture#setMipmapFiltering&quot;&gt;setMipmapFiltering&lt;/a&gt;(), &lt;a href=&quot;qsgtexture#setFiltering&quot;&gt;setFiltering&lt;/a&gt;(), &lt;a href=&quot;qsgtexture#setHorizontalWrapMode&quot;&gt;setHorizontalWrapMode&lt;/a&gt;() and &lt;a href=&quot;qsgtexture#setVerticalWrapMode&quot;&gt;setVerticalWrapMode&lt;/a&gt;(). The texture will internally try to store these values to minimize the OpenGL state changes when the texture is bound.</source>
          <target state="translated">텍스처를 사용하려면 &lt;a href=&quot;qsgtexture#bind&quot;&gt;bind&lt;/a&gt; () 함수를 호출하십시오 . 텍스처 바인딩 방법을 지정하는 텍스처 파라미터는 &lt;a href=&quot;qsgtexture#setMipmapFiltering&quot;&gt;setMipmapFiltering&lt;/a&gt; (), &lt;a href=&quot;qsgtexture#setFiltering&quot;&gt;setFiltering&lt;/a&gt; (), &lt;a href=&quot;qsgtexture#setHorizontalWrapMode&quot;&gt;setHorizontalWrapMode&lt;/a&gt; () 및 &lt;a href=&quot;qsgtexture#setVerticalWrapMode&quot;&gt;setVerticalWrapMode&lt;/a&gt; () 로 지정할 수 있습니다 . 텍스처는 내부적으로이 값을 저장하여 텍스처가 바인딩 될 때 OpenGL 상태 변경을 최소화합니다.</target>
        </trans-unit>
        <trans-unit id="2b0579cb77aeab952b52234dc84c347ab7d952c5" translate="yes" xml:space="preserve">
          <source>To use an earlier Qt version to build Qt Webengine:</source>
          <target state="translated">이전 Qt 버전을 사용하여 Qt Webengine을 빌드하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="0426658bfd567e8799bc9024e99526966fae4dbc" translate="yes" xml:space="preserve">
          <source>To use an enum as a &lt;a href=&quot;qflags&quot;&gt;flags&lt;/a&gt; type in QML, see &lt;a href=&quot;qobject#Q_FLAG&quot;&gt;Q_FLAG&lt;/a&gt;().</source>
          <target state="translated">QML에서 열거 형을 &lt;a href=&quot;qflags&quot;&gt;플래그&lt;/a&gt; 유형 으로 사용하려면 &lt;a href=&quot;qobject#Q_FLAG&quot;&gt;Q_FLAG&lt;/a&gt; ()를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8ab26b6926e3afdf9dde46dca2f8a592658715e6" translate="yes" xml:space="preserve">
          <source>To use categories they must first be initialized.</source>
          <target state="translated">카테고리를 사용하려면 먼저 카테고리를 초기화해야합니다.</target>
        </trans-unit>
        <trans-unit id="478df5b9d78f693d34e96188ebe07f4b49bde6ef" translate="yes" xml:space="preserve">
          <source>To use forward-only queries, you must build the QPSQL plugin with PostreSQL client library version 9.2 or later. If the plugin is built with an older version, then forward-only mode will not be available - calling &lt;a href=&quot;qsqlquery#setForwardOnly&quot;&gt;QSqlQuery::setForwardOnly&lt;/a&gt;() with &lt;code&gt;true&lt;/code&gt; will have no effect.</source>
          <target state="translated">정방향 전용 쿼리를 사용하려면 PostreSQL 클라이언트 라이브러리 버전 9.2 이상에서 QPSQL 플러그인을 빌드해야합니다. 플러그인이 이전 버전으로 빌드 된 경우 정방향 전용 모드를 사용할 수 없습니다. &lt;code&gt;true&lt;/code&gt; 로&lt;a href=&quot;qsqlquery#setForwardOnly&quot;&gt;QSqlQuery :: setForwardOnly&lt;/a&gt; ()를 호출 해도 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="d688d5abf5feb300268eb8733fbca6dd915313bd" translate="yes" xml:space="preserve">
          <source>To use one of the &lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; threads, subclass &lt;a href=&quot;qrunnable&quot;&gt;QRunnable&lt;/a&gt; and implement the run() virtual function. Then create an object of that class and pass it to &lt;a href=&quot;qthreadpool#start&quot;&gt;QThreadPool::start&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; 스레드 중 하나를 사용하려면 &lt;a href=&quot;qrunnable&quot;&gt;QRunnable을&lt;/a&gt; 서브 클래스 화 하고 run () 가상 함수를 구현하십시오. 그런 다음 해당 클래스의 오브젝트를 작성하여 &lt;a href=&quot;qthreadpool#start&quot;&gt;QThreadPool :: start&lt;/a&gt; ()에 전달하십시오 .</target>
        </trans-unit>
        <trans-unit id="049ccb50bda349d80cf720596fb3161681cb16ee" translate="yes" xml:space="preserve">
          <source>To use the &lt;a href=&quot;qml-qtlocation-reviewmodel&quot;&gt;ReviewModel&lt;/a&gt; we need a view and a delegate. In this snippet we see the setting up of a &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt; with a &lt;a href=&quot;qml-qtlocation-reviewmodel&quot;&gt;ReviewModel&lt;/a&gt; model and a delegate.</source>
          <target state="translated">&lt;a href=&quot;qml-qtlocation-reviewmodel&quot;&gt;ReviewModel&lt;/a&gt; 을 사용하려면 뷰와 대리자가 필요합니다. 이 스 니펫에서는 &lt;a href=&quot;qml-qtlocation-reviewmodel&quot;&gt;ReviewModel&lt;/a&gt; 모델과 델리게이트 를 사용하여 &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt; 를 설정하는 것을 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a6c8fc94388c48a3bd5b33683aea813e536d206f" translate="yes" xml:space="preserve">
          <source>To use the &lt;a href=&quot;qtquick-index&quot;&gt;Qt Quick&lt;/a&gt; module, a QML document needs to import it. The import syntax looks like this:</source>
          <target state="translated">&lt;a href=&quot;qtquick-index&quot;&gt;Qt Quick&lt;/a&gt; 모듈 을 사용하려면 QML 문서를 가져와야합니다. 가져 오기 구문은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0be0413152d42ee898ca17f0148a1d0fab6d6991" translate="yes" xml:space="preserve">
          <source>To use the ActiveX controls, e.g. to embed them in a web page, use the &lt;code&gt;&amp;lt;object&amp;gt;&lt;/code&gt; HTML tag.</source>
          <target state="translated">ActiveX 컨트롤을 사용하려면 (예 : 웹 페이지에 포함) &lt;code&gt;&amp;lt;object&amp;gt;&lt;/code&gt; HTML 태그를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="c76e4aae03b98d3c436cd5142916d4f5fc437578" translate="yes" xml:space="preserve">
          <source>To use the C++ library in your application, add the following configuration option to your &lt;code&gt;.pro&lt;/code&gt; file:</source>
          <target state="translated">애플리케이션에서 C ++ 라이브러리를 사용하려면 &lt;code&gt;.pro&lt;/code&gt; 파일에 다음 구성 옵션을 추가 하십시오.</target>
        </trans-unit>
        <trans-unit id="1da950b6f08eaf72e543ceb56d8ffcc2bad7ccdc" translate="yes" xml:space="preserve">
          <source>To use the classes of the module in your application you need the following import statement in your &lt;code&gt;.qml&lt;/code&gt; file:</source>
          <target state="translated">응용 프로그램에서 모듈 클래스를 사용하려면 &lt;code&gt;.qml&lt;/code&gt; 파일 에 다음 import 문이 필요 합니다.</target>
        </trans-unit>
        <trans-unit id="103ba7027ead8005da5e81822bbb1e189e476e98" translate="yes" xml:space="preserve">
          <source>To use the dense variant, either set the &lt;code&gt;QT_QUICK_CONTROLS_MATERIAL_VARIANT&lt;/code&gt; environment variable to &lt;code&gt;Dense&lt;/code&gt;, or specify &lt;code&gt;Variant=Dense&lt;/code&gt; in the &lt;a href=&quot;qtquickcontrols2-configuration#&quot;&gt;qtquickcontrols2.conf&lt;/a&gt; file. The default value in both cases is &lt;code&gt;Normal&lt;/code&gt;.</source>
          <target state="translated">고밀도 변형을 사용하려면 &lt;code&gt;QT_QUICK_CONTROLS_MATERIAL_VARIANT&lt;/code&gt; 환경 변수를 &lt;code&gt;Dense&lt;/code&gt; 로 설정하거나 &lt;a href=&quot;qtquickcontrols2-configuration#&quot;&gt;qtquickcontrols2.conf&lt;/a&gt; 파일 에서 &lt;code&gt;Variant=Dense&lt;/code&gt; 를 지정 하십시오. 두 경우 모두 기본값은 &lt;code&gt;Normal&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="22d62a72da6be9a18d7984d7d5125b66cf714ae1" translate="yes" xml:space="preserve">
          <source>To use the direct approach, we include the &lt;code&gt;ui_calculatorform.h&lt;/code&gt; file directly in &lt;code&gt;main.cpp&lt;/code&gt;:</source>
          <target state="translated">직접 접근 방식을 사용하기 위해 &lt;code&gt;main.cpp&lt;/code&gt; 에 &lt;code&gt;ui_calculatorform.h&lt;/code&gt; 파일을 직접 포함시킵니다 .</target>
        </trans-unit>
        <trans-unit id="7b710e32fa581660dbe45b7f113394ead79a0107" translate="yes" xml:space="preserve">
          <source>To use the effects, simply add a specific effect declaration to the QML scene and configure the effects properties. Effects have one or more source properties for specifying the visual input for which the effect is applied to. The altered visual output is then presented in the effect item itself. The source can be another, often hidden, item in the QML scene. More complex effects can have multiple sources. The source item type can be any QML type, even video or another effect. Pipelining multiple effects together is a simple way to create even more impressive output.</source>
          <target state="translated">효과를 사용하려면 QML 장면에 특정 효과 선언을 추가하고 효과 속성을 구성하십시오. 효과에는 효과가 적용되는 시각적 입력을 지정하기위한 하나 이상의 소스 속성이 있습니다. 그런 다음 변경된 시각적 출력이 효과 항목 자체에 표시됩니다. QML 장면에서 소스는 종종 숨겨져있는 또 다른 항목 일 수 있습니다. 더 복잡한 효과는 여러 소스를 가질 수 있습니다. 소스 항목 유형은 모든 QML 유형, 비디오 또는 다른 효과 일 수 있습니다. 여러 효과를 함께 파이프 라이닝하면 더욱 인상적인 출력물을 만들 수있는 간단한 방법입니다.</target>
        </trans-unit>
        <trans-unit id="cf83c4fb7a90fa15be55dcb6a8a7c979d6d17ca7" translate="yes" xml:space="preserve">
          <source>To use the effects, simply add a specific effect declaration to the QML scene and configure the effects properties. The source item type can be any QML type, even video or another effect. Pipelining multiple effects together is a simple way to create even more impressive output.</source>
          <target state="translated">효과를 사용하려면 QML 장면에 특정 효과 선언을 추가하고 효과 속성을 구성하십시오. 소스 항목 유형은 모든 QML 유형, 비디오 또는 다른 효과 일 수 있습니다. 여러 효과를 함께 파이프 라이닝하면 더욱 인상적인 출력물을 만들 수있는 간단한 방법입니다.</target>
        </trans-unit>
        <trans-unit id="46cd92203ecb434c4945ae7b1d1b8d2f09035e0e" translate="yes" xml:space="preserve">
          <source>To use the embedded MySQL server, simply link the Qt plugin to &lt;code&gt;libmysqld&lt;/code&gt; instead of &lt;code&gt;libmysqlclient&lt;/code&gt;. This can be done by adding &lt;code&gt;MYSQL_LIBS=-lmysqld&lt;/code&gt; to the configure command line.</source>
          <target state="translated">임베디드 MySQL 서버를 사용하려면 Qt의 정보는 다음의 제품에 플러그인 링크 &lt;code&gt;libmysqld&lt;/code&gt; 대신 &lt;code&gt;libmysqlclient&lt;/code&gt; . &lt;code&gt;MYSQL_LIBS=-lmysqld&lt;/code&gt; 를 configure 명령 행 에 추가하면 됩니다.</target>
        </trans-unit>
        <trans-unit id="2fa0361192c7cf57fa972caba0d397a46f9ee9bd" translate="yes" xml:space="preserve">
          <source>To use the precompiled header also for C files on MSVC nmake target, add &lt;code&gt;precompile_header_c&lt;/code&gt; to the &lt;a href=&quot;qmake-variable-reference#config&quot;&gt;CONFIG&lt;/a&gt; variable. If the header is used also for C++ and it contains C++ keywords/includes, enclose them with &lt;code&gt;#ifdef __cplusplus&lt;/code&gt;).</source>
          <target state="translated">MSVC nmake 대상의 C 파일에도 사전 컴파일 된 헤더를 사용하려면 &lt;a href=&quot;qmake-variable-reference#config&quot;&gt;CONFIG&lt;/a&gt; 변수에 &lt;code&gt;precompile_header_c&lt;/code&gt; 를 추가 하십시오. 헤더가 C ++에도 사용되고 C ++ 키워드 / 포함을 포함하는 경우 &lt;code&gt;#ifdef __cplusplus&lt;/code&gt; )로 묶습니다 .</target>
        </trans-unit>
        <trans-unit id="344a787f4e29b583b54f38c395f0fff093e3c085" translate="yes" xml:space="preserve">
          <source>To use the property-based API, construct an instance of &lt;a href=&quot;qmessagebox&quot;&gt;QMessageBox&lt;/a&gt;, set the desired properties, and call &lt;a href=&quot;qmessagebox#exec&quot;&gt;exec&lt;/a&gt;() to show the message. The simplest configuration is to set only the &lt;a href=&quot;qmessagebox#text-prop&quot;&gt;message text&lt;/a&gt; property.</source>
          <target state="translated">속성 기반 API를 사용하려면 &lt;a href=&quot;qmessagebox&quot;&gt;QMessageBox&lt;/a&gt; 인스턴스를 생성 하고 원하는 속성을 설정 한 다음 &lt;a href=&quot;qmessagebox#exec&quot;&gt;exec&lt;/a&gt; ()를 호출 하여 메시지를 표시하십시오. 가장 간단한 구성은 &lt;a href=&quot;qmessagebox#text-prop&quot;&gt;메시지 텍스트&lt;/a&gt; 속성 만 설정하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="c0b925d5b3c9a4d9c57852b2e8125042b71cd1b8" translate="yes" xml:space="preserve">
          <source>To use the routing services hosted on ArcGIS Online with the Esri plugin, a token is required. You can &lt;a href=&quot;https://developers.arcgis.com/authentication/accessing-arcgis-online-services/#registering-your-application&quot;&gt;obtain a token for testing purposes&lt;/a&gt;, or you can sign up for an &lt;a href=&quot;http://www.arcgis.com/features/plans/pricing.html&quot;&gt;ArcGIS Online subscription&lt;/a&gt;.</source>
          <target state="translated">Esri 플러그인과 함께 ArcGIS Online에서 호스팅되는 라우팅 서비스를 사용하려면 토큰이 필요합니다. 당신은 할 수 있습니다 &lt;a href=&quot;https://developers.arcgis.com/authentication/accessing-arcgis-online-services/#registering-your-application&quot;&gt;테스트 목적으로 토큰을 얻을 수&lt;/a&gt; , 또는 당신은 가입 할 수 &lt;a href=&quot;http://www.arcgis.com/features/plans/pricing.html&quot;&gt;는 ArcGIS 온라인 가입&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="417c98f5639fc35a51a40ede06107e29bc7e65a8" translate="yes" xml:space="preserve">
          <source>To use the serial port in your application, add the following include statement:</source>
          <target state="translated">응용 프로그램에서 직렬 포트를 사용하려면 다음 include 문을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="43e81533d2fbc73c4ca18c25775d8e420f50420b" translate="yes" xml:space="preserve">
          <source>To use the single inheritance approach, we subclass a standard Qt widget and include a private instance of the form's user interface object. This can take the form of:</source>
          <target state="translated">단일 상속 접근 방식을 사용하기 위해 표준 Qt 위젯을 서브 클래 싱하고 폼의 사용자 인터페이스 객체의 프라이빗 인스턴스를 포함합니다. 이것은 다음과 같은 형태를 취할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0ee9fc8b0f1ad02829f7b1b312b3024d2bb8d393" translate="yes" xml:space="preserve">
          <source>To use the type &lt;code&gt;T&lt;/code&gt; in &lt;a href=&quot;qmetatype#Type-enum&quot;&gt;QVariant&lt;/a&gt;, using &lt;a href=&quot;qmetatype#Q_DECLARE_METATYPE&quot;&gt;Q_DECLARE_METATYPE&lt;/a&gt;() is sufficient. To use the type &lt;code&gt;T&lt;/code&gt; in queued signal and slot connections, &lt;code&gt;qRegisterMetaType&amp;lt;T&amp;gt;()&lt;/code&gt; must be called before the first connection is established.</source>
          <target state="translated">타입 사용하려면 &lt;code&gt;T&lt;/code&gt; 에서 &lt;a href=&quot;qmetatype#Type-enum&quot;&gt;QVariant를&lt;/a&gt; 사용하여, &lt;a href=&quot;qmetatype#Q_DECLARE_METATYPE&quot;&gt;Q_DECLARE_METATYPE하는&lt;/a&gt; ) (충분하다. 대기 신호 및 슬롯 연결에서 유형 &lt;code&gt;T&lt;/code&gt; 를 사용하려면 첫 번째 연결을 설정하기 전에 &lt;code&gt;qRegisterMetaType&amp;lt;T&amp;gt;()&lt;/code&gt; 을 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="850319b4468306fedcb7f275e497362e32ebfa16" translate="yes" xml:space="preserve">
          <source>To use the types from the particles module, import the module with the following line:</source>
          <target state="translated">파티클 모듈에서 유형을 사용하려면 다음 줄을 사용하여 모듈을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="3b39c88a51efba6c207d034e25f91b6872df297c" translate="yes" xml:space="preserve">
          <source>To use these classes in your application, use the following include statement:</source>
          <target state="translated">애플리케이션에서 이러한 클래스를 사용하려면 다음 include 문을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="184bba78b981ec64eefd9eaf5b04cd3cee5b7e3e" translate="yes" xml:space="preserve">
          <source>To use this class, create a &lt;a href=&quot;qbasictimer&quot;&gt;QBasicTimer&lt;/a&gt;, and call its &lt;a href=&quot;qbasictimer#start&quot;&gt;start&lt;/a&gt;() function with a timeout interval and with a pointer to a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; subclass. When the timer times out it will send a timer event to the &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; subclass. The timer can be stopped at any time using &lt;a href=&quot;qbasictimer#stop&quot;&gt;stop&lt;/a&gt;(). &lt;a href=&quot;qbasictimer#isActive&quot;&gt;isActive&lt;/a&gt;() returns &lt;code&gt;true&lt;/code&gt; for a timer that is running; i.e. it has been started, has not reached the timeout time, and has not been stopped. The timer's ID can be retrieved using &lt;a href=&quot;qbasictimer#timerId&quot;&gt;timerId&lt;/a&gt;().</source>
          <target state="translated">이 클래스를 사용하려면 &lt;a href=&quot;qbasictimer&quot;&gt;QBasicTimer를&lt;/a&gt; 작성하고 제한 시간 간격 및 &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; 서브 클래스에 대한 포인터를 사용하여 &lt;a href=&quot;qbasictimer#start&quot;&gt;start&lt;/a&gt; () 함수를 호출하십시오 . 타이머가 시간 초과되면 타이머 이벤트를 &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; 서브 클래스 로 보냅니다 . 타이머는 &lt;a href=&quot;qbasictimer#stop&quot;&gt;중지&lt;/a&gt; ()를 사용하여 언제든지 중지 할 수 있습니다 . &lt;a href=&quot;qbasictimer#isActive&quot;&gt;isActive&lt;/a&gt; () 는 실행중인 타이머에 대해 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . 즉, 시작되었고 시간 종료 시간에 도달하지 않았으며 중지되지 않았습니다. &lt;a href=&quot;qbasictimer#timerId&quot;&gt;timerId&lt;/a&gt; ()를 사용하여 타이머의 ID를 검색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fa7ed1f55e406b6c6db3565ddd474805feccf469" translate="yes" xml:space="preserve">
          <source>To use this element, you will need to import the module with the following line:</source>
          <target state="translated">이 요소를 사용하려면 다음 줄을 사용하여 모듈을 가져와야합니다.</target>
        </trans-unit>
        <trans-unit id="9a95d69a1c2b41a6b3d4c6d8baf39bc6881cd64b" translate="yes" xml:space="preserve">
          <source>To use this function for receiving data from other apps on iOS you also need to add the custom scheme to the &lt;code&gt;CFBundleURLSchemes&lt;/code&gt; list in your Info.plist file:</source>
          <target state="translated">iOS의 다른 앱에서 데이터를 수신하기 위해이 기능을 사용하려면 Info.plist 파일 의 &lt;code&gt;CFBundleURLSchemes&lt;/code&gt; 목록에 사용자 정의 구성표를 추가해야 합니다.</target>
        </trans-unit>
        <trans-unit id="73b277f8f9ae72172b58f5e1cff31f7db42f554f" translate="yes" xml:space="preserve">
          <source>To use this type, you will need to import the module with the following line:</source>
          <target state="translated">이 유형을 사용하려면 다음 줄을 사용하여 모듈을 가져와야합니다.</target>
        </trans-unit>
        <trans-unit id="55eb20a07882b3d8f2bbe8f1eadb08f3ba2dd7b1" translate="yes" xml:space="preserve">
          <source>To utilise the key frame animation framework in the Qt 3D Animation module the animator component in use needs to be provided with the key frame animation data. The animation data is provided by one of the concrete subclasses of &lt;a href=&quot;qt3danimation-qabstractanimationclip&quot;&gt;QAbstractAnimationClip&lt;/a&gt;:</source>
          <target state="translated">Qt 3D 애니메이션 모듈에서 키 프레임 애니메이션 프레임 워크를 사용하려면 사용중인 애니메이터 구성 요소에 키 프레임 애니메이션 데이터가 제공되어야합니다. 애니메이션 데이터는 &lt;a href=&quot;qt3danimation-qabstractanimationclip&quot;&gt;QAbstractAnimationClip&lt;/a&gt; 의 구체적 서브 클래스 중 하나에 의해 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="c6f632bbbaee16009860140a064727b43661dde9" translate="yes" xml:space="preserve">
          <source>To verify that your connection does support passing file descriptors, check if the &lt;a href=&quot;qdbusconnection#ConnectionCapability-enum&quot;&gt;QDBusConnection::UnixFileDescriptorPassing&lt;/a&gt; capability is set with &lt;a href=&quot;qdbusconnection#connectionCapabilities&quot;&gt;QDBusConnection::connectionCapabilities&lt;/a&gt;(). If the flag is not active, then you will not be able to make calls to methods that have &lt;a href=&quot;qdbusunixfiledescriptor&quot;&gt;QDBusUnixFileDescriptor&lt;/a&gt; as arguments or even embed such a type in a variant. You will also not receive calls containing that type.</source>
          <target state="translated">연결이 파일 디스크립터 전달을 지원하는지 확인하려면 &lt;a href=&quot;qdbusconnection#ConnectionCapability-enum&quot;&gt;QDBusConnection :: UnixFileDescriptorPassing&lt;/a&gt; 기능이 &lt;a href=&quot;qdbusconnection#connectionCapabilities&quot;&gt;QDBusConnection :: connectionCapabilities&lt;/a&gt; ()로 설정되어 있는지 확인하십시오 . 플래그가 활성화되어 있지 않으면 &lt;a href=&quot;qdbusunixfiledescriptor&quot;&gt;QDBusUnixFileDescriptor&lt;/a&gt; 를 인수로 사용하거나 변형에 이러한 유형을 포함 하는 메소드를 호출 할 수 없습니다 . 해당 유형이 포함 된 전화도받지 않습니다.</target>
        </trans-unit>
        <trans-unit id="94c1704445b1fd34fcad3f9fd79128904f210914" translate="yes" xml:space="preserve">
          <source>To view a list of all Qt examples, visit the &lt;a href=&quot;https://doc.qt.io/qt-5.13/all-examples.html&quot;&gt;List of Qt Examples&lt;/a&gt; page.</source>
          <target state="translated">모든 Qt 예제 목록을 보려면 Qt 예제 &lt;a href=&quot;https://doc.qt.io/qt-5.13/all-examples.html&quot;&gt;목록&lt;/a&gt; 페이지를 방문 하십시오.</target>
        </trans-unit>
        <trans-unit id="fecbbab395fb7597b6d5c5d6063a069e293c79bd" translate="yes" xml:space="preserve">
          <source>To view other examples and tutorials, visit the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtexamplesandtutorials.html&quot;&gt;Qt Examples And Tutorials&lt;/a&gt; page.</source>
          <target state="translated">다른 예제와 자습서를 보려면 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtexamplesandtutorials.html&quot;&gt;Qt 예제 및 자습서&lt;/a&gt; 페이지를 방문 하십시오.</target>
        </trans-unit>
        <trans-unit id="f788a9c0bb649b6cf10cedb47a42bb1ae130b68e" translate="yes" xml:space="preserve">
          <source>To visualize a scene, you start by constructing a &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; object, passing the address of the scene you want to visualize to &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt;'s constructor. Alternatively, you can call &lt;a href=&quot;qgraphicsview#setScene&quot;&gt;setScene&lt;/a&gt;() to set the scene at a later point. After you call &lt;a href=&quot;qwidget#show&quot;&gt;show&lt;/a&gt;(), the view will by default scroll to the center of the scene and display any items that are visible at this point. For example:</source>
          <target state="translated">장면을 시각화하려면 먼저 &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; 객체 를 구성하고 시각화하려는 장면의 주소를 &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; 의 생성자에 전달합니다. 또는 &lt;a href=&quot;qgraphicsview#setScene&quot;&gt;setScene&lt;/a&gt; ()을 호출 하여 나중에 장면을 설정할 수 있습니다 . &lt;a href=&quot;qwidget#show&quot;&gt;show&lt;/a&gt; () 를 호출하면 기본적으로 뷰가 장면의 중심으로 스크롤되어이 시점에서 볼 수있는 항목이 표시됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a6c5dcf2267f5ca4bfbe067d2112b28133c1c357" translate="yes" xml:space="preserve">
          <source>To visualize data, bind the view's &lt;code&gt;model&lt;/code&gt; property to a model and the &lt;code&gt;delegate&lt;/code&gt; property to a component or another compatible type.</source>
          <target state="translated">데이터를 시각화하려면보기의 &lt;code&gt;model&lt;/code&gt; 속성을 모델에 바인딩하고 &lt;code&gt;delegate&lt;/code&gt; 속성을 구성 요소 또는 호환 가능한 다른 유형에 바인딩하십시오 .</target>
        </trans-unit>
        <trans-unit id="1393acc65180219eb38330e3066cba95a0abc01b" translate="yes" xml:space="preserve">
          <source>To visualize the various aspects of the scene graph's default renderer, the &lt;code&gt;QSG_VISUALIZE&lt;/code&gt; environment variable can be set to one of the values detailed in each section below. We provide examples of the output of some of the variables using the following QML code:</source>
          <target state="translated">장면 그래프의 기본 렌더러의 다양한 측면을 시각화하기 위해 &lt;code&gt;QSG_VISUALIZE&lt;/code&gt; 환경 변수를 아래 각 섹션에 자세히 설명 된 값 중 하나로 설정할 수 있습니다. 다음 QML 코드를 사용하여 일부 변수의 출력 예를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="e90e04ec004d0da467b9b0e22ea0f621a70575f5" translate="yes" xml:space="preserve">
          <source>To visualize, imagine the layout as a box that shrinks as much as possible, attempting to</source>
          <target state="translated">시각화하기 위해 레이아웃을 최대한 축소하면서 상자로 생각하십시오.</target>
        </trans-unit>
        <trans-unit id="511bc3811233860a0375ae99e9149f6cdb2210da" translate="yes" xml:space="preserve">
          <source>To work around this limitation with the functor-based syntax, connect the signal to a lambda function that calls the slot. See the section above, &lt;a href=&quot;#making-connections-to-lambda-expressions&quot;&gt;Making Connections to Lambda Expressions&lt;/a&gt;.</source>
          <target state="translated">functor 기반 구문으로이 제한을 해결하려면 신호를 슬롯을 호출하는 람다 함수에 연결하십시오. 위의 &lt;a href=&quot;#making-connections-to-lambda-expressions&quot;&gt;Lambda 표현식에 연결하기&lt;/a&gt; 섹션을 참조하십시오. .</target>
        </trans-unit>
        <trans-unit id="ef88f4b6bec02d94449203c96edb9b22ebe91314" translate="yes" xml:space="preserve">
          <source>To work correctly, the code that accesses the reading should ensure the &lt;a href=&quot;qsensor#readingChanged&quot;&gt;readingChanged&lt;/a&gt;() signal has been emitted.</source>
          <target state="translated">제대로 확인해야 읽기 액세스 코드하려면 &lt;a href=&quot;qsensor#readingChanged&quot;&gt;readingChanged을&lt;/a&gt; () 신호가 방출 .</target>
        </trans-unit>
        <trans-unit id="4d0d973f62091bd2c9ddb04f2f2a498ef0c6cc59" translate="yes" xml:space="preserve">
          <source>To write XML document with &lt;a href=&quot;qxmlstreamwriter&quot;&gt;QXmlStreamWriter&lt;/a&gt;, you start a document with the &lt;a href=&quot;qxmlstreamwriter#writeStartDocument-1&quot;&gt;writeStartDocument()&lt;/a&gt; function and end it with &lt;a href=&quot;qxmlstreamwriter#writeEndDocument&quot;&gt;writeEndDocument()&lt;/a&gt;, which implicitly closes all remaining open tags. Element tags are opened with &lt;a href=&quot;qxmlstreamwriter#writeStartDocument-1&quot;&gt;writeStartDocument()&lt;/a&gt; and followed by &lt;a href=&quot;qxmlstreamwriter#writeAttribute&quot;&gt;writeAttribute()&lt;/a&gt; or &lt;a href=&quot;qxmlstreamwriter#writeAttributes&quot;&gt;writeAttributes()&lt;/a&gt;, element content, and then &lt;a href=&quot;qxmlstreamwriter#writeEndDocument&quot;&gt;writeEndDocument()&lt;/a&gt;. Also, &lt;a href=&quot;qxmlstreamwriter#writeEmptyElement&quot;&gt;writeEmptyElement()&lt;/a&gt; can be used to write empty elements.</source>
          <target state="translated">&lt;a href=&quot;qxmlstreamwriter&quot;&gt;QXmlStreamWriter를 사용&lt;/a&gt; 하여 XML 문서를 작성하려면 &lt;a href=&quot;qxmlstreamwriter#writeStartDocument-1&quot;&gt;writeStartDocument ()&lt;/a&gt; 함수 로 문서를 시작하고 &lt;a href=&quot;qxmlstreamwriter#writeEndDocument&quot;&gt;writeEndDocument ()로&lt;/a&gt; 종료합니다. 그러면 모든 열린 태그가 내재적으로 닫힙니다. 요소 태그는 &lt;a href=&quot;qxmlstreamwriter#writeStartDocument-1&quot;&gt;writeStartDocument ()&lt;/a&gt; 로 연 다음 &lt;a href=&quot;qxmlstreamwriter#writeAttribute&quot;&gt;writeAttribute ()&lt;/a&gt; 또는 &lt;a href=&quot;qxmlstreamwriter#writeAttributes&quot;&gt;writeAttributes ()&lt;/a&gt; , 요소 컨텐츠 및 &lt;a href=&quot;qxmlstreamwriter#writeEndDocument&quot;&gt;writeEndDocument ()로 이어&lt;/a&gt; 집니다. 또한 &lt;a href=&quot;qxmlstreamwriter#writeEmptyElement&quot;&gt;writeEmptyElement ()&lt;/a&gt; 를 사용하여 빈 요소를 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="44d61d053cc733b1248243f09754643c6240fc41" translate="yes" xml:space="preserve">
          <source>To write a QML extension plugin:</source>
          <target state="translated">QML 확장 플러그인을 작성하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="de95b8233d3e5f5e70066e4fb5cfeb52910e0c33" translate="yes" xml:space="preserve">
          <source>To write a document, construct a &lt;a href=&quot;qtextdocumentwriter&quot;&gt;QTextDocumentWriter&lt;/a&gt; object with either a file name or a device object, and specify the document format to be written. You can construct a writer and set the format using &lt;a href=&quot;qtextdocumentwriter#setFormat&quot;&gt;setFormat&lt;/a&gt;() later.</source>
          <target state="translated">문서를 작성하려면 파일 이름 또는 장치 오브젝트 로 &lt;a href=&quot;qtextdocumentwriter&quot;&gt;QTextDocumentWriter&lt;/a&gt; 오브젝트를 구성하고 작성 될 문서 형식을 지정하십시오. &lt;a href=&quot;qtextdocumentwriter#setFormat&quot;&gt;setFormat을&lt;/a&gt; 사용하여 라이터를 구성하고 형식을 설정할 수 있습니다나중에 ()을 .</target>
        </trans-unit>
        <trans-unit id="8f811397afed2cb47c8ba4e5f825f4a9aa33af4d" translate="yes" xml:space="preserve">
          <source>To write a regexp that matches one of the words 'mail'</source>
          <target state="translated">'mail'이라는 단어 중 하나와 일치하는 정규 표현식을 작성하려면</target>
        </trans-unit>
        <trans-unit id="d668ae9b72586d0e01024591f6ae089c920f8e53" translate="yes" xml:space="preserve">
          <source>To write an SVG file, you first need to configure the output by setting the &lt;a href=&quot;qsvggenerator#fileName-prop&quot;&gt;fileName&lt;/a&gt; or &lt;a href=&quot;qsvggenerator#outputDevice-prop&quot;&gt;outputDevice&lt;/a&gt; properties. It is usually necessary to specify the size of the drawing by setting the &lt;a href=&quot;qsvggenerator#size-prop&quot;&gt;size&lt;/a&gt; property, and in some cases where the drawing will be included in another, the &lt;a href=&quot;qsvggenerator#viewBox&quot;&gt;viewBox&lt;/a&gt; property also needs to be set.</source>
          <target state="translated">SVG 파일을 작성하려면 먼저 &lt;a href=&quot;qsvggenerator#fileName-prop&quot;&gt;fileName&lt;/a&gt; 또는 &lt;a href=&quot;qsvggenerator#outputDevice-prop&quot;&gt;outputDevice&lt;/a&gt; 속성 을 설정하여 출력을 구성해야 합니다. 일반적으로 &lt;a href=&quot;qsvggenerator#size-prop&quot;&gt;size&lt;/a&gt; 속성 을 설정하여 드로잉의 크기를 지정해야하며 , 드로잉이 다른 속성에 포함될 경우 &lt;a href=&quot;qsvggenerator#viewBox&quot;&gt;viewBox&lt;/a&gt; 속성도 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="1ff7ab0e0f88d36c110662824d6087f8f8d65efb" translate="yes" xml:space="preserve">
          <source>To write text, we can use operator&amp;lt;&amp;lt;(), which is overloaded to take a &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt; on the left and various data types (including &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;) on the right:</source>
          <target state="translated">텍스트를 쓰려면 연산자 &amp;lt;&amp;lt; ()를 사용 하면 왼쪽에 &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt; 을 사용하도록 오버로드 되고 다양한 데이터 유형 ( &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; 포함)을 사용할 수 있습니다 ) .</target>
        </trans-unit>
        <trans-unit id="23e1b37d5c4ed0409f8139e7100f82436e5ff069" translate="yes" xml:space="preserve">
          <source>To write your own graphics item, you first create a subclass of &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;, and then start by implementing its two pure virtual public functions: &lt;a href=&quot;qgraphicsitem#boundingRect&quot;&gt;boundingRect&lt;/a&gt;(), which returns an estimate of the area painted by the item, and &lt;a href=&quot;qgraphicsitem#paint&quot;&gt;paint&lt;/a&gt;(), which implements the actual painting. For example:</source>
          <target state="translated">자신 만의 그래픽 아이템을 작성하려면 먼저 &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; 의 서브 클래스를 생성 한 다음 두 가지 순수한 가상 퍼블릭 함수 인 &lt;a href=&quot;qgraphicsitem#boundingRect&quot;&gt;boundingRect&lt;/a&gt; (), 아이템으로 그린 ​​영역의 추정값을 리턴하는 &lt;a href=&quot;qgraphicsitem#paint&quot;&gt;paint&lt;/a&gt; (), 실제 그림. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8ffbd4be9d7c65240d26efbfd1286b9644aab813" translate="yes" xml:space="preserve">
          <source>To write your own image handler, you must at least reimplement &lt;a href=&quot;qimageiohandler#canRead&quot;&gt;canRead&lt;/a&gt;() and &lt;a href=&quot;qimageiohandler#read&quot;&gt;read&lt;/a&gt;(). Then create a &lt;a href=&quot;qimageioplugin&quot;&gt;QImageIOPlugin&lt;/a&gt; that can create the handler. Finally, install your plugin, and &lt;a href=&quot;qimagereader&quot;&gt;QImageReader&lt;/a&gt; and &lt;a href=&quot;qimagewriter&quot;&gt;QImageWriter&lt;/a&gt; will then automatically load the plugin, and start using it.</source>
          <target state="translated">자체 이미지 핸들러를 작성하려면 최소한 &lt;a href=&quot;qimageiohandler#canRead&quot;&gt;canRead&lt;/a&gt; () 및 &lt;a href=&quot;qimageiohandler#read&quot;&gt;read&lt;/a&gt; ()를 다시 구현해야합니다 . 그런 다음 핸들러를 작성할 수 있는 &lt;a href=&quot;qimageioplugin&quot;&gt;QImageIOPlugin&lt;/a&gt; 을 작성하십시오. 마지막으로 플러그인과 &lt;a href=&quot;qimagereader&quot;&gt;QImageReader&lt;/a&gt; 및 &lt;a href=&quot;qimagewriter&quot;&gt;QImageWriter를&lt;/a&gt; 설치하십시오. 하면 가 자동으로 플러그인을로드하고 사용을 시작합니다.</target>
        </trans-unit>
        <trans-unit id="77066c9c7b343f150cf625d0587af3812bf41d04" translate="yes" xml:space="preserve">
          <source>To write your own layout class, you must define the following:</source>
          <target state="translated">자체 레이아웃 클래스를 작성하려면 다음을 정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="6975707254a8fcea83152ff2c6cfecd6d26e54da" translate="yes" xml:space="preserve">
          <source>To write your own painted item, you first create a subclass of &lt;a href=&quot;qquickpainteditem&quot;&gt;QQuickPaintedItem&lt;/a&gt;, and then start by implementing its only pure virtual public function: &lt;a href=&quot;qquickpainteditem#paint&quot;&gt;paint&lt;/a&gt;(), which implements the actual painting. The painting will be inside the rectangle spanning from 0,0 to &lt;a href=&quot;qquickitem#width-prop&quot;&gt;width&lt;/a&gt;(),&lt;a href=&quot;qquickitem#height-prop&quot;&gt;height&lt;/a&gt;().</source>
          <target state="translated">직접 페인트 한 항목을 작성하려면 먼저 &lt;a href=&quot;qquickpainteditem&quot;&gt;QQuickPaintedItem&lt;/a&gt; 의 서브 클래스를 만든 다음 실제 페인팅을 구현하는 순수한 가상 퍼블릭 함수 인 &lt;a href=&quot;qquickpainteditem#paint&quot;&gt;paint&lt;/a&gt; () 만 구현하여 시작 하십시오. 그림은 0에서 0까지의 &lt;a href=&quot;qquickitem#width-prop&quot;&gt;너비&lt;/a&gt; (), &lt;a href=&quot;qquickitem#height-prop&quot;&gt;높이&lt;/a&gt; () 까지 사각형 안에 있습니다 .</target>
        </trans-unit>
        <trans-unit id="87eeb785062498f696b73923696a8109f78f94a9" translate="yes" xml:space="preserve">
          <source>ToSuperClass</source>
          <target state="translated">ToSuperClass</target>
        </trans-unit>
        <trans-unit id="f226ae58fcb61b05bcd36afd0024cffe9789ceaf" translate="yes" xml:space="preserve">
          <source>Together with &lt;a href=&quot;qimage#dotsPerMeterX&quot;&gt;dotsPerMeterX&lt;/a&gt;(), this number defines the intended scale and aspect ratio of the image, and determines the scale at which &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; will draw graphics on the image. It does not change the scale or aspect ratio of the image when it is rendered on other paint devices.</source>
          <target state="translated">함께 &lt;a href=&quot;qimage#dotsPerMeterX&quot;&gt;dotsPerMeterX&lt;/a&gt; ()이 수는 이미지의 의도 된 크기 및 종횡비를 정의하고있는 스케일을 결정 &lt;a href=&quot;qpainter&quot;&gt;QPainter를&lt;/a&gt; 이미지에 그래픽을 그리는 것이다. 이미지가 다른 페인트 장치에서 렌더링 될 때 이미지의 비율 또는 종횡비를 변경하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="326469acfb7fcd9ed0f1478d14069648562217f8" translate="yes" xml:space="preserve">
          <source>Together with &lt;a href=&quot;qimage#dotsPerMeterY&quot;&gt;dotsPerMeterY&lt;/a&gt;(), this number defines the intended scale and aspect ratio of the image, and determines the scale at which &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; will draw graphics on the image. It does not change the scale or aspect ratio of the image when it is rendered on other paint devices.</source>
          <target state="translated">함께 &lt;a href=&quot;qimage#dotsPerMeterY&quot;&gt;dotsPerMeterY&lt;/a&gt; ()이 수는 이미지의 의도 된 크기 및 종횡비를 정의하고있는 스케일 결정 &lt;a href=&quot;qpainter&quot;&gt;QPainter가이&lt;/a&gt; 이미지에 그래픽을 그리는 것이다. 이미지가 다른 페인트 장치에서 렌더링 될 때 이미지의 비율 또는 종횡비를 변경하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c572278745917e1ae4e6d230fbaa968d92087735" translate="yes" xml:space="preserve">
          <source>Together with the &lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt; and &lt;a href=&quot;qpaintengine&quot;&gt;QPaintEngine&lt;/a&gt; classes, &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; form the basis for Qt's paint system. &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; is the class used to perform drawing operations. &lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt; represents a device that can be painted on using a &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;. &lt;a href=&quot;qpaintengine&quot;&gt;QPaintEngine&lt;/a&gt; provides the interface that the painter uses to draw onto different types of devices. If the painter is active, &lt;a href=&quot;qpainter#device&quot;&gt;device&lt;/a&gt;() returns the paint device on which the painter paints, and &lt;a href=&quot;qpainter#paintEngine&quot;&gt;paintEngine&lt;/a&gt;() returns the paint engine that the painter is currently operating on. For more information, see the &lt;a href=&quot;paintsystem#&quot;&gt;Paint System&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt; 및 &lt;a href=&quot;qpaintengine&quot;&gt;QPaintEngine&lt;/a&gt; 클래스 와 함께 &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; 는 Qt의 페인트 시스템의 기초를 형성합니다. &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; 는 그리기 작업을 수행하는 데 사용되는 클래스입니다. &lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt; 는 &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; 를 사용하여 칠할 수있는 장치를 나타냅니다 . &lt;a href=&quot;qpaintengine&quot;&gt;QPaintEngine&lt;/a&gt; 은 화가가 다른 유형의 장치에 그리는 데 사용하는 인터페이스를 제공합니다. 페인터가 활성화 된 경우 &lt;a href=&quot;qpainter#device&quot;&gt;device&lt;/a&gt; ()는 페인터가 페인트하는 페인트 장치를 반환 하고 &lt;a href=&quot;qpainter#paintEngine&quot;&gt;paintEngine&lt;/a&gt; ()은 페인터가 현재 작동중인 페인트 엔진을 반환합니다. 자세한 내용은 &lt;a href=&quot;paintsystem#&quot;&gt;페인트 시스템을&lt;/a&gt; 참조하십시오. .</target>
        </trans-unit>
        <trans-unit id="a3988daf6125d691299e1ec35d91cd86e435d5c1" translate="yes" xml:space="preserve">
          <source>Together, signals and slots make up a powerful component programming mechanism.</source>
          <target state="translated">신호와 슬롯은 함께 강력한 컴포넌트 프로그래밍 메커니즘을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="356e402bdf439584606d4cd3e654fb391f1b33f2" translate="yes" xml:space="preserve">
          <source>Toggle between showing and hiding the controls for the hovered audio or video element. (Added in Qt 5.6)</source>
          <target state="translated">마우스를 놓은 오디오 또는 비디오 요소에 대한 컨트롤 표시 및 숨기기 간을 전환합니다. (Qt 5.6에서 추가됨)</target>
        </trans-unit>
        <trans-unit id="7c9f0b4876c9d510d059cca56dd77f9dab0879c9" translate="yes" xml:space="preserve">
          <source>Toggle input mode</source>
          <target state="translated">입력 모드 전환</target>
        </trans-unit>
        <trans-unit id="47afa10d70f6f3886f861822999a8534d4f5129e" translate="yes" xml:space="preserve">
          <source>Toggle mode</source>
          <target state="translated">토글 모드</target>
        </trans-unit>
        <trans-unit id="4578157972c9fd8aa8a73d6882a0fd2fd1208c57" translate="yes" xml:space="preserve">
          <source>Toggle text case</source>
          <target state="translated">텍스트 케이스 전환</target>
        </trans-unit>
        <trans-unit id="d21e7aa6de1c18e04b0d4efb131bb132f031194b" translate="yes" xml:space="preserve">
          <source>Toggle the play/pause state of the hovered audio or video element. (Added in Qt 5.6)</source>
          <target state="translated">호버링 된 오디오 또는 비디오 요소의 재생 / 일시 정지 상태를 토글합니다. (Qt 5.6에서 추가됨)</target>
        </trans-unit>
        <trans-unit id="d8c581b35108757519130ecf7b6312935e8e9f21" translate="yes" xml:space="preserve">
          <source>Toggle the window state to/from full screen.</source>
          <target state="translated">창 상태를 전체 화면으로 전환합니다.</target>
        </trans-unit>
        <trans-unit id="e3c84e179b1811da43ca74efc52a5fbb480673ec" translate="yes" xml:space="preserve">
          <source>Toggle whether the hovered audio or video should loop on completetion or not. (Added in Qt 5.6)</source>
          <target state="translated">호버링 된 오디오 또는 비디오가 완료시 루프되어야하는지 여부를 토글하십시오. (Qt 5.6에서 추가됨)</target>
        </trans-unit>
        <trans-unit id="d478a266235e71d641c30ad3f5e9b906715534ac" translate="yes" xml:space="preserve">
          <source>ToggleButton</source>
          <target state="translated">ToggleButton</target>
        </trans-unit>
        <trans-unit id="9ae19050ed3d83f85185b0647f4fc78a2d68f5c9" translate="yes" xml:space="preserve">
          <source>ToggleButton (QML type)</source>
          <target state="translated">토글 버튼 (QML 유형)</target>
        </trans-unit>
        <trans-unit id="6bffc59b3164c5e9f93f213e13c4abee9ad681c7" translate="yes" xml:space="preserve">
          <source>ToggleButton QML Type</source>
          <target state="translated">ToggleButton QML 유형</target>
        </trans-unit>
        <trans-unit id="7c18bde8358081cf97a50e8eff795cde03642c8a" translate="yes" xml:space="preserve">
          <source>ToggleButtonStyle</source>
          <target state="translated">ToggleButtonStyle</target>
        </trans-unit>
        <trans-unit id="6f6da0ef22c4830654430193a613b0e2695aa82f" translate="yes" xml:space="preserve">
          <source>ToggleButtonStyle (QML type)</source>
          <target state="translated">ToggleButtonStyle (QML 유형)</target>
        </trans-unit>
        <trans-unit id="64669707e85a9d6bc766fa8a8fa585bb18e1518f" translate="yes" xml:space="preserve">
          <source>ToggleButtonStyle QML Type</source>
          <target state="translated">ToggleButtonStyle QML 유형</target>
        </trans-unit>
        <trans-unit id="a6d1a7ec39843d20439143e9d0c9bf5c76dc90d2" translate="yes" xml:space="preserve">
          <source>ToggleButtonStyle.checkedDropShadowColor</source>
          <target state="translated">ToggleButtonStyle.checkedDropShadowColor</target>
        </trans-unit>
        <trans-unit id="3bdacc4c90285c78240c0f787efd961c44a7e818" translate="yes" xml:space="preserve">
          <source>ToggleButtonStyle.checkedGradient</source>
          <target state="translated">ToggleButtonStyle.checkedGradient</target>
        </trans-unit>
        <trans-unit id="36c5a90dfd461d51d845132165ecbde08dbef39a" translate="yes" xml:space="preserve">
          <source>ToggleButtonStyle.control</source>
          <target state="translated">ToggleButtonStyle.control</target>
        </trans-unit>
        <trans-unit id="1ee8b2f1957863cb25b56b26a420ff6d64eaaa11" translate="yes" xml:space="preserve">
          <source>ToggleButtonStyle.inactiveGradient</source>
          <target state="translated">ToggleButtonStyle.inactiveGradient</target>
        </trans-unit>
        <trans-unit id="6724f97ab383ad4f8451fce3948a9802afb6b85d" translate="yes" xml:space="preserve">
          <source>ToggleButtonStyle.uncheckedDropShadowColor</source>
          <target state="translated">ToggleButtonStyle.uncheckedDropShadowColor</target>
        </trans-unit>
        <trans-unit id="efb54e5ec55ebdbe466554c4a62cc58964553d0a" translate="yes" xml:space="preserve">
          <source>ToggleButtonStyle.uncheckedGradient</source>
          <target state="translated">ToggleButtonStyle.uncheckedGradient</target>
        </trans-unit>
        <trans-unit id="3788f8c57ddc92538477f8cfdee3affa7fec67ec" translate="yes" xml:space="preserve">
          <source>Toggled by &lt;a href=&quot;qgraphicswidget#layoutDirection-prop&quot;&gt;setLayoutDirection&lt;/a&gt;(). Inherited from the parent/scene. If set, the widget's layout will order horizontally arranged widgets from right to left.</source>
          <target state="translated">토글 &lt;a href=&quot;qgraphicswidget#layoutDirection-prop&quot;&gt;setLayoutDirection&lt;/a&gt; (). 부모 / 장면에서 상속됩니다. 설정된 경우 위젯의 레이아웃은 가로로 정렬 된 위젯을 오른쪽에서 왼쪽으로 정렬합니다.</target>
        </trans-unit>
        <trans-unit id="bc09fd8a130b622944e3e9ae8c15485712a7c2f1" translate="yes" xml:space="preserve">
          <source>Toggles automatic signal relaying from the real object (see object()).</source>
          <target state="translated">실제 객체에서 자동 신호 릴레이를 토글합니다 (object () 참조).</target>
        </trans-unit>
        <trans-unit id="668e155ff332d015983c56f5717f37ef48f9f7c2" translate="yes" xml:space="preserve">
          <source>Toggles boldness for the selection or at the cursor position. Requires &lt;code&gt;contenteditable=&quot;true&quot;&lt;/code&gt;. (Added in Qt 5.10)</source>
          <target state="translated">선택 또는 커서 위치에서 대담성을 토글합니다. &lt;code&gt;contenteditable=&quot;true&quot;&lt;/code&gt; 필요 . (Qt 5.10에서 추가됨)</target>
        </trans-unit>
        <trans-unit id="d07850e2c30aed2640e1640cd55c00c5c565e1f6" translate="yes" xml:space="preserve">
          <source>Toggles insertion of the Byte Order Mark on</source>
          <target state="translated">바이트 순서 마크 삽입을 토글합니다.</target>
        </trans-unit>
        <trans-unit id="62593e70a0519a949e934c2de5e31b3f7d1ffcc9" translate="yes" xml:space="preserve">
          <source>Toggles italics for the selection or at the cursor position. Requires &lt;code&gt;contenteditable=&quot;true&quot;&lt;/code&gt;. (Added in Qt 5.10)</source>
          <target state="translated">선택 또는 커서 위치에서 기울임 꼴을 토글합니다. &lt;code&gt;contenteditable=&quot;true&quot;&lt;/code&gt; 가 필요합니다 . (Qt 5.10에서 추가됨)</target>
        </trans-unit>
        <trans-unit id="0956c85b541011583adfefe8b5a7e11ea77fb1dd" translate="yes" xml:space="preserve">
          <source>Toggles selection of the current item.</source>
          <target state="translated">현재 항목 선택을 토글합니다.</target>
        </trans-unit>
        <trans-unit id="2c695116ac4a629b5d8fac031887530af2833379" translate="yes" xml:space="preserve">
          <source>Toggles striking through the selection or at the cursor position. Requires &lt;code&gt;contenteditable=&quot;true&quot;&lt;/code&gt;. (Added in Qt 5.10)</source>
          <target state="translated">선택 또는 커서 위치에서 눈에 띄는 토글. &lt;code&gt;contenteditable=&quot;true&quot;&lt;/code&gt; 가 필요합니다 . (Qt 5.10에서 추가됨)</target>
        </trans-unit>
        <trans-unit id="b6f817519d5d482ac9f3f48f61e96144a098a130" translate="yes" xml:space="preserve">
          <source>Toggles the &lt;a href=&quot;qml-qt-labs-platform-menuitem#checked-prop&quot;&gt;checked&lt;/a&gt; state to its opposite state.</source>
          <target state="translated">&lt;a href=&quot;qml-qt-labs-platform-menuitem#checked-prop&quot;&gt;확인 된&lt;/a&gt; 상태를 반대 상태로 전환합니다 .</target>
        </trans-unit>
        <trans-unit id="19fcae93ee1a1558b52df0646585e0b0c275948e" translate="yes" xml:space="preserve">
          <source>Toggles the action and emits &lt;a href=&quot;qml-qtquick-controls2-action#toggled-signal&quot;&gt;toggled()&lt;/a&gt; if enabled, with an optional</source>
          <target state="translated">선택적으로 액션을 토글하고 &lt;a href=&quot;qml-qtquick-controls2-action#toggled-signal&quot;&gt;toggled ()&lt;/a&gt; 를 활성화합니다</target>
        </trans-unit>
        <trans-unit id="772cd23bbff7b3d6a882e66434affaaf207229d1" translate="yes" xml:space="preserve">
          <source>Toggles the checked state of the button.</source>
          <target state="translated">버튼의 체크 상태를 토글합니다.</target>
        </trans-unit>
        <trans-unit id="c592dd605a3313ed01ed8e2ac518a09f2eae16d6" translate="yes" xml:space="preserve">
          <source>Toggles the current shift state.</source>
          <target state="translated">현재 시프트 상태를 토글합니다.</target>
        </trans-unit>
        <trans-unit id="64e1f4f5cde88ae764f6d07400822a7b14f28d40" translate="yes" xml:space="preserve">
          <source>Toggles the direction of the timeline. If the direction was Forward, it becomes Backward, and vice verca.</source>
          <target state="translated">타임 라인 방향을 전환합니다. 방향이 앞으로 인 경우 뒤로가되고 반대로도됩니다.</target>
        </trans-unit>
        <trans-unit id="d2fc743690ee6cc000a719a6055ce8c1c3300da3" translate="yes" xml:space="preserve">
          <source>Toggles the paused state of the asynchronous computation. In other words, if the computation is currently paused, calling this function resumes it; if the computation is running, it becomes paused. This is a convenience method for calling &lt;a href=&quot;qfuturewatcher#setPaused&quot;&gt;setPaused&lt;/a&gt;(!&lt;a href=&quot;qfuturewatcher#isPaused&quot;&gt;isPaused&lt;/a&gt;()).</source>
          <target state="translated">비동기 계산의 일시 정지 상태를 토글합니다. 다시 말해, 계산이 현재 일시 정지 된 경우이 함수를 호출하면 다시 시작됩니다. 계산이 실행 중이면 일시 중지됩니다. &lt;a href=&quot;qfuturewatcher#setPaused&quot;&gt;setPaused&lt;/a&gt; (! &lt;a href=&quot;qfuturewatcher#isPaused&quot;&gt;isPaused&lt;/a&gt; ()) 를 호출하는 편리한 방법입니다 .</target>
        </trans-unit>
        <trans-unit id="3048c15fde57b385ddab5ca256344256b116799a" translate="yes" xml:space="preserve">
          <source>Toggles the paused state of the asynchronous computation. In other words, if the computation is currently paused, calling this function resumes it; if the computation is running, it is paused. This is a convenience method for calling &lt;a href=&quot;qfuture#setPaused&quot;&gt;setPaused&lt;/a&gt;(!&lt;a href=&quot;qfuture#isPaused&quot;&gt;isPaused&lt;/a&gt;()).</source>
          <target state="translated">비동기 계산의 일시 정지 상태를 토글합니다. 다시 말해, 계산이 현재 일시 정지 된 경우이 함수를 호출하면 다시 시작됩니다. 계산이 실행 중이면 일시 중지됩니다. &lt;a href=&quot;qfuture#setPaused&quot;&gt;setPaused&lt;/a&gt; (! &lt;a href=&quot;qfuture#isPaused&quot;&gt;isPaused&lt;/a&gt; ()) 를 호출하는 편리한 방법입니다 .</target>
        </trans-unit>
        <trans-unit id="abf7d6c09e8c07360f215b3b7b3f6ae896375760" translate="yes" xml:space="preserve">
          <source>Toggles the state of a checkable button.</source>
          <target state="translated">확인 가능한 버튼의 상태를 토글합니다.</target>
        </trans-unit>
        <trans-unit id="b9f8e2a323b0a695dde25875b692f01f01a6ca43" translate="yes" xml:space="preserve">
          <source>Toggles the status of player between playing and paused states.</source>
          <target state="translated">플레이어 상태를 재생 상태와 일시 중지 상태간에 전환합니다.</target>
        </trans-unit>
        <trans-unit id="2cedefd190aeb7bf3bf0ab0b419806f549be15f8" translate="yes" xml:space="preserve">
          <source>Toggles underlining of the selection or at the cursor position. Requires &lt;code&gt;contenteditable=&quot;true&quot;&lt;/code&gt;. (Added in Qt 5.10)</source>
          <target state="translated">선택의 밑줄 또는 커서 위치를 토글합니다. &lt;code&gt;contenteditable=&quot;true&quot;&lt;/code&gt; 필요 . (Qt 5.10에서 추가됨)</target>
        </trans-unit>
        <trans-unit id="f7ab63c152bfa7e9e01eb000bbb2e65ae9fa0349" translate="yes" xml:space="preserve">
          <source>Token credentials have been received and authenticated calls are allowed.</source>
          <target state="translated">토큰 신임 정보가 수신되었으며 인증 된 통화가 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="af0cfce16fa1fe510185dad9cdb29be3a1b9a667" translate="yes" xml:space="preserve">
          <source>Too many levels of arrays or maps encountered while processing the input (internal limitation, but the error is not recoverable).</source>
          <target state="translated">입력을 처리하는 동안 너무 많은 레벨의 배열 또는 맵이 발견되었습니다 (내부 제한이지만 오류는 복구 할 수 없음).</target>
        </trans-unit>
        <trans-unit id="89deff98f3df9c6085166b38ae7e0d28de040cba" translate="yes" xml:space="preserve">
          <source>Tool Boxes</source>
          <target state="translated">도구 상자</target>
        </trans-unit>
        <trans-unit id="e3e3722f41d72f7a6f83546ad8e3881bf39870f2" translate="yes" xml:space="preserve">
          <source>Tool Buttons</source>
          <target state="translated">도구 버튼</target>
        </trans-unit>
        <trans-unit id="dbdf32cd495a942a17ddefe0a58ac61162aeb8fe" translate="yes" xml:space="preserve">
          <source>Tool button (see also &lt;a href=&quot;qtoolbutton&quot;&gt;QToolButton&lt;/a&gt;).</source>
          <target state="translated">툴 버튼 ( &lt;a href=&quot;qtoolbutton&quot;&gt;QToolButton&lt;/a&gt; 참조) )</target>
        </trans-unit>
        <trans-unit id="f8d8816b3b2bd98c6038273c9eeb26e010e302a7" translate="yes" xml:space="preserve">
          <source>Tool buttons are normally created when new &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; instances are created with &lt;a href=&quot;qtoolbar#addAction&quot;&gt;QToolBar::addAction&lt;/a&gt;() or existing actions are added to a toolbar with &lt;a href=&quot;qtoolbar#addAction&quot;&gt;QToolBar::addAction&lt;/a&gt;(). It is also possible to construct tool buttons in the same way as any other widget, and arrange them alongside other widgets in layouts.</source>
          <target state="translated">도구 버튼은 새로운 때 일반적으로 생성되는 &lt;a href=&quot;qaction&quot;&gt;QAction의&lt;/a&gt; 인스턴스가 만들어집니다 &lt;a href=&quot;qtoolbar#addAction&quot;&gt;QToolBar :: addAction을&lt;/a&gt; () 또는 기존의 행동은과 도구 모음에 추가됩니다 &lt;a href=&quot;qtoolbar#addAction&quot;&gt;QToolBar :: addAction을&lt;/a&gt; ()을. 다른 위젯과 같은 방식으로 툴 버튼을 구성하고 레이아웃에서 다른 위젯과 나란히 배열 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="27c85c13aa74a2d1f00cfdcc5fed94b9d25bec7b" translate="yes" xml:space="preserve">
          <source>Tool buttons exist either independently or as part of tool bars. They are drawn equally either way. The &lt;a href=&quot;qtoolbutton&quot;&gt;QToolButton&lt;/a&gt; draws only one style element: &lt;code&gt;CC_ToolButton&lt;/code&gt;.</source>
          <target state="translated">도구 버튼은 독립적으로 또는 도구 모음의 일부로 존재합니다. 그들은 어느 쪽이든 똑같이 그려집니다. &lt;a href=&quot;qtoolbutton&quot;&gt;QToolButton는&lt;/a&gt; 하나의 스타일 요소를 그립니다 &lt;code&gt;CC_ToolButton&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="70243cbc3beb26198e47015cd763a9669ed1d164" translate="yes" xml:space="preserve">
          <source>Tool tips are typically transient in a sense that they are shown as a result of a certain external event or user interaction, and they usually hide after a certain timeout. It is possible to control the delay when a tool tip is shown, and the timeout when it is hidden. This makes it possible to implement varying strategies for showing and hiding tool tips.</source>
          <target state="translated">도구 설명은 일반적으로 특정 외부 이벤트 또는 사용자 상호 작용의 결과로 표시되며 일시적으로 특정 시간 초과 후에 숨겨지는 점에서 일시적입니다. 툴팁이 표시 될 때의 지연과 숨겨 질 때의 타임 아웃을 제어 할 수 있습니다. 이를 통해 툴팁을 표시하고 숨기는 다양한 전략을 구현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8e256062327fff31dd71fe834931c8a04e7c1119" translate="yes" xml:space="preserve">
          <source>ToolBar</source>
          <target state="translated">ToolBar</target>
        </trans-unit>
        <trans-unit id="82a10ebd861898d3ada8f52581786e052594064e" translate="yes" xml:space="preserve">
          <source>ToolBar (QML type)</source>
          <target state="translated">툴바 (QML 유형)</target>
        </trans-unit>
        <trans-unit id="447b658ff6bce3bd06b5a3ec5c6f8c8eff82e37c" translate="yes" xml:space="preserve">
          <source>ToolBar Control</source>
          <target state="translated">툴바 컨트롤</target>
        </trans-unit>
        <trans-unit id="2ec90e839450ae1562ba278314d1b287c7cc64f7" translate="yes" xml:space="preserve">
          <source>ToolBar QML Type</source>
          <target state="translated">툴바 QML 유형</target>
        </trans-unit>
        <trans-unit id="8953487f469d35250819f64a4159addc0bf69525" translate="yes" xml:space="preserve">
          <source>ToolBar.contentItem</source>
          <target state="translated">ToolBar.contentItem</target>
        </trans-unit>
        <trans-unit id="eedddebbf968906f427554d6faabad3add346692" translate="yes" xml:space="preserve">
          <source>ToolBar.position</source>
          <target state="translated">ToolBar.position</target>
        </trans-unit>
        <trans-unit id="310a1a566170eabad14351f75d75d39331e73af1" translate="yes" xml:space="preserve">
          <source>ToolBarStyle</source>
          <target state="translated">ToolBarStyle</target>
        </trans-unit>
        <trans-unit id="5e25a2aedd1ae81d7d80ffae8dac01909922ad75" translate="yes" xml:space="preserve">
          <source>ToolBarStyle (QML type)</source>
          <target state="translated">ToolBarStyle (QML 유형)</target>
        </trans-unit>
        <trans-unit id="eda8c66f3cced92dfe0be58950281cbdeaf2ca42" translate="yes" xml:space="preserve">
          <source>ToolBarStyle QML Type</source>
          <target state="translated">ToolBarStyle QML 유형</target>
        </trans-unit>
        <trans-unit id="9d475dcea52659e5c289fcd814aaaddc9f6f8ef4" translate="yes" xml:space="preserve">
          <source>ToolBarStyle.background</source>
          <target state="translated">ToolBarStyle.background</target>
        </trans-unit>
        <trans-unit id="7510fd1c1320d12c538f3cb4af083dfff18ffdc2" translate="yes" xml:space="preserve">
          <source>ToolBarStyle.menuButton</source>
          <target state="translated">ToolBarStyle.menuButton</target>
        </trans-unit>
        <trans-unit id="3e281ae24213be8cbf4a8ee0398cdb3a41976d63" translate="yes" xml:space="preserve">
          <source>ToolBarStyle.panel</source>
          <target state="translated">ToolBarStyle.panel</target>
        </trans-unit>
        <trans-unit id="3fe8eb05f0b99b5c5277671ee5ab7fbd794c4364" translate="yes" xml:space="preserve">
          <source>ToolButton</source>
          <target state="translated">ToolButton</target>
        </trans-unit>
        <trans-unit id="08e0d670f9cd467802c7b91c8472750cf9f479a5" translate="yes" xml:space="preserve">
          <source>ToolButton (QML type)</source>
          <target state="translated">툴 버튼 (QML 타입)</target>
        </trans-unit>
        <trans-unit id="334f846789f8cd11ec7c4fac0c2a0c4c31cee279" translate="yes" xml:space="preserve">
          <source>ToolButton Control</source>
          <target state="translated">툴 버튼 컨트롤</target>
        </trans-unit>
        <trans-unit id="b313475db47cf816f52696474835d5b061c8a77d" translate="yes" xml:space="preserve">
          <source>ToolButton QML Type</source>
          <target state="translated">ToolButton QML 유형</target>
        </trans-unit>
        <trans-unit id="cd00a1c216ce229a121e357b2bdcd30811c27acf" translate="yes" xml:space="preserve">
          <source>ToolSeparator</source>
          <target state="translated">ToolSeparator</target>
        </trans-unit>
        <trans-unit id="17dd0508b4dbc204ee7369f6fdb7f659d5299d20" translate="yes" xml:space="preserve">
          <source>ToolSeparator (QML type)</source>
          <target state="translated">ToolSeparator (QML 유형)</target>
        </trans-unit>
        <trans-unit id="2114512e56b2476cd3b1e556a5143b797709d414" translate="yes" xml:space="preserve">
          <source>ToolSeparator Control</source>
          <target state="translated">도구 분리기 제어</target>
        </trans-unit>
        <trans-unit id="9a7c70bc6564467389e16a8a5bea5f58198b8fae" translate="yes" xml:space="preserve">
          <source>ToolSeparator QML Type</source>
          <target state="translated">ToolSeparator QML 유형</target>
        </trans-unit>
        <trans-unit id="991c25020f89b03c12331d09e05c89e514e357e5" translate="yes" xml:space="preserve">
          <source>ToolSeparator.horizontal</source>
          <target state="translated">ToolSeparator.horizontal</target>
        </trans-unit>
        <trans-unit id="3b4a253a099d00f441ab62a016122d026878dd8c" translate="yes" xml:space="preserve">
          <source>ToolSeparator.orientation</source>
          <target state="translated">ToolSeparator.orientation</target>
        </trans-unit>
        <trans-unit id="cb9b0a18448432968c19ed115314d4c3c76e7e9a" translate="yes" xml:space="preserve">
          <source>ToolSeparator.vertical</source>
          <target state="translated">ToolSeparator.vertical</target>
        </trans-unit>
        <trans-unit id="9c0f05c52d32a4720d0dc06ff8ab47b600091221" translate="yes" xml:space="preserve">
          <source>ToolTip</source>
          <target state="translated">ToolTip</target>
        </trans-unit>
        <trans-unit id="cf226779dbf92b243037d5d00a2b81ce2e78f7d6" translate="yes" xml:space="preserve">
          <source>ToolTip (QML type)</source>
          <target state="translated">툴팁 (QML 유형)</target>
        </trans-unit>
        <trans-unit id="4c6b3463c214679aac1a81222d8999d228163dad" translate="yes" xml:space="preserve">
          <source>ToolTip Control</source>
          <target state="translated">툴팁 컨트롤</target>
        </trans-unit>
        <trans-unit id="edcb492b158ec61d90387891d545bbdfa033a400" translate="yes" xml:space="preserve">
          <source>ToolTip QML Type</source>
          <target state="translated">툴팁 QML 유형</target>
        </trans-unit>
        <trans-unit id="a48a56d157ca0c8772af78ee77614aee5986c27d" translate="yes" xml:space="preserve">
          <source>ToolTip.ToolTip.delay</source>
          <target state="translated">ToolTip.ToolTip.delay</target>
        </trans-unit>
        <trans-unit id="2281b59308d236d1d0a216cd3c65bcb09ce04996" translate="yes" xml:space="preserve">
          <source>ToolTip.ToolTip.text</source>
          <target state="translated">ToolTip.ToolTip.text</target>
        </trans-unit>
        <trans-unit id="6fc9981eef953967203313d982578d37ad67e01b" translate="yes" xml:space="preserve">
          <source>ToolTip.ToolTip.timeout</source>
          <target state="translated">ToolTip.ToolTip.timeout</target>
        </trans-unit>
        <trans-unit id="d2e922daf37a77c49efe2bb924d9eab7eb627408" translate="yes" xml:space="preserve">
          <source>ToolTip.ToolTip.toolTip</source>
          <target state="translated">ToolTip.ToolTip.toolTip</target>
        </trans-unit>
        <trans-unit id="3d110aa4efe33630b0c90204e109cf36bc93ddf5" translate="yes" xml:space="preserve">
          <source>ToolTip.ToolTip.visible</source>
          <target state="translated">ToolTip.ToolTip.visible</target>
        </trans-unit>
        <trans-unit id="63c562048cd1e279d4a0e0874161a1e79bde480c" translate="yes" xml:space="preserve">
          <source>ToolTip.delay</source>
          <target state="translated">ToolTip.delay</target>
        </trans-unit>
        <trans-unit id="803cffa545e7697cb5b40cce24676de6768218c7" translate="yes" xml:space="preserve">
          <source>ToolTip.delay : &lt;a href=&quot;qml-int&quot;&gt;int&lt;/a&gt;</source>
          <target state="translated">ToolTip.delay : &lt;a href=&quot;qml-int&quot;&gt; int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8d119d47489604412fd6d8d823ed086a3ac1bb01" translate="yes" xml:space="preserve">
          <source>ToolTip.hide()</source>
          <target state="translated">ToolTip.hide()</target>
        </trans-unit>
        <trans-unit id="39b07c0306710393bacbbd67b173b5fe668fd5dc" translate="yes" xml:space="preserve">
          <source>ToolTip.show()</source>
          <target state="translated">ToolTip.show()</target>
        </trans-unit>
        <trans-unit id="1d08657ba186c64dfad19b05eaf9d97fdbf36819" translate="yes" xml:space="preserve">
          <source>ToolTip.text</source>
          <target state="translated">ToolTip.text</target>
        </trans-unit>
        <trans-unit id="e1630f4ebd24b0ae95ae33471b76ad1eeccc580a" translate="yes" xml:space="preserve">
          <source>ToolTip.text : &lt;a href=&quot;qml-string&quot;&gt;string&lt;/a&gt;</source>
          <target state="translated">ToolTip.text : &lt;a href=&quot;qml-string&quot;&gt;문자열&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1764ed711cf28079cdc8bafa046b06d4fbf5ff7a" translate="yes" xml:space="preserve">
          <source>ToolTip.timeout</source>
          <target state="translated">ToolTip.timeout</target>
        </trans-unit>
        <trans-unit id="a0dbb0b874367e418155a7e304f5249a185a8599" translate="yes" xml:space="preserve">
          <source>ToolTip.timeout : &lt;a href=&quot;qml-int&quot;&gt;int&lt;/a&gt;</source>
          <target state="translated">ToolTip.timeout : &lt;a href=&quot;qml-int&quot;&gt;int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="09b04a1033ae80abc2a5a232b2a8023e3b41aca3" translate="yes" xml:space="preserve">
          <source>ToolTip.toolTip : &lt;a href=&quot;qml-qtquick-controls2-tooltip&quot;&gt;ToolTip&lt;/a&gt;</source>
          <target state="translated">ToolTip.toolTip : &lt;a href=&quot;qml-qtquick-controls2-tooltip&quot;&gt;도구 설명&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e088bcc4585a7480f699f6296a5fd33e214d6a0d" translate="yes" xml:space="preserve">
          <source>ToolTip.visible : &lt;a href=&quot;qml-bool&quot;&gt;bool&lt;/a&gt;</source>
          <target state="translated">ToolTip.visible : &lt;a href=&quot;qml-bool&quot;&gt;부울&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="12f0983a0019beec8189e5d5f2bfd9cc23690d9b" translate="yes" xml:space="preserve">
          <source>Toolbar buttons are added by adding</source>
          <target state="translated">툴바 버튼은 추가하여 추가됩니다</target>
        </trans-unit>
        <trans-unit id="f9f8fb29f59a46298247555f6d9be2432a73a46c" translate="yes" xml:space="preserve">
          <source>Toolbar buttons are created as actions in the &lt;a href=&quot;#theactioneditor&quot;&gt;Action Editor&lt;/a&gt; and dragged onto the toolbar. Since actions can be represented by menu entries and toolbar buttons, they can be moved between menus and toolbars.</source>
          <target state="translated">툴바 버튼은 &lt;a href=&quot;#theactioneditor&quot;&gt;액션 에디터&lt;/a&gt; 에서 액션 으로 생성되어 툴바로 드래그됩니다. 메뉴 항목과 도구 모음 버튼으로 작업을 표시 할 수 있으므로 메뉴와 도구 모음간에 이동할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2282301124d965ce2186bfded9e69c4e72abf1cd" translate="yes" xml:space="preserve">
          <source>Toolbar buttons are removed via the toolbar's context menu.</source>
          <target state="translated">툴바의 상황에 맞는 메뉴를 통해 툴바 버튼이 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="571634297d3718c574f47bf65aff806d75703187" translate="yes" xml:space="preserve">
          <source>Toolbars</source>
          <target state="translated">Toolbars</target>
        </trans-unit>
        <trans-unit id="f7609bf9d3509ef5a311a24743e1b31b1ba16517" translate="yes" xml:space="preserve">
          <source>Toolbars are added to a main window in a similar way to the menu bar: Select the &lt;b&gt;Add Tool Bar&lt;/b&gt; option from the form's context menu. Alternatively, if there is an existing toolbar in the main window, you can click the arrow on its right end to create a new toolbar.</source>
          <target state="translated">도구 모음은 메뉴 표시 줄과 유사한 방식으로 기본 창에 &lt;b&gt;추가&lt;/b&gt; 됩니다. 양식의 상황에 맞는 메뉴에서 &lt;b&gt;도구 모음 추가&lt;/b&gt; 옵션을 선택하십시오 . 또는 기본 창에 기존 도구 모음이있는 경우 오른쪽 끝에있는 화살표를 클릭하여 새 도구 모음을 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ecdb21c3fcfee8fec46d59f39a77579bff574aa3" translate="yes" xml:space="preserve">
          <source>Toolbars are implemented in the &lt;a href=&quot;qtoolbar&quot;&gt;QToolBar&lt;/a&gt; class. You add a toolbar to a main window with &lt;code&gt;addToolBar()&lt;/code&gt;.</source>
          <target state="translated">툴바는 &lt;a href=&quot;qtoolbar&quot;&gt;QToolBar&lt;/a&gt; 클래스 에서 구현됩니다 . &lt;code&gt;addToolBar()&lt;/code&gt; 를 사용하여 도구 모음을 기본 창에 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="a245e0d191503d801210d912ed837ef07fe8f01a" translate="yes" xml:space="preserve">
          <source>Toolbars are part of the &lt;a href=&quot;qmainwindow&quot;&gt;main window framework&lt;/a&gt;, and cooperate with the &lt;a href=&quot;qmainwindow&quot;&gt;QMainWindow&lt;/a&gt; to which they belong while it builds its style option. A main window has 4 areas that toolbars can be placed in. They are positioned next to the four sides of the window (i.e., north, south, east and west). Within each area there can be more than one line of toolbars; a line consists of toolbars with equal orientation (vertical or horizontal) placed next to each other.</source>
          <target state="translated">툴바는 &lt;a href=&quot;qmainwindow&quot;&gt;메인 윈도우 프레임 워크의&lt;/a&gt; 일부이며, 스타일 옵션을 빌드하는 동안 툴바가 속한 &lt;a href=&quot;qmainwindow&quot;&gt;QMainWindow&lt;/a&gt; 와 협력합니다 . 기본 창에는 툴바를 배치 할 수있는 4 개의 영역이 있습니다. 창의 네면 옆 (예 : 북쪽, 남쪽, 동쪽 및 서쪽)에 있습니다. 각 영역에는 여러 줄의 툴바가있을 수 있습니다. 선은 서로 같은 방향 (세로 또는 가로)이있는 도구 모음으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="d084c7b9d727234a29524c21ed6064181902237b" translate="yes" xml:space="preserve">
          <source>Toolbars are removed from the form via an entry in the toolbar's context menu.</source>
          <target state="translated">도구 모음은 상황에 맞는 메뉴의 항목을 통해 양식에서 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="fbf601d7590612878ef70101d120a8617761656a" translate="yes" xml:space="preserve">
          <source>Toolbox widgets provide a series of pages or compartments in a toolbox. They are handled in a way similar to stacked widgets.</source>
          <target state="translated">도구 상자 위젯은 도구 상자에 일련의 페이지 또는 구획을 제공합니다. 스택 된 위젯과 유사한 방식으로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="38f5e00d5f88931b95a16f6cffbe2aa1fded7c4b" translate="yes" xml:space="preserve">
          <source>Tools and Toolchains</source>
          <target state="translated">도구 및 툴체인</target>
        </trans-unit>
        <trans-unit id="217ae68a57b281448452f9625b7db65c0e37b492" translate="yes" xml:space="preserve">
          <source>Tools and Utilities</source>
          <target state="translated">도구 및 유틸리티</target>
        </trans-unit>
        <trans-unit id="b00383d6e2d64bd52f0436d082593e2a5052d5e4" translate="yes" xml:space="preserve">
          <source>Tools for ActiveQt</source>
          <target state="translated">ActiveQt 도구</target>
        </trans-unit>
        <trans-unit id="ed0acfa1197df4fb14d69aeb6bf3ede64564a7e0" translate="yes" xml:space="preserve">
          <source>Tooltip to be shown when hovering the control bound to this action. Not all controls support tooltips on all platforms, especially &lt;a href=&quot;qml-qtquick-controls-menuitem&quot;&gt;MenuItem&lt;/a&gt;.</source>
          <target state="translated">이 동작에 바인딩 된 컨트롤을 가리킬 때 표시되는 툴팁입니다. 모든 컨트롤이 모든 플랫폼, 특히 &lt;a href=&quot;qml-qtquick-controls-menuitem&quot;&gt;MenuItem&lt;/a&gt; 에서 툴팁을 지원하는 것은 아닙니다 .</target>
        </trans-unit>
        <trans-unit id="cae0435c41e816c24f0838fdf4e76c044c8b4e00" translate="yes" xml:space="preserve">
          <source>Top</source>
          <target state="translated">Top</target>
        </trans-unit>
        <trans-unit id="785c8a106c8b05e12bc094f06c4be272c424dd34" translate="yes" xml:space="preserve">
          <source>Top level items in a model are always referenced by specifying &lt;code&gt;QModelIndex()&lt;/code&gt; as their parent item. This is discussed in the next section.</source>
          <target state="translated">모델의 최상위 항목은 항상 &lt;code&gt;QModelIndex()&lt;/code&gt; 를 부모 항목으로 지정하여 참조됩니다 . 이에 대해서는 다음 섹션에서 설명합니다.</target>
        </trans-unit>
        <trans-unit id="3856bdeb998ccb6f0e3f1062b79e740f71cdddea" translate="yes" xml:space="preserve">
          <source>Top level layouts are not visible as separate objects in the Object Inspector. Their properties appear below the widget properties of the main form, container widget, or page of a container widget in the Property Editor.</source>
          <target state="translated">최상위 레벨 레이아웃은 Object Inspector에서 별도의 객체로 표시되지 않습니다. 속성은 속성 편집기에서 메인 폼, 컨테이너 위젯 또는 컨테이너 위젯 페이지의 위젯 속성 아래에 나타납니다.</target>
        </trans-unit>
        <trans-unit id="6443f466cb27e6f749e3cd7b9a75c9a9943461c4" translate="yes" xml:space="preserve">
          <source>Top level page.</source>
          <target state="translated">최상위 페이지.</target>
        </trans-unit>
        <trans-unit id="d66ce82a1eec889f80ce9d100d5c8f12078f2e11" translate="yes" xml:space="preserve">
          <source>Top margin for the alternate keys list panel.</source>
          <target state="translated">대체 키 목록 패널의 상단 여백.</target>
        </trans-unit>
        <trans-unit id="7931e23f1c37ddeeab1443f6d637260a5ab86da6" translate="yes" xml:space="preserve">
          <source>Top paragraph margin in pixels</source>
          <target state="translated">상단 단락 여백 (픽셀)</target>
        </trans-unit>
        <trans-unit id="b7b28c1f1538334a6b5033fa30ec0fedeee4d1dc" translate="yes" xml:space="preserve">
          <source>Top table cell padding in pixels</source>
          <target state="translated">픽셀 단위의 상단 표 셀 패딩</target>
        </trans-unit>
        <trans-unit id="93ab5bee1f454c89a8e6d8c74eb855bc97bf10d7" translate="yes" xml:space="preserve">
          <source>Top to bottom</source>
          <target state="translated">위에서 아래로</target>
        </trans-unit>
        <trans-unit id="b57cbe635c06f2299210b715ba693ec020530632" translate="yes" xml:space="preserve">
          <source>Top-Level and Child Widgets</source>
          <target state="translated">최상위 및 하위 위젯</target>
        </trans-unit>
        <trans-unit id="337e2a2ea6c4d2368da49083a287fc7a13905abe" translate="yes" xml:space="preserve">
          <source>Top-level items are constructed without a parent then inserted at the position specified by a pair of row and column numbers:</source>
          <target state="translated">최상위 항목은 부모없이 구성되며 한 쌍의 행과 열 번호로 지정된 위치에 삽입됩니다.</target>
        </trans-unit>
        <trans-unit id="cc915fe83ff373e6842ded2b05e7703262aad814" translate="yes" xml:space="preserve">
          <source>Top-level items in the tree widget are constructed with the tree widget as their parent widget. They can be inserted in an arbitrary order, or you can ensure that they are listed in a particular order by specifying the previous item when constructing each item:</source>
          <target state="translated">트리 위젯의 최상위 항목은 트리 위젯을 상위 위젯으로 구성합니다. 임의의 순서로 삽입하거나 각 항목을 구성 할 때 이전 항목을 지정하여 특정 순서로 나열되도록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="af08fe78ecefa088d72c4b3f0114c06d713666c8" translate="yes" xml:space="preserve">
          <source>Top-level page that lists all C++ classes for this (sub-)project. Typically, the title of a &lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#module-command&quot;&gt;\module&lt;/a&gt; page.</source>
          <target state="translated">이 (하위) 프로젝트에 대한 모든 C ++ 클래스를 나열하는 최상위 페이지입니다. 일반적으로 &lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#module-command&quot;&gt;\ module&lt;/a&gt; 페이지 의 제목입니다 .</target>
        </trans-unit>
        <trans-unit id="eeb3b5310b2971fd9cddb24da964192d541cdfaf" translate="yes" xml:space="preserve">
          <source>Top-level page that lists all QML types for this (sub-)project. Typically, the title of a &lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#qmlmodule-command&quot;&gt;\qmlmodule&lt;/a&gt; page.</source>
          <target state="translated">이 (하위) 프로젝트에 대한 모든 QML 유형을 나열하는 최상위 페이지. 일반적으로 &lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#qmlmodule-command&quot;&gt;\ qmlmodule&lt;/a&gt; 페이지 의 제목입니다 .</target>
        </trans-unit>
        <trans-unit id="6c4a7edf6e783d510713bbf130721136ed547c83" translate="yes" xml:space="preserve">
          <source>Top-level states must be passed a &lt;a href=&quot;qstatemachine&quot;&gt;QStateMachine&lt;/a&gt; object as their parent state, or added to a state machine using &lt;a href=&quot;qstatemachine#addState&quot;&gt;QStateMachine::addState&lt;/a&gt;().</source>
          <target state="translated">최상위 상태는 &lt;a href=&quot;qstatemachine&quot;&gt;QStateMachine&lt;/a&gt; 객체를 상위 상태로 전달 하거나 &lt;a href=&quot;qstatemachine#addState&quot;&gt;QStateMachine :: addState&lt;/a&gt; ()를 사용하여 상태 머신에 추가해야합니다 .</target>
        </trans-unit>
        <trans-unit id="ea2490e0efc669dfdecf1b7d71999ee042193257" translate="yes" xml:space="preserve">
          <source>Top-level windows</source>
          <target state="translated">최상위 창</target>
        </trans-unit>
        <trans-unit id="334b440314cf1ec5e94ee04232546c13067b10a5" translate="yes" xml:space="preserve">
          <source>Top40</source>
          <target state="translated">Top40</target>
        </trans-unit>
        <trans-unit id="e5abd5e5358717c49cd2b13951c277bd605211bd" translate="yes" xml:space="preserve">
          <source>Topic Commands</source>
          <target state="translated">주제 명령</target>
        </trans-unit>
        <trans-unit id="d90784c14f39917776396f86915e6db13dbc3cea" translate="yes" xml:space="preserve">
          <source>Topic Contexts</source>
          <target state="translated">주제 컨텍스트</target>
        </trans-unit>
        <trans-unit id="55a04d23dd55daf96ec9c47446f0d77d223fb75f" translate="yes" xml:space="preserve">
          <source>Topic commands identify the element you are documenting, for example a C++ class, function, type, or an extra page of text that doesn't map to an underlying C++ element.</source>
          <target state="translated">주제 명령은 C ++ 클래스, 함수, 유형 또는 기본 C ++ 요소에 맵핑되지 않은 추가 텍스트 페이지와 같이 문서화중인 요소를 식별합니다.</target>
        </trans-unit>
        <trans-unit id="07e4f9c27860c8f452d481954e498a807cd27a98" translate="yes" xml:space="preserve">
          <source>Topics</source>
          <target state="translated">Topics</target>
        </trans-unit>
        <trans-unit id="3a8c0b10d166ab6fc3488810dd9b461e7b1f23a1" translate="yes" xml:space="preserve">
          <source>Topics:</source>
          <target state="translated">Topics:</target>
        </trans-unit>
        <trans-unit id="917904ac8c837fd0477b8d064f7bfb3b9e7fad96" translate="yes" xml:space="preserve">
          <source>Torch</source>
          <target state="translated">Torch</target>
        </trans-unit>
        <trans-unit id="20f154315536687d462f9d235131cde15820e167" translate="yes" xml:space="preserve">
          <source>Torch (QML type)</source>
          <target state="translated">토치 (QML 타입)</target>
        </trans-unit>
        <trans-unit id="d99967064752d9ca6a51952c78aff535bcc468a0" translate="yes" xml:space="preserve">
          <source>Torch QML Type</source>
          <target state="translated">토치 QML 유형</target>
        </trans-unit>
        <trans-unit id="ab4449757e937dbb6a90ec72cdf5816fc82a67ea" translate="yes" xml:space="preserve">
          <source>Torch.enabled</source>
          <target state="translated">Torch.enabled</target>
        </trans-unit>
        <trans-unit id="1e7c32bbe2f3855f7d37f6e3455f5a8a07b379e7" translate="yes" xml:space="preserve">
          <source>Torch.power</source>
          <target state="translated">Torch.power</target>
        </trans-unit>
        <trans-unit id="90544242699c57ca71cb5aa283df454f735df4a2" translate="yes" xml:space="preserve">
          <source>TorusGeometry</source>
          <target state="translated">TorusGeometry</target>
        </trans-unit>
        <trans-unit id="06745ec109ad5cd79186344a37b34eeb796c723b" translate="yes" xml:space="preserve">
          <source>TorusGeometry (QML type)</source>
          <target state="translated">TorusGeometry (QML 유형)</target>
        </trans-unit>
        <trans-unit id="23da6e0be35af0bae7c7ca95e52cc860b3e9ad43" translate="yes" xml:space="preserve">
          <source>TorusGeometry QML Type</source>
          <target state="translated">TorusGeometry QML 유형</target>
        </trans-unit>
        <trans-unit id="ea722066ac2fb6bcff56535f3622ea6d045c1c26" translate="yes" xml:space="preserve">
          <source>TorusGeometry.indexAttribute</source>
          <target state="translated">TorusGeometry.indexAttribute</target>
        </trans-unit>
        <trans-unit id="edd3f3d3799ce3068e61faa8962aeb3d001cfe4e" translate="yes" xml:space="preserve">
          <source>TorusGeometry.minorRadius</source>
          <target state="translated">TorusGeometry.minorRadius</target>
        </trans-unit>
        <trans-unit id="af53b3d2f39779e74a286fdf5543c1efa2452dec" translate="yes" xml:space="preserve">
          <source>TorusGeometry.normalAttribute</source>
          <target state="translated">TorusGeometry.normalAttribute</target>
        </trans-unit>
        <trans-unit id="064b909d365ba4e3caebb48830248c6f68b6bfa8" translate="yes" xml:space="preserve">
          <source>TorusGeometry.positionAttribute</source>
          <target state="translated">TorusGeometry.positionAttribute</target>
        </trans-unit>
        <trans-unit id="7c58b6c39600b81ab0f68bf8b2de28756751c2d1" translate="yes" xml:space="preserve">
          <source>TorusGeometry.radius</source>
          <target state="translated">TorusGeometry.radius</target>
        </trans-unit>
        <trans-unit id="06473661372f2d0be11f1dcf43a2e0bb3058a446" translate="yes" xml:space="preserve">
          <source>TorusGeometry.rings</source>
          <target state="translated">TorusGeometry.rings</target>
        </trans-unit>
        <trans-unit id="a7afc543808cfbfcfd5c44cf850c5a09c432aeb8" translate="yes" xml:space="preserve">
          <source>TorusGeometry.slices</source>
          <target state="translated">TorusGeometry.slices</target>
        </trans-unit>
        <trans-unit id="a3cd991e24c13b2dbb26b1bffc9a083181efd0bf" translate="yes" xml:space="preserve">
          <source>TorusGeometry.texCoordAttribute</source>
          <target state="translated">TorusGeometry.texCoordAttribute</target>
        </trans-unit>
        <trans-unit id="2429d95d932bdb591ed8fc10972d4f57695eb4d7" translate="yes" xml:space="preserve">
          <source>TorusMesh</source>
          <target state="translated">TorusMesh</target>
        </trans-unit>
        <trans-unit id="1ee31e04e84913e57f6ac47dd9afa4dadebd3310" translate="yes" xml:space="preserve">
          <source>TorusMesh (QML type)</source>
          <target state="translated">TorusMesh (QML 유형)</target>
        </trans-unit>
        <trans-unit id="502c2ab295446baf44f85c626114b6b2742ee4fd" translate="yes" xml:space="preserve">
          <source>TorusMesh QML Type</source>
          <target state="translated">TorusMesh QML 유형</target>
        </trans-unit>
        <trans-unit id="bb835d9254ac45f0224a597d8a48139a4405b7de" translate="yes" xml:space="preserve">
          <source>TorusMesh.minorRadius</source>
          <target state="translated">TorusMesh.minorRadius</target>
        </trans-unit>
        <trans-unit id="c9413cc1ef34a9ac9783ecb57c8b24508d583f2e" translate="yes" xml:space="preserve">
          <source>TorusMesh.radius</source>
          <target state="translated">TorusMesh.radius</target>
        </trans-unit>
        <trans-unit id="a3e2a958f975502ffb3e0bb0f3a1b0992eb59913" translate="yes" xml:space="preserve">
          <source>TorusMesh.rings</source>
          <target state="translated">TorusMesh.rings</target>
        </trans-unit>
        <trans-unit id="4c75f9c07a619428a1a2d1afe882b6c4d661264b" translate="yes" xml:space="preserve">
          <source>TorusMesh.slices</source>
          <target state="translated">TorusMesh.slices</target>
        </trans-unit>
        <trans-unit id="431014bdd0a879d2afad1334d635119321b45f61" translate="yes" xml:space="preserve">
          <source>Total slider thickness.</source>
          <target state="translated">총 슬라이더 두께.</target>
        </trans-unit>
        <trans-unit id="e3f139abb7a549a1210b36f7dbf89215ad6c9902" translate="yes" xml:space="preserve">
          <source>Touch</source>
          <target state="translated">Touch</target>
        </trans-unit>
        <trans-unit id="f9140a77a551ccb054ed338b61bbddfe707187a6" translate="yes" xml:space="preserve">
          <source>Touch Point Grouping</source>
          <target state="translated">터치 포인트 그룹화</target>
        </trans-unit>
        <trans-unit id="47cad98cd7af7438d2b0b6da4c1d660a9e6395ef" translate="yes" xml:space="preserve">
          <source>Touch events occur when pressing, releasing, or moving one or more touch points on a touch device (such as a touch-screen or track-pad). To receive touch events, widgets have to have the &lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt::WA_AcceptTouchEvents&lt;/a&gt; attribute set and graphics items need to have the &lt;a href=&quot;qgraphicsitem#setAcceptTouchEvents&quot;&gt;acceptTouchEvents&lt;/a&gt; attribute set to true.</source>
          <target state="translated">터치 이벤트는 터치 장치 (예 : 터치 스크린 또는 트랙 패드)에서 하나 이상의 터치 지점을 누르거나 놓거나 이동할 때 발생합니다. 터치 이벤트를 수신하려면 위젯에 &lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt :: WA_AcceptTouchEvents&lt;/a&gt; 속성 세트가 있어야하고 그래픽 항목에는 &lt;a href=&quot;qgraphicsitem#setAcceptTouchEvents&quot;&gt;acceptTouchEvents&lt;/a&gt; 속성이 true로 설정되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="953057d4d32a31549e02699b46a878906debe326" translate="yes" xml:space="preserve">
          <source>Touch input in systems with multiple screens on KMS/DRM</source>
          <target state="translated">KMS / DRM에서 여러 화면이있는 시스템의 터치 입력</target>
        </trans-unit>
        <trans-unit id="44dfd4e9dfa20b5a56c249791e6e62bef7edda87" translate="yes" xml:space="preserve">
          <source>Touch sequence</source>
          <target state="translated">터치 시퀀스</target>
        </trans-unit>
        <trans-unit id="c9b39d2c60922de1f27fe6d54e8ad49a6538a59c" translate="yes" xml:space="preserve">
          <source>Touch vs. Mouse Interaction</source>
          <target state="translated">터치와 마우스 상호 작용</target>
        </trans-unit>
        <trans-unit id="88b8cafcf37b5d418aab7ba7890acab21a600ea7" translate="yes" xml:space="preserve">
          <source>Touch-And-Move</source>
          <target state="translated">Touch-And-Move</target>
        </trans-unit>
        <trans-unit id="6f87102fd2064e820b5a14106a462358fe7e1095" translate="yes" xml:space="preserve">
          <source>Touch-screen event (&lt;a href=&quot;qtouchevent&quot;&gt;QTouchEvent&lt;/a&gt;).</source>
          <target state="translated">터치 스크린 이벤트 ( &lt;a href=&quot;qtouchevent&quot;&gt;QTouchEvent&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="ccfd5d6f30a8fb73aa81b8740cf8eacf54e24109" translate="yes" xml:space="preserve">
          <source>TouchEventSequence (QML type)</source>
          <target state="translated">TouchEventSequence (QML 유형)</target>
        </trans-unit>
        <trans-unit id="48a5eefcbe1badbfd25eb961950246bce22ec9e5" translate="yes" xml:space="preserve">
          <source>TouchEventSequence &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qttest-testcase#touchEvent-method&quot;&gt;touchEvent&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;(object</source>
          <target state="translated">TouchEvent 순서 &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qttest-testcase#touchEvent-method&quot;&gt;touchEvent&lt;/a&gt;&lt;/b&gt;&lt;/b&gt; (개체</target>
        </trans-unit>
        <trans-unit id="76a5d79ac8381f382b7f31975f3a921069ccd095" translate="yes" xml:space="preserve">
          <source>TouchEventSequence &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qttest-toucheventsequence#commit-method&quot;&gt;commit&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;()</source>
          <target state="translated">TouchEventSequence &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qttest-toucheventsequence#commit-method&quot;&gt;커밋&lt;/a&gt;&lt;/b&gt;&lt;/b&gt; ()</target>
        </trans-unit>
        <trans-unit id="188145448744691023c5bcc8c1ba68b0f73b988f" translate="yes" xml:space="preserve">
          <source>TouchEventSequence &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qttest-toucheventsequence#move-method&quot;&gt;move&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;(</source>
          <target state="translated">TouchEventSequence &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qttest-toucheventsequence#move-method&quot;&gt;이동&lt;/a&gt;&lt;/b&gt;&lt;/b&gt; (</target>
        </trans-unit>
        <trans-unit id="8ed36196cb77073a3109a054327c2f8e97b88844" translate="yes" xml:space="preserve">
          <source>TouchEventSequence &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qttest-toucheventsequence#press-method&quot;&gt;press&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;(</source>
          <target state="translated">TouchEventSequence를 &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qttest-toucheventsequence#press-method&quot;&gt;누릅니다&lt;/a&gt;&lt;/b&gt;&lt;/b&gt; (</target>
        </trans-unit>
        <trans-unit id="21174c01f304cad4c3516397439dbc863f8350a2" translate="yes" xml:space="preserve">
          <source>TouchEventSequence &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qttest-toucheventsequence#release-method&quot;&gt;release&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;(</source>
          <target state="translated">TouchEventSequence &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qttest-toucheventsequence#release-method&quot;&gt;릴리스&lt;/a&gt;&lt;/b&gt;&lt;/b&gt; (</target>
        </trans-unit>
        <trans-unit id="8b8edc37dc8f2a60e7e8ef841eea5fb191815d0b" translate="yes" xml:space="preserve">
          <source>TouchEventSequence &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qttest-toucheventsequence#stationary-method&quot;&gt;stationary&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;(</source>
          <target state="translated">TouchEventSequence &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qttest-toucheventsequence#stationary-method&quot;&gt;고정&lt;/a&gt;&lt;/b&gt;&lt;/b&gt; (</target>
        </trans-unit>
        <trans-unit id="bc3d359e7435cb8198bb129c699665d3b2d7d378" translate="yes" xml:space="preserve">
          <source>TouchEventSequence &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-testcase#touchEvent-method&quot;&gt;touchEvent&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;(object</source>
          <target state="translated">TouchEvent 순서 &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-testcase#touchEvent-method&quot;&gt;touchEvent&lt;/a&gt;&lt;/b&gt;&lt;/b&gt; (개체</target>
        </trans-unit>
        <trans-unit id="9a8eae90a88d76a308977687e4de69ed15bf787f" translate="yes" xml:space="preserve">
          <source>TouchEventSequence &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-toucheventsequence#commit-method&quot;&gt;commit&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;()</source>
          <target state="translated">TouchEventSequence &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-toucheventsequence#commit-method&quot;&gt;커밋&lt;/a&gt;&lt;/b&gt;&lt;/b&gt; ()</target>
        </trans-unit>
        <trans-unit id="49abf24297dd0e9cd848ca3cc744e06b53c1067f" translate="yes" xml:space="preserve">
          <source>TouchEventSequence &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-toucheventsequence#move-method&quot;&gt;move&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;(</source>
          <target state="translated">TouchEventSequence &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-toucheventsequence#move-method&quot;&gt;이동&lt;/a&gt;&lt;/b&gt;&lt;/b&gt; (</target>
        </trans-unit>
        <trans-unit id="c17a1a62cc7f5d24d44167cda2183de9f37ac2c2" translate="yes" xml:space="preserve">
          <source>TouchEventSequence &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-toucheventsequence#press-method&quot;&gt;press&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;(</source>
          <target state="translated">TouchEventSequence를 &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-toucheventsequence#press-method&quot;&gt;누릅니다&lt;/a&gt;&lt;/b&gt;&lt;/b&gt; (</target>
        </trans-unit>
        <trans-unit id="f3a8717dc664cda8de606707298e1c3da266c91f" translate="yes" xml:space="preserve">
          <source>TouchEventSequence &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-toucheventsequence#release-method&quot;&gt;release&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;(</source>
          <target state="translated">TouchEventSequence &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-toucheventsequence#release-method&quot;&gt;릴리스&lt;/a&gt;&lt;/b&gt;&lt;/b&gt; (</target>
        </trans-unit>
        <trans-unit id="5eff5769b2782311578b8ff6ab2c7c2baa7d8d1c" translate="yes" xml:space="preserve">
          <source>TouchEventSequence &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-toucheventsequence#stationary-method&quot;&gt;stationary&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;(</source>
          <target state="translated">TouchEventSequence &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-toucheventsequence#stationary-method&quot;&gt;고정&lt;/a&gt;&lt;/b&gt;&lt;/b&gt; (</target>
        </trans-unit>
        <trans-unit id="27ec90ab29168fe00ee6f7caf737c79acda470a0" translate="yes" xml:space="preserve">
          <source>TouchEventSequence QML Type</source>
          <target state="translated">TouchEventSequence QML 유형</target>
        </trans-unit>
        <trans-unit id="20eb842a4038f975328a6e2c32961ccab29c6592" translate="yes" xml:space="preserve">
          <source>TouchEventSequence.commit()</source>
          <target state="translated">TouchEventSequence.commit()</target>
        </trans-unit>
        <trans-unit id="9407d16c1f295ef04935a120eb52dbe4e95cd148" translate="yes" xml:space="preserve">
          <source>TouchEventSequence.move()</source>
          <target state="translated">TouchEventSequence.move()</target>
        </trans-unit>
        <trans-unit id="1aefc8c1fee1dbb699de25878d7899b14e8b6bab" translate="yes" xml:space="preserve">
          <source>TouchEventSequence.press()</source>
          <target state="translated">TouchEventSequence.press()</target>
        </trans-unit>
        <trans-unit id="ea85f95bd4ad17a6cddcf38517a28819c15b240d" translate="yes" xml:space="preserve">
          <source>TouchEventSequence.release()</source>
          <target state="translated">TouchEventSequence.release()</target>
        </trans-unit>
        <trans-unit id="77aec7f8657cccb471fd7f1d8c673abd96ab7303" translate="yes" xml:space="preserve">
          <source>TouchEventSequence.stationary()</source>
          <target state="translated">TouchEventSequence.stationary()</target>
        </trans-unit>
        <trans-unit id="62a9ab6e26e85a6043eef7985b738638ece5d504" translate="yes" xml:space="preserve">
          <source>TouchInputHandler3D</source>
          <target state="translated">TouchInputHandler3D</target>
        </trans-unit>
        <trans-unit id="927afc966c50fef3d350a9bcc7b48d4b4bf84084" translate="yes" xml:space="preserve">
          <source>TouchInputHandler3D (QML type)</source>
          <target state="translated">TouchInputHandler3D (QML 유형)</target>
        </trans-unit>
        <trans-unit id="f7f4c7c2f870d9e7d4576a247c2dcd4c20efb80b" translate="yes" xml:space="preserve">
          <source>TouchInputHandler3D QML Type</source>
          <target state="translated">TouchInputHandler3D QML 유형</target>
        </trans-unit>
        <trans-unit id="cef7591e6bdcf37e353b6f569a26dea65d34c1db" translate="yes" xml:space="preserve">
          <source>TouchPoint (QML type)</source>
          <target state="translated">터치 포인트 (QML 유형)</target>
        </trans-unit>
        <trans-unit id="e853fe7927db764b340057dd4ffc24f3b2bcfa08" translate="yes" xml:space="preserve">
          <source>TouchPoint Class</source>
          <target state="translated">터치 포인트 클래스</target>
        </trans-unit>
        <trans-unit id="42eeb8e5fe811f4a41620c865ec69c2453295cc2" translate="yes" xml:space="preserve">
          <source>TouchPoint QML Type</source>
          <target state="translated">터치 포인트 QML 유형</target>
        </trans-unit>
        <trans-unit id="c139cdfbf3239eedbd7522d911c073dd6c2492cc" translate="yes" xml:space="preserve">
          <source>TouchPoint.ellipseDiameters</source>
          <target state="translated">TouchPoint.ellipseDiameters</target>
        </trans-unit>
        <trans-unit id="64648df7e742272d1076ea15b022041da3ecd6cb" translate="yes" xml:space="preserve">
          <source>TouchPoint.pointId</source>
          <target state="translated">TouchPoint.pointId</target>
        </trans-unit>
        <trans-unit id="c4225acd2556bda2e8531e21f143d87ceb387219" translate="yes" xml:space="preserve">
          <source>TouchPoint.pressed</source>
          <target state="translated">TouchPoint.pressed</target>
        </trans-unit>
        <trans-unit id="3e6c4460cf20d79c350182d794aa63bed12afcfe" translate="yes" xml:space="preserve">
          <source>TouchPoint.pressure</source>
          <target state="translated">TouchPoint.pressure</target>
        </trans-unit>
        <trans-unit id="44df89b901db41980a7d0b1744a2dde0d3542613" translate="yes" xml:space="preserve">
          <source>TouchPoint.previousX</source>
          <target state="translated">TouchPoint.previousX</target>
        </trans-unit>
        <trans-unit id="93d9bc90f09befe3328ac5e734cbc9ece3bd974d" translate="yes" xml:space="preserve">
          <source>TouchPoint.rotation</source>
          <target state="translated">TouchPoint.rotation</target>
        </trans-unit>
        <trans-unit id="5e1a4cd2cf749b9d8ac238d68ab4205a12cfff5c" translate="yes" xml:space="preserve">
          <source>TouchPoint.sceneX</source>
          <target state="translated">TouchPoint.sceneX</target>
        </trans-unit>
        <trans-unit id="898191eae5d0be243e482556a1085c9f5444dbb9" translate="yes" xml:space="preserve">
          <source>TouchPoint.startX</source>
          <target state="translated">TouchPoint.startX</target>
        </trans-unit>
        <trans-unit id="950883c0f24eb1140eca02dd3e0772f94ac4679e" translate="yes" xml:space="preserve">
          <source>TouchPoint.uniqueId</source>
          <target state="translated">TouchPoint.uniqueId</target>
        </trans-unit>
        <trans-unit id="f5a64badc77e37d271d32dc080ef0df9d366aa51" translate="yes" xml:space="preserve">
          <source>TouchPoint.x</source>
          <target state="translated">TouchPoint.x</target>
        </trans-unit>
        <trans-unit id="3ab7118df02533c85744dc88312547905593fede" translate="yes" xml:space="preserve">
          <source>TouchPoint::InfoFlags</source>
          <target state="translated">TouchPoint::InfoFlags</target>
        </trans-unit>
        <trans-unit id="57d33bc4f1e6b047768d79773023e921b74d155b" translate="yes" xml:space="preserve">
          <source>TouchPoint::TouchPoint(TouchPoint &amp;amp;&amp;amp;</source>
          <target state="translated">TouchPoint :: TouchPoint (터치 포인트 &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="bd10a8bf2dba7d10c76b1ede806a52dac1205723" translate="yes" xml:space="preserve">
          <source>Touchpoints have automatically-incrementing IDs: each time the user presses a finger against the touchscreen, it will be a larger number. In other cases, it will be -1.</source>
          <target state="translated">터치 포인트에는 자동으로 증가하는 ID가 있습니다. 사용자가 터치 스크린에 대해 손가락을 누를 때마다 더 큰 숫자가됩니다. 다른 경우에는 -1이됩니다.</target>
        </trans-unit>
        <trans-unit id="d91dea1fd12832dee0d9a819927fa2dab61cc7f7" translate="yes" xml:space="preserve">
          <source>Touchscreens require additional considerations in multi-display systems because touch events have to be routed to the correct virtual screen, and this requires a correct mapping between touchscreens and display outputs.</source>
          <target state="translated">터치 이벤트는 올바른 가상 화면으로 라우팅되어야하기 때문에 터치 스크린과 디스플레이 출력 사이의 올바른 매핑이 필요하기 때문에 멀티 스크린 시스템에서 터치 스크린을 추가로 고려해야합니다.</target>
        </trans-unit>
        <trans-unit id="52c033d68247a676388c4f985c3259aca585abe9" translate="yes" xml:space="preserve">
          <source>Towards an input method, handwriting recognition works on the same principle as handling of normal keyboard input, i.e. input data is collected by the keyboard layout and transferred by the input engine to the input method for processing.</source>
          <target state="translated">입력 방법을 향해 필기 인식은 일반 키보드 입력 처리와 같은 원리로 작동합니다. 즉, 입력 데이터는 키보드 레이아웃에 의해 수집되고 입력 엔진에 의해 처리를 위해 입력 방법으로 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="3319fdaf72bc21a471b568050fa06fd717af81b7" translate="yes" xml:space="preserve">
          <source>TqAbs(const T &amp;amp;</source>
          <target state="translated">TqAbs (const T &amp;amp;</target>
        </trans-unit>
        <trans-unit id="2f38169a712e499b917900e244feafc980a814f4" translate="yes" xml:space="preserve">
          <source>Trace</source>
          <target state="translated">Trace</target>
        </trans-unit>
        <trans-unit id="41cf067d6784a9d4177d6efaea546fa14ddf1fcc" translate="yes" xml:space="preserve">
          <source>Trace (QML type)</source>
          <target state="translated">추적 (QML 유형)</target>
        </trans-unit>
        <trans-unit id="e8d2fa9e459de6ad2b15e77af131035fe6799ff0" translate="yes" xml:space="preserve">
          <source>Trace &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qtquick-virtualkeyboard-inputmethod#traceBegin-method&quot;&gt;traceBegin&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;(</source>
          <target state="translated">추적 추적 &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qtquick-virtualkeyboard-inputmethod#traceBegin-method&quot;&gt;시작&lt;/a&gt;&lt;/b&gt;&lt;/b&gt; (</target>
        </trans-unit>
        <trans-unit id="be0064f9fa197a972086d84822c3b3b12e4742b1" translate="yes" xml:space="preserve">
          <source>Trace API for Input Methods</source>
          <target state="translated">입력 방법에 대한 추적 API</target>
        </trans-unit>
        <trans-unit id="4ba002c06f47bc00c979d0f40b79bbe4b382f745" translate="yes" xml:space="preserve">
          <source>Trace QML Type</source>
          <target state="translated">추적 QML 유형</target>
        </trans-unit>
        <trans-unit id="b137843157d0c84746fc741646417e1d62ee006b" translate="yes" xml:space="preserve">
          <source>Trace is a data model for touch input data. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">추적은 터치 입력 데이터의 데이터 모델입니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="036760f263f21feec8d9c06c5e1acd6e4e3d7bed" translate="yes" xml:space="preserve">
          <source>Trace objects are owned by their creator, which is the input method in normal case. This means the objects are constructed in the &lt;a href=&quot;qml-qtquick-virtualkeyboard-inputmethod#traceBegin-method&quot;&gt;InputMethod.traceBegin()&lt;/a&gt; (QML) method.</source>
          <target state="translated">추적 오브젝트는 해당 작성자가 소유하며 이는 일반적인 경우 입력 방법입니다. 이는 오브젝트가 &lt;a href=&quot;qml-qtquick-virtualkeyboard-inputmethod#traceBegin-method&quot;&gt;InputMethod.traceBegin ()&lt;/a&gt; (QML) 메소드로 구성됨을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="c35654519e64fa033d2f0c365b32195fac50cc36" translate="yes" xml:space="preserve">
          <source>Trace provides the data model for coordinate data and other optional data associated with a single stroke.</source>
          <target state="translated">Trace는 좌표 데이터 및 단일 스트로크와 관련된 기타 선택적 데이터에 대한 데이터 모델을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="5b19d34389de65bdd272825f3b0fb91636bde18d" translate="yes" xml:space="preserve">
          <source>Trace.addPoint()</source>
          <target state="translated">Trace.addPoint()</target>
        </trans-unit>
        <trans-unit id="7be9775b8a4d45342a86fb8c79f23415da8d63ea" translate="yes" xml:space="preserve">
          <source>Trace.canceled</source>
          <target state="translated">Trace.canceled</target>
        </trans-unit>
        <trans-unit id="c085530318c7beb3cba9f04139453de6fecf41ba" translate="yes" xml:space="preserve">
          <source>Trace.channelData()</source>
          <target state="translated">Trace.channelData()</target>
        </trans-unit>
        <trans-unit id="f4cdd3c3118aaa7fc93e94ded4184ea497c423d4" translate="yes" xml:space="preserve">
          <source>Trace.channels</source>
          <target state="translated">Trace.channels</target>
        </trans-unit>
        <trans-unit id="5cf792874775e3eaa9073d882445dba6f973a96b" translate="yes" xml:space="preserve">
          <source>Trace.final</source>
          <target state="translated">Trace.final</target>
        </trans-unit>
        <trans-unit id="a38396aaf5d82ffa124d3e19ef8e1d6f00a4b944" translate="yes" xml:space="preserve">
          <source>Trace.opacity</source>
          <target state="translated">Trace.opacity</target>
        </trans-unit>
        <trans-unit id="462b4f7e06c3ec5cfde65795650b72ffb5ccfa02" translate="yes" xml:space="preserve">
          <source>Trace.points()</source>
          <target state="translated">Trace.points()</target>
        </trans-unit>
        <trans-unit id="f18aa520a18c3c07866d182a44ba505c14697288" translate="yes" xml:space="preserve">
          <source>Trace.setChannelData()</source>
          <target state="translated">Trace.setChannelData()</target>
        </trans-unit>
        <trans-unit id="21a8adf8bde737260f64c4624f3fd199a08b62c8" translate="yes" xml:space="preserve">
          <source>Trace.traceId</source>
          <target state="translated">Trace.traceId</target>
        </trans-unit>
        <trans-unit id="1667917ce1ab4d050b87e038854e515d1a0805b0" translate="yes" xml:space="preserve">
          <source>TraceCanvas (QML type)</source>
          <target state="translated">TraceCanvas (QML 유형)</target>
        </trans-unit>
        <trans-unit id="38e5a68b8f77e24548259b81de32c85e4e669b18" translate="yes" xml:space="preserve">
          <source>TraceCanvas QML Type</source>
          <target state="translated">TraceCanvas QML 유형</target>
        </trans-unit>
        <trans-unit id="c74a0172fce8bd770d6a63c3d4db171e0030c64a" translate="yes" xml:space="preserve">
          <source>TraceCanvas.autoDestroy</source>
          <target state="translated">TraceCanvas.autoDestroy</target>
        </trans-unit>
        <trans-unit id="7f826762c5d138ebd9dc5849b3110189021fdfad" translate="yes" xml:space="preserve">
          <source>TraceCanvas.autoDestroyDelay</source>
          <target state="translated">TraceCanvas.autoDestroyDelay</target>
        </trans-unit>
        <trans-unit id="163c7aca59ecf40ffdc2511d32e161df584ae74f" translate="yes" xml:space="preserve">
          <source>TraceCanvas.renderFunction</source>
          <target state="translated">TraceCanvas.renderFunction</target>
        </trans-unit>
        <trans-unit id="e6355c960e0ef8a8504fc726376e7604aa7f3d9e" translate="yes" xml:space="preserve">
          <source>TraceCanvas.renderSmoothedLine()</source>
          <target state="translated">TraceCanvas.renderSmoothedLine()</target>
        </trans-unit>
        <trans-unit id="9caece96307272a543b2c930d551a5c24716b540" translate="yes" xml:space="preserve">
          <source>TraceCanvas.trace</source>
          <target state="translated">TraceCanvas.trace</target>
        </trans-unit>
        <trans-unit id="0ff03f5feb2bc115c76f35f35d000ecdb66ee781" translate="yes" xml:space="preserve">
          <source>TraceInputArea (QML type)</source>
          <target state="translated">TraceInputArea (QML 유형)</target>
        </trans-unit>
        <trans-unit id="feb3afe70a3e562351c673046a73dcb48b0527a5" translate="yes" xml:space="preserve">
          <source>TraceInputArea QML Type</source>
          <target state="translated">TraceInputArea QML 유형</target>
        </trans-unit>
        <trans-unit id="78384d868eb3d74c85554c06f6ad5e4efbdd1465" translate="yes" xml:space="preserve">
          <source>TraceInputArea.boundingBox</source>
          <target state="translated">TraceInputArea.boundingBox</target>
        </trans-unit>
        <trans-unit id="34a21bb6109861eeafa513fd88290452044eb33b" translate="yes" xml:space="preserve">
          <source>TraceInputArea.canvasType</source>
          <target state="translated">TraceInputArea.canvasType</target>
        </trans-unit>
        <trans-unit id="bac0e778be22b2448b2f205ed2a2a49bb8804c28" translate="yes" xml:space="preserve">
          <source>TraceInputArea.horizontalRulers</source>
          <target state="translated">TraceInputArea.horizontalRulers</target>
        </trans-unit>
        <trans-unit id="29db0777ba85c2ff73641691c7144528746837da" translate="yes" xml:space="preserve">
          <source>TraceInputArea.patternRecognitionMode</source>
          <target state="translated">TraceInputArea.patternRecognitionMode</target>
        </trans-unit>
        <trans-unit id="b9ada57e9ed34b4481fd985ced780e30bc41d502" translate="yes" xml:space="preserve">
          <source>TraceInputArea.verticalRulers</source>
          <target state="translated">TraceInputArea.verticalRulers</target>
        </trans-unit>
        <trans-unit id="75d5e1eef20465647269907cfc93cbead78bd682" translate="yes" xml:space="preserve">
          <source>TraceInputKey</source>
          <target state="translated">TraceInputKey</target>
        </trans-unit>
        <trans-unit id="3152c5ca50456c7592b6a1d11ad992b29f63a818" translate="yes" xml:space="preserve">
          <source>TraceInputKey (QML type)</source>
          <target state="translated">TraceInputKey (QML 유형)</target>
        </trans-unit>
        <trans-unit id="8723327e19ca87cd4c3c14056525153b90fba0e4" translate="yes" xml:space="preserve">
          <source>TraceInputKey QML Type</source>
          <target state="translated">TraceInputKey QML 유형</target>
        </trans-unit>
        <trans-unit id="56aeb1650b8001777ebb8e342d0fb143c4287ee5" translate="yes" xml:space="preserve">
          <source>TraceInputKey.boundingBox</source>
          <target state="translated">TraceInputKey.boundingBox</target>
        </trans-unit>
        <trans-unit id="0d1cecef8b16e94aafdc86c4ee4b5114d347ecf0" translate="yes" xml:space="preserve">
          <source>TraceInputKey.canvasType</source>
          <target state="translated">TraceInputKey.canvasType</target>
        </trans-unit>
        <trans-unit id="48d611a811c39e44a5309d386d5371fb5ada5151" translate="yes" xml:space="preserve">
          <source>TraceInputKey.horizontalRulers</source>
          <target state="translated">TraceInputKey.horizontalRulers</target>
        </trans-unit>
        <trans-unit id="429eaf96ad19585a84ce6f455675bf1be36301d9" translate="yes" xml:space="preserve">
          <source>TraceInputKey.patternRecognitionMode</source>
          <target state="translated">TraceInputKey.patternRecognitionMode</target>
        </trans-unit>
        <trans-unit id="c249bcbb91ffb68c045619b05febbdc74d9d8afe" translate="yes" xml:space="preserve">
          <source>TraceInputKey.verticalRulers</source>
          <target state="translated">TraceInputKey.verticalRulers</target>
        </trans-unit>
        <trans-unit id="86c421075d93fd01afe9dc3bfb4cfe7c915d8eb7" translate="yes" xml:space="preserve">
          <source>TraceInputKey.weight</source>
          <target state="translated">TraceInputKey.weight</target>
        </trans-unit>
        <trans-unit id="4457bbda9ff79a0b98ff552316257762da021a7b" translate="yes" xml:space="preserve">
          <source>TraceInputKeyPanel (QML type)</source>
          <target state="translated">TraceInputKeyPanel (QML 유형)</target>
        </trans-unit>
        <trans-unit id="ac9c4d606b1e70ccca05144ec95a59e791ce00cf" translate="yes" xml:space="preserve">
          <source>TraceInputKeyPanel QML Type</source>
          <target state="translated">TraceInputKeyPanel QML 유형</target>
        </trans-unit>
        <trans-unit id="9519caaa28deaa127d87c3cf3980d0354fea43ce" translate="yes" xml:space="preserve">
          <source>TraceInputKeyPanel.control</source>
          <target state="translated">TraceInputKeyPanel.control</target>
        </trans-unit>
        <trans-unit id="5fc064729a22af58d5b33c35a0b297bd6188218b" translate="yes" xml:space="preserve">
          <source>TraceInputKeyPanel.traceMargins</source>
          <target state="translated">TraceInputKeyPanel.traceMargins</target>
        </trans-unit>
        <trans-unit id="9ea81a368d04beb4e8678cccb08c85ffa4822bc6" translate="yes" xml:space="preserve">
          <source>TrackCount</source>
          <target state="translated">TrackCount</target>
        </trans-unit>
        <trans-unit id="3be689c43c3bf6dffef14ab289b5ea5fa00866fc" translate="yes" xml:space="preserve">
          <source>TrackNumber</source>
          <target state="translated">TrackNumber</target>
        </trans-unit>
        <trans-unit id="65b32d44f30685c83ef8cd0221938c9414aacae0" translate="yes" xml:space="preserve">
          <source>Tracks all values</source>
          <target state="translated">모든 값을 추적</target>
        </trans-unit>
        <trans-unit id="ee03d8117953811e2930f2fdd364031f36e1bd0e" translate="yes" xml:space="preserve">
          <source>Tracks final values</source>
          <target state="translated">최종 값 추적</target>
        </trans-unit>
        <trans-unit id="3b612e72ed8b42ec172f3e6dbff27929a0f89575" translate="yes" xml:space="preserve">
          <source>Traditional Chinese</source>
          <target state="translated">중국어 번체</target>
        </trans-unit>
        <trans-unit id="29b8688f5d09c26855bb5acbbb350f7634bd2590" translate="yes" xml:space="preserve">
          <source>Traditional Chinese (Cangjie)</source>
          <target state="translated">중국어 번체 (Cangjie)</target>
        </trans-unit>
        <trans-unit id="1eefc723d810f8c25fb575ffab76ee7f52436b01" translate="yes" xml:space="preserve">
          <source>Traditional Chinese (Zhuyin)</source>
          <target state="translated">중국어 번체 (주음)</target>
        </trans-unit>
        <trans-unit id="cf5b8b6cc0e53870c81a8db47c6773ebcc5c1870" translate="yes" xml:space="preserve">
          <source>Traditional Chinese IME (tcime)</source>
          <target state="translated">중국어 번체 IME (tcime)</target>
        </trans-unit>
        <trans-unit id="902b10bf7a543ae2d3105eccc3fb2d254c3b66cd" translate="yes" xml:space="preserve">
          <source>Traditional Chinese Layout (Cangjie)</source>
          <target state="translated">중국어 번체 레이아웃 (Cangjie)</target>
        </trans-unit>
        <trans-unit id="734d75317026a5fd76194f6bddb669b8ec8ec5d6" translate="yes" xml:space="preserve">
          <source>Traditional Chinese Layout (Zhuyin)</source>
          <target state="translated">중국어 번체 레이아웃 (Zhuyin)</target>
        </trans-unit>
        <trans-unit id="e25beb09e59425abd096cd154e6eca180425b36a" translate="yes" xml:space="preserve">
          <source>Traditional style used for Windows, GNOME, and earlier versions of KDE. Labels are left aligned, and expanding fields grow to fill the available space. (This normally corresponds to what we would get using a two-column &lt;a href=&quot;qgridlayout&quot;&gt;QGridLayout&lt;/a&gt;.)</source>
          <target state="translated">Windows, GNOME 및 이전 버전의 KDE에 사용되는 전통적인 스타일입니다. 레이블은 정렬되어 있으며 사용 가능한 공간을 채우기 위해 확장 필드가 커집니다. (이것은 일반적으로 2 열 &lt;a href=&quot;qgridlayout&quot;&gt;QGridLayout을&lt;/a&gt; 사용하여 얻을 수있는 것에 해당합니다 .)</target>
        </trans-unit>
        <trans-unit id="8b30ed0cae8fc0372f9ddac7e1368689bf5d174c" translate="yes" xml:space="preserve">
          <source>Traditionally, only Linux and UNIX support icon themes on the platform level, but it is possible to bundle a compliant icon theme in an application to use themed icons on any platform.</source>
          <target state="translated">일반적으로, Linux 및 UNIX 만 플랫폼 레벨에서 아이콘 테마를 지원하지만, 응용 프로그램에 호환 가능한 아이콘 테마를 번들하여 모든 플랫폼에서 테마 아이콘을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="00f0f7d5820fd11554c488321b5cfb4cecb145db" translate="yes" xml:space="preserve">
          <source>Traditionally, such two-column form layouts were achieved using &lt;a href=&quot;qgridlayout&quot;&gt;QGridLayout&lt;/a&gt;. &lt;a href=&quot;qformlayout&quot;&gt;QFormLayout&lt;/a&gt; is a higher-level alternative that provides the following advantages:</source>
          <target state="translated">전통적으로 이러한 2 열 양식 레이아웃은 &lt;a href=&quot;qgridlayout&quot;&gt;QGridLayout&lt;/a&gt; 을 사용하여 달성되었습니다 . &lt;a href=&quot;qformlayout&quot;&gt;QFormLayout&lt;/a&gt; 은 다음과 같은 장점을 제공하는 고급 대안입니다.</target>
        </trans-unit>
        <trans-unit id="509ae83ca71b2afded14a6fb3b91e22971ec2acd" translate="yes" xml:space="preserve">
          <source>TrailEmitter (QML type)</source>
          <target state="translated">TrailEmitter (QML 유형)</target>
        </trans-unit>
        <trans-unit id="d67a5497df7ab908c219c6d8c91913f9c9a20071" translate="yes" xml:space="preserve">
          <source>TrailEmitter QML Type</source>
          <target state="translated">TrailEmitter QML 유형</target>
        </trans-unit>
        <trans-unit id="701d0fb252c73ba8e70725233dad8303b3c52c23" translate="yes" xml:space="preserve">
          <source>TrailEmitter.emitFollowParticles()</source>
          <target state="translated">TrailEmitter.emitFollowParticles()</target>
        </trans-unit>
        <trans-unit id="d5511621dd2e486b50ef4392ed4b4bb55add7f7e" translate="yes" xml:space="preserve">
          <source>TrailEmitter.emitHeight</source>
          <target state="translated">TrailEmitter.emitHeight</target>
        </trans-unit>
        <trans-unit id="21f0b15bb6ae670df2559740cde09e6a655b01c3" translate="yes" xml:space="preserve">
          <source>TrailEmitter.emitRatePerParticle</source>
          <target state="translated">TrailEmitter.emitRatePerParticle</target>
        </trans-unit>
        <trans-unit id="ba3ceb5d44d8ab602d836d1d782c282900e6ca92" translate="yes" xml:space="preserve">
          <source>TrailEmitter.emitShape</source>
          <target state="translated">TrailEmitter.emitShape</target>
        </trans-unit>
        <trans-unit id="a38e7fefde22ee34ac7f3f1ec5cda74d40f9f121" translate="yes" xml:space="preserve">
          <source>TrailEmitter.emitWidth</source>
          <target state="translated">TrailEmitter.emitWidth</target>
        </trans-unit>
        <trans-unit id="a6892ebb895031670ee41e614e88809fbabf4cef" translate="yes" xml:space="preserve">
          <source>TrailEmitter.follow</source>
          <target state="translated">TrailEmitter.follow</target>
        </trans-unit>
        <trans-unit id="ae51becd9ab1402efa5053bfcfffee037625f407" translate="yes" xml:space="preserve">
          <source>TrailEmitter.velocityFromMovement</source>
          <target state="translated">TrailEmitter.velocityFromMovement</target>
        </trans-unit>
        <trans-unit id="edafaff1940ef6ef4a2158b91a4fd58cfc8ee63d" translate="yes" xml:space="preserve">
          <source>TrailEmitters are a special type of emitter which emits particles from the location of other logicial particles. Any logical particle of the followed type within the bounds of a &lt;a href=&quot;qml-qtquick-particles-trailemitter&quot;&gt;TrailEmitter&lt;/a&gt; will cause particle emission from its location, as if there were an Emitter on it with the same properties as the &lt;a href=&quot;qml-qtquick-particles-trailemitter&quot;&gt;TrailEmitter&lt;/a&gt;.</source>
          <target state="translated">TrailEmitters는 다른 논리 입자의 위치에서 입자를 방출하는 특수 유형의 이미 터입니다. &lt;a href=&quot;qml-qtquick-particles-trailemitter&quot;&gt;TrailEmitter&lt;/a&gt; 와 같은 유형의 논리적 입자는 TrailEmitter 와 동일한 속성을 가진 Emitter가있는 것처럼 해당 위치에서 입자 방출을 &lt;a href=&quot;qml-qtquick-particles-trailemitter&quot;&gt;유발&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="c293924e25e3fceb11bc58f7c5a032491af14d71" translate="yes" xml:space="preserve">
          <source>Trailing versioning numbers on Unix are ignored.</source>
          <target state="translated">유닉스의 후행 버전 번호는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="c5ab7ba2d7b02b3adc3ea78323e7cb2b9ecd80d7" translate="yes" xml:space="preserve">
          <source>Transaction (QML type)</source>
          <target state="translated">거래 (QML 유형)</target>
        </trans-unit>
        <trans-unit id="89468205ff66b2f7262611ab1ce9a98e66f84053" translate="yes" xml:space="preserve">
          <source>Transaction QML Type</source>
          <target state="translated">거래 QML 유형</target>
        </trans-unit>
        <trans-unit id="3ff4afdda498b540b84a0cf79e907afdef9e33ae" translate="yes" xml:space="preserve">
          <source>Transaction cannot be created directly in QML, but is only provided as an argument to the purchase handlers in the products.</source>
          <target state="translated">QML에서 직접 트랜잭션을 작성할 수는 없지만 제품의 구매 핸들러에 대한 인수로만 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="33cdf39f209b2e0851c17289e3744829ece6b997" translate="yes" xml:space="preserve">
          <source>Transaction contains information about a transaction in the external app store and is usually provided as a result of calling &lt;a href=&quot;qml-qtpurchasing-product#purchase-method&quot;&gt;purchase()&lt;/a&gt; on a product. When the purchase flow has ended, whether it's successful or not, either the product's &lt;a href=&quot;qml-qtpurchasing-product#onPurchaseSucceeded-signal&quot;&gt;onPurchaseSucceeded&lt;/a&gt; or &lt;a href=&quot;qml-qtpurchasing-product#onPurchaseFailed-signal&quot;&gt;onPurchaseFailed&lt;/a&gt; handler will be called with a transaction object as argument.</source>
          <target state="translated">거래는 외부 앱 스토어의 거래에 대한 정보를 포함하며 일반적으로 제품에서 &lt;a href=&quot;qml-qtpurchasing-product#purchase-method&quot;&gt;purchase ()&lt;/a&gt; 를 호출 한 결과로 제공됩니다 . 구매 플로우가 완료되면 성공 여부에 관계없이 제품의 &lt;a href=&quot;qml-qtpurchasing-product#onPurchaseSucceeded-signal&quot;&gt;onPurchaseSucceeded&lt;/a&gt; 또는 &lt;a href=&quot;qml-qtpurchasing-product#onPurchaseFailed-signal&quot;&gt;onPurchaseFailed&lt;/a&gt; 핸들러가 트랜잭션 오브젝트와 함께 인수로 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="6f967e54fe8662399a024b08f961e883d8c37103" translate="yes" xml:space="preserve">
          <source>Transaction failed error.</source>
          <target state="translated">거래 실패 오류.</target>
        </trans-unit>
        <trans-unit id="ece7293ac992c1c47d03c4c8b7a268d478ca3119" translate="yes" xml:space="preserve">
          <source>Transaction.CanceledByUser The transaction was canceled by the user.</source>
          <target state="translated">Transaction.CanceledByUser 사용자가 트랜잭션을 취소했습니다.</target>
        </trans-unit>
        <trans-unit id="0f2d0818f12281a8f6c2f712666b5e1e5cdf6307" translate="yes" xml:space="preserve">
          <source>Transaction.ErrorOccurred The transaction failed due to an error.</source>
          <target state="translated">Transaction.ErrorOccurred 오류로 인해 트랜잭션이 실패했습니다.</target>
        </trans-unit>
        <trans-unit id="9d45f3df78e3d992b7df095378d7318ae51e71ad" translate="yes" xml:space="preserve">
          <source>Transaction.NoFailure The transaction did not fail.</source>
          <target state="translated">Transaction.NoFailure 트랜잭션이 실패하지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="a1f9aa877cfe5b78f38e3ee33c1df8e64068aa96" translate="yes" xml:space="preserve">
          <source>Transaction.PurchaseApproved The purchase was successfully completed.</source>
          <target state="translated">Transaction.PurchaseApproved 구매가 완료되었습니다.</target>
        </trans-unit>
        <trans-unit id="0d572fddf3c8e15eb29a11b536292031d5718f75" translate="yes" xml:space="preserve">
          <source>Transaction.PurchaseFailed The purchase was not completed for some reason. This could be because the user canceled the transaction, but it could also for example be caused by a missing network connection.</source>
          <target state="translated">Transaction.PurchaseFailed 어떤 이유로 구매가 완료되지 않았습니다. 사용자가 트랜잭션을 취소했기 때문일 수 있지만 네트워크 연결이 끊어져서 발생할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="d4c131d8a76a2b959207e6d3168a2bd70764b069" translate="yes" xml:space="preserve">
          <source>Transaction.errorString</source>
          <target state="translated">Transaction.errorString</target>
        </trans-unit>
        <trans-unit id="7534d04baae7cc856ef469966b92fd8b13d09607" translate="yes" xml:space="preserve">
          <source>Transaction.failureReason</source>
          <target state="translated">Transaction.failureReason</target>
        </trans-unit>
        <trans-unit id="be4af1216a83f5a3d242335543d9af158d30675c" translate="yes" xml:space="preserve">
          <source>Transaction.finalize()</source>
          <target state="translated">Transaction.finalize()</target>
        </trans-unit>
        <trans-unit id="b50a62d15647325cfb613232c88b80979692962d" translate="yes" xml:space="preserve">
          <source>Transaction.orderId</source>
          <target state="translated">Transaction.orderId</target>
        </trans-unit>
        <trans-unit id="f6a3f8aea34500db8ca231cc5df2fcbdcc442e44" translate="yes" xml:space="preserve">
          <source>Transaction.product</source>
          <target state="translated">Transaction.product</target>
        </trans-unit>
        <trans-unit id="3f766b1d43d467843fda1c8e49ae80a83e385346" translate="yes" xml:space="preserve">
          <source>Transaction.status</source>
          <target state="translated">Transaction.status</target>
        </trans-unit>
        <trans-unit id="89083a25d4247bcaccd7dc44cca3f2711ef5da8b" translate="yes" xml:space="preserve">
          <source>Transaction.timestamp</source>
          <target state="translated">Transaction.timestamp</target>
        </trans-unit>
        <trans-unit id="1e3281a962e6db2e54e787f796eb7d2b1582389a" translate="yes" xml:space="preserve">
          <source>Transactions</source>
          <target state="translated">Transactions</target>
        </trans-unit>
        <trans-unit id="27074b7a05d08221b2fd4503b38cb16998811097" translate="yes" xml:space="preserve">
          <source>Transactions can also be emitted after calling &lt;a href=&quot;qinappstore#restorePurchases&quot;&gt;QInAppStore::restorePurchases&lt;/a&gt;(), at which point a new transaction will be emitted for each previously purchased unlockable product with the status of &lt;a href=&quot;qinapptransaction#TransactionStatus-enum&quot;&gt;PurchaseRestored&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qinappstore#restorePurchases&quot;&gt;QInAppStore :: restorePurchases&lt;/a&gt; ()를 호출 한 후 트랜잭션을 생성 할 수도 있습니다 .이 시점에서 &lt;a href=&quot;qinapptransaction#TransactionStatus-enum&quot;&gt;PurchaseRestored&lt;/a&gt; 상태의 이전에 구매 한 잠금 해제 가능한 각 제품에 대해 새 트랜잭션이 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="fbb9aed53bb135f116543ab56f8b7dd85ae030d5" translate="yes" xml:space="preserve">
          <source>Transactions can be used to ensure that a complex operation is atomic (for example, looking up a foreign key and creating a record), or to provide a means of canceling a complex change in the middle.</source>
          <target state="translated">트랜잭션은 복잡한 작업이 원 자성인지 (예 : 외래 키 조회 및 레코드 작성) 확인하거나 중간에 복잡한 변경을 취소하는 수단을 제공하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dea51bb13a4467c505ee6181171375f497334d54" translate="yes" xml:space="preserve">
          <source>Transform</source>
          <target state="translated">Transform</target>
        </trans-unit>
        <trans-unit id="2fc13014b347ef7a08da8afbfaf2d3001505ed14" translate="yes" xml:space="preserve">
          <source>Transform (QML type)</source>
          <target state="translated">변환 (QML 유형)</target>
        </trans-unit>
        <trans-unit id="365dc0cb550da635c8dbc1b8c90597751b67a817" translate="yes" xml:space="preserve">
          <source>Transform Nodes</source>
          <target state="translated">변환 노드</target>
        </trans-unit>
        <trans-unit id="5dcb6b731e1f3a09a84ddfc57a0d1701300476e2" translate="yes" xml:space="preserve">
          <source>Transform QML Type</source>
          <target state="translated">QML 유형 변환</target>
        </trans-unit>
        <trans-unit id="79dc77d06998a6fea7bef5c134a4e4816233fcba" translate="yes" xml:space="preserve">
          <source>Transform.fromAxesAndAngles()</source>
          <target state="translated">Transform.fromAxesAndAngles()</target>
        </trans-unit>
        <trans-unit id="1f38f7a6a09bd05b386498e420ea9814d2d4bcdc" translate="yes" xml:space="preserve">
          <source>Transform.fromAxisAndAngle()</source>
          <target state="translated">Transform.fromAxisAndAngle()</target>
        </trans-unit>
        <trans-unit id="d5c5c41fc97affc4d0c123decb8c141885db1d26" translate="yes" xml:space="preserve">
          <source>Transform.fromEulerAngles()</source>
          <target state="translated">Transform.fromEulerAngles()</target>
        </trans-unit>
        <trans-unit id="6422d327e9a535c2d46e2124fddad7872f5ddd00" translate="yes" xml:space="preserve">
          <source>Transform.matrix</source>
          <target state="translated">Transform.matrix</target>
        </trans-unit>
        <trans-unit id="4d41ed47b64fc797539872f575a5de789f816423" translate="yes" xml:space="preserve">
          <source>Transform.rotateAround()</source>
          <target state="translated">Transform.rotateAround()</target>
        </trans-unit>
        <trans-unit id="461093f7d4b38b0bcce95ab13db0147086d145e8" translate="yes" xml:space="preserve">
          <source>Transform.rotation</source>
          <target state="translated">Transform.rotation</target>
        </trans-unit>
        <trans-unit id="fe41b5fa8e278fd180e69318ccafeb62e17c645e" translate="yes" xml:space="preserve">
          <source>Transform.rotationX</source>
          <target state="translated">Transform.rotationX</target>
        </trans-unit>
        <trans-unit id="c066d8679391cf241cd37830bac0dad898f5fe56" translate="yes" xml:space="preserve">
          <source>Transform.rotationY</source>
          <target state="translated">Transform.rotationY</target>
        </trans-unit>
        <trans-unit id="a2df16b33728d13643b65c49c98b1ea0417e4f5b" translate="yes" xml:space="preserve">
          <source>Transform.rotationZ</source>
          <target state="translated">Transform.rotationZ</target>
        </trans-unit>
        <trans-unit id="5fa9c1b92508488e2f4ab13a3bbb6e2efb2abf0a" translate="yes" xml:space="preserve">
          <source>Transform.scale</source>
          <target state="translated">Transform.scale</target>
        </trans-unit>
        <trans-unit id="3ff8c01bc8394f749ed2809d381807d8ace9048b" translate="yes" xml:space="preserve">
          <source>Transform.scale3D</source>
          <target state="translated">Transform.scale3D</target>
        </trans-unit>
        <trans-unit id="7f2c20e112df92f162c8958256e3c1c8ac5b4422" translate="yes" xml:space="preserve">
          <source>Transform.translation</source>
          <target state="translated">Transform.translation</target>
        </trans-unit>
        <trans-unit id="dc1c231275a16e11dae243561efa84b2936b1b19" translate="yes" xml:space="preserve">
          <source>Transformation</source>
          <target state="translated">Transformation</target>
        </trans-unit>
        <trans-unit id="d685ad7c59aeb1945ef867b52857539b62c1b81c" translate="yes" xml:space="preserve">
          <source>Transformations</source>
          <target state="translated">Transformations</target>
        </trans-unit>
        <trans-unit id="3cb35b5dd25b6abd872272252cc7b856fc1f2022" translate="yes" xml:space="preserve">
          <source>Transformations and settings applied to the</source>
          <target state="translated">에 적용되는 변환 및 설정</target>
        </trans-unit>
        <trans-unit id="fe5ccddbc33d3e482ba68dcf3d6632e02ac31a9b" translate="yes" xml:space="preserve">
          <source>Transformations apply the node's subtree and can be nested. Multiple transform nodes will be accumulated by intersecting all their matrices. The accumulation happens as part of the rendering.</source>
          <target state="translated">변환은 노드의 서브 트리를 적용하며 중첩 될 수 있습니다. 모든 행렬을 교차시켜 여러 변환 노드가 누적됩니다. 렌더링은 렌더링의 일부로 발생합니다.</target>
        </trans-unit>
        <trans-unit id="61f6360cee6f094a63d893c3715a4d2c3b210758" translate="yes" xml:space="preserve">
          <source>Transformations are computed in true 3D space using &lt;a href=&quot;qmatrix4x4&quot;&gt;QMatrix4x4&lt;/a&gt;. When the transformation is applied to a &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;, it will be projected back to a 2D &lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt;. When multiple &lt;a href=&quot;qgraphicstransform&quot;&gt;QGraphicsTransform&lt;/a&gt; objects are applied to a &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;, all of the transformations are computed in true 3D space, with the projection back to 2D only occurring after the last &lt;a href=&quot;qgraphicstransform&quot;&gt;QGraphicsTransform&lt;/a&gt; is applied. The exception to this is &lt;a href=&quot;qgraphicsrotation&quot;&gt;QGraphicsRotation&lt;/a&gt;, which projects back to 2D after each rotation to preserve the perspective effect around the X and Y axes.</source>
          <target state="translated">&lt;a href=&quot;qmatrix4x4&quot;&gt;QMatrix4x4를&lt;/a&gt; 사용하여 실제 3D 공간에서 변환이 계산됩니다 . 변환이 &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem에&lt;/a&gt; 적용되면 2D &lt;a href=&quot;qtransform&quot;&gt;QTransform으로&lt;/a&gt; 다시 투영됩니다 . 여러 경우 &lt;a href=&quot;qgraphicstransform&quot;&gt;QGraphicsTransform의&lt;/a&gt; 오브젝트가인가된다 &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; 상기 변환의 모든 지난 후에 2 차원에 투영 위로 만 발생하여, 진정한 3D 공간에서 계산 &lt;a href=&quot;qgraphicstransform&quot;&gt;QGraphicsTransform이&lt;/a&gt; 인가된다. 이에 대한 예외는 &lt;a href=&quot;qgraphicsrotation&quot;&gt;QGraphicsRotation&lt;/a&gt; 이며, X 및 Y 축 주위의 원근감 효과를 유지하기 위해 각 회전 후 2D로 다시 투영됩니다.</target>
        </trans-unit>
        <trans-unit id="38522d1f5a13b7ccbc5853f3d5c571b4e0a742d4" translate="yes" xml:space="preserve">
          <source>Transforms an</source>
          <target state="translated">변환</target>
        </trans-unit>
        <trans-unit id="98d091f24ad0959c3b23e7ce47591c5ce5a88271" translate="yes" xml:space="preserve">
          <source>Transient parents are considered ancestors.</source>
          <target state="translated">일시적인 부모는 조상으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="93932d58d28d7a7af2ce6e8517411f351371c467" translate="yes" xml:space="preserve">
          <source>Transient parents are not considered ancestors.</source>
          <target state="translated">일시적인 부모는 조상으로 간주되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4ead496f48fa5f6d2d96f52143b2d7c60b4140d3" translate="yes" xml:space="preserve">
          <source>Transition</source>
          <target state="translated">Transition</target>
        </trans-unit>
        <trans-unit id="64e16cea6b9adb7ae71bc893f954b6d9ba977f89" translate="yes" xml:space="preserve">
          <source>Transition (QML type)</source>
          <target state="translated">전환 (QML 유형)</target>
        </trans-unit>
        <trans-unit id="1465a98eef7fabcc48edad0894a2334be278e351" translate="yes" xml:space="preserve">
          <source>Transition &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qtquick-controls-stackviewdelegate#getTransition-method&quot;&gt;getTransition&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;(</source>
          <target state="translated">전환 &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qtquick-controls-stackviewdelegate#getTransition-method&quot;&gt;getTransition&lt;/a&gt;&lt;/b&gt;&lt;/b&gt; (</target>
        </trans-unit>
        <trans-unit id="853f116972a86d9445a07c6db9a61fe9ff0d1ec4" translate="yes" xml:space="preserve">
          <source>Transition QML Type</source>
          <target state="translated">전환 QML 유형</target>
        </trans-unit>
        <trans-unit id="3c3d00821f84660df862fae3c401baa1e37dc0b1" translate="yes" xml:space="preserve">
          <source>Transition based on a Qt signal</source>
          <target state="translated">Qt 신호 기반 전환</target>
        </trans-unit>
        <trans-unit id="e9b2dcbefc036e0f13361df7ada277c54f894e4f" translate="yes" xml:space="preserve">
          <source>Transition for key events</source>
          <target state="translated">주요 행사를위한 전환</target>
        </trans-unit>
        <trans-unit id="cc715323bb98246c36088529aacecdeafb7bb466" translate="yes" xml:space="preserve">
          <source>Transition for mouse events</source>
          <target state="translated">마우스 이벤트 전환</target>
        </trans-unit>
        <trans-unit id="b9595409766d18ff003b5fbcfcf71de8108de2e0" translate="yes" xml:space="preserve">
          <source>Transition.animations</source>
          <target state="translated">Transition.animations</target>
        </trans-unit>
        <trans-unit id="77022057c8c82a207b19eb400ba177d05ed850cc" translate="yes" xml:space="preserve">
          <source>Transition.enabled</source>
          <target state="translated">Transition.enabled</target>
        </trans-unit>
        <trans-unit id="38b09e1dc8ac63ff7c0685c24c3d37de1d509fe0" translate="yes" xml:space="preserve">
          <source>Transition.from</source>
          <target state="translated">Transition.from</target>
        </trans-unit>
        <trans-unit id="48f0c1508003e4805d2afa46eeae20b585c89b47" translate="yes" xml:space="preserve">
          <source>Transition.reversible</source>
          <target state="translated">Transition.reversible</target>
        </trans-unit>
        <trans-unit id="4fcc82d0f7b902331fa161e074520783a013159f" translate="yes" xml:space="preserve">
          <source>Transition.running</source>
          <target state="translated">Transition.running</target>
        </trans-unit>
        <trans-unit id="ab39260fea78bd5cdfde4b98ccfd4bc7bd02a43c" translate="yes" xml:space="preserve">
          <source>Transitions</source>
          <target state="translated">Transitions</target>
        </trans-unit>
        <trans-unit id="ea73248ff9772f0d05961c11f38dcda5fe38ec1e" translate="yes" xml:space="preserve">
          <source>Transitions During State Changes</source>
          <target state="translated">상태 변경 중 전환</target>
        </trans-unit>
        <trans-unit id="561084bfbf246e487332c477a25c793c1627509c" translate="yes" xml:space="preserve">
          <source>Transitions are changes in the time-zone: these happen when DST turns on or off and when authorities alter the offsets for the time-zone.</source>
          <target state="translated">전환은 시간대의 변경 사항입니다. DST를 켜거나 끌 때와 당국이 시간대에 대한 오프셋을 변경할 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="97548df1af69171d7132125f7b65b5903d175685" translate="yes" xml:space="preserve">
          <source>Transitions can be used to animate items that are added to, moved within, or removed from a positioner.</source>
          <target state="translated">전환을 사용하여 포지셔너에 추가, 포지셔너에서 이동 또는 제거 된 항목에 애니메이션을 적용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7d53a57915dd6ffe0b81d52095ead9ad6b0e2aed" translate="yes" xml:space="preserve">
          <source>Transitions can cause animations to be played. Use the &lt;a href=&quot;qabstracttransition#addAnimation&quot;&gt;addAnimation&lt;/a&gt;() function to add an animation to the transition.</source>
          <target state="translated">전환으로 인해 애니메이션이 재생 될 수 있습니다. &lt;a href=&quot;qabstracttransition#addAnimation&quot;&gt;addAnimation&lt;/a&gt; () 함수를 사용하여 전환에 애니메이션을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="cb3ba23c44ce3f162e57a226778c3ed4e260732d" translate="yes" xml:space="preserve">
          <source>Transitions for adding items apply to items that are created as part of a positioner, as well as those that are reparented to become children of a positioner.</source>
          <target state="translated">항목을 추가하기위한 전환은 포지셔너의 일부로 생성 된 항목과 포지셔너의 하위 항목이되는 항목에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="eb8ef7ca32cdcf69c93ce48c803a4fb5d3c6678b" translate="yes" xml:space="preserve">
          <source>Transitions for removing items apply to items within a positioner that are deleted, as well as those that are removed from a positioner and given new parents in a document.</source>
          <target state="translated">항목을 제거하기위한 전환은 삭제 된 포지셔너 내의 항목과 포지셔너에서 제거되고 문서에서 새 부모가 제공된 항목에도 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="2be17aa181d8226bfad83ce993e838fa79dcce4d" translate="yes" xml:space="preserve">
          <source>Translate</source>
          <target state="translated">Translate</target>
        </trans-unit>
        <trans-unit id="a2106bebea9562707ea729b8f6e5afba7be8637b" translate="yes" xml:space="preserve">
          <source>Translate (QML type)</source>
          <target state="translated">번역 (QML 유형)</target>
        </trans-unit>
        <trans-unit id="ff3cb4fbb1f5aa2e51da4f7d4c383020c2e637e2" translate="yes" xml:space="preserve">
          <source>Translate QML Type</source>
          <target state="translated">QML 유형 번역</target>
        </trans-unit>
        <trans-unit id="9c49577ffc1c815a2250f707b88049227ff76a82" translate="yes" xml:space="preserve">
          <source>Translate all points in the polygon by the given</source>
          <target state="translated">주어진 다각형을 기준으로 모든 점을 번역</target>
        </trans-unit>
        <trans-unit id="36ff05bcac4c53c748ac653efccfac6eb4f86188" translate="yes" xml:space="preserve">
          <source>Translate is available.</source>
          <target state="translated">번역이 가능합니다.</target>
        </trans-unit>
        <trans-unit id="7181fd5064f8842da6d33631b6c98ee50b31b305" translate="yes" xml:space="preserve">
          <source>Translate the view center causing the view direction to remain the same</source>
          <target state="translated">뷰 방향을 동일하게 유지하여 뷰 중심을 변환</target>
        </trans-unit>
        <trans-unit id="964417f1c6ca1adb4d7b6891db83732f01168ed4" translate="yes" xml:space="preserve">
          <source>Translate.x</source>
          <target state="translated">Translate.x</target>
        </trans-unit>
        <trans-unit id="9430912bc91e04f3b3ea764ab435b6e44fa62b80" translate="yes" xml:space="preserve">
          <source>Translate.y</source>
          <target state="translated">Translate.y</target>
        </trans-unit>
        <trans-unit id="331bdba68ccb193007127f32b17f6b7f65432661" translate="yes" xml:space="preserve">
          <source>Translates (moves) the region</source>
          <target state="translated">지역을 번역 (이동)</target>
        </trans-unit>
        <trans-unit id="9d2f5d2c2a82e3bf088bf6adebfa1c33437a3f9d" translate="yes" xml:space="preserve">
          <source>Translates all elements in the path by (</source>
          <target state="translated">경로의 모든 요소를 ​​(</target>
        </trans-unit>
        <trans-unit id="472413ce037c08d77377d252385e8f77fffb8963" translate="yes" xml:space="preserve">
          <source>Translates all elements in the path by the given</source>
          <target state="translated">주어진 경로에 따라 경로의 모든 요소를 ​​번역합니다.</target>
        </trans-unit>
        <trans-unit id="a31904f2a76b1fd9132b19b8098a12bb5f0795e8" translate="yes" xml:space="preserve">
          <source>Translates all points in the polygon by (</source>
          <target state="translated">다각형의 모든 점을 (</target>
        </trans-unit>
        <trans-unit id="38a2b7d589fdd5bccc883f875f3a47b28a2ab168" translate="yes" xml:space="preserve">
          <source>Translates all points in the polygon by the given</source>
          <target state="translated">주어진 다각형을 기준으로 모든 점을 변환합니다.</target>
        </trans-unit>
        <trans-unit id="e6c1bc768a18ca38fbf1d645e3df6190d54a6a73" translate="yes" xml:space="preserve">
          <source>Translates the camera's position and its view vector by</source>
          <target state="translated">카메라의 위치와 뷰 벡터를</target>
        </trans-unit>
        <trans-unit id="927d9d9c1d16b6dffee5f75e90dc0b3fac5969e6" translate="yes" xml:space="preserve">
          <source>Translates the coordinate system by the given</source>
          <target state="translated">주어진 좌표계를 변환합니다</target>
        </trans-unit>
        <trans-unit id="230fac6beb74c47560228d7b304813424f08a190" translate="yes" xml:space="preserve">
          <source>Translates the coordinate system by the vector (</source>
          <target state="translated">벡터로 좌표계를 변환합니다 (</target>
        </trans-unit>
        <trans-unit id="c96c8d32ba23620d0be683bbe7cb4ab79801450d" translate="yes" xml:space="preserve">
          <source>Translates the current view transformation by (</source>
          <target state="translated">현재 뷰 변환을 (</target>
        </trans-unit>
        <trans-unit id="662ff930418379be5c1b1f3898ff5a15f9415be8" translate="yes" xml:space="preserve">
          <source>Translates the global screen coordinate</source>
          <target state="translated">전체 화면 좌표를 번역합니다</target>
        </trans-unit>
        <trans-unit id="68896f0b452f17c467a936183555d4aed248ae6e" translate="yes" xml:space="preserve">
          <source>Translates the origin of the canvas by a horizontal distance of</source>
          <target state="translated">캔버스의 원점을 수평 거리만큼 변환합니다.</target>
        </trans-unit>
        <trans-unit id="b4de68b4643fe5c45d567c9d8261a15eaf2224b6" translate="yes" xml:space="preserve">
          <source>Translates the parent widget coordinate</source>
          <target state="translated">부모 위젯 좌표를 번역합니다</target>
        </trans-unit>
        <trans-unit id="3348dc45b26d648a8d0dd0b8c97c477a3a00d367" translate="yes" xml:space="preserve">
          <source>Translates the region</source>
          <target state="translated">지역을 번역합니다</target>
        </trans-unit>
        <trans-unit id="49c26418ed9de9e4093a2fa65f842fc00bcf96d8" translate="yes" xml:space="preserve">
          <source>Translates the widget coordinate</source>
          <target state="translated">위젯 좌표를 번역합니다</target>
        </trans-unit>
        <trans-unit id="17781de95ef068f74001963859490cb01d709d3a" translate="yes" xml:space="preserve">
          <source>Translates the window coordinate</source>
          <target state="translated">창 좌표를 변환합니다</target>
        </trans-unit>
        <trans-unit id="c9f671ad81165842ada55f1abe0f9928879339fb" translate="yes" xml:space="preserve">
          <source>Translates this cell accessible into the corresponding column index.</source>
          <target state="translated">액세스 가능한이 셀을 해당 열 인덱스로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="79b987be964845ad725bfec64ae3b1972940e754" translate="yes" xml:space="preserve">
          <source>Translates this cell accessible into the corresponding row index.</source>
          <target state="translated">액세스 가능한이 셀을 해당 행 인덱스로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="00495eef869809bb88e0f2ce6a1c35ba17e12cfc" translate="yes" xml:space="preserve">
          <source>Translates this geo circle by</source>
          <target state="translated">이 지역 서클을 다음으로 번역합니다.</target>
        </trans-unit>
        <trans-unit id="bc7aaa17161e98e4688e58168d86b0d99484fab8" translate="yes" xml:space="preserve">
          <source>Translates this geo path by</source>
          <target state="translated">이 지리적 경로를</target>
        </trans-unit>
        <trans-unit id="d67e14f9574fbbb7c20ed2cc936f6e34a444dc8e" translate="yes" xml:space="preserve">
          <source>Translates this geo polygon by</source>
          <target state="translated">이 지역 다각형을 다음과 같이 번역합니다.</target>
        </trans-unit>
        <trans-unit id="702aa31bf907123d2f377da8b28d067cb700b019" translate="yes" xml:space="preserve">
          <source>Translates this geo rectangle by</source>
          <target state="translated">이 지역 직사각형을 다음과 같이 번역합니다.</target>
        </trans-unit>
        <trans-unit id="6fb8580b1d1e33f0d0a1b5717f4015c8dda09a7c" translate="yes" xml:space="preserve">
          <source>Translates this line by the given</source>
          <target state="translated">주어진 줄에 의해이 줄을 번역</target>
        </trans-unit>
        <trans-unit id="82e61382eb7b0fb00da72ab7daa8247802c42f1e" translate="yes" xml:space="preserve">
          <source>Translates this line the distance specified by</source>
          <target state="translated">이 선을 다음과 같이 지정된 거리로 변환합니다</target>
        </trans-unit>
        <trans-unit id="1e9e7cbb7c3eff7d2b098ff53b92cb2eeb825e79" translate="yes" xml:space="preserve">
          <source>Translates to the given</source>
          <target state="translated">주어진 것으로 번역</target>
        </trans-unit>
        <trans-unit id="375629753794c13624068c2b5f3d2994278977b0" translate="yes" xml:space="preserve">
          <source>Translating Non-Qt Classes</source>
          <target state="translated">비 Qt 클래스 번역</target>
        </trans-unit>
        <trans-unit id="0999b96b74bb788c032df5923d0d885870f8b943" translate="yes" xml:space="preserve">
          <source>Translating Text That is Outside of a QObject Subclass</source>
          <target state="translated">QObject 서브 클래스 외부의 텍스트 번역</target>
        </trans-unit>
        <trans-unit id="9d453401cdad87a6b7b27da8a4af13064efad6e9" translate="yes" xml:space="preserve">
          <source>Translating strings in QML works exactly the same way as in C++, with the only difference being that you need to call qsTr() instead of &lt;a href=&quot;qobject#tr&quot;&gt;tr()&lt;/a&gt;. See also the page on &lt;a href=&quot;qtquick-internationalization#&quot;&gt;Internationalization and Localization with Qt Quick&lt;/a&gt;.</source>
          <target state="translated">QML에서 문자열 번역은 C ++에서와 동일한 방식으로 작동하지만, 차이점은 &lt;a href=&quot;qobject#tr&quot;&gt;tr ()&lt;/a&gt; 대신 qsTr ()을 호출해야한다는 것 입니다. &lt;a href=&quot;qtquick-internationalization#&quot;&gt;Qt Quick을 사용한 국제화 및 현지화&lt;/a&gt; 페이지도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2a3790fa27e8b3d1b0c6aa34a7d89692bd02701e" translate="yes" xml:space="preserve">
          <source>Translating the Application Menu and Native Dialogs</source>
          <target state="translated">응용 프로그램 메뉴 및 기본 대화 상자 번역</target>
        </trans-unit>
        <trans-unit id="21f5c660e5149f18195f40b758bf9671e4be9125" translate="yes" xml:space="preserve">
          <source>Translating the origin enables you to draw patterns of different objects on the canvas without having to measure the coordinates manually for each shape.</source>
          <target state="translated">원점을 변환하면 각 모양에 대해 수동으로 좌표를 측정 할 필요없이 캔버스에 다른 객체의 패턴을 그릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d336dbf470ed38c56580387474f7c3d6e6c53afc" translate="yes" xml:space="preserve">
          <source>Translating the painter will not cause the layout of the text to be recalculated, but will cause a very small performance impact on drawStaticText(). Altering any other parts of the painter's transformation or the painter's font will cause the layout of the static text to be recalculated. This should be avoided as often as possible to maximize the performance benefit of using &lt;a href=&quot;qstatictext&quot;&gt;QStaticText&lt;/a&gt;.</source>
          <target state="translated">페인터를 번역하면 텍스트의 레이아웃이 다시 계산되지 않지만 drawStaticText ()에 약간의 성능 영향이 발생합니다. 페인터 변환 또는 페인터 글꼴의 다른 부분을 변경하면 정적 텍스트의 레이아웃이 다시 계산됩니다. &lt;a href=&quot;qstatictext&quot;&gt;QStaticText&lt;/a&gt; 사용의 성능 이점을 최대화하려면 가능한 한 자주 피해야 합니다.</target>
        </trans-unit>
        <trans-unit id="6e55b7ececae9b3b38c54265af0bcbe56b8e385b" translate="yes" xml:space="preserve">
          <source>Translation Rules for Plurals</source>
          <target state="translated">복수에 대한 번역 규칙</target>
        </trans-unit>
        <trans-unit id="bca357d31bee355943d74ba8dd04c998ba4c8c9f" translate="yes" xml:space="preserve">
          <source>Translation contexts are defined for new &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;-based classes by the use of the &lt;a href=&quot;qobject#Q_OBJECT&quot;&gt;Q_OBJECT&lt;/a&gt; macro in each new class definition.</source>
          <target state="translated">각각의 새로운 클래스 정의에서 &lt;a href=&quot;qobject#Q_OBJECT&quot;&gt;Q_OBJECT&lt;/a&gt; 매크로를 사용하여 새로운 &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; 기반 클래스에 대한 변환 컨텍스트가 정의 됩니다.</target>
        </trans-unit>
        <trans-unit id="ed992db0340c3b846c794e054e638bb3f26332df" translate="yes" xml:space="preserve">
          <source>Translation files can be added or removed using &lt;a href=&quot;qcoreapplication#installTranslator&quot;&gt;installTranslator&lt;/a&gt;() and &lt;a href=&quot;qcoreapplication#removeTranslator&quot;&gt;removeTranslator&lt;/a&gt;(). Application strings can be translated using &lt;a href=&quot;qcoreapplication#translate&quot;&gt;translate&lt;/a&gt;(). The &lt;a href=&quot;qobject#tr&quot;&gt;QObject::tr&lt;/a&gt;() and QObject::trUtf8() functions are implemented in terms of &lt;a href=&quot;qcoreapplication#translate&quot;&gt;translate&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qcoreapplication#installTranslator&quot;&gt;installTranslator&lt;/a&gt; () 및 &lt;a href=&quot;qcoreapplication#removeTranslator&quot;&gt;removeTranslator&lt;/a&gt; ()를 사용하여 번역 파일을 추가하거나 제거 할 수 있습니다 . &lt;a href=&quot;qcoreapplication#translate&quot;&gt;번역&lt;/a&gt; ()을 사용하여 응용 프로그램 문자열을 번역 할 수 있습니다 . &lt;a href=&quot;qobject#tr&quot;&gt;QObject를 :: TR&lt;/a&gt; ()와 QObject를 :: trUtf8은 () 함수는 측면에서 구현 &lt;a href=&quot;qcoreapplication#translate&quot;&gt;번역&lt;/a&gt; ().</target>
        </trans-unit>
        <trans-unit id="5a44d6019cd6b9367f64a79c8ac74ed764cb4f33" translate="yes" xml:space="preserve">
          <source>Translation files in &lt;code&gt;TRANSLATIONS&lt;/code&gt; will be processed by both &lt;a href=&quot;https://doc.qt.io/qt-5.13/linguist-manager.html#using-lrelease&quot;&gt;lrelease&lt;/a&gt; and &lt;a href=&quot;https://doc.qt.io/qt-5.13/linguist-manager.html#using-lupdate&quot;&gt;Using lupdate&lt;/a&gt; tools. Use &lt;a href=&quot;#extra-translations&quot;&gt;EXTRA_TRANSLATIONS&lt;/a&gt; if you want only &lt;code&gt;lrelease&lt;/code&gt; to process a file.</source>
          <target state="translated">번역 파일 &lt;code&gt;TRANSLATIONS&lt;/code&gt; 모두에 의해 처리됩니다 &lt;a href=&quot;https://doc.qt.io/qt-5.13/linguist-manager.html#using-lrelease&quot;&gt;lrelease&lt;/a&gt; 및 &lt;a href=&quot;https://doc.qt.io/qt-5.13/linguist-manager.html#using-lupdate&quot;&gt;lupdate의 사용&lt;/a&gt; 도구. 사용 &lt;a href=&quot;#extra-translations&quot;&gt;EXTRA_TRANSLATIONS은&lt;/a&gt; 만 원하는 경우 &lt;code&gt;lrelease&lt;/code&gt; 파일을 처리 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="06ddf4a07e4e8eb7b12c78ba1b636fb54c50c77f" translate="yes" xml:space="preserve">
          <source>Translation files must have &quot;&lt;a href=&quot;https://doc.qt.io/qt-5.13/whatsnew53.html#qml&quot;&gt;qml_&lt;/a&gt;&quot; prefix e.g. qml_ja_JP.qm.</source>
          <target state="translated">번역 파일에는 &quot; &lt;a href=&quot;https://doc.qt.io/qt-5.13/whatsnew53.html#qml&quot;&gt;qml_&lt;/a&gt; &quot;접두사 가 있어야합니다 ( 예 : qml_ja_JP.qm).</target>
        </trans-unit>
        <trans-unit id="b863343d6c2d30cae28b592579496ed400ddac40" translate="yes" xml:space="preserve">
          <source>Translation is the simplest transformation. Setting &lt;code&gt;dx&lt;/code&gt; and &lt;code&gt;dy&lt;/code&gt; will move the coordinate system &lt;code&gt;dx&lt;/code&gt; units along the X axis and &lt;code&gt;dy&lt;/code&gt; units along the Y axis. Scaling can be done by setting &lt;code&gt;m11&lt;/code&gt; and &lt;code&gt;m22&lt;/code&gt;. For example, setting &lt;code&gt;m11&lt;/code&gt; to 2 and &lt;code&gt;m22&lt;/code&gt; to 1.5 will double the height and increase the width by 50%. The identity matrix has &lt;code&gt;m11&lt;/code&gt; and &lt;code&gt;m22&lt;/code&gt; set to 1 (all others are set to 0) mapping a point to itself. Shearing is controlled by &lt;code&gt;m12&lt;/code&gt; and &lt;code&gt;m21&lt;/code&gt;. Setting these elements to values different from zero will twist the coordinate system. Rotation is achieved by carefully setting both the shearing factors and the scaling factors.</source>
          <target state="translated">번역은 가장 간단한 변형입니다. &lt;code&gt;dx&lt;/code&gt; 및 &lt;code&gt;dy&lt;/code&gt; 를 설정 하면 좌표계 &lt;code&gt;dx&lt;/code&gt; 단위가 X 축을 따라 이동 하고 &lt;code&gt;dy&lt;/code&gt; 단위가 Y 축을 따라 이동합니다. &lt;code&gt;m11&lt;/code&gt; 및 &lt;code&gt;m22&lt;/code&gt; 를 설정하여 스케일링을 수행 할 수 있습니다 . 예를 들어, &lt;code&gt;m11&lt;/code&gt; 을 2로, &lt;code&gt;m22&lt;/code&gt; 를 1.5로 설정 하면 높이가 두 배가되고 너비가 50 % 증가합니다. 항등 행렬에는 &lt;code&gt;m11&lt;/code&gt; 과 &lt;code&gt;m22&lt;/code&gt; 가 1로 설정되어 있고 (다른 모든 것은 0으로 설정되어) 점이 자체에 매핑되어 있습니다. 전단은 &lt;code&gt;m12&lt;/code&gt; 및 &lt;code&gt;m21&lt;/code&gt; 에 의해 제어됩니다. 이러한 요소를 0과 다른 값으로 설정하면 좌표계가 비틀어집니다. 전단 계수와 스케일링 계수를 신중하게 설정하여 회전을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="19566951b9dd2d2524bd71177474d2d68210d8e3" translate="yes" xml:space="preserve">
          <source>Translation is the simplest transformation. Setting &lt;code&gt;dx&lt;/code&gt; and &lt;code&gt;dy&lt;/code&gt; will move the coordinate system &lt;code&gt;dx&lt;/code&gt; units along the X axis and &lt;code&gt;dy&lt;/code&gt; units along the Y axis. Scaling can be done by setting &lt;code&gt;m11&lt;/code&gt; and &lt;code&gt;m22&lt;/code&gt;. For example, setting &lt;code&gt;m11&lt;/code&gt; to 2 and &lt;code&gt;m22&lt;/code&gt; to 1.5 will double the height and increase the width by 50%. The identity matrix has &lt;code&gt;m11&lt;/code&gt;, &lt;code&gt;m22&lt;/code&gt;, and &lt;code&gt;m33&lt;/code&gt; set to 1 (all others are set to 0) mapping a point to itself. Shearing is controlled by &lt;code&gt;m12&lt;/code&gt; and &lt;code&gt;m21&lt;/code&gt;. Setting these elements to values different from zero will twist the coordinate system. Rotation is achieved by setting both the shearing factors and the scaling factors. Perspective transformation is achieved by setting both the projection factors and the scaling factors.</source>
          <target state="translated">번역은 가장 간단한 변형입니다. &lt;code&gt;dx&lt;/code&gt; 및 &lt;code&gt;dy&lt;/code&gt; 를 설정 하면 좌표계 &lt;code&gt;dx&lt;/code&gt; 단위가 X 축을 따라 이동 하고 &lt;code&gt;dy&lt;/code&gt; 단위가 Y 축을 따라 이동합니다. &lt;code&gt;m11&lt;/code&gt; 및 &lt;code&gt;m22&lt;/code&gt; 를 설정하여 스케일링을 수행 할 수 있습니다 . 예를 들어, &lt;code&gt;m11&lt;/code&gt; 을 2로, &lt;code&gt;m22&lt;/code&gt; 를 1.5로 설정 하면 높이가 두 배가되고 너비가 50 % 증가합니다. 항등 행렬에는 점을 자체에 매핑하는 &lt;code&gt;m11&lt;/code&gt; , &lt;code&gt;m22&lt;/code&gt; 및 &lt;code&gt;m33&lt;/code&gt; 이 1로 설정되고 다른 모든 항목은 0으로 설정됩니다. 전단은 &lt;code&gt;m12&lt;/code&gt; 및 &lt;code&gt;m21&lt;/code&gt; 에 의해 제어됩니다. 이러한 요소를 0과 다른 값으로 설정하면 좌표계가 비틀어집니다. 전단 계수와 스케일링 계수를 모두 설정하여 회전을 수행합니다. 원근 변환은 투영 계수와 스케일링 계수를 모두 설정하여 달성됩니다.</target>
        </trans-unit>
        <trans-unit id="fb53af4c23a26525672958739f42b8e44ac852e9" translate="yes" xml:space="preserve">
          <source>Translation to/from legacy encodings for file I/O: see &lt;a href=&quot;qtextcodec&quot;&gt;QTextCodec&lt;/a&gt; and &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt;.</source>
          <target state="translated">파일 I / O에 대한 레거시 인코딩 과의 &lt;a href=&quot;qtextstream&quot;&gt;변환&lt;/a&gt; : &lt;a href=&quot;qtextcodec&quot;&gt;QTextCodec&lt;/a&gt; 및 QTextStream을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8ad8302d110b05d7e02330dac58628134fdcff02" translate="yes" xml:space="preserve">
          <source>Translations</source>
          <target state="translated">Translations</target>
        </trans-unit>
        <trans-unit id="233199f11d826d0a5f649c734d669979e5914b8b" translate="yes" xml:space="preserve">
          <source>Translator Comments</source>
          <target state="translated">번역기 설명</target>
        </trans-unit>
        <trans-unit id="0516f84cb40b48ba17044fbf0f12609f0e5e4d87" translate="yes" xml:space="preserve">
          <source>Translucent vs Opaque</source>
          <target state="translated">반투명 대 불투명</target>
        </trans-unit>
        <trans-unit id="291f8acec5dd94addcaa582926fadd13ed3253ae" translate="yes" xml:space="preserve">
          <source>Transmission Power UUID (service). The service exposes a device&amp;rsquo;s current transmit power level when in a connection.</source>
          <target state="translated">전송 전력 UUID (서비스). 이 서비스는 연결시 장치의 현재 전송 전력 수준을 노출합니다.</target>
        </trans-unit>
        <trans-unit id="74368e02a35c56b2faeea100d29fcd81b3a34c61" translate="yes" xml:space="preserve">
          <source>Transparency and Double Buffering</source>
          <target state="translated">투명성 및 이중 버퍼링</target>
        </trans-unit>
        <trans-unit id="b3dad28fffa3a16a2901c5e21397ce58062afc3b" translate="yes" xml:space="preserve">
          <source>Transparent slice frame color is not supported.</source>
          <target state="translated">투명한 슬라이스 프레임 색상은 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="22fb76e46f645ef6e6c964d6dd08c200b91bca31" translate="yes" xml:space="preserve">
          <source>Travel</source>
          <target state="translated">Travel</target>
        </trans-unit>
        <trans-unit id="e48a94e7fe08bdc8c0f65378c31ea9396b98bac1" translate="yes" xml:space="preserve">
          <source>Travel The route will be optimized for someone who is making use of public transit</source>
          <target state="translated">여행 경로는 대중 교통을 이용하는 사람에게 최적화됩니다</target>
        </trans-unit>
        <trans-unit id="aec4c78a04368561fa7108391fb908fa2a9bb735" translate="yes" xml:space="preserve">
          <source>Travel modes</source>
          <target state="translated">여행 모드</target>
        </trans-unit>
        <trans-unit id="fb4d67197e3a726e86e89464c850938d5bba97f4" translate="yes" xml:space="preserve">
          <source>Traversing directories and reading a file:</source>
          <target state="translated">디렉토리 탐색 및 파일 읽기 :</target>
        </trans-unit>
        <trans-unit id="bf3a419515dcadc4666cee508152b15973c5330a" translate="yes" xml:space="preserve">
          <source>Tray menu</source>
          <target state="translated">트레이 메뉴</target>
        </trans-unit>
        <trans-unit id="a6fdf671f56d2d74d87e341310612e3b49345f2d" translate="yes" xml:space="preserve">
          <source>Treat empty fields as if they don't exist, i.e. they are not considered as far as</source>
          <target state="translated">빈 필드는 존재하지 않는 것처럼 취급합니다.</target>
        </trans-unit>
        <trans-unit id="9a0dafda1b01986365e64dc6e9d7ea8075ae3e44" translate="yes" xml:space="preserve">
          <source>Treat this text as &quot;hidden&quot; and don't print it.</source>
          <target state="translated">이 텍스트를 &quot;숨겨진&quot;것으로 취급하고 인쇄하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="ac7fb6f284b844fc222a72acf3153e50fbd4b2a3" translate="yes" xml:space="preserve">
          <source>Treats all whitespace as spaces and prints just one line.</source>
          <target state="translated">모든 공백을 공백으로 취급하고 한 줄만 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="9e9f316760fd154afe810c724600d148e88f8bb1" translate="yes" xml:space="preserve">
          <source>Tree Branch Indicators</source>
          <target state="translated">트리 분기 표시기</target>
        </trans-unit>
        <trans-unit id="13b3ebf5fea1dfb40ee60383c46c8207a4057141" translate="yes" xml:space="preserve">
          <source>Tree of QDomNodes which is not usually a complete QDomDocument</source>
          <target state="translated">일반적으로 완전한 QDomDocument가 아닌 QDomNodes 트리</target>
        </trans-unit>
        <trans-unit id="1e574da865595e07f3a1fd42c1e676a628e5d3cf" translate="yes" xml:space="preserve">
          <source>Tree view that uses a predefined tree model</source>
          <target state="translated">사전 정의 된 트리 모델을 사용하는 트리 뷰</target>
        </trans-unit>
        <trans-unit id="6191da7c4e0b401e56054191fb14f107e1ed4e17" translate="yes" xml:space="preserve">
          <source>Tree widget items are used to hold rows of information for tree widgets. Rows usually contain several columns of data, each of which can contain a text label and an icon.</source>
          <target state="translated">트리 위젯 항목은 트리 위젯에 대한 정보 행을 보유하는 데 사용됩니다. 행에는 일반적으로 여러 열의 데이터가 포함되며 각 열에는 텍스트 레이블과 아이콘이 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3403183124a23f3c55e0c8f1d45186e06e913fa5" translate="yes" xml:space="preserve">
          <source>Tree widgets</source>
          <target state="translated">트리 위젯</target>
        </trans-unit>
        <trans-unit id="ded802a373e90b21f8ed09a16a3e753dfa673fa9" translate="yes" xml:space="preserve">
          <source>Tree widgets deal with top-level items slightly differently to other items from deeper within the tree. Items can be removed from the top level of the tree by calling the tree widget's &lt;a href=&quot;qtreewidget#takeTopLevelItem&quot;&gt;takeTopLevelItem()&lt;/a&gt; function, but items from lower levels are removed by calling their parent item's &lt;a href=&quot;qtreewidgetitem#takeChild&quot;&gt;takeChild()&lt;/a&gt; function. Items are inserted in the top level of the tree with the &lt;a href=&quot;qtreewidget#insertTopLevelItem&quot;&gt;insertTopLevelItem()&lt;/a&gt; function. At lower levels in the tree, the parent item's &lt;a href=&quot;qtreewidgetitem#insertChild&quot;&gt;insertChild()&lt;/a&gt; function is used.</source>
          <target state="translated">트리 위젯은 최상위 레벨 항목을 트리 내에서 다른 항목과 약간 다르게 처리합니다. 트리 위젯의 &lt;a href=&quot;qtreewidget#takeTopLevelItem&quot;&gt;takeTopLevelItem ()&lt;/a&gt; 함수 를 호출하여 트리의 최상위 레벨에서 항목을 제거 할 수 있지만 상위 항목의 &lt;a href=&quot;qtreewidgetitem#takeChild&quot;&gt;takeChild ()&lt;/a&gt; 함수 를 호출하여 하위 레벨의 항목을 제거 합니다. &lt;a href=&quot;qtreewidget#insertTopLevelItem&quot;&gt;insertTopLevelItem ()&lt;/a&gt; 함수 를 사용하여 트리의 최상위 레벨에 항목을 삽입 합니다. 트리의 하위 레벨에서는 상위 항목의 &lt;a href=&quot;qtreewidgetitem#insertChild&quot;&gt;insertChild ()&lt;/a&gt; 함수가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f7355f5fbdfed3bc1937b290103e2a5aa3bba55e" translate="yes" xml:space="preserve">
          <source>TreeView</source>
          <target state="translated">TreeView</target>
        </trans-unit>
        <trans-unit id="c779e1a4525631676d2e1ca9381b994d8358490b" translate="yes" xml:space="preserve">
          <source>TreeView (QML type)</source>
          <target state="translated">TreeView (QML 유형)</target>
        </trans-unit>
        <trans-unit id="84eef79dc0f921b51ba5d059c59af45561ffd694" translate="yes" xml:space="preserve">
          <source>TreeView QML Type</source>
          <target state="translated">TreeView QML 유형</target>
        </trans-unit>
        <trans-unit id="ccc0e785313c811df23501a3efd9254f19b98653" translate="yes" xml:space="preserve">
          <source>TreeView.activated()</source>
          <target state="translated">TreeView.activated()</target>
        </trans-unit>
        <trans-unit id="5951da709bdbfb6527121433b8fca199df80295c" translate="yes" xml:space="preserve">
          <source>TreeView.clicked()</source>
          <target state="translated">TreeView.clicked()</target>
        </trans-unit>
        <trans-unit id="dbf16e57d5e7f21bdf47186f16aa408a2e45b94c" translate="yes" xml:space="preserve">
          <source>TreeView.collapse()</source>
          <target state="translated">TreeView.collapse()</target>
        </trans-unit>
        <trans-unit id="9323767820f6bc080fcc9ae70aa1ae54f47ce5cd" translate="yes" xml:space="preserve">
          <source>TreeView.collapsed()</source>
          <target state="translated">TreeView.collapsed()</target>
        </trans-unit>
        <trans-unit id="e4b1d65c240dd96578656d68e5b490928e5cb528" translate="yes" xml:space="preserve">
          <source>TreeView.currentIndex</source>
          <target state="translated">TreeView.currentIndex</target>
        </trans-unit>
        <trans-unit id="b927898b267812cd66b9e03b3ad77ccf3867dcb8" translate="yes" xml:space="preserve">
          <source>TreeView.doubleClicked()</source>
          <target state="translated">TreeView.doubleClicked()</target>
        </trans-unit>
        <trans-unit id="565eea2952c6459279376f9b2e3a6c9480c90329" translate="yes" xml:space="preserve">
          <source>TreeView.expand()</source>
          <target state="translated">TreeView.expand()</target>
        </trans-unit>
        <trans-unit id="1bb3850214980fe246def8c52ee282affee3d4da" translate="yes" xml:space="preserve">
          <source>TreeView.expanded()</source>
          <target state="translated">TreeView.expanded()</target>
        </trans-unit>
        <trans-unit id="917f5a049807d512cd64e397da3710cc150c1add" translate="yes" xml:space="preserve">
          <source>TreeView.groupsection.property</source>
          <target state="translated">TreeView.groupsection.property</target>
        </trans-unit>
        <trans-unit id="c9f54ef3f7ca5dab74d622938911139ed9d7a2b9" translate="yes" xml:space="preserve">
          <source>TreeView.indexAt()</source>
          <target state="translated">TreeView.indexAt()</target>
        </trans-unit>
        <trans-unit id="3ea28cd16e539bc85173c8aa2b272a9c82bb1ccf" translate="yes" xml:space="preserve">
          <source>TreeView.isExpanded()</source>
          <target state="translated">TreeView.isExpanded()</target>
        </trans-unit>
        <trans-unit id="1a6f07aa8b79805c23e74f2580fede1efa7fa6f2" translate="yes" xml:space="preserve">
          <source>TreeView.itemDelegate</source>
          <target state="translated">TreeView.itemDelegate</target>
        </trans-unit>
        <trans-unit id="35d85359fef1bde9f028d7692fd2852609c58448" translate="yes" xml:space="preserve">
          <source>TreeView.model</source>
          <target state="translated">TreeView.model</target>
        </trans-unit>
        <trans-unit id="59d4cbefbd9b0db0b4b45b6f877669a593543f7a" translate="yes" xml:space="preserve">
          <source>TreeView.pressAndHold()</source>
          <target state="translated">TreeView.pressAndHold()</target>
        </trans-unit>
        <trans-unit id="0fa1df381ed20b63d67ddc8746c55fe1e0379131" translate="yes" xml:space="preserve">
          <source>TreeView.rootIndex</source>
          <target state="translated">TreeView.rootIndex</target>
        </trans-unit>
        <trans-unit id="f3aa27f1446a668ef0e722c54be8291879fb4c1b" translate="yes" xml:space="preserve">
          <source>TreeView.selection</source>
          <target state="translated">TreeView.selection</target>
        </trans-unit>
        <trans-unit id="b1dbe8350be51a462d5e7af50e64d13883c212bd" translate="yes" xml:space="preserve">
          <source>TreeViewStyle</source>
          <target state="translated">TreeViewStyle</target>
        </trans-unit>
        <trans-unit id="d322f2f427bd5b4307177ece4041f419a15c5f78" translate="yes" xml:space="preserve">
          <source>TreeViewStyle (QML type)</source>
          <target state="translated">TreeViewStyle (QML 유형)</target>
        </trans-unit>
        <trans-unit id="c0f34427a45c649413d6bb792be40cedb865aa80" translate="yes" xml:space="preserve">
          <source>TreeViewStyle QML Type</source>
          <target state="translated">TreeViewStyle QML 유형</target>
        </trans-unit>
        <trans-unit id="d36b66a89618c06b2480c1a6247990fe489a1a09" translate="yes" xml:space="preserve">
          <source>TreeViewStyle.branchDelegate</source>
          <target state="translated">TreeViewStyle.branchDelegate</target>
        </trans-unit>
        <trans-unit id="aa11f993ece13459610af74f75800eec7537a397" translate="yes" xml:space="preserve">
          <source>TreeViewStyle.control</source>
          <target state="translated">TreeViewStyle.control</target>
        </trans-unit>
        <trans-unit id="3b2c88f6d31ca2e63d89ed32a4bdde714b322b8c" translate="yes" xml:space="preserve">
          <source>TreeViewStyle.headerDelegate</source>
          <target state="translated">TreeViewStyle.headerDelegate</target>
        </trans-unit>
        <trans-unit id="bea413379126f7a60fd436b7fd03625e30fd1b7f" translate="yes" xml:space="preserve">
          <source>TreeViewStyle.indentation</source>
          <target state="translated">TreeViewStyle.indentation</target>
        </trans-unit>
        <trans-unit id="011f1ef6b982d1a90528f28271a1086f85633b64" translate="yes" xml:space="preserve">
          <source>TreeViewStyle.itemDelegate</source>
          <target state="translated">TreeViewStyle.itemDelegate</target>
        </trans-unit>
        <trans-unit id="d12125553fc9600f24999831640b62b71e85658d" translate="yes" xml:space="preserve">
          <source>TreeViewStyle.rowDelegate</source>
          <target state="translated">TreeViewStyle.rowDelegate</target>
        </trans-unit>
        <trans-unit id="5ff6ffa5cff4cd9c4f35379b1efe0911b6a32771" translate="yes" xml:space="preserve">
          <source>Trees or hierarchical lists of items are provided by the &lt;code&gt;QTreeWidget&lt;/code&gt; and &lt;code&gt;QTreeWidgetItem&lt;/code&gt; classes. Each item in the tree widget can have child items of its own, and can display a number of columns of information. Tree widgets are created just like any other widget:</source>
          <target state="translated">트리 또는 계층 적 항목 목록은 &lt;code&gt;QTreeWidget&lt;/code&gt; 및 &lt;code&gt;QTreeWidgetItem&lt;/code&gt; 클래스에 의해 제공됩니다 . 트리 위젯의 각 항목에는 자체 하위 항목이있을 수 있으며 여러 정보 열이 표시 될 수 있습니다. 트리 위젯은 다른 위젯과 마찬가지로 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="1d04d40934f963d324969017b69dcf8347eeed7c" translate="yes" xml:space="preserve">
          <source>Triangle picking will produce exact results but is computationally more expensive.</source>
          <target state="translated">삼각형 선택은 정확한 결과를 생성하지만 계산 비용이 많이 듭니다.</target>
        </trans-unit>
        <trans-unit id="5361aba78eca3d5ff9bea4e25ee12c56f963759b" translate="yes" xml:space="preserve">
          <source>Triangular tabs above the pages.</source>
          <target state="translated">페이지 위의 삼각형 탭.</target>
        </trans-unit>
        <trans-unit id="e0469cec366ac5ffbf1f60d999340794dc17304c" translate="yes" xml:space="preserve">
          <source>Triangular tabs on the left of the pages.</source>
          <target state="translated">페이지 왼쪽의 삼각형 탭.</target>
        </trans-unit>
        <trans-unit id="f0b5de16483c560b52c53d217d6d5d6e6f349995" translate="yes" xml:space="preserve">
          <source>Triangular tabs on the right of the pages.</source>
          <target state="translated">페이지 오른쪽의 삼각형 탭.</target>
        </trans-unit>
        <trans-unit id="10d622f3b2f0320edf71634dc034e2c69884e713" translate="yes" xml:space="preserve">
          <source>Triangular tabs similar to those used in the Excel spreadsheet, for example</source>
          <target state="translated">예를 들어 Excel 스프레드 시트에서 사용 된 것과 유사한 삼각형 탭</target>
        </trans-unit>
        <trans-unit id="fb80fd75bd4621f3dc48c0fd575fdcf1deba9b9e" translate="yes" xml:space="preserve">
          <source>Tries to acquire &lt;code&gt;n&lt;/code&gt; resources guarded by the semaphore and returns &lt;code&gt;true&lt;/code&gt; on success. If &lt;a href=&quot;qsemaphore#available&quot;&gt;available&lt;/a&gt;() &amp;lt;</source>
          <target state="translated">세마포어에 의해 보호되는 &lt;code&gt;n&lt;/code&gt; 개의 자원 을 확보하려고 시도하고 성공하면 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 . &lt;a href=&quot;qsemaphore#available&quot;&gt;가능한&lt;/a&gt; 경우 () &amp;lt;</target>
        </trans-unit>
        <trans-unit id="3219e0885893a40549d606fa55cf39a6095813af" translate="yes" xml:space="preserve">
          <source>Tries to acquire &lt;code&gt;n&lt;/code&gt; resources guarded by the semaphore. If</source>
          <target state="translated">세마포가 지키고있는 &lt;code&gt;n&lt;/code&gt; 개의 자원 을 얻으려고 합니다. 만약</target>
        </trans-unit>
        <trans-unit id="1092b313652c7ab245ae4f3794eecf3f3be535ae" translate="yes" xml:space="preserve">
          <source>Tries to detect the encoding of the provided snippet</source>
          <target state="translated">제공된 스 니펫의 인코딩을 감지하려고합니다.</target>
        </trans-unit>
        <trans-unit id="e3126a529603911dbf88fa7326a3333157838b60" translate="yes" xml:space="preserve">
          <source>Tries to detect the encoding of the provided snippet of HTML in the given byte array,</source>
          <target state="translated">제공된 바이트 배열에서 제공된 HTML 스 니펫의 인코딩을 감지하려고합니다.</target>
        </trans-unit>
        <trans-unit id="57ea939b23b2ac5cd6a85c4c4001808f1b2c8854" translate="yes" xml:space="preserve">
          <source>Tries to find a file or directory called</source>
          <target state="translated">파일 또는 디렉토리를 찾으려고합니다.</target>
        </trans-unit>
        <trans-unit id="5aefaa113aaedecdc37d5d397a3638688ff8e030" translate="yes" xml:space="preserve">
          <source>Tries to find all files or directories called</source>
          <target state="translated">모든 파일 또는 디렉토리를 찾으려고합니다.</target>
        </trans-unit>
        <trans-unit id="aa71de2e23d322e196e1f52202e38b9704ff81b2" translate="yes" xml:space="preserve">
          <source>Trigger a state change:</source>
          <target state="translated">상태 변경을 트리거하십시오.</target>
        </trans-unit>
        <trans-unit id="afe53f4e75659fa57c578d982a9e4f3f48514ae5" translate="yes" xml:space="preserve">
          <source>Trigger any attached Web Inspector to inspect the highlighed element. (Added in Qt 5.6)</source>
          <target state="translated">연결된 Web Inspector를 트리거하여 높은 요소를 검사하십시오. (Qt 5.6에서 추가됨)</target>
        </trans-unit>
        <trans-unit id="83936d7a4ef2141c1d1fb215977fcabb78ef4cfd" translate="yes" xml:space="preserve">
          <source>Trigger the Save web action.</source>
          <target state="translated">웹 저장 조치를 트리거하십시오.</target>
        </trans-unit>
        <trans-unit id="87332cf3b21e7c7eb4d05f5c2b877ae09df119f6" translate="yes" xml:space="preserve">
          <source>TriggerMode.TriggerOnClick</source>
          <target state="translated">TriggerMode.TriggerOnClick</target>
        </trans-unit>
        <trans-unit id="7c89a7dd31977b39c0a0e685e6d2c380de8ef56c" translate="yes" xml:space="preserve">
          <source>TriggerMode.TriggerOnPress</source>
          <target state="translated">TriggerMode.TriggerOnPress</target>
        </trans-unit>
        <trans-unit id="99e0f3f456220d6b941c5f5f661e13097568c3c7" translate="yes" xml:space="preserve">
          <source>TriggerMode.TriggerOnRelease</source>
          <target state="translated">TriggerMode.TriggerOnRelease</target>
        </trans-unit>
        <trans-unit id="1f6a70b9265a3fc56a68d494889f323ff245a31d" translate="yes" xml:space="preserve">
          <source>Triggering Animations</source>
          <target state="translated">트리거링 애니메이션</target>
        </trans-unit>
        <trans-unit id="c2dadf9b6caf87047e87c3323ee1c1f27ce69531" translate="yes" xml:space="preserve">
          <source>Triggering this action will cause a call to &lt;a href=&quot;qundostack#redo&quot;&gt;QUndoStack::redo&lt;/a&gt;() on the active stack. The text of this action will always be the text of the command which will be redone in the next call to &lt;a href=&quot;qundogroup#redo&quot;&gt;redo&lt;/a&gt;(), prefixed by</source>
          <target state="translated">이 조치를 트리거 하면 활성 스택에서 &lt;a href=&quot;qundostack#redo&quot;&gt;QUndoStack :: redo&lt;/a&gt; () 가 호출됩니다 . 이 액션의 텍스트는 항상 다음에 &lt;a href=&quot;qundogroup#redo&quot;&gt;redo&lt;/a&gt; ()를 호출 할 때 다시 시작될 명령 텍스트입니다.</target>
        </trans-unit>
        <trans-unit id="1e099708bf135505a8bd43b5e6dd5995bf46a792" translate="yes" xml:space="preserve">
          <source>Triggering this action will cause a call to &lt;a href=&quot;qundostack#redo&quot;&gt;redo&lt;/a&gt;(). The text of this action is the text of the command which will be redone in the next call to &lt;a href=&quot;qundostack#redo&quot;&gt;redo&lt;/a&gt;(), prefixed by the specified</source>
          <target state="translated">이 작업을 트리거하면 &lt;a href=&quot;qundostack#redo&quot;&gt;다시 실행&lt;/a&gt; () 이 호출됩니다 . 이 동작의 텍스트는 다음에 &lt;a href=&quot;qundostack#redo&quot;&gt;redo&lt;/a&gt; ()를 호출 할 때 지정된 접두사가 붙은 명령 텍스트입니다.</target>
        </trans-unit>
        <trans-unit id="e353e94341c5a6b63b023dd9b76b7cfa968c7385" translate="yes" xml:space="preserve">
          <source>Triggering this action will cause a call to &lt;a href=&quot;qundostack#undo&quot;&gt;QUndoStack::undo&lt;/a&gt;() on the active stack. The text of this action will always be the text of the command which will be undone in the next call to &lt;a href=&quot;qundogroup#undo&quot;&gt;undo&lt;/a&gt;(), prefixed by</source>
          <target state="translated">이 작업을 트리거 하면 활성 스택에서 &lt;a href=&quot;qundostack#undo&quot;&gt;QUndoStack :: undo&lt;/a&gt; () 가 호출됩니다 . 이 동작의 텍스트는 항상 다음에 &lt;a href=&quot;qundogroup#undo&quot;&gt;실행 취소&lt;/a&gt; ()를 호출 할 때 실행 취소되는 명령의 텍스트입니다.</target>
        </trans-unit>
        <trans-unit id="25ac3d75e3413f81a7e2e7235b46c790178c004a" translate="yes" xml:space="preserve">
          <source>Triggering this action will cause a call to &lt;a href=&quot;qundostack#undo&quot;&gt;undo&lt;/a&gt;(). The text of this action is the text of the command which will be undone in the next call to &lt;a href=&quot;qundostack#undo&quot;&gt;undo&lt;/a&gt;(), prefixed by the specified</source>
          <target state="translated">이 동작을 트리거하면 호출이 &lt;a href=&quot;qundostack#undo&quot;&gt;취소됩니다&lt;/a&gt; (). 이 조치의 텍스트는 명령의 텍스트이며, 다음에 &lt;a href=&quot;qundostack#undo&quot;&gt;실행 취소&lt;/a&gt; ()를 호출 하면 지정된 접두사가 붙습니다.</target>
        </trans-unit>
        <trans-unit id="ce45d08bfb84e85f4fa35ac5710199f52962e8e4" translate="yes" xml:space="preserve">
          <source>Triggers a handler at a specified interval. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">지정된 간격으로 핸들러를 트리거합니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8865363154bae7e24b44411aaa9a859a9bf10fec" translate="yes" xml:space="preserve">
          <source>Triggers a re-layout of the displayed text.</source>
          <target state="translated">표시된 텍스트를 다시 레이아웃합니다.</target>
        </trans-unit>
        <trans-unit id="31478325cebb02f2483416dc91415769f75bde74" translate="yes" xml:space="preserve">
          <source>Triggers a slider</source>
          <target state="translated">슬라이더를 트리거</target>
        </trans-unit>
        <trans-unit id="14593094ee303169ee6ae5aecb0fd7d1affa91fb" translate="yes" xml:space="preserve">
          <source>Triggers an update of the data generator that is sent to the backend.</source>
          <target state="translated">백엔드로 전송되는 데이터 생성기의 업데이트를 트리거합니다.</target>
        </trans-unit>
        <trans-unit id="65d79ff3c9191798506a52de2fa12aec2c7eccf2" translate="yes" xml:space="preserve">
          <source>Triggers the action and emits &lt;a href=&quot;qml-qtquick-controls2-action#triggered-signal&quot;&gt;triggered()&lt;/a&gt; if enabled, with an optional</source>
          <target state="translated">선택적으로 액션을 트리거하고 활성화되면 &lt;a href=&quot;qml-qtquick-controls2-action#triggered-signal&quot;&gt;triggered ()를 내&lt;/a&gt; 보냅니다.</target>
        </trans-unit>
        <trans-unit id="487c8ef4ca4d5bf3164520c3c7fadad6770d5552" translate="yes" xml:space="preserve">
          <source>Triggers the action.</source>
          <target state="translated">동작을 트리거합니다.</target>
        </trans-unit>
        <trans-unit id="acd72014c19383ce51b8ada37a18058faf5e9e4a" translate="yes" xml:space="preserve">
          <source>Triggers the specified</source>
          <target state="translated">지정된 트리거</target>
        </trans-unit>
        <trans-unit id="ed0a3de55f70368b77eebce92c56356838d26f8e" translate="yes" xml:space="preserve">
          <source>Triggers the web action</source>
          <target state="translated">웹 액션을 트리거합니다</target>
        </trans-unit>
        <trans-unit id="1850f31930cadc1c9c1973aa52121dc093fd000e" translate="yes" xml:space="preserve">
          <source>Trims the engine's internal component cache.</source>
          <target state="translated">엔진의 내부 구성 요소 캐시를 잘라냅니다.</target>
        </trans-unit>
        <trans-unit id="285ec850c11d78bac10f6bfa31b69a37f1b257c9" translate="yes" xml:space="preserve">
          <source>Troubleshooting</source>
          <target state="translated">Troubleshooting</target>
        </trans-unit>
        <trans-unit id="064526907221249fbc0b346fcd6af7be89acd45e" translate="yes" xml:space="preserve">
          <source>Troubleshooting Qt Remote Objects</source>
          <target state="translated">Qt 원격 객체 문제 해결</target>
        </trans-unit>
        <trans-unit id="0eb29538cf8a06734337a516dec0903603c81a09" translate="yes" xml:space="preserve">
          <source>Troubleshooting the First Start of a Qt Application</source>
          <target state="translated">Qt 애플리케이션의 첫 시작 문제 해결</target>
        </trans-unit>
        <trans-unit id="ebf3337936bc8b766d67d7f646de8aef9cf21533" translate="yes" xml:space="preserve">
          <source>True (&lt;code&gt;1&lt;/code&gt;) or false (&lt;code&gt;0&lt;/code&gt;).</source>
          <target state="translated">참 ( &lt;code&gt;1&lt;/code&gt; ) 또는 거짓 ( &lt;code&gt;0&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="46eb8ab276f7129ba6bf4d0d232a1f2fb2f859b9" translate="yes" xml:space="preserve">
          <source>True if the widget will be used to hold child widgets; false otherwise.</source>
          <target state="translated">위젯이 하위 위젯을 보유하는 데 사용될 경우 true입니다. 그렇지 않으면 거짓.</target>
        </trans-unit>
        <trans-unit id="795e696cfb7ca26da4585b0ad7c6e370dcb6505c" translate="yes" xml:space="preserve">
          <source>True when the virtual keyboard is being opened or closed.</source>
          <target state="translated">가상 키보드를 열거 나 닫을 때 True입니다.</target>
        </trans-unit>
        <trans-unit id="6285fd6b1c2f13e1efead35666a6add72de79100" translate="yes" xml:space="preserve">
          <source>TrueType (TTF)</source>
          <target state="translated">트루 타입 (TTF)</target>
        </trans-unit>
        <trans-unit id="ce043b1ff5459a355758c4ae649e5d753b3f7c21" translate="yes" xml:space="preserve">
          <source>Truevision Graphics Adapter</source>
          <target state="translated">Truevision 그래픽 어댑터</target>
        </trans-unit>
        <trans-unit id="225b5f5ff1a486fa5596392cc19754abe0a6a4d6" translate="yes" xml:space="preserve">
          <source>Truncates the bit array at index position</source>
          <target state="translated">인덱스 위치에서 비트 배열을 자릅니다</target>
        </trans-unit>
        <trans-unit id="d0fdfab4fcbf9122a85558f95e5e13206608bf7a" translate="yes" xml:space="preserve">
          <source>Truncates the byte array at index position</source>
          <target state="translated">인덱스 위치에서 바이트 배열을 자릅니다</target>
        </trans-unit>
        <trans-unit id="803cb8e04e7b25e0104c81dc55c1e13c8a9bb9e5" translate="yes" xml:space="preserve">
          <source>Truncates the string at the given</source>
          <target state="translated">주어진 문자열을 잘라냅니다</target>
        </trans-unit>
        <trans-unit id="dda77db7ed9227820d653339a8cdf3d75086cdfa" translate="yes" xml:space="preserve">
          <source>Truncates this string by</source>
          <target state="translated">이 문자열을 잘라냅니다</target>
        </trans-unit>
        <trans-unit id="cef7139fa8aa5ceff5ceb5219c7691cfb2895231" translate="yes" xml:space="preserve">
          <source>Truncates this string to length</source>
          <target state="translated">이 문자열을 길이로 자릅니다</target>
        </trans-unit>
        <trans-unit id="6efe784c0c1146a5fb6cb06f4dbd430b2480553f" translate="yes" xml:space="preserve">
          <source>Truncates this string view by</source>
          <target state="translated">이 문자열 뷰를 잘라냅니다.</target>
        </trans-unit>
        <trans-unit id="aa31f7b99408030d28ccc595d662c22b0666ecca" translate="yes" xml:space="preserve">
          <source>Truncates this string view to length</source>
          <target state="translated">이 문자열 뷰를 길이로 자릅니다</target>
        </trans-unit>
        <trans-unit id="b4141aa5b8376b46e31ab254656334cf283774b3" translate="yes" xml:space="preserve">
          <source>Try to connect to a sensor backend.</source>
          <target state="translated">센서 백엔드에 연결하십시오.</target>
        </trans-unit>
        <trans-unit id="755993a90d0e210ada288a655d073e4965b1621e" translate="yes" xml:space="preserve">
          <source>Try to optimize the socket for low latency. For a &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt; this would set the TCP_NODELAY option and disable Nagle's algorithm. Set this to 1 to enable.</source>
          <target state="translated">낮은 대기 시간을 위해 소켓을 최적화하십시오. A의 &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt; 이는 TCP_NODELAY 옵션을 선택하고 사용하는 Nagle의 알고리즘을 설정합니다. 사용하려면 이것을 1로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="d92c6181e6c7d8a79333cb0cb7e78a1d3e8ffe50" translate="yes" xml:space="preserve">
          <source>Trying to set a read only property will be ignored.</source>
          <target state="translated">읽기 전용 속성을 설정하려고하면 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="81dad58ec35e52e8c5bcab89879fdf46229236d8" translate="yes" xml:space="preserve">
          <source>Tue May 21 01</source>
          <target state="translated">화 5 월 21 일 01</target>
        </trans-unit>
        <trans-unit id="a90c3f0f291901cb544ac97a232d4eda40f4e4de" translate="yes" xml:space="preserve">
          <source>Tumbler</source>
          <target state="translated">Tumbler</target>
        </trans-unit>
        <trans-unit id="ac619964445d0c1ebffa6d893d6dac6d573277f4" translate="yes" xml:space="preserve">
          <source>Tumbler (QML type)</source>
          <target state="translated">텀블러 (QML 타입)</target>
        </trans-unit>
        <trans-unit id="802bf5f800053e2634b48d2d16cf312e57778548" translate="yes" xml:space="preserve">
          <source>Tumbler Control</source>
          <target state="translated">텀블러 제어</target>
        </trans-unit>
        <trans-unit id="1cdfe9c13f4c3297bec012026504e18a29b1d836" translate="yes" xml:space="preserve">
          <source>Tumbler QML Type</source>
          <target state="translated">공이 치기 용수철 QML 유형</target>
        </trans-unit>
        <trans-unit id="f306dbaee99806c0705691c0b8623c09a8762741" translate="yes" xml:space="preserve">
          <source>Tumbler allows the user to select an option from a spinnable</source>
          <target state="translated">텀블러를 사용하면 회전 가능한 옵션에서 옵션을 선택할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="4f9af7536f7bdf1203d43568e633824178df980e" translate="yes" xml:space="preserve">
          <source>Tumbler consists of three visual items: &lt;a href=&quot;qml-qtquick-controls2-control#background-prop&quot;&gt;background&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-control#contentItem-prop&quot;&gt;contentItem&lt;/a&gt;, and &lt;a href=&quot;qml-qtquick-controls2-tumbler#delegate-prop&quot;&gt;delegate&lt;/a&gt;.</source>
          <target state="translated">텀블러는 &lt;a href=&quot;qml-qtquick-controls2-control#background-prop&quot;&gt;background&lt;/a&gt; , &lt;a href=&quot;qml-qtquick-controls2-control#contentItem-prop&quot;&gt;contentItem&lt;/a&gt; 및 &lt;a href=&quot;qml-qtquick-controls2-tumbler#delegate-prop&quot;&gt;delegate&lt;/a&gt; 의 세 가지 시각적 항목으로 구성됩니다 .</target>
        </trans-unit>
        <trans-unit id="5545e714cc7a4e64546636d610933199508bfde4" translate="yes" xml:space="preserve">
          <source>Tumbler.Tumbler.displacement</source>
          <target state="translated">Tumbler.Tumbler.displacement</target>
        </trans-unit>
        <trans-unit id="c39e28f28ce9b648cf1632091200230202745f52" translate="yes" xml:space="preserve">
          <source>Tumbler.Tumbler.tumbler</source>
          <target state="translated">Tumbler.Tumbler.tumbler</target>
        </trans-unit>
        <trans-unit id="c4af2f0760b5c4d7e9cb29b979c75a536bb51f89" translate="yes" xml:space="preserve">
          <source>Tumbler.addColumn()</source>
          <target state="translated">Tumbler.addColumn()</target>
        </trans-unit>
        <trans-unit id="25b479d9b3c5999a872224aa6c15e940aaebfea9" translate="yes" xml:space="preserve">
          <source>Tumbler.columnCount</source>
          <target state="translated">Tumbler.columnCount</target>
        </trans-unit>
        <trans-unit id="d81026dae7fc48d16ba809ae6098d88a3f1d30f5" translate="yes" xml:space="preserve">
          <source>Tumbler.count</source>
          <target state="translated">Tumbler.count</target>
        </trans-unit>
        <trans-unit id="36115552578bc51cfc1827693447c2687e97ab8a" translate="yes" xml:space="preserve">
          <source>Tumbler.currentIndex</source>
          <target state="translated">Tumbler.currentIndex</target>
        </trans-unit>
        <trans-unit id="c1e39a3dfe63c3fbf08fe7cb77391295c1ad1c2c" translate="yes" xml:space="preserve">
          <source>Tumbler.currentIndexAt()</source>
          <target state="translated">Tumbler.currentIndexAt()</target>
        </trans-unit>
        <trans-unit id="414e5ff9ee1a37f5f04a0b17c79648d7fe3de113" translate="yes" xml:space="preserve">
          <source>Tumbler.currentItem</source>
          <target state="translated">Tumbler.currentItem</target>
        </trans-unit>
        <trans-unit id="2fcd6da9a1bb00d79d5d218968c56cdd23d5224c" translate="yes" xml:space="preserve">
          <source>Tumbler.delegate</source>
          <target state="translated">Tumbler.delegate</target>
        </trans-unit>
        <trans-unit id="5eb3bb17d38242ea86cd2ce491e1c506409aac44" translate="yes" xml:space="preserve">
          <source>Tumbler.getColumn()</source>
          <target state="translated">Tumbler.getColumn()</target>
        </trans-unit>
        <trans-unit id="ea0f78e7afdfe3dee414bbd35562ddd68a1d07cb" translate="yes" xml:space="preserve">
          <source>Tumbler.insertColumn()</source>
          <target state="translated">Tumbler.insertColumn()</target>
        </trans-unit>
        <trans-unit id="b051532353ee86d83787731615ae300cbc327c72" translate="yes" xml:space="preserve">
          <source>Tumbler.model</source>
          <target state="translated">Tumbler.model</target>
        </trans-unit>
        <trans-unit id="e9ddc687bd851207ef908a36e414af1861371c8e" translate="yes" xml:space="preserve">
          <source>Tumbler.moving</source>
          <target state="translated">Tumbler.moving</target>
        </trans-unit>
        <trans-unit id="831fd0e5a2063d20ba4b149b8d31bf00d3f18628" translate="yes" xml:space="preserve">
          <source>Tumbler.positionViewAtIndex()</source>
          <target state="translated">Tumbler.positionViewAtIndex()</target>
        </trans-unit>
        <trans-unit id="f7a3d7cd99568ceb17cc003a151cf40e8b27fee5" translate="yes" xml:space="preserve">
          <source>Tumbler.setCurrentIndexAt()</source>
          <target state="translated">Tumbler.setCurrentIndexAt()</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
