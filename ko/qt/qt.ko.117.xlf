<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="qt">
    <body>
      <group id="qt">
        <trans-unit id="a728e05c7bb01e2f38109329efc9e41910294e13" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;, rendering is continuous and the value of the &lt;a href=&quot;qabstract3dgraph#currentFps-prop&quot;&gt;currentFps&lt;/a&gt; property is updated. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e27a786e5847b4fde6942228b39a5d07998d54b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;, smooth versions of predefined meshes set via the &lt;a href=&quot;qml-qtdatavisualization-abstract3dseries#mesh-prop&quot;&gt;mesh&lt;/a&gt; property are used. This property does not affect custom meshes used when the mesh is set to &lt;a href=&quot;qabstract3dseries#Mesh-enum&quot;&gt;Abstract3DSeries.MeshUserDefined&lt;/a&gt;. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3067b8f0b2bfcf1bf6060860f6095e570309b4fb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;, smooth versions set via the &lt;a href=&quot;qabstract3dseries#mesh-prop&quot;&gt;mesh&lt;/a&gt; property are used. This property does not affect custom meshes used when the mesh is set to &lt;a href=&quot;qabstract3dseries#Mesh-enum&quot;&gt;MeshUserDefined&lt;/a&gt;. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f8bde4af579c6021f0aa07bd24b5dd12b9f051a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;, the Y-rotation of the camera is wrapped from minimum to maximum and from maximum to minimum. If &lt;code&gt;false&lt;/code&gt;, the Y-rotation of the camera is limited to the sector determined by the minimum and maximum values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22ccf730e7268b7d470874f112d421bcdcd10779" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;, the Y-rotation of the camera is wrapped from minimum to maximum and from maximum to minimum. If &lt;code&gt;false&lt;/code&gt;, the Y-rotation of the camera is limited to the sector determined by the minimum and maximum values. Set to &lt;code&gt;true&lt;/code&gt; by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aab5ec13c808a251ce832f834097167754173208" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;, the animation will be played in reverse.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5713decdf59642b1b8d03d4057bfcb8c7d09e66" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;, the animation will have no duration. Instead, the animation will advance one frame each time a frame is rendered to the screen. This synchronizes it with the painting rate as opposed to elapsed time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baff7a64d06084da53082adbfb6396039e24fb10" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;, the axis will be rendered in reverse, i.e. the positions of minimum and maximum values are swapped when the graph is rendered. This property doesn't affect the actual minimum and maximum values of the axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db79b66112107eca4f1d0f83911af6bc0e5a57d3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;, the axis will be rendered in reverse. That is, the positions of the minimum and maximum values are swapped when the graph is rendered. This property does not affect the actual minimum and maximum values of the axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5a04afb515362749e37b33e6d3f412d17c3fabb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;, the horizontal axes are changed into polar axes. The x-axis becomes the angular axis and the z-axis becomes the radial axis. Polar mode is not available for bar graphs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c988f1a392370005c1d94e44a51f713ffa4302e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;, the rendering is done continuously instead of on demand, and the value of the &lt;a href=&quot;qml-qtdatavisualization-abstractgraph3d#currentFps-prop&quot;&gt;currentFps&lt;/a&gt; property is updated. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96bc61da784c95f837a934a084f60af29a8db1eb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;, the value of &lt;code&gt;0.0&lt;/code&gt; means that the bars are placed side-to-side, &lt;code&gt;1.0&lt;/code&gt; means that a space as wide as the thickness of one bar is left between the bars, and so on. Preset to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81d76750aeff5251d710ad68f5eb547c6e91b254" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;, the x-axis becomes the angular axis and the z-axis becomes the radial axis. Polar mode is not available for bar graphs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="084d9b2cc31fb9e2970defd0d7f2d259f9d5554b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;url.examples&lt;/code&gt; is not defined, QDoc will output a list of example's files and images instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf51059d817654dee381051075e41b0cdd15592f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;viewfinder.minimumFrameRate&lt;/code&gt; is equal to &lt;code&gt;viewfinder.maximumFrameRate&lt;/code&gt;, the frame rate is fixed. If not, the actual frame rate fluctuates between the two values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f756295c6abd32656a0ab183f46f225868d1e6c4" translate="yes" xml:space="preserve">
          <source>If QCamera::FocusPointAuto or QCamera::FocusPointFaceDetection focus mode is selected this method returns the list of zones the camera is actually focused on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24571b07165e8a45c54f546ab986cfc74e1b3e09" translate="yes" xml:space="preserve">
          <source>If QDoc encounters both &lt;code&gt;exampledirs&lt;/code&gt; and &lt;code&gt;examples&lt;/code&gt;, it will look first in the &lt;code&gt;examples&lt;/code&gt; directory. QDoc will accept the first matching file it finds. QDoc will search in the directories specified, not in their subdirectories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc216c894f772a4e2b03cfcfb6ce13c6ea18bb0f" translate="yes" xml:space="preserve">
          <source>If QObjects are created within &lt;a href=&quot;qthread#run&quot;&gt;QThread::run&lt;/a&gt;(), they cannot become children of the &lt;a href=&quot;qthread&quot;&gt;QThread&lt;/a&gt; object because the &lt;a href=&quot;qthread&quot;&gt;QThread&lt;/a&gt; does not live in the thread that calls &lt;a href=&quot;qthread#run&quot;&gt;QThread::run&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aadec6bdc57a740633c545d82e63c5da47f89c8" translate="yes" xml:space="preserve">
          <source>If Qt Core is using the ICU libraries, they will be used to perform the transformation according to the rules of the current locale. Otherwise the conversion may be done in a platform-dependent manner, with &lt;a href=&quot;qstring#toLower&quot;&gt;QString::toLower&lt;/a&gt;() as a generic fallback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc3101ba1214e4442d3416a224071a145b365fc8" translate="yes" xml:space="preserve">
          <source>If Qt Core is using the ICU libraries, they will be used to perform the transformation according to the rules of the current locale. Otherwise the conversion may be done in a platform-dependent manner, with &lt;a href=&quot;qstring#toUpper&quot;&gt;QString::toUpper&lt;/a&gt;() as a generic fallback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e82746304ad395f3faa351a2994f79bfcae7f77" translate="yes" xml:space="preserve">
          <source>If Qt Location has been built before Qt WebEngine then this feature can be tested by using &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwebengine-webenginewidgets-maps-example.html#&quot;&gt;Maps&lt;/a&gt; and allowing it to find the current position of the user. Note that on Windows an external GPS receiver must be connected to the application. For more information, see &lt;a href=&quot;qtpositioning-index&quot;&gt;Qt Positioning&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b291588f279617bfb08859dbb780cdec4428000e" translate="yes" xml:space="preserve">
          <source>If Qt does not support the given text encoding the driver will issue a warning message and connect to the database using UNICODE_FSS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e2ac015e055f14f3ef56305d18c4c9f4c309e4a" translate="yes" xml:space="preserve">
          <source>If Qt does not use fontconfig, you must either provide the path to the fonts with &lt;code&gt;QT_QPA_FONTDIR&lt;/code&gt;, or place the fonts under &lt;code&gt;&amp;lt;Qt-install-path&amp;gt;/lib/fonts&lt;/code&gt; which is the default font location.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2abdb487396ec887802d7b4650726670a8061525" translate="yes" xml:space="preserve">
          <source>If Qt is compiled with ICU support enabled, most codecs supported by ICU will also be available to the application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2bb5da69476e15da6c17b9186b0cd35a2ef37c9" translate="yes" xml:space="preserve">
          <source>If Qt was configured for &lt;code&gt;xcb&lt;/code&gt;, the following &lt;code&gt;pkg-config&lt;/code&gt; files are also required:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c8f33060420bcfa05b9683191ca7fdba87ce30e" translate="yes" xml:space="preserve">
          <source>If Return or Enter is pressed and the current text is valid (or can be &lt;a href=&quot;qvalidator#fixup&quot;&gt;made valid&lt;/a&gt; by the validator), the signal &lt;a href=&quot;qlineedit#returnPressed&quot;&gt;returnPressed&lt;/a&gt;() is emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0241fa8fb8c12ad38f6c7d642b124c4220cd99f" translate="yes" xml:space="preserve">
          <source>If Sensors.conf specifies an identifier that is not registered, the system will fall back to the first registered identifier as the default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12baaa13797f4ebef13275de65895ae9742935eb" translate="yes" xml:space="preserve">
          <source>If T is &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;, this class has the following additional members: &lt;a href=&quot;qstringlist#filter&quot;&gt;filter&lt;/a&gt;, &lt;a href=&quot;qstringlist#join&quot;&gt;join&lt;/a&gt;, &lt;a href=&quot;qstringlist#removeDuplicates&quot;&gt;removeDuplicates&lt;/a&gt;, &lt;a href=&quot;qstringlist#sort&quot;&gt;sort&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0c0db02ecc43c9e422114fcc4adcf9bccd7a727" translate="yes" xml:space="preserve">
          <source>If T is a &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;, this class has a couple more members that can be used. See the documentation for &lt;a href=&quot;qbytearraylist&quot;&gt;QByteArrayList&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0075ae9ec1676166fdbc7021633864722e9ce0b" translate="yes" xml:space="preserve">
          <source>If T is a pointer type, &lt;a href=&quot;qthreadstorage&quot;&gt;QThreadStorage&lt;/a&gt; takes ownership of the data (which must be created on the heap with &lt;code&gt;new&lt;/code&gt;) and deletes it when the thread exits, either normally or via termination.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7e7126fd5bf7f11d5700a79c0222a8da5cbdb20" translate="yes" xml:space="preserve">
          <source>If T is a pointer type, &lt;a href=&quot;qthreadstorage&quot;&gt;QThreadStorage&lt;/a&gt; takes ownership of the data and deletes it automatically either when the thread exits (either normally or via termination) or when setLocalData() is called again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8149979cdec3d1d18d4402528def80cfc20edc55" translate="yes" xml:space="preserve">
          <source>If T is a pointer type, returns &lt;code&gt;true&lt;/code&gt; if the calling thread has non-zero data available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58af0ac303cf5e6a76b291a33c239dfb54a9b20e" translate="yes" xml:space="preserve">
          <source>If T is a value type, returns whether the data has already been constructed by calling &lt;a href=&quot;qthreadstorage#setLocalData&quot;&gt;setLocalData&lt;/a&gt; or &lt;a href=&quot;qthreadstorage#localData&quot;&gt;localData&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="852f95d50b54957d31ad0f96baf021c9aea6474b" translate="yes" xml:space="preserve">
          <source>If \printuntil is used without an argument, it expands to all the lines from the current position to the end of the quoted file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="562d6a085d036935dc458e97eb2b83b32b781d44" translate="yes" xml:space="preserve">
          <source>If a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c6ac5b8019a29ae96bc86befbf8c32e00c00c70" translate="yes" xml:space="preserve">
          <source>If a &quot;What's This?&quot; window is showing, this destroys it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd075131f6a1991469c3fc95bc52bb907172a9dc" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; or &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt; has the &lt;a href=&quot;qnetworkproxy#ProxyType-enum&quot;&gt;QNetworkProxy::DefaultProxy&lt;/a&gt; type, then the &lt;a href=&quot;qnetworkproxy&quot;&gt;QNetworkProxy&lt;/a&gt; returned by this function is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a35e102d13e09fbff85756a17a356c6f4067ad2b" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; or &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt; has the &lt;a href=&quot;qnetworkproxy#ProxyType-enum&quot;&gt;QNetworkProxy::DefaultProxy&lt;/a&gt; type, then the &lt;a href=&quot;qnetworkproxy&quot;&gt;QNetworkProxy&lt;/a&gt; set with this function is used. If you want more flexibility in determining which proxy is used, use the &lt;a href=&quot;qnetworkproxyfactory&quot;&gt;QNetworkProxyFactory&lt;/a&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1452b1503b2363c2e94e4898175d29f11274064" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterface&lt;/a&gt; implementation exists for the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a65e9fe9030eff7f2992c7e029ebf7bf762034a3" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;qlocale&quot;&gt;QLocale&lt;/a&gt; object is constructed with the default constructor, it will use the default locale's settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc06112a7df859e32bd6a96127f0973d55c31a85" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;qmediaservice&quot;&gt;QMediaService&lt;/a&gt; can play media is will implement &lt;a href=&quot;qmediaplayercontrol&quot;&gt;QMediaPlayerControl&lt;/a&gt;. This control provides a means to set the &lt;a href=&quot;qmediaplayercontrol#setMedia&quot;&gt;media&lt;/a&gt; to play, &lt;a href=&quot;qmediaplayercontrol#play&quot;&gt;start&lt;/a&gt;, &lt;a href=&quot;qmediaplayercontrol#pause&quot;&gt;pause&lt;/a&gt; and &lt;a href=&quot;qmediaplayercontrol#stop&quot;&gt;stop&lt;/a&gt; playback, &lt;a href=&quot;qmediaplayercontrol#setPosition&quot;&gt;seek&lt;/a&gt;, and control the &lt;a href=&quot;qmediaplayercontrol#setVolume&quot;&gt;volume&lt;/a&gt;. It also provides feedback on the &lt;a href=&quot;qmediaplayercontrol#duration&quot;&gt;duration&lt;/a&gt; of the media, the current &lt;a href=&quot;qmediaplayercontrol#position&quot;&gt;position&lt;/a&gt;, and &lt;a href=&quot;qmediaplayercontrol#bufferStatus&quot;&gt;buffering&lt;/a&gt; progress.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="061ae3c44892697a396132483880bd4c3f20f012" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;qmediaservice&quot;&gt;QMediaService&lt;/a&gt; can provide read or write access to the meta-data of its current media it will implement &lt;a href=&quot;qmetadatareadercontrol&quot;&gt;QMetaDataReaderControl&lt;/a&gt;. This control provides functions for both retrieving and setting meta-data values. Meta-data may be addressed by the keys defined in the &lt;a href=&quot;qmediametadata&quot;&gt;QMediaMetaData&lt;/a&gt; namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b520334097d92783d613ffca5ac7983b7488e5c" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;qmediaservice&quot;&gt;QMediaService&lt;/a&gt; can provide write access to the meta-data of its current media it will implement &lt;a href=&quot;qmetadatawritercontrol&quot;&gt;QMetaDataWriterControl&lt;/a&gt;. This control provides functions for both retrieving and setting meta-data values. Meta-data may be addressed by the keys defined in the &lt;a href=&quot;qmediametadata&quot;&gt;QMediaMetaData&lt;/a&gt; namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90617722bd74ba2b32975ffaf9d4ea429f9afeec" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;qmediaservice&quot;&gt;QMediaService&lt;/a&gt; can record media it will implement &lt;a href=&quot;qmediarecordercontrol&quot;&gt;QMediaRecorderControl&lt;/a&gt;. This control provides a means to set the &lt;a href=&quot;qmediarecordercontrol#outputLocation&quot;&gt;output location&lt;/a&gt;, and record, pause and stop recording via the &lt;a href=&quot;qmediarecordercontrol#setState&quot;&gt;setState&lt;/a&gt;() method. It also provides feedback on the &lt;a href=&quot;qmediarecordercontrol#duration&quot;&gt;duration&lt;/a&gt; of the recording.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be91987d3fe4fff10a495d63ab7b42bd651cc423" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;qmediaservice&quot;&gt;QMediaService&lt;/a&gt; can tune an analog radio device it will implement &lt;a href=&quot;qradiotunercontrol&quot;&gt;QRadioTunerControl&lt;/a&gt;. This control provides a means to tune a radio device to a specific &lt;a href=&quot;qradiotunercontrol#setFrequency&quot;&gt;frequency&lt;/a&gt; as well as search &lt;a href=&quot;qradiotunercontrol#searchForward&quot;&gt;forwards&lt;/a&gt; and &lt;a href=&quot;qradiotunercontrol#searchBackward&quot;&gt;backwards&lt;/a&gt; for a signal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73a24b2866e15a7893b98544523173df8b523c5c" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;qmediaservice&quot;&gt;QMediaService&lt;/a&gt; supports audio roles it may implement &lt;a href=&quot;qcustomaudiorolecontrol&quot;&gt;QCustomAudioRoleControl&lt;/a&gt; in order to provide access to roles unknown to Qt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e1f653380fbc3554065fa93e0cef2bd1a4f85aa" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;qmediaservice&quot;&gt;QMediaService&lt;/a&gt; supports audio roles it will implement &lt;a href=&quot;qaudiorolecontrol&quot;&gt;QAudioRoleControl&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="399026aa84d89b6e3c668682085d0960865da8e4" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;qmediaservice&quot;&gt;QMediaService&lt;/a&gt; supports encoding audio data it will implement &lt;a href=&quot;qaudioencodersettingscontrol&quot;&gt;QAudioEncoderSettingsControl&lt;/a&gt;. This control provides information about the limits of restricted audio encoder options and allows the selection of a set of audio encoder settings as specified in a &lt;a href=&quot;qaudioencodersettings&quot;&gt;QAudioEncoderSettings&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e78da17c2033087b13541d14d58c986b66c3790" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;qmediaservice&quot;&gt;QMediaService&lt;/a&gt; supports encoding image data it will implement &lt;a href=&quot;qimageencodercontrol&quot;&gt;QImageEncoderControl&lt;/a&gt;. This control allows to &lt;a href=&quot;qimageencodercontrol#setImageSettings&quot;&gt;set image encoding settings&lt;/a&gt; and provides functions for quering supported image &lt;a href=&quot;qimageencodercontrol#supportedImageCodecs&quot;&gt;codecs&lt;/a&gt; and &lt;a href=&quot;qimageencodercontrol#supportedResolutions&quot;&gt;resolutions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19886180a4c26758822fe2e22a2780e69f0b94cb" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;qmediaservice&quot;&gt;QMediaService&lt;/a&gt; supports encoding video data it will implement &lt;a href=&quot;qvideoencodersettingscontrol&quot;&gt;QVideoEncoderSettingsControl&lt;/a&gt;. This control provides information about the limits of restricted video encoder options and allows the selection of a set of video encoder settings as specified in a &lt;a href=&quot;qvideoencodersettings&quot;&gt;QVideoEncoderSettings&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7435851444f76fce5f2b114d946199150133324e" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;qmediaservice&quot;&gt;QMediaService&lt;/a&gt; supports gapless playback it will implement &lt;a href=&quot;qmediagaplessplaybackcontrol&quot;&gt;QMediaGaplessPlaybackControl&lt;/a&gt;. This control provides a means to set the &lt;a href=&quot;qmediagaplessplaybackcontrol#setNextMedia&quot;&gt;next media&lt;/a&gt; or &lt;a href=&quot;qmediagaplessplaybackcontrol#setCrossfadeTime&quot;&gt;crossfade time&lt;/a&gt; for smooth transitions between tracks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d44c21e007a0032e61104928da4bcf5a6d23582" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;qmediaservice&quot;&gt;QMediaService&lt;/a&gt; supports writing encoded data it will implement &lt;a href=&quot;qmediacontainercontrol&quot;&gt;QMediaContainerControl&lt;/a&gt;. This control provides information about the output containers supported by a media service and allows one to be selected as the current output containers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ee1c996a3a96d29da4c8d5def5932129eb9894b" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;qml-qtcharts-valueaxis&quot;&gt;ValueAxis&lt;/a&gt; type is used instead of a &lt;a href=&quot;qml-qtcharts-barcategoryaxis&quot;&gt;BarCategoryAxis&lt;/a&gt; type for the main bar axis, the bars are grouped around the index value of the category.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d385bb963de38987e79bc3e32c427d6a2056c6c" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;qml-qtquick-gridview#remove-signal&quot;&gt;remove&lt;/a&gt; transition has been specified, it will not be applied until delayRemove is returned to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42410e547ea3a59c2401001ce2f701a4d97cbbc8" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;qml-qtquick-listview#remove-signal&quot;&gt;remove&lt;/a&gt; transition has been specified, it will not be applied until delayRemove is returned to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77e964f50343556bdf23754fbb1e1335a04e8695" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; is placed within an item that filters child mouse events, such as Flickable, the mouse events may be stolen from the &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; if a gesture is recognized by the parent item, e.g. a flick gesture. If preventStealing is set to true, no item will steal the mouse events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a21634cfb9fb1470827601c73f3cdb526bbd7ce" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; overlaps with the area of other &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; items, you can choose to propagate &lt;code&gt;clicked&lt;/code&gt;, &lt;code&gt;doubleClicked&lt;/code&gt; and &lt;code&gt;pressAndHold&lt;/code&gt; events to these other items by setting &lt;a href=&quot;qml-qtquick-mousearea#propagateComposedEvents-prop&quot;&gt;propagateComposedEvents&lt;/a&gt; to true and rejecting events that should be propagated. See the &lt;a href=&quot;qml-qtquick-mousearea#propagateComposedEvents-prop&quot;&gt;propagateComposedEvents&lt;/a&gt; documentation for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6215d82ebb69c6d9440a16146ca3b5c52e1f0bc2" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;qml-qtquick-particles-particlegroup&quot;&gt;ParticleGroup&lt;/a&gt; element is not defined for a group, the group will function normally as if none of the transition properties were set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c87ae837c887d9bbe760a61c8da17357a02974cf" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;qml-qtquick-pathview#pathItemCount-prop&quot;&gt;pathItemCount&lt;/a&gt; has been set, it is possible that some items may be instantiated, but not considered to be currently on the path. Usually, these items would be set invisible, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16adb7770e2e57738ee531704424a03325211863" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;qml-qtquick-pointerhandler&quot;&gt;PointerHandler&lt;/a&gt; is disabled, it will reject all events and no signals will be emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74f82f1179aa599b0be710716e29d9a5a92c80f9" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;qqmlnetworkaccessmanagerfactory&quot;&gt;QQmlNetworkAccessManagerFactory&lt;/a&gt; has been set and a QNetworkAccessManager has not yet been created, the &lt;a href=&quot;qqmlnetworkaccessmanagerfactory&quot;&gt;QQmlNetworkAccessManagerFactory&lt;/a&gt; will be used to create the QNetworkAccessManager; otherwise the returned QNetworkAccessManager will have no proxy or cache set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f19dca9b61cf098e69026f6c121f4d190c44d745" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; is the active window, the key event is delivered to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38891016d54aedaece2a1ac7385ad0d44ee94320" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;qssldiffiehellmanparameters&quot;&gt;QSslDiffieHellmanParameters&lt;/a&gt; object is not valid, you can use the &lt;a href=&quot;qssldiffiehellmanparameters#error&quot;&gt;error&lt;/a&gt;() method to determine what error prevented the object from being constructed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="549567bdbfb0246f130a90365ef50535a695cd7b" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;qt3drender-qobjectpicker&quot;&gt;QObjectPicker&lt;/a&gt; is assigned to an entity with multiple children, an event will be triggered for each child entity that intersects the ray.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="880d3d645240c092281c6896bcd6eaf0efef0910" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;qtest#QVERIFY&quot;&gt;QVERIFY&lt;/a&gt;() or &lt;a href=&quot;qtest#QCOMPARE&quot;&gt;QCOMPARE&lt;/a&gt;() is marked as an expected failure, but passes instead, an unexpected pass (XPASS) is written to the test log.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a61352ccb25e25a0e7c278e6c81c738e00cfaf0" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;qtquick-statesanimations-states#&quot;&gt;state change&lt;/a&gt; has a &lt;a href=&quot;https://doc.qt.io/qt-5.13/qmlexampletoggleswitch.html#transition&quot;&gt;Transition&lt;/a&gt; that matches the same property as a Behavior, the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qmlexampletoggleswitch.html#transition&quot;&gt;Transition&lt;/a&gt; animation overrides the Behavior for that state change. For general advice on using Behaviors to animate state changes, see &lt;a href=&quot;qtquick-statesanimations-behaviors#&quot;&gt;Using Qt Quick Behaviors with States&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9752d0e7440c9b8d0708467bc1d52d0a3d4ef230" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;qvalueaxis&quot;&gt;QValueAxis&lt;/a&gt; is used instead of &lt;a href=&quot;qbarcategoryaxis&quot;&gt;QBarCategoryAxis&lt;/a&gt; for the main bar axis, the bars are grouped around the index value of the category.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="932356b0c144fbc73097063e80e5c7a7ecd1eaba" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;qwidgetaction&quot;&gt;QWidgetAction&lt;/a&gt; is added for example to a &lt;a href=&quot;qtoolbar&quot;&gt;QToolBar&lt;/a&gt; then &lt;a href=&quot;qwidgetaction#createWidget&quot;&gt;QWidgetAction::createWidget&lt;/a&gt;() is called. Reimplementations of that function should create a new custom widget with the specified parent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9c8d42199cdd29937be7168188b35d7590fe4a2" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;Component{}&lt;/code&gt; object is defined and &lt;a href=&quot;qml-qtqml-component#createObject-method&quot;&gt;createObject()&lt;/a&gt; or &lt;a href=&quot;qml-qtqml-component#incubateObject-method&quot;&gt;incubateObject()&lt;/a&gt; is called on that object, the creation context is the context in which the &lt;code&gt;Component&lt;/code&gt; is defined</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af82ee86f1e453105a7f26dfa928f14d24a5df7c" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;mailto&lt;/code&gt; URL is specified, the user's e-mail client will be used to open a composer window containing the options specified in the URL, similar to the way &lt;code&gt;mailto&lt;/code&gt; links are handled by a Web browser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0f40a1e93a91154a4104bc2513f69e0482db6d4" translate="yes" xml:space="preserve">
          <source>If a C++ method has a parameter with a &lt;code&gt;QObject*&lt;/code&gt; type, the parameter value can be passed from QML using an object &lt;code&gt;id&lt;/code&gt; or a JavaScript &lt;a href=&quot;qml-var&quot;&gt;var&lt;/a&gt; value that references the object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="847f98caf4b0f624d9e6b7dab988db884eb3dca6" translate="yes" xml:space="preserve">
          <source>If a Map is placed within an item that filters child mouse and touch events, such as Flickable, the mouse and touch events may be stolen from the &lt;a href=&quot;qml-qtlocation-mapgesturearea&quot;&gt;MapGestureArea&lt;/a&gt; if a gesture is recognized by the parent item, e.g. a flick gesture. If preventStealing is set to &lt;code&gt;true&lt;/code&gt;, no item will steal the mouse and touch events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2483d60a0944d3a7de7856dc9f7e0acf98f42da" translate="yes" xml:space="preserve">
          <source>If a QML element has a custom property defined in QML, it becomes its own implicit type. This is explained in greater detail in an upcoming section. If multiple identical implicit types are defined inline in a component, some memory will be wasted. In that situation it is usually better to explicitly define a new component which can then be reused.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="556a645651685834426bf1eb219ed55a7cc69ffb" translate="yes" xml:space="preserve">
          <source>If a base URL has not been explicitly set, this method returns the application's current working directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5810c4baff349c86a7fb6168e8b5c65fb820f9bb" translate="yes" xml:space="preserve">
          <source>If a bounding rectangle is not required, create a &lt;a href=&quot;qstatictext&quot;&gt;QStaticText&lt;/a&gt; object without setting a preferred text width. The text will then occupy a single line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="227529f5f9f6cf9b67e9977da026881456ce6778" translate="yes" xml:space="preserve">
          <source>If a buddy has been set, the buddy mnemonic key is updated from the new text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a0ae9514a63dba2410466bb7a22cf4e5d40aef2" translate="yes" xml:space="preserve">
          <source>If a certificate error is raised while loading a web page, the &lt;a href=&quot;qml-qtwebengine-webengineview#certificateError-signal&quot;&gt;certificateError()&lt;/a&gt; signal is emitted. Certificate errors are handled by using the methods of the &lt;a href=&quot;qml-qtwebengine-webenginecertificateerror&quot;&gt;WebEngineCertificateError&lt;/a&gt; type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30b633239c5fe0c6351ad8adce1e9e4efc8fe5f8" translate="yes" xml:space="preserve">
          <source>If a characteristic is written using this mode, the peripheral shall send a write confirmation. If the operation is successful, the confirmation is emitted via the &lt;a href=&quot;qlowenergyservice#characteristicWritten&quot;&gt;characteristicWritten&lt;/a&gt;() signal. Otherwise the &lt;a href=&quot;qlowenergyservice#ServiceError-enum&quot;&gt;CharacteristicWriteError&lt;/a&gt; is emitted. A characteristic must have set the &lt;a href=&quot;qlowenergycharacteristic#PropertyType-enum&quot;&gt;QLowEnergyCharacteristic::Write&lt;/a&gt; property to support this write mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45c952c5c8d5025de227f6402e33a55b32f9ffb4" translate="yes" xml:space="preserve">
          <source>If a characteristic is written using this mode, the remote peripheral shall not send a write confirmation. The operation's success cannot be determined and the payload must not be longer than 20 bytes. A characteristic must have set the &lt;a href=&quot;qlowenergycharacteristic#PropertyType-enum&quot;&gt;QLowEnergyCharacteristic::WriteNoResponse&lt;/a&gt; property to support this write mode. Its adavantage is a quicker write operation as it may happen in between other device interactions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e331faeac7152c3fcdf0fa5543b3b72ccf29961" translate="yes" xml:space="preserve">
          <source>If a characteristic is written using this mode, the remote peripheral shall not send a write confirmation. The operation's success cannot be determined and the payload must not be longer than 8 bytes. A bond must exist between the two devices and the link must not be encrypted. A characteristic must have set the &lt;a href=&quot;qlowenergycharacteristic#PropertyType-enum&quot;&gt;QLowEnergyCharacteristic::WriteSigned&lt;/a&gt; property to support this write mode. This value was introduced in Qt 5.7 and is currently only supported on Android and on Linux with &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtbluetooth-attribution-bluez.html#&quot;&gt;BlueZ&lt;/a&gt; 5 and a kernel version 3.7 or newer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd5be07a2d70dcff0ae5d03710a3e41e582301c7" translate="yes" xml:space="preserve">
          <source>If a chosen font does not include all the characters that need to be displayed, &lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; will try to find the characters in the nearest equivalent fonts. When a &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; draws a character from a font the &lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; will report whether or not it has the character; if it does not, &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; will draw an unfilled square.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b32b42dac4a5df175709c3d6499113f958301018" translate="yes" xml:space="preserve">
          <source>If a client is currently connected and it has enabled notifications or indications for the characteristic, the respective information will be sent. If a device has enabled notifications or indications for the characteristic and that device is currently not connected, but a bond exists between it and the local device, then the notification or indication will be sent on the next reconnection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7970922cae74c01fae7ad1f3ad029b5d6fdf1ded" translate="yes" xml:space="preserve">
          <source>If a color is specified, the provided image will be colorized with it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34e82170c73c433f9afff848d75498019ec46832" translate="yes" xml:space="preserve">
          <source>If a command is set obsolete and the clean index is greater than or equal to the current command index, then the clean index will be reset when the command is deleted from the stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="632568c94fcfdd6969f5057de49174ffa015cfe1" translate="yes" xml:space="preserve">
          <source>If a configuration state changes as a result of this update all existing &lt;a href=&quot;qnetworkconfiguration&quot;&gt;QNetworkConfiguration&lt;/a&gt; instances are updated automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00977ba4c14a146dd39b46a997ec377dc60960a2" translate="yes" xml:space="preserve">
          <source>If a cookie already exists in the cookie jar, it will be overridden by those in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e9941b553378981a798179ceab66ee3a4b43d53" translate="yes" xml:space="preserve">
          <source>If a cookie with the same identifier already exists in the cookie jar, it will be overridden.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84e18d07e8061f9a5b6cb2f60de1881e51d8ead5" translate="yes" xml:space="preserve">
          <source>If a cookie with the same identifier as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="584f18a696b7dfa7aa94ae05461801d2019fb078" translate="yes" xml:space="preserve">
          <source>If a cursor is used to insert text without specifying a character format, the text will be given the character format used at that position in the document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5c2c927b7328d890b48d70550ec9f63fd5c4fd4" translate="yes" xml:space="preserve">
          <source>If a dedicated render thread is used, the GUI thread should be blocked for the duration of this call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cd9fe08f39a62808db2fd6ccbcab76961ee977c" translate="yes" xml:space="preserve">
          <source>If a default prototype has been registered for the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd0939f084c811030400247e036fe01ace361b25" translate="yes" xml:space="preserve">
          <source>If a different widget is currently grabbing keyboard input, that widget's grab is released first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b8ae1edceefdac372d6ef4691570042b60d9c79" translate="yes" xml:space="preserve">
          <source>If a document name ends with an anchor (for example, &quot;&lt;code&gt;#anchor&quot;&lt;/code&gt;), the text browser automatically scrolls to that position (using &lt;a href=&quot;qtextedit#scrollToAnchor&quot;&gt;scrollToAnchor&lt;/a&gt;()). When the user clicks on a hyperlink, the browser will call &lt;a href=&quot;qtextbrowser#source-prop&quot;&gt;setSource&lt;/a&gt;() itself with the link's &lt;code&gt;href&lt;/code&gt; value as argument. You can track the current source by connecting to the &lt;a href=&quot;qtextbrowser#sourceChanged&quot;&gt;sourceChanged&lt;/a&gt;() signal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f55bf52e6f51a2641b4bb92bed5927de97d34108" translate="yes" xml:space="preserve">
          <source>If a family exists in several foundries, the returned name for that font is in the form &quot;family [foundry]&quot;. Examples: &quot;Times [Adobe]&quot;, &quot;Times [Cronyx]&quot;, &quot;Palatino&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ffb089b7ed2bacaadd840016ea77c686b888a71" translate="yes" xml:space="preserve">
          <source>If a field is empty, don't include it in the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="420ca8d5e64c7a1eea7b75befe4fc6af8a304475" translate="yes" xml:space="preserve">
          <source>If a field is empty, keep it in the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72bc86cf06cfe5b885cc19500a8bcc6ff270bf7b" translate="yes" xml:space="preserve">
          <source>If a file already exists at the provided file path, it will be overwritten.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42162e59b297b81b5c9b9226cf645e8d5b558b5f" translate="yes" xml:space="preserve">
          <source>If a file contains only a single animation, there is no need to specify the animationIndex or animationName. We simply use the one available animation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fef1db71c18145f4af4b50d6d3e5070db3d4be7d" translate="yes" xml:space="preserve">
          <source>If a file or directory cannot be removed, removeRecursively() keeps going and attempts to delete as many files and sub-directories as possible, then returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d756525b307805f60676aa277d0da87d37e549e" translate="yes" xml:space="preserve">
          <source>If a file with the name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="327fef7dfb03d8451fe7bd7489aa55fd78cfeacc" translate="yes" xml:space="preserve">
          <source>If a filter has not been set, the default filter is &lt;a href=&quot;qdir#Filter-enum&quot;&gt;QDir::AllEntries&lt;/a&gt; | &lt;a href=&quot;qdir#Filter-enum&quot;&gt;QDir::NoDotAndDotDot&lt;/a&gt; | &lt;a href=&quot;qdir#Filter-enum&quot;&gt;QDir::AllDirs&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="298fd082c87fa0a2176eba011cae6c727bbc09a0" translate="yes" xml:space="preserve">
          <source>If a given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cf3a1dbf4e8a17114f4f7a59e7dec996082c97f" translate="yes" xml:space="preserve">
          <source>If a group is set using &lt;a href=&quot;qsettings#beginGroup&quot;&gt;beginGroup&lt;/a&gt;(),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e35f03c7e2e266ff29e2927aae8c518fadf9dc8e" translate="yes" xml:space="preserve">
          <source>If a group is set using &lt;a href=&quot;qsettings#beginGroup&quot;&gt;beginGroup&lt;/a&gt;(), only the keys in the group are returned, without the group prefix:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb59e76e793eab04c7d590e093dc65e5124c05b4" translate="yes" xml:space="preserve">
          <source>If a group is set using &lt;a href=&quot;qsettings#beginGroup&quot;&gt;beginGroup&lt;/a&gt;(), the behavior of most functions changes consequently. Groups can be set recursively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fbe5adbee0e4639871d41b3bfac62e6990531d1" translate="yes" xml:space="preserve">
          <source>If a group is set using &lt;a href=&quot;qsettings#beginGroup&quot;&gt;beginGroup&lt;/a&gt;(), the first-level keys in that group are returned, without the group prefix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9670e1103a24fe6713fa045ff0cd378ded52d58f" translate="yes" xml:space="preserve">
          <source>If a group is set using &lt;a href=&quot;qsettings#beginGroup&quot;&gt;beginGroup&lt;/a&gt;(), the top-level keys in that group are returned, without the group prefix:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b8da60d564b3ad513cd9904b56ae9af8d5ebb19" translate="yes" xml:space="preserve">
          <source>If a high resolution version of the image exists (identified by the suffix &lt;code&gt;@2x&lt;/code&gt; on the base name), it is automatically loaded and added with the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f400be43e441fb2a63b34664b3fd63251d14db9" translate="yes" xml:space="preserve">
          <source>If a key cannot be found in the first location, the search goes on in the second location, and so on. This enables you to store system-wide or organization-wide settings and to override them on a per-user or per-application basis. To turn off this mechanism, call &lt;a href=&quot;qsettings#setFallbacksEnabled&quot;&gt;setFallbacksEnabled&lt;/a&gt;(false).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bab32162fe4d4f26c362cc67dc894cae9494d192" translate="yes" xml:space="preserve">
          <source>If a label displays text, the indent applies to the left edge if &lt;a href=&quot;qlabel#alignment-prop&quot;&gt;alignment&lt;/a&gt;() is &lt;a href=&quot;qt#AlignmentFlag-enum&quot;&gt;Qt::AlignLeft&lt;/a&gt;, to the right edge if &lt;a href=&quot;qlabel#alignment-prop&quot;&gt;alignment&lt;/a&gt;() is &lt;a href=&quot;qt#AlignmentFlag-enum&quot;&gt;Qt::AlignRight&lt;/a&gt;, to the top edge if &lt;a href=&quot;qlabel#alignment-prop&quot;&gt;alignment&lt;/a&gt;() is &lt;a href=&quot;qt#AlignmentFlag-enum&quot;&gt;Qt::AlignTop&lt;/a&gt;, and to the bottom edge if &lt;a href=&quot;qlabel#alignment-prop&quot;&gt;alignment&lt;/a&gt;() is &lt;a href=&quot;qt#AlignmentFlag-enum&quot;&gt;Qt::AlignBottom&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b4bc4bb2d3a5292b76135912322d7ae35582e97" translate="yes" xml:space="preserve">
          <source>If a larger number of touchpoints are in contact with the &lt;a href=&quot;qml-qtquick-multipointhandler#parent-prop&quot;&gt;parent&lt;/a&gt;, the required number of points will be chosen in the order that they are pressed, and the remaining points will be ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3036e33337d775e1d3a08fda40693447c8d87e1f" translate="yes" xml:space="preserve">
          <source>If a list contains only one element, we generally omit the square brackets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f76437a41a2b960e8683d59fa98661ca864cd446" translate="yes" xml:space="preserve">
          <source>If a match is attempted with an invalid &lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt;, then the returned &lt;a href=&quot;qregularexpressionmatch&quot;&gt;QRegularExpressionMatch&lt;/a&gt; object will be invalid as well (that is, its &lt;a href=&quot;qregularexpressionmatch#isValid&quot;&gt;isValid()&lt;/a&gt; function will return false). The same applies for attempting a global match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46138ece73285f410a8ab239936c0a3ee0dc3438" translate="yes" xml:space="preserve">
          <source>If a match is successful, the (implicit) capturing group number 0 can be used to retrieve the substring matched by the entire pattern (see also the section about &lt;a href=&quot;qregularexpression#extracting-captured-substrings&quot;&gt;extracting captured substrings&lt;/a&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5f4ea3ee07aae7ee1d879c61c579319eee7563d" translate="yes" xml:space="preserve">
          <source>If a member function is also const-overloaded &lt;a href=&quot;qtglobal#qConstOverload&quot;&gt;qConstOverload&lt;/a&gt; and &lt;a href=&quot;qtglobal#qNonConstOverload&quot;&gt;qNonConstOverload&lt;/a&gt; need to be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9834eecc16dabf8bfc44182c2f5939bdf318fdcc" translate="yes" xml:space="preserve">
          <source>If a menu does not fit on the screen it lays itself out so that it does fit. It is style dependent what layout means (for example, on Windows it will use multiple columns).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0237086ee86031f65983b84fe2b1c555b1528b1" translate="yes" xml:space="preserve">
          <source>If a menu item is checkable, an &lt;a href=&quot;qml-qtquick-controls-exclusivegroup&quot;&gt;ExclusiveGroup&lt;/a&gt; can be attached to it. All the menu items sharing the same exclusive group, and by extension, any &lt;a href=&quot;qml-qtquick-controls-action&quot;&gt;Action&lt;/a&gt; sharing it, become mutually exclusive selectable, meaning that only the last checked menu item will actually be checked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdf5b4ecd42a547685dc141e19733b012c2004b2" translate="yes" xml:space="preserve">
          <source>If a message text is too long, it will be automatically truncated by &lt;a href=&quot;qopengldebuglogger&quot;&gt;QOpenGLDebugLogger&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6fbf644dff9583f1f414c0991e691c2e8b04f4d" translate="yes" xml:space="preserve">
          <source>If a mid-line width greater than 0 is specified, an additional line is drawn for &lt;a href=&quot;qframe#Shadow-enum&quot;&gt;Raised&lt;/a&gt; or &lt;a href=&quot;qframe#Shadow-enum&quot;&gt;Sunken&lt;/a&gt;&lt;a href=&quot;qframe#Shape-enum&quot;&gt;Box&lt;/a&gt;, &lt;a href=&quot;qframe#Shape-enum&quot;&gt;HLine&lt;/a&gt;, and &lt;a href=&quot;qframe#Shape-enum&quot;&gt;VLine&lt;/a&gt; frames. The mid-color of the current color group is used for drawing middle lines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c9b54a15e009f0374b271f901d9b82b6e831f9b" translate="yes" xml:space="preserve">
          <source>If a multisample framebuffer object is used then the value returned from this function will be invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a8fbea91b869a1d81b290927bbc5cf19a82e9f7" translate="yes" xml:space="preserve">
          <source>If a multisample framebuffer object is used, then an empty vector is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0859851e9a0e3a5d7ac48f4760c17fc01cfd1e0d" translate="yes" xml:space="preserve">
          <source>If a multisample framebuffer object is used, then there is no texture and the return value from this function will be invalid. Similarly, incomplete framebuffer objects will also return 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d34a9f091c878bcc2ffb1fc657297f642aeecb86" translate="yes" xml:space="preserve">
          <source>If a negative value is specified, the camera will automatically determine an appropriate value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eddb7a57d953884ad3f72dc93561e6653bbc7e9d" translate="yes" xml:space="preserve">
          <source>If a new &lt;a href=&quot;qqmlfileselector&quot;&gt;QQmlFileSelector&lt;/a&gt; is set on the engine, the old one will be replaced. Use &lt;a href=&quot;qqmlfileselector#get&quot;&gt;QQmlFileSelector::get&lt;/a&gt;() to query or use the existing instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0859215ec0f4eb2a23344fb742e91d60c98085a" translate="yes" xml:space="preserve">
          <source>If a new default &lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt; with a modified OpenGL profile has to be set, it should be set before the application instance is declared, to make sure that all created OpenGL contexts use the same OpenGL profile.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e22afc6d2a7a61dc6e6c74df5e4c096461328922" translate="yes" xml:space="preserve">
          <source>If a new item is replaced in the &lt;a href=&quot;qml-qtqml-models-delegatemodelgroup&quot;&gt;DelegateModelGroup&lt;/a&gt; onChanged() handler its insertion and replacement will be communicated to views as an atomic operation, creating the appearance that the model contents have not changed, or if the unresolved and model item are not adjacent that the previously unresolved item has simply moved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa8f8630e7fb7833571914468cbddf26c77822f0" translate="yes" xml:space="preserve">
          <source>If a new result set is available this function will return true. The query will be repositioned on an</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aea05eda839a63653e7000d13345c28e7d0c1d2f" translate="yes" xml:space="preserve">
          <source>If a node does not have a name, e.g., comment nodes, a null &lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt; is returned. QXmlNames must be created with the instance of &lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt; that is being used for evaluating queries using this &lt;a href=&quot;qabstractxmlnodemodel&quot;&gt;QAbstractXmlNodeModel&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3453fd92592fa0ab1def36e1c299dccd39770331" translate="yes" xml:space="preserve">
          <source>If a non-empty string is assigned to &lt;code&gt;text&lt;/code&gt;, then &lt;a href=&quot;qml-qtpositioning-address#isTextGenerated-prop&quot;&gt;isTextGenerated&lt;/a&gt; will be set to false and &lt;code&gt;text&lt;/code&gt; will always return the explicitly assigned string. Modifying address properties will not affect the &lt;code&gt;text&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba51ef6d069f1c2b0a932bcc6b975796816f33ff" translate="yes" xml:space="preserve">
          <source>If a non-empty string is provided to &lt;a href=&quot;qgeoaddress#setText&quot;&gt;setText&lt;/a&gt;(), then &lt;a href=&quot;qgeoaddress#isTextGenerated&quot;&gt;isTextGenerated&lt;/a&gt;() will be set to false and text() will always return the explicitly assigned string. Calls to modify other elements such as &lt;a href=&quot;qgeoaddress#setStreet&quot;&gt;setStreet&lt;/a&gt;(), &lt;a href=&quot;qgeoaddress#setCity&quot;&gt;setCity&lt;/a&gt;() and so on will not affect the resultant string from text().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="234ea25aa0f59af11bf77ed55dd0bd3a82b30994" translate="yes" xml:space="preserve">
          <source>If a non-power-of-two</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9559b075ec291a437e1bffc2cd61dafb70487aec" translate="yes" xml:space="preserve">
          <source>If a null certificate is returned, it can mean the SSL handshake failed, or it can mean the host you are connected to doesn't have a certificate, or it can mean there is no connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a87e9b9995629325536fc77fc58748f87333dd6" translate="yes" xml:space="preserve">
          <source>If a null icon (&lt;a href=&quot;qicon#isNull&quot;&gt;QIcon::isNull&lt;/a&gt;()) is passed into this function, the icon of the action is cleared.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a73fcbcc6f49fb22af0965f90e013eea87c6438" translate="yes" xml:space="preserve">
          <source>If a null widget is specified, the event is sent to the action's parent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa19d5ca0d64cc04007dc9aba5ab05882de85238" translate="yes" xml:space="preserve">
          <source>If a parent item handles child events, it will receive hover move, drag move, and drop events as the cursor passes through its children, but it does not receive hover enter and hover leave, nor drag enter and drag leave events on behalf of its children.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e80f1a5778ee506ddbc56c1878be18a11e8b771" translate="yes" xml:space="preserve">
          <source>If a parse error occurs an empty NDEF message is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78af170b0b6211596352f325e75340be51b4b1d8" translate="yes" xml:space="preserve">
          <source>If a parse error occurs, this function returns &lt;code&gt;false&lt;/code&gt; and the error message is placed in &lt;code&gt;*&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48c008c8638dfdd9adf0e41e268bddee85b536c6" translate="yes" xml:space="preserve">
          <source>If a path specifies a directory, the &lt;a href=&quot;qfilesystemwatcher#directoryChanged&quot;&gt;directoryChanged&lt;/a&gt;() signal will be emitted when the path is modified or removed from disk; otherwise the &lt;a href=&quot;qfilesystemwatcher#fileChanged&quot;&gt;fileChanged&lt;/a&gt;() signal is emitted when the path is modified, renamed, or removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eedb704835ae9cbbf2689b4b04433e02fe2c4077" translate="yes" xml:space="preserve">
          <source>If a platform doesn't support the source sensor, then the sensor cannot be emulated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19affd57d28bc0f75b56f6b4b38403229f8cb3b3" translate="yes" xml:space="preserve">
          <source>If a plugin does not provide an engine the relevant function should return 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e97efc94bd905d4c3e2d3f882665e081625a56ca" translate="yes" xml:space="preserve">
          <source>If a problem occurs during this process, &lt;a href=&quot;qaudioinput#error&quot;&gt;error&lt;/a&gt;() returns &lt;a href=&quot;qaudio#Error-enum&quot;&gt;QAudio::OpenError&lt;/a&gt;, &lt;a href=&quot;qaudioinput#state&quot;&gt;state&lt;/a&gt;() returns &lt;a href=&quot;qaudio#State-enum&quot;&gt;QAudio::StoppedState&lt;/a&gt; and the &lt;a href=&quot;qaudioinput#stateChanged&quot;&gt;stateChanged&lt;/a&gt;() signal is emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2198e89451a23638fcca2bde12f05622c1761ce" translate="yes" xml:space="preserve">
          <source>If a problem occurs during this process, &lt;a href=&quot;qaudiooutput#error&quot;&gt;error&lt;/a&gt;() returns &lt;a href=&quot;qaudio#Error-enum&quot;&gt;QAudio::OpenError&lt;/a&gt;, &lt;a href=&quot;qaudiooutput#state&quot;&gt;state&lt;/a&gt;() returns &lt;a href=&quot;qaudio#State-enum&quot;&gt;QAudio::StoppedState&lt;/a&gt; and the &lt;a href=&quot;qaudiooutput#stateChanged&quot;&gt;stateChanged&lt;/a&gt;() signal is emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="699c60b0bdb4337f5cbadc83b20dc8a7a56cda0c" translate="yes" xml:space="preserve">
          <source>If a problem occurs with access to the information source then an &lt;a href=&quot;qgeopositioninfosource#error&quot;&gt;error()&lt;/a&gt; signal is emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaa023ce285142452c05436024120008e20a28bf" translate="yes" xml:space="preserve">
          <source>If a product query for &lt;b&gt;app&lt;/b&gt; fails, then either the trial has expired or the license is invalid. Your app should check for this product and react accordingly, for instance by showing a dialog to the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7bae6386e7d00c53087e483a2ea6015c9051376" translate="yes" xml:space="preserve">
          <source>If a property is marked with a dirty flag, its current value can be retrieved using the corresponding get function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="053e6fce5770a75affab0253ad1a25bfc98be2ca" translate="yes" xml:space="preserve">
          <source>If a property is not explicitly set, do not change the text format's property value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70c6c27416a7e283741a82ceb71dea6a3c7d6bb3" translate="yes" xml:space="preserve">
          <source>If a property is not explicitly set, override the text format's property with a default value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b9303bd341bc3d4cb763dcaeebbd1613d173e5e" translate="yes" xml:space="preserve">
          <source>If a rectangle with an invalid size is specified (the default), the entire widget is painted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="807c5f4050ab67dd8c9e8c630873b65f0d31ae05" translate="yes" xml:space="preserve">
          <source>If a relation's display column name is also used as a column name in the relational table, or if it is used as display column name in more than one relation it will be aliased. The alias is the relation's table name, display column name and a unique id joined by an underscore (e.g. tablename_columnname_id). &lt;a href=&quot;qsqlrecord#fieldName&quot;&gt;QSqlRecord::fieldName&lt;/a&gt;() will return the aliased column name. All occurrences of the duplicate display column name are aliased when duplication is detected, but no aliasing is done to the column names in the main table. The aliasing doesn't affect &lt;a href=&quot;qsqlrelation&quot;&gt;QSqlRelation&lt;/a&gt;, so &lt;a href=&quot;qsqlrelation#displayColumn&quot;&gt;QSqlRelation::displayColumn&lt;/a&gt;() will return the original display column name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cea6aa89ec0815fe1c4d9abb50f9e82d631d13d5" translate="yes" xml:space="preserve">
          <source>If a relational table contains keys that refer to non-existent rows in the referenced table, the rows containing the invalid keys will not be exposed through the model. The user or the database is responsible for keeping referential integrity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4631f50bec91911b440aa70a330c84d7f59ed4da" translate="yes" xml:space="preserve">
          <source>If a remove transition has been specified, it is applied after this signal is handled, providing that &lt;a href=&quot;qml-qtquick-gridview#delayRemove-attached-prop&quot;&gt;delayRemove&lt;/a&gt; is false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2977bd13be0065ec5be50fb8349e0d33e95a781" translate="yes" xml:space="preserve">
          <source>If a remove transition has been specified, it is applied after this signal is handled, providing that &lt;a href=&quot;qml-qtquick-listview#delayRemove-attached-prop&quot;&gt;delayRemove&lt;/a&gt; is false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d3623c03dc358c0d84164857409c1941e21ec4b" translate="yes" xml:space="preserve">
          <source>If a replica is instantiated but its node is not connected to the node that hosts the requested source (or that object lives in a host node process, but sharing/remoting has not been enabled for the &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;), the Replica will still be created, but will remain uninitialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7ef45a3ff6f327a5e799d2b2bcc0ae07c57df01" translate="yes" xml:space="preserve">
          <source>If a script in the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aec5b2f8a15ef464a970ef8fa3930f17301c95a" translate="yes" xml:space="preserve">
          <source>If a scroll area is used to display the contents of a widget that contains child widgets arranged in a layout, it is important to realize that the size policy of the layout will also determine the size of the widget. This is especially useful to know if you intend to dynamically change the contents of the layout. In such cases, setting the layout's &lt;a href=&quot;qlayout#sizeConstraint-prop&quot;&gt;size constraint&lt;/a&gt; property to one which provides constraints on the minimum and/or maximum size of the layout (e.g., &lt;a href=&quot;qlayout#SizeConstraint-enum&quot;&gt;QLayout::SetMinAndMaxSize&lt;/a&gt;) will cause the size of the scroll area to be updated whenever the contents of the layout changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26c0b78fa714df4aa5e9878f9e2a51824b784375" translate="yes" xml:space="preserve">
          <source>If a signal is connected to several slots, the slots are activated in the same order as the order the connection was made, when the signal is emitted</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57c8641020622005b4d55877c977dbc47501b2e3" translate="yes" xml:space="preserve">
          <source>If a signal is connected to several slots, the slots are activated in the same order in which the connections were made, when the signal is emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04f22255e1b5ccc7e3a171ad856b31bff4574a56" translate="yes" xml:space="preserve">
          <source>If a single license key for the control is not sufficient (ie. you want differnet developers to receive different license keys) you can specify an empty key to indicate that the control requires a license, and reimplement &lt;a href=&quot;qaxfactory#validateLicenseKey&quot;&gt;QAxFactory::validateLicenseKey&lt;/a&gt;() to verify that a license exists on the system (ie. through a license file).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75d2ab14bafd1f4921d136774b1e0cba9d058df2" translate="yes" xml:space="preserve">
          <source>If a size has been defined, the shape property can be used to affect a non-rectangular area.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10ce4b149c14bd1abea03913f5ac9f6804cc38c9" translate="yes" xml:space="preserve">
          <source>If a smaller number of touchpoints are in contact with the &lt;a href=&quot;qml-qtquick-multipointhandler#parent-prop&quot;&gt;parent&lt;/a&gt;, they will be ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="975d2a0140cba2830028343d9517a097582e6d06" translate="yes" xml:space="preserve">
          <source>If a state change has a Transition that matches the same property as a &lt;a href=&quot;qml-qtquick-behavior&quot;&gt;Behavior&lt;/a&gt;, the Transition animation overrides the &lt;a href=&quot;qml-qtquick-behavior&quot;&gt;Behavior&lt;/a&gt; for that state change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f9c301c96ac8d7861138dfd6a50146295c056b6" translate="yes" xml:space="preserve">
          <source>If a state has property assignments, and the transition into the state has animations for the properties, the state can potentially be exited before the properties have been assigned to the values defines by the state. This is true in particular when there are transitions out from the state that do not depend on the &lt;a href=&quot;qstate#propertiesAssigned&quot;&gt;propertiesAssigned()&lt;/a&gt; signal, as described in the previous section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c33373c0839af13f5d787e37da4d2446db68858" translate="yes" xml:space="preserve">
          <source>If a string is a prefix of an &lt;a href=&quot;qvalidator#State-enum&quot;&gt;Acceptable&lt;/a&gt; string, it is considered &lt;a href=&quot;qvalidator#State-enum&quot;&gt;Intermediate&lt;/a&gt;. For example, &quot;&quot; and &quot;A&quot; are &lt;a href=&quot;qvalidator#State-enum&quot;&gt;Intermediate&lt;/a&gt; for the regexp &lt;b&gt;[A-Z][0-9]&lt;/b&gt; (whereas &quot;_&quot; would be &lt;a href=&quot;qvalidator#State-enum&quot;&gt;Invalid&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab44fbf58ba8009f0ac17a5fae8bf0cebec9f2af" translate="yes" xml:space="preserve">
          <source>If a style is not right-to-left aware it will display items as if it were left-to-right</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d0eb30dea27d29c8f86c7adcba4dab93efc9799" translate="yes" xml:space="preserve">
          <source>If a surface fails to &lt;a href=&quot;qabstractvideosurface#start&quot;&gt;start&lt;/a&gt;(), or stops unexpectedly this function can be called to discover what error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d5f37b53c330bbbec2acf5f9f3318d987443a98" translate="yes" xml:space="preserve">
          <source>If a text block is part of a list, it can also have a list format that is accessible with the listFormat() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aa67144618e83a9c53a8bd213b42d74ea19151e" translate="yes" xml:space="preserve">
          <source>If a text encoding is specified using the &lt;code&gt;meta&lt;/code&gt; tag, it is picked up by Qt::codecForHtml(). Likewise, if an encoding is specified to &lt;a href=&quot;qtextdocument#toHtml&quot;&gt;QTextDocument::toHtml&lt;/a&gt;(), the encoding is stored using a &lt;code&gt;meta&lt;/code&gt; tag, for example: &lt;code&gt;&amp;lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=EUC-JP&quot; /&amp;gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5206a82b14ffa56732b79faa72115c3caf87be62" translate="yes" xml:space="preserve">
          <source>If a text has ben set using &lt;a href=&quot;qwizard#setButtonText&quot;&gt;setButtonText&lt;/a&gt;(), this text is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43fb3aaed1dc35b758fbe1ee6aa6be223ac9128a" translate="yes" xml:space="preserve">
          <source>If a text has ben set using &lt;a href=&quot;qwizardpage#setButtonText&quot;&gt;setButtonText&lt;/a&gt;(), this text is returned. Otherwise, if a text has been set using &lt;a href=&quot;qwizard#setButtonText&quot;&gt;QWizard::setButtonText&lt;/a&gt;(), this text is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5713f8e4ace5e3a5647361ecf23c4b6a29aadfb" translate="yes" xml:space="preserve">
          <source>If a thread locks a resource but does not unlock it, the application may freeze because the resource will become permanently unavailable to other threads. This can happen, for example, if an exception is thrown and forces the current function to return without releasing its lock.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9f9902edc3fed3bf18737665b8c8e6552098110" translate="yes" xml:space="preserve">
          <source>If a timeout occures during the handshake, the &lt;a href=&quot;qdtls#handshakeTimeout&quot;&gt;handshakeTimeout&lt;/a&gt;() signal is emitted. The application must call handleTimeout() to retransmit handshake messages; handleTimeout() returns &lt;code&gt;true&lt;/code&gt; if a timeout has occurred, false otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9243057d82c828ba58c4e4a839aa70bb9ee4f7f" translate="yes" xml:space="preserve">
          <source>If a title bar widget is set, &lt;a href=&quot;qdockwidget&quot;&gt;QDockWidget&lt;/a&gt; will not use native window decorations when it is floated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a949aad62db69551c66b376da72a04a59103a2dd" translate="yes" xml:space="preserve">
          <source>If a tool button has a default action, the action defines the following properties of the button:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6e59cd38a8a52c8efedbcfb3d49f7454b604075" translate="yes" xml:space="preserve">
          <source>If a transaction is not finalized, it will be called again for the same transaction the next time the application starts up, providing another chance to store the data. The transaction for a consumable product has to be finalized before the product can be purchased again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca66d51761cb7d7fb74346d81a642fd80e6456fd" translate="yes" xml:space="preserve">
          <source>If a transaction is not finalized, the &lt;a href=&quot;qinappstore#transactionReady&quot;&gt;transactionReady() signal&lt;/a&gt; is emitted again for the same transaction the next time the product is registered, providing another chance to store the data. The transaction for a consumable product must be finalized before the product can be purchased again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f524d615aa70e8fe8b6577609b439c9b3c0c1a9" translate="yes" xml:space="preserve">
          <source>If a transition has no target state, the transition may still be triggered, but this will not cause the state machine's configuration to change (i.e. the current state will not be exited and re-entered).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ab2eb4185db8dd40effe295da523e8c166f82aa" translate="yes" xml:space="preserve">
          <source>If a type is used in a queued connection without being registered, a warning will be printed at the console; for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdb06e8c4faad33e3276e94d7e36a4698cc37926" translate="yes" xml:space="preserve">
          <source>If a user buys the downloadable content and later either installs the game on another device or uninstalls and reinstalls the game, you can provide a way to restore the purchase by calling &lt;a href=&quot;qinappstore#restorePurchases&quot;&gt;QInAppStore::restorePurchases&lt;/a&gt;(). Purchases must be restored in response to a user input, as it may present a password dialog on some platforms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a99427106661fa5ea8df817adf6f128a530c4587" translate="yes" xml:space="preserve">
          <source>If a user buys the downloadable content and later either installs the game on another device or uninstalls and reinstalls the game, you can provide a way to restore the purchase, such as the following button:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="def74d3834c111705746037099a77fcc745b25a1" translate="yes" xml:space="preserve">
          <source>If a valid model index is specified for the parent item when an index is requested using &lt;a href=&quot;qabstractitemmodel#index&quot;&gt;index()&lt;/a&gt;, the index returned refers to an item beneath that parent item in the model. The index obtained refers to a child of that item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f83cb246c6173001d1b2bc2121a8f6b8a581d808" translate="yes" xml:space="preserve">
          <source>If a validator has been set, the value is &lt;code&gt;true&lt;/code&gt; only if the current text is acceptable to the validator as a final string (not as an intermediate string).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65a635275707a70f3d56a0bad6a6e2783b053ed2" translate="yes" xml:space="preserve">
          <source>If a validator or input mask was set, this property will return &lt;code&gt;true&lt;/code&gt; if the current text satisfies the validator or mask as a final string (not as an intermediate string).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfaea09faec46c562f79eb5c19d4bf942d035cad" translate="yes" xml:space="preserve">
          <source>If a validator was set, this property will return &lt;code&gt;true&lt;/code&gt; if the current text satisfies the validator or mask as a final string (not as an intermediate string).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="953694a3255e1b5c6cfb2546a587a02c8aa40651" translate="yes" xml:space="preserve">
          <source>If a value other than &lt;code&gt;Fixed&lt;/code&gt; is specified, the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-animation-example.html#pathanimation&quot;&gt;PathAnimation&lt;/a&gt; will rotate the item to achieve the specified orientation as it travels along the path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2590ca170e20a5e9f3041cd08bef35b1a72ce80d" translate="yes" xml:space="preserve">
          <source>If a value with the wrong type is assigned, the error reported will point to the location of the property declaration, as opposed to the location where the property was assigned to. This slows down the development process by making it more difficult to track down errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adb79330e8de08c8e9bef1ceb3d7e2bfb7d6dea8" translate="yes" xml:space="preserve">
          <source>If a video output has already been set on the media player the new surface will replace it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a337aea801264cae266b813c4e9434e5e800bb4a" translate="yes" xml:space="preserve">
          <source>If a view specifies this generic displaced transition as well as a specific &lt;a href=&quot;qml-qtquick-gridview#addDisplaced-prop&quot;&gt;addDisplaced&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-gridview#moveDisplaced-prop&quot;&gt;moveDisplaced&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-gridview#removeDisplaced-prop&quot;&gt;removeDisplaced&lt;/a&gt; transition, the more specific transition will be used instead of the generic displaced transition when the relevant operation occurs, providing that the more specific transition has not been disabled (by setting &lt;a href=&quot;qml-qtquick-transition#enabled-prop&quot;&gt;enabled&lt;/a&gt; to false). If it has indeed been disabled, the generic displaced transition is applied instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="755062afb1caa888c7e0d60c2f8969a0bdd50633" translate="yes" xml:space="preserve">
          <source>If a view specifies this generic displaced transition as well as a specific &lt;a href=&quot;qml-qtquick-listview#addDisplaced-prop&quot;&gt;addDisplaced&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-listview#moveDisplaced-prop&quot;&gt;moveDisplaced&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-listview#removeDisplaced-prop&quot;&gt;removeDisplaced&lt;/a&gt; transition, the more specific transition will be used instead of the generic displaced transition when the relevant operation occurs, providing that the more specific transition has not been disabled (by setting &lt;a href=&quot;qml-qtquick-transition#enabled-prop&quot;&gt;enabled&lt;/a&gt; to false). If it has indeed been disabled, the generic displaced transition is applied instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e8f7c921322ea0ba71b682846818cb687fb64ea" translate="yes" xml:space="preserve">
          <source>If a viewfinder has already been set on the camera the new surface will replace it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22ea4c312e240c213cee16cb9f7d2705f9c7c9cf" translate="yes" xml:space="preserve">
          <source>If a web page contains two videos that are started in sequence, this signal gets emitted only once, for the first video to generate sound. After both videos are stopped, the signal is emitted upon the last sound generated. This means that the signal is emitted both when any kind of sound is generated and when everything is completely silent within a web page, regardless of the number of audio streams.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9ff2f210738dca9cf8a8aded0871c2100d4860a" translate="yes" xml:space="preserve">
          <source>If a widget has both the &lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt::WA_OpaquePaintEvent&lt;/a&gt; widget attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c90269e219f094e46b020f11b95dd881a3ad1074" translate="yes" xml:space="preserve">
          <source>If a widget is already embedded by this proxy when this function is called, that widget will first be automatically unembedded. Passing 0 for the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c5c2ee8115411c103415877c45456ae4dbb197c" translate="yes" xml:space="preserve">
          <source>If a widget is already inside a &lt;a href=&quot;qsplitter&quot;&gt;QSplitter&lt;/a&gt; when &lt;a href=&quot;qsplitter#insertWidget&quot;&gt;insertWidget&lt;/a&gt;() or &lt;a href=&quot;qsplitter#addWidget&quot;&gt;addWidget&lt;/a&gt;() is called, it will move to the new position. This can be used to reorder widgets in the splitter later. You can use &lt;a href=&quot;qsplitter#indexOf&quot;&gt;indexOf&lt;/a&gt;(), &lt;a href=&quot;qsplitter#widget&quot;&gt;widget&lt;/a&gt;(), and &lt;a href=&quot;qsplitter#count&quot;&gt;count&lt;/a&gt;() to get access to the widgets inside the splitter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="146c43193739f14c404eda3be0507d01214fcd80" translate="yes" xml:space="preserve">
          <source>If a widget is non-native (alien) and winId() is invoked on it, that widget will be provided a native handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cb6f1f111b08fbe1885d4ee5988077dc0c1d0b4" translate="yes" xml:space="preserve">
          <source>If a worker script has the extension &quot;.js&quot; instead, then it is considered to contain plain JavaScript statements and it is run in non-strict mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec10752a6ced1b198119e4dfcc5838eea4106bda" translate="yes" xml:space="preserve">
          <source>If a worker thread throws an exception that is not a subclass of &lt;a href=&quot;qexception&quot;&gt;QException&lt;/a&gt;, the Qt functions will throw a &lt;a href=&quot;qunhandledexception&quot;&gt;QUnhandledException&lt;/a&gt; on the receiver thread side.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="561aed68810e5f609d1e200c7dcb554e0cddbe79" translate="yes" xml:space="preserve">
          <source>If activeFocus is true, either this item is the one that currently receives keyboard input, or it is a &lt;a href=&quot;qml-qtquick-focusscope&quot;&gt;FocusScope&lt;/a&gt; ancestor of the item that currently receives keyboard input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65ea73341c9beb190687e2159d0d22215bf1addd" translate="yes" xml:space="preserve">
          <source>If all commands complete successfully the &lt;a href=&quot;qnearfieldtarget#requestCompleted&quot;&gt;requestCompleted&lt;/a&gt;() signal will be emitted; otherwise the &lt;a href=&quot;qnearfieldtarget#error&quot;&gt;error&lt;/a&gt;() signal will be emitted. If a command fails succeeding commands from this call will not be processed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="268af935db9444b22d2db0de103b4fbeb929fc0e" translate="yes" xml:space="preserve">
          <source>If all signals were disconnected from this object (e.g., the signal argument to &lt;a href=&quot;qobject#disconnect&quot;&gt;disconnect&lt;/a&gt;() was 0), disconnectNotify() is only called once, and the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9492ab742af685306996e84fa71c882acbd01ba" translate="yes" xml:space="preserve">
          <source>If all sub-animations of &lt;a href=&quot;qml-qtquick-parallelanimation&quot;&gt;ParallelAnimation&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-sequentialanimation&quot;&gt;SequentialAnimation&lt;/a&gt; are Animator types, the &lt;a href=&quot;qml-qtquick-parallelanimation&quot;&gt;ParallelAnimation&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-sequentialanimation&quot;&gt;SequentialAnimation&lt;/a&gt; will also be treated as an Animator and be run on the scene graph's rendering thread when possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="078663a611a8d55bcc685cd8a13a80c93610b559" translate="yes" xml:space="preserve">
          <source>If all you need is a non-persistent memory-based structure, consider using &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;&amp;lt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;, &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;&amp;gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5825d9195ba0009f3bd84ffbdabefcbc2f9f909e" translate="yes" xml:space="preserve">
          <source>If all you need is to resolve a foreign key to a more human-friendly string, you can use &lt;a href=&quot;qsqlrelationaltablemodel&quot;&gt;QSqlRelationalTableModel&lt;/a&gt;. For best results, you should also use &lt;a href=&quot;qsqlrelationaldelegate&quot;&gt;QSqlRelationalDelegate&lt;/a&gt;, a delegate that provides combobox editors for editing foreign keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09ef24f246ae761385d5c60bcf9d536799fc4842" translate="yes" xml:space="preserve">
          <source>If all you want is to define a color, texture or gradient for the background, you can call &lt;a href=&quot;qgraphicsview#backgroundBrush-prop&quot;&gt;setBackgroundBrush&lt;/a&gt;() instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84a8692c875cf40e469328dfd25b8e70a8005ffc" translate="yes" xml:space="preserve">
          <source>If all you want is to define a color, texture or gradient for the foreground, you can call &lt;a href=&quot;qgraphicsscene#foregroundBrush-prop&quot;&gt;setForegroundBrush&lt;/a&gt;() instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1881b77140e94dfcdd14584b2a4475506ac765b1" translate="yes" xml:space="preserve">
          <source>If all you want is to define a color, texture or gradient for the foreground, you can call &lt;a href=&quot;qgraphicsview#foregroundBrush-prop&quot;&gt;setForegroundBrush&lt;/a&gt;() instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a15d37f773743f2eda649d5f17b976aaf5dba03" translate="yes" xml:space="preserve">
          <source>If all you want is to define a color, texture, or gradient for the background, you can call &lt;a href=&quot;qgraphicsscene#backgroundBrush-prop&quot;&gt;setBackgroundBrush&lt;/a&gt;() instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="408231d83a92344913b30961708621f1da70c7c6" translate="yes" xml:space="preserve">
          <source>If all you want is to rotate or scale an item, you should call &lt;a href=&quot;qgraphicsitem#setRotation&quot;&gt;setRotation&lt;/a&gt;() or &lt;a href=&quot;qgraphicsitem#setScale&quot;&gt;setScale&lt;/a&gt;() instead. If you want to set an arbitrary transformation on an item, you can call &lt;a href=&quot;qgraphicsitem#setTransform&quot;&gt;setTransform&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad224005a6ef0d8aa7bf0e11f8a08fc66c88d3ff" translate="yes" xml:space="preserve">
          <source>If all you want is to store items inside other items, you can use any &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; directly by passing a suitable parent to &lt;a href=&quot;qgraphicsitem#setParentItem&quot;&gt;setParentItem&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fc3210be626afa38e4770bf42583409e6cee135" translate="yes" xml:space="preserve">
          <source>If an</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50cdd79ec61f950bb0a0d84a0bafb738de01dff8" translate="yes" xml:space="preserve">
          <source>If an action is checkable, an &lt;a href=&quot;qml-qtquick-controls-exclusivegroup&quot;&gt;ExclusiveGroup&lt;/a&gt; can be attached to it. All the actions sharing the same exclusive group become mutually exclusive selectable, meaning that only the last checked action will actually be checked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="761fea39cca19d47f358de83c67e997c353fef29" translate="yes" xml:space="preserve">
          <source>If an add transition is specified, it is applied immediately after this signal is handled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66ae48125f4ec9aca13e4dbb097ba74fe85fbecb" translate="yes" xml:space="preserve">
          <source>If an affector has a defined size, then it will only affect particles within its size and position on screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69d14880485f6bd77339ae470c0e9acd8db7d368" translate="yes" xml:space="preserve">
          <source>If an animation is started, &lt;a href=&quot;qml-qtwayland-compositor-waylandquickitem#bufferLocked-prop&quot;&gt;bufferLocked&lt;/a&gt; should be set to ensure the item keeps its content until the animation finishes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="400a25b5deb93741b30f8284f4de6e670ff1124f" translate="yes" xml:space="preserve">
          <source>If an animation is started, &lt;a href=&quot;qwaylandquickitem#bufferLocked-prop&quot;&gt;bufferLocked&lt;/a&gt; should be set to ensure the item keeps its content until the animation finishes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f34571f7ade2297c281d7019c6c85e78b8341b74" translate="yes" xml:space="preserve">
          <source>If an application needs information about notations and unparsed entities, it can implement this interface and register an instance with &lt;a href=&quot;qxmlreader#setDTDHandler&quot;&gt;QXmlReader::setDTDHandler&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="948b6654fa7c40857712f6d83bc3909bfcd960b9" translate="yes" xml:space="preserve">
          <source>If an application needs to implement customized handling for external entities, it must implement this interface, i.e. &lt;a href=&quot;qxmlentityresolver#resolveEntity&quot;&gt;resolveEntity&lt;/a&gt;(), and register it with &lt;a href=&quot;qxmlreader#setEntityResolver&quot;&gt;QXmlReader::setEntityResolver&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13c3b4cca152912ba30f98709cbfc2c4008b9a82" translate="yes" xml:space="preserve">
          <source>If an application needs true RNG data in bulk, it should use the operating system facilities (such as &lt;code&gt;/dev/random&lt;/code&gt; on Linux) directly and wait for entropy to become available. If the application requires PRNG engines of cryptographic quality but not of true randomness, &lt;a href=&quot;qrandomgenerator#system&quot;&gt;QRandomGenerator::system&lt;/a&gt;() may still be used (see section below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4e823c58bf064ecdc2f69696205348cdae4a45a" translate="yes" xml:space="preserve">
          <source>If an application performs poorly, make sure that rendering is actually the bottleneck. Use a profiler! The environment variable &lt;code&gt;QSG_RENDER_TIMING=1&lt;/code&gt; will output a number of useful timing parameters which can be useful in pinpointing where a problem lies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89f4227e7009f796ab96460aa88371e8445ab545" translate="yes" xml:space="preserve">
          <source>If an application requests a name that is already owned, no queueing will be performed. The registeredService() call will simply fail. This is the default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5137fbed5c07687d4e47a79af43fbf251e25694" translate="yes" xml:space="preserve">
          <source>If an application uses plugins or imports that depend on other modules, these modules have to be listed in the application's dependencies. This is because Qt Creator does not know ahead of time which imports or plugins your application will end up loading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="898f0f4eec90720fe644b07d2af840155b34e806" translate="yes" xml:space="preserve">
          <source>If an assignment is made beyond the end of the byte array, the array is extended with &lt;a href=&quot;qbytearray#resize&quot;&gt;resize&lt;/a&gt;() before the assignment takes place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86ee1392fd045a2fe63af919ae27d1e18764fbe7" translate="yes" xml:space="preserve">
          <source>If an asterisk (&lt;code&gt;*&lt;/code&gt;) is appended to the name when the property is registered, the field is a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7e2b90c0a8754f231cbe0c221acae69e47b4758" translate="yes" xml:space="preserve">
          <source>If an attribute is not intended to be readable by end users, the label field should be kept empty as an indicator of this fact.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba598016b5fa4e687b3297b5fbc756a9e310c3cf" translate="yes" xml:space="preserve">
          <source>If an axis is not given, a temporary default axis with no labels and an automatically adjusting range is created. This temporary axis is destroyed if another axis is explicitly set to the same orientation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f96860b6090c64b035a54e60d30439c8732b6ff0" translate="yes" xml:space="preserve">
          <source>If an axis is not given, a temporary default axis with no labels is created. This temporary axis is destroyed if another axis is explicitly set to the same orientation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19bf9bb34a4444beaa44f37db5459318d6548443" translate="yes" xml:space="preserve">
          <source>If an early return is taken or an exception is thrown before the &lt;code&gt;sem.release()&lt;/code&gt; call is reached, the semaphore is not released, possibly preventing the thread waiting in the corresponding &lt;code&gt;sem.acquire()&lt;/code&gt; call from ever continuing execution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04df73bda5e9287f3b0a53e8199e721ed5d4ea91" translate="yes" xml:space="preserve">
          <source>If an effect is disabled, the source will be rendered with as normal, with no interference from the effect. If the effect is enabled, the source will be rendered with the effect applied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f032363142cdd29dff458057e62db96cf0b00aab" translate="yes" xml:space="preserve">
          <source>If an element of a web page requests to be shown in the fullscreen mode, &lt;a href=&quot;qwebenginepage#fullScreenRequested&quot;&gt;QWebEnginePage::fullScreenRequested&lt;/a&gt; will be emitted with an &lt;a href=&quot;qwebenginefullscreenrequest&quot;&gt;QWebEngineFullScreenRequest&lt;/a&gt; instance as an argument where &lt;a href=&quot;qwebenginefullscreenrequest#toggleOn&quot;&gt;toggleOn&lt;/a&gt;() returns &lt;code&gt;true&lt;/code&gt;. The signal handler needs to then either call &lt;a href=&quot;qwebenginefullscreenrequest#accept&quot;&gt;accept&lt;/a&gt;() or &lt;a href=&quot;qwebenginefullscreenrequest#reject&quot;&gt;reject&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bc6c278797bfa998baaf7abeb4ae3adf7bcf80d" translate="yes" xml:space="preserve">
          <source>If an empty</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72e60a7f12ddf1edd38429ac4860de2c300914ab" translate="yes" xml:space="preserve">
          <source>If an empty &lt;a href=&quot;qssldiffiehellmanparameters&quot;&gt;QSslDiffieHellmanParameters&lt;/a&gt; instance is set on a &lt;a href=&quot;qsslconfiguration&quot;&gt;QSslConfiguration&lt;/a&gt; object, Diffie-Hellman negotiation will be disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed7c23ff6fe5b81f1487ed087477d30fe5161f4f" translate="yes" xml:space="preserve">
          <source>If an empty list is returned, it can mean the SSL handshake failed, or it can mean the host you are connected to doesn't have a certificate, or it can mean there is no connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56543f8a39cc5f720081cd5045f2b520471a5df6" translate="yes" xml:space="preserve">
          <source>If an empty string is assigned to &lt;code&gt;text&lt;/code&gt;, then &lt;a href=&quot;qml-qtpositioning-address#isTextGenerated-prop&quot;&gt;isTextGenerated&lt;/a&gt; will be set to true and &lt;code&gt;text&lt;/code&gt; will return a string which is locally formatted according to &lt;a href=&quot;qml-qtpositioning-address#countryCode-prop&quot;&gt;countryCode&lt;/a&gt; and based on the properties of the address. Modifying the address properties such as &lt;a href=&quot;qml-qtpositioning-address#street-prop&quot;&gt;street&lt;/a&gt;, &lt;a href=&quot;qml-qtpositioning-address#city-prop&quot;&gt;city&lt;/a&gt; and so on may cause the contents of &lt;code&gt;text&lt;/code&gt; to change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24c310b14c2380f607f3b50508ed877ebfeb9cbf" translate="yes" xml:space="preserve">
          <source>If an empty string is provided to &lt;a href=&quot;qgeoaddress#setText&quot;&gt;setText&lt;/a&gt;(), then &lt;a href=&quot;qgeoaddress#isTextGenerated&quot;&gt;isTextGenerated&lt;/a&gt;() will be set to true and text() will return a string which is locally formatted according to &lt;a href=&quot;qgeoaddress#countryCode&quot;&gt;countryCode&lt;/a&gt;() and based on the elements of the address such as street, city and so on. Because the text string is generated from the address elements, a sequence of calls such as text(), &lt;a href=&quot;qgeoaddress#setStreet&quot;&gt;setStreet&lt;/a&gt;(), text() may return different strings for each invocation of text().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb255e7a683c43023e37d8294bc25e97465037c2" translate="yes" xml:space="preserve">
          <source>If an entry spans many lines, use a backslash at the end of every line but the last:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f5ca5f4637982b0b74e4dc0aa8d13237dfb8be0" translate="yes" xml:space="preserve">
          <source>If an error happened during writing, deletes the temporary file and returns &lt;code&gt;false&lt;/code&gt;. Otherwise, renames it to the final &lt;a href=&quot;qsavefile#fileName&quot;&gt;fileName&lt;/a&gt; and returns &lt;code&gt;true&lt;/code&gt; on success. Finally, closes the device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33804e3d08a1f4f5e6010d70546cd41348f9fd70" translate="yes" xml:space="preserve">
          <source>If an error is encountered, the machine will look for an &lt;a href=&quot;qml-qtqml-statemachine-state#errorState-prop&quot;&gt;errorState&lt;/a&gt;, and if one is available, it will enter this state. After the error state is entered, the type of the error can be retrieved with error(). The execution of the state graph will not stop when the error state is entered. If no error state applies to the erroneous state, the machine will stop executing and an error message will be printed to the console.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec5eef8e29cb3a61bb2e01d84eb0fad867870f69" translate="yes" xml:space="preserve">
          <source>If an error is encountered, the machine will look for an &lt;a href=&quot;qstate#errorState&quot;&gt;error state&lt;/a&gt;, and if one is available, it will enter this state. The types of errors possible are described by the &lt;a href=&quot;qstatemachine#Error-enum&quot;&gt;Error&lt;/a&gt; enum. After the error state is entered, the type of the error can be retrieved with &lt;a href=&quot;qstatemachine#error&quot;&gt;error&lt;/a&gt;(). The execution of the state graph will not stop when the error state is entered. If no error state applies to the erroneous state, the machine will stop executing and an error message will be printed to the console.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e944103b05f2294f3725a2b79090ec0ee2cc9d6" translate="yes" xml:space="preserve">
          <source>If an error is sent, the return value and any output parameters from the called slot will be ignored by Qt D-Bus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28256d05e60aab94c2e61cd345eb1d775bb272c0" translate="yes" xml:space="preserve">
          <source>If an error occurred during evaluation of the query, true is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d237eb991eb13e678bcd34e563c5983a68509cac" translate="yes" xml:space="preserve">
          <source>If an error occurred within the application while saving its data, you may want to try &lt;a href=&quot;qsessionmanager#allowsErrorInteraction&quot;&gt;allowsErrorInteraction&lt;/a&gt;() instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd3a7d7d87cf61a3c7f19bf4761d3c6495d20125" translate="yes" xml:space="preserve">
          <source>If an error occurs at any point in time, &lt;a href=&quot;qserialport&quot;&gt;QSerialPort&lt;/a&gt; will emit the &lt;a href=&quot;qserialport#errorOccurred&quot;&gt;errorOccurred&lt;/a&gt;() signal. You can also call &lt;a href=&quot;qserialport#error-prop&quot;&gt;error&lt;/a&gt;() to find the type of error that occurred last.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c149b9cd8dfe6507b2571196d46ddafeda4d8af" translate="yes" xml:space="preserve">
          <source>If an error occurs during serialization, result is undefined unless the serializer is driven through a call to &lt;a href=&quot;qxmlquery#evaluateTo&quot;&gt;QXmlQuery::evaluateTo&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fca7cb4366a8cc7f4928b31533ddef67bce1a2bc" translate="yes" xml:space="preserve">
          <source>If an error occurs during the evaluation, error messages are sent to &lt;a href=&quot;qxmlquery#messageHandler&quot;&gt;messageHandler&lt;/a&gt;() and &lt;code&gt;false&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9b750dd87c1c6e54be93304c09e8628835ccd19" translate="yes" xml:space="preserve">
          <source>If an error occurs during the evaluation, error messages are sent to &lt;a href=&quot;qxmlquery#messageHandler&quot;&gt;messageHandler&lt;/a&gt;(), the content of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe65aab215498c2d506b1f79d6ae7b73500130b8" translate="yes" xml:space="preserve">
          <source>If an error occurs or if there are no more arguments to decode (i.e., we are at the end of the argument list), this function will return an invalid &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bef62105e65297a1293c008bac6ff468d1f5c65" translate="yes" xml:space="preserve">
          <source>If an error occurs while parsing, &lt;a href=&quot;qxmlstreamreader#atEnd&quot;&gt;atEnd&lt;/a&gt;() and &lt;a href=&quot;qxmlstreamreader#hasError&quot;&gt;hasError&lt;/a&gt;() return true, and &lt;a href=&quot;qxmlstreamreader#error&quot;&gt;error&lt;/a&gt;() returns the error that occurred. The functions &lt;a href=&quot;qxmlstreamreader#errorString&quot;&gt;errorString&lt;/a&gt;(), &lt;a href=&quot;qxmlstreamreader#lineNumber&quot;&gt;lineNumber&lt;/a&gt;(), &lt;a href=&quot;qxmlstreamreader#columnNumber&quot;&gt;columnNumber&lt;/a&gt;(), and &lt;a href=&quot;qxmlstreamreader#characterOffset&quot;&gt;characterOffset&lt;/a&gt;() are for constructing an appropriate error or warning message. To simplify application code, &lt;a href=&quot;qxmlstreamreader&quot;&gt;QXmlStreamReader&lt;/a&gt; contains a &lt;a href=&quot;qxmlstreamreader#raiseError&quot;&gt;raiseError&lt;/a&gt;() mechanism that lets you raise custom errors that trigger the same error handling described.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb2df796c2a62ab55d8b9980af6a56dd92e7be3e" translate="yes" xml:space="preserve">
          <source>If an error occurs while writing to the underlying device, &lt;a href=&quot;qxmlstreamwriter#hasError&quot;&gt;hasError&lt;/a&gt;() starts returning true and subsequent writes are ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e825178fa37f03b56e537ea1009d8ddbe199689" translate="yes" xml:space="preserve">
          <source>If an error occurs, &lt;a href=&quot;qlocalserver#serverError&quot;&gt;serverError&lt;/a&gt;() returns the type of error, and &lt;a href=&quot;qlocalserver#errorString&quot;&gt;errorString&lt;/a&gt;() can be called to get a human readable description of what happened.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae8458c7e3d29b2d3a67af9c848c0fa3e9193c67" translate="yes" xml:space="preserve">
          <source>If an error occurs, &lt;a href=&quot;qnearfieldsharemanager#shareError&quot;&gt;shareError&lt;/a&gt;() returns the error type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="264ac1bad3a37bfae7dcaad3b4dd26f205af7b73" translate="yes" xml:space="preserve">
          <source>If an error occurs, &lt;a href=&quot;qsqlquery#exec-1&quot;&gt;exec()&lt;/a&gt; returns &lt;code&gt;false&lt;/code&gt;. The error is then available as &lt;a href=&quot;qsqlquery#lastError&quot;&gt;QSqlQuery::lastError&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ec0def9188583a1c0cd436a9cbb50625b9c4a6c" translate="yes" xml:space="preserve">
          <source>If an error occurs, &lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; emits the &lt;a href=&quot;qsslsocket#sslErrors&quot;&gt;sslErrors&lt;/a&gt;() signal. In this case, if no action is taken to ignore the error(s), the connection is dropped. To continue, despite the occurrence of an error, you can call &lt;a href=&quot;qsslsocket#ignoreSslErrors&quot;&gt;ignoreSslErrors&lt;/a&gt;(), either from within this slot after the error occurs, or any time after construction of the &lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; and before the connection is attempted. This will allow &lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; to ignore the errors it encounters when establishing the identity of the peer. Ignoring errors during an SSL handshake should be used with caution, since a fundamental characteristic of secure connections is that they should be established with a successful handshake.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="036a29b5ab803a638536be75b09c38d8e3fe0c04" translate="yes" xml:space="preserve">
          <source>If an error occurs, &lt;a href=&quot;qtcpserver#serverError&quot;&gt;serverError&lt;/a&gt;() returns the type of error, and &lt;a href=&quot;qtcpserver#errorString&quot;&gt;errorString&lt;/a&gt;() can be called to get a human readable description of what happened.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3e7dd17ef00f8895843a87ee4e62e12f8869a4f" translate="yes" xml:space="preserve">
          <source>If an error occurs, &lt;a href=&quot;qwebsocketserver#serverError&quot;&gt;serverError&lt;/a&gt;() returns the type of error, and &lt;a href=&quot;qwebsocketserver#errorString&quot;&gt;errorString&lt;/a&gt;() can be called to get a human readable description of what happened.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b6e36963d48ec6ace8b5573ad798a49e9c365c1" translate="yes" xml:space="preserve">
          <source>If an error occurs, error messages are printed with &lt;a href=&quot;#qWarning&quot;&gt;qWarning&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73a6794fd2c3af100a73fed94bef9b2a8051f4d4" translate="yes" xml:space="preserve">
          <source>If an error occurs, socketError() returns the type of error, and &lt;a href=&quot;qiodevice#errorString&quot;&gt;errorString&lt;/a&gt;() can be called to get a human readable description of what happened.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f22bb9beab8066b7d8812a5f1f55e20f918d5b8" translate="yes" xml:space="preserve">
          <source>If an error occurs, the &lt;a href=&quot;qqmlapplicationengine#objectCreated&quot;&gt;objectCreated&lt;/a&gt; signal is emitted with a null pointer as parameter and error messages are printed with &lt;a href=&quot;#qWarning&quot;&gt;qWarning&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f90ef7a5b0dc33dce6a5ad689c81e6adfbe664f" translate="yes" xml:space="preserve">
          <source>If an error occurs, the method should return 0 and (optionally) give a description of the error in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f70c1f48b94f512a9b2c5eebe0e65831784781f" translate="yes" xml:space="preserve">
          <source>If an error occurs, you can fetch the &lt;a href=&quot;qaudio#Error-enum&quot;&gt;error type&lt;/a&gt; with the &lt;a href=&quot;qaudiooutput#error&quot;&gt;error&lt;/a&gt;() function. Please see the &lt;a href=&quot;qaudio#Error-enum&quot;&gt;QAudio::Error&lt;/a&gt; enum for a description of the possible errors that are reported. When an error is encountered, the state changes to &lt;a href=&quot;qaudio#State-enum&quot;&gt;QAudio::StoppedState&lt;/a&gt;. You can check for errors by connecting to the &lt;a href=&quot;qaudiooutput#stateChanged&quot;&gt;stateChanged&lt;/a&gt;() signal:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f466349be22111215713f0bd3b9ec57c2600be8" translate="yes" xml:space="preserve">
          <source>If an error should occur, you can fetch its reason with &lt;a href=&quot;qaudioinput#error&quot;&gt;error&lt;/a&gt;(). The possible error reasons are described by the &lt;a href=&quot;qaudio#Error-enum&quot;&gt;QAudio::Error&lt;/a&gt; enum. The &lt;a href=&quot;qaudioinput&quot;&gt;QAudioInput&lt;/a&gt; will enter the &lt;a href=&quot;qaudio#State-enum&quot;&gt;StoppedState&lt;/a&gt; when an error is encountered. Connect to the &lt;a href=&quot;qaudioinput#stateChanged&quot;&gt;stateChanged&lt;/a&gt;() signal to handle the error:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="973bd4eafdb38084daa2d6e21fc18ca80235c65a" translate="yes" xml:space="preserve">
          <source>If an error was detected, the error message should be printed to the standard error output and the application should return an exit code other than 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59601913fc9e3c2ac3c19ce1498d2d2eaf80610d" translate="yes" xml:space="preserve">
          <source>If an explicit size is not specified for the Loader, the Loader is automatically resized to the size of the loaded item once the component is loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22ab88ca3a5a8291cc2d27c1ef70e8195db7b3e0" translate="yes" xml:space="preserve">
          <source>If an inline item is pushed, the item is temporarily re-parented into the &lt;a href=&quot;qml-qtquick-controls-stackview&quot;&gt;StackView&lt;/a&gt;. When the item is later popped off, it gets re-parented back to its original owner again. If, however, an item is pushed as a component or a URL, the actual item will be created as an item from that component. This happens automatically when the item is about to become the current item in the stack. Ownership of the item will then normally be taken by the &lt;a href=&quot;qml-qtquick-controls-stackview&quot;&gt;StackView&lt;/a&gt;, which will automatically destroy the item when it is later popped off. The component that declared the item, by contrast, remains in the ownership of the application and is not destroyed by the stack. This can be overridden by explicitly setting &lt;code&gt;destroyOnPop&lt;/code&gt; in the list of arguments given to push.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d288ead2d30e4a672aceaead197696a9c9d20036" translate="yes" xml:space="preserve">
          <source>If an instance of &lt;code&gt;MessageBoard&lt;/code&gt; was set as the context data for a file &lt;code&gt;MyItem.qml&lt;/code&gt;, then &lt;code&gt;MyItem.qml&lt;/code&gt; could invoke the two methods as shown in the examples below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e86be9fc7ab9d01ede032017739a974703a8f746" translate="yes" xml:space="preserve">
          <source>If an instance of this class was &lt;a href=&quot;qtqml-cppintegration-contextproperties#&quot;&gt;set as a context property&lt;/a&gt; when loading a file named &lt;code&gt;MyItem.qml&lt;/code&gt; from C++:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c91b97cac6fb99b6f0b4e9f10fcd4a1d82f87319" translate="yes" xml:space="preserve">
          <source>If an invalid color is specified, the tab will use the &lt;a href=&quot;qtabbar&quot;&gt;QTabBar&lt;/a&gt; foreground role instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46a97c78b9b9b80bcd86cfe7489430b17bc51c38" translate="yes" xml:space="preserve">
          <source>If an invalid model index is specified for the parent item when an index is requested using &lt;a href=&quot;qabstractitemmodel#index&quot;&gt;index()&lt;/a&gt;, the index returned refers to a top-level item in the model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e057be5f1311bf8549d872262d25dd5d0fd5d7f2" translate="yes" xml:space="preserve">
          <source>If an invalid network configuration is set, a network session will not be created. In this case network requests will be processed regardless, but may fail. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a41d0284139f3c71e2790385c7c6b44bbf2b218" translate="yes" xml:space="preserve">
          <source>If an invokable member function returns a pointer to a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; or a subclass of &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and it is invoked from QML, special ownership rules apply. See &lt;a href=&quot;qtqml-cppintegration-data&quot;&gt;Data Type Conversion Between QML and C++&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dda15a0a66f926c4811aa8665fca50e5fd191869" translate="yes" xml:space="preserve">
          <source>If an item accepts a mouse button, it will become the mouse grabber item when a mouse press event is delivered for that mouse button. However, if the item does not accept the button, &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt; will forward the mouse events to the first item beneath it that does.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2525bb9f51e172b5b4f74d9f79f390530a0ed092" translate="yes" xml:space="preserve">
          <source>If an item becomes invisible while grabbing the mouse, (i.e., while it is receiving mouse events,) it will automatically lose the mouse grab, and the grab is not regained by making the item visible again; it must receive a new mouse press to regain the mouse grab.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3b1fe47a0fdacc2035f1af4df9a92a3bf66850f" translate="yes" xml:space="preserve">
          <source>If an item does not accept the mouse button for a particular mouse event, the mouse event will not be delivered to the item and will be delivered to the next item in the item hierarchy instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db071a6c0a58530bf5281fabc634a745b6740794" translate="yes" xml:space="preserve">
          <source>If an item has a focus proxy, the focus proxy will receive input focus when the item gains input focus. The item itself will still have focus (i.e., &lt;a href=&quot;qgraphicsitem#hasFocus&quot;&gt;hasFocus&lt;/a&gt;() will return true), but only the focus proxy will receive the keyboard input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88daf3a64dc215bf9c0f079f87f04cd2d1fb2dd8" translate="yes" xml:space="preserve">
          <source>If an item has child objects, &lt;a href=&quot;qabstractitemmodel#hasChildren&quot;&gt;hasChildren&lt;/a&gt;() returns &lt;code&gt;true&lt;/code&gt; for the corresponding index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c59dfc80bf29e089cf4d40254ee230dbe720eae3" translate="yes" xml:space="preserve">
          <source>If an item has timers or animations, consider pausing them on receiving the &lt;a href=&quot;qml-qtquick-tableview#pooled-signal&quot;&gt;TableView::pooled&lt;/a&gt; signal. That way you avoid using the CPU resources for items that are not visible. Likewise, if an item has resources that cannot be reused, they could be freed up.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb1804210bbf18d00004f9cb77f4ad798cd31729" translate="yes" xml:space="preserve">
          <source>If an item is anchored with no spacing associated with the anchor, it will use the default spacing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaf9f0e58b31ed3d20c46aef22c0b5e4d5bce8e8" translate="yes" xml:space="preserve">
          <source>If an item is displaced by multiple types of operations at the same time, it is not defined as to whether the &lt;a href=&quot;qml-qtquick-gridview#addDisplaced-prop&quot;&gt;addDisplaced&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-gridview#moveDisplaced-prop&quot;&gt;moveDisplaced&lt;/a&gt; or removeDisplaced transition will be applied. Additionally, if it is not necessary to specify different transitions depending on whether an item is displaced by an add, move or remove operation, consider setting the &lt;a href=&quot;qml-qtquick-gridview#displaced-prop&quot;&gt;displaced&lt;/a&gt; property instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a01377c4d13a0e43d9dd5ccc563fc3e5ee3ee571" translate="yes" xml:space="preserve">
          <source>If an item is displaced by multiple types of operations at the same time, it is not defined as to whether the &lt;a href=&quot;qml-qtquick-gridview#addDisplaced-prop&quot;&gt;addDisplaced&lt;/a&gt;, moveDisplaced or &lt;a href=&quot;qml-qtquick-gridview#removeDisplaced-prop&quot;&gt;removeDisplaced&lt;/a&gt; transition will be applied. Additionally, if it is not necessary to specify different transitions depending on whether an item is displaced by an add, move or remove operation, consider setting the &lt;a href=&quot;qml-qtquick-gridview#displaced-prop&quot;&gt;displaced&lt;/a&gt; property instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7147b624161bf99a005b5ffad51817624987ff4" translate="yes" xml:space="preserve">
          <source>If an item is displaced by multiple types of operations at the same time, it is not defined as to whether the &lt;a href=&quot;qml-qtquick-listview#addDisplaced-prop&quot;&gt;addDisplaced&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-listview#moveDisplaced-prop&quot;&gt;moveDisplaced&lt;/a&gt; or removeDisplaced transition will be applied. Additionally, if it is not necessary to specify different transitions depending on whether an item is displaced by an add, move or remove operation, consider setting the &lt;a href=&quot;qml-qtquick-listview#displaced-prop&quot;&gt;displaced&lt;/a&gt; property instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6eef7ea0302788e44c6a55d4bc9bd122e914543" translate="yes" xml:space="preserve">
          <source>If an item is displaced by multiple types of operations at the same time, it is not defined as to whether the &lt;a href=&quot;qml-qtquick-listview#addDisplaced-prop&quot;&gt;addDisplaced&lt;/a&gt;, moveDisplaced or &lt;a href=&quot;qml-qtquick-listview#removeDisplaced-prop&quot;&gt;removeDisplaced&lt;/a&gt; transition will be applied. Additionally, if it is not necessary to specify different transitions depending on whether an item is displaced by an add, move or remove operation, consider setting the &lt;a href=&quot;qml-qtquick-listview#displaced-prop&quot;&gt;displaced&lt;/a&gt; property instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="563f1177e8a89edda4dd1b75a04481dc196367a3" translate="yes" xml:space="preserve">
          <source>If an item is displaced by multiple types of operations at the same time, it is not defined as to whether the addDisplaced, &lt;a href=&quot;qml-qtquick-gridview#moveDisplaced-prop&quot;&gt;moveDisplaced&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-gridview#removeDisplaced-prop&quot;&gt;removeDisplaced&lt;/a&gt; transition will be applied. Additionally, if it is not necessary to specify different transitions depending on whether an item is displaced by an add, move or remove operation, consider setting the &lt;a href=&quot;qml-qtquick-gridview#displaced-prop&quot;&gt;displaced&lt;/a&gt; property instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5e6c9617795220ce7bb4b35837eb5d0d3fb1697" translate="yes" xml:space="preserve">
          <source>If an item is displaced by multiple types of operations at the same time, it is not defined as to whether the addDisplaced, &lt;a href=&quot;qml-qtquick-listview#moveDisplaced-prop&quot;&gt;moveDisplaced&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-listview#removeDisplaced-prop&quot;&gt;removeDisplaced&lt;/a&gt; transition will be applied. Additionally, if it is not necessary to specify different transitions depending on whether an item is displaced by an add, move or remove operation, consider setting the &lt;a href=&quot;qml-qtquick-listview#displaced-prop&quot;&gt;displaced&lt;/a&gt; property instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a77ffbf3b69b3f9fcf01afb73d1f3076f5ab223d" translate="yes" xml:space="preserve">
          <source>If an item matched, the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0b4a4c5a210b9f75e49f4b52e3a9612ad378ce8" translate="yes" xml:space="preserve">
          <source>If an item within a Column is not &lt;a href=&quot;qml-qtquick-item#visible-prop&quot;&gt;visible&lt;/a&gt;, or if it has a width or height of 0, the item will not be laid out and it will not be visible within the column. Also, since a Column automatically positions its children vertically, a child item within a Column should not set its &lt;a href=&quot;qml-qtquick-item#y-prop&quot;&gt;y&lt;/a&gt; position or vertically anchor itself using the &lt;a href=&quot;qml-qtquick-item#anchors.top-prop&quot;&gt;top&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-item#anchors.bottom-prop&quot;&gt;bottom&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-item#anchors.verticalCenter-prop&quot;&gt;anchors.verticalCenter&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-item#anchors.fill-prop&quot;&gt;fill&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-item#anchors.centerIn-prop&quot;&gt;centerIn&lt;/a&gt; anchors. If you need to perform these actions, consider positioning the items without the use of a Column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22ca940214679dd201251e43e5be4ca75f7f11e5" translate="yes" xml:space="preserve">
          <source>If an item within a Flow is not &lt;a href=&quot;qml-qtquick-item#visible-prop&quot;&gt;visible&lt;/a&gt;, or if it has a width or height of 0, the item will not be laid out and it will not be visible within the Flow. Also, since a Flow automatically positions its children, a child item within a Flow should not set its &lt;a href=&quot;qml-qtquick-item#x-prop&quot;&gt;x&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-item#y-prop&quot;&gt;y&lt;/a&gt; positions or anchor itself with any of the &lt;a href=&quot;qml-qtquick-item#anchors-prop&quot;&gt;anchor&lt;/a&gt; properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b59e7f6d35b887903ba5a5ea3d910b34669a076f" translate="yes" xml:space="preserve">
          <source>If an item within a Grid is not &lt;a href=&quot;qml-qtquick-item#visible-prop&quot;&gt;visible&lt;/a&gt;, or if it has a width or height of 0, the item will not be laid out and it will not be visible within the column. Also, since a Grid automatically positions its children, a child item within a Grid should not set its &lt;a href=&quot;qml-qtquick-item#x-prop&quot;&gt;x&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-item#y-prop&quot;&gt;y&lt;/a&gt; positions or anchor itself with any of the &lt;a href=&quot;qml-qtquick-item#anchors-prop&quot;&gt;anchor&lt;/a&gt; properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28ac00ed7a7788607ab521804713c06de879399a" translate="yes" xml:space="preserve">
          <source>If an item within a Row is not &lt;a href=&quot;qml-qtquick-item#visible-prop&quot;&gt;visible&lt;/a&gt;, or if it has a width or height of 0, the item will not be laid out and it will not be visible within the row. Also, since a Row automatically positions its children horizontally, a child item within a Row should not set its &lt;a href=&quot;qml-qtquick-item#x-prop&quot;&gt;x&lt;/a&gt; position or horizontally anchor itself using the &lt;a href=&quot;qml-qtquick-item#anchors.left-prop&quot;&gt;left&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-item#anchors.right-prop&quot;&gt;right&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-item#anchors.horizontalCenter-prop&quot;&gt;anchors.horizontalCenter&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-item#anchors.fill-prop&quot;&gt;fill&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-item#anchors.centerIn-prop&quot;&gt;centerIn&lt;/a&gt; anchors. If you need to perform these actions, consider positioning the items without the use of a Row.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a519eae81a73125ec24fca162ab9af46f636ab21" translate="yes" xml:space="preserve">
          <source>If an operation is not ongoing, invoking cancel() has no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7f7dbd2e59ab39acd86db71993cc22f042bdae9" translate="yes" xml:space="preserve">
          <source>If an orientation and &lt;a href=&quot;qml-qtquick-pathanimation#endRotation-prop&quot;&gt;endRotation&lt;/a&gt; have been specified for the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-animation-example.html#pathanimation&quot;&gt;PathAnimation&lt;/a&gt;, orientationExitDuration can be used to smoothly transition from the rotation given by the path orientation to the specified &lt;a href=&quot;qml-qtquick-pathanimation#endRotation-prop&quot;&gt;endRotation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8910c3173edd273a2825d9067eafbd44eccabab" translate="yes" xml:space="preserve">
          <source>If an orientation has been specified for the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-animation-example.html#pathanimation&quot;&gt;PathAnimation&lt;/a&gt;, and the path doesn't end with the item at the desired rotation, the endRotation property can be used to manually specify an end rotation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aace642d1deb2a5b01eccc48112aba47762fe3f" translate="yes" xml:space="preserve">
          <source>If an orientation has been specified for the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-animation-example.html#pathanimation&quot;&gt;PathAnimation&lt;/a&gt;, and the starting rotation of the item does not match that given by the orientation, orientationEntryDuration can be used to smoothly transition from the item's starting rotation to the rotation given by the path orientation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87b668c0d57c981ac3301a26d25a142c7bc7aeb7" translate="yes" xml:space="preserve">
          <source>If an origin manager does not supply a place id, it may be necessary to provide some other means of cross-referencing/matching. One approach might be to do so via the place coordinates, if the coordinate of a place in the origin manager is identical or close to a place in the destination manager, there is a high likelihood that they are the same place. In this case, the manager might implement &lt;a href=&quot;qplacemanager#matchingPlaces&quot;&gt;QPlaceManager::matchingPlaces&lt;/a&gt;() to accept a &lt;a href=&quot;qplacematchrequest&quot;&gt;QPlaceMatchRequest&lt;/a&gt; with a parameter key of 'proximity' and a parameter value of the distance two places must be in order to detect a match. for example if an origin place and destination place are within 50m of each other, they can be considered the same place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5226b6eb5fdd39323807200970a6a478c4e8a2d8" translate="yes" xml:space="preserve">
          <source>If an unsupported parameter is specified the camera may fail to load, or the setting may be ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3646198c0f4ee74ff85857db4adf9d6c3a3ea807" translate="yes" xml:space="preserve">
          <source>If animating properties other than stroke and fill colors is a must, it is recommended to target systems providing &lt;code&gt;GL_NV_path_rendering&lt;/code&gt; where the cost of property changes is smaller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec1b2f4cb5e02b335838617f9e1a67357643f345" translate="yes" xml:space="preserve">
          <source>If another application already has the service name registered, attempt to replace it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="887dbd073cc9c5d9c9fe95de56bae19f6b797a80" translate="yes" xml:space="preserve">
          <source>If another process (or another thread) has created the lock file already, this function will block until that process (or thread) releases it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7002c65508deebdef85cc972b8ef50457bd55d1" translate="yes" xml:space="preserve">
          <source>If another vertex array object is then bound you can later restore the set of state associated with this object by calling bind() on this object once again. This allows efficient changes between vertex data states in rendering functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b52463c6b2ab39731c657da050bd5fad17d4b5f" translate="yes" xml:space="preserve">
          <source>If any error occurs when reading the image, &lt;a href=&quot;qimagereader#read&quot;&gt;read&lt;/a&gt;() will return a null &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;. You can then call &lt;a href=&quot;qimagereader#error&quot;&gt;error&lt;/a&gt;() to find the type of error that occurred, or &lt;a href=&quot;qimagereader#errorString&quot;&gt;errorString&lt;/a&gt;() to get a human readable description of what went wrong.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68617e815d3e12a6dfcb29bebb22cb0781dd114b" translate="yes" xml:space="preserve">
          <source>If any error occurs when writing the image, &lt;a href=&quot;qimagewriter#write&quot;&gt;write&lt;/a&gt;() will return false. You can then call &lt;a href=&quot;qimagewriter#error&quot;&gt;error&lt;/a&gt;() to find the type of error that occurred, or &lt;a href=&quot;qimagewriter#errorString&quot;&gt;errorString&lt;/a&gt;() to get a human readable description of what went wrong.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cc5a3d51ad5d41e8c6816f79dff4965021071c7" translate="yes" xml:space="preserve">
          <source>If any logical particle groups are specified here, then the affector will only be triggered if the particle being examined intersects with a particle of one of these groups.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce8aae18e6f006643443a6fa77d4e4b94eaecb42" translate="yes" xml:space="preserve">
          <source>If any of the widgets have stretch factors set to zero they will only get more space if no other widgets want the space. Of these, space is allocated to widgets with an &lt;a href=&quot;qsizepolicy#Policy-enum&quot;&gt;Expanding&lt;/a&gt; size policy first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbca5be893568f75d0c9a0e73373842b05cb6e4e" translate="yes" xml:space="preserve">
          <source>If any of the widgets have stretch factors set, with a value greater than zero, then they are allocated space in proportion to their stretch factor (explained below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2cee053a69d7b38ba4562aa2c7e6fcecab8b4ff" translate="yes" xml:space="preserve">
          <source>If applicable, &lt;a href=&quot;qqmlparserstatus#componentComplete&quot;&gt;QQmlParserStatus::componentComplete&lt;/a&gt;() is called on objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d6bdadabcfad5b636fb14748f6a098c298ebd14" translate="yes" xml:space="preserve">
          <source>If attributes are reported by &lt;a href=&quot;qxmlcontenthandler#startElement&quot;&gt;QXmlContentHandler::startElement&lt;/a&gt;() this class is used to pass the attribute values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5600755d0c6e340fa987d23251ec1a154c00eed" translate="yes" xml:space="preserve">
          <source>If auto-deletion is enabled, &lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; will automatically delete this runnable after calling &lt;a href=&quot;qrunnable#run&quot;&gt;run&lt;/a&gt;(); otherwise, ownership remains with the application programmer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8d310d45ac49a7af5d801c302eb00208a29a379" translate="yes" xml:space="preserve">
          <source>If auto-exclusivity is enabled, checkable buttons that belong to the same parent item behave as if they were part of the same &lt;a href=&quot;qml-qtquick-controls2-buttongroup&quot;&gt;ButtonGroup&lt;/a&gt;. Only one button can be checked at any time; checking another button automatically unchecks the previously checked one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27e3b6dc5e3be2da2755886906190ff75c2dfd9a" translate="yes" xml:space="preserve">
          <source>If auto-exclusivity is enabled, checkable buttons that belong to the same parent widget behave as if they were part of the same exclusive button group. In an exclusive button group, only one button can be checked at any time; checking another button automatically unchecks the previously checked one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b210a138caa1880abb1baa63c04ac8a174a31d4" translate="yes" xml:space="preserve">
          <source>If autoRepeat is enabled, then the &lt;a href=&quot;qabstractbutton#pressed&quot;&gt;pressed&lt;/a&gt;(), &lt;a href=&quot;qabstractbutton#released&quot;&gt;released&lt;/a&gt;(), and &lt;a href=&quot;qabstractbutton#clicked&quot;&gt;clicked&lt;/a&gt;() signals are emitted at regular intervals when the button is down. autoRepeat is off by default. The initial delay and the repetition interval are defined in milliseconds by &lt;a href=&quot;qabstractbutton#autoRepeatDelay-prop&quot;&gt;autoRepeatDelay&lt;/a&gt; and &lt;a href=&quot;qabstractbutton#autoRepeatInterval-prop&quot;&gt;autoRepeatInterval&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0a16a9dee0562d5ec458526435092e26b9a2fed" translate="yes" xml:space="preserve">
          <source>If autoRotate is true, then the particle's rotation will be set so that it faces the direction of travel, plus any rotation from the rotation or &lt;a href=&quot;qml-qtquick-particles-particle#rotationVelocity-prop&quot;&gt;rotationVelocity&lt;/a&gt; properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3be588e591c5011e9be62bac7cd7ce2041b9dd9f" translate="yes" xml:space="preserve">
          <source>If available, the &lt;a href=&quot;qvideowidget&quot;&gt;QVideoWidget&lt;/a&gt; class can be used to view the video. As the life time of &lt;a href=&quot;qmediaplayer&quot;&gt;QMediaPlayer&lt;/a&gt; can be longer than the playback of one &lt;a href=&quot;qmediacontent&quot;&gt;QMediaContent&lt;/a&gt;, this property may change over time, the &lt;a href=&quot;qmediaplayer#videoAvailableChanged&quot;&gt;videoAvailableChanged&lt;/a&gt; signal can be used to monitor it's status.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edb2d684c66327c171add25153847052f7e6607a" translate="yes" xml:space="preserve">
          <source>If backend doesn't support applying this change in the active state, it will be stopped before the settings are changed and restarted after. Otherwise the backend should apply the change in the current state, with the camera status indicating the progress, if necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1309c3d128e1c32b3bd4eea411ded8a1eaf226d4" translate="yes" xml:space="preserve">
          <source>If binding from an activity, allow the target service's process importance to be raised based on whether the activity is visible to the user. See &lt;a href=&quot;https://developer.android.com/reference/android/content/Context.html#BIND_ADJUST_WITH_ACTIVITY&quot;&gt;BIND_ADJUST_WITH_ACTIVITY&lt;/a&gt; documentation for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a568013075f535888e2a5eb71b965d1b0804b520" translate="yes" xml:space="preserve">
          <source>If both</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f30475e34b1e035521f6029aa858996bde69253" translate="yes" xml:space="preserve">
          <source>If both &lt;a href=&quot;qml-qtquick-layouts-layout#column-attached-prop&quot;&gt;column&lt;/a&gt; and this property are not set, it is up to the layout to assign a cell to the item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7caf1a78d3f975a6dbdd689cef889189994acfc9" translate="yes" xml:space="preserve">
          <source>If both &lt;a href=&quot;qml-qtquick-layouts-layout#row-attached-prop&quot;&gt;row&lt;/a&gt; and this property are not set, it is up to the layout to assign a cell to the item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9443d82a60ca70bf09415f6f03dae0c01c444e6" translate="yes" xml:space="preserve">
          <source>If both &lt;a href=&quot;qml-qtquick-xmllistmodel-xmllistmodel#source-prop&quot;&gt;source&lt;/a&gt; and &lt;code&gt;xml&lt;/code&gt; are set, &lt;code&gt;xml&lt;/code&gt; is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5fa99ef8643e13ff83c9fd78c75e7d93341bae1" translate="yes" xml:space="preserve">
          <source>If both &lt;code&gt;pointSize&lt;/code&gt; and a &lt;code&gt;pixelSize&lt;/code&gt; are specified, &lt;code&gt;pixelSize&lt;/code&gt; will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92a2e193299c1dfc9da123e8b7f3baf89a3a9f46" translate="yes" xml:space="preserve">
          <source>If both &lt;code&gt;source&lt;/code&gt; and &lt;a href=&quot;xmlprocessing#xml&quot;&gt;xml&lt;/a&gt; are set, &lt;a href=&quot;xmlprocessing#xml&quot;&gt;xml&lt;/a&gt; is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48cba3422ebe21c2f3e1b20527de0ce981afe89b" translate="yes" xml:space="preserve">
          <source>If both a gradient and a color are specified, the gradient will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6dee2c0e7db87ff4604dbd1e8bba854e39931bc" translate="yes" xml:space="preserve">
          <source>If both a relative and absolute control position are specified for a control point's axis, the relative position will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d47b355ba3f79fdb755b7d9110146c1c19ae41bb" translate="yes" xml:space="preserve">
          <source>If both a relative and absolute control position are specified for a single axis, the relative position will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5704bfed00f74d79876951317920586b1cd3d2e" translate="yes" xml:space="preserve">
          <source>If both a relative and absolute end position are specified for a single axis, the relative position will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="253bce1e65a0ba1ee24dad22a5b1e3d698789071" translate="yes" xml:space="preserve">
          <source>If both items have &lt;a href=&quot;qquickitem#activeFocusOnTab-prop&quot;&gt;activeFocusOnTab&lt;/a&gt; set to &lt;code&gt;true&lt;/code&gt;, this will also cause the tab focus order to change, with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98d4c616939c29caadd6b0d1a38d5626a974117d" translate="yes" xml:space="preserve">
          <source>If both optional parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6260562a88c92d5431602f7c1245f1a2e378e88" translate="yes" xml:space="preserve">
          <source>If both output device and file name are specified, the output device will have precedence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f67595af56b043d937c7b884e0ab543ab8eec14a" translate="yes" xml:space="preserve">
          <source>If both the &lt;code&gt;headers&lt;/code&gt; and &lt;code&gt;headerdirs&lt;/code&gt; variables are defined, QDoc will read through both, first &lt;a href=&quot;#headers&quot;&gt;&lt;code&gt;headers&lt;/code&gt;&lt;/a&gt; then &lt;code&gt;headerdirs&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8527572e60f3d7efc620b73175ccae76f5787aca" translate="yes" xml:space="preserve">
          <source>If both the &lt;code&gt;sources&lt;/code&gt; and &lt;code&gt;sourcedirs&lt;/code&gt; variables are defined, QDoc will read through both, first &lt;a href=&quot;#sources&quot;&gt;&lt;code&gt;sources&lt;/code&gt;&lt;/a&gt; then &lt;code&gt;sourcedirs&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0931321758c4b64b3f182223a58a348585653de" translate="yes" xml:space="preserve">
          <source>If both the old model and the old selection model do not have parents, or if their parents are long-lived objects, it may be preferable to call their &lt;a href=&quot;qobject#deleteLater&quot;&gt;deleteLater&lt;/a&gt;() functions to explicitly delete them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bf0bc3c22105940797c0584e03238cb366df382" translate="yes" xml:space="preserve">
          <source>If both the sourceSize.width and sourceSize.height are set the image will be scaled down to fit within the specified size (unless PreserveAspectCrop or PreserveAspectFit are used, then it will be scaled to match the optimal size for cropping/fitting), maintaining the image's aspect ratio. The actual size of the image after scaling is available via &lt;a href=&quot;qml-qtquick-item#implicitWidth-prop&quot;&gt;Item::implicitWidth&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-item#implicitHeight-prop&quot;&gt;Item::implicitHeight&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee8009c658f480c37e71338ebd45f5279f8b9437" translate="yes" xml:space="preserve">
          <source>If both this property and the texture image are unset, a solid gray texture will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f8bcbe62a68562752e51743a4770214a83da2e5" translate="yes" xml:space="preserve">
          <source>If building for iOS, and the &lt;code&gt;.plist&lt;/code&gt; file contains the key &lt;code&gt;NSPhotoLibraryUsageDescription&lt;/code&gt;, qmake will include an additional plugin to the build that adds photo access support (to, e.g., &lt;a href=&quot;qfiledialog#setDirectory&quot;&gt;QFile/QFileDialog&lt;/a&gt;). See Info.plist documentation from Apple for more information regarding this key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2a6b93a0b4674962b55a096d271c406cb506cc2" translate="yes" xml:space="preserve">
          <source>If called before &lt;a href=&quot;qaudioinput#start-1&quot;&gt;start&lt;/a&gt;(), returns platform default value. If called before &lt;a href=&quot;qaudioinput#start-1&quot;&gt;start&lt;/a&gt;() but &lt;a href=&quot;qaudioinput#setBufferSize&quot;&gt;setBufferSize&lt;/a&gt;() was called prior, returns value set by &lt;a href=&quot;qaudioinput#setBufferSize&quot;&gt;setBufferSize&lt;/a&gt;(). If called after &lt;a href=&quot;qaudioinput#start-1&quot;&gt;start&lt;/a&gt;(), returns the actual buffer size being used. This may not be what was set previously by &lt;a href=&quot;qaudioinput#setBufferSize&quot;&gt;setBufferSize&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37e44e6e8d89b15598b8138a15c59083692a37cc" translate="yes" xml:space="preserve">
          <source>If called before &lt;a href=&quot;qaudiooutput#start-1&quot;&gt;start&lt;/a&gt;(), returns platform default value. If called before &lt;a href=&quot;qaudiooutput#start-1&quot;&gt;start&lt;/a&gt;() but &lt;a href=&quot;qaudiooutput#setBufferSize&quot;&gt;setBufferSize&lt;/a&gt;() was called prior, returns value set by &lt;a href=&quot;qaudiooutput#setBufferSize&quot;&gt;setBufferSize&lt;/a&gt;(). If called after &lt;a href=&quot;qaudiooutput#start-1&quot;&gt;start&lt;/a&gt;(), returns the actual buffer size being used. This may not be what was set previously by &lt;a href=&quot;qaudiooutput#setBufferSize&quot;&gt;setBufferSize&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18f7dd3752cccfcac49ea63b3a59784c3c327e83" translate="yes" xml:space="preserve">
          <source>If called from a test function, the QSKIP() macro stops execution of the test without adding a failure to the test log. You can use it to skip tests that wouldn't make sense in the current configuration. The text</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8558b40fb10030c1e232b0bf268311d02d5a134" translate="yes" xml:space="preserve">
          <source>If called from an _data function, the QSKIP() macro will stop execution of the _data function and will prevent execution of the associated test function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d34e76688c65c9ce162332ecbee9c9032f1d3e94" translate="yes" xml:space="preserve">
          <source>If called from initTestCase() or initTestCase_data(), the QSKIP() macro will skip all test and _data functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="183f46fc9b1b88ba99ac513adb7d61b2e00099fa" translate="yes" xml:space="preserve">
          <source>If called from within a slot connected to the &lt;a href=&quot;qiodevice#bytesWritten&quot;&gt;bytesWritten&lt;/a&gt;() signal, &lt;a href=&quot;qiodevice#bytesWritten&quot;&gt;bytesWritten&lt;/a&gt;() will not be reemitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e139ca9778a890c137c6df57887e7a35793ae8a" translate="yes" xml:space="preserve">
          <source>If called from within a slot connected to the &lt;a href=&quot;qiodevice#readyRead&quot;&gt;readyRead&lt;/a&gt;() signal, &lt;a href=&quot;qiodevice#readyRead&quot;&gt;readyRead&lt;/a&gt;() will not be reemitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc24b50ab6bf67aa7599e8ffd4d50d334e39e5eb" translate="yes" xml:space="preserve">
          <source>If called in sequence or recursively, e.g., by one of the arranged items in response to being resized, this function will do nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89213a238a2cb606d0dc4b7fa08fbb887903dcf8" translate="yes" xml:space="preserve">
          <source>If called on an inner transaction, aborting is delegated to the outermost transaction, and subsequently started inner transactions are forced to fail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e9d3c59a7006763cb17f9b3830680c4bb5b8b1c" translate="yes" xml:space="preserve">
          <source>If called on an inner transaction, committing will be postponed until the outermost commitTransaction(), &lt;a href=&quot;qdatastream#rollbackTransaction&quot;&gt;rollbackTransaction&lt;/a&gt;(), or &lt;a href=&quot;qdatastream#abortTransaction&quot;&gt;abortTransaction&lt;/a&gt;() call occurs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe59847e05658b88a2554d62c8377119f971e6db" translate="yes" xml:space="preserve">
          <source>If called on an inner transaction, reverting is delegated to the outermost transaction, and subsequently started inner transactions are forced to fail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bdd968d7bf941187d75253387801beb4a5a5a08" translate="yes" xml:space="preserve">
          <source>If camera supports fixed set of focus points, it should use the nearest supported focus point, and return the actual focus point with &lt;a href=&quot;qcamerafocuscontrol#focusZones&quot;&gt;QCameraFocusControl::focusZones&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4523cc49caedd1e27386aa4aad5149b198264dc3" translate="yes" xml:space="preserve">
          <source>If canFetchMore() returns &lt;code&gt;true&lt;/code&gt;, the &lt;a href=&quot;qabstractitemmodel#fetchMore&quot;&gt;fetchMore&lt;/a&gt;() function should be called. This is the behavior of &lt;a href=&quot;qabstractitemview&quot;&gt;QAbstractItemView&lt;/a&gt;, for example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb2432f76145b3a32c7eaa73f1af081fbccd13ad" translate="yes" xml:space="preserve">
          <source>If cell widget A is replaced with cell widget B, cell widget A will be deleted. For example, in the code snippet below, the &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt; object will be deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63b5455fcd9238b6550e9b8f9097d5ebdc5bf9b8" translate="yes" xml:space="preserve">
          <source>If clipping is enabled, an item will clip its own painting, as well as the painting of its children, to its bounding rectangle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="233920261d9bbbb336bdcaaddceb4834236e40a0" translate="yes" xml:space="preserve">
          <source>If clipping is enabled, an item will clip its own painting, as well as the painting of its children, to its bounding rectangle. If you set clipping during an item's paint operation, remember to re-set it to prevent clipping the rest of your scene.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bb2ac676e0e1fdf49453246baec2e2a0928e2c6" translate="yes" xml:space="preserve">
          <source>If commands were undone before</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fe851080b97c5f4762ebac99249309033aa4fd2" translate="yes" xml:space="preserve">
          <source>If creation of the texture view fails this function will return 0. If the function succeeds it will return a pointer to a new &lt;a href=&quot;qopengltexture&quot;&gt;QOpenGLTexture&lt;/a&gt; object that will return &lt;code&gt;true&lt;/code&gt; from its &lt;a href=&quot;qopengltexture#isTextureView&quot;&gt;isTextureView&lt;/a&gt;() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15a6dd0be52c74759044f271545514b3d4ff79e5" translate="yes" xml:space="preserve">
          <source>If custom layouts want special behaviour they can ignore to use this function, and implement their own behaviour.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e6b5606e3bc475a9f7ca2496b3c81f94c21323f" translate="yes" xml:space="preserve">
          <source>If defined, a link to the example project directory is generated at the end of each example documentation page. The &lt;code&gt;url.examples&lt;/code&gt; variable refers to the root directory of the examples related to this project; it can be a link to an online repository (starting with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f00db5bc05b155be79e4a032099423e8695f6641" translate="yes" xml:space="preserve">
          <source>If defined, the value of this variable is used as a path to be prepended to the built shared library's &lt;code&gt;SONAME&lt;/code&gt; identifier. The &lt;code&gt;SONAME&lt;/code&gt; is the identifier that the dynamic linker will later use to reference the library. In general, this reference may be a library name or full library path. On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, iOS, tvOS, and watchOS, the path may be specified relatively using the following placeholders:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0460837305394b382aee0d78c5a905162273723e" translate="yes" xml:space="preserve">
          <source>If designer is embedded in another program, one could to provide its own settings manager. The manager is used by the components of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4a7e098c11504888295fcb496685cf40f86f523" translate="yes" xml:space="preserve">
          <source>If desired, the HLSL source code can be placed directly into the QML source, similarly to how its done with GLSL. The only difference in this case is the entry point name, which must be &lt;code&gt;main&lt;/code&gt; when using inline source strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21a29793a1e481ee91c77bc89f3649cf22bff43c" translate="yes" xml:space="preserve">
          <source>If double quotation marks are used to group the words, the search engine will search for an exact match of the quoted phrase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ba53f98f6cd9baf7b11003f174e72ddb40a5ddc" translate="yes" xml:space="preserve">
          <source>If each &lt;a href=&quot;qcborvalue&quot;&gt;QCborValue&lt;/a&gt; contains an array or map, the comparison is recursive to elements contained in them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5690484784958a51c8468b4c26e15de68622d1c8" translate="yes" xml:space="preserve">
          <source>If editing operations are not grouped, the document automatically records the individual operations so that they can be undone later. Grouping operations into larger packages can make editing more efficient both for the user and for the application, but care has to be taken not to group too many operations together as the user may want find-grained control over the undo process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09110ceb312edde4d747bc8c112a4b117106a1ca" translate="yes" xml:space="preserve">
          <source>If either</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="824808c5f50489a3854e088aac4ea750131e9ce9" translate="yes" xml:space="preserve">
          <source>If either index is out of range, an empty list is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c873cf0cd329238f4d2e1047a434d6bd4f637ec3" translate="yes" xml:space="preserve">
          <source>If either start or end is out of range, the selection is not changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b44eedd7e90480e54638ad99bec6e704d7f97b27" translate="yes" xml:space="preserve">
          <source>If either the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bcb0dec67f4b8a00c90374520bd4790f519760a" translate="yes" xml:space="preserve">
          <source>If elements refer to a name which does not have an explicit &lt;a href=&quot;qml-qtquick-particles-particlegroup&quot;&gt;ParticleGroup&lt;/a&gt; created, it will work normally (with no transitions specified for the group). If you do not need to assign duration based transitions to a group, you do not need to create a &lt;a href=&quot;qml-qtquick-particles-particlegroup&quot;&gt;ParticleGroup&lt;/a&gt; with that name (although you may).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80b9e83b5fda35c12842e123c0baed62f36113f9" translate="yes" xml:space="preserve">
          <source>If empty, it will affect all particles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f7dcb6c7582b13f59269a4424be94408ae5d3dd" translate="yes" xml:space="preserve">
          <source>If empty, it will paint the default particle group (&quot;&quot;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e97f704c286981ec3e01b97a7fc6201f935ca4b7" translate="yes" xml:space="preserve">
          <source>If empty, the option doesn't take a value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="326d044e9da46e7d58e32b15f63af0dee70a5571" translate="yes" xml:space="preserve">
          <source>If enabled (the default) the combo box draws itself inside a frame, otherwise the combo box draws itself without any frame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6cb54b4804477cecb3c339696ff21909a688745" translate="yes" xml:space="preserve">
          <source>If enabled (the default) the line edit draws itself inside a frame, otherwise the line edit draws itself without any frame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0a1b99081b799c704c4cb0911e3ecc5c2bd7bd3" translate="yes" xml:space="preserve">
          <source>If enabled (the default) the spin box draws itself inside a frame, otherwise the spin box draws itself without any frame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6491ab74e3d47aa3b1024aef291cd80e2282b350" translate="yes" xml:space="preserve">
          <source>If enabled is set to false, this affector will not affect any particles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a098892864d06ca27e7337c6eb9e9dfb6793bbe9" translate="yes" xml:space="preserve">
          <source>If enabled the spin box will increase/decrease the value faster the longer you hold the button down.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf57ecbab79c1c4ddced20a0e915080a1730dce7" translate="yes" xml:space="preserve">
          <source>If enabled, CharData that consist of only whitespace characters are reported using &lt;a href=&quot;qxmlcontenthandler#characters&quot;&gt;QXmlContentHandler::characters&lt;/a&gt;(). If disabled, whitespace is silently discarded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48a79ebe3d3712c8978448557ae9b90d9889a8f5" translate="yes" xml:space="preserve">
          <source>If enabled, namespaces are reported to the content handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b05bf74978662849358112f902c46830e9a6229" translate="yes" xml:space="preserve">
          <source>If enabled, the arrow can be oriented at any angle on the dial. If disabled, the arrow will be restricted to the upper part of the dial; if it is rotated into the space at the bottom of the dial, it will be clamped to the closest end of the valid range of values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91ef754c2e005334e348aad6fd5dd87cb6936729" translate="yes" xml:space="preserve">
          <source>If enabled, the line edit displays a trailing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="438f6b0808f198b8f2d93877eae63f1d1a5ea5a9" translate="yes" xml:space="preserve">
          <source>If enabled, the original prefixed names and attributes used for namespace declarations are reported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceb02f7779c13d5427483107c09782bc8ae39641" translate="yes" xml:space="preserve">
          <source>If enabled, the parser reports QXmlContentHandler::startEntity() and QXmlContentHandler::endEntity() events, so character data might be reported in chunks. If disabled, the parser does not report these events, but silently substitutes the entities, and reports the character data in one chunk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9724288b6865038e90860c82b30b700ed144152" translate="yes" xml:space="preserve">
          <source>If enabled, this item will be destroyed when the &lt;code&gt;trace&lt;/code&gt; object is destroyed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="651aae97b71b50a5b7a22265766a20a9e7d1926a" translate="yes" xml:space="preserve">
          <source>If enabled, this property will cause Qt to fill the background of the widget before invoking the &lt;a href=&quot;qgraphicswidget#paint&quot;&gt;paint&lt;/a&gt;() method. The color used is defined by the &lt;a href=&quot;qpalette#ColorRole-enum&quot;&gt;QPalette::Window&lt;/a&gt; color role from the widget's &lt;a href=&quot;qpalette&quot;&gt;palette&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b360b157a490f504805c3d749caf596e38ba00ef" translate="yes" xml:space="preserve">
          <source>If enabled, this property will cause Qt to fill the background of the widget before invoking the paint event. The color used is defined by the &lt;a href=&quot;qpalette#ColorRole-enum&quot;&gt;QPalette::Window&lt;/a&gt; color role from the widget's &lt;a href=&quot;qpalette&quot;&gt;palette&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e531ace5ecac8ac32fb317304e1e41610445300" translate="yes" xml:space="preserve">
          <source>If enabled, this view is set to allow scene interaction. Otherwise, this view will not allow interaction, and any mouse or key events are ignored (i.e., it will act as a read-only view).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f77247fd4ef852bcf3177e0d80de4ac6ca19746f" translate="yes" xml:space="preserve">
          <source>If events are available, this function returns after processing them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4a0f66fa19937fe49520879a4605f0ac1431ad8" translate="yes" xml:space="preserve">
          <source>If exclusive is true, only one checkable action in the action group can ever be active at any time. If the user chooses another checkable action in the group, the one they chose becomes active and the one that was active becomes inactive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad318f678769f2ad5d9e99ca057dc269a4278a59" translate="yes" xml:space="preserve">
          <source>If explicit is set to true, any potential bindings will be interpreted as once-off assignments that occur when the state is entered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f5ac591b3e5e72040e1befcb3cf837bfdf4ccc5" translate="yes" xml:space="preserve">
          <source>If false is returned, a system error has occurred. Call &lt;a href=&quot;qsystemsemaphore#error&quot;&gt;error&lt;/a&gt;() to get a value of &lt;a href=&quot;qsystemsemaphore#SystemSemaphoreError-enum&quot;&gt;QSystemSemaphore::SystemSemaphoreError&lt;/a&gt; that indicates which error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25e21d5f12e9f077aefaedb0a6ac624f3eec1d2c" translate="yes" xml:space="preserve">
          <source>If false(default), then the value of magnitude and &lt;a href=&quot;qml-qtquick-particles-targetdirection#magnitudeVariation-prop&quot;&gt;magnitudeVariation&lt;/a&gt; shall be interpreted as pixels per second.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="524d4951e2a379db6da49840729d8979b98cf92b" translate="yes" xml:space="preserve">
          <source>If fill is true the ellipse is filled; otherwise it is just a border.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9298d9c66595459b3fa45b9366d7657a9336a0ac" translate="yes" xml:space="preserve">
          <source>If filterMode is set to &lt;a href=&quot;qt#MatchFlag-enum&quot;&gt;Qt::MatchStartsWith&lt;/a&gt;, only those entries that start with the typed characters will be displayed. &lt;a href=&quot;qt#MatchFlag-enum&quot;&gt;Qt::MatchContains&lt;/a&gt; will display the entries that contain the typed characters, and &lt;a href=&quot;qt#MatchFlag-enum&quot;&gt;Qt::MatchEndsWith&lt;/a&gt; the ones that end with the typed characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f49e2c1b609e5eaa80023563550e2b8f59f55112" translate="yes" xml:space="preserve">
          <source>If five items were inserted in succession at index 0, the effect would be this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3f9affb9c37b214f1f830a80a31bc67283c8bec" translate="yes" xml:space="preserve">
          <source>If focus has never been in this window before and you know where focus should start out, call &lt;a href=&quot;qwidget#setFocus-1&quot;&gt;QWidget::setFocus&lt;/a&gt;() on the widget which should receive focus before you call &lt;a href=&quot;qwidget#show&quot;&gt;QWidget::show&lt;/a&gt;() it. If you don't, Qt will pick a suitable widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e83aa17d9043e9e08ef5ec141bb7bff9d9d20a9" translate="yes" xml:space="preserve">
          <source>If for some reason we didn't want this restriction, we can set boundingItem to &lt;code&gt;null&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="489bd4e442ceda8b38a63f0f0bb469de03df364d" translate="yes" xml:space="preserve">
          <source>If foreign windows are not supported or embedding the native window failed in the platform plugin, this function returns &lt;code&gt;nullptr&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad93adaaadb5f944d2de6bc479b69de5a7cb8372" translate="yes" xml:space="preserve">
          <source>If frameRate is valid then it will be used to calculate the duration of the frames. If not, and &lt;a href=&quot;qml-qtquick-sprite#frameDuration-prop&quot;&gt;frameDuration&lt;/a&gt; is valid , then &lt;a href=&quot;qml-qtquick-sprite#frameDuration-prop&quot;&gt;frameDuration&lt;/a&gt; will be used. Otherwise duration is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd93e4035e10f5b28c4f801b4394ba95f2c8c303" translate="yes" xml:space="preserve">
          <source>If frameSync is set to true, it overrides all of duration, &lt;a href=&quot;qml-qtquick-sprite#frameRate-prop&quot;&gt;frameRate&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-sprite#frameDuration-prop&quot;&gt;frameDuration&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="087f8c354fbf5c1718977be473c15c493eaf1403" translate="yes" xml:space="preserve">
          <source>If frameSync is set to true, it overrides both &lt;a href=&quot;qml-qtquick-animatedsprite#frameRate-prop&quot;&gt;frameRate&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-animatedsprite#frameDuration-prop&quot;&gt;frameDuration&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caa623c12faab06f930b15dcc56dbda4464ac8fb" translate="yes" xml:space="preserve">
          <source>If full page printing is enabled, the origin of the &lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt;'s coordinate system coincides with the top-left corner of the paper itself. In this case, the &lt;a href=&quot;qpaintdevice#PaintDeviceMetric-enum&quot;&gt;device metrics&lt;/a&gt; will report the exact same dimensions as indicated by &lt;a href=&quot;qprinter#PaperSize-typedef&quot;&gt;PaperSize&lt;/a&gt;. It may not be possible to print on the entire physical page because of the printer's margins, so the application must account for the margins itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2b03f5296ad1ca6d9948fba85fcce2fe447b0aa" translate="yes" xml:space="preserve">
          <source>If height and width are not explicitly set, Text will attempt to determine how much room is needed and set it accordingly. Unless &lt;a href=&quot;qml-qtquick-text#wrapMode-prop&quot;&gt;wrapMode&lt;/a&gt; is set, it will always prefer width to height (all text will be placed on a single line).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="752c79b5d7a6ef8ed5608b45205926078dedb0c3" translate="yes" xml:space="preserve">
          <source>If in &lt;a href=&quot;qpagelayout#Mode-enum&quot;&gt;FullPageMode&lt;/a&gt; then any margin values will be accepted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04d9a28f71117c8b56e8006eac2d3369ac808edc" translate="yes" xml:space="preserve">
          <source>If in Full Page mode then no check is performed on the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e7c86e601fbd531b70dd067a2103d7d22679226" translate="yes" xml:space="preserve">
          <source>If in the default &lt;a href=&quot;qpagelayout#Mode-enum&quot;&gt;StandardMode&lt;/a&gt; then all the new margins must fall between the minimum margins set and the maximum margins allowed by the page size, otherwise the margins will not be set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0825d6bc190bcbdd46ac3622254e1a8a83a83775" translate="yes" xml:space="preserve">
          <source>If in the default &lt;a href=&quot;qpagelayout#Mode-enum&quot;&gt;StandardMode&lt;/a&gt; then the new margin must fall between the minimum margin set and the maximum margin allowed by the page size, otherwise the margin will not be set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7a17b4ce6fd6122be637ad01c338d5db08a094e" translate="yes" xml:space="preserve">
          <source>If indent is negative, or if no indent has been set, the label computes the effective indent as follows: If &lt;a href=&quot;qframe#frameWidth-prop&quot;&gt;frameWidth&lt;/a&gt;() is 0, the effective indent becomes 0. If &lt;a href=&quot;qframe#frameWidth-prop&quot;&gt;frameWidth&lt;/a&gt;() is greater than 0, the effective indent becomes half the width of the &quot;x&quot; character of the widget's current &lt;a href=&quot;qwidget#font-prop&quot;&gt;font&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a74dbf6223cb36875baaf529cea1d95cb5c5910" translate="yes" xml:space="preserve">
          <source>If index widget A is replaced with index widget B, index widget A will be deleted. For example, in the code snippet below, the &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt; object will be deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9d0b629c7c94b66d85e069f2f23bb5e6638a726" translate="yes" xml:space="preserve">
          <source>If inside the handler you decide that you can't open the requested URL, you can just call &lt;a href=&quot;qdesktopservices#openUrl&quot;&gt;QDesktopServices::openUrl&lt;/a&gt;() again with the same argument, and it will try to open the URL using the appropriate mechanism for the user's desktop environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90d9dec32e7a0b38edcea370d2b4f5ce65487520" translate="yes" xml:space="preserve">
          <source>If instead the property had a type of &lt;a href=&quot;qqmlscriptstring&quot;&gt;QQmlScriptString&lt;/a&gt;, the script itself --</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03e04ad01adf1eb2dcbf376fc5b5ff9895ccc1d7" translate="yes" xml:space="preserve">
          <source>If instead you give the two MouseAreas a parent-child relationship, moving the mouse into &lt;code&gt;mouseArea2&lt;/code&gt; from &lt;code&gt;mouseArea1&lt;/code&gt; will &lt;b&gt;not&lt;/b&gt; cause &lt;code&gt;mouseArea1&lt;/code&gt; to emit &lt;code&gt;exited&lt;/code&gt;. Instead, they will both be considered to be simultaneously hovered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db679a0ebceefbdea2e6e16362366e0950d47fb0" translate="yes" xml:space="preserve">
          <source>If it does provide such objects, then for a given entity reference node, it may be that there is no entity node representing the referenced entity; but if such an entity exists, then the child list of the entity reference node is the same as that of the entity node. As with the entity node, all descendants of the entity reference are read-only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e1f7139a60c70853332d7f705fbcba6499c7153" translate="yes" xml:space="preserve">
          <source>If it doesn't, QDoc will continue looking for a file called</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="843bb53d66c31f95e49a3edf765fc26a2caacf67" translate="yes" xml:space="preserve">
          <source>If it has focus, a &lt;a href=&quot;qgraphicsitem#focusOutEvent&quot;&gt;focus out event&lt;/a&gt; is sent to this item to tell it that it is about to lose the focus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46f7f5ea9acffa72cc5c1a24a339b1e02dff7854" translate="yes" xml:space="preserve">
          <source>If it is &lt;code&gt;true&lt;/code&gt;, the value of &lt;code&gt;0.0&lt;/code&gt; means that the bars are placed side-to-side, &lt;code&gt;1.0&lt;/code&gt; means that a space as wide as the thickness of one bar is left between the bars, and so on. Preset to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4c87aa93b42f22216d9f5c815c1721e843df7a1" translate="yes" xml:space="preserve">
          <source>If it is declared within one Item but is assigned a different &lt;a href=&quot;qmake-variable-reference#target&quot;&gt;target&lt;/a&gt;, it handles events within the bounds of the outer Item but manipulates the &lt;code&gt;target&lt;/code&gt; Item instead:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="573cb9416b457f477cc5cfd075df22daa55b30b5" translate="yes" xml:space="preserve">
          <source>If it is declared within one Item but is assigned a different &lt;a href=&quot;qml-qtquick-draghandler#target-prop&quot;&gt;target&lt;/a&gt;, then it handles events within the bounds of the &lt;a href=&quot;qml-qtquick-draghandler#parent-prop&quot;&gt;parent&lt;/a&gt; Item but manipulates the &lt;code&gt;target&lt;/code&gt; Item instead:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23099486f3d02deae5e5447f5d4c101f6fa4636c" translate="yes" xml:space="preserve">
          <source>If it is desired to have a texture size different from that of the item, this is possible using &lt;a href=&quot;qml-qtquick-item#layer.textureSize-prop&quot;&gt;layer.textureSize&lt;/a&gt;. To render only a section of the item into the texture, use &lt;a href=&quot;qml-qtquick-item#layer.sourceRect-prop&quot;&gt;layer.sourceRect&lt;/a&gt;. It is also possible to specify &lt;a href=&quot;qml-qtquick-item#layer.sourceRect-prop&quot;&gt;layer.sourceRect&lt;/a&gt; so it extends beyond the bounds of the item. In this case, the exterior will be padded with transparent pixels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41bf08bd50af6794b503f14b85f478eee39f0cd9" translate="yes" xml:space="preserve">
          <source>If it is known that many items will have children, reimplementing &lt;a href=&quot;qabstractitemmodel#hasChildren&quot;&gt;hasChildren()&lt;/a&gt; to unconditionally return &lt;code&gt;true&lt;/code&gt; is sometimes a useful approach to take. This ensures that each item can be later examined for children while making initial population of model data as fast as possible. The only disadvantage is that items without children may be displayed incorrectly in some views until the user attempts to view the non-existent child items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45370bf659ab830f281a0d4836bf371f4baac211" translate="yes" xml:space="preserve">
          <source>If it is necessary to block until the value is changed, something like the following is necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="015fd34faa6aaebbeb3d726618c36e7e145b09b0" translate="yes" xml:space="preserve">
          <source>If it is placed in a .qml file whose name begins with a capital letter, the file is recognized by the engine as a definition of a QML type. The top-level object declaration encapsulates the object tree that will be instantiated by the type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e92ced4a9894e3b2b70cb29796041c7d3a61b7f5" translate="yes" xml:space="preserve">
          <source>If it is possible to return to the &lt;code&gt;goalSprite&lt;/code&gt; from the starting point of the &lt;code&gt;goalSprite&lt;/code&gt;, it will continue to do so until &lt;code&gt;goalSprite&lt;/code&gt; is set to &lt;code&gt;&quot;&quot;&lt;/code&gt; or an unreachable state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4f91762cb0f6bbc905fa00c2d75f90062c511e4" translate="yes" xml:space="preserve">
          <source>If it is the current tab.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27a90f96a8597d15403028dbfc419b4ffe5462fb" translate="yes" xml:space="preserve">
          <source>If it isn't connected, you need to call the constructor again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14ed2c99b53f0ea44395392c34d1009c25c22378" translate="yes" xml:space="preserve">
          <source>If it's impossible to stay within the given bounds, it prints outside.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e4d1291bb053f42fe1f4cccc5479554b48aa1a3" translate="yes" xml:space="preserve">
          <source>If it's the first time the static text is drawn, or if the static text, or the painter's font has been altered since the last time it was drawn, the text's layout has to be recalculated. On some paint engines, changing the matrix of the painter will also cause the layout to be recalculated. In particular, this will happen for any engine except for the OpenGL2 paint engine. Recalculating the layout will impose an overhead on the &lt;a href=&quot;qpainter#drawStaticText&quot;&gt;QPainter::drawStaticText&lt;/a&gt;() call where it occurs. To avoid this overhead in the paint event, you can call &lt;a href=&quot;qstatictext#prepare&quot;&gt;prepare&lt;/a&gt;() ahead of time to ensure that the layout is calculated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec0dbca65a07f6d508b521bf9c1afa091ab96585" translate="yes" xml:space="preserve">
          <source>If item is not &lt;code&gt;nullptr&lt;/code&gt;, and the scene does not currently have focus (i.e., &lt;a href=&quot;qgraphicsscene#hasFocus&quot;&gt;hasFocus&lt;/a&gt;() returns &lt;code&gt;false&lt;/code&gt;), this function will call &lt;a href=&quot;qgraphicsscene#setFocus&quot;&gt;setFocus&lt;/a&gt;() automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baf10a3898fa77a9ac174d4ea8516df31b22de4b" translate="yes" xml:space="preserve">
          <source>If its value is &lt;code&gt;true&lt;/code&gt;, the selected data will overwrite the existing item data when dropped, while moving the data will clear the item. If its value is &lt;code&gt;false&lt;/code&gt;, the selected data will be inserted as a new item when the data is dropped. When the data is moved, the item is removed as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="011098c87bcc93b317a2811c27a5272cf7db4864" translate="yes" xml:space="preserve">
          <source>If keyboard tracking is disabled, the spinbox doesn't emit the valueChanged() signal while typing. It emits the signal later, when the return key is pressed, when keyboard focus is lost, or when other spinbox functionality is used, e.g. pressing an arrow key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da12e9d51ed8571bf99d31dbf5460632d72c37a8" translate="yes" xml:space="preserve">
          <source>If keyboard tracking is enabled (the default), the spinbox emits the valueChanged() signal while the new value is being entered from the keyboard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a72264bee2c874aab7eab90c5006e47d00fe5c50" translate="yes" xml:space="preserve">
          <source>If left empty, a default value will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca8c569e6bee33b1993fa6f784dfc73fb2df8590" translate="yes" xml:space="preserve">
          <source>If limit is -1 the entire result set will be returned, otherwise at most limit results will be returned. The limit and &lt;a href=&quot;qml-qtlocation-geocodemodel#offset-prop&quot;&gt;offset&lt;/a&gt; results can be used together to implement paging.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac8df27abc4a1eb214010aee8fa05a399a36394a" translate="yes" xml:space="preserve">
          <source>If list contains too few values, only width of the rest of the columns will not be modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="207b53854ec6c85c1e32ee36ff5f9a947186160c" translate="yes" xml:space="preserve">
          <source>If listening is successful, we connect the `newConnection()` signal to the slot `onNewConnection()`. The `newConnection()` signal will be thrown whenever a new WebSocket client is connected to our server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b543a966b55cf0735b81c5e5c90487c4a956756a" translate="yes" xml:space="preserve">
          <source>If logging have been started in &lt;a href=&quot;qopengldebuglogger#LoggingMode-enum&quot;&gt;SynchronousLogging&lt;/a&gt; mode, OpenGL guarantees that this signal will be emitted from the same thread the &lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; has been bound to, and no concurrent invocations will ever happen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65acef6dd5fb75c2c8b078598b5192c5d69c44c8" translate="yes" xml:space="preserve">
          <source>If matching the same regular expression against the subject string leads to a complete match, it is reported as usual:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60a223a3fabbda444b793a4028f97075342c4bdc" translate="yes" xml:space="preserve">
          <source>If meshName is a plain string, then only the sub-mesh matching that name, if present, will be loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f443e618422b1eca1a552cb9d6195deaefdcb144" translate="yes" xml:space="preserve">
          <source>If meshName is a regular expression, than all sub-meshes matching the expression will be loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81c3090e5be1e2a0c7aba73835a02b8d6386beef" translate="yes" xml:space="preserve">
          <source>If meshName is empty (the default), then the entire mesh is loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15b92b86af540c5f8ca22554a15f087e86aaa78c" translate="yes" xml:space="preserve">
          <source>If minimum and maximum both are set to 0, the bar shows a busy indicator instead of a percentage of steps. This is useful, for example, when using QNetworkAccessManager to download items when they are unable to determine the size of the item being downloaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="425ebeb37eb0fc7e2f636db06e164582e4756bcd" translate="yes" xml:space="preserve">
          <source>If minimum and maximum both are set to &lt;code&gt;0&lt;/code&gt;, the indicator shows up as a busy (indeterminate) indicator instead of a percentage of steps. This is useful when it is not possible to determine the number of steps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1455d0739f932f6a2768e24e17c501e325ee10d" translate="yes" xml:space="preserve">
          <source>If minimum size has not been explicitly specified on an item, the size is set to &lt;code&gt;0&lt;/code&gt;. If maximum size has not been explicitly specified on an item, the size is set to &lt;code&gt;Number.POSITIVE_INFINITY&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bc2275b20b1e44614c16314462c8ee38416e26e" translate="yes" xml:space="preserve">
          <source>If minimumPointCount and maximumPointCount are set to values larger than 1, the user will need to drag that many fingers in the same direction to start dragging. A multi-finger drag gesture can be detected independently of both a (default) single-finger &lt;a href=&quot;qml-qtquick-draghandler&quot;&gt;DragHandler&lt;/a&gt; and a &lt;a href=&quot;qml-qtquick-pinchhandler&quot;&gt;PinchHandler&lt;/a&gt; on the same Item, and thus can be used to adjust some other feature independently of the usual pinch behavior: for example adjust a tilt transformation, or adjust some other numeric value, if the &lt;code&gt;target&lt;/code&gt; is set to null. But if the &lt;code&gt;target&lt;/code&gt; is an Item, &lt;code&gt;centroid&lt;/code&gt; is the point at which the drag begins and to which the &lt;code&gt;target&lt;/code&gt; will be moved (subject to constraints).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77c1a7be2686b9433ce0869634c4f0505320a39c" translate="yes" xml:space="preserve">
          <source>If mipmapping is enabled, additional memory will be allocated for the mipmap levels. The mipmap levels can be updated by binding the texture and calling glGenerateMipmap(). Mipmapping cannot be enabled for multisampled framebuffer objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a2d6ba9952c87349b5460ea11523fd9b6f10a79" translate="yes" xml:space="preserve">
          <source>If mirrored is set to true, this will be mirrored along the y axis. The line will then go from (0,height) to (width, 0).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eb2424144d205b413d414763ac5a3328133242d" translate="yes" xml:space="preserve">
          <source>If more than one cookie with the same name is found, but with differing paths, the one with longer path is returned before the one with shorter path. In other words, this function returns cookies sorted decreasingly by path length.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3f71d31792abac8e48f66b535b421fc49a06d11" translate="yes" xml:space="preserve">
          <source>If more than one default state has to be entered, or if the transition to the default state(s) has to be acted upon, the &lt;a href=&quot;qhistorystate#defaultTransition&quot;&gt;defaultTransition&lt;/a&gt; should be set instead. Note that the eventTest() method of that transition will never be called: the selection and execution of the transition is done automatically when entering the history state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0117eafaafa3e61e03276ef033374fec97523c5a" translate="yes" xml:space="preserve">
          <source>If more than one prefix is currently mapped to the same URI, this function makes an arbitrary selection; if you want all of the prefixes, use &lt;a href=&quot;qxmlnamespacesupport#prefixes&quot;&gt;prefixes&lt;/a&gt;() instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="513c35017c1c35fb6fc60a823b16e03f36e12678" translate="yes" xml:space="preserve">
          <source>If mouse tracking is disabled (the default), the widget only receives mouse move events when at least one mouse button is pressed while the mouse is being moved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1ce62afa7de1b0470fefdd3315bd8b581d8e49b" translate="yes" xml:space="preserve">
          <source>If mouse tracking is enabled, the widget receives mouse move events even if no buttons are pressed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad331d3424b6858834e3e2d57d7d58c589ccdb8c" translate="yes" xml:space="preserve">
          <source>If mouse tracking is switched off, mouse move events only occur if a mouse button is pressed while the mouse is being moved. If mouse tracking is switched on, mouse move events occur even if no mouse button is pressed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18bc5d30a968cd20446b763c753bbd4d1c15f8ef" translate="yes" xml:space="preserve">
          <source>If msec is -1, this function will not time out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7264eb8c26b142470dad57a7df3ebf2c568772fd" translate="yes" xml:space="preserve">
          <source>If msecs is -1, this function will not time out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f65d7c4900de1b33a2ff517396af6ffb37a8a71c" translate="yes" xml:space="preserve">
          <source>If multiple Transitions are specified, only a single (best-matching) Transition will be applied for any particular state change. In the example above, when changing to &lt;code&gt;state1&lt;/code&gt;, the first transition will be used, rather than the more generic second transition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e71053cd9a34a8d7dae361a31b39c6b32ccbd2ce" translate="yes" xml:space="preserve">
          <source>If multiple cameras are available, you can select which one to use by setting the &lt;a href=&quot;qml-qtmultimedia-camera#deviceId-prop&quot;&gt;deviceId&lt;/a&gt; property to a value from &lt;a href=&quot;qml-qtmultimedia-qtmultimedia#availableCameras-prop&quot;&gt;QtMultimedia.availableCameras&lt;/a&gt;. On a mobile device, you can conveniently switch between front-facing and back-facing cameras by setting the &lt;a href=&quot;qml-qtmultimedia-camera#position-prop&quot;&gt;position&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3a09e6f0ad50a93f9e3376b1516b8e64d799ae2" translate="yes" xml:space="preserve">
          <source>If multiple event filters are installed on a single object, the filter that was installed last is activated first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a0ef4bd001de07e1f7bad0f9b9cc22132099554" translate="yes" xml:space="preserve">
          <source>If multiple event filters are installed, the filter that was installed last is activated first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad36e93e5d25ab836e1568b8689c13cd8b1146e3" translate="yes" xml:space="preserve">
          <source>If multiple items are added in rapid succession, without waiting for a previous transition to finish, this is the result:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37f0a7f92c02454488c20ce169f8e4226cf32982" translate="yes" xml:space="preserve">
          <source>If multiple key roles are specified, the model only adds and reload items with a combined value of all key roles that is not already present in the model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b750037b8a94f295f030e92dd8eead20b86c6b58" translate="yes" xml:space="preserve">
          <source>If multiple meta-data elements are changed, metaDataChanged(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;key, const &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; &amp;amp;value) signal is emitted for each of them with metaDataChanged() changed emitted once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b93c0eb6db0938f9830e7176ab95e2f55dcd11f" translate="yes" xml:space="preserve">
          <source>If multiple partial matches are found when matching (but no complete match), then the &lt;a href=&quot;qregularexpressionmatch&quot;&gt;QRegularExpressionMatch&lt;/a&gt; object will report the first one that is found. For instance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27cfff9d5e4e97835b833636ffbb4cc643e4b03b" translate="yes" xml:space="preserve">
          <source>If multiple plugins have the same</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6a7fd012b7541efe97c691252b5c323d4a7a361" translate="yes" xml:space="preserve">
          <source>If multiple results are returned by the reverse geocoding service backend they will be provided in order of specificity. This normally occurs if the backend is configured to reverse geocode across multiple levels of detail. As an example, some services will return address and coordinate pairs for the street address, the city, the state and the country.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff31a0ad2d120e330c8b1484c6f7d1819120e4f5" translate="yes" xml:space="preserve">
          <source>If multiple states are specified, all must be descendants of the same parallel group state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cb4dfbfb1d14a53e3f41391b01c9d14285e4259" translate="yes" xml:space="preserve">
          <source>If multiple states are specified, they all must be descendants of the same parallel group state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d965f6483df4f213e1999961d6821117c44ade5" translate="yes" xml:space="preserve">
          <source>If multiple states in a group have &lt;code&gt;when&lt;/code&gt; clauses that evaluate to &lt;code&gt;true&lt;/code&gt; at the same time, the first matching state will be applied. For example, in the following snippet &lt;code&gt;state1&lt;/code&gt; will always be selected rather than &lt;code&gt;state2&lt;/code&gt; when sharedCondition becomes &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba629f19b30c661d39caab6cf1051f8d3500afa4" translate="yes" xml:space="preserve">
          <source>If multiple timers are running, the &lt;a href=&quot;qtimerevent#timerId&quot;&gt;QTimerEvent::timerId&lt;/a&gt;() can be used to find out which timer was activated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="353b70a45cc64ad593eb9a468039e76f0201acf9" translate="yes" xml:space="preserve">
          <source>If necessary, &lt;code&gt;eglfs&lt;/code&gt; can be configured using the following environment variables:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d05cb1fddcd9820af0724cde2396d014e2fa83a2" translate="yes" xml:space="preserve">
          <source>If necessary, eglfs can be configured via environment variables:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c480c58072fec9e884a18d45555ce6c0be06772c" translate="yes" xml:space="preserve">
          <source>If needed the VAO can be temporarily unbound with the &lt;a href=&quot;qopenglvertexarrayobject-binder#release&quot;&gt;release&lt;/a&gt;() function and bound once more with &lt;a href=&quot;qopenglvertexarrayobject-binder#rebind&quot;&gt;rebind&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54ae2cc094db037d7f6f335146b61cf2063367cf" translate="yes" xml:space="preserve">
          <source>If needed, logical OR can be expressed using the comma operator:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaf7400dfb8ccdb44d01561e33e0944211ea0f17" translate="yes" xml:space="preserve">
          <source>If needed, the renderer can be completely replaced using the internal scene graph back-end API. This is mostly interesting for platform vendors who wish to take advantage of non-standard hardware features. For the majority of use cases, the default renderer will be sufficient.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eece5baf4dc90b9998581ff0556eb7c1bc4ad9ee" translate="yes" xml:space="preserve">
          <source>If neither a true RNG nor a cryptographically secure PRNG are required, applications should instead use PRNG engines like &lt;a href=&quot;qrandomgenerator&quot;&gt;QRandomGenerator&lt;/a&gt;'s deterministic mode and those from the C++ Standard Library. &lt;a href=&quot;qrandomgenerator#system&quot;&gt;QRandomGenerator::system&lt;/a&gt;() can be used to seed those.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9778f4776967dc160704ed966263ffd2a5be1eaf" translate="yes" xml:space="preserve">
          <source>If neither the language nor the country are found, &lt;a href=&quot;qlocale&quot;&gt;QLocale&lt;/a&gt; defaults to the default locale (see &lt;a href=&quot;qlocale#setDefault&quot;&gt;setDefault&lt;/a&gt;()).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53350c2c3c8b28a4d3707eb2611cd38db930ba21" translate="yes" xml:space="preserve">
          <source>If nmeaSource has been set for a &lt;a href=&quot;qml-qtpositioning-positionsource&quot;&gt;PositionSource&lt;/a&gt; object, there is no way to revert back to non-file sources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46d15914a8966b2144fb307d96a3896b83eea8f4" translate="yes" xml:space="preserve">
          <source>If no</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a88b25b6bd000adebc50dac5dd33ca8b0912150d" translate="yes" xml:space="preserve">
          <source>If no &lt;a href=&quot;q3dcamera#CameraPreset-enum&quot;&gt;CameraPreset&lt;/a&gt; value is set, &lt;a href=&quot;q3dcamera#CameraPreset-enum&quot;&gt;CameraPresetNone&lt;/a&gt; is used by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20cd30094dd3fc0d717e196262001389df33a28d" translate="yes" xml:space="preserve">
          <source>If no &lt;a href=&quot;qml-qtquick-intvalidator#locale-prop&quot;&gt;locale&lt;/a&gt; is set &lt;a href=&quot;qml-qtquick-intvalidator&quot;&gt;IntValidator&lt;/a&gt; uses the &lt;a href=&quot;qlocale#setDefault&quot;&gt;default locale&lt;/a&gt; to interpret the number and will accept locale specific digits, group separators, and positive and negative signs. In addition, &lt;a href=&quot;qml-qtquick-intvalidator&quot;&gt;IntValidator&lt;/a&gt; is always guaranteed to accept a number formatted according to the &quot;C&quot; locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="576c237e9ebdd7fced66e291ec7e07305ba5a529" translate="yes" xml:space="preserve">
          <source>If no &lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt; or an empty string is set, everything in the source model will be accepted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f1f8d92c627ff32d243a667156fe4a5d1b8b955" translate="yes" xml:space="preserve">
          <source>If no &lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; or an empty string is set, everything in the source model will be accepted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47aa8cf397dc343800ccfb5224b080365aa4248c" translate="yes" xml:space="preserve">
          <source>If no Diffie-Hellman parameters have been set, the &lt;a href=&quot;qsslconfiguration&quot;&gt;QSslConfiguration&lt;/a&gt; object defaults to using the 1024-bit MODP group from RFC 2409.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de6cd4825bb1cee3575896470783202606516613" translate="yes" xml:space="preserve">
          <source>If no XML declaration has been parsed, this function returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faef744b92b2fdc0341709dd61d1556a8e0b8a77" translate="yes" xml:space="preserve">
          <source>If no application name is given, the &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; object will only access the organization-wide &lt;a href=&quot;qsettings#fallback-mechanism&quot;&gt;locations&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff14fad9a98ed7ba4cb8d60ff0206f2d0f478a96" translate="yes" xml:space="preserve">
          <source>If no argument is passed, all messages will be logged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35261865c4dcd9bade181a49eaab0e7e78844bdb" translate="yes" xml:space="preserve">
          <source>If no audio plugins are available, a fallback dummy backend will be used. This should print out warnings if this is the case when you try and use &lt;a href=&quot;qaudioinput&quot;&gt;QAudioInput&lt;/a&gt; or &lt;a href=&quot;qaudiooutput&quot;&gt;QAudioOutput&lt;/a&gt;. To fix this problem, make sure the dependencies for the Qt plugins are installed on the system and reconfigure Qt (e.g. alsa-devel package on Linux), or create your own plugin with a default key to always override the dummy fallback. The easiest way to determine if you have only a dummy backend is to get a list of available audio devices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5321f613472e00254d180a4fc05b0164116de042" translate="yes" xml:space="preserve">
          <source>If no axes are set explicitly to &lt;a href=&quot;q3dbars&quot;&gt;Q3DBars&lt;/a&gt;, temporary default axes with no labels are created. These default axes can be modified via axis accessors, but as soon any axis is set explicitly for the orientation, the default axis for that orientation is destroyed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ebd086a3bfc8f4a21e18a494d12766f4ae1b17b" translate="yes" xml:space="preserve">
          <source>If no axes are set explicitly to &lt;a href=&quot;q3dscatter&quot;&gt;Q3DScatter&lt;/a&gt;, temporary default axes with no labels are created. These default axes can be modified via axis accessors, but as soon any axis is set explicitly for the orientation, the default axis for that orientation is destroyed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e5206fe4388fa4494ea22ed8f340b1481344880" translate="yes" xml:space="preserve">
          <source>If no axes are set explicitly to &lt;a href=&quot;q3dsurface&quot;&gt;Q3DSurface&lt;/a&gt;, temporary default axes with no labels are created. These default axes can be modified via axis accessors, but as soon any axis is set explicitly for the orientation, the default axis for that orientation is destroyed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d332b887e8f55f3941c7b91e48f4056b722533be" translate="yes" xml:space="preserve">
          <source>If no call to QQuickItem::updatePaintNode() result in actual scene graph changes, like &lt;a href=&quot;qsgnode#markDirty&quot;&gt;QSGNode::markDirty&lt;/a&gt;() or adding and removing nodes, then the underlying implementation may decide to not render the scene again as the visual outcome is identical.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eea3cfabb2c79e1505623b30243e44817fd2225e" translate="yes" xml:space="preserve">
          <source>If no camera is available at the specified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="855a0ce74e0ba4f0df617857cdd9c70f21e80c72" translate="yes" xml:space="preserve">
          <source>If no camera with that</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dbb4625466dd230bcd5e0d51b92b8f49b95b027" translate="yes" xml:space="preserve">
          <source>If no capable plugins or built-in handlers are found, each plugin is tested by inspecting the content of the data stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eae963dd7c12b3b183118060a854965aa670294" translate="yes" xml:space="preserve">
          <source>If no cursor has been set, or after a call to &lt;a href=&quot;qwindow#unsetCursor&quot;&gt;unsetCursor&lt;/a&gt;(), the parent window's cursor is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9d24390c8262ea7308466c8f36e647506518a32" translate="yes" xml:space="preserve">
          <source>If no cursor has been set, or after a call to unsetCursor(), the parent's cursor is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b3026b682e70b28d58e0c458046b22bd753385d" translate="yes" xml:space="preserve">
          <source>If no cursor has been set, the cursor of the item beneath is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21df2d613061882b83412550c6f256e122a9c63a" translate="yes" xml:space="preserve">
          <source>If no cursor shape has been set this returns a cursor with the &lt;a href=&quot;qt#CursorShape-enum&quot;&gt;Qt::ArrowCursor&lt;/a&gt; shape, however another cursor shape may be displayed if an overlapping item has a valid cursor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="188b9bb1d59af57b2d8406d1891f4d1cd085adf2" translate="yes" xml:space="preserve">
          <source>If no data has been set, this will create a default constructed instance of type T.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37093d13b03c4ef69f00b212a76bbe5e9054a17b" translate="yes" xml:space="preserve">
          <source>If no data proxy is set explicitly for the series, the series creates a default proxy. Setting another proxy will destroy the existing proxy and all data added to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5856dcc40f4efa3dd839e2a141237dcc35272905" translate="yes" xml:space="preserve">
          <source>If no default format is set, &lt;a href=&quot;qsettings#Format-enum&quot;&gt;QSettings::NativeFormat&lt;/a&gt; is used. See the documentation for the &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; constructor you are using to see if that constructor will ignore this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de945630b038eb6470980946270a4f68bd2d6f6b" translate="yes" xml:space="preserve">
          <source>If no default value is specified, a default &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa07379188c2dd8c867835a91837f848c038d1a7" translate="yes" xml:space="preserve">
          <source>If no destination address was associated with this datagram, this function returns -1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af31daa471cfd43ee35522d4a64bade6cb857bec" translate="yes" xml:space="preserve">
          <source>If no destination address was set on this datagram, the returned object will report true to &lt;a href=&quot;qhostaddress#isNull&quot;&gt;QHostAddress::isNull&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cae8bfde49b2e56aa7d260723f26e6de7b997620" translate="yes" xml:space="preserve">
          <source>If no encoding is specified then no such meta information is generated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fb069cf808205f6b62832525be8c54e5b5d57d4" translate="yes" xml:space="preserve">
          <source>If no error has occurred this will return an empty string. It is possible that an error occurred which has no associated textual representation, in which case this will also return an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d43ef1cd654c1fb727cf0bbb8ae4fa189c0ad6cd" translate="yes" xml:space="preserve">
          <source>If no error has occurred, the string is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e78998c4bddc2610642e223f387f90d408a1ccb" translate="yes" xml:space="preserve">
          <source>If no errors are present, an empty string is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79c7a6ea215cd19a5c348163231d45d9a3b72d00" translate="yes" xml:space="preserve">
          <source>If no event loop is running, events won't be delivered to the object. For example, if you create a &lt;a href=&quot;qtimer&quot;&gt;QTimer&lt;/a&gt; object in a thread but never call &lt;a href=&quot;qthread#exec&quot;&gt;exec()&lt;/a&gt;, the &lt;a href=&quot;qtimer&quot;&gt;QTimer&lt;/a&gt; will never emit its &lt;a href=&quot;qtimer#timeout&quot;&gt;timeout()&lt;/a&gt; signal. Calling &lt;a href=&quot;qobject#deleteLater&quot;&gt;deleteLater()&lt;/a&gt; won't work either. (These restrictions apply to the main thread as well.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e20b00f1d48c70a7c21e16f91e90f5abc3535c09" translate="yes" xml:space="preserve">
          <source>If no events are available, this function will wait until more are available and return after processing newly available events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12c3a8bad98f18d80217cd88d6a2fed1348d6fd5" translate="yes" xml:space="preserve">
          <source>If no explicit background role is set, the widget inherts its parent widget's background role.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20e3cefa21d1440421fa876858df13e7b07ee525" translate="yes" xml:space="preserve">
          <source>If no explicit foreground role is set, the function returns a role that contrasts with the background role.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4004e793cd1c07b9c2a7c5013c5ef24591840f3b" translate="yes" xml:space="preserve">
          <source>If no feature weight has been specified for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c819b6fdfc74213cb5a279dde7197240d3245be" translate="yes" xml:space="preserve">
          <source>If no file path is set, this property contains an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e03643e53caecbf9b1d87dafce632e1d411c60b6" translate="yes" xml:space="preserve">
          <source>If no font exists on the system that can support the text, then special &quot;missing character&quot; boxes will be shown in its place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c916de102a556675d3997372eab745e3113fec7f" translate="yes" xml:space="preserve">
          <source>If no format has been set, Qt guesses the picture format before reading it. If a format is set the picture will only be read if it has that format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="154302692b92ec413e1255873112c01fac5d15ff" translate="yes" xml:space="preserve">
          <source>If no full packet is received, this code restores the stream to the initial position, after which you need to wait for more data to arrive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feb903b77e07ec10078534c602263fe58d38f726" translate="yes" xml:space="preserve">
          <source>If no handler is specified, the view will log the messages into a &lt;code&gt;js&lt;/code&gt;&lt;a href=&quot;qloggingcategory&quot;&gt;logging category&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb3f449dd4ec08b2b15138185188005c4699fa42" translate="yes" xml:space="preserve">
          <source>If no horizontal alignment was specified, the function returns the default alignment for the given layout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7cd127d8e936e3f0897ad93b570abd20807d023" translate="yes" xml:space="preserve">
          <source>If no icon is set by the sender, a null &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b95876b6948c34db73f0dcd2e7dcd0eb80f4c148" translate="yes" xml:space="preserve">
          <source>If no implementation for the object's class is available, the function tries to find an implementation for the object's parent class, using the above strategy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="019484bb20240c8e074a3ab27dd602255fedbad9" translate="yes" xml:space="preserve">
          <source>If no index is supplied the data is appended to the model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e98284a25a46d3fdc654932dec1712d52a1f6b1" translate="yes" xml:space="preserve">
          <source>If no instance has been allocated, &lt;code&gt;nullptr&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b711214f2f7cdb9d145f4c76ea5c87d5294909d" translate="yes" xml:space="preserve">
          <source>If no key roles have been specified, all existing model data is removed, and the model is rebuilt from scratch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba2a46b0ee7f35ae9c971d449358e69925fec0ca" translate="yes" xml:space="preserve">
          <source>If no keys are listed the &lt;a href=&quot;qml-qtquick-droparea&quot;&gt;DropArea&lt;/a&gt; will accept events from any drag source, otherwise the drag source must have at least one compatible key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fc5c9a77a96e07c47d22936a2077844358fd86a" translate="yes" xml:space="preserve">
          <source>If no layout is currently managing this widget, &lt;a href=&quot;qgraphicswidget#layout&quot;&gt;layout&lt;/a&gt;() will return &lt;code&gt;nullptr&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83f871351439dde1ebee7e717c71c00230877bd3" translate="yes" xml:space="preserve">
          <source>If no limit was set this function will return -1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b08bd2ac21fdd75a621409615e3444158b1c61f0" translate="yes" xml:space="preserve">
          <source>If no list is specified, or the sum of weights in the list is zero, then the sprite will repeat itself after completing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a4299e94fc48cfe4ea3bc4000536beab94b89a6" translate="yes" xml:space="preserve">
          <source>If no manager has been assigned to the icon, and the parameters do not contain the &lt;a href=&quot;qplaceicon#SingleUrl-var&quot;&gt;QPlaceIcon::SingleUrl&lt;/a&gt; key, a default constructed &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9322eadf009c192a6465c8ca2761b2c29d004c58" translate="yes" xml:space="preserve">
          <source>If no mask is set, inputMask() returns an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f5c502e8ed703c352838d282835deb20862fc6d" translate="yes" xml:space="preserve">
          <source>If no match is found, &lt;code&gt;-1&lt;/code&gt; is returned. The search is case sensitive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bc9f7961e37bc141d624270502130c09fcc5114" translate="yes" xml:space="preserve">
          <source>If no persistent model index equal to the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf4f342be49f5371d07c8d4d7f47cb8830a95df5" translate="yes" xml:space="preserve">
          <source>If no persistent model indexes equal to the indexes in the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="628c43462c230555c453183e6e40b2aa144ba2c1" translate="yes" xml:space="preserve">
          <source>If no pixmap has been set this will return nullptr.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9701f3a67e310ca07c0b2c91ba30d087c3e1b83" translate="yes" xml:space="preserve">
          <source>If no plugin has been assigned to the icon, and the parameters do not contain the 'singleUrl' key, a default constructed URL is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e2ad07072cc0a4e651a2a5754371ed22b24f72e" translate="yes" xml:space="preserve">
          <source>If no plugin matching</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8713b24f23198b52fafa2d42853b008b030dce0" translate="yes" xml:space="preserve">
          <source>If no plugin supports the image format, Qt's built-in handlers are checked based on either the optional format string, or the file name suffix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9de8f3670f6727bf47c86842fed6506f9225aab" translate="yes" xml:space="preserve">
          <source>If no plugins could detect the image format based on data contents, each built-in image handler is tested by inspecting the contents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab59db10a6fddd56d82a88f48e984ce28c0300ac" translate="yes" xml:space="preserve">
          <source>If no prefix is set, prefix() returns an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="625d74be4414ee9e28ad392f44e29581aa4ea291" translate="yes" xml:space="preserve">
          <source>If no previous event was delivered with information about this gesture (i.e., this gesture object contains information about the first movement in the gesture) then this property contains a zero size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34f068fd664b373dfa1e9ea77f8f12a0c10bee2f" translate="yes" xml:space="preserve">
          <source>If no previous event was delivered with information about this gesture (i.e., this gesture object contains information about the first movement in the gesture) then this property contains zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="176c29df90a533b0f3ccf7d7da471f0f52454318" translate="yes" xml:space="preserve">
          <source>If no protocol could be negotiated or the extension was not enabled, this function returns a &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; which is null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d923553677d99d6ca86a9e38180df5992c4af7e3" translate="yes" xml:space="preserve">
          <source>If no reply is received within</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5311b93ab74ba099fee7b06f5a3accc4174effd" translate="yes" xml:space="preserve">
          <source>If no sender address was associated with this datagram, this function returns -1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2a3c99a180dc0b00600cfd57a101ccbe0f011d3" translate="yes" xml:space="preserve">
          <source>If no sender address was set on this datagram, the returned object will report true to &lt;a href=&quot;qhostaddress#isNull&quot;&gt;QHostAddress::isNull&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89b77b56ac91f510077c97340442fb508f0a6217" translate="yes" xml:space="preserve">
          <source>If no size hint has been set, the item delegate will compute the size hint based on the item data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a2fce843522be61a8572919935f53fee605226a" translate="yes" xml:space="preserve">
          <source>If no slot is connected to this signal, all origins will be accepted by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0bcefe937f11494eb7628cbc61cd6386345c92d" translate="yes" xml:space="preserve">
          <source>If no special-value text is set, specialValueText() returns an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1b71e7a0d8f4cb19076097e6fe68ba2874dd715" translate="yes" xml:space="preserve">
          <source>If no stop points have been specified, a gradient of black at 0 to white at 1 is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="245ef42823c910f6c44223f33e340d9f2d9c0720" translate="yes" xml:space="preserve">
          <source>If no style is assigned, or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7db6c8318f6598d6b7a049e3c407f53896ef80d" translate="yes" xml:space="preserve">
          <source>If no style is set, the widget uses the application's style, &lt;a href=&quot;qapplication#style&quot;&gt;QApplication::style&lt;/a&gt;() instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f32e42a327f2f7a0d75e39d52a43cd30bfe4638" translate="yes" xml:space="preserve">
          <source>If no style is specified, Qt will choose the most appropriate style for the user's platform or desktop environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b98edccbb5052496a9d58804dc379ab77bdf14d" translate="yes" xml:space="preserve">
          <source>If no such device exists, the &lt;a href=&quot;qcamerainfo&quot;&gt;QCameraInfo&lt;/a&gt; object will be invalid and &lt;a href=&quot;qcamerainfo#isNull&quot;&gt;isNull&lt;/a&gt;() will return true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="536bed973aaef01d601595162bfb6f2d4303580b" translate="yes" xml:space="preserve">
          <source>If no such direct child exists, a &lt;a href=&quot;qdomnode#isNull&quot;&gt;null node&lt;/a&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02595d9af9fc299bd69f7013bcd2e46bc097bc8d" translate="yes" xml:space="preserve">
          <source>If no such node is available, a default constructed &lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3698877d0b6f3ebbe8ed207fe97676032080b34d" translate="yes" xml:space="preserve">
          <source>If no such property exists, the returned variant is invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51744a731af10cbf9d9a2d17d98df39d7dad045b" translate="yes" xml:space="preserve">
          <source>If no suffix is set, suffix() returns an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7e5291eee4708b1338aced294a2ef8565871d83" translate="yes" xml:space="preserve">
          <source>If no targets are specified all &lt;a href=&quot;qml-qtquick-anchorchanges&quot;&gt;AnchorChanges&lt;/a&gt; will be animated by the &lt;a href=&quot;qml-qtquick-anchoranimation&quot;&gt;AnchorAnimation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1022dceae1105b57d9fbf2099abff67d6f7a380d" translate="yes" xml:space="preserve">
          <source>If no text has been set this will return an empty string. Setting the text clears any previous content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63ea2b9a9d8f2ce1d6a368804f858aedc1b61dd4" translate="yes" xml:space="preserve">
          <source>If no text is selected, deletes the character to the left of the text cursor and moves the cursor one position to the left. If any text is selected, the cursor is moved to the beginning of the selected text and the selected text is deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27d7831f7c19a13d90255f17c4a8e42edca3fed9" translate="yes" xml:space="preserve">
          <source>If no text is selected, deletes the character to the right of the text cursor. If any text is selected, the cursor is moved to the beginning of the selected text and the selected text is deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e9c88ec0c04eedb33d789b4fc1c4578e490594e" translate="yes" xml:space="preserve">
          <source>If no threads are available at the time of calling, then this function does nothing and returns &lt;code&gt;false&lt;/code&gt;. Otherwise,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed71403e041bf6517183660ed91fecc463557bf4" translate="yes" xml:space="preserve">
          <source>If no value has been set for this key (or if the value has been cleared), an invalid &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33ab4d0fc31ddef40d47d7ed4737cc8cc2a9a863" translate="yes" xml:space="preserve">
          <source>If no value is explicitly set, the layout's horizontal spacing is inherited from the parent layout, or from the style settings for the parent widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f13f71d8fc858da15c8a5668fd2c41edf4fae99" translate="yes" xml:space="preserve">
          <source>If no value is explicitly set, the layout's spacing is inherited from the parent layout, or from the style settings for the parent widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a132946dc0c5c3d374269e80f18846822167d7b1" translate="yes" xml:space="preserve">
          <source>If no value is explicitly set, the layout's vertical spacing is inherited from the parent layout, or from the style settings for the parent widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02a117657c4aeb7efbf8ad07c2448e84ee88bc49" translate="yes" xml:space="preserve">
          <source>If no widget in this application is currently grabbing the keyboard, &lt;code&gt;nullptr&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fd1f2fc0dd2292d7a355311baac88d4d64115a4" translate="yes" xml:space="preserve">
          <source>If no widget in this application is currently grabbing the mouse, &lt;code&gt;nullptr&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8db83cfafd49c384b51b4ec4d37edf5c56998e1" translate="yes" xml:space="preserve">
          <source>If no widget is embedded,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8cda4ea0019b5389d8ba247ffe4f7d705d3fab2" translate="yes" xml:space="preserve">
          <source>If nodes change every frame, the &lt;a href=&quot;qsgnode#preprocess&quot;&gt;preprocess&lt;/a&gt;() function can be used to apply changes to a node for every frame it is rendered. The use of &lt;a href=&quot;qsgnode#preprocess&quot;&gt;preprocess&lt;/a&gt;() must be explicitly enabled by setting the &lt;a href=&quot;qsgnode#Flag-enum&quot;&gt;QSGNode::UsePreprocess&lt;/a&gt; flag on the node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72becb58c4a0533b46713e1fc0a3b3afd9a8121e" translate="yes" xml:space="preserve">
          <source>If non null audio</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ace507f77194627265ca30014a2016b4986a721b" translate="yes" xml:space="preserve">
          <source>If non null image</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23b129655abb03b08bd0553ada506e77c19309fd" translate="yes" xml:space="preserve">
          <source>If non null video</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4472fe73a6b62991ff97baf9eee50fbc55de0af6" translate="yes" xml:space="preserve">
          <source>If non null viewfinder</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e77c0e4acb8536be15195bbd7110329e3ed1fff" translate="yes" xml:space="preserve">
          <source>If none of the above are available, the call to &lt;a href=&quot;qremoteobjecthostbase#enableRemoting&quot;&gt;QRemoteObjectHostBase::enableRemoting&lt;/a&gt;() will fail, returning false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f196510ee34a29666495f228e37cb93d55973ae0" translate="yes" xml:space="preserve">
          <source>If none of the fields can grow and the form is resized, extra space is distributed according to the current &lt;a href=&quot;qformlayout#formAlignment-prop&quot;&gt;form alignment&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7630e3e5dc38a7696c51672002869eeed56ddc18" translate="yes" xml:space="preserve">
          <source>If none of the stacks are active, or if the group is empty, this function does nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80054739a24a4e8a8da26524ec9f7b5c4ea2c241" translate="yes" xml:space="preserve">
          <source>If none of the stacks are active, or if the group is empty, this function returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e9775bad321db7d0d80d75aa11257d8a55e228d" translate="yes" xml:space="preserve">
          <source>If none of the stacks are active, or if the group is empty, this function returns &lt;code&gt;nullptr&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1860e1a136a75244df0047638437457ad6355c09" translate="yes" xml:space="preserve">
          <source>If none of the stacks are active, or if the group is empty, this function returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ab5e71f904d0f25e276092d1853535be0f982a1" translate="yes" xml:space="preserve">
          <source>If none of the stacks are active, or if the group is empty, this function returns an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d17a6592c3c1de9ecac5012fac7c17dc8df70b42" translate="yes" xml:space="preserve">
          <source>If none of the translation files contain a translation for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba1b99f66aa16a7a48e775776688e74e6de2cc3e" translate="yes" xml:space="preserve">
          <source>If not all characters are used (e.g. if only part of a multi-byte encoding is at the end of the characters), the decoder remembers enough state to continue with the next call to this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9db738e1bfa867b8c40bb2a2243d996062c62f6" translate="yes" xml:space="preserve">
          <source>If not explicitly closed, the underlying file handle is left open when the &lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt; object is destroyed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51d879c6007a4634fb34830152078e965d5d3af7" translate="yes" xml:space="preserve">
          <source>If not explicitly set -- or after reset -- the value follows &lt;code&gt;QStyleHints::mousePressAndHoldInterval&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f08ced0e912d71b8dcd3be94b6cfa8c49f6b1a1d" translate="yes" xml:space="preserve">
          <source>If not found, then if set the specified font family exists and can be used to represent the writing system in use, it will be selected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9e851dde4906f334cc2c05aecc619443d8ba228" translate="yes" xml:space="preserve">
          <source>If not set, qmake looks to see if the files to install actually exist. If these files don't exist, qmake doesn&amp;rsquo;t create the install rule. Use this config value if you need to install files that are generated as part of your build process, like HTML files created by qdoc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f0966e9bbb965aafd9ff4924563edc203f47cbf" translate="yes" xml:space="preserve">
          <source>If not set, the application display name defaults to the application name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77290f530709b765c6ca19b2d1d50994f8281c8f" translate="yes" xml:space="preserve">
          <source>If not set, the application name defaults to the executable name (since 5.0).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1623874466c2114fbbf334268c437dc6ea797b0" translate="yes" xml:space="preserve">
          <source>If not set, the application version defaults to a platform-specific value determined from the main application executable or package (since Qt 5.9):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a70247a6445cf79cf1e6b89ba8cccc9b2015765" translate="yes" xml:space="preserve">
          <source>If not specified by the &lt;code&gt;&lt;a href=&quot;#cpp-ignoretokens&quot;&gt;Cpp.ignoretokens&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#cpp-ignoredirectives&quot;&gt;Cpp.ignoredirectives&lt;/a&gt;&lt;/code&gt; variables, non-standard constructs (typically macros) can result in erroneous documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5571375e4729a2a790df745601e1b6de66c648f9" translate="yes" xml:space="preserve">
          <source>If not specified, the item will span one column and one row.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ee272d3d0dc0fa7bee9de49c035d73dad926db7" translate="yes" xml:space="preserve">
          <source>If not using a compressed &lt;a href=&quot;qopengltexture#format&quot;&gt;format&lt;/a&gt;() then you should use &lt;a href=&quot;qopengltexture#setData&quot;&gt;setData&lt;/a&gt;() instead of this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e301e2160ad8c9b9e892a13c44cdad0d557b9b5b" translate="yes" xml:space="preserve">
          <source>If not, a replacement font that supports the writing system is selected. The font matching algorithm will try to find the best match for all the properties set in the &lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt;. How this is done varies from platform to platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2adf270f50f3ce9c43890cbb7b3b019725ced287" translate="yes" xml:space="preserve">
          <source>If not, it tries the top-level widget containing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ab38a2644f881cc77a28c57f955edd721aacb45" translate="yes" xml:space="preserve">
          <source>If on the other hand you want to call two different error functions when the number overflows, simply connect the signal to two different slots. Qt will call both (in the order they were connected).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f770e33d15e38de1616e5da766a5954b7e571f0" translate="yes" xml:space="preserve">
          <source>If once is set to true, this affector will only affect each particle once in their lifetimes. If the affector normally simulates a continuous effect over time, then it will simulate the effect of one second of time the one instant it affects the particle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8886ef9e8476cb17f5c02809bbd511d4d44aee0" translate="yes" xml:space="preserve">
          <source>If one needs to register objects which are not available when the component is created, use the imperative &lt;a href=&quot;qml-qtwebchannel-webchannel#registerObjects-method&quot;&gt;registerObjects&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="646c5f55b500340ba0f63527d2c1ca10c1f4a909" translate="yes" xml:space="preserve">
          <source>If one wants to use &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; to draw to a different backend, one must subclass &lt;a href=&quot;qpaintengine&quot;&gt;QPaintEngine&lt;/a&gt; and reimplement all its virtual functions. The &lt;a href=&quot;qpaintengine&quot;&gt;QPaintEngine&lt;/a&gt; implementation is then made available by subclassing &lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt; and reimplementing the virtual function &lt;a href=&quot;qpaintdevice#paintEngine&quot;&gt;QPaintDevice::paintEngine&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb8bd7b5db1b0598024e5aa516f6fcc76199ac68" translate="yes" xml:space="preserve">
          <source>If only a single item is used within a &lt;a href=&quot;qml-qtquick-controls2-groupbox&quot;&gt;GroupBox&lt;/a&gt;, it will resize to fit the implicit size of its contained item. This makes it particularly suitable for use together with layouts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37474d12b73e53d708050506ef11cf0c0b0240ac" translate="yes" xml:space="preserve">
          <source>If only a single item is used within a &lt;a href=&quot;qml-qtquick-controls2-scrollview&quot;&gt;ScrollView&lt;/a&gt;, the content size is automatically calculated based on the implicit size of its contained item. However, if more than one item is used (or an implicit size is not provided), the &lt;a href=&quot;qml-qtquick-controls2-pane#contentWidth-prop&quot;&gt;contentWidth&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-controls2-pane#contentHeight-prop&quot;&gt;contentHeight&lt;/a&gt; properties must be set to the combined size of its contained items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b853f898231c3f13cdc3ee7d652abfdf6ebf0e96" translate="yes" xml:space="preserve">
          <source>If only a single item is used within a Frame, it will resize to fit the implicit size of its contained item. This makes it particularly suitable for use together with layouts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b348e97aa87c588075333a3065f359c859cdc194" translate="yes" xml:space="preserve">
          <source>If only a single item is used within a Pane, it will resize to fit the implicit size of its contained item. This makes it particularly suitable for use together with layouts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2df0a56e18e809ae86761f53b7173055d4d8a1f" translate="yes" xml:space="preserve">
          <source>If only a single item is used within a Popup, it will resize to fit the implicit size of its contained item. This makes it particularly suitable for use together with layouts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8d7517964769751b54c3ff884dc7f5075e6064e" translate="yes" xml:space="preserve">
          <source>If only a single item is used within the &lt;a href=&quot;qml-qtquick-controls-statusbar&quot;&gt;StatusBar&lt;/a&gt;, it will resize to fit the implicitHeight of its contained item. This makes it particularly suitable for use together with layouts. Otherwise the height is platform dependent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf67a2a9561fecfdf3e91bda5c2fea61a40ebf86" translate="yes" xml:space="preserve">
          <source>If only a single item is used within the &lt;a href=&quot;qml-qtquick-controls-toolbar&quot;&gt;ToolBar&lt;/a&gt;, it will resize to fit the implicitHeight of its contained item. This makes it particularly suitable for use together with layouts. Otherwise the height is platform dependent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="323c527cece11c02ea8dd53543e158120ff1df00" translate="yes" xml:space="preserve">
          <source>If only one section is inserted,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7b9b3e0b2029af0483d8907528178c6c98fbb2f" translate="yes" xml:space="preserve">
          <source>If only one section is removed,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c58f42e356324ba5cc7a7389268e7be91c802f52" translate="yes" xml:space="preserve">
          <source>If only the place identifier is known, all other place data can fetched from the &lt;a href=&quot;location-places-qml#plugin&quot;&gt;Plugin&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c37b870bd6ea11da332a0c9bd35b6b32e4dc0078" translate="yes" xml:space="preserve">
          <source>If only unsupported language codes are specified via the &lt;a href=&quot;http://doc.qt.io/qt-5/qml-qtlocation-plugin.html#locales-prop&quot;&gt;locales&lt;/a&gt; property, the service returns the directions using the default language, English.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="769722f9601699f802700b4649bdda2d308f5b16" translate="yes" xml:space="preserve">
          <source>If other instances of &lt;a href=&quot;qlibrary&quot;&gt;QLibrary&lt;/a&gt; are using the same library, the call will fail, and unloading will only happen when every instance has called unload().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfac0fa7e1f9e6176a36ff3a47bb6cf046314d48" translate="yes" xml:space="preserve">
          <source>If other instances of &lt;a href=&quot;qpluginloader&quot;&gt;QPluginLoader&lt;/a&gt; are using the same plugin, the call will fail, and unloading will only happen when every instance has called unload().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eaca306b04b6485f56092c13d1d5ec062f18bfa" translate="yes" xml:space="preserve">
          <source>If parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae67662e6ff0995f09c95b721a33f7b1ac244ef6" translate="yes" xml:space="preserve">
          <source>If parsing is successful, the returned state machine can be initialized and started. If parsing fails, &lt;a href=&quot;qscxmlstatemachine#parseErrors-prop&quot;&gt;QScxmlStateMachine::parseErrors&lt;/a&gt;() can be used to retrieve a list of errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1aabd552d35d3fde6b2dba8047aa480a76a0509" translate="yes" xml:space="preserve">
          <source>If paused is set to true, the particle system will not advance the simulation. When paused is set to false again, the simulation will resume from the same point it was paused.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8a13b5e6b870a928faaa5518ccf57903002bfec" translate="yes" xml:space="preserve">
          <source>If peer verification errors were ignored during the handshake, resumeHandshake() resumes and completes the handshake and returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="755ea1ac99c8486c7fe196940e388748df2ce0c8" translate="yes" xml:space="preserve">
          <source>If plugins are built in a mode that is incompatible with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82d3139f3aed8a1e9da4af07509cbfeae1963b0f" translate="yes" xml:space="preserve">
          <source>If positioning the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59019c5a14a724419b846b35b476276f223d595e" translate="yes" xml:space="preserve">
          <source>If positioning the view at</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80c868afc8c0e32b440f61349507605f514b0349" translate="yes" xml:space="preserve">
          <source>If positioning the view at the index would cause empty space to be displayed at the beginning or end of the view, the view will be positioned at the boundary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a8faf58d6c550fa30b8db81afc2658f3e487ebf" translate="yes" xml:space="preserve">
          <source>If possible, &lt;a href=&quot;qml-qtmultimedia-camera#cameraState-prop&quot;&gt;cameraState&lt;/a&gt;, &lt;a href=&quot;qml-qtmultimedia-camera#captureMode-prop&quot;&gt;captureMode&lt;/a&gt;, &lt;a href=&quot;qml-qtmultimedia-camera#digitalZoom-prop&quot;&gt;digitalZoom&lt;/a&gt; and other camera parameters are preserved when changing the camera device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f98ee6841e4c9e89efaf68a7c0578e96b517a759" translate="yes" xml:space="preserve">
          <source>If possible, render text with hinting in both horizontal and vertical directions. The text will be altered to optimize legibility on the target device, but since the metrics will depend on the target size of the text, the positions of glyphs, line breaks, and other typographical detail will not scale, meaning that a text layout may look different on devices with different pixel densities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83478c5c2d7924b549cefce719673469c74d4ed9" translate="yes" xml:space="preserve">
          <source>If possible, render text with no horizontal hinting, but align glyphs to the pixel grid in the vertical direction. The text will appear crisper on displays where the density is too low to give an accurate rendering of the glyphs. But since the horizontal metrics of the glyphs are unhinted, the text's layout will be scalable to higher density devices (such as printers) without impacting details such as line breaks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9c32fb553c26aa279350badfc687bcc195f1685" translate="yes" xml:space="preserve">
          <source>If possible, render text without hinting the outlines of the glyphs. The text layout will be typographically accurate and scalable, using the same metrics as are used e.g. when printing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5e605d4852173dfb4d7968663feaa31d1776ab0" translate="yes" xml:space="preserve">
          <source>If possible, the device is truncated before it is opened. All earlier contents of the device are lost.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2739d0458fbd024b5ac2887503cfa400e89e82e8" translate="yes" xml:space="preserve">
          <source>If possible, use the &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; operator instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec84b8c5d311b21ed5dbceda28479ca952bb7359" translate="yes" xml:space="preserve">
          <source>If possible, wrapping occurs at a word boundary; otherwise it will occur at the appropriate point on the line, even in the middle of a word.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eee6cc1a4c6fb1521132b2be7e7f957a00b735c" translate="yes" xml:space="preserve">
          <source>If precision is not specified, the precision will be 2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf5a5a1145b81cfaa6d6927e187339576a3cc606" translate="yes" xml:space="preserve">
          <source>If present() fails for any other reason the surface should immediately enter the stopped state and an &lt;a href=&quot;qabstractvideosurface#error&quot;&gt;error&lt;/a&gt;() value will be set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f26abb8c4ebc9a709d55a0e5b46569e5bd38f78" translate="yes" xml:space="preserve">
          <source>If priority is Keys.AfterItem the order of key event processing is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53b04bee3e304035ae41bdfe29a84a3772127960" translate="yes" xml:space="preserve">
          <source>If propagateComposedEvents is set to true, then composed events will be automatically propagated to other MouseAreas in the same location in the scene. Each event is propagated to the next &lt;a href=&quot;qml-qtquick-mousearea#enabled-prop&quot;&gt;enabled&lt;/a&gt;&lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; beneath it in the stacking order, propagating down this visual hierarchy until a &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; accepts the event. Unlike &lt;code&gt;pressed&lt;/code&gt; events, composed events will not be automatically accepted if no handler is present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d0b981797d329646f6e7968989ce5627028d285" translate="yes" xml:space="preserve">
          <source>If qdoc is generating DITA XML, it will translate the commands to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da6e5847d4901b78305d2c4043cc5bf6557c5a54" translate="yes" xml:space="preserve">
          <source>If qdoc is generating HTML, it will translate these commands to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b0d3d91344c0633c387c3b0074725c4f1ff3f52" translate="yes" xml:space="preserve">
          <source>If qmake finds a &lt;code&gt;.qmake.cache&lt;/code&gt; file then it will process this file first before it processes the project file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9f2bdb672595047c5aea8cdda7ba0191f6f857c" translate="yes" xml:space="preserve">
          <source>If radius is non-zero, the rectangle will be painted as a rounded rectangle, otherwise it will be painted as a normal rectangle. The same radius is used by all 4 corners; there is currently no way to specify different radii for different corners.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c74a0ca8669c7c23d60d2ae89eecfbd3c64b6bf" translate="yes" xml:space="preserve">
          <source>If readOnly is set to &lt;code&gt;true&lt;/code&gt;, then user input will not affect the text. Any bindings or attempts to set the text property will still work, however.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89ffe998d5401488f95b84ced54bf376e09caa94" translate="yes" xml:space="preserve">
          <source>If readOnly is set to true, then user input will not affect the text property. Any bindings or attempts to set the text property will still work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="491aafe41b2d0588b14f233e69022e66cf999e92" translate="yes" xml:space="preserve">
          <source>If recording fails &lt;a href=&quot;qmediarecorder#error&quot;&gt;error&lt;/a&gt;() signal is emitted with recorder state being reset back to &lt;a href=&quot;qmediarecorder#State-enum&quot;&gt;QMediaRecorder::StoppedState&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0b096a2577f54e614bb8ad4ad8d6a6a851c8221" translate="yes" xml:space="preserve">
          <source>If regular position updates are required, &lt;a href=&quot;qgeopositioninfosource#updateInterval-prop&quot;&gt;setUpdateInterval&lt;/a&gt;() can be used to specify how often these updates should be emitted. If no interval is specified, updates are simply provided whenever they are available. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="353d0d2a6185e0e7422c4e97b8967d36e8628619" translate="yes" xml:space="preserve">
          <source>If regular satellite updates are required, &lt;a href=&quot;qgeosatelliteinfosource#updateInterval-prop&quot;&gt;setUpdateInterval&lt;/a&gt;() can be used to specify how often these updates should be emitted. If no interval is specified, updates are simply provided whenever they are available. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3410cb0a8f63075c7d6e7f87786a291f479889c7" translate="yes" xml:space="preserve">
          <source>If rendering is shut down before</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7c738a02680ae2b62935b8f53ad005ffd388830" translate="yes" xml:space="preserve">
          <source>If reply-&amp;gt;&lt;a href=&quot;qplacemanager#error&quot;&gt;error&lt;/a&gt;() equals &lt;a href=&quot;qplacereply#Error-enum&quot;&gt;QPlaceReply::NoError&lt;/a&gt; then the processing finished successfully.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="123d756821a2cacc090586fb4c5069e7394150db" translate="yes" xml:space="preserve">
          <source>If reply-&amp;gt;&lt;a href=&quot;qplacemanagerengine#error&quot;&gt;error&lt;/a&gt;() equals &lt;a href=&quot;qplacereply#Error-enum&quot;&gt;QPlaceReply::NoError&lt;/a&gt; then the processing finished successfully.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb90b249c982b5d3eb9bae15d10caec2cb6f0152" translate="yes" xml:space="preserve">
          <source>If reply::error() equals &lt;a href=&quot;qgeocodereply#Error-enum&quot;&gt;QGeoCodeReply::NoError&lt;/a&gt; then the processing finished successfully.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d3131c0ad3396002f56d2c49836a556851c61ef" translate="yes" xml:space="preserve">
          <source>If reply::error() equals &lt;a href=&quot;qgeoroutereply#Error-enum&quot;&gt;QGeoRouteReply::NoError&lt;/a&gt; then the processing finished successfully.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7e4ba0dbeb916b86b3aeb37c8191d47dbd732b5" translate="yes" xml:space="preserve">
          <source>If rotation or shearing has been specified, this function returns the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba97c915fb65a3fe65059e25aa2e946f5e87415e" translate="yes" xml:space="preserve">
          <source>If row &amp;lt; 0 or row + count &amp;gt; &lt;a href=&quot;qsqltablemodel#rowCount&quot;&gt;rowCount&lt;/a&gt;(), no action is taken and false is returned. Returns &lt;code&gt;true&lt;/code&gt; if all rows could be removed; otherwise returns &lt;code&gt;false&lt;/code&gt;. Detailed database error information can be retrieved using &lt;a href=&quot;qsqlquerymodel#lastError&quot;&gt;lastError&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81108c72da3e4b331da76840b63c1025aea3d7ce" translate="yes" xml:space="preserve">
          <source>If rows are inserted into the array without calling &lt;a href=&quot;qbardataproxy#insertRow&quot;&gt;insertRow&lt;/a&gt;() or &lt;a href=&quot;qbardataproxy#insertRows&quot;&gt;insertRows&lt;/a&gt;(), this signal needs to be emitted to update the graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca9a1f18b52b2b1cf87ec82bf41ccb3834fe61c0" translate="yes" xml:space="preserve">
          <source>If rows are inserted into the array without calling &lt;a href=&quot;qsurfacedataproxy#insertRow&quot;&gt;insertRow&lt;/a&gt;() or &lt;a href=&quot;qsurfacedataproxy#insertRows&quot;&gt;insertRows&lt;/a&gt;(), this signal needs to be emitted to update the graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d4d30aea01d4a3159a668c035949c4e13d63e32" translate="yes" xml:space="preserve">
          <source>If running is set to false, the particle system will stop the simulation. All particles will be destroyed when the system is set to running again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f8ae8efed68894c5c678e21ea95533a8b7278e3" translate="yes" xml:space="preserve">
          <source>If satellite information cannot be retrieved or some other form of timeout has occurred the &lt;a href=&quot;qgeosatelliteinfosource#satellitesInViewUpdated&quot;&gt;satellitesInViewUpdated&lt;/a&gt;() and &lt;a href=&quot;qgeosatelliteinfosource#satellitesInUseUpdated&quot;&gt;satellitesInUseUpdated&lt;/a&gt;() signals may be emitted with empty parameter lists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca82fb2bb4a13d8fd39931a1339ebb694d2d2993" translate="yes" xml:space="preserve">
          <source>If seeking is supported this property will be true; false otherwise. The status of this property may change across the life time of the &lt;a href=&quot;qmediaplayer&quot;&gt;QMediaPlayer&lt;/a&gt; object, use the &lt;a href=&quot;qmediaplayer#seekableChanged&quot;&gt;seekableChanged&lt;/a&gt; signal to monitor changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc90bed076157c060b2c458bf3a07fcf698982c5" translate="yes" xml:space="preserve">
          <source>If selectedDate is outside the range of &lt;a href=&quot;qml-qtquick-controls-calendar#minimumDate-prop&quot;&gt;minimumDate&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-controls-calendar#maximumDate-prop&quot;&gt;maximumDate&lt;/a&gt;, it will be clamped to be within that range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80dfb2c4c1663bf22f8c79474e00bdc6eef78f39" translate="yes" xml:space="preserve">
          <source>If set explicitly the canvas will attempt to create a context of the named type after becoming available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab9deefa6e4193e6947a7b86a7c3af1d85db5420" translate="yes" xml:space="preserve">
          <source>If set particles will rotate at this velocity in degrees/second.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd5d8fad0db9447ea396f260226dbe80f1651d11" translate="yes" xml:space="preserve">
          <source>If set prior to populating the combo box, the pop-up view will not be affected and will show the first column (using this property's default value).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37e9b9511a10912d7ce57f9ca5c6eadd0037defc" translate="yes" xml:space="preserve">
          <source>If set the &lt;a href=&quot;qml-qtquick-particles-imageparticle#rotationVelocity-prop&quot;&gt;rotationVelocity&lt;/a&gt; of individual particles will vary by up to this much between particles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8820a00c19aabb86211a86fb06e6883847078722" translate="yes" xml:space="preserve">
          <source>If set the image will be rotated by this many degrees before it is drawn.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f61f218054deafcf41be67e73ad6e9bf8cbc7fd" translate="yes" xml:space="preserve">
          <source>If set the rotation of individual particles will vary by up to this much between particles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32259054dd21d2715beb1c106aa278bc6e0958c5" translate="yes" xml:space="preserve">
          <source>If set to 0, the dialog is always shown as soon as any progress is set. The default is 4000 milliseconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aaee82f952166423472261967aacd5cf25ceb71" translate="yes" xml:space="preserve">
          <source>If set to &lt;a href=&quot;qt3danimation-qabstractclipanimator#Loops-enum&quot;&gt;QAbstractClipAnimator::Infinite&lt;/a&gt;, the animation will continuously repeat until it is explicitly stopped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85e1a99124331495be0e5433168e6fc3e8a6ad3c" translate="yes" xml:space="preserve">
          <source>If set to &lt;a href=&quot;qt3drender-qabstractraycaster#RunMode-enum&quot;&gt;SingleShot&lt;/a&gt; (the default), when the component is enabled, a single ray casting test will be performed and the component will automatically disable itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ecbe55adfc88b8354fa193af0ed9f8406df2016" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;false&lt;/code&gt;, &lt;a href=&quot;qcustom3dlabel#backgroundColor-prop&quot;&gt;backgroundColor&lt;/a&gt;() has no effect. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab64c3b336ee31f65b5d1fea70a0cd4dc8842b80" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;true&lt;/code&gt;, &lt;a href=&quot;q3dbars#barSpacing-prop&quot;&gt;bar spacing&lt;/a&gt; will be correctly applied only to the X-axis. Preset to &lt;code&gt;false&lt;/code&gt; by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38aa8cb490ec8909d67b7df03b16a3a91d055a09" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;true&lt;/code&gt;, the X-rotation of the camera is wrapped from minimum to maximum and from maximum to minimum. If set to &lt;code&gt;false&lt;/code&gt;, the X-rotation of the camera is limited to the sector determined by the minimum and maximum values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c051d84601a7ccd1ed6264764a3aefa5e8bb1077" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;true&lt;/code&gt;, the X-rotation of the camera is wrapped from minimum to maximum and from maximum to minimum. If set to &lt;code&gt;false&lt;/code&gt;, the X-rotation of the camera is limited to the sector determined by the minimum and maximum values. Set to &lt;code&gt;true&lt;/code&gt; by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b3e6c2ecf8fc80fd4705d15c6457b4f24c1148d" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;true&lt;/code&gt;, the background drop shadow effect is enabled. If set to &lt;code&gt;false&lt;/code&gt;, it is disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00ad34efa5e3fe7097993cd715043e0271335f81" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;true&lt;/code&gt;, the user can use the keyboard to select the text even if the editor is read-only. If set to &lt;code&gt;false&lt;/code&gt;, the user cannot use the keyboard to select the text even if the editor is editable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="447481b63ae0494a6401f0ffb02f2f2f91a57a2f" translate="yes" xml:space="preserve">
          <source>If set to Animation.Infinite, the animation will continuously repeat until it is explicitly stopped - either by setting the &lt;code&gt;running&lt;/code&gt; property to false, or by calling the &lt;code&gt;stop()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96b3b82d9351aa9c6834e55578c5d931fbb990dc" translate="yes" xml:space="preserve">
          <source>If set to Continuous, Compute command is executed everyframe. This is the default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ada91d7208bf8ab4ad0f4c17abf13d090d41639" translate="yes" xml:space="preserve">
          <source>If set to Continuous, ray casting tests will be performed at every frame as long as the component is enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a54094a494d3a0270f9f54d1e149514e3b9eff3" translate="yes" xml:space="preserve">
          <source>If set to Manual CompouteCommand is executed for a given number of frames and then the component disables itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91bbcc50f09ad26c5bcc4353bdea863a2bd207e1" translate="yes" xml:space="preserve">
          <source>If set to NaN, this value will not be considered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d01121a2691e5c689f8195afcee2944f9d0dd21d" translate="yes" xml:space="preserve">
          <source>If set to QAbstractClipAnimator::Infinite, the animation will continuously repeat until it is explicitly stopped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc5c75f1ab020242f68c777560bd68045a5e7911" translate="yes" xml:space="preserve">
          <source>If set to an empty string, the default path is restored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea1e8f9e1f8a1375706046653e2fd7bc26c58192" translate="yes" xml:space="preserve">
          <source>If set to false, the emitter will cease emissions until it is set to true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f4050f5b477c250974b1d4a63dc3ebfb0715e07" translate="yes" xml:space="preserve">
          <source>If set to null, no connection is made and any signal handlers are ignored until the target is not null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66faa6bf806755b6fcb3a39de9e0ffa78434c45c" translate="yes" xml:space="preserve">
          <source>If set to the null string, the default path is restored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee4d1ee8b2c0f440ab18bcb15419f035818e6cff" translate="yes" xml:space="preserve">
          <source>If set to true then a rotation will be applied on top of the particles rotation, so that it faces the direction of travel. So to face away from the direction of travel, set autoRotation to true and rotation to 180.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17d7a93a769f7b3e0d3b117cefe7b1b4c1be063d" translate="yes" xml:space="preserve">
          <source>If set to true, reverses the sort order. The default is false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dc303846cc46bfd771fbdba3f48d0cb434f3036" translate="yes" xml:space="preserve">
          <source>If set to true, sprite particles will interpolate between sprite frames each rendered frame, making the sprites look smoother.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15587f4ab0da1bcc2b3b12f98641afe510f98e51" translate="yes" xml:space="preserve">
          <source>If set to true, starts the timer; otherwise stops the timer. For a non-repeating timer,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="717f5bfbd5599cd28972a015692cf3cd34f2de5f" translate="yes" xml:space="preserve">
          <source>If set to true, the plain text edit paints the palette background on the viewport area not covered by the text document. Otherwise, if set to false, it won't. The feature makes it possible for the user to visually distinguish between the area of the document, painted with the base color of the palette, and the empty area not covered by any document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1a8e65a465f717de848e014ec767ca81303e741" translate="yes" xml:space="preserve">
          <source>If set to true, the plain text edit scrolls the document vertically to make the cursor visible at the center of the viewport. This also allows the text edit to scroll below the end of the document. Otherwise, if set to false, the plain text edit scrolls the smallest amount possible to ensure the cursor is visible. The same algorithm is applied to any new line appended through &lt;a href=&quot;qplaintextedit#appendPlainText&quot;&gt;appendPlainText&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4877184b1f5561a5d58031c9d85867ec7bd954c" translate="yes" xml:space="preserve">
          <source>If set to true, the sort is case sensitive. This property is true by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6ae784bc8ee3acbc8033099f059d5cb42b4cb36" translate="yes" xml:space="preserve">
          <source>If set, a cursor should be shown inside the preedit string at position start. The length variable determines whether the cursor is visible or not. If the length is 0 the cursor is invisible. If value is a &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; of type &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt; this color will be used for rendering the cursor, otherwise the color of the surrounding text will be used. There should be at most one Cursor attribute per event. If several are specified the behaviour is undefined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cbcc991d5d98d71362a37f0bf20a1d2d0824dfe" translate="yes" xml:space="preserve">
          <source>If set, the background determines the implicit size of the gauge.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7100cc7bb389b6b7a9e619886cf855478df4690" translate="yes" xml:space="preserve">
          <source>If set, the edit cursor should be moved to the specified position in the editor text contents. In contrast with &lt;code&gt;Cursor&lt;/code&gt;, this attribute does not work on the preedit text, but on the surrounding text. The cursor will be moved after the commit string has been committed, and the preedit string will be located at the new edit position. The start position specifies the new position and the length variable can be used to set a selection starting from that point. The value is unused.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99300767a160b0cd09fe979673aaec40a8f8e4b1" translate="yes" xml:space="preserve">
          <source>If set, the spin box will display this text instead of a numeric value whenever the current value is equal to minimum(). Typical use is to indicate that this choice has a special (default) meaning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b90bc6d07bd028eb4d14318f8c1c7a4ef42a71e" translate="yes" xml:space="preserve">
          <source>If set, the typical Unix strip functionality is turned off and the debug information will remain in the binary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9550fdadf1f510286cf08666ebf79092d77a1af1" translate="yes" xml:space="preserve">
          <source>If set, this component will be used to display the foreground in this column, instead of the &lt;a href=&quot;qml-qtquick-controls-styles-tumblerstyle#columnForeground-prop&quot;&gt;columnForeground&lt;/a&gt; property in &lt;a href=&quot;qml-qtquick-controls-styles-tumblerstyle&quot;&gt;TumblerStyle&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a843844bfe5de2c3078be45e83c896763d5a9af6" translate="yes" xml:space="preserve">
          <source>If set, this delegate will be used to display items in this column, instead of the &lt;a href=&quot;qml-qtquick-controls-styles-tumblerstyle#delegate-prop&quot;&gt;delegate&lt;/a&gt; property in &lt;a href=&quot;qml-qtquick-controls-styles-tumblerstyle&quot;&gt;TumblerStyle&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa9b8c2235b895fcbea9084b90bede7efc5022f2" translate="yes" xml:space="preserve">
          <source>If set, this highlight will be used to display the highlight in this column, instead of the &lt;a href=&quot;qml-qtquick-controls-styles-tumblerstyle#highlight-prop&quot;&gt;highlight&lt;/a&gt; property in &lt;a href=&quot;qml-qtquick-controls-styles-tumblerstyle&quot;&gt;TumblerStyle&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57cc8281151af62bf20df6a58787332281cf3f1e" translate="yes" xml:space="preserve">
          <source>If setUrlHandler() is used to set a new handler for a scheme which already has a handler, the existing handler is simply replaced with the new one. Since &lt;a href=&quot;qdesktopservices&quot;&gt;QDesktopServices&lt;/a&gt; does not take ownership of handlers, no objects are deleted when a handler is replaced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1afd907849c64fd2fc3dc708bdd11f36ebe1d3ca" translate="yes" xml:space="preserve">
          <source>If setting the audio role is not supported, an empty list is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f61b5c86e7f8d2e2dbce84ecf170444cc1c8ed2" translate="yes" xml:space="preserve">
          <source>If setting this property it must be set after the &lt;a href=&quot;qml-qtlocation-routemodel#plugin-prop&quot;&gt;plugin&lt;/a&gt; property is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd41129295314cf59ed23c73d6b0db5915f35196" translate="yes" xml:space="preserve">
          <source>If setting this value to 'true' and using an Address or &lt;a href=&quot;qml-coordinate&quot;&gt;coordinate&lt;/a&gt; as the query, note that any change at all in the object's properties will trigger a new request to be sent. If you are adjusting many properties of the object whilst autoUpdate is enabled, this can generate large numbers of useless (and later discarded) requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d350e369ee24645e392b6322b037ea234ff1c1b0" translate="yes" xml:space="preserve">
          <source>If setting this value to 'true', note that any change at all in the &lt;a href=&quot;qml-qtlocation-routequery&quot;&gt;RouteQuery&lt;/a&gt; object set in the &lt;a href=&quot;qml-qtlocation-routemodel#query-prop&quot;&gt;query&lt;/a&gt; property will trigger a new request to be sent. If you are adjusting many properties of the &lt;a href=&quot;qml-qtlocation-routequery&quot;&gt;RouteQuery&lt;/a&gt; with autoUpdate enabled, this can generate large numbers of useless (and later discarded) requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc1fed6a2a8b0d2163c00b63ef3a942a5fb48d1e" translate="yes" xml:space="preserve">
          <source>If several categories are required, use several Settings objects, each with their own category:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88087324b357253999698cc9b60d0a32564f4ccd" translate="yes" xml:space="preserve">
          <source>If several of the horizontal or several of the vertical alignment flags are set, the resulting alignment is undefined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95280946521b2cff7179a8212bdb3e1e365abdf3" translate="yes" xml:space="preserve">
          <source>If several slots are connected to one signal, the slots will be executed one after the other, in the order they have been connected, when the signal is emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7a99c8ad663234a26b55dea1f7c11a72ed5b424" translate="yes" xml:space="preserve">
          <source>If some forms must be designed, but certain custom widgets are unavailble to the designer, we can substitute similar widgets to represent the missing widgets. For example, we might represent instances of a custom push button class, &lt;code&gt;MyPushButton&lt;/code&gt;, with instances of &lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt; and promote these to &lt;code&gt;MyPushButton&lt;/code&gt; so that &lt;a href=&quot;uic&quot;&gt;uic&lt;/a&gt; generates suitable code for this missing class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1182043c6b0cdd549d314cf95123f600e725531c" translate="yes" xml:space="preserve">
          <source>If some other mouse button is pressed or the rubber band is disabled, the event is passed to &lt;a href=&quot;qgraphicsview#mousePressEvent&quot;&gt;QGraphicsView::mousePressEvent&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e65772ba115a83af8ed5b44c112b3720d4cc8f2" translate="yes" xml:space="preserve">
          <source>If some parameters are not specified, or null settings are passed, the camera will choose default values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70bec2ab80570f84cf112d9821cb10ed5cef9bc2" translate="yes" xml:space="preserve">
          <source>If some parameters are not specified, or null settings are passed, the encoder choose the default encoding parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5df8f6c549fe0e2aae6709bfcec7d2317850e21" translate="yes" xml:space="preserve">
          <source>If some parameters are not specified, or null settings are passed, the encoder will choose default encoding parameters, depending on media source properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b632b10890d9093d7aa05ab2d82bee7121d628c3" translate="yes" xml:space="preserve">
          <source>If some widgets are grouped in tabs, only one widget per group should be specified. Widgets not in the list might be changed to repect the constraints.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12d1938e462b898a5c0b87428a67974c0157b02d" translate="yes" xml:space="preserve">
          <source>If someone doubleclicks on the scene, the scene will first receive a mouse press event, followed by a release event (i.e., a click), then a doubleclick event, and finally a release event. If the doubleclick event is delivered to a different item than the one that received the first press and release, it will be delivered as a press event. However, tripleclick events are not delivered as doubleclick events in this case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a61f9875229bf2fea732a74bc6759a9f4133d926" translate="yes" xml:space="preserve">
          <source>If specified before showing a window, will result in the window being shown on that screen, unless an explicit window position has been set. The value must be an element from the Qt.application.screens array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e9a5c521704e412feac4db47f5810ca13fade99" translate="yes" xml:space="preserve">
          <source>If specified, this will take precedence over &lt;a href=&quot;qml-qtquick-particles-targetdirection#targetX-prop&quot;&gt;targetX&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-particles-targetdirection#targetY-prop&quot;&gt;targetY&lt;/a&gt;. The targeted point will be the center of the specified Item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02f44a0e479b9230e19afdb5fcd0fa5ddc196671" translate="yes" xml:space="preserve">
          <source>If style is zero, a desktop-dependant style will be assigned automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e484e0b833a4ea45a62e6a41ff5053ecc2ab297" translate="yes" xml:space="preserve">
          <source>If successful the player control will immediately enter the &lt;a href=&quot;qaudiodecoder#State-enum&quot;&gt;decoding&lt;/a&gt; state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="859e1b7060ac75c72dbd02be21ec0df25cf26657" translate="yes" xml:space="preserve">
          <source>If successful the player control will immediately enter the &lt;a href=&quot;qaudiodecoder#State-enum&quot;&gt;stopped&lt;/a&gt; state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5407528f5aa16469249735c22e74b1434388ffb" translate="yes" xml:space="preserve">
          <source>If successful the player control will immediately enter the &lt;a href=&quot;qmediaplayer#State-enum&quot;&gt;paused&lt;/a&gt; state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c78344a5b90fd1c36ce90b263e565b19aa402121" translate="yes" xml:space="preserve">
          <source>If successful the player control will immediately enter the &lt;a href=&quot;qmediaplayer#State-enum&quot;&gt;playing&lt;/a&gt; state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="422527a06447559de0cb407460e0e83f6ef1a599" translate="yes" xml:space="preserve">
          <source>If successful the player control will immediately enter the &lt;a href=&quot;qmediaplayer#State-enum&quot;&gt;stopped&lt;/a&gt; state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="710537000a5839b42d1bedc5edca3de3f3c05964" translate="yes" xml:space="preserve">
          <source>If successful, return true, otherwise return false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fafee3cc3519c84e73c7e1fa69add3a583e3e36" translate="yes" xml:space="preserve">
          <source>If successful, the method returns an incubator, otherwise null. The incubator has the following properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5da36a9838dce73427e9e5cef3edfe33a354eb4b" translate="yes" xml:space="preserve">
          <source>If supplied, it will have the given &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb274d4277c287afa989337e11702592c01310b8" translate="yes" xml:space="preserve">
          <source>If supported &lt;a href=&quot;qopengltexture&quot;&gt;QOpenGLTexture&lt;/a&gt; makes use of immutable texture storage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32acecf28acfcc368648e22685797b03bea872f5" translate="yes" xml:space="preserve">
          <source>If supported &lt;a href=&quot;qopengltexture&quot;&gt;QOpenGLTexture&lt;/a&gt; makes use of immutable texture storage. However, if immutable texture storage is not available, then the specified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cd89d4383a17885538acb0c6ff7a1bfc596cecc" translate="yes" xml:space="preserve">
          <source>If supported, this function returns the image format of the device</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3700156043c98bdcdedd8c3e4cc86bf22e24c8cc" translate="yes" xml:space="preserve">
          <source>If supported, this function returns the image format of the file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f35c3cb138b031ca04b325b12836c2865b3aa239" translate="yes" xml:space="preserve">
          <source>If supportsGeocoding() returns false an &lt;a href=&quot;qgeocodereply#Error-enum&quot;&gt;QGeoCodeReply::UnsupportedOptionError&lt;/a&gt; will occur.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83815fd33f2c7e79f83fc5c9c50e54d383e33042" translate="yes" xml:space="preserve">
          <source>If supportsReverseGeocoding() returns false an &lt;a href=&quot;qgeocodereply#Error-enum&quot;&gt;QGeoCodeReply::UnsupportedOptionError&lt;/a&gt; will occur.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aa224130c78bdb51f337b83719591bbc6c0e56b" translate="yes" xml:space="preserve">
          <source>If supportsRouteUpdates() returns false an &lt;a href=&quot;qgeoroutereply#Error-enum&quot;&gt;QGeoRouteReply::UnsupportedOptionError&lt;/a&gt; will occur.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58b280295bc3c05c05e845f898d4b642803dc270" translate="yes" xml:space="preserve">
          <source>If supportsRouteUpdates() returns true then the &lt;a href=&quot;qgeoroutingmanager&quot;&gt;QGeoRoutingManager&lt;/a&gt; supports updating route information based on position updates. This will cause the travel time and distance estimates to be updated, and any QGeoRouteSegments already traversed to be removed from the route.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd6338c94d0a5cb89ffff4e332fe26cd31f810c4" translate="yes" xml:space="preserve">
          <source>If tablet tracking is disabled (the default), the widget only receives tablet move events when the stylus is in contact with the tablet, or at least one stylus button is pressed, while the stylus is being moved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eceb971a6a7c35daf1d68ef4889a82c05130622c" translate="yes" xml:space="preserve">
          <source>If tablet tracking is enabled, the widget receives tablet move events even while hovering in proximity. This is useful for monitoring position as well as the auxiliary properties such as rotation and tilt, and providing feedback in the UI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="447e8ba71cd3ff84c74d1e66414c2447862e9100" translate="yes" xml:space="preserve">
          <source>If tablet tracking is switched off, tablet move events only occur if the stylus is in contact with the tablet, or at least one stylus button is pressed, while the stylus is being moved. If tablet tracking is switched on, tablet move events occur even while the stylus is hovering in proximity of the tablet, with no buttons pressed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98fbebc84eeef34c3e50e5520965b08a0949730c" translate="yes" xml:space="preserve">
          <source>If that fails, it tries the &lt;a href=&quot;qapplication#activeWindow&quot;&gt;active window.&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e7df36aeed1dd0835db0e2aa62ff299ebc08183" translate="yes" xml:space="preserve">
          <source>If that happens, first the operating system then &lt;a href=&quot;qrandomgenerator&quot;&gt;QRandomGenerator&lt;/a&gt; will fall back to Pseudo Random Number Generators of decreasing qualities (Qt's fallback generator being the simplest). Whether those generators are still of cryptographic quality is implementation-defined. Therefore, &lt;a href=&quot;qrandomgenerator#system&quot;&gt;QRandomGenerator::system&lt;/a&gt;() should not be used for high-frequency random number generation, lest the entropy pool become empty. As a rule of thumb, this class should not be called upon to generate more than a kilobyte per second of random data (note: this may vary from system to system).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6064cf1af52687e0f96e8a01b7a0e6be1525b885" translate="yes" xml:space="preserve">
          <source>If that is not the case, an attempt is made to turn the string into a http:// or ftp:// URL. The latter in the case the string starts with 'ftp'. The result is then passed through &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt;'s tolerant parser, and in the case or success, a valid &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; is returned, or else a &lt;a href=&quot;qurl#QUrl&quot;&gt;QUrl&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bde586d1fb59867c60f360fe99427ae76274e7b" translate="yes" xml:space="preserve">
          <source>If that is the case, then the following code is valid:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70f4d1cbb67cdc30beae88588e4fe9b94c31405e" translate="yes" xml:space="preserve">
          <source>If that worked, you should be able to find your application in Windows' start screen. To remove your application, use Windows' built-in way to uninstall applications (right-click or tap and hold the application and choose &lt;code&gt;Uninstall&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d9b7696c9777c3fdef5f5f1690ef14ee23382d9" translate="yes" xml:space="preserve">
          <source>If the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39edb557a6c965ce9b2f57fe41679f15380cdd78" translate="yes" xml:space="preserve">
          <source>If the &quot;compute&quot; slot does not take exactly one &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;, one int and one double in the specified order, the call will fail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fef763c80f9a52304c958846ae57e2fad56750e5" translate="yes" xml:space="preserve">
          <source>If the &quot;new&quot; parent widget is the old parent widget, this function does nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cea9baade05bb62152bca56b3ecceaac2d5ab90d" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-animation-example.html#coloranimation&quot;&gt;ColorAnimation&lt;/a&gt; is defined within a &lt;a href=&quot;https://doc.qt.io/qt-5.13/qmlexampletoggleswitch.html#transition&quot;&gt;Transition&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-behavior&quot;&gt;Behavior&lt;/a&gt;, this value defaults to the value defined in the end state of the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qmlexampletoggleswitch.html#transition&quot;&gt;Transition&lt;/a&gt;, or the value of the property change that triggered the &lt;a href=&quot;qml-qtquick-behavior&quot;&gt;Behavior&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c57d83bf1af8eb8defd7ada9f2a4e84aba60a53" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-animation-example.html#coloranimation&quot;&gt;ColorAnimation&lt;/a&gt; is defined within a &lt;a href=&quot;https://doc.qt.io/qt-5.13/qmlexampletoggleswitch.html#transition&quot;&gt;Transition&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-behavior&quot;&gt;Behavior&lt;/a&gt;, this value defaults to the value defined in the starting state of the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qmlexampletoggleswitch.html#transition&quot;&gt;Transition&lt;/a&gt;, or the current value of the property at the moment the &lt;a href=&quot;qml-qtquick-behavior&quot;&gt;Behavior&lt;/a&gt; is triggered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd643e2175549d2a9aa76d048e7298bf86d1f69b" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-animation-example.html#propertyanimation&quot;&gt;PropertyAnimation&lt;/a&gt; is defined within a &lt;a href=&quot;https://doc.qt.io/qt-5.13/qmlexampletoggleswitch.html#transition&quot;&gt;Transition&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-behavior&quot;&gt;Behavior&lt;/a&gt;, this value defaults to the value defined in the end state of the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qmlexampletoggleswitch.html#transition&quot;&gt;Transition&lt;/a&gt;, or the value of the property change that triggered the &lt;a href=&quot;qml-qtquick-behavior&quot;&gt;Behavior&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e05c6ef7ca6695ae28fc825a17a91ff0f63aa827" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-animation-example.html#propertyanimation&quot;&gt;PropertyAnimation&lt;/a&gt; is defined within a &lt;a href=&quot;https://doc.qt.io/qt-5.13/qmlexampletoggleswitch.html#transition&quot;&gt;Transition&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-behavior&quot;&gt;Behavior&lt;/a&gt;, this value defaults to the value defined in the starting state of the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qmlexampletoggleswitch.html#transition&quot;&gt;Transition&lt;/a&gt;, or the current value of the property at the moment the &lt;a href=&quot;qml-qtquick-behavior&quot;&gt;Behavior&lt;/a&gt; is triggered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61e52a48ebaef33d7f0289d4b88a75d93335f9fe" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;location-places-qml#plugin&quot;&gt;Plugin&lt;/a&gt; cannot accommodate any of the preferred locales, the manager falls back to using a supported language that is backend specific.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0eaa512128734e60dbfe2319432c18d5ea8ff5d" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;location-places-qml#plugin&quot;&gt;Plugin&lt;/a&gt; supports it, categories can be created or removed. To create a new category construct a new Category object and set its properties, then invoke the &lt;a href=&quot;qml-qtlocation-category#save-method&quot;&gt;save()&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32f3945bec4ea25ebe0db5f58d8d0b30d0974766" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;location-places-qml#plugin&quot;&gt;Plugin&lt;/a&gt; supports it, the Place type can be used to save a place. First create a new Place and set its properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f59ff483eb71e9e18fc226a9f8e979b7240ee0bd" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;location-places-qml#plugin&quot;&gt;plugin&lt;/a&gt; property is not set or the plugin does not support mapping, this property is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d1895fcff58a64fbd047970f3b9ceec677a0702" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qabstractvideobuffer#MapMode-enum&quot;&gt;MapMode&lt;/a&gt; included the &lt;a href=&quot;qabstractvideobuffer#MapMode-enum&quot;&gt;QAbstractVideoBuffer::WriteOnly&lt;/a&gt; flag this will persist the current content of the mapped memory to the video frame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="995d8d64289255fbd88afbb60cf183e6c4c7248b" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qabstractvideobuffer#MapMode-enum&quot;&gt;MapMode&lt;/a&gt; included the &lt;code&gt;QAbstractVideoBuffer::WriteOnly&lt;/code&gt; flag this will write the current content of the mapped memory back to the video frame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7f94b276b9dce8ae03cb763a8074574f87c379f" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qaudioinput&quot;&gt;QAudioInput&lt;/a&gt; is able to access the system's audio device, &lt;a href=&quot;qaudioinput#state&quot;&gt;state&lt;/a&gt;() returns &lt;a href=&quot;qaudio#State-enum&quot;&gt;QAudio::IdleState&lt;/a&gt;, &lt;a href=&quot;qaudioinput#error&quot;&gt;error&lt;/a&gt;() returns &lt;a href=&quot;qaudio#Error-enum&quot;&gt;QAudio::NoError&lt;/a&gt; and the &lt;a href=&quot;qaudioinput#stateChanged&quot;&gt;stateChanged&lt;/a&gt;() signal is emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bb843d610e3e1ede30a15b01798984e3f71c680" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qaudioinput&quot;&gt;QAudioInput&lt;/a&gt; is able to successfully get audio data, &lt;a href=&quot;qaudioinput#state&quot;&gt;state&lt;/a&gt;() returns either &lt;a href=&quot;qaudio#State-enum&quot;&gt;QAudio::ActiveState&lt;/a&gt; or &lt;a href=&quot;qaudio#State-enum&quot;&gt;QAudio::IdleState&lt;/a&gt;, &lt;a href=&quot;qaudioinput#error&quot;&gt;error&lt;/a&gt;() returns &lt;a href=&quot;qaudio#Error-enum&quot;&gt;QAudio::NoError&lt;/a&gt; and the &lt;a href=&quot;qaudioinput#stateChanged&quot;&gt;stateChanged&lt;/a&gt;() signal is emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c4e06a8d0ade56fc9b2976dfae47a9eb02babd3" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qaudiooutput&quot;&gt;QAudioOutput&lt;/a&gt; is able to access the system's audio device, &lt;a href=&quot;qaudiooutput#state&quot;&gt;state&lt;/a&gt;() returns &lt;a href=&quot;qaudio#State-enum&quot;&gt;QAudio::IdleState&lt;/a&gt;, &lt;a href=&quot;qaudiooutput#error&quot;&gt;error&lt;/a&gt;() returns &lt;a href=&quot;qaudio#Error-enum&quot;&gt;QAudio::NoError&lt;/a&gt; and the &lt;a href=&quot;qaudiooutput#stateChanged&quot;&gt;stateChanged&lt;/a&gt;() signal is emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b65ed1ee70f314ca3df1888d87805acda3137187" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qaudiooutput&quot;&gt;QAudioOutput&lt;/a&gt; is able to successfully output audio data, &lt;a href=&quot;qaudiooutput#state&quot;&gt;state&lt;/a&gt;() returns &lt;a href=&quot;qaudio#State-enum&quot;&gt;QAudio::ActiveState&lt;/a&gt;, &lt;a href=&quot;qaudiooutput#error&quot;&gt;error&lt;/a&gt;() returns &lt;a href=&quot;qaudio#Error-enum&quot;&gt;QAudio::NoError&lt;/a&gt; and the &lt;a href=&quot;qaudiooutput#stateChanged&quot;&gt;stateChanged&lt;/a&gt;() signal is emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4b29df6d1ecf35a297df6442b54c450bf1db3a1" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qbluetoothserviceinfo#Protocol-enum&quot;&gt;Protocol&lt;/a&gt; is not supported on a platform, calling &lt;a href=&quot;qbluetoothsocket#connectToService&quot;&gt;connectToService&lt;/a&gt;() will emit a &lt;a href=&quot;qbluetoothsocket#SocketError-enum&quot;&gt;UnsupportedProtocolError&lt;/a&gt; error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3edf74d52c22b2e64ad4ff77c966c0925faf31f9" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qbluetoothserviceinfo#Protocol-enum&quot;&gt;QBluetoothServiceInfo::Protocol&lt;/a&gt; is not supported by a platform, &lt;a href=&quot;qbluetoothserver#listen&quot;&gt;listen&lt;/a&gt;() will return &lt;code&gt;false&lt;/code&gt;. Android and &lt;a href=&quot;supported-platforms#winrt&quot;&gt;WinRT&lt;/a&gt; only support RFCOMM for example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c58bda1740369b3e5339429aa0ef305171dcd94" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qboxlayout&quot;&gt;QBoxLayout&lt;/a&gt; is not the top-level layout (i.e. it is not managing all of the widget's area and children), you must add it to its parent layout before you can do anything with it. The normal way to add a layout is by calling parentLayout-&amp;gt;&lt;a href=&quot;qboxlayout#addLayout&quot;&gt;addLayout&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="594df039bb96eb35e8504de0a5ba227d27bca09f" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qboxlayout&quot;&gt;QBoxLayout&lt;/a&gt;'s orientation is &lt;a href=&quot;qt#Orientation-enum&quot;&gt;Qt::Horizontal&lt;/a&gt; the boxes are placed in a row, with suitable sizes. Each widget (or other box) will get at least its minimum size and at most its maximum size. Any excess space is shared according to the stretch factors (more about that below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="298039a28c24e2ac4e9f63a2c0de0f3aae3e0c41" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qboxlayout&quot;&gt;QBoxLayout&lt;/a&gt;'s orientation is &lt;a href=&quot;qt#Orientation-enum&quot;&gt;Qt::Vertical&lt;/a&gt;, the boxes are placed in a column, again with suitable sizes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="722e54fbcf5fb4c6486499ea8626d0ffc74a883c" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qcompleter#popup&quot;&gt;popup&lt;/a&gt;() is a &lt;a href=&quot;qlistview&quot;&gt;QListView&lt;/a&gt;, it is automatically setup to display this column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67d9a434872e97e6aedcef8997a54a976d839d4a" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qdatetime#timeSpec&quot;&gt;timeSpec&lt;/a&gt;() is &lt;a href=&quot;qt#TimeSpec-enum&quot;&gt;Qt::LocalTime&lt;/a&gt; and the resulting date and time fall in the Standard Time to Daylight-Saving Time transition hour then the result will be adjusted accordingly, i.e. if the transition is at 2am and the clock goes forward to 3am and the result falls between 2am and 3am then the result will be adjusted to fall after 3am.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78ec7c0a6b5f19237669f97ee33fad86f2b063b6" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qdatetime#timeSpec&quot;&gt;timeSpec&lt;/a&gt;() is &lt;a href=&quot;qt#TimeSpec-enum&quot;&gt;Qt::LocalTime&lt;/a&gt; or &lt;a href=&quot;qt#TimeSpec-enum&quot;&gt;Qt::TimeZone&lt;/a&gt; then the date and time are checked to see if they fall in the Standard Time to Daylight-Saving Time transition hour, i.e. if the transition is at 2am and the clock goes forward to 3am then the time from 02:00:00 to 02:59:59.999 is considered to be invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd078436e757c578c7a5f048000a757a00b2b969" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qdatetime#timeSpec&quot;&gt;timeSpec&lt;/a&gt;() is &lt;a href=&quot;qt#TimeSpec-enum&quot;&gt;Qt::LocalTime&lt;/a&gt; then an instance of the current system time zone will be returned. Note however that if you copy this time zone the instance will not remain in sync if the system time zone changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0de8846b0d37ee56f2b2c1203468d5e1a58791a0" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qdatetime#timeSpec&quot;&gt;timeSpec&lt;/a&gt;() is &lt;a href=&quot;qt#TimeSpec-enum&quot;&gt;Qt::LocalTime&lt;/a&gt; then the host system is queried for the correct abbreviation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1185357a32ff3f16f954d328654856af5065290a" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qdatetime#timeSpec&quot;&gt;timeSpec&lt;/a&gt;() is &lt;a href=&quot;qt#TimeSpec-enum&quot;&gt;Qt::LocalTime&lt;/a&gt; this will be the difference between the Local Time and UTC including any Daylight-Saving Offset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a6003d961d132ecfd5454246f23e45072c0dc8a" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qdatetime#timeSpec&quot;&gt;timeSpec&lt;/a&gt;() is &lt;a href=&quot;qt#TimeSpec-enum&quot;&gt;Qt::OffsetFromUTC&lt;/a&gt; this will be in the format &quot;UTC[+-]00:00&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d92d86cb0458dd5d81ea836719ac95f4d4e552fe" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qdatetime#timeSpec&quot;&gt;timeSpec&lt;/a&gt;() is &lt;a href=&quot;qt#TimeSpec-enum&quot;&gt;Qt::OffsetFromUTC&lt;/a&gt; this will be the value originally set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="717670371a83a1eb2fbbe832bcb5d5d36fa966dd" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qdatetime#timeSpec&quot;&gt;timeSpec&lt;/a&gt;() is &lt;a href=&quot;qt#TimeSpec-enum&quot;&gt;Qt::TimeZone&lt;/a&gt; this will be the offset effective in the Time Zone including any Daylight-Saving Offset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa3f30a67057ba500afc6891c4eb72a4eb3c031c" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qdatetime#timeSpec&quot;&gt;timeSpec&lt;/a&gt;() is &lt;a href=&quot;qt#TimeSpec-enum&quot;&gt;Qt::UTC&lt;/a&gt; this will be &quot;UTC&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="826cda9940d4b814f0965fea72373c8b1eb48926" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qdatetime#timeSpec&quot;&gt;timeSpec&lt;/a&gt;() is &lt;a href=&quot;qt#TimeSpec-enum&quot;&gt;Qt::UTC&lt;/a&gt; this will be 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca82830845aed68de1047d4bdbc79113cdc270fb" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qeventloop#ProcessEventsFlag-enum&quot;&gt;QEventLoop::WaitForMoreEvents&lt;/a&gt; flag is not set in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39e12fb6ba16e9c9efb1cfedbc26406f02a8d5a3" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qeventloop#ProcessEventsFlag-enum&quot;&gt;QEventLoop::WaitForMoreEvents&lt;/a&gt; flag is set in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09a997fa78f7ad1d100d74ee2fdecba7123a9caf" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qgeoserviceprovider&quot;&gt;QGeoServiceProvider&lt;/a&gt; supports it, categories can be created and removed. This functionality is available in the &lt;a href=&quot;qplacemanager&quot;&gt;QPlaceManager&lt;/a&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9a279806616e7fc33eb625bee7f80ecee5948fc" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qgraphicslayoutitem&quot;&gt;QGraphicsLayoutItem&lt;/a&gt; represents a &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;, and it wants to take advantage of the automatic reparenting capabilities of &lt;a href=&quot;graphicsview#qgraphicslayout&quot;&gt;QGraphicsLayout&lt;/a&gt; it should set this value. Note that if you delete</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b420145bc8348be537e64b606837672cd4b7338" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qgridlayout&quot;&gt;QGridLayout&lt;/a&gt; is not the top-level layout (i.e. does not manage all of the widget's area and children), you must add it to its parent layout when you create it, but before you do anything with it. The normal way to add a layout is by calling &lt;a href=&quot;qgridlayout#addLayout&quot;&gt;addLayout&lt;/a&gt;() on the parent layout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4e8829d77e1fc392b6ebd81ad34cb35e73c82f8" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qinputmethodevent#commitString&quot;&gt;commitString&lt;/a&gt;() should replace parts of the of the text in the editor, &lt;a href=&quot;qinputmethodevent#replacementLength&quot;&gt;replacementLength&lt;/a&gt;() will contain the number of characters to be replaced. &lt;a href=&quot;qinputmethodevent#replacementStart&quot;&gt;replacementStart&lt;/a&gt;() contains the position at which characters are to be replaced relative from the start of the preedit string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aef19a264151d360e0a29e1f573c44dd53768547" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qlabel&quot;&gt;QLabel&lt;/a&gt; is deleted in the meantime, the &lt;code&gt;label&lt;/code&gt; variable will hold &lt;code&gt;nullptr&lt;/code&gt; instead of an invalid address, and the last line will never be executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9368f33ef30c1886627039b1a476050716d5cfdb" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qmake-variable-reference#config&quot;&gt;CONFIG&lt;/a&gt; variable contains the &lt;code&gt;qt&lt;/code&gt; value, qmake's support for Qt applications is enabled. This makes it possible to fine-tune which of the Qt modules are used by your application. This is achieved with the &lt;a href=&quot;qmake-variable-reference#qt&quot;&gt;QT&lt;/a&gt; variable which can be used to declare the required extension modules. For example, we can enable the XML and network modules in the following way:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2551ed9a3578b278afdad26efc320c00ff945252" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qmediatimeinterval#start&quot;&gt;start&lt;/a&gt;() time of the interval is greater than the &lt;a href=&quot;qmediatimeinterval#end&quot;&gt;end&lt;/a&gt;() time, then the returned interval has the start and end times swapped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab2f1b129d238eab9fa0120884e3499facd452e8" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qmessagebox#StandardButton-enum&quot;&gt;standard buttons&lt;/a&gt; are not flexible enough for your message box, you can use the &lt;a href=&quot;qmessagebox#addButton&quot;&gt;addButton&lt;/a&gt;() overload that takes a text and a &lt;a href=&quot;qmessagebox#ButtonRole-enum&quot;&gt;ButtonRole&lt;/a&gt; to add custom buttons. The &lt;a href=&quot;qmessagebox#ButtonRole-enum&quot;&gt;ButtonRole&lt;/a&gt; is used by &lt;a href=&quot;qmessagebox&quot;&gt;QMessageBox&lt;/a&gt; to determine the ordering of the buttons on screen (which varies according to the platform). You can test the value of &lt;a href=&quot;qmessagebox#clickedButton&quot;&gt;clickedButton&lt;/a&gt;() after calling &lt;a href=&quot;qmessagebox#exec&quot;&gt;exec&lt;/a&gt;(). For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72e84a942ad5137dc81a148ef1501eac8bce21e9" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qml-qt3d-render-renderpass&quot;&gt;RenderPass&lt;/a&gt; defines a Parameter, it will be overridden by a Parameter with the same name if it exists in any of the Technique, Effect, Material, &lt;a href=&quot;qml-qt3d-render-techniquefilter&quot;&gt;TechniqueFilter&lt;/a&gt;, &lt;a href=&quot;qml-qt3d-render-renderpassfilter&quot;&gt;RenderPassFilter&lt;/a&gt; associated with the pass at runtime. This still can be useful to define sane default values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c15c8be92ab6fa15bd7fc88ecce7e062ffe1a35c" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qml-qtlocation-place#placeId-prop&quot;&gt;placeId&lt;/a&gt; property is set, the backend will update an existing place otherwise it will create a new place. On success the &lt;a href=&quot;qml-qtlocation-place#placeId-prop&quot;&gt;placeId&lt;/a&gt; property will be updated with the identifier of the newly saved place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e75e01efe96e923ca8f3e6a294931357f8138d01" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qml-qtlocation-place#placeId-prop&quot;&gt;placeId&lt;/a&gt; property was previously empty, it will be assigned a valid value automatically during a successful save operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa483c5a186aa9660a0b2e2d5a1bb7b270644b04" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qml-qtmultimedia-audio#seekable-prop&quot;&gt;seekable&lt;/a&gt; property is true, seeks the current playback position to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df47ded20f21e5d162225ae9db8ff836711c25ce" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qml-qtmultimedia-mediaplayer#seekable-prop&quot;&gt;seekable&lt;/a&gt; property is true, seeks the current playback position to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7243a012f3e1c8b5a9c37d0d8b2a932dfc88c1e6" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qml-qtmultimedia-video#seekable-prop&quot;&gt;seekable&lt;/a&gt; property is true, seeks the current playback position to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="152e4faaaeccd7f875c626f3c8e7ace540a3d42e" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qml-qtqml-models-delegatemodel#model-prop&quot;&gt;model&lt;/a&gt; is a &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; subclass, the delegate can also reference a &lt;code&gt;hasModelChildren&lt;/code&gt; property (optionally qualified by a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1635a445cfe7aaa5bdf8fd05ce31d0d056c94126" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qml-qtquick-controls-textfield&quot;&gt;TextField&lt;/a&gt; has an input mask, the length will include mask characters and may differ from the length of the string returned by the &lt;a href=&quot;qml-qtquick-controls-textfield#text-prop&quot;&gt;text&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36f655dd854280a64ebc0a1cbd70350cf20cfa42" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qml-qtquick-image&quot;&gt;Image&lt;/a&gt; object omitted the &lt;code&gt;root&lt;/code&gt; prefix, it would inadvertently access the unset &lt;code&gt;PathView.scale&lt;/code&gt; attached property on itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ab69095111fa0f97795730c77fd1cc7cde27aad" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qml-qtquick-image#source-prop&quot;&gt;source&lt;/a&gt; URL indicates a non-existing local file or resource, the Image element attempts to auto-detect the file extension. If an existing file can be found by appending any of the supported image file extensions to the &lt;a href=&quot;qml-qtquick-image#source-prop&quot;&gt;source&lt;/a&gt; URL, then that file will be loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e4d49b7735dbe6296163ffbe2c38fec234ab99b" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qml-qtquick-item#width-prop&quot;&gt;width&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-item#height-prop&quot;&gt;height&lt;/a&gt; properties are not specified, the Image automatically uses the size of the loaded image. By default, specifying the width and height of the item causes the image to be scaled to that size. This behavior can be changed by setting the &lt;a href=&quot;qml-qtquick-image#fillMode-prop&quot;&gt;fillMode&lt;/a&gt; property, allowing the image to be stretched and tiled instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="003716147db025babba320aa8a17f95d1e40f0fb" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qml-qtquick-layouts-gridlayout&quot;&gt;GridLayout&lt;/a&gt; is resized, all items in the layout will be rearranged. It is similar to the widget-based &lt;a href=&quot;qgridlayout&quot;&gt;QGridLayout&lt;/a&gt;. All visible children of the &lt;a href=&quot;qml-qtquick-layouts-gridlayout&quot;&gt;GridLayout&lt;/a&gt; element will belong to the layout. If you want a layout with just one row or one column, you can use the &lt;a href=&quot;qml-qtquick-layouts-rowlayout&quot;&gt;RowLayout&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-layouts-columnlayout&quot;&gt;ColumnLayout&lt;/a&gt;. These offer a bit more convenient API, and improve readability.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b0170bcfd25e40e1da00b8d0ba5c32d01017e06" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qml-qtquick-layouts-gridlayout#columns-prop&quot;&gt;columns&lt;/a&gt; property is specified, it will be treated as a maximum limit of how many columns the layout can have, before the auto-positioning wraps back to the beginning of the next row. The &lt;a href=&quot;qml-qtquick-layouts-gridlayout#columns-prop&quot;&gt;columns&lt;/a&gt; property is only used when &lt;a href=&quot;qml-qtquick-layouts-gridlayout#flow-prop&quot;&gt;flow&lt;/a&gt; is &lt;code&gt;GridLayout.LeftToRight&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="216f47127aa4394a02f38e29c93fc0924b07aa47" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qml-qtquick-loader#active-prop&quot;&gt;active&lt;/a&gt; property is &lt;code&gt;false&lt;/code&gt; at the time when this function is called, the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fecb4661ca8d297f88790434481613a6e41a8928" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qml-qtquick-loader#source-prop&quot;&gt;source&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-loader#sourceComponent-prop&quot;&gt;sourceComponent&lt;/a&gt; changes, any previously instantiated items are destroyed. Setting &lt;a href=&quot;qml-qtquick-loader#source-prop&quot;&gt;source&lt;/a&gt; to an empty string or setting &lt;a href=&quot;qml-qtquick-loader#sourceComponent-prop&quot;&gt;sourceComponent&lt;/a&gt; to &lt;code&gt;undefined&lt;/code&gt; destroys the currently loaded object, freeing resources and leaving the Loader empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="328f889a8dc9c7ef2e3d8f37a54efad844e1a9fd" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qml-qtquick-mousearea#hoverEnabled-prop&quot;&gt;hoverEnabled&lt;/a&gt; property is false then these properties will only be valid while a button is pressed, and will remain valid as long as the button is held down even if the mouse is moved outside the area.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88568b979df6f5a62d5ca69ea67e41b601f8d5bc" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qml-qtquick-numberanimation&quot;&gt;NumberAnimation&lt;/a&gt; is defined within a &lt;a href=&quot;https://doc.qt.io/qt-5.13/qmlexampletoggleswitch.html#transition&quot;&gt;Transition&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-behavior&quot;&gt;Behavior&lt;/a&gt;, this value defaults to the value defined in the end state of the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qmlexampletoggleswitch.html#transition&quot;&gt;Transition&lt;/a&gt;, or the value of the property change that triggered the &lt;a href=&quot;qml-qtquick-behavior&quot;&gt;Behavior&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00fd47b9f721798c6485572d9a3e0143f84416dd" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qml-qtquick-numberanimation&quot;&gt;NumberAnimation&lt;/a&gt; is defined within a &lt;a href=&quot;https://doc.qt.io/qt-5.13/qmlexampletoggleswitch.html#transition&quot;&gt;Transition&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-behavior&quot;&gt;Behavior&lt;/a&gt;, this value defaults to the value defined in the starting state of the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qmlexampletoggleswitch.html#transition&quot;&gt;Transition&lt;/a&gt;, or the current value of the property at the moment the &lt;a href=&quot;qml-qtquick-behavior&quot;&gt;Behavior&lt;/a&gt; is triggered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffd97a952333bf737fe9503d3dbea14563c29617" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qml-qtquick-parentanimation&quot;&gt;ParentAnimation&lt;/a&gt; is defined within a &lt;a href=&quot;https://doc.qt.io/qt-5.13/qmlexampletoggleswitch.html#transition&quot;&gt;Transition&lt;/a&gt;, this value defaults to the value defined in the end state of the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qmlexampletoggleswitch.html#transition&quot;&gt;Transition&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="074c499d56e899161b539f8a383cb0ac42e39aaf" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qml-qtquick-particles-particlegroup&quot;&gt;ParticleGroup&lt;/a&gt; is a direct child of a &lt;a href=&quot;qml-qtquick-particles-particlesystem&quot;&gt;ParticleSystem&lt;/a&gt;, it will automatically be associated with it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73d627619913df3726af138861d42a5062abc3f9" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qml-qtquick-pathview#highlightRangeMode-prop&quot;&gt;highlightRangeMode&lt;/a&gt; is StrictlyEnforceRange then this property determines the speed that the items move along the path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="800a978ddac2f5dd1760b9158fc33e52cc0be72a" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qml-qtquick-propertyaction&quot;&gt;PropertyAction&lt;/a&gt; is defined within a &lt;a href=&quot;https://doc.qt.io/qt-5.13/qmlexampletoggleswitch.html#transition&quot;&gt;Transition&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-behavior&quot;&gt;Behavior&lt;/a&gt;, this value defaults to the value defined in the end state of the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qmlexampletoggleswitch.html#transition&quot;&gt;Transition&lt;/a&gt;, or the value of the property change that triggered the &lt;a href=&quot;qml-qtquick-behavior&quot;&gt;Behavior&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1001c4fef4a1e5371e7469979adc85fe203692c" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qml-qtquick-repeater#model-prop&quot;&gt;model&lt;/a&gt; is a &lt;a href=&quot;qtquick-modelviewsdata-cppmodels#qstringlist-based-model&quot;&gt;string list&lt;/a&gt; or &lt;a href=&quot;qtquick-modelviewsdata-cppmodels#qobjectlist-based-model&quot;&gt;object list&lt;/a&gt;, the delegate is also exposed to a read-only &lt;code&gt;modelData&lt;/code&gt; property that holds the string or object data. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52a81d1156012735a9ee58e99ed02cf6963615a6" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qml-qtquick-repeater#model-prop&quot;&gt;model&lt;/a&gt; is a model object (such as a &lt;a href=&quot;qml-qtqml-models-listmodel&quot;&gt;ListModel&lt;/a&gt;) the delegate can access all model roles as named properties, in the same way that delegates do for view classes like &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81721e37209470aa936d098ecaecf05b391e17e1" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qml-qtquick-rotationanimation&quot;&gt;RotationAnimation&lt;/a&gt; is defined within a &lt;a href=&quot;https://doc.qt.io/qt-5.13/qmlexampletoggleswitch.html#transition&quot;&gt;Transition&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-behavior&quot;&gt;Behavior&lt;/a&gt;, this value defaults to the value defined in the end state of the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qmlexampletoggleswitch.html#transition&quot;&gt;Transition&lt;/a&gt;, or the value of the property change that triggered the &lt;a href=&quot;qml-qtquick-behavior&quot;&gt;Behavior&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f5bdd1d6aa759af0b956c01fc40c76779baae82" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qml-qtquick-rotationanimation&quot;&gt;RotationAnimation&lt;/a&gt; is defined within a &lt;a href=&quot;https://doc.qt.io/qt-5.13/qmlexampletoggleswitch.html#transition&quot;&gt;Transition&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-behavior&quot;&gt;Behavior&lt;/a&gt;, this value defaults to the value defined in the starting state of the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qmlexampletoggleswitch.html#transition&quot;&gt;Transition&lt;/a&gt;, or the current value of the property at the moment the &lt;a href=&quot;qml-qtquick-behavior&quot;&gt;Behavior&lt;/a&gt; is triggered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7dd60b31e8c314c460e0d00de2373f5299ecb9b" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qml-qtquick-text#fontSizeMode-prop&quot;&gt;fontSizeMode&lt;/a&gt; is Text.FixedSize or the &lt;a href=&quot;qml-qtquick-text#font.pixelSize-prop&quot;&gt;font.pixelSize&lt;/a&gt; is -1 this property is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15d6db572151a8996385a346fa715f060e04b8d1" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qml-qtquick-text#fontSizeMode-prop&quot;&gt;fontSizeMode&lt;/a&gt; is Text.FixedSize or the &lt;a href=&quot;qml-qtquick-text#font.pointSize-prop&quot;&gt;font.pointSize&lt;/a&gt; is -1 this property is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="720040cb0e6e31bd38e3985112ccdb0c2d5646c6" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInput&lt;/a&gt; has an &lt;a href=&quot;qml-qtquick-textinput#inputMask-prop&quot;&gt;inputMask&lt;/a&gt; the length will include mask characters and may differ from the length of the string returned by the &lt;a href=&quot;qml-qtquick-textinput#text-prop&quot;&gt;text&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc4a8672b67b9b81f0f13c592b45fd6054fadf10" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInput&lt;/a&gt; has an &lt;a href=&quot;qml-qtquick-textinput#inputMask-prop&quot;&gt;inputMask&lt;/a&gt; the length will include mask characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="494c96ccb50c6c8f11da9bd3e998d89349eca797" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qml-qtquick-vector3danimation&quot;&gt;Vector3dAnimation&lt;/a&gt; is defined within a &lt;a href=&quot;https://doc.qt.io/qt-5.13/qmlexampletoggleswitch.html#transition&quot;&gt;Transition&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-behavior&quot;&gt;Behavior&lt;/a&gt;, this value defaults to the value defined in the end state of the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qmlexampletoggleswitch.html#transition&quot;&gt;Transition&lt;/a&gt;, or the value of the property change that triggered the &lt;a href=&quot;qml-qtquick-behavior&quot;&gt;Behavior&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="851f42b8641b8ed00da021c5f83facaa72eecf5d" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qml-qtquick-vector3danimation&quot;&gt;Vector3dAnimation&lt;/a&gt; is defined within a &lt;a href=&quot;https://doc.qt.io/qt-5.13/qmlexampletoggleswitch.html#transition&quot;&gt;Transition&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-behavior&quot;&gt;Behavior&lt;/a&gt;, this value defaults to the value defined in the starting state of the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qmlexampletoggleswitch.html#transition&quot;&gt;Transition&lt;/a&gt;, or the current value of the property at the moment the &lt;a href=&quot;qml-qtquick-behavior&quot;&gt;Behavior&lt;/a&gt; is triggered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b0a309ffdcd203032629a8b9c6b7058fd0a1122" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; that this &lt;a href=&quot;qjsvalue&quot;&gt;QJSValue&lt;/a&gt; wraps has been deleted, this function returns &lt;code&gt;nullptr&lt;/code&gt; (i.e. it is possible for toQObject() to return &lt;code&gt;nullptr&lt;/code&gt; even when &lt;a href=&quot;qjsvalue#isQObject&quot;&gt;isQObject&lt;/a&gt;() returns true).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac17d14f6994e27c9016ab4859b8db153b7d2eec" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qpagelayout#Mode-enum&quot;&gt;FullPageMode&lt;/a&gt; mode is set then the &lt;a href=&quot;qpagelayout#fullRect&quot;&gt;fullRect&lt;/a&gt;() is returned and the margins must be manually managed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="479bd0c44562d6ecf7385ac721dc59d76791ddda" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qpagelayout#Mode-enum&quot;&gt;StandardMode&lt;/a&gt; mode is set then the existing margins will be clamped to the new</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ca4ea26fedd9f267c21f5863add552498a92d1f" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qpagesize&quot;&gt;QPageSize&lt;/a&gt; instance was obtained from a print device then the name used is that provided by the print device. Note that a print device may not support the current default locale language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="417fb68934dbdaca31378b73ee7364d0c75b7ed4" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qpagesize&quot;&gt;QPageSize&lt;/a&gt; is invalid then the &lt;a href=&quot;qpagesize#Unit-enum&quot;&gt;QPageSize::Unit&lt;/a&gt; will be invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2dda0133e4ea4d56ecb857181cb0f4f1527d99b" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qpagesize&quot;&gt;QPageSize&lt;/a&gt; is invalid then the &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; will be invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aef68b3f4ab049ef8a8de35c736584f3d6312131" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qpagesize&quot;&gt;QPageSize&lt;/a&gt; is invalid then the &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; will be invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38f5cf691fef3a26f36ab016b7d5fb78e650264a" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qpagesize&quot;&gt;QPageSize&lt;/a&gt; is invalid then the &lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; will be invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29e8307594d70b48aaa50d6d9b9d103f3856acb3" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qpagesize&quot;&gt;QPageSize&lt;/a&gt; is invalid then the ID will be &lt;a href=&quot;qpagesize#PageSizeId-enum&quot;&gt;QPageSize::Custom&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="922911748c19edbc01651217ba81bbe4ef6709b3" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qpagesize&quot;&gt;QPageSize&lt;/a&gt; is invalid then the Windows ID will be 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5822deeb489834f54775bda7e9530603daba431" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qpagesize&quot;&gt;QPageSize&lt;/a&gt; is invalid then the key will be an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40956f4392f38a195f6f9faf12554e6f6bba80e3" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qpagesize&quot;&gt;QPageSize&lt;/a&gt; is invalid then the key will be empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4a140821b937a513bbd910a8ed78929dd99227e" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qpagesize&quot;&gt;QPageSize&lt;/a&gt; is invalid then the name will be an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f32bf7d9a8d96a8e4da05228a84029725db818e" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qpagesize&quot;&gt;QPageSize&lt;/a&gt; is invalid then the name will be empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b00008c325ab522557179b5414fabc32908fa5ef" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt; object is already running a process, a warning may be printed at the console, and the existing process will continue running unaffected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be68b9244bb209a560d35c2d5741c8c4c74bc69d" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt; with active focus accepts the key event, propagation stops. Otherwise the event is sent to the Item's parent until the event is accepted, or the root item is reached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f18a7702065d1b88919111ae2826aed27858a792" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt; is a wildcard expression (see &lt;a href=&quot;qregexp#setPatternSyntax&quot;&gt;setPatternSyntax&lt;/a&gt;()) and want to test a string against the whole wildcard expression, use &lt;a href=&quot;qregexp#exactMatch&quot;&gt;exactMatch&lt;/a&gt;() instead of this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="990953de2962e4cc1bbac8aabe8e47715471243a" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qstackedlayout&quot;&gt;QStackedLayout&lt;/a&gt; is empty before this function is called, the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b1c54c9b0e8d3e3389e717628b426912a4037d5" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qstackedwidget&quot;&gt;QStackedWidget&lt;/a&gt; is empty before this function is called,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e39bb934074a66b081d414e93de3693ac7798954" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qstackedwidget&quot;&gt;QStackedWidget&lt;/a&gt; was empty before this function is called, the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="932ab0fe56ffc7e645b6501b54ba6cbedd0e6562" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qt#TimeSpec-enum&quot;&gt;Qt::TimeSpec&lt;/a&gt; is not &lt;a href=&quot;qt#TimeSpec-enum&quot;&gt;Qt::LocalTime&lt;/a&gt; or &lt;a href=&quot;qt#TimeSpec-enum&quot;&gt;Qt::TimeZone&lt;/a&gt; then will always return false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb57c33189467fb2cb5d9a39f758422a51ff1bd5" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qt3drender-qrenderpass&quot;&gt;QRenderPass&lt;/a&gt; defines a &lt;a href=&quot;qt3drender-qparameter&quot;&gt;QParameter&lt;/a&gt;, it will be overridden by a &lt;a href=&quot;qt3drender-qparameter&quot;&gt;QParameter&lt;/a&gt; with the same name if it exists in any of the &lt;a href=&quot;qt3drender-qtechnique&quot;&gt;QTechnique&lt;/a&gt;, &lt;a href=&quot;qt3drender-qeffect&quot;&gt;QEffect&lt;/a&gt;, &lt;a href=&quot;qt3drender-qmaterial&quot;&gt;QMaterial&lt;/a&gt;, &lt;a href=&quot;qt3drender-qtechniquefilter&quot;&gt;QTechniqueFilter&lt;/a&gt;, &lt;a href=&quot;qt3drender-qrenderpassfilter&quot;&gt;QRenderPassFilter&lt;/a&gt; associated with the pass at runtime. This still can be useful to define sane default values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cdc5d678b0d3cb21c160b2f92a0e7bc7e801413" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qtabbar&quot;&gt;QTabBar&lt;/a&gt; was empty before this function is called, the inserted tab becomes the current tab.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf86f72ea7b09e62de555ffd44d624741ffd479f" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qtabwidget&quot;&gt;QTabWidget&lt;/a&gt; was empty before this function is called, the new page becomes the current page. Inserting a new tab at an index less than or equal to the current index will increment the current index, but keep the current page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3dd2b93bcd1c21a01101775eaf6c065e2a1ee5f" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qtextcursor#anchor&quot;&gt;anchor&lt;/a&gt;() is kept where it is and the &lt;a href=&quot;qtextcursor#position&quot;&gt;position&lt;/a&gt;() is moved, the text in between will be selected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b890e4b08be1e3d2511e149727b6098894fd2d1f" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qtextcursor#position&quot;&gt;position&lt;/a&gt;() is at the start of a block, &lt;a href=&quot;qtextcursor#atBlockStart&quot;&gt;atBlockStart&lt;/a&gt;() returns &lt;code&gt;true&lt;/code&gt;; and if it is at the end of a block, &lt;a href=&quot;qtextcursor#atBlockEnd&quot;&gt;atBlockEnd&lt;/a&gt;() returns true. The format of the current character is returned by &lt;a href=&quot;qtextcursor#charFormat&quot;&gt;charFormat&lt;/a&gt;(), and the format of the current block is returned by &lt;a href=&quot;qtextcursor#blockFormat&quot;&gt;blockFormat&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73fc2ba6364ffaa1a13ddfbc511d9cc29e954d7f" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt; is a child object of a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; that has an invokable loadResource method such as &lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt;, &lt;a href=&quot;qtextbrowser&quot;&gt;QTextBrowser&lt;/a&gt; or a &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt; itself then the default implementation tries to retrieve the data from the parent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e9d8dbe1e9f84c020efa7806688ad5a8353b26c" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qtoolbutton&quot;&gt;QToolButton&lt;/a&gt; has a menu, is &lt;a href=&quot;#menu-indicator-sub&quot;&gt;::menu-indicator&lt;/a&gt; subcontrol can be used to style the indicator. By default, the menu-indicator is positioned at the bottom right of the Padding rectangle of the widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c99ca325f153f5fa9646487fb9fe03e77e506ddb" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qtoolbutton&quot;&gt;QToolButton&lt;/a&gt; is in &lt;a href=&quot;qtoolbutton#ToolButtonPopupMode-enum&quot;&gt;QToolButton::MenuButtonPopup&lt;/a&gt; mode, the &lt;a href=&quot;#menu-button-sub&quot;&gt;::menu-button&lt;/a&gt; subcontrol is used to draw the menu button. &lt;a href=&quot;#menu-arrow-sub&quot;&gt;::menu-arrow&lt;/a&gt; subcontrol is used to draw the menu arrow inside the menu-button. By default, it is positioned in the center of the Contents rectangle of the menu-button subcontrol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e18d3e3d03585b770e1b6a68a5e0320e26b5534" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qtquick-visualcanvas-adaptations#openvg&quot;&gt;OpenVG&lt;/a&gt; implementation uses EGL then &lt;a href=&quot;#qmake-incdir-egl&quot;&gt;QMAKE_INCDIR_EGL&lt;/a&gt; may also need to be set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94569eba6dae6f5e99e88714cd1e112ad9c33355" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qtquick-visualcanvas-adaptations#openvg&quot;&gt;OpenVG&lt;/a&gt; implementation uses EGL, then &lt;a href=&quot;#qmake-libdir-egl&quot;&gt;QMAKE_LIBDIR_EGL&lt;/a&gt; may also need to be set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9625b038bf85f77a19fe419dcdd6e87e02fd35d3" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qtquick-visualcanvas-adaptations#openvg&quot;&gt;OpenVG&lt;/a&gt; implementation uses EGL, then &lt;a href=&quot;#qmake-libs-egl&quot;&gt;QMAKE_LIBS_EGL&lt;/a&gt; may also need to be set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7d22a9f0682544c3b3828e664e9f288b9b83728" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; contains a pointer to a type derived from &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; then &lt;code&gt;T&lt;/code&gt; may be any &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; type. If the pointer stored in the &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; can be &lt;a href=&quot;qobject#qobject_cast&quot;&gt;qobject_cast&lt;/a&gt; to T, then that result is returned. Otherwise &lt;code&gt;nullptr&lt;/code&gt; is returned. Note that this only works for &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; subclasses which use the &lt;a href=&quot;qobject#Q_OBJECT&quot;&gt;Q_OBJECT&lt;/a&gt; macro.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57c023fbd0ac0ea1f145d034f2f85c13707a3725" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; contains a sequential container and &lt;code&gt;T&lt;/code&gt; is &lt;a href=&quot;qvariant#QVariantList-typedef&quot;&gt;QVariantList&lt;/a&gt;, the elements of the container will be converted into &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;s and returned as a &lt;a href=&quot;qvariant#QVariantList-typedef&quot;&gt;QVariantList&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbc9ed75a5ddeee0a2184b22c91411d463209c95" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qvariant#type&quot;&gt;type&lt;/a&gt;() is &lt;a href=&quot;qmetatype#Type-enum&quot;&gt;QMetaType::QString&lt;/a&gt;, an invalid date will be returned if the string cannot be parsed as a &lt;a href=&quot;qt#DateFormat-enum&quot;&gt;Qt::ISODate&lt;/a&gt; format date.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7af81be0d07bd597aaca04c1efca593f8e5d42b" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qvariant#type&quot;&gt;type&lt;/a&gt;() is &lt;a href=&quot;qmetatype#Type-enum&quot;&gt;QMetaType::QString&lt;/a&gt;, an invalid date/time will be returned if the string cannot be parsed as a &lt;a href=&quot;qt#DateFormat-enum&quot;&gt;Qt::ISODate&lt;/a&gt; format date/time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71bb5a8292ff3e78c11225f9a5fad7e8f35fd62f" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qvariant#type&quot;&gt;type&lt;/a&gt;() is &lt;a href=&quot;qmetatype#Type-enum&quot;&gt;QMetaType::QString&lt;/a&gt;, an invalid time will be returned if the string cannot be parsed as a &lt;a href=&quot;qt#DateFormat-enum&quot;&gt;Qt::ISODate&lt;/a&gt; format time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca41268ad228e2244f4d1959254c864df7708841" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qvariantanimation#startValue-prop&quot;&gt;startValue&lt;/a&gt; is not defined when the state of the animation changes from Stopped to Running, the current property value is used as the initial value for the animation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c54b11af84dede8d0b0a6006dc95b712a8c17b1" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qxmlstreamreader#tokenType&quot;&gt;tokenType&lt;/a&gt;() is &lt;a href=&quot;qxmlstreamreader#TokenType-enum&quot;&gt;DTD&lt;/a&gt;, this function returns the DTD's name. Otherwise an empty string is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95cffa69244b7b504ee5cd534fb1827666fbaa21" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qxmlstreamreader#tokenType&quot;&gt;tokenType&lt;/a&gt;() is &lt;a href=&quot;qxmlstreamreader#TokenType-enum&quot;&gt;DTD&lt;/a&gt;, this function returns the DTD's notation declarations. Otherwise an empty vector is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aabaa440ac2d787f0b18172205accc8c2fe2bcc3" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qxmlstreamreader#tokenType&quot;&gt;tokenType&lt;/a&gt;() is &lt;a href=&quot;qxmlstreamreader#TokenType-enum&quot;&gt;DTD&lt;/a&gt;, this function returns the DTD's public identifier. Otherwise an empty string is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="093602572d776d51ad71a3eb3548bbbfd2906748" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qxmlstreamreader#tokenType&quot;&gt;tokenType&lt;/a&gt;() is &lt;a href=&quot;qxmlstreamreader#TokenType-enum&quot;&gt;DTD&lt;/a&gt;, this function returns the DTD's system identifier. Otherwise an empty string is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="917db187d0ae1212f0775b902d8bad1b90157431" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qxmlstreamreader#tokenType&quot;&gt;tokenType&lt;/a&gt;() is &lt;a href=&quot;qxmlstreamreader#TokenType-enum&quot;&gt;DTD&lt;/a&gt;, this function returns the DTD's unparsed (external) entity declarations. Otherwise an empty vector is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2b89e94b3295c5d86b23bf708d001b618c794b7" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qxmlstreamreader#tokenType&quot;&gt;tokenType&lt;/a&gt;() is &lt;a href=&quot;qxmlstreamreader#TokenType-enum&quot;&gt;StartDocument&lt;/a&gt;, this function returns the encoding string as specified in the XML declaration. Otherwise an empty string is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="129562d6806a13e33fce4be5441d248f4074b3fe" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qxmlstreamreader#tokenType&quot;&gt;tokenType&lt;/a&gt;() is &lt;a href=&quot;qxmlstreamreader#TokenType-enum&quot;&gt;StartDocument&lt;/a&gt;, this function returns the version string as specified in the XML declaration. Otherwise an empty string is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43567294acc8b06b43df00e0e57e03b8a1f726c2" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;qxmlstreamreader#tokenType&quot;&gt;tokenType&lt;/a&gt;() is &lt;a href=&quot;qxmlstreamreader#TokenType-enum&quot;&gt;StartElement&lt;/a&gt;, this function returns the element's namespace declarations. Otherwise an empty vector is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4fc49cbe93d9d61cac473530062dc9a709791b8" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;GL_EXT_packed_depth_stencil&lt;/code&gt; extension is present, a combined depth and stencil buffer is attached. If the extension is not present, only a depth buffer is attached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="600de86debac52ccae20e8cdc990223233cb18d9" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;MessageBoard&lt;/code&gt; type was &lt;a href=&quot;qtqml-cppintegration-definetypes#registering-c-types-with-the-qml-type-system&quot;&gt;registered&lt;/a&gt; with the QML type system, then a &lt;code&gt;MessageBoard&lt;/code&gt; object declared in QML could receive the &lt;code&gt;newMessagePosted()&lt;/code&gt; signal using a signal handler named &lt;code&gt;onNewMessagePosted&lt;/code&gt;, and examine the &lt;code&gt;subject&lt;/code&gt; parameter value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2180ccad6d07be696255d41c224ad265bc24e5a4" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;MessageBody&lt;/code&gt; type was also registered with the type system, it would be possible to assign &lt;code&gt;MessageBody&lt;/code&gt; to the &lt;code&gt;body&lt;/code&gt; property of a &lt;code&gt;Message&lt;/code&gt;, all from within QML code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eecd9b2682e14d25ac9c6848168db423d265dfce" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;QT_FATAL_WARNINGS&lt;/code&gt; environment variable is set, &lt;a href=&quot;#qWarning&quot;&gt;qWarning&lt;/a&gt;() exits after printing the warning message. This makes it easy to obtain a backtrace in the debugger.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cddbc381c9ece1f0461f1856b619f45897a5681" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;QtQuick&lt;/code&gt; module has been imported, the following helper functions for creating objects of specific data types are also available for clients to use:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c083b0fc06657c12c704c77184201db13f05ae9" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;Rectangle&lt;/code&gt; type in the following example has active focus and the &lt;code&gt;A&lt;/code&gt; key is pressed, the event will not be propagated further. Upon pressing the &lt;code&gt;B&lt;/code&gt; key, the event will propagate to the root item and thus be ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f855a457a0aca24540a24935ce1ed48c71333ddb" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;author&lt;/code&gt; property was writable but did not have an associated NOTIFY signal, the &lt;code&gt;text&lt;/code&gt; value would be initialized with the initial value returned by &lt;code&gt;Message::author()&lt;/code&gt; but would not be updated with any later changes to this property. In addition, any attempts to bind to the property from QML will produce a runtime warning from the engine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57d75f09d13f15f658cd613775cf09d541a6da22" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;fillStyle&lt;/code&gt; or &lt;a href=&quot;qml-qtquick-context2d#strokeStyle-prop&quot;&gt;strokeStyle&lt;/a&gt; is assigned many times in a loop, the last Qt.rgba() syntax should be chosen, as it has the best performance, because it's already a valid &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt; value, does not need to be parsed everytime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c25ae0fde423442960a3433b20bbbc46db8d15a2" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;height&lt;/code&gt; of the &lt;code&gt;Item&lt;/code&gt; changed after the &lt;code&gt;object-&amp;gt;setProperty(&quot;width&quot;, 500)&lt;/code&gt; call, the &lt;code&gt;width&lt;/code&gt; would be updated again, as the binding remains active. However, if the &lt;code&gt;height&lt;/code&gt; changes after the &lt;code&gt;QQmlProperty(object, &quot;width&quot;).write(500)&lt;/code&gt; call, the &lt;code&gt;width&lt;/code&gt; will not be changed, as the binding does not exist anymore.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a47e0ee251303d4abf81407d0ad31e56bbbda67d" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;properties&lt;/code&gt; to be pushed are specified, they will be copied into the item at loading time (in case of a component or URL), or when the item becomes the current item (in case of an inline item). The following example shows how this can be done:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03ef164a05e3edb057814878b7d0f6327c06d316" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;thead&lt;/code&gt; tag is specified, it is used when printing tables that span multiple pages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d21c52d7c9043ed66bf791cac8b54a5d9bc89548" translate="yes" xml:space="preserve">
          <source>If the ActiveX server is an executable, the following command line options are supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2451d1d7b1140e3d251bb52949c3dcc95d8fe0c5" translate="yes" xml:space="preserve">
          <source>If the Animator is defined within a &lt;a href=&quot;https://doc.qt.io/qt-5.13/qmlexampletoggleswitch.html#transition&quot;&gt;Transition&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-behavior&quot;&gt;Behavior&lt;/a&gt;, this value defaults to the value defined in the end state of the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qmlexampletoggleswitch.html#transition&quot;&gt;Transition&lt;/a&gt;, or the value of the property change that triggered the &lt;a href=&quot;qml-qtquick-behavior&quot;&gt;Behavior&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ace23a4d7152794f93e2868fe35c3b541276f2a" translate="yes" xml:space="preserve">
          <source>If the Animator is defined within a &lt;a href=&quot;https://doc.qt.io/qt-5.13/qmlexampletoggleswitch.html#transition&quot;&gt;Transition&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-behavior&quot;&gt;Behavior&lt;/a&gt;, this value defaults to the value defined in the starting state of the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qmlexampletoggleswitch.html#transition&quot;&gt;Transition&lt;/a&gt;, or the current value of the property at the moment the &lt;a href=&quot;qml-qtquick-behavior&quot;&gt;Behavior&lt;/a&gt; is triggered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcd67df4180e4d256a83f98655c3f5c853182e0f" translate="yes" xml:space="preserve">
          <source>If the COM object supports a MIME type then this function is called to initialize the COM object from the data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7da057d582f63e7a927fa2c7bb8a50b2f9cec23" translate="yes" xml:space="preserve">
          <source>If the COM object supports a MIME type then this function is called to store the COM object into</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73beaf203effe044ad469e3d593af920f7f7e382" translate="yes" xml:space="preserve">
          <source>If the COM object supports property notification, this signal gets emitted when the property called</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="587eb95db0622152a6a069969f7c7dfb583b016f" translate="yes" xml:space="preserve">
          <source>If the Imagine style is imported in a QML file that is always loaded, the Imagine style must be deployed with the application in order to be able to run the application regardless of which style the application is run with. By using &lt;a href=&quot;qtquickcontrols2-fileselectors#&quot;&gt;file selectors&lt;/a&gt;, style-specific tweaks can be applied without creating a hard dependency to a style.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cce3189c00dac47539ad474f4fc1f83cfbea8bed" translate="yes" xml:space="preserve">
          <source>If the Loader is inactive, changing the &lt;a href=&quot;qml-qtquick-loader#source-prop&quot;&gt;source&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-loader#sourceComponent-prop&quot;&gt;sourceComponent&lt;/a&gt; will not cause the item to be instantiated until the Loader is made active.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9a1d407c4634ecd2a77855944ae306fcf4ba1ae" translate="yes" xml:space="preserve">
          <source>If the Material style is imported in a QML file that is always loaded, the Material style must be deployed with the application in order to be able to run the application regardless of which style the application is run with. By using &lt;a href=&quot;qtquickcontrols2-fileselectors#&quot;&gt;file selectors&lt;/a&gt;, style-specific tweaks can be applied without creating a hard dependency to a style.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="880686bb519b141e100184039df8f9e528676540" translate="yes" xml:space="preserve">
          <source>If the OpenGL &lt;a href=&quot;qtquick-visualcanvas-scenegraph#&quot;&gt;scene graph&lt;/a&gt; backend is in use, the file search the attempts the OpenGL texture file extensions first. If the search is unsuccessful, it attempts to search with the file extensions for the &lt;a href=&quot;qimagereader#supportedImageFormats&quot;&gt;conventional image file types&lt;/a&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97d2130e7318d6fb8e97bbc72b1da432f38b4f2f" translate="yes" xml:space="preserve">
          <source>If the OpenGL implementation on your system does not support the requested version of OpenGL context, then &lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; will try to create the closest matching version. The actual created context properties can be queried using the &lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt; returned by the &lt;a href=&quot;qopenglcontext#format&quot;&gt;format&lt;/a&gt;() function. For example, if you request a context that supports OpenGL 4.3 Core profile but the driver and/or hardware only supports version 3.2 Core profile contexts then you will get a 3.2 Core profile context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d7121dcef2e5171c37556cface26d4fb49e0c68" translate="yes" xml:space="preserve">
          <source>If the OpenGL implementation uses EGL (most OpenGL/ES systems), then &lt;a href=&quot;#qmake-incdir-egl&quot;&gt;QMAKE_INCDIR_EGL&lt;/a&gt; may also need to be set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff5a67f36eeaa10961a2219b877d2d23d36fa6fd" translate="yes" xml:space="preserve">
          <source>If the OpenGL implementation uses EGL (most OpenGL/ES systems), then &lt;a href=&quot;#qmake-libdir-egl&quot;&gt;QMAKE_LIBDIR_EGL&lt;/a&gt; may also need to be set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="007ce14ff096d43e4e7697d5e3b936aff86ab395" translate="yes" xml:space="preserve">
          <source>If the OpenGL implementation uses EGL (most OpenGL/ES systems), then &lt;a href=&quot;#qmake-libs-egl&quot;&gt;QMAKE_LIBS_EGL&lt;/a&gt; may also need to be set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="365e361ce460f659bafaaa88529693b04fff31d9" translate="yes" xml:space="preserve">
          <source>If the QML is not defined until runtime, you can create a QML object from a string of QML using the &lt;a href=&quot;qml-qtqml-qt#createQmlObject-method&quot;&gt;Qt.createQmlObject()&lt;/a&gt; function, as in the following example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c52942598866b253aafa767bb4261a31182946e7" translate="yes" xml:space="preserve">
          <source>If the QML item needs to receive signals from the context property, it can connect to them using the &lt;a href=&quot;qml-qtqml-connections&quot;&gt;Connections&lt;/a&gt; type. For example, if &lt;code&gt;ApplicationData&lt;/code&gt; has a signal named &lt;code&gt;dataChanged()&lt;/code&gt;, this signal can be connected to using an &lt;code&gt;onDataChanged&lt;/code&gt; handler within a &lt;a href=&quot;qml-qtqml-connections&quot;&gt;Connections&lt;/a&gt; object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3869c2293c2b4cba3d2eaa8c57db80f2cd047504" translate="yes" xml:space="preserve">
          <source>If the SSL handshake is successful, &lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; emits &lt;a href=&quot;qsslsocket#encrypted&quot;&gt;encrypted&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9112871aee14ae94421006ed8b3c09662b0a739" translate="yes" xml:space="preserve">
          <source>If the Timer is not running it will be started, otherwise it will be stopped, reset to initial state and started. The &lt;code&gt;running&lt;/code&gt; property will be true following a call to &lt;code&gt;restart()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2e6888f0e2cc65277a0fac1bf33dc13a3b7b8e2" translate="yes" xml:space="preserve">
          <source>If the Timer is running and one of its properties is changed, the elapsed time will be reset. For example, if a Timer with interval of 1000ms has its</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4411b7c422b558c9ae9b70b3f53e625bf31f81b9" translate="yes" xml:space="preserve">
          <source>If the URL contains more components (for example, a query string) after the example path, \1 can be used as a placeholder for the path:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f659afc989b66ba92782ea2a04546c51f55ee39" translate="yes" xml:space="preserve">
          <source>If the URL is a local file according to &lt;a href=&quot;qurl#isLocalFile&quot;&gt;isLocalFile&lt;/a&gt;() and contains no query or fragment, a local file path is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36ee060e77a2c25fbac57eb717623bacd315b5bb" translate="yes" xml:space="preserve">
          <source>If the URL is a local file, this calls &lt;a href=&quot;qmimedatabase#mimeTypeForFile&quot;&gt;mimeTypeForFile&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbb33236cf6cc560bbc8bc1babe0ae8afbba93a7" translate="yes" xml:space="preserve">
          <source>If the URL is a reference to a local file (i.e., the URL scheme is &quot;file&quot;) then it will be opened with a suitable application instead of a Web browser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2dd5d75e9b1db5a965a86a3900c96f88e94f382" translate="yes" xml:space="preserve">
          <source>If the URL passed to &lt;a href=&quot;qqmlcomponent&quot;&gt;QQmlComponent&lt;/a&gt; is a network resource, or if the QML document references a network resource, the &lt;a href=&quot;qqmlcomponent&quot;&gt;QQmlComponent&lt;/a&gt; has to fetch the network data before it is able to create objects. In this case, the &lt;a href=&quot;qqmlcomponent&quot;&gt;QQmlComponent&lt;/a&gt; will have a &lt;a href=&quot;qqmlcomponent#Status-enum&quot;&gt;Loading&lt;/a&gt;&lt;a href=&quot;qqmlcomponent#status-prop&quot;&gt;status&lt;/a&gt;. An application will have to wait until the component is &lt;a href=&quot;qqmlcomponent#Status-enum&quot;&gt;Ready&lt;/a&gt; before calling &lt;a href=&quot;qqmlcomponent#create&quot;&gt;QQmlComponent::create&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c1d0125f5f4ebf60d58a278d4306d87bd03b636" translate="yes" xml:space="preserve">
          <source>If the Universal style is imported in a QML file that is always loaded, the Universal style must be deployed with the application in order to be able to run the application regardless of which style the application is run with. By using &lt;a href=&quot;qtquickcontrols2-fileselectors#&quot;&gt;file selectors&lt;/a&gt;, style-specific tweaks can be applied without creating a hard dependency to a style.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36c24d01299c2c6244068f653391b307ae0b5104" translate="yes" xml:space="preserve">
          <source>If the \endlegalese command is omitted, QDoc will process the \legalese command but considers the rest of the documentation page as the license agreement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58694bb09ffa0b189fafff98f57e6bb75452eb05" translate="yes" xml:space="preserve">
          <source>If the above conditions cannot be met, the ArcGIS Online subscription is the correct choice, as it gives applications full access to the ArcGIS platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b9e9bd0ef4ebe1ff5fb4802d298c09a24f64527" translate="yes" xml:space="preserve">
          <source>If the action is &lt;a href=&quot;qml-qtquick-controls-action#checkable-prop&quot;&gt;checkable&lt;/a&gt;, this property reflects its checked state. Defaults to &lt;code&gt;false&lt;/code&gt;. Its value is also false while &lt;a href=&quot;qml-qtquick-controls-action#checkable-prop&quot;&gt;checkable&lt;/a&gt; is false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8c7cc1c88277c0cf9099b88e06b59c11e9f4bfa" translate="yes" xml:space="preserve">
          <source>If the action is added to a menu, the menu option will consist of the icon (if there is one), the text, and the shortcut (if there is one). If the text is not explicitly set in the constructor, or by using setText(), the action's description icon text will be used as text. There is no default text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45fbe1b53d6a84db721d801b845ffbf6cb081031" translate="yes" xml:space="preserve">
          <source>If the action is checkable,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8b547b1f743518e9752cee3be27e99db0b2000b" translate="yes" xml:space="preserve">
          <source>If the action is removed from a container widget then &lt;a href=&quot;qwidgetaction#deleteWidget&quot;&gt;QWidgetAction::deleteWidget&lt;/a&gt;() is called with the previously created custom widget as argument. The default implementation hides the widget and deletes it using &lt;a href=&quot;qobject#deleteLater&quot;&gt;QObject::deleteLater&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3e094d405e175530f134338a3d5de0e147dc0e7" translate="yes" xml:space="preserve">
          <source>If the angular distance between two consecutive points in a series is more than 180 degrees, any direct line connecting the two points becomes meaningless, and will not be drawn. Instead, a line will be drawn to and from the center of the chart. Therefore, the axis ranges must be chosen accordingly when displaying line, spline, or area series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a73ac2317f2d4d6cde1666aaf871fc4385dc0ea0" translate="yes" xml:space="preserve">
          <source>If the animation is a parallel &lt;a href=&quot;qanimationgroup&quot;&gt;QAnimationGroup&lt;/a&gt;, the duration will be the longest duration of all its animations. If the animation is a sequential &lt;a href=&quot;qanimationgroup&quot;&gt;QAnimationGroup&lt;/a&gt;, the duration will be the sum of the duration of all its animations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec3faacce6edc490060ffd9f68c6630bc2de0dc7" translate="yes" xml:space="preserve">
          <source>If the animation is already paused or not &lt;code&gt;running&lt;/code&gt;, calling this method has no effect. The &lt;code&gt;paused&lt;/code&gt; property will be true following a call to &lt;code&gt;pause()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab62f01ffc3dbefa884c1b7055c73c8020f1b07b" translate="yes" xml:space="preserve">
          <source>If the animation is already running, calling this method has no effect. The &lt;code&gt;running&lt;/code&gt; property will be true following a call to &lt;code&gt;start()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2f2b16a386091ec932058076dfff0087bf60a67" translate="yes" xml:space="preserve">
          <source>If the animation is already running, this function does nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07b64b34984cc2a60502c4d7bd103c3aa19abf00" translate="yes" xml:space="preserve">
          <source>If the animation is currently stopped or has already reached the end, calling start() will rewind the animation and start again from the beginning. When the animation reaches the end, the animation will either stop, or if the loop level is more than 1, it will rewind and continue from the beginning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c13ae78771eb733faf8daee5faefdac4ad947321" translate="yes" xml:space="preserve">
          <source>If the animation is not paused or not &lt;code&gt;running&lt;/code&gt;, calling this method has no effect. The &lt;code&gt;paused&lt;/code&gt; property will be false following a call to &lt;code&gt;resume()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1772d8d69db30a57d46d1d5b791bcee0b16b46a" translate="yes" xml:space="preserve">
          <source>If the animation is not running, calling this method has no effect. Both the &lt;code&gt;running&lt;/code&gt; and &lt;code&gt;paused&lt;/code&gt; properties will be false following a call to &lt;code&gt;stop()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a5aeb336f108cfde5a73ce5eec1b4f394dcd14e" translate="yes" xml:space="preserve">
          <source>If the animation is not running, calling this method has no effect. The &lt;code&gt;running&lt;/code&gt; property will be false following a call to &lt;code&gt;complete()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="213ad672e547f37784eabbc9bc7adc3e67e66e02" translate="yes" xml:space="preserve">
          <source>If the animation properties changed, calling this method to reload the animation definations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7ff111f90354770ec0f19f41693c70b7777aeae" translate="yes" xml:space="preserve">
          <source>If the animation stops by itself after reaching the end (i.e., &lt;a href=&quot;qabstractanimation#currentLoopTime&quot;&gt;currentLoopTime&lt;/a&gt;() == &lt;a href=&quot;qabstractanimation#duration&quot;&gt;duration&lt;/a&gt;() and &lt;a href=&quot;qabstractanimation#currentLoop-prop&quot;&gt;currentLoop&lt;/a&gt;() &amp;gt; &lt;a href=&quot;qabstractanimation#loopCount-prop&quot;&gt;loopCount&lt;/a&gt;() - 1), the &lt;a href=&quot;qabstractanimation#finished&quot;&gt;finished&lt;/a&gt;() signal is emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a24eddc7009a4e909fac30e4f8985f1950ebec8b" translate="yes" xml:space="preserve">
          <source>If the application can handle files that don't exist yet, it should pass the flag &lt;a href=&quot;qurl#UserInputResolutionOption-enum&quot;&gt;AssumeLocalFile&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19112ce1ec27fc25656c3af926cbfb90c4a338cf" translate="yes" xml:space="preserve">
          <source>If the application changes its mind while saving, it can call cancelWriting(), which sets an error code so that &lt;a href=&quot;qsavefile#commit&quot;&gt;commit&lt;/a&gt;() will discard the temporary file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a78ca2f5e1da51f3197d9361a4b0c66044ea3059" translate="yes" xml:space="preserve">
          <source>If the application has been restored from an earlier session, this identifier is the same as it was in that previous session. The session identifier is guaranteed to be unique both for different applications and for different instances of the same application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19e13ce8b8b1ddcf5b6792f170de693320389f09" translate="yes" xml:space="preserve">
          <source>If the application has been restored from an earlier session, this identifier is the same as it was in the earlier session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61131594650cf5c60c4c9d5eea8a5d98d2375836" translate="yes" xml:space="preserve">
          <source>If the application has been restored from an earlier session, this key is the same as it was when the previous session ended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75145b02a29dd165daa8373e8f062449cfecce16" translate="yes" xml:space="preserve">
          <source>If the application intends to allow users to purchase products, it also needs to listen for the &lt;a href=&quot;qinappstore#transactionReady&quot;&gt;QInAppStore::transactionReady&lt;/a&gt;() signal to be notified when a transaction is pending.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f02d74c5dad21abdff91266fba2344ed58c9b10" translate="yes" xml:space="preserve">
          <source>If the application is in &lt;code&gt;WhatsThis&lt;/code&gt; mode the shortcut will not emit the signals, but will show the &quot;What's This?&quot; text instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8452440bda5fd3df4005e6157ad66d296cf97bb6" translate="yes" xml:space="preserve">
          <source>If the application is still running when the session is shut down, it wants to be restarted at the start of the next session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d539813098901c7f9f4150e76338a1147a08bd0c" translate="yes" xml:space="preserve">
          <source>If the application is unable to write to the location specified by &lt;code&gt;location&lt;/code&gt; the &lt;a href=&quot;qml-qtmultimedia-cameracapture&quot;&gt;CameraCapture&lt;/a&gt; will emit an error. The most likely reasons for the application to be unable to write to a location is that the path is wrong and the location does not exists, or the application does not have write permission for that location.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="382a8d62bc3d46c06c84bd22a3496699fd886be5" translate="yes" xml:space="preserve">
          <source>If the application is uninstalled and subsequently reinstalled (or installed by the same user on a different device) you should provide a way to restore the previously purchased unlockable products in the external market place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="654718941a80f92a2ba7c5f9cf9b7f1705aaac05" translate="yes" xml:space="preserve">
          <source>If the application is uninstalled and subsequently reinstalled (or installed by the same user on a different device), you must provide a way to restore the previously purchased unlockable products.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6caae6c479676e34fb282a23e2e47776763a61c2" translate="yes" xml:space="preserve">
          <source>If the application needs to be informed of basic parsing events, it can implement this interface and activate it using &lt;a href=&quot;qxmlreader#setContentHandler&quot;&gt;QXmlReader::setContentHandler&lt;/a&gt;(). The reader can then report basic document-related events like the start and end of elements and character data through this interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6a3f6df53ca1c4caeeba06ab9fddc33f6653515" translate="yes" xml:space="preserve">
          <source>If the argument contains spaces or other punctuation, enclose the argument in curly brackets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19c3d074a0f01647a5c297a03eb52eb6e47cd651" translate="yes" xml:space="preserve">
          <source>If the array is empty, this function returns a &lt;a href=&quot;qcborvalue&quot;&gt;QCborValue&lt;/a&gt; containing an undefined value. For that reason, it is not possible with this function to tell apart the situation where the array is not large enough from the case where the array ends with an undefined value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98443c8aae77dcccbc818bdacd67789c3b570f92" translate="yes" xml:space="preserve">
          <source>If the array is smaller than</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48cd30d0d04470542d073bc60120f9e379458c2f" translate="yes" xml:space="preserve">
          <source>If the associated controller object is in the &lt;a href=&quot;qlowenergycontroller#Role-enum&quot;&gt;central&lt;/a&gt; role, this signal is emitted when the value of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a133b796a2e717bb6bc7de075b2da6c46dfe5f8" translate="yes" xml:space="preserve">
          <source>If the attachee item is not currently associated with any graphical surface, the properties are set to the values of the default surface format. When it becomes associated with a surface, all properties will update.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eda07ac976affd9e4411f4ad3e957e44ce9a622c" translate="yes" xml:space="preserve">
          <source>If the attribute describes the position for the vertex, the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76b2ff4b8973a440686f21404eddebebe7c03389" translate="yes" xml:space="preserve">
          <source>If the attribute is &quot;true&quot;, the value is not meant to be translated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8e49bc02b0244f374df93e6fad2d1f555944cce" translate="yes" xml:space="preserve">
          <source>If the author of CppType adds a &lt;code&gt;root&lt;/code&gt; property to CppType in a new version of their type definition, &lt;code&gt;root.x&lt;/code&gt; now resolves to a different value because &lt;code&gt;root&lt;/code&gt; is also the &lt;code&gt;id&lt;/code&gt; of the top level component. The author could specify that the new &lt;code&gt;root&lt;/code&gt; property is available from a specific minor version. This permits new properties and features to be added to existing types without breaking existing programs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="866d8d479aed97743905191dce84ed5f7e5b245a" translate="yes" xml:space="preserve">
          <source>If the backend has lost its reference to the reading it can call this method to get the address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8eca0d3518ec5d526af344dcbd53c4c8246fe1a" translate="yes" xml:space="preserve">
          <source>If the base is non-zero, the parent axis segment count will be ignored when the grid line and label positions are calculated. If you want the range to be divided into equal segments like a normal value axis, set this property value to zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cbe4573061932df00aa9605e93f0eeaf4e94816" translate="yes" xml:space="preserve">
          <source>If the bearer type is &lt;a href=&quot;qnetworkconfiguration#BearerType-enum&quot;&gt;unknown&lt;/a&gt; the &lt;a href=&quot;qnetworkconfiguration#bearerTypeName&quot;&gt;bearerTypeName&lt;/a&gt;() function can be used to retrieve a textural type name for the bearer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46a0022e35075cbed766bb651df4db0a349f487c" translate="yes" xml:space="preserve">
          <source>If the block has no explicit direction set, it will resolve the direction from the blocks content. Returns either &lt;a href=&quot;qt#LayoutDirection-enum&quot;&gt;Qt::LeftToRight&lt;/a&gt; or &lt;a href=&quot;qt#LayoutDirection-enum&quot;&gt;Qt::RightToLeft&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c285daddf26ab92ecdbca9bee75c3440c78f3a6" translate="yes" xml:space="preserve">
          <source>If the block represents a list item, returns the list that the item belongs to; otherwise returns &lt;code&gt;nullptr&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adfeb7b4590f0fdbc88ced5c8080b16a1c1478c6" translate="yes" xml:space="preserve">
          <source>If the blue and the yellow widget are nested on the same level they will be resized such that the yellowWidget is twice as big as the blueWidget</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d69f494343718f0fe05d5313a7cd87d9c0b7ac9" translate="yes" xml:space="preserve">
          <source>If the browser supports WebAssembly, then Qt should run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39f961c65cf911dbc7947b008521f91668661e85" translate="yes" xml:space="preserve">
          <source>If the buffer size is limited to a certain size, &lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; won't buffer more than this size of data. Exceptionally, a buffer size of 0 means that the read buffer is unlimited and all incoming data is buffered. This is the default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf22e5727fa0a684fe0df62ee2b8af9c7a086078" translate="yes" xml:space="preserve">
          <source>If the buffer size is limited to a certain size, &lt;a href=&quot;qlocalsocket&quot;&gt;QLocalSocket&lt;/a&gt; won't buffer more than this size of data. Exceptionally, a buffer size of 0 means that the read buffer is unlimited and all incoming data is buffered. This is the default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa64aeec48c20dcf2d49a9352c10620fbbc1cb3a" translate="yes" xml:space="preserve">
          <source>If the buffer size is limited to a certain size, &lt;a href=&quot;qserialport&quot;&gt;QSerialPort&lt;/a&gt; will not buffer more than this size of data. The special case of a buffer size of &lt;code&gt;0&lt;/code&gt; means that the read buffer is unlimited and all incoming data is buffered. This is the default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ab4d30cb62ff9c7747c8bc7a7b1eb630afe157b" translate="yes" xml:space="preserve">
          <source>If the buffer size is limited to a certain size, &lt;a href=&quot;qwebsocket&quot;&gt;QWebSocket&lt;/a&gt; won't buffer more than this size of data. Exceptionally, a buffer size of 0 means that the read buffer is unlimited and all incoming data is buffered. This is the default. This option is useful if you only read the data at certain points in time (for example, in a real-time streaming application) or if you want to protect your socket against receiving too much data, which may eventually cause your application to run out of memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c55314884668388c06dbb9517268d8a5b418aa7a" translate="yes" xml:space="preserve">
          <source>If the buffer was not mapped with read access, the contents of this buffer will initially be uninitialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f4745985a23852c82428e6a97e61ac2bc531a88" translate="yes" xml:space="preserve">
          <source>If the built-in validators aren't sufficient, you can subclass &lt;a href=&quot;qvalidator&quot;&gt;QValidator&lt;/a&gt;. The class has two virtual functions: &lt;a href=&quot;qvalidator#validate&quot;&gt;validate&lt;/a&gt;() and &lt;a href=&quot;qvalidator#fixup&quot;&gt;fixup&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aa7a0e6776a38e7bebdf6b08e3fb209fbb17c45" translate="yes" xml:space="preserve">
          <source>If the button has already been added, it is removed and added again with the new role.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b63ebc9d1c5ec91f3fe7f811f066414e18532c59" translate="yes" xml:space="preserve">
          <source>If the button has no text, the text() function will return an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71b84ee4ffa6717ec359df60579eb27838958834" translate="yes" xml:space="preserve">
          <source>If the button is a text button with a string containing an ampersand ('&amp;amp;'), &lt;a href=&quot;qabstractbutton&quot;&gt;QAbstractButton&lt;/a&gt; automatically creates a shortcut key. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2162fddd59e8855061900635c394f0cdb6da29a7" translate="yes" xml:space="preserve">
          <source>If the button is checkable,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="330b7f7428a5232cd89e9079f6bd606639160cf0" translate="yes" xml:space="preserve">
          <source>If the button is not a member of any &lt;a href=&quot;qbuttongroup&quot;&gt;QButtonGroup&lt;/a&gt;, this function returns &lt;code&gt;nullptr&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92446e8d511b3b7b59888b3a40e32595448d826b" translate="yes" xml:space="preserve">
          <source>If the byte array being appended to is not empty, a deep copy of the data is performed, taking &lt;a href=&quot;containers#linear-time&quot;&gt;linear time&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8405494fd63e19f44b082aa8cf333535bb90d03" translate="yes" xml:space="preserve">
          <source>If the byte array being prepended to is not empty, a deep copy of the data is performed, taking &lt;a href=&quot;containers#linear-time&quot;&gt;linear time&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47d6ac681ee5e69d47af35d2b81c3a13e006fe16" translate="yes" xml:space="preserve">
          <source>If the cache does not contains a cache item for the url then no action is taken.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ba78c74e99d2812322bc20a627d698ae6baf718" translate="yes" xml:space="preserve">
          <source>If the cache is full then the item at the opposite end of the cache from where the new item is appended or prepended will be removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03f8a070ac93d07243ca625717415af5f0e5dd8e" translate="yes" xml:space="preserve">
          <source>If the calendar widget's &lt;a href=&quot;qcalendarwidget#dateEditEnabled-prop&quot;&gt;date edit is enabled&lt;/a&gt;, this property specifies the amount of time (in millseconds) that the date edit remains open after the most recent user input. Once this time has elapsed, the date specified in the date edit is accepted and the popup is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f72074b50b6ef6b231e155e8f73a50f555fb3a17" translate="yes" xml:space="preserve">
          <source>If the call succeeds, &lt;a href=&quot;qdbusabstractinterface#lastError&quot;&gt;lastError&lt;/a&gt;() will be cleared; otherwise, it will contain the error this call produced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bf6ff8712f27c8a44caf4e5da8b57e61a2ef9b6" translate="yes" xml:space="preserve">
          <source>If the call was successful the &lt;a href=&quot;qmodbusserver#dataWritten&quot;&gt;dataWritten&lt;/a&gt;() signal is emitted. Note that the signal is not emitted when</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4823792bf0096e540a9c89dfb504037d30bff5ae" translate="yes" xml:space="preserve">
          <source>If the call was successful the &lt;a href=&quot;qmodbusserver#dataWritten&quot;&gt;dataWritten&lt;/a&gt;() signal is emitted. Note that the signal is not emitted when the addressed register has not changed. This may happen when</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f21859468db699913648d7d486f7d380941c3288" translate="yes" xml:space="preserve">
          <source>If the camera doesn't support keeping one of parameters between shots, the related lock state changes to &lt;a href=&quot;qcamera#LockStatus-enum&quot;&gt;QCamera::Unlocked&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="510fe475f837d2c4b26e5d97c657908918a3d6c0" translate="yes" xml:space="preserve">
          <source>If the camera focus mode is set to use an autofocusing mode, this property controls the way the camera will select areas of the frame to use for autofocusing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6964e9f6f3019733fc393614d159fc0913839e5" translate="yes" xml:space="preserve">
          <source>If the camera is used to capture videos or images, the viewfinder resolution might be ignored if it conflicts with the capture resolution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c252432ba823711fac0d1b05c60a7fbcd478d8a" translate="yes" xml:space="preserve">
          <source>If the camera is used to capture videos or images, the viewfinder settings might be ignored if they conflict with the capture settings. You can check the actual viewfinder settings once the camera is in the &lt;code&gt;Camera.ActiveStatus&lt;/code&gt; status.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f4e5fe2611ca2d0329d876013d7f77397290a1d" translate="yes" xml:space="preserve">
          <source>If the camera is used to capture videos or images, the viewfinder settings might be ignored if they conflict with the capture settings. You can check the actual viewfinder settings once the camera is in the &lt;code&gt;QCamera::ActiveStatus&lt;/code&gt; status.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8cc81bd8544bd70219ed543a50586968ec8d181" translate="yes" xml:space="preserve">
          <source>If the camera supports arbitrary ISO sensitivities within the supported range, *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b40907928e4d65de7e7fc9d28336cb932bbb1223" translate="yes" xml:space="preserve">
          <source>If the camera supports arbitrary aperture values within the supported range, *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="742595295fc8b5abeebdd54bfe4aeeceaa48c5f0" translate="yes" xml:space="preserve">
          <source>If the camera supports arbitrary exposure parameter value within the supported range, *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cf78b0c8478275846f30793e73e28583df2a4b6" translate="yes" xml:space="preserve">
          <source>If the camera supports arbitrary shutter speed values within the supported range, *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4dc16672c96ad25755a371b9687a8d13c69a834" translate="yes" xml:space="preserve">
          <source>If the canvas is ready and there has been a successful call to &lt;a href=&quot;qml-qtquick-canvas#getContext-method&quot;&gt;getContext()&lt;/a&gt; or the &lt;a href=&quot;qml-qtquick-canvas#contextType-prop&quot;&gt;contextType&lt;/a&gt; property has been set with a supported context type, this property will contain the current drawing context, otherwise null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d37fefe74944db5dc7244a4d8c28b3daacd5d18b" translate="yes" xml:space="preserve">
          <source>If the capture mode is changed while camera is active, it's recommended to change status to &lt;a href=&quot;qcamera#Status-enum&quot;&gt;QCamera::LoadedStatus&lt;/a&gt; and start activating the camera in the next event loop with the status changed to &lt;a href=&quot;qcamera#Status-enum&quot;&gt;QCamera::StartingStatus&lt;/a&gt;. This allows the capture settings to be applied before camera is started. Than change the status to QCamera::StartedStatus when the capture mode change is done.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2de3fb740c84d0ce8a444bb64b2eefbcdc2b5db6" translate="yes" xml:space="preserve">
          <source>If the categories need to be refreshed or reloaded, the &lt;a href=&quot;qplacemanager#initializeCategories&quot;&gt;initializeCategories&lt;/a&gt;() function may be called again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7040de3d43172c7bc21af20a30972a2f99386a6f" translate="yes" xml:space="preserve">
          <source>If the cell is already occupied, the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76e9d54753559cd448778327e1b58f57fa57f806" translate="yes" xml:space="preserve">
          <source>If the centers of the two geo rectangles are separated by exactly 180.0 degrees then the width is set to 360.0 degrees with the leftmost longitude set to -180.0 degrees and the rightmost longitude set to 180.0 degrees. This is done to ensure that the result is independent of the order of the operands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d36020f8cde1b8c8875b3b635c01445a375b68f" translate="yes" xml:space="preserve">
          <source>If the change in height would cause the geo rectangle to cross a pole, the height is adjusted such that the geo rectangle only touches the pole.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a5580568992a3379125911dae2c2c60e64ea29e" translate="yes" xml:space="preserve">
          <source>If the characteristic's &lt;a href=&quot;qlowenergycharacteristic#properties&quot;&gt;properties&lt;/a&gt;() permit writing of new values, the value can be updated using &lt;a href=&quot;qlowenergyservice#writeCharacteristic&quot;&gt;QLowEnergyService::writeCharacteristic&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9261356d6470068847ceebd0aa6ba8d2f99484b" translate="yes" xml:space="preserve">
          <source>If the check box is checked,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d9af1217049bb120cd68568b1b694f7aecd22b8" translate="yes" xml:space="preserve">
          <source>If the child has already been inserted somewhere else it won't be inserted again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06a311cfe102a345f7a141ffd552aa31cc1c4c16" translate="yes" xml:space="preserve">
          <source>If the chosen transition stays in this group, another duration (+/- up to &lt;a href=&quot;qml-qtquick-particles-particlegroup#durationVariation-prop&quot;&gt;durationVariation&lt;/a&gt;) milliseconds will occur before another transition is attempted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="047a9df1d2f77f4949640019f857e18e185571ef" translate="yes" xml:space="preserve">
          <source>If the class declaration is found in the file &lt;code&gt;myclass.h&lt;/code&gt;, the moc output should be put in a file called &lt;code&gt;moc_myclass.cpp&lt;/code&gt;. This file should then be compiled as usual, resulting in an object file, e.g., &lt;code&gt;moc_myclass.obj&lt;/code&gt; on Windows. This object should then be included in the list of object files that are linked together in the final building phase of the program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1288e0ee4dd2f0b704620dba6cf67fdbdb429f40" translate="yes" xml:space="preserve">
          <source>If the class has no superclasses with class information, the offset is 0; otherwise the offset is the sum of all the class information items in the class's superclasses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fcd4ae2276233bc95d0deffd34cfb7d51811d1d" translate="yes" xml:space="preserve">
          <source>If the class has no superclasses with enumerators, the offset is 0; otherwise the offset is the sum of all the enumerators in the class's superclasses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe5c4d79e2d93bd238d9e4ffa688d5d0f578c9d7" translate="yes" xml:space="preserve">
          <source>If the code is longer than one line and hence within a block, we use semicolons to indicate the end of each statement:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0329a0e8b6331d826375a49c35ddb78a4d1ecec" translate="yes" xml:space="preserve">
          <source>If the codec cannot be detected from the content provided,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f84b16eba35e0d4d1d7fd1793d46c38d5967e2a" translate="yes" xml:space="preserve">
          <source>If the codec cannot be detected from the content provided, this overload returns a Latin-1 &lt;a href=&quot;qtextcodec&quot;&gt;QTextCodec&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc625a2f58c240b7d6e3d2c6793d5cf89d1944ea" translate="yes" xml:space="preserve">
          <source>If the codec is registered as a character set in the &lt;a href=&quot;http://www.iana.org/assignments/character-sets/character-sets.xml#&quot;&gt;IANA character-sets encoding file&lt;/a&gt; this method should return the preferred mime name for the codec if defined, otherwise its name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="566a92c3dfdf1c0f65c62c0d6807bc812fc61246" translate="yes" xml:space="preserve">
          <source>If the color table is expanded, all the extra colors will be set to transparent (i.e &lt;a href=&quot;qcolor#qRgba&quot;&gt;qRgba&lt;/a&gt;(0, 0, 0, 0)).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48843dcbdfb5d0331719a0f538334d427aaf7c00" translate="yes" xml:space="preserve">
          <source>If the combo box is editable, the current text is the value displayed by the line edit. Otherwise, it is the value of the current item or an empty string if the combo box is empty or no current item is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb2e5ffc597240b4a481287162d6efa52f70d6dd" translate="yes" xml:space="preserve">
          <source>If the command is used within a table, you can also specify how many rows or columns the item should span.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffb7c8642996d44b0ba3b94a3d3d67d82e10fa10" translate="yes" xml:space="preserve">
          <source>If the command supports compression this function must be overridden in the derived class to return the correct ID. The base implementation returns -1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5ee0f450552153750ad37d70d68622452433fb1" translate="yes" xml:space="preserve">
          <source>If the commit string should replace parts of the of the text in the editor,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24820c1629b905761c5ecf93d214da6995fa6045" translate="yes" xml:space="preserve">
          <source>If the compilation of a plugin succeeds but it cannot be loaded, make sure that the following requirements are met:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3ea874d7e7a00dedbcad6fc36359fb400165cd8" translate="yes" xml:space="preserve">
          <source>If the component's UUID is used the following patterns can be used to initialize the control on a remote machine, to initialize a licensed control or to connect to a running object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02ee6de6a0821f1794b2e37f050bfed51034b615" translate="yes" xml:space="preserve">
          <source>If the connection to a host node is lost, the replica will transition to the invalid state. It will attempt to reconnect and will re-initialize if the connection is restored (this making sure all properties are current).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d72bd3a1b21b03f01d95838141a1e26387ba9e7" translate="yes" xml:space="preserve">
          <source>If the contact patch is unknown, or the &lt;a href=&quot;qml-qtquick-pointerevent#device-prop&quot;&gt;device&lt;/a&gt; is not a touchscreen, these values will be zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38f0414b85a01fe46be1c1aac0e68300cdd1dc82" translate="yes" xml:space="preserve">
          <source>If the contact patch is unknown, or the device is not a touchscreen, these values will be zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab70d6bef6c2dc2315b22c801a97d6625e98a143" translate="yes" xml:space="preserve">
          <source>If the contained pointer is &lt;code&gt;nullptr&lt;/code&gt; behavior is undefined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4b671de3552a68b0fcb3419b3970944934b40fb" translate="yes" xml:space="preserve">
          <source>If the contained pointer is &lt;code&gt;nullptr&lt;/code&gt;, behavior is undefined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8e5f8f352798385ab0fed9294fb595088a54da5" translate="yes" xml:space="preserve">
          <source>If the container format is not specified, the encoder will choose format, depending on media source properties and encoding settings selected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a03e89042cf5befb4bc7b5b01a0034192c351af4" translate="yes" xml:space="preserve">
          <source>If the container in the &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; does not support bi-directional iteration, calling this function leads to undefined results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cd208f557b2733ae0888d36597f102b8b4b3a60" translate="yes" xml:space="preserve">
          <source>If the content of the &lt;a href=&quot;qqmlscriptstring&quot;&gt;QQmlScriptString&lt;/a&gt; is a boolean literal, returns the boolean value and sets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf2162bf359efe67e584b0aa3b929f7a5603e21e" translate="yes" xml:space="preserve">
          <source>If the content of the &lt;a href=&quot;qqmlscriptstring&quot;&gt;QQmlScriptString&lt;/a&gt; is a number literal, returns that number and sets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce232720f231759dc41f53fce2cbe318d50af654" translate="yes" xml:space="preserve">
          <source>If the content of the &lt;a href=&quot;qqmlscriptstring&quot;&gt;QQmlScriptString&lt;/a&gt; is a string literal, returns that string. Otherwise returns a null &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7895dec9304a117af6b0042adce3e8701a05443" translate="yes" xml:space="preserve">
          <source>If the content size is less than or equal to the size of the &lt;a href=&quot;qml-qtquick-controls2-scrollview&quot;&gt;ScrollView&lt;/a&gt;, it will not be flickable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b63dc9138a530e029b429b6f139ef28aa57c6b9" translate="yes" xml:space="preserve">
          <source>If the contentItem has no implicit size and only one child, Pane will use the implicit size of that child. For example, in the following code, the Pane will assume the size of the Rectangle:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17039b8264bd8a2c133344b6b9db2a85b3321bfd" translate="yes" xml:space="preserve">
          <source>If the context has not yet been created, the result is based on the requested format set via &lt;a href=&quot;qopenglcontext#setFormat&quot;&gt;setFormat&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b983073855e985608b82238c731bbad8fbbe9e67" translate="yes" xml:space="preserve">
          <source>If the context is a media element, returns the URL of that media.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3911824085a133e8a2c6f1ae6e331c3f24e32c7" translate="yes" xml:space="preserve">
          <source>If the context is a word considered misspelled by the spell-checker, returns a list of suggested replacements for &lt;a href=&quot;qwebenginecontextmenudata#misspelledWord&quot;&gt;misspelledWord&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af15438e95d8006a11c568b00115a16f7bed2aba" translate="yes" xml:space="preserve">
          <source>If the context is a word considered misspelled by the spell-checker, returns a list of suggested replacements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4e43b4ef941c7c7d61f281dd5b98b344ca85f86" translate="yes" xml:space="preserve">
          <source>If the context is a word considered misspelled by the spell-checker, returns the misspelled word.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c9fca8ab26a2304aaf3a5b9047bf8929d23852a" translate="yes" xml:space="preserve">
          <source>If the context is temporarily not needed, such as when the application is not rendering, it can be useful to delete it in order to free resources. You can connect to the &lt;a href=&quot;qopenglcontext#aboutToBeDestroyed&quot;&gt;aboutToBeDestroyed&lt;/a&gt;() signal to clean up any resources that have been allocated with different ownership from the &lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efcda093907d473eaac067ba07f8f66072b74179" translate="yes" xml:space="preserve">
          <source>If the context type is not supported or the canvas has previously been requested to provide a different and incompatible context type, &lt;code&gt;null&lt;/code&gt; will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb95a22a20fc0e5e9d31ded1cbd557f9b469fa31" translate="yes" xml:space="preserve">
          <source>If the control needs to be initialized using custom data, call this function in your reimplementation of &lt;a href=&quot;qaxwidget#initialize&quot;&gt;initialize&lt;/a&gt;(). This function is not called by the default implementation of &lt;a href=&quot;qaxwidget#initialize&quot;&gt;initialize&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba37a847cf793872b77b239cb1571e1d2adc2774" translate="yes" xml:space="preserve">
          <source>If the controller instance is not connected or the controller has performed the service discovery already this function will do nothing.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
