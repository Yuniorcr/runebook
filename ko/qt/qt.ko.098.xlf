<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="qt">
    <body>
      <group id="qt">
        <trans-unit id="2a94de1f9599ab6c712cd35bf0a9849c97475228" translate="yes" xml:space="preserve">
          <source>Agner Fog's excellent manuals on optimizing C++ applications at: &lt;a href=&quot;http://www.agner.org/optimize/&quot;&gt;http://www.agner.org/optimize/&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25f8c55de811edc2de6f3ed75740fcb5cc026a34" translate="yes" xml:space="preserve">
          <source>Alarm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84ae24b32e0757ffd869a13cd09b220f64cde619" translate="yes" xml:space="preserve">
          <source>AlarmRole - alarm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="626e2c8b18fd2e15f69d93d94822e265cf5c0305" translate="yes" xml:space="preserve">
          <source>AlarmTest</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d71c45b3d8a817df46d53626270c2cc92e52793f" translate="yes" xml:space="preserve">
          <source>Albanian</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7df59902809eeb4e4a1839cd506ddaaa23974eb3" translate="yes" xml:space="preserve">
          <source>Albanian Layout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="035d51ecaddbf637d23d4cbf5e58ebc58bf90c74" translate="yes" xml:space="preserve">
          <source>AlbumArtist</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef036156b1031815f72e564d911843c78ec9a8e8" translate="yes" xml:space="preserve">
          <source>AlbumTitle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cab0d78fb0b493300ab3055642e1eb2e4893ce6b" translate="yes" xml:space="preserve">
          <source>Alert Notification UUID (service). The Alert Notification service exposes alert information on a device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32a9f3f3bca2e5375f9e6c266cfd6aa3762876c2" translate="yes" xml:space="preserve">
          <source>Algorithmic Complexity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee4adfabffeac002e9880f514fa23dd2ae4be0b0" translate="yes" xml:space="preserve">
          <source>Algorithmic complexity attacks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dee12adf940a4866d13c69ce6826a54c2a6df502" translate="yes" xml:space="preserve">
          <source>Algorithmic complexity is concerned about how fast (or slow) each function is as the number of items in the container grow. For example, inserting an item in the middle of a &lt;a href=&quot;qlinkedlist&quot;&gt;QLinkedList&lt;/a&gt; is an extremely fast operation, irrespective of the number of items stored in the &lt;a href=&quot;qlinkedlist&quot;&gt;QLinkedList&lt;/a&gt;. On the other hand, inserting an item in the middle of a &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; is potentially very expensive if the &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; contains many items, since half of the items must be moved one position in memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="200c3a24676882b8154ff00dd327a21c65fbb806" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;qpainter#worldTransform&quot;&gt;worldTransform&lt;/a&gt;(). Returns the world transformation matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d86bb50e114dd0141f5042df262e4c7d95b8092" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;char16_t&lt;/code&gt; for non-Windows or if Q_COMPILER_UNICODE_STRINGS is defined. Otherwise, alias for &lt;code&gt;wchar_t&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="490c2c407635d0244071608d900e09a705dbfa43" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;const QChar&lt;/code&gt;. Provided for compatibility with the STL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ec623e0461ea14eb9628f09c85d919e993acce4" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;const char&lt;/code&gt;. Provided for compatibility with the STL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50ff20f3a90ecc8ee1e1833cc51493aa9f49fb64" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;doc&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cfffb021e626f1d2457a4ae8de6f380bd8280be" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;int&lt;/code&gt;. Provided for compatibility with the STL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9f9a27883a9ced4a2adbfae331ca950d346a72e" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;qmltype&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87d43f00e137bfc41021f330feb3c11372748926" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;reference&lt;/code&gt;. Provided for compatibility with the STL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5819fa179a9ccd748ee7c972613227469246a578" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;std::ptrdiff_t&lt;/code&gt;. Provided for compatibility with the STL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="792ee24dece0f77ad1263df9b7a9dd91c8863cef" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;value_type &amp;amp;&lt;/code&gt;. Provided for compatibility with the STL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af0ee0197c0a387144fedde9808f2bdf7d154bf6" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;value_type *&lt;/code&gt;. Provided for compatibility with the STL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d487200a9649c73be3381606574ae62a9ff8d2fa" translate="yes" xml:space="preserve">
          <source>Alias for Name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d805e3cc858dda6026dbaf8670e924b298140d4" translate="yes" xml:space="preserve">
          <source>Alias for qsizetype. Provided for compatibility with the STL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bc0bf905c236b42eeb835ddcb5bb0c215aa415c" translate="yes" xml:space="preserve">
          <source>Aliased Painting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d51b7920c2719e285d28d19a3d360306ec7c369b" translate="yes" xml:space="preserve">
          <source>Aliases are only activated once a component has been fully initialized. An error is generated when an uninitialized alias is referenced. Likewise, aliasing an aliasing property will also result in an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="490b7b5691b0bb5c0f88b43b25ec42bf90a79d82" translate="yes" xml:space="preserve">
          <source>AlignHCenter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94aa0f37574161ba1dbceadad9e47a91d18671d3" translate="yes" xml:space="preserve">
          <source>AlignLeft</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1daeb4002b81e8892b03491dcd5cbf01ad1b80a0" translate="yes" xml:space="preserve">
          <source>AlignTop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecd9b7b370093de4c957d8941a2867ddbe9d0a29" translate="yes" xml:space="preserve">
          <source>AlignVCenter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f8c5176c3f03b97659161923f2b6492f7de7e73" translate="yes" xml:space="preserve">
          <source>Alignment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfe2a90af777e880090dde7a8b3440112c4c02ea" translate="yes" xml:space="preserve">
          <source>Aligns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0091ce96c8923400116eed1eea4cc7b887aa636f" translate="yes" xml:space="preserve">
          <source>Aligns the lines containing the selection or the cursor at the center. Requires &lt;code&gt;contenteditable=&quot;true&quot;&lt;/code&gt;. (Added in Qt 5.10)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca7ada7b68a158888cda78d8b0d362e5487dfecc" translate="yes" xml:space="preserve">
          <source>Aligns the lines containing the selection or the cursor to the left. Requires &lt;code&gt;contenteditable=&quot;true&quot;&lt;/code&gt;. (Added in Qt 5.10)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33c6f516c8ba691a51dc11db116ebbfc7895b4a4" translate="yes" xml:space="preserve">
          <source>Aligns the lines containing the selection or the cursor to the right. Requires &lt;code&gt;contenteditable=&quot;true&quot;&lt;/code&gt;. (Added in Qt 5.10)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71ab4748eca1f0fa0eb3323e8287b4d03da222bd" translate="yes" xml:space="preserve">
          <source>Aligns with the baseline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15a244f626bf58052ead8b6fe59a1461fbccd1e3" translate="yes" xml:space="preserve">
          <source>Aligns with the bottom.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="925c7896fcf1eeab5eaad692ccdf728460fe3a1f" translate="yes" xml:space="preserve">
          <source>Aligns with the left edge.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8cdf68e4c63c04974b8504d5d9cb862471b1bd1" translate="yes" xml:space="preserve">
          <source>Aligns with the right edge.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="939e533f8fd5c98ef1211644b7f98e7d531264be" translate="yes" xml:space="preserve">
          <source>Aligns with the top.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06c9cee6afcd2c2d349c4b3481b5e4b928c13747" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt;-based objects have a &lt;code&gt;state&lt;/code&gt; property, and can specify additional states by adding new &lt;code&gt;State&lt;/code&gt; objects to the item's &lt;a href=&quot;qml-qtquick-item#states-prop&quot;&gt;states&lt;/a&gt; property. Each state within a component has a unique &lt;code&gt;name&lt;/code&gt;, an empty string being the default. To change the current state of an item, set the &lt;a href=&quot;qml-qtquick-item#state-prop&quot;&gt;state&lt;/a&gt; property to the name of the state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d27fc6dba1503e60ba3da8d2f7daf9c7e479878" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; subclasses support Qt's translation features, making it possible to translate an application's user interface into different languages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9134060aba49cce392ec6960a0127ae400b72017" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; subclasses can use layouts to manage their children. The &lt;a href=&quot;qwidget#setLayout&quot;&gt;QWidget::setLayout&lt;/a&gt;() function applies a layout to a widget. When a layout is set on a widget in this way, it takes charge of the following tasks:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f31305ebe6c332d5742400744d19083d30c4dd40" translate="yes" xml:space="preserve">
          <source>All CSS 2.1 selector classes are supported except pseudo-class selectors such as &lt;code&gt;:first-child&lt;/code&gt;, &lt;code&gt;:visited&lt;/code&gt; and &lt;code&gt;:hover&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e75c6a2260ca48552cd58cc7cd818490dfa5c52" translate="yes" xml:space="preserve">
          <source>All Classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bfbc0de54100d4a1172ffd3b39dd3e46f51cdc9" translate="yes" xml:space="preserve">
          <source>All DOM nodes in the document tree are subclasses of &lt;a href=&quot;qdomnode&quot;&gt;QDomNode&lt;/a&gt;. The document itself is represented as a &lt;a href=&quot;qdomdocument&quot;&gt;QDomDocument&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9991c9f5f8170918ccd97d1e2e3e1fb63fb96027" translate="yes" xml:space="preserve">
          <source>All East Asian languages (Chinese, Japanese and Korean)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6044f1335d33799082c7ce7a1cef7dcb510092f3" translate="yes" xml:space="preserve">
          <source>All Examples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fefca82ac15c0ca101c2d83e216617ed55f2769f" translate="yes" xml:space="preserve">
          <source>All HTML5 2D context pixel operations are supported. In order to ensure improved pixel reading/writing performance the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79006cdc62df4171b1770297aabf4d9e0ab1a2a4" translate="yes" xml:space="preserve">
          <source>All JSON classes are value based, &lt;a href=&quot;implicit-sharing#&quot;&gt;implicitly shared classes&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f9811b71ae7e65dd7ed9d8ee28f6ab9952eeffa" translate="yes" xml:space="preserve">
          <source>All Layouts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3414548f8739b658119012bc5a437c65f919cdbe" translate="yes" xml:space="preserve">
          <source>All Platforms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c4f3778ceb4114e0c9cca0223f35919a08ee7bb" translate="yes" xml:space="preserve">
          <source>All QGraphicsWidgets have a list of &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt;s, however they can be represented graphically in many different ways. The default use of the &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; list (as returned by &lt;a href=&quot;qgraphicswidget#actions&quot;&gt;actions&lt;/a&gt;()) is to create a context &lt;a href=&quot;qmenu&quot;&gt;QMenu&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3528223454d5c66e2df25c350a55eeffd8453e09" translate="yes" xml:space="preserve">
          <source>All QML applications can be extended from C++ in order to use additional functionality implemented in C++ code or to provide a C++ based QML plugin. This topic of extending QML from C++ is covered in the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtqml-cppintegration-topic.html&quot;&gt;Integrating QML and C++&lt;/a&gt; documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20901d1a275c93271219973f43ab360df5ff7d66" translate="yes" xml:space="preserve">
          <source>All QML methods are exposed to the meta-object system and can be called from C++ using &lt;a href=&quot;qmetaobject#invokeMethod&quot;&gt;QMetaObject::invokeMethod&lt;/a&gt;(). Method parameters and return values passed from QML are always translated into &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; values in C++.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d85c28704f525440ca275a2cb8f881379c7ce2a" translate="yes" xml:space="preserve">
          <source>All QML object types are &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;-derived types, whether they are internally implemented by the engine or &lt;a href=&quot;qtqml-cppintegration-definetypes#&quot;&gt;defined by third-party sources&lt;/a&gt;. This means the QML engine can use the Qt &lt;a href=&quot;metaobjects&quot;&gt;Meta Object System&lt;/a&gt; to dynamically instantiate any QML object type and inspect the created objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a25051290aab349c156d9e37de9a5c672eb53127" translate="yes" xml:space="preserve">
          <source>All QML signals are automatically available to C++, and can be connected to using &lt;a href=&quot;qobject#connect&quot;&gt;QObject::connect&lt;/a&gt;() like any ordinary Qt C++ signal. In return, any C++ signal can be received by a QML object using &lt;a href=&quot;qtqml-syntax-signals#&quot;&gt;signal handlers&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d6ade11ad92fee39ace3369b6d4dcfd00896efe" translate="yes" xml:space="preserve">
          <source>All QObjects must live in the same thread as their parent. Consequently:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c401286c7c2ef58949febdf87c66da75390b74b" translate="yes" xml:space="preserve">
          <source>All QWidgets have a list of &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt;s, however they can be represented graphically in many different ways. The default use of the &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; list (as returned by &lt;a href=&quot;qwidget#actions&quot;&gt;actions&lt;/a&gt;()) is to create a context &lt;a href=&quot;qmenu&quot;&gt;QMenu&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4333d5550a12e590d50ad7cbf989db47b4b8865b" translate="yes" xml:space="preserve">
          <source>All Qt Quick Controls 2 QML Types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0d657c2ec0dee29b01abcdd9f1845f5d9d48e23" translate="yes" xml:space="preserve">
          <source>All Qt programs automatically support a set of command-line options that allow modifying the way Qt will interact with the windowing system. Some of the options are also accessible via environment variables, which are the preferred form if the application can launch GUI sub-processes or other applications (environment variables will be inherited by child processes). When in doubt, use the environment variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d16bba2f71c8a291696a348faace13fe47c3542" translate="yes" xml:space="preserve">
          <source>All Qt programs automatically support the following command line options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3cb8c34b5ffcc43fd5ddcb13047802d6c45b309" translate="yes" xml:space="preserve">
          <source>All Qt widgets inherit &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;. The convenience function &lt;a href=&quot;qobject#isWidgetType&quot;&gt;isWidgetType&lt;/a&gt;() returns whether an object is actually a widget. It is much faster than &lt;a href=&quot;qobject#qobject_cast&quot;&gt;qobject_cast&lt;/a&gt;&amp;lt;&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *&amp;gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb5746be52330331844dea750bf452c0618aecb3" translate="yes" xml:space="preserve">
          <source>All Rights Reserved</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="054759dd0f88f4a6d65988964ca0122a1345ca67" translate="yes" xml:space="preserve">
          <source>All Western languages (using Latin script)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b96bb005ed098d342224dd966c97eadee1f75a4f" translate="yes" xml:space="preserve">
          <source>All X11 desktop environments that implement the D-Bus &lt;a href=&quot;http://www.freedesktop.org/wiki/Specifications/StatusNotifierItem/StatusNotifierItem&quot;&gt;http://www.freedesktop.org/wiki/Specifications/StatusNotifierItem/StatusNotifierItem&lt;/a&gt; specification, including recent versions of KDE and Unity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0de42665fa37ddd3e31da36f68b5444a27cbc09" translate="yes" xml:space="preserve">
          <source>All X509 certificate extensions have the following properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7847db66076433d5d227e87645514a4c0a8a5b7a" translate="yes" xml:space="preserve">
          <source>All accessible objects have a role.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18e630e44260e292549a468699dde9763a51f513" translate="yes" xml:space="preserve">
          <source>All accessible objects have a state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1a3f865b7785e1c7d69d02f61f46cc52dc4f51a" translate="yes" xml:space="preserve">
          <source>All animation types are enabled in the chart.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de3c1761311741919a532fb6b4796ae4d4d28a35" translate="yes" xml:space="preserve">
          <source>All animation types inherit from the &lt;a href=&quot;qml-qtquick-animation&quot;&gt;Animation&lt;/a&gt; type. It is not possible to create &lt;a href=&quot;qml-qtquick-animation&quot;&gt;Animation&lt;/a&gt; objects; instead, this type provides the essential properties and methods for animation types. Animation types have &lt;code&gt;start()&lt;/code&gt;, &lt;code&gt;stop()&lt;/code&gt;, &lt;code&gt;resume()&lt;/code&gt;, &lt;code&gt;pause()&lt;/code&gt;, &lt;code&gt;restart()&lt;/code&gt;, and &lt;code&gt;complete()&lt;/code&gt; -- all of these methods control the execution of animations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17c9e7aca332c7a31ce029e20fd74e5e7c4703d9" translate="yes" xml:space="preserve">
          <source>All attributes can be specified for any window or item, and they automatically propagate to children in the same manner as &lt;a href=&quot;qml-qtquick-controls2-control#font-prop&quot;&gt;fonts&lt;/a&gt;. In the following example, the window and all three radio buttons appear in the dark theme using a purple accent color:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bb6ed2fd64b7c6bfc462cd7367822697dc93750" translate="yes" xml:space="preserve">
          <source>All changes to the model will be applied immediately to the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3863ccdef026680d2591d4be1161d9476ef7acc9" translate="yes" xml:space="preserve">
          <source>All changes will be cached in the model until either &lt;a href=&quot;qsqltablemodel#submitAll&quot;&gt;submitAll&lt;/a&gt;() or &lt;a href=&quot;qsqltablemodel#revertAll&quot;&gt;revertAll&lt;/a&gt;() is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc02a3624da69f2a93cfcf3530643d1b4fd4c32f" translate="yes" xml:space="preserve">
          <source>All classes in the namespace are tagged with a macro that allows you to export or import them from a DLL. To do that, declare the macro to expand to &lt;code&gt;__declspec(dllimport/export)&lt;/code&gt; before including the header file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83ab4a7ffa0fef6e290da3310a5aec6d384012a5" translate="yes" xml:space="preserve">
          <source>All classes that contain signals or slots must mention &lt;a href=&quot;qobject#Q_OBJECT&quot;&gt;Q_OBJECT&lt;/a&gt; at the top of their declaration. They must also derive (directly or indirectly) from &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ecaccb102dda801f0791c5cacf89e48a61dfa24" translate="yes" xml:space="preserve">
          <source>All classes that inherit from &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; or one of its subclasses (e.g., &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;) can contain signals and slots. Signals are emitted by objects when they change their state in a way that may be interesting to other objects. This is all the object does to communicate. It does not know or care whether anything is receiving the signals it emits. This is true information encapsulation, and ensures that the object can be used as a software component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2f2eb58c79a172b5791faea76942cd2450777a3" translate="yes" xml:space="preserve">
          <source>All coclass wrappers also have one constructors taking an interface wrapper class for each interface implemented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0be30f1a42f2631f8ace11fb5382afc231e58aff" translate="yes" xml:space="preserve">
          <source>All concepts described above for OpenGL and GLSL apply to Direct3D and HLSL as well. There are however a number of notable practical differences, which are the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b637d557837c893f37be55fe90c64429e32ef97" translate="yes" xml:space="preserve">
          <source>All controls exposed can be created with nothing but a &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt; instance being present</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="244c69f652526a268ad082597223778b9b788ddb" translate="yes" xml:space="preserve">
          <source>All controls, except non-interactive indicators, do not let clicks and touches through to items below them. For example, the &lt;code&gt;console.log()&lt;/code&gt; call in the example below will never be executed when clicking on the Pane, because the &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; is below it in the scene:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41f2991bab257c59650309ad19daaea5b6a353d5" translate="yes" xml:space="preserve">
          <source>All declarations reported through &lt;a href=&quot;qxmldtdhandler&quot;&gt;QXmlDTDHandler&lt;/a&gt; or &lt;a href=&quot;qxmldeclhandler&quot;&gt;QXmlDeclHandler&lt;/a&gt; appear between the startDTD() and &lt;a href=&quot;qxmllexicalhandler#endDTD&quot;&gt;endDTD&lt;/a&gt;() calls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4885ddb0cf8c65aade0b449cf9320d0d2760ed4f" translate="yes" xml:space="preserve">
          <source>All dependencies required to run the server are in the system path (or in the path used by the calling environment; note that Visual Studio has its own set of environment variables listed in the Tools|Options|Directories dialog).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69d6e51e5d0dd6ba8a2170fc62cf2ef3effed133" translate="yes" xml:space="preserve">
          <source>All derivatives of &lt;a href=&quot;qabstractscrollarea&quot;&gt;QAbstractScrollArea&lt;/a&gt;, including &lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt;, and &lt;a href=&quot;qabstractitemview&quot;&gt;QAbstractItemView&lt;/a&gt; (all item view classes), support scrollable backgrounds using &lt;a href=&quot;#background-attachment-prop&quot;&gt;background-attachment&lt;/a&gt;. Setting the background-attachment to &lt;code&gt;fixed&lt;/code&gt; provides a background-image that does not scroll with the viewport. Setting the background-attachment to &lt;code&gt;scroll&lt;/code&gt;, scrolls the background-image when the scroll bars move.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="197d9b1f1a83439237d062921f3e1d6f5981ce84" translate="yes" xml:space="preserve">
          <source>All descriptor and characteristic requests towards the same remote device are serialised. A queue is employed when issuing multiple requests at the same time. The queue does not eliminate duplicated read requests for the same characteristic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="920ab9a3004bf529704002449bc30aadf848ef42" translate="yes" xml:space="preserve">
          <source>All descriptor and characteristic requests towards the same remote device are serialised. A queue is employed when issuing multiple requests at the same time. The queue does not eliminate duplicated read requests for the same descriptor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c090e02b8cf82526a0ff17d4940fbb9d53711ca2" translate="yes" xml:space="preserve">
          <source>All descriptor and characteristic requests towards the same remote device are serialised. A queue is employed when issuing multiple write requests at the same time. The queue does not eliminate duplicated write requests for the same descriptor. For example, if the same descriptor is set to the value A and immediately afterwards to B, the two write request are executed in the given order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f33c67b5fc9f3167949ee217c65405e54413e095" translate="yes" xml:space="preserve">
          <source>All descriptor and characteristic write requests towards the same remote device are serialised. A queue is employed when issuing multiple write requests at the same time. The queue does not eliminate duplicated write requests for the same characteristic. For example, if the same descriptor is set to the value A and immediately afterwards to B, the two write request are executed in the given order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="562b1d6ea074f881acd7fae5d4b160bc4495ad01" translate="yes" xml:space="preserve">
          <source>All desktop environments that implement the &lt;a href=&quot;http://www.freedesktop.org/wiki/Specifications/StatusNotifierItem/StatusNotifierItem&quot;&gt;freedesktop.org D-Bus StatusNotifierItem specification&lt;/a&gt;, including recent versions of KDE and Unity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04835be53c604b2459a0ef5ee507e9c066d9a6e3" translate="yes" xml:space="preserve">
          <source>All details fetched during search</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96c2b48dcfd5e1cf5e6c2145b9f423d1ae133310" translate="yes" xml:space="preserve">
          <source>All dialogs created while this attribute is set to true won't use the native dialogs provided by the platform. This value was added in Qt 5.7.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5f7fddc727945f093f01840598a07fcff5a3227" translate="yes" xml:space="preserve">
          <source>All elements are set to zero except &lt;code&gt;m11&lt;/code&gt; and &lt;code&gt;m22&lt;/code&gt; (specifying the scale) and &lt;code&gt;m33&lt;/code&gt; which are set to 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cacef9f7c4e57d5ee3e754166626d2e56f5aef1e" translate="yes" xml:space="preserve">
          <source>All elements are set to zero except &lt;code&gt;m11&lt;/code&gt; and &lt;code&gt;m22&lt;/code&gt; (specifying the scale), which are set to 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36528285495ab368a7b369eaafcf97a3cf195c61" translate="yes" xml:space="preserve">
          <source>All elements have the same bounding rectangles in the Plastique style as well as the other built-in Qt styles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81bf3a60279731b99b2e8a41f8fc447f5c051cf9" translate="yes" xml:space="preserve">
          <source>All elements of &lt;a href=&quot;qaudioformat&quot;&gt;QAudioFormat&lt;/a&gt; are used for the comparison.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd02533324cad0cf0c15e46ca3479cd181981065" translate="yes" xml:space="preserve">
          <source>All elements that the user can interact with should have focusable set to &lt;code&gt;true&lt;/code&gt; and set &lt;code&gt;focus&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; when they have the focus. This is important even for applications that run on touch-only devices since screen readers often implement a virtual focus that can be moved from item to item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5e4df6067bd937288d219803ae1e1f833646dbc" translate="yes" xml:space="preserve">
          <source>All entities that intersect the picking ray are picked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58970538f694f76bb9039b2d59566e8f13dffc0b" translate="yes" xml:space="preserve">
          <source>All event filters for this object are automatically removed when this object is destroyed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95d0b5b8d24f482df57484ffd39af5db803b5ef8" translate="yes" xml:space="preserve">
          <source>All events. Note that &lt;a href=&quot;qevent#Type-enum&quot;&gt;DeferredDelete&lt;/a&gt; events are processed specially. See &lt;a href=&quot;qobject#deleteLater&quot;&gt;QObject::deleteLater&lt;/a&gt;() for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02d15c774c2a6adde57abb463de29b65bf7e9eb9" translate="yes" xml:space="preserve">
          <source>All features which are required for QtWidget applications, and in addition the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c065b7c4fed963a87c68cc4b67822578a42c0ce5" translate="yes" xml:space="preserve">
          <source>All fields with a size policy that allows them to grow will grow to fill the available space. This is the default policy for most styles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="741f310ac34be5c0614276a5f3d9d568a8b4f89b" translate="yes" xml:space="preserve">
          <source>All flags are disabled by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da21416c5c0799ee47f2a050e5d88e44dce44147" translate="yes" xml:space="preserve">
          <source>All floating point numbers in the data stream have 32-bit precision.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0bc3b1dd5e570544cb37e08053462497c6c79b2" translate="yes" xml:space="preserve">
          <source>All floating point numbers in the data stream have 64-bit precision.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9a2d991f0c9996f6acc587262fb73caf07fb316" translate="yes" xml:space="preserve">
          <source>All following alphabetic characters are lowercased.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1128898a5ac2053f4a827d6f1a04f55b8c02f58" translate="yes" xml:space="preserve">
          <source>All following alphabetic characters are uppercased.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61e929baa5f129651a805721afd32452b1197340" translate="yes" xml:space="preserve">
          <source>All frames are cached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45caffe4107c8a70c756e3dd52805a26fbbd93d2" translate="yes" xml:space="preserve">
          <source>All functions except &lt;a href=&quot;qbitarray#isNull&quot;&gt;isNull&lt;/a&gt;() treat null bit arrays the same as empty bit arrays; for example, &lt;a href=&quot;qbitarray#QBitArray&quot;&gt;QBitArray&lt;/a&gt;() compares equal to &lt;a href=&quot;qbitarray&quot;&gt;QBitArray&lt;/a&gt;(0). We recommend that you always use &lt;a href=&quot;qbitarray#isEmpty&quot;&gt;isEmpty&lt;/a&gt;() and avoid &lt;a href=&quot;qbitarray#isNull&quot;&gt;isNull&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3763439dad83b23da7b0342b27dfe9dcbe912c5e" translate="yes" xml:space="preserve">
          <source>All functions except &lt;a href=&quot;qbytearray#isNull&quot;&gt;isNull&lt;/a&gt;() treat null byte arrays the same as empty byte arrays. For example, &lt;a href=&quot;qbytearray#data&quot;&gt;data&lt;/a&gt;() returns a valid pointer (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3159d862a90239a0e1d7f5e6b65aa717faa78153" translate="yes" xml:space="preserve">
          <source>All functions except &lt;a href=&quot;qstring#isNull&quot;&gt;isNull&lt;/a&gt;() treat null strings the same as empty strings. For example, &lt;a href=&quot;qstring#toUtf8&quot;&gt;toUtf8&lt;/a&gt;().&lt;a href=&quot;qstring#constData&quot;&gt;constData&lt;/a&gt;() returns a valid pointer (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="437c7721db25e27b0b868c3f40d1303bffea4a07" translate="yes" xml:space="preserve">
          <source>All hash tables are vulnerable to a particular class of denial of service attacks, in which the attacker carefully pre-computes a set of different keys that are going to be hashed in the same bucket of a hash table (or even have the very same hash value). The attack aims at getting the worst-case algorithmic behavior (O(n) instead of amortized O(1), see &lt;a href=&quot;containers#algorithmic-complexity&quot;&gt;Algorithmic Complexity&lt;/a&gt; for the details) when the data is fed into the table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beb63a2be05ec664b7a5e51720c8932e0c5c6b52" translate="yes" xml:space="preserve">
          <source>All indexes will be expanded to span columns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b64c9a7b90a1b66ec430b5490ae2a2c52f57ba6" translate="yes" xml:space="preserve">
          <source>All indexes will be expanded to span rows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38314b6ecf20083d0cfdc06b72320b013eef34ff" translate="yes" xml:space="preserve">
          <source>All interactive elements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59caf15741c62c34f833af915149471e52e40724" translate="yes" xml:space="preserve">
          <source>All interfaces are managed by an internal cache and should not be deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc9f6b035c61d1eea4399117daaf216c47b3a046" translate="yes" xml:space="preserve">
          <source>All item models are based on the &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; class. This class defines an interface that is used by views and delegates to access data. The data itself does not have to be stored in the model; it can be held in a data structure or repository provided by a separate class, a file, a database, or some other application component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebf1182ed3068f5f678ab1c5edbf56d9ae85fe92" translate="yes" xml:space="preserve">
          <source>All items are drawn in a defined, stable order, and this same order decides which items will receive mouse input first when you click on the scene. Normally you don't have to worry about sorting, as the items follow a &quot;natural order&quot;, following the logical structure of the scene.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7a5187ebc31c5def7d82916a830b08918ee1262" translate="yes" xml:space="preserve">
          <source>All items are guaranteed to be valid during the emission of the &lt;a href=&quot;qml-qtwebengine-webengineprofile#downloadRequested-signal&quot;&gt;downloadRequested&lt;/a&gt; signal. If &lt;a href=&quot;qml-qtwebengine-webenginedownloaditem#accept-method&quot;&gt;accept()&lt;/a&gt; is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc7b08c3ec25d9e76a44bcdbb8279471b533c18a" translate="yes" xml:space="preserve">
          <source>All items are guaranteed to be valid during the emission of the &lt;a href=&quot;qwebengineprofile#downloadRequested&quot;&gt;downloadRequested&lt;/a&gt; signal. If &lt;a href=&quot;qwebenginedownloaditem#accept&quot;&gt;accept&lt;/a&gt;() is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e169264bf7770b3eb45c9c6c5cf73b517d3ccfc5" translate="yes" xml:space="preserve">
          <source>All items have a default state that defines the default configuration of objects and property values. New states can be defined by adding State items to the &lt;a href=&quot;qml-qtquick-item#states-prop&quot;&gt;states&lt;/a&gt; property to allow items to switch between different configurations. These configurations can, for example, be used to apply different sets of property values or execute different scripts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="877be2faa0a69b22f2f031f4e6640f92ae0035c5" translate="yes" xml:space="preserve">
          <source>All items returned by create are added to the &lt;a href=&quot;qml-qtqml-models-delegatemodel#persistedItems-prop&quot;&gt;persistedItems&lt;/a&gt; group. Items in this group remain instantiated when not referenced by any view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eb7c4252b8824831224bdbe27bccff0b55c06ef" translate="yes" xml:space="preserve">
          <source>All items should have the text and icon properites set, or have the &lt;a href=&quot;qmactoolbaritem#standardItem-prop&quot;&gt;standardItem&lt;/a&gt; property set to something else than &lt;a href=&quot;qmactoolbaritem#StandardItem-enum&quot;&gt;NoStandardItem&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e5b7c4d02954cc0b2f57389bda2724c3a80fe55" translate="yes" xml:space="preserve">
          <source>All keycodes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c3d759c867ea09debefd6252595d9da1db2d495" translate="yes" xml:space="preserve">
          <source>All layers; this value represents a combination of all three layers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edd97dfd60bb0e2cc6b7bb6e09a371a57a05c2bd" translate="yes" xml:space="preserve">
          <source>All menubars created while this attribute is set to true won't be used as a native menubar (e.g, the menubar at the top of the main screen on &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d9c612cf3751e33b4721bd03f85a683cd295af0" translate="yes" xml:space="preserve">
          <source>All messages can also be accessed through the Qt WebEngine developer tools.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="969a92d3f964a309116ab37f4a3a66f4d3a05b73" translate="yes" xml:space="preserve">
          <source>All mouse events are delivered to the current</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cad2bfc04b1cc1ed70716d22c2463f661d80eb5" translate="yes" xml:space="preserve">
          <source>All mouse events that are not accepted by the application will be translated to touch events instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2148c1c72c06379653b21a8a3257da9c7ff64b81" translate="yes" xml:space="preserve">
          <source>All object types are returned as a &lt;a href=&quot;qandroidjniobject&quot;&gt;QAndroidJniObject&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e03f1d1c2e079cc1083d55ead14517fb609e30cd" translate="yes" xml:space="preserve">
          <source>All objects and arrays are copied to the &lt;code&gt;message&lt;/code&gt;. With the exception of &lt;a href=&quot;qml-qtqml-models-listmodel&quot;&gt;ListModel&lt;/a&gt; objects, any modifications by the other thread to an object passed in &lt;code&gt;message&lt;/code&gt; will not be reflected in the original object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d54627ccead45fb23fae2555e7bf2d49e26064c0" translate="yes" xml:space="preserve">
          <source>All objects are meant to be configured by a common registry (see also &lt;a href=&quot;qloggingcategory#configuring-categories&quot;&gt;Configuring Categories&lt;/a&gt;). Different objects can also represent the same category. It is therefore not recommended to export objects across module boundaries, nor to manipulate the objects directly, nor to inherit from &lt;a href=&quot;qloggingcategory&quot;&gt;QLoggingCategory&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2459c2113544e07123e2ac3f5088777efbcd1e23" translate="yes" xml:space="preserve">
          <source>All objects provide a string for &lt;a href=&quot;qaccessible#Text-enum&quot;&gt;QAccessible::Name&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8653eda61e7fc673c3b5bcaeeae56c8df3f96ae2" translate="yes" xml:space="preserve">
          <source>All objects provide this information about their children.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efabe50ebbbdb2f5cbdc6d6cdad80c4ce4851da6" translate="yes" xml:space="preserve">
          <source>All objects provide this information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34fb5f85c7ff5b7b9d7a001af6c8e974ef2f133d" translate="yes" xml:space="preserve">
          <source>All of &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;'s functionality also applies to &lt;a href=&quot;qbytearraylist&quot;&gt;QByteArrayList&lt;/a&gt;. For example, you can use &lt;a href=&quot;qlist#isEmpty&quot;&gt;isEmpty&lt;/a&gt;() to test whether the list is empty, and you can call functions like &lt;a href=&quot;qlist#append&quot;&gt;append&lt;/a&gt;(), &lt;a href=&quot;qlist#prepend&quot;&gt;prepend&lt;/a&gt;(), &lt;a href=&quot;qlist#insert&quot;&gt;insert&lt;/a&gt;(), &lt;a href=&quot;qlist#replace&quot;&gt;replace&lt;/a&gt;(), &lt;a href=&quot;qlist#removeAll&quot;&gt;removeAll&lt;/a&gt;(), &lt;a href=&quot;qlist#removeAt&quot;&gt;removeAt&lt;/a&gt;(), &lt;a href=&quot;qlist#removeFirst&quot;&gt;removeFirst&lt;/a&gt;(), &lt;a href=&quot;qlist#removeLast&quot;&gt;removeLast&lt;/a&gt;(), and &lt;a href=&quot;qlist#removeOne&quot;&gt;removeOne&lt;/a&gt;() to modify a &lt;a href=&quot;qbytearraylist&quot;&gt;QByteArrayList&lt;/a&gt;. In addition, &lt;a href=&quot;qbytearraylist&quot;&gt;QByteArrayList&lt;/a&gt; provides several &lt;a href=&quot;qbytearraylist#join&quot;&gt;join&lt;/a&gt;() methods for concatenating the list into a single &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="749f1ecd9ab7fb58081c317996f1771bdf45be09" translate="yes" xml:space="preserve">
          <source>All of &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;'s functionality also applies to &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt;. For example, you can use &lt;a href=&quot;qlist#isEmpty&quot;&gt;isEmpty&lt;/a&gt;() to test whether the list is empty, and you can call functions like &lt;a href=&quot;qlist#append&quot;&gt;append&lt;/a&gt;(), &lt;a href=&quot;qlist#prepend&quot;&gt;prepend&lt;/a&gt;(), &lt;a href=&quot;qlist#insert&quot;&gt;insert&lt;/a&gt;(), &lt;a href=&quot;qlist#replace&quot;&gt;replace&lt;/a&gt;(), &lt;a href=&quot;qlist#removeAll&quot;&gt;removeAll&lt;/a&gt;(), &lt;a href=&quot;qlist#removeAt&quot;&gt;removeAt&lt;/a&gt;(), &lt;a href=&quot;qlist#removeFirst&quot;&gt;removeFirst&lt;/a&gt;(), &lt;a href=&quot;qlist#removeLast&quot;&gt;removeLast&lt;/a&gt;(), and &lt;a href=&quot;qlist#removeOne&quot;&gt;removeOne&lt;/a&gt;() to modify a &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt;. In addition, &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; provides a few convenience functions that make handling lists of strings easier:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e9a09ad53eed42eba20e9cedcb014351b361bfa" translate="yes" xml:space="preserve">
          <source>All of an item's geometric information is based on its local coordinate system. The item's position, &lt;a href=&quot;qgraphicsitem#pos&quot;&gt;pos&lt;/a&gt;(), is the only function that does not operate in local coordinates, as it returns a position in parent coordinates. &lt;a href=&quot;graphicsview#the-graphics-view-coordinate-system&quot;&gt;The Graphics View Coordinate System&lt;/a&gt; describes the coordinate system in detail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="185a10ac95b26db04f2778e65afd8d30b128b308" translate="yes" xml:space="preserve">
          <source>All of the QML view classes, such as &lt;a href=&quot;qml-qtquick-pathview&quot;&gt;PathView&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-gridview&quot;&gt;GridView&lt;/a&gt;, behave in a similar manner to allow key handling in their respective delegates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58cb046eba5cb756bc7b0fe0fbe3ee3e33959e3b" translate="yes" xml:space="preserve">
          <source>All of the Qt D-Bus types (primitives and user-defined alike) can be used to send and receive messages of all types over the bus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56df8feaf73f87c54526814abcb53ffc118e747e" translate="yes" xml:space="preserve">
          <source>All of the above accept just the first value, so you must assign to it just one value that will be used throughout your project file. There are two variables that accept a list of values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd29ae7d374de10b6d31367833f19fc55b2a5b37" translate="yes" xml:space="preserve">
          <source>All of the above actions (apart from cloning) can be accessed via both the &lt;b&gt;Edit&lt;/b&gt; menu and the form's context menu. These menus also provide funcitons for laying out objects as well as a &lt;b&gt;Select All&lt;/b&gt; function to select all the objects on the form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f65ec777cfc77dea48e297e16f8efe62e9bc992" translate="yes" xml:space="preserve">
          <source>All of the above features. This enum value is usually used as a bit mask.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e963123ae4ee166de73fb6fa8c1a51e4336a12f5" translate="yes" xml:space="preserve">
          <source>All of the above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c504f575c5cdd72809591f07fd32e9501888d8ea" translate="yes" xml:space="preserve">
          <source>All of the buttons are checked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8983e20a9a510d71d2cf616fbf527e1da8b3f40" translate="yes" xml:space="preserve">
          <source>All of the getter methods in &lt;a href=&quot;qurlquery&quot;&gt;QUrlQuery&lt;/a&gt; support an optional parameter of type &lt;a href=&quot;qurl#ComponentFormattingOption-enum&quot;&gt;QUrl::ComponentFormattingOptions&lt;/a&gt;, including &lt;a href=&quot;qurlquery#query&quot;&gt;query&lt;/a&gt;(), which dictate how to encode the data in question. Except for &lt;a href=&quot;qurl#ComponentFormattingOption-enum&quot;&gt;QUrl::FullyDecoded&lt;/a&gt;, the returned value must still be considered a percent-encoded string, as there are certain values which cannot be expressed in decoded form (like control characters, byte sequences not decodable to UTF-8). For that reason, the percent character is always represented by the string &quot;%25&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="479d165e1b275455562e561b427c0649f5ed3836" translate="yes" xml:space="preserve">
          <source>All of these functions have an overload taking a &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; as a parameter in order to extract</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caa8d3d9f9fac89cea6dc0db23775ca2f928103d" translate="yes" xml:space="preserve">
          <source>All of these functions have both integer and floating point versions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ce239071ada0bfc3c9b0d9855727ddd7e5c9447" translate="yes" xml:space="preserve">
          <source>All of these would work:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcf3e606308704965e120675f74ed5666b33b6bf" translate="yes" xml:space="preserve">
          <source>All other change events should be passed on by calling the default implementation of the function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c0e7729a0866b438f4ecf2662393b40858b9495" translate="yes" xml:space="preserve">
          <source>All other classes can only be created by passing an IDispatch interface pointer to the constructor; those classes should however not be created explicitly. Instead, use the appropriate API of already created objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d5a37852b7bdacf5d486c2a01ee0ce1e3fbfef7" translate="yes" xml:space="preserve">
          <source>All other flags are ignored. Host names cannot contain control or percent characters, so the returned value can be considered fully decoded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa833661f9cc3385b474e1746e77bb2b7e78b8b5" translate="yes" xml:space="preserve">
          <source>All other input characters will be ignored. Any sequence of characters that are enclosed in single quotes will be treated as text and not be used as an expression. Two consecutive single quotes (&quot;''&quot;) are replaced by a single quote in the output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c14d1a33faa1f2df9dfec112a8e680874b8fa41" translate="yes" xml:space="preserve">
          <source>All other input characters will be ignored. Any sequence of characters that are enclosed in singlequotes will be treated as text and not be used as an expression. Two consecutive singlequotes (&quot;''&quot;) are replaced by a singlequote in the output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="533b9f15315be3791912963cfef0ecc1d5677745" translate="yes" xml:space="preserve">
          <source>All other input characters will be treated as text. Any sequence of characters that are enclosed in single quotes will also be treated as text and not be used as an expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="724b067671eb0144fbf21a63f1a7370fc596d833" translate="yes" xml:space="preserve">
          <source>All other input characters will be treated as text. Any sequence of characters that are enclosed in single quotes will also be treated as text and will not be used as an expression. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="448e0c099069b8595f5345c0e3d1910aa04ade34" translate="yes" xml:space="preserve">
          <source>All other properties of the &lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt; object are ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4fdb0cd2c896b056a50cc3f009a7d68eaaf26d2" translate="yes" xml:space="preserve">
          <source>All pages should be printed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5956bcea4e872eb888b48fdaf16d25c0bccce01" translate="yes" xml:space="preserve">
          <source>All pages that belong to the profile share a common &lt;a href=&quot;qwebenginesettings&quot;&gt;QWebEngineSettings&lt;/a&gt; instance, which can be accessed with the &lt;a href=&quot;qwebengineprofile#settings&quot;&gt;settings&lt;/a&gt;() method. Likewise, the &lt;a href=&quot;qwebengineprofile#scripts&quot;&gt;scripts&lt;/a&gt;() method provides access to a common &lt;a href=&quot;qwebenginescriptcollection&quot;&gt;QWebEngineScriptCollection&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93443454c9eac57d86f55cd2ac1658c38cb9bbfc" translate="yes" xml:space="preserve">
          <source>All painting is done directly onto the viewport.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c079f53472bc41a01174a86a94b863b2daa3fdea" translate="yes" xml:space="preserve">
          <source>All painting is done in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2d6b609ad703c1e6ba6a6f84bd19974c5cb5020" translate="yes" xml:space="preserve">
          <source>All painting is done in local coordinates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f3f7bda48ad688fd155292a7d29730bb12c8bc8" translate="yes" xml:space="preserve">
          <source>All parameters are passed as strings; it depends on the control whether they are interpreted correctly, and is slower than using the prototype with correctly typed parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f76f95280dce699e866bef99394341623bb16f79" translate="yes" xml:space="preserve">
          <source>All pixmaps inserted by the Qt library have a key starting with &quot;$qt&quot;, so your own pixmap keys should never begin &quot;$qt&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86662c20ddb1f832a918ac8e7f6803ddc2b0a3b1" translate="yes" xml:space="preserve">
          <source>All places functionality is facilitated by a &lt;a href=&quot;qplacemanager&quot;&gt;QPlaceManager&lt;/a&gt; instance. One must specify a &lt;a href=&quot;qgeoserviceprovider&quot;&gt;QGeoServiceProvider&lt;/a&gt; in order to create the &lt;a href=&quot;qplacemanager&quot;&gt;QPlaceManager&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="955ef5469c5abba76dfc6df5038fd41f820983de" translate="yes" xml:space="preserve">
          <source>All platform and plugin implementations should provide support for:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7db624a857f584467c0d51b86e0eb6ac8ce93770" translate="yes" xml:space="preserve">
          <source>All plugins must implement the functions provided by this factory class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5f185aa7ab3acd6c2b8b79e4d218edb6e652156" translate="yes" xml:space="preserve">
          <source>All position APIs are part of the &lt;a href=&quot;qml-qtpositioning-qtpositioning&quot;&gt;QtPositioning&lt;/a&gt; module. The basic piece of position information is the &lt;a href=&quot;qml-coordinate&quot;&gt;coordinate&lt;/a&gt;. A coordinate encapsulates data for the latitude, longitude and altitude of the location. Altitude is in meters. It also has a method to determine distance to another &lt;a href=&quot;qml-coordinate&quot;&gt;coordinate&lt;/a&gt;. The &lt;a href=&quot;qml-coordinate&quot;&gt;coordinate&lt;/a&gt; type may also be held within a &lt;a href=&quot;qml-qtpositioning-location&quot;&gt;Location&lt;/a&gt; element, this will also have information on a bounding box size to determine sufficient proximity to the location and a location address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fb2083cec954119802001e89e0485df93fe670a" translate="yes" xml:space="preserve">
          <source>All possible completions are displayed in a popup window with the most likely suggestion indicated as current.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e654e1ca52fecdfee4af83a6404c186129eee97" translate="yes" xml:space="preserve">
          <source>All products should have a handler for onPurchaseSucceeded. This handler should in turn save information about the purchased product and when the information has been stored and verified, it should call finalize() on the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a25a5d5e136adef357a9125f13f1396dd7820ede" translate="yes" xml:space="preserve">
          <source>All products should have an &lt;code&gt;onPurchaseFailed&lt;/code&gt; handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="916469c83c417ba663913130ff8d7c8921b69587" translate="yes" xml:space="preserve">
          <source>All properties added explicitly by &lt;a href=&quot;qqmlcontext#setContextProperty&quot;&gt;QQmlContext::setContextProperty&lt;/a&gt;() take precedence over the context object's properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05804319a94ba141e90fb7e035dda3798a9f9822" translate="yes" xml:space="preserve">
          <source>All properties of a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;-derived class are accessible from QML.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b239b9983bae6328e2cd6f2ea8b43e24c8cfb78f" translate="yes" xml:space="preserve">
          <source>All queries sent by &lt;a href=&quot;qnetworkaccessmanager&quot;&gt;QNetworkAccessManager&lt;/a&gt; will have type &lt;a href=&quot;qnetworkproxyquery#QueryType-enum&quot;&gt;QNetworkProxyQuery::UrlRequest&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3be247d61e53392f19e63ccd93d987837a984718" translate="yes" xml:space="preserve">
          <source>All readers use the class &lt;a href=&quot;qxmlinputsource&quot;&gt;QXmlInputSource&lt;/a&gt; to read the input document. Since you are normally interested in particular content in the XML document, the reader reports the content through special handler classes (&lt;a href=&quot;qxmldtdhandler&quot;&gt;QXmlDTDHandler&lt;/a&gt;, &lt;a href=&quot;qxmldeclhandler&quot;&gt;QXmlDeclHandler&lt;/a&gt;, &lt;a href=&quot;qxmlcontenthandler&quot;&gt;QXmlContentHandler&lt;/a&gt;, &lt;a href=&quot;qxmlentityresolver&quot;&gt;QXmlEntityResolver&lt;/a&gt;, &lt;a href=&quot;qxmlerrorhandler&quot;&gt;QXmlErrorHandler&lt;/a&gt; and &lt;a href=&quot;qxmllexicalhandler&quot;&gt;QXmlLexicalHandler&lt;/a&gt;), which you must subclass, if you want to process the contents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5da15d0e1891e69483d7fb0efe5d57a2da6221f" translate="yes" xml:space="preserve">
          <source>All rectangles with a given top coordinate must have the same height.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d01ad37b83d2fb7463ae3a761f92d03c6054dbff" translate="yes" xml:space="preserve">
          <source>All rendering happens into an OpenGL framebuffer object. &lt;a href=&quot;qopenglwidget#makeCurrent&quot;&gt;makeCurrent&lt;/a&gt;() ensure that it is bound in the context. Keep this in mind when creating and binding additional framebuffer objects in the rendering code in &lt;a href=&quot;qopenglwidget#paintGL&quot;&gt;paintGL&lt;/a&gt;(). Never re-bind the framebuffer with ID 0. Instead, call &lt;a href=&quot;qopenglwidget#defaultFramebufferObject&quot;&gt;defaultFramebufferObject&lt;/a&gt;() to get the ID that should be bound.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f754f2057d1bde42e9044920a02e7ecabe4a00a3" translate="yes" xml:space="preserve">
          <source>All requests are serialised based on First-In First-Out principle. For example, issuing a second write request, before the previous write request has finished, is delayed until the first write request has finished.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff5f165d1826499e6d2fa4cab8f667c1d0c4d4d1" translate="yes" xml:space="preserve">
          <source>All required image providers should be added to the engine before any QML sources files are loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3230537aa9e5bc486ba8856ee079a2a660aba7ea" translate="yes" xml:space="preserve">
          <source>All rotations will be done relative to this point (i.e., this point will stay fixed, relative to the parent, when the item is rotated).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="462d3391323ae042621b330e1abd04c14c9faefc" translate="yes" xml:space="preserve">
          <source>All rows must have the same number of items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b3e4e3556abfa48cd3953b7393775f126aeb2f4" translate="yes" xml:space="preserve">
          <source>All scaling will be done relative to this point (i.e., this point will stay fixed, relative to the parent, when the item is scaled).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4facf70abe205eadad53fbc44f0a79af90f925c" translate="yes" xml:space="preserve">
          <source>All screens reported by the DRM layer will be treated as one big virtual desktop by default. The mouse cursor implementation will take this into account and move across the screens as expected. Although not recommended, the virtual desktop mode can be disabled by setting &lt;code&gt;separateScreens&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; in the configuration, if desired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37dde8c31a2e10e73d6b2f73d19479c807e9ba61" translate="yes" xml:space="preserve">
          <source>All scripts in Unicode 6.2 that do not require special processing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1f4c9eb5d15c03bad3971d00ef5ecb9e8f5925c" translate="yes" xml:space="preserve">
          <source>All sensor gesture recognizers have a detected(&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;) signal. Implementors can use this and send recognizer specific gestures, such as detected(&quot;shake_left&quot;) or implement custom signals such as shakeLeft().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e14695275922132233efbce1a4734d745b92d446" translate="yes" xml:space="preserve">
          <source>All signals associated with a click are emitted as appropriate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d99a9a7c24c116a1d3d0867157d2ac8d851f5d7" translate="yes" xml:space="preserve">
          <source>All signals to and from the object are automatically disconnected, and any pending posted events for the object are removed from the event queue. However, it is often safer to use &lt;a href=&quot;qobject#deleteLater&quot;&gt;deleteLater&lt;/a&gt;() rather than deleting a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; subclass directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5523af6361b2de388b4d472af9e7903b3eda5f3" translate="yes" xml:space="preserve">
          <source>All size hint functionality from the embedded widget is forwarded by the proxy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6709382c1dbe321a37f71e8254a9c5aa9deb05c" translate="yes" xml:space="preserve">
          <source>All specified indexes will be deselected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9360365e547857d1b09f43e01c14c19a5caceaa5" translate="yes" xml:space="preserve">
          <source>All specified indexes will be selected or deselected depending on their current state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb6e192820485bfc964d4d810dabbb19906a1c73" translate="yes" xml:space="preserve">
          <source>All specified indexes will be selected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e16e3b08f62a531234c1499e444948cf9d2d6ac9" translate="yes" xml:space="preserve">
          <source>All standard proxy models are derived from the &lt;a href=&quot;qabstractproxymodel&quot;&gt;QAbstractProxyModel&lt;/a&gt; class. If you need to create a new proxy model class, it is usually better to subclass an existing class that provides the closest behavior to the one you want to provide.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="219d73905c4d493dd39393137c65c49f7186dc09" translate="yes" xml:space="preserve">
          <source>All states that are defined in the SCXML file are accessible as properties of &lt;a href=&quot;qscxmlstatemachine&quot;&gt;QScxmlStateMachine&lt;/a&gt;. These properties are boolean values and indicate whether the state is active or inactive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d37370602e36973ac64ceb451c16a5216c1f9807" translate="yes" xml:space="preserve">
          <source>All states that are defined in the SCXML file are accessible as properties of this type. These properties are boolean values and indicate whether the state is active or inactive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a8e43d6b89437d4338a9abb8c1561727f3816cc" translate="yes" xml:space="preserve">
          <source>All strings processed by the query must be valid &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt; strings, which means they must contain only XML 1.0 characters. However, this requirement is not checked. If the query processes an invalid string, the behavior is undefined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f9ef1613f0e045e8d20fd6a37116527ba043443" translate="yes" xml:space="preserve">
          <source>All subclasses must reimplement this pure virtual function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a539999f94eed7f376345a814ad2b5bca5e2ed57" translate="yes" xml:space="preserve">
          <source>All subclasses of &lt;a href=&quot;qxmlreader&quot;&gt;QXmlReader&lt;/a&gt; read the input XML document from this class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4513d728f20331104361568059c7df569e0c3f23" translate="yes" xml:space="preserve">
          <source>All supported fonts use the Unicode character encoding. Most fonts available today do, but they usually don't contain</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26d15a5ff7ea62ba201b08530046dc6c581720ca" translate="yes" xml:space="preserve">
          <source>All supported versions of &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bba220579d4bc507104b65dcf8959c52dc7a84e5" translate="yes" xml:space="preserve">
          <source>All supported versions of &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;. Note that the Growl notification system must be installed for &lt;a href=&quot;qml-qt-labs-platform-systemtrayicon#showMessage-method&quot;&gt;showMessage()&lt;/a&gt; to display messages on OS X prior to 10.8 (Mountain Lion).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c94ab166e9adc840f10f85946b0701ba3353d7f9" translate="yes" xml:space="preserve">
          <source>All supported versions of Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1df71708f97ac11a6ae7f28a4a6023b811fccc6" translate="yes" xml:space="preserve">
          <source>All tablet events that are not accepted by the application will be translated to mouse events instead. This attribute is enabled by default. This value was added in Qt 5.7.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5c28722ac162ad6ce99c0c591c9c338edc9cac1" translate="yes" xml:space="preserve">
          <source>All that's needed to group states is to specify the proper parent when the state is created. You also need to specify which of the child states is the initial one (i.e. which child state the state machine should enter when the parent state is the target of a transition).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5320bfdb2c816626046b2ff955abfbb8070bd26" translate="yes" xml:space="preserve">
          <source>All that's needed to group states is to specify the proper parent when the state is created. You also need to specify which of the child states is the initial one (the child state the state machine should enter when the parent state is the target of a transition).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bcbb517acfc67680820985837022b288244fad6" translate="yes" xml:space="preserve">
          <source>All the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtmodules.html#qt-essentials&quot;&gt;Qt Essentials&lt;/a&gt; modules are supported in Qt for QNX.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9253888911600692beace099f2afc0d5393e2a92" translate="yes" xml:space="preserve">
          <source>All the buttons provided by Qt (&lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt;, &lt;a href=&quot;qtoolbutton&quot;&gt;QToolButton&lt;/a&gt;, &lt;a href=&quot;qcheckbox&quot;&gt;QCheckBox&lt;/a&gt;, and &lt;a href=&quot;qradiobutton&quot;&gt;QRadioButton&lt;/a&gt;) can display both &lt;a href=&quot;qabstractbutton#text-prop&quot;&gt;text&lt;/a&gt; and &lt;a href=&quot;stylesheet-reference#icon&quot;&gt;icons&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bda8b5ad84fd2696e48cc545276b1e27a71023af" translate="yes" xml:space="preserve">
          <source>All the data in the series is discarded when it is set to the mapper. When a new series is specified, the old series is disconnected (but it preserves its data).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c8a4414f243959a83c9a840f91ca2c1014c7608" translate="yes" xml:space="preserve">
          <source>All the data in the series is discarded when it is set to the mapper. When a new series is specified, the old series is disconnected (preserving its data).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a41a2df894416e6366bc3488aec563cf31c3ba22" translate="yes" xml:space="preserve">
          <source>All the examples so far used the simplest type of selector, the Type Selector. Qt Style Sheets support all the &lt;a href=&quot;http://www.w3.org/TR/REC-CSS2/selector.html#q1&quot;&gt;selectors defined in CSS2&lt;/a&gt;. The table below summarizes the most useful types of selectors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d38594e594be4b7459fa08fe38097c803c1752da" translate="yes" xml:space="preserve">
          <source>All the function arguments in Qt that may be user-visible strings, &lt;a href=&quot;qlabel#text-prop&quot;&gt;QLabel::setText&lt;/a&gt;() and a many others, take &lt;code&gt;const QString &amp;amp;&lt;/code&gt;s. &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; provides implicit casting from &lt;code&gt;const char *&lt;/code&gt; so that things like</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f87d6464084c73a97e56d60280152440660f105" translate="yes" xml:space="preserve">
          <source>All the information about using &lt;a href=&quot;qplaintextedit&quot;&gt;QPlainTextEdit&lt;/a&gt; as a display widget also applies here.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b35d4ed99e540cba335ac9b3a82d4908f80fd5c" translate="yes" xml:space="preserve">
          <source>All the information about using &lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt; as a display widget also applies here.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddb5a956cc5847ea699ddeefafad82744eaa5d44" translate="yes" xml:space="preserve">
          <source>All the key delegates provided by the style should be based on this type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5869b8e4ad0d9d5d860c56c61109d2e40996bcf" translate="yes" xml:space="preserve">
          <source>All the limitations when using &lt;a href=&quot;activeqt-index#&quot;&gt;ActiveQt&lt;/a&gt; are implied when using this technique to interoperate with .NET, e.g. the datatypes we can use in the APIs can only be those supported by &lt;a href=&quot;activeqt-index#&quot;&gt;ActiveQt&lt;/a&gt; and COM. However, since this includes subclasses of &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; we can wrap any of our datatypes into a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; subclass to make its API available to .NET. This has the positive side effect that the same API is automatically available when using &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtscript-index.html&quot;&gt;Qt Script&lt;/a&gt; to automate Qt applications and to COM clients in general.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="518da6526f450823c5e3dbbb334066a78d9290cd" translate="yes" xml:space="preserve">
          <source>All the metric and layout calculations will be done in terms of the paint device,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9082f6b91352b6e1548d6e08db6d81a576790b6f" translate="yes" xml:space="preserve">
          <source>All the objects's children are destroyed immediately after this signal is emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a140566c97471e667b79d56a55bfc6b54bed184" translate="yes" xml:space="preserve">
          <source>All the operations on data are performed through the interface provided by &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt;. This makes the delegate mostly independent from the type of data it manipulates, but some assumptions must be made in order to use certain types of editor widgets. In this example, we have assumed that the model always contains integer values, but we can still use this delegate with different kinds of models because &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; provides sensible default values for unexpected data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f3dbd325c7d7b3e7ac05c340f8c5419d84352dc" translate="yes" xml:space="preserve">
          <source>All the other subclasses do not have a node value and will return an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f155d9d0b01b0aaa34307153c2d0bba3a6355609" translate="yes" xml:space="preserve">
          <source>All the particle system types act on &quot;logical particles&quot;. Every particle has a logical representation inside the particle system, and this is what the types act upon. Not every logical particle needs to be visualized, and some logical particles could lead to multiple visual particles being drawn on screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c3d878e6cd2e9a5974755cc9ffe9a27fd4c908f" translate="yes" xml:space="preserve">
          <source>All the registry entries that appear under the specified path can be read or written through the &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; object as usual (using forward slashes instead of backslashes). For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f52e8bcf264eba0a97f2713ac1b1f06d3ad42b9b" translate="yes" xml:space="preserve">
          <source>All the standard roles are handled by the default delegate used by the standard views. The way these are interpreted is described in the &lt;a href=&quot;qstyleditemdelegate&quot;&gt;QStyledItemDelegate&lt;/a&gt; documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e167b9d1684b72a1efdd280e2752df3c82f279f4" translate="yes" xml:space="preserve">
          <source>All the tables visible to the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b96bbcf2d749bb2062e3ca169d60085592d77bb0" translate="yes" xml:space="preserve">
          <source>All the tranformation operations operate on the transformation &lt;a href=&quot;qpainter#worldTransform&quot;&gt;worldTransform&lt;/a&gt;(). A matrix transforms a point in the plane to another point. For more information about the transformation matrix, see the &lt;a href=&quot;coordsys#&quot;&gt;Coordinate System&lt;/a&gt; and &lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt; documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50c7b08eb5a9d28f153acbcdc9c2279f4de5253a" translate="yes" xml:space="preserve">
          <source>All the usual signals associated with a click are emitted as appropriate. If the button is checkable, the state of the button is toggled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2740adc2b9d801bb2ac9e2b50c3fd01be8049466" translate="yes" xml:space="preserve">
          <source>All the values must be in the range 0-255.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be769db4518e38ee8ad7d85e313a5bb4786ac13d" translate="yes" xml:space="preserve">
          <source>All the values must be in the range 0.0-1.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abb2c3f8837dfa341e5458102be1ed8fa3c8038f" translate="yes" xml:space="preserve">
          <source>All the views visible to the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="278c160788c6503444bdfd24c0015367f1515c7e" translate="yes" xml:space="preserve">
          <source>All the widgets will initially be allocated an amount of space in accordance with their &lt;a href=&quot;qwidget#sizePolicy-prop&quot;&gt;QWidget::sizePolicy&lt;/a&gt;() and &lt;a href=&quot;qwidget#sizeHint-prop&quot;&gt;QWidget::sizeHint&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1840c758e83b97523da989c7b9528e807b4716a4" translate="yes" xml:space="preserve">
          <source>All this widget's children are deleted first. The application exits if this widget is the main widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b2ed4aa092770d223d3d839ad11918e0eeb3492" translate="yes" xml:space="preserve">
          <source>All three arguments are optional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6991439ed6933475ba0ec43fb01816cc0a30204" translate="yes" xml:space="preserve">
          <source>All timer types may time out later than expected if the system is busy or unable to provide the requested accuracy. In such a case of timeout overrun, Qt will emit &lt;a href=&quot;qtimer#timeout&quot;&gt;timeout&lt;/a&gt;() only once, even if multiple timeouts have expired, and then will resume the original interval.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50b0672eb2a1e45d121a003a2c859e7593f4f914" translate="yes" xml:space="preserve">
          <source>All touch events are of type &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::TouchBegin&lt;/a&gt;, &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::TouchUpdate&lt;/a&gt;, &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::TouchEnd&lt;/a&gt; or &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::TouchCancel&lt;/a&gt;. Reimplement &lt;a href=&quot;qwidget#event&quot;&gt;QWidget::event&lt;/a&gt;() or &lt;a href=&quot;qabstractscrollarea#viewportEvent&quot;&gt;QAbstractScrollArea::viewportEvent&lt;/a&gt;() for widgets and &lt;a href=&quot;qgraphicsitem#sceneEvent&quot;&gt;QGraphicsItem::sceneEvent&lt;/a&gt;() for items in a graphics view to receive touch events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6b6eb1db3275c16e2e5e07843cd9006a84ccc62" translate="yes" xml:space="preserve">
          <source>All touch events that are not accepted by the application will be translated to left button mouse events instead. This attribute is enabled by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8abd72772314b49ecc7e059aa64ff50eb24ec1d6" translate="yes" xml:space="preserve">
          <source>All types of model can support the insertion and removal of rows. Table models and hierarchical models can also support the insertion and removal of columns. It is important to notify other components about changes to the model's dimensions both</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b4742f8053eb6a5abe78377e6307069eeb1f99e" translate="yes" xml:space="preserve">
          <source>All unspecified addresses will compare equal, namely &lt;a href=&quot;qhostaddress#SpecialAddress-enum&quot;&gt;AnyIPv4&lt;/a&gt;, &lt;a href=&quot;qhostaddress#SpecialAddress-enum&quot;&gt;AnyIPv6&lt;/a&gt; and Any.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa3b182e5f854c10d11f900ae88628ec770f8fc1" translate="yes" xml:space="preserve">
          <source>All values are displayed with the prefix and suffix (if set),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b590e6dd6697697a4b98292a14c46116f4091b0" translate="yes" xml:space="preserve">
          <source>All values must be in the range 0.0-1.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f46b0947bb0d0c9759359e4b47ce328bdd7584d2" translate="yes" xml:space="preserve">
          <source>All visual QML items are rendered using the scene graph, the default implementation of which is a low-level, high-performance rendering stack, closely tied to OpenGL. It is possible for subclasses of &lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt; to add their own custom content into the scene graph by setting the &lt;a href=&quot;qquickitem#Flag-enum&quot;&gt;QQuickItem::ItemHasContents&lt;/a&gt; flag and reimplementing the &lt;a href=&quot;qquickitem#updatePaintNode&quot;&gt;QQuickItem::updatePaintNode&lt;/a&gt;() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b71fba1ece7436075f04e624149cf025756ec8a9" translate="yes" xml:space="preserve">
          <source>All visual items in Qt Quick inherit from &lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt;. Although a &lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt; instance has no visual appearance, it defines all the attributes that are common across visual items, such as x and y position, width and height, &lt;a href=&quot;qtquick-positioning-anchors#&quot;&gt;anchoring&lt;/a&gt; and key handling support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0ceb60a2abd9996e1827019a7364bf3806e21e6" translate="yes" xml:space="preserve">
          <source>All visual items in Qt Quick inherit from Item. Although an Item object has no visual appearance, it defines all the attributes that are common across visual items, such as x and y position, width and height, &lt;a href=&quot;qtquick-positioning-anchors#&quot;&gt;anchoring&lt;/a&gt; and key handling support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7509cd78402db3c0fcab23012cc495f8a5cc41e6" translate="yes" xml:space="preserve">
          <source>All visual objects provide this information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca1ecb02ca51664a81c06e7ad4d16ced6f62b161" translate="yes" xml:space="preserve">
          <source>All visual primitives support key handling via the Keys attached property. Keys can be handled via the onPressed and onReleased signal properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c86ecc85afb83b911ca20cefedecdc260a9d9814" translate="yes" xml:space="preserve">
          <source>All visualization types support selecting a single data item - a bar, a scatter item, or a surface vertex - using mouse, touch, and programmatically via the series APIs. The selected item is highlighted in the rendered graph, and selecting causes emission of a series specific signal for this purpose, for example, &lt;a href=&quot;qbar3dseries#selectedBar-prop&quot;&gt;QBar3DSeries::selectedBarChanged&lt;/a&gt;(), which the application can handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80e9a0a96f2540f82989b4b6d6500e2b78e088ae" translate="yes" xml:space="preserve">
          <source>All widget attributes are supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95a0e3ab45ccc4630d86d4626eb44cd3e33eabfd" translate="yes" xml:space="preserve">
          <source>All widgets and layouts on the form can be connected together. However, spacers just provide spacing hints to layouts, so they cannot be connected to other objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="080a84f1cda47a756460e92093ec46a069cb5f6c" translate="yes" xml:space="preserve">
          <source>All widgets and other user interface elements should have interfaces and plugins. If you want your application to support accessibility, you will need to consider the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7b9e7cb193efb846a36e889eb203f54ec563281" translate="yes" xml:space="preserve">
          <source>All widgets are visible. The current widget is merely raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beaed580447d7352860a239657a1a8f54a8f04e8" translate="yes" xml:space="preserve">
          <source>All widgets have a default property sheet which populates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a9ac9d2951042c6493bde23cb9eb531024ab442" translate="yes" xml:space="preserve">
          <source>All widgets set here will be deleted by the scroll area when it is destroyed unless you separately reparent the widget after setting some other corner widget (or &lt;code&gt;nullptr&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04e9eff0ffe5c35b6710d3a24f386bb6fd21f365" translate="yes" xml:space="preserve">
          <source>All widgets set here will be deleted by the tab widget when it is destroyed unless you separately reparent the widget after setting some other corner widget (or &lt;code&gt;nullptr&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4f4259711f867c3c155d6fbe2b3cf66758ca973" translate="yes" xml:space="preserve">
          <source>All widgets set here will be deleted by the wizard when it is destroyed unless you separately reparent the widget after setting some other side widget (or &lt;code&gt;nullptr&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f31833641561f8571d955a9ba44d0b4064976f87" translate="yes" xml:space="preserve">
          <source>All widgets that are currently managed by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d46fa61b2166642c1504433b8aaba2fecb594e0e" translate="yes" xml:space="preserve">
          <source>All window managers and independent tray implementations for X11 that implement the &lt;a href=&quot;http://standards.freedesktop.org/systemtray-spec/systemtray-spec-0.2.html&quot;&gt;freedesktop.org XEmbed system tray specification&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccffd89e5ea12449bfaee1861506664a29bca1e0" translate="yes" xml:space="preserve">
          <source>All window managers and independent tray implementations for X11 that implement the &lt;a href=&quot;http://standards.freedesktop.org/systemtray-spec/systemtray-spec-0.2.html%20freedesktop.org&quot;&gt;http://standards.freedesktop.org/systemtray-spec/systemtray-spec-0.2.html freedesktop.org&lt;/a&gt; XEmbed system tray specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea0caa46fb814990087f07d03eccc29d7d14c466" translate="yes" xml:space="preserve">
          <source>All you need to do to introduce a final state in the graph is create a &lt;a href=&quot;qfinalstate&quot;&gt;QFinalState&lt;/a&gt; object and use it as the target of one or more transitions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2364fed5420e0771bc46586693e0779bb05ce47" translate="yes" xml:space="preserve">
          <source>All you need to do to introduce a final state in the graph is create a &lt;a href=&quot;qml-qtqml-statemachine-finalstate&quot;&gt;FinalState&lt;/a&gt; object and use it as the target of one or more transitions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="688777d4497ad91d4bcb60139b185bcba4f706fd" translate="yes" xml:space="preserve">
          <source>Allocate the server-side storage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="010ee53c1a98de15d1c57efdc897078fcc89ea95" translate="yes" xml:space="preserve">
          <source>Allocates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c47894000886307ac6285109adc2f18d51d364a" translate="yes" xml:space="preserve">
          <source>Allocates server-side storage for this texture object taking into account, the format, dimensions, mipmap levels, array layers and cubemap faces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="420c9d5412bc17db56591ea50a8ab3e500e193fa" translate="yes" xml:space="preserve">
          <source>Allocates space for a copy of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22de7284d73ea025813096e915d42f3e9d3f00f5" translate="yes" xml:space="preserve">
          <source>Allocates the platform resources associated with the offscreen surface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97ab690f92529d8be1131c37129188d049c11931" translate="yes" xml:space="preserve">
          <source>Allocates the platform resources associated with the window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33ef6f8854276b4aa3eb5f381c3d2e938325b1d1" translate="yes" xml:space="preserve">
          <source>Allocating the Selection Lists</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="149ebf5a5b0454c1ee752ec77824d0805587309b" translate="yes" xml:space="preserve">
          <source>Allow characteristic values without responses to be written.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39ea0cf7080b864afbe3d65599b10179efb62715" translate="yes" xml:space="preserve">
          <source>Allow for characteristic values to be written.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57c1ece58c3cab85af909ddab15bb6598ac3e17c" translate="yes" xml:space="preserve">
          <source>Allow for the broadcasting of Generic Attributes (GATT) characteristic values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab3c7b37e41b31c703bd3b267d5953e5ea9a194d" translate="yes" xml:space="preserve">
          <source>Allow other applications to replace us with the &lt;a href=&quot;qdbusconnectioninterface#ServiceQueueOptions-enum&quot;&gt;ReplaceExistingService&lt;/a&gt; option to &lt;a href=&quot;qdbusconnectioninterface#registerService&quot;&gt;registerService&lt;/a&gt;() without intervention. If that happens, the &lt;a href=&quot;qdbusconnectioninterface#serviceUnregistered&quot;&gt;serviceUnregistered&lt;/a&gt;() signal will be emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d3d947b4b44126c4dbfd0c5ff0baea458aad616" translate="yes" xml:space="preserve">
          <source>Allow other services to bind to the same address and port. This is useful when multiple processes share the load of a single service by listening to the same address and port (e.g., a web server with several pre-forked listeners can greatly improve response time). However, because any service is allowed to rebind, this option is subject to certain security considerations. Note that by combining this option with ReuseAddressHint, you will also allow your service to rebind an existing shared address. On Unix, this is equivalent to the SO_REUSEADDR socket option. On Windows, this is the default behavior, so this option is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7602209e4f442497ae4815572528a26fef6da8ce" translate="yes" xml:space="preserve">
          <source>Allow the characteristic values to be read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a15d2b1d78fdf944af24b44432a3ce05bba8f57" translate="yes" xml:space="preserve">
          <source>Allow the process hosting the bound service to go through its normal memory management. See &lt;a href=&quot;https://developer.android.com/reference/android/content/Context.html#BIND_ALLOW_OOM_MANAGEMENT&quot;&gt;BIND_ALLOW_OOM_MANAGEMENT&lt;/a&gt; documentation for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d39874c41b83942a48f4b3711d586a0a4b70112" translate="yes" xml:space="preserve">
          <source>Allow the user to select the alpha component of a color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9414693b2c2f058521c91d9f398a1514132a462" translate="yes" xml:space="preserve">
          <source>Allow to query if this engine represents a null icon. The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fc3c73677c9882f3fdd015472725fe4a23339d6" translate="yes" xml:space="preserve">
          <source>Allowed hue values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dab90474b73d659ae550ccaa7a71ab8c17b8dc9" translate="yes" xml:space="preserve">
          <source>Allowed values are between -inf and inf. By default these properties are set to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6320dab211f63cc04288a086ddbdb11adc4cea1e" translate="yes" xml:space="preserve">
          <source>Allowed values are between 0 and inf (practical maximum depends on GPU). By default the property is set to &lt;code&gt;0&lt;/code&gt; (no samples).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff4cf19a204ceea06af4bcd43ec4363d5c932e7b" translate="yes" xml:space="preserve">
          <source>Allowed values are between 0.0 and 360.0. By default the property is set to &lt;code&gt;0.0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dae76a1d477bf5d8f7a13fb6d7dc9744cc935dd" translate="yes" xml:space="preserve">
          <source>Allows JavaScript programs to open popup windows without user interaction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da7b8c390875fe2958d570e7e1c4972150d7f065" translate="yes" xml:space="preserve">
          <source>Allows JavaScript programs to open popup windows without user interaction. Enabled by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3faf9a6b43c34eea359e2b65d3f3fa0233b0be01" translate="yes" xml:space="preserve">
          <source>Allows JavaScript programs to read from and write to the clipboard. Writing to the clipboard is always allowed if it is specifically requested by the user. See JavascriptCanPaste to also allow pasting the content of the clipboard content from JavaScript. Disabled by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98f526954fa2ca885d39c124a17927da2102d4ff" translate="yes" xml:space="preserve">
          <source>Allows JavaScript programs to read from or write to the clipboard. Writing to the clipboard is always allowed if it is specifically requested by the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5c5bd043365e2c0a3d1a93acf55b216a5dcdfe7" translate="yes" xml:space="preserve">
          <source>Allows OpenGL shader programs to be linked and used</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24107efcbd01551be8d84bad57ef84fbae8e6307" translate="yes" xml:space="preserve">
          <source>Allows OpenGL shaders to be compiled</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cde3f14b48be48a9af5309662e15187b2cce4697" translate="yes" xml:space="preserve">
          <source>Allows a HID Host to map information from the Report Map characteristic value for Input Report, Output Report or Feature Report data to the Characteristic UUID of external service characteristics used to transfer the associated data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56fe6194f63466e401b407c7534a1b5173ce9602" translate="yes" xml:space="preserve">
          <source>Allows a property to smoothly track a value. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d727fe43118361a803833820cc3199622a75beb5" translate="yes" xml:space="preserve">
          <source>Allows a property to track a value in a spring-like motion. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3cd72381be2cc45921bacfad8e45287d3c826af" translate="yes" xml:space="preserve">
          <source>Allows a view to use different delegates for different types of items in the model. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7327e3b63816a2dfb68527365ba55678f030a54f" translate="yes" xml:space="preserve">
          <source>Allows activating windows by using the window.focus() JavaScript method. Disabled by default. (Added in Qt 5.10)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48d74160074c23d9eff4f248f39fd18c0154b2d8" translate="yes" xml:space="preserve">
          <source>Allows all navigation requests to URLs with unknown schemes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="430f50d57a745fa76924e43cfb8fc574842cfd64" translate="yes" xml:space="preserve">
          <source>Allows an observer to monitor for any of the above changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="981a48dcf7f8c3c7f81d585ab7837e3334b0be76" translate="yes" xml:space="preserve">
          <source>Allows animations to be run sequentially. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54cef98a7e9452399fb30c8ec38f5dbb0ebbe55e" translate="yes" xml:space="preserve">
          <source>Allows any ignored gesture events to be propagated to parent widgets which have specified this hint. By default only gestures that are in the &lt;a href=&quot;qt#GestureState-enum&quot;&gt;Qt::GestureStarted&lt;/a&gt; state are propagated and the widget always gets the full gesture sequence starting with a gesture in the &lt;a href=&quot;qt#GestureState-enum&quot;&gt;Qt::GestureStarted&lt;/a&gt; state and ending with a gesture in the &lt;a href=&quot;qt#GestureState-enum&quot;&gt;Qt::GestureFinished&lt;/a&gt; or &lt;a href=&quot;qt#GestureState-enum&quot;&gt;Qt::GestureCanceled&lt;/a&gt; states.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e98f5d00657b90722d8a238255cff1d2b7d89537" translate="yes" xml:space="preserve">
          <source>Allows configuration of browser properties and attributes. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4e8c367c9b6117ea2701afe92e9b76c3389f8b1" translate="yes" xml:space="preserve">
          <source>Allows controlling the scene camera along orbital path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db74cbe5fec1ef85fb931f5281151b18a82db85c" translate="yes" xml:space="preserve">
          <source>Allows controlling the scene camera from the first person perspective</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e9b13c69dc1c7d59190b313b4b2a67033f3b2ad" translate="yes" xml:space="preserve">
          <source>Allows creation of a 2D text in 3D space</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1dadc965e0827cd49056f19a179c3a6d3c102a5" translate="yes" xml:space="preserve">
          <source>Allows creation of a 3D extruded text in 3D space</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6512098e511e5aabc2ce2b2efca82f763c414b8" translate="yes" xml:space="preserve">
          <source>Allows creation of a cone in 3D space. * * * * * The QConeGeometry class is most commonly used internally by the QConeMesh * but can also be used in custom Qt3DRender::QGeometryRenderer subclasses. The class * allows for creation of both a cone and a truncated cone</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85e9472ea71b72e615ec0e7d23f8503eddb7f867" translate="yes" xml:space="preserve">
          <source>Allows creation of a cuboid in 3D space. * * * * * The QCuboidGeometry class is most commonly used internally by the QCuboidMesh * but can also be used in custom Qt3DRender::QGeometryRenderer subclasses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3933c967ac4248802d920744d5051d0437f93802" translate="yes" xml:space="preserve">
          <source>Allows creation of a cylinder in 3D space. * * * * * The QCylinderGeometry class is most commonly used internally by the QCylinderMesh * but can also be used in custom Qt3DRender::QGeometryRenderer subclasses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d146511c50842659d403c41e5890b09c2ecdea0c" translate="yes" xml:space="preserve">
          <source>Allows creation of a plane in 3D space. * * * * The QPlaneGeometry class is most commonly used internally by the QPlaneMesh * but can also be used in custom Qt3DRender::QGeometryRenderer subclasses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b13225268ea4632d37751a1a8f110a0b0d868d74" translate="yes" xml:space="preserve">
          <source>Allows creation of a sphere in 3D space. * * * * * The QSphereGeometry class is most commonly used internally by the QSphereMesh * but can also be used in custom Qt3DRender::QGeometryRenderer subclasses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="428151aae2d73798ad8f11cc7fd1922e1834ad2e" translate="yes" xml:space="preserve">
          <source>Allows creation of a torus in 3D space. * * * * * The QTorusGeometry class is most commonly used internally by the QTorusMesh * but can also be used in custom Qt3DRender::QGeometryRenderer subclasses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4a3475a41cf4e455d880ad3e3fc0d6b7f8b6ba2" translate="yes" xml:space="preserve">
          <source>Allows data from drag and drop operations to be dropped onto the widget (see &lt;a href=&quot;qwidget#acceptDrops-prop&quot;&gt;QWidget::setAcceptDrops&lt;/a&gt;()).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e1cfaeb6770e85b818d14296e1ab3a86c36ae5a" translate="yes" xml:space="preserve">
          <source>Allows defining a custom easing curve using a TCB spline</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a36ad2aab18b063cfa56ac098db537b0785fb7ab" translate="yes" xml:space="preserve">
          <source>Allows defining a custom easing curve using a cubic bezier spline</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7083517f1ca2c0e0c2e1769195a408c3eb1117d3" translate="yes" xml:space="preserve">
          <source>Allows disabled menu items to be active.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="393cb1ccf21af7cb8f5a68bf4a1386cfdd38eb18" translate="yes" xml:space="preserve">
          <source>Allows dynamic loading of a subtree from a URL or Component. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f00ba24ff9bdfca09333e2efc51efd2cedd6a516" translate="yes" xml:space="preserve">
          <source>Allows dynamic loading of keyboard layout. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e446183775a9435eed9856efad6a90ef02553f1" translate="yes" xml:space="preserve">
          <source>Allows fonts to be loaded by name or URL. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c4e3c60c7aae5b9fe6ebf4aed4fa233ca7487e4" translate="yes" xml:space="preserve">
          <source>Allows geometry shader to access adjacent lines in a line list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62f64f629eead280dd689f5256ec7277cd72fdab" translate="yes" xml:space="preserve">
          <source>Allows geometry shader to access adjacent lines in a line strip</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa41c28862a3f88b99156a8acc62be19060c1562" translate="yes" xml:space="preserve">
          <source>Allows geometry shader to access adjacent triangles in a triangle list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ac30ba47b930243e611e265a96695bea730bffc" translate="yes" xml:space="preserve">
          <source>Allows geometry shader to access adjacent triangles in a triangle strip</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83119efa442c40da476592e2b4de51f20219f3c9" translate="yes" xml:space="preserve">
          <source>Allows locally loaded documents to access other local URLs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8f81cecebb2ffe23baa2d19463d205668775606" translate="yes" xml:space="preserve">
          <source>Allows locally loaded documents to access other local URLs. Enabled by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47161d24b0a1d1c43e123856e25757fdaba5c50f" translate="yes" xml:space="preserve">
          <source>Allows locally loaded documents to access remote URLs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aab686cd8e566239295851a3d72e3b809e65ee1" translate="yes" xml:space="preserve">
          <source>Allows locally loaded documents to ignore cross-origin rules so that they can access remote resources that would normally be blocked, because all remote resources are considered cross-origin for a local file. Remote access that would not be blocked by cross-origin rules is still possible when this setting is disabled (default). Note that disabling this setting does not stop XMLHttpRequests or media elements in local files from accessing remote content. Basically, it only stops some HTML subresources, such as scripts, and therefore disabling this setting is not a safety mechanism.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ed350f3f8641620d8d324af34b2d248ea5e2e30" translate="yes" xml:space="preserve">
          <source>Allows manipulating the window's thumbnail toolbar. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08ab0259330e156b87551af95435e07ddb7e6a29" translate="yes" xml:space="preserve">
          <source>Allows monitoring a QFuture using signals and slots</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f280a2b655920c224bc38db4631d94965f46b74d" translate="yes" xml:space="preserve">
          <source>Allows navigation requests to URLs with unknown schemes that are issued from user-interaction (like a mouse-click), whereas other navigation requests (for example from JavaScript) are suppressed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80fd508149a095da83d0de44eb3771675f23e48c" translate="yes" xml:space="preserve">
          <source>Allows or disallows the origin. Setting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="170cc8b9f53eb410fa37308fc9c3215281bba344" translate="yes" xml:space="preserve">
          <source>Allows popups as a combobox drop-down menu.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="882db9e14947aa8c2e36a4575846d1f24bc2470a" translate="yes" xml:space="preserve">
          <source>Allows replica &lt;a href=&quot;qtremoteobjects-repc#prop&quot;&gt;PROP&lt;/a&gt; members with the PERSISTED trait to save their current value when the replica is deleted and restore a stored value the next time the replica is started.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca03f2e53a8f934b2eca2a77ef346ebacf0b3734" translate="yes" xml:space="preserve">
          <source>Allows retrieving information about the volume's space, its mount point, label, and filesystem name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91608b74b7828a20db93568e1bb64255e3b06058" translate="yes" xml:space="preserve">
          <source>Allows setting a &lt;a href=&quot;qremoteobjectabstractpersistedstore&quot;&gt;QRemoteObjectAbstractPersistedStore&lt;/a&gt; instance for the node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8df79570d4b0cebb6d575f064012bebb79331469" translate="yes" xml:space="preserve">
          <source>Allows setting a reference to the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6950f1b7e260d6f44d71699c1ca99f948628c43c" translate="yes" xml:space="preserve">
          <source>Allows setting the spot metering point to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c79b0469826ed15e37f2e3b64fd6e422ba1f25c7" translate="yes" xml:space="preserve">
          <source>Allows specifying which color components should be written to the currently bound frame buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b722802b56aca1ad716b32d80003256ee09f7dd7" translate="yes" xml:space="preserve">
          <source>Allows specifying which color components should be written to the currently bound frame buffer. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eb5369cb9e661b44d703a1903eddff10791498c" translate="yes" xml:space="preserve">
          <source>Allows specifying which color components should be written to the currently bound frame buffer. &lt;a href=&quot;qt3drender-qcolormask#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c80503f05787d4871ce11a18217cbab13b17172" translate="yes" xml:space="preserve">
          <source>Allows the application to run setuid on UNIX platforms if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd4b2fe39b27cb12ecfe76530143b3b87fa5fbe2" translate="yes" xml:space="preserve">
          <source>Allows the file name of the library to specify a particular object file within an archive file. If this hint is given, the filename of the library consists of a path, which is a reference to an archive file, followed by a reference to the archive member.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10280a14999cf5a57dea72d26b9c22bb678ec339" translate="yes" xml:space="preserve">
          <source>Allows the new rows and columns to be populated with items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16a5941a3c3e9e207029ea3b7b284a1831a50ba3" translate="yes" xml:space="preserve">
          <source>Allows the parent axis to have a zero value if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="decf27545afa0fce767d47984e8b3de43788aa25" translate="yes" xml:space="preserve">
          <source>Allows the parent axis to have negative values if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90b02b4a4621e462eeed3821150f17b889456dc5" translate="yes" xml:space="preserve">
          <source>Allows the specification of an attachment of a render target (whether it is a color texture, a depth texture, etc... )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e96fe35114bda2288ed7e255760b8e23fae97c4" translate="yes" xml:space="preserve">
          <source>Allows the user to define a set of actions that they wish to use within an application</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc28293dbbc9611b55bd034296005681a9181522" translate="yes" xml:space="preserve">
          <source>Allows the user to define a set of actions that they wish to use within an application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39a3cdedd42141b1820ed26528563fd480acf005" translate="yes" xml:space="preserve">
          <source>Allows the user to select from a set of preset values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="876fce6b47915bfb9f6240b4893c70ff083dab1b" translate="yes" xml:space="preserve">
          <source>Allows the user to select from a set of preset values. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47057f29748ab5af8c9ea30a285fa0aa13576f2c" translate="yes" xml:space="preserve">
          <source>Allows the user to switch between different views or subtasks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="156a0b2561fef85c582030c2701fddf66a2dd61a" translate="yes" xml:space="preserve">
          <source>Allows the user to switch between different views or subtasks. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f215110ecd50ba8a353808c3f2901c739ff3d11f" translate="yes" xml:space="preserve">
          <source>Allows the window.focus() method in JavaScript. Disallowed by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="685253d2d001f09edb12fff437a78d1f183e60d3" translate="yes" xml:space="preserve">
          <source>Allows to query the name used to create the icon, for example when instantiating an icon using &lt;a href=&quot;qicon#fromTheme&quot;&gt;QIcon::fromTheme&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0af5de5c074c92007a5d8cd20365af17e2deb5d" translate="yes" xml:space="preserve">
          <source>Allows to query the sizes of the contained pixmaps for pixmap-based engines. The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16bb399d3a44df470593f428efce09a6fd3b3881" translate="yes" xml:space="preserve">
          <source>Allows to tweak the output of &lt;a href=&quot;qtglobal#qDebug&quot;&gt;qDebug&lt;/a&gt;(), &lt;a href=&quot;qtglobal#qInfo&quot;&gt;qInfo&lt;/a&gt;(), &lt;a href=&quot;qtglobal#qWarning&quot;&gt;qWarning&lt;/a&gt;(), &lt;a href=&quot;qtglobal#qCritical&quot;&gt;qCritical&lt;/a&gt;(), and &lt;a href=&quot;qtglobal#qFatal&quot;&gt;qFatal&lt;/a&gt;(). The category logging output of &lt;a href=&quot;qloggingcategory#qCDebug&quot;&gt;qCDebug&lt;/a&gt;(), &lt;a href=&quot;qloggingcategory#qCInfo&quot;&gt;qCInfo&lt;/a&gt;(), &lt;a href=&quot;qloggingcategory#qCWarning&quot;&gt;qCWarning&lt;/a&gt;(), and &lt;a href=&quot;qloggingcategory#qCCritical&quot;&gt;qCCritical&lt;/a&gt;() is formatted, too.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ce20a31a104abd9f4f79ad6bac9ca847cd4ef2b" translate="yes" xml:space="preserve">
          <source>Allows to use a &lt;a href=&quot;qt3drender-qsharedgltexture#textureId-prop&quot;&gt;textureId&lt;/a&gt; from a separate OpenGL context in a Qt 3D scene. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c9627ff0e7f7f96a0ebc81f802da28240ce98a3" translate="yes" xml:space="preserve">
          <source>Allows to use a &lt;a href=&quot;qt3drender-qsharedgltexture#textureId-prop&quot;&gt;textureId&lt;/a&gt; from a separate OpenGL context in a Qt 3D scene. &lt;a href=&quot;qt3drender-qsharedgltexture#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87c7ffff8ff8688a2efb2dd3d1f522920f4d74ad" translate="yes" xml:space="preserve">
          <source>Allows touch events (see &lt;a href=&quot;qtouchevent&quot;&gt;QTouchEvent&lt;/a&gt;) to be sent to the widget. Must be set on all widgets that can handle touch events. Without this attribute set, events from a touch device will be sent as mouse events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aa4c73ad716a938c1fdb4e8d802b13da24f3092" translate="yes" xml:space="preserve">
          <source>Allows touchpad single touch events to be sent to the widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f351217e1c5887e3b9117dffc0032d8fddbb0b9" translate="yes" xml:space="preserve">
          <source>Allows users to specify a non-existing file. If an existing file is selected, the users should be informed that the file is going to be overwritten.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29e03358709da74eb974d8289a50ce4962f24940" translate="yes" xml:space="preserve">
          <source>Allows users to specify a single existing file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14a64aa1fd89ff901073bc6a38988be0e66db1a1" translate="yes" xml:space="preserve">
          <source>Allows users to specify a single existing folder for upload.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20e9ddf9c492b90e06995ab7ceb2064cc74da429" translate="yes" xml:space="preserve">
          <source>Allows users to specify multiple existing files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a85fccf34c7ba9eea4f1591e0144a374e010cde3" translate="yes" xml:space="preserve">
          <source>Allows writing over the existing file if necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a7aa8ea2c368e88414ddfb601e3750b908ffe21" translate="yes" xml:space="preserve">
          <source>Allows you to define syntax highlighting rules, and in addition you can use the class to query a document's current formatting or user data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="968855b5755a23b50801ee90a59f66350e193964" translate="yes" xml:space="preserve">
          <source>Allows you to deform the particle image when drawn. The rectangular image will be deformed so that the horizontal sides are in the shape of this vector instead of (1,0).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfc476845610968190f61dd080e6d21e8e044102" translate="yes" xml:space="preserve">
          <source>Allows you to deform the particle image when drawn. The rectangular image will be deformed so that the vertical sides are in the shape of this vector instead of (0,1).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e867bdcd99008320023e64949a7307b07007a94" translate="yes" xml:space="preserve">
          <source>Allows you to set a text validator for an editable &lt;a href=&quot;qml-qtquick-controls-combobox&quot;&gt;ComboBox&lt;/a&gt;. When a validator is set, the text field will only accept input which leaves the text property in an intermediate state. The accepted signal will only be sent if the text is in an acceptable state when enter is pressed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73a10f8f7cda3dd36bcf065d426d41470042f08f" translate="yes" xml:space="preserve">
          <source>Allows you to set a validator on the &lt;a href=&quot;qml-qtquick-controls-textfield&quot;&gt;TextField&lt;/a&gt;. When a validator is set, the &lt;a href=&quot;qml-qtquick-controls-textfield&quot;&gt;TextField&lt;/a&gt; will only accept input which leaves the text property in an intermediate state. The accepted signal will only be sent if the text is in an acceptable state when enter is pressed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23c1788273163ed762a05b764b58d2e878128b47" translate="yes" xml:space="preserve">
          <source>Allows you to set a validator on the &lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInput&lt;/a&gt;. When a validator is set the &lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInput&lt;/a&gt; will only accept input which leaves the text property in an acceptable or intermediate state. The accepted signal will only be sent if the text is in an acceptable state when enter is pressed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c7c0939c08182ad4746ecc7e29d72ede3f86562" translate="yes" xml:space="preserve">
          <source>Allows you to set an input mask on the &lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInput&lt;/a&gt;, restricting the allowable text inputs. See &lt;a href=&quot;qlineedit#inputMask-prop&quot;&gt;QLineEdit::inputMask&lt;/a&gt; for further details, as the exact same mask strings are used by &lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInput&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9c90443ac0d58a3421ed41bf06cac16d23cf8c0" translate="yes" xml:space="preserve">
          <source>Almost all essential &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtmodules.html#&quot;&gt;Qt modules&lt;/a&gt; and some add-on modules supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="114d475a4d31ff07211b487ce173657886bf2ba6" translate="yes" xml:space="preserve">
          <source>Alpha Blended Primitives</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7effd04b4039dcbf67bc21821a51f8efd2496314" translate="yes" xml:space="preserve">
          <source>Alpha component</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9941e59c0128b3ba03adc96eb5f97f35ead781f" translate="yes" xml:space="preserve">
          <source>Alpha is measured from 0.0 to 1.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="307a262822d5a7722a7706d989a4c3479922596a" translate="yes" xml:space="preserve">
          <source>Alpha is the transparency of the surface between 0 (fully transparent) and 1 (opaque).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fa0acff3f700657de4fa6eb2a3eded1b9c1f0b0" translate="yes" xml:space="preserve">
          <source>Alpha-Blended Drawing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffa8707a8dedd05660705f2bafb53d0eedcc14c6" translate="yes" xml:space="preserve">
          <source>AlphaCoverage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c33e6527a4fab2664005b527bc1f6e7e919b5fce" translate="yes" xml:space="preserve">
          <source>AlphaCoverage (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dcf2f18a71cb4b48dba38e7c1a86e0bf19b6a81" translate="yes" xml:space="preserve">
          <source>AlphaCoverage QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a05bc930c30e2eea1c8fb2dd2313751e8adc9c49" translate="yes" xml:space="preserve">
          <source>AlphaTest</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3a4de2362fbbfeb2449fc9a756ab279b7aa19f5" translate="yes" xml:space="preserve">
          <source>AlphaTest (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf4cc291d1c581d9439481bd107d17d648b7a845" translate="yes" xml:space="preserve">
          <source>AlphaTest QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f275e8d72e74daf8dc69873fa883228573647251" translate="yes" xml:space="preserve">
          <source>AlphaTest.alphaFunction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7783139a4eff5de2459f983b5d75e63e14045b3f" translate="yes" xml:space="preserve">
          <source>AlphaTest.referenceValue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61784bccf726c3549c1b2c787c9db4056d2772e9" translate="yes" xml:space="preserve">
          <source>Alphabetic ordering of places according to name is relevant to the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb87a8bce03a6e3bc11731edaee7a1d9e05b65a4" translate="yes" xml:space="preserve">
          <source>Already active/running timeouts are not affected by such timeout duration changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dab791a62398c716cde4f1ecd1bdb07426fd93a9" translate="yes" xml:space="preserve">
          <source>Also affects the label border, if enabled. Defaults to &lt;code&gt;Qt::white&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f8e868ed33264a993b835e771bc1b79fc38d2a9" translate="yes" xml:space="preserve">
          <source>Also be aware that providers may vary by which parameters they support for example some providers may not support paging while others do, some providers may honor relevance hints while others may completely ignore them, see the &lt;a href=&quot;qtlocation-index#plugin-references-and-parameters&quot;&gt;plugin documentation&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7a2254bb2a2835db6ca428a8a25b88bc0ff7844" translate="yes" xml:space="preserve">
          <source>Also note shipping OpenSSL might cause &lt;a href=&quot;ssl#import-and-export-restrictions&quot;&gt;Import and Export Restrictions&lt;/a&gt; to apply.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ffc88a606731e1d1d088a502d5d1c5982f0d34b" translate="yes" xml:space="preserve">
          <source>Also note that IPv6 site-local addresses are deprecated and should be considered as global in new applications. This function returns true for site-local addresses too.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="432ac25b25aacdb470cd65cd83599e6d7175feff" translate="yes" xml:space="preserve">
          <source>Also note that a number of the important concepts covered in this document are demonstrated in the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtqml-tutorials-extending-qml-example.html#&quot;&gt;Writing QML Extensions with C++&lt;/a&gt; tutorial.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63ce027e8de4b948101eaffaecfc38523b6d8089" translate="yes" xml:space="preserve">
          <source>Also note that readings are not immediately available after &lt;a href=&quot;qsensor#start&quot;&gt;start&lt;/a&gt;() is called. Applications must wait for the &lt;a href=&quot;qsensor#readingChanged&quot;&gt;readingChanged&lt;/a&gt;() signal to be emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bce151f260872e0c019830200ff1e436557f12ed" translate="yes" xml:space="preserve">
          <source>Also note that the types &lt;code&gt;void*&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt;, &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;unsigned&lt;/code&gt;&lt;code&gt;long&lt;/code&gt;, &lt;code&gt;unsigned&lt;/code&gt;&lt;code&gt;short&lt;/code&gt;, &lt;code&gt;unsigned&lt;/code&gt;&lt;code&gt;char&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;QObject*&lt;/code&gt;, and &lt;code&gt;QWidget*&lt;/code&gt; are represented in &lt;a href=&quot;qmetatype#Type-enum&quot;&gt;QMetaType::Type&lt;/a&gt; but not in QVariant::Type, and they can be returned by this function. However, they are considered to be user defined types when tested against QVariant::Type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c97594e311c6f082c1fdaadde28b13e45aef3992" translate="yes" xml:space="preserve">
          <source>Also note that you shouldn't set the application default proxy (&lt;a href=&quot;qnetworkproxy#setApplicationProxy&quot;&gt;setApplicationProxy&lt;/a&gt;()) to a proxy that doesn't have the &lt;a href=&quot;qnetworkproxy#Capability-enum&quot;&gt;TunnelingCapability&lt;/a&gt; capability. If you do, &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt; will not know how to open connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b914fa8fa8f6a8264df1d844005e69a7f14821ef" translate="yes" xml:space="preserve">
          <source>Also remember that you can avoid doing composition work at run-time by providing the pre-composed image resource with your application (for example, providing elements with shadow effects).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adeef290e51dfcd8dd7ec509af464a105b453b50" translate="yes" xml:space="preserve">
          <source>Also see the &lt;a href=&quot;qqmlcontext&quot;&gt;QQmlContext&lt;/a&gt; documentation for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2770fa2be0441a33285eb72c080c129176cce29d" translate="yes" xml:space="preserve">
          <source>Also supported are exported enums and flags (see Q_ENUMS() and Q_FLAGS()). The in-parameter types are also supported as return values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b999df51681c34aaad0d25b2666bd70099886033" translate="yes" xml:space="preserve">
          <source>Also the data() function needs to be changed to add the &lt;a href=&quot;qt#ItemDataRole-enum&quot;&gt;Qt::EditRole&lt;/a&gt; test:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54a372d3e5754080eb7da2fb7bb9a57f5ded6143" translate="yes" xml:space="preserve">
          <source>Also the scene has flag for tracking if the secondary 2D slicing view is currently active or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d576e6a0dccf64674ae31d7e01facf65412f48b" translate="yes" xml:space="preserve">
          <source>Also, &lt;a href=&quot;qnetworkcookiejar&quot;&gt;QNetworkCookieJar&lt;/a&gt; does not have a maximum cookie jar size. Reimplement this function to discard older cookies to create room for new ones.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86eb1e9e5601b7cb049b2c0f637e16ca28bdf795" translate="yes" xml:space="preserve">
          <source>Also, an item using a layer can not be &lt;a href=&quot;qtquick-visualcanvas-scenegraph-renderer#batching&quot;&gt;batched&lt;/a&gt; during rendering. This means that a scene with many layered items may have performance problems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e673f382e572fbce3873f5dcdd293256df13046" translate="yes" xml:space="preserve">
          <source>Also, anchor-based layouts cannot be mixed with absolute positioning. If an item specifies its &lt;a href=&quot;qml-qtquick-item#x-prop&quot;&gt;x&lt;/a&gt; position and also sets &lt;a href=&quot;qml-qtquick-item#anchors.left-prop&quot;&gt;anchors.left&lt;/a&gt;, or anchors its left and right edges but additionally sets a &lt;a href=&quot;qml-qtquick-item#width-prop&quot;&gt;width&lt;/a&gt;, the result is undefined, as it would not be clear whether the item should use anchoring or absolute positioning. The same can be said for setting an item's &lt;a href=&quot;qml-qtquick-item#y-prop&quot;&gt;y&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-item#height-prop&quot;&gt;height&lt;/a&gt; with &lt;a href=&quot;qml-qtquick-item#anchors.top-prop&quot;&gt;anchors.top&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-item#anchors.bottom-prop&quot;&gt;anchors.bottom&lt;/a&gt;, or setting &lt;a href=&quot;qml-qtquick-item#anchors.fill-prop&quot;&gt;anchors.fill&lt;/a&gt; as well as &lt;a href=&quot;qml-qtquick-item#width-prop&quot;&gt;width&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-item#height-prop&quot;&gt;height&lt;/a&gt;. The same applies when using positioners such as Row and Grid, which may set the item's &lt;a href=&quot;qml-qtquick-item#x-prop&quot;&gt;x&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-item#y-prop&quot;&gt;y&lt;/a&gt; properties. If you wish to change from using anchor-based to absolute positioning, you can clear an anchor value by setting it to &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2887e036de658203ed138fd7cb7b90e9dc602119" translate="yes" xml:space="preserve">
          <source>Also, any property declared with &lt;a href=&quot;qobject#Q_PROPERTY&quot;&gt;Q_PROPERTY&lt;/a&gt; will be automatically exposed over the Properties interface on D-Bus. Since the &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; property system does not allow for non-readable properties, it is not possible to declare write-only properties using adaptors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fa367eb827b7be49bbe9effd06eddb450b8f85a" translate="yes" xml:space="preserve">
          <source>Also, note that Repeater is &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt;-based, and can only repeat &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt;-derived objects. For example, it cannot be used to repeat QtObjects:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b90998cfa38ea31ba619a9027d98acd8f1d9f3e2" translate="yes" xml:space="preserve">
          <source>Also, note that while dynamically created objects may be used the same as other objects, they do not have an id in QML.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23e624cbcf13c311aaf75fb44abd8b7c67e65b24" translate="yes" xml:space="preserve">
          <source>Also, note the &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; will be rotated around its default &lt;a href=&quot;qml-qtquick-item#transformOrigin-prop&quot;&gt;transformOrigin&lt;/a&gt; (which is &lt;code&gt;Item.Center&lt;/code&gt;). To use a different transform origin, set the origin in the &lt;a href=&quot;qml-qtquick-propertychanges&quot;&gt;PropertyChanges&lt;/a&gt; object and apply the change at the start of the animation using &lt;a href=&quot;qml-qtquick-propertyaction&quot;&gt;PropertyAction&lt;/a&gt;. See the &lt;a href=&quot;qml-qtquick-propertyaction&quot;&gt;PropertyAction&lt;/a&gt; documentation for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b35a93e4e5324ee31b5462b76b9f6f99b7119b4d" translate="yes" xml:space="preserve">
          <source>Also, starting a timer makes it valid again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a33c7e43f3ea7aa61d5a8a44335a967d2556141c" translate="yes" xml:space="preserve">
          <source>Also, the generated HTML files can have a prefix and a suffix following the QML module name, specified in the QDoc configuration file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="613b6dcf3db6aec140b4cfb711ee6e139535c18b" translate="yes" xml:space="preserve">
          <source>Also, the manifest embedding for DLLs can be removed with the following assignment to the &lt;code&gt;CONFIG&lt;/code&gt; variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bea70b70467e3eb59ab1e6e535fa4ad76816f195" translate="yes" xml:space="preserve">
          <source>Also, to make it more obvious to see that the custom style is actually being loaded and used, set the keyboard background to a different color:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfdfba4bebb29422145ce0aaa1c4c58446a2ea91" translate="yes" xml:space="preserve">
          <source>Also, to use type &lt;code&gt;T&lt;/code&gt; with the &lt;a href=&quot;qobject#property&quot;&gt;QObject::property&lt;/a&gt;() API, &lt;code&gt;qRegisterMetaType&amp;lt;T&amp;gt;()&lt;/code&gt; must be called before it is used, typically in the constructor of the class that uses &lt;code&gt;T&lt;/code&gt;, or in the &lt;code&gt;main()&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="728e97a48db2764fd8d99beb7ef75fedef6d50fd" translate="yes" xml:space="preserve">
          <source>Alt key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3aff2f0ba099ec3249aab7b7f0ff7e5f90e70dc" translate="yes" xml:space="preserve">
          <source>Alt+A</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f1d49e2c9f7278fd80b98a77041a0c748cbc877" translate="yes" xml:space="preserve">
          <source>Alt+Backspace</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e03e0d826ab2903a1d279112bf254a834058b27f" translate="yes" xml:space="preserve">
          <source>Alt+D</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2717cc5ddcf51809a16693472e1c0f9d270f47cf" translate="yes" xml:space="preserve">
          <source>Alt+Down, Meta+E</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c43e6b7df81aec9f8fd5495a82c7e188910a39c" translate="yes" xml:space="preserve">
          <source>Alt+Left</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d22d75311912132e1a6c7eb539a01ff0785e258b" translate="yes" xml:space="preserve">
          <source>Alt+Left Arrow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cd625b8a2fe32470bd799aacce1c5bae7db51bc" translate="yes" xml:space="preserve">
          <source>Alt+Left, Backspace</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0938c500ffd1724d6e365f4b8c43187a032e6a69" translate="yes" xml:space="preserve">
          <source>Alt+Right</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7abaff068a974f54e98365d176f3533aafc363bd" translate="yes" xml:space="preserve">
          <source>Alt+Right Arrow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd1b9ca8531edf4fead48fe251a838cd15f50bef" translate="yes" xml:space="preserve">
          <source>Alt+Right, Shift+Backspace</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2172096fba799643db2bd5e7c9bd4335a2ac39e1" translate="yes" xml:space="preserve">
          <source>Alt+Shift+Down, Meta+Shift+E</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc812168f4bd3aea59cf8b55b0fdfa7b849bb81e" translate="yes" xml:space="preserve">
          <source>Alt+Shift+Left</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51bb91a616f21414ab10369bdcd1b542ccf8f10c" translate="yes" xml:space="preserve">
          <source>Alt+Shift+Right</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f767ad1b638cc8a47cd55eff931971e48e3f4adb" translate="yes" xml:space="preserve">
          <source>Alt+Shift+Up, Meta+Shift+A</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ffeadde47021248d13e68c7888feb7bd429f230" translate="yes" xml:space="preserve">
          <source>Alt+Up Arrow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="924321f04f4f5de115c2799a5a975112d47621ec" translate="yes" xml:space="preserve">
          <source>Alt+Up, Meta+A</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8ad87f2c176257576e5f42ca8d923d99d4ee9cc" translate="yes" xml:space="preserve">
          <source>Alt+Wheel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42067d9d74bbc067847a30164e23954aca55ff0a" translate="yes" xml:space="preserve">
          <source>Alt+c</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a72257bc95d4261e7297d5b795d5bcc4bb2f3b0f" translate="yes" xml:space="preserve">
          <source>Alternate dots and dashes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="887345b5bc00b53431fac34eb2447b61600fb9cc" translate="yes" xml:space="preserve">
          <source>Alternative Class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ca9570fd2c62058d9831d086ef75c4e962d2d09" translate="yes" xml:space="preserve">
          <source>Alternative Identifier Cross-Referencing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c15ca617f234d80080798c420b525f36080277ea" translate="yes" xml:space="preserve">
          <source>Alternative Keys</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b38b61238292577ebb9249200fb1e68d441674c" translate="yes" xml:space="preserve">
          <source>Alternative::Alternative()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7648b5f066492b47a709f1a90291a1fefe63bb71" translate="yes" xml:space="preserve">
          <source>Alternative::Alternative(const &lt;a href=&quot;qlist#QList&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="858414b9aeca968135756faef3b1b3006c8412cc" translate="yes" xml:space="preserve">
          <source>Alternatively &lt;a href=&quot;qmediacontent&quot;&gt;QMediaContent&lt;/a&gt; can represent a playlist and contain a pointer to a valid &lt;a href=&quot;qmediaplaylist&quot;&gt;QMediaPlaylist&lt;/a&gt; object. In this case URL is optional and can either be empty or point to the playlist URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e8d218c6aa7f1e65b05622a52a2b889cac7dcca" translate="yes" xml:space="preserve">
          <source>Alternatively a function can be called passing the parameters embedded in the string, e.g. above function can also be invoked using</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fd9abd8f4adf44b5921f028683e26ed9a4781c7" translate="yes" xml:space="preserve">
          <source>Alternatively if the IId of the control has been declared using &lt;a href=&quot;qmediacontrol#Q_MEDIA_DECLARE_CONTROL&quot;&gt;Q_MEDIA_DECLARE_CONTROL&lt;/a&gt; the template version of &lt;a href=&quot;qmediaservice#requestControl-1&quot;&gt;QMediaService::requestControl&lt;/a&gt;() can be used to request the service without explicitly passing the IId or using &lt;a href=&quot;qobject#qobject_cast&quot;&gt;qobject_cast&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e424f43e4759a8909dcb00efb7feaadeed5fa72" translate="yes" xml:space="preserve">
          <source>Alternatively it is possible to bind &lt;a href=&quot;qml-qtquick-dialogs-dialog#contentItem-prop&quot;&gt;contentItem&lt;/a&gt; to a custom Item, in which case there will be no buttons, no margins, and the custom content will fill the whole dialog. This is much like creating a &lt;a href=&quot;qml-qtquick-window-window&quot;&gt;Window&lt;/a&gt;, except that on platforms which do not support showing multiple windows, the window borders will be simulated and it will be shown in same scene.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ca01df2ef401c13750114182ad12a529f2e8f5a" translate="yes" xml:space="preserve">
          <source>Alternatively you can set or bind &lt;a href=&quot;qml-qtquick-window-window#x-prop&quot;&gt;x&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-window-window#y-prop&quot;&gt;y&lt;/a&gt; to position the Window explicitly on the screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb5ccfd876976b1f8a66da10b2e4fd1bf1e5654d" translate="yes" xml:space="preserve">
          <source>Alternatively, &lt;a href=&quot;qdialogbuttonbox&quot;&gt;QDialogButtonBox&lt;/a&gt; provides several standard buttons (e.g. OK, Cancel, Save) that you can use. They exist as flags so you can OR them together in the constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32b0bce1bc5887ef0fba4e50cad7e1f847476bb4" translate="yes" xml:space="preserve">
          <source>Alternatively, &lt;a href=&quot;qwebengineview#url-prop&quot;&gt;setUrl&lt;/a&gt;() can be used to load a web site. If you have the HTML content readily available, you can use &lt;a href=&quot;qwebengineview#setHtml&quot;&gt;setHtml&lt;/a&gt;() instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23a7cbe9b06c89c0c69606eadec99b98a7bf9ba8" translate="yes" xml:space="preserve">
          <source>Alternatively, a default sized icon can be specified like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0d2f4e1e0cc6a78de6a5e5e9775a16fdd55a4ec" translate="yes" xml:space="preserve">
          <source>Alternatively, an environment variable &lt;code&gt;QT_AUTO_SCREEN_SCALE_FACTOR=1&lt;/code&gt; can be set to enable automatic high-DPI scaling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8175fffd4484d629c121b29bb8dfdf66c769331c" translate="yes" xml:space="preserve">
          <source>Alternatively, buttons and their roles can be specified by hand:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a59378399e82f9217527d6727f5bd71b1721cdaa" translate="yes" xml:space="preserve">
          <source>Alternatively, create a &lt;a href=&quot;qsound&quot;&gt;QSound&lt;/a&gt; object from the sound file first and then call the &lt;a href=&quot;qsound#play-1&quot;&gt;play&lt;/a&gt;() slot:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d010fc54348b1816334478fc888f3d493491527c" translate="yes" xml:space="preserve">
          <source>Alternatively, forms can be processed at run time, producing dynamically- generated user interfaces. This can be done using the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtuitools-module.html&quot;&gt;QtUiTools&lt;/a&gt; module that provides the &lt;a href=&quot;quiloader&quot;&gt;QUiLoader&lt;/a&gt; class to handle forms created with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15ca78870b7dd2bfcea277145e79c89ea50df4eb" translate="yes" xml:space="preserve">
          <source>Alternatively, if you want the widget to have a fixed size based on its contents, you can call &lt;a href=&quot;qlayout#sizeConstraint-prop&quot;&gt;QLayout::setSizeConstraint&lt;/a&gt;(&lt;a href=&quot;qlayout#SizeConstraint-enum&quot;&gt;QLayout::SetFixedSize&lt;/a&gt;);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c080b9a586c88dcd1fb5a40f42f32690946bb34d" translate="yes" xml:space="preserve">
          <source>Alternatively, it can simply make sure not to call &lt;a href=&quot;qsavefile#commit&quot;&gt;commit&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd3838db1c972989ce813b637fc5fd805bea502a" translate="yes" xml:space="preserve">
          <source>Alternatively, list items can also be created without a parent widget, and later inserted into a list using &lt;a href=&quot;qlistwidget#insertItem&quot;&gt;QListWidget::insertItem&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9b507f5cfee9c1fd98f1b0538c387befabccec3" translate="yes" xml:space="preserve">
          <source>Alternatively, objects can be selected in the &lt;a href=&quot;#the-object-inspector&quot;&gt;Object Inspector&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29bcf362f34e8bf855f6d7e52bc138ead7ec0173" translate="yes" xml:space="preserve">
          <source>Alternatively, since &lt;code&gt;MyItem.qml&lt;/code&gt; is loaded within the scope of the Loader, it could also directly call any function defined in the Loader or its parent &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc72d2fa35dd599daf47c795700a7fdc009e50fd" translate="yes" xml:space="preserve">
          <source>Alternatively, slices can be added to a pie series by using the &lt;a href=&quot;qml-qtcharts-pieseries#append-method&quot;&gt;PieSeries.append()&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ee19810abf7c0a43123af559c91c2b290bed9d7" translate="yes" xml:space="preserve">
          <source>Alternatively, tables can be constructed without a given size and resized later:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d9c78a99f6583f62780471bdb49415c23f22d87" translate="yes" xml:space="preserve">
          <source>Alternatively, the &lt;a href=&quot;qcoreapplication#translate&quot;&gt;QCoreApplication::translate&lt;/a&gt;() function can be called with a specific context, and this will be recognized by &lt;code&gt;lupdate&lt;/code&gt; and Qt Linguist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd7467ceb909df684d0f3a1ae4f97cfc555c0d23" translate="yes" xml:space="preserve">
          <source>Alternatively, the &lt;a href=&quot;qml-qt-labs-settings-settings#value-method&quot;&gt;value()&lt;/a&gt; and &lt;a href=&quot;qml-qt-labs-settings-settings#setValue-method&quot;&gt;setValue()&lt;/a&gt; functions of &lt;a href=&quot;qpainter#settings&quot;&gt;Settings&lt;/a&gt; can be used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c572f301f256b99c0b45c3aa5d520633dd92698a" translate="yes" xml:space="preserve">
          <source>Alternatively, the &lt;a href=&quot;qml-qtquick-controls2-actiongroup#group-attached-prop&quot;&gt;group&lt;/a&gt; attached property allows declaring the actions elsewhere and assigning them to a specific group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4674d0076a934d3596e8dfe3b43347d2b6de796" translate="yes" xml:space="preserve">
          <source>Alternatively, the &lt;code&gt;Ui::CalculatorForm&lt;/code&gt; structure can be made a pointer member of the class. The header then looks as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="addebb9dd1b2b2dd9d63ab8b5937085343cc69a6" translate="yes" xml:space="preserve">
          <source>Alternatively, the &lt;code&gt;application.qml&lt;/code&gt; could have destroyed the created object by calling &lt;code&gt;object.destroy()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da1b681a739fe03a1f9dab3c5338b93673fc2bd3" translate="yes" xml:space="preserve">
          <source>Alternatively, the environment variable QTWEBENGINE_CHROMIUM_FLAGS can be set. For example, the following value could be set to disable logging while debugging an application called</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c3aed3e9a16f8b5b483d26125ce1e6e97706df0" translate="yes" xml:space="preserve">
          <source>Alternatively, the environment variable QTWEBENGINE_REMOTE_DEBUGGING can be set. It can be set as either just a port working similarly to &lt;code&gt;--remote-debugging-port&lt;/code&gt; or given both a host address and a port. The latter can be used to control which network interface to export the interface on, so that you can access the developer tools from a remote device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18a948ac8361b7e2e3e1217a688cc2ed2569cc32" translate="yes" xml:space="preserve">
          <source>Alternatively, the prefixing of each and every OpenGL call can be avoided by deriving from &lt;a href=&quot;https://doc.qt.io/qt-5.13/qopenglfunctions.html&quot;&gt;QOpenGLFunctions&lt;/a&gt; instead:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a87094edd3528f083099c1e1401f048c62e55c9e" translate="yes" xml:space="preserve">
          <source>Alternatively, they can be extracted from an existing editor:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7d2f7e730179452e2405aae6966cc4a6f0ee6b5" translate="yes" xml:space="preserve">
          <source>Alternatively, this effect can be achieved by providing message, key and method to &lt;a href=&quot;qmessageauthenticationcode#hash&quot;&gt;hash&lt;/a&gt;() method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c912db920371c85e82150c3489c220e01b112bf" translate="yes" xml:space="preserve">
          <source>Alternatively, using &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;, apply &lt;a href=&quot;qrect#x&quot;&gt;x()&lt;/a&gt; + &lt;a href=&quot;qrect#width&quot;&gt;width()&lt;/a&gt; and &lt;a href=&quot;qrect#y&quot;&gt;y()&lt;/a&gt; + &lt;a href=&quot;qrect#height&quot;&gt;height()&lt;/a&gt; to find the bottom-right corner, and avoid the &lt;a href=&quot;qrect#right&quot;&gt;right()&lt;/a&gt; and &lt;a href=&quot;qrect#bottom&quot;&gt;bottom()&lt;/a&gt; functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="167f707ea75e78bdcb9c25adc5c46d163b89adc9" translate="yes" xml:space="preserve">
          <source>Alternatively, we can make the first rule more specific:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e43a042fe7153bf933f891be56f30819486958b" translate="yes" xml:space="preserve">
          <source>Alternatively, we can obtain a cursor directly from a document:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc71165a92d0d495662fdb79eb4f3536be70d67b" translate="yes" xml:space="preserve">
          <source>Alternatively, we could also have referred to a file containing the source of the effect instead of the compiled bytecode version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99e88b6e5b0e4f0bdb4921d075c7b71a8001cab3" translate="yes" xml:space="preserve">
          <source>Alternatively, you can also forward a &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::LanguageChange&lt;/a&gt; event to your application's &lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt; instance or connect your own signal to &lt;a href=&quot;qqmlengine#retranslate&quot;&gt;QQmlEngine::retranslate&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ccc06e86758dee97f8a532078c9e3a1574aa440" translate="yes" xml:space="preserve">
          <source>Alternatively, you can cast the object to its actual type and call methods with compile-time safety. In this case the base object of &lt;code&gt;MyItem.qml&lt;/code&gt; is an &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt;, which is defined by the &lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt; class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31839465cca6f9f84f510e9d5845271607538eb9" translate="yes" xml:space="preserve">
          <source>Alternatively, you can import</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b3e56d5b14769440d0a306d0d81d9ac9b152e4d" translate="yes" xml:space="preserve">
          <source>Alternatively, you can insert images using the HTML &lt;code&gt;img&lt;/code&gt; tag:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6151e50ba9c38e7e1dfce25f705f9f18c9a1e3d1" translate="yes" xml:space="preserve">
          <source>Alternatively, you can modify the install name using the &lt;code&gt;install_name_tool(1)&lt;/code&gt; on the command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23ae3475fb33d41e5352690b85ebd62a28cc3b34" translate="yes" xml:space="preserve">
          <source>Alternatively, you can pass an instance of &lt;a href=&quot;qradiotuner&quot;&gt;QRadioTuner&lt;/a&gt; to the constructor to &lt;a href=&quot;qradiodata&quot;&gt;QRadioData&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61771b3b35c36488be0067987000480e5135ec0e" translate="yes" xml:space="preserve">
          <source>Alternatively, you can preview custom style sheet created with Qt Style Sheets. The figure below shows an example of Qt Style Sheet syntax and the corresponding output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a88281dc1e24eeb51a1d706e40dd6987044f6a8" translate="yes" xml:space="preserve">
          <source>Alternatively, you can set the program to run with &lt;a href=&quot;qprocess#setProgram&quot;&gt;setProgram&lt;/a&gt;() and &lt;a href=&quot;qprocess#setArguments&quot;&gt;setArguments&lt;/a&gt;(), and then call &lt;a href=&quot;qprocess#start&quot;&gt;start&lt;/a&gt;() or &lt;a href=&quot;qprocess#open&quot;&gt;open&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8bc899b80d74fbdb9bcd10cd07f72cb2b0a8268" translate="yes" xml:space="preserve">
          <source>Alternatively, you can specify a &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt; instead of a &lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt;; the &lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; constructor (taking a &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt; argument) will automatically create a solid pattern brush.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b07cfac2a244b6e4f6a3ac989a01ec6db3a2692a" translate="yes" xml:space="preserve">
          <source>Alternatively, you can specify a relative path to a .pro file in any directory. It is strongly recommended that you specify only paths in the current project's parent directory or its subdirectories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5091bda74671b133565480b7b4ae9f8ba27e908b" translate="yes" xml:space="preserve">
          <source>Alternatively, you can start by creating a new &lt;a href=&quot;qgraphicsproxywidget&quot;&gt;QGraphicsProxyWidget&lt;/a&gt; item, and then call &lt;a href=&quot;qgraphicsproxywidget#setWidget&quot;&gt;setWidget&lt;/a&gt;() to embed a &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; later. The &lt;a href=&quot;qgraphicsproxywidget#widget&quot;&gt;widget&lt;/a&gt;() function returns a pointer to the embedded widget. &lt;a href=&quot;qgraphicsproxywidget&quot;&gt;QGraphicsProxyWidget&lt;/a&gt; shares ownership with &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;, so if either of the two widgets are destroyed, the other widget will be automatically destroyed as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5341c61deccf887137cce3fe048d2ec0b183dbc6" translate="yes" xml:space="preserve">
          <source>Alternatively, you can temporarily swap your debug and release versions, which is documented in &lt;a href=&quot;http://developer.apple.com/technotes/tn2004/tn2124.html#SECJUSTONELIB&quot;&gt;Apple's &quot;Debugging Magic&quot; technical note&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65370ae6bbae8c2cc3116b13a1f2544e6f7ce92b" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt;(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;) if you just want to read from a byte array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18cd89fe40e760050834a5999e2482aebe07843c" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use a C++11 lambda:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f582d71cae6a211cc74af1711124f62225b132d" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use the &lt;a href=&quot;qml-qtgraphicaleffects-coloroverlay&quot;&gt;ColorOverlay&lt;/a&gt; effect to colorize the source item in the RGBA color space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="875ae8f91aff238ab7e77d18afd53a9d1f329e0a" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use the &lt;a href=&quot;qregularexpression#setPatternOptions&quot;&gt;setPatternOptions&lt;/a&gt;() function on an existing QRegularExpressionObject:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a4be7155bcffba0850c80a370bc5c6b34c37e74" translate="yes" xml:space="preserve">
          <source>Alternatives</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f2b2c92ea95d5f5c42c52e7b95de65a9c10baf3" translate="yes" xml:space="preserve">
          <source>Alternatives to QTimer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2b7867ac20fe02d876e64ca0c757f23f38c808b" translate="yes" xml:space="preserve">
          <source>Alters the colors of the source item by applying an overlay color</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e09f932906d2bc63547495fae85330b38f0e06bc" translate="yes" xml:space="preserve">
          <source>Alters the colors of the source item by applying an overlay color. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34255d56232d0a72bf0a079e3697d7f91788bee2" translate="yes" xml:space="preserve">
          <source>Alters the luminance of the source item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbf6d31a21cc5d6d57a388faba1b189b7629f1fc" translate="yes" xml:space="preserve">
          <source>Alters the luminance of the source item. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd78877be5d6e20edfabd346a46aae106eb53800" translate="yes" xml:space="preserve">
          <source>Alters the source item colors in the HSL color space</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f0f122fd78e25c6b4c9d73eec9cd6c23109d7a3" translate="yes" xml:space="preserve">
          <source>Alters the source item colors in the HSL color space. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15febe87211e7752db2f5bb9859e4d07f0a3fe02" translate="yes" xml:space="preserve">
          <source>Alters the text to be rendered in all lowercase type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5432a5d92c4f97cbde61824aef4f22546e1de125" translate="yes" xml:space="preserve">
          <source>Alters the text to be rendered in all uppercase type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d99113e7a102e3142c38f8e702548cdea29672a" translate="yes" xml:space="preserve">
          <source>Alters the text to be rendered in small-caps type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fa942721f99001934425a24fb5127b6017b6c5e" translate="yes" xml:space="preserve">
          <source>Alters the text to be rendered with the first character of each word as an uppercase character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="657d445772eda12dc2c400c14f0bf35d94315b87" translate="yes" xml:space="preserve">
          <source>Although</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3c2cf86288beebe48f74d5e65045fbe4d6c0648" translate="yes" xml:space="preserve">
          <source>Although &lt;a href=&quot;graphicsview#qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt; inherits from both &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;, you should use the functions provided by &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fa1a29998820b5abe31b6091118610e9a73a2e9" translate="yes" xml:space="preserve">
          <source>Although &lt;a href=&quot;qlocalserver&quot;&gt;QLocalServer&lt;/a&gt; is designed for use with an event loop, it's possible to use it without one. In that case, you must use &lt;a href=&quot;qlocalserver#waitForNewConnection&quot;&gt;waitForNewConnection&lt;/a&gt;(), which blocks until either a connection is available or a timeout expires.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5c00985f5e4c5b9777b0f9ce7dfcabdb8b5e712" translate="yes" xml:space="preserve">
          <source>Although &lt;a href=&quot;qlocalsocket&quot;&gt;QLocalSocket&lt;/a&gt; is designed for use with an event loop, it's possible to use it without one. In that case, you must use &lt;a href=&quot;qlocalsocket#waitForConnected&quot;&gt;waitForConnected&lt;/a&gt;(), &lt;a href=&quot;qlocalsocket#waitForReadyRead&quot;&gt;waitForReadyRead&lt;/a&gt;(), &lt;a href=&quot;qlocalsocket#waitForBytesWritten&quot;&gt;waitForBytesWritten&lt;/a&gt;(), and &lt;a href=&quot;qlocalsocket#waitForDisconnected&quot;&gt;waitForDisconnected&lt;/a&gt;() which blocks until the operation is complete or the timeout expires.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bf821133e41ed980ae8628b2b72bafbd95fe5bf" translate="yes" xml:space="preserve">
          <source>Although &lt;a href=&quot;qml-qtquick-controls2-menuitem&quot;&gt;MenuItems&lt;/a&gt; are most commonly used with Menu, it can contain any type of item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd57b9fa8a01047afd2f64f5c7dccc9c2e384dd9" translate="yes" xml:space="preserve">
          <source>Although &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; is reentrant, the GUI classes, notably &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; and all its subclasses, are not reentrant. They can only be used from the main thread. As noted earlier, &lt;a href=&quot;qcoreapplication#exec&quot;&gt;QCoreApplication::exec&lt;/a&gt;() must also be called from that thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f8dba4a11205c258600d7d2fa0d3ffec962b25b" translate="yes" xml:space="preserve">
          <source>Although &lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; objects can be constructed and set up without requiring user input, printing is often performed as a result of a request by the user; for example, when the user selects the &lt;b&gt;File|Print...&lt;/b&gt; menu item in a GUI application. In such cases, a newly-constructed &lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; object is supplied to a &lt;a href=&quot;qprintdialog&quot;&gt;QPrintDialog&lt;/a&gt;, allowing the user to specify the printer to use, paper size, and other printing properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a5cfef5adedd6e579cf3f8062e436156f237e28" translate="yes" xml:space="preserve">
          <source>Although &lt;a href=&quot;qquickview&quot;&gt;QQuickView&lt;/a&gt; has traditionally been used to display QML files in a C++ application, doing this means you can only set window properties from C++.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="044fd8ff3177b77d3970d09eb6328a950f5dcd3e" translate="yes" xml:space="preserve">
          <source>Although &lt;a href=&quot;qsplitter&quot;&gt;QSplitter&lt;/a&gt; is a container widget,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1db04d2ad55920af0f27dea5c726b85c629aa47" translate="yes" xml:space="preserve">
          <source>Although &lt;a href=&quot;qtcpserver&quot;&gt;QTcpServer&lt;/a&gt; is mostly designed for use with an event loop, it's possible to use it without one. In that case, you must use &lt;a href=&quot;qtcpserver#waitForNewConnection&quot;&gt;waitForNewConnection&lt;/a&gt;(), which blocks until either a connection is available or a timeout expires.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75bdc49404890f8106c66558029a8f886b1a9490" translate="yes" xml:space="preserve">
          <source>Although &lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt; makes it easy to display and edit rich text, documents can also be used independently of any editor widget, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10726a2e934457cf612c6f1ecb079a8b7e8c31ca" translate="yes" xml:space="preserve">
          <source>Although Qt enables you to manipulate QML from C++, it is not recommended to do so. To explain why, let's take a look at a simplified example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57527e3e7ade42d3b70aaf429c7eb0c3c99fe909" translate="yes" xml:space="preserve">
          <source>Although Qt provides facilities to handle and display resources, such as &lt;a href=&quot;qimageiohandler&quot;&gt;common image formats&lt;/a&gt; and &lt;a href=&quot;qtextdocument&quot;&gt;HTML&lt;/a&gt;, it is sometimes necessary to open files and external resources using external applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44655c28b3eda8d3702e45ec301e410a163ad1d9" translate="yes" xml:space="preserve">
          <source>Although a document can be edited using many cursors at once, a &lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt; only displays a single cursor at a time. Therefore, if we want to update the editor to display a particular cursor or its selection, we need to set the editor's cursor after we have modified the document:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5e798e54edda61f110d729af8a6a7484fb21471" translate="yes" xml:space="preserve">
          <source>Although a given document may contain complex structures, once we have a reference to a valid block in the document, we can navigate between each of the text blocks in the order in which they were written:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d54035e63623f85c8d4f7cb18bc0993cb248ef2" translate="yes" xml:space="preserve">
          <source>Although a popup menu is always a top-level widget, if a parent is passed the popup menu will be deleted when that parent is destroyed (as with any other &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2802798553f7fae660d413f7e20b1a789e6dd4a" translate="yes" xml:space="preserve">
          <source>Although all of the standard items have one or both flags set for drag and drop, you generally need to set various properties in the view itself to take advantage of the built-in support for drag and drop:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89a215bbacf9b7715d00cada0738921a12587c7d" translate="yes" xml:space="preserve">
          <source>Although any combination of values from &lt;a href=&quot;qt#DropAction-enum&quot;&gt;Qt::DropActions&lt;/a&gt; can be given, the model needs to be written to support them. For example, to allow &lt;a href=&quot;qt#DropAction-enum&quot;&gt;Qt::MoveAction&lt;/a&gt; to be used properly with a list model, the model must provide an implementation of &lt;a href=&quot;qabstractitemmodel#removeRows&quot;&gt;QAbstractItemModel::removeRows&lt;/a&gt;(), either directly or by inheriting the implementation from its base class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb92122141046e9e05af16b460e129015d7cb501" translate="yes" xml:space="preserve">
          <source>Although backslash is a special character in INI files, most Windows applications don't escape backslashes (&lt;code&gt;\&lt;/code&gt;) in file paths:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6037938ed96c0c9d71c3355201e9b1b781eb8ec" translate="yes" xml:space="preserve">
          <source>Although command compression and macros appear to have the same effect to the user, they often have different uses in an application. Commands that perform small changes to a document may be usefully compressed if there is no need to individually record them, and if only larger changes are relevant to the user. However, for commands that need to be recorded individually, or those that cannot be compressed, it is useful to use macros to provide a more convenient user experience while maintaining a record of each command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74e686245896d7cc497bfb8beac612cdc2530351" translate="yes" xml:space="preserve">
          <source>Although const, this function sets &lt;a href=&quot;qregexp#matchedLength&quot;&gt;matchedLength&lt;/a&gt;(), &lt;a href=&quot;qregexp#capturedTexts&quot;&gt;capturedTexts&lt;/a&gt;() and &lt;a href=&quot;qregexp#pos&quot;&gt;pos&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="098816e4f657a78f9ac0e35689a36c35c28185f2" translate="yes" xml:space="preserve">
          <source>Although const, this function sets &lt;a href=&quot;qregexp#matchedLength&quot;&gt;matchedLength&lt;/a&gt;(), &lt;a href=&quot;qregexp#capturedTexts&quot;&gt;capturedTexts&lt;/a&gt;(), and &lt;a href=&quot;qregexp#pos&quot;&gt;pos&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a78a2d268bf00e8ff4cebd22124ae566fff345f" translate="yes" xml:space="preserve">
          <source>Although dock widgets can be added to any type of form, they are typically used with forms created from the &lt;a href=&quot;designer-creating-mainwindows#&quot;&gt;main window template&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87c3194014dc4941227c367c41a8070f6bbb3b75" translate="yes" xml:space="preserve">
          <source>Although it is convenient that the view classes provide their own selection models by default, when we use more than one view onto the same model it is often desirable that both the model's data and the user's selection are shown consistently in all views. Since the view classes allow their internal selection models to be replaced, we can achieve a unified selection between views with the following line:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a23caf9a33e7ec52625277ac64d6de41928d115" translate="yes" xml:space="preserve">
          <source>Although it is easy to implement a custom slot in the dialog and connect it in the constructor, we could instead use &lt;a href=&quot;qmetaobject&quot;&gt;QMetaObject&lt;/a&gt;'s auto-connection facilities to connect the &lt;b&gt;OK&lt;/b&gt; button's clicked() signal to a slot in our subclass. &lt;code&gt;uic&lt;/code&gt; automatically generates code in the dialog's &lt;code&gt;setupUi()&lt;/code&gt; function to do this, so we only need to declare and implement a slot with a name that follows a standard convention:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="335f92283583cdd2fcc6e1780f3b4e580284b1b0" translate="yes" xml:space="preserve">
          <source>Although it seems appropriate to perform sorting and filtering operations as internal functions of views, this approach does not allow multiple views to share the results of such potentially costly operations. The alternative approach, involving sorting within the model itself, leads to the similar problem where each view has to display items of data that are organized according to the most recent processing operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="809a71ff393c21e20ce85f960cdfd1aa54a26856" translate="yes" xml:space="preserve">
          <source>Although keys from all four locations are available for reading, only the first file (the user-specific location for the application at hand) is accessible for writing. To write to any of the other files, omit the application name and/or specify &lt;a href=&quot;qsettings#Scope-enum&quot;&gt;QSettings::SystemScope&lt;/a&gt; (as opposed to &lt;a href=&quot;qsettings#Scope-enum&quot;&gt;QSettings::UserScope&lt;/a&gt;, the default).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4b2c4f121fe365e03d030f8812f028c7a3a9854" translate="yes" xml:space="preserve">
          <source>Although models and views should respond to these hints in appropriate ways, custom components may ignore any or all of them if they are not relevant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5f2f4be5b5d0e6bd5994f6c6495d424ecd87a85" translate="yes" xml:space="preserve">
          <source>Although most of its functions work asynchronously, it's possible to use &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt; synchronously (i.e., blocking). To get blocking behavior, call &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;'s waitFor...() functions; these suspend the calling thread until a signal has been emitted. For example, after calling the non-blocking &lt;a href=&quot;qabstractsocket#connectToHost&quot;&gt;QTcpSocket::connectToHost&lt;/a&gt;() function, call &lt;a href=&quot;qabstractsocket#waitForConnected&quot;&gt;QTcpSocket::waitForConnected&lt;/a&gt;() to block the thread until the &lt;a href=&quot;qabstractsocket#connected&quot;&gt;connected()&lt;/a&gt; signal has been emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="706a2a1f75903ef0054654a053e46b947b8e385a" translate="yes" xml:space="preserve">
          <source>Although only four indexes are supplied to the selection model, the use of the &lt;a href=&quot;qitemselectionmodel#SelectionFlag-enum&quot;&gt;Columns&lt;/a&gt; and &lt;a href=&quot;qitemselectionmodel#SelectionFlag-enum&quot;&gt;Rows&lt;/a&gt; selection flags means that two columns and two rows are selected. The following image shows the result of these two selections:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e1f75daf255387aaee14e67dbe3f48d78ec6d5d" translate="yes" xml:space="preserve">
          <source>Although qdoc will use the encoding to read source and documentation files, limitations of C++ compilers may prevent you from using non-ASCII characters in source code comments. In cases like these, it is possible to write API documentation completely in documentation files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6ed7292879d6d01e683045c761ced86a1dcd6bf" translate="yes" xml:space="preserve">
          <source>Although shading is not supported by all styles, this function will still show the subwindow as shaded, regardless of whether support for shading is available. However, when used with styles without shading support, the user will be unable to return from shaded mode through the user interface (e.g., through a shade button in the title bar).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bba6d30b47b6fd9058a42b506d8f9b5bcd80391" translate="yes" xml:space="preserve">
          <source>Although some developers might resort to fully specifying all the modifiers they use on their keyboards to activate a shortcut, this will also result in unexpected behavior for users of different keyboard layouts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bce7f8daf650a956b898aab29b5f8859980f92e" translate="yes" xml:space="preserve">
          <source>Although some platforms may differ the socket must generally be connected to guarantee the return of a valid address. In particular, this is true when dealing with platforms that support multiple local Bluetooth adapters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="195caf5c017f91a63f595836e2b33ef58d257dd7" translate="yes" xml:space="preserve">
          <source>Although some platforms may differ the socket must generally be connected to guarantee the return of a valid name. In particular, this is true when dealing with platforms that support multiple local Bluetooth adapters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4212fef983062793bca123609b83e3636ee41724" translate="yes" xml:space="preserve">
          <source>Although the &lt;a href=&quot;qbytearray#size&quot;&gt;size&lt;/a&gt;() is 5, the byte array also maintains an extra '\0' character at the end so that if a function is used that asks for a pointer to the underlying data (e.g. a call to &lt;a href=&quot;qbytearray#data&quot;&gt;data&lt;/a&gt;()), the data pointed to is guaranteed to be '\0'-terminated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ccbcb3af0dc8002f774f46d0ec67c27db4a460f" translate="yes" xml:space="preserve">
          <source>Although the C++ classes provide complete feature sets to operate on SQL data, they do not provide data access to QML. So you must implement a C++ custom data model as a subclass of one of these classes, and expose it to QML either as a type or context property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b03b5594afa35b4a2bbaa8a1c663c19153850f11" translate="yes" xml:space="preserve">
          <source>Although the Canvas item provides an HTML5-like API, HTML5 canvas applications need to be modified to run in the Canvas item:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c087170cf7fb650bc48c949da42f871fe9f641c" translate="yes" xml:space="preserve">
          <source>Although the XQuery language was designed for querying XML, with Qt XML Patterns one can use XQuery for querying any data that can be modeled to look like XML. Non-XML data is modeled to look like XML by loading it into a custom subclass of &lt;a href=&quot;qabstractxmlnodemodel&quot;&gt;QAbstractXmlNodeModel&lt;/a&gt;, where it is then presented to the Qt XML Patterns XQuery engine via the same API the XQuery engine uses for querying XML.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="693fd6d0532b4180ad525d96c75df7e48fa7bb16" translate="yes" xml:space="preserve">
          <source>Although the current picture formats supported by Qt ignore the parameters string, it may be used in future extensions or by contributions (for example, JPEG).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d19750ef65dbc5f67fb8328a876af3ae9bb703c" translate="yes" xml:space="preserve">
          <source>Although the declaration in the previous section makes the type available for use in direct signal-slot connections, it cannot be used for queued signal-slot connections, such as those that are made between objects in different threads. This is because the meta-object system does not know how to handle creation and destruction of objects of the custom type at run-time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fae03c096f3ddb6073886279214b23c22fa37bd2" translate="yes" xml:space="preserve">
          <source>Although the declaration order of the FrameGraph is important, Qt 3D is able to process each RenderView in parallel as each RenderView is independent of the others for the purposes of generating a set of RenderCommands to be submitted whilst the RenderView's state is in effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4985ea823cd2ec3920efdbbaa0f21156f529264" translate="yes" xml:space="preserve">
          <source>Although the example uses &lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt; to produce the sequence of callbacks to functions in &lt;a href=&quot;qabstractxmlreceiver&quot;&gt;QAbstractXmlReceiver&lt;/a&gt;, you can call the callback functions directly as long as your sequence of calls represents a valid &lt;a href=&quot;qabstractxmlreceiver#xquery-sequence&quot;&gt;XQuery sequence&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3519414ebf22e871393c22897164fa940200ea22" translate="yes" xml:space="preserve">
          <source>Although the item's shape can be arbitrary, the bounding rect is always rectangular, and it is unaffected by the items' transformation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b625ed09ac9b86c1781030549ee77fb8e5f55929" translate="yes" xml:space="preserve">
          <source>Although the previous example would work, it is not optimal. Real world incubation controllers should try and maximize the amount of idle time they consume - rather than a static amount like 5 milliseconds - while not disturbing the application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fa00925f42ed659a7ea346292c00bcdc24e2042" translate="yes" xml:space="preserve">
          <source>Although the second name has the prefix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ca3311aa78f9bb13ba363d3ebc17b088a93eac7" translate="yes" xml:space="preserve">
          <source>Although the user may take some time to complete the dragging operation, as far as the application is concerned the exec() function is a blocking function that returns with &lt;a href=&quot;qt#DropAction-enum&quot;&gt;one of several values&lt;/a&gt;. These indicate how the operation ended, and are described in more detail below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="207dcae7a61a09d0654dbb1b1109559c39aa3ce3" translate="yes" xml:space="preserve">
          <source>Although these functions are very convenient, it can be more efficient to build a &lt;a href=&quot;qmatrix&quot;&gt;QMatrix&lt;/a&gt; and call &lt;a href=&quot;https://doc.qt.io/qt-5.13/qpainter-obsolete.html#setMatrix&quot;&gt;QPainter::setMatrix&lt;/a&gt;() if you want to perform more than a single transform operation. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a56eadb45bc0d262599b7f6649ced30c4d8f505c" translate="yes" xml:space="preserve">
          <source>Although these functions are very convenient, it can be more efficient to build a &lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt; and call &lt;a href=&quot;qpainter#setTransform&quot;&gt;QPainter::setTransform&lt;/a&gt;() if you want to perform more than a single transform operation. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3c21f08ef5ff7d7c971a71591e2de37fd72ecb2" translate="yes" xml:space="preserve">
          <source>Although they sound similar, they have different purposes. Consider the example below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f40ae6b5396c2df7ba05bc8cd19bd267166ff33" translate="yes" xml:space="preserve">
          <source>Although we do not need to handle the conversion between logical and physical coordinates ourselves, we still need to apply transformations to painting operations because the pixel measurements used to draw on screen are often too small for the higher resolutions of typical printers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0194c305e527a397a43dfc5063dcc552cbcf7de3" translate="yes" xml:space="preserve">
          <source>Altimeter (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac4df62f1941b395724183b678112311fddd9558" translate="yes" xml:space="preserve">
          <source>Altimeter QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cb1a1ce4fee83103ccdf8a101a08507f2419324" translate="yes" xml:space="preserve">
          <source>AltimeterReading (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84735604d9a0667042153fa744c4796438803c6a" translate="yes" xml:space="preserve">
          <source>AltimeterReading QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f00c1cbc854d22aafd25ca2d90a4f6877d3ffd51" translate="yes" xml:space="preserve">
          <source>AltimeterReading.altitude</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74b849101080f30b3ee13e1b3683df599cfa0d40" translate="yes" xml:space="preserve">
          <source>Always dither images when converting to smaller color-spaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9674d90cbb9ee2ff09a5249ebeaecced4686ed18" translate="yes" xml:space="preserve">
          <source>Always pass alpha test</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dc300a8198f7df0524b44f951607ab605c148ea" translate="yes" xml:space="preserve">
          <source>Always pass depth test</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="364fdce92ec66b6c1f5f4ab043db24c2a3add013" translate="yes" xml:space="preserve">
          <source>Always pass stencil test</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="409f3b2e00ceaf1c21fd32652c2cadea51382e02" translate="yes" xml:space="preserve">
          <source>Always put the decimal separator in numbers, even if there are no decimals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9540efeefaa6f3f6fcce6713e7ea96a4a41cb7c4" translate="yes" xml:space="preserve">
          <source>Always put the sign in numbers, even for positive numbers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9e9001304c7d756196476301ff8254af7e9cf58" translate="yes" xml:space="preserve">
          <source>Always refer to the same key using the same case. For example, if you refer to a key as &quot;text fonts&quot; in one place in your code, don't refer to it as &quot;Text Fonts&quot; somewhere else.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ee288e27729090b3ee3717de3c86e51bab7f065" translate="yes" xml:space="preserve">
          <source>Always returns &lt;code&gt;true&lt;/code&gt;. The serial port is a sequential device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="415cc1135e13fa3848983c866cd4833bbdcf70d6" translate="yes" xml:space="preserve">
          <source>Always returns a default constructed &lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; instance, regardless of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="554ea886f9d069fc8ebea433a91a9012a0e8645b" translate="yes" xml:space="preserve">
          <source>Always returns an empty &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;. This signals that no namespace bindings are in scope for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b72117e88c42cf575f76fa5305b270e317622b5" translate="yes" xml:space="preserve">
          <source>Always returns an empty vector, regardless of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="113fc209e202a975cf4ded0a77e12fa9c7bd4ff4" translate="yes" xml:space="preserve">
          <source>Always succeeds, and displays &lt;code&gt;string&lt;/code&gt; as a general message to the user. Unlike the &lt;code&gt;error()&lt;/code&gt; function, this function allows processing to continue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d79321d54bb3e427c888719ec9901b7d0a6eee3" translate="yes" xml:space="preserve">
          <source>Always succeeds, and displays &lt;code&gt;string&lt;/code&gt; as a warning message to the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb5a5a434c6df53c15e0e51708fd8e4f3aedb0ce" translate="yes" xml:space="preserve">
          <source>Always use the default directory icon. Some platforms allow the user to set a different icon. Custom icon lookup cause a big performance impact over network or removable drives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b7b5e0ca9483ed190398f4660aeab4eaee209fb" translate="yes" xml:space="preserve">
          <source>Always use the default directory icon. Some platforms allow the user to set a different icon. Custom icon lookup cause a big performance impact over network or removable drives. Setting this will enable the &lt;a href=&quot;qfileiconprovider#Option-enum&quot;&gt;QFileIconProvider::DontUseCustomDirectoryIcons&lt;/a&gt; option in the icon provider. This enum value was added in Qt 5.2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a9f0a3ab5c049c9fb8ee0b82d960d956f75292f" translate="yes" xml:space="preserve">
          <source>Always use the qreal versions of the &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; drawing API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d62c194a0af6ec0621ecea19aea45c82ed6c24c9" translate="yes" xml:space="preserve">
          <source>Ambient Light Sensor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85f6a58d1ac19dcd7bb7c0bd39e3f83bac0c79f9" translate="yes" xml:space="preserve">
          <source>Ambient is the color that is emitted by an object without any other light source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71d070c83fd83994a0865c8dd80439e3973053d2" translate="yes" xml:space="preserve">
          <source>AmbientLightReading (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6f549443c0b6b4e5ff90105fb6e80c4cd68c446" translate="yes" xml:space="preserve">
          <source>AmbientLightReading QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2701c37917298ce69b08ae6804b91f05eefce9e9" translate="yes" xml:space="preserve">
          <source>AmbientLightReading.lightLevel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc4ab1f8338c872d2b21ebc43845c1e4b57a7bcb" translate="yes" xml:space="preserve">
          <source>AmbientLightSensor (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03d5232aa7a9c1d0a79a344a28076704bb92aa4a" translate="yes" xml:space="preserve">
          <source>AmbientLightSensor QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69070ef05a38d6fbd8eca133faabd1c08d275756" translate="yes" xml:space="preserve">
          <source>AmbientTemperatureReading (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="885f52d21d6806f46578f896aba78e346864ea51" translate="yes" xml:space="preserve">
          <source>AmbientTemperatureReading QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47cc58f1fadb287fd2ee1896f246f12e634cbaf8" translate="yes" xml:space="preserve">
          <source>AmbientTemperatureReading.temperature</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99cb9f0d205fb7602f1746cd2b297954a41f1526" translate="yes" xml:space="preserve">
          <source>AmbientTemperatureSensor (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d57823412ff87067626ee8b533b883e22d3137e" translate="yes" xml:space="preserve">
          <source>AmbientTemperatureSensor QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21fd91d45b905cc176d7819381a1f9b6fdcb2a94" translate="yes" xml:space="preserve">
          <source>Among other things, this means its collation order is based on the ASCII values of letters, so that (for case-sensitive sorting) all upper-case letters sort before any lower-case one (rather than each letter's upper- and lower-case forms sorting adjacent to one another, before the next letter's two forms).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c352b29c227ac52e343090da70453576b12eea4" translate="yes" xml:space="preserve">
          <source>Among the significant properties of group boxes are &lt;code&gt;title&lt;/code&gt;, &lt;code&gt;flat&lt;/code&gt;, &lt;code&gt;checkable&lt;/code&gt;, and &lt;code&gt;checked&lt;/code&gt;. These are demonstrated in the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-widgets-groupbox-example.html&quot;&gt;Group Box&lt;/a&gt; example, and described in the &lt;a href=&quot;qgroupbox&quot;&gt;QGroupBox&lt;/a&gt; class documentation. Each group box can contain its own layout, and this is necessary if it contains other widgets. To add a layout to the group box, click inside it and apply the layout as usual.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0289e8557c3be205466aeb0ea8573f6e6b8ce83" translate="yes" xml:space="preserve">
          <source>Amort. O(1)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9868bcca89e7345ccd3ac57be5bf0e4adb828385" translate="yes" xml:space="preserve">
          <source>Amount of denoising applied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db9932c13e1199107109162f56044e04529d4551" translate="yes" xml:space="preserve">
          <source>Amount of sharpening applied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cc09cad87a527cbdeefb78153bcd378c7c7c058" translate="yes" xml:space="preserve">
          <source>Amount of time in milliseconds the media will play.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62f3406b3f3d4442165a9cc339e7f22effbdb839" translate="yes" xml:space="preserve">
          <source>Amount of whitespace between dock widget's title bar button labels and the frame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb42f67a629e59dbd0e4e95f3bc4f238d8282f41" translate="yes" xml:space="preserve">
          <source>Amount of whitespace between push button labels and the frame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99690d58d4abd10cd0938a7adcb56ded08ef66ad" translate="yes" xml:space="preserve">
          <source>An</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d355d2d89ec6dd113134c3da3e5173346ad4651" translate="yes" xml:space="preserve">
          <source>An &quot;Abort&quot; button defined with the &lt;a href=&quot;qdialogbuttonbox#ButtonRole-enum&quot;&gt;RejectRole&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b02da82411a3332cfcb07eb4ded46eaa711eded1" translate="yes" xml:space="preserve">
          <source>An &quot;Abort&quot; button defined with the &lt;a href=&quot;qmessagebox#ButtonRole-enum&quot;&gt;RejectRole&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1ef86f821838992127c8fd2b087f89d3e97d8eb" translate="yes" xml:space="preserve">
          <source>An &quot;Abort&quot; button defined with the &lt;code&gt;RejectRole&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96527528acaee4f934606f048914c35fad2a09b1" translate="yes" xml:space="preserve">
          <source>An &quot;Apply&quot; button defined with the &lt;a href=&quot;qdialogbuttonbox#ButtonRole-enum&quot;&gt;ApplyRole&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c75cca671ab9b63c92556bab44e289534ce80c58" translate="yes" xml:space="preserve">
          <source>An &quot;Apply&quot; button defined with the &lt;a href=&quot;qmessagebox#ButtonRole-enum&quot;&gt;ApplyRole&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2917ffeff54d5d092cdc743f385ac7f7ab2f9675" translate="yes" xml:space="preserve">
          <source>An &quot;Apply&quot; button defined with the &lt;code&gt;ApplyRole&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72f08d4335af5bf5a95098f5979c4072c601507b" translate="yes" xml:space="preserve">
          <source>An &quot;Ignore&quot; button defined with the &lt;a href=&quot;qdialogbuttonbox#ButtonRole-enum&quot;&gt;AcceptRole&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27cc1e166eda6a4e6535dcb22b221c442ee421f5" translate="yes" xml:space="preserve">
          <source>An &quot;Ignore&quot; button defined with the &lt;a href=&quot;qmessagebox#ButtonRole-enum&quot;&gt;AcceptRole&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b98609eb162bba4fe21541585cc2155b052884a" translate="yes" xml:space="preserve">
          <source>An &quot;Ignore&quot; button defined with the &lt;code&gt;AcceptRole&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cc7d213c07ff8655e47c381b8f3efcc50c8d7c5" translate="yes" xml:space="preserve">
          <source>An &quot;OK&quot; button defined with the &lt;a href=&quot;qdialogbuttonbox#ButtonRole-enum&quot;&gt;AcceptRole&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0b4526798eaeaaaab8123f81a9efd558c032940" translate="yes" xml:space="preserve">
          <source>An &quot;OK&quot; button defined with the &lt;a href=&quot;qmessagebox#ButtonRole-enum&quot;&gt;AcceptRole&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37a18cc443a1c603cd0604df35f778e7dc6a7d95" translate="yes" xml:space="preserve">
          <source>An &quot;OK&quot; button defined with the &lt;code&gt;AcceptRole&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50c5d7f92ec59aa403036e2b97184ed0b94a0b41" translate="yes" xml:space="preserve">
          <source>An &quot;Open&quot; button defined with the &lt;a href=&quot;qdialogbuttonbox#ButtonRole-enum&quot;&gt;AcceptRole&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ea22bc97beb38223382d64b4c0a165786b59220" translate="yes" xml:space="preserve">
          <source>An &quot;Open&quot; button defined with the &lt;a href=&quot;qmessagebox#ButtonRole-enum&quot;&gt;AcceptRole&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb6a7f55d572b0186f0d898c42b7c4f38b637c66" translate="yes" xml:space="preserve">
          <source>An &quot;Open&quot; button defined with the &lt;code&gt;AcceptRole&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13e7f2ea87e8ef42acdb00e0a9149f394a194493" translate="yes" xml:space="preserve">
          <source>An &quot;other&quot; subresource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84c078c136c4ef30f89539e8422330655ca7886c" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;qabstractitemmodel#insertColumns&quot;&gt;insertColumns&lt;/a&gt;() implementation must call &lt;a href=&quot;qabstractitemmodel#beginInsertColumns&quot;&gt;beginInsertColumns&lt;/a&gt;()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f4f755206f5e1902fa7a146b1881d258da3f4a1" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;qabstractitemmodel#insertRows&quot;&gt;insertRows&lt;/a&gt;() implementation must call &lt;a href=&quot;qabstractitemmodel#beginInsertRows&quot;&gt;beginInsertRows&lt;/a&gt;()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7a42fb02359ec91c9dacc58c1d9810811970a23" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;qbuttongroup#exclusive-prop&quot;&gt;exclusive&lt;/a&gt; button group switches off all checkable (toggle) buttons except the one that has been clicked. By default, a button group is exclusive. The buttons in a button group are usually checkable &lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt;s, &lt;a href=&quot;qcheckbox&quot;&gt;QCheckBox&lt;/a&gt;es (normally for non-exclusive button groups), or &lt;a href=&quot;qradiobutton&quot;&gt;QRadioButton&lt;/a&gt;s. If you create an exclusive button group, you should ensure that one of the buttons in the group is initially checked; otherwise, the group will initially be in a state where no buttons are checked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="680268c051c2fecf959d61eb599077c7bfeffa0a" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;qgeopositioninfosource#updateTimeout&quot;&gt;updateTimeout&lt;/a&gt;() signal will be emitted if this &lt;a href=&quot;qgeopositioninfosource&quot;&gt;QGeoPositionInfoSource&lt;/a&gt; subclass determines that it will not be able to provide regular updates. This could happen if a satellite fix is lost or if a hardware error is detected. Position updates will recommence if the data becomes available later on. The &lt;a href=&quot;qgeopositioninfosource#updateTimeout&quot;&gt;updateTimeout&lt;/a&gt;() signal will not be emitted again until after the periodic updates resume.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01d00283f15b768b5f5d3622cee017c3aa00db0d" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;qml-qt3d-core-entityloader&quot;&gt;EntityLoader&lt;/a&gt; provides the facitily to load predefined set of entities from qml source file. &lt;a href=&quot;qml-qt3d-core-entityloader&quot;&gt;EntityLoader&lt;/a&gt; itself is an entity and the loaded entity tree is set as a child of the loader. The loaded entity tree root can be accessed with &lt;a href=&quot;qml-qt3d-core-entityloader#entity-prop&quot;&gt;EntityLoader::entity&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31c21032215fd103d878feddad24eaefc8e2eb2f" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;qml-qt3d-render-alphacoverage&quot;&gt;AlphaCoverage&lt;/a&gt; type enables alpha-to-coverage multisampling mode. When enabled, the fragment alpha value is used as a coverage for the sample and combined with fragment coverage value. &lt;a href=&quot;qml-qt3d-render-alphacoverage&quot;&gt;AlphaCoverage&lt;/a&gt; does nothing if multisampling is disabled. Alpha-to-coverage is most useful when order independent blending is required, for example when rendering leaves, grass and other rich vegetation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3742e14c2076228acd6ae4f098f52b79bc9025ae" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;qml-qtqml-models-objectmodel&quot;&gt;ObjectModel&lt;/a&gt; contains the visual items to be used in a view. When an &lt;a href=&quot;qml-qtqml-models-objectmodel&quot;&gt;ObjectModel&lt;/a&gt; is used in a view, the view does not require a delegate since the &lt;a href=&quot;qml-qtqml-models-objectmodel&quot;&gt;ObjectModel&lt;/a&gt; already contains the visual delegate (items).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a0792775de521d7a25b5482ec3d3325f282b638" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;qml-qtqml-string#arg-method&quot;&gt;arg()&lt;/a&gt; function is added to the &lt;a href=&quot;qml-qtqml-string&quot;&gt;String&lt;/a&gt; prototype.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1787fff0e1cad1a5b5dc65c7ad59aa2ebfb12d3a" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt; requests focus by setting the &lt;code&gt;focus&lt;/code&gt; property to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee336648836013551f4e0cefb895b99a7312b90a" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;qml-qtwebengine-authenticationdialogrequest&quot;&gt;AuthenticationDialogRequest&lt;/a&gt; is passed as an argument of the &lt;a href=&quot;qml-qtwebengine-webengineview#authenticationDialogRequested-signal&quot;&gt;WebEngineView::authenticationDialogRequested&lt;/a&gt; signal. It is generated when basic HTTP or proxy authentication is required. The type of authentication can be checked with the &lt;a href=&quot;qml-qtwebengine-authenticationdialogrequest#type-prop&quot;&gt;type&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18b349411d8699ae20b00ed8822197f55a38d427" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;qnearfieldtarget#ndefMessageRead&quot;&gt;ndefMessageRead&lt;/a&gt;() signal will be emitted for each NDEF message. The &lt;a href=&quot;qnearfieldtarget#requestCompleted&quot;&gt;requestCompleted&lt;/a&gt;() signal will be emitted was all NDEF messages have been read. The &lt;a href=&quot;qnearfieldtarget#error&quot;&gt;error&lt;/a&gt;() signal is emitted if an error occurs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab7ca2f8922606d27af640f20bc14dc8a81b55bf" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;qsharedmemory#attach&quot;&gt;attach&lt;/a&gt;() failed because a shared memory segment with the specified key could not be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b5d37ff57679830b3561725ea0889fee8f04924" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;qt3drender-qeffect&quot;&gt;QEffect&lt;/a&gt; instance should be shared among several &lt;a href=&quot;qt3drender-qmaterial&quot;&gt;QMaterial&lt;/a&gt; instances when possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edc4057c823458a452630b86bd7d06109e1af492" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;qtqml-javascript-qmlglobalobject#xmlhttprequest&quot;&gt;XMLHttpRequest&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e4f8ff46801c256388fc0137b0c0e29b9a299e1" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;qtqml-syntax-basics#object-declarations&quot;&gt;object declaration&lt;/a&gt; in a QML document defines a new type. It also declares an object hierarchy that will be instantiated should an instance of that newly defined type be created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="893fc70ea9d397355d9a11a3f36c558d1c338f20" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;qtqml-syntax-objectattributes#attached-properties-and-attached-signal-handlers&quot;&gt;attached signal handler&lt;/a&gt; receives a signal from an</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3d8cab592de860a0dbaeaa7a9fc3f1eaf28d140" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;qwindow#exposeEvent&quot;&gt;exposeEvent&lt;/a&gt;() is sent every time this value changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4ce5a7cdbbfd28ac50a3f10f8ab8545c25409cd" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="713d741277c2cd566c35d7e8db95edd140d56523" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt; expression can also be enclosed in curly braces and embedded in another &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt; expression. This &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt; has a document expression embedded in a node expression:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f941320398dd5036a69803d3ef8d097fb090f974" translate="yes" xml:space="preserve">
          <source>An &lt;b&gt;Abort&lt;/b&gt; button defined with the &lt;a href=&quot;qmessagebox#ButtonRole-enum&quot;&gt;RejectRole&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a92dea9de0a8e042edaa44aa58d15717ce43c033" translate="yes" xml:space="preserve">
          <source>An &lt;b&gt;Apply&lt;/b&gt; button defined with the &lt;a href=&quot;qmessagebox#ButtonRole-enum&quot;&gt;ApplyRole&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8ecbd48d1434ad373dc0eacb000a54b99e79124" translate="yes" xml:space="preserve">
          <source>An &lt;b&gt;Ignore&lt;/b&gt; button defined with the &lt;a href=&quot;qmessagebox#ButtonRole-enum&quot;&gt;AcceptRole&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c96b240bf6dc0c7f3bcfb4a67381822a35adcfca" translate="yes" xml:space="preserve">
          <source>An &lt;b&gt;OK&lt;/b&gt; button defined with the &lt;a href=&quot;qmessagebox#ButtonRole-enum&quot;&gt;AcceptRole&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b028d2b56a7de8fdf334454d05bdf9010ee4e76" translate="yes" xml:space="preserve">
          <source>An &lt;b&gt;Open&lt;/b&gt; button defined with the &lt;a href=&quot;qmessagebox#ButtonRole-enum&quot;&gt;AcceptRole&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95a6897feb41c341b2cf3e2ed574f603ca21404b" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;.aff&lt;/code&gt; file that defines the meaning of special flags in the dictionary</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3b834dc576abdfb54e036f6eea272b8e6eb3ef5" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Encrypt0&lt;/code&gt; map as specified by &lt;a href=&quot;https://tools.ietf.org/html/rfc8152&quot;&gt;RFC 8152&lt;/a&gt; (CBOR Object Signing and Encryption).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32709ad321fbab24da2659b6ffc4b344eb76232c" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Encrypt&lt;/code&gt; map as specified by &lt;a href=&quot;https://tools.ietf.org/html/rfc8152&quot;&gt;RFC 8152&lt;/a&gt; (CBOR Object Signing and Encryption).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2078e1556771456c95ce49def023aceae07b63bb" translate="yes" xml:space="preserve">
          <source>An ARGB quadruplet on the format #AARRGGBB, equivalent to an unsigned int.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85241382b424734e1ee719b85324e5c6de64ae91" translate="yes" xml:space="preserve">
          <source>An Address is used as a unit of data for queries such as (Reverse) Geocoding or Places searches -- many of these operations either accept an Address or return one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35b0f576be97fde3eca9f121d8da804736b8105d" translate="yes" xml:space="preserve">
          <source>An Alt key on the keyboard is pressed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="773232ebf88b40e4a4b1374cc66672862c0565dd" translate="yes" xml:space="preserve">
          <source>An Axis reports the current position of an axis on an input device. When the axis is returned to its neutral position the value of that axis returns to 0. Often, it is required to have the input from an axis control a variable in other ways, for example treating the value from the Axis as a velocity (first derivative with respect to time) or as an acceleration (second derivative with respect to time). This can be done with user code or with a &lt;a href=&quot;qml-qt3d-logic-frameaction&quot;&gt;FrameAction&lt;/a&gt; but those approached are not ideal as they add more work to the main thread and are inherently imperative. The &lt;a href=&quot;qml-qt3d-input-axisaccumulator&quot;&gt;AxisAccumulator&lt;/a&gt; class allows for this common task to be performed on the Qt 3D backend and be specified in a declarative manner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5535f27dba264d93b85ef9a856551f63ee6b5aad" translate="yes" xml:space="preserve">
          <source>An Effect instance should be shared among several Material instances when possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcd29613666219a97f2491f0610be4945ceed298" translate="yes" xml:space="preserve">
          <source>An Example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fd92418b18790d3984c9150e7b1411b62b3d82c" translate="yes" xml:space="preserve">
          <source>An Example Ditamap Page</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c29b72c61f239ced719fa7805aab06497450a6e7" translate="yes" xml:space="preserve">
          <source>An HTML document is loaded in a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85413f5ddb8d97dfb6c7f8135a9bc16a9ba69c30" translate="yes" xml:space="preserve">
          <source>An I/O error occurred when a resource becomes unavailable, e.g. when the device is unexpectedly removed from the system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab1b55066fc2884b559ba16b1828d8b17223acfd" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while reading the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d31be7d3d67cd21912d28e524fd4dea6cc253c4f" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while writing the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25611d6d88875f63266236225888c4a5da8d4023" translate="yes" xml:space="preserve">
          <source>An I/O error with the &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="526899559a686d9aeae34b8c946f44fdc0f9ff8b" translate="yes" xml:space="preserve">
          <source>An IO failure occurred during device discovery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91a22d013327bc7c867159d025afe96871982e2c" translate="yes" xml:space="preserve">
          <source>An IP address entry; the entry contains an IP address entry that the certificate is valid for, introduced in Qt 5.13.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1fd92b1476fae39abb8b927155183ac751690c5" translate="yes" xml:space="preserve">
          <source>An IP is considered to belong to a subnet if it is contained between the lowest and the highest address in that subnet. In the case of IP version 4, the lowest address is the network address, while the highest address is the broadcast address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="672429c323676f7a1e476a849b31b9764ba9387a" translate="yes" xml:space="preserve">
          <source>An IPv4 link-local address is an address in the network 169.254.0.0/16. An IPv6 link-local address is one in the network fe80::/10. See the &lt;a href=&quot;https://www.iana.org/assignments/ipv6-address-space/ipv6-address-space.xhtml&quot;&gt;IANA IPv6 Address Space&lt;/a&gt; registry for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4141e1a54b1c15d3a66d3eba8397996972605dc4" translate="yes" xml:space="preserve">
          <source>An IPv6 site-local address is one in the network fec0::/10. See the &lt;a href=&quot;https://www.iana.org/assignments/ipv6-address-space/ipv6-address-space.xhtml&quot;&gt;IANA IPv6 Address Space&lt;/a&gt; registry for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1e5eafc5df5a57d8cfa7d11dce1fcacde96d05f" translate="yes" xml:space="preserve">
          <source>An IPv6 unique local unicast address is one in the network fc00::/7. See the &lt;a href=&quot;https://www.iana.org/assignments/ipv6-address-space/ipv6-address-space.xhtml&quot;&gt;IANA IPv6 Address Space&lt;/a&gt; registry for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b16e6d4b608923f8305e2ee561b626ed98c986b1" translate="yes" xml:space="preserve">
          <source>An Introduction to Database Systems</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="241fbc175d8e4e92f514f703141326951d1f6e36" translate="yes" xml:space="preserve">
          <source>An Introduction to Namespaces</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00e8225928b1d93b0af2536d09648c624ea1e4c1" translate="yes" xml:space="preserve">
          <source>An Item for which the application does not have a reference can be found by calling &lt;a href=&quot;qml-qtquick-controls2-stackview#find-method&quot;&gt;find()&lt;/a&gt;. The method needs a callback function, which is invoked for each item in the stack (starting at the top) until a match is found. If the callback returns &lt;code&gt;true&lt;/code&gt;, &lt;a href=&quot;qml-qtquick-controls2-stackview#find-method&quot;&gt;find()&lt;/a&gt; stops and returns the matching item, otherwise &lt;code&gt;null&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c36bce291adb4ba9f7bcaa4ada6615d3b323c03" translate="yes" xml:space="preserve">
          <source>An Item will normally be rendered directly into the window it belongs to. However, by setting &lt;a href=&quot;qml-qtquick-item#layer.enabled-prop&quot;&gt;layer.enabled&lt;/a&gt;, it is possible to delegate the item and its entire subtree into an offscreen surface. Only the offscreen surface, a texture, will be then drawn into the window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f87e8880e8c668330f233a3691ae70fffab5ca1" translate="yes" xml:space="preserve">
          <source>An NFC tag type 1 target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="108eb2dd69af55eeddae43159c1939e707374e4f" translate="yes" xml:space="preserve">
          <source>An NFC tag type 2 target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83a849dea3fc166195fbab28f7476cbe34293cc7" translate="yes" xml:space="preserve">
          <source>An NFC tag type 3 target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="782d2d51e5280e52f88d86b1acce93eb1da39b5e" translate="yes" xml:space="preserve">
          <source>An NFC tag type 4 target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e0919de4439a06d07951baec09d20e9ec29bb1f" translate="yes" xml:space="preserve">
          <source>An Object of this class provides a characteristic to be added to a &lt;a href=&quot;qlowenergyservicedata&quot;&gt;QLowEnergyServiceData&lt;/a&gt; object via &lt;a href=&quot;qlowenergyservicedata#addCharacteristic&quot;&gt;QLowEnergyServiceData::addCharacteristic&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a6f5178fd9f3cef54c5c06035aa3a130df80dd8" translate="yes" xml:space="preserve">
          <source>An Object of this class provides a service to be added to a GATT server via &lt;a href=&quot;qlowenergycontroller#addService&quot;&gt;QLowEnergyController::addService&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05fda20e0fae9b4072bf48a22c8c8b7efcd3e069" translate="yes" xml:space="preserve">
          <source>An SQL &lt;code&gt;DELETE&lt;/code&gt; statement (e.g., &lt;code&gt;DELETE FROM t&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e2b172b1f478d3b9894026b083e72946644ee81" translate="yes" xml:space="preserve">
          <source>An SQL &lt;code&gt;INSERT&lt;/code&gt; statement (e.g., &lt;code&gt;INSERT INTO t (f) values (1)&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfd129d206e7ce6b7268556cb1391881424c566d" translate="yes" xml:space="preserve">
          <source>An SQL &lt;code&gt;SELECT&lt;/code&gt; statement (e.g., &lt;code&gt;SELECT f FROM t&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bfba477b57a621077e980eb09e6eb605cb0da30" translate="yes" xml:space="preserve">
          <source>An SQL &lt;code&gt;UPDATE&lt;/code&gt; statement (e.g., &lt;code&gt;UPDATE TABLE t set f = 1&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7b3ad81f40cc10f692ef72f4a58bd55175abae2" translate="yes" xml:space="preserve">
          <source>An SQL &lt;code&gt;WHERE&lt;/code&gt; statement (e.g., &lt;code&gt;WHERE f = 5&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fb2e2bc10a48c3c73d54c8c092eb83fae483770" translate="yes" xml:space="preserve">
          <source>An XHTML document which is the actual message. It is translated into the current language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd02e39b32736b24c3f9b9f94e31888506546dea" translate="yes" xml:space="preserve">
          <source>An XML file that contains references to the compressed help files that should be included in the help collection. In addition, it may contain information for customizing Qt Assistant. This file can be passed to the help generator for creating a help collection file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ca323742a8de75aff3cad7cb55c3d3b9ac91bb5" translate="yes" xml:space="preserve">
          <source>An XY legend marker is related to &lt;a href=&quot;qxyseries&quot;&gt;QXYSeries&lt;/a&gt; derived classes: &lt;a href=&quot;qlineseries&quot;&gt;QLineSeries&lt;/a&gt;, &lt;a href=&quot;qsplineseries&quot;&gt;QSplineSeries&lt;/a&gt;, and &lt;a href=&quot;qscatterseries&quot;&gt;QScatterSeries&lt;/a&gt;. Each marker is related to one series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="472869adb40027fced89e9f9f6065ed6d345c016" translate="yes" xml:space="preserve">
          <source>An absolute XPath query representing the base query for creating model items from this model's &lt;a href=&quot;qml-qtquick-xmllistmodel-xmlrole&quot;&gt;XmlRole&lt;/a&gt; objects. The query should start with '/' or '//'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98628520d960cf9ff3590470522a84020b768214" translate="yes" xml:space="preserve">
          <source>An abstract base class for Qt3D animations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="725d324e7f6a8bf6de32132c75cf29338f3fbc02" translate="yes" xml:space="preserve">
          <source>An abstract base class for Qt3D animations. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="197a3bb195018ee047bcafefb7b267a3893f9969" translate="yes" xml:space="preserve">
          <source>An abstract base class for Qt3D animations. &lt;a href=&quot;qt3danimation-qabstractanimation#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaf887c3354d43aefc471dbfb959e73522d219cc" translate="yes" xml:space="preserve">
          <source>An abstract base class for all render states</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="777adcb26d35956ba220cb45d5f1cb23db56fbe8" translate="yes" xml:space="preserve">
          <source>An abstract base class for all render states. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9320d810ff4bf74f2ba19fee7d69622f56b12d02" translate="yes" xml:space="preserve">
          <source>An abstract base class for all render states. &lt;a href=&quot;qt3drender-qrenderstate#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da4a894c086f73e0f3959e2795a8559a6b7a9c25" translate="yes" xml:space="preserve">
          <source>An abstract base class for ray casting in 3d scenes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c15d5394643d1c3bf4e09bde87bebd981b04d90f" translate="yes" xml:space="preserve">
          <source>An abstract base class for ray casting in 3d scenes. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6afbbe6133d23773f605c2a0fa5af9021c3945e" translate="yes" xml:space="preserve">
          <source>An abstract base class for ray casting in 3d scenes. &lt;a href=&quot;qt3drender-qabstractraycaster#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8a5de37d0c53201f29b2dd93599f25e699569d8" translate="yes" xml:space="preserve">
          <source>An abstract base type for Qt3D animations. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e116ca1be79b7d0d3deaa55e831a61e1f9fabc49" translate="yes" xml:space="preserve">
          <source>An abstract base type for all render states. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="138d935011f481f77979dffaafe7d9f7bec76223" translate="yes" xml:space="preserve">
          <source>An abstract parent type for all bar series types. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ce62117e28e35c5e669e92f4a3434dfa97b26ad" translate="yes" xml:space="preserve">
          <source>An access error occurred (e.g. trying to write to a read-only file).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b12873c2e20a1af8f5b63c61e33103e45916e80" translate="yes" xml:space="preserve">
          <source>An accessible object's &lt;a href=&quot;qaccessible#Text-enum&quot;&gt;QAccessible::Description&lt;/a&gt; provides textual information about an object's visual appearance. The description is primarily used to provide greater context for vision-impaired users, but is also used for context searching or other applications. Not all objects have a description. An &quot;OK&quot; button would not need a description, but a tool button that shows a picture of a smiley would.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e55a3b504e5d9a6fa6c5d9852ba9a90f27e38326" translate="yes" xml:space="preserve">
          <source>An action can be bound to a menu item and a toolbar button, and it will automatically keep them in sync. For example, in a word processor, if the user presses a Bold toolbar button, the Bold menu item will automatically be checked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8320b821624ac687e1b95dcdfd3d6c9e47fe1d6" translate="yes" xml:space="preserve">
          <source>An action has been changed (&lt;a href=&quot;qactionevent&quot;&gt;QActionEvent&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1070292389d710477f59e5c0298b7f45ba7d317" translate="yes" xml:space="preserve">
          <source>An action has been changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07828f33d80bb86e6585dbc7869f13d9d1da5819" translate="yes" xml:space="preserve">
          <source>An action has been removed (&lt;a href=&quot;qactionevent&quot;&gt;QActionEvent&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50578cb4d1997443cf5f55b6e43113df03bb56e8" translate="yes" xml:space="preserve">
          <source>An action that represents a &lt;a href=&quot;qml-qtwebengine-webengineview#WebAction-prop&quot;&gt;WebEngineView::WebAction&lt;/a&gt;. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ada287a3a61eba673759fdf718b9145d60defc4f" translate="yes" xml:space="preserve">
          <source>An action will be disabled when all widgets to which it is added (with &lt;a href=&quot;qwidget#addAction&quot;&gt;QWidget::addAction&lt;/a&gt;()) are disabled or not visible. When an action is disabled, it is not possible to trigger it through its shortcut.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bb9a375e693483d342559b0435c93b5d99a6ef1" translate="yes" xml:space="preserve">
          <source>An active monitor was started via &lt;a href=&quot;qgeoareamonitorsource#startMonitoring&quot;&gt;startMonitoring&lt;/a&gt;() and the source object will emit the required signals such as &lt;a href=&quot;qgeoareamonitorsource#areaEntered&quot;&gt;areaEntered&lt;/a&gt;() or &lt;a href=&quot;qgeoareamonitorsource#areaExited&quot;&gt;areaExited&lt;/a&gt;(). Multiple &lt;a href=&quot;qgeoareamonitorsource&quot;&gt;QGeoAreaMonitorSource&lt;/a&gt; instances within the same application share the same monitor objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fde9956cb8d93984c41a23c53deb43589f9ee7e3" translate="yes" xml:space="preserve">
          <source>An active monitor was started via &lt;a href=&quot;qgeoareamonitorsource#startMonitoring&quot;&gt;startMonitoring&lt;/a&gt;() the source object will emit the required signals such as &lt;a href=&quot;qgeoareamonitorsource#areaEntered&quot;&gt;areaEntered&lt;/a&gt;() or &lt;a href=&quot;qgeoareamonitorsource#areaExited&quot;&gt;areaExited&lt;/a&gt;(). Multiple &lt;a href=&quot;qgeoareamonitorsource&quot;&gt;QGeoAreaMonitorSource&lt;/a&gt; instances within the same application share the same active monitor objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04574181d82f93d6c2ad9b3b6f32e4877acd2777" translate="yes" xml:space="preserve">
          <source>An active window is a visible top-level window that has the keyboard input focus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f18d3a10b5213f4a97e63797f5f00ba634f4c42e" translate="yes" xml:space="preserve">
          <source>An added benefit of these three methods is that it's not necessary to implement the template from scratch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="298eb5c1236aef2bd46edfce9a660180c12548cb" translate="yes" xml:space="preserve">
          <source>An additional feature of the &lt;code&gt;domXml()&lt;/code&gt; function is that, if it returns an empty string, the widget will not be installed in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02de926884642866367acee40a6777438e3703ce" translate="yes" xml:space="preserve">
          <source>An affine matrix is a 4x4 matrix with row 3 equal to (0, 0, 0, 1), e.g. no projective coefficients.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="328b3ad462233296ffece216c6704bb9db8581ac" translate="yes" xml:space="preserve">
          <source>An airbrush</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63f6ec32ed396d828f9dad312673e791cbc82735" translate="yes" xml:space="preserve">
          <source>An alias for WiFi.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e422de3ae68424d4ce2593ab78e3bdaa405ecb37" translate="yes" xml:space="preserve">
          <source>An alias to ByteArray.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="220893ad6f76b6d5dbe9198f2c3f0069e0aeab83" translate="yes" xml:space="preserve">
          <source>An alias to Float16.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b83181f382d08143ead32e05b2d658c53ce748ae" translate="yes" xml:space="preserve">
          <source>An alias to String</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="149899c8183007aaca3213541ffea0caeb7e830c" translate="yes" xml:space="preserve">
          <source>An alpha to be applied to the image. This value is multiplied by the value in the image, and the value in the color property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ea4c959294c69eada086a18467f3d0d11064b6c" translate="yes" xml:space="preserve">
          <source>An alternate alphabet, called &quot;base64url&quot;, which replaces two characters in the alphabet to be more friendly to URLs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34ac94fcc3f890b5ed519d07c207f51167e4159b" translate="yes" xml:space="preserve">
          <source>An alternative approach is to add spacing using &lt;a href=&quot;qgridlayout#addItem&quot;&gt;addItem&lt;/a&gt;() with a &lt;a href=&quot;qspaceritem&quot;&gt;QSpacerItem&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68dee7e0d95f9364664c905afe36e2f6ef7bb528" translate="yes" xml:space="preserve">
          <source>An alternative approach is to use the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="544366121c4ed24a7bab37bd75cfa0fa9e1ec5ed" translate="yes" xml:space="preserve">
          <source>An alternative approach to sorting is to disable sorting on the view and to impose a certain order to the user. This is done by explicitly calling &lt;a href=&quot;qsortfilterproxymodel#sort&quot;&gt;sort&lt;/a&gt;() with the desired column and order as arguments on the &lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel&lt;/a&gt; (or on the original model if it implements &lt;a href=&quot;qsortfilterproxymodel#sort&quot;&gt;sort&lt;/a&gt;()). For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e77e782971ba4c029b258ccc1efc3b4a4059ba08" translate="yes" xml:space="preserve">
          <source>An alternative identifier which identifies the place from the perspective of the specified provider.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cde85e64cefc7e6fc3755ade7fa0fa555d34004" translate="yes" xml:space="preserve">
          <source>An alternative is to call &lt;a href=&quot;qdialog#modal-prop&quot;&gt;setModal&lt;/a&gt;(true) or &lt;a href=&quot;qwidget#windowModality-prop&quot;&gt;setWindowModality&lt;/a&gt;(), then &lt;a href=&quot;qwidget#show&quot;&gt;show&lt;/a&gt;(). Unlike &lt;a href=&quot;qdialog#exec&quot;&gt;exec&lt;/a&gt;(), &lt;a href=&quot;qwidget#show&quot;&gt;show&lt;/a&gt;() returns control to the caller immediately. Calling &lt;a href=&quot;qdialog#modal-prop&quot;&gt;setModal&lt;/a&gt;(true) is especially useful for progress dialogs, where the user must have the ability to interact with the dialog, e.g. to cancel a long running operation. If you use &lt;a href=&quot;qwidget#show&quot;&gt;show&lt;/a&gt;() and &lt;a href=&quot;qdialog#modal-prop&quot;&gt;setModal&lt;/a&gt;(true) together to perform a long operation, you must call &lt;a href=&quot;qcoreapplication#processEvents&quot;&gt;QApplication::processEvents&lt;/a&gt;() periodically during processing to enable the user to interact with the dialog. (See &lt;a href=&quot;qprogressdialog&quot;&gt;QProgressDialog&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f2ed550578681081c551aa46c2bf02c2872ddb3" translate="yes" xml:space="preserve">
          <source>An alternative is to use &lt;a href=&quot;qlatin1char&quot;&gt;QLatin1Char&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe59449fffee047bc144df40d5ea59f40e7f675d" translate="yes" xml:space="preserve">
          <source>An alternative method for constructing a &lt;a href=&quot;qlocale&quot;&gt;QLocale&lt;/a&gt; object is by specifying the locale name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e222f6c2cd8e3b971968c5be01a32db77cff5382" translate="yes" xml:space="preserve">
          <source>An alternative to Qt's &lt;code&gt;foreach&lt;/code&gt; loop is the range-based &lt;code&gt;for&lt;/code&gt; that is part of C++ 11 and newer. However, keep in mind that the range-based &lt;code&gt;for&lt;/code&gt; might force a Qt container to &lt;a href=&quot;implicit-sharing#&quot;&gt;detach&lt;/a&gt;, whereas &lt;code&gt;foreach&lt;/code&gt; would not. But using &lt;code&gt;foreach&lt;/code&gt; always copies the container, which is usually not cheap for STL containers. If in doubt, prefer &lt;code&gt;foreach&lt;/code&gt; for Qt containers, and range based &lt;code&gt;for&lt;/code&gt; for STL ones.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f41e44de785b74371efa43a77f4260c2c3ae1d05" translate="yes" xml:space="preserve">
          <source>An alternative to calling this function is to pass this widget to the layout's constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7af9da31b563f6a50234800bc6ab68ae07dee02b" translate="yes" xml:space="preserve">
          <source>An alternative to manual layout is to write your own layout manager by subclassing &lt;a href=&quot;qlayout&quot;&gt;QLayout&lt;/a&gt;. The &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-layouts-borderlayout-example.html#&quot;&gt;Border Layout&lt;/a&gt; and &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-layouts-flowlayout-example.html#&quot;&gt;Flow Layout&lt;/a&gt; examples show how to do this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a749763a0640301ed0fb83ee9865babcdd14e748" translate="yes" xml:space="preserve">
          <source>An alternative to reserve() is calling &lt;a href=&quot;qvector#resize&quot;&gt;resize&lt;/a&gt;(). Whether or not that is faster than reserve() depends on the element type, because &lt;a href=&quot;qvector#resize&quot;&gt;resize&lt;/a&gt;() default-constructs all elements, and requires assignment to existing entries rather than calling &lt;a href=&quot;qvector#append&quot;&gt;append&lt;/a&gt;(), which copy- or move-constructs. For simple types, like &lt;code&gt;int&lt;/code&gt; or &lt;code&gt;double&lt;/code&gt;, &lt;a href=&quot;qvector#resize&quot;&gt;resize&lt;/a&gt;() is typically faster, but for anything more complex, you should prefer reserve().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28c7487d190c339a6df6ddfd7494810a675e0b7d" translate="yes" xml:space="preserve">
          <source>An alternative to setting an application wide proxy is to specify the proxy for individual sockets using &lt;a href=&quot;qabstractsocket#setProxy&quot;&gt;QAbstractSocket::setProxy&lt;/a&gt;() and &lt;a href=&quot;qtcpserver#setProxy&quot;&gt;QTcpServer::setProxy&lt;/a&gt;(). In this way, it is possible to disable the use of a proxy for specific sockets using the following code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fff6ab5e2be4bc97645e75939d6ad643d610f391" translate="yes" xml:space="preserve">
          <source>An alternative to setting the DBus AT-SPI properties is to set the QT_LINUX_ACCESSIBILITY_ALWAYS_ON environment variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b3a7990cbf200360451c22b94b03657580c9d8d" translate="yes" xml:space="preserve">
          <source>An alternative to using &lt;a href=&quot;qtimer&quot;&gt;QTimer&lt;/a&gt; is to call &lt;a href=&quot;qobject#startTimer&quot;&gt;QObject::startTimer&lt;/a&gt;() for your object and reimplement the &lt;a href=&quot;qobject#timerEvent&quot;&gt;QObject::timerEvent&lt;/a&gt;() event handler in your class (which must inherit &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;). The disadvantage is that &lt;a href=&quot;qtimer#timerEvent&quot;&gt;timerEvent&lt;/a&gt;() does not support such high-level features as single-shot timers or signals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f2b2b53eead3c7afaba0a5d7bb78928056f511d" translate="yes" xml:space="preserve">
          <source>An alternative to using iterators is to use index positions. Most &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; member functions take an index as their first parameter, making it possible to access, insert, and remove items without using iterators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="addb35b329e9cdad45cd0a747e4b90f71ee62da7" translate="yes" xml:space="preserve">
          <source>An alternative to using iterators is to use index positions. Most &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; member functions take an index as their first parameter, making it possible to access, modify, and remove items without using iterators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77b347db4bedae4e238917d7c161cad8fec7d8b9" translate="yes" xml:space="preserve">
          <source>An alternative to using iterators is to use index positions. Most &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; member functions take an index as their first parameter, making it possible to access, insert, and remove items without using iterators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2439f811211113a22ffb83c8e69b1ad3ea57dca3" translate="yes" xml:space="preserve">
          <source>An alternative to using iterators is to use index positions. Some &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; member functions take an index as their first parameter, making it possible to access results without using iterators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e2e6f14e57176b662466cb97cdfbe352a07fd3c" translate="yes" xml:space="preserve">
          <source>An alternative way of configuring the default filter is via &lt;a href=&quot;qloggingcategory#setFilterRules&quot;&gt;setFilterRules&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aaa0f937c6df87d0d1ee8cb66eebde56e19608f" translate="yes" xml:space="preserve">
          <source>An alternative way to attach meta-data is to use the following syntax:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbe350d116e8ada0dc5f4a183a3feb610d7fb0fb" translate="yes" xml:space="preserve">
          <source>An alternative way to enter &quot;What's This?&quot; mode is to call &lt;a href=&quot;qwhatsthis#createAction&quot;&gt;createAction&lt;/a&gt;(), and add the returned &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; to either a menu or a tool bar. By invoking this context help action (in the picture below, the button with the arrow and question mark icon) the user switches into &quot;What's This?&quot; mode. If they now click on a widget the appropriate help text is shown. The mode is left when help is given or when the user presses Esc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6807e345b243c543a083605f3dee5989a259574c" translate="yes" xml:space="preserve">
          <source>An alternative way to specify hard-coded key codes is to use the Unicode code point of the character; for example, 'A' gives the same key sequence as &lt;a href=&quot;qt#Key-enum&quot;&gt;Qt::Key_A&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b009e440ce09b0efb0e7ce2915abbcd0ba69de6" translate="yes" xml:space="preserve">
          <source>An alternative would be to bypass the window manager entirely and create a window with the &lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt::X11BypassWindowManagerHint&lt;/a&gt; flag. This has other severe problems though, like totally broken keyboard focus and very strange effects on desktop changes or when the user raises other windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="411b8039bc3b3df8e558a7892915c0bbd0e74475" translate="yes" xml:space="preserve">
          <source>An amount consisting of up to 3 numbers before the decimal point, and 1 to 2 after the decimal point:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="333fc58da331895121f6102d0311442d8c30d3b2" translate="yes" xml:space="preserve">
          <source>An anchor of an element in the viewport for which the form validation message should be displayed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d037af561fd700f42cd5eb3661a2090473e4101" translate="yes" xml:space="preserve">
          <source>An angular axis, where the values are placed around the chart.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2c23474949a2bf2f0748fd542026d8152e7aeea" translate="yes" xml:space="preserve">
          <source>An animation can loop any number of times by setting the &lt;a href=&quot;qabstractanimation#loopCount-prop&quot;&gt;loopCount&lt;/a&gt; property. When an animation's current time reaches its &lt;a href=&quot;qabstractanimation#duration&quot;&gt;duration&lt;/a&gt;(), it will reset the current time and keep running. A loop count of 1 (the default value) means that the animation will run one time. Note that a duration of -1 means that the animation will run until stopped; the current time will increase indefinitely. When the current time equals &lt;a href=&quot;qabstractanimation#duration&quot;&gt;duration&lt;/a&gt;() and the animation is in its final loop, the &lt;a href=&quot;qabstractanimation#State-enum&quot;&gt;Stopped&lt;/a&gt; state is entered, and the &lt;a href=&quot;qabstractanimation#finished&quot;&gt;finished&lt;/a&gt;() signal is emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93af4743b154a1700637b663d99e42509c3dc74c" translate="yes" xml:space="preserve">
          <source>An animation group is a container for animations (subclasses of &lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation&lt;/a&gt;). A group is usually responsible for managing the &lt;a href=&quot;qabstractanimation#State-enum&quot;&gt;state&lt;/a&gt; of its animations, i.e., it decides when to start, stop, resume, and pause them. Currently, Qt provides two such groups: &lt;a href=&quot;qparallelanimationgroup&quot;&gt;QParallelAnimationGroup&lt;/a&gt; and &lt;a href=&quot;qsequentialanimationgroup&quot;&gt;QSequentialAnimationGroup&lt;/a&gt;. Look up their class descriptions for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="406e8db23f3056daa560e78ef360163a763b6b9a" translate="yes" xml:space="preserve">
          <source>An application can have only &lt;b&gt;one&lt;/b&gt; menu bar, but &lt;b&gt;several&lt;/b&gt; toolbars.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d5bc89be862ea45a7acd1f4ae61342f68703fe8" translate="yes" xml:space="preserve">
          <source>An application can load pages into the &lt;a href=&quot;qml-qtwebengine-webengineview&quot;&gt;WebEngineView&lt;/a&gt;, using either the &lt;a href=&quot;qml-qtwebengine-webengineview#url-prop&quot;&gt;url&lt;/a&gt; property or the &lt;a href=&quot;qml-qtwebengine-webengineview#loadHtml-method&quot;&gt;loadHtml&lt;/a&gt; method and navigate within the view's session history. The GET method is always used to load URLs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0104e5ec75e1fef59d2670b1d73e35613d1a28a" translate="yes" xml:space="preserve">
          <source>An application can use Jump Lists to provide users with faster access to files or to display shortcuts to tasks or commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9095ad4edc124512b65a112bda5457072127adeb" translate="yes" xml:space="preserve">
          <source>An application has an &lt;a href=&quot;qcoreapplication#applicationDirPath&quot;&gt;applicationDirPath&lt;/a&gt;() and an &lt;a href=&quot;qcoreapplication#applicationFilePath&quot;&gt;applicationFilePath&lt;/a&gt;(). Library paths (see &lt;a href=&quot;qlibrary&quot;&gt;QLibrary&lt;/a&gt;) can be retrieved with &lt;a href=&quot;qcoreapplication#libraryPaths&quot;&gt;libraryPaths&lt;/a&gt;() and manipulated by &lt;a href=&quot;qcoreapplication#setLibraryPaths&quot;&gt;setLibraryPaths&lt;/a&gt;(), &lt;a href=&quot;qcoreapplication#addLibraryPath&quot;&gt;addLibraryPath&lt;/a&gt;(), and &lt;a href=&quot;qcoreapplication#removeLibraryPath&quot;&gt;removeLibraryPath&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="844d2ab68aad7cece06433c28212175e038df3f3" translate="yes" xml:space="preserve">
          <source>An application manager would typically implement additional features such as application life cycle, virtual keyboard input, security, and Inter-Process Communication (IPC). Qt provides the APIs that can be used to develop the remaining parts of an application manager in other modules. The &lt;a href=&quot;https://www.qt.io/qt-automotive-suite/&quot;&gt;Qt Automotive Suite&lt;/a&gt; provides Qt Application Manager, which is a complete application manager that includes a compositor developed using Qt Wayland Compositor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c55bfece566c1574ef38c819b6dd404851f6d6c1" translate="yes" xml:space="preserve">
          <source>An application often has multiple undo stacks, one for each opened document. At the same time, an application usually has one undo action and one redo action, which triggers undo or redo in the active document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95b33de46c65604f741a09af5c371b9ca2e5e9c0" translate="yes" xml:space="preserve">
          <source>An application often has multiple undo stacks, one for each opened document. The active stack is the one associated with the currently active document. If the stack belongs to a &lt;a href=&quot;qundogroup&quot;&gt;QUndoGroup&lt;/a&gt;, calls to &lt;a href=&quot;qundogroup#undo&quot;&gt;QUndoGroup::undo&lt;/a&gt;() or &lt;a href=&quot;qundogroup#redo&quot;&gt;QUndoGroup::redo&lt;/a&gt;() will be forwarded to this stack when it is active. If the &lt;a href=&quot;qundogroup&quot;&gt;QUndoGroup&lt;/a&gt; is watched by a &lt;a href=&quot;qundoview&quot;&gt;QUndoView&lt;/a&gt;, the view will display the contents of this stack when it is active. If the stack does not belong to a &lt;a href=&quot;qundogroup&quot;&gt;QUndoGroup&lt;/a&gt;, making it active has no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22800bc02c77f2a034bc58ceb674527a1182fc95" translate="yes" xml:space="preserve">
          <source>An application on Windows can assume one of the following levels of &quot;DPI Awareness&quot;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2d83f8d084323569c7120740fef903fab1fe03f" translate="yes" xml:space="preserve">
          <source>An application will typically use &lt;a href=&quot;qoffscreensurface&quot;&gt;QOffscreenSurface&lt;/a&gt; to perform some time-consuming tasks in a separate thread in order to avoid stalling the main rendering thread. Resources created in the &lt;a href=&quot;qoffscreensurface&quot;&gt;QOffscreenSurface&lt;/a&gt;'s context can be shared with the main OpenGL context. Some common use cases are asynchronous texture uploads or rendering into a &lt;a href=&quot;qopenglframebufferobject&quot;&gt;QOpenGLFramebufferObject&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fa557c725b7141cca1da076d6c847977184fc49" translate="yes" xml:space="preserve">
          <source>An application will typically use &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; or &lt;a href=&quot;qquickview&quot;&gt;QQuickView&lt;/a&gt; for its UI, and not &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; directly. Still, it is possible to render directly to a &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; with &lt;a href=&quot;qbackingstore&quot;&gt;QBackingStore&lt;/a&gt; or &lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt;, when wanting to keep dependencies to a minimum or when wanting to use OpenGL directly. The &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtgui-rasterwindow-example.html#&quot;&gt;Raster Window Example&lt;/a&gt; and &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtgui-openglwindow-example.html#&quot;&gt;OpenGL Window Example&lt;/a&gt; are useful reference examples for how to render to a &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; using either approach.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf4294785feaf4a0d34ca5e84cd3419d53d7a9fa" translate="yes" xml:space="preserve">
          <source>An application written in QML uses memory from both the C++ heap and an automatically managed JavaScript heap. The application developer needs to be aware of the subtleties of each in order to maximise performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0bd48e35b229c8b0aee9f479288b38faf86db0b" translate="yes" xml:space="preserve">
          <source>An application written in QML will (most likely) require garbage collection to be performed at some stage. While garbage collection will be automatically triggered by the JavaScript engine when the amount of available free memory is low, it is occasionally better if the application developer makes decisions about when to invoke the garbage collector manually (although usually this is not the case).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71f952814762ed2d86ec77b40538eb3dbe72489c" translate="yes" xml:space="preserve">
          <source>An aqua filter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac279cbcf6ad018cdfe7880166dd3b31fa872f67" translate="yes" xml:space="preserve">
          <source>An arc is a section of circles or ellipses. Given the radius and the start and end points, there are two ellipses that connect the points. This property defines the rotation of the X axis of these ellipses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3fffbc7d36476d687c9603a52d82d05a4ca295e" translate="yes" xml:space="preserve">
          <source>An area chart.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5900d6486142c27545002757b4d6d48cd96a3ac6" translate="yes" xml:space="preserve">
          <source>An area legend marker is related to a &lt;a href=&quot;qareaseries&quot;&gt;QAreaSeries&lt;/a&gt; object, so that one area series results in one marker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc191ab16f6b2a68f59964e9dc73b5f3d4ed4132" translate="yes" xml:space="preserve">
          <source>An area series is used to show quantitative data. It is based on a line series, in the way that the area between the boundary lines is emphasized with color. Since the area series is based on the line series, the &lt;a href=&quot;qareaseries&quot;&gt;QAreaSeries&lt;/a&gt; constructor needs a &lt;a href=&quot;qlineseries&quot;&gt;QLineSeries&lt;/a&gt; instance, which defines the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6a77dfe4bd9cf669e9baf5ad12bf473bf84eee0" translate="yes" xml:space="preserve">
          <source>An area series is used to show quantitative data. It is based on a line series, in the way that the area between the boundary lines is emphasized with color. The &lt;a href=&quot;qml-qtcharts-lineseries&quot;&gt;LineSeries&lt;/a&gt; type defines the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edd107a85616b1d03e635766dbf545107f383119" translate="yes" xml:space="preserve">
          <source>An area series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd0b0f311058c867f2fd65c539475a64b2ff15ef" translate="yes" xml:space="preserve">
          <source>An argument can sometimes contain whitespaces, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deeb45ba3ea1824e58ffa151e4559cb8217d436c" translate="yes" xml:space="preserve">
          <source>An argument must be provided in curly braces, as in the qdoc comment shown below. The argument is not interpreted but is used as attribute(s) of the tag that is output by qdoc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc31384b55d97af7ac506d02f8f8a4be6c6ab2b2" translate="yes" xml:space="preserve">
          <source>An array containing the descriptions of all connected screens. The elements of the array are objects with the same properties as the &lt;a href=&quot;qml-qtquick-window-screen&quot;&gt;Screen&lt;/a&gt; attached object. In practice the array corresponds to the screen list returned by &lt;a href=&quot;qguiapplication#screens&quot;&gt;QGuiApplication::screens()&lt;/a&gt;. In addition to examining properties like name, width, height, etc., the array elements can also be assigned to the screen property of Window items, thus serving as an alternative to the C++ side's &lt;a href=&quot;qwindow#setScreen&quot;&gt;QWindow::setScreen()&lt;/a&gt;. This property has been added in Qt 5.9.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76e100d905150466e6264959726cf729dcff88f0" translate="yes" xml:space="preserve">
          <source>An array element, usually represented by &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;T&amp;gt; or &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T&amp;gt;. Note: &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; and associative maps are not considered arrays, even if the D-Bus protocol transports them as such.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77b003a24336b6cf78493fdfecc963c8cedb0b2d" translate="yes" xml:space="preserve">
          <source>An array of 1-dimensional textures. Equivalent to GL_TEXTURE_1D_ARRAY</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a07e4287e083be753249b934ef2306e50dbfb014" translate="yes" xml:space="preserve">
          <source>An array of 1-dimensional textures. Equivalent to GL_TEXTURE_2D_ARRAY</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab4fbb2956be423856d564aa937165f2d350fa12" translate="yes" xml:space="preserve">
          <source>An array of 2-dimensional textures with multisample support. Equivalent to GL_TEXTURE_2D_MULTISAMPLE_ARRAY</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e841d209dfc187aea7fb56d5f90cddaae19549fa" translate="yes" xml:space="preserve">
          <source>An array of &lt;a href=&quot;qtqml-typesystem-basictypes#&quot;&gt;basic type&lt;/a&gt; values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71e4eaa2fe09814df8448b3fa384c0f8a1302e21" translate="yes" xml:space="preserve">
          <source>An array of cubemap textures. Equivalent to GL_TEXTURE_CUBE_MAP_ARRAY</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e0b84112dab170968082bd5d0c4d96e27feb4ab" translate="yes" xml:space="preserve">
          <source>An array. Use &lt;a href=&quot;qjsonvalue#toArray-1&quot;&gt;toArray&lt;/a&gt;() to convert to a &lt;a href=&quot;qjsonarray&quot;&gt;QJsonArray&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae10ce3da95a918eb363a48fbab774c7401b0346" translate="yes" xml:space="preserve">
          <source>An arrow in a &lt;a href=&quot;qcolumnview&quot;&gt;QColumnView&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e67c08e3656776974198d5f2030ce99155b5eb56" translate="yes" xml:space="preserve">
          <source>An arrow pointing upwards toward the top of the screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54461e7e418bc2b0e04bcf05c6da786aea6197b6" translate="yes" xml:space="preserve">
          <source>An arrow with a question mark, typically used to indicate the presence of What's This? help for a widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b0cef097494d2b4cdedc19fb39d0b6d9e9f50a5" translate="yes" xml:space="preserve">
          <source>An article is created using &lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#page-command&quot;&gt;\page&lt;/a&gt; command. The first argument is the HTML file that QDoc will create. The topic is supplemented with context commands, the &lt;a href=&quot;20-qdoc-commands-namingthings#title-command&quot;&gt;\title&lt;/a&gt; and &lt;a href=&quot;15-qdoc-commands-navigation#nextpage-command&quot;&gt;\nextpage&lt;/a&gt; commands. There are several other QDoc commands such as the &lt;a href=&quot;10-qdoc-commands-tablesandlists#list-command&quot;&gt;\list&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88105a5c9962a7604f158eee3ed478778a4e08a3" translate="yes" xml:space="preserve">
          <source>An associative container, like &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;&amp;lt;Key, Value&amp;gt; or &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;&amp;lt;Key, Value&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb074552922e14aa8a6f8e8cd8af5e86b782d814" translate="yes" xml:space="preserve">
          <source>An asynchronous method invocation via &lt;a href=&quot;qmetaobject#invokeMethod&quot;&gt;QMetaObject::invokeMethod&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f74a593936d4a640998967c041a60c9a394594f" translate="yes" xml:space="preserve">
          <source>An asynchronous request is generally handled as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a95985f0e31c76ba51316cc36dbee1792370ebb6" translate="yes" xml:space="preserve">
          <source>An attached &lt;a href=&quot;qml-qtquick-controls2-scrollbar&quot;&gt;ScrollBar&lt;/a&gt; re-parents itself to the target Flickable. A vertically attached &lt;a href=&quot;qml-qtquick-controls2-scrollbar&quot;&gt;ScrollBar&lt;/a&gt; resizes itself to the height of the Flickable, and positions itself to either side of it based on the &lt;a href=&quot;qml-qtquick-controls2-control#mirrored-prop&quot;&gt;layout direction&lt;/a&gt;. A horizontally attached &lt;a href=&quot;qml-qtquick-controls2-scrollbar&quot;&gt;ScrollBar&lt;/a&gt; resizes itself to the width of the Flickable, and positions itself to the bottom. The automatic geometry management can be disabled by specifying another parent for the attached &lt;a href=&quot;qml-qtquick-controls2-scrollbar&quot;&gt;ScrollBar&lt;/a&gt;. This can be useful, for example, if the &lt;a href=&quot;qml-qtquick-controls2-scrollbar&quot;&gt;ScrollBar&lt;/a&gt; should be placed outside a clipping Flickable. This is demonstrated by the following example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a45f77830a51755df6becbfc33790377912e008" translate="yes" xml:space="preserve">
          <source>An attached &lt;a href=&quot;qml-qtquick-controls2-scrollindicator&quot;&gt;ScrollIndicator&lt;/a&gt; re-parents itself to the target Flickable. A vertically attached &lt;a href=&quot;qml-qtquick-controls2-scrollindicator&quot;&gt;ScrollIndicator&lt;/a&gt; resizes itself to the height of the Flickable, and positions itself to either side of it based on the &lt;a href=&quot;qml-qtquick-controls2-control#mirrored-prop&quot;&gt;layout direction&lt;/a&gt;. A horizontally attached &lt;a href=&quot;qml-qtquick-controls2-scrollindicator&quot;&gt;ScrollIndicator&lt;/a&gt; resizes itself to the width of the Flickable, and positions itself to the bottom. The automatic geometry management can be disabled by specifying another parent for the attached &lt;a href=&quot;qml-qtquick-controls2-scrollindicator&quot;&gt;ScrollIndicator&lt;/a&gt;. This can be useful, for example, if the &lt;a href=&quot;qml-qtquick-controls2-scrollindicator&quot;&gt;ScrollIndicator&lt;/a&gt; should be placed outside a clipping Flickable. This is demonstrated by the following example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0179e358af4ef33b21925cc31f16bd639bb4265e" translate="yes" xml:space="preserve">
          <source>An attached signal handler is referred to in the same way. For example, the &lt;a href=&quot;qml-qtqml-component#completed-signal&quot;&gt;Component.onCompleted&lt;/a&gt; attached signal handler is commonly used to execute some JavaScript code when a component's creation process has been completed. In the example below, once the &lt;a href=&quot;qml-qtqml-models-listmodel&quot;&gt;ListModel&lt;/a&gt; has been fully created, its &lt;code&gt;Component.onCompleted&lt;/code&gt; signal handler will automatically be invoked to populate the model:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5f08ce99a65f2ecbc65e0066f9a2976f55844e6" translate="yes" xml:space="preserve">
          <source>An attacker transmits a series of handshake initiation requests with a forged source of the victim, making the server act as an amplifier. Normally, the server would reply to the victim machine with a Certificate message, which can be quite large, thus flooding the victim machine with datagrams.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebf5467a70ea10c26697b5d91fafd3b6544ec433" translate="yes" xml:space="preserve">
          <source>An attacker transmits a series of handshake initiation requests, causing a server to allocate excessive resources and potentially perform expensive cryptographic operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b18056b45bd189d69370485c9dcb8316fd10590c" translate="yes" xml:space="preserve">
          <source>An attempt to check the safety of the download failed due to unexpected reasons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1920e43cf9b6b84b8eccdea32ffbd9d2043d6f9" translate="yes" xml:space="preserve">
          <source>An attempt to read a characteristic value failed. For example, it might be triggered in response to a call to &lt;a href=&quot;qlowenergyservice#readCharacteristic&quot;&gt;readCharacteristic&lt;/a&gt;(). This value was introduced by Qt 5.5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42c365b756f00c11ef70c0544eb8966261d72e3c" translate="yes" xml:space="preserve">
          <source>An attempt to read a descriptor value failed. For example, it might be triggered in response to a call to &lt;a href=&quot;qlowenergyservice#readDescriptor&quot;&gt;readDescriptor&lt;/a&gt;(). This value was introduced by Qt 5.5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86c52a0ca116050b1b09ba02be9c9f5ab0c7163d" translate="yes" xml:space="preserve">
          <source>An attempt to set a frequency or band that is not supported by radio device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b2b9b3670ea287d46388bd32839f0b3d4eb9647" translate="yes" xml:space="preserve">
          <source>An attempt to write a new value to a characteristic failed. For example, it might be triggered when attempting to write to a read-only characteristic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28719ee28e71da7563c0e7dc9d1a8283f6dfcdb9" translate="yes" xml:space="preserve">
          <source>An attempt to write a new value to a descriptor failed. For example, it might be triggered when attempting to write to a read-only descriptor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73e462e030113ef8c906e7f2eb862bcc973a50cb" translate="yes" xml:space="preserve">
          <source>An attempt was made to create a host &lt;a href=&quot;qremoteobjectnode&quot;&gt;QRemoteObjectNode&lt;/a&gt; and connect to itself as the registry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da04d806a42e0ce86b3ad6d9ff46424cf85ba13f" translate="yes" xml:space="preserve">
          <source>An attempt was made to seek past the end of a file when opening a file (as part of resuming a previously interrupted download).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c68c518cc51888328e807a8338440fe688e02365" translate="yes" xml:space="preserve">
          <source>An attempt was made to write an invalid &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;. An example of an invalid image would be a null &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d739ba6809663699ed4cd07317565289f29a2e3d" translate="yes" xml:space="preserve">
          <source>An attribute consists of an optionally empty &lt;a href=&quot;qxmlstreamattribute#namespaceUri&quot;&gt;namespaceUri&lt;/a&gt;(), a &lt;a href=&quot;qxmlstreamattribute#name&quot;&gt;name&lt;/a&gt;(), a &lt;a href=&quot;qxmlstreamattribute#value&quot;&gt;value&lt;/a&gt;(), and an &lt;a href=&quot;qxmlstreamattribute#isDefault&quot;&gt;isDefault&lt;/a&gt;() attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7748183ee699f9220fdab60a48f8ed6cd77483e0" translate="yes" xml:space="preserve">
          <source>An audio element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="918a3dc224fb0953c21b5b988abe9a963fda4947" translate="yes" xml:space="preserve">
          <source>An audio format specifies how data in an audio stream is arranged, i.e, how the stream is to be interpreted. The encoding itself is specified by the &lt;a href=&quot;qaudioformat#codec&quot;&gt;codec&lt;/a&gt;() used for the stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9ead1dace6213ab27093c755c1ed26229e69928" translate="yes" xml:space="preserve">
          <source>An audio frame is an interleaved set of one sample per channel for the same instant in time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f08d7e19d8759c29fda71bbf00f42349976c1c87" translate="yes" xml:space="preserve">
          <source>An average is used to measure exposure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6727d2143342529976feea43bd2963997ae9c093" translate="yes" xml:space="preserve">
          <source>An axis input controlled by an analog input The axis value is controlled like a traditional analog input such as a joystick</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eded26a99ca8c6dcaa5cf61892880cd1c1b869f" translate="yes" xml:space="preserve">
          <source>An axis input controlled by an analog input The axis value is controlled like a traditional analog input such as a joystick. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa32033af9e5fa989cab76372025626a36bac451" translate="yes" xml:space="preserve">
          <source>An axis input controlled by an analog input The axis value is controlled like a traditional analog input such as a joystick. &lt;a href=&quot;qt3dinput-qanalogaxisinput#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="562872ac63dc0241ef844cadb3985f7663b79cee" translate="yes" xml:space="preserve">
          <source>An axis input controlled by buttons The axis value is controlled by buttons rather than a traditional analog input such as a joystick</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d03cb632a33ea959841af75ceee5881f4e5f152" translate="yes" xml:space="preserve">
          <source>An axis input controlled by buttons The axis value is controlled by buttons rather than a traditional analog input such as a joystick. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c74a4d3ff89f648cc000602badc78daf2a82234" translate="yes" xml:space="preserve">
          <source>An axis input controlled by buttons The axis value is controlled by buttons rather than a traditional analog input such as a joystick. &lt;a href=&quot;qt3dinput-qbuttonaxisinput#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62f6aad60cee3b19abcb23e32c9a7643ee9a7118" translate="yes" xml:space="preserve">
          <source>An axis specifier defines the direction you want the query engine to take, when it navigates away from the context node. Qt XML Patterns supports the following axes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5b5876e35ef54cea7cb6de8cb26aba3c39a7e73" translate="yes" xml:space="preserve">
          <source>An edit menu with pre-populated cut, copy and paste items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c445d98d9362700ec1e69011eded6ef6b73370e" translate="yes" xml:space="preserve">
          <source>An editable model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51581ac8f7d5ee39b5e6edd856d7217ad9722a7e" translate="yes" xml:space="preserve">
          <source>An editor item might want to use an I-beam cursor:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a127241531b86cddafb11bfe18a8e13964fb4c90" translate="yes" xml:space="preserve">
          <source>An editor should provide a user property for the data it edits. QItemDelagates can then access the property using Qt's &lt;a href=&quot;metaobjects&quot;&gt;meta-object system&lt;/a&gt; to set and retrieve the editing data. A property is set as the user property with the USER keyword:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dfc4d7817b0f5f8aed82fa33bb19cc388d30002" translate="yes" xml:space="preserve">
          <source>An editor widget gains focus for editing. &lt;code&gt;QT_KEYPAD_NAVIGATION&lt;/code&gt; must be defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48f1d1948929e256ebbf0a74ffeb5eeffe0d8bfd" translate="yes" xml:space="preserve">
          <source>An editor widget loses focus for editing. QT_KEYPAD_NAVIGATION must be defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f73f9470f16034f1e4fc5a96dca229f8ea18812" translate="yes" xml:space="preserve">
          <source>An editor widget might use an I-beam cursor:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6db61277f13af34413e8572a7189c6b948c7ccec" translate="yes" xml:space="preserve">
          <source>An effect of letting &lt;a href=&quot;qxmlresultitems#next&quot;&gt;next&lt;/a&gt;() produce the sequence by lazy evaluation is that a query error can occur on any call to &lt;a href=&quot;qxmlresultitems#next&quot;&gt;next&lt;/a&gt;(). If an error occurs, both &lt;a href=&quot;qxmlresultitems#next&quot;&gt;next&lt;/a&gt;() and &lt;a href=&quot;qxmlresultitems#current&quot;&gt;current&lt;/a&gt;() will return the null &lt;a href=&quot;qxmlitem&quot;&gt;QXmlItem&lt;/a&gt;, and &lt;a href=&quot;qxmlresultitems#hasError&quot;&gt;hasError&lt;/a&gt;() will return true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eccce8aaaf64c1f6681e5e330251fd7897a4e647" translate="yes" xml:space="preserve">
          <source>An email entry; the entry contains an email address that the certificate is valid for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8962ddfdb9ccbf09699a7982865728b9e63c4fa3" translate="yes" xml:space="preserve">
          <source>An embedded cover art image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a84bbd45476e4451333dc5ebc40732d498daba9b" translate="yes" xml:space="preserve">
          <source>An embedded poster image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a5b637a3c61ca29a491d2f77499e4aa3a9f369b" translate="yes" xml:space="preserve">
          <source>An embedded thumbnail image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a91878eff18a6c41144b68e72dfe3d8323ce76d" translate="yes" xml:space="preserve">
          <source>An empty</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5be0d09c4cf5dea06426fcd417c2afba71e1706b" translate="yes" xml:space="preserve">
          <source>An empty &lt;a href=&quot;qbluetoothserviceinfo-sequence&quot;&gt;QBluetoothServiceInfo::Sequence&lt;/a&gt; is returned if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81f3803687841b5b4a8c76abeab490ff320e8961" translate="yes" xml:space="preserve">
          <source>An empty &lt;a href=&quot;qdbusargument&quot;&gt;QDBusArgument&lt;/a&gt; object does not allow either reading or writing to be performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad95c47649d06730e7770b49f04070779bac2174" translate="yes" xml:space="preserve">
          <source>An empty &lt;a href=&quot;qprinterinfo&quot;&gt;QPrinterInfo&lt;/a&gt; object could result for example from calling &lt;a href=&quot;qprinterinfo#defaultPrinter&quot;&gt;defaultPrinter&lt;/a&gt;() when there are no printers on the system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aa62f0c4030a58c91424eb23861efede91039b1" translate="yes" xml:space="preserve">
          <source>An empty &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; indicates the encoder should make an optimal choice based on what is available from the image source and the limitations of the codec.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94f4c648895db858a68aab4881b08cfe437bdfb4" translate="yes" xml:space="preserve">
          <source>An empty &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; indicates the encoder should make an optimal choice based on what is available from the video source and the limitations of the codec.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53bad9599a542c53e59ccb5f808fb928e8e36f3e" translate="yes" xml:space="preserve">
          <source>An empty NDEF record, the record does not contain a payload</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16b223fbd458e0fba6924da403d0b1ef84f03323" translate="yes" xml:space="preserve">
          <source>An empty NDEF record, the record does not contain a payload.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b24b41d55bff01d37e2e5ffc18471bf56171e20" translate="yes" xml:space="preserve">
          <source>An empty UUID list is equivalent to a list containing only &lt;a href=&quot;qbluetoothuuid#ServiceClassUuid-enum&quot;&gt;QBluetoothUuid::PublicBrowseGroup&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37d5b8f1ae58a9566bcc4e48055b38303a751f95" translate="yes" xml:space="preserve">
          <source>An empty command described by the specified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86951613167380f011c64ecd0dbf5c72e84884dc" translate="yes" xml:space="preserve">
          <source>An empty destructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7f5a92b12e302d015eb40506131f36dbeaa3150" translate="yes" xml:space="preserve">
          <source>An empty document contains a root frame which itself contains a single empty text block. Frames provide logical separation between parts of the document, but also have properties that determine how they will appear when rendered. A table is a specialized type of frame that consists of a number of cells, arranged into rows and columns, each of which can contain further structure and text. Tables provide management and layout features that allow flexible configurations of cells to be created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bea8d626ad4a8bf01e0233019c46e1fcff22cec8" translate="yes" xml:space="preserve">
          <source>An empty geo shape is a region which has a geometrical area of 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9add1137a70fc7defedaba159712ab274f894757" translate="yes" xml:space="preserve">
          <source>An empty item selection can be constructed, and later populated as required. So, if the model is going to be unavailable when we construct the item selection, we can rewrite the above code in the following way:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3741c22027d3cc61e7d70c011a70fc663184842" translate="yes" xml:space="preserve">
          <source>An empty list is returned if the option does not take a value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a49dbbbbdfb66580a230fd647bc2284ecb290f70" translate="yes" xml:space="preserve">
          <source>An empty message (i.e. &lt;a href=&quot;qlist#isEmpty&quot;&gt;isEmpty&lt;/a&gt;() returns true) is equivalent to a NDEF message containing a single record of type &lt;a href=&quot;qndefrecord#TypeNameFormat-enum&quot;&gt;QNdefRecord::Empty&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="847282968bd6daa950dfcaaee7a64e8c70eab417" translate="yes" xml:space="preserve">
          <source>An empty rectangle has &lt;a href=&quot;qrectf#width&quot;&gt;width&lt;/a&gt;() &amp;lt;= 0 or &lt;a href=&quot;qrectf#height&quot;&gt;height&lt;/a&gt;() &amp;lt;= 0. An empty rectangle is not valid (i.e., isEmpty() == !&lt;a href=&quot;qrectf#isValid&quot;&gt;isValid&lt;/a&gt;()).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d83ddecedae9a829764254a32de74e0136d1e0bd" translate="yes" xml:space="preserve">
          <source>An empty rectangle has a &lt;a href=&quot;qrect#left&quot;&gt;left&lt;/a&gt;() &amp;gt; &lt;a href=&quot;qrect#right&quot;&gt;right&lt;/a&gt;() or &lt;a href=&quot;qrect#top&quot;&gt;top&lt;/a&gt;() &amp;gt; &lt;a href=&quot;qrect#bottom&quot;&gt;bottom&lt;/a&gt;(). An empty rectangle is not valid (i.e., isEmpty() == !&lt;a href=&quot;qrect#isValid&quot;&gt;isValid&lt;/a&gt;()).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="227e19d8e2e1a4d7adc875538331e659da27111c" translate="yes" xml:space="preserve">
          <source>An empty string is returned if the option does not take a value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28a41baf438bb0b43aabcc7176adac4651e98874" translate="yes" xml:space="preserve">
          <source>An empty string may also be returned if an error occurred which has no associated textual representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="993774c420fbbfa07ea5e58f516a3c0b1b14933b" translate="yes" xml:space="preserve">
          <source>An enabled layout adjusts dynamically to changes; a disabled layout acts as if it did not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7dd1d50d038df0f9168223c081cb9bb1a0e5f4f" translate="yes" xml:space="preserve">
          <source>An enabled shortcut emits the &lt;a href=&quot;qshortcut#activated&quot;&gt;activated&lt;/a&gt;() or &lt;a href=&quot;qshortcut#activatedAmbiguously&quot;&gt;activatedAmbiguously&lt;/a&gt;() signal when a &lt;a href=&quot;qshortcutevent&quot;&gt;QShortcutEvent&lt;/a&gt; occurs that matches the shortcut's &lt;a href=&quot;qshortcut#key-prop&quot;&gt;key&lt;/a&gt;() sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="888af70ad58735e5927afd450625714644845022" translate="yes" xml:space="preserve">
          <source>An encrypted socket encrypts all data that is written by calling &lt;a href=&quot;qiodevice#write&quot;&gt;write&lt;/a&gt;() or &lt;a href=&quot;qiodevice#putChar&quot;&gt;putChar&lt;/a&gt;() before the data is written to the network, and decrypts all incoming data as the data is received from the network, before you call &lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt;(), &lt;a href=&quot;qiodevice#readLine&quot;&gt;readLine&lt;/a&gt;() or &lt;a href=&quot;qiodevice#getChar&quot;&gt;getChar&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb14ba2417b69116b8364429a2e5c9ab0973f78c" translate="yes" xml:space="preserve">
          <source>An end tag is parsed (&lt;code&gt;&amp;lt;/quote&amp;gt;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="656609738c663abafbdf82dca8c9701ce77fb840" translate="yes" xml:space="preserve">
          <source>An engine implementation must derive from &lt;a href=&quot;qtexttospeechengine&quot;&gt;QTextToSpeechEngine&lt;/a&gt; and implement all its pure virtual methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4c8c0f09f5ad5c663a31b186feaf27979090254" translate="yes" xml:space="preserve">
          <source>An entity declaration consists of a &lt;a href=&quot;qxmlstreamentitydeclaration#name&quot;&gt;name&lt;/a&gt;(), a &lt;a href=&quot;qxmlstreamentitydeclaration#notationName&quot;&gt;notationName&lt;/a&gt;(), a &lt;a href=&quot;qxmlstreamentitydeclaration#systemId&quot;&gt;systemId&lt;/a&gt;(), a &lt;a href=&quot;qxmlstreamentitydeclaration#publicId&quot;&gt;publicId&lt;/a&gt;(), and a &lt;a href=&quot;qxmlstreamentitydeclaration#value&quot;&gt;value&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50e34b68f445dc9e7db9110a72ad3d8528ba74a0" translate="yes" xml:space="preserve">
          <source>An entity is considered picked if the picking ray intersects the bounding volume of the entity (default).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d36d101085a6e5baaedfb292ca1aacd9a64d085" translate="yes" xml:space="preserve">
          <source>An entity is considered picked if the picking ray intersects with any edge of the entity's mesh component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edf48526921736e1528d109242692fca7f69ccd7" translate="yes" xml:space="preserve">
          <source>An entity is considered picked if the picking ray intersects with any point of the entity's mesh component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="713107e02eee0e22ead850754915a3083a582303" translate="yes" xml:space="preserve">
          <source>An entity is considered picked if the picking ray intersects with any point, edge or triangle of the entity's mesh component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6168f0db184389552e370c33614eb6538b40e132" translate="yes" xml:space="preserve">
          <source>An entity is considered picked if the picking ray intersects with any triangle of the entity's mesh component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a99165325e38fbe133898c103bbbddf65e6a5461" translate="yes" xml:space="preserve">
          <source>An entity loader that changes depending on distance to camera or screen size. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19132e8ae32144920dce02e1ca543c931d68f9ce" translate="yes" xml:space="preserve">
          <source>An entity node does not have any parent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dba783c170a5db689e7299aff7641fd75305dad" translate="yes" xml:space="preserve">
          <source>An entry in the color table is an ARGB quadruplet encoded as an &lt;a href=&quot;qcolor#QRgb-typedef&quot;&gt;QRgb&lt;/a&gt; value. Use the &lt;a href=&quot;qcolor#qRgb&quot;&gt;qRgb&lt;/a&gt;() and &lt;a href=&quot;qcolor#qRgba&quot;&gt;qRgba&lt;/a&gt;() functions to make a suitable &lt;a href=&quot;qcolor#QRgb-typedef&quot;&gt;QRgb&lt;/a&gt; value for use with the &lt;a href=&quot;qimage#setColor&quot;&gt;setColor&lt;/a&gt;() function. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73f44e8051db416f8ac51adc298eed9cadb0bc40" translate="yes" xml:space="preserve">
          <source>An enum to tune the behavior of &lt;a href=&quot;qx11info#peekEventQueue&quot;&gt;QX11Info::peekEventQueue&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4458ae84bfaff7c0592338c8e69a8f4a3918ab4d" translate="yes" xml:space="preserve">
          <source>An error code for the error state including &lt;a href=&quot;qdtls#QDtlsError-enum&quot;&gt;NoError&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b03549d7ef3e9c983e28fbfd70ee0583a1ed4e95" translate="yes" xml:space="preserve">
          <source>An error has occurred, reported in &lt;a href=&quot;qxmlstreamreader#error&quot;&gt;error&lt;/a&gt;() and &lt;a href=&quot;qxmlstreamreader#errorString&quot;&gt;errorString&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e9dbde61b5dadbc3f242c5dea103b2ac13f5e57" translate="yes" xml:space="preserve">
          <source>An error has occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aff4663c828e603e5c969c254d744254695a3f3e" translate="yes" xml:space="preserve">
          <source>An error has occurred. Call &lt;a href=&quot;qqmlcomponent#errors&quot;&gt;errors&lt;/a&gt;() to retrieve a list of &lt;a href=&quot;qqmlerror&quot;&gt;errors&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe34d856c62bad12f703922c1d99bfcc15d82382" translate="yes" xml:space="preserve">
          <source>An error message widget consists of a text label and a checkbox. The checkbox lets the user control whether the same error message will be displayed again in the future, typically displaying the text, &quot;Show this message again&quot; translated into the appropriate local language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b293494b9f567ff9ebfbbec018a3175a13594936" translate="yes" xml:space="preserve">
          <source>An error occurred communicating with the service provider.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49608d9edd64a26b2af8037f1214a9ceccad94f2" translate="yes" xml:space="preserve">
          <source>An error occurred during a read operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd8170f582cc87212dd7de4a4a7ffd099c19052b" translate="yes" xml:space="preserve">
          <source>An error occurred during a write operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dbffc493e86cc4edab71ad6f3d0f6efe0f168cd" translate="yes" xml:space="preserve">
          <source>An error occurred during operation, such as failure of loading the source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69081b30e3db483a78496f942bdec61a93768967" translate="yes" xml:space="preserve">
          <source>An error occurred during read/write of audio device</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58d266155a5c9c2429a1ed8a67ab5cb52640f2b0" translate="yes" xml:space="preserve">
          <source>An error occurred during the handling of the session. This enum was introduced by Qt 5.4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ae5e7076cf7c4c9770c824b418502dcd6939444" translate="yes" xml:space="preserve">
          <source>An error occurred during the last operation, further operations can still be performed on the category.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c0565adfea71e825508fe0817d76a63b4253512" translate="yes" xml:space="preserve">
          <source>An error occurred during the last operation, further operations can still be performed on the model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b2d48f4a1cebbeaf5c4a897d685bc346d9a18ae" translate="yes" xml:space="preserve">
          <source>An error occurred during the last operation, further operations can still be performed on the place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="311c6a7624c0b22688cda936beee7fd13e785f4c" translate="yes" xml:space="preserve">
          <source>An error occurred opening the audio device</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="882f4dce30f30f25589d3c6e208b5987e35fc38b" translate="yes" xml:space="preserve">
          <source>An error occurred when attempting to open the backend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b5904ff2856088f7f65d64e6ac5151cbdc1b093" translate="yes" xml:space="preserve">
          <source>An error occurred when attempting to open the plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ff05c2bcd68408ed0b2738dc49a0d3b978f281f" translate="yes" xml:space="preserve">
          <source>An error occurred when attempting to read from the process. For example, the process may not be running.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e155805f998ed75dfb2a7ac5fe5fb13af3ec0f4d" translate="yes" xml:space="preserve">
          <source>An error occurred when attempting to set a configuration parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97f1c6032dfd99d8ac2a66dda6aeed4be0a78d5a" translate="yes" xml:space="preserve">
          <source>An error occurred when attempting to write to the process. For example, the process may not be running, or it may have closed its input channel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77970c3b3e0fc3e56442e2d628428e584c8ee017" translate="yes" xml:space="preserve">
          <source>An error occurred when executing the previous search query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b26c47f632c6001780037d1d44b38b48bcdeb413" translate="yes" xml:space="preserve">
          <source>An error occurred when reading from the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e436488b943559c1e03c55226451085d44f46e3f" translate="yes" xml:space="preserve">
          <source>An error occurred when writing to the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="305b0d02dbcc8af6512f1c16be77d56de57f727e" translate="yes" xml:space="preserve">
          <source>An error occurred which does not fit into any of the other categories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63330a3f2f97b2e873e66cd5b35ab06bfcb3a3e6" translate="yes" xml:space="preserve">
          <source>An error occurred while attempting to open an already opened device by another process or a user not having enough permission and credentials to open.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed3fd672ff6638cc944921be61f4afad1ff35370" translate="yes" xml:space="preserve">
          <source>An error occurred while attempting to open an already opened device in this object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e64e14040211546cd643db4aa24df6d3e0d22da" translate="yes" xml:space="preserve">
          <source>An error occurred while attempting to open an non-existing device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03092cc759b6bde20783842bc1e9f5bb5e784f0d" translate="yes" xml:space="preserve">
          <source>An error occurred while capturing an image</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44f73ed6b14cdd2a10d7c06ad9642c4687145084" translate="yes" xml:space="preserve">
          <source>An error occurred while communicating with the service provider.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3282d8aeccb5412e86b454db1d48cbe8c503bd6" translate="yes" xml:space="preserve">
          <source>An error occurred while compiling the shader</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="593105f7dc180f6cf77523f1ffc19a43b36ae535" translate="yes" xml:space="preserve">
          <source>An error occurred while initializing an underlying TLS backend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="378af86e9f1af0923c4e8c693892ec67f5ce19ce" translate="yes" xml:space="preserve">
          <source>An error occurred while loading the animation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f366d737d367d6914381fd7560c67ea63d332b05" translate="yes" xml:space="preserve">
          <source>An error occurred while loading the clip</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ba19dbe79850160e5b9d4f7e290b56d6efd1f72" translate="yes" xml:space="preserve">
          <source>An error occurred while loading the skeleton</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8be41f087db8cb399f939c7717c59cf48ffbf6a" translate="yes" xml:space="preserve">
          <source>An error occurred while results where being combined from multiple sources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74c8857fc086b96b40f037ccd17f52f03e8ecccb" translate="yes" xml:space="preserve">
          <source>An error occurred with the connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3e88629b2dd7d35b6152944f261c5587c88595c" translate="yes" xml:space="preserve">
          <source>An error occurred with the network (e.g., the network cable was accidentally plugged out).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78697ec2f00fd52f54b42d61d5d16a05d66c9ce0" translate="yes" xml:space="preserve">
          <source>An error occurred, preventing the transaction from completing. See the &lt;a href=&quot;qinapptransaction#errorString-prop&quot;&gt;errorString&lt;/a&gt; property for more information on the precise error that occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bccc6f1f5cca72606032b0c35b12d1e01e8749d0" translate="yes" xml:space="preserve">
          <source>An error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="485dc76fcb7e07f09bf0cf772400ad0bbd1faae0" translate="yes" xml:space="preserve">
          <source>An error occurred. The errors can be access by calling &lt;a href=&quot;qqmlincubator#errors&quot;&gt;errors&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8ec9b2a3cea4c148c74920c06c05a4797c0b5be" translate="yes" xml:space="preserve">
          <source>An event dispatcher receives events from the window system and other sources. It then sends them to the &lt;a href=&quot;qcoreapplication&quot;&gt;QCoreApplication&lt;/a&gt; or &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt; instance for processing and delivery. &lt;a href=&quot;qabstracteventdispatcher&quot;&gt;QAbstractEventDispatcher&lt;/a&gt; provides fine-grained control over event delivery.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70998dbd4c3afbd8dab950c47951367af7bdbfe7" translate="yes" xml:space="preserve">
          <source>An event filter is an object that receives all events that are sent to this object. The filter can either stop the event or forward it to this object. The event filter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81f42921c7e38d02b637078a35888cdeaded670f" translate="yes" xml:space="preserve">
          <source>An event generated by a &lt;code&gt;&amp;lt;raise&amp;gt;&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bcfe759aa1087066d932111775dcf7c2ee91808" translate="yes" xml:space="preserve">
          <source>An event generated by a &lt;code&gt;&amp;lt;send&amp;gt;&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19262686c75958b0cd4fe2c4ba2c48857d15c880" translate="yes" xml:space="preserve">
          <source>An event generated internally by the state machine. For example, errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99f8e19ae84df636e6fac02d422aecabe2080315" translate="yes" xml:space="preserve">
          <source>An event is sent to the widget when the mouse cursor enters the widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca1ad232c74f9d81248e99c45d461ef7da7c2e35" translate="yes" xml:space="preserve">
          <source>An event loop in a thread makes it possible for the thread to use certain non-GUI Qt classes that require the presence of an event loop (such as &lt;a href=&quot;qtimer&quot;&gt;QTimer&lt;/a&gt;, &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;, and &lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt;). It also makes it possible to connect signals from any threads to slots of a specific thread. This is explained in more detail in the &lt;a href=&quot;#signals-and-slots-across-threads&quot;&gt;Signals and Slots Across Threads&lt;/a&gt; section below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b4aa6221caa2e0d1cef5af0f92a6502ecc2e966" translate="yes" xml:space="preserve">
          <source>An event point. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7680deb369c9f9a299c311bf0bd649b1ed224667" translate="yes" xml:space="preserve">
          <source>An event that is not handled by any relevant transition will be silently consumed by the state machine. It can be useful to group states and provide a default handling of such events; for example, as illustrated in the following statechart:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aea2f413e29036eb7c7c4ab2ee6dd0ee8ea89c5" translate="yes" xml:space="preserve">
          <source>An example animation with a timeline follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ec46025a7b8e8d77d3059c3f5f993ab6cc357ab" translate="yes" xml:space="preserve">
          <source>An example follows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="382021cf834b36b1072d2e5b01fc405ca6f068c1" translate="yes" xml:space="preserve">
          <source>An example implementation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fee26e04f9b1ec09d7d7bef2bab55da0d588e28d" translate="yes" xml:space="preserve">
          <source>An example may have an accompanying tutorial. The tutorial instructs and describes the code, while the code example is the code content that users may study. Code examples may have accompanying text that are not in the tutorial.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88ed70048f9404cb338f1b8b5f2b0d6d018c5046" translate="yes" xml:space="preserve">
          <source>An example of &lt;a href=&quot;qxmlstreamreader&quot;&gt;QXmlStreamReader&lt;/a&gt; implementation would be the &lt;code&gt;XbelReader&lt;/code&gt; in &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtxml-streambookmarks-example.html#&quot;&gt;QXmlStream Bookmarks Example&lt;/a&gt;, which wraps a &lt;a href=&quot;qxmlstreamreader&quot;&gt;QXmlStreamReader&lt;/a&gt;. The constructor takes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ca358d2c5805869827d49b060b18d3f82998989" translate="yes" xml:space="preserve">
          <source>An example of a code-behind implementation resource follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fb983fecb343a2ad971daf046c43e0691d555f7" translate="yes" xml:space="preserve">
          <source>An example of a license agreement enclosed in \legalese and \endlegalese:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06a95705cf385506535d1c369e03f6f62b8cfc72" translate="yes" xml:space="preserve">
          <source>An example of a non-POD &quot;primitive&quot; type is &lt;a href=&quot;quuid&quot;&gt;QUuid&lt;/a&gt;: Even though &lt;a href=&quot;quuid&quot;&gt;QUuid&lt;/a&gt; has constructors (and therefore isn't POD), every bit pattern still represents a valid object, and memcpy() can be used to create a valid independent copy of a &lt;a href=&quot;quuid&quot;&gt;QUuid&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5af37bcfa3b95fc173389cd531601fa1c877ccf" translate="yes" xml:space="preserve">
          <source>An example of a qualified module import is as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4278fc79e43e0c7a4b491fe74d8bc9aceec29b8" translate="yes" xml:space="preserve">
          <source>An example of a value range style is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f679cb10e7459c6a79fb26b00c22cdb68ab90d35" translate="yes" xml:space="preserve">
          <source>An example of an inline custom method is as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7583462d2350d6c266f7bd8c5a3ad71bbc4c76f6" translate="yes" xml:space="preserve">
          <source>An example of an unqualified module import is as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4caf67e47c72193ab638ae1d76a6080a501be648" translate="yes" xml:space="preserve">
          <source>An example of client code which creates a rectangle after using a qualified module import is as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d86d5cf0ff0dfce86c192e5c57e791d96640b4e" translate="yes" xml:space="preserve">
          <source>An example of data loss is when you have non-Unicode percent-encoded sequences and use &lt;a href=&quot;qurl#ComponentFormattingOption-enum&quot;&gt;FullyDecoded&lt;/a&gt; (the default):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bfca5c1568ca8a049b3be83dac74662ef606646" translate="yes" xml:space="preserve">
          <source>An example of green text defined using hexadecimal notation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77077afd06113f212c115938b1b3d481df2887af" translate="yes" xml:space="preserve">
          <source>An example of how to create menus follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="290601fbba73d6b6a221a740427121c7df4c05a9" translate="yes" xml:space="preserve">
          <source>An example of imperative value assignment follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf42ba7c91b64c9619c48b33179bb9339e8d103f" translate="yes" xml:space="preserve">
          <source>An example of list property declaration follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a63595e28dc68dddf2ba71f48c5f09fab5e4144" translate="yes" xml:space="preserve">
          <source>An example of property value initialization follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b853e2ca5ac57b627ea5bb8cd84201307463fef" translate="yes" xml:space="preserve">
          <source>An example of steel blue text defined using an SVG color name:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68fb8119dfc3a25054d0bc0b5dcbd6d538540eff" translate="yes" xml:space="preserve">
          <source>An example of this tradeoff can be seen by examining the LIS302DL accelerometer. It has only 256 possible values to report with. These values are scaled so that they can represent either -2G to +2G (with an accuracy value of 0.015G) or -8G to +8G (with an accuracy value of 0.06G).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ad1d02c13cac79ff8bc70e014a6bac01a53dcfc" translate="yes" xml:space="preserve">
          <source>An example of toolbar creation follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b25119c25a7e2823d48d96ba4cbba9d135e4d958" translate="yes" xml:space="preserve">
          <source>An example of using the delayed SSL handshake to secure an existing connection is the case where an SSL server secures an incoming connection. Suppose you create an SSL server class as a subclass of &lt;a href=&quot;qtcpserver&quot;&gt;QTcpServer&lt;/a&gt;. You would override &lt;a href=&quot;qtcpserver#incomingConnection&quot;&gt;QTcpServer::incomingConnection&lt;/a&gt;() with something like the example below, which first constructs an instance of &lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; and then calls &lt;a href=&quot;qsslsocket#setSocketDescriptor&quot;&gt;setSocketDescriptor&lt;/a&gt;() to set the new socket's descriptor to the existing one passed in. It then initiates the SSL handshake by calling &lt;a href=&quot;qsslsocket#startServerEncryption&quot;&gt;startServerEncryption&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="252b4a942e1b5c3d87e4b09fc0f636142f2a5409" translate="yes" xml:space="preserve">
          <source>An example usage of &lt;a href=&quot;qstandarditemmodel&quot;&gt;QStandardItemModel&lt;/a&gt; to create a table:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ff8d7c2ffda791bbb4a08ae6f6d60d325e8b7b8" translate="yes" xml:space="preserve">
          <source>An example usage of &lt;a href=&quot;qstandarditemmodel&quot;&gt;QStandardItemModel&lt;/a&gt; to create a tree:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddfb44ff493ce4fac01be1122dd81479b805e34e" translate="yes" xml:space="preserve">
          <source>An example usage of &lt;a href=&quot;qstringlistmodel&quot;&gt;QStringListModel&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d24ace01fcae46107ecb1d85096cc3ff03fd2777" translate="yes" xml:space="preserve">
          <source>An example use of this class would be to map the Windows Metafile clipboard format (&lt;code&gt;CF_METAFILEPICT&lt;/code&gt;) to and from the MIME type &lt;code&gt;image/x-wmf&lt;/code&gt;. This conversion might simply be adding or removing a header, or even just passing on the data. See &lt;a href=&quot;qtgui-index#drag-and-drop&quot;&gt;Drag and Drop&lt;/a&gt; for more information on choosing and definition MIME types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f481ad49809e7c27b79d2e6d830283b22c04c1f7" translate="yes" xml:space="preserve">
          <source>An example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dad874421025e6fcc569a4bfe11af2818ffcacf" translate="yes" xml:space="preserve">
          <source>An example: Sensors.conf ensures that the N900 accelerometer is used by default, not considering the order in which backends were registered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b548318d7e4a14a5ea40688706b7f8ea8ddafc62" translate="yes" xml:space="preserve">
          <source>An exception has occurred. We recommend against using this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f53f4b006a032a0f63ac8bd7174954e7f8aecbd" translate="yes" xml:space="preserve">
          <source>An executable server has the advantage of being able to run as a stand-alone application, but adds considerable overhead to the communication between the COM client and the COM object. If the control has a programming error only the server process running the control will crash, and the client application will probably continue to run. Not all COM clients support executable servers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2a62c1fb5a3852fe5037f619b9728444d31e3ed" translate="yes" xml:space="preserve">
          <source>An existing row of children can be removed with &lt;a href=&quot;qstandarditem#removeRow&quot;&gt;removeRow&lt;/a&gt;() or &lt;a href=&quot;qstandarditem#takeRow&quot;&gt;takeRow&lt;/a&gt;(); correspondingly, a column can be removed with &lt;a href=&quot;qstandarditem#removeColumn&quot;&gt;removeColumn&lt;/a&gt;() or &lt;a href=&quot;qstandarditem#takeColumn&quot;&gt;takeColumn&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2f9a0e880aaf2ab48633ed6a578ca91ab26e401" translate="yes" xml:space="preserve">
          <source>An experimental implementation of high-DPI scaling was introduced in Qt 5.4. It was enabled by the environment variable &lt;code&gt;QT_DEVICE_PIXEL_RATIO&lt;/code&gt;, which could be set to a numerical scale factor or &lt;code&gt;&quot;auto&quot;&lt;/code&gt;. This variable is deprecated in Qt 5.6.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="129b7e6b2ad1ed4754cd7e736044989893df92e3" translate="yes" xml:space="preserve">
          <source>An explanation of the DITA map is found at that site &lt;a href=&quot;http://docs.oasis-open.org/dita/v1.2/os/spec/langref/map.html&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52a80f271843832a2099cf65cdeb1b2b129490dc" translate="yes" xml:space="preserve">
          <source>An explicitly requested prefetch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b0d63d35038c7140ed3e76b9602ac6be55e909d" translate="yes" xml:space="preserve">
          <source>An expression that evaluates to a boolean value (i.e. type &lt;code&gt;xs:boolean&lt;/code&gt;) is that value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e8fce0a4817469ea8b2b764813832e4df315918" translate="yes" xml:space="preserve">
          <source>An expression that evaluates to a single node is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfdccc87c8e74cc04f57d518cc3dc46095f2bf48" translate="yes" xml:space="preserve">
          <source>An expression that evaluates to a string is &lt;code&gt;false&lt;/code&gt; if the string is empty and &lt;code&gt;true&lt;/code&gt; if the string is not empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="948f57d809e71174dbdb8e78ad7a9b6b4782bf92" translate="yes" xml:space="preserve">
          <source>An extension class is a regular &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;, with a constructor that takes a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; pointer. However, the extension class creation is delayed until the first extended property is accessed. The extension class is created and the target object is passed in as the parent. When the property on the original is accessed, the corresponding property on the extension object is used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4b7e4e302f6c9777c410503394914edf146097c" translate="yes" xml:space="preserve">
          <source>An extension plugin allows third-party providers to enhance the functionality of the virtual keyboard without recompiling it. Currently the extension plugin can provide keyboard layouts and custom input methods. Creating a plugin for Qt Virtual Keyboard is similar to the standard way of creating a Qt plugin:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f1dc8eea31d40d6cf281bea382e0746e7b653ed" translate="yes" xml:space="preserve">
          <source>An external script.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6622170a1d99e06c6043ccc04fac1a34c965804c" translate="yes" xml:space="preserve">
          <source>An hourglass or watch cursor, usually shown during operations that allow the user to interact with the application while they are performed in the background.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b9844006c2e7f16cf2f7b3ede81a9a4bf78a8d6" translate="yes" xml:space="preserve">
          <source>An hourglass or watch cursor, usually shown during operations that prevent the user from interacting with the application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70bbe316425e370ddbdd5d965724629ff151ed2d" translate="yes" xml:space="preserve">
          <source>An icon engine provides the rendering functions for a &lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt;. Each icon has a corresponding icon engine that is responsible for drawing the icon with a requested size, mode and state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81949a32aaec796c2bd457ce553016873fc6e45b" translate="yes" xml:space="preserve">
          <source>An icon is empty if it has neither a pixmap nor a filename.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="279dfd251aef55e073d329c4e428b82eb8fc2f6d" translate="yes" xml:space="preserve">
          <source>An icon that can be used to represent the widget in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df670eab010e2e129a84d89cccaed235537b64fd" translate="yes" xml:space="preserve">
          <source>An illegal UTF8 sequence occurred in the input</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84c080765e99308749a6d434f41291a825b5b0ed" translate="yes" xml:space="preserve">
          <source>An illegal escape sequence occurred in the input</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="661582191719d80012ef86d7fb77e585d5787dab" translate="yes" xml:space="preserve">
          <source>An image (JPG, GIF, PNG, and so on).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9706ad257e45e4269462ce15e2564aefa527e1a" translate="yes" xml:space="preserve">
          <source>An image format plugin can support three capabilities: reading (&lt;a href=&quot;qimageioplugin#Capability-enum&quot;&gt;CanRead&lt;/a&gt;), writing (&lt;a href=&quot;qimageioplugin#Capability-enum&quot;&gt;CanWrite&lt;/a&gt;) and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f5d8f15e17458c5ebd8e4bfc1c0e1869f7da5c2" translate="yes" xml:space="preserve">
          <source>An image is fully available and saved somewhere.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12b99c42153df00175aa29dcf67a320619c79522" translate="yes" xml:space="preserve">
          <source>An image of a push button in the Java style that shows the bounding rectangles of the elements is given below. Colors are used to separate the bounding rectangles in the image; they do not fill any other purpose. This is also true for similar images for the other widgets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="512d4d3f5654b489378044c7b9f09d14f507852e" translate="yes" xml:space="preserve">
          <source>An image of the widget in which the elements are outlined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09588363cd40a7a76d679caf609adc8a4db5653d" translate="yes" xml:space="preserve">
          <source>An image scanner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad66e6d2db97127dffaef2ed1adb96d9618edbc8" translate="yes" xml:space="preserve">
          <source>An image was captured but not yet fully processed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a980fb8845167847a26fd26a784656fd7e1060e" translate="yes" xml:space="preserve">
          <source>An image whose color will be used as a 1D texture to determine color over life. E.g. when the particle is halfway through its lifetime, it will have the color specified halfway across the image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79864d1619bc3aa526e462191890678e5c5aaf61" translate="yes" xml:space="preserve">
          <source>An image whose opacity will be used as a 1D texture to determine size over life.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aebff51b4b18331f9eccf6e4b62f1da115ee0af" translate="yes" xml:space="preserve">
          <source>An image with one translucent pixel is treated as fully translucent, even though it is mostly opaque. The same is true for an &lt;a href=&quot;qml-qtquick-borderimage&quot;&gt;BorderImage&lt;/a&gt; with transparent edges.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="883d133f92ef3301ccf6bcc35531c78b895bd338" translate="yes" xml:space="preserve">
          <source>An image's format can be retrieved using the &lt;a href=&quot;qimage#format&quot;&gt;format&lt;/a&gt;() function. Use the &lt;a href=&quot;qimage#convertToFormat&quot;&gt;convertToFormat&lt;/a&gt;() functions to convert an image into another format. The &lt;a href=&quot;qimage#allGray&quot;&gt;allGray&lt;/a&gt;() and &lt;a href=&quot;qimage#isGrayscale&quot;&gt;isGrayscale&lt;/a&gt;() functions tell whether a color image can safely be converted to a grayscale image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e730954de3e5decf61fd49f64cf18828537b353a" translate="yes" xml:space="preserve">
          <source>An image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7ad78dd648a4a6e2fd7afb01e34afd3cebe8893" translate="yes" xml:space="preserve">
          <source>An imaging device such as a display, printer, scanner or camera.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf0b52e811d5373afbeb5b0e65bbe88b259cea71" translate="yes" xml:space="preserve">
          <source>An immediate operation without transitions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76336ec31e8bf383212590470a51650a1f6eaf2a" translate="yes" xml:space="preserve">
          <source>An imperative value assignment is where a property value (either static value or binding expression) is assigned to a property from imperative JavaScript code. The syntax of an imperative value assignment is just the JavaScript assignment operator, as shown below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42e1b8ad4821928ef7aa24cdb00b00bc43fc408d" translate="yes" xml:space="preserve">
          <source>An implicitly shared class has control of its internal data. In any member functions that modify its data, it automatically detaches before modifying the data. Notice, however, the special case with container iterators; see &lt;a href=&quot;containers#implicit-sharing-iterator-problem&quot;&gt;Implicit sharing iterator problem&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cb6c58149ef8b137ec5ec9d5e713a5b6584838d" translate="yes" xml:space="preserve">
          <source>An import statement allows clients to tell the engine which modules, JavaScript resources and component directories are used within a QML document. The types which may be used within a document depends on which modules, resources and directories are imported by the document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a1d2086e72effaac80355d6a069803d07b013e7" translate="yes" xml:space="preserve">
          <source>An important difference between these two ways of creating replicas is the behavior before the replica is initialized. Since a dynamic replica only gets a metaObject after initialization, it basically has no API before initialization. No properties, and no signals to connect slots to. Due to the compile-time creation of the metaObject for compiled replicas, their API is available when the replica is instantiated. You can even provide default values for properties in the template file, which will be used until the replica is initialized with current values from the source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="667c864a29d75c46cccc5447726c805466d58772" translate="yes" xml:space="preserve">
          <source>An improved grid view is shown below. The delegate is visually improved and is moved into a separate &lt;code&gt;contactDelegate&lt;/code&gt; component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af9cc9a10b230a9e292c4750b8a14247b0b24348" translate="yes" xml:space="preserve">
          <source>An improved list view is shown below. The delegate is visually improved and is moved into a separate &lt;code&gt;contactDelegate&lt;/code&gt; component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="906bd980089446336f156e67f47faf82925f85f4" translate="yes" xml:space="preserve">
          <source>An in-process server is usually smaller and has faster startup time. The communication between client and server is done directly through virtual function calls and does not introduce the overhead required for remote procedure calls. However, if the server crashes the client application is likely to crash as well, and not every functionality is available for in-process servers (i.e. register in the COM's running-object-table).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d0673ccbf68a4b7d26bb22f7d6544d14e4c7875" translate="yes" xml:space="preserve">
          <source>An indeterminate progress indicator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ef059e9e8c45aa70015fb627577e711bbb55d1a" translate="yes" xml:space="preserve">
          <source>An indicator that a tab is partially scrolled out on the left side of the visible tab bar when there are many tabs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3e507e784e12f9b35ea9c76000e658d307a1f84" translate="yes" xml:space="preserve">
          <source>An indicator that a tab is partially scrolled out on the right side of the visible tab bar when there are many tabs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ba19361045831bed56a663c32253087fdd19c3f" translate="yes" xml:space="preserve">
          <source>An indicator that displays a colorized &lt;a href=&quot;qpicture&quot;&gt;QPicture&lt;/a&gt; icon. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e59ee8ceb0c9547999df24e7e0238e75c3547016" translate="yes" xml:space="preserve">
          <source>An indicator that displays a colorized QPicture icon</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f425b10b238801e511957c67fb89ff45dc9bbf19" translate="yes" xml:space="preserve">
          <source>An indicator that displays active or inactive states</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4316eaa6b8d3e175a6934a9db38b666de70ca92a" translate="yes" xml:space="preserve">
          <source>An indicator that displays active or inactive states. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b036ec0b4c00da7380b5b709ca2e1e91a3b406a" translate="yes" xml:space="preserve">
          <source>An indicator that is drawn to show where an item in an item view is about to be dropped during a drag-and-drop operation in an item view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d96495bd7b564b7bea8e0dd04c80f45ea95b4b9" translate="yes" xml:space="preserve">
          <source>An indicator that represents a current value or item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7054d0652f76d3ea4f8553b1f4bed4e7f49e9cf6" translate="yes" xml:space="preserve">
          <source>An individual item's position is specified in terms of its parent's coordinate system. This means that reading x,y values from non-sibling items may require conversion to convert them into the same coordinate system. Scene coordinates are often used as the intermediate coordinate system when this occurs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58a275b124129315a1d13e08084acf2e85fe3860" translate="yes" xml:space="preserve">
          <source>An information icon is shown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18ebf93a9be4b569a6a10d0c98e106ffdeb269e1" translate="yes" xml:space="preserve">
          <source>An informative name of the plugin provider. Used mainly for diagnostics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d4afa33b351e113d6f75be364664a10c29c039b" translate="yes" xml:space="preserve">
          <source>An initial value that is used when the status is not defined (Default)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="783e6b13504fd5a1b0a632d35a8b67fe0a7c677f" translate="yes" xml:space="preserve">
          <source>An initialization value assignment may be combined with a property definition in an object declaration, if desired. In that case, the syntax of the property definition becomes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70c5d2a0342afbb39fa7174e4954234931095701" translate="yes" xml:space="preserve">
          <source>An input method is being used (&lt;a href=&quot;qinputmethodevent&quot;&gt;QInputMethodEvent&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4870c92cdb40bbb54c787edb2fa90bc2d438c94d" translate="yes" xml:space="preserve">
          <source>An input method is initialized in &lt;a href=&quot;qml-qtquick-virtualkeyboard-inputmethod#setInputMode-method&quot;&gt;InputMethod::setInputMode&lt;/a&gt;() method with a locale and input mode. After setting the locale and input mode, the input method should be ready for use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7155e0aa7dc6d6046eccf422c561efc7a572e983" translate="yes" xml:space="preserve">
          <source>An input output error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19e97f04f755908949215a89a283657b5e7ad4a6" translate="yes" xml:space="preserve">
          <source>An instance of &lt;a href=&quot;qcoreapplication&quot;&gt;QCoreApplication&lt;/a&gt; must exist before &lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt; can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="087f43b5feddc22f251b8d2e3f9eeca41187d231" translate="yes" xml:space="preserve">
          <source>An instance of &lt;a href=&quot;qmediaobject&quot;&gt;QMediaObject&lt;/a&gt; (or its derived classes) can report any changes in availability via this control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eeca098abb94a9be476969d57c1eed04afea30d" translate="yes" xml:space="preserve">
          <source>An instance of &lt;a href=&quot;qml-qt3d-animation-blendedclipanimator&quot;&gt;BlendedClipAnimator&lt;/a&gt; can be aggregated by an Entity to add the ability to play back animation clips and to apply the calculated animation values to properties of QObjects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eacb63593054ed8145fd162eec808238881a982" translate="yes" xml:space="preserve">
          <source>An instance of &lt;a href=&quot;qml-qt3d-animation-clipanimator&quot;&gt;ClipAnimator&lt;/a&gt; can be aggregated by an Entity to add the ability to play back animation clips and to apply the calculated animation values to properties of QObjects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78c7cbdbcbf44afc47c5dbd0e25ad4b9c9c6a279" translate="yes" xml:space="preserve">
          <source>An instance of &lt;a href=&quot;qml-qtaudioengine-audiocategory&quot;&gt;AudioCategory&lt;/a&gt; can be accessed through &lt;a href=&quot;qml-qtaudioengine-audioengine#categories-prop&quot;&gt;AudioEngine.categories&lt;/a&gt; with its unique name and must be defined inside &lt;a href=&quot;qml-qtaudioengine-audioengine&quot;&gt;AudioEngine&lt;/a&gt; or be added to it using &lt;a href=&quot;qml-qtaudioengine-audioengine#addAudioCategory-method&quot;&gt;AudioEngine.addAudioCategory()&lt;/a&gt; if &lt;a href=&quot;qml-qtaudioengine-audiocategory&quot;&gt;AudioCategory&lt;/a&gt; is created dynamically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8307d7efb9bea45bd70e8fdb03d07524aed01e78" translate="yes" xml:space="preserve">
          <source>An instance of &lt;a href=&quot;qsgmaterialshader&quot;&gt;QSGMaterialShader&lt;/a&gt; is never created explicitly by the user, it will be created on demand by the scene graph through &lt;a href=&quot;qsgmaterial#createShader&quot;&gt;QSGMaterial::createShader&lt;/a&gt;(). The scene graph will make sure that there is only one instance of each shader implementation through a scene graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84fa76c934ee5cd73d5ddccd0108eabcb61f4f61" translate="yes" xml:space="preserve">
          <source>An instance of &lt;a href=&quot;qt3danimation-qblendedclipanimator&quot;&gt;QBlendedClipAnimator&lt;/a&gt; can be aggregated by a QEntity to add the ability to play back animation clips and to apply the calculated animation values to properties of QObjects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1c5f846db6103f1ed65edb94cd3c583f47158da" translate="yes" xml:space="preserve">
          <source>An instance of &lt;a href=&quot;qt3danimation-qclipanimator&quot;&gt;QClipAnimator&lt;/a&gt; can be aggregated by a QEntity to add the ability to play back animation clips and to apply the calculated animation values to properties of QObjects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42a8a57d2698ae62340c6be915f3d7863e14ac64" translate="yes" xml:space="preserve">
          <source>An instance of &lt;a href=&quot;qxmlitem&quot;&gt;QXmlItem&lt;/a&gt; will be left dangling if the &lt;a href=&quot;qabstractxmlnodemodel&quot;&gt;XML node model&lt;/a&gt; it refers to is deleted, if it is a &lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dad3cfd6a48c462e6b75f007c3cce3dd6a903dba" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;xs:time&lt;/code&gt; can't be represented correctly as an instance of QVariant::Time, unless the &lt;code&gt;xs:time&lt;/code&gt; is a UTC time. This is because xs:time has a zone offset (0 for UTC) in addition to the time value, which the &lt;a href=&quot;qtime&quot;&gt;QTime&lt;/a&gt; in QVariant::Time does not have. This means that if an XQuery tries to return an atomic value of type &lt;code&gt;xs:time&lt;/code&gt;, an invalid &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; will be returned. A query can return an atomic value of type xs:time by either converting it to an &lt;code&gt;xs:dateTime&lt;/code&gt; with an arbitrary date, or to an &lt;code&gt;xs:string&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d700658f34f84f4198741d0b5f461838a0002133" translate="yes" xml:space="preserve">
          <source>An instance of a &lt;a href=&quot;qlibrary&quot;&gt;QLibrary&lt;/a&gt; object operates on a single shared object file (which we call a &quot;library&quot;, but is also known as a &quot;DLL&quot;). A &lt;a href=&quot;qlibrary&quot;&gt;QLibrary&lt;/a&gt; provides access to the functionality in the library in a platform independent way. You can either pass a file name in the constructor, or set it explicitly with &lt;a href=&quot;qlibrary#fileName-prop&quot;&gt;setFileName&lt;/a&gt;(). When loading the library, &lt;a href=&quot;qlibrary&quot;&gt;QLibrary&lt;/a&gt; searches in all the system-specific library locations (e.g. &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt; on Unix), unless the file name has an absolute path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b6c49f76da94ed83be6d0b080d71ee90f250672" translate="yes" xml:space="preserve">
          <source>An instance of a &lt;a href=&quot;qml-qtquick-virtualkeyboard-selectionlistmodel&quot;&gt;SelectionListModel&lt;/a&gt; cannot be created directly. Instead, the &lt;a href=&quot;qml-qtquick-virtualkeyboard-inputengine&quot;&gt;InputEngine&lt;/a&gt; manages the instances and provides access to the model by &lt;a href=&quot;qml-qtquick-virtualkeyboard-inputengine#wordCandidateListModel-prop&quot;&gt;InputEngine::wordCandidateListModel&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8a92a51dc2d9596bedb0d3cf4fc458bd963c0b3" translate="yes" xml:space="preserve">
          <source>An instance of a &lt;a href=&quot;qpluginloader&quot;&gt;QPluginLoader&lt;/a&gt; object operates on a single shared library file, which we call a plugin. It provides access to the functionality in the plugin in a platform-independent way. To specify which plugin to load, either pass a file name in the constructor or set it with &lt;a href=&quot;qpluginloader#fileName-prop&quot;&gt;setFileName&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89ab5bc0d3e046239aa9c52546bc8d091398dd21" translate="yes" xml:space="preserve">
          <source>An instance of a type having this attribute can be safely moved by memcpy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2731480a511d532021531c600c9d921c68b537b4" translate="yes" xml:space="preserve">
          <source>An instance of an anonymous</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db8c408a8e5801dba945b8dcc541b8f1de3c78ee" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;a href=&quot;qabstracttextdocumentlayout&quot;&gt;QAbstractTextDocumentLayout&lt;/a&gt; subclass can be installed on a &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt; object with the &lt;a href=&quot;qtextdocument#setDocumentLayout&quot;&gt;setDocumentLayout()&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6b0c68bdd780c6a01cfdbfc89608409dfbef38e" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;a href=&quot;qstyleoptionframe&quot;&gt;QStyleOptionFrame&lt;/a&gt; class has &lt;a href=&quot;qstyleoption#type-var&quot;&gt;type&lt;/a&gt;&lt;a href=&quot;qstyleoption#OptionType-enum&quot;&gt;SO_Frame&lt;/a&gt; and &lt;a href=&quot;qstyleoption#version-var&quot;&gt;version&lt;/a&gt; 3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46ea79e0edfd20baf7ad612af60ebfd1a04c4fbb" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;a href=&quot;qstyleoptionprogressbar&quot;&gt;QStyleOptionProgressBar&lt;/a&gt; class has type &lt;a href=&quot;qstyleoption#OptionType-enum&quot;&gt;SO_ProgressBar&lt;/a&gt; and version 2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ac35aa7c52ca374782aa9231ec7f9bc46eb00bf" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;a href=&quot;qstyleoptiontab&quot;&gt;QStyleOptionTab&lt;/a&gt; class has &lt;a href=&quot;qstyleoption#type-var&quot;&gt;type&lt;/a&gt;&lt;a href=&quot;qstyleoption#OptionType-enum&quot;&gt;SO_Tab&lt;/a&gt; and &lt;a href=&quot;qstyleoption#version-var&quot;&gt;version&lt;/a&gt; 3. The type is used internally by &lt;a href=&quot;qstyleoption&quot;&gt;QStyleOption&lt;/a&gt;, its subclasses, and &lt;a href=&quot;qstyleoption#qstyleoption_cast&quot;&gt;qstyleoption_cast&lt;/a&gt;() to determine the type of style option. In general you do not need to worry about this unless you want to create your own &lt;a href=&quot;qstyleoption&quot;&gt;QStyleOption&lt;/a&gt; subclass and your own styles. The version is used by &lt;a href=&quot;qstyleoption&quot;&gt;QStyleOption&lt;/a&gt; subclasses to implement extensions without breaking compatibility. If you use &lt;a href=&quot;qstyleoption#qstyleoption_cast&quot;&gt;qstyleoption_cast&lt;/a&gt;(), you normally do not need to check it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bb6929723248af79f1f6f2d0bfbc4db47fe33b6" translate="yes" xml:space="preserve">
          <source>An instance of the delegate will be created for every logical particle, and moved along with it. As an alternative to using delegate, you can create Item instances yourself and hand them to the &lt;a href=&quot;qml-qtquick-particles-itemparticle&quot;&gt;ItemParticle&lt;/a&gt; to move using the &lt;a href=&quot;qml-qtquick-particles-itemparticle#take-method&quot;&gt;take&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a93f6ececa5f8dc818b8265e839dad3d8162b02" translate="yes" xml:space="preserve">
          <source>An instance of the footer component is created for each view. The footer is positioned at the end of the view, after any items. The default &lt;a href=&quot;qquickitem#z-prop&quot;&gt;stacking order&lt;/a&gt; of the footer is &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c604c47800cf879eb4bebb03ec99abd3e4873feb" translate="yes" xml:space="preserve">
          <source>An instance of the header component is created for each view. The header is positioned at the beginning of the view, before any items. The default &lt;a href=&quot;qquickitem#z-prop&quot;&gt;stacking order&lt;/a&gt; of the header is &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="672483464c348d079a9003fb475e4e7669edce32" translate="yes" xml:space="preserve">
          <source>An instance of the highlight component is created for each list. The geometry of the resulting component instance is managed by the list so as to stay with the current item, unless the &lt;a href=&quot;qml-qtquick-listview#highlightFollowsCurrentItem-prop&quot;&gt;highlightFollowsCurrentItem&lt;/a&gt; property is false. The default &lt;a href=&quot;qquickitem#z-prop&quot;&gt;stacking order&lt;/a&gt; of the highlight item is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70573294983188fefd0be959caef7b5f558e25bc" translate="yes" xml:space="preserve">
          <source>An instance of the highlight component is created for each view. The geometry of the resulting component instance will be managed by the view so as to stay with the current item, unless the &lt;a href=&quot;qml-qtquick-gridview#highlightFollowsCurrentItem-prop&quot;&gt;highlightFollowsCurrentItem&lt;/a&gt; property is false. The default &lt;a href=&quot;qquickitem#z-prop&quot;&gt;stacking order&lt;/a&gt; of the highlight item is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4982903151940988c5290a4ebd9d0fcd62e14d9d" translate="yes" xml:space="preserve">
          <source>An instance of the highlight component will be created for each view. The geometry of the resultant component instance will be managed by the view so as to stay with the current item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dff055b4e589df44cc375863d64a25fd118df342" translate="yes" xml:space="preserve">
          <source>An instance of the meta object cannot be created. An error message with the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a77e7bd03eb521967232c7c8e1afc4d8aac0e1e" translate="yes" xml:space="preserve">
          <source>An instance of this class, representing the current state of the active paint engine, is passed as argument to the &lt;a href=&quot;qpaintengine#updateState&quot;&gt;QPaintEngine::updateState&lt;/a&gt;() function. The only situation in which you will have to use this class directly is when implementing your own paint engine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5695bacfb963290c6d101f7cb91ae8231b252c64" translate="yes" xml:space="preserve">
          <source>An instance of this component will be instantiated &lt;code&gt;count - 1&lt;/code&gt; times, as long as count is greater than than &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12814384acf3eb12853f307fbe9ab687cfd2c702" translate="yes" xml:space="preserve">
          <source>An int indicating the popup delay in milliseconds for menus attached to tool buttons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4174c8c26c3509678d1896413d2b216ea73c3c61" translate="yes" xml:space="preserve">
          <source>An integer can be used as a model that contains a certain number of types. In this case, the model does not have any data roles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b46b493159eaa91f8a4eb366016e068533a5ccf3" translate="yes" xml:space="preserve">
          <source>An integer defining the version number of the plugin. If there are two or more plugins available of the same &lt;code&gt;Name&lt;/code&gt;, the one with greatest version number is preferred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="465cb5533ac3f7b00321b28fbf9933c4a2aa0f2d" translate="yes" xml:space="preserve">
          <source>An integer describing the dots per inch for this printer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbe0de7b7fbdae8cd181a4a22b8d104c4645336d" translate="yes" xml:space="preserve">
          <source>An integer indicating the opacity for the tip label, 0 is completely transparent, 255 is completely opaque.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
