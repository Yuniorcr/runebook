<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="pony">
    <body>
      <group id="pony">
        <trans-unit id="79151a7b04f307c5788fdc4ef26e00438b781088" translate="yes" xml:space="preserve">
          <source>String.reverse()</source>
          <target state="translated">String.reverse()</target>
        </trans-unit>
        <trans-unit id="fe6cac56f17f94a377f8abc642a903469331e9f6" translate="yes" xml:space="preserve">
          <source>String.reverse_in_place()</source>
          <target state="translated">String.reverse_in_place()</target>
        </trans-unit>
        <trans-unit id="a45d71f9acc06496d0b76e699d8c1a43fbab28e5" translate="yes" xml:space="preserve">
          <source>String.rfind()</source>
          <target state="translated">String.rfind()</target>
        </trans-unit>
        <trans-unit id="a6eef9ca33ae99339e0bddf162192dc3201da41d" translate="yes" xml:space="preserve">
          <source>String.rstrip()</source>
          <target state="translated">String.rstrip()</target>
        </trans-unit>
        <trans-unit id="6224273d8b9afc610a8c49fe0df78d88391b3d0a" translate="yes" xml:space="preserve">
          <source>String.runes()</source>
          <target state="translated">String.runes()</target>
        </trans-unit>
        <trans-unit id="61c87200032ddf8625c9803559832a896bc2aa08" translate="yes" xml:space="preserve">
          <source>String.shift()</source>
          <target state="translated">String.shift()</target>
        </trans-unit>
        <trans-unit id="3308bd6a1a346eebbee47caf830abfa39baf60c8" translate="yes" xml:space="preserve">
          <source>String.size()</source>
          <target state="translated">String.size()</target>
        </trans-unit>
        <trans-unit id="77dbfc43e170254ecb9cf302f4d6882c5e3c1bd8" translate="yes" xml:space="preserve">
          <source>String.space()</source>
          <target state="translated">String.space()</target>
        </trans-unit>
        <trans-unit id="ac4175c194775f4bc4a29cc540d6eb829722928a" translate="yes" xml:space="preserve">
          <source>String.split()</source>
          <target state="translated">String.split()</target>
        </trans-unit>
        <trans-unit id="04e7f469007a8cf7dc8b768cedc8dfa7a97f835d" translate="yes" xml:space="preserve">
          <source>String.split_by()</source>
          <target state="translated">String.split_by()</target>
        </trans-unit>
        <trans-unit id="6c98f2001fa4fe49e7745670cbd77d79eef9c21d" translate="yes" xml:space="preserve">
          <source>String.string()</source>
          <target state="translated">String.string()</target>
        </trans-unit>
        <trans-unit id="91f756cba449a2a5a15c517bd096273577d4139f" translate="yes" xml:space="preserve">
          <source>String.strip()</source>
          <target state="translated">String.strip()</target>
        </trans-unit>
        <trans-unit id="778c766f0211155295dacfdcfe2cfd89e1516b97" translate="yes" xml:space="preserve">
          <source>String.substring()</source>
          <target state="translated">String.substring()</target>
        </trans-unit>
        <trans-unit id="47188c46f266bae1dc38a2772bdf6d5d6aa70be6" translate="yes" xml:space="preserve">
          <source>String.trim()</source>
          <target state="translated">String.trim()</target>
        </trans-unit>
        <trans-unit id="f0c28f47411f6eb02be2ccfde35c5014798a6edc" translate="yes" xml:space="preserve">
          <source>String.trim_in_place()</source>
          <target state="translated">String.trim_in_place()</target>
        </trans-unit>
        <trans-unit id="69fba16ec496082fe31ca6a620e11469dee14ad3" translate="yes" xml:space="preserve">
          <source>String.truncate()</source>
          <target state="translated">String.truncate()</target>
        </trans-unit>
        <trans-unit id="2a6ddf596d4b5c53bfefd2f0878917908b42adea" translate="yes" xml:space="preserve">
          <source>String.u128()</source>
          <target state="translated">String.u128()</target>
        </trans-unit>
        <trans-unit id="91bf977c5af8fd48b037bffcbdc02f49af269eef" translate="yes" xml:space="preserve">
          <source>String.u16()</source>
          <target state="translated">String.u16()</target>
        </trans-unit>
        <trans-unit id="4693fe12740e74aab02d923be03c86389f4be5b0" translate="yes" xml:space="preserve">
          <source>String.u32()</source>
          <target state="translated">String.u32()</target>
        </trans-unit>
        <trans-unit id="7d9d6ef6338efa53230e3bf9d9e009a3d7064ad9" translate="yes" xml:space="preserve">
          <source>String.u64()</source>
          <target state="translated">String.u64()</target>
        </trans-unit>
        <trans-unit id="972819649c23156171f5476937dab7798e84fa8e" translate="yes" xml:space="preserve">
          <source>String.u8()</source>
          <target state="translated">String.u8()</target>
        </trans-unit>
        <trans-unit id="7b1586291b4ead67a87a9eaa967bf1d8c53b675a" translate="yes" xml:space="preserve">
          <source>String.ulong()</source>
          <target state="translated">String.ulong()</target>
        </trans-unit>
        <trans-unit id="1d4a9a20958ace39f56b9ea12b0ec673f4ec941d" translate="yes" xml:space="preserve">
          <source>String.unchop()</source>
          <target state="translated">String.unchop()</target>
        </trans-unit>
        <trans-unit id="0f8bb066712917c967fcc61fa4c012216fd19fe6" translate="yes" xml:space="preserve">
          <source>String.unshift()</source>
          <target state="translated">String.unshift()</target>
        </trans-unit>
        <trans-unit id="9b9ccd597ba9765bf9c88f9576959f1cd095f325" translate="yes" xml:space="preserve">
          <source>String.update()</source>
          <target state="translated">String.update()</target>
        </trans-unit>
        <trans-unit id="3e2d3c08ee54e025152a48893fb2a0bb463b41f5" translate="yes" xml:space="preserve">
          <source>String.update_offset()</source>
          <target state="translated">String.update_offset()</target>
        </trans-unit>
        <trans-unit id="d9e6556fa30d818286f08eaa6b14a1440b621b45" translate="yes" xml:space="preserve">
          <source>String.upper()</source>
          <target state="translated">String.upper()</target>
        </trans-unit>
        <trans-unit id="868656788b76db8bc5346b557aa7f42e33e026fe" translate="yes" xml:space="preserve">
          <source>String.upper_in_place()</source>
          <target state="translated">String.upper_in_place()</target>
        </trans-unit>
        <trans-unit id="8a31f32f2ff02938204f3d1b3fae8701e0c7d406" translate="yes" xml:space="preserve">
          <source>String.usize()</source>
          <target state="translated">String.usize()</target>
        </trans-unit>
        <trans-unit id="92f21c8fb48c5844ee2c0930c0289e609f93913e" translate="yes" xml:space="preserve">
          <source>String.utf32()</source>
          <target state="translated">String.utf32()</target>
        </trans-unit>
        <trans-unit id="23ecab7c739b503de2c1dcec0d4ae2938d3f82a8" translate="yes" xml:space="preserve">
          <source>String.values()</source>
          <target state="translated">String.values()</target>
        </trans-unit>
        <trans-unit id="c3f5408bdcad77088416a1f516e92d8fbe61e78a" translate="yes" xml:space="preserve">
          <source>StringArgument</source>
          <target state="translated">StringArgument</target>
        </trans-unit>
        <trans-unit id="a9b57ed1b30954c26437f6a37a7c6b7563bd6d4b" translate="yes" xml:space="preserve">
          <source>StringArgument.create()</source>
          <target state="translated">StringArgument.create()</target>
        </trans-unit>
        <trans-unit id="618542de94c4410982aa20b43d581738b6dce68a" translate="yes" xml:space="preserve">
          <source>StringArgument.eq()</source>
          <target state="translated">StringArgument.eq()</target>
        </trans-unit>
        <trans-unit id="def456e78263c2a8d14eea9ce984fafc7fa8149f" translate="yes" xml:space="preserve">
          <source>StringArgument.ne()</source>
          <target state="translated">StringArgument.ne()</target>
        </trans-unit>
        <trans-unit id="cff3c5e68fa50412a10d2e0993c5c385e04d4f34" translate="yes" xml:space="preserve">
          <source>StringBytes</source>
          <target state="translated">StringBytes</target>
        </trans-unit>
        <trans-unit id="89de6378d0da46edba8917d2ccb1930a25de3334" translate="yes" xml:space="preserve">
          <source>StringBytes.create()</source>
          <target state="translated">StringBytes.create()</target>
        </trans-unit>
        <trans-unit id="7bd4f26b81cd313566254c6721de4451a8ae4a4d" translate="yes" xml:space="preserve">
          <source>StringBytes.has_next()</source>
          <target state="translated">StringBytes.has_next()</target>
        </trans-unit>
        <trans-unit id="8a6c78600f979c93451d2134d0feef0eaf38febd" translate="yes" xml:space="preserve">
          <source>StringBytes.next()</source>
          <target state="translated">StringBytes.next()</target>
        </trans-unit>
        <trans-unit id="ad76744595f55b353ab9f7cfe5201da8b327c9a2" translate="yes" xml:space="preserve">
          <source>StringLogger</source>
          <target state="translated">StringLogger</target>
        </trans-unit>
        <trans-unit id="30daadb5957c72421dcc1ea027d10cfb11a10d07" translate="yes" xml:space="preserve">
          <source>StringLogger.apply()</source>
          <target state="translated">StringLogger.apply()</target>
        </trans-unit>
        <trans-unit id="ce8a74dc7adf4da1c4c31282632a0073b3ac7a6c" translate="yes" xml:space="preserve">
          <source>StringLogger.create()</source>
          <target state="translated">StringLogger.create()</target>
        </trans-unit>
        <trans-unit id="2b17941b159a3c1e5ee7dae87a8f880023efcfb0" translate="yes" xml:space="preserve">
          <source>StringLogger.eq()</source>
          <target state="translated">StringLogger.eq()</target>
        </trans-unit>
        <trans-unit id="a7186d1055da2b979461c57836396155787ae37b" translate="yes" xml:space="preserve">
          <source>StringLogger.ne()</source>
          <target state="translated">StringLogger.ne()</target>
        </trans-unit>
        <trans-unit id="89d982f4b6b8e3bf0b0c56c3a9f48cb7a4caea0a" translate="yes" xml:space="preserve">
          <source>StringRunes</source>
          <target state="translated">StringRunes</target>
        </trans-unit>
        <trans-unit id="607b1d38253064cb2747a853d612ea9899a9c0f8" translate="yes" xml:space="preserve">
          <source>StringRunes.create()</source>
          <target state="translated">StringRunes.create()</target>
        </trans-unit>
        <trans-unit id="9e84b8a867fca0f26a05efc5bfdaaa8ffee3f254" translate="yes" xml:space="preserve">
          <source>StringRunes.has_next()</source>
          <target state="translated">StringRunes.has_next()</target>
        </trans-unit>
        <trans-unit id="af8405a4c18359bf5e84320a6e796708d8c9ffbe" translate="yes" xml:space="preserve">
          <source>StringRunes.next()</source>
          <target state="translated">StringRunes.next()</target>
        </trans-unit>
        <trans-unit id="985cb1b3fce04f89444254eb8e121b06556875a8" translate="yes" xml:space="preserve">
          <source>Stringable</source>
          <target state="translated">Stringable</target>
        </trans-unit>
        <trans-unit id="a5f7cbeab9acb9fe0e8c008f6f7018b55028d043" translate="yes" xml:space="preserve">
          <source>Stringable.string()</source>
          <target state="translated">Stringable.string()</target>
        </trans-unit>
        <trans-unit id="2182c5c49385d885adac1b2e808842ff597d1477" translate="yes" xml:space="preserve">
          <source>Strings don't specify an encoding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c9413f865a7625acc946b7af1f011429f67d59d" translate="yes" xml:space="preserve">
          <source>Strings to embedded in text to specify colours. These are copies of the strings defined in packages/term. They are duplicated here to avoid a dependency.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfcb870db7bf8d9f6416592e47e72ca1d44e61d5" translate="yes" xml:space="preserve">
          <source>Strips accepted options from the copied array of command line arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59e23100b8192f71da782a8a6b5479c930a8c3b2" translate="yes" xml:space="preserve">
          <source>Subtract &lt;code&gt;y&lt;/code&gt; from this integer and return the result and a flag indicating overflow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ee15c0fcc54549d36a91b79d576091ad052efb3" translate="yes" xml:space="preserve">
          <source>Subtract y from this number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a29b520802eceb90249e5301918d948c887c58d" translate="yes" xml:space="preserve">
          <source>Supports &lt;code&gt;min&lt;/code&gt; being smaller than &lt;code&gt;max&lt;/code&gt; with negative &lt;code&gt;inc&lt;/code&gt; but only for signed integer types and floats:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70d0135af5ee3980ed5dd84e6cb39c1bac7761e6" translate="yes" xml:space="preserve">
          <source>Swap foreground and background colour.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffd2b8def0acb34dbc4ac07ae8b9b1deba0eec22" translate="yes" xml:space="preserve">
          <source>Swap the element at index i with the element at index j. If either i or j are out of bounds, an error is raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b426dc8fb426495077d0a0e820fa488c8a25137" translate="yes" xml:space="preserve">
          <source>Swap the previous character with the current one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79142777bfd0280687982d607c2f30bd31a14f0a" translate="yes" xml:space="preserve">
          <source>Sync the file contents to physical storage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d7fe852d10391cd19b90020e11eb4eb9af05ad4" translate="yes" xml:space="preserve">
          <source>Synchronous benchmarks must provide this trait. The &lt;code&gt;apply&lt;/code&gt; method defines a single iteration in a sample. Setup and Teardown are defined by the &lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt; methods respectively. The &lt;code&gt;before&lt;/code&gt; method runs before a sample of benchmarks and &lt;code&gt;after&lt;/code&gt; runs after the all iterations in the sample have completed. If your benchmark requires setup and/or teardown to occur beween each iteration of the benchmark, then you can use &lt;code&gt;before_iteration&lt;/code&gt; and &lt;code&gt;after_iteration&lt;/code&gt; methods respectively that run before/after each iteration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de4af2ff6c0bd31526ce7f5f8ca08783d0cc5ed7" translate="yes" xml:space="preserve">
          <source>SyntaxError</source>
          <target state="translated">SyntaxError</target>
        </trans-unit>
        <trans-unit id="ed83ee5ba12024f2502381c9cbcfb452d4549c17" translate="yes" xml:space="preserve">
          <source>SyntaxError summarizes a syntax error in a given parsed command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e108eb706c99df5dbe73aa41fef774f54545eaf" translate="yes" xml:space="preserve">
          <source>SyntaxError.create()</source>
          <target state="translated">SyntaxError.create()</target>
        </trans-unit>
        <trans-unit id="a6fb414296db9cf913726a9532161c1174232eb6" translate="yes" xml:space="preserve">
          <source>SyntaxError.string()</source>
          <target state="translated">SyntaxError.string()</target>
        </trans-unit>
        <trans-unit id="5ac2870b2750dfec4cc427945caef2f0231d84c2" translate="yes" xml:space="preserve">
          <source>SyntaxError.token()</source>
          <target state="translated">SyntaxError.token()</target>
        </trans-unit>
        <trans-unit id="c2c53d66948214258a26ca9ca845d7ac0c17f8e7" translate="yes" xml:space="preserve">
          <source>T</source>
          <target state="translated">T</target>
        </trans-unit>
        <trans-unit id="d2cc276e53a75e7afda948660f015f7b9303f66f" translate="yes" xml:space="preserve">
          <source>T ?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e646cce1b394ebfbdb4a57b38bc6be71e89a3236" translate="yes" xml:space="preserve">
          <source>TCPAuth</source>
          <target state="translated">TCPAuth</target>
        </trans-unit>
        <trans-unit id="f8b4952f3bd9e0e6cb31318ee18f47f29b49a107" translate="yes" xml:space="preserve">
          <source>TCPAuth.create()</source>
          <target state="translated">TCPAuth.create()</target>
        </trans-unit>
        <trans-unit id="56d1826397ccd01bf31c4c0a7f2633a693967cef" translate="yes" xml:space="preserve">
          <source>TCPAuth.eq()</source>
          <target state="translated">TCPAuth.eq()</target>
        </trans-unit>
        <trans-unit id="6e8e29641d3a925c5d53ba6f4782a4d0384cdaa5" translate="yes" xml:space="preserve">
          <source>TCPAuth.ne()</source>
          <target state="translated">TCPAuth.ne()</target>
        </trans-unit>
        <trans-unit id="52e7726cbd90c8b18ba87f7f25015482186fecf7" translate="yes" xml:space="preserve">
          <source>TCPConnectAuth</source>
          <target state="translated">TCPConnectAuth</target>
        </trans-unit>
        <trans-unit id="0ddeca8fc26ae850e439afc7cf4eb21040725451" translate="yes" xml:space="preserve">
          <source>TCPConnectAuth.create()</source>
          <target state="translated">TCPConnectAuth.create()</target>
        </trans-unit>
        <trans-unit id="cb46cd5cef537012ae2cb6971a3b2e574513f40e" translate="yes" xml:space="preserve">
          <source>TCPConnectAuth.eq()</source>
          <target state="translated">TCPConnectAuth.eq()</target>
        </trans-unit>
        <trans-unit id="37cd58cb6255902a394101b5e2fd9ec810f6cca9" translate="yes" xml:space="preserve">
          <source>TCPConnectAuth.ne()</source>
          <target state="translated">TCPConnectAuth.ne()</target>
        </trans-unit>
        <trans-unit id="fac441e812b512ab739f5a0ec245bec6500b53a5" translate="yes" xml:space="preserve">
          <source>TCPConnection</source>
          <target state="translated">TCPConnection</target>
        </trans-unit>
        <trans-unit id="60105be3fd49d3a254680e7aefe0a7b8623b65a9" translate="yes" xml:space="preserve">
          <source>TCPConnection.Read()</source>
          <target state="translated">TCPConnection.Read()</target>
        </trans-unit>
        <trans-unit id="4e73da584734d087f5acf475fe27dd818c9c01e3" translate="yes" xml:space="preserve">
          <source>TCPConnection.Write()</source>
          <target state="translated">TCPConnection.Write()</target>
        </trans-unit>
        <trans-unit id="d97cd505a93e7ae59ca8d36277d1c2b67d30fb46" translate="yes" xml:space="preserve">
          <source>TCPConnection._accept()</source>
          <target state="translated">TCPConnection._accept()</target>
        </trans-unit>
        <trans-unit id="40f09c708c68050c0a25d8c4eebc88aeda99fe4d" translate="yes" xml:space="preserve">
          <source>TCPConnection._apply_backpressure()</source>
          <target state="translated">TCPConnection._apply_backpressure()</target>
        </trans-unit>
        <trans-unit id="0b99d4894f05290437b38c548129182dc985aa3c" translate="yes" xml:space="preserve">
          <source>TCPConnection._close()</source>
          <target state="translated">TCPConnection._close()</target>
        </trans-unit>
        <trans-unit id="2a8391b58e868d8ee1d62d1a0864bf100972b71f" translate="yes" xml:space="preserve">
          <source>TCPConnection._complete_reads()</source>
          <target state="translated">TCPConnection._complete_reads()</target>
        </trans-unit>
        <trans-unit id="ab756b0133938686111b9e9e9bc3f35030da5201" translate="yes" xml:space="preserve">
          <source>TCPConnection._complete_writes()</source>
          <target state="translated">TCPConnection._complete_writes()</target>
        </trans-unit>
        <trans-unit id="971cdd7c636a24826abf05f6041664654974bbf0" translate="yes" xml:space="preserve">
          <source>TCPConnection._event_notify()</source>
          <target state="translated">TCPConnection._event_notify()</target>
        </trans-unit>
        <trans-unit id="d1c9876f20fdc73db7e3569644f4038266634212" translate="yes" xml:space="preserve">
          <source>TCPConnection._is_sock_connected()</source>
          <target state="translated">TCPConnection._is_sock_connected()</target>
        </trans-unit>
        <trans-unit id="d682d5e6dba0571345c0a24c79ccdf1605f9de86" translate="yes" xml:space="preserve">
          <source>TCPConnection._manage_pending_buffer()</source>
          <target state="translated">TCPConnection._manage_pending_buffer()</target>
        </trans-unit>
        <trans-unit id="90d2cb9c6ac656f30f94fafb8869e869fdd6f4a3" translate="yes" xml:space="preserve">
          <source>TCPConnection._notify_connecting()</source>
          <target state="translated">TCPConnection._notify_connecting()</target>
        </trans-unit>
        <trans-unit id="317f2f5d099460af46ad94ac7c1c1e0ed5f40cc1" translate="yes" xml:space="preserve">
          <source>TCPConnection._pending_reads()</source>
          <target state="translated">TCPConnection._pending_reads()</target>
        </trans-unit>
        <trans-unit id="d17b53624d8a14f65cd0a816d68112815987d466" translate="yes" xml:space="preserve">
          <source>TCPConnection._pending_writes()</source>
          <target state="translated">TCPConnection._pending_writes()</target>
        </trans-unit>
        <trans-unit id="b453e4327b8973cfdb4a7f66de3305078e31ecdd" translate="yes" xml:space="preserve">
          <source>TCPConnection._queue_read()</source>
          <target state="translated">TCPConnection._queue_read()</target>
        </trans-unit>
        <trans-unit id="1866ed66ff68158df8e7afe344791cbf2b353a92" translate="yes" xml:space="preserve">
          <source>TCPConnection._read_again()</source>
          <target state="translated">TCPConnection._read_again()</target>
        </trans-unit>
        <trans-unit id="74a420bff266bea995a1a59fe1525109fa559628" translate="yes" xml:space="preserve">
          <source>TCPConnection._read_buf_size()</source>
          <target state="translated">TCPConnection._read_buf_size()</target>
        </trans-unit>
        <trans-unit id="d81547d9e3e39b499ed976ac5ddc54b85d9e9ae3" translate="yes" xml:space="preserve">
          <source>TCPConnection._release_backpressure()</source>
          <target state="translated">TCPConnection._release_backpressure()</target>
        </trans-unit>
        <trans-unit id="c708a790983c912a61962ca91c45a892db875d00" translate="yes" xml:space="preserve">
          <source>TCPConnection._try_shutdown()</source>
          <target state="translated">TCPConnection._try_shutdown()</target>
        </trans-unit>
        <trans-unit id="c6d4dbcd8958a215b234f4b5680f9f36ec01a9fc" translate="yes" xml:space="preserve">
          <source>TCPConnection._write_again()</source>
          <target state="translated">TCPConnection._write_again()</target>
        </trans-unit>
        <trans-unit id="1292cb5317b0d10dada7537d53405e16308b2e4a" translate="yes" xml:space="preserve">
          <source>TCPConnection.close()</source>
          <target state="translated">TCPConnection.close()</target>
        </trans-unit>
        <trans-unit id="1c06cfb26d2b2bbdddbd3104b0fc49c39fd401fa" translate="yes" xml:space="preserve">
          <source>TCPConnection.create()</source>
          <target state="translated">TCPConnection.create()</target>
        </trans-unit>
        <trans-unit id="1c6487e36d31f4e6192e5b720d79f6e91b7a0bd8" translate="yes" xml:space="preserve">
          <source>TCPConnection.dispose()</source>
          <target state="translated">TCPConnection.dispose()</target>
        </trans-unit>
        <trans-unit id="dfc1751d3525ef6700061af09bde32a2985e2fe3" translate="yes" xml:space="preserve">
          <source>TCPConnection.expect()</source>
          <target state="translated">TCPConnection.expect()</target>
        </trans-unit>
        <trans-unit id="42cc186c94928f7d20353dbe64a52e52fc9cd268" translate="yes" xml:space="preserve">
          <source>TCPConnection.get_so_error()</source>
          <target state="translated">TCPConnection.get_so_error()</target>
        </trans-unit>
        <trans-unit id="a87382a7f79af03edb01dacb5005d919660d926e" translate="yes" xml:space="preserve">
          <source>TCPConnection.get_so_rcvbuf()</source>
          <target state="translated">TCPConnection.get_so_rcvbuf()</target>
        </trans-unit>
        <trans-unit id="51590a02b44ae4e66327d9114da3759682b6ead4" translate="yes" xml:space="preserve">
          <source>TCPConnection.get_so_sndbuf()</source>
          <target state="translated">TCPConnection.get_so_sndbuf()</target>
        </trans-unit>
        <trans-unit id="3a9694982dfaddc65578c2b005c1f0c79a73d7bc" translate="yes" xml:space="preserve">
          <source>TCPConnection.get_tcp_nodelay()</source>
          <target state="translated">TCPConnection.get_tcp_nodelay()</target>
        </trans-unit>
        <trans-unit id="6e484ef7d29fcf4a3fcdf81df4461e0809e82f26" translate="yes" xml:space="preserve">
          <source>TCPConnection.getsockopt()</source>
          <target state="translated">TCPConnection.getsockopt()</target>
        </trans-unit>
        <trans-unit id="13745277a0cce917282891447c51f228475913d5" translate="yes" xml:space="preserve">
          <source>TCPConnection.getsockopt_u32()</source>
          <target state="translated">TCPConnection.getsockopt_u32()</target>
        </trans-unit>
        <trans-unit id="0790d9e7f984eb32f0d37aef45ec63f8a9d5f810" translate="yes" xml:space="preserve">
          <source>TCPConnection.hard_close()</source>
          <target state="translated">TCPConnection.hard_close()</target>
        </trans-unit>
        <trans-unit id="9f55d9c0dd21fa06a7d9a20174b2eb6e5509f930" translate="yes" xml:space="preserve">
          <source>TCPConnection.ip4()</source>
          <target state="translated">TCPConnection.ip4()</target>
        </trans-unit>
        <trans-unit id="80f5d8d325f0cc17e28f5aa2ed8fa4a8df3d1f98" translate="yes" xml:space="preserve">
          <source>TCPConnection.ip6()</source>
          <target state="translated">TCPConnection.ip6()</target>
        </trans-unit>
        <trans-unit id="d6c58d9b63a585e22dc7851bc48ab35d788eb201" translate="yes" xml:space="preserve">
          <source>TCPConnection.local_address()</source>
          <target state="translated">TCPConnection.local_address()</target>
        </trans-unit>
        <trans-unit id="a325a15af79ab8ea234361a7b630355558965b3a" translate="yes" xml:space="preserve">
          <source>TCPConnection.mute()</source>
          <target state="translated">TCPConnection.mute()</target>
        </trans-unit>
        <trans-unit id="bab055be824b0ef224a9ef19e2ec074d54ee97f4" translate="yes" xml:space="preserve">
          <source>TCPConnection.remote_address()</source>
          <target state="translated">TCPConnection.remote_address()</target>
        </trans-unit>
        <trans-unit id="44a37ff443b2821e0cc1cdda1907411a993adc55" translate="yes" xml:space="preserve">
          <source>TCPConnection.set_keepalive()</source>
          <target state="translated">TCPConnection.set_keepalive()</target>
        </trans-unit>
        <trans-unit id="b899c822f0e571bf92503a9e9b5778cd9fb53c2e" translate="yes" xml:space="preserve">
          <source>TCPConnection.set_nodelay()</source>
          <target state="translated">TCPConnection.set_nodelay()</target>
        </trans-unit>
        <trans-unit id="f48a4b77c2742aa248d3e3cc21827a8a23ef3669" translate="yes" xml:space="preserve">
          <source>TCPConnection.set_notify()</source>
          <target state="translated">TCPConnection.set_notify()</target>
        </trans-unit>
        <trans-unit id="02a926c6b332bb7cb0e8e09c4274c73660d2685d" translate="yes" xml:space="preserve">
          <source>TCPConnection.set_so_rcvbuf()</source>
          <target state="translated">TCPConnection.set_so_rcvbuf()</target>
        </trans-unit>
        <trans-unit id="16121cbbe48879027b90314039941c3d36504682" translate="yes" xml:space="preserve">
          <source>TCPConnection.set_so_sndbuf()</source>
          <target state="translated">TCPConnection.set_so_sndbuf()</target>
        </trans-unit>
        <trans-unit id="00842dabf4ad449733a9f4ffcdf069ec1110e479" translate="yes" xml:space="preserve">
          <source>TCPConnection.set_tcp_nodelay()</source>
          <target state="translated">TCPConnection.set_tcp_nodelay()</target>
        </trans-unit>
        <trans-unit id="62af4e91c65170dd982ff1f41cd455e8f64a288e" translate="yes" xml:space="preserve">
          <source>TCPConnection.setsockopt()</source>
          <target state="translated">TCPConnection.setsockopt()</target>
        </trans-unit>
        <trans-unit id="a257a52f9004d625a6e5cfc57a5f117c405e30d8" translate="yes" xml:space="preserve">
          <source>TCPConnection.setsockopt_u32()</source>
          <target state="translated">TCPConnection.setsockopt_u32()</target>
        </trans-unit>
        <trans-unit id="017653f14590529248f8a68f85ce1b67b729c8e4" translate="yes" xml:space="preserve">
          <source>TCPConnection.unmute()</source>
          <target state="translated">TCPConnection.unmute()</target>
        </trans-unit>
        <trans-unit id="c5c3f73dfc773aed40d9a70dd25d6ead8d45b171" translate="yes" xml:space="preserve">
          <source>TCPConnection.write()</source>
          <target state="translated">TCPConnection.write()</target>
        </trans-unit>
        <trans-unit id="95d71ae908139c82d67b434b7fba0fe50659b8a2" translate="yes" xml:space="preserve">
          <source>TCPConnection.write_final()</source>
          <target state="translated">TCPConnection.write_final()</target>
        </trans-unit>
        <trans-unit id="60672b6f23306af20d891b252cbeaae30f1385d6" translate="yes" xml:space="preserve">
          <source>TCPConnection.writev()</source>
          <target state="translated">TCPConnection.writev()</target>
        </trans-unit>
        <trans-unit id="c88bed13db66249fd68eaf59f417edc6599c1dbd" translate="yes" xml:space="preserve">
          <source>TCPConnectionAuth</source>
          <target state="translated">TCPConnectionAuth</target>
        </trans-unit>
        <trans-unit id="6c3b985ac7299e78659c68acf9559c2cdad4f294" translate="yes" xml:space="preserve">
          <source>TCPConnectionNotify</source>
          <target state="translated">TCPConnectionNotify</target>
        </trans-unit>
        <trans-unit id="2a7731e43d2fead54c52fda1d89498ca2e711dd5" translate="yes" xml:space="preserve">
          <source>TCPConnectionNotify.accepted()</source>
          <target state="translated">TCPConnectionNotify.accepted()</target>
        </trans-unit>
        <trans-unit id="2efa8160fa3c86e84f0922ca518b36da38e9b5a0" translate="yes" xml:space="preserve">
          <source>TCPConnectionNotify.auth_failed()</source>
          <target state="translated">TCPConnectionNotify.auth_failed()</target>
        </trans-unit>
        <trans-unit id="65c5d958140a2b550d9c30c9f162be0a0a2c21a1" translate="yes" xml:space="preserve">
          <source>TCPConnectionNotify.closed()</source>
          <target state="translated">TCPConnectionNotify.closed()</target>
        </trans-unit>
        <trans-unit id="d3ae2a20aa06f819bdb1a53e4443d993862cafde" translate="yes" xml:space="preserve">
          <source>TCPConnectionNotify.connect_failed()</source>
          <target state="translated">TCPConnectionNotify.connect_failed()</target>
        </trans-unit>
        <trans-unit id="28d5ebb2b1ae757a9ee9126426c0049b3c2f7999" translate="yes" xml:space="preserve">
          <source>TCPConnectionNotify.connected()</source>
          <target state="translated">TCPConnectionNotify.connected()</target>
        </trans-unit>
        <trans-unit id="4db2c029f64374af164f529c48610144814e1196" translate="yes" xml:space="preserve">
          <source>TCPConnectionNotify.connecting()</source>
          <target state="translated">TCPConnectionNotify.connecting()</target>
        </trans-unit>
        <trans-unit id="4023d0c35fe18c39df82783ab888fe462b7d21f7" translate="yes" xml:space="preserve">
          <source>TCPConnectionNotify.expect()</source>
          <target state="translated">TCPConnectionNotify.expect()</target>
        </trans-unit>
        <trans-unit id="9791195a0156f13a18cf472ead0e274d93fa399f" translate="yes" xml:space="preserve">
          <source>TCPConnectionNotify.received()</source>
          <target state="translated">TCPConnectionNotify.received()</target>
        </trans-unit>
        <trans-unit id="d02e25226233f2d03a9725cd466d7fbb3cf40e2b" translate="yes" xml:space="preserve">
          <source>TCPConnectionNotify.sent()</source>
          <target state="translated">TCPConnectionNotify.sent()</target>
        </trans-unit>
        <trans-unit id="3e923a84eea46e1f884518b9712c6413c657e2dc" translate="yes" xml:space="preserve">
          <source>TCPConnectionNotify.sentv()</source>
          <target state="translated">TCPConnectionNotify.sentv()</target>
        </trans-unit>
        <trans-unit id="ec6550d995759267d22e158806c036a0f06295d4" translate="yes" xml:space="preserve">
          <source>TCPConnectionNotify.throttled()</source>
          <target state="translated">TCPConnectionNotify.throttled()</target>
        </trans-unit>
        <trans-unit id="2a943a1b614ba02e1ff8900533e87097f81fb187" translate="yes" xml:space="preserve">
          <source>TCPConnectionNotify.unthrottled()</source>
          <target state="translated">TCPConnectionNotify.unthrottled()</target>
        </trans-unit>
        <trans-unit id="e17cfee56903b0a175aaee526106c4159b9f96db" translate="yes" xml:space="preserve">
          <source>TCPListenAuth</source>
          <target state="translated">TCPListenAuth</target>
        </trans-unit>
        <trans-unit id="5a16d78d808e7c1d47e0557d385da462c5e97384" translate="yes" xml:space="preserve">
          <source>TCPListenAuth.create()</source>
          <target state="translated">TCPListenAuth.create()</target>
        </trans-unit>
        <trans-unit id="6d27b4426d2e08c3606c673022f9d4390166bcfc" translate="yes" xml:space="preserve">
          <source>TCPListenAuth.eq()</source>
          <target state="translated">TCPListenAuth.eq()</target>
        </trans-unit>
        <trans-unit id="bf1bd226c5257bf2b701487de8b1a4259c19cc64" translate="yes" xml:space="preserve">
          <source>TCPListenAuth.ne()</source>
          <target state="translated">TCPListenAuth.ne()</target>
        </trans-unit>
        <trans-unit id="c3b354bd94c0be85d626bb5b76d8e8bc1b8cebd8" translate="yes" xml:space="preserve">
          <source>TCPListenNotify</source>
          <target state="translated">TCPListenNotify</target>
        </trans-unit>
        <trans-unit id="d9c5d394e6e29c264e278f13da3ce3781c699a9b" translate="yes" xml:space="preserve">
          <source>TCPListenNotify.closed()</source>
          <target state="translated">TCPListenNotify.closed()</target>
        </trans-unit>
        <trans-unit id="7b5d8a7996f181bf3fd96aa0e3913f62e2adc0b6" translate="yes" xml:space="preserve">
          <source>TCPListenNotify.connected()</source>
          <target state="translated">TCPListenNotify.connected()</target>
        </trans-unit>
        <trans-unit id="f271c48ec1e4a818ed15901ef7e02ee927ccfe9d" translate="yes" xml:space="preserve">
          <source>TCPListenNotify.listening()</source>
          <target state="translated">TCPListenNotify.listening()</target>
        </trans-unit>
        <trans-unit id="481dca58fe791a5ade73e5bb8eb299d30e6a6f58" translate="yes" xml:space="preserve">
          <source>TCPListenNotify.not_listening()</source>
          <target state="translated">TCPListenNotify.not_listening()</target>
        </trans-unit>
        <trans-unit id="898305fa3fbdf181b90c094369b7e9c664253eb8" translate="yes" xml:space="preserve">
          <source>TCPListener</source>
          <target state="translated">TCPListener</target>
        </trans-unit>
        <trans-unit id="699c0a9b66771637dc7e5ff67129345f4b2cdb19" translate="yes" xml:space="preserve">
          <source>TCPListener._accept()</source>
          <target state="translated">TCPListener._accept()</target>
        </trans-unit>
        <trans-unit id="4a9daa6eb8c4a7d8007e568c8803008a08d08d0e" translate="yes" xml:space="preserve">
          <source>TCPListener._conn_closed()</source>
          <target state="translated">TCPListener._conn_closed()</target>
        </trans-unit>
        <trans-unit id="90a59fc2cc0e773dbb1f339b9ae6a43d6dd3e8c0" translate="yes" xml:space="preserve">
          <source>TCPListener._event_notify()</source>
          <target state="translated">TCPListener._event_notify()</target>
        </trans-unit>
        <trans-unit id="508fc0557448ce3749fdc1a9cd91ff004cdd1e6d" translate="yes" xml:space="preserve">
          <source>TCPListener._notify_listening()</source>
          <target state="translated">TCPListener._notify_listening()</target>
        </trans-unit>
        <trans-unit id="d535960d023e27aef8429c46b452291464af033a" translate="yes" xml:space="preserve">
          <source>TCPListener._spawn()</source>
          <target state="translated">TCPListener._spawn()</target>
        </trans-unit>
        <trans-unit id="34aade1f154507f22585de395b717ad14458a0b0" translate="yes" xml:space="preserve">
          <source>TCPListener.close()</source>
          <target state="translated">TCPListener.close()</target>
        </trans-unit>
        <trans-unit id="2f2524332a7b369f37b7d6d19c417514c61fa6e3" translate="yes" xml:space="preserve">
          <source>TCPListener.create()</source>
          <target state="translated">TCPListener.create()</target>
        </trans-unit>
        <trans-unit id="377bce4613f90e62b780f81b92b98f0409f58ef2" translate="yes" xml:space="preserve">
          <source>TCPListener.dispose()</source>
          <target state="translated">TCPListener.dispose()</target>
        </trans-unit>
        <trans-unit id="a35e177550dced2f393446d865a23a191881452f" translate="yes" xml:space="preserve">
          <source>TCPListener.ip4()</source>
          <target state="translated">TCPListener.ip4()</target>
        </trans-unit>
        <trans-unit id="b003a73dbbbaae18c636d7f74461b0b19a6e819e" translate="yes" xml:space="preserve">
          <source>TCPListener.ip6()</source>
          <target state="translated">TCPListener.ip6()</target>
        </trans-unit>
        <trans-unit id="05fff3efe7ecbb4db880414c2d00c6a0a5f99d25" translate="yes" xml:space="preserve">
          <source>TCPListener.local_address()</source>
          <target state="translated">TCPListener.local_address()</target>
        </trans-unit>
        <trans-unit id="f45bb1e43440f3c558918afc60886fda07a584fd" translate="yes" xml:space="preserve">
          <source>TCPListener.set_notify()</source>
          <target state="translated">TCPListener.set_notify()</target>
        </trans-unit>
        <trans-unit id="f89ffdf7bf8f996011f80b0790e091f68f29ea5f" translate="yes" xml:space="preserve">
          <source>TCPListenerAuth</source>
          <target state="translated">TCPListenerAuth</target>
        </trans-unit>
        <trans-unit id="b201f4e2b00c6f4a947c3ff5c4caf8059b6c19b3" translate="yes" xml:space="preserve">
          <source>TODO: Improve this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2d1ff2ec26fa8ef0071949f5d917833692d4351" translate="yes" xml:space="preserve">
          <source>Tab completion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="729722103c7daf748712bbd78f859633112186cf" translate="yes" xml:space="preserve">
          <source>Take an iterator of iterators and return an Iter containing the items of the first one, then the second one, and so on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5437c19a300c443b8442e95a3ecfb230012e15ef" translate="yes" xml:space="preserve">
          <source>Tear Down</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="001d57de6cc27249f024a0d098ef55191206436e" translate="yes" xml:space="preserve">
          <source>Tear down a possibly hanging test. Called when the timeout specified by to long_test() expires. There is no need for this function to call complete(false). tear_down() will still be called after this completes. The default is to do nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdd5c148bee4a80466cf3e3dad2cf51eb9fc7f52" translate="yes" xml:space="preserve">
          <source>Temporarily suspend reading off this TCPConnection until such time as &lt;code&gt;unmute&lt;/code&gt; is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ce1bd42e1738fdbbfb7126fd3b23495f7cf6f6e" translate="yes" xml:space="preserve">
          <source>Terminate child and close down everything.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02047bc07598c4597a9f4aa2bbcf79a9f8728b44" translate="yes" xml:space="preserve">
          <source>Terminate the process, first trying SIGTERM and if that fails, try SIGKILL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a562337f0ea75a015fd903e796110fd36113aeb" translate="yes" xml:space="preserve">
          <source>Test can have label. Labels are used to filter which tests are run, by setting command line argument &lt;code&gt;--label=[some custom label]&lt;/code&gt;. It can be used to separate unit tests from integration tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ff92d8f345be822b2796bb5dfedfd969a0c3257" translate="yes" xml:space="preserve">
          <source>Test exclusion is achieved by organising tests into groups. Each group can be exclusive, ie only one test is run at a time, or simultaneous, ie all tests are run concurrently.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccf09cfac30bb6689cc5d3e4aa78708c0a5bcc00" translate="yes" xml:space="preserve">
          <source>Test group in which all tests can run concurrently.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fca5e7dce0de7b53b75646faf960ac58d4318e42" translate="yes" xml:space="preserve">
          <source>Test group in which we only ever have one test running at a time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69080e5c49da5d3bba9b15a273b20b2df3903f2b" translate="yes" xml:space="preserve">
          <source>Test names</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc52bb84143129898ea740eef4e312171c070c92" translate="yes" xml:space="preserve">
          <source>TestHelper</source>
          <target state="translated">TestHelper</target>
        </trans-unit>
        <trans-unit id="6c999eb6963b51faaed65fb83d6d9bf3ced11e4b" translate="yes" xml:space="preserve">
          <source>TestHelper._check_eq()</source>
          <target state="translated">TestHelper._check_eq()</target>
        </trans-unit>
        <trans-unit id="d406c6c680be5baaa5e9bf9b22b2fdcb2b1c570f" translate="yes" xml:space="preserve">
          <source>TestHelper._check_is()</source>
          <target state="translated">TestHelper._check_is()</target>
        </trans-unit>
        <trans-unit id="312eaecc272de4c3cbff7c942a44e88310c7ac10" translate="yes" xml:space="preserve">
          <source>TestHelper._check_isnt()</source>
          <target state="translated">TestHelper._check_isnt()</target>
        </trans-unit>
        <trans-unit id="5b271a72d1279e2b2013302fb0d02f7f425530ef" translate="yes" xml:space="preserve">
          <source>TestHelper._check_ne()</source>
          <target state="translated">TestHelper._check_ne()</target>
        </trans-unit>
        <trans-unit id="ef8ee4d8ccbf88395c4a023669d4410fa965e488" translate="yes" xml:space="preserve">
          <source>TestHelper._create()</source>
          <target state="translated">TestHelper._create()</target>
        </trans-unit>
        <trans-unit id="79654fe10098a9918851c30dac84730d2ebe8a61" translate="yes" xml:space="preserve">
          <source>TestHelper._format_loc()</source>
          <target state="translated">TestHelper._format_loc()</target>
        </trans-unit>
        <trans-unit id="ba02af1a03b2e23e62ff04a080fb1945a6851799" translate="yes" xml:space="preserve">
          <source>TestHelper._print_array()</source>
          <target state="translated">TestHelper._print_array()</target>
        </trans-unit>
        <trans-unit id="0636cd76b94d5c52209c79808d02e5ba9083c485" translate="yes" xml:space="preserve">
          <source>TestHelper.assert_array_eq()</source>
          <target state="translated">TestHelper.assert_array_eq()</target>
        </trans-unit>
        <trans-unit id="59752d8c08a2cf994e6e0e0600932d81b4561317" translate="yes" xml:space="preserve">
          <source>TestHelper.assert_array_eq_unordered()</source>
          <target state="translated">TestHelper.assert_array_eq_unordered()</target>
        </trans-unit>
        <trans-unit id="ae4732dbde401ee65701f9201f7b78f0aaa242fd" translate="yes" xml:space="preserve">
          <source>TestHelper.assert_eq()</source>
          <target state="translated">TestHelper.assert_eq()</target>
        </trans-unit>
        <trans-unit id="689dd051bad9403104dd7f2d79fb952bcba0bec5" translate="yes" xml:space="preserve">
          <source>TestHelper.assert_error()</source>
          <target state="translated">TestHelper.assert_error()</target>
        </trans-unit>
        <trans-unit id="48dffe7c550b38cb45dd3ff22a738ecc26ced870" translate="yes" xml:space="preserve">
          <source>TestHelper.assert_false()</source>
          <target state="translated">TestHelper.assert_false()</target>
        </trans-unit>
        <trans-unit id="2b6778dc9797305b58442307e9d7e2b203b72a1d" translate="yes" xml:space="preserve">
          <source>TestHelper.assert_is()</source>
          <target state="translated">TestHelper.assert_is()</target>
        </trans-unit>
        <trans-unit id="c76947c71c70352a7b58f4eb32d8e2b22b84b5ce" translate="yes" xml:space="preserve">
          <source>TestHelper.assert_isnt()</source>
          <target state="translated">TestHelper.assert_isnt()</target>
        </trans-unit>
        <trans-unit id="7f86ac7f0c40ebf137a82d962df5a10ecc6508b5" translate="yes" xml:space="preserve">
          <source>TestHelper.assert_ne()</source>
          <target state="translated">TestHelper.assert_ne()</target>
        </trans-unit>
        <trans-unit id="0044f1ec1d9ad296e87cb71dd346ea1eef0c2fbd" translate="yes" xml:space="preserve">
          <source>TestHelper.assert_no_error()</source>
          <target state="translated">TestHelper.assert_no_error()</target>
        </trans-unit>
        <trans-unit id="67b429d214e35c7a750febf195ce16c0944a3ebf" translate="yes" xml:space="preserve">
          <source>TestHelper.assert_true()</source>
          <target state="translated">TestHelper.assert_true()</target>
        </trans-unit>
        <trans-unit id="ca874319d8d7b799774a04a7d82855d903f0d6b4" translate="yes" xml:space="preserve">
          <source>TestHelper.complete()</source>
          <target state="translated">TestHelper.complete()</target>
        </trans-unit>
        <trans-unit id="7d6bef9ab5e346c632c382b739f4f748ad2f0f6f" translate="yes" xml:space="preserve">
          <source>TestHelper.complete_action()</source>
          <target state="translated">TestHelper.complete_action()</target>
        </trans-unit>
        <trans-unit id="9732b55ab071da217d7991ce2f5382d408b47be3" translate="yes" xml:space="preserve">
          <source>TestHelper.dispose_when_done()</source>
          <target state="translated">TestHelper.dispose_when_done()</target>
        </trans-unit>
        <trans-unit id="a25abe2a7ba7eb4b4e3c18dae93cc4dd1373dc46" translate="yes" xml:space="preserve">
          <source>TestHelper.env</source>
          <target state="translated">TestHelper.env</target>
        </trans-unit>
        <trans-unit id="9e2d1a18a957019da94dc06d0d96ee27b4094120" translate="yes" xml:space="preserve">
          <source>TestHelper.expect_action()</source>
          <target state="translated">TestHelper.expect_action()</target>
        </trans-unit>
        <trans-unit id="3fa18b624f72730d7c35444d41682c42a4146e31" translate="yes" xml:space="preserve">
          <source>TestHelper.fail()</source>
          <target state="translated">TestHelper.fail()</target>
        </trans-unit>
        <trans-unit id="9138df7b55931410626143ad66980a4afcafde6b" translate="yes" xml:space="preserve">
          <source>TestHelper.fail_action()</source>
          <target state="translated">TestHelper.fail_action()</target>
        </trans-unit>
        <trans-unit id="323b9b9cb7890f3cb0fed37456d5ea966016a472" translate="yes" xml:space="preserve">
          <source>TestHelper.log()</source>
          <target state="translated">TestHelper.log()</target>
        </trans-unit>
        <trans-unit id="c82c778023b5175bfc0ac452408128ff4ebb2525" translate="yes" xml:space="preserve">
          <source>TestHelper.long_test()</source>
          <target state="translated">TestHelper.long_test()</target>
        </trans-unit>
        <trans-unit id="64babbe9f1c947d69c9b9d25e50d24024f07cf04" translate="yes" xml:space="preserve">
          <source>TestList</source>
          <target state="translated">TestList</target>
        </trans-unit>
        <trans-unit id="2bfe0aefca004d0057ba177a2f2cdfa95c9c6e39" translate="yes" xml:space="preserve">
          <source>TestList.tests()</source>
          <target state="translated">TestList.tests()</target>
        </trans-unit>
        <trans-unit id="f9da9aa73f9fbba2da27f5b028ded9c8ebb1392c" translate="yes" xml:space="preserve">
          <source>Tests are identified by names, which are used when printing test results and on the command line to select which tests to run. These names are independent of the names of the test classes in the Pony source code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42f564e980c498738f246727ec89fe472c3cf85d" translate="yes" xml:space="preserve">
          <source>That's basically why we rolled our own.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ead361cb77aa41532373ffb1673bb6a0c7bdae2" translate="yes" xml:space="preserve">
          <source>The &quot;success&quot; parameter specifies whether the test succeeded. However if any asserts fail the test will be considered a failure, regardless of the value of this parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85823cd85ce74510bebf747ce905fe363ed59e42" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;ponytest-unittest#tear_down&quot;&gt;tear_down()&lt;/a&gt; function is called for each test regardless of whether it passed or failed. If a test times out &lt;a href=&quot;ponytest-unittest#tear_down&quot;&gt;tear_down()&lt;/a&gt; will be called after timed_out() returns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="160cdc81d07565ae05beea3420b561354298ba32" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--noadjust&lt;/code&gt; option outputs results of the overhead measured prior to each benchmark run followed by the unadjusted benchmark result. An example of the output of this program with &lt;code&gt;--noadjust&lt;/code&gt; is as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec695a0cce3d5ffc77f374cefeea7fba837e2276" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FileLines&lt;/code&gt; class allows a file to be accessed one line at a time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9daf1a8f2f7e21a82b4f798234bce2c2f09cf9ea" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FileStream&lt;/code&gt; actor provides the ability to asynchronously write to a file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a6ff7728daeb9f70fb40263e3b208c7915b2a62" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;For&lt;/code&gt;-loop provides a more concise way of iteration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5631e165f4129fc6604c9fd7d4847db014605334" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Path&lt;/code&gt; primitive can be used to do path-related operations on strings and characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b09e58698bb50bbe991bea13213e9a1f214f9cba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Random&lt;/code&gt; trait should be implemented by all random number generators. The only method you need to implement is &lt;code&gt;fun ref next(): 64&lt;/code&gt;. Once that method has been implemented, the &lt;code&gt;Random&lt;/code&gt; trait provides default implementations of conversions to other number types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f5b2bbe04afdd2d32c3c9b0888b03e29e4ba250" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Sig&lt;/code&gt; primitive provides support for portable signal handling across Linux, FreeBSD and OSX. Signals are not supported on Windows and attempting to use them will cause a compilation error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ca6c7472f40227139e224cac499330c6c7bfcb7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Timer&lt;/code&gt; class represents a timer that fires after an expiration time, and then fires at an interval. When a &lt;code&gt;Timer&lt;/code&gt; fires, it calls the &lt;code&gt;apply&lt;/code&gt; method of the &lt;code&gt;TimerNotify&lt;/code&gt; object that was passed to it when it was created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d89f600824f11d30700381816478d846ba9bcd36" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;json&lt;/code&gt; package provides the &lt;a href=&quot;json-jsondoc&quot;&gt;JsonDoc&lt;/a&gt; class both as a container for a JSON document and as means of parsing from and writing to &lt;a href=&quot;builtin-string&quot;&gt;String&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dec563e8e935c7a9798e946c7d893da3cf04fe62" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mute&lt;/code&gt; behavior allow any other actors in your application to request the cessation of additional reads until such time as &lt;code&gt;unmute&lt;/code&gt; is called. Please note that this cessation is not guaranteed to happen immediately as it is the result of an asynchronous behavior call and as such will have to wait for existing messages in the &lt;code&gt;TCPConnection&lt;/code&gt;'s mailbox to be handled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="454fbc5b764044b0a72cf2479e22daab9df3f426" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;option_max_size&lt;/code&gt; argument is the maximum number of bytes that the caller expects the kernel to return via the system call's &lt;code&gt;void *&lt;/code&gt; 4th argument. This function will allocate a Pony &lt;code&gt;Array[U8]&lt;/code&gt; array of size &lt;code&gt;option_max_size&lt;/code&gt; prior to calling &lt;code&gt;getsockopt(2)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20ef8b6baa1397775e63a2df87825c427f72a246" translate="yes" xml:space="preserve">
          <source>The API for using Logger is an attempt to abide by the Pony philosophy of first, be correct and secondly, aim for performance. One of the ways that logging can slow your system down is by having to evaluate expressions to be logged whether they will be logged or not (based on the level of logging). For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2832aedb07751fd8770219cbade72a0e3f3bc749" translate="yes" xml:space="preserve">
          <source>The API is designed to require capability tokens, as otherwise serialising would leak the bit patterns of all private information in a type (since the resulting Array[U8] could be examined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e2c96463ba9617d23ecf9f5fac59766409d4ab3" translate="yes" xml:space="preserve">
          <source>The Backpressure package allows Pony programmers to participate in Pony's runtime backpressure system. The goal of the backpressure system is to prevent an actor's mailbox from growing at an unbounded rate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99feeb10064b4488f68974eaa22ee2bbc23c57f6" translate="yes" xml:space="preserve">
          <source>The Base64 package contains support for doing Base64 binary-to-text encodings. We currently have support 3 encodings: PEM, MIME and URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9291fc71b9deed14730c84648cf2d0e76407dde0" translate="yes" xml:space="preserve">
          <source>The Buffered package provides two classes, &lt;code&gt;Writer&lt;/code&gt; and &lt;code&gt;Reader&lt;/code&gt;, for writing and reading messages using common encodings. These classes are useful when dealing with things like network data and binary file formats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f44dd24148f1c727766426ec8cb81a3290c28902" translate="yes" xml:space="preserve">
          <source>The CLI package provides enhanced Posix+GNU command line parsing with the feature of commands that can be specified in a hierarchy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24d0a61d436fb09e5fce5af3d107387307f2c665" translate="yes" xml:space="preserve">
          <source>The Capsicum rights.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f5bf4522c19fb3586e0b3989472c0dc6ad0f184" translate="yes" xml:space="preserve">
          <source>The Files package provides classes for working with files and directories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fda72516981205657e5fb0b00c27e85a3fe0464" translate="yes" xml:space="preserve">
          <source>The Format package provides support for formatting strings. It can be used to set things like width, padding and alignment, as well as controlling the way numbers are displayed (decimal, octal, hexadecimal).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cbcc88e7d282970306c53b6de73edef28bee2b8" translate="yes" xml:space="preserve">
          <source>The Ini package provides support for parsing &lt;a href=&quot;https://en.wikipedia.org/wiki/INI_file&quot;&gt;INI file&lt;/a&gt; formatted text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4d01b33f082a4ab99e1787020e77e7befb4b01b" translate="yes" xml:space="preserve">
          <source>The Iter class wraps iterators so that additional methods may be applied to it. Some methods, such as fold and collect, run through the underlying iterator in order to return a result. Others, such as map and filter, are lazy. This means that they return another Iter so that the resulting values are computed one by one as needed. Lazy methods return Iter types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="064477927988dd74167ca19540afe2b111030f7b" translate="yes" xml:space="preserve">
          <source>The ListNode must be contained within a List for this to succeed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fafdd1231d6b1151501936443f2f51e7641425c9" translate="yes" xml:space="preserve">
          <source>The Logger API uses boolean short circuiting to avoid this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d58b074c65cabac0b3290e0520600e965d61606e" translate="yes" xml:space="preserve">
          <source>The Logger package provides an interface for formatting logs. If you wish to override the standard formatting, you can create an object that implements:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbafc719dfe508c4370c0e1e3a9d3cb58f7080f8" translate="yes" xml:space="preserve">
          <source>The Net package provides support for creating UDP and TCP clients and servers, reading and writing network data, and establishing UDP and TCP connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="477fa7f943f9c33f61eca2ac4c95fca8073548a0" translate="yes" xml:space="preserve">
          <source>The OS has informed as that len bytes of pending reads have completed. This occurs only with IOCP on Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="858adaa8966d938afea291a2fd6933221dca18e1" translate="yes" xml:space="preserve">
          <source>The OS has informed us that &lt;code&gt;len&lt;/code&gt; bytes of pending reads have completed. This occurs only with IOCP on Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ad0ec613334dd8c0a66a5278bbdd79105239fd0" translate="yes" xml:space="preserve">
          <source>The OS has informed us that &lt;code&gt;len&lt;/code&gt; bytes of pending writes have completed. This occurs only with IOCP on Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e25615cbea53e6a9449bd2bb8f30b29b9824dfd9" translate="yes" xml:space="preserve">
          <source>The Options package provides support for parsing command line arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1343689427c2b314ca57d11972c98878e64f2e0f" translate="yes" xml:space="preserve">
          <source>The Pony runtime can detect overloading based on message queue size. However, the overloading of some types of actors is harder to detect. Let's take the case of actors like &lt;code&gt;TCPConnection&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efe79ee267430121da8dd01b7fe18107b3afb65b" translate="yes" xml:space="preserve">
          <source>The PonyTest package provides a unit testing framework. It is designed to be as simple as possible to use, both for the unit test writer and the user running the tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fd1b49e2d582e470e23224b9aa5908a1f89957c" translate="yes" xml:space="preserve">
          <source>The Process package provides support for handling Unix style processes. For each external process that you want to handle, you need to create a &lt;code&gt;ProcessMonitor&lt;/code&gt; and a corresponding &lt;code&gt;ProcessNotify&lt;/code&gt; object. Each ProcessMonitor runs as it own actor and upon receiving data will call its corresponding &lt;code&gt;ProcessNotify&lt;/code&gt;'s method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f512061385fef98e4157219caa3b23b48256800" translate="yes" xml:space="preserve">
          <source>The ProcessMonitor supports spawning processes on Linux, FreeBSD and OSX. Processes are not supported on Windows and attempting to use them will cause a runtime error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5d947ea8d24c7b435b01157f90ff2b142fe5c93" translate="yes" xml:space="preserve">
          <source>The Random package provides support generating random numbers. The package provides random number generators you can use in your code, a dice roller and a trait for implementing your own random number generator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bee89b113563f2d32d9bacf41e23775c0b75413" translate="yes" xml:space="preserve">
          <source>The Serialise.signature method is provided for the purposes of comparing communicating Pony binaries to determine if they are the same. Confirming this before deserialising data can help mitigate the risk of accidental serialisation across different Pony binaries, but does not on its own address the security issues of accepting data from untrusted sources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e935989f7462ebdf573fda67b35bf97af7cd5b82" translate="yes" xml:space="preserve">
          <source>The Signals package provides support for handling Unix style signals. For each signal that you want to handle, you need to create a &lt;code&gt;SignalHandler&lt;/code&gt; and a corresponding &lt;code&gt;SignalNotify&lt;/code&gt; object. Each SignalHandler runs as it own actor and upon receiving the signal will call its corresponding &lt;code&gt;SignalNotify&lt;/code&gt;'s apply method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df7308c8ee79c2439b056b127dd8766c028c67cf" translate="yes" xml:space="preserve">
          <source>The TCP protocol has built-in backpressure support. This is generally experienced as the outgoing write buffer becoming full and being unable to write all requested data to the socket. In &lt;code&gt;TCPConnection&lt;/code&gt;, this is hidden from the programmer. When this occurs, &lt;code&gt;TCPConnection&lt;/code&gt; will buffer the extra data until such time as it is able to be sent. Left unchecked, this could result in uncontrolled queuing. To address this, &lt;code&gt;TCPConnectionNotify&lt;/code&gt; implements two methods &lt;code&gt;throttled&lt;/code&gt; and &lt;code&gt;unthrottled&lt;/code&gt; that are called when backpressure is applied and released.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0440bc911453e6f15ca062d478e95e96bc81cd0" translate="yes" xml:space="preserve">
          <source>The Time Package provides classes and methods for timing operations, dealing with dates and times, and scheduling tasks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b1c404a321f53c799421d92184e4735116b805e" translate="yes" xml:space="preserve">
          <source>The actual JSON object structure, mapping &lt;code&gt;String&lt;/code&gt; keys to other JSON structures.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5e28fadeaf4f79e0ff2e5e27d4e95e96a4a071c" translate="yes" xml:space="preserve">
          <source>The actual array containing JSON structures.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a1968de81b23bfa134d40537c79e7733f0582ac" translate="yes" xml:space="preserve">
          <source>The assertion functions check the relevant condition and mark the test as a failure if appropriate. The success or failure of the condition is reported back as a Bool which can be checked if a different code path is needed when that condition fails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beb9764da1f5329b074cbc921e00fd263b1e6978" translate="yes" xml:space="preserve">
          <source>The available space in the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1618cab72d91286ac789ae3a2bde0703a7296c83" translate="yes" xml:space="preserve">
          <source>The available space in the map. Resize will happen when size / space &amp;gt;= 0.75.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a61ddaf4d087505ced607f4721639392e1d07487" translate="yes" xml:space="preserve">
          <source>The available space in the ring.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8efb6d90cc7eba0c282a38ef445a9f9d9d339cfd" translate="yes" xml:space="preserve">
          <source>The available space in the set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9622e99187b1f18e34adc54126654d4db1c924ea" translate="yes" xml:space="preserve">
          <source>The behavior of &lt;code&gt;next()&lt;/code&gt; after this function returned &lt;code&gt;false&lt;/code&gt; is undefined, it might throw an error or return values which are not part of this Iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d91f86c6bc2a7ba25aa3002c4a80759def0aa06" translate="yes" xml:space="preserve">
          <source>The builtin package is home to the following standard library members:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9d21c4802e689b59d5e4429fc05b67b5b645e9a" translate="yes" xml:space="preserve">
          <source>The bureaucracy contains objects designed to ease your bookkeeping burdens. Need to shutdown a number of actors together? Check out &lt;code&gt;Custodian&lt;/code&gt;. Need to keep track of a lot of stuff and be able to look it up by name? Check out &lt;code&gt;Registrar&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20707cff2c4fdc1445167e7ab18466e44320f12a" translate="yes" xml:space="preserve">
          <source>The caller is responsible for the correct size and byte contents of the &lt;code&gt;option&lt;/code&gt; array for the requested &lt;code&gt;level&lt;/code&gt; and &lt;code&gt;option_name&lt;/code&gt;, including using the appropriate CPU endian byte order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77057c48e199251a38f9d41ce82b66198d56b7b1" translate="yes" xml:space="preserve">
          <source>The caller is responsible for the correct size and byte contents of the &lt;code&gt;option&lt;/code&gt; array for the requested &lt;code&gt;level&lt;/code&gt; and &lt;code&gt;option_name&lt;/code&gt;, including using the appropriate machine endian byte order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4da40c1baac592062b677ca99e2e4250539a60d2" translate="yes" xml:space="preserve">
          <source>The caller must provide an array that is pre-allocated to be at least as large as the largest data structure that the kernel may return for the requested option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4ec08d97711ce3adf621a10e07ba25df4c3e514" translate="yes" xml:space="preserve">
          <source>The client is implemented like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab20c908e614182f0a054d9d22c547bad4154962" translate="yes" xml:space="preserve">
          <source>The collection types JsonObject and JsonArray can contain any other JSON structures arbitrarily nested.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f405a59d361c532e3d6466f25ccba46bedc5eb74" translate="yes" xml:space="preserve">
          <source>The command line option &quot;--sequential&quot; prevents any tests from running concurrently, regardless of exclusion groups. This is intended for debugging rather than standard use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6018c6f4a84bd5b4120ae0712fdf0eb41895f9f0" translate="yes" xml:space="preserve">
          <source>The command line used to start the program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34c07f81f8d5dbe3ada4755525f1983dcb2989f3" translate="yes" xml:space="preserve">
          <source>The complete() function takes a Bool parameter to specify whether the test was a success. If any asserts fail then the test will be considered a failure regardless of the value of this parameter. However, complete() must still be called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3dd884f60aef1f1362087a8bbf4d932a7055e66" translate="yes" xml:space="preserve">
          <source>The concatenation of any list l with the empty list is l.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="249af3545046df6dbf2c2b7c3e940fb00e2e6a37" translate="yes" xml:space="preserve">
          <source>The contents of the 4-tuple returned are valid only if &lt;code&gt;ip6()&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9f19f8a42536b8c381fee26e64d05ab33fbb847" translate="yes" xml:space="preserve">
          <source>The default mode is read/write for the owner, read-only for everyone else.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d10ae051f1beda586bcafa1b953880dd232c0ce7" translate="yes" xml:space="preserve">
          <source>The default predicate checks for matches by identity. To search for matches by structural equality, pass an object literal such as &lt;code&gt;{(l, r) =&amp;gt; l == r}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef0566397e12f452f3d2cd7d2a7e8f38a8b9c5f6" translate="yes" xml:space="preserve">
          <source>The directory-relative functions (open, etc) use the *at interface on FreeBSD and Linux. This isn't available on OS X prior to 10.10, so it is not used. On FreeBSD, this allows the directory-relative functions to take advantage of Capsicum.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ba0d2a9f3b8e134e9c0e4354c5bd1d03ca37a59" translate="yes" xml:space="preserve">
          <source>The empty list of As.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ddcf516aa79dcb898ee1bb3cf7fecfa31f94f0d" translate="yes" xml:space="preserve">
          <source>The entries will include everything in the directory, but it is not recursive. The path for the entry will be relative to the directory, so it will contain no directory separators. The entries will not include &quot;.&quot; or &quot;..&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3995dc6fb864656a25eab4f73751b078c8519294" translate="yes" xml:space="preserve">
          <source>The first read that will succeed. If nothing has been written to the ring, this will raise an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2a7f7eab9c6ea5d518e9ed987a573883a04b678" translate="yes" xml:space="preserve">
          <source>The flags in this that are not in that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1941f6f09455ec0533793fd34f5da05af773cf90" translate="yes" xml:space="preserve">
          <source>The following code creates a client that connects to port 8989 of the local host, writes &quot;hello world&quot;, and listens for a response, which it then prints.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0589bc08a7a6428e2fd74466bf721581b0221798" translate="yes" xml:space="preserve">
          <source>The following code fragments are equivalent: set the socket receive buffer size for the file descriptor &lt;code&gt;fd&lt;/code&gt; to &lt;code&gt;4455&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6ffc9822ad3cae6c855e21e5bdfcf17e70b3c19" translate="yes" xml:space="preserve">
          <source>The following example creates a temporary directory in the &lt;a href=&quot;ponytest-unittest#set_up&quot;&gt;set_up()&lt;/a&gt; function and removes it in the &lt;a href=&quot;ponytest-unittest#tear_down&quot;&gt;tear_down()&lt;/a&gt; function, thus simplifying the test function itself:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a68802aa7e3011180b3b8e562ea5585e60c95478" translate="yes" xml:space="preserve">
          <source>The following example waits 5 seconds and then fires every 2 seconds, and when it fires the &lt;code&gt;TimerNotify&lt;/code&gt; object prints how many times it has been called:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38ccc81e3cbe8ed504077ee02fbc48716e5ddb48" translate="yes" xml:space="preserve">
          <source>The following examples create: * an echo server that listens for connections and returns whatever message it receives * a client that connects to the server, sends a message, and prints the message it receives in response</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ee4d38c398256e2785efe6bc51aed6a7cf7d7f7" translate="yes" xml:space="preserve">
          <source>The following is a complete program with 2 trivial tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad196f4f32e27a0ce13212de15632186207ce42a" translate="yes" xml:space="preserve">
          <source>The following is a complete program with multiple trivial benchmarks followed by their output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc84cf3686bfb037445f20a88001d07979da46bf" translate="yes" xml:space="preserve">
          <source>The following program creates an echo server that listens for connections on port 8989 and echoes back any data it receives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0dbcecbaea8604aa3be47d546bb2011927838dc" translate="yes" xml:space="preserve">
          <source>The following program uses a &lt;code&gt;Reader&lt;/code&gt; to decode a message of this type and print them:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="685f0ee56b95eb2070bda034cf8beb3e519185f8" translate="yes" xml:space="preserve">
          <source>The following program uses a write buffer to encode an array of tuples as a message of this type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="079b89fd0ca073ce6a2db90c4c0f5b3a29859460" translate="yes" xml:space="preserve">
          <source>The following program will listen for the TERM signal and output a message to standard out if it is received.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba1fa9d63b5db31065cdb6597fa036e8f17ba342" translate="yes" xml:space="preserve">
          <source>The following program will output '42' to STDOUT in the standard default log format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0e37c8c867e217e5d8f2a2a13c5bdcc830c6513" translate="yes" xml:space="preserve">
          <source>The following program will output 'my warn message' and 'my error message' to STDOUT in the standard default log format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d2a80c82a6e11e234660e8bc449d7b663d9d484" translate="yes" xml:space="preserve">
          <source>The following program will spawn an external program and write to it's STDIN. Output received on STDOUT of the child process is forwarded to the ProcessNotify client and printed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="390606ea424c08dab365a4a1587401243cbbde63" translate="yes" xml:space="preserve">
          <source>The following takes an reverse-alphabetical array of Strings (&quot;third&quot;, &quot;second&quot;, &quot;first&quot;), and sorts it in place alphabetically using the default String Comparator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="825feabae4fad59fe15320ecdc5deb7f5a6dc438" translate="yes" xml:space="preserve">
          <source>The functions which are illustrated below are only those which operate on an individual ListNode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a989fca0b562ce33b5ccd357cdb700b63a7a0e7a" translate="yes" xml:space="preserve">
          <source>The general EBNF of a command line is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccf4da96fe74bcaea47a221b4c839c032615f4b7" translate="yes" xml:space="preserve">
          <source>The intersection of this and that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c11bc3286cb6d2dbe916b9ef8829adcf9145f3a3" translate="yes" xml:space="preserve">
          <source>The itertools package provides the &lt;code&gt;Iter&lt;/code&gt; class for doing useful things with iterators. It is Inspired by Python's itertools library, Rust's Iterator, and Elixir's Enum and Stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3233982a02e174beab4cb5e175c158836371abdf" translate="yes" xml:space="preserve">
          <source>The make() constructor is not needed for this example. However, it allows for easy aggregation of tests (see below) so it is recommended that all test Mains provide it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c50f0e8570181e907fb1bac1e62dd02bee8915f5" translate="yes" xml:space="preserve">
          <source>The name of the failed action will be included in the failure output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0419481cf5884d86b99e61181cced8b51e95c26d" translate="yes" xml:space="preserve">
          <source>The number of elements in the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7be88af9990d46f14a02ba604912049abe177aa1" translate="yes" xml:space="preserve">
          <source>The number of elements that have been added to the ring.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5a55128da489b6e5dcbe8014946fcac9a95c255" translate="yes" xml:space="preserve">
          <source>The number of items in the map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71f7bfccce37192c2164cb10244584486e447626" translate="yes" xml:space="preserve">
          <source>The number of items in the set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d90500bc9fc9d505fcb4791c091eb2a6d746a36" translate="yes" xml:space="preserve">
          <source>The only partition of the empty list is two empty lists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="848096e0c440e221cdd5b143045c4c015212dee9" translate="yes" xml:space="preserve">
          <source>The order of calls to expect_action don't matter - the actions may be completed in any other order to complete the test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82f522f0889dfb594c6e5bf9e2435512d5707098" translate="yes" xml:space="preserve">
          <source>The parsed JSON structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d6739d56c576e1a73d4b4418634f05c8096e03e" translate="yes" xml:space="preserve">
          <source>The process environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1adb221ed73d7fbac2edb7aeeaba81bd3e37febf" translate="yes" xml:space="preserve">
          <source>The program's environment variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dbb2b9808ed16924eb370fa1cd5f0daa4dadd5a" translate="yes" xml:space="preserve">
          <source>The public types that are defined in this package will always be in scope for every Pony source file. For details on specific packages, see their individual entity entries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da9459b812adbd90dae26e34d4ea2108665db7d0" translate="yes" xml:space="preserve">
          <source>The readable interface of a sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dcbd4e89a97102cba482c4d194582393e11fa2b" translate="yes" xml:space="preserve">
          <source>The result has the sign of the dividend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d735ba95819a3a42ffcf10cd9026e2eaf0ab128a" translate="yes" xml:space="preserve">
          <source>The result has the sign of the divisor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea7ad36101e678d5116c7f5fc7cadc5584ba59ff" translate="yes" xml:space="preserve">
          <source>The result will have the sign of the dividend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ab436e51d4d1a84a7a34d6c8eaef6a030f75b72" translate="yes" xml:space="preserve">
          <source>The result will have the sign of the divisor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="948427c499c69f698d8a27cc377f52e97e294809" translate="yes" xml:space="preserve">
          <source>The resulting FilePath will have capabilities that are the intersection of the supplied capabilities and the capabilities on the base.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6d80e94fdc620c263e837b753adb4f34546e41d" translate="yes" xml:space="preserve">
          <source>The resulting FilePath will have capabilities that are the intersection of the supplied capabilities and the capabilities on the parent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85566ac7de09e8437c227f645ddf81a273965a5a" translate="yes" xml:space="preserve">
          <source>The reverse of the empty list is the empty list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b4cec7a78f32d9cc180e07a9310a8dd5a51c724" translate="yes" xml:space="preserve">
          <source>The root capability can be used by any package that wants to establish a principle of least authority. A typical usage is to have a parameter on a constructor for some resource that expects a limiting capability specific to the package, but will also accept the root capability as representing unlimited access.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc0541a44f76983143d84d7e9b90704f01850ba6" translate="yes" xml:space="preserve">
          <source>The root capability.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f4600926774b03ca4f0016893967de2e1dad348" translate="yes" xml:space="preserve">
          <source>The runtime backpressure is a powerful system. By intervening, programmers can create deadlocks. Any call to &lt;code&gt;Backpressure.apply&lt;/code&gt; should be matched by a corresponding call to &lt;code&gt;Backpressure.release&lt;/code&gt;. Authorization via the &lt;code&gt;ApplyReleaseBackpressureAuth&lt;/code&gt; capability is required to apply or release backpressure. By requiring that the caller have a token to apply or release a backpressure, rouge 3rd party library code can't run wild and unknowingly interfere with the runtime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6ad6c43f1a80d82e70064bd759d0b1ed9e5ec5c" translate="yes" xml:space="preserve">
          <source>The server is implemented like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1db93a950a06a3f69e97e09866ae1bad2e96299" translate="yes" xml:space="preserve">
          <source>The specified test has completed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c81299c6d339cbc39d1e2175d3eaa2488938f9f6" translate="yes" xml:space="preserve">
          <source>The symmetric difference of this and that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45651580d28c8b4497e13bf575517278e503e6f1" translate="yes" xml:space="preserve">
          <source>The test's &lt;a href=&quot;ponytest-testhelper&quot;&gt;TestHelper&lt;/a&gt; is handed to &lt;a href=&quot;ponytest-unittest#tear_down&quot;&gt;tear_down()&lt;/a&gt; and it is permitted to log messages and call assert functions during tear down.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daec08c82da9ccddd499aa0309c7608fd885cdf1" translate="yes" xml:space="preserve">
          <source>The tests are all complete, print out the results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbfb28f0ba28401cf167f065ad93c634bc135019" translate="yes" xml:space="preserve">
          <source>The time complexity of this operation is O(log(n)) with respect to the size of the heap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8b9eeeb9edc1e305c67d80aaad9bf73fe36cf53" translate="yes" xml:space="preserve">
          <source>The type of the expected argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d3ac2406177ef5d59575314e14118fcd7c2daf2" translate="yes" xml:space="preserve">
          <source>The type parameter of this function is the type parameter of the elements in both ReadSeqs. For instance, when comparing two &lt;code&gt;Array[U8]&lt;/code&gt;, you should call this method as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e84baa6f2a037af7275ab3bafdd1e52bb640a9bb" translate="yes" xml:space="preserve">
          <source>The type parameter of this function is the type parameter of the elements in the ReadSeq.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb5c5200c56c4f9769fa83f1e8739f9a00a44312" translate="yes" xml:space="preserve">
          <source>The types in the cli package are broken down into three groups:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0f2c277f9c8af9cc516d94d01e9e5e2f8417f35" translate="yes" xml:space="preserve">
          <source>The union of this and that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b59849336aa36ae4f6b3f7df1e2ccceb47bd8e8" translate="yes" xml:space="preserve">
          <source>The values of the option level and option name constants are typically C preprocessor macros, e.g., &lt;code&gt;#define SOMETHING 42&lt;/code&gt;. These macro names are upper case and may contain multiple consecutive underscore characters (though this is rare, for example, &lt;code&gt;IP_NAT__XXX&lt;/code&gt;). The function names in this primitive are derived by the C macro name and then:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f85acfd1f77375c8543434c3950c695ad46cc69" translate="yes" xml:space="preserve">
          <source>The verbose parameter allows messages to be printed only when the --verbose command line option is used. For example, by default assert failures are logged, but passes are not. With --verbose both passes and fails are reported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c3d0926925bb27db52be3021d2ce66777e63dc7" translate="yes" xml:space="preserve">
          <source>The wall-clock adjusted system time with nanoseconds. Return: (seconds, nanoseconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c996e998d7d9e1c9b05a5cd179925ca27c54097" translate="yes" xml:space="preserve">
          <source>The wall-clock adjusted system time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4cc4c4351c61d1cbc71d25be6567112c625364b" translate="yes" xml:space="preserve">
          <source>There are a &lt;em&gt;lot&lt;/em&gt; of functions in List. The following code picks out a few common examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbcc6533f3deb2e22d35fbf396f08a07c34b9d8e" translate="yes" xml:space="preserve">
          <source>There are no elements to drop from the empty list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f06b319189f8fef010ece88ce74edec71a101967" translate="yes" xml:space="preserve">
          <source>There are no elements to take from the empty list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1250435d555eaa13cc3c0d666afbabcad8adcb41" translate="yes" xml:space="preserve">
          <source>These constants are &lt;em&gt;not&lt;/em&gt; stable between Pony releases. Values returned by this function may be held by long-lived variables by the calling process: values cannot change while the process runs. Programmers must not cache any of these values for purposes of sharing them for use by any other Pony program (for example, sharing via serialization &amp;amp; deserialization or via direct shared memory).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80dae9c1e3ba2c3600d8d7de8ea0fac1e44cbc8e" translate="yes" xml:space="preserve">
          <source>These strings can be embedded in text when writing to a StdStream to create a text-based UI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b53a4478e26541f69fbaccfde9bfeac679244da" translate="yes" xml:space="preserve">
          <source>Things that can be turned into a String.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45088b7dadb3123c8b365cd59b91d71f9eb9b0fe" translate="yes" xml:space="preserve">
          <source>This Rand implementation is slightly slower than &lt;a href=&quot;random-xoroshiro128plus&quot;&gt;XorOshiro128Plus&lt;/a&gt; but does not exhibit &quot;mild dependencies in Hamming weights&quot; (the lower four bits might fail linearity tests).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e047e2bf7b1aa1cccc8af0dd2a34894cce3a0795" translate="yes" xml:space="preserve">
          <source>This accepts a string iterator and calls the IniNotify for each new entry. If any errors are encountered, this will return false. Otherwise, it returns true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41db494920874ec67e013f45786943a9feee0328" translate="yes" xml:space="preserve">
          <source>This accepts a string iterator and returns a nested map of strings. If parsing fails, an error is raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c50e04d9266d083bf80f2f78e1a364c3807c4ba9" translate="yes" xml:space="preserve">
          <source>This can be achieved by writing an aggregate test list class, which calls the list function for each package. The following is an example that aggregates the tests from packages &lt;code&gt;foo&lt;/code&gt; and &lt;code&gt;bar&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="371c63c6d5dc014c275bdf938f53552071c015c1" translate="yes" xml:space="preserve">
          <source>This can either be a class or because the interface only has a single apply method, can also be a lambda.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c956ba9d44a5af070d94c66c5dec868a4acd3958" translate="yes" xml:space="preserve">
          <source>This changes the value associated with &quot;test&quot; to 6.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3a09a024834e762829a2f3ecd1f68aacc6edd24" translate="yes" xml:space="preserve">
          <source>This class buffers the file contents to accumulate full lines. If the file does not contain linebreaks, the whole file content is read and buffered, which might exceed memory resources. Take care.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c45b7a352285e22c1467fba6340c0c4599028e22" translate="yes" xml:space="preserve">
          <source>This class is modelled after the C data structure for holding socket addresses for both IPv4 and IPv6 &lt;code&gt;sockaddr_storage&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2cf7abdf24b52351526b08cfedae0467afdeeb4" translate="yes" xml:space="preserve">
          <source>This contains file system metadata for a path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86630adbcadf2f4981f8362db5cdeb818d54eefd" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;0&lt;/code&gt; on success, else the value of &lt;code&gt;errno&lt;/code&gt; on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e92e1a1bcd293612c2240051328cc6a81253e221" translate="yes" xml:space="preserve">
          <source>This instance returns lines from the position of the given &lt;code&gt;file&lt;/code&gt; at the time this constructor is called. Later manipulation of the file position is not accounted for. As a result iterating with this class will always return the full file content without gaps or repeated lines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49332aad1fc4a56324fa14bb812de3a2ab3d0373" translate="yes" xml:space="preserve">
          <source>This is a capability that allows the holder to serialise objects. It does not allow the holder to examine serialised data or to deserialise objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4883b3f64ec77e42200f05041e12754adcd381f2" translate="yes" xml:space="preserve">
          <source>This is a capability token that allows the holder to deserialise objects. It does not allow the holder to serialise objects or examine serialised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9951f08ac1923a722d9dfcde5fe244c89d9a04ad" translate="yes" xml:space="preserve">
          <source>This is a capability token that allows the holder to examine serialised data. This should only be provided to types that need to write serialised data to some output stream, such as a file or socket. A type with the SerialiseAuth capability should usually not also have OutputSerialisedAuth, as the combination gives the holder the ability to examine the bitwise contents of any object it has a reference to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54eb163f1f96e74659333aa61064d30ecbd9fc19" translate="yes" xml:space="preserve">
          <source>This is a capability token that allows the holder to treat data arbitrary bytes as serialised data. This is the most dangerous capability, as currently it is possible for a malformed chunk of data to crash your program if it is deserialised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="173839233dcb27323d1a98488de4ee1df6cb3f2d" translate="yes" xml:space="preserve">
          <source>This is a debug only assertion. If the test is false, it will print any supplied error message to stderr and raise an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc75a7abba1132ce7f13adf9d0fabe6e273b6028" translate="yes" xml:space="preserve">
          <source>This is a debug only print utility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52ad39233d3b3ca74b888b3fbaf00d2a2f80680a" translate="yes" xml:space="preserve">
          <source>This is a map that uses identity comparison on the key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f471bb5ab5de92bd34d955fe108b700b25d283c" translate="yes" xml:space="preserve">
          <source>This is a map that uses structural equality on the key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9833d93b4aa45ec453fe77392cfb751c57dc0c1a" translate="yes" xml:space="preserve">
          <source>This is an assertion that is always enabled. If the test is false, it will print any supplied error message to stderr and raise an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2986631e765912b75933409750c97dbc36f92694" translate="yes" xml:space="preserve">
          <source>This is an implementation of xoroshiro128**, as detailed at:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa4bd1bfb327256755d71bd9332ad3e5e9dba216" translate="yes" xml:space="preserve">
          <source>This is an implementation of xoroshiro128+, as detailed at:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01364991b829b54562c37698b1735fcdeb91ee3d" translate="yes" xml:space="preserve">
          <source>This is an implementation of xorshift+, as detailed at:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73aee9f20b0c5e2db4f4290ec60ba7d80485bfba" translate="yes" xml:space="preserve">
          <source>This is called for each error encountered. Return false to halt processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1ef812a1ec1574f516634244bef5b3024469f38" translate="yes" xml:space="preserve">
          <source>This is called for every valid entry in the INI file. If key/value pairs occur before a section name, the section can be an empty string. Return false to halt processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5119160c6033c3556a568c62f8e4e6d53268453" translate="yes" xml:space="preserve">
          <source>This is called for every valid section in the INI file. Return false to halt processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c50c306bf5688cf6622abbc224a5dbd929ebbd5d" translate="yes" xml:space="preserve">
          <source>This is currently the default Rand implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a340754d10ab6dfe50ac1e7f8d7da4773a763ee2" translate="yes" xml:space="preserve">
          <source>This is the filesystem path locating this directory on the file system and an object capability granting access to operate on this directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="789c39348a7d2da715a2e69ea4a2f09e2951cf39" translate="yes" xml:space="preserve">
          <source>This is the filesystem path locating this file on the file system and an object capability granting access to operate on this file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cee611a6de5e0e0f4042c24b581a3d5ec783b539" translate="yes" xml:space="preserve">
          <source>This is used to parse INI formatted text as a nested map of strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e41270830c442e65900d8444ff017f72fdad7b0" translate="yes" xml:space="preserve">
          <source>This is useful for getting the &lt;a href=&quot;builtin-ambientauth&quot;&gt;root authority&lt;/a&gt; in order to access the filesystem (See &lt;a href=&quot;files--index&quot;&gt;files&lt;/a&gt;) or the network (See &lt;a href=&quot;net--index&quot;&gt;net&lt;/a&gt;) in your tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7df768e1cb17256953605b59acfa5304ef25fb0" translate="yes" xml:space="preserve">
          <source>This method errors if this string cannot be parsed to a float, if the result would over- or underflow, the offset exceeds the size of this string or there are leftover characters in the string after conversion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73bdb895648d4f211095e0e2fcbcd8a9a061afdf" translate="yes" xml:space="preserve">
          <source>This might error, which does not necessarily mean that the Iterator is exhausted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="203f5387006fc8e6ce590e9c31ecf14ff9be21e6" translate="yes" xml:space="preserve">
          <source>This needs to be recalled after every call to &lt;code&gt;done&lt;/code&gt; as &lt;code&gt;done&lt;/code&gt; resets the chunks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9deeffc83c65043920592740c8c68e834c196e4" translate="yes" xml:space="preserve">
          <source>This package is deprecated and will be removed in a future release. Use the &lt;a href=&quot;cli--index&quot;&gt;cli&lt;/a&gt; package instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="540d18ade0fc5d661ebf0ac62ceff12c907318aa" translate="yes" xml:space="preserve">
          <source>This package provides support for serialising and deserialising arbitrary data structures.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e76c9048d358f184526c126ca38e424af15866c2" translate="yes" xml:space="preserve">
          <source>This pattern is useful for cases where you have multiple things that need to happen to complete your test, but don't want to have to collect them all yourself into a single actor that calls the complete method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b34b2d71ff7ddca2c27b74bd76e7e93cc5640e2c" translate="yes" xml:space="preserve">
          <source>This places the current process into capability mode, a mode of execution in which processes may only issue system calls operating on file descriptors or reading limited global system state. Access to global name spaces, such as file system or IPC name spaces, is prevented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4c1f4870b48fb17dd86a5c9068c29331702aa50" translate="yes" xml:space="preserve">
          <source>This program echos its command line arguments with the option of uppercasing them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b1633bbe74dcd19f25b71b114809140cb1cbdc9" translate="yes" xml:space="preserve">
          <source>This program opens the files that are given as command line arguments and prints their contents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d78d97b2172a8165cef38ab356049d59426803a5" translate="yes" xml:space="preserve">
          <source>This re-encodes the type of &lt;code&gt;that&lt;/code&gt; from A to MaybePointer[A], allowing &lt;code&gt;that&lt;/code&gt; to be assigned to a field or variable of type MaybePointer[A]. It doesn't allocate a wrapper object: there is no containing object for &lt;code&gt;that&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e742c5cba718c68fb504ab9ef0905f0d6a907588" translate="yes" xml:space="preserve">
          <source>This re-encodes the type of &lt;code&gt;this&lt;/code&gt; from MaybePointer[A] to A, allowing &lt;code&gt;this&lt;/code&gt; to be assigned to a field of variable of type A. If &lt;code&gt;this&lt;/code&gt; is a null pointer, an error is raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94f0d784e1a9b1f8e7774597b53a2a0c760da671" translate="yes" xml:space="preserve">
          <source>This represents serialised data. How it can be used depends on the other capabilities a caller holds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55b1a525487038116da1e11f15f02cc034c5c401" translate="yes" xml:space="preserve">
          <source>This returns a null pointer typed as a MaybePointer[A].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="867577a39cc9d7a3ec9fc4575a6c40b47f0ba480" translate="yes" xml:space="preserve">
          <source>This should only be used for legacy applications that specifically require XorShift128Plus, otherwise use Rand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae79e7e3bec5fa567dbe4e2ba42722d673152f3f" translate="yes" xml:space="preserve">
          <source>This stores a UNIX-style mode broken out into a Bool for each bit. For other operating systems, the mapping will be approximate. For example, on Windows, if the file is readable all the read Bools will be set, and if the file is writeable, all the write Bools will be set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="375201e44bf87ba16fe364648cf82398c1b6798d" translate="yes" xml:space="preserve">
          <source>This type represents the root capability. When a Pony program starts, the Env passed to the Main actor contains an instance of the root capability.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3daf54eafeaa709e6bbb87283fb6da313a87fa79" translate="yes" xml:space="preserve">
          <source>This will raise an error if the FileStat capability isn't available or the file descriptor is invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cbf607dc7f985ebded19790d846580b6a008a0e" translate="yes" xml:space="preserve">
          <source>This will raise an error if the FileStat capability isn't available or the path doesn't exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8ca9703d0a771b05d6f7cea89c8974f19aa2b33" translate="yes" xml:space="preserve">
          <source>This will raise an error if the path doesn't exist or it is not a directory, or if FileRead or FileStat permission isn't available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3603216ec190fb6c11c01e067fbe8a384b25fe2" translate="yes" xml:space="preserve">
          <source>This will result in an iterator that prints the numbers 2, 4, and 6. However, due to the lazy nature of the map and filter, no iteration has actually occurred and nothing will be printed. One solution to this would be to loop over the resulting Iter as so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3559b55c7eb2841602c0d9c16ae3e3356ed009ad" translate="yes" xml:space="preserve">
          <source>This will trigger the iteration and print out the values 2, 4, and 6. This is where the &lt;code&gt;run&lt;/code&gt; method comes in handy by doing the iteration without the need for a loop. So the final code would be as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d4a62fa6e2220487bba87703808d8ea31f18983" translate="yes" xml:space="preserve">
          <source>This with the flag set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f03fe5a60b67a8d2ee53bbdaf840a9a8fba8c6cd" translate="yes" xml:space="preserve">
          <source>This with the flag unset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f5c9f0556de308bb649e44726196afe6e30168c" translate="yes" xml:space="preserve">
          <source>This with the new (key, value) mapping.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd294a249e7374ff7a6aaafeb17b167a46124d36" translate="yes" xml:space="preserve">
          <source>This without the given key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="083844e2b6feda8e41c9a99bf627c61624b73a73" translate="yes" xml:space="preserve">
          <source>Tidy up after the test has completed. Called for each run test, whether that test passed, succeeded or timed out. The default is to do nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c82e6dd86807ee3db07e3c82bec1ae1ce00b08b" translate="yes" xml:space="preserve">
          <source>Time</source>
          <target state="translated">Time</target>
        </trans-unit>
        <trans-unit id="ebeffd8e17b44ac1ef2fb3d221ba29187865d5e6" translate="yes" xml:space="preserve">
          <source>Time Package</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cd81b4177ed76d173f06deea4eaa448198c3b7c" translate="yes" xml:space="preserve">
          <source>Time of last access as a tuple of seconds and nanoseconds since the epoch:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fab4bd46861530d5de94140dc6e1a1cb03788a43" translate="yes" xml:space="preserve">
          <source>Time of last modification as tuple of seconds and nanoseconds since the epoch:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfa024353f54515d40dc76d18b942919f8bab09f" translate="yes" xml:space="preserve">
          <source>Time of the last change either the attributes (number of links, owner, group, file mode, ...) or the content of &lt;code&gt;filepath&lt;/code&gt; as a tuple of seconds and nanoseconds since the epoch:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f7d6178f83ccea2d4092fcada2d47a696439a22" translate="yes" xml:space="preserve">
          <source>Time._clock_gettime()</source>
          <target state="translated">Time._clock_gettime()</target>
        </trans-unit>
        <trans-unit id="c9be09e089da0404433a8759e8225ddce7a1ad92" translate="yes" xml:space="preserve">
          <source>Time._query_performance_counter()</source>
          <target state="translated">Time._query_performance_counter()</target>
        </trans-unit>
        <trans-unit id="7115811bf9b8137184d76d193bd794032e0307c0" translate="yes" xml:space="preserve">
          <source>Time.create()</source>
          <target state="translated">Time.create()</target>
        </trans-unit>
        <trans-unit id="2e0fe9a5a995bb10ab639e27d105853815580b96" translate="yes" xml:space="preserve">
          <source>Time.cycles()</source>
          <target state="translated">Time.cycles()</target>
        </trans-unit>
        <trans-unit id="8644cebee43aeec95fb2f469cc31a4231e04ee9d" translate="yes" xml:space="preserve">
          <source>Time.eq()</source>
          <target state="translated">Time.eq()</target>
        </trans-unit>
        <trans-unit id="308cbf82e3432605629fae933cb389394751aa32" translate="yes" xml:space="preserve">
          <source>Time.micros()</source>
          <target state="translated">Time.micros()</target>
        </trans-unit>
        <trans-unit id="4952a1665deaf389f7be53131c4359d0328230bf" translate="yes" xml:space="preserve">
          <source>Time.millis()</source>
          <target state="translated">Time.millis()</target>
        </trans-unit>
        <trans-unit id="f2161d8d3f100b0f4caed4ea3bc213241b870684" translate="yes" xml:space="preserve">
          <source>Time.nanos()</source>
          <target state="translated">Time.nanos()</target>
        </trans-unit>
        <trans-unit id="0ba38a670f0aa537b9b1793113a11d47c9f358aa" translate="yes" xml:space="preserve">
          <source>Time.ne()</source>
          <target state="translated">Time.ne()</target>
        </trans-unit>
        <trans-unit id="ddf0925e757f3fb990074cd70db650df958589d9" translate="yes" xml:space="preserve">
          <source>Time.now()</source>
          <target state="translated">Time.now()</target>
        </trans-unit>
        <trans-unit id="a3265171bc4d971907d8d464c8960d0c07f77d1c" translate="yes" xml:space="preserve">
          <source>Time.perf_begin()</source>
          <target state="translated">Time.perf_begin()</target>
        </trans-unit>
        <trans-unit id="979932431da45451724c9eefa95f3caaa965bd13" translate="yes" xml:space="preserve">
          <source>Time.perf_end()</source>
          <target state="translated">Time.perf_end()</target>
        </trans-unit>
        <trans-unit id="69eaaf3d5a5ecdd5c3abe2b7615436ef01f33ca8" translate="yes" xml:space="preserve">
          <source>Time.seconds()</source>
          <target state="translated">Time.seconds()</target>
        </trans-unit>
        <trans-unit id="7ad5a11736531616b528f683529a42f320e14975" translate="yes" xml:space="preserve">
          <source>Timeouts should not be used as the standard method of detecting if a test has failed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d9cec22f36fd2bb99d5fe8c4723347bec202ca5" translate="yes" xml:space="preserve">
          <source>Timer</source>
          <target state="translated">Timer</target>
        </trans-unit>
        <trans-unit id="70dfce7dabfd267e1b56aa4edc3e5967fa96e3c5" translate="yes" xml:space="preserve">
          <source>Timer._abs_expiration_time()</source>
          <target state="translated">Timer._abs_expiration_time()</target>
        </trans-unit>
        <trans-unit id="640187d05b73e602591be7695cef806bbac6ec60" translate="yes" xml:space="preserve">
          <source>Timer._cancel()</source>
          <target state="translated">Timer._cancel()</target>
        </trans-unit>
        <trans-unit id="fac6be0f21a7f6e6fa3f51575631b0d1c83b348c" translate="yes" xml:space="preserve">
          <source>Timer._fire()</source>
          <target state="translated">Timer._fire()</target>
        </trans-unit>
        <trans-unit id="74bca8df749d97aa25fbdd4a1625b0d6f3498243" translate="yes" xml:space="preserve">
          <source>Timer._get_node()</source>
          <target state="translated">Timer._get_node()</target>
        </trans-unit>
        <trans-unit id="69596e55c1c1af00ec03dbe8e4fde031abd3572c" translate="yes" xml:space="preserve">
          <source>Timer._next()</source>
          <target state="translated">Timer._next()</target>
        </trans-unit>
        <trans-unit id="db1d9eab9c500ceee303bde724de72a25be73752" translate="yes" xml:space="preserve">
          <source>Timer._slop()</source>
          <target state="translated">Timer._slop()</target>
        </trans-unit>
        <trans-unit id="985985b514a5370fda28b25f394a2b25df7cc04f" translate="yes" xml:space="preserve">
          <source>Timer.abs()</source>
          <target state="translated">Timer.abs()</target>
        </trans-unit>
        <trans-unit id="6bcba36b0435cd608c3302bc9afd7dd04b9a91b1" translate="yes" xml:space="preserve">
          <source>Timer.create()</source>
          <target state="translated">Timer.create()</target>
        </trans-unit>
        <trans-unit id="7ed806486177bc4ee7491a08be89ead63d51dd65" translate="yes" xml:space="preserve">
          <source>TimerNotify</source>
          <target state="translated">TimerNotify</target>
        </trans-unit>
        <trans-unit id="fad467e19d9dc4f916a30b9b98c6fc66c30ecc44" translate="yes" xml:space="preserve">
          <source>TimerNotify.apply()</source>
          <target state="translated">TimerNotify.apply()</target>
        </trans-unit>
        <trans-unit id="2b2a085c764aad5f8a57776e9facf926b1d30c24" translate="yes" xml:space="preserve">
          <source>TimerNotify.cancel()</source>
          <target state="translated">TimerNotify.cancel()</target>
        </trans-unit>
        <trans-unit id="841cd03a97cd854590864d79ae48ee749c5e902e" translate="yes" xml:space="preserve">
          <source>Timers</source>
          <target state="translated">Timers</target>
        </trans-unit>
        <trans-unit id="54a5d15fa452150a5ae10364fb18bfd4327169b8" translate="yes" xml:space="preserve">
          <source>Timers._advance()</source>
          <target state="translated">Timers._advance()</target>
        </trans-unit>
        <trans-unit id="d6f27a7e270d363c5746713b569ae8871c63cdb8" translate="yes" xml:space="preserve">
          <source>Timers._bits()</source>
          <target state="translated">Timers._bits()</target>
        </trans-unit>
        <trans-unit id="61cbf00cc7a9f58af3841e5ef94295516acecba7" translate="yes" xml:space="preserve">
          <source>Timers._event_notify()</source>
          <target state="translated">Timers._event_notify()</target>
        </trans-unit>
        <trans-unit id="f75d50619dcdc5d4a921c4afc4428a5a896b1e1e" translate="yes" xml:space="preserve">
          <source>Timers._expiration_max()</source>
          <target state="translated">Timers._expiration_max()</target>
        </trans-unit>
        <trans-unit id="b2cdd0e292a66b3164e20c73447265615354b905" translate="yes" xml:space="preserve">
          <source>Timers._fire()</source>
          <target state="translated">Timers._fire()</target>
        </trans-unit>
        <trans-unit id="35384d572adf1ac49e52685a5f5f5b14833fda88" translate="yes" xml:space="preserve">
          <source>Timers._get_wheel()</source>
          <target state="translated">Timers._get_wheel()</target>
        </trans-unit>
        <trans-unit id="4297e827ed70c5b652e49b49f55385e13edcb200" translate="yes" xml:space="preserve">
          <source>Timers._next()</source>
          <target state="translated">Timers._next()</target>
        </trans-unit>
        <trans-unit id="5d5a8929a26b07e56cc908c91479c5adbdbee25b" translate="yes" xml:space="preserve">
          <source>Timers._set_time()</source>
          <target state="translated">Timers._set_time()</target>
        </trans-unit>
        <trans-unit id="81b086d2e6f2eb940f00485e96133e762145aaa8" translate="yes" xml:space="preserve">
          <source>Timers._wheels()</source>
          <target state="translated">Timers._wheels()</target>
        </trans-unit>
        <trans-unit id="be685336c5857a0a3c36037a4c70693fcaadbefe" translate="yes" xml:space="preserve">
          <source>Timers.apply()</source>
          <target state="translated">Timers.apply()</target>
        </trans-unit>
        <trans-unit id="0835b03c78002d776071b1906e16224a0d48614a" translate="yes" xml:space="preserve">
          <source>Timers.cancel()</source>
          <target state="translated">Timers.cancel()</target>
        </trans-unit>
        <trans-unit id="29fc81b57fcbebda4f3c7dc879174bc970cece1c" translate="yes" xml:space="preserve">
          <source>Timers.create()</source>
          <target state="translated">Timers.create()</target>
        </trans-unit>
        <trans-unit id="ef353dce0f72e15a18406d002af556795ffca336" translate="yes" xml:space="preserve">
          <source>Timers.dispose()</source>
          <target state="translated">Timers.dispose()</target>
        </trans-unit>
        <trans-unit id="a8b6b4cd2389cd7f37c818a274515559c9192f1f" translate="yes" xml:space="preserve">
          <source>To help simplify test writing and distribution this package depends on as few other packages as possible. Currently the required packages are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3640b1660b34ab9e836d958f6ee1f744985dfbf7" translate="yes" xml:space="preserve">
          <source>To learn more about Base64, we suggest you check out the &lt;a href=&quot;https://en.wikipedia.org/wiki/Base64&quot;&gt;wikipedia entry&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e9f0279909d7259c2160d94b7c5fc42a5f11017" translate="yes" xml:space="preserve">
          <source>To use PonyTest simply write a class for each test and a TestList type that tells the PonyTest object about the tests. Typically the TestList will be Main for the package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b8d965b3950b136e5fd381c8b938e3261b21ef1" translate="yes" xml:space="preserve">
          <source>Top level JSON type containing an entire document. A JSON document consists of exactly 1 value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbd5c6acb8184fae519b801cb9d293b30e77edce" translate="yes" xml:space="preserve">
          <source>Total number of samples to be measured. (Default: 20)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2d765b1544827f8c45ccdce1fe764890b8b4935" translate="yes" xml:space="preserve">
          <source>Total size of &lt;code&gt;filepath&lt;/code&gt; in bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b66cd70f9503a18cd63f5a0e5087ad0fef2abb24" translate="yes" xml:space="preserve">
          <source>Transforms the string to lower case. Currently only knows ASCII case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bca8787da828d2c3f5fb467552afc177d8c14538" translate="yes" xml:space="preserve">
          <source>Transforms the string to upper case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b688b5adeaba2abe8684f266e324ed826a2739f8" translate="yes" xml:space="preserve">
          <source>Trim the array to a portion of itself, covering &lt;code&gt;from&lt;/code&gt; until &lt;code&gt;to&lt;/code&gt;. Unlike slice, the operation does not allocate a new array nor copy elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fc577f55a078eca6e3ff378ab6bc8d935bc371d" translate="yes" xml:space="preserve">
          <source>Trim the string to a portion of itself, covering &lt;code&gt;from&lt;/code&gt; until &lt;code&gt;to&lt;/code&gt;. Unlike slice, the operation does not allocate a new string nor copy elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33ee73dc0c9314fc55bf6cdc5442442f1a4ce9b6" translate="yes" xml:space="preserve">
          <source>True if it believes there are remaining entries. May not be right if values were added or removed from the map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45de97ed87f7ecae47ec2bb531abcab6b45cf8c5" translate="yes" xml:space="preserve">
          <source>True if it believes there are remaining entries. May not be right if values were added or removed from the set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c4b0c9299bd3112e83f3cad604895744ebbb6d8" translate="yes" xml:space="preserve">
          <source>Truncate an array to the given length, discarding excess elements. If the array is already smaller than len, do nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e2341e8006927957c915e50cd11168a3273993b" translate="yes" xml:space="preserve">
          <source>Truncate the list to the given length, discarding excess elements. If the list is already smaller than len, do nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4e8acbc45eafad8dad75e701269a7f6c08a797c" translate="yes" xml:space="preserve">
          <source>Truncate the sequence to the given length, discarding excess elements. If the sequence is already smaller than len, do nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eddd32d74bbd34c599ce1652139930a4c679ee62" translate="yes" xml:space="preserve">
          <source>Truncate the string to zero length.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73653b71257b686d83618637ab547e7efd83b20e" translate="yes" xml:space="preserve">
          <source>Truncates the string at the minimum of len and space. Ensures there is a null terminator. Does not check for null terminators inside the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cfb41e50da2e86c7623a0291debd116963ef196" translate="yes" xml:space="preserve">
          <source>Try to remove the provided key from the Map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6626ddd5fbc612a05e018b4d8378940aff2b2f2" translate="yes" xml:space="preserve">
          <source>Try to remove unused space, making it available for garbage collection. The request may be ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb20cac69971f1baa365d0e030238f5773ec0f0d" translate="yes" xml:space="preserve">
          <source>Try to remove unused space, making it available for garbage collection. The request may be ignored. The string is returned to allow call chaining.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a50469955e1cf553b250b028751668bf464d9368" translate="yes" xml:space="preserve">
          <source>Turn Nagle on/off. Defaults to on. This can only be set on a connected socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="480c7ca58ca9ac66ac709781dae1192603d5ff6e" translate="yes" xml:space="preserve">
          <source>Turns an addrinfo pointer into an array of addresses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0e4d3c9972d03b6295c1acbbccfafaa97652ff4" translate="yes" xml:space="preserve">
          <source>Turns an array of strings that look like environment variables, ie key=value, into a map from string to string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c54c59b1edfd5c283c6189248b4f0abda052f5c" translate="yes" xml:space="preserve">
          <source>Turns an array of strings that look like environment variables, ie. key=value, into a map of string to string. Can optionally filter for keys matching a 'prefix', and will squash resulting keys to lowercase iff 'squash' is true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75e6f28c501f53913dfa51a80d17d74810fd8352" translate="yes" xml:space="preserve">
          <source>Type Alias For</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0a839ecebdd9fc8b28e0bdb35644fa14f5cf8a9" translate="yes" xml:space="preserve">
          <source>Type parameter B is the unlying field used to store the flags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aa254d8d9f8550eda071a028ce2500d0e2a0b8d" translate="yes" xml:space="preserve">
          <source>Types the compiler needs to know exist, such as None.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e23d5be115e0d78a4c07b456beae9145078c28b" translate="yes" xml:space="preserve">
          <source>Types with &quot;magic&quot; internal workings that must be supplied directly by the compiler, such as U32.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0445737445bf3d571335fc317052feb19686d3f" translate="yes" xml:space="preserve">
          <source>U128</source>
          <target state="translated">U128</target>
        </trans-unit>
        <trans-unit id="0e48019689d5c0e23d98682b9d179640174c80f0" translate="yes" xml:space="preserve">
          <source>U128._value()</source>
          <target state="translated">U128._value()</target>
        </trans-unit>
        <trans-unit id="6ead3b1b8c0df90c63bcce8ee6357997bd32d09a" translate="yes" xml:space="preserve">
          <source>U128.abs()</source>
          <target state="translated">U128.abs()</target>
        </trans-unit>
        <trans-unit id="a0b8868c5a73bb59d4925bb5feefb073e43009ae" translate="yes" xml:space="preserve">
          <source>U128.add()</source>
          <target state="translated">U128.add()</target>
        </trans-unit>
        <trans-unit id="9c43b91ebce81d0899430a9ca1dccbba012479e5" translate="yes" xml:space="preserve">
          <source>U128.add_partial()</source>
          <target state="translated">U128.add_partial()</target>
        </trans-unit>
        <trans-unit id="ff2f9713648528e5e6e4273f0ee84059eee95be5" translate="yes" xml:space="preserve">
          <source>U128.add_unsafe()</source>
          <target state="translated">U128.add_unsafe()</target>
        </trans-unit>
        <trans-unit id="69b42dd2e2f7958cd53745df67c3780bcc3a0ded" translate="yes" xml:space="preserve">
          <source>U128.addc()</source>
          <target state="translated">U128.addc()</target>
        </trans-unit>
        <trans-unit id="42f9f65c5d29cd553466e24878ac6970b4176789" translate="yes" xml:space="preserve">
          <source>U128.bit_reverse()</source>
          <target state="translated">U128.bit_reverse()</target>
        </trans-unit>
        <trans-unit id="03b990a7c9a9706fcf76f823758938367f937c99" translate="yes" xml:space="preserve">
          <source>U128.bitwidth()</source>
          <target state="translated">U128.bitwidth()</target>
        </trans-unit>
        <trans-unit id="bb801d246655688135c9c0d38e47aab3ca75ea61" translate="yes" xml:space="preserve">
          <source>U128.bswap()</source>
          <target state="translated">U128.bswap()</target>
        </trans-unit>
        <trans-unit id="f1c3c0bd16f4a07f55c2fb51daf4ce86464da667" translate="yes" xml:space="preserve">
          <source>U128.bytewidth()</source>
          <target state="translated">U128.bytewidth()</target>
        </trans-unit>
        <trans-unit id="3bf0ceb8d4711b3a051847c90edc651fccd7cc36" translate="yes" xml:space="preserve">
          <source>U128.clz()</source>
          <target state="translated">U128.clz()</target>
        </trans-unit>
        <trans-unit id="ec572b5eb1329797a4b5e8c69dac215a931a018c" translate="yes" xml:space="preserve">
          <source>U128.clz_unsafe()</source>
          <target state="translated">U128.clz_unsafe()</target>
        </trans-unit>
        <trans-unit id="f65870e8ee24f81b0507ff6deb393706f87240c2" translate="yes" xml:space="preserve">
          <source>U128.compare()</source>
          <target state="translated">U128.compare()</target>
        </trans-unit>
        <trans-unit id="fdc339b352a67de61fcd734a03a05830e7a8ac17" translate="yes" xml:space="preserve">
          <source>U128.create()</source>
          <target state="translated">U128.create()</target>
        </trans-unit>
        <trans-unit id="bf07d1f376ea96fff00d30ccf45b2ba3d6c90521" translate="yes" xml:space="preserve">
          <source>U128.ctz()</source>
          <target state="translated">U128.ctz()</target>
        </trans-unit>
        <trans-unit id="bb049e4d9ae91068021d09817a70cb0025327d75" translate="yes" xml:space="preserve">
          <source>U128.ctz_unsafe()</source>
          <target state="translated">U128.ctz_unsafe()</target>
        </trans-unit>
        <trans-unit id="7c4cfa2d7778d3340f22609ed9be3ae5bee5ebe0" translate="yes" xml:space="preserve">
          <source>U128.div()</source>
          <target state="translated">U128.div()</target>
        </trans-unit>
        <trans-unit id="f60d7204ac6c0f43bc451844d1c86b559e0117f7" translate="yes" xml:space="preserve">
          <source>U128.div_partial()</source>
          <target state="translated">U128.div_partial()</target>
        </trans-unit>
        <trans-unit id="d28434ba3f5e687c5e48b2386b7fc1100bdcf1bf" translate="yes" xml:space="preserve">
          <source>U128.div_unsafe()</source>
          <target state="translated">U128.div_unsafe()</target>
        </trans-unit>
        <trans-unit id="003c09d0abd15ed3d2e40f210a68a2b1b17cdf92" translate="yes" xml:space="preserve">
          <source>U128.divc()</source>
          <target state="translated">U128.divc()</target>
        </trans-unit>
        <trans-unit id="0cd2e99b58b8ea196b21544712191398d8fbcaa1" translate="yes" xml:space="preserve">
          <source>U128.divrem()</source>
          <target state="translated">U128.divrem()</target>
        </trans-unit>
        <trans-unit id="17720c78e407dcf7e571814c8b6318058ed95d96" translate="yes" xml:space="preserve">
          <source>U128.divrem_partial()</source>
          <target state="translated">U128.divrem_partial()</target>
        </trans-unit>
        <trans-unit id="e29fc14f3f13818174b47aa75bbf76ad9959cd0b" translate="yes" xml:space="preserve">
          <source>U128.divrem_unsafe()</source>
          <target state="translated">U128.divrem_unsafe()</target>
        </trans-unit>
        <trans-unit id="fe9a68a593e9f0b7ca03e5c921abb1bf12a1671f" translate="yes" xml:space="preserve">
          <source>U128.eq()</source>
          <target state="translated">U128.eq()</target>
        </trans-unit>
        <trans-unit id="b1fd1012f2b6b85a0ae416c65ac12c409d4ed7ef" translate="yes" xml:space="preserve">
          <source>U128.f32()</source>
          <target state="translated">U128.f32()</target>
        </trans-unit>
        <trans-unit id="0a61255c1e0aa91263dd34a592639c58e3df05f4" translate="yes" xml:space="preserve">
          <source>U128.f32_unsafe()</source>
          <target state="translated">U128.f32_unsafe()</target>
        </trans-unit>
        <trans-unit id="1af2ba9b54aab47cadf62158e8535b0ee27f4c5a" translate="yes" xml:space="preserve">
          <source>U128.f64()</source>
          <target state="translated">U128.f64()</target>
        </trans-unit>
        <trans-unit id="b860d600580be84fae2e3d6c6a1d50b1f5a561bc" translate="yes" xml:space="preserve">
          <source>U128.f64_unsafe()</source>
          <target state="translated">U128.f64_unsafe()</target>
        </trans-unit>
        <trans-unit id="6cad60185463a4b679d0b4cc75b7d62de468c06a" translate="yes" xml:space="preserve">
          <source>U128.fld()</source>
          <target state="translated">U128.fld()</target>
        </trans-unit>
        <trans-unit id="06d9a767c72fcbafa19362ae5498076d6a1cb507" translate="yes" xml:space="preserve">
          <source>U128.fld_partial()</source>
          <target state="translated">U128.fld_partial()</target>
        </trans-unit>
        <trans-unit id="be648c45df64aa955d995c5042c3eeb49eb8b315" translate="yes" xml:space="preserve">
          <source>U128.fld_unsafe()</source>
          <target state="translated">U128.fld_unsafe()</target>
        </trans-unit>
        <trans-unit id="db991d201c603cf47155e2963422979bbaff1c71" translate="yes" xml:space="preserve">
          <source>U128.fldc()</source>
          <target state="translated">U128.fldc()</target>
        </trans-unit>
        <trans-unit id="17efac783a8a21e4ceb67bfeee3ab5d413306f4a" translate="yes" xml:space="preserve">
          <source>U128.from()</source>
          <target state="translated">U128.from()</target>
        </trans-unit>
        <trans-unit id="43103f202596a2e636b5a5dfd9ec56de06612427" translate="yes" xml:space="preserve">
          <source>U128.ge()</source>
          <target state="translated">U128.ge()</target>
        </trans-unit>
        <trans-unit id="dc760ea3104022ce671462fea74c3fa24e87e4e7" translate="yes" xml:space="preserve">
          <source>U128.gt()</source>
          <target state="translated">U128.gt()</target>
        </trans-unit>
        <trans-unit id="c3744375587508316936e0501c061b7954c40357" translate="yes" xml:space="preserve">
          <source>U128.hash()</source>
          <target state="translated">U128.hash()</target>
        </trans-unit>
        <trans-unit id="99e82e58d54c17b6eac52eebd0cc1426fe0c4df3" translate="yes" xml:space="preserve">
          <source>U128.hash64()</source>
          <target state="translated">U128.hash64()</target>
        </trans-unit>
        <trans-unit id="6931a83da3564b23fb0af7fb83942c7f868edb6f" translate="yes" xml:space="preserve">
          <source>U128.i128()</source>
          <target state="translated">U128.i128()</target>
        </trans-unit>
        <trans-unit id="8747228feae5bd8268976cb71948a3c92941c442" translate="yes" xml:space="preserve">
          <source>U128.i128_unsafe()</source>
          <target state="translated">U128.i128_unsafe()</target>
        </trans-unit>
        <trans-unit id="37acf05331f57c79e935b2caa67c5ae0b3fc57d9" translate="yes" xml:space="preserve">
          <source>U128.i16()</source>
          <target state="translated">U128.i16()</target>
        </trans-unit>
        <trans-unit id="097ffe51fa0987d448862679ba505fa77e0f45a7" translate="yes" xml:space="preserve">
          <source>U128.i16_unsafe()</source>
          <target state="translated">U128.i16_unsafe()</target>
        </trans-unit>
        <trans-unit id="7e3a3248bc1d5ab6797b1270083f0f4404b537a2" translate="yes" xml:space="preserve">
          <source>U128.i32()</source>
          <target state="translated">U128.i32()</target>
        </trans-unit>
        <trans-unit id="a140e581cb6408ebf8055960ddf18bd2403a2699" translate="yes" xml:space="preserve">
          <source>U128.i32_unsafe()</source>
          <target state="translated">U128.i32_unsafe()</target>
        </trans-unit>
        <trans-unit id="45af48fa3df58131c1569487d0382ebb810be7e3" translate="yes" xml:space="preserve">
          <source>U128.i64()</source>
          <target state="translated">U128.i64()</target>
        </trans-unit>
        <trans-unit id="1b290494ca0045364f3e3da21b74374463e1dc98" translate="yes" xml:space="preserve">
          <source>U128.i64_unsafe()</source>
          <target state="translated">U128.i64_unsafe()</target>
        </trans-unit>
        <trans-unit id="5df0ee61cf83f06857697bb10b299110d95cfc9f" translate="yes" xml:space="preserve">
          <source>U128.i8()</source>
          <target state="translated">U128.i8()</target>
        </trans-unit>
        <trans-unit id="a9a692f5b4c0d71086efae20c14f3613e213ff55" translate="yes" xml:space="preserve">
          <source>U128.i8_unsafe()</source>
          <target state="translated">U128.i8_unsafe()</target>
        </trans-unit>
        <trans-unit id="a4be39cde20a90f7ccf6ed5597396c2596d12b3e" translate="yes" xml:space="preserve">
          <source>U128.ilong()</source>
          <target state="translated">U128.ilong()</target>
        </trans-unit>
        <trans-unit id="45b7daa207864c6015c27e65a6df77af90aeff89" translate="yes" xml:space="preserve">
          <source>U128.ilong_unsafe()</source>
          <target state="translated">U128.ilong_unsafe()</target>
        </trans-unit>
        <trans-unit id="3eec1d9cef4e321e341bbf1eb571e82428c5f200" translate="yes" xml:space="preserve">
          <source>U128.isize()</source>
          <target state="translated">U128.isize()</target>
        </trans-unit>
        <trans-unit id="3685290146e17f49b9c1cae91e1e9ad88b1d0477" translate="yes" xml:space="preserve">
          <source>U128.isize_unsafe()</source>
          <target state="translated">U128.isize_unsafe()</target>
        </trans-unit>
        <trans-unit id="2b9ba530028e209b38b887b80e40073e06a7e3f6" translate="yes" xml:space="preserve">
          <source>U128.le()</source>
          <target state="translated">U128.le()</target>
        </trans-unit>
        <trans-unit id="96f92fdc252ae09697deed069cf6b48d234d5320" translate="yes" xml:space="preserve">
          <source>U128.lt()</source>
          <target state="translated">U128.lt()</target>
        </trans-unit>
        <trans-unit id="a80589b4a703611d3ec284efd194858deaeda2b5" translate="yes" xml:space="preserve">
          <source>U128.max()</source>
          <target state="translated">U128.max()</target>
        </trans-unit>
        <trans-unit id="5ca19301197fa59a272cb82753f51b078c8fa2c2" translate="yes" xml:space="preserve">
          <source>U128.max_value()</source>
          <target state="translated">U128.max_value()</target>
        </trans-unit>
        <trans-unit id="c6559de11831e7a691d7198681a55f206507f57d" translate="yes" xml:space="preserve">
          <source>U128.min()</source>
          <target state="translated">U128.min()</target>
        </trans-unit>
        <trans-unit id="62ac0c05c225feac1dad84c908bc00576689b9e0" translate="yes" xml:space="preserve">
          <source>U128.min_value()</source>
          <target state="translated">U128.min_value()</target>
        </trans-unit>
        <trans-unit id="2e2a0330a291fc9845693dc874a5f94fe780f792" translate="yes" xml:space="preserve">
          <source>U128.mod()</source>
          <target state="translated">U128.mod()</target>
        </trans-unit>
        <trans-unit id="61bf89bc758927b7e8f0965f59930fac417d186a" translate="yes" xml:space="preserve">
          <source>U128.mod_partial()</source>
          <target state="translated">U128.mod_partial()</target>
        </trans-unit>
        <trans-unit id="7390347fa598ad3199384c7924e1697879cd3869" translate="yes" xml:space="preserve">
          <source>U128.mod_unsafe()</source>
          <target state="translated">U128.mod_unsafe()</target>
        </trans-unit>
        <trans-unit id="35d986926c539557494f87ebb43c18801d2ede4c" translate="yes" xml:space="preserve">
          <source>U128.modc()</source>
          <target state="translated">U128.modc()</target>
        </trans-unit>
        <trans-unit id="aa485014a7fb0cc668c14d5d9398b4ec24f7fd8f" translate="yes" xml:space="preserve">
          <source>U128.mul()</source>
          <target state="translated">U128.mul()</target>
        </trans-unit>
        <trans-unit id="37431931a96101a5087c1c6e98918f422d95268b" translate="yes" xml:space="preserve">
          <source>U128.mul_partial()</source>
          <target state="translated">U128.mul_partial()</target>
        </trans-unit>
        <trans-unit id="5b5ca72861ec229a6f31688a8275ef0b14ec6600" translate="yes" xml:space="preserve">
          <source>U128.mul_unsafe()</source>
          <target state="translated">U128.mul_unsafe()</target>
        </trans-unit>
        <trans-unit id="28d3a556dd200b3587bc738de0dcfb0a8332ede5" translate="yes" xml:space="preserve">
          <source>U128.mulc()</source>
          <target state="translated">U128.mulc()</target>
        </trans-unit>
        <trans-unit id="dc62ff84a5de2743c56a73e71d163d74a685a656" translate="yes" xml:space="preserve">
          <source>U128.ne()</source>
          <target state="translated">U128.ne()</target>
        </trans-unit>
        <trans-unit id="6e822d078f28dd3c3b338bb02bcc2f4cdd39bdf7" translate="yes" xml:space="preserve">
          <source>U128.neg()</source>
          <target state="translated">U128.neg()</target>
        </trans-unit>
        <trans-unit id="048b5361f446e402a94816975e37bcd377ddf74d" translate="yes" xml:space="preserve">
          <source>U128.neg_unsafe()</source>
          <target state="translated">U128.neg_unsafe()</target>
        </trans-unit>
        <trans-unit id="31d7270f39138818beed46b599276ed52bdc422a" translate="yes" xml:space="preserve">
          <source>U128.next_pow2()</source>
          <target state="translated">U128.next_pow2()</target>
        </trans-unit>
        <trans-unit id="667494f3ee241eafd61d16db748ba28ed83a1c40" translate="yes" xml:space="preserve">
          <source>U128.op_and()</source>
          <target state="translated">U128.op_and()</target>
        </trans-unit>
        <trans-unit id="c4f2a2c430d89d18c6f68d4fffb35685573b7291" translate="yes" xml:space="preserve">
          <source>U128.op_not()</source>
          <target state="translated">U128.op_not()</target>
        </trans-unit>
        <trans-unit id="2482b5727fed9375bb1e3d2b62840c616bba1efa" translate="yes" xml:space="preserve">
          <source>U128.op_or()</source>
          <target state="translated">U128.op_or()</target>
        </trans-unit>
        <trans-unit id="c832b785c11d4b5c4a92504ca56fac0108b22255" translate="yes" xml:space="preserve">
          <source>U128.op_xor()</source>
          <target state="translated">U128.op_xor()</target>
        </trans-unit>
        <trans-unit id="df9e6e630cbcc744e751235ea001212c8a59debf" translate="yes" xml:space="preserve">
          <source>U128.popcount()</source>
          <target state="translated">U128.popcount()</target>
        </trans-unit>
        <trans-unit id="9d5b4cf196d283027616f0cf9a517250cc7ed1d8" translate="yes" xml:space="preserve">
          <source>U128.rem()</source>
          <target state="translated">U128.rem()</target>
        </trans-unit>
        <trans-unit id="348f3a70ca685c52bcc2836015e0cfb59b844263" translate="yes" xml:space="preserve">
          <source>U128.rem_partial()</source>
          <target state="translated">U128.rem_partial()</target>
        </trans-unit>
        <trans-unit id="e33a78721f96d51b11141f87b01b77f1d48fef8e" translate="yes" xml:space="preserve">
          <source>U128.rem_unsafe()</source>
          <target state="translated">U128.rem_unsafe()</target>
        </trans-unit>
        <trans-unit id="8db186d2dad6ef5de3c8fd5817e3e495c9e30008" translate="yes" xml:space="preserve">
          <source>U128.remc()</source>
          <target state="translated">U128.remc()</target>
        </trans-unit>
        <trans-unit id="8ee08284c33453523e6a6734b6b1f8ca96301c63" translate="yes" xml:space="preserve">
          <source>U128.rotl()</source>
          <target state="translated">U128.rotl()</target>
        </trans-unit>
        <trans-unit id="1a8c27ea634aa76006e7b1787793c3b2cd47b548" translate="yes" xml:space="preserve">
          <source>U128.rotr()</source>
          <target state="translated">U128.rotr()</target>
        </trans-unit>
        <trans-unit id="ec56b3d10742ae9fd6e4043c88c4357e33c9fb68" translate="yes" xml:space="preserve">
          <source>U128.shl()</source>
          <target state="translated">U128.shl()</target>
        </trans-unit>
        <trans-unit id="44771fd26b497a7cc39f0148e2b4b139e6ee5b67" translate="yes" xml:space="preserve">
          <source>U128.shl_unsafe()</source>
          <target state="translated">U128.shl_unsafe()</target>
        </trans-unit>
        <trans-unit id="ce6f85c31b64b21204fec79ccb5d5f708557a06d" translate="yes" xml:space="preserve">
          <source>U128.shr()</source>
          <target state="translated">U128.shr()</target>
        </trans-unit>
        <trans-unit id="540417f66d4b5e38952fb0a2fadbba15984667c2" translate="yes" xml:space="preserve">
          <source>U128.shr_unsafe()</source>
          <target state="translated">U128.shr_unsafe()</target>
        </trans-unit>
        <trans-unit id="0ca8acf2e4347884e1000cd6684995470a4d4c8c" translate="yes" xml:space="preserve">
          <source>U128.string()</source>
          <target state="translated">U128.string()</target>
        </trans-unit>
        <trans-unit id="c707ab79821f5e5280848878c0b7463d4c70d0d7" translate="yes" xml:space="preserve">
          <source>U128.sub()</source>
          <target state="translated">U128.sub()</target>
        </trans-unit>
        <trans-unit id="710c056faecbfb5141fcf4af3b5e0499e14a3324" translate="yes" xml:space="preserve">
          <source>U128.sub_partial()</source>
          <target state="translated">U128.sub_partial()</target>
        </trans-unit>
        <trans-unit id="5f6e97b155a550a747d876088c813cb1d0b5207b" translate="yes" xml:space="preserve">
          <source>U128.sub_unsafe()</source>
          <target state="translated">U128.sub_unsafe()</target>
        </trans-unit>
        <trans-unit id="1dee2b8e3e1477f1e0593316786c04a4df1a1611" translate="yes" xml:space="preserve">
          <source>U128.subc()</source>
          <target state="translated">U128.subc()</target>
        </trans-unit>
        <trans-unit id="92381d1f49f8afcb8a680540e509074665b00bd4" translate="yes" xml:space="preserve">
          <source>U128.u128()</source>
          <target state="translated">U128.u128()</target>
        </trans-unit>
        <trans-unit id="250d2bb9c3ea0958e2238eb8e729f28c385c6d49" translate="yes" xml:space="preserve">
          <source>U128.u128_unsafe()</source>
          <target state="translated">U128.u128_unsafe()</target>
        </trans-unit>
        <trans-unit id="cfd5724de65fd78f6b350d5c0118cc2344246e6c" translate="yes" xml:space="preserve">
          <source>U128.u16()</source>
          <target state="translated">U128.u16()</target>
        </trans-unit>
        <trans-unit id="1c49c430f7241ec56e31df6347c6ec348a71094f" translate="yes" xml:space="preserve">
          <source>U128.u16_unsafe()</source>
          <target state="translated">U128.u16_unsafe()</target>
        </trans-unit>
        <trans-unit id="19d1a01c247e74c60fccbd6a77ad80ced8704e75" translate="yes" xml:space="preserve">
          <source>U128.u32()</source>
          <target state="translated">U128.u32()</target>
        </trans-unit>
        <trans-unit id="f872e0207a02378267a69a8984b7f1138b44022a" translate="yes" xml:space="preserve">
          <source>U128.u32_unsafe()</source>
          <target state="translated">U128.u32_unsafe()</target>
        </trans-unit>
        <trans-unit id="6b9bb297ef2088befc34ddb15593dce8889a6234" translate="yes" xml:space="preserve">
          <source>U128.u64()</source>
          <target state="translated">U128.u64()</target>
        </trans-unit>
        <trans-unit id="4827459da5164eadf0182835d373a2dbebe64996" translate="yes" xml:space="preserve">
          <source>U128.u64_unsafe()</source>
          <target state="translated">U128.u64_unsafe()</target>
        </trans-unit>
        <trans-unit id="cefb4e6bcb158921431278179dc95d739eb5fe07" translate="yes" xml:space="preserve">
          <source>U128.u8()</source>
          <target state="translated">U128.u8()</target>
        </trans-unit>
        <trans-unit id="c3a7a785a9416a3792b74c66d8cabd5b079b8d7b" translate="yes" xml:space="preserve">
          <source>U128.u8_unsafe()</source>
          <target state="translated">U128.u8_unsafe()</target>
        </trans-unit>
        <trans-unit id="748d28ffb148c13e2b15cf507094ab73ee912110" translate="yes" xml:space="preserve">
          <source>U128.ulong()</source>
          <target state="translated">U128.ulong()</target>
        </trans-unit>
        <trans-unit id="8eac28340cc70386b1da4ec633282434cb108e8f" translate="yes" xml:space="preserve">
          <source>U128.ulong_unsafe()</source>
          <target state="translated">U128.ulong_unsafe()</target>
        </trans-unit>
        <trans-unit id="58107421164fb8454acf088b2660bd56bfc8ead1" translate="yes" xml:space="preserve">
          <source>U128.usize()</source>
          <target state="translated">U128.usize()</target>
        </trans-unit>
        <trans-unit id="c2d296a3b8818eb5e945d92ed0779a9a7220e1d4" translate="yes" xml:space="preserve">
          <source>U128.usize_unsafe()</source>
          <target state="translated">U128.usize_unsafe()</target>
        </trans-unit>
        <trans-unit id="f13dd0c0015bdffb4d3552524bdad748e825df5c" translate="yes" xml:space="preserve">
          <source>U16</source>
          <target state="translated">U16</target>
        </trans-unit>
        <trans-unit id="6d588809e9a3c31b3dcf205d9d6835a383ed8bde" translate="yes" xml:space="preserve">
          <source>U16._value()</source>
          <target state="translated">U16._value()</target>
        </trans-unit>
        <trans-unit id="848ae0605792a613b2023aa23a3156318fa3c100" translate="yes" xml:space="preserve">
          <source>U16.abs()</source>
          <target state="translated">U16.abs()</target>
        </trans-unit>
        <trans-unit id="1406f567a91d924a067309562034ab53d9c7ee2a" translate="yes" xml:space="preserve">
          <source>U16.add()</source>
          <target state="translated">U16.add()</target>
        </trans-unit>
        <trans-unit id="fcba82853eb3d157c54a03b9eb550227278a17a1" translate="yes" xml:space="preserve">
          <source>U16.add_partial()</source>
          <target state="translated">U16.add_partial()</target>
        </trans-unit>
        <trans-unit id="596ed449824ddaed962ea549bcbbc3ca648c5071" translate="yes" xml:space="preserve">
          <source>U16.add_unsafe()</source>
          <target state="translated">U16.add_unsafe()</target>
        </trans-unit>
        <trans-unit id="24aed3dcdda343988a07813805ce9a9cbfe20384" translate="yes" xml:space="preserve">
          <source>U16.addc()</source>
          <target state="translated">U16.addc()</target>
        </trans-unit>
        <trans-unit id="c2ff8dd2a4c0010bdd49bc438b456721cd5ee6ab" translate="yes" xml:space="preserve">
          <source>U16.bit_reverse()</source>
          <target state="translated">U16.bit_reverse()</target>
        </trans-unit>
        <trans-unit id="19a9c65621a46667ec461c71038fe6df8d639f91" translate="yes" xml:space="preserve">
          <source>U16.bitwidth()</source>
          <target state="translated">U16.bitwidth()</target>
        </trans-unit>
        <trans-unit id="5b828e5b39c5aa4827d85e6563b8a62876c73016" translate="yes" xml:space="preserve">
          <source>U16.bswap()</source>
          <target state="translated">U16.bswap()</target>
        </trans-unit>
        <trans-unit id="90ed3c64335f47f83744b7a12744c07e09dbe4de" translate="yes" xml:space="preserve">
          <source>U16.bytewidth()</source>
          <target state="translated">U16.bytewidth()</target>
        </trans-unit>
        <trans-unit id="cef17a908110c2673ad183d70bd178d13fead3c0" translate="yes" xml:space="preserve">
          <source>U16.clz()</source>
          <target state="translated">U16.clz()</target>
        </trans-unit>
        <trans-unit id="3e6e2f21fa8553b0a63663fb86e49f3bfe9ed764" translate="yes" xml:space="preserve">
          <source>U16.clz_unsafe()</source>
          <target state="translated">U16.clz_unsafe()</target>
        </trans-unit>
        <trans-unit id="fa0e1b886a1fdcd8849d3d89fbb63c08bc82d608" translate="yes" xml:space="preserve">
          <source>U16.compare()</source>
          <target state="translated">U16.compare()</target>
        </trans-unit>
        <trans-unit id="ba3c9b5b2d73e3b74b024513f1ec1930e1caae1c" translate="yes" xml:space="preserve">
          <source>U16.create()</source>
          <target state="translated">U16.create()</target>
        </trans-unit>
        <trans-unit id="1fab968d4f5123feb1beddc9fc00a86257f257d7" translate="yes" xml:space="preserve">
          <source>U16.ctz()</source>
          <target state="translated">U16.ctz()</target>
        </trans-unit>
        <trans-unit id="6d5ce9f9c50e02c95afa823ce858f75303e7cff7" translate="yes" xml:space="preserve">
          <source>U16.ctz_unsafe()</source>
          <target state="translated">U16.ctz_unsafe()</target>
        </trans-unit>
        <trans-unit id="754d5b282318df47589b55392dbca1b98df8c520" translate="yes" xml:space="preserve">
          <source>U16.div()</source>
          <target state="translated">U16.div()</target>
        </trans-unit>
        <trans-unit id="e7be145e2a31273bee96397b81d59061bc05dbea" translate="yes" xml:space="preserve">
          <source>U16.div_partial()</source>
          <target state="translated">U16.div_partial()</target>
        </trans-unit>
        <trans-unit id="d314a1d3bdce352450193308eef2d900cf0c025b" translate="yes" xml:space="preserve">
          <source>U16.div_unsafe()</source>
          <target state="translated">U16.div_unsafe()</target>
        </trans-unit>
        <trans-unit id="b74e28620c09c923dae18814451a3c74f85fa798" translate="yes" xml:space="preserve">
          <source>U16.divc()</source>
          <target state="translated">U16.divc()</target>
        </trans-unit>
        <trans-unit id="6d9d6a06863514796be0ee7047cdd9c5b3a847b4" translate="yes" xml:space="preserve">
          <source>U16.divrem()</source>
          <target state="translated">U16.divrem()</target>
        </trans-unit>
        <trans-unit id="6e34eac740016ff08ba12f4b879ba75053c71470" translate="yes" xml:space="preserve">
          <source>U16.divrem_partial()</source>
          <target state="translated">U16.divrem_partial()</target>
        </trans-unit>
        <trans-unit id="d9fa69d03518582e1b20e09733d7e11aeca202a4" translate="yes" xml:space="preserve">
          <source>U16.divrem_unsafe()</source>
          <target state="translated">U16.divrem_unsafe()</target>
        </trans-unit>
        <trans-unit id="2f0f0d8a0b2d81ce683d2c647ac64d002c5b68cb" translate="yes" xml:space="preserve">
          <source>U16.eq()</source>
          <target state="translated">U16.eq()</target>
        </trans-unit>
        <trans-unit id="7c5a73520b06838084b9e5435a4771bf766bd8df" translate="yes" xml:space="preserve">
          <source>U16.f32()</source>
          <target state="translated">U16.f32()</target>
        </trans-unit>
        <trans-unit id="86304727bdb03c3a6ba27b0d5d737e14c6d807e1" translate="yes" xml:space="preserve">
          <source>U16.f32_unsafe()</source>
          <target state="translated">U16.f32_unsafe()</target>
        </trans-unit>
        <trans-unit id="d29e8da469976892b183b31d495767e5360b658d" translate="yes" xml:space="preserve">
          <source>U16.f64()</source>
          <target state="translated">U16.f64()</target>
        </trans-unit>
        <trans-unit id="82660f9326c9c805124bd111ba4d7d57dc20433b" translate="yes" xml:space="preserve">
          <source>U16.f64_unsafe()</source>
          <target state="translated">U16.f64_unsafe()</target>
        </trans-unit>
        <trans-unit id="3dc38bf204fd9ec861d2b78bb6b847daf38c2f6f" translate="yes" xml:space="preserve">
          <source>U16.fld()</source>
          <target state="translated">U16.fld()</target>
        </trans-unit>
        <trans-unit id="b0eca0fa7ff81f3abb5524afbb589320548b4f4c" translate="yes" xml:space="preserve">
          <source>U16.fld_partial()</source>
          <target state="translated">U16.fld_partial()</target>
        </trans-unit>
        <trans-unit id="2014308757c2f94b0414e95c666c154ffd2bd591" translate="yes" xml:space="preserve">
          <source>U16.fld_unsafe()</source>
          <target state="translated">U16.fld_unsafe()</target>
        </trans-unit>
        <trans-unit id="c6485626b5ecd03c8e8505377104a9a722d47bbe" translate="yes" xml:space="preserve">
          <source>U16.fldc()</source>
          <target state="translated">U16.fldc()</target>
        </trans-unit>
        <trans-unit id="be591bdcc5ee333dea813785e6bc83eef27056a6" translate="yes" xml:space="preserve">
          <source>U16.from()</source>
          <target state="translated">U16.from()</target>
        </trans-unit>
        <trans-unit id="a5027b025293581c556b4f9eda9a1e9142a549eb" translate="yes" xml:space="preserve">
          <source>U16.ge()</source>
          <target state="translated">U16.ge()</target>
        </trans-unit>
        <trans-unit id="648b2e6ff83215c7acf5b9c449e228c6a51748c3" translate="yes" xml:space="preserve">
          <source>U16.gt()</source>
          <target state="translated">U16.gt()</target>
        </trans-unit>
        <trans-unit id="aba9e47c4bbdbdaee44ef25af19d21fa2c5ec36c" translate="yes" xml:space="preserve">
          <source>U16.hash()</source>
          <target state="translated">U16.hash()</target>
        </trans-unit>
        <trans-unit id="6a95bdfc5419a9cd06c1722fd09e485b6cfbe4af" translate="yes" xml:space="preserve">
          <source>U16.hash64()</source>
          <target state="translated">U16.hash64()</target>
        </trans-unit>
        <trans-unit id="88f70f5055fe27f907e1c8321c88bdeedba7849a" translate="yes" xml:space="preserve">
          <source>U16.i128()</source>
          <target state="translated">U16.i128()</target>
        </trans-unit>
        <trans-unit id="fd938cce0682e8e0372b3faede9909d0f34b18f4" translate="yes" xml:space="preserve">
          <source>U16.i128_unsafe()</source>
          <target state="translated">U16.i128_unsafe()</target>
        </trans-unit>
        <trans-unit id="8319d45df4b06fbf854d922856a60ee203ed41db" translate="yes" xml:space="preserve">
          <source>U16.i16()</source>
          <target state="translated">U16.i16()</target>
        </trans-unit>
        <trans-unit id="456574fbca6755d58e8664036de4252599614111" translate="yes" xml:space="preserve">
          <source>U16.i16_unsafe()</source>
          <target state="translated">U16.i16_unsafe()</target>
        </trans-unit>
        <trans-unit id="7cfa16ae71a90389ccabd7acdddfb3bbda2d30b4" translate="yes" xml:space="preserve">
          <source>U16.i32()</source>
          <target state="translated">U16.i32()</target>
        </trans-unit>
        <trans-unit id="39bc9d04570951343eca2dfa9b20de0617805b69" translate="yes" xml:space="preserve">
          <source>U16.i32_unsafe()</source>
          <target state="translated">U16.i32_unsafe()</target>
        </trans-unit>
        <trans-unit id="13129f2dafa4635f528df26fcf07a9c14340cb6a" translate="yes" xml:space="preserve">
          <source>U16.i64()</source>
          <target state="translated">U16.i64()</target>
        </trans-unit>
        <trans-unit id="167edd9d67ff873e8cb8a8987135cac7899e9fae" translate="yes" xml:space="preserve">
          <source>U16.i64_unsafe()</source>
          <target state="translated">U16.i64_unsafe()</target>
        </trans-unit>
        <trans-unit id="85886700e81fb6a010af8514814237fc35cb2fd1" translate="yes" xml:space="preserve">
          <source>U16.i8()</source>
          <target state="translated">U16.i8()</target>
        </trans-unit>
        <trans-unit id="00cff6adde8fee497a87261d313f94d6dc06b55d" translate="yes" xml:space="preserve">
          <source>U16.i8_unsafe()</source>
          <target state="translated">U16.i8_unsafe()</target>
        </trans-unit>
        <trans-unit id="f0a0de3a0cef420def3d81f70cefdf78e6d9db16" translate="yes" xml:space="preserve">
          <source>U16.ilong()</source>
          <target state="translated">U16.ilong()</target>
        </trans-unit>
        <trans-unit id="d4e8a14d3d003885a808891c04c6618db362f7a2" translate="yes" xml:space="preserve">
          <source>U16.ilong_unsafe()</source>
          <target state="translated">U16.ilong_unsafe()</target>
        </trans-unit>
        <trans-unit id="2fd9a63eab03e5bc87a86b2fb8b9dd5985f69fb0" translate="yes" xml:space="preserve">
          <source>U16.isize()</source>
          <target state="translated">U16.isize()</target>
        </trans-unit>
        <trans-unit id="675c8d443d01bafc31fddb304cc9bada6f90ce23" translate="yes" xml:space="preserve">
          <source>U16.isize_unsafe()</source>
          <target state="translated">U16.isize_unsafe()</target>
        </trans-unit>
        <trans-unit id="5cb8cb75e87668917240e259e1cf277a0332d7e4" translate="yes" xml:space="preserve">
          <source>U16.le()</source>
          <target state="translated">U16.le()</target>
        </trans-unit>
        <trans-unit id="5ccb516c3c2cbab6facf14486bfe7e3b6382d330" translate="yes" xml:space="preserve">
          <source>U16.lt()</source>
          <target state="translated">U16.lt()</target>
        </trans-unit>
        <trans-unit id="820e4265ce8196574ff0909efd751681fa469b6b" translate="yes" xml:space="preserve">
          <source>U16.max()</source>
          <target state="translated">U16.max()</target>
        </trans-unit>
        <trans-unit id="100085ae57fe7e4f43dbf99e89478e0370826614" translate="yes" xml:space="preserve">
          <source>U16.max_value()</source>
          <target state="translated">U16.max_value()</target>
        </trans-unit>
        <trans-unit id="97662ebbab8b8e5bdab2febc0c0f5ef7e2507d32" translate="yes" xml:space="preserve">
          <source>U16.min()</source>
          <target state="translated">U16.min()</target>
        </trans-unit>
        <trans-unit id="132d82415ac5aefb50c87ac94b09563449b5a082" translate="yes" xml:space="preserve">
          <source>U16.min_value()</source>
          <target state="translated">U16.min_value()</target>
        </trans-unit>
        <trans-unit id="4a98eeed0cd22f4b708436be1b027a1315430908" translate="yes" xml:space="preserve">
          <source>U16.mod()</source>
          <target state="translated">U16.mod()</target>
        </trans-unit>
        <trans-unit id="8bede801f712c989a4ae07932211b110ba0bb3a0" translate="yes" xml:space="preserve">
          <source>U16.mod_partial()</source>
          <target state="translated">U16.mod_partial()</target>
        </trans-unit>
        <trans-unit id="3c28146166e96b0fddd27433a9ea15f406d434bf" translate="yes" xml:space="preserve">
          <source>U16.mod_unsafe()</source>
          <target state="translated">U16.mod_unsafe()</target>
        </trans-unit>
        <trans-unit id="5aa6b21f613bdb0a92b33e576a8350de7662f4f6" translate="yes" xml:space="preserve">
          <source>U16.modc()</source>
          <target state="translated">U16.modc()</target>
        </trans-unit>
        <trans-unit id="2643f44185e3e53f13c4e2d97a802f7d0be17e75" translate="yes" xml:space="preserve">
          <source>U16.mul()</source>
          <target state="translated">U16.mul()</target>
        </trans-unit>
        <trans-unit id="f0b1b9ecfa6c72980ab51481a7444800b317c856" translate="yes" xml:space="preserve">
          <source>U16.mul_partial()</source>
          <target state="translated">U16.mul_partial()</target>
        </trans-unit>
        <trans-unit id="a6bc2cc150bc1f6a6c9fe83a83038829044bcfcf" translate="yes" xml:space="preserve">
          <source>U16.mul_unsafe()</source>
          <target state="translated">U16.mul_unsafe()</target>
        </trans-unit>
        <trans-unit id="855ac7903aa70a8f997fa4e8e517380ebfeeda6f" translate="yes" xml:space="preserve">
          <source>U16.mulc()</source>
          <target state="translated">U16.mulc()</target>
        </trans-unit>
        <trans-unit id="567a9cdee98a0b4f427eb32371f0c0e8054a3ead" translate="yes" xml:space="preserve">
          <source>U16.ne()</source>
          <target state="translated">U16.ne()</target>
        </trans-unit>
        <trans-unit id="8fe7409678cfe565eb09aa667a3fe078920f76b4" translate="yes" xml:space="preserve">
          <source>U16.neg()</source>
          <target state="translated">U16.neg()</target>
        </trans-unit>
        <trans-unit id="aa811f48b537b61e9f88575b08d1a3a4cd5d0dd5" translate="yes" xml:space="preserve">
          <source>U16.neg_unsafe()</source>
          <target state="translated">U16.neg_unsafe()</target>
        </trans-unit>
        <trans-unit id="f40d6c8cbbfc166c4da85a84c6b5e13bb89d3750" translate="yes" xml:space="preserve">
          <source>U16.next_pow2()</source>
          <target state="translated">U16.next_pow2()</target>
        </trans-unit>
        <trans-unit id="6b62f87fea62169a3e7aea6105e27840028b9196" translate="yes" xml:space="preserve">
          <source>U16.op_and()</source>
          <target state="translated">U16.op_and()</target>
        </trans-unit>
        <trans-unit id="fe43ebe680bbcdb57c84338d840cc4c809e97490" translate="yes" xml:space="preserve">
          <source>U16.op_not()</source>
          <target state="translated">U16.op_not()</target>
        </trans-unit>
        <trans-unit id="fcd9689306f36cc39a8d43dbbdb1b4224ade23e4" translate="yes" xml:space="preserve">
          <source>U16.op_or()</source>
          <target state="translated">U16.op_or()</target>
        </trans-unit>
        <trans-unit id="b199f77398838be1ee935023c5d688d92dc5c1f9" translate="yes" xml:space="preserve">
          <source>U16.op_xor()</source>
          <target state="translated">U16.op_xor()</target>
        </trans-unit>
        <trans-unit id="d5ddae857d7866374b756f2a08268105da12029a" translate="yes" xml:space="preserve">
          <source>U16.popcount()</source>
          <target state="translated">U16.popcount()</target>
        </trans-unit>
        <trans-unit id="1095eaa27e8ee4a18b102a4416a38bdd0c705f11" translate="yes" xml:space="preserve">
          <source>U16.rem()</source>
          <target state="translated">U16.rem()</target>
        </trans-unit>
        <trans-unit id="f92e24ee2ab0474e2434e4104c1d9671d7287644" translate="yes" xml:space="preserve">
          <source>U16.rem_partial()</source>
          <target state="translated">U16.rem_partial()</target>
        </trans-unit>
        <trans-unit id="92bffb6663e594d7e31b426fbc53de0136e35958" translate="yes" xml:space="preserve">
          <source>U16.rem_unsafe()</source>
          <target state="translated">U16.rem_unsafe()</target>
        </trans-unit>
        <trans-unit id="3cb951e223f1754fdd463fcaf343b67b82523049" translate="yes" xml:space="preserve">
          <source>U16.remc()</source>
          <target state="translated">U16.remc()</target>
        </trans-unit>
        <trans-unit id="1c7472de8684e8be5af6e3691ea311fb93dd158b" translate="yes" xml:space="preserve">
          <source>U16.rotl()</source>
          <target state="translated">U16.rotl()</target>
        </trans-unit>
        <trans-unit id="b5c21b74908a298ff32ec4a5f94e6b8cdf35db73" translate="yes" xml:space="preserve">
          <source>U16.rotr()</source>
          <target state="translated">U16.rotr()</target>
        </trans-unit>
        <trans-unit id="7d069899d4a622d2f12d080b7f51d458e39b412f" translate="yes" xml:space="preserve">
          <source>U16.shl()</source>
          <target state="translated">U16.shl()</target>
        </trans-unit>
        <trans-unit id="c9547f232a5d0241bc7e7cac3003f7c602e3c34b" translate="yes" xml:space="preserve">
          <source>U16.shl_unsafe()</source>
          <target state="translated">U16.shl_unsafe()</target>
        </trans-unit>
        <trans-unit id="ec16fc5b3362438db7c79a893e607e1013bf5d21" translate="yes" xml:space="preserve">
          <source>U16.shr()</source>
          <target state="translated">U16.shr()</target>
        </trans-unit>
        <trans-unit id="3d0da9a833fe68874cd6449faa729198b7604521" translate="yes" xml:space="preserve">
          <source>U16.shr_unsafe()</source>
          <target state="translated">U16.shr_unsafe()</target>
        </trans-unit>
        <trans-unit id="47a2bfacb88f222be7b1c191f2fa002da04257f6" translate="yes" xml:space="preserve">
          <source>U16.string()</source>
          <target state="translated">U16.string()</target>
        </trans-unit>
        <trans-unit id="857f3d6d78b1d0ec5e2d4b0173ba86fd679664b5" translate="yes" xml:space="preserve">
          <source>U16.sub()</source>
          <target state="translated">U16.sub()</target>
        </trans-unit>
        <trans-unit id="6258e4d10b057fb69980c986762ebd064f12ed3f" translate="yes" xml:space="preserve">
          <source>U16.sub_partial()</source>
          <target state="translated">U16.sub_partial()</target>
        </trans-unit>
        <trans-unit id="975d1e324451d0ab2bebe92b1c24608199f7d50c" translate="yes" xml:space="preserve">
          <source>U16.sub_unsafe()</source>
          <target state="translated">U16.sub_unsafe()</target>
        </trans-unit>
        <trans-unit id="7d090e08c76bb7e5600052ff99687d69f00afff2" translate="yes" xml:space="preserve">
          <source>U16.subc()</source>
          <target state="translated">U16.subc()</target>
        </trans-unit>
        <trans-unit id="5438031538a03732b4c8b93e53543fa3a849699b" translate="yes" xml:space="preserve">
          <source>U16.u128()</source>
          <target state="translated">U16.u128()</target>
        </trans-unit>
        <trans-unit id="2fb03d959cf8716cb7d5921d7024fa9be38796b8" translate="yes" xml:space="preserve">
          <source>U16.u128_unsafe()</source>
          <target state="translated">U16.u128_unsafe()</target>
        </trans-unit>
        <trans-unit id="c91a6119b8d65d82086d0dfcd0e8e69fd07cfa0b" translate="yes" xml:space="preserve">
          <source>U16.u16()</source>
          <target state="translated">U16.u16()</target>
        </trans-unit>
        <trans-unit id="212897f204c9632be9b86517ff9b6d6f034bdac7" translate="yes" xml:space="preserve">
          <source>U16.u16_unsafe()</source>
          <target state="translated">U16.u16_unsafe()</target>
        </trans-unit>
        <trans-unit id="4492c61cfeb636e021b90ca12151668598a06be5" translate="yes" xml:space="preserve">
          <source>U16.u32()</source>
          <target state="translated">U16.u32()</target>
        </trans-unit>
        <trans-unit id="1f5840d1ab5df67ff297ff711922aca288bec921" translate="yes" xml:space="preserve">
          <source>U16.u32_unsafe()</source>
          <target state="translated">U16.u32_unsafe()</target>
        </trans-unit>
        <trans-unit id="bb0730a251a8aec396a2e1700da31ed2146213bf" translate="yes" xml:space="preserve">
          <source>U16.u64()</source>
          <target state="translated">U16.u64()</target>
        </trans-unit>
        <trans-unit id="d70ae16ae8c08475988037c159381489e27ad80a" translate="yes" xml:space="preserve">
          <source>U16.u64_unsafe()</source>
          <target state="translated">U16.u64_unsafe()</target>
        </trans-unit>
        <trans-unit id="c496c362b03c6877b818157badda867f696bf6a5" translate="yes" xml:space="preserve">
          <source>U16.u8()</source>
          <target state="translated">U16.u8()</target>
        </trans-unit>
        <trans-unit id="5aeb0055e38ec60a2a07eba65bb4da1d6f75e51d" translate="yes" xml:space="preserve">
          <source>U16.u8_unsafe()</source>
          <target state="translated">U16.u8_unsafe()</target>
        </trans-unit>
        <trans-unit id="ebb21860ccb88c4d3bdb405264150e8d8ac94e63" translate="yes" xml:space="preserve">
          <source>U16.ulong()</source>
          <target state="translated">U16.ulong()</target>
        </trans-unit>
        <trans-unit id="f94e8061b51fe8dc6f8f63e56be9ca2db3f64891" translate="yes" xml:space="preserve">
          <source>U16.ulong_unsafe()</source>
          <target state="translated">U16.ulong_unsafe()</target>
        </trans-unit>
        <trans-unit id="16bdd1e1d227909dc34d676adb3abf0266d9b346" translate="yes" xml:space="preserve">
          <source>U16.usize()</source>
          <target state="translated">U16.usize()</target>
        </trans-unit>
        <trans-unit id="81b75e0d92af37fc0405d4aa3a3a0b013e3e47db" translate="yes" xml:space="preserve">
          <source>U16.usize_unsafe()</source>
          <target state="translated">U16.usize_unsafe()</target>
        </trans-unit>
        <trans-unit id="1fb0ae8ab6393d4be53bb10279b28ace4e4feef7" translate="yes" xml:space="preserve">
          <source>U32</source>
          <target state="translated">U32</target>
        </trans-unit>
        <trans-unit id="d95df88e533562024cbfa8ba013c7f015e64b36c" translate="yes" xml:space="preserve">
          <source>U32._value()</source>
          <target state="translated">U32._value()</target>
        </trans-unit>
        <trans-unit id="09b38ec022385f99fd7032681c7d59f83f910cd9" translate="yes" xml:space="preserve">
          <source>U32.abs()</source>
          <target state="translated">U32.abs()</target>
        </trans-unit>
        <trans-unit id="f939662ff2eafd1cf0a24a95771d690f42633f56" translate="yes" xml:space="preserve">
          <source>U32.add()</source>
          <target state="translated">U32.add()</target>
        </trans-unit>
        <trans-unit id="9bb105ce45ddee9bacbb1b5bcee53543a1eea8d9" translate="yes" xml:space="preserve">
          <source>U32.add_partial()</source>
          <target state="translated">U32.add_partial()</target>
        </trans-unit>
        <trans-unit id="1ed1bb5a01f038ec72f24c58db4c49d4ad90fc64" translate="yes" xml:space="preserve">
          <source>U32.add_unsafe()</source>
          <target state="translated">U32.add_unsafe()</target>
        </trans-unit>
        <trans-unit id="567d2bfdeaa154a398a31a6294e3b2a1f204b89e" translate="yes" xml:space="preserve">
          <source>U32.addc()</source>
          <target state="translated">U32.addc()</target>
        </trans-unit>
        <trans-unit id="19973b926549b8b33279fa4b8f81b907896a97e9" translate="yes" xml:space="preserve">
          <source>U32.bit_reverse()</source>
          <target state="translated">U32.bit_reverse()</target>
        </trans-unit>
        <trans-unit id="e0c0d6d2520fa23f8bd2eaa34e010f29090cbdbc" translate="yes" xml:space="preserve">
          <source>U32.bitwidth()</source>
          <target state="translated">U32.bitwidth()</target>
        </trans-unit>
        <trans-unit id="5f4dd3609675be5a0b4bbd4c3fc9786d475f956c" translate="yes" xml:space="preserve">
          <source>U32.bswap()</source>
          <target state="translated">U32.bswap()</target>
        </trans-unit>
        <trans-unit id="fcb0bfc0bd24de49d7e33f6e64e7d097dd7c51a1" translate="yes" xml:space="preserve">
          <source>U32.bytewidth()</source>
          <target state="translated">U32.bytewidth()</target>
        </trans-unit>
        <trans-unit id="e4fbbf62d75d73240ea9b9621e35f1bca2f4e234" translate="yes" xml:space="preserve">
          <source>U32.clz()</source>
          <target state="translated">U32.clz()</target>
        </trans-unit>
        <trans-unit id="e86a5f5f394b12002bc7b2e8f3002c3f66877474" translate="yes" xml:space="preserve">
          <source>U32.clz_unsafe()</source>
          <target state="translated">U32.clz_unsafe()</target>
        </trans-unit>
        <trans-unit id="7ac7ef497a3089cc9c41ee5c9965085c2c22bf95" translate="yes" xml:space="preserve">
          <source>U32.compare()</source>
          <target state="translated">U32.compare()</target>
        </trans-unit>
        <trans-unit id="003870fdf850008a81de45ee9b5be3851b176e12" translate="yes" xml:space="preserve">
          <source>U32.create()</source>
          <target state="translated">U32.create()</target>
        </trans-unit>
        <trans-unit id="09a46ca95a49cedce581cb2822eb18b6ff077caa" translate="yes" xml:space="preserve">
          <source>U32.ctz()</source>
          <target state="translated">U32.ctz()</target>
        </trans-unit>
        <trans-unit id="d7e0a36f73d7d7fb982ba52b251092a224998218" translate="yes" xml:space="preserve">
          <source>U32.ctz_unsafe()</source>
          <target state="translated">U32.ctz_unsafe()</target>
        </trans-unit>
        <trans-unit id="eb5b6656085229bfbbade2bbf8f76feb4ef17270" translate="yes" xml:space="preserve">
          <source>U32.div()</source>
          <target state="translated">U32.div()</target>
        </trans-unit>
        <trans-unit id="9e4a2d8d3f56b9b53768618c9537525e72de9d13" translate="yes" xml:space="preserve">
          <source>U32.div_partial()</source>
          <target state="translated">U32.div_partial()</target>
        </trans-unit>
        <trans-unit id="d9c61a002abab19206302508d94930a81e5853e1" translate="yes" xml:space="preserve">
          <source>U32.div_unsafe()</source>
          <target state="translated">U32.div_unsafe()</target>
        </trans-unit>
        <trans-unit id="3970917f4e712022a391414189ce8c6e9d099b10" translate="yes" xml:space="preserve">
          <source>U32.divc()</source>
          <target state="translated">U32.divc()</target>
        </trans-unit>
        <trans-unit id="36da48d5ba8e842e756cf33f38cb19c1ba19821e" translate="yes" xml:space="preserve">
          <source>U32.divrem()</source>
          <target state="translated">U32.divrem()</target>
        </trans-unit>
        <trans-unit id="d3714b0c11f21a5b83d298ec7e6ce730ee0871c6" translate="yes" xml:space="preserve">
          <source>U32.divrem_partial()</source>
          <target state="translated">U32.divrem_partial()</target>
        </trans-unit>
        <trans-unit id="65bee14835659bf9e7595fba4f8494763f87ac2c" translate="yes" xml:space="preserve">
          <source>U32.divrem_unsafe()</source>
          <target state="translated">U32.divrem_unsafe()</target>
        </trans-unit>
        <trans-unit id="811c3755da314559bf04fd7bf528812d489cbf30" translate="yes" xml:space="preserve">
          <source>U32.eq()</source>
          <target state="translated">U32.eq()</target>
        </trans-unit>
        <trans-unit id="cdd8d89e72111ef7b860055d411edaadea896748" translate="yes" xml:space="preserve">
          <source>U32.f32()</source>
          <target state="translated">U32.f32()</target>
        </trans-unit>
        <trans-unit id="52759e7e25a24805ad16e772ca31c2ebae6b787b" translate="yes" xml:space="preserve">
          <source>U32.f32_unsafe()</source>
          <target state="translated">U32.f32_unsafe()</target>
        </trans-unit>
        <trans-unit id="eda6bde4da29fae2e361a3259ddf5bfd361ca1c7" translate="yes" xml:space="preserve">
          <source>U32.f64()</source>
          <target state="translated">U32.f64()</target>
        </trans-unit>
        <trans-unit id="6b450c88ab5d248823706aa8cc4bdf81ae63ef68" translate="yes" xml:space="preserve">
          <source>U32.f64_unsafe()</source>
          <target state="translated">U32.f64_unsafe()</target>
        </trans-unit>
        <trans-unit id="0c3cd3b7342f3d17b7dfd4a174fc1768ac44580a" translate="yes" xml:space="preserve">
          <source>U32.fld()</source>
          <target state="translated">U32.fld()</target>
        </trans-unit>
        <trans-unit id="3478499324d5ed260b89ab012a7809e8f13be656" translate="yes" xml:space="preserve">
          <source>U32.fld_partial()</source>
          <target state="translated">U32.fld_partial()</target>
        </trans-unit>
        <trans-unit id="6993e109e9102f7426cdc47b788db85644813698" translate="yes" xml:space="preserve">
          <source>U32.fld_unsafe()</source>
          <target state="translated">U32.fld_unsafe()</target>
        </trans-unit>
        <trans-unit id="bce148e64ebb85b84abd65159528484782f56619" translate="yes" xml:space="preserve">
          <source>U32.fldc()</source>
          <target state="translated">U32.fldc()</target>
        </trans-unit>
        <trans-unit id="5725a1c1a4ac4d5c813955d09cdcb879097c2d26" translate="yes" xml:space="preserve">
          <source>U32.from()</source>
          <target state="translated">U32.from()</target>
        </trans-unit>
        <trans-unit id="cdf7a35a3ca386ac58db59c8a4cefa1c9897f04d" translate="yes" xml:space="preserve">
          <source>U32.ge()</source>
          <target state="translated">U32.ge()</target>
        </trans-unit>
        <trans-unit id="cbc40732b398a8037c24f67e24728af4b602c297" translate="yes" xml:space="preserve">
          <source>U32.gt()</source>
          <target state="translated">U32.gt()</target>
        </trans-unit>
        <trans-unit id="0fa5f6b3d8b4f707f31e81ca773e984606f89c63" translate="yes" xml:space="preserve">
          <source>U32.hash()</source>
          <target state="translated">U32.hash()</target>
        </trans-unit>
        <trans-unit id="bfc0702fa1811ae84203324007f1a13a896ae2e4" translate="yes" xml:space="preserve">
          <source>U32.hash64()</source>
          <target state="translated">U32.hash64()</target>
        </trans-unit>
        <trans-unit id="d376b11af85ddb2bf9ce4ac578a1a679d6ab9c8e" translate="yes" xml:space="preserve">
          <source>U32.i128()</source>
          <target state="translated">U32.i128()</target>
        </trans-unit>
        <trans-unit id="469d6d51b682f941cd64735c1c49d0d1d0d4f481" translate="yes" xml:space="preserve">
          <source>U32.i128_unsafe()</source>
          <target state="translated">U32.i128_unsafe()</target>
        </trans-unit>
        <trans-unit id="0902c50e5286e5823dc49b524f648346e7ada4a7" translate="yes" xml:space="preserve">
          <source>U32.i16()</source>
          <target state="translated">U32.i16()</target>
        </trans-unit>
        <trans-unit id="73e64f2864ac49dd0287e2ee0015d23aae293ec5" translate="yes" xml:space="preserve">
          <source>U32.i16_unsafe()</source>
          <target state="translated">U32.i16_unsafe()</target>
        </trans-unit>
        <trans-unit id="66798ee38ee998fab894aea2a75f67007eaf0390" translate="yes" xml:space="preserve">
          <source>U32.i32()</source>
          <target state="translated">U32.i32()</target>
        </trans-unit>
        <trans-unit id="7471d0c466d75e04f65a2d602d44994a21be0c85" translate="yes" xml:space="preserve">
          <source>U32.i32_unsafe()</source>
          <target state="translated">U32.i32_unsafe()</target>
        </trans-unit>
        <trans-unit id="2dd3d2d97a9deda420426921db2a46c481375428" translate="yes" xml:space="preserve">
          <source>U32.i64()</source>
          <target state="translated">U32.i64()</target>
        </trans-unit>
        <trans-unit id="851f089efb78a5f01d990d56d3d419f5582d2190" translate="yes" xml:space="preserve">
          <source>U32.i64_unsafe()</source>
          <target state="translated">U32.i64_unsafe()</target>
        </trans-unit>
        <trans-unit id="de85d66dc80b8b14628da70aed8d08085ebc86c7" translate="yes" xml:space="preserve">
          <source>U32.i8()</source>
          <target state="translated">U32.i8()</target>
        </trans-unit>
        <trans-unit id="ae270081bf007eafe5a81bc1a4b744037518c748" translate="yes" xml:space="preserve">
          <source>U32.i8_unsafe()</source>
          <target state="translated">U32.i8_unsafe()</target>
        </trans-unit>
        <trans-unit id="1fae743be81bd88b5da30073ab8cdd5fe369fa33" translate="yes" xml:space="preserve">
          <source>U32.ilong()</source>
          <target state="translated">U32.ilong()</target>
        </trans-unit>
        <trans-unit id="d6e4e53eb3fdce1dee1de4eebc5820006bd18bf3" translate="yes" xml:space="preserve">
          <source>U32.ilong_unsafe()</source>
          <target state="translated">U32.ilong_unsafe()</target>
        </trans-unit>
        <trans-unit id="fad1081ef75df7211e5523073925631ecf907581" translate="yes" xml:space="preserve">
          <source>U32.isize()</source>
          <target state="translated">U32.isize()</target>
        </trans-unit>
        <trans-unit id="340440c5538493a1891dabb910c02e57062d50d3" translate="yes" xml:space="preserve">
          <source>U32.isize_unsafe()</source>
          <target state="translated">U32.isize_unsafe()</target>
        </trans-unit>
        <trans-unit id="0040be20d6c51a555f44779fa8e29c7845da7bb9" translate="yes" xml:space="preserve">
          <source>U32.le()</source>
          <target state="translated">U32.le()</target>
        </trans-unit>
        <trans-unit id="a6d49e6967e0067367f9cb46f7c5287859408f5b" translate="yes" xml:space="preserve">
          <source>U32.lt()</source>
          <target state="translated">U32.lt()</target>
        </trans-unit>
        <trans-unit id="711e8f9548bd9ab9183c79d10171c72bf3fca87f" translate="yes" xml:space="preserve">
          <source>U32.max()</source>
          <target state="translated">U32.max()</target>
        </trans-unit>
        <trans-unit id="43bb35c7580cff0affdf81a9b0d2f178e1005db2" translate="yes" xml:space="preserve">
          <source>U32.max_value()</source>
          <target state="translated">U32.max_value()</target>
        </trans-unit>
        <trans-unit id="fe8a1b2065ff9201c18e4a1b56462061809c36b7" translate="yes" xml:space="preserve">
          <source>U32.min()</source>
          <target state="translated">U32.min()</target>
        </trans-unit>
        <trans-unit id="fd77a9691135d46f1b93347c05112e1014e891ea" translate="yes" xml:space="preserve">
          <source>U32.min_value()</source>
          <target state="translated">U32.min_value()</target>
        </trans-unit>
        <trans-unit id="422e1648d216f1ef02884155adc1f952b38d4ab7" translate="yes" xml:space="preserve">
          <source>U32.mod()</source>
          <target state="translated">U32.mod()</target>
        </trans-unit>
        <trans-unit id="f3d0afef4c8106b895be453a132b4427ceb77c2b" translate="yes" xml:space="preserve">
          <source>U32.mod_partial()</source>
          <target state="translated">U32.mod_partial()</target>
        </trans-unit>
        <trans-unit id="c5dc6f87958784ace5a3042765ef6562d7669cbd" translate="yes" xml:space="preserve">
          <source>U32.mod_unsafe()</source>
          <target state="translated">U32.mod_unsafe()</target>
        </trans-unit>
        <trans-unit id="0de7b4840a58366a1151d1a266439a05385fbd9f" translate="yes" xml:space="preserve">
          <source>U32.modc()</source>
          <target state="translated">U32.modc()</target>
        </trans-unit>
        <trans-unit id="fa19a213977e02f35fc3cb120b9ac04e4c5a6ab5" translate="yes" xml:space="preserve">
          <source>U32.mul()</source>
          <target state="translated">U32.mul()</target>
        </trans-unit>
        <trans-unit id="2e5d0025ada9e3bf4eef666f0da0994ba6486dde" translate="yes" xml:space="preserve">
          <source>U32.mul_partial()</source>
          <target state="translated">U32.mul_partial()</target>
        </trans-unit>
        <trans-unit id="66e6239654c9ccdf684887c2e162e28e4aeefd4b" translate="yes" xml:space="preserve">
          <source>U32.mul_unsafe()</source>
          <target state="translated">U32.mul_unsafe()</target>
        </trans-unit>
        <trans-unit id="a3938d9f35744a452f8d90a365277281f81ac97f" translate="yes" xml:space="preserve">
          <source>U32.mulc()</source>
          <target state="translated">U32.mulc()</target>
        </trans-unit>
        <trans-unit id="35f30dbeb44c57d2ad9b37ea6f982cb1771b9c20" translate="yes" xml:space="preserve">
          <source>U32.ne()</source>
          <target state="translated">U32.ne()</target>
        </trans-unit>
        <trans-unit id="25f995708ade07d30fca102fe585dd42734da25e" translate="yes" xml:space="preserve">
          <source>U32.neg()</source>
          <target state="translated">U32.neg()</target>
        </trans-unit>
        <trans-unit id="161d7dd1708c974c10a402d674d0b65e0d65eee0" translate="yes" xml:space="preserve">
          <source>U32.neg_unsafe()</source>
          <target state="translated">U32.neg_unsafe()</target>
        </trans-unit>
        <trans-unit id="5a23ab455410dab57e5b73dbcceb0c9917561ed7" translate="yes" xml:space="preserve">
          <source>U32.next_pow2()</source>
          <target state="translated">U32.next_pow2()</target>
        </trans-unit>
        <trans-unit id="1a328bf3a96e22d3b0d6ffbd5ec601b27331bffd" translate="yes" xml:space="preserve">
          <source>U32.op_and()</source>
          <target state="translated">U32.op_and()</target>
        </trans-unit>
        <trans-unit id="f71f56290161685be2e960617ab2c77ea0ce9dd4" translate="yes" xml:space="preserve">
          <source>U32.op_not()</source>
          <target state="translated">U32.op_not()</target>
        </trans-unit>
        <trans-unit id="2f48dcfdc0deed4ce7db2eef15ff985bd7a0e13c" translate="yes" xml:space="preserve">
          <source>U32.op_or()</source>
          <target state="translated">U32.op_or()</target>
        </trans-unit>
        <trans-unit id="7840e0a34810bea020b1a513ce1b41ba5e7204d1" translate="yes" xml:space="preserve">
          <source>U32.op_xor()</source>
          <target state="translated">U32.op_xor()</target>
        </trans-unit>
        <trans-unit id="f75483bff1c55cab2b49a5223fb3fda37c4dec4f" translate="yes" xml:space="preserve">
          <source>U32.popcount()</source>
          <target state="translated">U32.popcount()</target>
        </trans-unit>
        <trans-unit id="b1733c0917db98293622428c32525c91f7aa9918" translate="yes" xml:space="preserve">
          <source>U32.rem()</source>
          <target state="translated">U32.rem()</target>
        </trans-unit>
        <trans-unit id="d54fb0e9adaadc7129026322c28be9ccd6a4ea5f" translate="yes" xml:space="preserve">
          <source>U32.rem_partial()</source>
          <target state="translated">U32.rem_partial()</target>
        </trans-unit>
        <trans-unit id="8a4e5ca2a586be3f7e87269cdad87b9f3273c784" translate="yes" xml:space="preserve">
          <source>U32.rem_unsafe()</source>
          <target state="translated">U32.rem_unsafe()</target>
        </trans-unit>
        <trans-unit id="10b6ee7104186f505ef47afcdb84d4efc2221600" translate="yes" xml:space="preserve">
          <source>U32.remc()</source>
          <target state="translated">U32.remc()</target>
        </trans-unit>
        <trans-unit id="0b9631ab4bcfc653dd82f509ef76039dfb329221" translate="yes" xml:space="preserve">
          <source>U32.rotl()</source>
          <target state="translated">U32.rotl()</target>
        </trans-unit>
        <trans-unit id="3df98e8334b16212fe38418541fe5f1335456e41" translate="yes" xml:space="preserve">
          <source>U32.rotr()</source>
          <target state="translated">U32.rotr()</target>
        </trans-unit>
        <trans-unit id="d67d286c790f20ef1b211bba37637a7d1bff2450" translate="yes" xml:space="preserve">
          <source>U32.shl()</source>
          <target state="translated">U32.shl()</target>
        </trans-unit>
        <trans-unit id="3854c4eacb8b2c233e864d8d3620fe5ae10937ea" translate="yes" xml:space="preserve">
          <source>U32.shl_unsafe()</source>
          <target state="translated">U32.shl_unsafe()</target>
        </trans-unit>
        <trans-unit id="729bab1249d77a8dcb2deb4ca1aa213a5be1a774" translate="yes" xml:space="preserve">
          <source>U32.shr()</source>
          <target state="translated">U32.shr()</target>
        </trans-unit>
        <trans-unit id="034d98b9169111a0a8f7a968ba21c8f24d9cdd17" translate="yes" xml:space="preserve">
          <source>U32.shr_unsafe()</source>
          <target state="translated">U32.shr_unsafe()</target>
        </trans-unit>
        <trans-unit id="9cd1b1ebaf7b6ed0dd016447003623dffe089f7d" translate="yes" xml:space="preserve">
          <source>U32.string()</source>
          <target state="translated">U32.string()</target>
        </trans-unit>
        <trans-unit id="bbb364fc33031b61360e77021134ae342c4ff53d" translate="yes" xml:space="preserve">
          <source>U32.sub()</source>
          <target state="translated">U32.sub()</target>
        </trans-unit>
        <trans-unit id="49ab298a69bf532896aec2651f732cdd5289c580" translate="yes" xml:space="preserve">
          <source>U32.sub_partial()</source>
          <target state="translated">U32.sub_partial()</target>
        </trans-unit>
        <trans-unit id="fafe1577a269974b15a946872875477839128be0" translate="yes" xml:space="preserve">
          <source>U32.sub_unsafe()</source>
          <target state="translated">U32.sub_unsafe()</target>
        </trans-unit>
        <trans-unit id="03afdc2a4e3a5927490c9f04f4e682c2136b7aed" translate="yes" xml:space="preserve">
          <source>U32.subc()</source>
          <target state="translated">U32.subc()</target>
        </trans-unit>
        <trans-unit id="02da67511906e046caffed3c1ab09ae1a44ab0f1" translate="yes" xml:space="preserve">
          <source>U32.u128()</source>
          <target state="translated">U32.u128()</target>
        </trans-unit>
        <trans-unit id="e0fc7d3ecc3f3739990d689b53b2a86774b7ecde" translate="yes" xml:space="preserve">
          <source>U32.u128_unsafe()</source>
          <target state="translated">U32.u128_unsafe()</target>
        </trans-unit>
        <trans-unit id="87d457cdc5ff8d25bbcf6dcfcb27da6fde6ae058" translate="yes" xml:space="preserve">
          <source>U32.u16()</source>
          <target state="translated">U32.u16()</target>
        </trans-unit>
        <trans-unit id="2431613e44adb9891f220e61340e28e53fc64603" translate="yes" xml:space="preserve">
          <source>U32.u16_unsafe()</source>
          <target state="translated">U32.u16_unsafe()</target>
        </trans-unit>
        <trans-unit id="9252d05150383613f49505bae5615452f2482b4e" translate="yes" xml:space="preserve">
          <source>U32.u32()</source>
          <target state="translated">U32.u32()</target>
        </trans-unit>
        <trans-unit id="6033144b723c7f2dc0e83118196059903bb949af" translate="yes" xml:space="preserve">
          <source>U32.u32_unsafe()</source>
          <target state="translated">U32.u32_unsafe()</target>
        </trans-unit>
        <trans-unit id="00297265c339708c8a4abbbcca06e6cc97775394" translate="yes" xml:space="preserve">
          <source>U32.u64()</source>
          <target state="translated">U32.u64()</target>
        </trans-unit>
        <trans-unit id="8eea4b6c3ecd6f4aa468d5bb03424b851b01ee28" translate="yes" xml:space="preserve">
          <source>U32.u64_unsafe()</source>
          <target state="translated">U32.u64_unsafe()</target>
        </trans-unit>
        <trans-unit id="e315c2dbe3ebc4b6ac8e6607a6d3c482e2c52943" translate="yes" xml:space="preserve">
          <source>U32.u8()</source>
          <target state="translated">U32.u8()</target>
        </trans-unit>
        <trans-unit id="da921606a111191aee86be75d8954898fc9d7889" translate="yes" xml:space="preserve">
          <source>U32.u8_unsafe()</source>
          <target state="translated">U32.u8_unsafe()</target>
        </trans-unit>
        <trans-unit id="78fae0672cd2a9698f3e0818ef0725912dbd0aeb" translate="yes" xml:space="preserve">
          <source>U32.ulong()</source>
          <target state="translated">U32.ulong()</target>
        </trans-unit>
        <trans-unit id="ed2b8671865db6c7fe58ad56d6c28d1f079a9627" translate="yes" xml:space="preserve">
          <source>U32.ulong_unsafe()</source>
          <target state="translated">U32.ulong_unsafe()</target>
        </trans-unit>
        <trans-unit id="66f2a7d8a10abce844f4b62e64de6bccd9ca5a7e" translate="yes" xml:space="preserve">
          <source>U32.usize()</source>
          <target state="translated">U32.usize()</target>
        </trans-unit>
        <trans-unit id="e00e05246207de200b74198b64348bcd196936ae" translate="yes" xml:space="preserve">
          <source>U32.usize_unsafe()</source>
          <target state="translated">U32.usize_unsafe()</target>
        </trans-unit>
        <trans-unit id="b116e01b5d83fd9f95e60ff109a2de2a2e9f0063" translate="yes" xml:space="preserve">
          <source>U64</source>
          <target state="translated">U64</target>
        </trans-unit>
        <trans-unit id="0f5ecca9a49712b6d5b5b24fbc166575b4643c05" translate="yes" xml:space="preserve">
          <source>U64._value()</source>
          <target state="translated">U64._value()</target>
        </trans-unit>
        <trans-unit id="eff62278de0bc247ec1a52694738e0250692432b" translate="yes" xml:space="preserve">
          <source>U64.abs()</source>
          <target state="translated">U64.abs()</target>
        </trans-unit>
        <trans-unit id="5a501561ceac24afb8eb05958804fbea024b926e" translate="yes" xml:space="preserve">
          <source>U64.add()</source>
          <target state="translated">U64.add()</target>
        </trans-unit>
        <trans-unit id="f65565b2f1f3c99a0ebec1c8812dd1c12ad0f139" translate="yes" xml:space="preserve">
          <source>U64.add_partial()</source>
          <target state="translated">U64.add_partial()</target>
        </trans-unit>
        <trans-unit id="38b8da723943c86916a265730adeb6e981aa3af8" translate="yes" xml:space="preserve">
          <source>U64.add_unsafe()</source>
          <target state="translated">U64.add_unsafe()</target>
        </trans-unit>
        <trans-unit id="da104b9e1f3b686ad787fa2c8176b2057d95b586" translate="yes" xml:space="preserve">
          <source>U64.addc()</source>
          <target state="translated">U64.addc()</target>
        </trans-unit>
        <trans-unit id="947c250f740ccd41b140165afec29898f7f63a28" translate="yes" xml:space="preserve">
          <source>U64.bit_reverse()</source>
          <target state="translated">U64.bit_reverse()</target>
        </trans-unit>
        <trans-unit id="d54eeed30fcd36867d3881ae04a242acb6d9b74d" translate="yes" xml:space="preserve">
          <source>U64.bitwidth()</source>
          <target state="translated">U64.bitwidth()</target>
        </trans-unit>
        <trans-unit id="7863ab7ee57ae15dc054e92b69080cd50f8e1577" translate="yes" xml:space="preserve">
          <source>U64.bswap()</source>
          <target state="translated">U64.bswap()</target>
        </trans-unit>
        <trans-unit id="f1ae2dc2b1193f084de8b888da5115a691f6ee6a" translate="yes" xml:space="preserve">
          <source>U64.bytewidth()</source>
          <target state="translated">U64.bytewidth()</target>
        </trans-unit>
        <trans-unit id="fb7e9f992884d744070cbf3d2c53d282345bd6ff" translate="yes" xml:space="preserve">
          <source>U64.clz()</source>
          <target state="translated">U64.clz()</target>
        </trans-unit>
        <trans-unit id="63fb91eb3e4bb5f1c2c16ede13b62c20f7a4b1df" translate="yes" xml:space="preserve">
          <source>U64.clz_unsafe()</source>
          <target state="translated">U64.clz_unsafe()</target>
        </trans-unit>
        <trans-unit id="ff1c13ce443fb77b998088d78bf7a3be3578d28f" translate="yes" xml:space="preserve">
          <source>U64.compare()</source>
          <target state="translated">U64.compare()</target>
        </trans-unit>
        <trans-unit id="0d72636c78ff1aa26eb0d7234e04b31ee4f46434" translate="yes" xml:space="preserve">
          <source>U64.create()</source>
          <target state="translated">U64.create()</target>
        </trans-unit>
        <trans-unit id="75bcc54b346360e6d65efc05c518f3816910bbf2" translate="yes" xml:space="preserve">
          <source>U64.ctz()</source>
          <target state="translated">U64.ctz()</target>
        </trans-unit>
        <trans-unit id="7afd27f845dac9e3059eb38b0e8b49c990970936" translate="yes" xml:space="preserve">
          <source>U64.ctz_unsafe()</source>
          <target state="translated">U64.ctz_unsafe()</target>
        </trans-unit>
        <trans-unit id="b9b59a9c46ff322649fd09ea854d7880fc73539f" translate="yes" xml:space="preserve">
          <source>U64.div()</source>
          <target state="translated">U64.div()</target>
        </trans-unit>
        <trans-unit id="5b43991bf12ad84a32f1409d8fcb5b3990b3d467" translate="yes" xml:space="preserve">
          <source>U64.div_partial()</source>
          <target state="translated">U64.div_partial()</target>
        </trans-unit>
        <trans-unit id="e37ece6cbe9a8b83a735533c0d50145c18b88ea4" translate="yes" xml:space="preserve">
          <source>U64.div_unsafe()</source>
          <target state="translated">U64.div_unsafe()</target>
        </trans-unit>
        <trans-unit id="cf970347a041f9867ba553293b844caefc8a07d8" translate="yes" xml:space="preserve">
          <source>U64.divc()</source>
          <target state="translated">U64.divc()</target>
        </trans-unit>
        <trans-unit id="4578e02ac9c370cca45ea879c56d52501456899a" translate="yes" xml:space="preserve">
          <source>U64.divrem()</source>
          <target state="translated">U64.divrem()</target>
        </trans-unit>
        <trans-unit id="6b3dd77a356339499c79803e3b9e851508729e0e" translate="yes" xml:space="preserve">
          <source>U64.divrem_partial()</source>
          <target state="translated">U64.divrem_partial()</target>
        </trans-unit>
        <trans-unit id="f7abd03e95e54ed36208523ba500f40fa59ed23a" translate="yes" xml:space="preserve">
          <source>U64.divrem_unsafe()</source>
          <target state="translated">U64.divrem_unsafe()</target>
        </trans-unit>
        <trans-unit id="2f4e4ab4c9d46acf033048a492daf83a3bc5d5be" translate="yes" xml:space="preserve">
          <source>U64.eq()</source>
          <target state="translated">U64.eq()</target>
        </trans-unit>
        <trans-unit id="0bd7a8a2256a5a3b1ca58a573e4b43d382d98dfd" translate="yes" xml:space="preserve">
          <source>U64.f32()</source>
          <target state="translated">U64.f32()</target>
        </trans-unit>
        <trans-unit id="380dba56d4222d8c3ea250ff69fe46db61d103ec" translate="yes" xml:space="preserve">
          <source>U64.f32_unsafe()</source>
          <target state="translated">U64.f32_unsafe()</target>
        </trans-unit>
        <trans-unit id="474629f400aaa8a42ff17a257f4d09e1d41dfb68" translate="yes" xml:space="preserve">
          <source>U64.f64()</source>
          <target state="translated">U64.f64()</target>
        </trans-unit>
        <trans-unit id="3de629a11e93befa9f634b3939aa3ccc7be2eb02" translate="yes" xml:space="preserve">
          <source>U64.f64_unsafe()</source>
          <target state="translated">U64.f64_unsafe()</target>
        </trans-unit>
        <trans-unit id="ca8f64f2a47f8865b4467058bfdb1e684452b28c" translate="yes" xml:space="preserve">
          <source>U64.fld()</source>
          <target state="translated">U64.fld()</target>
        </trans-unit>
        <trans-unit id="32f64f9ebe84b4898c6c6b505a1e0dd2af52fc84" translate="yes" xml:space="preserve">
          <source>U64.fld_partial()</source>
          <target state="translated">U64.fld_partial()</target>
        </trans-unit>
        <trans-unit id="41249098535c2981f20ec569054f029a1e0377df" translate="yes" xml:space="preserve">
          <source>U64.fld_unsafe()</source>
          <target state="translated">U64.fld_unsafe()</target>
        </trans-unit>
        <trans-unit id="4acd355909e2b22bdd06d87bbb06b11abda3afbf" translate="yes" xml:space="preserve">
          <source>U64.fldc()</source>
          <target state="translated">U64.fldc()</target>
        </trans-unit>
        <trans-unit id="7bb8ee43b51ecad2b23d042797a58c941b829d01" translate="yes" xml:space="preserve">
          <source>U64.from()</source>
          <target state="translated">U64.from()</target>
        </trans-unit>
        <trans-unit id="d527fab2edaf967e50cb59cc086a2e4e2d32375f" translate="yes" xml:space="preserve">
          <source>U64.ge()</source>
          <target state="translated">U64.ge()</target>
        </trans-unit>
        <trans-unit id="73f38b4cecafd1ef3a8c86a56ff251bc626548ab" translate="yes" xml:space="preserve">
          <source>U64.gt()</source>
          <target state="translated">U64.gt()</target>
        </trans-unit>
        <trans-unit id="a6842c66729c29f2f1cab4dccd7dbf2612bf3788" translate="yes" xml:space="preserve">
          <source>U64.hash()</source>
          <target state="translated">U64.hash()</target>
        </trans-unit>
        <trans-unit id="4fd6cf56fafe6eff85b7af03acaa447b8a0d5e96" translate="yes" xml:space="preserve">
          <source>U64.hash64()</source>
          <target state="translated">U64.hash64()</target>
        </trans-unit>
        <trans-unit id="0f4d52e8e1bc8b83edcab0c3e80b4fa9d064cdbd" translate="yes" xml:space="preserve">
          <source>U64.i128()</source>
          <target state="translated">U64.i128()</target>
        </trans-unit>
        <trans-unit id="cabf0fc98549455e109ed86d292dd53c171a6226" translate="yes" xml:space="preserve">
          <source>U64.i128_unsafe()</source>
          <target state="translated">U64.i128_unsafe()</target>
        </trans-unit>
        <trans-unit id="9ae2536236e5bf233e316a9bf2ddae1f0cb7baad" translate="yes" xml:space="preserve">
          <source>U64.i16()</source>
          <target state="translated">U64.i16()</target>
        </trans-unit>
        <trans-unit id="bf3f759fe445bfe102c11b93fd67411910f68a08" translate="yes" xml:space="preserve">
          <source>U64.i16_unsafe()</source>
          <target state="translated">U64.i16_unsafe()</target>
        </trans-unit>
        <trans-unit id="68604978c61bcc44ecfcd70ca1509ed7cb661849" translate="yes" xml:space="preserve">
          <source>U64.i32()</source>
          <target state="translated">U64.i32()</target>
        </trans-unit>
        <trans-unit id="b7ae824365a923aa526bccae12b7f592621c8ef5" translate="yes" xml:space="preserve">
          <source>U64.i32_unsafe()</source>
          <target state="translated">U64.i32_unsafe()</target>
        </trans-unit>
        <trans-unit id="d6e52d9624f4c843197d474b25bd48aa1f1c4f37" translate="yes" xml:space="preserve">
          <source>U64.i64()</source>
          <target state="translated">U64.i64()</target>
        </trans-unit>
        <trans-unit id="5b34fc269aa8bc558b713bee4eb14f432ad66f9f" translate="yes" xml:space="preserve">
          <source>U64.i64_unsafe()</source>
          <target state="translated">U64.i64_unsafe()</target>
        </trans-unit>
        <trans-unit id="9a4ff3bae67955cdee0001e47a91e1a974e3d796" translate="yes" xml:space="preserve">
          <source>U64.i8()</source>
          <target state="translated">U64.i8()</target>
        </trans-unit>
        <trans-unit id="a2eadfa6acd7897573d6f7708790e4880effe5b2" translate="yes" xml:space="preserve">
          <source>U64.i8_unsafe()</source>
          <target state="translated">U64.i8_unsafe()</target>
        </trans-unit>
        <trans-unit id="7f66506be3ea2cc6fc5bd5c9dc0adfc7ec1de3e7" translate="yes" xml:space="preserve">
          <source>U64.ilong()</source>
          <target state="translated">U64.ilong()</target>
        </trans-unit>
        <trans-unit id="55b8cc240d47a48877517ee64d3896ce26756d39" translate="yes" xml:space="preserve">
          <source>U64.ilong_unsafe()</source>
          <target state="translated">U64.ilong_unsafe()</target>
        </trans-unit>
        <trans-unit id="fcc2a0393fa2e2b80595e5a400e3de4878566f3d" translate="yes" xml:space="preserve">
          <source>U64.isize()</source>
          <target state="translated">U64.isize()</target>
        </trans-unit>
        <trans-unit id="68ad7b7cdc193a59c993dffba99737435fcc6b5e" translate="yes" xml:space="preserve">
          <source>U64.isize_unsafe()</source>
          <target state="translated">U64.isize_unsafe()</target>
        </trans-unit>
        <trans-unit id="ceafc49965c678f2e576f76461db3ea36232d5fa" translate="yes" xml:space="preserve">
          <source>U64.le()</source>
          <target state="translated">U64.le()</target>
        </trans-unit>
        <trans-unit id="2a3bb4e12a33ea4fd0ec292fee8ad2c2789ca73d" translate="yes" xml:space="preserve">
          <source>U64.lt()</source>
          <target state="translated">U64.lt()</target>
        </trans-unit>
        <trans-unit id="68bd11de3ccddbd1e11fcf08ffeba7f46f670732" translate="yes" xml:space="preserve">
          <source>U64.max()</source>
          <target state="translated">U64.max()</target>
        </trans-unit>
        <trans-unit id="a937dc18b6f85059184bfefb1affa59ab4a4a9d2" translate="yes" xml:space="preserve">
          <source>U64.max_value()</source>
          <target state="translated">U64.max_value()</target>
        </trans-unit>
        <trans-unit id="28f739b911f96d3d1c760881c4a8139fcce66d19" translate="yes" xml:space="preserve">
          <source>U64.min()</source>
          <target state="translated">U64.min()</target>
        </trans-unit>
        <trans-unit id="1c0344c33ca1c6577c925b4f352fddf854aff851" translate="yes" xml:space="preserve">
          <source>U64.min_value()</source>
          <target state="translated">U64.min_value()</target>
        </trans-unit>
        <trans-unit id="c6c48063c6db55f221869ac505540c43ee180236" translate="yes" xml:space="preserve">
          <source>U64.mod()</source>
          <target state="translated">U64.mod()</target>
        </trans-unit>
        <trans-unit id="e1009320de55c5aebb1b5409d44b3346e3adbcc2" translate="yes" xml:space="preserve">
          <source>U64.mod_partial()</source>
          <target state="translated">U64.mod_partial()</target>
        </trans-unit>
        <trans-unit id="d43928b6b7634d30f0ec4e6369b53991591a2be0" translate="yes" xml:space="preserve">
          <source>U64.mod_unsafe()</source>
          <target state="translated">U64.mod_unsafe()</target>
        </trans-unit>
        <trans-unit id="1493fe8b304e0b527f66acd798916815371a4112" translate="yes" xml:space="preserve">
          <source>U64.modc()</source>
          <target state="translated">U64.modc()</target>
        </trans-unit>
        <trans-unit id="db13d8234e3edd0a5a63ad57aa7b3c1640beb080" translate="yes" xml:space="preserve">
          <source>U64.mul()</source>
          <target state="translated">U64.mul()</target>
        </trans-unit>
        <trans-unit id="19603c81775f981858d70e0e36c3e74d5a877795" translate="yes" xml:space="preserve">
          <source>U64.mul_partial()</source>
          <target state="translated">U64.mul_partial()</target>
        </trans-unit>
        <trans-unit id="2df04dbc52f7cabc60e04febfe8f7cc9e18acaa8" translate="yes" xml:space="preserve">
          <source>U64.mul_unsafe()</source>
          <target state="translated">U64.mul_unsafe()</target>
        </trans-unit>
        <trans-unit id="cf1692561979a5611ad2a9944345a77a3c50bf98" translate="yes" xml:space="preserve">
          <source>U64.mulc()</source>
          <target state="translated">U64.mulc()</target>
        </trans-unit>
        <trans-unit id="a9cd390c87519afc8ff6a1fcaa73f6d461ca8887" translate="yes" xml:space="preserve">
          <source>U64.ne()</source>
          <target state="translated">U64.ne()</target>
        </trans-unit>
        <trans-unit id="a7fb3b635bac433d27ee9379fae839f51c398814" translate="yes" xml:space="preserve">
          <source>U64.neg()</source>
          <target state="translated">U64.neg()</target>
        </trans-unit>
        <trans-unit id="0b5637946fad3dedf0deafad68f22ba4d90685a5" translate="yes" xml:space="preserve">
          <source>U64.neg_unsafe()</source>
          <target state="translated">U64.neg_unsafe()</target>
        </trans-unit>
        <trans-unit id="0dbc2bbcc06cb6de955ea7b1f513f085e9756a46" translate="yes" xml:space="preserve">
          <source>U64.next_pow2()</source>
          <target state="translated">U64.next_pow2()</target>
        </trans-unit>
        <trans-unit id="30cb0d35a5c7fdcd9bc01de56be611ff3aeab393" translate="yes" xml:space="preserve">
          <source>U64.op_and()</source>
          <target state="translated">U64.op_and()</target>
        </trans-unit>
        <trans-unit id="f03b12b664ed0095e7f8cea215784ef8f4ea4242" translate="yes" xml:space="preserve">
          <source>U64.op_not()</source>
          <target state="translated">U64.op_not()</target>
        </trans-unit>
        <trans-unit id="c0d036f11ebcace2a205dab9a1a494ae8ea24987" translate="yes" xml:space="preserve">
          <source>U64.op_or()</source>
          <target state="translated">U64.op_or()</target>
        </trans-unit>
        <trans-unit id="02f6ad8b17eb950b5d6bf51b7e404edee4dd0708" translate="yes" xml:space="preserve">
          <source>U64.op_xor()</source>
          <target state="translated">U64.op_xor()</target>
        </trans-unit>
        <trans-unit id="2106c9d98d71d0a60d3a3dafc6644b68c4fdd2bd" translate="yes" xml:space="preserve">
          <source>U64.popcount()</source>
          <target state="translated">U64.popcount()</target>
        </trans-unit>
        <trans-unit id="460f60c77c44cbf5ebd889ad42c7e14df8b67cb1" translate="yes" xml:space="preserve">
          <source>U64.rem()</source>
          <target state="translated">U64.rem()</target>
        </trans-unit>
        <trans-unit id="4c7440bf7eab678aba88fc4f12070e2b45dcc1ca" translate="yes" xml:space="preserve">
          <source>U64.rem_partial()</source>
          <target state="translated">U64.rem_partial()</target>
        </trans-unit>
        <trans-unit id="7c0645edb9e0e6f03e8d095b232840c02bb090f2" translate="yes" xml:space="preserve">
          <source>U64.rem_unsafe()</source>
          <target state="translated">U64.rem_unsafe()</target>
        </trans-unit>
        <trans-unit id="a5e1de9953eed8287e178b7e710bc2ea439d5ad3" translate="yes" xml:space="preserve">
          <source>U64.remc()</source>
          <target state="translated">U64.remc()</target>
        </trans-unit>
        <trans-unit id="2fe43afe66b44f46d45f6c2fb4cc1f0c6fdead4d" translate="yes" xml:space="preserve">
          <source>U64.rotl()</source>
          <target state="translated">U64.rotl()</target>
        </trans-unit>
        <trans-unit id="6ae7b0ac039cff856650df18b2dea95acf658632" translate="yes" xml:space="preserve">
          <source>U64.rotr()</source>
          <target state="translated">U64.rotr()</target>
        </trans-unit>
        <trans-unit id="c2cf08c71c548ae8458048f58ad0711505ccc84d" translate="yes" xml:space="preserve">
          <source>U64.shl()</source>
          <target state="translated">U64.shl()</target>
        </trans-unit>
        <trans-unit id="26ee41309a26a6a779b42fdff91e6dbdac0f00e6" translate="yes" xml:space="preserve">
          <source>U64.shl_unsafe()</source>
          <target state="translated">U64.shl_unsafe()</target>
        </trans-unit>
        <trans-unit id="cf19a918c42c24866e793632911824a8ca0ed6b2" translate="yes" xml:space="preserve">
          <source>U64.shr()</source>
          <target state="translated">U64.shr()</target>
        </trans-unit>
        <trans-unit id="c4fc204daee5e81bfd09b6a68e8d5cc9bcae2cbd" translate="yes" xml:space="preserve">
          <source>U64.shr_unsafe()</source>
          <target state="translated">U64.shr_unsafe()</target>
        </trans-unit>
        <trans-unit id="98c882887968e3d7ca437c30175f5eb327079ab0" translate="yes" xml:space="preserve">
          <source>U64.string()</source>
          <target state="translated">U64.string()</target>
        </trans-unit>
        <trans-unit id="6730949e70619d6a29a10e5f332608b49bed2123" translate="yes" xml:space="preserve">
          <source>U64.sub()</source>
          <target state="translated">U64.sub()</target>
        </trans-unit>
        <trans-unit id="b50e135b38e0f6c53b3b3e3f5790cfc9b2ece88f" translate="yes" xml:space="preserve">
          <source>U64.sub_partial()</source>
          <target state="translated">U64.sub_partial()</target>
        </trans-unit>
        <trans-unit id="e287776bbbe150d2d2a5dfc48f6cf928447806a2" translate="yes" xml:space="preserve">
          <source>U64.sub_unsafe()</source>
          <target state="translated">U64.sub_unsafe()</target>
        </trans-unit>
        <trans-unit id="fb39c50d3727167f651887ed7270c35d1c7e1d7c" translate="yes" xml:space="preserve">
          <source>U64.subc()</source>
          <target state="translated">U64.subc()</target>
        </trans-unit>
        <trans-unit id="3571433147d1d216add5e79c5c5714252f222527" translate="yes" xml:space="preserve">
          <source>U64.u128()</source>
          <target state="translated">U64.u128()</target>
        </trans-unit>
        <trans-unit id="fe7d50c6ab87300e3a24f8a96de4452600df6b55" translate="yes" xml:space="preserve">
          <source>U64.u128_unsafe()</source>
          <target state="translated">U64.u128_unsafe()</target>
        </trans-unit>
        <trans-unit id="a0ac755d882700b25ba2292ca13202f39e243b50" translate="yes" xml:space="preserve">
          <source>U64.u16()</source>
          <target state="translated">U64.u16()</target>
        </trans-unit>
        <trans-unit id="7d5d498667574de63a0249d90f04db3d84d30715" translate="yes" xml:space="preserve">
          <source>U64.u16_unsafe()</source>
          <target state="translated">U64.u16_unsafe()</target>
        </trans-unit>
        <trans-unit id="eddc1185bad7db0a0b4222d600ceb8de922f284b" translate="yes" xml:space="preserve">
          <source>U64.u32()</source>
          <target state="translated">U64.u32()</target>
        </trans-unit>
        <trans-unit id="f36870e20858fd5d9548b11a49810af4a29f21cc" translate="yes" xml:space="preserve">
          <source>U64.u32_unsafe()</source>
          <target state="translated">U64.u32_unsafe()</target>
        </trans-unit>
        <trans-unit id="23d884f3166ccfe5593da1523bb487c86bd41737" translate="yes" xml:space="preserve">
          <source>U64.u64()</source>
          <target state="translated">U64.u64()</target>
        </trans-unit>
        <trans-unit id="8e6bc5d93c3b77a95e871225a3428d5f5600ea15" translate="yes" xml:space="preserve">
          <source>U64.u64_unsafe()</source>
          <target state="translated">U64.u64_unsafe()</target>
        </trans-unit>
        <trans-unit id="7f04af801db3dc2c201cfc82d9385f8dab855c2d" translate="yes" xml:space="preserve">
          <source>U64.u8()</source>
          <target state="translated">U64.u8()</target>
        </trans-unit>
        <trans-unit id="f00954bc4a2ec9bd5f9a5f71a7440a27b42e7545" translate="yes" xml:space="preserve">
          <source>U64.u8_unsafe()</source>
          <target state="translated">U64.u8_unsafe()</target>
        </trans-unit>
        <trans-unit id="f216266e0c16a9c62103f079ed0c4a8ca3d18c3f" translate="yes" xml:space="preserve">
          <source>U64.ulong()</source>
          <target state="translated">U64.ulong()</target>
        </trans-unit>
        <trans-unit id="46bed12a0396d26b7de257387425b797deead02a" translate="yes" xml:space="preserve">
          <source>U64.ulong_unsafe()</source>
          <target state="translated">U64.ulong_unsafe()</target>
        </trans-unit>
        <trans-unit id="436d9af3b91a10a8d07fc63bbdd5b81326cedb1c" translate="yes" xml:space="preserve">
          <source>U64.usize()</source>
          <target state="translated">U64.usize()</target>
        </trans-unit>
        <trans-unit id="24b09d42ef946799c4a0f35e78a120b5ba8cc4cd" translate="yes" xml:space="preserve">
          <source>U64.usize_unsafe()</source>
          <target state="translated">U64.usize_unsafe()</target>
        </trans-unit>
        <trans-unit id="87bcda6bdd1431df42863fb094457a5e715f8156" translate="yes" xml:space="preserve">
          <source>U64Argument</source>
          <target state="translated">U64Argument</target>
        </trans-unit>
        <trans-unit id="13600ef794bbf256757cc627da74b0a7b0caa361" translate="yes" xml:space="preserve">
          <source>U64Argument.create()</source>
          <target state="translated">U64Argument.create()</target>
        </trans-unit>
        <trans-unit id="b10fbb5a96285428f157eca950007b20e8ac9a42" translate="yes" xml:space="preserve">
          <source>U64Argument.eq()</source>
          <target state="translated">U64Argument.eq()</target>
        </trans-unit>
        <trans-unit id="85874e9074d3ee14986bcbe297067bfd5a2b6afe" translate="yes" xml:space="preserve">
          <source>U64Argument.ne()</source>
          <target state="translated">U64Argument.ne()</target>
        </trans-unit>
        <trans-unit id="3a13f708137c551a92916da69b0f8526d6c33de0" translate="yes" xml:space="preserve">
          <source>U8</source>
          <target state="translated">U8</target>
        </trans-unit>
        <trans-unit id="def64e8713d708c409bdcfbd284c7f11a2e4b633" translate="yes" xml:space="preserve">
          <source>U8._value()</source>
          <target state="translated">U8._value()</target>
        </trans-unit>
        <trans-unit id="972b8f3a737d784ff9928cb4ea2b7952320f2949" translate="yes" xml:space="preserve">
          <source>U8.abs()</source>
          <target state="translated">U8.abs()</target>
        </trans-unit>
        <trans-unit id="4639afa840b9c577f46f0fbc0b59cf977d7d90cf" translate="yes" xml:space="preserve">
          <source>U8.add()</source>
          <target state="translated">U8.add()</target>
        </trans-unit>
        <trans-unit id="5fc2bcac166046ab6b60ae9e65b7976f44844c8d" translate="yes" xml:space="preserve">
          <source>U8.add_partial()</source>
          <target state="translated">U8.add_partial()</target>
        </trans-unit>
        <trans-unit id="fa00ca1c5cc853039d0e3bd916e39889480a83cc" translate="yes" xml:space="preserve">
          <source>U8.add_unsafe()</source>
          <target state="translated">U8.add_unsafe()</target>
        </trans-unit>
        <trans-unit id="475e425b7b32b719ffbbf58ce2d4d1687a8717ad" translate="yes" xml:space="preserve">
          <source>U8.addc()</source>
          <target state="translated">U8.addc()</target>
        </trans-unit>
        <trans-unit id="58b1a5b75bfec4676ef0a5f122a5a94eae1c4b7a" translate="yes" xml:space="preserve">
          <source>U8.bit_reverse()</source>
          <target state="translated">U8.bit_reverse()</target>
        </trans-unit>
        <trans-unit id="e9b36c2a65cd61ac08c479ef7cecf2246b803fc1" translate="yes" xml:space="preserve">
          <source>U8.bitwidth()</source>
          <target state="translated">U8.bitwidth()</target>
        </trans-unit>
        <trans-unit id="2153ecc95326f0f90e54171075399083a484aece" translate="yes" xml:space="preserve">
          <source>U8.bswap()</source>
          <target state="translated">U8.bswap()</target>
        </trans-unit>
        <trans-unit id="053dc402ce2781bdd7c1711cacb5b372ba3edced" translate="yes" xml:space="preserve">
          <source>U8.bytewidth()</source>
          <target state="translated">U8.bytewidth()</target>
        </trans-unit>
        <trans-unit id="4a912bd4ea19fb2157b6cb742398cb64f4bda378" translate="yes" xml:space="preserve">
          <source>U8.clz()</source>
          <target state="translated">U8.clz()</target>
        </trans-unit>
        <trans-unit id="c2bef5b0d523252d96aa7d1c98ae1cfb59749c21" translate="yes" xml:space="preserve">
          <source>U8.clz_unsafe()</source>
          <target state="translated">U8.clz_unsafe()</target>
        </trans-unit>
        <trans-unit id="09bbaedc1df2c78ee41c9c5447936fffe13d9f77" translate="yes" xml:space="preserve">
          <source>U8.compare()</source>
          <target state="translated">U8.compare()</target>
        </trans-unit>
        <trans-unit id="a28cd24c7ba61a7d6d4f46f6b6804951749e7fb5" translate="yes" xml:space="preserve">
          <source>U8.create()</source>
          <target state="translated">U8.create()</target>
        </trans-unit>
        <trans-unit id="c7ad9c0bc3a0ab124e76c5d2d0bfa73dac069e2b" translate="yes" xml:space="preserve">
          <source>U8.ctz()</source>
          <target state="translated">U8.ctz()</target>
        </trans-unit>
        <trans-unit id="6d1c0a01aec3503971ff6388ac493178f31ce674" translate="yes" xml:space="preserve">
          <source>U8.ctz_unsafe()</source>
          <target state="translated">U8.ctz_unsafe()</target>
        </trans-unit>
        <trans-unit id="548b794ac7de8449b605dc8aed9134130f6c1db7" translate="yes" xml:space="preserve">
          <source>U8.div()</source>
          <target state="translated">U8.div()</target>
        </trans-unit>
        <trans-unit id="536df6f7700b4ec24fb6764bed760edfc58aa6dd" translate="yes" xml:space="preserve">
          <source>U8.div_partial()</source>
          <target state="translated">U8.div_partial()</target>
        </trans-unit>
        <trans-unit id="875d64564585c7f02c038c442c642f992612698f" translate="yes" xml:space="preserve">
          <source>U8.div_unsafe()</source>
          <target state="translated">U8.div_unsafe()</target>
        </trans-unit>
        <trans-unit id="d7a10d9c41276b9836aeca018d3efeabcfeb8148" translate="yes" xml:space="preserve">
          <source>U8.divc()</source>
          <target state="translated">U8.divc()</target>
        </trans-unit>
        <trans-unit id="7a73a1d48621df68e37d3643b0c83e349b6db021" translate="yes" xml:space="preserve">
          <source>U8.divrem()</source>
          <target state="translated">U8.divrem()</target>
        </trans-unit>
        <trans-unit id="219a93ba8d76bd0c24e87d8a680d53edbea73083" translate="yes" xml:space="preserve">
          <source>U8.divrem_partial()</source>
          <target state="translated">U8.divrem_partial()</target>
        </trans-unit>
        <trans-unit id="1f39ee4ec5bdb36f22cf7e7a15dbe2a0dae1563d" translate="yes" xml:space="preserve">
          <source>U8.divrem_unsafe()</source>
          <target state="translated">U8.divrem_unsafe()</target>
        </trans-unit>
        <trans-unit id="f2c08f98bfcd5dc725bb6ebfa3da82c7caed2d11" translate="yes" xml:space="preserve">
          <source>U8.eq()</source>
          <target state="translated">U8.eq()</target>
        </trans-unit>
        <trans-unit id="f8d3c7cc37eef34aa2b7491ac216e3086a58fa82" translate="yes" xml:space="preserve">
          <source>U8.f32()</source>
          <target state="translated">U8.f32()</target>
        </trans-unit>
        <trans-unit id="71606f530d3d5985c9c18b3725ed1a2dccc20199" translate="yes" xml:space="preserve">
          <source>U8.f32_unsafe()</source>
          <target state="translated">U8.f32_unsafe()</target>
        </trans-unit>
        <trans-unit id="0715ea9630d716dc8f83c41aa1c0e4bc97cce233" translate="yes" xml:space="preserve">
          <source>U8.f64()</source>
          <target state="translated">U8.f64()</target>
        </trans-unit>
        <trans-unit id="e326ae849c557fbc9d4ada4a2e7af0a73b60328d" translate="yes" xml:space="preserve">
          <source>U8.f64_unsafe()</source>
          <target state="translated">U8.f64_unsafe()</target>
        </trans-unit>
        <trans-unit id="c28b711b2be8b70c48f576ee71138500309d9382" translate="yes" xml:space="preserve">
          <source>U8.fld()</source>
          <target state="translated">U8.fld()</target>
        </trans-unit>
        <trans-unit id="fe8fd95ffbd5af049e9c7366f0141be23fd8d057" translate="yes" xml:space="preserve">
          <source>U8.fld_partial()</source>
          <target state="translated">U8.fld_partial()</target>
        </trans-unit>
        <trans-unit id="9ad6d11a1d8ea482bccf1ec613e03e0f933ac3d2" translate="yes" xml:space="preserve">
          <source>U8.fld_unsafe()</source>
          <target state="translated">U8.fld_unsafe()</target>
        </trans-unit>
        <trans-unit id="f881ce531b9494a91f37c39089a66266fc3c6011" translate="yes" xml:space="preserve">
          <source>U8.fldc()</source>
          <target state="translated">U8.fldc()</target>
        </trans-unit>
        <trans-unit id="abd2b67ca8c45e0b2152a211adb150356866badb" translate="yes" xml:space="preserve">
          <source>U8.from()</source>
          <target state="translated">U8.from()</target>
        </trans-unit>
        <trans-unit id="e05ca0e1d9bf17d151516563236ed1f236f73261" translate="yes" xml:space="preserve">
          <source>U8.ge()</source>
          <target state="translated">U8.ge()</target>
        </trans-unit>
        <trans-unit id="9bd0069774cd2917f945d52c763409efacdb1375" translate="yes" xml:space="preserve">
          <source>U8.gt()</source>
          <target state="translated">U8.gt()</target>
        </trans-unit>
        <trans-unit id="a79b2fe5d040dda44df3ff370faed03d43398c20" translate="yes" xml:space="preserve">
          <source>U8.hash()</source>
          <target state="translated">U8.hash()</target>
        </trans-unit>
        <trans-unit id="5e5be72503366371acda9eb1833391343ed2a590" translate="yes" xml:space="preserve">
          <source>U8.hash64()</source>
          <target state="translated">U8.hash64()</target>
        </trans-unit>
        <trans-unit id="dccb265a45b78bab1ecc00c31ca781fa7e03a26e" translate="yes" xml:space="preserve">
          <source>U8.i128()</source>
          <target state="translated">U8.i128()</target>
        </trans-unit>
        <trans-unit id="a28e2c763698cb1ec87caa5a8eb0b2827e64dd59" translate="yes" xml:space="preserve">
          <source>U8.i128_unsafe()</source>
          <target state="translated">U8.i128_unsafe()</target>
        </trans-unit>
        <trans-unit id="e7602c14e02e3ca6671637dbcd6a9d5ac5157a8f" translate="yes" xml:space="preserve">
          <source>U8.i16()</source>
          <target state="translated">U8.i16()</target>
        </trans-unit>
        <trans-unit id="315dc3f3cf67e1d20f8fba07abde6b2c16a00808" translate="yes" xml:space="preserve">
          <source>U8.i16_unsafe()</source>
          <target state="translated">U8.i16_unsafe()</target>
        </trans-unit>
        <trans-unit id="dbdafc6984bab5cbb90d872395a607ae7ca57495" translate="yes" xml:space="preserve">
          <source>U8.i32()</source>
          <target state="translated">U8.i32()</target>
        </trans-unit>
        <trans-unit id="6ca55c7f129df61811779a1784f9e6a9e5ad2976" translate="yes" xml:space="preserve">
          <source>U8.i32_unsafe()</source>
          <target state="translated">U8.i32_unsafe()</target>
        </trans-unit>
        <trans-unit id="94fbefa549409636d50b3ac1b13d596d8cc33b63" translate="yes" xml:space="preserve">
          <source>U8.i64()</source>
          <target state="translated">U8.i64()</target>
        </trans-unit>
        <trans-unit id="66a4f92212b4939dedd8af3bf46d740a7758920e" translate="yes" xml:space="preserve">
          <source>U8.i64_unsafe()</source>
          <target state="translated">U8.i64_unsafe()</target>
        </trans-unit>
        <trans-unit id="7cb69a457f1852f0ee6d88d20f6ab3d506529b77" translate="yes" xml:space="preserve">
          <source>U8.i8()</source>
          <target state="translated">U8.i8()</target>
        </trans-unit>
        <trans-unit id="46809ebf7854a36a9c6e5daa8ebbe138deb6794f" translate="yes" xml:space="preserve">
          <source>U8.i8_unsafe()</source>
          <target state="translated">U8.i8_unsafe()</target>
        </trans-unit>
        <trans-unit id="fb602ec9ed2795a3043a0e266cc617c0b872cf6a" translate="yes" xml:space="preserve">
          <source>U8.ilong()</source>
          <target state="translated">U8.ilong()</target>
        </trans-unit>
        <trans-unit id="dfb405fafc5ecc6307bc5a71de52b1cc61d1b1b7" translate="yes" xml:space="preserve">
          <source>U8.ilong_unsafe()</source>
          <target state="translated">U8.ilong_unsafe()</target>
        </trans-unit>
        <trans-unit id="2c19b3c05975d4ac5aeacb59e67c7b97649bac8f" translate="yes" xml:space="preserve">
          <source>U8.isize()</source>
          <target state="translated">U8.isize()</target>
        </trans-unit>
        <trans-unit id="f2b6b3676966272817fceec517dace147194633a" translate="yes" xml:space="preserve">
          <source>U8.isize_unsafe()</source>
          <target state="translated">U8.isize_unsafe()</target>
        </trans-unit>
        <trans-unit id="14e7d83045d8fda6b24a594a9dd3d8148adb45bf" translate="yes" xml:space="preserve">
          <source>U8.le()</source>
          <target state="translated">U8.le()</target>
        </trans-unit>
        <trans-unit id="9abb1c82c1174b8f9fe6b33d60e94b4445c6fc29" translate="yes" xml:space="preserve">
          <source>U8.lt()</source>
          <target state="translated">U8.lt()</target>
        </trans-unit>
        <trans-unit id="b630ec2489aac6e11704802f57c1e27b2b27d4fe" translate="yes" xml:space="preserve">
          <source>U8.max()</source>
          <target state="translated">U8.max()</target>
        </trans-unit>
        <trans-unit id="5afc5764b2eaa2e650e7d4e5f017f956d68e2fdb" translate="yes" xml:space="preserve">
          <source>U8.max_value()</source>
          <target state="translated">U8.max_value()</target>
        </trans-unit>
        <trans-unit id="3aff0506d48defff46a01b0fd79f492778fef38d" translate="yes" xml:space="preserve">
          <source>U8.min()</source>
          <target state="translated">U8.min()</target>
        </trans-unit>
        <trans-unit id="f89ab7851d2450c61735b886ce9d8723ae578221" translate="yes" xml:space="preserve">
          <source>U8.min_value()</source>
          <target state="translated">U8.min_value()</target>
        </trans-unit>
        <trans-unit id="78c594759806cbdfb68ba969f596628164847ed2" translate="yes" xml:space="preserve">
          <source>U8.mod()</source>
          <target state="translated">U8.mod()</target>
        </trans-unit>
        <trans-unit id="1b37ec8afb0de9b80cfa68ab350f9d974edb49f0" translate="yes" xml:space="preserve">
          <source>U8.mod_partial()</source>
          <target state="translated">U8.mod_partial()</target>
        </trans-unit>
        <trans-unit id="dd65e626c69017e9dd7f8db4b9543b48e1761afc" translate="yes" xml:space="preserve">
          <source>U8.mod_unsafe()</source>
          <target state="translated">U8.mod_unsafe()</target>
        </trans-unit>
        <trans-unit id="000381075d939a29a67a6ef36436b9d611102405" translate="yes" xml:space="preserve">
          <source>U8.modc()</source>
          <target state="translated">U8.modc()</target>
        </trans-unit>
        <trans-unit id="78d7a4740968c1eaa5212509f45e988bd7b696e6" translate="yes" xml:space="preserve">
          <source>U8.mul()</source>
          <target state="translated">U8.mul()</target>
        </trans-unit>
        <trans-unit id="0cbb666ce675ef5788a6d6a16e7021e96c024dfb" translate="yes" xml:space="preserve">
          <source>U8.mul_partial()</source>
          <target state="translated">U8.mul_partial()</target>
        </trans-unit>
        <trans-unit id="32fd6e954cc6181939a05eda0f024722ed4f8fff" translate="yes" xml:space="preserve">
          <source>U8.mul_unsafe()</source>
          <target state="translated">U8.mul_unsafe()</target>
        </trans-unit>
        <trans-unit id="5acc331d1f8ce5ec5eecc7095f706ddb31ceedbe" translate="yes" xml:space="preserve">
          <source>U8.mulc()</source>
          <target state="translated">U8.mulc()</target>
        </trans-unit>
        <trans-unit id="3bc383a67a890ab0d04a5667ed8f90faa4185dbd" translate="yes" xml:space="preserve">
          <source>U8.ne()</source>
          <target state="translated">U8.ne()</target>
        </trans-unit>
        <trans-unit id="f2892891458e431d19f663a2c7177d256f109d4d" translate="yes" xml:space="preserve">
          <source>U8.neg()</source>
          <target state="translated">U8.neg()</target>
        </trans-unit>
        <trans-unit id="cd030503de01912c7f3f81008c62d7912dbcd240" translate="yes" xml:space="preserve">
          <source>U8.neg_unsafe()</source>
          <target state="translated">U8.neg_unsafe()</target>
        </trans-unit>
        <trans-unit id="379990019629d007fde85a3dfa443d23042b216c" translate="yes" xml:space="preserve">
          <source>U8.next_pow2()</source>
          <target state="translated">U8.next_pow2()</target>
        </trans-unit>
        <trans-unit id="5504dacd84758118801145fcba96604ba64b9fbe" translate="yes" xml:space="preserve">
          <source>U8.op_and()</source>
          <target state="translated">U8.op_and()</target>
        </trans-unit>
        <trans-unit id="c16c4c084e7bb49e0dde5ffb267920f91a720ba9" translate="yes" xml:space="preserve">
          <source>U8.op_not()</source>
          <target state="translated">U8.op_not()</target>
        </trans-unit>
        <trans-unit id="8dfce03e27a031b24404e1441b2a835bcb22171f" translate="yes" xml:space="preserve">
          <source>U8.op_or()</source>
          <target state="translated">U8.op_or()</target>
        </trans-unit>
        <trans-unit id="0b7b4468b7a7675267d3e04f8b7b6e518600674a" translate="yes" xml:space="preserve">
          <source>U8.op_xor()</source>
          <target state="translated">U8.op_xor()</target>
        </trans-unit>
        <trans-unit id="87a2b717012b9a8ad46bcc9854e6a0f61ba8cba6" translate="yes" xml:space="preserve">
          <source>U8.popcount()</source>
          <target state="translated">U8.popcount()</target>
        </trans-unit>
        <trans-unit id="5121295c9badc8a1b5a74e2161255b5f622c0eff" translate="yes" xml:space="preserve">
          <source>U8.rem()</source>
          <target state="translated">U8.rem()</target>
        </trans-unit>
        <trans-unit id="4eb9e8cc13b6a6d02caaf50d53495df3bead1f0b" translate="yes" xml:space="preserve">
          <source>U8.rem_partial()</source>
          <target state="translated">U8.rem_partial()</target>
        </trans-unit>
        <trans-unit id="574541649572d0562bf6d757a17e7d3a605bfc7e" translate="yes" xml:space="preserve">
          <source>U8.rem_unsafe()</source>
          <target state="translated">U8.rem_unsafe()</target>
        </trans-unit>
        <trans-unit id="9c67bf90906018a61458b507a1073f620deb9b9a" translate="yes" xml:space="preserve">
          <source>U8.remc()</source>
          <target state="translated">U8.remc()</target>
        </trans-unit>
        <trans-unit id="73f604999241d93b69aa439486750d80a48479c5" translate="yes" xml:space="preserve">
          <source>U8.rotl()</source>
          <target state="translated">U8.rotl()</target>
        </trans-unit>
        <trans-unit id="c62d658180a0c7b7dd0d0feb24d46dae0aed4dfd" translate="yes" xml:space="preserve">
          <source>U8.rotr()</source>
          <target state="translated">U8.rotr()</target>
        </trans-unit>
        <trans-unit id="5521bb72cdf5119abb22821a136651160f891c79" translate="yes" xml:space="preserve">
          <source>U8.shl()</source>
          <target state="translated">U8.shl()</target>
        </trans-unit>
        <trans-unit id="3b804fed2a9313f9ab0eb84b0bd1d66a8875f50f" translate="yes" xml:space="preserve">
          <source>U8.shl_unsafe()</source>
          <target state="translated">U8.shl_unsafe()</target>
        </trans-unit>
        <trans-unit id="fa4ebee9772a976eaf8e133428f38cc83a0cd80d" translate="yes" xml:space="preserve">
          <source>U8.shr()</source>
          <target state="translated">U8.shr()</target>
        </trans-unit>
        <trans-unit id="95047f2566c568fa1da9e824a861f4369846675a" translate="yes" xml:space="preserve">
          <source>U8.shr_unsafe()</source>
          <target state="translated">U8.shr_unsafe()</target>
        </trans-unit>
        <trans-unit id="8121427b0a1e7b31e5e536a6432aab52f39dbc22" translate="yes" xml:space="preserve">
          <source>U8.string()</source>
          <target state="translated">U8.string()</target>
        </trans-unit>
        <trans-unit id="3ca08f89b491d2619c8aa6564bd459526c29757c" translate="yes" xml:space="preserve">
          <source>U8.sub()</source>
          <target state="translated">U8.sub()</target>
        </trans-unit>
        <trans-unit id="e70e8499d6167393efab063a66492ac9adbe4d51" translate="yes" xml:space="preserve">
          <source>U8.sub_partial()</source>
          <target state="translated">U8.sub_partial()</target>
        </trans-unit>
        <trans-unit id="1bb739d7aa94a219e4376988e0de55d453c42697" translate="yes" xml:space="preserve">
          <source>U8.sub_unsafe()</source>
          <target state="translated">U8.sub_unsafe()</target>
        </trans-unit>
        <trans-unit id="2852bd14ceb84a73bb21e3e7de53f968a95f1bb9" translate="yes" xml:space="preserve">
          <source>U8.subc()</source>
          <target state="translated">U8.subc()</target>
        </trans-unit>
        <trans-unit id="4dd973b5d27b30ba7b7751fc06f3316f42941098" translate="yes" xml:space="preserve">
          <source>U8.u128()</source>
          <target state="translated">U8.u128()</target>
        </trans-unit>
        <trans-unit id="12aca93ef5e0a5f635d87c7c8446ee0b0f0bca92" translate="yes" xml:space="preserve">
          <source>U8.u128_unsafe()</source>
          <target state="translated">U8.u128_unsafe()</target>
        </trans-unit>
        <trans-unit id="5ba7d08d34af371e6e52ed21a2d989dfac786908" translate="yes" xml:space="preserve">
          <source>U8.u16()</source>
          <target state="translated">U8.u16()</target>
        </trans-unit>
        <trans-unit id="73f3d13d8587af3e769b81f365be94ebff243009" translate="yes" xml:space="preserve">
          <source>U8.u16_unsafe()</source>
          <target state="translated">U8.u16_unsafe()</target>
        </trans-unit>
        <trans-unit id="d6185d2c32fc5de806dbfa181e0d7201e1b02848" translate="yes" xml:space="preserve">
          <source>U8.u32()</source>
          <target state="translated">U8.u32()</target>
        </trans-unit>
        <trans-unit id="c880cf6f08e33b8c1ac4bea420012edb11f3a8ca" translate="yes" xml:space="preserve">
          <source>U8.u32_unsafe()</source>
          <target state="translated">U8.u32_unsafe()</target>
        </trans-unit>
        <trans-unit id="813707173dd5a7e0c3450e23299bbf116eab4856" translate="yes" xml:space="preserve">
          <source>U8.u64()</source>
          <target state="translated">U8.u64()</target>
        </trans-unit>
        <trans-unit id="5337e9aa6a831e932b7ce510857b1040f01a12bd" translate="yes" xml:space="preserve">
          <source>U8.u64_unsafe()</source>
          <target state="translated">U8.u64_unsafe()</target>
        </trans-unit>
        <trans-unit id="e10c8250fda828db90a36f28b530d42aef0d5bae" translate="yes" xml:space="preserve">
          <source>U8.u8()</source>
          <target state="translated">U8.u8()</target>
        </trans-unit>
        <trans-unit id="52f6ead58aba7a92e686e76ed67061c7e5e58088" translate="yes" xml:space="preserve">
          <source>U8.u8_unsafe()</source>
          <target state="translated">U8.u8_unsafe()</target>
        </trans-unit>
        <trans-unit id="4a7cc6b92e6b8a6720dfc13a676c6e35b0091f40" translate="yes" xml:space="preserve">
          <source>U8.ulong()</source>
          <target state="translated">U8.ulong()</target>
        </trans-unit>
        <trans-unit id="6a174eb91222daaacfcbc018f3fb5fa0e038cc83" translate="yes" xml:space="preserve">
          <source>U8.ulong_unsafe()</source>
          <target state="translated">U8.ulong_unsafe()</target>
        </trans-unit>
        <trans-unit id="01c6990816a6810794829d5b62f687c061330e09" translate="yes" xml:space="preserve">
          <source>U8.usize()</source>
          <target state="translated">U8.usize()</target>
        </trans-unit>
        <trans-unit id="663679ffbc60058522a5a4d5c9afe64a70091298" translate="yes" xml:space="preserve">
          <source>U8.usize_unsafe()</source>
          <target state="translated">U8.usize_unsafe()</target>
        </trans-unit>
        <trans-unit id="ca82038b7d88e3cffb72d9b7e4432afdd144b5e1" translate="yes" xml:space="preserve">
          <source>UDPAuth</source>
          <target state="translated">UDPAuth</target>
        </trans-unit>
        <trans-unit id="8c54717db3610f0cfc0c5593e902f0ce2371de02" translate="yes" xml:space="preserve">
          <source>UDPAuth.create()</source>
          <target state="translated">UDPAuth.create()</target>
        </trans-unit>
        <trans-unit id="22eba256a8e1e665bb55fd589e1724c7483e71f3" translate="yes" xml:space="preserve">
          <source>UDPAuth.eq()</source>
          <target state="translated">UDPAuth.eq()</target>
        </trans-unit>
        <trans-unit id="39af8b65207f92fc3cd16e3dd167067e49e1d7af" translate="yes" xml:space="preserve">
          <source>UDPAuth.ne()</source>
          <target state="translated">UDPAuth.ne()</target>
        </trans-unit>
        <trans-unit id="254e475d146ed40bb2e1d8fa68c7bced0edab3dd" translate="yes" xml:space="preserve">
          <source>UDPNotify</source>
          <target state="translated">UDPNotify</target>
        </trans-unit>
        <trans-unit id="4bef8bc33961ca43dc442d4e4393beec01addb73" translate="yes" xml:space="preserve">
          <source>UDPNotify.closed()</source>
          <target state="translated">UDPNotify.closed()</target>
        </trans-unit>
        <trans-unit id="206e167d1785f81252d7710b900a44ba490370ba" translate="yes" xml:space="preserve">
          <source>UDPNotify.listening()</source>
          <target state="translated">UDPNotify.listening()</target>
        </trans-unit>
        <trans-unit id="a721f4123d9d6b821ff01a232db0f030d1fe39c2" translate="yes" xml:space="preserve">
          <source>UDPNotify.not_listening()</source>
          <target state="translated">UDPNotify.not_listening()</target>
        </trans-unit>
        <trans-unit id="06a7e2e97033448b20828101fd735c54157e9021" translate="yes" xml:space="preserve">
          <source>UDPNotify.received()</source>
          <target state="translated">UDPNotify.received()</target>
        </trans-unit>
        <trans-unit id="5091bc2101291836700b05e5a46a52b6a0f263d9" translate="yes" xml:space="preserve">
          <source>UDPSocket</source>
          <target state="translated">UDPSocket</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
