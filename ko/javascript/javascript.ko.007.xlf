<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="javascript">
    <body>
      <group id="javascript">
        <trans-unit id="cdc100f4e47ac71eb8ae32aec95efcba018bdccf" translate="yes" xml:space="preserve">
          <source>Math.log2</source>
          <target state="translated">Math.log2</target>
        </trans-unit>
        <trans-unit id="b216579b22c2ed4608a4910fc3fe70bd8acfcadb" translate="yes" xml:space="preserve">
          <source>Math.max</source>
          <target state="translated">Math.max</target>
        </trans-unit>
        <trans-unit id="00d7002122bd56440e59d99bba0a589df36d459b" translate="yes" xml:space="preserve">
          <source>Math.min</source>
          <target state="translated">Math.min</target>
        </trans-unit>
        <trans-unit id="bf6a0d2b8e5fb86891642a01dd99e9fb72bd31c3" translate="yes" xml:space="preserve">
          <source>Math.pow</source>
          <target state="translated">Math.pow</target>
        </trans-unit>
        <trans-unit id="37ca7979cb602f81b3d7ebb70a93be5dd8d7a2a9" translate="yes" xml:space="preserve">
          <source>Math.random</source>
          <target state="translated">Math.random</target>
        </trans-unit>
        <trans-unit id="6622fa4403e7083f92f6d3144102c7594827772b" translate="yes" xml:space="preserve">
          <source>Math.round</source>
          <target state="translated">Math.round</target>
        </trans-unit>
        <trans-unit id="aa1bec0001e22985568738bbe08a00d4cc48adca" translate="yes" xml:space="preserve">
          <source>Math.sign</source>
          <target state="translated">Math.sign</target>
        </trans-unit>
        <trans-unit id="e9ccf88318dbfe9c07069bd649419105083fef7b" translate="yes" xml:space="preserve">
          <source>Math.sin</source>
          <target state="translated">Math.sin</target>
        </trans-unit>
        <trans-unit id="d1fb3dfbd5676124d51e030bb987b4141bfbe1d4" translate="yes" xml:space="preserve">
          <source>Math.sinh</source>
          <target state="translated">Math.sinh</target>
        </trans-unit>
        <trans-unit id="9edd2550c136c21e14adc217c873ee328e7d3996" translate="yes" xml:space="preserve">
          <source>Math.sinh(x)</source>
          <target state="translated">Math.sinh(x)</target>
        </trans-unit>
        <trans-unit id="74a1f5c85920fe3af7e569916321e3757879b3f0" translate="yes" xml:space="preserve">
          <source>Math.sqrt</source>
          <target state="translated">Math.sqrt</target>
        </trans-unit>
        <trans-unit id="616dcd98536f46efa5c47eacf4b4c0a589c1ceeb" translate="yes" xml:space="preserve">
          <source>Math.tan</source>
          <target state="translated">Math.tan</target>
        </trans-unit>
        <trans-unit id="ca6e85a6fbd385970d7a551f18e54ed955aeb147" translate="yes" xml:space="preserve">
          <source>Math.tanh</source>
          <target state="translated">Math.tanh</target>
        </trans-unit>
        <trans-unit id="dcb60e2fd35aa0d4dc6d9b49810ec7daa4a9833a" translate="yes" xml:space="preserve">
          <source>Math.trunc</source>
          <target state="translated">Math.trunc</target>
        </trans-unit>
        <trans-unit id="74c367514aaba6e4eae54e7d73df11299e0f818c" translate="yes" xml:space="preserve">
          <source>Mathias Bynens: JavaScript character escape sequences</source>
          <target state="translated">Mathias Bynens : JavaScript 문자 이스케이프 시퀀스</target>
        </trans-unit>
        <trans-unit id="2cdcd95c7caa6d5c68c3de40d4c1478f3f02b5b4" translate="yes" xml:space="preserve">
          <source>Matt Greer: JavaScript Promises ... In Wicked Detail</source>
          <target state="translated">Matt Greer : JavaScript 약속 ... 악한 세부 사항</target>
        </trans-unit>
        <trans-unit id="c0c8f30fb77ef491692bfbd045ee339a2c727093" translate="yes" xml:space="preserve">
          <source>Maybe there is a typo in the function name? Maybe the object you are calling the method on does not have this function? For example, JavaScript objects have no &lt;code&gt;map&lt;/code&gt; function, but the JavaScript Array object does.</source>
          <target state="translated">함수 이름에 오타가있을 수 있습니까? 메소드를 호출하는 객체 에이 기능이 없을 수도 있습니다. 예를 들어 JavaScript 객체에는 &lt;code&gt;map&lt;/code&gt; 기능이 없지만 JavaScript Array 객체에는 없습니다.</target>
        </trans-unit>
        <trans-unit id="19cd7d185cfd95a703e62d43597e9ae28e0646e5" translate="yes" xml:space="preserve">
          <source>Meaning</source>
          <target state="translated">Meaning</target>
        </trans-unit>
        <trans-unit id="32ae4044a6d91b84c5cdd36108e37461759dc667" translate="yes" xml:space="preserve">
          <source>Measuring execution time</source>
          <target state="translated">실행 시간 측정</target>
        </trans-unit>
        <trans-unit id="2742f92a05251bd8b22357a6f3aa482165c782ff" translate="yes" xml:space="preserve">
          <source>Member operators provide access to a property or method of an object</source>
          <target state="translated">멤버 연산자는 객체의 속성 또는 메서드에 대한 액세스를 제공합니다</target>
        </trans-unit>
        <trans-unit id="1c5536b98ab016fe61807564b4a34c80211a7613" translate="yes" xml:space="preserve">
          <source>Memory management</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4772d95ba29a640d30f48c96b8012773ec532d09" translate="yes" xml:space="preserve">
          <source>Merging objects</source>
          <target state="translated">객체 병합</target>
        </trans-unit>
        <trans-unit id="e783d9e184edce4feef4a8eb1755f904a63cb09b" translate="yes" xml:space="preserve">
          <source>Merging objects with same properties</source>
          <target state="translated">동일한 속성을 가진 객체 병합</target>
        </trans-unit>
        <trans-unit id="2845fa81e4300423540d076289e4fd24a72818af" translate="yes" xml:space="preserve">
          <source>Merging two arrays</source>
          <target state="translated">두 배열 병합</target>
        </trans-unit>
        <trans-unit id="68f4145fee7dde76afceb910165924ad14cf0d00" translate="yes" xml:space="preserve">
          <source>Message</source>
          <target state="translated">Message</target>
        </trans-unit>
        <trans-unit id="88306943fea7e76f9cd57cae0ea6d8b32d2e8434" translate="yes" xml:space="preserve">
          <source>Method</source>
          <target state="translated">Method</target>
        </trans-unit>
        <trans-unit id="4ea2cafd85e43a11661c43bb857632229ca3d1a5" translate="yes" xml:space="preserve">
          <source>Method binding</source>
          <target state="translated">메소드 바인딩</target>
        </trans-unit>
        <trans-unit id="b1e0dda9d554b5de0e97cc3a8969aa82ad2fefd3" translate="yes" xml:space="preserve">
          <source>Method definition syntax</source>
          <target state="translated">메소드 정의 구문</target>
        </trans-unit>
        <trans-unit id="24cdd80596e8be69a291a0a93b2ea86ebd106c75" translate="yes" xml:space="preserve">
          <source>Method definitions</source>
          <target state="translated">메소드 정의</target>
        </trans-unit>
        <trans-unit id="f1899ae00e7005fc77e7252da2c5abf4de986cfd" translate="yes" xml:space="preserve">
          <source>Method definitions are not constructable</source>
          <target state="translated">메소드 정의는 구성 할 수 없습니다</target>
        </trans-unit>
        <trans-unit id="7e4ac6803c9159c694f63d089cb06b2519c16aba" translate="yes" xml:space="preserve">
          <source>Methods</source>
          <target state="translated">Methods</target>
        </trans-unit>
        <trans-unit id="bf07858e8e01fe9e63025918e30c022de5a77784" translate="yes" xml:space="preserve">
          <source>Methods Polyfill</source>
          <target state="translated">폴리 필 방법</target>
        </trans-unit>
        <trans-unit id="b359fc4b992b5310b06b482980bb86d89888ad6e" translate="yes" xml:space="preserve">
          <source>Methods for multi-criteria case</source>
          <target state="translated">다중 기준 사례에 대한 방법</target>
        </trans-unit>
        <trans-unit id="2d4d7d3afb6b465b7aa978719f97d97dccf47dc7" translate="yes" xml:space="preserve">
          <source>Methods of the &lt;code&gt;Object&lt;/code&gt; constructor</source>
          <target state="translated">&lt;code&gt;Object&lt;/code&gt; 생성자의 메소드</target>
        </trans-unit>
        <trans-unit id="0a86e9fa10a6a2ce2b664df6d172d8e0f8956e92" translate="yes" xml:space="preserve">
          <source>Methods of the handler object</source>
          <target state="translated">핸들러 객체의 메소드</target>
        </trans-unit>
        <trans-unit id="f37dcf12f5cad1a913f85812dde02569c1b39d40" translate="yes" xml:space="preserve">
          <source>Methods unrelated to HTML</source>
          <target state="translated">HTML과 관련이없는 메소드</target>
        </trans-unit>
        <trans-unit id="11f3242118ff2add5d117cbf216f29ac578f6ba6" translate="yes" xml:space="preserve">
          <source>Microsoft</source>
          <target state="translated">Microsoft</target>
        </trans-unit>
        <trans-unit id="0c91f8d2134260edcad24e279bbffab045533a57" translate="yes" xml:space="preserve">
          <source>Microsoft's JScript does not support negative values for the start index. To use this feature in JScript, you can use the following code:</source>
          <target state="translated">Microsoft의 JScript는 시작 색인에 음수 값을 지원하지 않습니다. JScript에서이 기능을 사용하려면 다음 코드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8798ceea0a11a821b057036790a060751fe0c64b" translate="yes" xml:space="preserve">
          <source>Minute: 2 digit minute of hour, e.g. &quot;53&quot;</source>
          <target state="translated">분 : 2 자리 분, 예 : &quot;53&quot;</target>
        </trans-unit>
        <trans-unit id="5f2cbd107037ed23248e5058a7a64cd6bae05468" translate="yes" xml:space="preserve">
          <source>Miscellaneous</source>
          <target state="translated">Miscellaneous</target>
        </trans-unit>
        <trans-unit id="ead045fe948be7ea5e008222b76ccb12a9d6157b" translate="yes" xml:space="preserve">
          <source>Mismatched characters</source>
          <target state="translated">일치하지 않는 문자</target>
        </trans-unit>
        <trans-unit id="c6bfe8d08ac1cce3691b75142d66869195854fb0" translate="yes" xml:space="preserve">
          <source>Missing a variable name</source>
          <target state="translated">변수 이름이 없습니다</target>
        </trans-unit>
        <trans-unit id="04710d9e33ca854dbc5582dadebf3a2ed0d86d85" translate="yes" xml:space="preserve">
          <source>Missing bracket after list</source>
          <target state="translated">목록 뒤에 괄호가 없음</target>
        </trans-unit>
        <trans-unit id="2d235bf30599bfae84517e6baa48ea80693db0f9" translate="yes" xml:space="preserve">
          <source>Missing colon after property id</source>
          <target state="translated">속성 ID 뒤에 콜론이 없습니다</target>
        </trans-unit>
        <trans-unit id="c701593900706845ea863233742bef73a7cd1a04" translate="yes" xml:space="preserve">
          <source>Missing const initializer</source>
          <target state="translated">const 이니셜 라이저가 없습니다.</target>
        </trans-unit>
        <trans-unit id="547f619525c0e588e2b518b330b32b0247bd210a" translate="yes" xml:space="preserve">
          <source>Missing curly after function body</source>
          <target state="translated">함수 본문 뒤에 곱슬이 없습니다.</target>
        </trans-unit>
        <trans-unit id="783a307c1b40aa2740e7254efc8b761ef0e85383" translate="yes" xml:space="preserve">
          <source>Missing curly after property list</source>
          <target state="translated">속성 목록 뒤에 곱슬이 없습니다.</target>
        </trans-unit>
        <trans-unit id="6946cb63d867319ad149c8b2f398588b3314bebc" translate="yes" xml:space="preserve">
          <source>Missing formal parameter</source>
          <target state="translated">공식 매개 변수가 없습니다.</target>
        </trans-unit>
        <trans-unit id="247fd0b519669b01bb1cc69237c31a3238d029f1" translate="yes" xml:space="preserve">
          <source>Missing initializer in const</source>
          <target state="translated">const에 이니셜 라이저가 없습니다.</target>
        </trans-unit>
        <trans-unit id="d7f3d50032b13610b1dbb5cfb4b08df2568a9127" translate="yes" xml:space="preserve">
          <source>Missing name after dot operator</source>
          <target state="translated">도트 연산자 뒤에 이름이 없습니다</target>
        </trans-unit>
        <trans-unit id="d014a511124a2115e517ff56af6ec509f65c8273" translate="yes" xml:space="preserve">
          <source>Missing parenthesis after argument list</source>
          <target state="translated">인수 목록 뒤에 괄호가 없습니다</target>
        </trans-unit>
        <trans-unit id="0c1fcc141f82962c593952eb0fd54e85112e0397" translate="yes" xml:space="preserve">
          <source>Missing parenthesis after condition</source>
          <target state="translated">조건 후 괄호 누락</target>
        </trans-unit>
        <trans-unit id="45ae0e646985e28013fcc87e3832ddfca290f7df" translate="yes" xml:space="preserve">
          <source>Missing semicolon before statement</source>
          <target state="translated">명령문 앞에 세미콜론이 누락되었습니다.</target>
        </trans-unit>
        <trans-unit id="1c9abcc122dbc35a590dfaf5d43ef774f845114f" translate="yes" xml:space="preserve">
          <source>Mix-ins</source>
          <target state="translated">Mix-ins</target>
        </trans-unit>
        <trans-unit id="b1d702459399a2512fba5a402d4d5f26aee34693" translate="yes" xml:space="preserve">
          <source>Mobile</source>
          <target state="translated">Mobile</target>
        </trans-unit>
        <trans-unit id="0c0930fef9d0d06ade78d378fb148192665a750e" translate="yes" xml:space="preserve">
          <source>Modifying a property</source>
          <target state="translated">속성 수정</target>
        </trans-unit>
        <trans-unit id="782ee845b12862b0a1ee347599d483a23aa49179" translate="yes" xml:space="preserve">
          <source>Module Redirects</source>
          <target state="translated">모듈 리디렉션</target>
        </trans-unit>
        <trans-unit id="dd4cf8174821e8e1880a8119fc1df052768998ed" translate="yes" xml:space="preserve">
          <source>Module instances have no default methods of their own.</source>
          <target state="translated">모듈 인스턴스에는 기본 메소드가 없습니다.</target>
        </trans-unit>
        <trans-unit id="b6805e32bd4de5f6b98d1ecbb9dcc1d711cd6047" translate="yes" xml:space="preserve">
          <source>Month name: 3 letter English month name, e.g. &quot;Sep&quot;</source>
          <target state="translated">월 이름 : 3 자 영어 월 이름 (예 : &quot;Sep&quot;)</target>
        </trans-unit>
        <trans-unit id="6f490c1d3478719a7601cdceff98808d64b9a639" translate="yes" xml:space="preserve">
          <source>MooTools 1.3 forces its own version of &lt;code&gt;String.prototype.contains()&lt;/code&gt;, so websites relying on it should not break. However, you should note that &lt;a href=&quot;http://mootools.net/core/docs/1.3.2/Types/String#String-method:-contains&quot;&gt;MooTools 1.3 signature&lt;/a&gt; and ECMAScript 2015 signatures for this method differ (on the second argument). Later, &lt;a href=&quot;https://github.com/mootools/mootools-core/blob/master/Docs/Types/String.md#note&quot;&gt;MooTools 1.5+ changed the signature to match the ES2015 standard.&lt;/a&gt;</source>
          <target state="translated">MooTools 1.3은 자체 버전의 &lt;code&gt;String.prototype.contains()&lt;/code&gt; 강제 실행 하므로 이에 의존하는 웹 사이트가 중단되지 않아야합니다. 그러나이 방법에 대한 &lt;a href=&quot;http://mootools.net/core/docs/1.3.2/Types/String#String-method:-contains&quot;&gt;MooTools 1.3 서명&lt;/a&gt; 과 ECMAScript 2015 서명이 다릅니다 (두 번째 인수에서). 나중에 &lt;a href=&quot;https://github.com/mootools/mootools-core/blob/master/Docs/Types/String.md#note&quot;&gt;MooTools 1.5+는 ES2015 표준과 일치하도록 서명을 변경했습니다.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b3ded464d1cda2b83720aa7ad9ebdd057d4b481d" translate="yes" xml:space="preserve">
          <source>More arguments needed</source>
          <target state="translated">더 많은 논쟁이 필요하다</target>
        </trans-unit>
        <trans-unit id="3cb592c1fecdda2623e47d9a1d833c325e8fa130" translate="yes" xml:space="preserve">
          <source>More commonly it is used as a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Callback_function&quot;&gt;callback&lt;/a&gt;:</source>
          <target state="translated">더 일반적으로 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Callback_function&quot;&gt;콜백으로&lt;/a&gt; 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="383f0e0e882a4dc2683b66372e6aa52e3a75f04b" translate="yes" xml:space="preserve">
          <source>More examples</source>
          <target state="translated">더 많은 예</target>
        </trans-unit>
        <trans-unit id="ed41998e464737eacfb99f7081e8a44457a2ab7f" translate="yes" xml:space="preserve">
          <source>More reference pages</source>
          <target state="translated">더 많은 참조 페이지</target>
        </trans-unit>
        <trans-unit id="066a5d8297a8393089fee30dde3f38c9d1c771d7" translate="yes" xml:space="preserve">
          <source>Most browsers, including Chrome 14 and Internet Explorer 9, still do not accept array-like objects and will throw an exception.</source>
          <target state="translated">Chrome 14 및 Internet Explorer 9를 포함한 대부분의 브라우저는 여전히 배열과 유사한 객체를 허용하지 않으므로 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="e6a1387912e988056d5a48e5ac571fccd3f059c6" translate="yes" xml:space="preserve">
          <source>Mostly this property is used for defining a function as a &lt;strong&gt;function-constructor&lt;/strong&gt; with further calling it with &lt;strong&gt;new&lt;/strong&gt; and prototype-inherits chain.</source>
          <target state="translated">구름이 속성은로서의 기능을 정의하는데 사용되는 &lt;strong&gt;함수 생성자&lt;/strong&gt; 와 상기 호출을 가진 &lt;strong&gt;새로운&lt;/strong&gt; 및 프로토 타입 상속 체인.</target>
        </trans-unit>
        <trans-unit id="d83016dd56e9bf9199d175870ff56ee77659cfb7" translate="yes" xml:space="preserve">
          <source>Mozilla</source>
          <target state="translated">Mozilla</target>
        </trans-unit>
        <trans-unit id="3a0e03621e1caeb4567a4ba39b0fdfe4e3f43f34" translate="yes" xml:space="preserve">
          <source>Much like a &lt;code&gt;return&lt;/code&gt; statement, an error thrown inside the generator will make the generator finished -- unless caught within the generator's body.</source>
          <target state="translated">&lt;code&gt;return&lt;/code&gt; 문과 마찬가지로 생성기 내부에 오류가 발생하면 생성기 본체에 걸리지 않는 한 생성기가 완료됩니다.</target>
        </trans-unit>
        <trans-unit id="4c738c6d3d74233783f7b96060bfeed7b0c3abd2" translate="yes" xml:space="preserve">
          <source>Multi-byte number formats are represented in memory differently depending on machine architecture &amp;mdash; see &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;Endianness&lt;/a&gt; for an explanation. &lt;code&gt;DataView&lt;/code&gt; accessors provide explicit control of how data is accessed, regardless of the executing computer's endianness.</source>
          <target state="translated">멀티 바이트 숫자 형식은 머신 아키텍처에 따라 메모리에 다르게 표시됩니다 . 자세한 내용은 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;엔디안&lt;/a&gt; 을 참조하십시오 . &lt;code&gt;DataView&lt;/code&gt; 접근자는 실행중인 컴퓨터의 엔디안에 관계없이 데이터에 액세스하는 방법을 명시 적으로 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="45547c82b3d107dd68f9daa0979f6f8524d8fe41" translate="yes" xml:space="preserve">
          <source>Multi-case - chained operations</source>
          <target state="translated">다중 사례-체인 작업</target>
        </trans-unit>
        <trans-unit id="187bc476b097eb708e54a90b80a07a1474e02b36" translate="yes" xml:space="preserve">
          <source>Multi-case - single operation</source>
          <target state="translated">다중 사례-단일 작업</target>
        </trans-unit>
        <trans-unit id="d7e7c012f74a51c913dc1473b49e5ff251e92948" translate="yes" xml:space="preserve">
          <source>Multi-line search.</source>
          <target state="translated">여러 줄 검색.</target>
        </trans-unit>
        <trans-unit id="04001df0dbe7d02ecc4231f228169387b546cfd8" translate="yes" xml:space="preserve">
          <source>Multi-line strings</source>
          <target state="translated">여러 줄 문자열</target>
        </trans-unit>
        <trans-unit id="c70668a80f6e27483a35c68555c2dbd8aa226406" translate="yes" xml:space="preserve">
          <source>Multiple &lt;code&gt;if...else&lt;/code&gt; statements can be nested to create an &lt;code&gt;else if&lt;/code&gt; clause. Note that there is no &lt;code&gt;elseif&lt;/code&gt; (in one word) keyword in JavaScript.</source>
          <target state="translated">&lt;code&gt;else if&lt;/code&gt; 절 을 만들기 위해 여러 &lt;code&gt;if...else&lt;/code&gt; 문을 중첩 할 수 있습니다 . JavaScript 에는 &lt;code&gt;elseif&lt;/code&gt; (한 단어로) 키워드 가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="91f980bf5c98e13d46d6f51ec9d1c716af220ca8" translate="yes" xml:space="preserve">
          <source>Multiple lines</source>
          <target state="translated">여러 줄</target>
        </trans-unit>
        <trans-unit id="cf527f48ca51801e8fc83e714aca36e495d12a76" translate="yes" xml:space="preserve">
          <source>Multiple statements need to be enclosed in brackets. A single expression requires no brackets. The expression is also the implicit return value of the function.</source>
          <target state="translated">여러 문장은 괄호로 묶어야합니다. 단일 표현식에는 대괄호가 필요하지 않습니다. 표현식은 함수의 내재 된 리턴 값이기도합니다.</target>
        </trans-unit>
        <trans-unit id="2b9ee6e2b5fcdbd970e8f069acf17877e49e0441" translate="yes" xml:space="preserve">
          <source>Multiplication</source>
          <target state="translated">Multiplication</target>
        </trans-unit>
        <trans-unit id="29bec0c4ea1142a32691ebfb61cdb6560525eb20" translate="yes" xml:space="preserve">
          <source>Multiplication (*)</source>
          <target state="translated">곱셈 (*)</target>
        </trans-unit>
        <trans-unit id="c41e6546f2f09c72f9c4264b134a64d1e3f0725d" translate="yes" xml:space="preserve">
          <source>Multiplication (&lt;code&gt;*&lt;/code&gt;)</source>
          <target state="translated">곱셈 ( &lt;code&gt;*&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="bc5f7a8e3f6c574a340d00ceb468d9ad4997d1a2" translate="yes" xml:space="preserve">
          <source>Multiplication assignment</source>
          <target state="translated">곱셈 대입</target>
        </trans-unit>
        <trans-unit id="68c5526133ad24050eb09725afae35a9f3f94b08" translate="yes" xml:space="preserve">
          <source>Multiplication assignment (&lt;code&gt;x *= y&lt;/code&gt;)</source>
          <target state="translated">곱셈 대입 ( &lt;code&gt;x *= y&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="07d8af07b89b3cd3cdcde482fe72b5eef9743367" translate="yes" xml:space="preserve">
          <source>Multiplication assignment.</source>
          <target state="translated">곱셈 대입.</target>
        </trans-unit>
        <trans-unit id="2268b7ba08eaa2111a987e683d3af8c78d7134c2" translate="yes" xml:space="preserve">
          <source>Multiplication operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54694fff9fa76306fe7c989ccae1434b6f8e4db4" translate="yes" xml:space="preserve">
          <source>Mutates a reference stored at a given index to a different value.</source>
          <target state="translated">주어진 색인에 저장된 참조를 다른 값으로 변경합니다.</target>
        </trans-unit>
        <trans-unit id="660ecb8914204527375df5f117ea5a25cb860eab" translate="yes" xml:space="preserve">
          <source>Mutator methods</source>
          <target state="translated">뮤 테이터 방법</target>
        </trans-unit>
        <trans-unit id="984ac544f1d0a5036cc20ca285334515bae3fc49" translate="yes" xml:space="preserve">
          <source>NOT a</source>
          <target state="translated">아닙니다</target>
        </trans-unit>
        <trans-unit id="f7fd9c68f804acda665d2ab082217bb1583318f2" translate="yes" xml:space="preserve">
          <source>NaN</source>
          <target state="translated">NaN</target>
        </trans-unit>
        <trans-unit id="709a23220f2c3d64d1e1d6d18c4d5280f8d82fca" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">Name</target>
        </trans-unit>
        <trans-unit id="1507b9e9bcd5de9387013d4f48b50175dd0b65f4" translate="yes" xml:space="preserve">
          <source>Name of the exports to be imported.</source>
          <target state="translated">가져올 내보내기의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="50ae1009f3fe21ff378ffa746e9b63e39211a8ee" translate="yes" xml:space="preserve">
          <source>Name of the module object that will be used as a kind of namespace when referring to the imports.</source>
          <target state="translated">가져 오기를 참조 할 때 일종의 네임 스페이스로 사용될 모듈 객체의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="c21b0a75b8bc8ff270a0e74bfc6ecdc3a207997f" translate="yes" xml:space="preserve">
          <source>Name that will refer to the default export from the module.</source>
          <target state="translated">모듈에서 기본 내보내기를 참조 할 이름입니다.</target>
        </trans-unit>
        <trans-unit id="c35ea6f71982fb5e872a4f834ec738eede19541e" translate="yes" xml:space="preserve">
          <source>Named class expressions</source>
          <target state="translated">명명 된 클래스 표현식</target>
        </trans-unit>
        <trans-unit id="8bb303667ef4ac79882b9d41b44e8be3358ba3e0" translate="yes" xml:space="preserve">
          <source>Named exports are useful to export several values. During the import, it is mandatory to use the same name of the corresponding object.</source>
          <target state="translated">명명 된 내보내기는 여러 값을 내보내는 데 유용합니다. 가져 오는 동안 해당 오브젝트의 동일한 이름을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="04d7093c70a1108e9c5984ef06cece016f4a560b" translate="yes" xml:space="preserve">
          <source>Named exports:</source>
          <target state="translated">명명 된 수출 :</target>
        </trans-unit>
        <trans-unit id="26061f731614204dbc36682a9e1cecacb17c8ee9" translate="yes" xml:space="preserve">
          <source>Named function expression</source>
          <target state="translated">명명 된 함수 표현식</target>
        </trans-unit>
        <trans-unit id="0d4f1a679b799c296d44bb53786ee4ff92fd1297" translate="yes" xml:space="preserve">
          <source>Named properties</source>
          <target state="translated">명명 된 속성</target>
        </trans-unit>
        <trans-unit id="a16d9fe91bcd8d71db33de2fdb78e09ec94c9758" translate="yes" xml:space="preserve">
          <source>Names that will refer to the named imports.</source>
          <target state="translated">명명 된 가져 오기를 나타내는 이름입니다.</target>
        </trans-unit>
        <trans-unit id="07a58dec630a2094f2bac8489ef1376195b50ea3" translate="yes" xml:space="preserve">
          <source>Names to be used by the function as formal argument names. Each must be a string that corresponds to a valid JavaScript identifier or a list of such strings separated with a comma; for example &quot;&lt;code&gt;x&lt;/code&gt;&quot;, &quot;&lt;code&gt;theValue&lt;/code&gt;&quot;, or &quot;&lt;code&gt;a,b&lt;/code&gt;&quot;.</source>
          <target state="translated">함수가 형식 인수 이름으로 사용할 이름입니다. 각각은 유효한 JavaScript 식별자 또는 쉼표로 구분 된 이러한 문자열 목록에 해당하는 문자열이어야합니다. 예를 들어 &quot; &lt;code&gt;x&lt;/code&gt; &quot;, &quot; &lt;code&gt;theValue&lt;/code&gt; &quot;또는 &quot; &lt;code&gt;a,b&lt;/code&gt; &quot;입니다.</target>
        </trans-unit>
        <trans-unit id="7ed1c8dd7972a58d00463e8e1a107d29a25e5246" translate="yes" xml:space="preserve">
          <source>Natural logarithm of 10, approximately 2.303.</source>
          <target state="translated">10의 자연 로그, 약 2.303</target>
        </trans-unit>
        <trans-unit id="416cfbf01ae8c7bc29a905c8714c433900c2ffbe" translate="yes" xml:space="preserve">
          <source>Natural logarithm of 2, approximately 0.693.</source>
          <target state="translated">2의 자연 로그, 약 0.693.</target>
        </trans-unit>
        <trans-unit id="fedf02a1f3fea92069599c49ef4d87f7675ed222" translate="yes" xml:space="preserve">
          <source>Nearly all objects in JavaScript are instances of &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt;; a typical object inherits properties (including methods) from &lt;code&gt;Object.prototype&lt;/code&gt;, although these properties may be shadowed (a.k.a. overridden). However, an &lt;code&gt;Object&lt;/code&gt; may be deliberately created for which this is not true (e.g. by &lt;a href=&quot;create&quot;&gt;&lt;code&gt;Object.create(null)&lt;/code&gt;&lt;/a&gt;), or it may be altered so that this is no longer true (e.g. with &lt;a href=&quot;setprototypeof&quot;&gt;&lt;code&gt;Object.setPrototypeOf&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">JavaScript의 거의 모든 객체는 &lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; 의&lt;/a&gt; 인스턴스입니다 . 일반적인 객체는 &lt;code&gt;Object.prototype&lt;/code&gt; 에서 속성 (메소드 포함)을 상속 하지만 이러한 속성은 음영 처리 될 수 있습니다 (일명 재정의 됨). 그러나 이것이 사실이 아닌 &lt;code&gt;Object&lt;/code&gt; 의도적으로 작성 하거나 (예 : &lt;a href=&quot;create&quot;&gt; &lt;code&gt;Object.create(null)&lt;/code&gt; &lt;/a&gt; 의해 ) 더 이상 참이 아닌 &lt;a href=&quot;setprototypeof&quot;&gt; &lt;code&gt;Object.setPrototypeOf&lt;/code&gt; &lt;/a&gt; 변경할 수 있습니다 (예 : Object.setPrototypeOf ).</target>
        </trans-unit>
        <trans-unit id="65a1aa90e5ce901372e65e7efce50772db151276" translate="yes" xml:space="preserve">
          <source>Need for parentheses in Syntax</source>
          <target state="translated">구문에서 괄호 필요</target>
        </trans-unit>
        <trans-unit id="e71dfa9fc72cb878d4974b9f7162935e23e6f1b4" translate="yes" xml:space="preserve">
          <source>Need to set the flag on the commandline via --js-flags</source>
          <target state="translated">--js-flags를 통해 명령 줄에서 플래그를 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="97fab52ebdfb8cddfb5bb0866105e44e9f3b81bf" translate="yes" xml:space="preserve">
          <source>Negative integers are not considered as indexed properties and therefore return the value of the prototype property.</source>
          <target state="translated">음의 정수는 인덱싱 된 속성으로 간주되지 않으므로 프로토 타입 속성의 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f114d13af557871750ae927f40c08a0ebae2fb93" translate="yes" xml:space="preserve">
          <source>Negative repetition count</source>
          <target state="translated">음의 반복 횟수</target>
        </trans-unit>
        <trans-unit id="833ed969d2a6a2fad3f87bda88773f90f927ac90" translate="yes" xml:space="preserve">
          <source>Negative when the &lt;strong&gt;referenceStr&lt;/strong&gt; occurs before &lt;strong&gt;compareStr&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;compareStr&lt;/strong&gt; 전에 &lt;strong&gt;referenceStr이&lt;/strong&gt; 발생 하면 음수&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9b51ed36ac23c16ba1d7fe422d4192c3d86f082d" translate="yes" xml:space="preserve">
          <source>Nested object and array destructuring</source>
          <target state="translated">중첩 된 객체 및 배열 파괴</target>
        </trans-unit>
        <trans-unit id="69a930784cc1871541d6c9f52e4b4b51f9c36379" translate="yes" xml:space="preserve">
          <source>Nested try-blocks</source>
          <target state="translated">중첩 된 시험 블록</target>
        </trans-unit>
        <trans-unit id="c5f7b13e5df2686661ca169a8a315cd0e531d609" translate="yes" xml:space="preserve">
          <source>Nesting templates</source>
          <target state="translated">중첩 템플릿</target>
        </trans-unit>
        <trans-unit id="e9d61c228244e80a827e26b1ede04cfbb5a1305a" translate="yes" xml:space="preserve">
          <source>New bitmasks can be created by using the bitwise logical operators on these primitive bitmasks. For example, the bitmask 1011 can be created by ORing FLAG_A, FLAG_B, and FLAG_D:</source>
          <target state="translated">이러한 기본 비트 마스크에서 비트 논리 연산자를 사용하여 새 비트 마스크를 작성할 수 있습니다. 예를 들어, 비트 마스크 (1011)는 ORAG FLAG_A, FLAG_B 및 FLAG_D에 의해 생성 될 수있다 :</target>
        </trans-unit>
        <trans-unit id="a78ae48a655c194ce9f25de48a7386849ea9f568" translate="yes" xml:space="preserve">
          <source>New in JavaScript</source>
          <target state="translated">JavaScript의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="f1deedbf18333a7029cfa84cdcc491aed511a3e1" translate="yes" xml:space="preserve">
          <source>New line character in Commodore and early Mac systems.</source>
          <target state="translated">Commodore 및 초기 Mac 시스템의 줄 바꿈 문자</target>
        </trans-unit>
        <trans-unit id="32190972ea93208b4c44876f3c7240a3b836fa02" translate="yes" xml:space="preserve">
          <source>New line character in UNIX systems.</source>
          <target state="translated">UNIX 시스템의 줄 바꾸기 문자</target>
        </trans-unit>
        <trans-unit id="35efbc72fabdb55c68f4edabf07f195df0056401" translate="yes" xml:space="preserve">
          <source>New method added: &lt;a href=&quot;array/includes&quot;&gt;&lt;code&gt;Array.prototype.includes()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">새로운 메소드 추가 : &lt;a href=&quot;array/includes&quot;&gt; &lt;code&gt;Array.prototype.includes()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="22da9740a337ab48e0f49b7d058507681ec7d15a" translate="yes" xml:space="preserve">
          <source>New methods &lt;a href=&quot;math/log10&quot;&gt;&lt;code&gt;log10()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;math/log2&quot;&gt;&lt;code&gt;log2()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;math/log1p&quot;&gt;&lt;code&gt;log1p()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;math/expm1&quot;&gt;&lt;code&gt;expm1()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;math/cosh&quot;&gt;&lt;code&gt;cosh()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;math/sinh&quot;&gt;&lt;code&gt;sinh()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;math/tanh&quot;&gt;&lt;code&gt;tanh()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;math/acosh&quot;&gt;&lt;code&gt;acosh()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;math/asinh&quot;&gt;&lt;code&gt;asinh()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;math/atanh&quot;&gt;&lt;code&gt;atanh()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;math/hypot&quot;&gt;&lt;code&gt;hypot()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;math/trunc&quot;&gt;&lt;code&gt;trunc()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;math/sign&quot;&gt;&lt;code&gt;sign()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;math/imul&quot;&gt;&lt;code&gt;imul()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;math/fround&quot;&gt;&lt;code&gt;fround()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;math/cbrt&quot;&gt;&lt;code&gt;cbrt()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;math/clz32&quot;&gt;&lt;code&gt;clz32()&lt;/code&gt;&lt;/a&gt; added.</source>
          <target state="translated">새로운 메소드 &lt;a href=&quot;math/log10&quot;&gt; &lt;code&gt;log10()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;math/log2&quot;&gt; &lt;code&gt;log2()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;math/log1p&quot;&gt; &lt;code&gt;log1p()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;math/expm1&quot;&gt; &lt;code&gt;expm1()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;math/cosh&quot;&gt; &lt;code&gt;cosh()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;math/sinh&quot;&gt; &lt;code&gt;sinh()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;math/tanh&quot;&gt; &lt;code&gt;tanh()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;math/acosh&quot;&gt; &lt;code&gt;acosh()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;math/asinh&quot;&gt; &lt;code&gt;asinh()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;math/atanh&quot;&gt; &lt;code&gt;atanh()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;math/hypot&quot;&gt; &lt;code&gt;hypot()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;math/trunc&quot;&gt; &lt;code&gt;trunc()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;math/sign&quot;&gt; &lt;code&gt;sign()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;math/imul&quot;&gt; &lt;code&gt;imul()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;math/fround&quot;&gt; &lt;code&gt;fround()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;math/cbrt&quot;&gt; &lt;code&gt;cbrt()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;math/clz32&quot;&gt; &lt;code&gt;clz32()&lt;/code&gt; &lt;/a&gt; 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="4576b1cdd1a75ff690a3d4c2e228c09d191ca7b7" translate="yes" xml:space="preserve">
          <source>New methods added: &lt;a href=&quot;array/from&quot;&gt;&lt;code&gt;Array.from&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;array/of&quot;&gt;&lt;code&gt;Array.of&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;array/find&quot;&gt;&lt;code&gt;find&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;array/findindex&quot;&gt;&lt;code&gt;findIndex&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;array/fill&quot;&gt;&lt;code&gt;fill&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;array/copywithin&quot;&gt;&lt;code&gt;copyWithin&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">새로운 메소드 추가 : &lt;a href=&quot;array/from&quot;&gt; &lt;code&gt;Array.from&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;array/of&quot;&gt; &lt;code&gt;Array.of&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;array/find&quot;&gt; &lt;code&gt;find&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;array/findindex&quot;&gt; &lt;code&gt;findIndex&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;array/fill&quot;&gt; &lt;code&gt;fill&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;array/copywithin&quot;&gt; &lt;code&gt;copyWithin&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7c5d3d80d6e6b23f9c9c31132f3f8ac1135c271c" translate="yes" xml:space="preserve">
          <source>New methods added: &lt;a href=&quot;array/isarray&quot;&gt;&lt;code&gt;Array.isArray&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;array/indexof&quot;&gt;&lt;code&gt;indexOf&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;array/lastindexof&quot;&gt;&lt;code&gt;lastIndexOf&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;array/every&quot;&gt;&lt;code&gt;every&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;array/some&quot;&gt;&lt;code&gt;some&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;array/foreach&quot;&gt;&lt;code&gt;forEach&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;array/map&quot;&gt;&lt;code&gt;map&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;array/filter&quot;&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;array/reduce&quot;&gt;&lt;code&gt;reduce&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;array/reduceright&quot;&gt;&lt;code&gt;reduceRight&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">새로운 메소드 추가 : &lt;a href=&quot;array/isarray&quot;&gt; &lt;code&gt;Array.isArray&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;array/indexof&quot;&gt; &lt;code&gt;indexOf&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;array/lastindexof&quot;&gt; &lt;code&gt;lastIndexOf&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;array/every&quot;&gt; &lt;code&gt;every&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;array/some&quot;&gt; &lt;code&gt;some&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;array/foreach&quot;&gt; &lt;code&gt;forEach&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;array/map&quot;&gt; &lt;code&gt;map&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;array/filter&quot;&gt; &lt;code&gt;filter&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;array/reduce&quot;&gt; &lt;code&gt;reduce&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;array/reduceright&quot;&gt; &lt;code&gt;reduceRight&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a012fda7a04adcf12c5afca05aadad805a2c8321" translate="yes" xml:space="preserve">
          <source>New methods and properties added: &lt;a href=&quot;number/epsilon&quot;&gt;&lt;code&gt;EPSILON&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;number/isfinite&quot;&gt;&lt;code&gt;isFinite&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;number/isinteger&quot;&gt;&lt;code&gt;isInteger&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;number/isnan&quot;&gt;&lt;code&gt;isNaN&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;number/parsefloat&quot;&gt;&lt;code&gt;parseFloat&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;number/parseint&quot;&gt;&lt;code&gt;parseInt&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;number/epsilon&quot;&gt; &lt;code&gt;EPSILON&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;number/isfinite&quot;&gt; &lt;code&gt;isFinite&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;number/isinteger&quot;&gt; &lt;code&gt;isInteger&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;number/isnan&quot;&gt; &lt;code&gt;isNaN&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;number/parsefloat&quot;&gt; &lt;code&gt;parseFloat&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;number/parseint&quot;&gt; &lt;code&gt;parseInt&lt;/code&gt; 가&lt;/a&gt; 추가 된 새로운 메소드 및 특성</target>
        </trans-unit>
        <trans-unit id="6e062df5eb2babfba09feb7f8ce039eda0edaffa" translate="yes" xml:space="preserve">
          <source>New notations in ECMAScript 2015</source>
          <target state="translated">ECMAScript 2015의 새로운 표기법</target>
        </trans-unit>
        <trans-unit id="9cd201883d862a52b0be469a4df5110e0199e682" translate="yes" xml:space="preserve">
          <source>New runtime errors</source>
          <target state="translated">새로운 런타임 오류</target>
        </trans-unit>
        <trans-unit id="f5fc78d78a498ec3ad24279fd81c75260eb84035" translate="yes" xml:space="preserve">
          <source>New: &lt;code&gt;[for (i of numbers) i * 2]&lt;/code&gt;</source>
          <target state="translated">신규 : &lt;code&gt;[for (i of numbers) i * 2]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cc04f1621f986e31a64bebcec4c536c6670bfcb8" translate="yes" xml:space="preserve">
          <source>New: &lt;code&gt;[for (x of [0, 1, 2]) ()=&amp;gt;x][1]() // 1, each iteration creates a fresh binding for x. &lt;/code&gt;</source>
          <target state="translated">신규 : &lt;code&gt;[for (x of [0, 1, 2]) ()=&amp;gt;x][1]() // 1, each iteration creates a fresh binding for x. &lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e47e20caa1fc9b842eb6aad6b5043454041447f2" translate="yes" xml:space="preserve">
          <source>New: Arrow functions, Generator functions, default parameters, rest parameters.</source>
          <target state="translated">신규 : 화살표 기능, 생성기 기능, 기본 매개 변수, 나머지 매개 변수.</target>
        </trans-unit>
        <trans-unit id="816c52fd2bdd94a63cd0944823a6c0aa9384c103" translate="yes" xml:space="preserve">
          <source>No</source>
          <target state="translated">No</target>
        </trans-unit>
        <trans-unit id="bedd4ab5dc06f676dac6118d694e9cae3887b0d2" translate="yes" xml:space="preserve">
          <source>No binding of &lt;code&gt;arguments&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;arguments&lt;/code&gt; 바인딩 없음</target>
        </trans-unit>
        <trans-unit id="ea00acbd49f88aab365d53c50e9542039bde2547" translate="yes" xml:space="preserve">
          <source>No change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b1fcbda693f085c4d6d33acbf333e420ba23fca" translate="yes" xml:space="preserve">
          <source>No changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99d07fe9e437e67fac02eb30ab57840edfc9ec5e" translate="yes" xml:space="preserve">
          <source>No compatibility data found. Please contribute data for &quot;javascript.builtins.WebAssembly.Global.prototype&quot; (depth: 1) to the &lt;a href=&quot;https://github.com/mdn/browser-compat-data&quot;&gt;MDN compatibility data repository&lt;/a&gt;.</source>
          <target state="translated">호환성 데이터가 없습니다. &quot;javascript.builtins.WebAssembly.Global.prototype&quot;(깊이 1)에 대한 &lt;a href=&quot;https://github.com/mdn/browser-compat-data&quot;&gt;데이터를 MDN 호환성 데이터 저장소에 제공하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a97d87364553370d0a46bcf5e2bf283e8c7b6493" translate="yes" xml:space="preserve">
          <source>No matter what, &lt;code&gt;foo&lt;/code&gt;'s &lt;code&gt;this&lt;/code&gt; is set to what it was when it was created (in the example above, the global object). The same applies to arrow functions created inside other functions: their &lt;code&gt;this&lt;/code&gt; remains that of the enclosing lexical context.</source>
          <target state="translated">아니, 어떤 문제가 &lt;code&gt;foo&lt;/code&gt; 의 &lt;code&gt;this&lt;/code&gt; 가 (전역 객체, 위의 예에서) 만들 때 사용했던 설정됩니다. 다른 함수 내에서 생성 된 화살표 함수에도 동일하게 적용됩니다. &lt;code&gt;this&lt;/code&gt; 함수 는 둘러싸는 어휘 컨텍스트의 화살표 함수로 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="9b0dfa57d315daee94b26c05846cfc9279894f61" translate="yes" xml:space="preserve">
          <source>No non-null object</source>
          <target state="translated">널이 아닌 객체 없음</target>
        </trans-unit>
        <trans-unit id="7418c52ec0ed46f6dd897d5e8cf3a1bce3ecae63" translate="yes" xml:space="preserve">
          <source>No properties</source>
          <target state="translated">속성이 없습니다</target>
        </trans-unit>
        <trans-unit id="85e4f309cabe48b9aa4e70f7d02f76fc70cb154c" translate="yes" xml:space="preserve">
          <source>No separate &lt;code&gt;this&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; 아니야</target>
        </trans-unit>
        <trans-unit id="90b723811bbcd29fcd775259110211c736e6cc5d" translate="yes" xml:space="preserve">
          <source>No string concatenation</source>
          <target state="translated">문자열 연결 없음</target>
        </trans-unit>
        <trans-unit id="de908e478c03080cf2e59dc459f7282c468d397a" translate="yes" xml:space="preserve">
          <source>No variable name</source>
          <target state="translated">변수 이름이 없습니다</target>
        </trans-unit>
        <trans-unit id="f5804885b58e4e8d3f8f18966a078c574a206330" translate="yes" xml:space="preserve">
          <source>No-break space</source>
          <target state="translated">휴식 공간</target>
        </trans-unit>
        <trans-unit id="3cede159aa73f967896140194ccc2a5a57d4e5f1" translate="yes" xml:space="preserve">
          <source>No-op forwarding proxy</source>
          <target state="translated">무 전송 전달 프록시</target>
        </trans-unit>
        <trans-unit id="10b3493287f831e81a438811a1ffba01f8cec4b7" translate="yes" xml:space="preserve">
          <source>Node.js</source>
          <target state="translated">Node.js</target>
        </trans-unit>
        <trans-unit id="cd162c52c98aae8684633d7b414ed89b23a893c3" translate="yes" xml:space="preserve">
          <source>Non configurable array element</source>
          <target state="translated">구성 할 수없는 배열 요소</target>
        </trans-unit>
        <trans-unit id="21a990941d2a774733cf199d891e684299b3742a" translate="yes" xml:space="preserve">
          <source>Non-configurable properties are not super common, but they can be created using &lt;a href=&quot;../global_objects/object/defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../global_objects/object/freeze&quot;&gt;&lt;code&gt;Object.freeze()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">구성 할 수없는 속성은 일반적이지 않지만 &lt;a href=&quot;../global_objects/object/defineproperty&quot;&gt; &lt;code&gt;Object.defineProperty()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../global_objects/object/freeze&quot;&gt; &lt;code&gt;Object.freeze()&lt;/code&gt; &lt;/a&gt; 사용하여 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d5d4f4e574e4cd7702ef26d6b39b3ab8a2813078" translate="yes" xml:space="preserve">
          <source>Non-configurable properties cannot be removed. This includes properties of built-in objects like &lt;a href=&quot;../global_objects/math&quot;&gt;&lt;code&gt;Math&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../global_objects/array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../global_objects/object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; and properties that are created as non-configurable with methods like &lt;a href=&quot;../global_objects/object/defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">구성 할 수없는 속성은 제거 할 수 없습니다. 여기에는 &lt;a href=&quot;../global_objects/math&quot;&gt; &lt;code&gt;Math&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../global_objects/array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../global_objects/object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; 와 같은 내장 객체의 속성과 &lt;a href=&quot;../global_objects/object/defineproperty&quot;&gt; &lt;code&gt;Object.defineProperty()&lt;/code&gt; &lt;/a&gt; 와 같은 메서드로 구성 할 수없는 속성이 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="3b3f72a04edeed6042a629bb543c4d10ed5a1ad3" translate="yes" xml:space="preserve">
          <source>Non-configurable properties created by &lt;code&gt;Object.defineProperty&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Object.defineProperty&lt;/code&gt; 로 작성된 구성 불가능 특성</target>
        </trans-unit>
        <trans-unit id="59e6b7d2f8f23f5f5b0b3185cfe061f28315b226" translate="yes" xml:space="preserve">
          <source>Non-identity (&lt;code&gt;a !== b&lt;/code&gt;)</source>
          <target state="translated">비 식별성 ( &lt;code&gt;a !== b&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="08276813a3ca6c55a0fe8a87f813f3801c43a5d5" translate="yes" xml:space="preserve">
          <source>Non-identity / strict inequality (!==)</source>
          <target state="translated">비 식별 / 엄격한 불평등 (! ==)</target>
        </trans-unit>
        <trans-unit id="14f08c6d0fe3dec0ebf55de6f111c257d895f76f" translate="yes" xml:space="preserve">
          <source>Non-leaking Arrow Functions</source>
          <target state="translated">비누 수 화살표 기능</target>
        </trans-unit>
        <trans-unit id="ca5c3b035aa809710c6689b77ab9cb8d9228893c" translate="yes" xml:space="preserve">
          <source>Non-standard features</source>
          <target state="translated">비표준 기능</target>
        </trans-unit>
        <trans-unit id="f6f0ec38f327f319b4bcd574b6192c8978dca32b" translate="yes" xml:space="preserve">
          <source>Non-well-formed iterables</source>
          <target state="translated">잘 형성되지 않은 이터 러블</target>
        </trans-unit>
        <trans-unit id="9a9707be07da6862114abd49d2570046d4810ca5" translate="yes" xml:space="preserve">
          <source>None.</source>
          <target state="translated">None.</target>
        </trans-unit>
        <trans-unit id="7161bb4b99446fa501c3ceb7aedb6a85e373f596" translate="yes" xml:space="preserve">
          <source>Nonidentity operator.</source>
          <target state="translated">비 식별 연산자.</target>
        </trans-unit>
        <trans-unit id="14656ed74ab77f997a9626a118a0b93f88217ad2" translate="yes" xml:space="preserve">
          <source>Normal space</source>
          <target state="translated">일반 공간</target>
        </trans-unit>
        <trans-unit id="cb7726a2d816826dddce80338e1e351235034774" translate="yes" xml:space="preserve">
          <source>Normal space, but no point at which a line may break</source>
          <target state="translated">일반 공간이지만 선이 끊길 수있는 지점이 없습니다.</target>
        </trans-unit>
        <trans-unit id="2f1583623455f8243b26ee06713b7076b1d7169a" translate="yes" xml:space="preserve">
          <source>Normal variables in JavaScript can't be deleted using the &lt;code&gt;&lt;a href=&quot;../operators/delete&quot;&gt;delete&lt;/a&gt;&lt;/code&gt; operator. In strict mode, an attempt to delete a variable will throw an error and is not allowed.</source>
          <target state="translated">JavaScript의 일반 변수는 &lt;code&gt;&lt;a href=&quot;../operators/delete&quot;&gt;delete&lt;/a&gt;&lt;/code&gt; 연산자를 사용하여 삭제할 수 없습니다 . 엄격 모드에서는 변수를 삭제하려고하면 오류가 발생하고 허용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="40982f925ee19769c42f549717d8ee70798c4b05" translate="yes" xml:space="preserve">
          <source>Not a codepoint</source>
          <target state="translated">코드 포인트가 아님</target>
        </trans-unit>
        <trans-unit id="33f2c395db1e1eb4df8474dbb567f9bd66711316" translate="yes" xml:space="preserve">
          <source>Not a constructor</source>
          <target state="translated">생성자가 아님</target>
        </trans-unit>
        <trans-unit id="6d358abaff1485fb49d572a68e47b82b693e6145" translate="yes" xml:space="preserve">
          <source>Not a function</source>
          <target state="translated">기능이 아님</target>
        </trans-unit>
        <trans-unit id="3cde9b1853c037e517613f587ee3bd3ce085f2f8" translate="yes" xml:space="preserve">
          <source>Not an instanceof</source>
          <target state="translated">인스턴스가 아님</target>
        </trans-unit>
        <trans-unit id="1290581ef5b7b0f1183c494b6d4b0e171acf60ca" translate="yes" xml:space="preserve">
          <source>Not constructable with &lt;code&gt;new&lt;/code&gt; (ES2016)</source>
          <target state="translated">&lt;code&gt;new&lt;/code&gt; 구성 할 수 없음 (ES2016)</target>
        </trans-unit>
        <trans-unit id="815f1f0049cf798fb57acca1d98e1ff9f708e142" translate="yes" xml:space="preserve">
          <source>Not defined</source>
          <target state="translated">미정</target>
        </trans-unit>
        <trans-unit id="fd4dd0b6bb7f1cc7b045b70a26b58a50488d5a30" translate="yes" xml:space="preserve">
          <source>Not enough brackets</source>
          <target state="translated">괄호가 충분하지 않습니다</target>
        </trans-unit>
        <trans-unit id="7e7edabbe7fee71cefbeceec9a9266fb61cd2bbe" translate="yes" xml:space="preserve">
          <source>Not part of a current ECMA-262 specification. Implemented in JavaScript 1.6 and deprecated.</source>
          <target state="translated">현재 ECMA-262 사양의 일부가 아닙니다. JavaScript 1.6에서 구현되어 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ec60a5240ccc0e46f9df830b76490450a0a060d0" translate="yes" xml:space="preserve">
          <source>Not part of any specifications.</source>
          <target state="translated">사양의 일부가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="67eb3c8bee76aa560a2df9bc1902473ce47e9b0c" translate="yes" xml:space="preserve">
          <source>Not part of any specifications. Implemented in JavaScript 1.2.</source>
          <target state="translated">사양의 일부가 아닙니다. JavaScript 1.2에서 구현되었습니다.</target>
        </trans-unit>
        <trans-unit id="0751ffe6a171fa0caec8d2cb58f80c7e4e56c4c5" translate="yes" xml:space="preserve">
          <source>Not part of any standard. Implemented in JavaScript 1.1 and removed in &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=7224&quot;&gt;bug 7224&lt;/a&gt; due to potentially vulnerable for security.</source>
          <target state="translated">표준의 일부가 아닙니다. JavaScript 1.1에서 구현되었으며 보안에 취약 할 수 있으므로 &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=7224&quot;&gt;버그 7224&lt;/a&gt; 에서 제거되었습니다 .</target>
        </trans-unit>
        <trans-unit id="8b41cea1251aee48872864ecdcbb33b5e062c34f" translate="yes" xml:space="preserve">
          <source>Not part of the ECMAScript specification yet.</source>
          <target state="translated">아직 ECMAScript 사양의 일부가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="f76f2339b380c09635f034929c4240ec42e159c1" translate="yes" xml:space="preserve">
          <source>Not part of the current ECMA-262 standard: Multiple catch clauses and conditional clauses (SpiderMonkey extension, JavaScript 1.5).</source>
          <target state="translated">현재 ECMA-262 표준의 일부가 아님 : 여러 catch 절 및 조건 절 (SpiderMonkey 확장, JavaScript 1.5).</target>
        </trans-unit>
        <trans-unit id="e1a3c34afaca2db48ad204740e08882a029318c0" translate="yes" xml:space="preserve">
          <source>Not used in this specification. Present for backward compatibility.</source>
          <target state="translated">이 사양에서는 사용되지 않습니다. 이전 버전과의 호환성을 위해 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="2c924e3088204ee77ba681f72be3444357932fca" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="translated">Note</target>
        </trans-unit>
        <trans-unit id="123f29f42750e7479b6ec012a3080d44aeab4c94" translate="yes" xml:space="preserve">
          <source>Note how you've got to include a second function invocation operator at the end of the accessor to actually invoke the referenced function and log the value stored inside it (e.g. &lt;code&gt;get(0)()&lt;/code&gt; rather than &lt;code&gt;get(0)&lt;/code&gt;) .</source>
          <target state="translated">접근 자의 끝에 두 번째 함수 호출 연산자를 포함시켜 참조 된 함수를 실제로 호출하고 그 안에 저장된 값을 기록하는 방법에 주목하십시오 (예 : &lt;code&gt;get(0)()&lt;/code&gt; 대신 &lt;code&gt;get(0)&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="cec81496111d3c9b16de005cfdcd4162f96e81e7" translate="yes" xml:space="preserve">
          <source>Note how you've got to include a second function invocation operator at the end of the accessor to actually retrieve the value stored inside the reference (e.g. &lt;code&gt;get(0)()&lt;/code&gt; rather than &lt;code&gt;get(0)&lt;/code&gt;) &amp;mdash; it is a function rather than a simple value.</source>
          <target state="translated">접근 자 끝에 두 번째 함수 호출 연산자를 포함시켜 실제로 참조 내에 저장된 값을 실제로 검색하는 방법에 주목하십시오 (예 : &lt;code&gt;get(0)()&lt;/code&gt; 대신 &lt;code&gt;get(0)&lt;/code&gt; ) &amp;mdash; 이것이 아니라 함수입니다 단순한 가치.</target>
        </trans-unit>
        <trans-unit id="7821d32b61e2829f2bb6f9992ba1b10e2f290582" translate="yes" xml:space="preserve">
          <source>Note on &lt;code&gt;eval&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;eval&lt;/code&gt; 에 대한 참고 사항</target>
        </trans-unit>
        <trans-unit id="4f2354437178298c0bfbb8f9801162f7d09646b4" translate="yes" xml:space="preserve">
          <source>Note that '0' doesn't evaluate to &lt;code&gt;true&lt;/code&gt; and '-1' doesn't evaluate to &lt;code&gt;false&lt;/code&gt;. Therefore, when checking if a specific string exists within another string the correct way to check would be:</source>
          <target state="translated">'0'은 &lt;code&gt;true&lt;/code&gt; 로 평가되지 않으며 '-1'은 &lt;code&gt;false&lt;/code&gt; 로 평가되지 않습니다 . 따라서 특정 문자열이 다른 문자열 내에 존재하는지 확인할 때 올바른 확인 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1fc16af7f3c4f29b3893170e08c41b87a2f2ae51" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;../global_objects/object/assign&quot;&gt;&lt;code&gt;Object.assign()&lt;/code&gt;&lt;/a&gt; triggers &lt;a href=&quot;../functions/set&quot;&gt;setters&lt;/a&gt; whereas spread syntax doesn't.</source>
          <target state="translated">참고 것을 &lt;a href=&quot;../global_objects/object/assign&quot;&gt; &lt;code&gt;Object.assign()&lt;/code&gt; &lt;/a&gt; 트리거의 &lt;a href=&quot;../functions/set&quot;&gt;세터&lt;/a&gt; 확산 구문 반면하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c503f3ee902f80a6d403b329a9d641000167a462" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;../global_objects/object/assign&quot;&gt;&lt;code&gt;Object.assign()&lt;/code&gt;&lt;/a&gt; triggers &lt;a href=&quot;../functions/set&quot;&gt;setters&lt;/a&gt; whereas the spread operator doesn't.</source>
          <target state="translated">참고 것을 &lt;a href=&quot;../global_objects/object/assign&quot;&gt; &lt;code&gt;Object.assign()&lt;/code&gt; &lt;/a&gt; 트리거의 &lt;a href=&quot;../functions/set&quot;&gt;세터&lt;/a&gt; 확산 운영자 반면하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1b70c98d89c4a1fcc093b0a11f289e920b83fbda" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;../operators/function&quot;&gt;&lt;code&gt;function expressions&lt;/code&gt;&lt;/a&gt; are not hoisted:</source>
          <target state="translated">참고 &lt;a href=&quot;../operators/function&quot;&gt; &lt;code&gt;function expressions&lt;/code&gt; &lt;/a&gt; 게양되지 않습니다 :</target>
        </trans-unit>
        <trans-unit id="8d8672f6336abf908b6aeb3e67aaa07fb51f16c9" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;AsyncFunction&lt;/code&gt; is not a global object. It could be obtained by evaluating the following code.</source>
          <target state="translated">참고 &lt;code&gt;AsyncFunction&lt;/code&gt; 가 글로벌 개체가 아닙니다. 다음 코드를 평가하여 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7616c0d37ddf092b2eb710f1c15781d6e517e96f" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;GeneratorFunction&lt;/code&gt; is not a global object. It could be obtained by evaluating the following code.</source>
          <target state="translated">참고 &lt;code&gt;GeneratorFunction&lt;/code&gt; 가 글로벌 개체가 아닙니다. 다음 코드를 평가하여 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="703d6dd9a1dbdd799c913401132dd49ea394dd4e" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;Object.assign()&lt;/code&gt; does not throw on &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; source values.</source>
          <target state="translated">참고 &lt;code&gt;Object.assign()&lt;/code&gt; 에 던져하지 않습니다 &lt;a href=&quot;../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; 소스 값.</target>
        </trans-unit>
        <trans-unit id="8248ec8d3d8f4add68617faa6dc73848c5e46fc8" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;SharedArrayBuffer&lt;/code&gt; was disabled by default in all major browsers on 5 January, 2018 in response to &lt;a href=&quot;https://meltdownattack.com/&quot;&gt;Spectre&lt;/a&gt;. Chrome &lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/detail?id=821270&quot;&gt;re-enabled it in v67&lt;/a&gt; on platforms where its site-isolation feature is enabled to protect against Spectre-style vulnerabilities.</source>
          <target state="translated">참고 &lt;code&gt;SharedArrayBuffer&lt;/code&gt; 가 에 대한 응답으로 2018년 1월 5일에 모든 주요 브라우저에서 기본적으로 비활성화되었습니다 &lt;a href=&quot;https://meltdownattack.com/&quot;&gt;유령&lt;/a&gt; . Chrome 은 사이트 격리 기능을 사용하여 스펙터 스타일 취약점으로부터 보호하는 플랫폼의 &lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/detail?id=821270&quot;&gt;v67&lt;/a&gt; 에서 다시 활성화했습니다 .</target>
        </trans-unit>
        <trans-unit id="8a52db76f66ad2b8ed108c4e3fd51f3f26f49622" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;charCodeAt()&lt;/code&gt; will always return a value that is less than 65536. This is because the higher code points are represented by a pair of (lower valued) &quot;surrogate&quot; pseudo-characters which are used to comprise the real character. Because of this, in order to examine or reproduce the full character for individual characters of value 65536 and above, for such characters, it is necessary to retrieve not only &lt;code&gt;charCodeAt(i)&lt;/code&gt;, but also &lt;code&gt;charCodeAt(i+1)&lt;/code&gt; (as if examining/reproducing a string with two letters), or to use codePointAt(i) instead. See example 2 and 3 below.</source>
          <target state="translated">참고 &lt;code&gt;charCodeAt()&lt;/code&gt; 항상 더 높은 코드 포인트는 한 쌍의 실제 문자를 포함하는 데 사용됩니다 &quot;대리&quot;의사 자 (가치를 낮출)로 표시되기 때문이다 미만 65536 인 값을 반환합니다. 이 때문에 값이 65536 이상인 개별 문자의 전체 문자를 검사하거나 재생하려면 이러한 문자에 대해 &lt;code&gt;charCodeAt(i)&lt;/code&gt; 뿐만 아니라 &lt;code&gt;charCodeAt(i+1)&lt;/code&gt; 도 검색해야합니다 (검사하는 것처럼 ) / 문자가 두 개인 문자열을 재생성)하거나 codePointAt (i)를 대신 사용합니다. 아래 예 2와 3을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b985d870c9381c700fdbf978594067a12ee80692" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;current&lt;/code&gt; is not defined and any attempts to access it will result in &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">참고 &lt;code&gt;current&lt;/code&gt; 정의되지 않은 액세스에 대한 시도가 발생합니다 &lt;code&gt;undefined&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="97875263007a8b2dfaac16dc4378638ebbbd5f21" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;encodeURI&lt;/code&gt; by itself &lt;em&gt;cannot&lt;/em&gt; form proper HTTP GET and POST requests, such as for XMLHTTPRequests, because &quot;&amp;amp;&quot;, &quot;+&quot;, and &quot;=&quot; are not encoded, which are treated as special characters in GET and POST requests. &lt;a href=&quot;encodeuricomponent&quot;&gt;&lt;code&gt;encodeURIComponent&lt;/code&gt;&lt;/a&gt;, however, does encode these characters.</source>
          <target state="translated">주의 &lt;code&gt;encodeURI&lt;/code&gt; 그 자체로는 &lt;em&gt;할 수없는&lt;/em&gt; , 같은 XMLHttpRequests를위한 같은 적절한 HTTP GET 및 POST 요청을 형성하기 때문에 &quot;&amp;amp;&quot;, &quot;+&quot;및 &quot;=&quot;GET 및 POST 요청에 특수 문자로 취급되는, 인코딩되지 않습니다. 그러나 &lt;a href=&quot;encodeuricomponent&quot;&gt; &lt;code&gt;encodeURIComponent&lt;/code&gt; &lt;/a&gt; 는 이러한 문자를 인코딩합니다.</target>
        </trans-unit>
        <trans-unit id="199ad16d3ea7734573ad0b58572230c80f2ba315" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;foo !== bar&lt;/code&gt;. While they are similar objects, &lt;em&gt;they are not &lt;strong&gt;the same object&lt;/strong&gt;&lt;/em&gt;. And so they are both added to the set.</source>
          <target state="translated">참고 &lt;code&gt;foo !== bar&lt;/code&gt; . 그것들은 비슷한 객체이지만 &lt;em&gt;&lt;strong&gt;같은 객체&lt;/strong&gt;&lt;/em&gt;&lt;em&gt; 는 아닙니다&lt;strong&gt;&lt;/strong&gt;&lt;/em&gt; . 그래서 둘 다 세트에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="e30ea4aaaa255e9f899ce8ad6a7352f078bc72cf" translate="yes" xml:space="preserve">
          <source>Note that JSON is &lt;a href=&quot;http://timelessrepo.com/json-isnt-a-javascript-subset&quot;&gt;not a completely strict subset of JavaScript&lt;/a&gt;, with two line terminators (Line separator and Paragraph separator) which do not require escaping in JSON, but do require escaping in JavaScript.</source>
          <target state="translated">JSON은 JSON에서 이스케이프 할 필요가 없지만 JavaScript에서 이스케이프해야하는 두 개의 줄 종결 자 (줄 구분 기호 및 단락 구분 기호)가 &lt;a href=&quot;http://timelessrepo.com/json-isnt-a-javascript-subset&quot;&gt;있는 완전히 엄격한 JavaScript 하위 집합&lt;/a&gt; 이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="a13fe16a54826d75af85c1c096f948fc8b696190" translate="yes" xml:space="preserve">
          <source>Note that JavaScript distinguishes between &lt;code&gt;String&lt;/code&gt; objects and primitive string values. (The same is true of &lt;a href=&quot;boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;number&quot;&gt;&lt;code&gt;Numbers&lt;/code&gt;&lt;/a&gt;.)</source>
          <target state="translated">JavaScript는 &lt;code&gt;String&lt;/code&gt; 객체와 기본 문자열 값을 구분 합니다. &lt;a href=&quot;boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;number&quot;&gt; &lt;code&gt;Numbers&lt;/code&gt; 도&lt;/a&gt; 마찬가지입니다 .</target>
        </trans-unit>
        <trans-unit id="eb48903ad147295aa7c801ec2e07a5a15a2436ea" translate="yes" xml:space="preserve">
          <source>Note that JavaScript has &lt;em&gt;no&lt;/em&gt;&lt;code&gt;goto&lt;/code&gt; statement, you can only use labels with &lt;code&gt;break&lt;/code&gt; or &lt;code&gt;continue&lt;/code&gt;.</source>
          <target state="translated">JavaScript에는 &lt;code&gt;goto&lt;/code&gt; 문 이 &lt;em&gt;없으므로 &lt;/em&gt; &lt;code&gt;break&lt;/code&gt; 또는 &lt;code&gt;continue&lt;/code&gt; 레이블 만 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5c118cf7d8001c1d337ddff2a3172e652fd77ab5" translate="yes" xml:space="preserve">
          <source>Note that a &lt;a href=&quot;urierror&quot;&gt;&lt;code&gt;URIError&lt;/code&gt;&lt;/a&gt; will be thrown if one attempts to encode a surrogate which is not part of a high-low pair, e.g.,</source>
          <target state="translated">&amp;bull; 그래도 참고 &lt;a href=&quot;urierror&quot;&gt; &lt;code&gt;URIError&lt;/code&gt; 의는&lt;/a&gt; 하나 개의 시도가 높은 낮은 쌍 일부가 아닌 대리를 인코딩하는 경우 예를 들어, 발생합니다,</target>
        </trans-unit>
        <trans-unit id="717a2256e06329faee97dd6ef93c798877eceeb0" translate="yes" xml:space="preserve">
          <source>Note that although &lt;code&gt;obj&lt;/code&gt; is not an array, the method &lt;code&gt;push&lt;/code&gt; successfully incremented &lt;code&gt;obj&lt;/code&gt;'s &lt;code&gt;length&lt;/code&gt; property just like if we were dealing with an actual array.</source>
          <target state="translated">참고 있지만 것을 &lt;code&gt;obj&lt;/code&gt; 가 배열이 아닌, 메소드 &lt;code&gt;push&lt;/code&gt; 성공적으로 증가 &lt;code&gt;obj&lt;/code&gt; 의 &lt;code&gt;length&lt;/code&gt; 단지 우리가 실제 배열을 처리 한 경우와 같은 속성을.</target>
        </trans-unit>
        <trans-unit id="12781aabcdb157ccee4b475e9f2e3a084ff89617" translate="yes" xml:space="preserve">
          <source>Note that an &lt;a href=&quot;urierror&quot;&gt;&lt;code&gt;URIError&lt;/code&gt;&lt;/a&gt; will be thrown if one attempts to encode a surrogate which is not part of a high-low pair, e.g.,</source>
          <target state="translated">있습니다 &lt;a href=&quot;urierror&quot;&gt; &lt;code&gt;URIError&lt;/code&gt; 의는&lt;/a&gt; 하나 개의 시도가 높은 낮은 쌍 일부가 아닌 대리를 인코딩하는 경우 예를 들어, 발생합니다,</target>
        </trans-unit>
        <trans-unit id="f5229ea194f37e9b69f3ed460ca84c75624d7fc9" translate="yes" xml:space="preserve">
          <source>Note that an object is converted into a primitive if, and only if, its comparand is a primitive. If both operands are objects, they're compared as objects, and the equality test is true only if both refer the same object.</source>
          <target state="translated">객체의 비교가 기본 인 경우에만 객체가 기본으로 변환됩니다. 두 피연산자가 모두 객체 인 경우 객체로 비교되며 동일한 테스트를 수행하는 경우에만 동등성 테스트가 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="6c04dbd2e7e6b4c6469af154ed10997d74e6810b" translate="yes" xml:space="preserve">
          <source>Note that as numbers in JavaScript are IEEE 754 floating point numbers with round-to-nearest-even behavior, the ranges claimed for the functions below (excluding the one for &lt;code&gt;Math.random()&lt;/code&gt; itself) aren't exact. If extremely large bounds are chosen (2&lt;sup&gt;53&lt;/sup&gt; or higher), it's possible in &lt;em&gt;extremely&lt;/em&gt; rare cases to calculate the usually-excluded upper bound.</source>
          <target state="translated">JavaScript의 숫자는 가장 가까운 반올림 동작을 갖는 IEEE 754 부동 소수점 숫자이므로 아래 함수 ( &lt;code&gt;Math.random()&lt;/code&gt; 자체는 제외)에 대해 주장 된 범위 가 정확하지 않습니다. 매우 큰 범위를 선택하면 (2 &lt;sup&gt;53&lt;/sup&gt; 이상) &lt;em&gt;매우&lt;/em&gt; 드물게 일반적으로 제외되는 상한을 계산할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="96f1469c96baa69bfacf344ea851b7a69278b710" translate="yes" xml:space="preserve">
          <source>Note that attempting to assign a value to &lt;code&gt;latest&lt;/code&gt; will not change it.</source>
          <target state="translated">&lt;code&gt;latest&lt;/code&gt; 값을 할당하려고 해도 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ef7ec2027dc9a730bc7cb60ab5e986dd0b83d018" translate="yes" xml:space="preserve">
          <source>Note that classes cannot extend regular (non-constructible) objects. If you want to inherit from a regular object, you can instead use &lt;a href=&quot;global_objects/object/setprototypeof&quot;&gt;&lt;code&gt;Object.setPrototypeOf()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">클래스는 일반 (구성 할 수없는) 객체를 확장 할 수 없습니다. 일반 객체에서 상속하려면 &lt;a href=&quot;global_objects/object/setprototypeof&quot;&gt; &lt;code&gt;Object.setPrototypeOf()&lt;/code&gt; &lt;/a&gt; 대신 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="85435900a96627fdadbecca322dbd9df4f462217" translate="yes" xml:space="preserve">
          <source>Note that decimal literals can start with a zero (&lt;code&gt;0&lt;/code&gt;) followed by another decimal digit, but If all digits after the leading &lt;code&gt;0&lt;/code&gt; are smaller than 8, the number is interpreted as an octal number. This won't throw in JavaScript, see &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=957513&quot;&gt;bug 957513&lt;/a&gt;. See also the page about &lt;a href=&quot;global_objects/parseint#Octal_interpretations_with_no_radix&quot;&gt;&lt;code&gt;parseInt()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">10 진수 리터럴은 0 ( &lt;code&gt;0&lt;/code&gt; )으로 시작하고 그 뒤에 다른 10 진수가 올 수 있지만 선행 &lt;code&gt;0&lt;/code&gt; 뒤의 모든 숫자 가 8보다 작 으면 숫자는 8 진수로 해석됩니다. 이것은 JavaScript에서 발생하지 않습니다 . &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=957513&quot;&gt;버그 957513을&lt;/a&gt; 참조하십시오 . &lt;a href=&quot;global_objects/parseint#Octal_interpretations_with_no_radix&quot;&gt; &lt;code&gt;parseInt()&lt;/code&gt; &lt;/a&gt; 에 대한 페이지도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9f35339e11014ced44afa24edd50182aea869370" translate="yes" xml:space="preserve">
          <source>Note that due to using 32-bit representation for numbers both &lt;code&gt;~-1&lt;/code&gt; and &lt;code&gt;~4294967295&lt;/code&gt; (2&lt;sup&gt;32&lt;/sup&gt;-1) results in &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">참고 번호 인해 모두 32 비트 표현을 사용하는 &lt;code&gt;~-1&lt;/code&gt; 및 &lt;code&gt;~4294967295&lt;/code&gt; (2 &lt;sup&gt;32&lt;/sup&gt; -1) 결과 &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="568aee6056dc72c380bd4726d1404da50d8c5439" translate="yes" xml:space="preserve">
          <source>Note that due to web compatibility, &lt;code&gt;RegExp.$N&lt;/code&gt; will still return an empty string instead of &lt;code&gt;undefined&lt;/code&gt; (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1053944&quot;&gt;bug 1053944&lt;/a&gt;).</source>
          <target state="translated">웹 호환성으로 인해 &lt;code&gt;RegExp.$N&lt;/code&gt; 은 여전히 &lt;code&gt;undefined&lt;/code&gt; 빈 문자열을 반환합니다 ( &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1053944&quot;&gt;버그 1053944&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="6a50780aeb7a827d28054dd1260fddffa7beb516" translate="yes" xml:space="preserve">
          <source>Note that in non-standard, pre-ES2015 implementations the &lt;code&gt;configurable&lt;/code&gt; attribute was &lt;code&gt;false&lt;/code&gt; as well.</source>
          <target state="translated">ES2015 이전의 비표준 구현에서는 &lt;code&gt;configurable&lt;/code&gt; 속성도 &lt;code&gt;false&lt;/code&gt; 였습니다 .</target>
        </trans-unit>
        <trans-unit id="18152720c80dbf06834c6e40dd6c2a4141fa617a" translate="yes" xml:space="preserve">
          <source>Note that in the &lt;code&gt;3d&lt;/code&gt; example, &lt;code&gt;'3d'&lt;/code&gt; had to be quoted. It's possible to quote the JavaScript array indexes as well (e.g., &lt;code&gt;years['2']&lt;/code&gt; instead of &lt;code&gt;years[2]&lt;/code&gt;), although it's not necessary. The 2 in &lt;code&gt;years[2]&lt;/code&gt; is coerced into a string by the JavaScript engine through an implicit &lt;code&gt;toString&lt;/code&gt; conversion. It is, for this reason, that &lt;code&gt;'2'&lt;/code&gt; and &lt;code&gt;'02'&lt;/code&gt; would refer to two different slots on the &lt;code&gt;years&lt;/code&gt; object and the following example could be &lt;code&gt;true&lt;/code&gt;:</source>
          <target state="translated">에주의 &lt;code&gt;3d&lt;/code&gt; 예를 들어, &lt;code&gt;'3d'&lt;/code&gt; 했다가 인용된다. 필요하지는 않지만 JavaScript 배열 인덱스도 인용 할 수 있습니다 (예 : &lt;code&gt;years['2']&lt;/code&gt; 대신 years [ '2' &lt;code&gt;years[2]&lt;/code&gt; ). 2 &lt;code&gt;years[2]&lt;/code&gt; 은 암시적인 &lt;code&gt;toString&lt;/code&gt; 변환을 통해 JavaScript 엔진에 의해 문자열로 강제 변환됩니다. 이러한 이유로 &lt;code&gt;'2'&lt;/code&gt; 와 &lt;code&gt;'02'&lt;/code&gt; 는 &lt;code&gt;years&lt;/code&gt; 객체 에서 서로 다른 두 개의 슬롯을 나타내며 다음 예는 &lt;code&gt;true&lt;/code&gt; 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e0a0c0b10e66ec37f22c79ff0342f1476fb36d18" translate="yes" xml:space="preserve">
          <source>Note that in the &lt;code&gt;if&lt;/code&gt; test, a reference to &lt;code&gt;noFunc&lt;/code&gt; is used&amp;mdash;there are no brackets &quot;()&quot; after the function name so the actual function is not called.</source>
          <target state="translated">에 유의 &lt;code&gt;if&lt;/code&gt; 테스트 참조 &lt;code&gt;noFunc&lt;/code&gt; 가 사용-가 아니 브래킷이없는 &quot;()&quot;는 실제 함수가 호출되지 않도록 함수명 후.</target>
        </trans-unit>
        <trans-unit id="6f286f755a65bf78c08beee0b946804e45a58f54" translate="yes" xml:space="preserve">
          <source>Note that in the above example, there is no &lt;code&gt;await&lt;/code&gt; statement on the &lt;code&gt;return&lt;/code&gt; statement, because the return value of an &lt;code&gt;async function&lt;/code&gt; is implicitly wrapped in &lt;a href=&quot;../global_objects/promise/resolve&quot;&gt;&lt;code&gt;Promise.resolve&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">위 예제에서는 &lt;code&gt;async function&lt;/code&gt; 의 반환 값 이 암시 적으로 &lt;a href=&quot;../global_objects/promise/resolve&quot;&gt; &lt;code&gt;Promise.resolve&lt;/code&gt; 에&lt;/a&gt; 래핑 되므로 &lt;code&gt;return&lt;/code&gt; 문 에 &lt;code&gt;await&lt;/code&gt; 문 이 없습니다 .</target>
        </trans-unit>
        <trans-unit id="dae5ea370e118e8b1c249dfd5e9cce3d31256d24" translate="yes" xml:space="preserve">
          <source>Note that in the last case there are no newly created objects.</source>
          <target state="translated">마지막 경우 새로 만든 객체가 없습니다.</target>
        </trans-unit>
        <trans-unit id="05422b1cceaa80609cd6103fbfcbcbcddbc158b9" translate="yes" xml:space="preserve">
          <source>Note that it is not possible to use &lt;code&gt;var&lt;/code&gt;, &lt;code&gt;let&lt;/code&gt; or &lt;code&gt;const&lt;/code&gt; with &lt;code&gt;export default&lt;/code&gt;.</source>
          <target state="translated">는 사용할 수 없습니다 것을 참고 &lt;code&gt;var&lt;/code&gt; , &lt;code&gt;let&lt;/code&gt; 또는 &lt;code&gt;const&lt;/code&gt; 로 &lt;code&gt;export default&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2d1be0a0947bb569147f37a17d68d634a985473c" translate="yes" xml:space="preserve">
          <source>Note that many math functions have a precision that's implementation-dependent. This means that different browsers can give a different result, and even the same JS engine on a different OS or architecture can give different results.</source>
          <target state="translated">많은 수학 함수는 구현에 따라 정밀도가 다릅니다. 이것은 다른 브라우저가 다른 결과를 낼 수 있으며 다른 OS 또는 아키텍처의 동일한 JS 엔진조차도 다른 결과를 줄 수 있음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="a86b42f5282d2c308201cc21e1596a62c4c59e64" translate="yes" xml:space="preserve">
          <source>Note that octal literals and octal escape sequences are deprecated and will present an additional deprecation warning. With ECMAScript 6 and later, the syntax uses a leading zero followed by a lowercase or uppercase Latin letter &quot;O&quot; (&lt;code&gt;0o&lt;/code&gt; or &lt;code&gt;0O)&lt;/code&gt;. See the page about &lt;a href=&quot;../lexical_grammar#Octal&quot;&gt;lexical grammar&lt;/a&gt; for more information.</source>
          <target state="translated">8 진 리터럴 및 8 진 이스케이프 시퀀스는 더 이상 사용되지 않으며 추가 지원 중단 경고가 표시됩니다. ECMAScript 6 이상에서 구문은 앞에 0을 사용하고 소문자 또는 대문자 라틴 문자 &quot;O&quot;( &lt;code&gt;0o&lt;/code&gt; 또는 &lt;code&gt;0O)&lt;/code&gt; 를 사용 합니다. 자세한 내용은 &lt;a href=&quot;../lexical_grammar#Octal&quot;&gt;어휘 문법에&lt;/a&gt; 대한 페이지 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9e676081ef51333515ce7ebefaa059e7feaad4af" translate="yes" xml:space="preserve">
          <source>Note that several of the &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; properties have both long and short (Perl-like) names. Both names always refer to the same value. Perl is the programming language from which JavaScript modeled its regular expressions.</source>
          <target state="translated">몇몇 &lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt; 속성은 길고 짧은 (Perl-like) 이름을 모두 가지고 있습니다. 두 이름은 항상 같은 값을 나타냅니다. Perl은 JavaScript가 정규 표현식을 모델링 한 프로그래밍 언어입니다.</target>
        </trans-unit>
        <trans-unit id="ad096e10b1e6dceefdb3deef7e4896ced4ca2671" translate="yes" xml:space="preserve">
          <source>Note that several of the &lt;a href=&quot;regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; properties have both long and short (Perl-like) names. Both names always refer to the same value. Perl is the programming language from which JavaScript modeled its regular expressions.</source>
          <target state="translated">몇몇 &lt;a href=&quot;regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt; 속성은 길고 짧은 (Perl-like) 이름을 모두 가지고 있습니다. 두 이름은 항상 같은 값을 나타냅니다. Perl은 JavaScript가 정규 표현식을 모델링 한 프로그래밍 언어입니다.</target>
        </trans-unit>
        <trans-unit id="ab0095e429e239e576b1ecad43494b38716172fb" translate="yes" xml:space="preserve">
          <source>Note that since JSON syntax is limited compared to JavaScript syntax, many valid JavaScript literals will not parse as JSON. For example, trailing commas are not allowed in JSON, and property names (keys) in object literals must be enclosed in quotes. Be sure to use a JSON serializer to generate strings that will be later parsed as JSON.</source>
          <target state="translated">JSON 구문은 JavaScript 구문에 비해 제한되므로 많은 유효한 JavaScript 리터럴이 JSON으로 구문 분석되지 않습니다. 예를 들어 JSON에서는 후행 쉼표를 사용할 수 없으며 객체 리터럴의 속성 이름 (키)은 따옴표로 묶어야합니다. 나중에 JSON으로 구문 분석 될 문자열을 생성하려면 JSON 직렬 변환기를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="6cb2dd8155033be17a80dfdf575de5da54b4a738" translate="yes" xml:space="preserve">
          <source>Note that since the &lt;a href=&quot;https://www.json.org/&quot;&gt;JSON format&lt;/a&gt; doesn't support object references (although an &lt;a href=&quot;http://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03&quot;&gt;IETF draft exists&lt;/a&gt;), a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; will be thrown if one attempts to encode an object with circular references.</source>
          <target state="translated">&lt;a href=&quot;https://www.json.org/&quot;&gt;JSON 형식&lt;/a&gt; 은 객체 참조를 지원하지 않기 때문에 ( &lt;a href=&quot;http://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03&quot;&gt;IETF 초안은 존재하지만&lt;/a&gt; ) 순환 참조로 객체를 인코딩하려고하면 &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="e8bbbc78361c9c3e3dc8e93f7bc2a908fb0e834e" translate="yes" xml:space="preserve">
          <source>Note that such a different order may arise statically via disparate fixed codings such as here, but also dynamically via whatever the order any such property-adding code-branches actually get executed at runtime as depends on inputs and/or random-variables. Then again, the actual iteration order is not guaranteed no matter what the order members are added.</source>
          <target state="translated">이러한 다른 순서는 여기와 같은 이종의 고정 코딩을 통해 정적으로 발생할 수 있지만 입력 및 / 또는 임의 변수에 따라 런타임에 이러한 속성 추가 코드 분기가 실제로 실행되는 순서를 통해 동적으로 발생할 수도 있습니다. 그런 다음 주문 멤버를 추가해도 실제 반복 순서는 보장되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7302b0a2c1178c71e82f3bf364ff7bf84b19f475" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;m&lt;/code&gt; multiline flag doesn't change the dot behavior. So to match a pattern across multiple lines, the character set &lt;code&gt;[^]&lt;/code&gt; can be used (if you don't mean an old version of IE, of course), it will match any character including newlines.</source>
          <target state="translated">점을 유의 &lt;code&gt;m&lt;/code&gt; 의 여러 플래그는 점 동작을 변경하지 않습니다. 따라서 여러 줄의 패턴을 일치시키기 위해 문자 집합 &lt;code&gt;[^]&lt;/code&gt; 을 사용할 수 있습니다 (물론 이전 버전의 IE를 의미하지 않는 경우), 개행을 포함한 모든 문자와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="9317ca9043fffb5f4b1c4f38d18a8afc42ff0c84" translate="yes" xml:space="preserve">
          <source>Note that the WebAssembly text format currently doesn't have a syntax specified for adding new custom sections; you can however add a name section to your wasm during conversion from text format over to .wasm. The wast2wasm command available as part of the &lt;a href=&quot;https://github.com/webassembly/wabt&quot;&gt;wabt tool&lt;/a&gt; has a &lt;code&gt;--debug-names&lt;/code&gt; option &amp;mdash; specify this during conversion to get a .wasm with a names custom section, for example:</source>
          <target state="translated">WebAssembly 텍스트 형식에는 현재 새 사용자 정의 섹션을 추가하기 위해 지정된 구문이 없습니다. 그러나 텍스트 형식에서 .wasm으로 변환하는 동안 wasm에 이름 섹션을 추가 할 수 있습니다. &lt;a href=&quot;https://github.com/webassembly/wabt&quot;&gt;wabt 도구의&lt;/a&gt; 일부로 사용 가능한 wast2wasm 명령 에는 &lt;code&gt;--debug-names&lt;/code&gt; 옵션이 있습니다. 변환 중에이를 지정하여 이름 사용자 정의 섹션이있는 .wasm을 가져옵니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3e5bcd29eb044f930530fd1a51d6198733929f6f" translate="yes" xml:space="preserve">
          <source>Note that the block-scoped &lt;code&gt;const c = 2&lt;/code&gt;&lt;em&gt;does not&lt;/em&gt; throw a &lt;code&gt;SyntaxError: Identifier 'c' has already been declared&lt;/code&gt; because it can be declared uniquely within the block.</source>
          <target state="translated">블록 범위의 것을 참고 &lt;code&gt;const c = 2&lt;/code&gt; &lt;em&gt;되지 않습니다&lt;/em&gt; 던져 &lt;code&gt;SyntaxError: Identifier 'c' has already been declared&lt;/code&gt; 이 블록 내에서 유일하게 선언 할 수 있기 때문이다.</target>
        </trans-unit>
        <trans-unit id="f0c421b852d51df9ce972cd296b6e3206ff56369" translate="yes" xml:space="preserve">
          <source>Note that the comma in assignments such as the &lt;code&gt;var&lt;/code&gt; statement may appear not to have the normal effect of comma operators because they don't exist within an expression. In the following example, &lt;code&gt;a&lt;/code&gt; is set to the value of &lt;code&gt;b = 3&lt;/code&gt; (which is 3), but the &lt;code&gt;c = 4&lt;/code&gt; expression still evaluates and its result returned to console (i.e., 4). This is due to &lt;a href=&quot;operator_precedence&quot;&gt;operator precedence and associativity&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;var&lt;/code&gt; 문과 같은 할당에서 쉼표 는 쉼표 연산자가 표현식 내에 존재하지 않기 때문에 정상적인 영향을 미치지 않는 것처럼 보일 수 있습니다. 다음 예에서 &lt;code&gt;a&lt;/code&gt; 는 &lt;code&gt;b = 3&lt;/code&gt; (3) 의 값으로 설정 되지만 &lt;code&gt;c = 4&lt;/code&gt; 표현식은 여전히 ​​평가되며 결과는 콘솔 (예 : 4)로 반환됩니다. 이것은 &lt;a href=&quot;operator_precedence&quot;&gt;연산자 우선 순위와 연관성 때문&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8fb0b31cc07e11285eaab2f90031b0e91ac70257" translate="yes" xml:space="preserve">
          <source>Note that the escape sequence restriction is only dropped from &lt;em&gt;tagged&lt;/em&gt; templates and not from &lt;em&gt;untagged&lt;/em&gt; template literals:</source>
          <target state="translated">이스케이프 시퀀스 제한은 &lt;em&gt;태그가 지정 &lt;/em&gt;&lt;em&gt;되지 않은&lt;/em&gt; 템플릿 리터럴 이 아니라 &lt;em&gt;태그가 지정된&lt;/em&gt; 템플릿 에서만 삭제됩니다 .</target>
        </trans-unit>
        <trans-unit id="61b22e5e94655c56be6f44302671658a96e6c0b2" translate="yes" xml:space="preserve">
          <source>Note that the order of the patterns in the regular expression matters.</source>
          <target state="translated">정규식에서 패턴의 순서가 중요합니다.</target>
        </trans-unit>
        <trans-unit id="9dd7be5f05359fb27023d87fd24b57d610b2c7f7" translate="yes" xml:space="preserve">
          <source>Note that the results shown in the code above can vary between browsers and browser versions. This is because the values are implementation-specific. That is, the specification requires only that the before and after values are negative and positive.</source>
          <target state="translated">위 코드에 표시된 결과는 브라우저와 브라우저 버전에 따라 다를 수 있습니다. 이는 값이 구현별로 다르기 때문입니다. 즉, 사양에서는 이전 및 이후 값이 음수이고 양수 여야합니다.</target>
        </trans-unit>
        <trans-unit id="b9da1c1db86dd393891044a482bf172e36da757d" translate="yes" xml:space="preserve">
          <source>Note that the trigonometric functions (&lt;code&gt;sin()&lt;/code&gt;, &lt;code&gt;cos()&lt;/code&gt;, &lt;code&gt;tan()&lt;/code&gt;, &lt;code&gt;asin()&lt;/code&gt;, &lt;code&gt;acos()&lt;/code&gt;, &lt;code&gt;atan()&lt;/code&gt;, &lt;code&gt;atan2()&lt;/code&gt;) expect or return angles in radians. To convert radians to degrees, divide by &lt;code&gt;(Math.PI / 180)&lt;/code&gt;, and multiply by this to convert the other way.</source>
          <target state="translated">삼각 함수 ( &lt;code&gt;sin()&lt;/code&gt; , &lt;code&gt;cos()&lt;/code&gt; , &lt;code&gt;tan()&lt;/code&gt; , &lt;code&gt;asin()&lt;/code&gt; , &lt;code&gt;acos()&lt;/code&gt; , &lt;code&gt;atan()&lt;/code&gt; , &lt;code&gt;atan2()&lt;/code&gt; )는 각도를 라디안으로 예상하거나 반환합니다. 라디안을도 단위로 변환하려면 &lt;code&gt;(Math.PI / 180)&lt;/code&gt; 나누고 다른 방법으로 변환하려면이 값을 곱하십시오.</target>
        </trans-unit>
        <trans-unit id="05d9f4c62248b1aeb8a356a6df2d135c0cd0b559" translate="yes" xml:space="preserve">
          <source>Note that the value of an &lt;code&gt;instanceof&lt;/code&gt; test can change based on changes to the &lt;code&gt;prototype&lt;/code&gt; property of constructors, and it can also be changed by changing an object prototype using &lt;code&gt;Object.setPrototypeOf&lt;/code&gt;. It is also possible using the non-standard &lt;code&gt;__proto__&lt;/code&gt; pseudo-property.</source>
          <target state="translated">테스트 &lt;code&gt;instanceof&lt;/code&gt; 의 값은 생성자 의 &lt;code&gt;prototype&lt;/code&gt; 속성 변경에 따라 변경 될 수 있으며 &lt;code&gt;Object.setPrototypeOf&lt;/code&gt; 를 사용하여 객체 프로토 타입을 변경하여 변경할 수도 있습니다 . 비표준 &lt;code&gt;__proto__&lt;/code&gt; 의사 속성을 사용하는 것도 가능 합니다.</target>
        </trans-unit>
        <trans-unit id="7741c61e8b49d3e2e383a1abacaa777a126edbdd" translate="yes" xml:space="preserve">
          <source>Note that there is no &lt;code&gt;elseif&lt;/code&gt; syntax in JavaScript. However, you can write it with a space between &lt;code&gt;else&lt;/code&gt; and &lt;code&gt;if&lt;/code&gt;:</source>
          <target state="translated">JavaScript 에는 &lt;code&gt;elseif&lt;/code&gt; 구문 이 없습니다 . 그러나 &lt;code&gt;else&lt;/code&gt; 와 &lt;code&gt;if&lt;/code&gt; 사이에 공백으로 쓸 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a8db8f294dbcfb4632044ee8283f40c3eee6b7d4" translate="yes" xml:space="preserve">
          <source>Note that this behavior is not at all affected by how or where the function was defined. In the previous example, we defined the function inline as the &lt;code&gt;f&lt;/code&gt; member during the definition of &lt;code&gt;o&lt;/code&gt;. However, we could have just as easily defined the function first and later attached it to &lt;code&gt;o.f&lt;/code&gt;. Doing so results in the same behavior:</source>
          <target state="translated">이 동작은 함수의 정의 방법이나 위치에 전혀 영향을받지 않습니다. 이전 예제에서, &lt;code&gt;o&lt;/code&gt; 를 정의하는 동안 함수 인라인을 &lt;code&gt;f&lt;/code&gt; 멤버로 정의했습니다 . 그러나, 우리는 쉽게 첫번째 기능을 정의하고 나중에에 부착하는 것처럼 할 수 &lt;code&gt;o.f&lt;/code&gt; . 이렇게하면 동일한 동작이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9faaea4291e65f8d479e5e16bc12586950295dae" translate="yes" xml:space="preserve">
          <source>Note that this can result in an infinite loop if &lt;code&gt;oldS&lt;/code&gt; is itself a substring of &lt;code&gt;newS&lt;/code&gt; &amp;mdash; for example, if you attempted to replace 'World' with 'OtherWorld' here. A better method for replacing strings is as follows:</source>
          <target state="translated">경우이 무한 루프가 발생할 수 있음을 참고 &lt;code&gt;oldS&lt;/code&gt; 자신의 서브 스트링 &lt;code&gt;newS&lt;/code&gt; 예를 들어 당신이 여기에서 '내세'와 '세계'를 대체하려고 시도하는 경우 -. 문자열을 바꾸는 더 좋은 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3a00b9df89e778c37409fcfac8a650745361a6d2" translate="yes" xml:space="preserve">
          <source>Note that this code is an example only; it does not accept valid numbers such as &lt;code&gt;1.&lt;/code&gt; or &lt;code&gt;.5&lt;/code&gt;.</source>
          <target state="translated">이 코드는 예제 일뿐입니다. &lt;code&gt;1.&lt;/code&gt; 또는 &lt;code&gt;.5&lt;/code&gt; 와 같은 유효한 숫자는 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="eb8aa2e7d13b4fcf561acadb5cc068b976b71b73" translate="yes" xml:space="preserve">
          <source>Note that we have to handle the case &lt;code&gt;idx == 0&lt;/code&gt; separately here because the element will always be found regardless of the &lt;code&gt;fromIndex&lt;/code&gt; parameter if it is the first element of the array. This is different from the &lt;a href=&quot;indexof&quot;&gt;&lt;code&gt;indexOf&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;fromIndex&lt;/code&gt; 매개 변수 와 관계없이 배열의 첫 번째 요소 인 경우 요소를 항상 찾을 수 있으므로 여기서는 &lt;code&gt;idx == 0&lt;/code&gt; 경우를 별도로 처리해야합니다 . 이것은 &lt;a href=&quot;indexof&quot;&gt; &lt;code&gt;indexOf&lt;/code&gt; &lt;/a&gt; 메소드 와 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="26c2ae3bb9aea4cccee37b2f148e59d95d86693f" translate="yes" xml:space="preserve">
          <source>Note that while the setting of &lt;code&gt;null&lt;/code&gt; as &lt;code&gt;[[Prototype]]&lt;/code&gt; is supported in the real ES5 &lt;code&gt;Object.create&lt;/code&gt;, this polyfill cannot support it due to a limitation inherent in versions of ECMAScript lower than 5.</source>
          <target state="translated">음의 설정 중에 그 &lt;code&gt;null&lt;/code&gt; 로서 &lt;code&gt;[[Prototype]]&lt;/code&gt; 실제 ES5지지된다 &lt;code&gt;Object.create&lt;/code&gt; 이 polyfill이를 지원할 수 인해 ECMAScript를 버전의 고유 제한으로 5 이하.</target>
        </trans-unit>
        <trans-unit id="29d2f36187f315e0e6ae89d658ad3563914fde02" translate="yes" xml:space="preserve">
          <source>Note that while this &quot;no-op&quot; works for JavaScript objects it does not work for native browser objects like DOM Elements. &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/&quot;&gt;See this for one solution&lt;/a&gt;.</source>
          <target state="translated">이 &quot;no-op&quot;는 JavaScript 객체에는 작동하지만 DOM Elements와 같은 기본 브라우저 객체에는 작동하지 않습니다. &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/&quot;&gt;하나의 솔루션에 대해서는 이것을 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8c471aa0dff39ec2f99de8a999d955158a4e06a8" translate="yes" xml:space="preserve">
          <source>Note that with &lt;code&gt;call&lt;/code&gt; and &lt;code&gt;apply&lt;/code&gt;, if the value passed as &lt;code&gt;this&lt;/code&gt; is not an object, an attempt will be made to convert it to an object using the internal &lt;code&gt;ToObject&lt;/code&gt; operation. So if the value passed is a primitive like &lt;code&gt;7&lt;/code&gt; or &lt;code&gt;'foo'&lt;/code&gt;, it will be converted to an Object using the related constructor, so the primitive number &lt;code&gt;7&lt;/code&gt; is converted to an object as if by &lt;code&gt;new Number(7)&lt;/code&gt; and the string &lt;code&gt;'foo'&lt;/code&gt; to an object as if by &lt;code&gt;new String('foo')&lt;/code&gt;, e.g.</source>
          <target state="translated">와 있습니다 &lt;code&gt;call&lt;/code&gt; 및 &lt;code&gt;apply&lt;/code&gt; 으로 전달 된 값 경우, &lt;code&gt;this&lt;/code&gt; 객체가 아닌, 시도가 내부 사용하여 객체로 변환 될 것이다 &lt;code&gt;ToObject&lt;/code&gt; 의 작업을. 따라서 전달 된 값이 &lt;code&gt;7&lt;/code&gt; 또는 &lt;code&gt;'foo'&lt;/code&gt; 와 같은 프리미티브 인 경우 관련 생성자 를 사용하여 객체로 변환 되므로 프리미티브 번호 &lt;code&gt;7&lt;/code&gt; 은 마치 &lt;code&gt;new Number(7)&lt;/code&gt; 및 문자열 &lt;code&gt;'foo'&lt;/code&gt; 의해 객체로 변환됩니다. ' 객체에 것처럼하여 &lt;code&gt;new String('foo')&lt;/code&gt; , 예를 들어,</target>
        </trans-unit>
        <trans-unit id="1e11798a56f7d902796c89512fd574c784f0185e" translate="yes" xml:space="preserve">
          <source>Note that you cannot replace nor mimic the &lt;a href=&quot;../global_objects/object/assign&quot;&gt;&lt;code&gt;Object.assign()&lt;/code&gt;&lt;/a&gt; function:</source>
          <target state="translated">&lt;a href=&quot;../global_objects/object/assign&quot;&gt; &lt;code&gt;Object.assign()&lt;/code&gt; &lt;/a&gt; 함수를 대체하거나 모방 할 수는 없습니다 .</target>
        </trans-unit>
        <trans-unit id="ba9d79769c0b86e1d0db7b5a66f5a9b830616493" translate="yes" xml:space="preserve">
          <source>Note that you may want to avoid using &lt;strong&gt;&amp;plusmn;&lt;/strong&gt;&lt;code&gt;Infinity&lt;/code&gt; for stylistic reasons. In this case, &lt;a href=&quot;atan2&quot;&gt;&lt;code&gt;Math.atan2()&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;0&lt;/code&gt; as the second argument may be a better solution.</source>
          <target state="translated">스타일상의 이유로 &lt;strong&gt;&amp;plusmn; &lt;/strong&gt; &lt;code&gt;Infinity&lt;/code&gt; 를 사용하지 않는 것이 좋습니다 . 이 경우 두 번째 인수 로 &lt;code&gt;0&lt;/code&gt; 을 사용하는 &lt;a href=&quot;atan2&quot;&gt; &lt;code&gt;Math.atan2()&lt;/code&gt; &lt;/a&gt; 가 더 나은 솔루션 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6dc86a90d58eb45aafe7124321909cadee746d9d" translate="yes" xml:space="preserve">
          <source>Note that you need do nothing special to create a bound function for use with &lt;a href=&quot;../../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt;. The corollary is that you need do nothing special to create a bound function to be called plainly, even if you would rather require the bound function to only be called using &lt;a href=&quot;../../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt; 와 함께 사용하기 위해 바인딩 된 함수를 만들려면 특별한 작업이 필요하지 않습니다 . 추론에 따르면 바인딩 된 함수를 &lt;a href=&quot;../../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt; 만 사용하여 호출 해야하는 경우에도 바인드 된 함수를 작성하여 명확하게 호출 할 수있는 특별한 작업은 필요하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="b9a1be02ab592aa6d4b6efcd21b498ef87f17d20" translate="yes" xml:space="preserve">
          <source>Note that; as the standard three properties (&lt;code&gt;buf.byteLength&lt;/code&gt;, &lt;code&gt;buf.byteOffset&lt;/code&gt; and &lt;code&gt;buf.buffer&lt;/code&gt;) are read-only (as are those of an &lt;a href=&quot;../arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../sharedarraybuffer&quot;&gt;&lt;code&gt;SharedArrayBuffer&lt;/code&gt;&lt;/a&gt;), there is no reason for attempting to freeze these properties.</source>
          <target state="translated">참고하십시오; 표준 3 개의 속성 ( &lt;code&gt;buf.byteLength&lt;/code&gt; , &lt;code&gt;buf.byteOffset&lt;/code&gt; 및 &lt;code&gt;buf.buffer&lt;/code&gt; )은 읽기 전용 &lt;a href=&quot;../arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../sharedarraybuffer&quot;&gt; &lt;code&gt;SharedArrayBuffer&lt;/code&gt; &lt;/a&gt; 의 속성 과 동일 ) 이러한 속성을 고정하려고 시도 할 이유가 없습니다.</target>
        </trans-unit>
        <trans-unit id="bf18f531a356627607b3ae5f0d74f109c4ce0b59" translate="yes" xml:space="preserve">
          <source>Note the difference between &lt;a href=&quot;../../global_objects/function/length&quot;&gt;&lt;code&gt;Function.length&lt;/code&gt;&lt;/a&gt; and arguments.length</source>
          <target state="translated">&lt;a href=&quot;../../global_objects/function/length&quot;&gt; &lt;code&gt;Function.length&lt;/code&gt; &lt;/a&gt; 와 arguments.length 의 차이점에 유의하십시오.</target>
        </trans-unit>
        <trans-unit id="32f779296673bd826b5f982467ecc6fc8e838714" translate="yes" xml:space="preserve">
          <source>Note the following when working with the &lt;code&gt;get&lt;/code&gt; syntax:</source>
          <target state="translated">&lt;code&gt;get&lt;/code&gt; 구문을 사용할 때 다음을 참고하십시오 .</target>
        </trans-unit>
        <trans-unit id="d7c82ee1fb75f8a1f3103fa9c5f488ea380a2bd9" translate="yes" xml:space="preserve">
          <source>Note the following when working with the &lt;code&gt;set&lt;/code&gt; syntax:</source>
          <target state="translated">&lt;code&gt;set&lt;/code&gt; 구문으로 작업 할 때 다음을 참고하십시오 .</target>
        </trans-unit>
        <trans-unit id="8e06ac9a6781fead8358daed4f4bb9d8b3f5963f" translate="yes" xml:space="preserve">
          <source>Note the return value of &lt;code&gt;grow()&lt;/code&gt; here is the previous number of WebAssembly pages.</source>
          <target state="translated">&lt;code&gt;grow()&lt;/code&gt; 의 반환 값은 이전 웹 어셈블리 페이지 수입니다.</target>
        </trans-unit>
        <trans-unit id="5e2eabf889063165d97f5283638f4f232c253bff" translate="yes" xml:space="preserve">
          <source>Note, however, that the &lt;code&gt;javascript:&lt;/code&gt; pseudo protocol is discouraged over other alternatives, such as unobtrusive event handlers.</source>
          <target state="translated">그러나 &lt;code&gt;javascript:&lt;/code&gt; 의사 프로토콜은 눈에 거슬리지 않는 이벤트 핸들러와 같은 다른 대안에 권장되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="bed6f54ef32d3e3c97c2eb581fa80a3a015e2ee9" translate="yes" xml:space="preserve">
          <source>Note: Do not place the regular expression literal (or &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; constructor) within the &lt;code&gt;while&lt;/code&gt; condition or it will create an infinite loop if there is a match due to the &lt;a href=&quot;lastindex&quot;&gt;&lt;code&gt;lastIndex&lt;/code&gt;&lt;/a&gt; property being reset upon each iteration. Also be sure that the global flag (&quot;&lt;code&gt;g&lt;/code&gt;&quot;) is set or an infinite loop will occur here also.</source>
          <target state="translated">참고 : &lt;code&gt;while&lt;/code&gt; 조건 내에 정규 표현식 리터럴 (또는 &lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt; 생성자)을 배치하지 마십시오. 그렇지 않으면 각 반복시 &lt;a href=&quot;lastindex&quot;&gt; &lt;code&gt;lastIndex&lt;/code&gt; &lt;/a&gt; 속성이 재설정 되어 일치하는 경우 무한 루프가 생성됩니다 . 또한 글로벌 플래그 ( &quot; &lt;code&gt;g&lt;/code&gt; &quot;)가 설정되어 있거나 무한 루프가 발생 하는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="7019305dd8fa306744c48d9c794dc4dcabed5604" translate="yes" xml:space="preserve">
          <source>Note: In Microsoft JScript, negative values of the &lt;code&gt;start&lt;/code&gt; argument are not considered to refer to the end of the string.</source>
          <target state="translated">참고 : Microsoft JScript에서 &lt;code&gt;start&lt;/code&gt; 인수 의 음수 값은 문자열의 끝을 나타내는 것으로 간주되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="59be927df9288b8c4077df258bf4f90d9389fd7c" translate="yes" xml:space="preserve">
          <source>Note: The length property is used to control the number of object properties to be added. In the above example, length:2 indicates two properties has to be added.</source>
          <target state="translated">참고 : length 속성은 추가 할 객체 속성 수를 제어하는 ​​데 사용됩니다. 위의 예에서 length : 2는 두 개의 속성을 추가해야 함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="c0e231314f86b257739bc8c0ffa3b6fc321d7def" translate="yes" xml:space="preserve">
          <source>Note: The strict equality operator rather than the standard equality operator must be used here, because &lt;code&gt;x == undefined&lt;/code&gt; also checks whether &lt;code&gt;x&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, while strict equality doesn't. &lt;code&gt;null&lt;/code&gt; is not equivalent to &lt;code&gt;undefined&lt;/code&gt;. See &lt;a href=&quot;../operators/comparison_operators&quot;&gt;&lt;code&gt;comparison operators&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">참고 : &lt;code&gt;x == undefined&lt;/code&gt; 도 &lt;code&gt;x&lt;/code&gt; 가 &lt;code&gt;null&lt;/code&gt; 인지 검사하는 반면, 엄격 항등이 아닌 경우 표준 항등 연산자가 아닌 완전 항등 연산자를 사용해야합니다 . &lt;code&gt;null&lt;/code&gt; 은 &lt;code&gt;undefined&lt;/code&gt; 와 동일하지 않습니다 . 자세한 내용은 &lt;a href=&quot;../operators/comparison_operators&quot;&gt; &lt;code&gt;comparison operators&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="3f63fdf9aee50510728cc3d103d43f1c3dc7aeb1" translate="yes" xml:space="preserve">
          <source>Note: Use the break statement to stop a loop before condition evaluates to true.</source>
          <target state="translated">참고 : 조건이 true로 평가되기 전에 루프를 중지하려면 break 문을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="3d8f583703a30033891b7552420940f520ae84ad" translate="yes" xml:space="preserve">
          <source>Note: if this arg is passed to call, bind, or apply on invocation of an arrow function it will be ignored. You can still prepend arguments to the call, but the first argument (thisArg) should be set to null.</source>
          <target state="translated">참고 :이 arg가 화살표 함수를 호출, 호출 또는 적용하도록 전달되면 무시됩니다. 호출에 인수를 추가 할 수 있지만 첫 번째 인수 (thisArg)는 null로 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="b61f7ba07dc912d955061735265a29fafb0ae0a2" translate="yes" xml:space="preserve">
          <source>Note: that is two underscores, followed by the five characters &quot;proto&quot;, followed by two more underscores.</source>
          <target state="translated">참고 : 두 개의 밑줄, 그 뒤에 5 개의 문자 &quot;proto&quot;, 두 개의 밑줄이 있습니다.</target>
        </trans-unit>
        <trans-unit id="70440046a3dc2e079f23ee1c57dfa76669b732aa" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">Notes</target>
        </trans-unit>
        <trans-unit id="28495ab68819e01c03a4f6664aa021425bc63183" translate="yes" xml:space="preserve">
          <source>Nothing can be added to or removed from the properties set of a frozen object. Any attempt to do so will fail, either silently or by throwing a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; exception (most commonly, but not exclusively, when in &lt;a href=&quot;../../strict_mode&quot;&gt;strict mode&lt;/a&gt;).</source>
          <target state="translated">고정 된 객체의 속성 세트에는 추가하거나 제거 할 수 없습니다. 자동으로 또는 &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; 예외 (가장 일반적으로 &lt;a href=&quot;../../strict_mode&quot;&gt;엄격 모드&lt;/a&gt; 일 때는 배타적이지 않음)를 발생 시켜 실패 합니다 .</target>
        </trans-unit>
        <trans-unit id="b1634d2a1b6262f229bf5d427a4c97f24d9538c0" translate="yes" xml:space="preserve">
          <source>Notice how redefining &lt;code&gt;@@iterator&lt;/code&gt; affects the behavior of built-in constructs that use the iteration protocol:</source>
          <target state="translated">&lt;code&gt;@@iterator&lt;/code&gt; 재정의 하면 반복 프로토콜을 사용하는 내장 구문의 동작에 어떤 영향을 미치는지 살펴보십시오 .</target>
        </trans-unit>
        <trans-unit id="f7b7d30c834fda1d1ad1ad85f07081bd9751e93e" translate="yes" xml:space="preserve">
          <source>Notice, the output list length can be different from the input list length.</source>
          <target state="translated">출력 목록 길이는 입력 목록 길이와 다를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7c519ba797a2d11469f812660290b10591ae7fe0" translate="yes" xml:space="preserve">
          <source>Notifies agents that are waiting on the specified index of the array. Returns the number of agents that were notified.</source>
          <target state="translated">지정된 어레이 인덱스에서 대기중인 에이전트에게 알립니다. 통지 된 에이전트 수를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="1db14eb7136eab37e1baff1e1e7463bf44f5675f" translate="yes" xml:space="preserve">
          <source>Novice developers sometimes believe a leading zero prefix has no semantic meaning, so they use it as an alignment device &amp;mdash; but this changes the number's meaning! A leading zero syntax for the octals is rarely useful and can be mistakenly used, so strict mode makes it a syntax error:</source>
          <target state="translated">초보자 개발자는 선행 제로 접두사가 의미 적 의미가 없다고 생각하므로 정렬 장치로 사용하지만 숫자의 의미를 변경합니다! 8 진의 선행 제로 구문은 거의 유용하지 않으며 실수로 사용될 수 있으므로 엄격 모드에서는 구문 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3e91724d9b2b90231f93b13497529b9cdc52c277" translate="yes" xml:space="preserve">
          <source>Now forbidden in strict mode.</source>
          <target state="translated">이제 엄격 모드에서는 금지되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="bdbc7887d3cf2b8aa0bd16aa3cc676dde57bb568" translate="yes" xml:space="preserve">
          <source>Now in order to create a complete sample &lt;code&gt;traps&lt;/code&gt; list, for didactic purposes, we will try to proxify a &lt;em&gt;non native&lt;/em&gt; object that is particularly suited to this type of operation: the &lt;code&gt;docCookies&lt;/code&gt; global object created by &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document/cookie/Simple_document.cookie_framework&quot;&gt;the &quot;little framework&quot; published on the &lt;code&gt;document.cookie&lt;/code&gt; page&lt;/a&gt;.</source>
          <target state="translated">이제 완전한 샘플 &lt;code&gt;traps&lt;/code&gt; 목록 을 작성하기 위해 교훈적인 목적 으로이 유형의 작업에 특히 적합한 &lt;em&gt;비원시&lt;/em&gt; 객체 ( &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document/cookie/Simple_document.cookie_framework&quot;&gt; &lt;code&gt;document.cookie&lt;/code&gt; &lt;/a&gt; 게시 된 &quot;작은 프레임 워크&quot;에 의해 작성된 &lt;code&gt;docCookies&lt;/code&gt; 전역 객체)를 프록시 화하려고 합니다. 쿠키 페이지 .</target>
        </trans-unit>
        <trans-unit id="1046b504ee45cf74d531a73ea41f14236628eb9c" translate="yes" xml:space="preserve">
          <source>Now the information is available separately and it can be formatted and concatenated again in a customized way. For example by using &lt;a href=&quot;../array/map&quot;&gt;&lt;code&gt;Array.prototype.map()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../functions/arrow_functions&quot;&gt;arrow functions&lt;/a&gt;, a &lt;a href=&quot;../../statements/switch&quot;&gt;switch statement&lt;/a&gt;, &lt;a href=&quot;../../template_literals&quot;&gt;template literals&lt;/a&gt;, and &lt;a href=&quot;../array/reduce&quot;&gt;&lt;code&gt;Array.prototype.reduce()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이제 정보를 개별적으로 사용할 수 있으며 사용자 지정 방식으로 다시 포맷하고 연결할 수 있습니다. 예를 들어 &lt;a href=&quot;../array/map&quot;&gt; &lt;code&gt;Array.prototype.map()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../functions/arrow_functions&quot;&gt;화살표 함수&lt;/a&gt; , &lt;a href=&quot;../../statements/switch&quot;&gt;switch 문&lt;/a&gt; , &lt;a href=&quot;../../template_literals&quot;&gt;템플릿 리터럴&lt;/a&gt; 및 &lt;a href=&quot;../array/reduce&quot;&gt; &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; &lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="34e0936c9312e813910d1338db9bce48d6915dce" translate="yes" xml:space="preserve">
          <source>Now you can create an object called &lt;code&gt;mycar&lt;/code&gt; as follows:</source>
          <target state="translated">이제 다음과 같이 &lt;code&gt;mycar&lt;/code&gt; 라는 객체를 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="606e36eccd76bbe2df758a010c6e193c37180015" translate="yes" xml:space="preserve">
          <source>Now, if that routine cleanup must be done whether or not the try..catch code succeeds, then if the finally-block only executed after an exception, the same cleanup code would have to be duplicated both inside and outside the finally-block, and therefore there is no reason not to have just the finally-block alone, and let it execute regardless of exceptions or not.</source>
          <target state="translated">이제 try..catch 코드의 성공 여부에 관계없이 해당 루틴 정리를 수행해야하는 경우 finally 블록이 예외 후에 만 ​​실행되면 동일한 정리 코드가 finally 블록 내부와 외부에서 복제되어야합니다. 따라서 finally 블록 만 사용하지 않아야 할 이유가 없으며 예외에 관계없이 실행되도록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4a129f496aefa48f086cde8c25668e91a4aaec6c" translate="yes" xml:space="preserve">
          <source>Now, if we already caught the exception in the inner try-block by adding a catch block</source>
          <target state="translated">이제 catch 블록을 추가하여 내부 try-block에서 이미 예외를 발견 한 경우</target>
        </trans-unit>
        <trans-unit id="1cd4efb00869a6583e4d94d1153eda91be69c20a" translate="yes" xml:space="preserve">
          <source>Now, with template literals, you are able to make use of the syntactic sugar making substitutions like this more readable:</source>
          <target state="translated">이제 템플릿 리터럴을 사용하면 다음과 같이 구문 설탕 대체를보다 쉽게 ​​읽을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d6a039d3bfa855f8b88cddb9a92ac8422a25f640" translate="yes" xml:space="preserve">
          <source>Now, with the help of &lt;code&gt;toStringTag&lt;/code&gt;, you are able to set your own custom tag:</source>
          <target state="translated">이제 &lt;code&gt;toStringTag&lt;/code&gt; 을 사용하여 사용자 정의 태그를 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="109085beaaa80ac89858b283a64f7c75d7e5bb12" translate="yes" xml:space="preserve">
          <source>Null</source>
          <target state="translated">Null</target>
        </trans-unit>
        <trans-unit id="51dbbdfcaeb0bc923f99da3217f87d57a5db4195" translate="yes" xml:space="preserve">
          <source>Null and Undefined Types are strictly equal to themselves and abstractly equal to each other.</source>
          <target state="translated">널 및 정의되지 않은 유형은 서로 엄격하게 동일하며 추상적입니다.</target>
        </trans-unit>
        <trans-unit id="fb88bbb352121968a76119aae891370e37079ca8" translate="yes" xml:space="preserve">
          <source>Null literal</source>
          <target state="translated">널 리터럴</target>
        </trans-unit>
        <trans-unit id="e1017425089f8186fd1fb9d0842c9c0b0a64be85" translate="yes" xml:space="preserve">
          <source>Null literal (&lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">널 리터럴 ( &lt;code&gt;null&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="b7baa1d40c4ea29afc9098732bffee2a861a6c44" translate="yes" xml:space="preserve">
          <source>Number</source>
          <target state="translated">Number</target>
        </trans-unit>
        <trans-unit id="d8454350ddcb351d51d54b3e07ea1396cc2236a8" translate="yes" xml:space="preserve">
          <source>Number type in details</source>
          <target state="translated">세부 사항의 숫자 유형</target>
        </trans-unit>
        <trans-unit id="a742d56a3657d392ca56fafb1e7213c945008c0c" translate="yes" xml:space="preserve">
          <source>Number.EPSILON</source>
          <target state="translated">Number.EPSILON</target>
        </trans-unit>
        <trans-unit id="dd8c6b3cdabbfc0c1023a1835d330ee2647ae4fa" translate="yes" xml:space="preserve">
          <source>Number.MAX_SAFE_INTEGER</source>
          <target state="translated">Number.MAX_SAFE_INTEGER</target>
        </trans-unit>
        <trans-unit id="b69c92491996ff2631ab08261f8ab5c41351a30a" translate="yes" xml:space="preserve">
          <source>Number.MAX_VALUE</source>
          <target state="translated">Number.MAX_VALUE</target>
        </trans-unit>
        <trans-unit id="e3ff4a0e20a3c8a223098515fd13f8baa5103124" translate="yes" xml:space="preserve">
          <source>Number.MIN_SAFE_INTEGER</source>
          <target state="translated">Number.MIN_SAFE_INTEGER</target>
        </trans-unit>
        <trans-unit id="cab6bc3e7f6688dcc3610cf7655d2a486226c9a4" translate="yes" xml:space="preserve">
          <source>Number.MIN_VALUE</source>
          <target state="translated">Number.MIN_VALUE</target>
        </trans-unit>
        <trans-unit id="5d85e9440a8e902f524d160f672c5b366bd582c9" translate="yes" xml:space="preserve">
          <source>Number.NEGATIVE_INFINITY</source>
          <target state="translated">Number.NEGATIVE_INFINITY</target>
        </trans-unit>
        <trans-unit id="c94b096286ba8ccde8f2d94366ed7e9c4f7d608f" translate="yes" xml:space="preserve">
          <source>Number.NaN</source>
          <target state="translated">Number.NaN</target>
        </trans-unit>
        <trans-unit id="8fa1bc0fbe58e183e54642a597f8933ca617cbf1" translate="yes" xml:space="preserve">
          <source>Number.POSITIVE_INFINITY</source>
          <target state="translated">Number.POSITIVE_INFINITY</target>
        </trans-unit>
        <trans-unit id="cd3914b79e15a9de66e2dd991838cde6e116af68" translate="yes" xml:space="preserve">
          <source>Number.isFinite</source>
          <target state="translated">Number.isFinite</target>
        </trans-unit>
        <trans-unit id="47766359cf44919a1a0c60c51ee53a9e89e8a648" translate="yes" xml:space="preserve">
          <source>Number.isInteger</source>
          <target state="translated">Number.isInteger</target>
        </trans-unit>
        <trans-unit id="97ad380a07aa2db9d0064d03e18b75e4a37a0a78" translate="yes" xml:space="preserve">
          <source>Number.isNaN</source>
          <target state="translated">Number.isNaN</target>
        </trans-unit>
        <trans-unit id="9921c82f3f8d9e25de131b1ba4179f4fd8a19470" translate="yes" xml:space="preserve">
          <source>Number.isSafeInteger</source>
          <target state="translated">Number.isSafeInteger</target>
        </trans-unit>
        <trans-unit id="874c8f7be2ec578126ecc2d641a856b6d3230955" translate="yes" xml:space="preserve">
          <source>Number.parseFloat</source>
          <target state="translated">Number.parseFloat</target>
        </trans-unit>
        <trans-unit id="fb59e71f3e9dbed68980384436b2bd9c5c504755" translate="yes" xml:space="preserve">
          <source>Number.parseInt</source>
          <target state="translated">Number.parseInt</target>
        </trans-unit>
        <trans-unit id="a6beedb203ce189253108e519d9882e5d498273e" translate="yes" xml:space="preserve">
          <source>Number.prototype</source>
          <target state="translated">Number.prototype</target>
        </trans-unit>
        <trans-unit id="0dce729c1f239758111a59ec56807f133c5161db" translate="yes" xml:space="preserve">
          <source>Numbering system. Possible values include: &lt;code&gt;&quot;arab&quot;&lt;/code&gt;, &lt;code&gt;&quot;arabext&quot;&lt;/code&gt;, &lt;code&gt;&quot;bali&quot;&lt;/code&gt;, &lt;code&gt;&quot;beng&quot;&lt;/code&gt;, &lt;code&gt;&quot;deva&quot;&lt;/code&gt;, &lt;code&gt;&quot;fullwide&quot;&lt;/code&gt;, &lt;code&gt;&quot;gujr&quot;&lt;/code&gt;, &lt;code&gt;&quot;guru&quot;&lt;/code&gt;, &lt;code&gt;&quot;hanidec&quot;&lt;/code&gt;, &lt;code&gt;&quot;khmr&quot;&lt;/code&gt;, &lt;code&gt;&quot;knda&quot;&lt;/code&gt;, &lt;code&gt;&quot;laoo&quot;&lt;/code&gt;, &lt;code&gt;&quot;latn&quot;&lt;/code&gt;, &lt;code&gt;&quot;limb&quot;&lt;/code&gt;, &lt;code&gt;&quot;mlym&quot;&lt;/code&gt;, &lt;code&gt;&quot;mong&quot;&lt;/code&gt;, &lt;code&gt;&quot;mymr&quot;&lt;/code&gt;, &lt;code&gt;&quot;orya&quot;&lt;/code&gt;, &lt;code&gt;&quot;tamldec&quot;&lt;/code&gt;, &lt;code&gt;&quot;telu&quot;&lt;/code&gt;, &lt;code&gt;&quot;thai&quot;&lt;/code&gt;, &lt;code&gt;&quot;tibt&quot;&lt;/code&gt;.</source>
          <target state="translated">넘버링 시스템. 가능한 값은 &lt;code&gt;&quot;arab&quot;&lt;/code&gt; , &lt;code&gt;&quot;arabext&quot;&lt;/code&gt; , &lt;code&gt;&quot;bali&quot;&lt;/code&gt; , &lt;code&gt;&quot;beng&quot;&lt;/code&gt; , &lt;code&gt;&quot;deva&quot;&lt;/code&gt; , &lt;code&gt;&quot;fullwide&quot;&lt;/code&gt; , &lt;code&gt;&quot;gujr&quot;&lt;/code&gt; , &lt;code&gt;&quot;guru&quot;&lt;/code&gt; , &lt;code&gt;&quot;hanidec&quot;&lt;/code&gt; , &lt;code&gt;&quot;khmr&quot;&lt;/code&gt; , &lt;code&gt;&quot;knda&quot;&lt;/code&gt; , &lt;code&gt;&quot;laoo&quot;&lt;/code&gt; , &lt;code&gt;&quot;latn&quot;&lt;/code&gt; , &lt;code&gt;&quot;limb&quot;&lt;/code&gt; , &lt;code&gt;&quot;mlym&quot;&lt;/code&gt; , &lt;code&gt;&quot;mong&quot;&lt;/code&gt; , &lt;code&gt;&quot;mymr&quot;&lt;/code&gt; , &lt;code&gt;&quot;orya&quot;&lt;/code&gt; , &lt;code&gt;&quot;tamldec&quot;&lt;/code&gt; , &lt;code&gt;&quot;telu&quot;&lt;/code&gt; , &lt;code&gt;&quot;thai&quot;&lt;/code&gt; , &lt;code&gt;&quot;tibt&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="24556b28394d712542c87fdae09eb7a61ea85bba" translate="yes" xml:space="preserve">
          <source>Numbers and dates</source>
          <target state="translated">숫자와 날짜</target>
        </trans-unit>
        <trans-unit id="f16fdfbff67b1070daadaa1d5eb06dfdf29dbc55" translate="yes" xml:space="preserve">
          <source>Numbers.</source>
          <target state="translated">Numbers.</target>
        </trans-unit>
        <trans-unit id="48b8cea5176301854bb33d1c73f8b7e0714b960e" translate="yes" xml:space="preserve">
          <source>Numeric literals</source>
          <target state="translated">숫자 리터럴</target>
        </trans-unit>
        <trans-unit id="70d17be49253c52c6b6999c4fef039cfe8fc766b" translate="yes" xml:space="preserve">
          <source>Numeric sorting</source>
          <target state="translated">숫자 정렬</target>
        </trans-unit>
        <trans-unit id="d72f3f36d65608cf6814ea50affc22ea1982ba35" translate="yes" xml:space="preserve">
          <source>OK, that fixed my problem. But why didn't you say that in the first place?</source>
          <target state="translated">좋아, 그게 내 문제를 해결했다. 그런데 왜 처음에 그렇게 말하지 않았습니까?</target>
        </trans-unit>
        <trans-unit id="2883f191bc5ebfdc16c0813eff659b35363ea69b" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="translated">Object</target>
        </trans-unit>
        <trans-unit id="a7dc9622d9872b2041ea4b92f628450cd8b88097" translate="yes" xml:space="preserve">
          <source>Object destructuring</source>
          <target state="translated">객체 파괴</target>
        </trans-unit>
        <trans-unit id="2c2cbbc826c5bb597345c055833162ff9ebaf074" translate="yes" xml:space="preserve">
          <source>Object for which the properties are iterated.</source>
          <target state="translated">속성이 반복되는 객체입니다.</target>
        </trans-unit>
        <trans-unit id="909840cb3e63a76efd9b286f78f024720d816a0e" translate="yes" xml:space="preserve">
          <source>Object initializer</source>
          <target state="translated">객체 이니셜 라이저</target>
        </trans-unit>
        <trans-unit id="1a5080520c7e015789b1f08a193be7964d2f2eb9" translate="yes" xml:space="preserve">
          <source>Object initializer/literal syntax.</source>
          <target state="translated">객체 이니셜 라이저 / 리터럴 구문.</target>
        </trans-unit>
        <trans-unit id="9b5e4c69ef604ed340a3861fd63df244ae0948cb" translate="yes" xml:space="preserve">
          <source>Object iteration</source>
          <target state="translated">객체 반복</target>
        </trans-unit>
        <trans-unit id="5ac6e63785bb63178fb4269cb3e1f1fbf1db7783" translate="yes" xml:space="preserve">
          <source>Object literal notation vs JSON</source>
          <target state="translated">객체 리터럴 표기법 대 JSON</target>
        </trans-unit>
        <trans-unit id="d42c3ad7cb75bb53ff9e8f6d1fa2aa0f08b3c271" translate="yes" xml:space="preserve">
          <source>Object literals</source>
          <target state="translated">객체 리터럴</target>
        </trans-unit>
        <trans-unit id="09dd9201d82ff1751e0474427ce645d44cd6061f" translate="yes" xml:space="preserve">
          <source>Object methods</source>
          <target state="translated">객체 메소드</target>
        </trans-unit>
        <trans-unit id="0c205ccc6a785cecb0e5f75020370d4618313ccb" translate="yes" xml:space="preserve">
          <source>Object property that is itself another object</source>
          <target state="translated">다른 객체 인 객체 속성</target>
        </trans-unit>
        <trans-unit id="cea32dd4664b3208132e8994e560ecbc21885560" translate="yes" xml:space="preserve">
          <source>Object references (and not the actual object): &lt;code&gt;concat&lt;/code&gt; copies object references into the new array. Both the original and new array refer to the same object. That is, if a referenced object is modified, the changes are visible to both the new and original arrays. This includes elements of array arguments that are also arrays.</source>
          <target state="translated">객체 참조 (실제 객체는 아님) : &lt;code&gt;concat&lt;/code&gt; 은 객체 참조를 새 배열로 복사합니다. 원래 배열과 새 배열은 모두 동일한 객체를 나타냅니다. 즉, 참조 된 개체가 수정되면 변경 사항이 새 배열과 원래 배열 모두에 표시됩니다. 여기에는 배열이기도 한 배열 인수의 요소가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="e82aec661987c4a687474ba3a8888549f534cfa5" translate="yes" xml:space="preserve">
          <source>Object to check if it (or its prototype chain) &lt;span id=&quot;result_box&quot;&gt;contains&lt;/span&gt; the property with specified name.</source>
          <target state="translated">지정된 이름의 속성이 &lt;span id=&quot;result_box&quot;&gt;포함되어&lt;/span&gt; 있는지 (또는 프로토 타입 체인) 확인할 개체 입니다.</target>
        </trans-unit>
        <trans-unit id="7207b7c2509b68556068ac7fd883f789d1472a6d" translate="yes" xml:space="preserve">
          <source>Object to use as &lt;code&gt;this&lt;/code&gt; when executing &lt;code&gt;callback&lt;/code&gt;.</source>
          <target state="translated">로 사용할 오브젝트 &lt;code&gt;this&lt;/code&gt; 실행할 때 &lt;code&gt;callback&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a91b9c6600e3da12d78e6ed9278ab68d6ba82947" translate="yes" xml:space="preserve">
          <source>Object to use as the first argument to the first call of the &lt;code&gt;callback&lt;/code&gt;. If no initial value is supplied, the last element in the array will be used. Calling reduce on an empty array without an initial value is an error.</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; 의 첫 번째 호출에 대한 첫 번째 인수로 사용할 객체 입니다. 초기 값이 제공되지 않으면 배열의 마지막 요소가 사용됩니다. 초기 값없이 빈 배열에서 축소를 호출하면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a79ef1be7c6b1571f5ba3ec1cb78bb0f4ac52a48" translate="yes" xml:space="preserve">
          <source>Object transformations</source>
          <target state="translated">객체 변환</target>
        </trans-unit>
        <trans-unit id="539434478ab81454acee100589f581a17aa3637e" translate="yes" xml:space="preserve">
          <source>Object type and object instance</source>
          <target state="translated">객체 유형 및 객체 인스턴스</target>
        </trans-unit>
        <trans-unit id="c57b5d877d979747255a4b2533bf17dd38044ec4" translate="yes" xml:space="preserve">
          <source>Object which the proxy virtualizes. It is often used as storage backend for the proxy. Invariants (semantics that remain unchanged) regarding object non-extensibility or non-configurable properties are verified against the target.</source>
          <target state="translated">프록시가 가상화하는 객체입니다. 프록시의 스토리지 백엔드로 자주 사용됩니다. 객체의 비 확장 성 또는 구성 불가능한 속성에 관한 변이 (변경되지 않은 의미)는 대상에 대해 검증됩니다.</target>
        </trans-unit>
        <trans-unit id="5c93e1d1a5157c01dcc014f79b1d1295cf5d2a82" translate="yes" xml:space="preserve">
          <source>Object whose iterable properties are iterated.</source>
          <target state="translated">반복 가능한 속성이 반복되는 객체입니다.</target>
        </trans-unit>
        <trans-unit id="d820fa59638feca2d1e7ce5b67237fb602afbd8c" translate="yes" xml:space="preserve">
          <source>Object whose non-Symbol enumerable properties are iterated over.</source>
          <target state="translated">심볼이 아닌 열거 가능 속성이 반복되는 객체입니다.</target>
        </trans-unit>
        <trans-unit id="1d51672345557c0f022fd737f9b7489d16b30459" translate="yes" xml:space="preserve">
          <source>Object.assign</source>
          <target state="translated">Object.assign</target>
        </trans-unit>
        <trans-unit id="afeac9832f20f4f960fcbf8efdf9a36bb14b252d" translate="yes" xml:space="preserve">
          <source>Object.create</source>
          <target state="translated">Object.create</target>
        </trans-unit>
        <trans-unit id="792a27c424ad52e5a9356f3722643e927041e20f" translate="yes" xml:space="preserve">
          <source>Object.defineProperties</source>
          <target state="translated">Object.defineProperties</target>
        </trans-unit>
        <trans-unit id="1787236ef0de7cdd99f6661cc7e12ed0cad67a57" translate="yes" xml:space="preserve">
          <source>Object.defineProperty</source>
          <target state="translated">Object.defineProperty</target>
        </trans-unit>
        <trans-unit id="23657d35b7978a1ef599d76ac96dd819a05b63f1" translate="yes" xml:space="preserve">
          <source>Object.entries</source>
          <target state="translated">Object.entries</target>
        </trans-unit>
        <trans-unit id="11300a686cd7515f24159128678600c710b75b7d" translate="yes" xml:space="preserve">
          <source>Object.freeze</source>
          <target state="translated">Object.freeze</target>
        </trans-unit>
        <trans-unit id="8bdb894c2c9b7aab893887fee7ffbe717c0a3088" translate="yes" xml:space="preserve">
          <source>Object.fromEntries</source>
          <target state="translated">Object.fromEntries</target>
        </trans-unit>
        <trans-unit id="c4498f87db08d462e0147a43191926ac2168042c" translate="yes" xml:space="preserve">
          <source>Object.getOwnPropertyDescriptor</source>
          <target state="translated">Object.getOwnPropertyDescriptor</target>
        </trans-unit>
        <trans-unit id="807e7ea84c59e8904c697c58f447e5ecc35d7f6d" translate="yes" xml:space="preserve">
          <source>Object.getOwnPropertyDescriptors</source>
          <target state="translated">Object.getOwnPropertyDescriptors</target>
        </trans-unit>
        <trans-unit id="a37c98a6f5f7ca5863f83538b43a1b90ce0f8d42" translate="yes" xml:space="preserve">
          <source>Object.getOwnPropertyNames</source>
          <target state="translated">Object.getOwnPropertyNames</target>
        </trans-unit>
        <trans-unit id="1061044277b2b1b91a3ad9fd72b96a926df8e0ad" translate="yes" xml:space="preserve">
          <source>Object.getOwnPropertySymbols</source>
          <target state="translated">Object.getOwnPropertySymbols</target>
        </trans-unit>
        <trans-unit id="11a92c8196539fdab3857b1551dea0f331c775a8" translate="yes" xml:space="preserve">
          <source>Object.getPrototypeOf</source>
          <target state="translated">Object.getPrototypeOf</target>
        </trans-unit>
        <trans-unit id="984b87d74b780b8037e041c89fdb3b9ea8b428c1" translate="yes" xml:space="preserve">
          <source>Object.is</source>
          <target state="translated">Object.is</target>
        </trans-unit>
        <trans-unit id="3e331a82ef535f984ef9183956b7286a203567e2" translate="yes" xml:space="preserve">
          <source>Object.isExtensible</source>
          <target state="translated">Object.isExtensible</target>
        </trans-unit>
        <trans-unit id="5d740eafae2d7f4c23753871edf8da6baf39e321" translate="yes" xml:space="preserve">
          <source>Object.isFrozen</source>
          <target state="translated">Object.isFrozen</target>
        </trans-unit>
        <trans-unit id="401b9e2d171902ba97c10b15298ed41024d439e5" translate="yes" xml:space="preserve">
          <source>Object.isSealed</source>
          <target state="translated">Object.isSealed</target>
        </trans-unit>
        <trans-unit id="c5a933e00dc39b7be5f3039f9caf7a7ff8b476c8" translate="yes" xml:space="preserve">
          <source>Object.keys</source>
          <target state="translated">Object.keys</target>
        </trans-unit>
        <trans-unit id="c5ae9d62247de99530000c1b502d54c119c0d70a" translate="yes" xml:space="preserve">
          <source>Object.preventExtensions</source>
          <target state="translated">Object.preventExtensions</target>
        </trans-unit>
        <trans-unit id="184a9f46e6f8df1d301d8b176559956340a32e13" translate="yes" xml:space="preserve">
          <source>Object.proto</source>
          <target state="translated">Object.proto</target>
        </trans-unit>
        <trans-unit id="e361988f8a29677e37e2253ff4367ab335d2d805" translate="yes" xml:space="preserve">
          <source>Object.prototype</source>
          <target state="translated">Object.prototype</target>
        </trans-unit>
        <trans-unit id="21670eec92055706400650389c6e16301b7d4ab7" translate="yes" xml:space="preserve">
          <source>Object.seal</source>
          <target state="translated">Object.seal</target>
        </trans-unit>
        <trans-unit id="55f5999ac0dfe119c304a066eeb503b47cf1fa90" translate="yes" xml:space="preserve">
          <source>Object.setPrototypeOf</source>
          <target state="translated">Object.setPrototypeOf</target>
        </trans-unit>
        <trans-unit id="cbb16b7daf317d430c04b08c1bf4811c56181f3a" translate="yes" xml:space="preserve">
          <source>Object.values</source>
          <target state="translated">Object.values</target>
        </trans-unit>
        <trans-unit id="c63ede0fd2f8ab23693436f3ea422a8f9968a84e" translate="yes" xml:space="preserve">
          <source>Objects and maps compared</source>
          <target state="translated">객체와 맵 비교</target>
        </trans-unit>
        <trans-unit id="68742af0b22b6e7f22112c6f31f5760699c2f283" translate="yes" xml:space="preserve">
          <source>Objects are extensible by default: they can have new properties added to them, and (in engines that support &lt;a href=&quot;proto&quot;&gt;&lt;code&gt;__proto__&lt;/code&gt;&lt;/a&gt;  their __proto__ property) can be modified. An object can be marked as non-extensible using &lt;a href=&quot;preventextensions&quot;&gt;&lt;code&gt;Object.preventExtensions()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;seal&quot;&gt;&lt;code&gt;Object.seal()&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;freeze&quot;&gt;&lt;code&gt;Object.freeze()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">객체는 기본적으로 확장 가능 : 그들은 (지원하는 엔진에서 그들에 추가 된 새 특성을 가지고 있고, 수 &lt;a href=&quot;proto&quot;&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;/a&gt; 수정할 수 있습니다 자신의 __proto__ 속성). &lt;a href=&quot;preventextensions&quot;&gt; &lt;code&gt;Object.preventExtensions()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;seal&quot;&gt; &lt;code&gt;Object.seal()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;freeze&quot;&gt; &lt;code&gt;Object.freeze()&lt;/code&gt; &lt;/a&gt; 사용하여 객체를 확장 불가능으로 표시 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b044a3aff72fdad9c2206d29b8b5f7c8c3486301" translate="yes" xml:space="preserve">
          <source>Objects can be initialized using &lt;a href=&quot;../global_objects/object&quot;&gt;&lt;code&gt;new Object()&lt;/code&gt;&lt;/a&gt;,&lt;code&gt; &lt;a href=&quot;../global_objects/object/create&quot;&gt;Object.create()&lt;/a&gt;&lt;/code&gt;, or using the &lt;em&gt;literal&lt;/em&gt; notation (&lt;em&gt;initializer&lt;/em&gt; notation). An object initializer is a comma-delimited list of zero or more pairs of property names and associated values of an object, enclosed in curly braces (&lt;code&gt;{}&lt;/code&gt;).</source>
          <target state="translated">&lt;a href=&quot;../global_objects/object&quot;&gt; &lt;code&gt;new Object()&lt;/code&gt; &lt;/a&gt; , &lt;code&gt; &lt;a href=&quot;../global_objects/object/create&quot;&gt;Object.create()&lt;/a&gt;&lt;/code&gt; 또는 &lt;em&gt;리터럴&lt;/em&gt; 표기법 ( &lt;em&gt;initializer&lt;/em&gt; notation)을 사용하여 객체를 초기화 할 수 있습니다 . 객체 이니셜 라이저는 중괄호 ( &lt;code&gt;{}&lt;/code&gt; )로 묶은 쉼표로 구분 된 0 개 이상의 속성 이름 쌍과 객체의 관련 값을 쉼표로 구분 한 목록입니다 . &lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="aa26dfa5a9bb1b6c3980956f02a24cbbf2def923" translate="yes" xml:space="preserve">
          <source>Objects can be sorted given the value of one of their properties.</source>
          <target state="translated">속성 중 하나의 값이 주어지면 개체를 정렬 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e090e0051f8f6019e7f092d7073dd1d97cf3d118" translate="yes" xml:space="preserve">
          <source>Objects like &lt;a href=&quot;../global_objects/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; will be a string after &lt;a href=&quot;../global_objects/json/parse&quot;&gt;&lt;code&gt;JSON.parse()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../global_objects/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 와 같은 객체는 &lt;a href=&quot;../global_objects/json/parse&quot;&gt; &lt;code&gt;JSON.parse()&lt;/code&gt; &lt;/a&gt; 다음의 문자열 입니다.</target>
        </trans-unit>
        <trans-unit id="2fd99ecc7e9637258048cc755dd3dc2918b6e9a2" translate="yes" xml:space="preserve">
          <source>Objects overriding &lt;code&gt;toLocaleString&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;toLocaleString&lt;/code&gt; 재정의하는 객체</target>
        </trans-unit>
        <trans-unit id="5ce0e56128a4f90000e416b34336b31c1c5b8295" translate="yes" xml:space="preserve">
          <source>Objects sealed with &lt;a href=&quot;seal&quot;&gt;&lt;code&gt;Object.seal()&lt;/code&gt;&lt;/a&gt; can have their existing properties changed. Existing properties in objects frozen with &lt;code&gt;Object.freeze()&lt;/code&gt; are made immutable.</source>
          <target state="translated">&lt;a href=&quot;seal&quot;&gt; &lt;code&gt;Object.seal()&lt;/code&gt; &lt;/a&gt; 봉인 된 객체 는 기존 속성을 변경할 수 있습니다. &lt;code&gt;Object.freeze()&lt;/code&gt; 로 고정 된 객체의 기존 속성 은 변경할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="4e7d8c7849f1648c77052055f32051f9581d8bc7" translate="yes" xml:space="preserve">
          <source>Obsolete</source>
          <target state="translated">Obsolete</target>
        </trans-unit>
        <trans-unit id="9b18d91c749126d46c3bf5e9a65d6064ff9a1b3a" translate="yes" xml:space="preserve">
          <source>Obvious errors</source>
          <target state="translated">명백한 오류</target>
        </trans-unit>
        <trans-unit id="10500e54805775e3d661be35724e87f0b1dbc4c9" translate="yes" xml:space="preserve">
          <source>Octal</source>
          <target state="translated">Octal</target>
        </trans-unit>
        <trans-unit id="90528a941045d7980fe1098bd071fe92ef94b8ba" translate="yes" xml:space="preserve">
          <source>Octal escape sequences</source>
          <target state="translated">8 진 이스케이프 시퀀스</target>
        </trans-unit>
        <trans-unit id="35db65f5024bbcd9581dc9b55989112f514902d7" translate="yes" xml:space="preserve">
          <source>Octal interpretations with no radix</source>
          <target state="translated">기수가없는 8 진 해석</target>
        </trans-unit>
        <trans-unit id="6a4fa462defa6720eb1a2e15decf18e7981dec8a" translate="yes" xml:space="preserve">
          <source>Octal literal escapes started by &quot;\&quot; and (a) digit(s), for example &lt;code&gt;\251&lt;/code&gt;</source>
          <target state="translated">8 진 리터럴 이스케이프는 &quot;\&quot;및 (a) 숫자로 시작합니다 (예 : &lt;code&gt;\251&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bf801c9640c23535858bd98be19f85836f029ce3" translate="yes" xml:space="preserve">
          <source>Octal literals and octal escape sequences are deprecated and will throw a &lt;a href=&quot;../global_objects/syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; in strict mode. With ECMAScript 2015 and later, the standardized syntax uses a leading zero followed by a lowercase or uppercase Latin letter &quot;O&quot; (&lt;code&gt;0o&lt;/code&gt; or &lt;code&gt;0O)&lt;/code&gt;.</source>
          <target state="translated">8 진 리터럴 및 8 진 이스케이프 시퀀스는 더 이상 사용되지 않으며 엄격 모드에서 &lt;a href=&quot;../global_objects/syntaxerror&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt; 를 발생시킵니다. ECMAScript 2015 이상에서 표준화 된 구문은 앞에 0을 사용하고 소문자 또는 대문자 라틴 문자 &quot;O&quot;( &lt;code&gt;0o&lt;/code&gt; 또는 &lt;code&gt;0O)&lt;/code&gt; 를 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="a9d3b81b66cc2bee52e203e0da8a810f05c16898" translate="yes" xml:space="preserve">
          <source>Octal number syntax uses a leading zero followed by a lowercase or uppercase Latin letter &quot;O&quot; (&lt;code&gt;0o&lt;/code&gt; or &lt;code&gt;0O)&lt;/code&gt;. Because this syntax is new in ECMAScript 2015, see the browser compatibility table, below. If the digits after the &lt;code&gt;0o&lt;/code&gt; are outside the range (01234567), the following &lt;code&gt;&lt;a href=&quot;global_objects/syntaxerror&quot;&gt;SyntaxError&lt;/a&gt;&lt;/code&gt; is thrown: &quot;Missing octal digits after 0o&quot;.</source>
          <target state="translated">8 진수 구문은 앞에 0을 사용하고 소문자 또는 대문자 라틴 문자 &quot;O&quot;( &lt;code&gt;0o&lt;/code&gt; 또는 &lt;code&gt;0O)&lt;/code&gt; 를 사용 합니다. 이 구문은 ECMAScript 2015의 새로운 기능이므로 아래의 브라우저 호환성 표를 참조하십시오. &lt;code&gt;0o&lt;/code&gt; 뒤의 숫자 가 범위 (01234567)를 벗어나면 &quot;0o 뒤의 8 진수 누락&quot; &lt;code&gt;&lt;a href=&quot;global_objects/syntaxerror&quot;&gt;SyntaxError&lt;/a&gt;&lt;/code&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f7b0ebdb75c3b76f9782d78b58500613cd134b9d" translate="yes" xml:space="preserve">
          <source>Octal numeric literals (&lt;code&gt;0o&lt;/code&gt;)</source>
          <target state="translated">8 진 숫자 리터럴 ( &lt;code&gt;0o&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="1af767caeb567e9b51bd28eba20513fff98efb12" translate="yes" xml:space="preserve">
          <source>Octal syntax &lt;code&gt;var n = 023;&lt;/code&gt;</source>
          <target state="translated">8 진법 구문 &lt;code&gt;var n = 023;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fec0e52243a8aacabf2009b1d14ed746829c73a6" translate="yes" xml:space="preserve">
          <source>Oftentimes, indenting differently or double checking indentation helps to spot these errors.</source>
          <target state="translated">들여 쓰기를 다르게 들여 쓰기하거나 들여 쓰기를 점검하면 종종 이러한 오류를 발견하는 데 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="6c9a14e3dadfd26458e25523ea19370fbbe31c25" translate="yes" xml:space="preserve">
          <source>Oftentimes, there is a missing comma in your object initializer code:</source>
          <target state="translated">종종 객체 이니셜 라이저 코드에 누락 된 쉼표가 있습니다.</target>
        </trans-unit>
        <trans-unit id="2cb70f9c6d8e5eded9a4d44e5ec42d0832863800" translate="yes" xml:space="preserve">
          <source>Oftentimes, there is a missing curly bracket in your function code:</source>
          <target state="translated">종종 함수 코드에 누락 된 중괄호가 있습니다.</target>
        </trans-unit>
        <trans-unit id="abd4ce6e78272423121b045b9bd9d040305af2cb" translate="yes" xml:space="preserve">
          <source>Ok, now it's pretty clear why changing of the constructor can be useful.</source>
          <target state="translated">이제 생성자의 변경이 유용한 이유가 분명합니다.</target>
        </trans-unit>
        <trans-unit id="c039c3bb5698ca9418d734906ec806e00ff643ec" translate="yes" xml:space="preserve">
          <source>Old-style method that returns the value contained inside the global variable.</source>
          <target state="translated">전역 변수에 포함 된 값을 반환하는 구식 메서드입니다.</target>
        </trans-unit>
        <trans-unit id="adef1ddbafa19516af05ed7d1c5464a4a84bbc63" translate="yes" xml:space="preserve">
          <source>Old: &lt;code&gt;[()=&amp;gt;x for (x of [0, 1, 2])][1]() // 2&lt;/code&gt;</source>
          <target state="translated">Old : &lt;code&gt;[()=&amp;gt;x for (x of [0, 1, 2])][1]() // 2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="01e1bfa5e54b3cbd699d11001d32a99cea15bd41" translate="yes" xml:space="preserve">
          <source>Old: &lt;code&gt;[i * 2 for (i of numbers)]&lt;/code&gt;</source>
          <target state="translated">Old : &lt;code&gt;[i * 2 for (i of numbers)]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5f3cf2460c09c5409d739ecc8741dd670c9e980f" translate="yes" xml:space="preserve">
          <source>Older Firefox versions implement an older version of the generators proposal. In the older version, generators were defined using a regular &lt;code&gt;function&lt;/code&gt; keyword (without an asterisk) among other differences. See &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/Legacy_generator_function&quot;&gt;Legacy generator function &lt;/a&gt;for further information.</source>
          <target state="translated">이전 Firefox 버전은 이전 버전의 생성기 제안을 구현합니다. 이전 버전에서 생성기는 다른 차이점 중에서 일반 &lt;code&gt;function&lt;/code&gt; 키워드 (별표없이)를 사용하여 정의되었습니다 . 자세한 내용은 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/Legacy_generator_function&quot;&gt;레거시 생성기 기능&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8c1ddb115381b88b95fe615710e6984ac0dd8475" translate="yes" xml:space="preserve">
          <source>Omit the trailing commas to parse the JSON correctly:</source>
          <target state="translated">JSON을 올바르게 구문 분석하려면 후행 쉼표를 생략하십시오.</target>
        </trans-unit>
        <trans-unit id="6f5ee5326703ea0acadab67fded2f70da772e810" translate="yes" xml:space="preserve">
          <source>On IE 6, 7, and 8 a lot of host objects are objects and not functions. For example:</source>
          <target state="translated">IE 6, 7, 8에서 많은 호스트 객체는 객체이며 기능이 아닙니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="19ef483a3b402f3e9cf904fc746b4245571f1c27" translate="yes" xml:space="preserve">
          <source>On each iteration a value of a different property is assigned to &lt;em&gt;variable&lt;/em&gt;.</source>
          <target state="translated">각 반복마다 다른 속성 값이 &lt;em&gt;variable에&lt;/em&gt; 할당됩니다 .</target>
        </trans-unit>
        <trans-unit id="16051ce58a5eaf6e90e2572cd4b9bba9901538b9" translate="yes" xml:space="preserve">
          <source>On the other hand the following is illegal because it's an Identifier, which is an &lt;code&gt;IdentifierName&lt;/code&gt; without the reserved words. Identifiers are used for &lt;code&gt;FunctionDeclaration,&amp;nbsp;FunctionExpression, VariableDeclaration&lt;/code&gt; and so on. &lt;code&gt;IdentifierNames &lt;/code&gt;are used for&lt;code&gt; MemberExpression,&amp;nbsp;CallExpression&lt;/code&gt; and so on.</source>
          <target state="translated">반면에 다음은 예약어 가없는 &lt;code&gt;IdentifierName&lt;/code&gt; 인 Identifier이기 때문에 불법 입니다. 식별자는 &lt;code&gt;FunctionDeclaration,&amp;nbsp;FunctionExpression, VariableDeclaration&lt;/code&gt; 등에 사용됩니다. &lt;code&gt;IdentifierNames &lt;/code&gt; 는 &lt;code&gt; MemberExpression,&amp;nbsp;CallExpression&lt;/code&gt; 등에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9935fb8939730fb09b5ab3d58a8b86982428a7e8" translate="yes" xml:space="preserve">
          <source>On the other hand, the variable the function is assigned to is limited only by its scope, which is guaranteed to include the scope in which the function is declared.</source>
          <target state="translated">반면, 함수가 할당 된 변수는 해당 범위에 의해서만 제한되며, 함수가 선언 된 범위를 포함하도록 보장됩니다.</target>
        </trans-unit>
        <trans-unit id="3dbc34eb4553fabed01be09202a41f4b8667aec5" translate="yes" xml:space="preserve">
          <source>Once a &lt;a href=&quot;../promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; is fulfilled or rejected, the respective handler function (&lt;code&gt;onFulfilled&lt;/code&gt; or &lt;code&gt;onRejected&lt;/code&gt;) will be called &lt;strong&gt;asynchronously&lt;/strong&gt; (scheduled in the current thread loop). The behavior of the handler function follows a specific set of rules. If a handler function:</source>
          <target state="translated">한번 &lt;a href=&quot;../promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt; 성취하거나 거부, 각 핸들러 함수 ( &lt;code&gt;onFulfilled&lt;/code&gt; 또는 &lt;code&gt;onRejected&lt;/code&gt; 이 )라고한다 &lt;strong&gt;비동기&lt;/strong&gt; (현재 스레드 루프 예정). 핸들러 함수의 동작은 특정 규칙 세트를 따릅니다. 핸들러 함수 인 경우 :</target>
        </trans-unit>
        <trans-unit id="2ac13fec58fdbd2f4f000683032bc0eb067b2238" translate="yes" xml:space="preserve">
          <source>Once a generator function is defined, it can be used by constructing an iterator as shown.</source>
          <target state="translated">생성기 함수가 정의되면 그림과 같이 반복기를 구성하여 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="550aba73272657a8916d7a002e494b38a959b72a" translate="yes" xml:space="preserve">
          <source>Once paused on a &lt;code&gt;yield&lt;/code&gt; expression, the generator's code execution remains paused until the generator's &lt;code&gt;next()&lt;/code&gt; method is called. Each time the generator's &lt;code&gt;next()&lt;/code&gt; method is called, the generator resumes execution and runs until it reaches one of the following:</source>
          <target state="translated">A의 일시 정지되면 &lt;code&gt;yield&lt;/code&gt; 식 발전기의 때까지, 발전기의 코드 실행 남아 일시 정지 &lt;code&gt;next()&lt;/code&gt; 메소드가 호출된다. 생성자의 &lt;code&gt;next()&lt;/code&gt; 메소드가 호출 될 때마다 생성기가 실행을 재개하고 다음 중 하나에 도달 할 때까지 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="1f86b4d6f4312f8c40b57e62ba63c0f13fb0d1ff" translate="yes" xml:space="preserve">
          <source>Once you have created an object, you might want to read or change them. Object properties can be accessed by using the dot notation or the bracket notation. See &lt;a href=&quot;property_accessors&quot;&gt;property accessors&lt;/a&gt; for detailed information.</source>
          <target state="translated">객체를 만든 후에는 읽거나 변경할 수 있습니다. 도트 표기법 또는 대괄호 표기법을 사용하여 객체 속성에 액세스 할 수 있습니다. 자세한 내용은 &lt;a href=&quot;property_accessors&quot;&gt;속성 접근&lt;/a&gt; 자를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="bd0c7a905b0c4a2d1b0e641e2e877fcded7ee9d6" translate="yes" xml:space="preserve">
          <source>One alternative output of the map method being called with parseInt as a parameter runs as follows:</source>
          <target state="translated">parseInt를 매개 변수로 사용하여 호출되는 맵 메소드의 대체 출력은 다음과 같이 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="3dbd786e01c29d58131b1e22872bec4bd7cd53c0" translate="yes" xml:space="preserve">
          <source>One can think of an object as an &lt;em&gt;associative array&lt;/em&gt; (a.k.a. &lt;em&gt;map&lt;/em&gt;, &lt;em&gt;dictionary&lt;/em&gt;, &lt;em&gt;hash&lt;/em&gt;, &lt;em&gt;lookup table&lt;/em&gt;). The &lt;em&gt;keys&lt;/em&gt; in this array are the names of the object's properties. It's typical when speaking of an object's properties to make a distinction between properties and methods. However, the property/method distinction is little more than a convention. A method is simply a property that can be called, for example if it has a reference to a &lt;a href=&quot;../functions&quot;&gt;Function&lt;/a&gt; instance as its value.</source>
          <target state="translated">객체를 &lt;em&gt;연관 배열&lt;/em&gt; (일명 &lt;em&gt;map&lt;/em&gt; , &lt;em&gt;dictionary&lt;/em&gt; , &lt;em&gt;hash&lt;/em&gt; , &lt;em&gt;lookup table&lt;/em&gt; ) 로 생각할 수 있습니다 . 이 배열 의 &lt;em&gt;키&lt;/em&gt; 는 객체 속성의 이름입니다. 속성과 메서드를 구별하기 위해 객체의 속성을 말할 때 일반적입니다. 그러나 속성 / 방법의 구별은 관습에 지나지 않습니다. 메소드는 단순히 &lt;a href=&quot;../functions&quot;&gt;함수&lt;/a&gt; 인스턴스에 대한 참조를 값으로 갖는 경우와 같이 호출 할 수있는 특성입니다 .</target>
        </trans-unit>
        <trans-unit id="0ed9ce8fd54a6264f3d0b48d15ebf9af37d4a049" translate="yes" xml:space="preserve">
          <source>One common usage is to handle a value that may be &lt;code&gt;null&lt;/code&gt;:</source>
          <target state="translated">일반적인 사용법 중 하나는 &lt;code&gt;null&lt;/code&gt; 일 수있는 값을 처리하는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="62d6c14ca58fa50f887336c01c6e3ad10d3a0498" translate="yes" xml:space="preserve">
          <source>One may also extend traditional function-based &quot;classes&quot;:</source>
          <target state="translated">전통적인 함수 기반 &quot;클래스&quot;를 확장 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="ba3c945b3416a5ad49f757e8952aad4347c1f9ea" translate="yes" xml:space="preserve">
          <source>One of &lt;code&gt;&quot;NFC&quot;&lt;/code&gt;, &lt;code&gt;&quot;NFD&quot;&lt;/code&gt;, &lt;code&gt;&quot;NFKC&quot;&lt;/code&gt;, or &lt;code&gt;&quot;NFKD&quot;&lt;/code&gt;, specifying the Unicode Normalization Form. If omitted or &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;&quot;NFC&quot;&lt;/code&gt; is used.</source>
          <target state="translated">유니 코드 정규화 양식을 지정하는 &lt;code&gt;&quot;NFC&quot;&lt;/code&gt; , &lt;code&gt;&quot;NFD&quot;&lt;/code&gt; , &lt;code&gt;&quot;NFKC&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;NFKD&quot;&lt;/code&gt; 중 하나입니다 . 생략되거나 &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; 경우 &lt;code&gt;&quot;NFC&quot;&lt;/code&gt; 가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="c6d946fd54d85f7477222819089d81618ca563bf" translate="yes" xml:space="preserve">
          <source>One of the benefits of creating a named function expression is that in case we encountered an error, the stack trace will contain the name of the function, making it easier to find the origin of the error.</source>
          <target state="translated">명명 된 함수 표현식을 작성하면 얻을 수있는 이점 중 하나는 오류가 발생한 경우 스택 추적에 함수 이름이 포함되어 오류의 원인을 쉽게 찾을 수 있다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="0b464cbca3d711eae35183961c376991af3e95f1" translate="yes" xml:space="preserve">
          <source>One property is supported by all language sensitive constructors and functions: The &lt;code&gt;localeMatcher&lt;/code&gt; property, whose value must be a string &lt;code&gt;&quot;lookup&quot;&lt;/code&gt; or &lt;code&gt;&quot;best fit&quot;&lt;/code&gt; and which selects one of the locale matching algorithms described above.</source>
          <target state="translated">모든 언어 구분 생성자 및 함수는 하나의 특성을 지원합니다. &lt;code&gt;localeMatcher&lt;/code&gt; 특성은 값이 문자열 &lt;code&gt;&quot;lookup&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;best fit&quot;&lt;/code&gt; 이어야하며 위에서 설명한 로케일 일치 알고리즘 중 하나를 선택합니다.</target>
        </trans-unit>
        <trans-unit id="17d274ecef3f92c8ef2accd00a8ddbaaeb99c22c" translate="yes" xml:space="preserve">
          <source>One reason to use &lt;a href=&quot;../operators/typeof&quot;&gt;&lt;code&gt;typeof&lt;/code&gt;&lt;/a&gt; is that it does not throw an error if the variable has not been declared.</source>
          <target state="translated">&lt;a href=&quot;../operators/typeof&quot;&gt; &lt;code&gt;typeof&lt;/code&gt; &lt;/a&gt; 를 사용하는 한 가지 이유 는 변수가 선언되지 않은 경우 오류가 발생하지 않기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="0040acfc492ad4431afadda8b534706f1991a354" translate="yes" xml:space="preserve">
          <source>One way is to actually provide an &lt;code&gt;initialValue&lt;/code&gt; as the neutral element of the operator, such as 0 for the addition, 1 for a multiplication, or an empty string for a concatenation.</source>
          <target state="translated">한 가지 방법은 실제로 추가의 경우 0, 곱하기의 경우 1 또는 연결의 경우 빈 문자열과 같이 연산자의 중립 요소로 &lt;code&gt;initialValue&lt;/code&gt; 를 제공하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="dae4da1ccd270f4ab3b0706248815f16a240220a" translate="yes" xml:space="preserve">
          <source>One way to define a class is using a &lt;strong&gt;class declaration&lt;/strong&gt;. To declare a class, you use the &lt;code&gt;class&lt;/code&gt; keyword with the name of the class (&quot;Rectangle&quot; here).</source>
          <target state="translated">클래스를 정의하는 한 가지 방법은 &lt;strong&gt;클래스 선언을&lt;/strong&gt; 사용하는 것 입니다. 클래스를 선언하려면 클래스 이름과 함께 &lt;code&gt;class&lt;/code&gt; 키워드 를 사용하십시오 (여기서는 &quot;Rectangle&quot;).</target>
        </trans-unit>
        <trans-unit id="b88714da31d7ed1f6136f21ef409a7c1254e2b6a" translate="yes" xml:space="preserve">
          <source>Only Internet Explorer 9 and later, and Firefox 23 and later, appear to fully and correctly implement redefinition of the &lt;a href=&quot;../array/length&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt; property of arrays. For now, don't rely on redefining the &lt;a href=&quot;../array/length&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt; property of an array to either work, or to work in a particular manner. And even when you &lt;em&gt;can&lt;/em&gt; rely on it, &lt;a href=&quot;http://whereswalden.com/2013/08/05/new-in-firefox-23-the-length-property-of-an-array-can-be-made-non-writable-but-you-shouldnt-do-it/&quot;&gt;there's really no good reason to do so&lt;/a&gt;.</source>
          <target state="translated">Internet Explorer 9 이상과 Firefox 23 이상 만 배열 의 &lt;a href=&quot;../array/length&quot;&gt; &lt;code&gt;length&lt;/code&gt; &lt;/a&gt; 속성 재정의를 완전하고 정확하게 구현하는 것으로 보입니다 . 현재 로서는 배열 의 &lt;a href=&quot;../array/length&quot;&gt; &lt;code&gt;length&lt;/code&gt; &lt;/a&gt; 속성 을 재정 의하여 작동하거나 특정 방식으로 작동 하지 마십시오 . 그리고 당신 &lt;em&gt;이&lt;/em&gt; 그것에 의존 할 &lt;em&gt;수&lt;/em&gt; 있다고해도 그렇게 &lt;em&gt;할 &lt;/em&gt;&lt;a href=&quot;http://whereswalden.com/2013/08/05/new-in-firefox-23-the-length-property-of-an-array-can-be-made-non-writable-but-you-shouldnt-do-it/&quot;&gt;이유가 없습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="daa4ff0e795013b6417daf135041f5e37f432a5e" translate="yes" xml:space="preserve">
          <source>Only a single prototype mutation is permitted in an object literal: multiple prototype mutations are a syntax error.</source>
          <target state="translated">객체 리터럴에는 단일 프로토 타입 돌연변이 만 허용됩니다. 여러 프로토 타입 돌연변이는 구문 오류입니다.</target>
        </trans-unit>
        <trans-unit id="dbf66284df8e9f102bc1c0a99f4341d7a62b817d" translate="yes" xml:space="preserve">
          <source>Only for iterables</source>
          <target state="translated">반복 가능</target>
        </trans-unit>
        <trans-unit id="f5b5aaf5822ba205a7787ea0676a6de89e4ee051" translate="yes" xml:space="preserve">
          <source>Only mentioned as reserved word.</source>
          <target state="translated">예약어로만 언급됩니다.</target>
        </trans-unit>
        <trans-unit id="e2934cecb3d6c0649ebb041d194444a024aa75a6" translate="yes" xml:space="preserve">
          <source>Only one of the following two groups of properties is included:</source>
          <target state="translated">다음 두 속성 그룹 중 하나만 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="4c79871de6b6f31ab9002b599cbecc7040d27c3d" translate="yes" xml:space="preserve">
          <source>Only the following Unicode code points are treated as line terminators in ECMAScript, other line breaking characters are treated as white space (for example, Next Line, NEL, U+0085 is considered as white space).</source>
          <target state="translated">ECMAScript에서는 다음 유니 코드 코드 포인트 만 줄 종결 자로 처리되고 다른 줄 바꿈 문자는 공백으로 처리됩니다 (예 : Next Line, NEL, U + 0085는 공백으로 간주 됨).</target>
        </trans-unit>
        <trans-unit id="02d38a5bfc02e73c666b38fdc0238e4670062fd9" translate="yes" xml:space="preserve">
          <source>Only when &lt;code&gt;f&lt;/code&gt; is called is &lt;code&gt;x&lt;/code&gt; either found or not, and if found, either in &lt;code&gt;o&lt;/code&gt; or (if no such property exists) in &lt;code&gt;f&lt;/code&gt;'s activation object, where &lt;code&gt;x&lt;/code&gt; names the first formal argument. If you forget to define &lt;code&gt;x&lt;/code&gt; in the object you pass as the second argument, or if there's some similar bug or confusion, you won't get an error -- just unexpected results.</source>
          <target state="translated">&lt;code&gt;f&lt;/code&gt; 가 호출 된 경우에만 &lt;code&gt;x&lt;/code&gt; 가 발견되거나 발견되지 않은 경우, &lt;code&gt;f&lt;/code&gt; 의 활성화 객체 에서 &lt;code&gt;o&lt;/code&gt; 또는 (이러한 속성이 존재하지 않는 경우) &lt;code&gt;x&lt;/code&gt; 는 첫 번째 형식 인수를 나타냅니다. 객체에서 &lt;code&gt;x&lt;/code&gt; 를 정의하는 것을 잊어 버린 경우 두 번째 인수로 전달하거나 비슷한 버그 나 혼란이 있으면 예기치 않은 결과가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="19c9c9ed8477a3a275bcf0fa3f27c69151b58b7d" translate="yes" xml:space="preserve">
          <source>Opera</source>
          <target state="translated">Opera</target>
        </trans-unit>
        <trans-unit id="71e00d3376fba679bd68ca4280fa7959a01200c7" translate="yes" xml:space="preserve">
          <source>Opera Android</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4497b69b3e58a8b8c4ab04b8430dd1bf6b9df545" translate="yes" xml:space="preserve">
          <source>Opera for Android</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a11858bb8602e6bcb8900754f254a66e2609ccc" translate="yes" xml:space="preserve">
          <source>Opera-specific notes</source>
          <target state="translated">오페라 관련 노트</target>
        </trans-unit>
        <trans-unit id="d5e812022431eae1cbb45efa2a44337aa2acc1b0" translate="yes" xml:space="preserve">
          <source>Operations to shift all bits of the operand.</source>
          <target state="translated">피연산자의 모든 비트를 이동시키는 연산.</target>
        </trans-unit>
        <trans-unit id="d0e687b079fb70f2208d1f8d2c75d64d74925496" translate="yes" xml:space="preserve">
          <source>Operator</source>
          <target state="translated">Operator</target>
        </trans-unit>
        <trans-unit id="5ab53f8310f5b3d7c33f42f382419ed45034e50e" translate="yes" xml:space="preserve">
          <source>Operator Precedence</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="685048571a4f4db99cb190b311def264fc71eb0e" translate="yes" xml:space="preserve">
          <source>Operator precedence</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8294e4068997b53d5de8f5b8685132a9198009c6" translate="yes" xml:space="preserve">
          <source>Operator precedence determines the way in which operators are parsed with respect to each other. Operators with higher precedence become the operands of operators with lower precedence.</source>
          <target state="translated">연산자 우선 순위는 연산자가 서로에 대해 구문 분석되는 방식을 결정합니다. 우선 순위가 높은 연산자는 우선 순위가 낮은 연산자의 피연산자가됩니다.</target>
        </trans-unit>
        <trans-unit id="d68df45459b8bbc212c3255fae17cdd9e9cd91e6" translate="yes" xml:space="preserve">
          <source>Operator type</source>
          <target state="translated">운영자 유형</target>
        </trans-unit>
        <trans-unit id="e90414358dbfff0a68e4eb5d68a16978cf197d5a" translate="yes" xml:space="preserve">
          <source>Operators</source>
          <target state="translated">Operators</target>
        </trans-unit>
        <trans-unit id="aec817b78be32e9eb6a28b10c01a44463709ad54" translate="yes" xml:space="preserve">
          <source>Optional &lt;code&gt;for&lt;/code&gt; expressions</source>
          <target state="translated">옵션 &lt;code&gt;for&lt;/code&gt; 표현</target>
        </trans-unit>
        <trans-unit id="322f4230bd8561e436cf75ddcff2ba65278091bb" translate="yes" xml:space="preserve">
          <source>Optional &lt;code&gt;locales&lt;/code&gt; parameter</source>
          <target state="translated">선택적 &lt;code&gt;locales&lt;/code&gt; 매개 변수</target>
        </trans-unit>
        <trans-unit id="ad4da8ecdac8ce3a9ddac5dc8d5f1d4f08942264" translate="yes" xml:space="preserve">
          <source>Optional &lt;code&gt;options&lt;/code&gt; parameter</source>
          <target state="translated">선택적 &lt;code&gt;options&lt;/code&gt; 매개 변수</target>
        </trans-unit>
        <trans-unit id="1dbd0406de4381bd345e9f66bc0ee5a7981c67df" translate="yes" xml:space="preserve">
          <source>Optional Indicates whether the 16-bit int is stored in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;little- or big-endian&lt;/a&gt; format. If false or undefined, a big-endian value is read.</source>
          <target state="translated">선택 사항 16 비트 int가 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;리틀 엔디안&lt;/a&gt; 형식 또는 빅 엔디안 형식으로 저장되는지 여부를 나타냅니다 . false이거나 정의되지 않은 경우 빅 엔디안 값을 읽습니다.</target>
        </trans-unit>
        <trans-unit id="dd2778311b39a11505037f13b3d77f24f8a4fe57" translate="yes" xml:space="preserve">
          <source>Optional Indicates whether the 16-bit int is stored in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;little- or big-endian&lt;/a&gt; format. If false or undefined, a big-endian value is written.</source>
          <target state="translated">선택 사항 16 비트 int가 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;리틀 엔디안&lt;/a&gt; 형식 또는 빅 엔디안 형식으로 저장되는지 여부를 나타냅니다 . false이거나 정의되지 않은 경우 빅 엔디안 값이 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="33ce32a3acc8aa0f7e4c410f6748a44b1a4d1322" translate="yes" xml:space="preserve">
          <source>Optional Indicates whether the 32-bit float is stored in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;little- or big-endian&lt;/a&gt; format. If false or undefined, a big-endian value is read.</source>
          <target state="translated">선택 사항 32 비트 부동 소수점이 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;리틀 엔디안&lt;/a&gt; 형식 인지 빅 엔디안 형식 인지 저장 됩니다. false이거나 정의되지 않은 경우 빅 엔디안 값을 읽습니다.</target>
        </trans-unit>
        <trans-unit id="ce088e1b9aa45236caffed3077f9fc2964cbd94e" translate="yes" xml:space="preserve">
          <source>Optional Indicates whether the 32-bit float is stored in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;little- or big-endian&lt;/a&gt; format. If false or undefined, a big-endian value is written.</source>
          <target state="translated">선택 사항 32 비트 부동 소수점이 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;리틀 엔디안&lt;/a&gt; 형식 인지 빅 엔디안 형식 인지 저장 됩니다. false이거나 정의되지 않은 경우 빅 엔디안 값이 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="fea6fdc8b1a774861c2807d66d6081130e6aee95" translate="yes" xml:space="preserve">
          <source>Optional Indicates whether the 32-bit int is stored in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;little- or big-endian&lt;/a&gt; format. If false or undefined, a big-endian value is read.</source>
          <target state="translated">선택 사항 32 비트 int가 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;리틀 엔디안&lt;/a&gt; 형식 또는 빅 엔디안 형식으로 저장되는지 여부를 나타냅니다 . false이거나 정의되지 않은 경우 빅 엔디안 값을 읽습니다.</target>
        </trans-unit>
        <trans-unit id="61a13b27e60244cb6ac6d07fa8a9fa8196bd8e7b" translate="yes" xml:space="preserve">
          <source>Optional Indicates whether the 32-bit int is stored in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;little- or big-endian&lt;/a&gt; format. If false or undefined, a big-endian value is written.</source>
          <target state="translated">선택 사항 32 비트 int가 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;리틀 엔디안&lt;/a&gt; 형식 또는 빅 엔디안 형식으로 저장되는지 여부를 나타냅니다 . false이거나 정의되지 않은 경우 빅 엔디안 값이 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="ba1cc0b145bf652ff3b9c289bc9bf1937128ebac" translate="yes" xml:space="preserve">
          <source>Optional Indicates whether the 64-bit float is stored in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;little- or big-endian&lt;/a&gt; format. If false or undefined, a big-endian value is read.</source>
          <target state="translated">선택 사항 64 비트 부동 소수점이 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;리틀 엔디안&lt;/a&gt; 형식 인지 빅 엔디안 형식 인지 저장 합니다. false이거나 정의되지 않은 경우 빅 엔디안 값을 읽습니다.</target>
        </trans-unit>
        <trans-unit id="c5c0e4455c30fc5f637331254f29994c27b676d2" translate="yes" xml:space="preserve">
          <source>Optional Indicates whether the 64-bit float is stored in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;little- or big-endian&lt;/a&gt; format. If false or undefined, a big-endian value is written.</source>
          <target state="translated">선택 사항 64 비트 부동 소수점이 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Endianness&quot;&gt;리틀 엔디안&lt;/a&gt; 형식 인지 빅 엔디안 형식 인지 저장 합니다. false이거나 정의되지 않은 경우 빅 엔디안 값이 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="9d270afcb3e308aae58e25f9a980e7961ac5e076" translate="yes" xml:space="preserve">
          <source>Optional catch binding</source>
          <target state="translated">선택적 캐치 바인딩</target>
        </trans-unit>
        <trans-unit id="459ad54074494479350419eda5692e1f0d64b9f0" translate="yes" xml:space="preserve">
          <source>Optional, string. A description of the symbol which can be used for debugging but not to access the symbol itself.</source>
          <target state="translated">선택 사항, 문자열. 디버깅에 사용할 수 있지만 심볼 자체에는 액세스 할 수없는 심볼에 대한 설명입니다.</target>
        </trans-unit>
        <trans-unit id="15927a99544f12526f1a2f88d22759a81c345de9" translate="yes" xml:space="preserve">
          <source>Optional. A human-readable description of the error.</source>
          <target state="translated">선택 과목. 사람이 읽을 수있는 오류 설명.</target>
        </trans-unit>
        <trans-unit id="5a8f7fef26a2df202125e25c73ef64e1164aefeb" translate="yes" xml:space="preserve">
          <source>Optional. A number between 0 and 999, representing the milliseconds.</source>
          <target state="translated">선택 과목. 밀리 초를 나타내는 0에서 999 사이의 숫자입니다.</target>
        </trans-unit>
        <trans-unit id="f7e907c71f7ff4e0d638b8ffecd64a691a3619b7" translate="yes" xml:space="preserve">
          <source>Optional. A number between 0 and 999, representing the milliseconds. If you specify the &lt;code&gt;msValue&lt;/code&gt; parameter, you must also specify the &lt;code&gt;minutesValue&lt;/code&gt; and &lt;code&gt;secondsValue&lt;/code&gt;.</source>
          <target state="translated">선택 과목. 밀리 초를 나타내는 0에서 999 사이의 숫자입니다. 당신이 지정하는 경우 &lt;code&gt;msValue&lt;/code&gt; 의 매개 변수를, 당신은 또한 지정해야합니다 &lt;code&gt;minutesValue&lt;/code&gt; 및 &lt;code&gt;secondsValue&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="884122e141d18eb5c16663b5cbee4354e105cca1" translate="yes" xml:space="preserve">
          <source>Optional. A string with a BCP 47 language tag, or an array of such strings. For the general form and interpretation of the &lt;code&gt;locales&lt;/code&gt; argument, see the &lt;a href=&quot;../intl#Locale_identification_and_negotiation&quot;&gt;Intl page&lt;/a&gt;. The following Unicode extension key is allowed:</source>
          <target state="translated">선택 과목. BCP 47 언어 태그가있는 문자열 또는 이러한 문자열의 배열 &lt;code&gt;locales&lt;/code&gt; 인수 의 일반적인 형식과 해석에 대해서는 &lt;a href=&quot;../intl#Locale_identification_and_negotiation&quot;&gt;Intl 페이지를 참조하십시오&lt;/a&gt; . 다음과 같은 유니 코드 확장 키가 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="a56610b39e63b2c43031839b11afc1d9e7ead719" translate="yes" xml:space="preserve">
          <source>Optional. A string with a BCP 47 language tag, or an array of such strings. For the general form and interpretation of the &lt;code&gt;locales&lt;/code&gt; argument, see the &lt;a href=&quot;../intl#Locale_identification_and_negotiation&quot;&gt;Intl page&lt;/a&gt;. The following Unicode extension keys are allowed:</source>
          <target state="translated">선택 과목. BCP 47 언어 태그가있는 문자열 또는 이러한 문자열의 배열 &lt;code&gt;locales&lt;/code&gt; 인수 의 일반적인 형식과 해석에 대해서는 &lt;a href=&quot;../intl#Locale_identification_and_negotiation&quot;&gt;Intl 페이지를 참조하십시오&lt;/a&gt; . 다음과 같은 유니 코드 확장 키가 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="a54cfda896e3a729ccfcda80487629955af807ba" translate="yes" xml:space="preserve">
          <source>Optional. A string with a BCP 47 language tag, or an array of such strings. For the general form and interpretation of the &lt;code&gt;locales&lt;/code&gt; argument, see the &lt;a href=&quot;intl#Locale_identification_and_negotiation&quot;&gt;Intl page&lt;/a&gt;.</source>
          <target state="translated">선택 과목. BCP 47 언어 태그가있는 문자열 또는 이러한 문자열의 배열 &lt;code&gt;locales&lt;/code&gt; 인수 의 일반적인 형식과 해석에 대해서는 &lt;a href=&quot;intl#Locale_identification_and_negotiation&quot;&gt;Intl 페이지를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bed3283bfc52ab0a193edb33ca67e508e0e1927d" translate="yes" xml:space="preserve">
          <source>Optional. A string with a BCP 47 language tag, or an array of such strings. For the general form and interpretation of the &lt;code&gt;locales&lt;/code&gt; argument, see the &lt;a href=&quot;intl#Locale_identification_and_negotiation&quot;&gt;Intl page&lt;/a&gt;. The following Unicode extension key is allowed:</source>
          <target state="translated">선택 과목. BCP 47 언어 태그가있는 문자열 또는 이러한 문자열의 배열 &lt;code&gt;locales&lt;/code&gt; 인수 의 일반적인 형식과 해석에 대해서는 &lt;a href=&quot;intl#Locale_identification_and_negotiation&quot;&gt;Intl 페이지를 참조하십시오&lt;/a&gt; . 다음과 같은 유니 코드 확장 키가 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="30cd0a723f60f5d5a5fc5bbb0cb3eea20cee69c3" translate="yes" xml:space="preserve">
          <source>Optional. A string with a BCP 47 language tag, or an array of such strings. For the general form and interpretation of the &lt;code&gt;locales&lt;/code&gt; argument, see the &lt;a href=&quot;intl#Locale_identification_and_negotiation&quot;&gt;Intl page&lt;/a&gt;. The following Unicode extension keys are allowed:</source>
          <target state="translated">선택 과목. BCP 47 언어 태그가있는 문자열 또는 이러한 문자열의 배열 &lt;code&gt;locales&lt;/code&gt; 인수 의 일반적인 형식과 해석에 대해서는 &lt;a href=&quot;intl#Locale_identification_and_negotiation&quot;&gt;Intl 페이지를 참조하십시오&lt;/a&gt; . 다음과 같은 유니 코드 확장 키가 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="734f22fdf2fbc41f4960c118753cd751e06f0c18" translate="yes" xml:space="preserve">
          <source>Optional. An array-like object, specifying the arguments with which &lt;em&gt;&lt;code&gt;func&lt;/code&gt;&lt;/em&gt; should be called, or &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; if no arguments should be provided to the function. Starting with ECMAScript 5 these arguments can be a generic array-like object instead of an array. See below for &lt;a href=&quot;#Browser_compatibility&quot;&gt;browser compatibility&lt;/a&gt; information.</source>
          <target state="translated">선택 과목. &lt;em&gt; &lt;code&gt;func&lt;/code&gt; &lt;/em&gt; 를 호출 할 인수를 지정하는 배열과 같은 객체 . 함수에 인수를 제공하지 않으면 &lt;a href=&quot;../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; 입니다. ECMAScript 5부터는 이러한 인수가 배열 대신 일반 배열과 유사한 객체 일 수 있습니다. &lt;a href=&quot;#Browser_compatibility&quot;&gt;브라우저 호환성&lt;/a&gt; 정보는 아래를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="95bcdeccf8fa92f09552978e8b5466d6c049673f" translate="yes" xml:space="preserve">
          <source>Optional. An integer between 0 and 11 representing the months January through December.</source>
          <target state="translated">선택 과목. 1 월에서 12 월까지의 달을 나타내는 0에서 11 사이의 정수입니다.</target>
        </trans-unit>
        <trans-unit id="3e06ee7808c9d219b86be5730255f13da12e4600" translate="yes" xml:space="preserve">
          <source>Optional. An integer between 0 and 23 representing the hours. If omitted, defaults to 0.</source>
          <target state="translated">선택 과목. 시간을 나타내는 0에서 23 사이의 정수입니다. 생략하면 기본값은 0입니다.</target>
        </trans-unit>
        <trans-unit id="70cc13be2265b54e06de46d8c93e89959f03eceb" translate="yes" xml:space="preserve">
          <source>Optional. An integer between 0 and 59 representing the minutes. If omitted, defaults to 0.</source>
          <target state="translated">선택 과목. 분을 나타내는 0에서 59 사이의 정수입니다. 생략하면 기본값은 0입니다.</target>
        </trans-unit>
        <trans-unit id="392e20e3585d866790cf14f6d054cf40a872f584" translate="yes" xml:space="preserve">
          <source>Optional. An integer between 0 and 59 representing the seconds. If omitted, defaults to 0.</source>
          <target state="translated">선택 과목. 초를 나타내는 0에서 59 사이의 정수입니다. 생략하면 기본값은 0입니다.</target>
        </trans-unit>
        <trans-unit id="6344e50d97de06bcdc91a8e68b47290f334920d7" translate="yes" xml:space="preserve">
          <source>Optional. An integer between 0 and 59, representing the minutes.</source>
          <target state="translated">선택 과목. 분을 나타내는 0에서 59 사이의 정수입니다.</target>
        </trans-unit>
        <trans-unit id="5ea25fbc6b722b45e94db9bc60c9374192db2842" translate="yes" xml:space="preserve">
          <source>Optional. An integer between 0 and 59, representing the seconds. If you specify the &lt;code&gt;secondsValue&lt;/code&gt; parameter, you must also specify the &lt;code&gt;minutesValue&lt;/code&gt;.</source>
          <target state="translated">선택 과목. 초를 나타내는 0에서 59 사이의 정수입니다. 당신이 지정하는 경우 &lt;code&gt;secondsValue&lt;/code&gt; 매개 변수를, 당신은 또한 지정해야합니다 &lt;code&gt;minutesValue&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="c69b718b64c0a6b7b981cf612e638be1ea86ec81" translate="yes" xml:space="preserve">
          <source>Optional. An integer between 0 and 999 representing the milliseconds. If omitted, defaults to 0.</source>
          <target state="translated">선택 과목. 밀리 초를 나타내는 0에서 999 사이의 정수입니다. 생략하면 기본값은 0입니다.</target>
        </trans-unit>
        <trans-unit id="e7eab31619c25eb916fff52039008d8a6bc1f374" translate="yes" xml:space="preserve">
          <source>Optional. An integer between 1 and 31 representing the day of the month. If omitted, defaults to 1.</source>
          <target state="translated">선택 과목. 월을 나타내는 1에서 31 사이의 정수입니다. 생략하면 기본값은 1입니다.</target>
        </trans-unit>
        <trans-unit id="119deebd8a3bfce2a9aab0b02803f139019ca5d4" translate="yes" xml:space="preserve">
          <source>Optional. An integer between 1 and 31 representing the day of the month. If you specify the &lt;code&gt;dateValue&lt;/code&gt; parameter, you must also specify the &lt;code&gt;monthValue&lt;/code&gt;.</source>
          <target state="translated">선택 과목. 월을 나타내는 1에서 31 사이의 정수입니다. 당신이 지정하는 경우 &lt;code&gt;dateValue&lt;/code&gt; 매개 변수를, 당신은 또한 지정해야합니다 &lt;code&gt;monthValue&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="794534433bb78c2fedeeae558dd5ba9b1d6cf405" translate="yes" xml:space="preserve">
          <source>Optional. An integer between 1 and 31 representing the day of the month. If you specify the &lt;code&gt;dayValue&lt;/code&gt; parameter, you must also specify the &lt;code&gt;monthValue&lt;/code&gt;.</source>
          <target state="translated">선택 과목. 월을 나타내는 1에서 31 사이의 정수입니다. 당신이 지정하는 경우 &lt;code&gt;dayValue&lt;/code&gt; 의 매개 변수를, 당신은 또한 지정해야합니다 &lt;code&gt;monthValue&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="de521932ec12aede20e134be40b52d4486413849" translate="yes" xml:space="preserve">
          <source>Optional. An integer from 1 to 31, representing the day of the month.</source>
          <target state="translated">선택 과목. 월을 나타내는 1에서 31 사이의 정수입니다.</target>
        </trans-unit>
        <trans-unit id="b6e0aead3210bb58b2f2f80b24696dd07e012419" translate="yes" xml:space="preserve">
          <source>Optional. An integer in the range 2 through 36 specifying the base to use for representing numeric values.</source>
          <target state="translated">선택 과목. 숫자 값을 나타내는 데 사용할 밑을 지정하는 2-36 범위의 정수입니다.</target>
        </trans-unit>
        <trans-unit id="d41f86f9f990b41a8690bac861a83a7c19afe2b1" translate="yes" xml:space="preserve">
          <source>Optional. An integer specifying the number of digits after the decimal point. Defaults to as many digits as necessary to specify the number.</source>
          <target state="translated">선택 과목. 소수점 뒤의 자릿수를 지정하는 정수입니다. 숫자를 지정하는 데 필요한만큼의 숫자로 기본 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="c8659e39bcb54ccb07d1263a52c02d2b21756be4" translate="yes" xml:space="preserve">
          <source>Optional. An integer specifying the number of significant digits.</source>
          <target state="translated">선택 과목. 유효 자릿수를 지정하는 정수입니다.</target>
        </trans-unit>
        <trans-unit id="353ed7852cbcbec30c3db2ef64319b0ef482260b" translate="yes" xml:space="preserve">
          <source>Optional. An object that may have the following property:</source>
          <target state="translated">선택 과목. 다음과 같은 속성을 가질 수있는 객체 :</target>
        </trans-unit>
        <trans-unit id="abf7840a4cc97a1bb333ec1221380d6d98962f6c" translate="yes" xml:space="preserve">
          <source>Optional. An object with some or all of the following properties:</source>
          <target state="translated">선택 과목. 다음 속성 중 일부 또는 전부를 가진 객체 :</target>
        </trans-unit>
        <trans-unit id="ad93f452faeb48fc19601c83ad17d961bde586f5" translate="yes" xml:space="preserve">
          <source>Optional. Arguments for the function.</source>
          <target state="translated">선택 과목. 함수의 인수</target>
        </trans-unit>
        <trans-unit id="a83c9f300ddf325bb2ecec154e7090f219542bff" translate="yes" xml:space="preserve">
          <source>Optional. End index (not included). Defaults to this.length.</source>
          <target state="translated">선택 과목. 종료 인덱스 (포함되지 않음). 기본값은 this.length입니다.</target>
        </trans-unit>
        <trans-unit id="891f18a6a091e549009579bb240f61e70570afe2" translate="yes" xml:space="preserve">
          <source>Optional. Human-readable description of the error</source>
          <target state="translated">선택 과목. 사람이 읽을 수있는 오류 설명</target>
        </trans-unit>
        <trans-unit id="76d23dce4f14fa27a93b742575a652782883e47c" translate="yes" xml:space="preserve">
          <source>Optional. Ideally, a number between 0 and 999, representing the milliseconds. If a value greater than 999 is provided, the datetime will be incremented by the extra milliseconds. If you specify the &lt;code&gt;msValue&lt;/code&gt; parameter, you must also specify the &lt;code&gt;minutesValue&lt;/code&gt; and &lt;code&gt;secondsValue&lt;/code&gt;.</source>
          <target state="translated">선택 과목. 이상적으로는 밀리 초를 나타내는 0에서 999 사이의 숫자입니다. 999보다 큰 값을 제공하면 날짜 시간이 추가 밀리 초 단위로 증가합니다. 당신이 지정하는 경우 &lt;code&gt;msValue&lt;/code&gt; 의 매개 변수를, 당신은 또한 지정해야합니다 &lt;code&gt;minutesValue&lt;/code&gt; 및 &lt;code&gt;secondsValue&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="926ac8a53a7118c4f7de796b28f1cfb09bf70e0d" translate="yes" xml:space="preserve">
          <source>Optional. Ideally, an integer between 0 and 59, representing the minutes. If a value greater than 59 is provided, the datetime will be incremented by the extra minutes.</source>
          <target state="translated">선택 과목. 이상적으로는 분을 나타내는 0에서 59 사이의 정수입니다. 59보다 큰 값을 제공하면 날짜 시간이 추가 분 단위로 증가합니다.</target>
        </trans-unit>
        <trans-unit id="cb24c0fad7b58d52c6f9e3734121802d8effd2c2" translate="yes" xml:space="preserve">
          <source>Optional. Ideally, an integer between 0 and 59, representing the seconds. If a value greater than 59 is provided, the datetime will be incremented by the extra seconds. If you specify the &lt;code&gt;secondsValue&lt;/code&gt; parameter, you must also specify the &lt;code&gt;minutesValue&lt;/code&gt;.</source>
          <target state="translated">선택 과목. 이상적으로는 초를 나타내는 0에서 59 사이의 정수입니다. 59보다 큰 값을 제공하면 날짜 시간이 추가 초만큼 증가합니다. 당신이 지정하는 경우 &lt;code&gt;secondsValue&lt;/code&gt; 매개 변수를, 당신은 또한 지정해야합니다 &lt;code&gt;minutesValue&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="8633352230c6311d91477d390a70aa3e54b81cd4" translate="yes" xml:space="preserve">
          <source>Optional. Identifier associated with the label of the statement. If the statement is not a loop or &lt;a href=&quot;switch&quot;&gt;&lt;code&gt;switch&lt;/code&gt;&lt;/a&gt;, this is required.</source>
          <target state="translated">선택 과목. 명령문의 레이블과 연관된 식별자입니다. 명령문이 루프 또는 &lt;a href=&quot;switch&quot;&gt; &lt;code&gt;switch&lt;/code&gt; &lt;/a&gt; 가 아닌 경우 필수입니다.</target>
        </trans-unit>
        <trans-unit id="1e45ec4778c6fe43f5ded55f64760fcc8908678d" translate="yes" xml:space="preserve">
          <source>Optional. If provided it is used as the length of &lt;code&gt;str&lt;/code&gt;. If omitted, the default value is the length of the string.</source>
          <target state="translated">선택 과목. 제공된 경우 &lt;code&gt;str&lt;/code&gt; 의 길이로 사용됩니다 . 생략하면 기본값은 문자열의 길이입니다.</target>
        </trans-unit>
        <trans-unit id="87576836830a40a3bc21cabd68b16268a1dda70a" translate="yes" xml:space="preserve">
          <source>Optional. If specified and not &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;, an object whose enumerable own properties (that is, those properties defined upon itself and &lt;em&gt;not&lt;/em&gt; enumerable properties along its prototype chain) specify property descriptors to be added to the newly-created object, with the corresponding property names. These properties correspond to the second argument of &lt;a href=&quot;defineproperties&quot;&gt;&lt;code&gt;Object.defineProperties()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">선택 과목. 지정되고 &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; 되지 않은 경우 , 열거 가능한 자체 속성 (즉, 프로토 타입 체인을 따라 열거 할 수 &lt;em&gt;없는&lt;/em&gt; 속성) 에 자체적으로 정의 된 속성을 갖는 객체는 해당 속성 이름으로 새로 생성 된 객체에 추가 할 속성 설명자를 지정합니다. 이러한 속성은 &lt;a href=&quot;defineproperties&quot;&gt; &lt;code&gt;Object.defineProperties()&lt;/code&gt; &lt;/a&gt; 의 두 번째 인수에 해당합니다 .</target>
        </trans-unit>
        <trans-unit id="038964dcd9cd69eb136c81a61805e894d0bc29d8" translate="yes" xml:space="preserve">
          <source>Optional. Integer specifying a limit on the number of splits to be found. The &lt;code&gt;[@@split]()&lt;/code&gt; method still splits on every match of &lt;code&gt;this&lt;/code&gt; RegExp pattern, until the number of split items match the &lt;code&gt;limit&lt;/code&gt; or the string falls short of &lt;code&gt;this&lt;/code&gt; pattern.</source>
          <target state="translated">선택 과목. 찾을 분할 수에 대한 제한을 지정하는 정수입니다. &lt;code&gt;[@@split]()&lt;/code&gt; 메소드는 여전히 모든 매치에 분할 &lt;code&gt;this&lt;/code&gt; 분할 아이템의 개수가 일치 할 때까지, 정규식 패턴 &lt;code&gt;limit&lt;/code&gt; 하거나 짧은 문자열의 하강 &lt;code&gt;this&lt;/code&gt; 패턴.</target>
        </trans-unit>
        <trans-unit id="ad62e61ace2e91c4d90832bcc43d2c5681163981" translate="yes" xml:space="preserve">
          <source>Optional. Map function to call on every element of the typed array.</source>
          <target state="translated">선택 과목. 유형이 지정된 배열의 모든 요소를 ​​호출하는 맵 함수</target>
        </trans-unit>
        <trans-unit id="89c8b8954ab82da15b9c273518f962028942ee3e" translate="yes" xml:space="preserve">
          <source>Optional. Object to use as &lt;code&gt;this&lt;/code&gt; when executing &lt;code&gt;callback&lt;/code&gt;.</source>
          <target state="translated">선택 과목. 로 사용할 오브젝트 &lt;code&gt;this&lt;/code&gt; 실행할 때 &lt;code&gt;callback&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="661dc5ad590952276ea552e672da13d5c554734c" translate="yes" xml:space="preserve">
          <source>Optional. Object to use as the first argument to the first call of the &lt;code&gt;callback&lt;/code&gt;.</source>
          <target state="translated">선택 과목. &lt;code&gt;callback&lt;/code&gt; 의 첫 번째 호출에 대한 첫 번째 인수로 사용할 객체 입니다.</target>
        </trans-unit>
        <trans-unit id="6074a535b20b97ca3166f40dac53dc58ce7a9fe6" translate="yes" xml:space="preserve">
          <source>Optional. Source end index position where to end copying elements from.</source>
          <target state="translated">선택 과목. 요소 복사를 종료 할 소스 끝 인덱스 위치입니다.</target>
        </trans-unit>
        <trans-unit id="a0b19e3793a5da0e5e8a4575d4cfe9550d167a05" translate="yes" xml:space="preserve">
          <source>Optional. Specifies a string to separate each element. The separator is converted to a string if necessary. If omitted, the typed array elements are separated with a comma (&quot;,&quot;).</source>
          <target state="translated">선택 과목. 각 요소를 구분할 문자열을 지정합니다. 필요한 경우 구분 기호가 문자열로 변환됩니다. 생략하면 형식화 된 배열 요소는 쉼표 ( &quot;,&quot;)로 구분됩니다.</target>
        </trans-unit>
        <trans-unit id="0633ec8064ef0762e54a4544a122fdb7d490dc35" translate="yes" xml:space="preserve">
          <source>Optional. Start index. Defaults to 0.</source>
          <target state="translated">선택 과목. 색인을 시작하십시오. 기본값은 0입니다.</target>
        </trans-unit>
        <trans-unit id="f4ba9bf2362af11ff12963eb2eb83193e7cd7f8a" translate="yes" xml:space="preserve">
          <source>Optional. The index at which to start searching backwards. Defaults to the typed array's length, i.e. the whole typed array will be searched. If the index is greater than or equal to the length of the typed array, the whole typed array will be searched. If negative, it is taken as the offset from the end of the typed array. Note that even when the index is negative, the typed array is still searched from back to front. If the calculated index is less than 0, -1 is returned, i.e. the typed array will not be searched.</source>
          <target state="translated">선택 과목. 뒤로 검색을 시작하는 인덱스입니다. 유형이 지정된 배열의 길이가 기본값입니다. 즉, 전체 유형이 지정된 배열이 검색됩니다. 색인이 유형이 지정된 배열의 길이보다 크거나 같으면 전체 유형이 지정된 배열이 검색됩니다. 음수이면 입력 된 배열의 끝에서 오프셋으로 간주됩니다. 인덱스가 음수 인 경우에도 형식화 된 배열은 계속해서 앞뒤로 검색됩니다. 계산 된 인덱스가 0보다 작은 경우 -1이 반환됩니다. 즉, 형식화 된 배열은 검색되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9d1cd959121feaeb0d8d43dedf19dab7ae446d96" translate="yes" xml:space="preserve">
          <source>Optional. The index of the first character to exclude from the returned substring.</source>
          <target state="translated">선택 과목. 반환 된 부분 문자열에서 제외 할 첫 번째 문자의 인덱스입니다.</target>
        </trans-unit>
        <trans-unit id="cebf85129aa3ee4548e165952d2739e2b298dafc" translate="yes" xml:space="preserve">
          <source>Optional. The initial value of the &lt;code&gt;Boolean&lt;/code&gt; object.</source>
          <target state="translated">선택 과목. &lt;code&gt;Boolean&lt;/code&gt; 객체 의 초기 값입니다 .</target>
        </trans-unit>
        <trans-unit id="ee894f08b98fb7fdef8e7541ab831d10c17fc2cd" translate="yes" xml:space="preserve">
          <source>Optional. The line number of the code that caused the exception</source>
          <target state="translated">선택 과목. 예외를 일으킨 코드의 줄 번호</target>
        </trans-unit>
        <trans-unit id="c347532465befbe673fa4f0fd7c851afd12ec327" translate="yes" xml:space="preserve">
          <source>Optional. The name of the file containing the code that caused the exception</source>
          <target state="translated">선택 과목. 예외를 일으킨 코드를 포함하는 파일 이름</target>
        </trans-unit>
        <trans-unit id="e5d51ea62238de211964057685b7b04d3c14d9bd" translate="yes" xml:space="preserve">
          <source>Optional. The number of characters to extract.</source>
          <target state="translated">선택 과목. 추출 할 문자 수입니다.</target>
        </trans-unit>
        <trans-unit id="e3a4726f3452f9c6f29f0dfd04191a12bc03d3f1" translate="yes" xml:space="preserve">
          <source>Optional. The number of digits to appear after the decimal point; this may be a value between 0 and 20, inclusive, and implementations may optionally support a larger range of values. If this argument is omitted, it is treated as 0.</source>
          <target state="translated">선택 과목. 소수점 뒤에 표시되는 자릿수입니다. 이것은 0에서 20 사이의 값일 수 있으며 구현은 선택적으로 더 큰 범위의 값을 지원할 수 있습니다. 이 인수를 생략하면 0으로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="f6ebf0738faf94966ce80f730d3860a36ca21d61" translate="yes" xml:space="preserve">
          <source>Optional. The position in this array at which to begin searching for &lt;code&gt;searchElement&lt;/code&gt;; defaults to 0.</source>
          <target state="translated">선택 과목. &lt;code&gt;searchElement&lt;/code&gt; 를 검색하기 시작할이 배열의 위치입니다 . 기본값은 0입니다.</target>
        </trans-unit>
        <trans-unit id="a10a9f1ce1dc1d39ba88a7dd25f4f4845154214e" translate="yes" xml:space="preserve">
          <source>Optional. The value for the &lt;code&gt;fileName&lt;/code&gt; property on the created &lt;code&gt;Error&lt;/code&gt; object. Defaults to the name of the file containing the code that called the &lt;code&gt;Error()&lt;/code&gt; constructor.</source>
          <target state="translated">선택 과목. 작성된 &lt;code&gt;Error&lt;/code&gt; 객체 의 &lt;code&gt;fileName&lt;/code&gt; 속성 값입니다 . 기본적으로 &lt;code&gt;Error()&lt;/code&gt; 생성자 를 호출 한 코드가 포함 된 파일 이름이 기본값 입니다.</target>
        </trans-unit>
        <trans-unit id="ead99ac56ff43e8df9daf96761b9c793dc15b6e8" translate="yes" xml:space="preserve">
          <source>Optional. The value for the &lt;code&gt;lineNumber&lt;/code&gt; property on the created &lt;code&gt;Error&lt;/code&gt; object. Defaults to the line number containing the &lt;code&gt;Error()&lt;/code&gt; constructor invocation.</source>
          <target state="translated">선택 과목. 작성된 &lt;code&gt;Error&lt;/code&gt; 객체 의 &lt;code&gt;lineNumber&lt;/code&gt; 속성 값입니다 . &lt;code&gt;Error()&lt;/code&gt; 생성자 호출을 포함하는 줄 번호가 기본값 입니다.</target>
        </trans-unit>
        <trans-unit id="ed2a8fd44000dc6062e1099888733f586d1c8623" translate="yes" xml:space="preserve">
          <source>Optional. The value of &lt;code&gt;this&lt;/code&gt; provided for the call to &lt;em&gt;&lt;code&gt;func&lt;/code&gt;&lt;/em&gt;. Note that &lt;code&gt;this&lt;/code&gt; may not be the actual value seen by the method: if the method is a function in &lt;a href=&quot;../../strict_mode&quot;&gt;non-strict mode&lt;/a&gt; code, &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; will be replaced with the global object, and primitive values will be boxed.</source>
          <target state="translated">선택 과목. 의 값 &lt;code&gt;this&lt;/code&gt; 호출 제공 &lt;em&gt; &lt;code&gt;func&lt;/code&gt; &lt;/em&gt; . 참고 &lt;code&gt;this&lt;/code&gt; 방법은의 함수 인 경우 상기 방법에 의해 나타나는 실제 값하지 않을 &lt;a href=&quot;../../strict_mode&quot;&gt;비 엄격 모드&lt;/a&gt; 코드 &lt;a href=&quot;../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; 전역 객체로 대체 될 것이며, 프리미티브 값 박스형한다.</target>
        </trans-unit>
        <trans-unit id="4fc32772615f562c59dfc39b88293c03171b4d1b" translate="yes" xml:space="preserve">
          <source>Optional. The value of &lt;code&gt;this&lt;/code&gt; provided for the call to a &lt;code&gt;&lt;var&gt;function&lt;/var&gt;&lt;/code&gt;. Note that &lt;code&gt;this&lt;/code&gt; may not be the actual value seen by the method: if the method is a function in &lt;a href=&quot;../../strict_mode&quot;&gt;non-strict mode&lt;/a&gt;, &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; will be replaced with the global object and primitive values will be converted to objects.</source>
          <target state="translated">선택 과목. 의 값 &lt;code&gt;this&lt;/code&gt; (A)에 대한 호출을 위해 제공 &lt;code&gt;&lt;var&gt;function&lt;/var&gt;&lt;/code&gt; . 참고 &lt;code&gt;this&lt;/code&gt; 방법은의 함수 인 경우 상기 방법에 의해 나타나는 실제 값하지 않을 &lt;a href=&quot;../../strict_mode&quot;&gt;비 엄격 모드&lt;/a&gt; , &lt;a href=&quot;../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt; 하고 &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; 오브젝트로 변환 될 세계 객체와 프리미티브 값으로 대체 될 것이다.</target>
        </trans-unit>
        <trans-unit id="a42b36fe9e22d2aa06f08ec1a45b3250a3dda3f3" translate="yes" xml:space="preserve">
          <source>Optional. The zero-based index &lt;em&gt;before&lt;/em&gt; which to end extraction. The character at this index will not be included. If &lt;code&gt;endIndex&lt;/code&gt; is omitted, &lt;code&gt;slice()&lt;/code&gt; extracts to the end of the string. If negative, it is treated as &lt;code&gt;strLength + endIndex&lt;/code&gt; where &lt;code&gt;strLength&lt;/code&gt; is the length of the string (for example, if &lt;code&gt;endIndex&lt;/code&gt; is &lt;code&gt;-3&lt;/code&gt; it is treated as &lt;code&gt;strLength - 3)&lt;/code&gt;.</source>
          <target state="translated">선택 과목. 추출을 종료 &lt;em&gt;하기 전의&lt;/em&gt; 인덱스 (0부터 &lt;em&gt;시작)&lt;/em&gt; 입니다. 이 색인의 문자는 포함되지 않습니다. 경우 &lt;code&gt;endIndex&lt;/code&gt; 생략 &lt;code&gt;slice()&lt;/code&gt; 문자열의 끝으로 추출. 음수 인 경우 &lt;code&gt;strLength + endIndex&lt;/code&gt; 로 처리됩니다. 여기서 &lt;code&gt;strLength&lt;/code&gt; 는 문자열의 길이입니다 (예 : &lt;code&gt;endIndex&lt;/code&gt; 가 &lt;code&gt;-3&lt;/code&gt; 인 경우 &lt;code&gt;strLength - 3)&lt;/code&gt; 으로 처리됨) .</target>
        </trans-unit>
        <trans-unit id="e0710be00ed69d027490be2d4513d1df7c6f8583" translate="yes" xml:space="preserve">
          <source>Optional. Value to use as &lt;code&gt;this&lt;/code&gt; when executing &lt;code&gt;callback&lt;/code&gt;.</source>
          <target state="translated">선택 과목. 값으로 사용하는 &lt;code&gt;this&lt;/code&gt; 실행할 때 &lt;code&gt;callback&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7e5469e13e11ac128945b224614de4b2013eede4" translate="yes" xml:space="preserve">
          <source>Optional. Value to use as &lt;code&gt;this&lt;/code&gt; when executing &lt;code&gt;mapFn&lt;/code&gt;.</source>
          <target state="translated">선택 과목. 값으로 사용하는 &lt;code&gt;this&lt;/code&gt; 실행할 때 &lt;code&gt;mapFn&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="fa26ccf85bc6f968242ada4c599f68a407b51da6" translate="yes" xml:space="preserve">
          <source>Optionally, a timezone name consisting of:</source>
          <target state="translated">선택적으로 시간대 이름은 다음으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="a8c59b395d3e866fed015beee40819bb644292b7" translate="yes" xml:space="preserve">
          <source>Or did you mean to create a string instead? Add single or double quotes to create a string literal.</source>
          <target state="translated">아니면 대신 문자열을 만들려고 했습니까? 작은 따옴표 나 큰 따옴표를 추가하여 문자열 리터럴을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="8569149e10dc9d7bef361199016922c2127e6fae" translate="yes" xml:space="preserve">
          <source>Or you can use the backslash character (&quot;\&quot;) at the end of each line to indicate that the string will continue on the next line. Make sure there is no space or any other character after the backslash (except for a line break), or as an indent; otherwise it will not work. That form looks like this:</source>
          <target state="translated">또는 각 줄 끝에 백 슬래시 문자 ( &quot;\&quot;)를 사용하여 다음 줄에서 문자열이 계속 될 것임을 나타낼 수 있습니다. 백 슬래시 뒤에 (줄 바꿈 제외) 또는 들여 쓰기로 공백이나 다른 문자가 없는지 확인하십시오. 그렇지 않으면 작동하지 않습니다. 그 형태는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="561c903b00152f42d67e5dfa8c71b2b860d0d0fa" translate="yes" xml:space="preserve">
          <source>Or, alternatively, you can set a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/SourceMap&quot;&gt;&lt;code&gt;SourceMap&lt;/code&gt;&lt;/a&gt; header to your JavaScript file to avoid having a comment at all:</source>
          <target state="translated">또는 주석이 전혀 없도록 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/SourceMap&quot;&gt; &lt;code&gt;SourceMap&lt;/code&gt; &lt;/a&gt; 헤더를 JavaScript 파일로 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6c1391cddfcd691f9f63995b9ebbe7aa877cf210" translate="yes" xml:space="preserve">
          <source>Or, alternatively, you can set a header to your JavaScript file:</source>
          <target state="translated">또는 JavaScript 파일에 헤더를 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cfc225b5c0d8aeb09ad8d8785f450ad2f67371e5" translate="yes" xml:space="preserve">
          <source>Or, using &lt;a href=&quot;../statements/for...of&quot;&gt;&lt;code&gt;for...of&lt;/code&gt;&lt;/a&gt; (ES2015) and &lt;a href=&quot;../global_objects/object/entries&quot;&gt;&lt;code&gt;Object.entries&lt;/code&gt;&lt;/a&gt; (ES2017), you can get an array of the specified object values and iterate over the array like this:</source>
          <target state="translated">또는 &lt;a href=&quot;../statements/for...of&quot;&gt; &lt;code&gt;for...of&lt;/code&gt; &lt;/a&gt; (ES2015) 및 &lt;a href=&quot;../global_objects/object/entries&quot;&gt; &lt;code&gt;Object.entries&lt;/code&gt; &lt;/a&gt; (ES2017)를 사용하여 지정된 객체 값의 배열을 가져 와서 다음과 같이 배열을 반복 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e86fd006e313f64b39e4c682a50b0eb76e476232" translate="yes" xml:space="preserve">
          <source>Or, using &lt;a href=&quot;../statements/for...of&quot;&gt;&lt;code&gt;for...of&lt;/code&gt;&lt;/a&gt; (ES2015) and &lt;a href=&quot;../global_objects/object/values&quot;&gt;&lt;code&gt;Object.values&lt;/code&gt;&lt;/a&gt; (ES2017), you can get an array of the specified object values and iterate over the array like this:</source>
          <target state="translated">또는 &lt;a href=&quot;../statements/for...of&quot;&gt; &lt;code&gt;for...of&lt;/code&gt; &lt;/a&gt; (ES2015) 및 &lt;a href=&quot;../global_objects/object/values&quot;&gt; &lt;code&gt;Object.values&lt;/code&gt; &lt;/a&gt; (ES2017)를 사용하여 지정된 객체 값의 배열을 가져 와서 다음과 같이 배열을 반복 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d980251994211e5ebae644678a623630f11240b8" translate="yes" xml:space="preserve">
          <source>Or, you can make use of the &lt;a href=&quot;../global_objects/datetimeformat&quot;&gt;&lt;code&gt;Intl.DateTimeFormat&lt;/code&gt;&lt;/a&gt; object, which allows you to cache an object with most of the computations done so that formatting is fast. This is useful if you have a loop of dates to format.</source>
          <target state="translated">또는 &lt;a href=&quot;../global_objects/datetimeformat&quot;&gt; &lt;code&gt;Intl.DateTimeFormat&lt;/code&gt; &lt;/a&gt; 객체를 사용하면 대부분의 계산을 수행하여 객체를 캐시하여 서식을 빠르게 지정할 수 있습니다. 형식화 할 날짜 루프가있는 경우 유용합니다.</target>
        </trans-unit>
        <trans-unit id="bc4db7e5207387c25e0c15c8f40cd9651ff9cfcb" translate="yes" xml:space="preserve">
          <source>Or, you function is maybe intended to be an &lt;a href=&quot;https://en.wikipedia.org/wiki/Immediately-invoked_function_expression&quot;&gt;IIFE&lt;/a&gt; (Immediately Invoked Function Expression), which is a function that runs as soon as it is defined. You will need a few more braces in this case:</source>
          <target state="translated">또는 함수 가 정의 된 즉시 실행되는 함수 인 &lt;a href=&quot;https://en.wikipedia.org/wiki/Immediately-invoked_function_expression&quot;&gt;IIFE&lt;/a&gt; (즉시 호출 된 함수 표현식) 일 수 있습니다. 이 경우 몇 가지 괄호가 더 필요합니다.</target>
        </trans-unit>
        <trans-unit id="f5f6fdc01b44ccf9e40e55c69e5530d502010ffc" translate="yes" xml:space="preserve">
          <source>Ordinary object (ES2015)</source>
          <target state="translated">일반 객체 (ES2015)</target>
        </trans-unit>
        <trans-unit id="cb492e1a10ad8495d78f8f606b68b93de0c2d3de" translate="yes" xml:space="preserve">
          <source>Origin of &lt;code&gt;NaN&lt;/code&gt; values</source>
          <target state="translated">&lt;code&gt;NaN&lt;/code&gt; 값의 기원</target>
        </trans-unit>
        <trans-unit id="398b7df1c5d76e072b03f1f5853ed5290220702a" translate="yes" xml:space="preserve">
          <source>Original proposal at ecmascript.org</source>
          <target state="translated">ecmascript.org의 원래 제안</target>
        </trans-unit>
        <trans-unit id="6e6a6f2086bb5fe5dbfd17d8d5f502d48759834b" translate="yes" xml:space="preserve">
          <source>Other</source>
          <target state="translated">Other</target>
        </trans-unit>
        <trans-unit id="a33b584f108e537a2ab567a24434561b745d6223" translate="yes" xml:space="preserve">
          <source>Other Iterable objects</source>
          <target state="translated">다른 반복 가능한 객체</target>
        </trans-unit>
        <trans-unit id="20632887f6af52c68ba1ba09c785953c74157a8e" translate="yes" xml:space="preserve">
          <source>Other Unicode space characters</source>
          <target state="translated">다른 유니 코드 공백 문자</target>
        </trans-unit>
        <trans-unit id="616034e9f60a9fc4c74d097d8a234b2d8a39d993" translate="yes" xml:space="preserve">
          <source>Other engines such as v8 (Chrome), Chakra (IE/Edge), and JSC (WebKit/Safari) are investigating whether to remove the nonstandard behavior as well.</source>
          <target state="translated">v8 (Chrome), Chakra (IE / Edge) 및 JSC (WebKit / Safari)와 같은 다른 엔진도 비표준 동작을 제거할지 여부를 조사하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="f7e13bed50c4da975b1ae3753cc2c408d114b3b9" translate="yes" xml:space="preserve">
          <source>Other errors regarding formal parameters:</source>
          <target state="translated">공식 매개 변수와 관련된 기타 오류 :</target>
        </trans-unit>
        <trans-unit id="b3517ea889fc79250f4f16d49b6965b31eff2cf8" translate="yes" xml:space="preserve">
          <source>Other situations</source>
          <target state="translated">다른 상황</target>
        </trans-unit>
        <trans-unit id="4c92d3af7eb13785b6decd174d81a89c46cd4734" translate="yes" xml:space="preserve">
          <source>Other symbols</source>
          <target state="translated">다른 기호들</target>
        </trans-unit>
        <trans-unit id="f8eff7fad83e9b98891ec2d767bf7b6d40f71fd1" translate="yes" xml:space="preserve">
          <source>Other web resources:</source>
          <target state="translated">다른 웹 리소스 :</target>
        </trans-unit>
        <trans-unit id="8d7bf5bf136e81f9388c1f4eca050d6d94e965d7" translate="yes" xml:space="preserve">
          <source>Others</source>
          <target state="translated">Others</target>
        </trans-unit>
        <trans-unit id="443e113ca0920f666c098e4c8e7f848c277cdfc5" translate="yes" xml:space="preserve">
          <source>Others have a built-in &lt;code&gt;toStringTag&lt;/code&gt; symbol defined:</source>
          <target state="translated">다른 것에는 내장 &lt;code&gt;toStringTag&lt;/code&gt; 기호가 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="b35597599f24c717eeb3af9e9bb75beb75e35b6f" translate="yes" xml:space="preserve">
          <source>Otherwise, &lt;code&gt;lastIndex&lt;/code&gt; is set to the next position following the most recent match.</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;lastIndex&lt;/code&gt; 는 가장 최근에 일치 한 다음 위치로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="2a325456213d6a737e467e5cd9b893c75f1dc08b" translate="yes" xml:space="preserve">
          <source>Otherwise, you might want to clamp the length before setting the length property, or using it as argument of the constructor.</source>
          <target state="translated">그렇지 않으면 length 속성을 설정하거나 생성자의 인수로 사용하기 전에 길이를 고정 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e5c85f2fa5903cc5eeb11de2a20f258881785536" translate="yes" xml:space="preserve">
          <source>Otherwise, you probably meant to use a comparison operator (e.g. &lt;code&gt;==&lt;/code&gt; or &lt;code&gt;===&lt;/code&gt;):</source>
          <target state="translated">그렇지 않으면 비교 연산자 (예 : &lt;code&gt;==&lt;/code&gt; 또는 &lt;code&gt;===&lt;/code&gt; ) 를 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="4bed336194a9a5c86b6a734f03b3570d2aae1a68" translate="yes" xml:space="preserve">
          <source>Output</source>
          <target state="translated">Output</target>
        </trans-unit>
        <trans-unit id="f3c8c95c5e534bcd2ea0034a0d83177efa6923f4" translate="yes" xml:space="preserve">
          <source>Output:</source>
          <target state="translated">Output:</target>
        </trans-unit>
        <trans-unit id="59f0d085026f741b88da2c8d9b558e0b4f1434b8" translate="yes" xml:space="preserve">
          <source>Output: !</source>
          <target state="translated">출력 :!</target>
        </trans-unit>
        <trans-unit id="6d17757e0c8a93cbc3e3aae70c1f62c08c3fb3fa" translate="yes" xml:space="preserve">
          <source>Output: ?</source>
          <target state="translated">출력 :?</target>
        </trans-unit>
        <trans-unit id="bbbbf8704d35ecaa7c5ff39e3292fa22b5463667" translate="yes" xml:space="preserve">
          <source>Output: Name?</source>
          <target state="translated">출력 : 이름?</target>
        </trans-unit>
        <trans-unit id="b1ec8d4e3a446f4ce4aba6ed7bf6f4a4462d5ce4" translate="yes" xml:space="preserve">
          <source>Output: So What Is Your Name?</source>
          <target state="translated">결과 : 그래서 당신의 이름은 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="fc9c07518809d176f3f7fbdaae1c8826d9b965c1" translate="yes" xml:space="preserve">
          <source>Output: What Is Your Name?</source>
          <target state="translated">결과 : 당신의 이름은 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="a1f9c1423a0d09d03c22da31af627179e76f5a01" translate="yes" xml:space="preserve">
          <source>Output: Your Name?</source>
          <target state="translated">결과 : 당신의 이름은?</target>
        </trans-unit>
        <trans-unit id="e9e45df48568522617002870a7d2ab82c5d7baca" translate="yes" xml:space="preserve">
          <source>Overriding multiplication and division first, then addition and subtraction to evaluate addition first.</source>
          <target state="translated">곱셈과 나눗셈을 먼저 재정의 한 다음 덧셈과 뺄셈으로 덧셈을 먼저 평가하십시오.</target>
        </trans-unit>
        <trans-unit id="37db5e0251bd02a6aba5a0707a0d9b11ac1083f9" translate="yes" xml:space="preserve">
          <source>Overriding the default &lt;code&gt;toString&lt;/code&gt; method</source>
          <target state="translated">기본 &lt;code&gt;toString&lt;/code&gt; 메서드 재정의</target>
        </trans-unit>
        <trans-unit id="1f69ccdf47fd60a31f8e13e4018e8b48fd8a5ab5" translate="yes" xml:space="preserve">
          <source>Overriding valueOf for custom objects</source>
          <target state="translated">사용자 정의 객체에 대한 valueOf 재정의</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">Overview</target>
        </trans-unit>
        <trans-unit id="8565248303cd94d7e15e24c82fe48cfaa477b291" translate="yes" xml:space="preserve">
          <source>Pads the current string from the end with a given string to create a new string from a given length.</source>
          <target state="translated">주어진 길이에서 새로운 문자열을 만들기 위해 현재 문자열을 주어진 문자열로 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="2a5696509653821e523557e67c032eeb63fc2523" translate="yes" xml:space="preserve">
          <source>Pads the current string from the start with a given string to create a new string from a given length.</source>
          <target state="translated">주어진 길이에서 새로운 문자열을 만들기 위해 주어진 문자열로 시작부터 현재 문자열을 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="8ae47d25e0b292e59824305e2cb5dad6c3f287c1" translate="yes" xml:space="preserve">
          <source>Page breaking control character (&lt;a href=&quot;http://en.wikipedia.org/wiki/Page_break#Form_feed&quot;&gt;Wikipedia&lt;/a&gt;).</source>
          <target state="translated">페이지 구분 제어 문자 ( &lt;a href=&quot;http://en.wikipedia.org/wiki/Page_break#Form_feed&quot;&gt;Wikipedia&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="1cee5749929302f61496a2c72dd6ded23d2ea553" translate="yes" xml:space="preserve">
          <source>Pairs of names (strings) and values (any value) where the name is separated from the value by a colon.</source>
          <target state="translated">이름이 콜론으로 값과 구분되는 이름 (문자열) 및 값 (모든 값)의 쌍입니다.</target>
        </trans-unit>
        <trans-unit id="312270aaaff20da30c74f328ff0f10c9927c4efe" translate="yes" xml:space="preserve">
          <source>Paragraph Separator</source>
          <target state="translated">단락 구분자</target>
        </trans-unit>
        <trans-unit id="a975eea30db9fa05003e3b5097688bd49ec7e01b" translate="yes" xml:space="preserve">
          <source>Parameters</source>
          <target state="translated">Parameters</target>
        </trans-unit>
        <trans-unit id="8dc5f1e8ccc97cc0f61eb96906488bf20ef522d3" translate="yes" xml:space="preserve">
          <source>Parameters defined beforehand (to the left) are available to later default parameters:</source>
          <target state="translated">미리 정의 된 매개 변수 (왼쪽)는 나중에 기본 매개 변수에 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fa8315952dcfbaa7a5308c95fdf65385b73dcc17" translate="yes" xml:space="preserve">
          <source>Parameters without defaults after default parameters</source>
          <target state="translated">기본 매개 변수 다음에 기본값이없는 매개 변수</target>
        </trans-unit>
        <trans-unit id="190d99bad1fecbaa7cee24f5f2e82dfe512db8fd" translate="yes" xml:space="preserve">
          <source>Parse a string as JSON, optionally transform the produced value and its properties, and return the value.</source>
          <target state="translated">문자열을 JSON으로 구문 분석하고 선택적으로 생성 된 값과 해당 특성을 변환 한 후 값을 리턴하십시오.</target>
        </trans-unit>
        <trans-unit id="14e7f853bf12db6333368b5461f5c93432f36a68" translate="yes" xml:space="preserve">
          <source>Parses a string representation of a date and returns the number of milliseconds since 1 January, 1970, 00:00:00, UTC, with leap seconds ignored.</source>
          <target state="translated">날짜의 문자열 표현을 구문 분석하고 1970 년 1 월 1 일 00:00:00 (UTC) 이후 윤초를 무시하고 밀리 초 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="dafb62341b9afeff06e0763fa52287cd2b82d3dd" translate="yes" xml:space="preserve">
          <source>Parses leading-zero strings are decimal, not octal</source>
          <target state="translated">선행 0 문자열은 8 진수가 아닌 10 진수입니다.</target>
        </trans-unit>
        <trans-unit id="0b6b13ce79c6ee5e6abf6a142a5fe6e9bdd3e0e3" translate="yes" xml:space="preserve">
          <source>Parsing JSON (converting strings to JavaScript objects)</source>
          <target state="translated">JSON 구문 분석 (문자열을 JavaScript 객체로 변환)</target>
        </trans-unit>
        <trans-unit id="e2b6eae453b4837b9eaffe13b9ebfccf76c01da3" translate="yes" xml:space="preserve">
          <source>Parsing an array returned from a function</source>
          <target state="translated">함수에서 반환 된 배열 파싱</target>
        </trans-unit>
        <trans-unit id="12c47204de7a6c8fb604680b708f81f3ba367d54" translate="yes" xml:space="preserve">
          <source>Parsing order</source>
          <target state="translated">파싱 ​​순서</target>
        </trans-unit>
        <trans-unit id="e939ea3b125d7ff5f4796711a9c99dfa293d205a" translate="yes" xml:space="preserve">
          <source>Partially applied functions</source>
          <target state="translated">부분적으로 적용되는 기능</target>
        </trans-unit>
        <trans-unit id="b19e0ea34174f4adbd149fe0974f24a5d7637564" translate="yes" xml:space="preserve">
          <source>Pass data instead of code</source>
          <target state="translated">코드 대신 데이터 전달</target>
        </trans-unit>
        <trans-unit id="bc17b7d2e0eca0bf16a44decb97f160c549f2ccf" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;undefined&lt;/code&gt; vs. other falsy values</source>
          <target state="translated">&lt;code&gt;undefined&lt;/code&gt; 대 다른 잘못된 값 전달</target>
        </trans-unit>
        <trans-unit id="b9d7ff837f6bdbbca090231d4e7e6dfb7c8adbde" translate="yes" xml:space="preserve">
          <source>Passing an empty object, an array with more than one member, a non-numeric string or &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;/empty variable returns &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;. Passing &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;, an empty string or an empty array returns 0.</source>
          <target state="translated">빈 객체, 둘 이상의 멤버가있는 배열, 숫자가 아닌 문자열 또는 &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; / empty 변수를 전달하면 &lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; 이 반환&lt;/a&gt; 됩니다. &lt;a href=&quot;../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt; , 빈 문자열 또는 빈 배열을 전달하면 0이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="494da2fe1033f4e6bb5d7a8ebd6826b2b152c118" translate="yes" xml:space="preserve">
          <source>Passing arguments into Generators</source>
          <target state="translated">생성기에 인수 전달</target>
        </trans-unit>
        <trans-unit id="9b091423b281eed2f0a4260b4377571d223183fc" translate="yes" xml:space="preserve">
          <source>Path to file that raised this error.</source>
          <target state="translated">이 오류가 발생한 파일의 경로입니다.</target>
        </trans-unit>
        <trans-unit id="68a82c862b20ee0bf6d2155d07cc30b5b2c577d9" translate="yes" xml:space="preserve">
          <source>Path to file that raised this error. Inherited from &lt;a href=&quot;../error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 오류가 발생한 파일의 경로입니다. &lt;a href=&quot;../error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; 에서 상속되었습니다 .</target>
        </trans-unit>
        <trans-unit id="78061300c3301f72422fec4c414cd7018932f903" translate="yes" xml:space="preserve">
          <source>Path to file that raised this error. Inherited from &lt;a href=&quot;error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 오류가 발생한 파일의 경로입니다. &lt;a href=&quot;error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; 에서 상속되었습니다 .</target>
        </trans-unit>
        <trans-unit id="1fff6a31661b491fc40cc9c1ad7fe5e479cb7500" translate="yes" xml:space="preserve">
          <source>Pattern</source>
          <target state="translated">Pattern</target>
        </trans-unit>
        <trans-unit id="ecd8a21832e0e12929298f235a8805110587260b" translate="yes" xml:space="preserve">
          <source>Pause and resume a generator function.</source>
          <target state="translated">생성기 기능을 일시 중지했다가 다시 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="8a18c91b413aa83207902d34a5550c798370c248" translate="yes" xml:space="preserve">
          <source>Pause and resume an async function and wait for the promise's resolution/rejection.</source>
          <target state="translated">비동기 기능을 일시 중지했다가 다시 시작하고 약속의 해결 / 거부를 ​​기다립니다.</target>
        </trans-unit>
        <trans-unit id="c64c33c3dab2dd3462a646781ae3c5581e6142a8" translate="yes" xml:space="preserve">
          <source>Paving the way for future ECMAScript versions</source>
          <target state="translated">향후 ECMAScript 버전을위한 길을 열다</target>
        </trans-unit>
        <trans-unit id="27335de32b8dc8b2d02f298a509286229a8bda57" translate="yes" xml:space="preserve">
          <source>Pay special attention to commas when declaring multiple variables. Is there an excess comma? Did you accidentally add commas instead of semicolons?</source>
          <target state="translated">여러 변수를 선언 할 때는 쉼표에 특히주의하십시오. 초과 쉼표가 있습니까? 세미콜론 대신 실수로 쉼표를 추가 했습니까?</target>
        </trans-unit>
        <trans-unit id="0845c2cdfd1eca690f6e59524f0fddb3bc3074a9" translate="yes" xml:space="preserve">
          <source>Perform a &quot;sticky&quot; search that matches starting at the current position in the target string. See &lt;a href=&quot;../global_objects/regexp/sticky&quot;&gt;&lt;code&gt;sticky&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">대상 문자열의 현재 위치에서 시작하여 일치하는 &quot;sticky&quot;검색을 수행하십시오. &lt;a href=&quot;../global_objects/regexp/sticky&quot;&gt; &lt;code&gt;sticky&lt;/code&gt; &lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="63c904559993935c470f516c8b549ca7f3640dbb" translate="yes" xml:space="preserve">
          <source>Performance</source>
          <target state="translated">Performance</target>
        </trans-unit>
        <trans-unit id="993d9920eb9829ed82b69dac88be22c35d934704" translate="yes" xml:space="preserve">
          <source>Performance pro &amp;amp; contra</source>
          <target state="translated">성능 및 대비</target>
        </trans-unit>
        <trans-unit id="c505f5ca1d0e8dbe9bced1981c74ad1f061edbab" translate="yes" xml:space="preserve">
          <source>Performs match to given string and returns match result.</source>
          <target state="translated">주어진 문자열과 일치하고 일치 결과를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="36ff7b58a82585bd3db59942d70547f106126b8c" translate="yes" xml:space="preserve">
          <source>Performs the AND operation on each pair of bits. &lt;code&gt;a&lt;/code&gt; AND &lt;code&gt;b&lt;/code&gt; yields 1 only if both &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are &lt;code&gt;1&lt;/code&gt;. The truth table for the AND operation is:</source>
          <target state="translated">각 비트 쌍에 대해 AND 연산을 수행합니다. AND &lt;code&gt;b&lt;/code&gt; 수율은 모두 1 만 및 &lt;code&gt;b&lt;/code&gt; 있다 &lt;code&gt;1&lt;/code&gt; . AND 연산의 진리표는 다음과 같습니다. &lt;code&gt;a&lt;/code&gt; &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="52698d26d4d718fcbeb9229fed0aedccf539a2a9" translate="yes" xml:space="preserve">
          <source>Performs the NOT operator on each bit. NOT &lt;code&gt;a&lt;/code&gt; yields the inverted value (a.k.a. one's complement) of &lt;code&gt;a&lt;/code&gt;. The truth table for the &lt;code&gt;NOT&lt;/code&gt; operation is:</source>
          <target state="translated">각 비트에서 NOT 연산자를 수행합니다. NOT &lt;code&gt;a&lt;/code&gt; 의 반전 값 (일명 1의 보수) 산출 &lt;code&gt;a&lt;/code&gt; . &lt;code&gt;NOT&lt;/code&gt; 연산 의 진리표 는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="10567a77aa516de575f28749234f6dc267098d22" translate="yes" xml:space="preserve">
          <source>Performs the OR operation on each pair of bits. &lt;code&gt;a&lt;/code&gt; OR &lt;code&gt;b&lt;/code&gt; yields 1 if either &lt;code&gt;a&lt;/code&gt; or &lt;code&gt;b&lt;/code&gt; is &lt;code&gt;1&lt;/code&gt;. The truth table for the &lt;code&gt;OR&lt;/code&gt; operation is:</source>
          <target state="translated">각 비트 쌍에 대해 OR 연산을 수행합니다. OR &lt;code&gt;b&lt;/code&gt; 를 산출 한 어느 경우 또는 &lt;code&gt;b&lt;/code&gt; 인 &lt;code&gt;1&lt;/code&gt; . &lt;code&gt;OR&lt;/code&gt; 연산 의 진리표 는 다음과 같습니다. &lt;code&gt;a&lt;/code&gt; &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="048de2a2e14152e7cbc265e64cfc821b02050579" translate="yes" xml:space="preserve">
          <source>Performs the XOR operation on each pair of bits. &lt;code&gt;a&lt;/code&gt; XOR &lt;code&gt;b&lt;/code&gt; yields 1 if &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are different. The truth table for the &lt;code&gt;XOR&lt;/code&gt; operation is:</source>
          <target state="translated">각 비트 쌍에 대해 XOR 연산을 수행합니다. XOR &lt;code&gt;b&lt;/code&gt; 수율 1 경우 및 &lt;code&gt;b&lt;/code&gt; 다르다. &lt;code&gt;XOR&lt;/code&gt; 조작 의 진리표 는 다음과 같습니다. &lt;code&gt;a&lt;/code&gt; &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="06642b201e14f96efbdeb5cce791e96908b03d86" translate="yes" xml:space="preserve">
          <source>Pipeline operator</source>
          <target state="translated">파이프 라인 연산자</target>
        </trans-unit>
        <trans-unit id="d5b280eb91f1615142f90aca52a72846ed660575" translate="yes" xml:space="preserve">
          <source>Pipeline operator draft</source>
          <target state="translated">파이프 라인 운영자 초안</target>
        </trans-unit>
        <trans-unit id="ac8b95fe0653bfa69771c87d3d0809b79010ae44" translate="yes" xml:space="preserve">
          <source>Placed between characters that would not normally be connected in order to cause the characters to be rendered using their connected form in certain languages (&lt;a href=&quot;http://en.wikipedia.org/wiki/Zero-width_joiner&quot;&gt;Wikipedia&lt;/a&gt;).</source>
          <target state="translated">특정 언어로 연결된 형식을 사용하여 문자가 렌더링되도록하기 위해 일반적으로 연결되지 않는 문자 사이에 배치됩니다 ( &lt;a href=&quot;http://en.wikipedia.org/wiki/Zero-width_joiner&quot;&gt;Wikipedia&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="ec1811eb9c6c5f3fc6cf69d4861960c7fe6c5320" translate="yes" xml:space="preserve">
          <source>Placed between characters to prevent being connected into ligatures in certain languages (&lt;a href=&quot;http://en.wikipedia.org/wiki/Zero-width_non-joiner&quot;&gt;Wikipedia&lt;/a&gt;).</source>
          <target state="translated">특정 언어에서 합자에 연결되지 않도록 문자 사이에 배치합니다 ( &lt;a href=&quot;http://en.wikipedia.org/wiki/Zero-width_non-joiner&quot;&gt;Wikipedia&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="3c6cfb404848197a3a59a6e4bef6ac4d555aec4c" translate="yes" xml:space="preserve">
          <source>Placeholder object which contains traps.</source>
          <target state="translated">트랩이 포함 된 자리 표시 자 개체</target>
        </trans-unit>
        <trans-unit id="2030faf65838eb92853ce1a2fd121237ed294b2a" translate="yes" xml:space="preserve">
          <source>Please check &lt;a href=&quot;https://github.com/Raynos/function-bind&quot;&gt;https://github.com/Raynos/function-bind&lt;/a&gt; for a more thorough solution!</source>
          <target state="translated">보다 철저한 해결책은 &lt;a href=&quot;https://github.com/Raynos/function-bind&quot;&gt;https://github.com/Raynos/function-bind&lt;/a&gt; 를 확인 하십시오 !</target>
        </trans-unit>
        <trans-unit id="9a8d726a14f07ce26ffe427822ddd37242f0a470" translate="yes" xml:space="preserve">
          <source>Please note that the above code includes non-enumerable keys in IE7 (and maybe IE8), when passing in an object from a different window.</source>
          <target state="translated">위의 코드에는 다른 창에서 객체를 전달할 때 IE7 (및 아마도 IE8)에 열거 할 수없는 키가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="824707829a091f4b6b6ce655178fa1aa851ef269" translate="yes" xml:space="preserve">
          <source>Please pick a number from 0 to 5!</source>
          <target state="translated">0에서 5까지의 숫자를 선택하십시오!</target>
        </trans-unit>
        <trans-unit id="6f37ed568b109ca7755a7822ca43fec724fc37a8" translate="yes" xml:space="preserve">
          <source>Please see &lt;a href=&quot;../parsefloat&quot;&gt;&lt;code&gt;parseFloat()&lt;/code&gt;&lt;/a&gt; for more details and examples.</source>
          <target state="translated">참조하시기 바랍니다 &lt;a href=&quot;../parsefloat&quot;&gt; &lt;code&gt;parseFloat()&lt;/code&gt; &lt;/a&gt; 자세한 내용과 예제.</target>
        </trans-unit>
        <trans-unit id="c3dd3217e3f39f46455fa17b05af37c526e73b1e" translate="yes" xml:space="preserve">
          <source>Please see the compatibility table for support for these notations. In non-supporting environments, these notations will lead to syntax errors.</source>
          <target state="translated">이러한 표기법에 대한 지원은 호환성 표를 참조하십시오. 지원되지 않는 환경에서는 이러한 표기법으로 구문 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f9963311597b92a338f51a48c693ff31cd5b3de0" translate="yes" xml:space="preserve">
          <source>Please vote for bug &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1428672&quot;&gt;#1428672&lt;/a&gt;.</source>
          <target state="translated">버그 &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1428672&quot;&gt;# 1428672에&lt;/a&gt; 투표하십시오 .</target>
        </trans-unit>
        <trans-unit id="acd8eb6389e2d00ac7f83d072be1a74856802401" translate="yes" xml:space="preserve">
          <source>PluralRules</source>
          <target state="translated">PluralRules</target>
        </trans-unit>
        <trans-unit id="8428d4bc4238ead6caaf538ec42ed829fd87ae32" translate="yes" xml:space="preserve">
          <source>PluralRules instances</source>
          <target state="translated">PluralRules 인스턴스</target>
        </trans-unit>
        <trans-unit id="d2e580ddaf5ad433e2ae0a045171e309e7d095ef" translate="yes" xml:space="preserve">
          <source>PluralRules.prototype</source>
          <target state="translated">PluralRules.prototype</target>
        </trans-unit>
        <trans-unit id="386060e47bb9620dd562e25ae215ab14cc8ec640" translate="yes" xml:space="preserve">
          <source>PluralRules.supportedLocalesOf</source>
          <target state="translated">PluralRules.supportedLocalesOf</target>
        </trans-unit>
        <trans-unit id="c7f8b2ce36d754258a1049b6554c957ec7144f57" translate="yes" xml:space="preserve">
          <source>Points to the object which was used as prototype when the object was instantiated.</source>
          <target state="translated">객체가 인스턴스화 될 때 프로토 타입으로 사용 된 객체를 가리 킵니다.</target>
        </trans-unit>
        <trans-unit id="385161d4d6239aa9d8cfba9011b2fc14a2cae659" translate="yes" xml:space="preserve">
          <source>Poisoned arguments and function properties</source>
          <target state="translated">중독 된 인수 및 함수 속성</target>
        </trans-unit>
        <trans-unit id="861260cecd797e42301015d1972945d6ccce6883" translate="yes" xml:space="preserve">
          <source>Polyfill</source>
          <target state="translated">Polyfill</target>
        </trans-unit>
        <trans-unit id="4641cbf4c964e96c826ce0d6480a31d1f185c6bc" translate="yes" xml:space="preserve">
          <source>Polyfill for JavaScript 1.8.5 Array Generics and ECMAScript 5 Array Extras</source>
          <target state="translated">JavaScript 1.8.5 Array Generics 및 ECMAScript 5 Array Extras 용 Polyfill</target>
        </trans-unit>
        <trans-unit id="81c0d91f96109423cf92ed87713efb4b687ab5ef" translate="yes" xml:space="preserve">
          <source>Polyfill: &lt;a href=&quot;https://npmjs.com/symbol.prototype.description&quot;&gt;https://npmjs.com/symbol.prototype.description&lt;/a&gt;</source>
          <target state="translated">폴리 필 : &lt;a href=&quot;https://npmjs.com/symbol.prototype.description&quot;&gt;https://npmjs.com/symbol.prototype.description&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a482533f4e911098c5cb83fec7ff48c2e1dff2b6" translate="yes" xml:space="preserve">
          <source>Position of an element in the String to return the code point value from.</source>
          <target state="translated">코드 포인트 값을 반환 할 String의 요소 위치입니다.</target>
        </trans-unit>
        <trans-unit id="8115a639b15f8ed236c3f5ce369a90ee8054d516" translate="yes" xml:space="preserve">
          <source>Positive when the &lt;strong&gt;referenceStr&lt;/strong&gt; occurs after &lt;strong&gt;compareStr&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;compareStr&lt;/strong&gt; 후 &lt;strong&gt;referenceStr이&lt;/strong&gt; 발생 하면 양수&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7187f4a5bae2d0b9aba033f111cf36fb2a625ac0" translate="yes" xml:space="preserve">
          <source>Possible name</source>
          <target state="translated">가능한 이름</target>
        </trans-unit>
        <trans-unit id="b91cf1ae723ff87c860c35441320ab256797ddac" translate="yes" xml:space="preserve">
          <source>Possible types are the following:</source>
          <target state="translated">가능한 유형은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4d70807dc1506828d637e6326b2e4bb869f7cdfb" translate="yes" xml:space="preserve">
          <source>Postfix decrement operator.</source>
          <target state="translated">접미사 감소 연산자.</target>
        </trans-unit>
        <trans-unit id="7a6c13e57bb0dd2b40af53ae508a0efc8ccc647f" translate="yes" xml:space="preserve">
          <source>Postfix increment operator.</source>
          <target state="translated">접미사 증가 연산자.</target>
        </trans-unit>
        <trans-unit id="554fa762c49a2eb45220d16a90b3ecaa1ab83b09" translate="yes" xml:space="preserve">
          <source>Postfix/prefix increment and postfix/prefix decrement operators.</source>
          <target state="translated">접미사 / 접두사 증가 및 접미사 / 접두사 감소 연산자.</target>
        </trans-unit>
        <trans-unit id="fd958cb6778f09b8c85ccdeb861b7d528746ccf1" translate="yes" xml:space="preserve">
          <source>PostfixExpressions (&lt;code&gt;++&lt;/code&gt; and &lt;code&gt;--&lt;/code&gt;)</source>
          <target state="translated">PostfixExpressions ( &lt;code&gt;++&lt;/code&gt; 및 &lt;code&gt;--&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="ab86fb82a986460447b29bbb55ca5b9bf867bad6" translate="yes" xml:space="preserve">
          <source>Precedence</source>
          <target state="translated">Precedence</target>
        </trans-unit>
        <trans-unit id="c25e61afe7a12e8bf7bdbc7ac760c0869b04e05b" translate="yes" xml:space="preserve">
          <source>Precision range</source>
          <target state="translated">정밀 범위</target>
        </trans-unit>
        <trans-unit id="5d7f7a2055f7bfa295e317f51f2d308a42918879" translate="yes" xml:space="preserve">
          <source>Prefix Decrement</source>
          <target state="translated">접두사 감소</target>
        </trans-unit>
        <trans-unit id="52c93548f6e62a78aea544846e62676f5ed3268f" translate="yes" xml:space="preserve">
          <source>Prefix Increment</source>
          <target state="translated">접두사 증가</target>
        </trans-unit>
        <trans-unit id="80c6789b161f8637e676457667e14b1f61e9186e" translate="yes" xml:space="preserve">
          <source>Prefix decrement operator.</source>
          <target state="translated">접두사 감소 연산자.</target>
        </trans-unit>
        <trans-unit id="a02a8ac5419c23091d1afedbb51a5e4492e47615" translate="yes" xml:space="preserve">
          <source>Prefix increment operator.</source>
          <target state="translated">접두사 증가 연산자.</target>
        </trans-unit>
        <trans-unit id="0646b6711c2af89858db2e2acb58c3e1fa19df2a" translate="yes" xml:space="preserve">
          <source>Prevents any extensions of an object.</source>
          <target state="translated">객체의 확장을 방지합니다.</target>
        </trans-unit>
        <trans-unit id="4aece9f02fb882ae320995e9dac94a0ef8de399c" translate="yes" xml:space="preserve">
          <source>Prevents other code from deleting properties of an object.</source>
          <target state="translated">다른 코드가 객체의 속성을 삭제하지 못하게합니다.</target>
        </trans-unit>
        <trans-unit id="55293cf6c873337c9aee67eb53739ef7982e721c" translate="yes" xml:space="preserve">
          <source>Previewing ES6 Modules and more from ES2015, ES2016 and beyond</source>
          <target state="translated">ES2015, ES2016 이상에서 ES6 모듈 미리보기</target>
        </trans-unit>
        <trans-unit id="610cd0ab8c3ab5b15fdfa49aabc7a8429ee0623d" translate="yes" xml:space="preserve">
          <source>Primary expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="259f70d9db53b10c848345665e63848d7f8cb597" translate="yes" xml:space="preserve">
          <source>Primary overload &amp;mdash; taking wasm binary code</source>
          <target state="translated">기본 과부하 &amp;mdash; wasm 이진 코드 사용</target>
        </trans-unit>
        <trans-unit id="5422cca2b6375e98d06e0cea7a029e411ec33c59" translate="yes" xml:space="preserve">
          <source>Primitives will be wrapped to objects</source>
          <target state="translated">프리미티브는 객체에 래핑됩니다</target>
        </trans-unit>
        <trans-unit id="60e61da3f99be64e7172bb51cf510ac5adc26482" translate="yes" xml:space="preserve">
          <source>Printing the contents of a &lt;code&gt;Map&lt;/code&gt; object</source>
          <target state="translated">&lt;code&gt;Map&lt;/code&gt; 객체 의 내용 인쇄</target>
        </trans-unit>
        <trans-unit id="c08660ce61166c224422f7e20b42a1fc7ccb6559" translate="yes" xml:space="preserve">
          <source>Printing the contents of an array</source>
          <target state="translated">배열의 내용 인쇄</target>
        </trans-unit>
        <trans-unit id="598f61285f6461490f37827709d6f0c5ca60cfda" translate="yes" xml:space="preserve">
          <source>Prior to ECMAScript 2018, the format of the return value varied according to the platform. The most common return value was an RFC-1123 formatted date stamp, which is a slightly updated version of RFC-822 date stamps.</source>
          <target state="translated">ECMAScript 2018 이전에는 반환 값 형식이 플랫폼에 따라 다릅니다. 가장 일반적인 반환 값은 RFC-1123 형식의 날짜 스탬프로, 약간 업데이트 된 버전의 RFC-822 날짜 스탬프입니다.</target>
        </trans-unit>
        <trans-unit id="a45b0fc13c4a286e2cb2d6751b4448749bde05ac" translate="yes" xml:space="preserve">
          <source>Prior to ES5.1, implementations were not required to throw a range error exception if &lt;code&gt;toLocaleString&lt;/code&gt; is called with arguments.</source>
          <target state="translated">ES5.1 이전에는 &lt;code&gt;toLocaleString&lt;/code&gt; 이 인수와 함께 호출 된 경우 구현시 범위 오류 예외가 발생하지 않았습니다 .</target>
        </trans-unit>
        <trans-unit id="11494d8429a96e964db9c40b2f7b253d1e310387" translate="yes" xml:space="preserve">
          <source>Prior to Firefox 13, &lt;code&gt;const&lt;/code&gt; is implemented, but re-assignment is not failing.</source>
          <target state="translated">Firefox 13 이전에는 &lt;code&gt;const&lt;/code&gt; 가 구현되었지만 재 할당이 실패하지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="a2ff9bde5355ef3e4d769109a8caab803c0423cc" translate="yes" xml:space="preserve">
          <source>Prior to Firefox 28, &lt;code&gt;Object.getOwnPropertyNames&lt;/code&gt; did not see unresolved properties of &lt;a href=&quot;../error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; objects. This has been fixed in later versions (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=724768&quot;&gt;bug 724768&lt;/a&gt;).</source>
          <target state="translated">Firefox 28 이전에는 &lt;code&gt;Object.getOwnPropertyNames&lt;/code&gt; 에 &lt;a href=&quot;../error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; 객체 의 확인할 수없는 속성이 없었습니다 . 이 문제는 이후 버전에서 수정되었습니다 ( &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=724768&quot;&gt;버그 724768&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="b782063d9c67e14039942de9df5c647fc14c807f" translate="yes" xml:space="preserve">
          <source>Prior to Firefox 33 (Firefox 33 / Thunderbird 33 / SeaMonkey 2.30), &lt;code&gt;WeakMap.prototype.set&lt;/code&gt; returned &lt;code&gt;undefined&lt;/code&gt; and was not chainable. This has been fixed (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1031632&quot;&gt;bug 1031632&lt;/a&gt;). The behavior can be found in Chrome/v8 as well (&lt;a href=&quot;https://code.google.com/p/v8/issues/detail?id=3410&quot;&gt;issue&lt;/a&gt;).</source>
          <target state="translated">Firefox 33 (Firefox 33 / Thunderbird 33 / SeaMonkey 2.30) 이전에는 &lt;code&gt;WeakMap.prototype.set&lt;/code&gt; 이 &lt;code&gt;undefined&lt;/code&gt; 상태 로 반환 되었으며 연결이 불가능했습니다. 이 문제가 해결되었습니다 ( &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1031632&quot;&gt;버그 1031632&lt;/a&gt; ). Chrome / v8에서도 &lt;a href=&quot;https://code.google.com/p/v8/issues/detail?id=3410&quot;&gt;문제가 발생&lt;/a&gt; 합니다 ( 문제 ).</target>
        </trans-unit>
        <trans-unit id="1d68e7f5d4ca2fc5d4715ca0d2e5c0d92658b30f" translate="yes" xml:space="preserve">
          <source>Prior to Firefox 38, this method threw a &lt;code&gt;TypeError&lt;/code&gt; when the key parameter was not an object. However, the ES2015 specification specifies to return &lt;code&gt;undefined&lt;/code&gt; instead. Furthermore, &lt;code&gt;WeakMap.prototype.get&lt;/code&gt; accepted an optional second argument as a fallback value, which is not part of the standard. Both non-standard behaviors are removed in version 38 and higher.</source>
          <target state="translated">Firefox 38 이전 에는 키 매개 변수가 오브젝트가 아닌 경우이 메소드에서 &lt;code&gt;TypeError&lt;/code&gt; 가 발생했습니다. 그러나 ES2015 사양은 대신 &lt;code&gt;undefined&lt;/code&gt; 를 반환하도록 지정합니다 . 또한 &lt;code&gt;WeakMap.prototype.get&lt;/code&gt; 은 선택적인 두 번째 인수를 대체 값으로 받아들였으며 이는 표준의 일부가 아닙니다. 비표준 동작은 버전 38 이상에서 제거되었습니다.</target>
        </trans-unit>
        <trans-unit id="aed05aa450b8fb9295179bd768520f68c9659a71" translate="yes" xml:space="preserve">
          <source>Prior to Firefox 38, this method threw a &lt;code&gt;TypeError&lt;/code&gt; when the key parameter was not an object. This has been fixed in version 38 and later to return &lt;code&gt;false&lt;/code&gt; as per the ES2015 standard.</source>
          <target state="translated">Firefox 38 이전 에는 키 매개 변수가 오브젝트가 아닌 경우이 메소드에서 &lt;code&gt;TypeError&lt;/code&gt; 가 발생했습니다. ES2015 표준에 따라 &lt;code&gt;false&lt;/code&gt; 를 반환하도록 버전 38 이상에서 수정되었습니다 .</target>
        </trans-unit>
        <trans-unit id="dc0e5e1e26f88db7de26b453a4be0ac4cb086be7" translate="yes" xml:space="preserve">
          <source>Prior to Firefox 39, a line terminator (&lt;code&gt;\n&lt;/code&gt;) was incorrectly allowed after arrow function arguments. This has been fixed to conform to the ES2015 specification and code like &lt;code&gt;() \n =&amp;gt; {}&lt;/code&gt; will now throw a &lt;code&gt;SyntaxError&lt;/code&gt; in this and later versions.</source>
          <target state="translated">Firefox 39 이전에는 화살표 함수 인수 뒤에 줄 종결 자 ( &lt;code&gt;\n&lt;/code&gt; )가 잘못 허용되었습니다. 이것은 ES2015 사양을 준수하도록 수정되었으며 &lt;code&gt;() \n =&amp;gt; {}&lt;/code&gt; 과 같은 코드 는 이제이 이후 버전에서 &lt;code&gt;SyntaxError&lt;/code&gt; 를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="8c60ea5ccc15a487a0e1d815e590bf6e14ab3ad4" translate="yes" xml:space="preserve">
          <source>Prior to Firefox 44, &lt;code&gt;let&lt;/code&gt; is only available to code blocks in HTML wrapped in a &lt;code&gt;&amp;lt;script type=&quot;application/javascript;version=1.7&quot;&amp;gt;&lt;/code&gt; block (or higher version) and has different semantics (e.g. no temporal dead zone).</source>
          <target state="translated">이전 파이어 폭스 (44), &lt;code&gt;let&lt;/code&gt; A의 포장 HTML 코드 블록 만 사용할 수 있습니다 &lt;code&gt;&amp;lt;script type=&quot;application/javascript;version=1.7&quot;&amp;gt;&lt;/code&gt; 블록 (또는 그 이상 버전)과 다른 의미 (예를 들어, 어떤 시간적 데드 존)가 있습니다.</target>
        </trans-unit>
        <trans-unit id="d5f5b9f32b9e6fc92c91ac5f802d8b198feb1ac3" translate="yes" xml:space="preserve">
          <source>Prior to Firefox 46, a &lt;code&gt;TypeError&lt;/code&gt; is thrown on redeclaration instead of a &lt;code&gt;SyntaxError&lt;/code&gt;.</source>
          <target state="translated">Firefox 46 이전에는 &lt;code&gt;SyntaxError&lt;/code&gt; 대신 &lt;code&gt;TypeError&lt;/code&gt; 가 재 선언시 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="023782acaafdec2c4dcd5f3f0fd6a75b710fe874" translate="yes" xml:space="preserve">
          <source>Prior to Firefox 46, a &lt;code&gt;TypeError&lt;/code&gt; was thrown on redeclaration instead of a &lt;code&gt;SyntaxError&lt;/code&gt;.</source>
          <target state="translated">Firefox 46 이전에는 &lt;code&gt;SyntaxError&lt;/code&gt; 대신 &lt;code&gt;TypeError&lt;/code&gt; 가 재 선언시 발생했습니다 .</target>
        </trans-unit>
        <trans-unit id="4609aac79321c8913932087919ad8fd38e6e143c" translate="yes" xml:space="preserve">
          <source>Prior to Firefox 48, a non-standard, global &lt;code&gt;RegExp.multiline&lt;/code&gt; property existed in addition to this &lt;code&gt;RegExp.prototype.multiline&lt;/code&gt; property. It is removed in newer versions (see &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1219757&quot;&gt;bug 1219757&lt;/a&gt;). Use the property described on this page or the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#Advanced_searching_with_flags&quot;&gt;m flag&lt;/a&gt; instead.</source>
          <target state="translated">Firefox 48 이전에는 이 &lt;code&gt;RegExp.prototype.multiline&lt;/code&gt; 속성 외에 비표준 전역 &lt;code&gt;RegExp.multiline&lt;/code&gt; 속성이있었습니다 . 최신 버전에서는 제거되었습니다 ( &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1219757&quot;&gt;버그 1219757&lt;/a&gt; 참조 ). 이 페이지에 설명 된 속성 또는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#Advanced_searching_with_flags&quot;&gt;m 플래그를&lt;/a&gt; 대신 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="3e7f2f395930e55a89c746d61cfd1af1dcd7c3b3" translate="yes" xml:space="preserve">
          <source>Prior to Firefox 48, the latest API names and semantics weren't implemented yet. The changes between Firefox version 46 and version 48 are:</source>
          <target state="translated">Firefox 48 이전에는 최신 API 이름과 의미가 아직 구현되지 않았습니다. Firefox 버전 46과 버전 48의 변경 사항은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a773a65225239550f42adfff69b7725275253b84" translate="yes" xml:space="preserve">
          <source>Prior to Firefox 49 (Firefox 49 / Thunderbird 49 / SeaMonkey 2.46), this was thrown as a &lt;a href=&quot;../global_objects/typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1275240&quot;&gt;bug 1275240&lt;/a&gt;).</source>
          <target state="translated">Firefox 49 (Firefox 49 / Thunderbird 49 / SeaMonkey 2.46) 이전에는 &lt;a href=&quot;../global_objects/typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; ( &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1275240&quot;&gt;버그 1275240&lt;/a&gt; ) 로 발생했습니다 .</target>
        </trans-unit>
        <trans-unit id="55503c5269273e9b111c9c7ab64f3cf51732f187" translate="yes" xml:space="preserve">
          <source>Prior to Firefox 51, using the &lt;code&gt;for...of&lt;/code&gt; loop construct with the &lt;code&gt;const&lt;/code&gt; keyword threw a &lt;code&gt;SyntaxError&lt;/code&gt; (&quot;missing = in const declaration&quot;).</source>
          <target state="translated">Firefox 51 이전에는 &lt;code&gt;const&lt;/code&gt; 키워드 와 함께 &lt;code&gt;for...of&lt;/code&gt; 루프 구문을 사용하면 &lt;code&gt;SyntaxError&lt;/code&gt; 가 발생했습니다 ( &quot;const 선언에서 = missing&quot;).</target>
        </trans-unit>
        <trans-unit id="8f8b6398a7fb81ecbb95f18b8da819e9c1b91eb9" translate="yes" xml:space="preserve">
          <source>Prior to Firefox 8, &lt;code&gt;test()&lt;/code&gt; was implemented incorrectly; when it was called with no parameters, it would match against the value of the previous input (&lt;code&gt;RegExp.input&lt;/code&gt; property) instead of against the string &lt;code&gt;&quot;undefined&quot;&lt;/code&gt;. This is fixed; now &lt;code&gt;/undefined/.test()&lt;/code&gt; correctly results in &lt;code&gt;true&lt;/code&gt;, instead of an error.</source>
          <target state="translated">Firefox 8 이전에는 &lt;code&gt;test()&lt;/code&gt; 가 잘못 구현되었습니다. 매개 변수없이 호출 되면 문자열 &lt;code&gt;&quot;undefined&quot;&lt;/code&gt; 대신 이전 입력 값 ( &lt;code&gt;RegExp.input&lt;/code&gt; 속성) 과 일치합니다 . 이것은 고정되어 있습니다. 이제 &lt;code&gt;/undefined/.test()&lt;/code&gt; 오류가 아닌 &lt;code&gt;true&lt;/code&gt; 로 올바르게 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="4407c39999b25c23234d18647959ce0c2c10bd8c" translate="yes" xml:space="preserve">
          <source>Prior to Gecko 26 (Firefox 26 / Thunderbird 26 / SeaMonkey 2.23 / Firefox OS 1.2), the following code resulted in a &lt;a href=&quot;../global_objects/syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt;. This was fixed in &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=777060&quot;&gt;bug 777060&lt;/a&gt;. Parameters are still set left-to-right, overwriting default parameters even if there are later parameters without defaults.</source>
          <target state="translated">Gecko 26 (Firefox 26 / Thunderbird 26 / SeaMonkey 2.23 / Firefox OS 1.2) 이전에는 다음 코드에서 &lt;a href=&quot;../global_objects/syntaxerror&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; 가&lt;/a&gt; 발생했습니다 . &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=777060&quot;&gt;버그 777060&lt;/a&gt; 에서 수정되었습니다 . 기본값이없는 이후의 매개 변수가 있어도 매개 변수는 여전히 왼쪽에서 오른쪽으로 설정되어 기본 매개 변수를 겹쳐 씁니다.</target>
        </trans-unit>
        <trans-unit id="9ecf802dc3430a33c848fd5a82784d3f8bb6632e" translate="yes" xml:space="preserve">
          <source>Prior to Gecko 8.0, &lt;code&gt;search()&lt;/code&gt; was implemented incorrectly; when it was called with no parameters or with &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;, it would match against the string 'undefined', instead of matching against the empty string. This is fixed; now &lt;code&gt;'a'.search()&lt;/code&gt; and &lt;code&gt;'a'.search(undefined)&lt;/code&gt; correctly return 0.</source>
          <target state="translated">Gecko 8.0 이전에는 &lt;code&gt;search()&lt;/code&gt; 가 잘못 구현되었습니다. 매개 변수없이 또는 &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; 로 호출 되면 빈 문자열과 일치하는 대신 'undefined'문자열과 일치합니다. 이것은 고정되어 있습니다. 이제 &lt;code&gt;'a'.search()&lt;/code&gt; 및 &lt;code&gt;'a'.search(undefined)&lt;/code&gt; 올바르게 0을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4ab73111e0a2ee9e7979572f0a956240baf485d8" translate="yes" xml:space="preserve">
          <source>Prior to SpiderMonkey 40 (Firefox 40 / Thunderbird 40 / SeaMonkey 2.37), it was possible to use an initializer expression (&lt;code&gt;i=0&lt;/code&gt;) in a &lt;code&gt;for...in&lt;/code&gt; loop:</source>
          <target state="translated">SpiderMonkey 40 (Firefox 40 / Thunderbird 40 / SeaMonkey 2.37) 이전 에는 &lt;code&gt;for...in&lt;/code&gt; 루프 에서 초기화 표현식 ( &lt;code&gt;i=0&lt;/code&gt; ) 을 사용할 수있었습니다 .</target>
        </trans-unit>
        <trans-unit id="fe4c7d1a282fcfc7fb8286a314c9692cc5914527" translate="yes" xml:space="preserve">
          <source>Prior to the &lt;a href=&quot;https://github.com/tc39/proposal-json-superset&quot;&gt;proposal to make all JSON text valid ECMA-262&lt;/a&gt;, U+2028 &amp;lt;LS&amp;gt; and U+2029 &amp;lt;PS&amp;gt;, were also disallowed from appearing unescaped in string literals.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/tc39/proposal-json-superset&quot;&gt;모든 JSON 텍스트를 유효한 ECMA-262로 만들기&lt;/a&gt; 전에 U + 2028 &amp;lt;LS&amp;gt; 및 U + 2029 &amp;lt;PS&amp;gt;도 문자열 리터럴에서 이스케이프되지 않은 것으로 표시되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="15c4594df3261281f9be4bec152d1a8e84be8bcc" translate="yes" xml:space="preserve">
          <source>Prior to the introduction of &lt;code&gt;Reflect&lt;/code&gt;, objects could be constructed using an arbitrary combination of constructor and prototype by using &lt;code&gt;Object.create()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Reflect&lt;/code&gt; 를 도입하기 전에 &lt;code&gt;Object.create()&lt;/code&gt; 를 사용하여 생성자와 프로토 타입을 임의로 조합하여 객체를 생성 할 수있었습니다 .</target>
        </trans-unit>
        <trans-unit id="cb5e77c9c13c297ff5fe8f919ad7e6d8fbc5beea" translate="yes" xml:space="preserve">
          <source>Private field declarations</source>
          <target state="translated">개인 필드 선언</target>
        </trans-unit>
        <trans-unit id="b59d4b39c1d919a9a5c18b55489c8ad6bbd0f32a" translate="yes" xml:space="preserve">
          <source>Private fields can only be declared up-front in a field declaration.</source>
          <target state="translated">개인 필드는 필드 선언에서 선결제로만 선언 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5e7748e3117eb15531f53549b03f190a497e0033" translate="yes" xml:space="preserve">
          <source>Private fields cannot be created later through assigning to them, the way that normal properties can.</source>
          <target state="translated">개인 필드는 나중에 일반 속성과 같은 방식으로 할당하여 만들 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="b361703cb1efe8d2b72f66e5cfa406bf8681ac97" translate="yes" xml:space="preserve">
          <source>Processing and then returning</source>
          <target state="translated">처리 후 반납</target>
        </trans-unit>
        <trans-unit id="3bedd623760b090565d0b7a268536d1c1486ea56" translate="yes" xml:space="preserve">
          <source>Prohibits some syntax likely to be defined in future versions of ECMAScript.</source>
          <target state="translated">향후 버전의 ECMAScript에서 정의 될 수있는 일부 구문을 금지합니다.</target>
        </trans-unit>
        <trans-unit id="fe5671922bc7f67cfabfa60ab97a9542ac21f39f" translate="yes" xml:space="preserve">
          <source>Promise</source>
          <target state="translated">Promise</target>
        </trans-unit>
        <trans-unit id="fc451ab6467c10fa3bc973762a17fde190c5873c" translate="yes" xml:space="preserve">
          <source>Promise polyfill</source>
          <target state="translated">약속 폴리 필</target>
        </trans-unit>
        <trans-unit id="a2d62b627f5458d2aab20eb796d7e90107bf6267" translate="yes" xml:space="preserve">
          <source>Promise prototype</source>
          <target state="translated">약속 프로토 타입</target>
        </trans-unit>
        <trans-unit id="32c88e7c01a53d5b288b9de6a6aab20cb547871d" translate="yes" xml:space="preserve">
          <source>Promise.all</source>
          <target state="translated">Promise.all</target>
        </trans-unit>
        <trans-unit id="9aae4c180de3d75c4b16763fea8dbaf062a9bf00" translate="yes" xml:space="preserve">
          <source>Promise.prototype</source>
          <target state="translated">Promise.prototype</target>
        </trans-unit>
        <trans-unit id="6196396df0252ad4dc6749ba58e4f523ddc5109d" translate="yes" xml:space="preserve">
          <source>Promise.race</source>
          <target state="translated">Promise.race</target>
        </trans-unit>
        <trans-unit id="783910d23dd1b1558a9b16d71c0ed4b397115fd3" translate="yes" xml:space="preserve">
          <source>Promise.reject</source>
          <target state="translated">Promise.reject</target>
        </trans-unit>
        <trans-unit id="0a3c75bb1d9e15c9996579992a0721a69da28c55" translate="yes" xml:space="preserve">
          <source>Promise.resolve</source>
          <target state="translated">Promise.resolve</target>
        </trans-unit>
        <trans-unit id="7664a4abe20d7ac598228ecad6a723a90fe120cb" translate="yes" xml:space="preserve">
          <source>Promises/A+ specification</source>
          <target state="translated">약속 / A + 사양</target>
        </trans-unit>
        <trans-unit id="bc6c88db2f0703a9e2461a4a8060ccf1cb881998" translate="yes" xml:space="preserve">
          <source>Properties</source>
          <target state="translated">Properties</target>
        </trans-unit>
        <trans-unit id="31d18cd6c43a88313408e0ae4ebef8c7767bb576" translate="yes" xml:space="preserve">
          <source>Properties and Methods of &lt;code&gt;Function&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Function&lt;/code&gt; 및 기능</target>
        </trans-unit>
        <trans-unit id="b75170367e62b9cd1086c002fcf14628437d7109" translate="yes" xml:space="preserve">
          <source>Properties in the target object will be overwritten by properties in the sources if they have the same key. Later sources' properties will similarly overwrite earlier ones.</source>
          <target state="translated">대상 객체의 속성은 동일한 키를 가진 소스의 속성으로 덮어 씁니다. 나중에 소스의 속성은 이전의 속성을 마찬가지로 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="f58ff474a557b051f47c4e475a67629e86b33de8" translate="yes" xml:space="preserve">
          <source>Properties of the &lt;code&gt;Object&lt;/code&gt; constructor</source>
          <target state="translated">&lt;code&gt;Object&lt;/code&gt; 생성자의 속성</target>
        </trans-unit>
        <trans-unit id="a1da053818541c29e78db91817ebd3f51d198b28" translate="yes" xml:space="preserve">
          <source>Properties on the prototype chain and non-enumerable properties cannot be copied</source>
          <target state="translated">프로토 타입 체인의 속성 및 열거 할 수없는 속성은 복사 할 수 없습니다</target>
        </trans-unit>
        <trans-unit id="9ae33a7d0ecb82cae8f04aafab20bf90425b7b8c" translate="yes" xml:space="preserve">
          <source>Property</source>
          <target state="translated">Property</target>
        </trans-unit>
        <trans-unit id="30b9a4b09fd8983f04af83efd6a82b355095ee3c" translate="yes" xml:space="preserve">
          <source>Property Accessors</source>
          <target state="translated">속성 접근 자</target>
        </trans-unit>
        <trans-unit id="c250a939425c6fc56d3c5dfb59b1a229e6fe841d" translate="yes" xml:space="preserve">
          <source>Property access</source>
          <target state="translated">재산 접근</target>
        </trans-unit>
        <trans-unit id="13b96f04bb41ebb94ae1be018bf309239a65a8cf" translate="yes" xml:space="preserve">
          <source>Property access denied</source>
          <target state="translated">부동산 접근 거부</target>
        </trans-unit>
        <trans-unit id="5fb5c73753cfcafa3201d1700c6bab6a336e9da4" translate="yes" xml:space="preserve">
          <source>Property access vs. concatenation</source>
          <target state="translated">재산 접근 대 연결</target>
        </trans-unit>
        <trans-unit id="4ae2ec59c4a195103b97463957d1e975bb63ca34" translate="yes" xml:space="preserve">
          <source>Property access: &lt;code&gt;proxy[foo]&lt;/code&gt;and &lt;code&gt;proxy.bar&lt;/code&gt;</source>
          <target state="translated">속성 액세스 : &lt;code&gt;proxy[foo]&lt;/code&gt; 및 &lt;code&gt;proxy.bar&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c515eb64c5d2003c02374f793865a24b34cccfc2" translate="yes" xml:space="preserve">
          <source>Property accessors</source>
          <target state="translated">속성 접근 자</target>
        </trans-unit>
        <trans-unit id="df2a8bca56baf39064e7f67577a52b110fc80560" translate="yes" xml:space="preserve">
          <source>Property accessors provide access to an object's properties by using the dot notation or the bracket notation.</source>
          <target state="translated">속성 접근자는 점 표기법 또는 대괄호 표기법을 사용하여 개체 속성에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="79b9f56f756a8c45c35d42e82faf2d4d18ac3a82" translate="yes" xml:space="preserve">
          <source>Property assignment: &lt;code&gt;proxy[foo] = bar&lt;/code&gt; and &lt;code&gt;proxy.foo = bar&lt;/code&gt;</source>
          <target state="translated">속성 할당 : &lt;code&gt;proxy[foo] = bar&lt;/code&gt; 및 &lt;code&gt;proxy.foo = bar&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5a132385f285a7161791c6ab0b041b2ffd5446d4" translate="yes" xml:space="preserve">
          <source>Property attributes must be set to some values. The &lt;code&gt;configurable&lt;/code&gt;, &lt;code&gt;enumerable&lt;/code&gt; and &lt;code&gt;writable&lt;/code&gt; attributes should all be set to &lt;code&gt;true&lt;/code&gt; for data descriptor and &lt;code&gt;true&lt;/code&gt; for &lt;code&gt;configurable&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt; for &lt;code&gt;enumerable&lt;/code&gt; for accessor descriptor.(?) Any attempt to provide other value(?) will result in an error being thrown.</source>
          <target state="translated">특성 속성은 일부 값으로 설정해야합니다. &lt;code&gt;configurable&lt;/code&gt; , &lt;code&gt;enumerable&lt;/code&gt; 및 &lt;code&gt;writable&lt;/code&gt; 속성은 모든 설정해야 &lt;code&gt;true&lt;/code&gt; 데이터 기술자 및 &lt;code&gt;true&lt;/code&gt; 에 대한 &lt;code&gt;configurable&lt;/code&gt; , &lt;code&gt;false&lt;/code&gt; 에 대한 &lt;code&gt;enumerable&lt;/code&gt; 접근 기술자. (?) 다른 가치를 제공하려는 시도를 (?) 오류가 발생되고 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f56ef6d3c3b50511c45556e71f315263fb91d590" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;Array.length&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Array.length&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="148ec6c28aebd76eebec8baf328552481045580b" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;Array.prototype&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Array.prototype&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="0ef04642cbc1378099370dcb8ac246885c6e232d" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;Array.prototype[@@unscopables]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Array.prototype[@@unscopables]&lt;/code&gt; 속성 특성 [@@ unscopables]</target>
        </trans-unit>
        <trans-unit id="a5c83c731ddec9cb6654a0414650c73e0d3062bf" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;ArrayBuffer.prototype&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ArrayBuffer.prototype&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="dd967371dfea126d641dff3b0f6b495ee8b6084d" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;Boolean.prototype&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Boolean.prototype&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="ead14c6aea2abd35dac950a6b00d199204ea6c11" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;DataView.prototype&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;DataView.prototype&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="251af90757367fe08b59990a6744d8ccf9943881" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;Date.prototype&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Date.prototype&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="2fdade6b2eb8ad61e6e71e2f00de39f746c2b65f" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;Error.prototype&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Error.prototype&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="c1bb8f40ad8eee09b95fd7f67b45df80d84e6e87" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;EvalError.prototype&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;EvalError.prototype&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="5e0e0897d2426abc82f8584f90648e9b3235f34d" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;Function.length&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Function.length&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="0b68a5ccb2ae398269d5a3ee072ffafe982a7fe7" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;Function.prototype.name&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Function.prototype.name&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="7b96e5f8aab2a408e173f84dbbeeb5a31a9c6ec9" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;Infinity&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Infinity&lt;/code&gt; 속성 속성</target>
        </trans-unit>
        <trans-unit id="2ae0feaa6361e00c589b40e7e19290abe619e4b5" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;Intl.Collator.prototype&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Intl.Collator.prototype&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="102230e5fdd6ae9f3288cb1dd3449184bdfbd1ef" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;Intl.DateTimeFormat.prototype&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Intl.DateTimeFormat.prototype&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="c77eac287f3ab3a53a5673b7a9aa8a913e40856f" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;Intl.NumberFormat.prototype&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Intl.NumberFormat.prototype&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="cd79f068bb856397e29e09861369f036d4589b14" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;Intl.PluralRules.prototype&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Intl.PluralRules.prototype&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="b9d1538e6e22cd36545c9f76adb9aac4d249e024" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;Map.prototype&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Map.prototype&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="30544bec1e65bc2eaf143682b9e1491d3119a51c" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;Map.prototype[@@toStringTag]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Map.prototype[@@toStringTag]&lt;/code&gt; 의 속성 속성</target>
        </trans-unit>
        <trans-unit id="57b721810f5d77515c3d966de1c5d7d3d5e468aa" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;Math.E&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Math.E&lt;/code&gt; 의 속성 속성</target>
        </trans-unit>
        <trans-unit id="d433ef7242b156b780629935dc08ed048bb4618e" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;Math.LN10&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Math.LN10&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="ef0498d0c6154b6656b6b27a96bc6aacefd396a5" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;Math.LN2&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Math.LN2&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="2f5616e6f0e6dbff58f6ef155ed2bb3af44962db" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;Math.LOG10E&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Math.LOG10E&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="a43d48eee36dde9b2f9d496e501c5e7f424de63a" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;Math.LOG2E&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Math.LOG2E&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="692726b1e390ff63357b5c03004f2d266430f52f" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;Math.PI&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Math.PI&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="ffc786fb80451fcc0cacc881f7749a3aab5984b8" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;Math.SQRT1_2&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Math.SQRT1_2&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="8b8fddbe6bc5f5eb8fb22ac5ce46e18df1475064" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;Math.SQRT2&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Math.SQRT2&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="2e208a3c9712d41a42a0036393a55acb039cf3ab" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;NaN&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;NaN&lt;/code&gt; 의 속성</target>
        </trans-unit>
        <trans-unit id="8de2173db780d3cb5d763c563c907a31d47900b4" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;Number.EPSILON&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Number.EPSILON&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="3e410d6544f759ee0a816e1cad555aa0d0893bbf" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;Number.MAX_SAFE_INTEGER&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Number.MAX_SAFE_INTEGER&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="fac8199a5ae4a6aa4b408b2dadfdbaee59a7370f" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;Number.MAX_VALUE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Number.MAX_VALUE&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="9b9e922a7574d04f3bbd40cf217e35ca895232b0" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;Number.MIN_SAFE_INTEGER&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Number.MIN_SAFE_INTEGER&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="4873c5f665c6e56f2d35cfa70d7da41ab7343dd7" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;Number.MIN_VALUE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Number.MIN_VALUE&lt;/code&gt; 의 속성 속성</target>
        </trans-unit>
        <trans-unit id="73aa7aff4ae83c225a6bd374e96bac50ff08d547" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;Number.NEGATIVE_INFINITY&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Number.NEGATIVE_INFINITY&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="565bfb13fccc08095d2cc41be9779bb93724e19d" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;Number.NaN&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Number.NaN&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="164af84b826b52681010747493288a4a74e7b0a5" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;Number.POSITIVE_INFINITY&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Number.POSITIVE_INFINITY&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="c77ae9fe9d5efab83f90fa07d6243e4639049879" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;Number.prototype&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Number.prototype&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="b73f293e40210d52dff18c27b0f7e5e36475dd75" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;Object.prototype&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Object.prototype&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="5c3e4e22ae5a0f4ed648423b3b4c729701549eb8" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;Promise.prototype&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Promise.prototype&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="0fc2603b5dd5cc0b5670bf196e4ad29aa951b8c1" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;RangeError.prototype&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;RangeError.prototype&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="cf85c6ba5275ce1d71cfb0b7ee954eb5916e94f1" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;ReferenceError.prototype&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ReferenceError.prototype&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="54d703846a9246ebe6c4f6db4a35fb2c55b628c8" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;RegExp.prototype.flags&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;RegExp.prototype.flags&lt;/code&gt; 의 속성 속성</target>
        </trans-unit>
        <trans-unit id="cc5e96c68f9a26cf76be01efb8aa483610a01acc" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;RegExp.prototype.global&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;RegExp.prototype.global&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="0059f5569a0b7d35f957937d7bebe03776552702" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;RegExp.prototype.ignoreCase&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;RegExp.prototype.ignoreCase&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="bf8d6a4eec223fe8835ca3549d714b97a1e872c0" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;RegExp.prototype.multiline&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;RegExp.prototype.multiline&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="25fce68715db1e8801116c939d2ffd618c95cfba" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;RegExp.prototype.source&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;RegExp.prototype.source&lt;/code&gt; 의 속성 속성</target>
        </trans-unit>
        <trans-unit id="42260120206a8e10e1ee1311b6920018efbdf66d" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;RegExp.prototype.sticky&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;RegExp.prototype.sticky&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="11226da19b8722ba5e6dd9db6bef405bdba21684" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;RegExp.prototype.unicode&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;RegExp.prototype.unicode&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="a52d1097b4c2c8193190aaa7ca7df3bd53a4150f" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;RegExp.prototype&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;RegExp.prototype&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="e8ab74cb204f2a6bfc0b8ff1bfe59134e7a439f5" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;Set.prototype&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Set.prototype&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="e74262c33fa775c8b3fcdb73f7412f6c67f89bcb" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;SharedArrayBuffer.prototype&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;SharedArrayBuffer.prototype&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="51c5b090fd76a06fc4bd933f0800458f8f579486" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;String.prototype&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;String.prototype&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="55bb97be9e602f621fa1783d67cbe9573a8e4ca1" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;Symbol.hasInstance&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Symbol.hasInstance&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="31aa69304e9c64b16e122a5f7bdc45f3133d6627" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;Symbol.isConcatSpreadable&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Symbol.isConcatSpreadable&lt;/code&gt; 의 속성 속성</target>
        </trans-unit>
        <trans-unit id="2016900e5574546a059263edcf633d15b76467a2" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;Symbol.iterator&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Symbol.iterator&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="58d1186c602b38cbdbaa3e6e0c38b0e4bcb227bb" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;Symbol.match&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Symbol.match&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="cadd4ed1efca18ac9eda6d5a2803fdeb7efde6db" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;Symbol.prototype&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Symbol.prototype&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="c14b79f4a8358d7327dab57bf8a82d76bd74210a" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;Symbol.replace&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Symbol.replace&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="56c2101fce5ce078b039bc661d0c6fc90bc50689" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;Symbol.search&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Symbol.search&lt;/code&gt; 의 속성</target>
        </trans-unit>
        <trans-unit id="dd7d014fa6d2fb000534a3912b677f92b52f8127" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;Symbol.species&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Symbol.species&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="b1a3fd90fa53a262ead6cab1a6a425a691284131" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;Symbol.split&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Symbol.split&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="863967c9a91b60cac678d44bda717ad979baad4d" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;Symbol.toPrimitive&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Symbol.toPrimitive&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="df31dae16364b64c0eff282d77325bcaea0d50af" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;Symbol.toStringTag&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Symbol.toStringTag&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="1bde4367903944973d1e478fe37e20f735775f23" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;Symbol.unscopables&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Symbol.unscopables&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="dedd913ad7961052f1c4e7b3b8a4394424ead6ba" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;TypedArray.BYTES_PER_ELEMENT&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;TypedArray.BYTES_PER_ELEMENT&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="06831a96e6eae2655ebf3acd197d6aab0d069e9e" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;TypedArray.name&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;TypedArray.name&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="841217b560d080e778447d02cb06f03f5e42400a" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;TypedArray.prototype&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;TypedArray.prototype&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="62df0f5b294069a8ba4651e4782bceb91b8f3f0f" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;WeakMap.prototype&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;WeakMap.prototype&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="2ae1ad5783205bd7239c4532c7898e26f3baae53" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;WeakSet.prototype&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;WeakSet.prototype&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="db621467bef8ebefe1720cce407fbf2544a60be5" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;WebAssembly.Global.prototype&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;WebAssembly.Global.prototype&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="5db51f35af7494d37accdab324c5463ab78bf1ae" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;WebAssembly.Instance.prototype&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;WebAssembly.Instance.prototype&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="a243dcb46494d437485fe3da2870527b7e85b7fc" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;WebAssembly.Memory.prototype&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;WebAssembly.Memory.prototype&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="08d3ede1932c3532bb8df0e2cd29327991253b8f" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;WebAssembly.Module.prototype&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;WebAssembly.Module.prototype&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="114aa0efea48df27a4102edd3cf9e84ddbf021f3" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;WebAssembly.Table.prototype&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;WebAssembly.Table.prototype&lt;/code&gt; 의 속성 특성</target>
        </trans-unit>
        <trans-unit id="691e70f64fdd6c3cc676db12aea40cd48e9fdad5" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;regexp.lastIndex&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;regexp.lastIndex&lt;/code&gt; 의 속성 속성</target>
        </trans-unit>
        <trans-unit id="a7a89bfc1238bd5c84cd7ecbfbb34f490da434ed" translate="yes" xml:space="preserve">
          <source>Property attributes of &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;undefined&lt;/code&gt; 속성</target>
        </trans-unit>
        <trans-unit id="380d53dd7c505e160c0cd3031c6de8c996f2d218" translate="yes" xml:space="preserve">
          <source>Property definitions</source>
          <target state="translated">속성 정의</target>
        </trans-unit>
        <trans-unit id="632eceef48e288024512de893e9f775914676cac" translate="yes" xml:space="preserve">
          <source>Property definitions that do not use &quot;colon&quot; notation are not prototype mutations: they are property definitions that behave identically to similar definitions using any other name.</source>
          <target state="translated">&quot;콜론&quot;표기법을 사용하지 않는 속성 정의는 프로토 타입 돌연변이가 아닙니다. 다른 이름을 사용하여 유사한 정의와 동일하게 동작하는 속성 정의입니다.</target>
        </trans-unit>
        <trans-unit id="0c038b360b1b683737cfee9e68f84078a4b9cb92" translate="yes" xml:space="preserve">
          <source>Property deletion: &lt;code&gt;delete proxy[foo]&lt;/code&gt; and &lt;code&gt;delete proxy.foo&lt;/code&gt;</source>
          <target state="translated">속성 삭제 : &lt;code&gt;delete proxy[foo]&lt;/code&gt; &lt;code&gt;delete proxy.foo&lt;/code&gt; 및 proxy.foo 삭제</target>
        </trans-unit>
        <trans-unit id="7ca8d2216ca196733d166b4f79223fdfea3358a9" translate="yes" xml:space="preserve">
          <source>Property descriptor expected</source>
          <target state="translated">속성 설명자가 필요합니다</target>
        </trans-unit>
        <trans-unit id="97358e7106485f5f1c50c2faa8b971d516851def" translate="yes" xml:space="preserve">
          <source>Property descriptors present in objects come in two main flavors: data descriptors and accessor descriptors. A &lt;em&gt;&lt;dfn&gt;data descriptor&lt;/dfn&gt;&lt;/em&gt; is a property that has a value, which may or may not be writable. An &lt;em&gt;&lt;dfn&gt;accessor descriptor&lt;/dfn&gt;&lt;/em&gt; is a property described by a getter-setter pair of functions. A descriptor must be one of these two flavors; it cannot be both.</source>
          <target state="translated">객체에 존재하는 속성 디스크립터는 데이터 디스크립터와 접근 자 디스크립터의 두 가지 주요 특징이 있습니다. &lt;em&gt;&lt;dfn&gt;데이터 디스크립터&lt;/dfn&gt;&lt;/em&gt; 또는 기록 가능하지 않을 수있는 값을 갖는 속성이다. &lt;em&gt;&lt;dfn&gt;접근 디스크립터&lt;/dfn&gt;&lt;/em&gt; 기능 게터 세터 쌍 설명 속성이다. 설명자는이 두 가지 특징 중 하나 여야합니다. 둘 다 될 수는 없습니다.</target>
        </trans-unit>
        <trans-unit id="02066a89da7aaaf64f313294f5397a5c218b6aaf" translate="yes" xml:space="preserve">
          <source>Property names</source>
          <target state="translated">부동산 이름</target>
        </trans-unit>
        <trans-unit id="456ac92d05ba25f8ac603843ebd10485596174d6" translate="yes" xml:space="preserve">
          <source>Property names must be double-quoted strings</source>
          <target state="translated">속성 이름은 큰 따옴표로 묶은 문자열이어야합니다</target>
        </trans-unit>
        <trans-unit id="00fcb0c4eedb0edb1c00b31c7de814a5d42f557e" translate="yes" xml:space="preserve">
          <source>Property names must be strings. This means that non-string objects cannot be used as keys in the object. Any non-string object, including a number, is typecasted into a string via the &lt;a href=&quot;../global_objects/object/tostring&quot;&gt;toString&lt;/a&gt; method.</source>
          <target state="translated">속성 이름은 문자열이어야합니다. 이는 문자열이 아닌 객체를 객체의 키로 사용할 수 없음을 의미합니다. 숫자를 포함하여 문자열이 아닌 객체는 &lt;a href=&quot;../global_objects/object/tostring&quot;&gt;toString&lt;/a&gt; 메서드 를 통해 문자열로 유형 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="7b31dd3bb7ef74d350a4402589a7c33a007f0685" translate="yes" xml:space="preserve">
          <source>Property of the &lt;code&gt;Function&lt;/code&gt; prototype object</source>
          <target state="translated">&lt;code&gt;Function&lt;/code&gt; 프로토 타입 객체의 속성</target>
        </trans-unit>
        <trans-unit id="0252ff3a43493785e0e9d081757e5c9f52db42da" translate="yes" xml:space="preserve">
          <source>Property query: &lt;code&gt;foo in proxy&lt;/code&gt;</source>
          <target state="translated">속성 쿼리 : &lt;code&gt;foo in proxy&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="87bdb69f353b2086c4f3bdba98b2a16d3187f742" translate="yes" xml:space="preserve">
          <source>Property/Element</source>
          <target state="translated">Property/Element</target>
        </trans-unit>
        <trans-unit id="b85baac17995eacffb3bd4a8080f1df592d7f923" translate="yes" xml:space="preserve">
          <source>Property/Index</source>
          <target state="translated">Property/Index</target>
        </trans-unit>
        <trans-unit id="c3f9a298b198c252bbed126b1733ba22a1c311ac" translate="yes" xml:space="preserve">
          <source>Prototype accessor property (ES2015)</source>
          <target state="translated">프로토 타입 접근 자 속성 (ES2015)</target>
        </trans-unit>
        <trans-unit id="9be7f4e3f978fb86b9f28ddc5d9c495b5797a116" translate="yes" xml:space="preserve">
          <source>Prototype for the &lt;em&gt;TypedArray&lt;/em&gt; objects.</source>
          <target state="translated">&lt;em&gt;TypedArray&lt;/em&gt; 객체의 프로토 타입입니다 .</target>
        </trans-unit>
        <trans-unit id="b46ce0e46e0605a9b2dee716fba3840e125bed96" translate="yes" xml:space="preserve">
          <source>Prototype methods</source>
          <target state="translated">Prototype methods</target>
        </trans-unit>
        <trans-unit id="e0f38b2bf9455ecc1f983c85ce776c72fe6d3976" translate="yes" xml:space="preserve">
          <source>Prototype mutation</source>
          <target state="translated">프로토 타입 돌연변이</target>
        </trans-unit>
        <trans-unit id="8bc62aaa83cf12723bf45bf2ca73e3b69f976149" translate="yes" xml:space="preserve">
          <source>Provides a statement with an identifier that you can refer to using a &lt;code&gt;break&lt;/code&gt; or &lt;code&gt;continue&lt;/code&gt; statement.</source>
          <target state="translated">&lt;code&gt;break&lt;/code&gt; 또는 &lt;code&gt;continue&lt;/code&gt; 문 을 사용하여 참조 할 수있는 식별자가있는 명령문을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="deebc981e80ef039a0511a7b34712c758f2cb008" translate="yes" xml:space="preserve">
          <source>Providing facilities to handle errors that occur in WebAssembly via the &lt;a href=&quot;webassembly/compileerror&quot;&gt;&lt;code&gt;WebAssembly.CompileError()&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;webassembly/linkerror&quot;&gt;&lt;code&gt;WebAssembly.LinkError()&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;webassembly/runtimeerror&quot;&gt;&lt;code&gt;WebAssembly.RuntimeError()&lt;/code&gt;&lt;/a&gt; constructors.</source>
          <target state="translated">&lt;a href=&quot;webassembly/compileerror&quot;&gt; &lt;code&gt;WebAssembly.CompileError()&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;webassembly/linkerror&quot;&gt; &lt;code&gt;WebAssembly.LinkError()&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;webassembly/runtimeerror&quot;&gt; &lt;code&gt;WebAssembly.RuntimeError()&lt;/code&gt; &lt;/a&gt; 생성자 를 통해 WebAssembly 에서 발생하는 오류를 처리하는 기능을 제공 합니다.</target>
        </trans-unit>
        <trans-unit id="d1cea344353e26ba6f1565ed661d94f610ce9e4f" translate="yes" xml:space="preserve">
          <source>Proxy</source>
          <target state="translated">Proxy</target>
        </trans-unit>
        <trans-unit id="59099646138929b0eeee0a205f62ebe6bc0b28e1" translate="yes" xml:space="preserve">
          <source>Proxy.handler</source>
          <target state="translated">Proxy.handler</target>
        </trans-unit>
        <trans-unit id="320bed0efead9c7681aac5020e4632d63310d3cf" translate="yes" xml:space="preserve">
          <source>Proxy.handler.apply</source>
          <target state="translated">Proxy.handler.apply</target>
        </trans-unit>
        <trans-unit id="bcf47358b2a1b54f6ce3af141bc007c162bc8657" translate="yes" xml:space="preserve">
          <source>Proxy.handler.construct</source>
          <target state="translated">Proxy.handler.construct</target>
        </trans-unit>
        <trans-unit id="d04567149465520c0d5bcc329aef38db0281e8d8" translate="yes" xml:space="preserve">
          <source>Proxy.handler.defineProperty</source>
          <target state="translated">Proxy.handler.defineProperty</target>
        </trans-unit>
        <trans-unit id="5528ba71bf3233a8c70db15a717b6082ee520b71" translate="yes" xml:space="preserve">
          <source>Proxy.handler.deleteProperty</source>
          <target state="translated">Proxy.handler.deleteProperty</target>
        </trans-unit>
        <trans-unit id="38366a2ac2c5b16c93c2ace4d9881ede15d44a0c" translate="yes" xml:space="preserve">
          <source>Proxy.handler.get</source>
          <target state="translated">Proxy.handler.get</target>
        </trans-unit>
        <trans-unit id="db0be0cb197a6d387b725d76d2391285f1d1392b" translate="yes" xml:space="preserve">
          <source>Proxy.handler.getOwnPropertyDescriptor</source>
          <target state="translated">Proxy.handler.getOwnPropertyDescriptor</target>
        </trans-unit>
        <trans-unit id="42ce060553693e049663eff6d53da999682d5bdd" translate="yes" xml:space="preserve">
          <source>Proxy.handler.getPrototypeOf</source>
          <target state="translated">Proxy.handler.getPrototypeOf</target>
        </trans-unit>
        <trans-unit id="1c4349aef7de4d286d0114e46f7a88f4b760126d" translate="yes" xml:space="preserve">
          <source>Proxy.handler.has</source>
          <target state="translated">Proxy.handler.has</target>
        </trans-unit>
        <trans-unit id="1fa583068589ce485ab204772c750d804bb6d562" translate="yes" xml:space="preserve">
          <source>Proxy.handler.isExtensible</source>
          <target state="translated">Proxy.handler.isExtensible</target>
        </trans-unit>
        <trans-unit id="8ed4f1d1b8b013fcdf8903432b3b16adfedbf049" translate="yes" xml:space="preserve">
          <source>Proxy.handler.ownKeys</source>
          <target state="translated">Proxy.handler.ownKeys</target>
        </trans-unit>
        <trans-unit id="c6813e661596479e175cf4926e43d55ea262a1bb" translate="yes" xml:space="preserve">
          <source>Proxy.handler.preventExtensions</source>
          <target state="translated">Proxy.handler.preventExtensions</target>
        </trans-unit>
        <trans-unit id="b7faf05c402b8112c936a7dc8652ab77f2d0a14e" translate="yes" xml:space="preserve">
          <source>Proxy.handler.set</source>
          <target state="translated">Proxy.handler.set</target>
        </trans-unit>
        <trans-unit id="aa92757b1f50bebdde9ea7b90e0328718324edec" translate="yes" xml:space="preserve">
          <source>Proxy.handler.setPrototypeOf</source>
          <target state="translated">Proxy.handler.setPrototypeOf</target>
        </trans-unit>
        <trans-unit id="4563fcb30724b4112e12d268e3552053d9630943" translate="yes" xml:space="preserve">
          <source>Proxy.revocable</source>
          <target state="translated">Proxy.revocable</target>
        </trans-unit>
        <trans-unit id="b85c4bd193b88aca339853bbc0ad381159e29e73" translate="yes" xml:space="preserve">
          <source>Public and private field declarations are an &lt;a href=&quot;https://github.com/tc39/proposal-class-fields&quot;&gt;experimental feature (stage 3)&lt;/a&gt; proposed at &lt;a href=&quot;https://tc39.github.io/beta/&quot;&gt;TC39&lt;/a&gt;, the JavaScript standards committee. Support in browsers is limited, but the feature can be used through a build step with systems like &lt;a href=&quot;https://babeljs.io/&quot;&gt;Babel&lt;/a&gt;.</source>
          <target state="translated">공개 및 비공개 필드 선언은 JavaScript 표준위원회 인 &lt;a href=&quot;https://tc39.github.io/beta/&quot;&gt;TC39&lt;/a&gt; 에서 제안 된 &lt;a href=&quot;https://github.com/tc39/proposal-class-fields&quot;&gt;실험 기능 (3 단계)&lt;/a&gt; 입니다. 브라우저 지원은 제한적이지만 &lt;a href=&quot;https://babeljs.io/&quot;&gt;Babel&lt;/a&gt; 과 같은 시스템의 빌드 단계를 통해 기능을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2e7f017c7f4171cf1f05c3a6cdb16d9c5e253321" translate="yes" xml:space="preserve">
          <source>Public field declarations</source>
          <target state="translated">퍼블릭 필드 선언</target>
        </trans-unit>
        <trans-unit id="5e6abf3ea94e46c76a8aa7ff5e9b795105c61b24" translate="yes" xml:space="preserve">
          <source>Put the expression in brackets &lt;code&gt;[]&lt;/code&gt;:</source>
          <target state="translated">표현식을 괄호 &lt;code&gt;[]&lt;/code&gt; 안에 넣으십시오 .</target>
        </trans-unit>
        <trans-unit id="6078532ab203b30b0c8e32bb799fd87d65f55236" translate="yes" xml:space="preserve">
          <source>Quantifiers</source>
          <target state="translated">Quantifiers</target>
        </trans-unit>
        <trans-unit id="3f540300d547b5640342799ff8f16bfd05bc16b7" translate="yes" xml:space="preserve">
          <source>Quantifiers without &lt;code&gt;?&lt;/code&gt; are said to be greedy. Those with &lt;code&gt;?&lt;/code&gt; are called &quot;non-greedy&quot;.</source>
          <target state="translated">없는 수량 자 &lt;code&gt;?&lt;/code&gt; 탐욕 스럽다고합니다. 그들과 &lt;code&gt;?&lt;/code&gt; &quot;비 욕심&quot;이라고합니다.</target>
        </trans-unit>
        <trans-unit id="92e6317b431b79746e56b224cb48154bd3fd2791" translate="yes" xml:space="preserve">
          <source>RangeError</source>
          <target state="translated">RangeError</target>
        </trans-unit>
        <trans-unit id="b618a501562ccbdd647a5e54ea8956a5b78bf594" translate="yes" xml:space="preserve">
          <source>RangeError.prototype</source>
          <target state="translated">RangeError.prototype</target>
        </trans-unit>
        <trans-unit id="fd857ff611f722e3b96d821e89c46f27f407994c" translate="yes" xml:space="preserve">
          <source>RangeError: argument is not a valid code point</source>
          <target state="translated">RangeError : argument는 유효한 코드 포인트가 아닙니다</target>
        </trans-unit>
        <trans-unit id="163b19dedec511c7f52a5a5b9a168fff1daf0ab2" translate="yes" xml:space="preserve">
          <source>RangeError: invalid array length</source>
          <target state="translated">RangeError : 유효하지 않은 배열 길이</target>
        </trans-unit>
        <trans-unit id="3497841f4c37ddca3a524ed1fcc769bd84f6f59f" translate="yes" xml:space="preserve">
          <source>RangeError: invalid date</source>
          <target state="translated">RangeError : 유효하지 않은 날짜</target>
        </trans-unit>
        <trans-unit id="3083c6b95f8b1bd4e9757bd353f715f034e8936d" translate="yes" xml:space="preserve">
          <source>RangeError: precision is out of range</source>
          <target state="translated">RangeError : 정밀도가 범위를 벗어남</target>
        </trans-unit>
        <trans-unit id="655bcc3e6572921a4146520fd2fd6f1267a67d43" translate="yes" xml:space="preserve">
          <source>RangeError: radix must be an integer</source>
          <target state="translated">RangeError : 기수는 정수 여야합니다</target>
        </trans-unit>
        <trans-unit id="1bf0dbd58028811e07370597c934768298756098" translate="yes" xml:space="preserve">
          <source>RangeError: repeat count must be less than infinity</source>
          <target state="translated">RangeError : 반복 횟수가 무한대보다 작아야합니다</target>
        </trans-unit>
        <trans-unit id="b8a4bf88eb03aba82d6c05862ec3c444737901d3" translate="yes" xml:space="preserve">
          <source>RangeError: repeat count must be non-negative</source>
          <target state="translated">RangeError : 반복 횟수는 음수가 아니어야합니다.</target>
        </trans-unit>
        <trans-unit id="fc77e769cb9445560bfaa804795d6ce7de86123d" translate="yes" xml:space="preserve">
          <source>Ratio of the circumference of a circle to its diameter, approximately 3.14159.</source>
          <target state="translated">원주와 지름의 비율, 약 3.14159</target>
        </trans-unit>
        <trans-unit id="3b87bed5eefca3c18d51230e75d3836cd9a9bf28" translate="yes" xml:space="preserve">
          <source>Raw strings</source>
          <target state="translated">원시 문자열</target>
        </trans-unit>
        <trans-unit id="f8a3c49872115286fb9378a26ff4b27fcea6002a" translate="yes" xml:space="preserve">
          <source>Re-declaring a class using the class declaration throws a type error.</source>
          <target state="translated">클래스 선언을 사용하여 클래스를 다시 선언하면 유형 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="852b438f91ad9eb2cdd84419a675a216d543c687" translate="yes" xml:space="preserve">
          <source>Read</source>
          <target state="translated">Read</target>
        </trans-unit>
        <trans-unit id="9b19a5a212deb29444cc1b420ad81703205848be" translate="yes" xml:space="preserve">
          <source>Read-only</source>
          <target state="translated">Read-only</target>
        </trans-unit>
        <trans-unit id="13bac3eeb6b3a4af93fa69e5fedf6dfcc3b79dab" translate="yes" xml:space="preserve">
          <source>Read-only elements that specify the parenthesized substring matches, if included in the regular expression. The number of possible parenthesized substrings is unlimited.</source>
          <target state="translated">정규식에 포함 된 경우 괄호로 묶은 부분 문자열 일치를 지정하는 읽기 전용 요소입니다. 가능한 괄호로 묶인 부분 문자열의 수는 무제한입니다.</target>
        </trans-unit>
        <trans-unit id="f33ff521c3157a5a02733f982e787547c59d9a54" translate="yes" xml:space="preserve">
          <source>Read-only properties are not super common, but they can be created using &lt;a href=&quot;../global_objects/object/defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../global_objects/object/freeze&quot;&gt;&lt;code&gt;Object.freeze()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">읽기 전용 속성은 일반적이지 않지만 &lt;a href=&quot;../global_objects/object/defineproperty&quot;&gt; &lt;code&gt;Object.defineProperty()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../global_objects/object/freeze&quot;&gt; &lt;code&gt;Object.freeze()&lt;/code&gt; &lt;/a&gt; 사용하여 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0b69b7808f226679518f57bc13ebc88a1fa435de" translate="yes" xml:space="preserve">
          <source>Reason why this &lt;code&gt;Promise&lt;/code&gt; rejected.</source>
          <target state="translated">이 &lt;code&gt;Promise&lt;/code&gt; 거절 된 이유 .</target>
        </trans-unit>
        <trans-unit id="4326a7dbe1e758cd53562a94dbe2dc8cb3415bc7" translate="yes" xml:space="preserve">
          <source>Reconfiguring a property requires first deleting the property. If the property isn't deleted, it stays as it was before the reconfiguration attempt.</source>
          <target state="translated">속성을 재구성하려면 먼저 속성을 삭제해야합니다. 속성이 삭제되지 않으면 재구성을 시도하기 전의 상태로 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="8f1975a7def41720ec9c94792bc4fc65a7c012e4" translate="yes" xml:space="preserve">
          <source>Recursion</source>
          <target state="translated">Recursion</target>
        </trans-unit>
        <trans-unit id="844322155cdbc8fcfd532e684a331d16674f907d" translate="yes" xml:space="preserve">
          <source>Recursive functions</source>
          <target state="translated">재귀 함수</target>
        </trans-unit>
        <trans-unit id="67f6a11373c833ff68ea35b9102d932e1a784b4b" translate="yes" xml:space="preserve">
          <source>Redeclarations</source>
          <target state="translated">Redeclarations</target>
        </trans-unit>
        <trans-unit id="3dd594cdf3118f9142ae25d9aadb07961c99bd53" translate="yes" xml:space="preserve">
          <source>Redeclared parameter</source>
          <target state="translated">재 선언 된 매개 변수</target>
        </trans-unit>
        <trans-unit id="f78bdce5c1bc0bb860bda13a85aa545c36c64232" translate="yes" xml:space="preserve">
          <source>Redeclaring the same variable within the same function or block scope raises a &lt;a href=&quot;../global_objects/syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">동일한 함수 또는 블록 범위 내에서 동일한 변수를 다시 선언하면 &lt;a href=&quot;../global_objects/syntaxerror&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; 가 발생&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="946c775642eb2bf21bc69b8b1c6f965122a65459" translate="yes" xml:space="preserve">
          <source>Redefining the &lt;code&gt;length&lt;/code&gt; property of an &lt;code&gt;Array&lt;/code&gt; object</source>
          <target state="translated">&lt;code&gt;Array&lt;/code&gt; 객체 의 &lt;code&gt;length&lt;/code&gt; 속성 재정의</target>
        </trans-unit>
        <trans-unit id="e863ed36e7a07f1de4361b7ed6c14f1c67b6be31" translate="yes" xml:space="preserve">
          <source>Reduce of empty array with no initial value</source>
          <target state="translated">초기 값이없는 빈 배열 감소</target>
        </trans-unit>
        <trans-unit id="e52878da699ab282c5aef027c824161ea0ed7fd8" translate="yes" xml:space="preserve">
          <source>Reduced time precision</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0e426c6ee5ddbab89066c1ac8225709a7e729ff" translate="yes" xml:space="preserve">
          <source>Reference to the currently executing function that the arguments belong to.</source>
          <target state="translated">인수가 속하는 현재 실행중인 함수에 대한 참조</target>
        </trans-unit>
        <trans-unit id="77e2a940d69f11d8d01b7e3fc8b6d1f6aee20785" translate="yes" xml:space="preserve">
          <source>Reference to the function that invoked the currently executing function.</source>
          <target state="translated">현재 실행중인 함수를 호출 한 함수에 대한 참조</target>
        </trans-unit>
        <trans-unit id="2eca1b4d68aeba600d4d3d5d19a63fddf76c2ea9" translate="yes" xml:space="preserve">
          <source>ReferenceError</source>
          <target state="translated">ReferenceError</target>
        </trans-unit>
        <trans-unit id="dd1f9f71af411498e17d21e0c55d0b1fd2c7e358" translate="yes" xml:space="preserve">
          <source>ReferenceError.prototype</source>
          <target state="translated">ReferenceError.prototype</target>
        </trans-unit>
        <trans-unit id="866ef6edd4f0a8e8ce2c9c17d1549322f88f0ca5" translate="yes" xml:space="preserve">
          <source>ReferenceError: &quot;x&quot; is not defined</source>
          <target state="translated">ReferenceError : &quot;x&quot;가 정의되지 않았습니다</target>
        </trans-unit>
        <trans-unit id="7bb6b545b1fb98308e3e52ba187f9f60bb77eaa0" translate="yes" xml:space="preserve">
          <source>ReferenceError: assignment to undeclared variable &quot;x&quot;</source>
          <target state="translated">ReferenceError : 선언되지 않은 변수 &quot;x&quot;에 대입</target>
        </trans-unit>
        <trans-unit id="0b2bea34205fe8633c2fc97a5092dd7301d0b3f5" translate="yes" xml:space="preserve">
          <source>ReferenceError: can't access lexical declaration`X' before initialization</source>
          <target state="translated">ReferenceError : 초기화하기 전에 어휘 선언`X '에 액세스 할 수 없습니다</target>
        </trans-unit>
        <trans-unit id="8f8075cad6f67c6ce2b91bf3fe9175e7358a5922" translate="yes" xml:space="preserve">
          <source>ReferenceError: deprecated caller or arguments usage</source>
          <target state="translated">ReferenceError : 더 이상 사용되지 않는 호출자 또는 인수 사용법</target>
        </trans-unit>
        <trans-unit id="b7842a29c8042f975a0462f8fb1f471e00b14a2d" translate="yes" xml:space="preserve">
          <source>ReferenceError: invalid assignment left-hand side</source>
          <target state="translated">ReferenceError : 잘못된 할당 왼쪽</target>
        </trans-unit>
        <trans-unit id="ac69c4972370f173c7ff0bca8017b19765f1c257" translate="yes" xml:space="preserve">
          <source>ReferenceError: reference to undefined property &quot;x&quot;</source>
          <target state="translated">ReferenceError : 정의되지 않은 속성 &quot;x&quot;에 대한 참조</target>
        </trans-unit>
        <trans-unit id="11a5b905dd4356baa99003c3d0fb1752a6134b6e" translate="yes" xml:space="preserve">
          <source>Reflect</source>
          <target state="translated">Reflect</target>
        </trans-unit>
        <trans-unit id="e4409d5bd36638733bfa9227649affbe8de8da69" translate="yes" xml:space="preserve">
          <source>Reflect.apply</source>
          <target state="translated">Reflect.apply</target>
        </trans-unit>
        <trans-unit id="e8e4dfa3a16e78a9b301a870a9d8d8561c68c8e5" translate="yes" xml:space="preserve">
          <source>Reflect.construct</source>
          <target state="translated">Reflect.construct</target>
        </trans-unit>
        <trans-unit id="f2f9fd068e4242fbb4c065fab823928d6658dcc6" translate="yes" xml:space="preserve">
          <source>Reflect.defineProperty</source>
          <target state="translated">Reflect.defineProperty</target>
        </trans-unit>
        <trans-unit id="d9c40e72ed42277e621938140990fecec31860d2" translate="yes" xml:space="preserve">
          <source>Reflect.deleteProperty</source>
          <target state="translated">Reflect.deleteProperty</target>
        </trans-unit>
        <trans-unit id="ad7d4ab57008d8ef2bcf40ecaec790b7d37ceda4" translate="yes" xml:space="preserve">
          <source>Reflect.enumerate has been removed.</source>
          <target state="translated">Reflect.enumerate가 제거되었습니다.</target>
        </trans-unit>
        <trans-unit id="b9a46f4672e126f7a11381cd9884843d3366765e" translate="yes" xml:space="preserve">
          <source>Reflect.get</source>
          <target state="translated">Reflect.get</target>
        </trans-unit>
        <trans-unit id="dca299dec7c4b27406c99a9db8613312969fc8ef" translate="yes" xml:space="preserve">
          <source>Reflect.getOwnPropertyDescriptor</source>
          <target state="translated">Reflect.getOwnPropertyDescriptor</target>
        </trans-unit>
        <trans-unit id="c4ccc5cd40402aca6f2327273b607a16273c4cf3" translate="yes" xml:space="preserve">
          <source>Reflect.getPrototypeOf</source>
          <target state="translated">Reflect.getPrototypeOf</target>
        </trans-unit>
        <trans-unit id="266b03f7eb7b7603a55a6ed7e67d80a271040e3e" translate="yes" xml:space="preserve">
          <source>Reflect.has</source>
          <target state="translated">Reflect.has</target>
        </trans-unit>
        <trans-unit id="67b946573d9e6181078c2c26d4ca78a319f779cb" translate="yes" xml:space="preserve">
          <source>Reflect.isExtensible</source>
          <target state="translated">Reflect.isExtensible</target>
        </trans-unit>
        <trans-unit id="0efb52a164d2557eb51e9d57bef3b03f3cfa6ce2" translate="yes" xml:space="preserve">
          <source>Reflect.ownKeys</source>
          <target state="translated">Reflect.ownKeys</target>
        </trans-unit>
        <trans-unit id="9578443035eb8705bd126e9acab6f34b58453535" translate="yes" xml:space="preserve">
          <source>Reflect.preventExtensions</source>
          <target state="translated">Reflect.preventExtensions</target>
        </trans-unit>
        <trans-unit id="41b6914cad64a612a5be1239571aae8940746cfd" translate="yes" xml:space="preserve">
          <source>Reflect.set</source>
          <target state="translated">Reflect.set</target>
        </trans-unit>
        <trans-unit id="a5a0796157a708b39407cdcc3b1149e74aa1ba55" translate="yes" xml:space="preserve">
          <source>Reflect.setPrototypeOf</source>
          <target state="translated">Reflect.setPrototypeOf</target>
        </trans-unit>
        <trans-unit id="fda05af620d8f7d239d3f6e8e81b4403108f221e" translate="yes" xml:space="preserve">
          <source>Reflection</source>
          <target state="translated">Reflection</target>
        </trans-unit>
        <trans-unit id="9a90ed4ea14ef9ee79830314da329e440dac3533" translate="yes" xml:space="preserve">
          <source>Reflects the length of the string.</source>
          <target state="translated">문자열의 길이를 반영합니다.</target>
        </trans-unit>
        <trans-unit id="f1d4e753527c9deb5167a1d172b2df012704542c" translate="yes" xml:space="preserve">
          <source>Reflects the number of elements in an array.</source>
          <target state="translated">배열의 요소 수를 반영합니다.</target>
        </trans-unit>
        <trans-unit id="ca5db4fe93ba98fe1b576309acf2388052f2a36a" translate="yes" xml:space="preserve">
          <source>RegExp</source>
          <target state="translated">RegExp</target>
        </trans-unit>
        <trans-unit id="777220bfbf066c564d07a81340ac954b6acf809b" translate="yes" xml:space="preserve">
          <source>RegExp.@@species</source>
          <target state="translated">RegExp.@@species</target>
        </trans-unit>
        <trans-unit id="cc4c144ddce095a61f129c5346e5fca0f340ec24" translate="yes" xml:space="preserve">
          <source>RegExp.prototype</source>
          <target state="translated">RegExp.prototype</target>
        </trans-unit>
        <trans-unit id="0d3739f7c41d4bd111e52178528c314a6297adef" translate="yes" xml:space="preserve">
          <source>Regular expression and Unicode characters</source>
          <target state="translated">정규식 및 유니 코드 문자</target>
        </trans-unit>
        <trans-unit id="47e82a87edb51eefcd3d3708ebe8521f9d4f8458" translate="yes" xml:space="preserve">
          <source>Regular expression flags</source>
          <target state="translated">정규식 플래그</target>
        </trans-unit>
        <trans-unit id="f5bcfed16c9907c6a9af8fb45419224243bf930e" translate="yes" xml:space="preserve">
          <source>Regular expression literal syntax.</source>
          <target state="translated">정규식 리터럴 구문.</target>
        </trans-unit>
        <trans-unit id="ea0e999c6ba9858b1992eda21369665ee28e3333" translate="yes" xml:space="preserve">
          <source>Regular expression literals</source>
          <target state="translated">정규 표현식 리터럴</target>
        </trans-unit>
        <trans-unit id="8523b09abd40a07c8d1d7738d0c5c3dd075de3c6" translate="yes" xml:space="preserve">
          <source>Regular expression literals (&lt;code&gt;/ab+c/g&lt;/code&gt;)</source>
          <target state="translated">정규식 리터럴 ( &lt;code&gt;/ab+c/g&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="92703f3836ff9468b3735b59197e4066984f783c" translate="yes" xml:space="preserve">
          <source>Regular expression symbols</source>
          <target state="translated">정규식 기호</target>
        </trans-unit>
        <trans-unit id="3172c4ae8fee97c04bb506eac2e6f47443f5a679" translate="yes" xml:space="preserve">
          <source>Regular expressions</source>
          <target state="translated">정규식</target>
        </trans-unit>
        <trans-unit id="81a4fad406a4e0a97961065af3481a1d9f56a971" translate="yes" xml:space="preserve">
          <source>Rejection:</source>
          <target state="translated">Rejection:</target>
        </trans-unit>
        <trans-unit id="7712ae105dce5af777b29150cc5af9dcf3eabe01" translate="yes" xml:space="preserve">
          <source>Relation with &lt;code&gt;Array&lt;/code&gt; objects</source>
          <target state="translated">&lt;code&gt;Array&lt;/code&gt; 객체 와의 관계</target>
        </trans-unit>
        <trans-unit id="b75b81be9b770bbb91c3dfc97412628e7a6abcfa" translate="yes" xml:space="preserve">
          <source>Relation with &lt;code&gt;Strings&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Strings&lt;/code&gt; 과의 관계</target>
        </trans-unit>
        <trans-unit id="0dcc4699ce191d8d7f86157a58651ffa8812f768" translate="yes" xml:space="preserve">
          <source>Relation with strict mode</source>
          <target state="translated">엄격 모드와의 관계</target>
        </trans-unit>
        <trans-unit id="40fa22a00ce265dc796c706bf3adebe616b0341c" translate="yes" xml:space="preserve">
          <source>Relational operators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="508b2acb849551aad58495b3fd12dbc0407ccf14" translate="yes" xml:space="preserve">
          <source>Relationship between &lt;code&gt;length&lt;/code&gt; and numerical properties</source>
          <target state="translated">&lt;code&gt;length&lt;/code&gt; 와 수치 적 속성의 관계</target>
        </trans-unit>
        <trans-unit id="c20a1017faea096d3f06199fd35a9c0037bfb227" translate="yes" xml:space="preserve">
          <source>Remainder</source>
          <target state="translated">Remainder</target>
        </trans-unit>
        <trans-unit id="8a62cab67079eae6ebc1492a4d776a1ecb5b92ae" translate="yes" xml:space="preserve">
          <source>Remainder (%)</source>
          <target state="translated">나머지 (%)</target>
        </trans-unit>
        <trans-unit id="ccc83c1351262363e3777ac3f1c44913586954b4" translate="yes" xml:space="preserve">
          <source>Remainder (&lt;code&gt;%&lt;/code&gt;)</source>
          <target state="translated">나머지 ( &lt;code&gt;%&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="3abfbe6b4f511d3dea5d6431cdbf39c4e4729f0c" translate="yes" xml:space="preserve">
          <source>Remainder assignment</source>
          <target state="translated">나머지 할당</target>
        </trans-unit>
        <trans-unit id="2c1300b0d93c0b8396547253f9d9ab19ee048a2b" translate="yes" xml:space="preserve">
          <source>Remainder assignment (&lt;code&gt;x %= y&lt;/code&gt;)</source>
          <target state="translated">나머지 할당 ( &lt;code&gt;x %= y&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="bb9481a2f8d34fb4ff3201ce2f6bc77129a3c5a3" translate="yes" xml:space="preserve">
          <source>Remainder assignment.</source>
          <target state="translated">나머지 할당.</target>
        </trans-unit>
        <trans-unit id="b247a2b44bd6ff97ed7e6e18e964996c0f183957" translate="yes" xml:space="preserve">
          <source>Remainder operator.</source>
          <target state="translated">나머지 연산자.</target>
        </trans-unit>
        <trans-unit id="c856d5a4924f875062e10e03717f423aac53e353" translate="yes" xml:space="preserve">
          <source>Remember to wrap the object literal in parentheses.</source>
          <target state="translated">객체 리터럴을 괄호로 묶어야합니다.</target>
        </trans-unit>
        <trans-unit id="7404a51b4dd470fcd22434df14d475067ae64749" translate="yes" xml:space="preserve">
          <source>Remember, the &lt;code&gt;await&lt;/code&gt; keyword is only valid inside &lt;code&gt;async&lt;/code&gt; functions. If you use it outside of an &lt;code&gt;async&lt;/code&gt; function's body, you will get a &lt;code&gt;&lt;a href=&quot;../global_objects/syntaxerror&quot;&gt;SyntaxError&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">기억 &lt;code&gt;await&lt;/code&gt; 를 키워드에만 유효 내부의 인 &lt;code&gt;async&lt;/code&gt; 기능을합니다. &lt;code&gt;async&lt;/code&gt; 함수 본문 외부에서 사용하면 &lt;code&gt;&lt;a href=&quot;../global_objects/syntaxerror&quot;&gt;SyntaxError&lt;/a&gt;&lt;/code&gt; 가 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="154d97983af298fe18e94c17f0a89a9fb01e80cc" translate="yes" xml:space="preserve">
          <source>Reminder: this functionality is not part of the ECMAScript specification and has been removed in Firefox 59. It's not supported in any current browser anymore.</source>
          <target state="translated">알림 :이 기능은 ECMAScript 사양의 일부가 아니며 Firefox 59에서 제거되었습니다. 현재 브라우저에서 더 이상 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a42274551726ea64e127f877c5906b54cfd038a3" translate="yes" xml:space="preserve">
          <source>Remove 0 (zero) elements from index 2, and insert &quot;drum&quot;</source>
          <target state="translated">인덱스 2에서 0 개의 요소를 제거하고 &quot;drum&quot;을 삽입하십시오.</target>
        </trans-unit>
        <trans-unit id="1b3d455ac51b45ddca489e541173e8db97e9b675" translate="yes" xml:space="preserve">
          <source>Remove 1 element from index -2</source>
          <target state="translated">인덱스 -2에서 1 개의 요소 제거</target>
        </trans-unit>
        <trans-unit id="69e4f507c3d52afbb90c3000cf0071cdfed27b0e" translate="yes" xml:space="preserve">
          <source>Remove 1 element from index 2, and insert &quot;trumpet&quot;</source>
          <target state="translated">인덱스 2에서 1 개의 요소를 제거하고 &quot;트럼펫&quot;을 삽입하십시오.</target>
        </trans-unit>
        <trans-unit id="4ee68640e66ea562b5f796daa13fa0ead57bd7d5" translate="yes" xml:space="preserve">
          <source>Remove 1 element from index 3</source>
          <target state="translated">인덱스 3에서 1 개의 요소 제거</target>
        </trans-unit>
        <trans-unit id="77940116e4701a9699216d208ac723dae5adbc3f" translate="yes" xml:space="preserve">
          <source>Remove 2 elements from index 0, and insert &quot;parrot&quot;, &quot;anemone&quot; and &quot;blue&quot;</source>
          <target state="translated">인덱스 0에서 2 개의 요소를 제거하고 &quot;parrot&quot;, &quot;anemone&quot;및 &quot;blue&quot;를 삽입하십시오.</target>
        </trans-unit>
        <trans-unit id="533959f8379aeb4d0db8917a6ae3947750b04cf7" translate="yes" xml:space="preserve">
          <source>Remove 2 elements from index 2</source>
          <target state="translated">인덱스 2에서 2 개의 요소 제거</target>
        </trans-unit>
        <trans-unit id="69aafabc9a41ab7df4e9ccf879353309d1ad3e34" translate="yes" xml:space="preserve">
          <source>Remove all elements after index 2 (incl.)</source>
          <target state="translated">인덱스 2 이후의 모든 요소 제거 (포함)</target>
        </trans-unit>
        <trans-unit id="3da4fe81f0aed10202d4475ef8a95ae2932bb10e" translate="yes" xml:space="preserve">
          <source>Remove duplicate items in array</source>
          <target state="translated">배열에서 중복 항목 제거</target>
        </trans-unit>
        <trans-unit id="d9972944921bbf320ca4d550d5cf3f3d5746891f" translate="yes" xml:space="preserve">
          <source>Removes a watchpoint from a property of the object.</source>
          <target state="translated">객체의 속성에서 감시 점을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="ffed4171b5a7c9b1fae2492b9af7ce30fd0f81fe" translate="yes" xml:space="preserve">
          <source>Removes all elements from the &lt;code&gt;Set&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;Set&lt;/code&gt; 객체 에서 모든 요소를 ​​제거합니다 .</target>
        </trans-unit>
        <trans-unit id="07b5e0bda26c031bd23f63ba3f699e982b0627bc" translate="yes" xml:space="preserve">
          <source>Removes all key/value pairs from the &lt;code&gt;Map&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;Map&lt;/code&gt; 객체 에서 모든 키 / 값 쌍을 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="b8b02b0501eb678c02c77aa1160a9ca25c49372f" translate="yes" xml:space="preserve">
          <source>Removes any value associated to the &lt;code&gt;key&lt;/code&gt;. &lt;code&gt;WeakMap.prototype.has(key)&lt;/code&gt; will return &lt;code&gt;false&lt;/code&gt; afterwards.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 와 관련된 값을 제거합니다 . &lt;code&gt;WeakMap.prototype.has(key)&lt;/code&gt; 는 나중에 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="3b0fef15a3423209b156e7abfeae58e7985a5ced" translate="yes" xml:space="preserve">
          <source>Removes the element associated to the &lt;code&gt;value&lt;/code&gt; and returns the value that &lt;code&gt;Set.prototype.has(value)&lt;/code&gt; would have previously returned. &lt;code&gt;Set.prototype.has(value)&lt;/code&gt; will return &lt;code&gt;false&lt;/code&gt; afterwards.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; 과 관련된 요소를 제거하고 &lt;code&gt;Set.prototype.has(value)&lt;/code&gt; 가 이전에 반환했을 값을 반환합니다. &lt;code&gt;Set.prototype.has(value)&lt;/code&gt; 는 나중에 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="b38f3b1b35fbc6dffedddc4a4871ebb3f837b33e" translate="yes" xml:space="preserve">
          <source>Removes the element associated to the &lt;code&gt;value&lt;/code&gt;. &lt;code&gt;WeakSet.prototype.has(value)&lt;/code&gt; will return &lt;code&gt;false&lt;/code&gt; afterwards.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; 과 관련된 요소를 제거합니다 . &lt;code&gt;WeakSet.prototype.has(value)&lt;/code&gt; 는 나중에 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="1d83048c270a90a54249025573afde1761ccb094" translate="yes" xml:space="preserve">
          <source>Removes the first element from an array and returns that element.</source>
          <target state="translated">배열에서 첫 번째 요소를 제거하고 해당 요소를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="103dc498eae844a8ecb123a3f9f61591f2203a8b" translate="yes" xml:space="preserve">
          <source>Removes the last element from an array and returns that element.</source>
          <target state="translated">배열에서 마지막 요소를 제거하고 해당 요소를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ffac567a48b948160ea3aabce4d818e7e311a170" translate="yes" xml:space="preserve">
          <source>Removing a setter with the &lt;code&gt;delete&lt;/code&gt; operator</source>
          <target state="translated">&lt;code&gt;delete&lt;/code&gt; 연산자를 사용하여 세터 제거</target>
        </trans-unit>
        <trans-unit id="4069c512cbe5214dd8c39704f420cf0f6228ce38" translate="yes" xml:space="preserve">
          <source>Removing an element from an array</source>
          <target state="translated">배열에서 요소 제거</target>
        </trans-unit>
        <trans-unit id="20cb92174f0ff645524b2cc097d933a5476901a5" translate="yes" xml:space="preserve">
          <source>Removing nested AND</source>
          <target state="translated">중첩 된 AND 제거</target>
        </trans-unit>
        <trans-unit id="63109e4170518480a6db5f272cd86e67d7f60374" translate="yes" xml:space="preserve">
          <source>Removing nested OR</source>
          <target state="translated">중첩 된 OR 제거</target>
        </trans-unit>
        <trans-unit id="11c4ed8d23424c085497305edd2a468064e4468a" translate="yes" xml:space="preserve">
          <source>Removing nested parentheses</source>
          <target state="translated">중첩 괄호 제거</target>
        </trans-unit>
        <trans-unit id="927edbf8d00c999d3ed2a85fa18346da0122d4b7" translate="yes" xml:space="preserve">
          <source>Removing spaces from a string</source>
          <target state="translated">문자열에서 공백 제거</target>
        </trans-unit>
        <trans-unit id="0bc47750dbd9f72d5dbf2b8747c5dca5ef989a7f" translate="yes" xml:space="preserve">
          <source>Removing the last element of an array</source>
          <target state="translated">배열의 마지막 요소 제거</target>
        </trans-unit>
        <trans-unit id="d3f4cb898fbe0c7a7ac4f721438c4c26ad1a2513" translate="yes" xml:space="preserve">
          <source>Rename</source>
          <target state="translated">Rename</target>
        </trans-unit>
        <trans-unit id="0ee649760d0f2ae63f77ff2ed0eefe6da686c6bb" translate="yes" xml:space="preserve">
          <source>Rename multiple exports during import</source>
          <target state="translated">가져 오는 동안 여러 내보내기 이름 바꾸기</target>
        </trans-unit>
        <trans-unit id="1fab980cfeaa0853c27108c9faf860323ebdc2d1" translate="yes" xml:space="preserve">
          <source>Replace apply</source>
          <target state="translated">교체 적용</target>
        </trans-unit>
        <trans-unit id="751c0a8e1eab51fdafea2936199bab8de9595d71" translate="yes" xml:space="preserve">
          <source>Replaces each escape sequence in the encoded URI component with the character that it represents.</source>
          <target state="translated">인코딩 된 URI 구성 요소의 각 이스케이프 시퀀스를 나타내는 문자로 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="ddccf7fb688e91f66617b085457955c5da7b0073" translate="yes" xml:space="preserve">
          <source>Replaces each escape sequence in the encoded URI with the character that it represents, but does not decode escape sequences that could not have been introduced by &lt;a href=&quot;encodeuri&quot;&gt;&lt;code&gt;encodeURI&lt;/code&gt;&lt;/a&gt;. The character &amp;ldquo;&lt;code&gt;#&lt;/code&gt;&amp;rdquo; is not decoded from escape sequences.</source>
          <target state="translated">인코딩 된 URI의 각 이스케이프 시퀀스를 나타내는 문자로 대체하지만 &lt;a href=&quot;encodeuri&quot;&gt; &lt;code&gt;encodeURI&lt;/code&gt; &lt;/a&gt; 가 도입 할 수없는 이스케이프 시퀀스는 디코딩하지 않습니다 . 문자 &quot; &lt;code&gt;#&lt;/code&gt; &quot;는 이스케이프 시퀀스에서 디코딩되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="37cbc743a53141d3d7322d62bf0e3e7ed6346baf" translate="yes" xml:space="preserve">
          <source>Replaces matches in given string with new substring.</source>
          <target state="translated">주어진 문자열에서 일치하는 항목을 새 하위 문자열로 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="cd44f25b346019153c655a7d5fed4a09b82450fb" translate="yes" xml:space="preserve">
          <source>Replacing a Fahrenheit degree with its Celsius equivalent</source>
          <target state="translated">화씨를 섭씨 온도로 대체</target>
        </trans-unit>
        <trans-unit id="3aa8df028634f983ed39dd63046a601367dab150" translate="yes" xml:space="preserve">
          <source>Replacing a substring within a string</source>
          <target state="translated">문자열 내에서 부분 문자열 교체</target>
        </trans-unit>
        <trans-unit id="db41cc11cbb4965b6729a850fb850a1e46a59083" translate="yes" xml:space="preserve">
          <source>Represents the prototype for the &lt;code&gt;Boolean&lt;/code&gt; constructor.</source>
          <target state="translated">&lt;code&gt;Boolean&lt;/code&gt; 생성자 의 프로토 타입을 나타 냅니다.</target>
        </trans-unit>
        <trans-unit id="6c6083b8e20eafaf82e8a6951c4cff6bc2052a81" translate="yes" xml:space="preserve">
          <source>Represents the prototype for the &lt;code&gt;Map&lt;/code&gt; constructor. Allows the addition of properties to all &lt;code&gt;Map&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;Map&lt;/code&gt; 생성자 의 프로토 타입을 나타 냅니다. 모든 &lt;code&gt;Map&lt;/code&gt; 객체 에 속성을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8e2094a97aa3ca91c947a07634317db75c465c37" translate="yes" xml:space="preserve">
          <source>Represents the prototype for the &lt;code&gt;Promise&lt;/code&gt; constructor.</source>
          <target state="translated">&lt;code&gt;Promise&lt;/code&gt; 생성자 의 프로토 타입을 나타 냅니다.</target>
        </trans-unit>
        <trans-unit id="9f21243f3d10f1df95edba5982f8d0c2cfdfab7a" translate="yes" xml:space="preserve">
          <source>Represents the prototype for the &lt;code&gt;Set&lt;/code&gt; constructor. Allows the addition of properties to all &lt;code&gt;Set&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;Set&lt;/code&gt; 생성자 의 프로토 타입을 나타 냅니다. 모든 &lt;code&gt;Set&lt;/code&gt; 객체 에 속성을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7d1b8ef82db68632983d6145dfef938e38bc1e8c" translate="yes" xml:space="preserve">
          <source>Represents the prototype for the &lt;code&gt;Symbol&lt;/code&gt; constructor.</source>
          <target state="translated">&lt;code&gt;Symbol&lt;/code&gt; 생성자 의 프로토 타입을 나타 냅니다.</target>
        </trans-unit>
        <trans-unit id="2bd8232c6386059cd113696718ea2cf049ae98c1" translate="yes" xml:space="preserve">
          <source>Represents the prototype for the &lt;code&gt;WeakMap&lt;/code&gt; constructor. Allows the addition of properties to all &lt;code&gt;WeakMap&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;WeakMap&lt;/code&gt; 생성자 의 프로토 타입을 나타 냅니다 . 모든 &lt;code&gt;WeakMap&lt;/code&gt; 객체 에 속성을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="48b8c671922cd6014ab3883159c46f04fcc093f7" translate="yes" xml:space="preserve">
          <source>Represents the prototype for the &lt;code&gt;WeakSet&lt;/code&gt; constructor. Allows the addition of properties to all &lt;code&gt;WeakSet&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;WeakSet&lt;/code&gt; 생성자 의 프로토 타입을 나타 냅니다 . 모든 &lt;code&gt;WeakSet&lt;/code&gt; 객체 에 속성을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0a884272e018aca3b2e37553260b7dd70ea3476f" translate="yes" xml:space="preserve">
          <source>Required. The key of the element to add to the &lt;code&gt;Map&lt;/code&gt; object.</source>
          <target state="translated">필수입니다. &lt;code&gt;Map&lt;/code&gt; 객체 에 추가 할 요소의 키입니다 .</target>
        </trans-unit>
        <trans-unit id="c96efa3175f15782c23ced184e1c8311ae1b4463" translate="yes" xml:space="preserve">
          <source>Required. The key of the element to add to the &lt;code&gt;WeakMap&lt;/code&gt; object.</source>
          <target state="translated">필수입니다. &lt;code&gt;WeakMap&lt;/code&gt; 오브젝트 에 추가 할 요소의 키입니다 .</target>
        </trans-unit>
        <trans-unit id="090b2fae7b2ada2ddfaed6557e550b255258e0ae" translate="yes" xml:space="preserve">
          <source>Required. The key of the element to remove from the &lt;code&gt;WeakMap&lt;/code&gt; object.</source>
          <target state="translated">필수입니다. &lt;code&gt;WeakMap&lt;/code&gt; 객체 에서 제거 할 요소의 키입니다 .</target>
        </trans-unit>
        <trans-unit id="42069d98b066514a2db51fd83a5633e39fc5f525" translate="yes" xml:space="preserve">
          <source>Required. The key of the element to return from the &lt;code&gt;Map&lt;/code&gt; object.</source>
          <target state="translated">필수입니다. &lt;code&gt;Map&lt;/code&gt; 객체 에서 반환 할 요소의 키입니다 .</target>
        </trans-unit>
        <trans-unit id="55d397bf6e601637eeea9582bcc14a4a9c1db2da" translate="yes" xml:space="preserve">
          <source>Required. The key of the element to return from the &lt;code&gt;WeakMap&lt;/code&gt; object.</source>
          <target state="translated">필수입니다. &lt;code&gt;WeakMap&lt;/code&gt; 객체 에서 반환 할 요소의 키입니다 .</target>
        </trans-unit>
        <trans-unit id="bc34bb5eb6427e5181691cb5d61b7ed6528988de" translate="yes" xml:space="preserve">
          <source>Required. The key of the element to test for presence in the &lt;code&gt;Map&lt;/code&gt; object.</source>
          <target state="translated">필수입니다. &lt;code&gt;Map&lt;/code&gt; 객체 에서 존재 여부를 테스트 할 요소의 키입니다 .</target>
        </trans-unit>
        <trans-unit id="4060788b708fb0c968a829495d6357b1e0da904d" translate="yes" xml:space="preserve">
          <source>Required. The key of the element to test for presence in the &lt;code&gt;WeakMap&lt;/code&gt; object.</source>
          <target state="translated">필수입니다. &lt;code&gt;WeakMap&lt;/code&gt; 객체 에 존재하는지 테스트 할 요소의 키입니다 .</target>
        </trans-unit>
        <trans-unit id="d1cbeda19f9e3ba0957f9ae106a3731af8b4e9e0" translate="yes" xml:space="preserve">
          <source>Required. The object remove from the &lt;code&gt;WeakSet&lt;/code&gt; object.</source>
          <target state="translated">필수입니다. 개체는 &lt;code&gt;WeakSet&lt;/code&gt; 개체 에서 제거됩니다 .</target>
        </trans-unit>
        <trans-unit id="57480687c6def6679c6b02176a1919e74ca2ce43" translate="yes" xml:space="preserve">
          <source>Required. The object to add to the &lt;code&gt;WeakSet&lt;/code&gt; collection.</source>
          <target state="translated">필수입니다. &lt;code&gt;WeakSet&lt;/code&gt; 컬렉션 에 추가 할 개체 입니다.</target>
        </trans-unit>
        <trans-unit id="ade1a4933edcf3c3817c73eba2eb1526b14e003d" translate="yes" xml:space="preserve">
          <source>Required. The object to test for presence in the &lt;code&gt;WeakSet&lt;/code&gt;.</source>
          <target state="translated">필수입니다. &lt;code&gt;WeakSet&lt;/code&gt; 에 존재하는지 테스트 할 객체 입니다.</target>
        </trans-unit>
        <trans-unit id="65b5240790454d3642f64b1609adff8a9c59018b" translate="yes" xml:space="preserve">
          <source>Required. The value of the element to add to the &lt;code&gt;Map&lt;/code&gt; object.</source>
          <target state="translated">필수입니다. &lt;code&gt;Map&lt;/code&gt; 객체 에 추가 할 요소의 값입니다 .</target>
        </trans-unit>
        <trans-unit id="5122dba7ddd181b92b2d36b12834654b48b59d87" translate="yes" xml:space="preserve">
          <source>Required. The value of the element to add to the &lt;code&gt;Set&lt;/code&gt; object.</source>
          <target state="translated">필수입니다. &lt;code&gt;Set&lt;/code&gt; 객체 에 추가 할 요소의 값입니다 .</target>
        </trans-unit>
        <trans-unit id="61c68d663a88a6f5a1cbaa1160fc026e458fcab1" translate="yes" xml:space="preserve">
          <source>Required. The value of the element to add to the &lt;code&gt;WeakMap&lt;/code&gt; object.</source>
          <target state="translated">필수입니다. &lt;code&gt;WeakMap&lt;/code&gt; 오브젝트 에 추가 할 요소의 값입니다 .</target>
        </trans-unit>
        <trans-unit id="d97070b3e6a891d51b88804eb158e6d21f2ecd75" translate="yes" xml:space="preserve">
          <source>Required. The value of the element to remove from the &lt;code&gt;Set&lt;/code&gt; object.</source>
          <target state="translated">필수입니다. &lt;code&gt;Set&lt;/code&gt; 객체 에서 제거 할 요소의 값입니다 .</target>
        </trans-unit>
        <trans-unit id="e6ed480c80e7d2b521ad26355b03e07302019b2c" translate="yes" xml:space="preserve">
          <source>Required. The value to test for presence in the &lt;code&gt;Set&lt;/code&gt; object.</source>
          <target state="translated">필수입니다. &lt;code&gt;Set&lt;/code&gt; 개체의 존재 여부를 테스트 할 값 입니다.</target>
        </trans-unit>
        <trans-unit id="d35c46b695e6f77dcfcc109649ace88a4d267698" translate="yes" xml:space="preserve">
          <source>Reserved identifier</source>
          <target state="translated">예약 식별자</target>
        </trans-unit>
        <trans-unit id="84de42f83165cfece229bbd6918ecde7f4a6949e" translate="yes" xml:space="preserve">
          <source>Reserved keywords as of ECMAScript 2015</source>
          <target state="translated">ECMAScript 2015 기준으로 예약 된 키워드</target>
        </trans-unit>
        <trans-unit id="bdc92082b52755705dfafeb17bdaf665353c6964" translate="yes" xml:space="preserve">
          <source>Reserved keywords can't be variable names</source>
          <target state="translated">예약 된 키워드는 변수 이름이 될 수 없습니다</target>
        </trans-unit>
        <trans-unit id="194b5fbe7e6a3f916d3d42bfd602c9e6f73cdbf7" translate="yes" xml:space="preserve">
          <source>Reserved word usage</source>
          <target state="translated">예약어 사용법</target>
        </trans-unit>
        <trans-unit id="d9314d27041a2cfeab1963c4c7951afdedeed5a0" translate="yes" xml:space="preserve">
          <source>Reserved words actually only apply to Identifiers (vs. &lt;code&gt;IdentifierNames&lt;/code&gt;) . As described in &lt;a href=&quot;http://es5.github.com/#A.1&quot;&gt;es5.github.com/#A.1&lt;/a&gt;, these are all &lt;code&gt;IdentifierNames&lt;/code&gt; which do not exclude &lt;code&gt;ReservedWords&lt;/code&gt;.</source>
          <target state="translated">예약어는 실제로 식별자 (vs. &lt;code&gt;IdentifierNames&lt;/code&gt; ) 에만 적용됩니다 . &lt;a href=&quot;http://es5.github.com/#A.1&quot;&gt;es5.github.com/#A.1에&lt;/a&gt; 설명 된 대로 이들은 &lt;code&gt;ReservedWords&lt;/code&gt; 를 제외하지 않는 모든 &lt;code&gt;IdentifierNames&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="6e1e17ddec2cd592c60d1ba14ad985ca4d3ed510" translate="yes" xml:space="preserve">
          <source>Resolving an array</source>
          <target state="translated">배열 해결</target>
        </trans-unit>
        <trans-unit id="dfaf26b65b4a44472c30cda6f2ece2f967fea2ca" translate="yes" xml:space="preserve">
          <source>Resolving another &lt;code&gt;Promise&lt;/code&gt;</source>
          <target state="translated">다른 &lt;code&gt;Promise&lt;/code&gt; 해결</target>
        </trans-unit>
        <trans-unit id="43cd2315f4e907a18d90ab9cdadec6bead9bb650" translate="yes" xml:space="preserve">
          <source>Resolving thenables and throwing Errors</source>
          <target state="translated">thenables 해결 및 오류 발생</target>
        </trans-unit>
        <trans-unit id="d7d08fc487b92979bee3c60ed78ae592114bb68b" translate="yes" xml:space="preserve">
          <source>Rest in Object Destructuring</source>
          <target state="translated">객체 파괴에서 휴식</target>
        </trans-unit>
        <trans-unit id="2d33a4efc2c756610ed6ef3d8f08dac7b265215b" translate="yes" xml:space="preserve">
          <source>Rest in arrays</source>
          <target state="translated">배열에서 휴식</target>
        </trans-unit>
        <trans-unit id="cd11aec4948ea917300d6477087ac4ed770e6719" translate="yes" xml:space="preserve">
          <source>Rest in objects</source>
          <target state="translated">사물에서 휴식</target>
        </trans-unit>
        <trans-unit id="857f43908069f727967016e1d2761040d0696202" translate="yes" xml:space="preserve">
          <source>Rest parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3a86e7182052d5eff0ef110848fb6212c0da579" translate="yes" xml:space="preserve">
          <source>Rest parameters can be destructured (arrays only), that means that their data can be unpacked into distinct variables. See &lt;a href=&quot;../operators/destructuring_assignment&quot;&gt;Destructuring assignment&lt;/a&gt;.</source>
          <target state="translated">나머지 매개 변수는 구조화 될 수 있으며 (배열 만 해당), 데이터를 개별 변수로 압축 해제 할 수 있습니다. &lt;a href=&quot;../operators/destructuring_assignment&quot;&gt;할당 해체를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c91056ab48775739cc40900f672a6650804c77bf" translate="yes" xml:space="preserve">
          <source>Rest parameters have been introduced to reduce the boilerplate code that was induced by the arguments</source>
          <target state="translated">인수에 의해 유발 된 상용구 코드를 줄이기 위해 나머지 매개 변수가 도입되었습니다</target>
        </trans-unit>
        <trans-unit id="87e80def7ffd90c0a81662e484850f4705d586d3" translate="yes" xml:space="preserve">
          <source>Rest syntax (parameters)</source>
          <target state="translated">나머지 구문 (매개 변수)</target>
        </trans-unit>
        <trans-unit id="c1a2547c2046ec92d3b5d8146ea17d7cecfda753" translate="yes" xml:space="preserve">
          <source>Rest syntax looks exactly like spread syntax, but is used for destructuring arrays and objects. In a way, rest syntax is the opposite of spread syntax: spread 'expands' an array into its elements, while rest collects multiple elements and 'condenses' them into a single element. See &lt;a href=&quot;../functions/rest_parameters&quot;&gt;rest parameters.&lt;/a&gt;</source>
          <target state="translated">나머지 구문은 스프레드 구문과 똑같지 만 배열과 객체를 파괴하는 데 사용됩니다. 어떤 식 으로든 rest 구문은 spread 구문과 반대입니다. spread는 배열을 요소로 '확장'하고 rest는 여러 요소를 수집하여 단일 요소로 '축합'합니다. &lt;a href=&quot;../functions/rest_parameters&quot;&gt;나머지 매개 변수를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2c99a67a39312210a80a689bd500389686e8cdc9" translate="yes" xml:space="preserve">
          <source>Rest, default, and destructured parameters</source>
          <target state="translated">나머지, 기본 및 비 구조화 된 매개 변수</target>
        </trans-unit>
        <trans-unit id="5faa59d4bc3756040b8ce9e673c09f929e6ee9ba" translate="yes" xml:space="preserve">
          <source>Result</source>
          <target state="translated">Result</target>
        </trans-unit>
        <trans-unit id="ee213e87d6a03aef19c1a79f6c697e39cebad1ca" translate="yes" xml:space="preserve">
          <source>Resulting string too large</source>
          <target state="translated">결과 문자열이 너무 큼</target>
        </trans-unit>
        <trans-unit id="9ee327b60f57aafe18dc2a85c7872ac605156d33" translate="yes" xml:space="preserve">
          <source>Results in</source>
          <target state="translated">결과</target>
        </trans-unit>
        <trans-unit id="5da9cf1e5881217958e0b592c7009299cea49730" translate="yes" xml:space="preserve">
          <source>Rethrow an exception</source>
          <target state="translated">예외를 다시 던지십시오</target>
        </trans-unit>
        <trans-unit id="27b1a26ef9f5d38bca325d1f2c04093c5936da5a" translate="yes" xml:space="preserve">
          <source>Retrieves a shared symbol key from the global symbol registry for the given symbol.</source>
          <target state="translated">지정된 기호에 대한 전역 기호 레지스트리에서 공유 기호 키를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="4ed1a51e3c7c6cf43a3633b3e58f69e74b9dd263" translate="yes" xml:space="preserve">
          <source>Return Value</source>
          <target state="translated">반환 값</target>
        </trans-unit>
        <trans-unit id="d58edce0c25eb55884411ebe1ec2cc5943a7de4d" translate="yes" xml:space="preserve">
          <source>Return a JSON string corresponding to the specified value, optionally including only certain properties or replacing property values in a user-defined manner.</source>
          <target state="translated">선택적으로 특정 속성 만 포함하거나 사용자 정의 방식으로 속성 값을 대체하여 지정된 값에 해당하는 JSON 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="124241146a91fe9a1df5bb3599041f88efb8f6fc" translate="yes" xml:space="preserve">
          <source>Return a portion of an existing array</source>
          <target state="translated">기존 배열의 일부를 반환</target>
        </trans-unit>
        <trans-unit id="cff81dfd94a25423fefaea145a94da7ff8be0b5c" translate="yes" xml:space="preserve">
          <source>Return a portion of an existing typed array</source>
          <target state="translated">기존 형식화 된 배열의 일부를 반환</target>
        </trans-unit>
        <trans-unit id="54004e5549f42031414f179ab32d7b5dcfa36660" translate="yes" xml:space="preserve">
          <source>Return statement in a generator</source>
          <target state="translated">생성기의 return 문</target>
        </trans-unit>
        <trans-unit id="232f3db04c4faa620bfbfc11fd3689a472ef9881" translate="yes" xml:space="preserve">
          <source>Return value</source>
          <target state="translated">반환 값</target>
        </trans-unit>
        <trans-unit id="65530acaf27ca70b04e5a6713dd541d6ed4182e1" translate="yes" xml:space="preserve">
          <source>Returning a formatted number</source>
          <target state="translated">서식이 지정된 숫자 반환</target>
        </trans-unit>
        <trans-unit id="645290609797113b76ae0c209582eb10cda68096" translate="yes" xml:space="preserve">
          <source>Returning a function</source>
          <target state="translated">함수 반환</target>
        </trans-unit>
        <trans-unit id="87657a30816d60d5a0f87878ffb6d2cc62f5d1d3" translate="yes" xml:space="preserve">
          <source>Returning a limited number of splits</source>
          <target state="translated">제한된 수의 스플릿 반환</target>
        </trans-unit>
        <trans-unit id="cbd32c1035336fdc667ff599040e751e23d164ad" translate="yes" xml:space="preserve">
          <source>Returning from a finally block</source>
          <target state="translated">finally 블록에서 복귀</target>
        </trans-unit>
        <trans-unit id="26b7025e43eb4e5706c3531d4310933ffc64ebf9" translate="yes" xml:space="preserve">
          <source>Returning object literals</source>
          <target state="translated">객체 리터럴 반환</target>
        </trans-unit>
        <trans-unit id="9582a02f141fc4b345b2936eba691cd0654efebc" translate="yes" xml:space="preserve">
          <source>Returns</source>
          <target state="translated">Returns</target>
        </trans-unit>
        <trans-unit id="82bb26105bdd79a362c8c9ebaa8c88ac86fc1a9c" translate="yes" xml:space="preserve">
          <source>Returns &quot;AsyncFunction&quot;.</source>
          <target state="translated">&quot;AsyncFunction&quot;을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3ed32cb480752f71524e60377bf8f65ebdf1051c" translate="yes" xml:space="preserve">
          <source>Returns 'undefined' instead of the 'Map' object.</source>
          <target state="translated">'Map'객체 대신 'undefined'를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2a5a694e3c98ec8bd8ad839e567288e2554ad469" translate="yes" xml:space="preserve">
          <source>Returns 'undefined' instead of the 'Set' object.</source>
          <target state="translated">'Set'객체 대신 'undefined'를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2e926ac748ef55a13750a1932f4a8b9f577b8ed9" translate="yes" xml:space="preserve">
          <source>Returns 0 if they are equivalent</source>
          <target state="translated">같으면 0을 반환</target>
        </trans-unit>
        <trans-unit id="50c990223cd21d502a5923b4921bd79aa9303ce8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;0&lt;/code&gt; no matter the local time zone as a time zone GMT (UTC) is provided.</source>
          <target state="translated">표준 시간대 GMT (UTC)가 제공되므로 현지 표준 시간대에 관계없이 &lt;code&gt;0&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="d3fb34f518755ffb5030431702bbc48b1f9e109f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;14400000&lt;/code&gt; in time zone GMT-0400, and other values in other time zones, since no time zone is provided and the string is not in ISO format, therefore the local time zone is used.</source>
          <target state="translated">표준 시간대가 제공되지 않고 문자열이 ISO 형식이 &lt;code&gt;14400000&lt;/code&gt; 로 표준 시간대 GMT-0400에서 14400000 을 반환 하고 다른 표준 시간대에서 다른 값을 반환 하므로 로컬 표준 시간대가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="4c784017c3fecf5367941f0c193d3b39d5993dc4" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;14400000&lt;/code&gt; no matter the local time zone as a time zone GMT (UTC) is provided.</source>
          <target state="translated">표준 시간대 GMT (UTC)가 제공되므로 현지 표준 시간대에 관계없이 &lt;code&gt;14400000&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="d20324fa5f796cd7d4877417bd34ff15717031d1" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;807926400000&lt;/code&gt; no matter the local time zone as GMT (UTC) is provided.</source>
          <target state="translated">GMT (UTC)가 제공되는 현지 시간대에 관계없이 &lt;code&gt;807926400000&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="f998db30b10810b1cc24bd9abdfcc63e8f04579e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;807937200000&lt;/code&gt; in time zone GMT-0300, and other values in other time zones, since the string does not specify a time zone and is not ISO format, therefore the time zone defaults to local.</source>
          <target state="translated">문자열이 시간대를 지정하지 않고 ISO 형식이 아니므로 시간대 GMT-0300에서 &lt;code&gt;807937200000&lt;/code&gt; 과 다른 시간대의 다른 값을 반환 하므로 표준 시간대는 로컬입니다.</target>
        </trans-unit>
        <trans-unit id="0266e7bbd47544e785fae3257d3c56fe6b92355d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;807937200000&lt;/code&gt; in time zone GMT-0300, and other values in other time zones, since there is no time zone specifier in the argument and it is not ISO format, so is treated as local.</source>
          <target state="translated">인수에 시간대 지정자가없고 ISO 형식이 아니기 때문에 표준 시간대 GMT-0300에서 &lt;code&gt;807937200000&lt;/code&gt; 및 다른 표준 시간대의 다른 값을 리턴 합니다. 따라서 로컬로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="38cf4e023eac09d428110e18d08f86f4c70be616" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;[&quot;&quot;, undefined]&lt;/code&gt;, an empty array whose zeroth element is the match string. In this case, the empty string because &lt;code&gt;lastIndex&lt;/code&gt; was 2 (and still is 2) and &lt;code&gt;&quot;hi&quot;&lt;/code&gt; has length 2.</source>
          <target state="translated">0 번째 요소가 일치 문자열 인 빈 배열 &lt;code&gt;[&quot;&quot;, undefined]&lt;/code&gt; 반환 합니다. 이 경우 &lt;code&gt;lastIndex&lt;/code&gt; 가 2이고 여전히 2 이므로 비어있는 문자열 은 &lt;code&gt;&quot;hi&quot;&lt;/code&gt; 의 길이가 2입니다.</target>
        </trans-unit>
        <trans-unit id="3718c2e5732056658ed5f0073e4284a6d91afb4e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;[&quot;hi&quot;, &quot;hi&quot;]&lt;/code&gt; with &lt;code&gt;lastIndex&lt;/code&gt; equal to 2.</source>
          <target state="translated">&lt;code&gt;lastIndex&lt;/code&gt; 가 2 인 &lt;code&gt;[&quot;hi&quot;, &quot;hi&quot;]&lt;/code&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="ea977ecbcca760e3677b1c7e51f149cad1b4cd78" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;expr1&lt;/code&gt; if it can be converted to &lt;code&gt;false&lt;/code&gt;; otherwise, returns &lt;code&gt;expr2&lt;/code&gt;. Thus, when used with Boolean values, &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; if both operands are true; otherwise, returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;expr1&lt;/code&gt; 을 &lt;code&gt;false&lt;/code&gt; 로 변환 할 수 있으면이를 리턴합니다 . 그렇지 않으면 &lt;code&gt;expr2&lt;/code&gt; 를 리턴합니다 . 따라서 부울 값과 함께 사용 하면 두 피연산자가 모두 &lt;code&gt;true&lt;/code&gt; 인 경우 &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; 는 true를 리턴 합니다. 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="08a8ab8056f6ba70c4cddf6206ba3b7cba4cf7aa" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;expr1&lt;/code&gt; if it can be converted to &lt;code&gt;true&lt;/code&gt;; otherwise, returns &lt;code&gt;expr2&lt;/code&gt;. Thus, when used with Boolean values, &lt;code&gt;||&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; if either operand is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;expr1&lt;/code&gt; 을 &lt;code&gt;true&lt;/code&gt; 로 변환 할 수 있으면이를 리턴 합니다 . 그렇지 않으면 &lt;code&gt;expr2&lt;/code&gt; 를 리턴합니다 . 따라서 부울 값과 함께 사용하면 &lt;code&gt;||&lt;/code&gt; 피연산자 중 하나가 &lt;code&gt;true&lt;/code&gt; 이면 를 반환 &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c6bd996326730a3d1314d901fd5fe6c4326dfe1d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;false&lt;/code&gt; if its single operand can be converted to &lt;code&gt;true&lt;/code&gt;; otherwise, returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">단일 피연산자가 &lt;code&gt;true&lt;/code&gt; 로 변환 될 수 있으면 &lt;code&gt;false&lt;/code&gt; 를 리턴 합니다 . 그렇지 않으면 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="f48f6d92263efef57debf5df5a7d52a68694bb79" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;arg&lt;/code&gt; is one of the ArrayBuffer views, such as &lt;a href=&quot;typedarray&quot;&gt;typed array objects&lt;/a&gt; or a &lt;a href=&quot;dataview&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt;. Returns &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;arg&lt;/code&gt; 가 &lt;a href=&quot;typedarray&quot;&gt;형식화 된 배열 객체&lt;/a&gt; 또는 &lt;a href=&quot;dataview&quot;&gt; &lt;code&gt;DataView&lt;/code&gt; &lt;/a&gt; 와 같은 ArrayBuffer보기 중 하나 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 . 반환 &lt;code&gt;false&lt;/code&gt; 이 없습니다.</target>
        </trans-unit>
        <trans-unit id="f2530d0accd0bef8e73294887665ed0a28c7c650" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if an element in the &lt;code&gt;Map&lt;/code&gt; object existed and has been removed, or &lt;code&gt;false&lt;/code&gt; if the element does not exist. &lt;code&gt;Map.prototype.has(key)&lt;/code&gt; will return &lt;code&gt;false&lt;/code&gt; afterwards.</source>
          <target state="translated">반환 &lt;code&gt;true&lt;/code&gt; 의 요소 경우 &lt;code&gt;Map&lt;/code&gt; 개체가 존재하고 제거 된, 또는 &lt;code&gt;false&lt;/code&gt; 요소가 존재하지 않는 경우. &lt;code&gt;Map.prototype.has(key)&lt;/code&gt; 는 나중에 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="60ce4ee4f1fd342308bd07c9895831acb3f7bfbd" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if an element with the specified key exists in the &lt;code&gt;Map&lt;/code&gt; object; otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">지정된 키를 가진 요소가 &lt;code&gt;Map&lt;/code&gt; 객체에 존재하면 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다. 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1272651ecf970d57281bfa653ffff87309d4d322" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if an element with the specified key exists in the &lt;code&gt;WeakMap&lt;/code&gt; object; otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">지정된 키를 가진 요소가 &lt;code&gt;WeakMap&lt;/code&gt; 오브젝트에 존재하면 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다. 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="92886e343330b68c24e8ac1985107c8397f09262" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if an element with the specified value exists in the &lt;code&gt;Set&lt;/code&gt; object; otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">지정된 값을 가진 요소가 &lt;code&gt;Set&lt;/code&gt; 객체에 존재하면 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다. 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="649ae16b40452bf2e94974f765a04a1fb472ecc9" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if an element with the specified value exists in the &lt;code&gt;WeakSet&lt;/code&gt; object; otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">지정된 값을 가진 요소가 &lt;code&gt;WeakSet&lt;/code&gt; 오브젝트에 존재하면 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다. 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7e843c2cd3cec65c18eb6de7fe33b787337ff0c8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the function is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators&quot;&gt;generator&lt;/a&gt;; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">함수가 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators&quot;&gt;생성기 &lt;/a&gt; &lt;code&gt;true&lt;/code&gt; 리턴 합니다 . 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="282fd7e6d9910a42579c9c5044459cd18c20a5cc" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the object is sealed, otherwise &lt;code&gt;false&lt;/code&gt;. An object is sealed if it is not &lt;a href=&quot;isextensible&quot;&gt;extensible&lt;/a&gt; and if all its properties are non-configurable and therefore not removable (but not necessarily non-writable).</source>
          <target state="translated">객체가 봉인되어 있으면 &lt;code&gt;true&lt;/code&gt; 를 , 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다 . 개체가 &lt;a href=&quot;isextensible&quot;&gt;확장 가능&lt;/a&gt; 하지 않고 모든 속성을 구성 할 수없고 제거 할 수없는 경우 (그러나 반드시 쓸 수있는 것은 아님) 개체가 봉인됩니다 .</target>
        </trans-unit>
        <trans-unit id="f25a7a2ab3485fcf970dd737b71be4299adbc9af" translate="yes" xml:space="preserve">
          <source>Returns E&lt;sup&gt;x&lt;/sup&gt;, where &lt;var&gt;x&lt;/var&gt; is the argument, and E is Euler's constant (2.718&amp;hellip;), the base of the natural logarithm.</source>
          <target state="translated">E &lt;sup&gt;x를&lt;/sup&gt; 반환합니다 . 여기서 &lt;var&gt;x&lt;/var&gt; 는 인수이고 E는 자연 로그의 밑수 인 오일러 상수 (2.718&amp;hellip;)입니다.</target>
        </trans-unit>
        <trans-unit id="a46872e21a908726936e4fecdb0fa7399932d6b0" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;../promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; whose &lt;code&gt;finally&lt;/code&gt; handler is set to the specified function, &lt;code&gt;onFinally&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;finally&lt;/code&gt; 핸들러가 지정된 함수 &lt;code&gt;onFinally&lt;/code&gt; 로 설정된 &lt;a href=&quot;../promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="c5aff42d7a28178e0fd52ec806b761d8bc10c571" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; indicating which plurar rule to use for locale-aware formatting.</source>
          <target state="translated">로케일 인식 형식에 사용할 복수 규칙을 나타내는 &lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="d74c79f88388bf285997da112d795ac6e200b296" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; indicating which plurar rule to use for locale-aware formatting.</source>
          <target state="translated">로케일 인식 형식에 사용할 복수 규칙을 나타내는 &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="da0f9c59f51af5a006864be86fd407ae79ef99b2" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;1&lt;/code&gt; in each bit position for which the corresponding bits of both operands are &lt;code&gt;1&lt;/code&gt;s.</source>
          <target state="translated">돌려 &lt;code&gt;1&lt;/code&gt; 두 피연산자의 대응하는 비트가있는 각 비트 위치에 &lt;code&gt;1&lt;/code&gt; 개 들.</target>
        </trans-unit>
        <trans-unit id="c74ea51aa956376eaf5c2374aa3e906153ec0796" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;1&lt;/code&gt; in each bit position for which the corresponding bits of either but not both operands are &lt;code&gt;1&lt;/code&gt;s.</source>
          <target state="translated">두 피연산자 중 하나의 해당 비트가 &lt;code&gt;1&lt;/code&gt; 이 아닌 각 비트 위치에서 &lt;code&gt;1&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="c4e0f0ff87be68060296b142d96b77c16a924dd0" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;1&lt;/code&gt; in each bit position for which the corresponding bits of either or both operands are &lt;code&gt;1&lt;/code&gt;s.</source>
          <target state="translated">리턴 &lt;code&gt;1&lt;/code&gt; 하나의 대응하는 비트 또는 두 피연산자가있는 각 비트 위치에 &lt;code&gt;1&lt;/code&gt; 개 들.</target>
        </trans-unit>
        <trans-unit id="99362598ade861f4b5519c24e668307feea8a306" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;Promise&lt;/code&gt; object that is rejected with the given reason.</source>
          <target state="translated">주어진 이유로 거부 된 &lt;code&gt;Promise&lt;/code&gt; 개체를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="1b54eacdd2ba628b31d00eedbe7c1d02debecae3" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;Promise&lt;/code&gt; object that is resolved with the given value. If the value is a thenable (i.e. has a &lt;code&gt;then&lt;/code&gt; method), the returned promise will &quot;follow&quot; that thenable, adopting its eventual state; otherwise the returned promise will be fulfilled with the value. Generally, if you don't know if a value is a promise or not, &lt;a href=&quot;promise/resolve&quot;&gt;&lt;code&gt;Promise.resolve(value)&lt;/code&gt;&lt;/a&gt; it instead and work with the return value as a promise.</source>
          <target state="translated">주어진 값으로 해결 된 &lt;code&gt;Promise&lt;/code&gt; 개체를 반환 합니다. 값이 교환 가능한 경우 (즉, &lt;code&gt;then&lt;/code&gt; 메소드 가있는 경우 ) 반환 된 약속은 해당 상태를 &quot;따라&quot;최종 결과 상태를 채택합니다. 그렇지 않으면 반환 된 약속은 그 값으로 이행됩니다. 일반적으로 값이 약속인지 여부를 모르는 경우 &lt;a href=&quot;promise/resolve&quot;&gt; &lt;code&gt;Promise.resolve(value)&lt;/code&gt; &lt;/a&gt; 대신 약속 값으로 반환 값을 처리합니다.</target>
        </trans-unit>
        <trans-unit id="b263d6d4d8ce21067a03edda2118d09fd0da2f1b" translate="yes" xml:space="preserve">
          <source>Returns a Boolean asserting whether a value has been associated to the &lt;code&gt;key&lt;/code&gt; in the &lt;code&gt;WeakMap&lt;/code&gt; object or not.</source>
          <target state="translated">값이 &lt;code&gt;WeakMap&lt;/code&gt; 객체 의 &lt;code&gt;key&lt;/code&gt; 에 연결되었는지 여부를 나타내는 부울을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="98772da881143992296fdb4c86406b0b90dec8d8" translate="yes" xml:space="preserve">
          <source>Returns a boolean asserting whether a value has been associated to the &lt;code&gt;key&lt;/code&gt; in the &lt;code&gt;Map&lt;/code&gt; object or not.</source>
          <target state="translated">값이 &lt;code&gt;Map&lt;/code&gt; 객체 의 &lt;code&gt;key&lt;/code&gt; 에 연결되었는지 여부를 나타내는 부울을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="965d8974b9302f44181381cc9a2fdfc32fb3031d" translate="yes" xml:space="preserve">
          <source>Returns a boolean asserting whether an element is present with the given value in the &lt;code&gt;Set&lt;/code&gt; object or not.</source>
          <target state="translated">요소가 지정된 값의 &lt;code&gt;Set&lt;/code&gt; 개체에 있는지 여부를 나타내는 부울을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="4d0ab298a47651a143e277051b6d6fb5545217f1" translate="yes" xml:space="preserve">
          <source>Returns a boolean asserting whether an element is present with the given value in the &lt;code&gt;WeakSet&lt;/code&gt; object or not.</source>
          <target state="translated">요소가 &lt;code&gt;WeakSet&lt;/code&gt; 오브젝트 에 제공된 값으로 존재하는지 여부를 주장하는 부울 값을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="0b2cdfb9fcf536a05ebc26d5544c2b0580ee41c2" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating if the internal &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Properties&quot;&gt;ECMAScript [[Enumerable]] attribute&lt;/a&gt; is set.</source>
          <target state="translated">내부 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Properties&quot;&gt;ECMAScript [[Enumerable]] 속성&lt;/a&gt; 이 설정되어 있는지 여부를 나타내는 부울을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="89d536d161aa0ed6a73922daa86b50a60e7d67d8" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether an object contains the specified property as a direct property of that object and not inherited through the prototype chain.</source>
          <target state="translated">객체에 지정된 속성이 해당 객체의 직접 속성으로 포함되어 있고 프로토 타입 체인을 통해 상속되지 않는지 여부를 나타내는 부울을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="61fd6d2ede3cfc0defad4286950b8e0b04164205" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the object this method is called upon is in the prototype chain of the specified object.</source>
          <target state="translated">이 메소드가 호출 된 오브젝트가 지정된 오브젝트의 프로토 타입 체인에 있는지 여부를 나타내는 부울을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="2ab2f571478a9129ce747098d82a528db5b71c17" translate="yes" xml:space="preserve">
          <source>Returns a localized string representing the array and its elements. Overrides the &lt;a href=&quot;../object/tolocalestring&quot;&gt;&lt;code&gt;Object.prototype.toLocaleString()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">배열과 해당 요소를 나타내는 지역화 된 문자열을 반환합니다. &lt;a href=&quot;../object/tolocalestring&quot;&gt; &lt;code&gt;Object.prototype.toLocaleString()&lt;/code&gt; &lt;/a&gt; 메서드를 재정의합니다 .</target>
        </trans-unit>
        <trans-unit id="e5e075ae626b869852cad62483a79ffcd6e059e1" translate="yes" xml:space="preserve">
          <source>Returns a localized string representing the array and its elements. Overrides the &lt;a href=&quot;object/tolocalestring&quot;&gt;&lt;code&gt;Object.prototype.toLocaleString()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">배열과 해당 요소를 나타내는 지역화 된 문자열을 반환합니다. &lt;a href=&quot;object/tolocalestring&quot;&gt; &lt;code&gt;Object.prototype.toLocaleString()&lt;/code&gt; &lt;/a&gt; 메서드를 재정의합니다 .</target>
        </trans-unit>
        <trans-unit id="024a09ec762fbdd05d70b62c68d1fc9ffed15a1f" translate="yes" xml:space="preserve">
          <source>Returns a localized string representing the array and its elements. See also &lt;a href=&quot;../array/tolocalestring&quot;&gt;&lt;code&gt;Array.prototype.toLocaleString()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">배열과 해당 요소를 나타내는 지역화 된 문자열을 반환합니다. &lt;a href=&quot;../array/tolocalestring&quot;&gt; &lt;code&gt;Array.prototype.toLocaleString()&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ad2ce5452c7c6f8afaad0068557570fc47f981ae" translate="yes" xml:space="preserve">
          <source>Returns a localized string representing the array and its elements. See also &lt;a href=&quot;array/tolocalestring&quot;&gt;&lt;code&gt;Array.prototype.toLocaleString()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">배열과 해당 요소를 나타내는 지역화 된 문자열을 반환합니다. &lt;a href=&quot;array/tolocalestring&quot;&gt; &lt;code&gt;Array.prototype.toLocaleString()&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="83552e6b767d58cca6085b43cb0d14e519791665" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;a href=&quot;../global_objects/array/@@iterator&quot;&gt;Array Iterator object&lt;/a&gt; that contains the values for each index in the &lt;code&gt;arguments&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;arguments&lt;/code&gt; 각 인덱스에 대한 값이 포함 된 새 &lt;a href=&quot;../global_objects/array/@@iterator&quot;&gt;Array Iterator 객체&lt;/a&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="9ea475824c1312836a184be801c2b344a00b4613" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;code&gt;Array Iterator&lt;/code&gt; object that contains the key/value pairs for each index in the array.</source>
          <target state="translated">&lt;code&gt;Array Iterator&lt;/code&gt; 각 인덱스에 대한 키 / 값 쌍을 포함 하는 새로운 Array Iterator 객체를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="8a57c879527ff988a1f42fd0bc34d194fe483243" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;code&gt;Array Iterator&lt;/code&gt; object that contains the key/value pairs for each index in the array. See also &lt;a href=&quot;../array/entries&quot;&gt;&lt;code&gt;Array.prototype.entries()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Array Iterator&lt;/code&gt; 각 인덱스에 대한 키 / 값 쌍을 포함 하는 새로운 Array Iterator 객체를 반환합니다 . &lt;a href=&quot;../array/entries&quot;&gt; &lt;code&gt;Array.prototype.entries()&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="dc3d25b777ce40cb8494793a9efe1280f70c8c44" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;code&gt;Array Iterator&lt;/code&gt; object that contains the key/value pairs for each index in the array. See also &lt;a href=&quot;array/entries&quot;&gt;&lt;code&gt;Array.prototype.entries()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Array Iterator&lt;/code&gt; 각 인덱스에 대한 키 / 값 쌍을 포함 하는 새로운 Array Iterator 객체를 반환합니다 . &lt;a href=&quot;array/entries&quot;&gt; &lt;code&gt;Array.prototype.entries()&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f1e28b399c788b32636eed8fb10a3085df3453c5" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;code&gt;Array Iterator&lt;/code&gt; object that contains the values for each index in the array.</source>
          <target state="translated">&lt;code&gt;Array Iterator&lt;/code&gt; 각 인덱스에 대한 값이 포함 된 새 Array Iterator 객체를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="4a2ff51230c9bbb2d34e9b7dc23f4e4974d8f344" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;code&gt;Array Iterator&lt;/code&gt; object that contains the values for each index in the array. See also &lt;a href=&quot;../array/values&quot;&gt;&lt;code&gt;Array.prototype.values()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Array Iterator&lt;/code&gt; 각 인덱스에 대한 값이 포함 된 새 Array Iterator 객체를 반환합니다 . &lt;a href=&quot;../array/values&quot;&gt; &lt;code&gt;Array.prototype.values()&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="aa24762b768bc1c4221b980227f492904fef009a" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;code&gt;Array Iterator&lt;/code&gt; object that contains the values for each index in the array. See also &lt;a href=&quot;array/values&quot;&gt;&lt;code&gt;Array.prototype.values()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Array Iterator&lt;/code&gt; 각 인덱스에 대한 값이 포함 된 새 Array Iterator 객체를 반환합니다 . &lt;a href=&quot;array/values&quot;&gt; &lt;code&gt;Array.prototype.values()&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="38644805ac883e50e509f437343e375e5be8f3c7" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;code&gt;Array Iterator&lt;/code&gt; that contains the keys for each index in the array.</source>
          <target state="translated">&lt;code&gt;Array Iterator&lt;/code&gt; 각 인덱스에 대한 키가 포함 된 새 배열 반복자 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="982af51c0586ede61f5c51df7765385fc5c7bc43" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;code&gt;Array Iterator&lt;/code&gt; that contains the keys for each index in the array. See also &lt;a href=&quot;../array/keys&quot;&gt;&lt;code&gt;Array.prototype.keys()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Array Iterator&lt;/code&gt; 각 인덱스에 대한 키가 포함 된 새 배열 반복자 를 반환합니다 . &lt;a href=&quot;../array/keys&quot;&gt; &lt;code&gt;Array.prototype.keys()&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="decfe88a21e0174c04c37527c8bc8208be6e6b03" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;code&gt;Array Iterator&lt;/code&gt; that contains the keys for each index in the array. See also &lt;a href=&quot;array/keys&quot;&gt;&lt;code&gt;Array.prototype.keys()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Array Iterator&lt;/code&gt; 각 인덱스에 대한 키가 포함 된 새 배열 반복자 를 반환합니다 . &lt;a href=&quot;array/keys&quot;&gt; &lt;code&gt;Array.prototype.keys()&lt;/code&gt; &lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="003f6d1bd0d01ff748b4045e8f96f43c279914ed" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;code&gt;ArrayBuffer&lt;/code&gt; whose contents are a copy of this &lt;code&gt;ArrayBuffer&lt;/code&gt;'s bytes from &lt;code&gt;begin&lt;/code&gt;, inclusive, up to &lt;code&gt;end&lt;/code&gt;, exclusive. If either &lt;code&gt;begin&lt;/code&gt; or &lt;code&gt;end&lt;/code&gt; is negative, it refers to an index from the end of the array, as opposed to from the beginning.</source>
          <target state="translated">반환 새로운 &lt;code&gt;ArrayBuffer&lt;/code&gt; 그 내용이 사본입니다 &lt;code&gt;ArrayBuffer&lt;/code&gt; 에서의 바이트 &lt;code&gt;begin&lt;/code&gt; 에 포함, 최대 &lt;code&gt;end&lt;/code&gt; 독점. 어느 경우 &lt;code&gt;begin&lt;/code&gt; 또는 &lt;code&gt;end&lt;/code&gt; 음수 처음부터 대조적으로, 그것은 상기 어레이의 단부에서의 인덱스를 의미한다.</target>
        </trans-unit>
        <trans-unit id="e6355890d21596e84bf323c3ef6e0ad27d6a826a" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;code&gt;ArrayBuffer&lt;/code&gt; whose contents are taken from the &lt;code&gt;oldBuffer&lt;/code&gt;'s data and then is either truncated or zero-extended by &lt;code&gt;newByteLength&lt;/code&gt;.</source>
          <target state="translated">반환 새로운 &lt;code&gt;ArrayBuffer&lt;/code&gt; 시 내용에서 가져 &lt;code&gt;oldBuffer&lt;/code&gt; 하나 잘 리거나에 의해 제로 - 확장 다음의 데이터와 &lt;code&gt;newByteLength&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ed9b31ada52ca09c0785e6ecf8f50b6f8289823e" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;code&gt;Float32Array&lt;/code&gt; from the given start and end element index.</source>
          <target state="translated">지정된 시작 및 끝 요소 인덱스에서 새 &lt;code&gt;Float32Array&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="645880a1ee0a44c04c14a2dc567cb5bab824f07c" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;code&gt;Float64Array&lt;/code&gt; from the given start and end element index.</source>
          <target state="translated">지정된 시작 및 끝 요소 인덱스에서 새 &lt;code&gt;Float64Array&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="266126387ea7e5282f19e0f9d379d97146f4686c" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;code&gt;Int16Array&lt;/code&gt; from the given start and end element index.</source>
          <target state="translated">지정된 시작 및 끝 요소 인덱스에서 새 &lt;code&gt;Int16Array&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="62b6038d2f7942d7e484780f1127060eda486c70" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;code&gt;Int32Array&lt;/code&gt; from the given start and end element index.</source>
          <target state="translated">지정된 시작 및 끝 요소 인덱스에서 새 &lt;code&gt;Int32Array&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="0c9618eb8d0dd05aa705e304f487f7b528cb078b" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;code&gt;Int8Array&lt;/code&gt; from the given start and end element index.</source>
          <target state="translated">지정된 시작 및 끝 요소 인덱스에서 새 &lt;code&gt;Int8Array&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="c096a5c10ae68cc385b4a6d12040133cd6e6db3c" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;code&gt;Iterator&lt;/code&gt; object that contains the &lt;strong&gt;keys&lt;/strong&gt; for each element in the &lt;code&gt;Map&lt;/code&gt; object in insertion order.</source>
          <target state="translated">삽입 순서대로 &lt;code&gt;Map&lt;/code&gt; 객체의 각 요소에 대한 &lt;strong&gt;키&lt;/strong&gt; 가 포함 된 새 &lt;code&gt;Iterator&lt;/code&gt; 객체를 반환합니다 .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="99a8b3b9f859e42c527a0c79da366a5a2534930e" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;code&gt;Iterator&lt;/code&gt; object that contains the &lt;strong&gt;values&lt;/strong&gt; for each element in the &lt;code&gt;Map&lt;/code&gt; object in insertion order.</source>
          <target state="translated">삽입 순서대로 &lt;code&gt;Map&lt;/code&gt; 객체의 각 요소에 대한 &lt;strong&gt;값&lt;/strong&gt; 이 포함 된 새 &lt;code&gt;Iterator&lt;/code&gt; 객체를 반환합니다 .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="25fdffae8e2d0cc04844a12b02c9093f79a89fd9" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;code&gt;Iterator&lt;/code&gt; object that contains the &lt;strong&gt;values&lt;/strong&gt; for each element in the &lt;code&gt;Set&lt;/code&gt; object in insertion order.</source>
          <target state="translated">&lt;code&gt;Set&lt;/code&gt; 객체의 각 요소에 대한 &lt;strong&gt;값&lt;/strong&gt; 을 삽입 순서대로 포함 하는 새 &lt;code&gt;Iterator&lt;/code&gt; 객체를 반환합니다 .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7ce96108f8bd4398b8f7a1b249c8dee4f089243d" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;code&gt;Iterator&lt;/code&gt; object that contains&lt;code&gt;[key, value]&lt;/code&gt; for each element in the &lt;code&gt;Map&lt;/code&gt; object in insertion order.</source>
          <target state="translated">삽입 순서대로 &lt;code&gt;Map&lt;/code&gt; 객체의 각 요소에 대한 &lt;code&gt;[key, value]&lt;/code&gt; 를 포함 하는 새로운 &lt;code&gt;Iterator&lt;/code&gt; 객체를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="a7b9c18eb7868ac0bb955545007f39f5ccbfa31e" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;code&gt;Iterator&lt;/code&gt; object that contains&lt;code&gt;[value, value]&lt;/code&gt; for each element in the &lt;code&gt;Set&lt;/code&gt; object, in insertion order. This is kept similar to the &lt;code&gt;Map&lt;/code&gt; object, so that each entry has the same value for its &lt;em&gt;key&lt;/em&gt; and &lt;em&gt;value&lt;/em&gt; here.</source>
          <target state="translated">&lt;code&gt;Set&lt;/code&gt; 객체의 각 요소에 대한 &lt;code&gt;[value, value]&lt;/code&gt; 가 포함 된 새 &lt;code&gt;Iterator&lt;/code&gt; 객체를 삽입 순서로 반환합니다 . 이는 &lt;code&gt;Map&lt;/code&gt; 객체 와 유사하게 유지 되므로 각 항목의 &lt;em&gt;키&lt;/em&gt; 및 &lt;em&gt;값&lt;/em&gt; 값이 동일합니다 .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dcc958eb58a51161df8f3d98e448e2ab56a9eeec" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;code&gt;Iterator&lt;/code&gt; object that iterates over the code points of a String value, returning each code point as a String value.</source>
          <target state="translated">String 값의 코드 포인트를 반복하여 각 코드 포인트를 String 값으로 반환하는 새 &lt;code&gt;Iterator&lt;/code&gt; 객체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="cdeef3050233f4a0dfda6987f06311f533c67c41" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;code&gt;SharedArrayBuffer&lt;/code&gt; whose contents are a copy of this &lt;code&gt;SharedArrayBuffer&lt;/code&gt;'s bytes from &lt;code&gt;begin&lt;/code&gt;, inclusive, up to &lt;code&gt;end&lt;/code&gt;, exclusive. If either &lt;code&gt;begin&lt;/code&gt; or &lt;code&gt;end&lt;/code&gt; is negative, it refers to an index from the end of the array, as opposed to from the beginning.</source>
          <target state="translated">반환 새로운 &lt;code&gt;SharedArrayBuffer&lt;/code&gt; 그 내용이 사본입니다 &lt;code&gt;SharedArrayBuffer&lt;/code&gt; 에서의 바이트 &lt;code&gt;begin&lt;/code&gt; 에 포함, 최대 &lt;code&gt;end&lt;/code&gt; 독점. 어느 경우 &lt;code&gt;begin&lt;/code&gt; 또는 &lt;code&gt;end&lt;/code&gt; 음수 처음부터 대조적으로, 그것은 상기 어레이의 단부에서의 인덱스를 의미한다.</target>
        </trans-unit>
        <trans-unit id="3731bc69ff025fc9eeb7f27f62f5ac4ed99830e6" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;code&gt;Uint16Array&lt;/code&gt; from the given start and end element index.</source>
          <target state="translated">지정된 시작 및 끝 요소 인덱스에서 새 &lt;code&gt;Uint16Array&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="272d539a8456a3f99e74e2e207257b9695f6c8c8" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;code&gt;Uint32Array&lt;/code&gt; from the given start and end element index.</source>
          <target state="translated">지정된 시작 및 끝 요소 인덱스에서 새 &lt;code&gt;Uint32Array&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="e3e44d6e7fcd89fde4cf0997d1770ac62f85ac6e" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;code&gt;Uint8Array&lt;/code&gt; from the given start and end element index.</source>
          <target state="translated">지정된 시작 및 끝 요소 인덱스에서 새 &lt;code&gt;Uint8Array&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="636ede7ca67b9d146084df2c3cf1f48e4f8c67a0" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;code&gt;Uint8ClampedArray&lt;/code&gt; from the given start and end element index.</source>
          <target state="translated">지정된 시작 및 끝 요소 인덱스에서 새 &lt;code&gt;Uint8ClampedArray&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="2489866dacfa71637ef0792cfbf92d16baa8b32f" translate="yes" xml:space="preserve">
          <source>Returns a new TypedArray from the given start and end element index.</source>
          <target state="translated">지정된 시작 및 끝 요소 인덱스에서 새 TypedArray를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="fecd09e2c00d45fb444c6924dc4b03a870a174a1" translate="yes" xml:space="preserve">
          <source>Returns a new array comprised of this array joined with other array(s) and/or value(s).</source>
          <target state="translated">이 배열로 구성된 새 배열을 다른 배열 및 / 또는 값과 결합하여 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1571ed3347db6ae633fdb05bac920be75ca6d200" translate="yes" xml:space="preserve">
          <source>Returns a new object from an iterable of key-value pairs (reverses &lt;a href=&quot;object/entries&quot;&gt;&lt;code&gt;Object.entries&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">반복 가능한 키-값 쌍 (새 &lt;a href=&quot;object/entries&quot;&gt; &lt;code&gt;Object.entries&lt;/code&gt; &lt;/a&gt; ) 에서 새 객체를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="5f6250233050ed43592f37d6339ba4c9c7eb91de" translate="yes" xml:space="preserve">
          <source>Returns a new object with properties reflecting the locale and collation options computed during initialization of the object.</source>
          <target state="translated">객체 초기화 중에 계산 된 로캘 및 데이터 정렬 옵션을 반영하는 속성이있는 새 객체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4b68b4ce3bc78c99794bca32bcf73b6e548fe292" translate="yes" xml:space="preserve">
          <source>Returns a new object with properties reflecting the locale and formatting options computed during initialization of the object.</source>
          <target state="translated">객체를 초기화하는 동안 계산 된 로캘 및 서식 옵션을 반영하는 속성이있는 새 객체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0e7a5dbf40a2e2654cd8d516ef752346c4483f4c" translate="yes" xml:space="preserve">
          <source>Returns a nonnegative integer Number that is the code point value of the UTF-16 encoded code point starting at the specified index.</source>
          <target state="translated">지정된 인덱스에서 시작하는 UTF-16 인코딩 코드 포인트의 코드 포인트 값이 아닌 음이 아닌 정수를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="2bfbc6ceab0ca8b65d2709cf02ed8851d96c84ba" translate="yes" xml:space="preserve">
          <source>Returns a number indicating whether a reference string comes before or after or is the same as the given string in sort order.</source>
          <target state="translated">참조 문자열이 주어진 문자열의 앞 또는 뒤에 오거나 같은지 여부를 나타내는 숫자를 정렬 순서로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b8402595defa960e375139c105286c04fc13788d" translate="yes" xml:space="preserve">
          <source>Returns a number that is the UTF-16 code unit value at the given index.</source>
          <target state="translated">주어진 색인에서 UTF-16 코드 단위 값인 숫자를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="44e2f06b3b922222ab6ea559bc0191ea1f7a2a26" translate="yes" xml:space="preserve">
          <source>Returns a number value of the element size for the different typed array objects.</source>
          <target state="translated">다른 유형의 배열 객체에 대한 요소 크기의 숫자 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b5f50cc93498ce3f9a3401f5b2b5f6bbac74d748" translate="yes" xml:space="preserve">
          <source>Returns a number value of the element size. &lt;code&gt;1&lt;/code&gt; in the case of an &lt;code&gt;Int8Array&lt;/code&gt;.</source>
          <target state="translated">요소 크기의 숫자 값을 반환합니다. &lt;code&gt;Int8Array&lt;/code&gt; 의 경우 &lt;code&gt;1&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="5bec7af5fcac7312ff46ba81d861afb78e1d6de8" translate="yes" xml:space="preserve">
          <source>Returns a number value of the element size. &lt;code&gt;1&lt;/code&gt; in the case of an &lt;code&gt;Uint8Array&lt;/code&gt;.</source>
          <target state="translated">요소 크기의 숫자 값을 반환합니다. &lt;code&gt;Uint8Array&lt;/code&gt; 의 경우 &lt;code&gt;1&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="4c3f663264fe5d3fcd64779f499ba5096c51a6f3" translate="yes" xml:space="preserve">
          <source>Returns a number value of the element size. &lt;code&gt;1&lt;/code&gt; in the case of an &lt;code&gt;Uint8ClampedArray&lt;/code&gt;.</source>
          <target state="translated">요소 크기의 숫자 값을 반환합니다. &lt;code&gt;Uint8ClampedArray&lt;/code&gt; 의 경우 &lt;code&gt;1&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="8f0bb86e96d3af2f2728cc2accebbaf0161efc0a" translate="yes" xml:space="preserve">
          <source>Returns a number value of the element size. &lt;code&gt;2&lt;/code&gt; in the case of an &lt;code&gt;Int16Array&lt;/code&gt;.</source>
          <target state="translated">요소 크기의 숫자 값을 반환합니다. &lt;code&gt;Int16Array&lt;/code&gt; 의 경우 &lt;code&gt;2&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="9282252b3664092a3403dd5b7b84b10377d9643e" translate="yes" xml:space="preserve">
          <source>Returns a number value of the element size. &lt;code&gt;2&lt;/code&gt; in the case of an &lt;code&gt;Uint16Array&lt;/code&gt;.</source>
          <target state="translated">요소 크기의 숫자 값을 반환합니다. &lt;code&gt;Uint16Array&lt;/code&gt; 의 경우 &lt;code&gt;2&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="1385044da8b4950e95daace416c6a1a739b05371" translate="yes" xml:space="preserve">
          <source>Returns a number value of the element size. &lt;code&gt;4&lt;/code&gt; in the case of an &lt;code&gt;Float32Array&lt;/code&gt;.</source>
          <target state="translated">요소 크기의 숫자 값을 반환합니다. &lt;code&gt;Float32Array&lt;/code&gt; 의 경우 &lt;code&gt;4&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="5bdf9e4d78a333321162582d1ed3f0a7a953d2b6" translate="yes" xml:space="preserve">
          <source>Returns a number value of the element size. &lt;code&gt;4&lt;/code&gt; in the case of an &lt;code&gt;Int32Array&lt;/code&gt;.</source>
          <target state="translated">요소 크기의 숫자 값을 반환합니다. &lt;code&gt;Int32Array&lt;/code&gt; 의 경우 &lt;code&gt;4&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="0b1c84b73f7e86622949cb4baeae47cc1588e1d6" translate="yes" xml:space="preserve">
          <source>Returns a number value of the element size. &lt;code&gt;4&lt;/code&gt; in the case of an &lt;code&gt;Uint32Array&lt;/code&gt;.</source>
          <target state="translated">요소 크기의 숫자 값을 반환합니다. &lt;code&gt;Uint32Array&lt;/code&gt; 의 경우 &lt;code&gt;4&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="775266040e61d021e8b50dbb6e71c838c4fd916c" translate="yes" xml:space="preserve">
          <source>Returns a number value of the element size. &lt;code&gt;8&lt;/code&gt; in the case of an &lt;code&gt;Float64Array&lt;/code&gt;.</source>
          <target state="translated">요소 크기의 숫자 값을 반환합니다. &lt;code&gt;8&lt;/code&gt; 의 경우 &lt;code&gt;Float64Array&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="99fc825a2e4016c991d24f8ec2365b3af1bda51a" translate="yes" xml:space="preserve">
          <source>Returns a promise that either fulfills when all of the promises in the iterable argument have fulfilled or rejects as soon as one of the promises in the iterable argument rejects. If the returned promise fulfills, it is fulfilled with an array of the values from the fulfilled promises in the same order as defined in the iterable. If the returned promise rejects, it is rejected with the reason from the first promise in the iterable that rejected. This method can be useful for aggregating results of multiple promises.</source>
          <target state="translated">반복 가능한 인수의 약속 중 하나가 거부 되 자마자 반복 가능한 인수의 모든 약속이 이행되거나 거부되면 이행되는 약속을 리턴합니다. 반환 된 약속이 이행되면, 이행 된 약속으로부터의 값의 배열로 iterable에 정의 된 순서대로 이행됩니다. 반환 된 약속이 거부되면, iterable의 첫 번째 약속이 거부 된 이유 때문에 거부됩니다. 이 방법은 여러 약속의 결과를 집계하는 데 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="28d664387179f34decf10209c049e86bcd0f808d" translate="yes" xml:space="preserve">
          <source>Returns a promise that fulfills or rejects as soon as one of the promises in the iterable fulfills or rejects, with the value or reason from that promise.</source>
          <target state="translated">iterable의 약속 중 하나가 약속의 가치 또는 이유와 함께 이행 또는 거부되는 즉시 이행하거나 거부하는 약속을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4062fe912f61e82012fa32e44bd261a05b86c81d" translate="yes" xml:space="preserve">
          <source>Returns a property descriptor for a named property on an object.</source>
          <target state="translated">객체의 명명 된 속성에 대한 속성 설명자를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f76867af8c5be36b27e366ea317ca55936a1484f" translate="yes" xml:space="preserve">
          <source>Returns a pseudo-random number between 0 and 1.</source>
          <target state="translated">0과 1 사이의 의사 난수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b8648083a4202e69b92ad4d334f561eae5b8f12c" translate="yes" xml:space="preserve">
          <source>Returns a reference to the passed object.</source>
          <target state="translated">전달 된 객체에 대한 참조를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7243e168781f8c7019537ef48db029a6174d4c9b" translate="yes" xml:space="preserve">
          <source>Returns a string consisting of the elements of the object repeated the given times.</source>
          <target state="translated">주어진 횟수만큼 반복 된 객체의 요소로 구성된 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="71b812a9301138a1e4b2dee67b29f489fe55c8f0" translate="yes" xml:space="preserve">
          <source>Returns a string containing the description of the Symbol. Overrides the &lt;a href=&quot;../object/tostring&quot;&gt;&lt;code&gt;Object.prototype.toString()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Symbol에 대한 설명이 포함 된 문자열을 반환합니다. &lt;a href=&quot;../object/tostring&quot;&gt; &lt;code&gt;Object.prototype.toString()&lt;/code&gt; &lt;/a&gt; 메서드를 재정의합니다 .</target>
        </trans-unit>
        <trans-unit id="1b07f3930bf9f8fae25c6366d1fffe1bde7ab410" translate="yes" xml:space="preserve">
          <source>Returns a string containing the description of the Symbol. Overrides the &lt;a href=&quot;object/tostring&quot;&gt;&lt;code&gt;Object.prototype.toString()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Symbol에 대한 설명이 포함 된 문자열을 반환합니다. &lt;a href=&quot;object/tostring&quot;&gt; &lt;code&gt;Object.prototype.toString()&lt;/code&gt; &lt;/a&gt; 메서드를 재정의합니다 .</target>
        </trans-unit>
        <trans-unit id="e164a12312c3f4730805e02ecfd96ccc55e60b1c" translate="yes" xml:space="preserve">
          <source>Returns a string containing the source of the &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; object; you can use this string to create an equivalent object. Overrides the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toSource&quot;&gt;&lt;code&gt;Object.prototype.toSource()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; 객체 의 소스를 포함하는 문자열을 반환 합니다. 이 문자열을 사용하여 동등한 객체를 만들 수 있습니다. &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toSource&quot;&gt; &lt;code&gt;Object.prototype.toSource()&lt;/code&gt; &lt;/a&gt; 메서드를 재정의합니다 .</target>
        </trans-unit>
        <trans-unit id="54bc22d51e21c8464c8b5e0b68b4e19ecdb5177a" translate="yes" xml:space="preserve">
          <source>Returns a string containing the source of the &lt;a href=&quot;../symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; object. Overrides the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toSource&quot;&gt;&lt;code&gt;Object.prototype.toSource()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;../symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt; 객체 의 소스가 포함 된 문자열을 반환 합니다. &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toSource&quot;&gt; &lt;code&gt;Object.prototype.toSource()&lt;/code&gt; &lt;/a&gt; 메서드를 재정의합니다 .</target>
        </trans-unit>
        <trans-unit id="4b0ed16f82b8d1be5d979f72a41c49dbc547ca8c" translate="yes" xml:space="preserve">
          <source>Returns a string containing the source of the &lt;a href=&quot;boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; object; you can use this string to create an equivalent object. Overrides the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toSource&quot;&gt;&lt;code&gt;Object.prototype.toSource()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; 객체 의 소스를 포함하는 문자열을 반환 합니다. 이 문자열을 사용하여 동등한 객체를 만들 수 있습니다. &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toSource&quot;&gt; &lt;code&gt;Object.prototype.toSource()&lt;/code&gt; &lt;/a&gt; 메서드를 재정의합니다 .</target>
        </trans-unit>
        <trans-unit id="2c18c910cac7d84a353e10b8be9860cb5967425f" translate="yes" xml:space="preserve">
          <source>Returns a string containing the source of the &lt;a href=&quot;symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; object. Overrides the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toSource&quot;&gt;&lt;code&gt;Object.prototype.toSource()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt; 객체 의 소스가 포함 된 문자열을 반환 합니다. &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toSource&quot;&gt; &lt;code&gt;Object.prototype.toSource()&lt;/code&gt; &lt;/a&gt; 메서드를 재정의합니다 .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
