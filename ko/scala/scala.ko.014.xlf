<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="scala">
    <body>
      <group id="scala">
        <trans-unit id="5f84f44a10dc6a0ba793484ce342965a8bc56cd7" translate="yes" xml:space="preserve">
          <source>Object scala.math.Equiv.Implicits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0eeb8eebaeebc3c9dc0662fc0f3a6d4d17a212c" translate="yes" xml:space="preserve">
          <source>Object scala.math.Equiv.Int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abec8928b0b0014a313e35249c2e553544aad162" translate="yes" xml:space="preserve">
          <source>Object scala.math.Equiv.Long</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a12bd04d028c14a87bd8405dea78a97dc96d9b02" translate="yes" xml:space="preserve">
          <source>Object scala.math.Equiv.Short</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d2ad20997332b388e830b50a86f4965761c2f01" translate="yes" xml:space="preserve">
          <source>Object scala.math.Equiv.String</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91e61f8b16eed749a6a9c1b4ece9dfe27f3fb2a9" translate="yes" xml:space="preserve">
          <source>Object scala.math.Equiv.Symbol</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1207043637e4017ea32ce3a9655a99b56ef39b42" translate="yes" xml:space="preserve">
          <source>Object scala.math.Equiv.Unit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1fa186964cd0a5a1276acc4ed8669a5f4e69be1" translate="yes" xml:space="preserve">
          <source>Object scala.math.Fractional</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5a5c98dbac4cf8fb1423744f940e8c13da5602b" translate="yes" xml:space="preserve">
          <source>Object scala.math.Fractional.Implicits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5960c7c6545baeda91ab171f27deb489bc483c8f" translate="yes" xml:space="preserve">
          <source>Object scala.math.Integral</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6a901ee362a3b9857f03df7271e3fbcf21127d4" translate="yes" xml:space="preserve">
          <source>Object scala.math.Integral.Implicits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="046037a8665579e4db58d164759d7e51f516afa6" translate="yes" xml:space="preserve">
          <source>Object scala.math.Numeric</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d031be5f06e008b6eb3093aaab80a15117b9361d" translate="yes" xml:space="preserve">
          <source>Object scala.math.Numeric.BigDecimalAsIfIntegral</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6fe3da06a35f415d1991bcc79c0e064a65c5cf2" translate="yes" xml:space="preserve">
          <source>Object scala.math.Numeric.BigDecimalIsFractional</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54ac38881aef1b3ea468e2f3b191d0c24da5b287" translate="yes" xml:space="preserve">
          <source>Object scala.math.Numeric.BigIntIsIntegral</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="920af8910cf30b076de08ef18d8fd613e36b9c51" translate="yes" xml:space="preserve">
          <source>Object scala.math.Numeric.ByteIsIntegral</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f4a9ced6986d3f4978ed16180abcbdf0d0b6cee" translate="yes" xml:space="preserve">
          <source>Object scala.math.Numeric.CharIsIntegral</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d0e9b2322fa31f5a95608973a572c2527031969" translate="yes" xml:space="preserve">
          <source>Object scala.math.Numeric.DoubleIsFractional</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5d355b6494e0ad0a88674be7793556fbaa922f0" translate="yes" xml:space="preserve">
          <source>Object scala.math.Numeric.FloatIsFractional</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b480d3b8b2bb69d71e4d2cd9b5f0fb5b5e48ff67" translate="yes" xml:space="preserve">
          <source>Object scala.math.Numeric.Implicits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fcf6a6778d4ec2cd3dcad1885b0e83ebe0a14ea" translate="yes" xml:space="preserve">
          <source>Object scala.math.Numeric.IntIsIntegral</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a68922d4fbe31e4b423458bf465582dc23dda91" translate="yes" xml:space="preserve">
          <source>Object scala.math.Numeric.LongIsIntegral</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3f53263fcddd1280171adc3afcd083e16d00b39" translate="yes" xml:space="preserve">
          <source>Object scala.math.Numeric.ShortIsIntegral</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0c31e2cd332c10508e0f0340770f396339ecc52" translate="yes" xml:space="preserve">
          <source>Object scala.math.Ordered</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2435fd19187f5fa50b995ffc78e87d874705afa" translate="yes" xml:space="preserve">
          <source>Object scala.math.Ordering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9de0549560442749ea944a6e79a98f2d64fea6b2" translate="yes" xml:space="preserve">
          <source>Object scala.math.Ordering.BigDecimal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8642336d3729999e35a5bfb2003d2374c3b12063" translate="yes" xml:space="preserve">
          <source>Object scala.math.Ordering.BigInt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9aae114c88c68eaf14635490ec0fbc570e88386" translate="yes" xml:space="preserve">
          <source>Object scala.math.Ordering.Boolean</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="025d441c52b7383c41b51916da483e0d3746a186" translate="yes" xml:space="preserve">
          <source>Object scala.math.Ordering.Byte</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="548f63dcf1d4903e2b7560f2f3af53b1aed84754" translate="yes" xml:space="preserve">
          <source>Object scala.math.Ordering.Char</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef8aef2d473925f356a8bf3601bae7bceefd9b7a" translate="yes" xml:space="preserve">
          <source>Object scala.math.Ordering.DeprecatedDoubleOrdering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="618fd8aa5ccf043ed861964a1a60e86c77dd8f58" translate="yes" xml:space="preserve">
          <source>Object scala.math.Ordering.DeprecatedFloatOrdering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e2208d23576e0009a0591ca65253d47ff4a763c" translate="yes" xml:space="preserve">
          <source>Object scala.math.Ordering.Double</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="792927cb170c6dd971ff2cc726f4808d7c81a7f5" translate="yes" xml:space="preserve">
          <source>Object scala.math.Ordering.Double.IeeeOrdering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba3180ab70cf3ce1cb31fe0ead3f9ffb659f030e" translate="yes" xml:space="preserve">
          <source>Object scala.math.Ordering.Double.TotalOrdering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38c01a54e73000b6ebb101479cdeb17cd68abb5d" translate="yes" xml:space="preserve">
          <source>Object scala.math.Ordering.Float</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06b1756c17b262343bf3eaefbcd7f6333fe1be3f" translate="yes" xml:space="preserve">
          <source>Object scala.math.Ordering.Float.IeeeOrdering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c0ada26ce372b69ff620a5d7154b00eb7b96e11" translate="yes" xml:space="preserve">
          <source>Object scala.math.Ordering.Float.TotalOrdering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9df5ebad14f0b7985b7f8b33a3d4d7287a258228" translate="yes" xml:space="preserve">
          <source>Object scala.math.Ordering.Implicits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6528e87f839abcca7c77b647c462b8099f356e37" translate="yes" xml:space="preserve">
          <source>Object scala.math.Ordering.Int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84ae7c1b4df875ff2c1fd56e324bb06a7c767636" translate="yes" xml:space="preserve">
          <source>Object scala.math.Ordering.Long</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="988f7e43fe5b3befa3039018da2aa111217ce326" translate="yes" xml:space="preserve">
          <source>Object scala.math.Ordering.Short</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="840d50162e515b7ccbbb10ea6db90960fabd205e" translate="yes" xml:space="preserve">
          <source>Object scala.math.Ordering.String</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0af5b0f51f03fa6b5b2ee64cbd4f2ced76cc8df" translate="yes" xml:space="preserve">
          <source>Object scala.math.Ordering.Symbol</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0f1830282cde79ea3f25e8a8618cbdb0061b82b" translate="yes" xml:space="preserve">
          <source>Object scala.math.Ordering.Unit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0af485608b0c181d74f13a6eb2c98087dca7a430" translate="yes" xml:space="preserve">
          <source>Object scala.math.PartialOrdering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="264f7e85ab1eee18de9f93c4b9e772fc3276293c" translate="yes" xml:space="preserve">
          <source>Object scala.ref.SoftReference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7e7c5adf67e568a2f8e6af168f0a1781e345465" translate="yes" xml:space="preserve">
          <source>Object scala.ref.WeakReference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccdf175ce188c2a86666a53ef439f17eb14a48ab" translate="yes" xml:space="preserve">
          <source>Object scala.reflect.ClassManifestFactory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a73dce8a16d1be41cc7c15f2853df43f0486f52" translate="yes" xml:space="preserve">
          <source>Object scala.reflect.ClassTag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a067e2692692470b79228dbd4c0a8f050b8603d" translate="yes" xml:space="preserve">
          <source>Object scala.reflect.Manifest</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6201c1853548cdfea5aee0193878f28c0ae5056f" translate="yes" xml:space="preserve">
          <source>Object scala.reflect.ManifestFactory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="101ba62ebbbc0e243da4d4b35f8ca16710940a07" translate="yes" xml:space="preserve">
          <source>Object scala.reflect.NameTransformer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aab5a5a4d63529206e7dd363460078f8c456b908" translate="yes" xml:space="preserve">
          <source>Object scala.reflect.NoManifest</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd789d849f002b9904ffa3946122bd8f40c67c32" translate="yes" xml:space="preserve">
          <source>Object scala.sys.BooleanProp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf622411a333c385e34b12cfc46104eab1b1ce12" translate="yes" xml:space="preserve">
          <source>Object scala.sys.Prop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef46461d57ae97cd922727e8aa34e9d5b57e830f" translate="yes" xml:space="preserve">
          <source>Object scala.sys.Prop.DoubleProp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ca261663f193d99676ace2a6251dab03157e4b4" translate="yes" xml:space="preserve">
          <source>Object scala.sys.Prop.FileProp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccfd368f8a3fefaebe0237812eecaf845d94bca3" translate="yes" xml:space="preserve">
          <source>Object scala.sys.Prop.IntProp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1f9f18b73e7b1b464dfda5f6e54a40a231b21fc" translate="yes" xml:space="preserve">
          <source>Object scala.sys.Prop.StringProp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f6f91b1b4e69c3af005f42ec3ac53cc05457a3b" translate="yes" xml:space="preserve">
          <source>Object scala.sys.ShutdownHookThread</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="203023ccb45ff1bc8dd7bba0a92a7475c27e8c42" translate="yes" xml:space="preserve">
          <source>Object scala.sys.SystemProperties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b69c9434ce60bc10028b5c0085c275a648dff93a" translate="yes" xml:space="preserve">
          <source>Object scala.sys.process.BasicIO</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93b2c775334b871a9052a24d615e29bc8134f674" translate="yes" xml:space="preserve">
          <source>Object scala.sys.process.Process</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb155f5e7970241090f28fee590a425101288c75" translate="yes" xml:space="preserve">
          <source>Object scala.sys.process.ProcessBuilder</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9adcf2d921590105ae2fd0bb933ef58f3059c8ac" translate="yes" xml:space="preserve">
          <source>Object scala.sys.process.ProcessLogger</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30be2f8ec9f8ac223e844a68946a7dd285efd293" translate="yes" xml:space="preserve">
          <source>Object scala.util.Either</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a69202350e31c4f284dc0cf3c5adfa9bb2aa8358" translate="yes" xml:space="preserve">
          <source>Object scala.util.Properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d642bd79e55fe72d56f85786a849d7cedc4470e8" translate="yes" xml:space="preserve">
          <source>Object scala.util.Random</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aade252477e3fe070d8fe1cd505a3f70cadf41b6" translate="yes" xml:space="preserve">
          <source>Object scala.util.Sorting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea60f09f91e648547295117f63cfcbe248248491" translate="yes" xml:space="preserve">
          <source>Object scala.util.Try</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34e9c7194f0d86577cca5943cf2ef9f4a0f8d261" translate="yes" xml:space="preserve">
          <source>Object scala.util.Using</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c65b98b4b4b1a154c5dd214b878b6487b73f1aa" translate="yes" xml:space="preserve">
          <source>Object scala.util.Using.Manager</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efd9d0550e04f33cb266d3d55c59f19e3535d858" translate="yes" xml:space="preserve">
          <source>Object scala.util.Using.Releasable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="258c60402fe519d94adda76f5f6f8af7e1d24ee6" translate="yes" xml:space="preserve">
          <source>Object scala.util.Using.Releasable.AutoCloseableIsReleasable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcb2d792574af09d76e7b4ac2c447c2d7218a1b1" translate="yes" xml:space="preserve">
          <source>Object scala.util.chaining</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="277a8a8ac3b2fdaca50419f4f8df6e2394f7094f" translate="yes" xml:space="preserve">
          <source>Object scala.util.control.Breaks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15ee8e9a54baa32af4ba9656b4b024d901693639" translate="yes" xml:space="preserve">
          <source>Object scala.util.control.Exception</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5bfc93a6171e2ea896f5358e1e8e78988dc57e2" translate="yes" xml:space="preserve">
          <source>Object scala.util.control.NoStackTrace</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="262b76a67515272b1ae899f23e5b761010946198" translate="yes" xml:space="preserve">
          <source>Object scala.util.control.NonFatal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf201e6791ff5533b54d3a054d9b2b70d5a5969b" translate="yes" xml:space="preserve">
          <source>Object scala.util.control.TailCalls</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="113ff9807b2a8e3f11587e0814c0017f3b16892c" translate="yes" xml:space="preserve">
          <source>Object scala.util.hashing.ByteswapHashing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c333c4bce7febfc9dc9f15047b7967e22298c57e" translate="yes" xml:space="preserve">
          <source>Object scala.util.hashing.Hashing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdf14391d6f0f5ea4d659c518248172be15903b1" translate="yes" xml:space="preserve">
          <source>Object scala.util.hashing.MurmurHash3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="691a4ca4e8076aafffbff98551b4f758ed24bca3" translate="yes" xml:space="preserve">
          <source>Object scala.util.matching.Regex</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0e170185c6452bc21496e4fa66795d23cb10f16" translate="yes" xml:space="preserve">
          <source>Object scala.util.matching.Regex.Groups</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0fc9431071a2d98a6ab20251a649141c7eecdf0" translate="yes" xml:space="preserve">
          <source>Object scala.util.matching.Regex.Match</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f1ddd77d41e877cc3c0782255d26fb70185dfcc" translate="yes" xml:space="preserve">
          <source>Obtain the length of this Duration measured in the unit obtained by the &lt;code&gt;unit&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ee471fefe27705244a8c315efb7bc3a05a1b370" translate="yes" xml:space="preserve">
          <source>Obtain the time unit in which the length of this duration is measured.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4069d5cddb3c3d5cd7bece59f50f06171bcfe078" translate="yes" xml:space="preserve">
          <source>Often we use &lt;code&gt;Stream&lt;/code&gt;s to represent an infinite set or series. If that's the case for your particular &lt;code&gt;Stream&lt;/code&gt; then this function will never return and will probably crash the VM with an &lt;code&gt;OutOfMemory&lt;/code&gt; exception. This function will not hang on a finite cycle, however.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2edd12766a573f6a27387a9ff71cf4e7b94a48c2" translate="yes" xml:space="preserve">
          <source>On the JVM, a class with this annotation will receive a &lt;code&gt;private&lt;/code&gt;, &lt;code&gt;static&lt;/code&gt;, and &lt;code&gt;final&lt;/code&gt; field called &lt;code&gt;serialVersionUID&lt;/code&gt; with the provided &lt;span name=&quot;value&quot;&gt;value&lt;/span&gt;, which the JVM's serialization mechanism uses to determine serialization compatibility between different versions of a class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ed6ad2d9b4b6fa07ac64dfe3dbc30608ca4684e" translate="yes" xml:space="preserve">
          <source>OnCompleteRunnable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7af5f9ba18d5a1620ca6650fccecca067967892e" translate="yes" xml:space="preserve">
          <source>Once the desired &lt;code&gt;ProcessBuilder&lt;/code&gt; is available, it can be executed in different ways, depending on how one desires to control its I/O, and what kind of result one wishes for:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="552f8115e0b853cf07c7f46e588ecfd55bb9d87b" translate="yes" xml:space="preserve">
          <source>One creates a &lt;code&gt;ProcessBuilder&lt;/code&gt; either through factories on the &lt;a href=&quot;process&quot; id=&quot;scala.sys.process.Process&quot; name=&quot;scala.sys.process.Process&quot;&gt;scala.sys.process.Process&lt;/a&gt;'s companion object, or through implicit conversions available in this package object itself. Implicitly, each process is created either out of a &lt;code&gt;String&lt;/code&gt;, with arguments separated by spaces -- no escaping of spaces is possible -- or out of a &lt;a href=&quot;../../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;scala.collection.Seq&lt;/a&gt;, where the first element represents the command name, and the remaining elements are arguments to it. In this latter case, arguments may contain spaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="331f049a24a0803aa81d6417e2152a8c45bf2356" translate="yes" xml:space="preserve">
          <source>One creates a &lt;code&gt;ProcessBuilder&lt;/code&gt; either through factories on the &lt;a href=&quot;process/process&quot; id=&quot;scala.sys.process.Process&quot; name=&quot;scala.sys.process.Process&quot;&gt;scala.sys.process.Process&lt;/a&gt;'s companion object, or through implicit conversions available in this package object itself. Implicitly, each process is created either out of a &lt;code&gt;String&lt;/code&gt;, with arguments separated by spaces -- no escaping of spaces is possible -- or out of a &lt;a href=&quot;../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;scala.collection.Seq&lt;/a&gt;, where the first element represents the command name, and the remaining elements are arguments to it. In this latter case, arguments may contain spaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97c3cf30b52f1bd8fb4ffa6736367eaedf3d779b" translate="yes" xml:space="preserve">
          <source>One creates a &lt;code&gt;ProcessBuilder&lt;/code&gt; through factories provided in &lt;a href=&quot;process&quot; id=&quot;scala.sys.process.Process&quot; name=&quot;scala.sys.process.Process&quot;&gt;scala.sys.process.Process&lt;/a&gt;'s companion object, or implicit conversions based on these factories made available in the package object &lt;a href=&quot;index&quot; id=&quot;scala.sys.process&quot; name=&quot;scala.sys.process&quot;&gt;scala.sys.process&lt;/a&gt;. Here are some examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dba9483d6ee3db0cca3da57ff9af8ced496b46da" translate="yes" xml:space="preserve">
          <source>One must be cautious of memoization; you can very quickly eat up large amounts of memory if you're not careful. The reason for this is that the memoization of the &lt;code&gt;LazyList&lt;/code&gt; creates a structure much like &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;scala.collection.immutable.List&lt;/a&gt;. So long as something is holding on to the head, the head holds on to the tail, and so it continues recursively. If, on the other hand, there is nothing holding on to the head (e.g. we used &lt;code&gt;def&lt;/code&gt; to define the &lt;code&gt;LazyList&lt;/code&gt;) then once it is no longer being used directly, it disappears.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a92c7643b91641707de08b50cd6962071a71e9b" translate="yes" xml:space="preserve">
          <source>One must provide &lt;code&gt;IsIterable&lt;/code&gt; as an implicit parameter type of an implicit conversion. Its usage is shown below. Our objective in the following example is to provide a generic extension method &lt;code&gt;mapReduce&lt;/code&gt; to any type that extends or can be converted to &lt;code&gt;Iterable&lt;/code&gt;. In our example, this includes &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d7758465c023bab0729776025c8f3f304bc0e68" translate="yes" xml:space="preserve">
          <source>One must simply provide an implicit value of type &lt;code&gt;IsIterable&lt;/code&gt; specific to the new type, or an implicit conversion which returns an instance of &lt;code&gt;IsIterable&lt;/code&gt; specific to the new type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74a5472c384ec42ee311c58318508d422ec8f7fa" translate="yes" xml:space="preserve">
          <source>One of the branches of an &lt;a href=&quot;optmanifest&quot; id=&quot;scala.reflect.OptManifest&quot; name=&quot;scala.reflect.OptManifest&quot;&gt;scala.reflect.OptManifest&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b67521a4c52eefb015031a212b48bc01a3e087cf" translate="yes" xml:space="preserve">
          <source>Only entries with keys between this projection's key range will ever appear as elements of this map, independently of whether the entries are added through the original map or through this view. That means that if one inserts a key-value in a view whose key is outside the view's bounds, calls to &lt;code&gt;get&lt;/code&gt; or &lt;code&gt;contains&lt;/code&gt; will _not_ consider the newly added entry. Mutations are always reflected in the original map, though.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4a2d9e6348e80ffe02922d677abd983ffdf9cb9" translate="yes" xml:space="preserve">
          <source>Only the &lt;code&gt;dequeue&lt;/code&gt; and &lt;code&gt;dequeueAll&lt;/code&gt; methods will return elements in priority order (while removing elements from the heap). Standard collection methods including &lt;code&gt;drop&lt;/code&gt;, &lt;code&gt;iterator&lt;/code&gt;, and &lt;code&gt;toString&lt;/code&gt; will remove or traverse the heap in whichever order seems most convenient.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf357700bba08e97d3089e350c5b622fe64bf72a" translate="yes" xml:space="preserve">
          <source>Only where this feature is enabled, are macro definitions allowed. If &lt;code&gt;macros&lt;/code&gt; is not enabled, macro definitions are rejected by the compiler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d472ca4e8a1b227c4c1b1dc9dfbd793fdf09822f" translate="yes" xml:space="preserve">
          <source>Only where this feature is enabled, can direct or indirect subclasses of trait scala.Dynamic be defined. If &lt;code&gt;dynamics&lt;/code&gt; is not enabled, a definition of a class, trait, or object that has &lt;code&gt;Dynamic&lt;/code&gt; as a base trait is rejected by the compiler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43fe3fc6279c034880662b80cf2209f2f3c857a5" translate="yes" xml:space="preserve">
          <source>Only where this feature is enabled, is postfix operator notation &lt;code&gt;(expr op)&lt;/code&gt; permitted. If &lt;code&gt;postfixOps&lt;/code&gt; is not enabled, an expression using postfix notation is rejected by the compiler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07ef13ee076c6472520400d5c3c1f21198a80a9e" translate="yes" xml:space="preserve">
          <source>OpenHashMap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51a720aa342a2502c72e15cffaec04cb72054721" translate="yes" xml:space="preserve">
          <source>OpenHashMap$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c05a06f99fbf6e27102101b5670aca5622b4c53" translate="yes" xml:space="preserve">
          <source>OpenHashMap$.empty()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e3da02bf7eae79149744cb11c15225b227fe4a5" translate="yes" xml:space="preserve">
          <source>OpenHashMap$.from()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88de91f114121385ad425d9f5260b7ecdd9ea59c" translate="yes" xml:space="preserve">
          <source>OpenHashMap$.newBuilder()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0be30a9b5c3c7396ca1fc1989ab0d536e40db9b4" translate="yes" xml:space="preserve">
          <source>OpenHashMap.OpenHashMap()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="139073bf5afa696551b06555bd1fd57f636088e0" translate="yes" xml:space="preserve">
          <source>OpenHashMap.addOne()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6611f30ad5c0bc2bf454b8aef7349d890286f0c0" translate="yes" xml:space="preserve">
          <source>OpenHashMap.clone()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8c03257685f2aa39e7cc81ba03a0270fd24bb3c" translate="yes" xml:space="preserve">
          <source>OpenHashMap.filterInPlace()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c60d9b44264e869b0d80588a38755a9b0635583a" translate="yes" xml:space="preserve">
          <source>OpenHashMap.foreach()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f1cbc8960fcf4e7ac64696ab4c1f2c411ddd6f4" translate="yes" xml:space="preserve">
          <source>OpenHashMap.foreachEntry()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fcf34ed7cf9e8cc42993a61279ea224b0a88ee8" translate="yes" xml:space="preserve">
          <source>OpenHashMap.get()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d52d880bab2164232cad42735579c7000515ba3" translate="yes" xml:space="preserve">
          <source>OpenHashMap.hashOf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b28f08a261fbb911ee709407a27f089c67e7dddc" translate="yes" xml:space="preserve">
          <source>OpenHashMap.isEmpty()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2faba1ab502e69899fa1eca9b005592b5b48983f" translate="yes" xml:space="preserve">
          <source>OpenHashMap.iterator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ed8775054b4ec2c7f691c60a70765a3069adffd" translate="yes" xml:space="preserve">
          <source>OpenHashMap.keysIterator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4310ef3686b1801db4343eca2835aafcd35a3837" translate="yes" xml:space="preserve">
          <source>OpenHashMap.knownSize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5a4eba62b2d0a2c1c14bd75c830a835c5049f1d" translate="yes" xml:space="preserve">
          <source>OpenHashMap.mapFactory()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63ce1e7f0f7c17e4cd063f06eaad116feb3d105c" translate="yes" xml:space="preserve">
          <source>OpenHashMap.mapValuesInPlace()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4920e2b89b465a7d4229dd8decfb139a225c68a0" translate="yes" xml:space="preserve">
          <source>OpenHashMap.put()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dcd9ea4f6b187423d2cf607eba31e82c36913e9" translate="yes" xml:space="preserve">
          <source>OpenHashMap.remove()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="605774abc0f45c052210c4f0b412e27863bb6d61" translate="yes" xml:space="preserve">
          <source>OpenHashMap.scala</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19802ab9d63090320310d607bd153bfa929b2d43" translate="yes" xml:space="preserve">
          <source>OpenHashMap.size()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0529b7e4fff0f49c1c24b5671e7bffb4bf24386" translate="yes" xml:space="preserve">
          <source>OpenHashMap.stringPrefix()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3865e583ca031ad25115159b7209c3ff929aae44" translate="yes" xml:space="preserve">
          <source>OpenHashMap.subtractOne()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cffc0ff6769f4341576e04a94dddf8cba326d8d4" translate="yes" xml:space="preserve">
          <source>OpenHashMap.update()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53194a0db2bbace06948ed83d612af72c06794c5" translate="yes" xml:space="preserve">
          <source>OpenHashMap.valuesIterator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92218d63b4639fe948e3e02122200e44e778831b" translate="yes" xml:space="preserve">
          <source>Operations for comparing the size of a collection to a test value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6ef4931c4f41a0d4825e97e10c02d57941deb79" translate="yes" xml:space="preserve">
          <source>Operations often require a duration to be specified. A duration DSL is available to make defining these easier:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="907a54c2b2789a374b932158030164d755fffc45" translate="yes" xml:space="preserve">
          <source>Ops</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="763c4942f7c8789a32e95ea5d1be965f19d08099" translate="yes" xml:space="preserve">
          <source>OptManifest</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfe1f198397a0574ebd3f839114d366aafccf250" translate="yes" xml:space="preserve">
          <source>OptManifest.scala</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93d029a5d5d6a885ccadc07135eae4469bb0e6eb" translate="yes" xml:space="preserve">
          <source>Optimistically these two possible defaults will be the same thing. In practice this is not necessarily true, and in fact Sun classifies the fact that you can influence anything at all via -Dfile.encoding as an accident, with any anomalies considered &quot;not a bug&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e31d972229de381b461860014dd710856361917a" translate="yes" xml:space="preserve">
          <source>Option</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="379edbc745277f186faa2958d5b0e0cc6451bd17" translate="yes" xml:space="preserve">
          <source>Option$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="742d51aea3940e821d7b596eedd52daceed887e3" translate="yes" xml:space="preserve">
          <source>Option$.apply()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00a56825fcb9e1179f59447f39ec1a1df3759719" translate="yes" xml:space="preserve">
          <source>Option$.empty()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37228cbfe205e4d3b80919694dc0449a4133fde2" translate="yes" xml:space="preserve">
          <source>Option$.option2Iterable()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78438f78aff655ffc9a1c5fb1734cd13d8533d8f" translate="yes" xml:space="preserve">
          <source>Option$.unless()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1cb573d020f0f9a10a7058c6acdbfeacd162ad6" translate="yes" xml:space="preserve">
          <source>Option$.when()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aee396a58353ae46341f8366f4fd9be72b0dddd4" translate="yes" xml:space="preserve">
          <source>Option.@deprecated()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8b002d90498f1ca796af7d8304ee059a9a48d0b" translate="yes" xml:space="preserve">
          <source>Option.@inline()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1b8f434c845a4426e21a2c9a2c533e5ad8a5d87" translate="yes" xml:space="preserve">
          <source>Option.WithFilter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="896d4e2ffeaeaef38b71ad4774513010cdda297d" translate="yes" xml:space="preserve">
          <source>Option.WithFilter()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56bfc20f951eb55a816ee25dfe93980059dba356" translate="yes" xml:space="preserve">
          <source>Option.WithFilter.WithFilter()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97205d513921bbad3d9ddfcc13f60eff998c3308" translate="yes" xml:space="preserve">
          <source>Option.WithFilter.flatMap()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eaa4ef67d28e9ad6ed7fa9182acbf040ac782fb" translate="yes" xml:space="preserve">
          <source>Option.WithFilter.foreach()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a764a0033b6bd7b086db8c8f8b18a8dddb77f0f" translate="yes" xml:space="preserve">
          <source>Option.WithFilter.map()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="414a38ea87b63d5e48aeb0611c716e1cad172774" translate="yes" xml:space="preserve">
          <source>Option.WithFilter.withFilter()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffac2dd01e956f28084a520c2517ec00aa496b74" translate="yes" xml:space="preserve">
          <source>Option.collect()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec2776c72e10e6c1c44e6c850b10597136da5045" translate="yes" xml:space="preserve">
          <source>Option.contains()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c24c9239b0d8e7b422b638ab58b486880fadcaea" translate="yes" xml:space="preserve">
          <source>Option.exists()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4b5052d57f8c3cb0285231c09c44b90e5d007ae" translate="yes" xml:space="preserve">
          <source>Option.filter()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59cc8dc89833b055a7e25789da3cebd7de690e57" translate="yes" xml:space="preserve">
          <source>Option.filterNot()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7030d47dc5c52f4c26ea9cb3daf8aeb9e3d39557" translate="yes" xml:space="preserve">
          <source>Option.flatMap()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="622f5c2df8aba57142d4084ab4e72ac9eb186b3d" translate="yes" xml:space="preserve">
          <source>Option.flatten()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e0c8847c84f410e9516af267a6b7e8cc2573da2" translate="yes" xml:space="preserve">
          <source>Option.fold()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7380203c2f59e1663e1a6fa42e7d2ab21a29a4a5" translate="yes" xml:space="preserve">
          <source>Option.forall()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86db1dad7fbb74147303a67a754f4f4b7aaee7c8" translate="yes" xml:space="preserve">
          <source>Option.foreach()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d65d2e1e26349d8c62a1493786e40623267c43ca" translate="yes" xml:space="preserve">
          <source>Option.get()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2036f1c8eefbf8f98cc03813718cbaf933a511fd" translate="yes" xml:space="preserve">
          <source>Option.getOrElse()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1fc7572f026650545c84b5f42d9143ef7480572" translate="yes" xml:space="preserve">
          <source>Option.isDefined()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c70b55459faa9c970f3d2a00d12be261a1a224e" translate="yes" xml:space="preserve">
          <source>Option.isEmpty()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e4d8e6b35f5de7e66e7adadcd087bf8189a5f1e" translate="yes" xml:space="preserve">
          <source>Option.iterator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63b2109b0a9392a870324a7fa9c94ae784b4d121" translate="yes" xml:space="preserve">
          <source>Option.knownSize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="190289781c1a117d58ab070704816e652566a193" translate="yes" xml:space="preserve">
          <source>Option.map()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b32e7f0d008d873dffa41369e8205359d09566bf" translate="yes" xml:space="preserve">
          <source>Option.nonEmpty()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1253ae3c27973bf7099225a2835a1324b7d92e9" translate="yes" xml:space="preserve">
          <source>Option.orElse()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55fee4030b7b17f839bbc06b97e4bbe4f4556321" translate="yes" xml:space="preserve">
          <source>Option.orNull()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79c347dc1d194669ed32696a26704bddb16d2a58" translate="yes" xml:space="preserve">
          <source>Option.scala</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30d7d9e036038db220910e2254e1a31fb6157ab5" translate="yes" xml:space="preserve">
          <source>Option.toLeft()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d753986513cee7554cdedbf2d65a97a6a6113e65" translate="yes" xml:space="preserve">
          <source>Option.toList()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec097b8a656f5b1c7854b48b07155892892db5f7" translate="yes" xml:space="preserve">
          <source>Option.toRight()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2022baadb0ca1cd93e9259b26a7f15d592d8fe35" translate="yes" xml:space="preserve">
          <source>Option.unzip()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e513916939da55b5fc86b6723845c4dc076b612c" translate="yes" xml:space="preserve">
          <source>Option.unzip3()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="138edf093c2f23c1feef3d535ae5274d27faaf41" translate="yes" xml:space="preserve">
          <source>Option.withFilter()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62edd273ee149ec26d5bf96e71c128c2f06e918e" translate="yes" xml:space="preserve">
          <source>Option.zip()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04d57c4626fe6c6c3f0d8b514ae49e2f94ea9872" translate="yes" xml:space="preserve">
          <source>OptionConverters$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4de8fa02eefa2b59e6b61fda3f48f4af153d9d5e" translate="yes" xml:space="preserve">
          <source>OptionConverters$.RichOption</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bad79b010441b0e42913c60a2d74b6fa177840fe" translate="yes" xml:space="preserve">
          <source>OptionConverters$.RichOption()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad696f0bf005f8705b155b48504f2a0045260355" translate="yes" xml:space="preserve">
          <source>OptionConverters$.RichOption.RichOption()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e21518af55cc513aef1f07d38f1c82d6bf0fe065" translate="yes" xml:space="preserve">
          <source>OptionConverters$.RichOption.toJava()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96255b9db20b43f95d7aef3993d1064cd8f197a6" translate="yes" xml:space="preserve">
          <source>OptionConverters$.RichOption.toJavaPrimitive()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99b5dbddd3f152fae9e55e7ea6bf525c3264e6b4" translate="yes" xml:space="preserve">
          <source>OptionConverters$.RichOptional</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d37071167045cb505f1b82cc9220b4c4a9854c30" translate="yes" xml:space="preserve">
          <source>OptionConverters$.RichOptional()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="078c00b20ed463ea89e618df5f39c58246a9945a" translate="yes" xml:space="preserve">
          <source>OptionConverters$.RichOptional.RichOptional()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="979c95a0e1c7a62e1626641aa73b14c740d792ea" translate="yes" xml:space="preserve">
          <source>OptionConverters$.RichOptional.toJavaPrimitive()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1af56f46a05599b9a142c05c0b6f7a051d6e4a80" translate="yes" xml:space="preserve">
          <source>OptionConverters$.RichOptional.toScala()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b37f6ec3a5d414bf3f0529721d2c44f795fd4550" translate="yes" xml:space="preserve">
          <source>OptionConverters$.RichOptionalDouble</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ea0ef2d224ccd30003d56418fa24d0e9d104045" translate="yes" xml:space="preserve">
          <source>OptionConverters$.RichOptionalDouble()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c341d05219e0675d467f69f2e86d3c0c37968a3" translate="yes" xml:space="preserve">
          <source>OptionConverters$.RichOptionalDouble.RichOptionalDouble()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec615ea61f522d559f8726b855b721f43107b2b4" translate="yes" xml:space="preserve">
          <source>OptionConverters$.RichOptionalDouble.toJavaGeneric()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5163d095d66b80f250a1b2aff8bf8894a8505bb" translate="yes" xml:space="preserve">
          <source>OptionConverters$.RichOptionalDouble.toScala()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="580b15916e11ca0d927b055e49cc81674b732ef0" translate="yes" xml:space="preserve">
          <source>OptionConverters$.RichOptionalInt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9afcce5a120e9827de7ebba7c29964d5efcb842c" translate="yes" xml:space="preserve">
          <source>OptionConverters$.RichOptionalInt()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="784d47e25083ab4c033b521f79c701a6eda621db" translate="yes" xml:space="preserve">
          <source>OptionConverters$.RichOptionalInt.RichOptionalInt()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e2d35a68b4054b5ecfd304f8623f1ca7b28a95e" translate="yes" xml:space="preserve">
          <source>OptionConverters$.RichOptionalInt.toJavaGeneric()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4412065a741c93fa3e60c7505b19c8490d9dfdeb" translate="yes" xml:space="preserve">
          <source>OptionConverters$.RichOptionalInt.toScala()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c3da5dd0f4ad1868f0d09a03589949c9090f178" translate="yes" xml:space="preserve">
          <source>OptionConverters$.RichOptionalLong</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b53588fc02312ecbf4559dc7bcf4acea1d25fee6" translate="yes" xml:space="preserve">
          <source>OptionConverters$.RichOptionalLong()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c8a3cddf10a4090d7b7e19aadba9323e44b78de" translate="yes" xml:space="preserve">
          <source>OptionConverters$.RichOptionalLong.RichOptionalLong()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fdf47a402d177dedf82ed16220cf6f7b5525163" translate="yes" xml:space="preserve">
          <source>OptionConverters$.RichOptionalLong.toJavaGeneric()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d354e690baa6c3ffe15549771829b8835a02bb81" translate="yes" xml:space="preserve">
          <source>OptionConverters$.RichOptionalLong.toScala()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b8e710b0a0de836ed7d5ac6cd7b6f168b8d5634" translate="yes" xml:space="preserve">
          <source>OptionConverters$.toJava()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4da41b8c67f5eb573e27a87ef0df08d331d1712" translate="yes" xml:space="preserve">
          <source>OptionConverters$.toJavaOptionalDouble()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d803c53b08c0e6d25aeaa328937e9c9a7c2e74ad" translate="yes" xml:space="preserve">
          <source>OptionConverters$.toJavaOptionalInt()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21d44934f30a070d6e5b67d53764b4086b674783" translate="yes" xml:space="preserve">
          <source>OptionConverters$.toJavaOptionalLong()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79fd327c2ce677ef204c61fbbf7fb6db8aeb4ee5" translate="yes" xml:space="preserve">
          <source>OptionConverters$.toScala()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5966eca281d50d619649dab05d694de0b1958ab3" translate="yes" xml:space="preserve">
          <source>OptionConverters.scala</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dea5a8461bcb46f103a901f6bfdbbc5cff854901" translate="yes" xml:space="preserve">
          <source>OptionShape</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bade2b33c7de5afa860c293c90bde732430fcc9" translate="yes" xml:space="preserve">
          <source>OptionShape$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45ab76767f7e8b520ea100ea3696d914a0ae29ae" translate="yes" xml:space="preserve">
          <source>OptionShape$.doubleOptionShape()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="777a0f31949d4bf880595592062949d735608682" translate="yes" xml:space="preserve">
          <source>OptionShape$.intOptionShape()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5473701fc4699f8c12f3115b4b7526fcf4569d2" translate="yes" xml:space="preserve">
          <source>OptionShape$.jDoubleOptionShape()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bde2fe4fa291b9cb9c89e3c731a3eee4b47d030d" translate="yes" xml:space="preserve">
          <source>OptionShape$.jIntegerOptionShape()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5474c01e4c582ec858c01acea1da7d01266a534e" translate="yes" xml:space="preserve">
          <source>OptionShape$.jLongOptionShape()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a473aec2517c1372a27e73124c636850996abf3" translate="yes" xml:space="preserve">
          <source>OptionShape$.longOptionShape()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd97c599b7f46811d4e1feb348ce911951f6dbb5" translate="yes" xml:space="preserve">
          <source>OptionShape.fromJava()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02087f85fa7c5204778835b448fc601ab62ce628" translate="yes" xml:space="preserve">
          <source>OptionShape.fromScala()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="453bf258b2b4b8597259f3b89a7339889ff5f2c2" translate="yes" xml:space="preserve">
          <source>OptionShape.scala</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="165eb2305d5a4ffab8a36174da46c9ef488bff20" translate="yes" xml:space="preserve">
          <source>Optional &lt;a href=&quot;function%24&quot; id=&quot;scala.Function&quot; name=&quot;scala.Function&quot;&gt;Function&lt;/a&gt;s, &lt;a href=&quot;partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;s and extractor objects can be converted to each other as shown in the following table. | How to convert ... | to a &lt;a href=&quot;partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; | to an optional &lt;a href=&quot;function%24&quot; id=&quot;scala.Function&quot; name=&quot;scala.Function&quot;&gt;Function&lt;/a&gt; | to an extractor | | :---: | --- | --- | --- | | from a &lt;a href=&quot;partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; | &lt;a href=&quot;predef%24#identity%5BA%5D(x:A):A&quot; id=&quot;scala.Predef#identity&quot; name=&quot;scala.Predef#identity&quot;&gt;Predef.identity&lt;/a&gt; | &lt;a href=&quot;#lift:A=&amp;gt;Option%5BB%5D&quot; id=&quot;scala.PartialFunction#lift&quot; name=&quot;scala.PartialFunction#lift&quot;&gt;lift&lt;/a&gt; | &lt;a href=&quot;predef%24#identity%5BA%5D(x:A):A&quot; id=&quot;scala.Predef#identity&quot; name=&quot;scala.Predef#identity&quot;&gt;Predef.identity&lt;/a&gt; | | from optional &lt;a href=&quot;function%24&quot; id=&quot;scala.Function&quot; name=&quot;scala.Function&quot;&gt;Function&lt;/a&gt; | &lt;span name=&quot;Function.UnliftOps#unlift&quot;&gt;Function.UnliftOps#unlift&lt;/span&gt; or Function.unlift | &lt;a href=&quot;predef%24#identity%5BA%5D(x:A):A&quot; id=&quot;scala.Predef#identity&quot; name=&quot;scala.Predef#identity&quot;&gt;Predef.identity&lt;/a&gt; | &lt;span name=&quot;Function.UnliftOps#unlift&quot;&gt;Function.UnliftOps#unlift&lt;/span&gt; | | from an extractor | &lt;code&gt;{ case extractor(x) =&amp;gt; x }&lt;/code&gt; | &lt;code&gt;extractor.unapply _&lt;/code&gt; | &lt;a href=&quot;predef%24#identity%5BA%5D(x:A):A&quot; id=&quot;scala.Predef#identity&quot; name=&quot;scala.Predef#identity&quot;&gt;Predef.identity&lt;/a&gt; |</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3976a57e6860eca009dc281f7318e4c70f4dd16b" translate="yes" xml:space="preserve">
          <source>Optional &lt;a href=&quot;function%24&quot; id=&quot;scala.Function&quot; name=&quot;scala.Function&quot;&gt;Function&lt;/a&gt;s, &lt;a href=&quot;partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;s and extractor objects can be converted to each other as shown in the following table. | How to convert ... | to a &lt;a href=&quot;partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; | to an optional &lt;a href=&quot;function%24&quot; id=&quot;scala.Function&quot; name=&quot;scala.Function&quot;&gt;Function&lt;/a&gt; | to an extractor | | :---: | --- | --- | --- | | from a &lt;a href=&quot;partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; | &lt;a href=&quot;predef%24#identity%5BA%5D(x:A):A&quot; id=&quot;scala.Predef#identity&quot; name=&quot;scala.Predef#identity&quot;&gt;Predef.identity&lt;/a&gt; | lift | &lt;a href=&quot;predef%24#identity%5BA%5D(x:A):A&quot; id=&quot;scala.Predef#identity&quot; name=&quot;scala.Predef#identity&quot;&gt;Predef.identity&lt;/a&gt; | | from optional &lt;a href=&quot;function%24&quot; id=&quot;scala.Function&quot; name=&quot;scala.Function&quot;&gt;Function&lt;/a&gt; | &lt;span name=&quot;Function.UnliftOps#unlift&quot;&gt;Function.UnliftOps#unlift&lt;/span&gt; or Function.unlift | &lt;a href=&quot;predef%24#identity%5BA%5D(x:A):A&quot; id=&quot;scala.Predef#identity&quot; name=&quot;scala.Predef#identity&quot;&gt;Predef.identity&lt;/a&gt; | &lt;span name=&quot;Function.UnliftOps#unlift&quot;&gt;Function.UnliftOps#unlift&lt;/span&gt; | | from an extractor | &lt;code&gt;{ case extractor(x) =&amp;gt; x }&lt;/code&gt; | &lt;code&gt;extractor.unapply _&lt;/code&gt; | &lt;a href=&quot;predef%24#identity%5BA%5D(x:A):A&quot; id=&quot;scala.Predef#identity&quot; name=&quot;scala.Predef#identity&quot;&gt;Predef.identity&lt;/a&gt; |</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="044376fc376dad11f799e7ba1347eaef787915e6" translate="yes" xml:space="preserve">
          <source>Optionally applies a binary operator to all elements of this collection, going left to right.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="559a05fe72e9b1ea0f89b6c93ccc4cc9fe544d08" translate="yes" xml:space="preserve">
          <source>Optionally applies a binary operator to all elements of this collection, going right to left.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f8e9d27485b674190f422b050074e2e291e2d1b" translate="yes" xml:space="preserve">
          <source>Optionally applies a binary operator to all elements of this immutable sequence, going left to right.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41ad03f5bbfe6eed3f45780c8336e99a410a5d8f" translate="yes" xml:space="preserve">
          <source>Optionally applies a binary operator to all elements of this immutable sequence, going right to left.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="499ea6c769f57f8b80c24435405c74d88b4c7490" translate="yes" xml:space="preserve">
          <source>Optionally applies a binary operator to all elements of this iterable collection, going left to right.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2ae0c817a0da93955b552036b7add647056c7e0" translate="yes" xml:space="preserve">
          <source>Optionally applies a binary operator to all elements of this iterable collection, going right to left.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f5d7a6142f5ce3b87e95eeb90144ba741092f86" translate="yes" xml:space="preserve">
          <source>Optionally applies a binary operator to all elements of this view, going left to right.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b00d100cc42c67d8136dea0cc55db82f25f68ec" translate="yes" xml:space="preserve">
          <source>Optionally applies a binary operator to all elements of this view, going right to left.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="411eabcfeb8bf5368350c9a8e4d67305813a3eb9" translate="yes" xml:space="preserve">
          <source>Optionally retrieves the first element and a queue of the remaining elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45f5267ba988f18e1fee1aca45b901c814f08c24" translate="yes" xml:space="preserve">
          <source>Optionally returns the value associated with a key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="621e8433b27b8594be0a8ee6744ed08a65e952b1" translate="yes" xml:space="preserve">
          <source>Optionally selects the first char.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c96abf1fe8cc99af5d3db12eb249280ad39abbe2" translate="yes" xml:space="preserve">
          <source>Optionally selects the first element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73594f9ce627e90b9885a0b1a59d8d1cf314c623" translate="yes" xml:space="preserve">
          <source>Optionally selects the last char.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14c1a09886e1b40c7db391a96357c7d5d8d3dea1" translate="yes" xml:space="preserve">
          <source>Optionally selects the last element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9dd3b77c90ceca338f52e6d34ba3a8ef1130c7b" translate="yes" xml:space="preserve">
          <source>Ordered</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="113ab86eb844e950f2e14fe90c482c652e32dc66" translate="yes" xml:space="preserve">
          <source>Ordered should be used for data with a single, natural ordering (like integers) while Ordering allows for multiple ordering implementations. An Ordering instance will be implicitly created if necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fa1e849ae0d183749e95d38813ec1202c1118e6" translate="yes" xml:space="preserve">
          <source>Ordered$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dadb9949430b551cdda0c6e609ce03b3b10377cb" translate="yes" xml:space="preserve">
          <source>Ordered$.orderingToOrdered()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4effc83f8967b81f182fb7e874ac83ce75691ea5" translate="yes" xml:space="preserve">
          <source>Ordered.&amp;gt;()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8658afb639b288fb9c58d16b24fd6ffb6ab6fda7" translate="yes" xml:space="preserve">
          <source>Ordered.&amp;gt;=()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16d0692975a60e58893e6cdfe144ee147525aba2" translate="yes" xml:space="preserve">
          <source>Ordered.&amp;lt;()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a07583bb74d34600f9e92750d251c91720ab69b0" translate="yes" xml:space="preserve">
          <source>Ordered.&amp;lt;=()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90288ff6cbb3b22e9f3428d8156dda863fdbeb2f" translate="yes" xml:space="preserve">
          <source>Ordered.compare()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="753f09b51f0216350a8aad58831dacb9b5f0f82a" translate="yes" xml:space="preserve">
          <source>Ordered.compareTo()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4f71ad3177362f17b9e922cfcf44b17083f08d2" translate="yes" xml:space="preserve">
          <source>Ordered.scala</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52a1227cb2a0231135a249a4a38d373ae90c2d9d" translate="yes" xml:space="preserve">
          <source>OrderedProxy &amp;rarr; &lt;a href=&quot;math/ordered&quot; id=&quot;scala.math.Ordered&quot; name=&quot;scala.math.Ordered&quot;&gt;Ordered&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3ed86c1334d74f0ae883f47feef902d83b9d8c6" translate="yes" xml:space="preserve">
          <source>Ordering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93a06a071efb9cb8f15d0a0f346180e3ab64e4c2" translate="yes" xml:space="preserve">
          <source>Ordering is a trait whose instances each represent a strategy for sorting instances of a type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33335afb99e8da9e6fa7c81c80acac32d4d239db" translate="yes" xml:space="preserve">
          <source>Ordering$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0ce9ca7242ff94b6674be1c99c6bc7d10fd551b" translate="yes" xml:space="preserve">
          <source>Ordering$.BigDecimal$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b549d59857cdf6aa3fa8d55d7f2ca4c3305939c1" translate="yes" xml:space="preserve">
          <source>Ordering$.BigDecimal$.compare()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea744f3dbe7740da55bb02cf5c34faa24717fadb" translate="yes" xml:space="preserve">
          <source>Ordering$.BigDecimal()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7bd26935b5f5782a3d9a851acf7ce9f035a0371" translate="yes" xml:space="preserve">
          <source>Ordering$.BigDecimalOrdering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b123500121ebea20731d5036ec963f79dcedf78b" translate="yes" xml:space="preserve">
          <source>Ordering$.BigDecimalOrdering()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49ebfafcde7e143ddfc4eccfeb35f1a1e81419fd" translate="yes" xml:space="preserve">
          <source>Ordering$.BigDecimalOrdering.compare()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfd54a3928e57d80aa5831324eb518afbde27699" translate="yes" xml:space="preserve">
          <source>Ordering$.BigInt$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d527f86fb2298be1575b0c384ddebc041acab04" translate="yes" xml:space="preserve">
          <source>Ordering$.BigInt$.compare()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd8ce46014d34c8053f833f30139ba3f63ecc0db" translate="yes" xml:space="preserve">
          <source>Ordering$.BigInt()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6476a6911d40907f07ed175d1295cf024f4582a" translate="yes" xml:space="preserve">
          <source>Ordering$.BigIntOrdering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cc8b3fff465708942d3b3827ff385b0b7fc8670" translate="yes" xml:space="preserve">
          <source>Ordering$.BigIntOrdering()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5a391560e80c2281209c27d7cb5066a9b910798" translate="yes" xml:space="preserve">
          <source>Ordering$.BigIntOrdering.compare()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b09cc2e0eb2004f45f98ce9ebf4f5ed99f8dbe39" translate="yes" xml:space="preserve">
          <source>Ordering$.Boolean$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5da2036a17a6146a70b223c318398e7c5f33c6f" translate="yes" xml:space="preserve">
          <source>Ordering$.Boolean$.compare()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2bc9640221de79ee219d73aa6cf75d88d161460" translate="yes" xml:space="preserve">
          <source>Ordering$.Boolean()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96dcd766df5ad32197d65554620d837920483935" translate="yes" xml:space="preserve">
          <source>Ordering$.BooleanOrdering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52537688f5837cdec9916ef5bfe7f3316e235a2a" translate="yes" xml:space="preserve">
          <source>Ordering$.BooleanOrdering()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2de6de32352f04dec5e141a731a74a441f174252" translate="yes" xml:space="preserve">
          <source>Ordering$.BooleanOrdering.compare()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a340d415cc9723d428a59130f64b2f63b826f720" translate="yes" xml:space="preserve">
          <source>Ordering$.Byte$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d08740fe2605a4cbc2877ba824fdb4aee1682e1" translate="yes" xml:space="preserve">
          <source>Ordering$.Byte$.compare()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06dd95b52187b6ff1849a98e48ccf9235e5ad222" translate="yes" xml:space="preserve">
          <source>Ordering$.Byte()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="109a6dfd05808375bd8dabd6a4bf720cad3edb47" translate="yes" xml:space="preserve">
          <source>Ordering$.ByteOrdering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f2d39ba2babb8276d6491c4d0fb9e8f82418210" translate="yes" xml:space="preserve">
          <source>Ordering$.ByteOrdering()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf95dcdeaac49e0ffb04cf91b95404d1d32ea7b8" translate="yes" xml:space="preserve">
          <source>Ordering$.ByteOrdering.compare()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71cd68bfc169f0fee181f5fc599b5157e6f4ee70" translate="yes" xml:space="preserve">
          <source>Ordering$.CachedReverse</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8531305cb00fc23d451c63e195515259f16f02a3" translate="yes" xml:space="preserve">
          <source>Ordering$.CachedReverse()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="010270a84f2a069b26366f96702a6cf7cd05202e" translate="yes" xml:space="preserve">
          <source>Ordering$.CachedReverse.isReverseOf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4c0c5cbdb2db8ab91f8e43f88064735557467ae" translate="yes" xml:space="preserve">
          <source>Ordering$.CachedReverse.reverse()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc6f0cfe4c9ce2565cacab18c65e7f1ce7e84ffc" translate="yes" xml:space="preserve">
          <source>Ordering$.Char$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac81ff3e57feea9f57a5426cf3af12202b0b3988" translate="yes" xml:space="preserve">
          <source>Ordering$.Char$.compare()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="004c25946ebe6c8658096a9e25b11bb2fb0180de" translate="yes" xml:space="preserve">
          <source>Ordering$.Char()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37c1e39c2bf42733572866cf6dc5743515ea182f" translate="yes" xml:space="preserve">
          <source>Ordering$.CharOrdering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="223339238baab64d0fe01246a6d846b2b0887500" translate="yes" xml:space="preserve">
          <source>Ordering$.CharOrdering()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffa86b9da3250fe6e2299ff6958ae0bb31cd6a02" translate="yes" xml:space="preserve">
          <source>Ordering$.CharOrdering.compare()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0046e2d7fa4968d2558b6bb3aed3b0071e52c279" translate="yes" xml:space="preserve">
          <source>Ordering$.DeprecatedDoubleOrdering$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f93fe1c681853eb2d853d7dac5884b97fd19e14b" translate="yes" xml:space="preserve">
          <source>Ordering$.DeprecatedDoubleOrdering()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fa921c75446dc6c6ed299ac49bacb51a1033e93" translate="yes" xml:space="preserve">
          <source>Ordering$.DeprecatedFloatOrdering$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc06c20789b991e022b0cd0881fa1634cc5263be" translate="yes" xml:space="preserve">
          <source>Ordering$.DeprecatedFloatOrdering()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41ec884f063945aafe8724148200ee0ec226dd73" translate="yes" xml:space="preserve">
          <source>Ordering$.Double$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="865e31403dc023515293dc9ad834cd2759bbefc6" translate="yes" xml:space="preserve">
          <source>Ordering$.Double$.IeeeOrdering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53c17d3da4b5b7b0e5ad62df8f6d12204b5465e0" translate="yes" xml:space="preserve">
          <source>Ordering$.Double$.IeeeOrdering$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ca35b51072d12e3d0a8af0f288d3225dd8c03b4" translate="yes" xml:space="preserve">
          <source>Ordering$.Double$.IeeeOrdering$.compare()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c84a24dd955ea8d04be849fb2e7fbca16bc25239" translate="yes" xml:space="preserve">
          <source>Ordering$.Double$.IeeeOrdering$.equiv()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86c1842d6f22920b4cf552e56ffc9fb135631114" translate="yes" xml:space="preserve">
          <source>Ordering$.Double$.IeeeOrdering$.gt()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ccbb86a6cd5cb0f0cd2003ed3656ce0b4fdf0c3" translate="yes" xml:space="preserve">
          <source>Ordering$.Double$.IeeeOrdering$.gteq()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="762b66d7b29d4e6c3806ee378b0df4e6b7534a46" translate="yes" xml:space="preserve">
          <source>Ordering$.Double$.IeeeOrdering$.lt()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6647713665e55cea9167ee062429b62b09fdabe" translate="yes" xml:space="preserve">
          <source>Ordering$.Double$.IeeeOrdering$.lteq()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25ef4f6109acf71b4547054122706595bb23879b" translate="yes" xml:space="preserve">
          <source>Ordering$.Double$.IeeeOrdering$.max()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ec35f64aa4b27e61d15072938c50f1ee95b22a8" translate="yes" xml:space="preserve">
          <source>Ordering$.Double$.IeeeOrdering$.min()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="792bbd8e46f89e21eaebc323893d9fdd6d977631" translate="yes" xml:space="preserve">
          <source>Ordering$.Double$.IeeeOrdering()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3859b21fd758cca1137baa76f1102602980bba84" translate="yes" xml:space="preserve">
          <source>Ordering$.Double$.IeeeOrdering.compare()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e63a71b4b39d775efc2ee9f14b4ef1eed8fb410" translate="yes" xml:space="preserve">
          <source>Ordering$.Double$.IeeeOrdering.equiv()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39f28475583600fbeaed9144fb943f597fbe5ee2" translate="yes" xml:space="preserve">
          <source>Ordering$.Double$.IeeeOrdering.gt()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da091c518ad3a367f3e41f93bc41a264e4805ef9" translate="yes" xml:space="preserve">
          <source>Ordering$.Double$.IeeeOrdering.gteq()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c98a57dccf49482bade49a0362eefc413b175bf0" translate="yes" xml:space="preserve">
          <source>Ordering$.Double$.IeeeOrdering.lt()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eec6d717ac8bc6fd3bf7f70f7384606b455ff47" translate="yes" xml:space="preserve">
          <source>Ordering$.Double$.IeeeOrdering.lteq()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0331f953b7461e8d0fe0bfb072565096ef7aef69" translate="yes" xml:space="preserve">
          <source>Ordering$.Double$.IeeeOrdering.max()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95ad901a0f6aa8801651fd5ad385fd7d364ce9a9" translate="yes" xml:space="preserve">
          <source>Ordering$.Double$.IeeeOrdering.min()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="546dc38bbdc84ff9431500269a6d8f729f322625" translate="yes" xml:space="preserve">
          <source>Ordering$.Double$.TotalOrdering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b22fe40426164aec9da3dc10263e2d7a4cd4d42e" translate="yes" xml:space="preserve">
          <source>Ordering$.Double$.TotalOrdering$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b3a7bac07f56ae948512134257814cb199f3f07" translate="yes" xml:space="preserve">
          <source>Ordering$.Double$.TotalOrdering$.compare()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90df42109a4c1aeafe50eb4059c9c2aa56d1402a" translate="yes" xml:space="preserve">
          <source>Ordering$.Double$.TotalOrdering()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6584647ac80cf39754f5c1ad563b007b7daeb52" translate="yes" xml:space="preserve">
          <source>Ordering$.Double$.TotalOrdering.compare()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4efd7f41b92d6a57da365a5cf854667f9d5cfad0" translate="yes" xml:space="preserve">
          <source>Ordering$.Double()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25e8705ee40a88acb4a3623585c4feeccd8a7961" translate="yes" xml:space="preserve">
          <source>Ordering$.ExtraImplicits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6838082f2f97347d672cd98a9e66619f939d9b5" translate="yes" xml:space="preserve">
          <source>Ordering$.ExtraImplicits()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d2d4c7e49f53b2dd330ed72e4c18b4d27f239fa" translate="yes" xml:space="preserve">
          <source>Ordering$.ExtraImplicits.infixOrderingOps()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c33f70d7be6fb4e734601a5e35bc0361a6e875a3" translate="yes" xml:space="preserve">
          <source>Ordering$.ExtraImplicits.seqOrdering()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83da4531686b79248509c2961ad1969dc1d1a1e3" translate="yes" xml:space="preserve">
          <source>Ordering$.ExtraImplicits.sortedSetOrdering()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b7cdea3d1608bafa00493d6d6e88b69ec9036f1" translate="yes" xml:space="preserve">
          <source>Ordering$.Float$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0af4cbfb11a153c8d94511eefa98bb40f68a4746" translate="yes" xml:space="preserve">
          <source>Ordering$.Float$.IeeeOrdering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d38d26680bdcb5352f33bf2463db7b939700463c" translate="yes" xml:space="preserve">
          <source>Ordering$.Float$.IeeeOrdering$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ec4a2bd97daec72eb2c8fe882857e4748cf742f" translate="yes" xml:space="preserve">
          <source>Ordering$.Float$.IeeeOrdering$.compare()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45120389fca687899d257658c38268000b2b8f2c" translate="yes" xml:space="preserve">
          <source>Ordering$.Float$.IeeeOrdering$.equiv()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d1ec16a79c5eee04dfb2bff9ac29abdacb57c76" translate="yes" xml:space="preserve">
          <source>Ordering$.Float$.IeeeOrdering$.gt()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f167831ea5147151f123d3317a962b1e73102566" translate="yes" xml:space="preserve">
          <source>Ordering$.Float$.IeeeOrdering$.gteq()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a1c45ad638d4ee66c20853a27649e00dedf422c" translate="yes" xml:space="preserve">
          <source>Ordering$.Float$.IeeeOrdering$.lt()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b8b9283b8e57073e3f42b73f079cba7f1c94a86" translate="yes" xml:space="preserve">
          <source>Ordering$.Float$.IeeeOrdering$.lteq()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b6df2ffd4c9b86e4cb0d2704a1d5ab2033af8ce" translate="yes" xml:space="preserve">
          <source>Ordering$.Float$.IeeeOrdering$.max()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93c46ef794be9fc9929538f6a08db11062690787" translate="yes" xml:space="preserve">
          <source>Ordering$.Float$.IeeeOrdering$.min()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abf588863c058d27aed9859ef9254ba438b76b79" translate="yes" xml:space="preserve">
          <source>Ordering$.Float$.IeeeOrdering()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ea3cabc18b2633e22c045dc61db38bb6e3229cf" translate="yes" xml:space="preserve">
          <source>Ordering$.Float$.IeeeOrdering.compare()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13f442444b24d4aec8a09b9e8037932b6914f6a5" translate="yes" xml:space="preserve">
          <source>Ordering$.Float$.IeeeOrdering.equiv()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="475ba9b8bc245bd6bb3b015e7f7120577c990567" translate="yes" xml:space="preserve">
          <source>Ordering$.Float$.IeeeOrdering.gt()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85f1c39518edef64bca5968c8f3214fd855f550d" translate="yes" xml:space="preserve">
          <source>Ordering$.Float$.IeeeOrdering.gteq()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c7682c8176522dc55d01863f1fd3fd7b1e726d4" translate="yes" xml:space="preserve">
          <source>Ordering$.Float$.IeeeOrdering.lt()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1894e6054aa5f05908f10ccdb09064e933137143" translate="yes" xml:space="preserve">
          <source>Ordering$.Float$.IeeeOrdering.lteq()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fd64c2d763e77f45d2cf608c5e086079932b3e0" translate="yes" xml:space="preserve">
          <source>Ordering$.Float$.IeeeOrdering.max()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07cfdbed268c23803ed65da48752fbfb463ca0ee" translate="yes" xml:space="preserve">
          <source>Ordering$.Float$.IeeeOrdering.min()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1519bf990a9eb12639a8113408a52bea27322da9" translate="yes" xml:space="preserve">
          <source>Ordering$.Float$.TotalOrdering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c717048fb82639d416cf31eef636c6108b83919" translate="yes" xml:space="preserve">
          <source>Ordering$.Float$.TotalOrdering$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba948242e7c6d3e7edfcfaf29ff46a64fc7956a3" translate="yes" xml:space="preserve">
          <source>Ordering$.Float$.TotalOrdering$.compare()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="950c4836abe2d56de1f0eb2058f750bed3168cd0" translate="yes" xml:space="preserve">
          <source>Ordering$.Float$.TotalOrdering()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efda11b32836aca831ca4b7b2017d9f47d578c67" translate="yes" xml:space="preserve">
          <source>Ordering$.Float$.TotalOrdering.compare()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a35d138db8127a3e368e04f98cc9467e41adc00" translate="yes" xml:space="preserve">
          <source>Ordering$.Float()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acd3bd8372fdc0f24b2ebed1555ec6e50cb6be26" translate="yes" xml:space="preserve">
          <source>Ordering$.Implicits$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de9041db7e8d20eca716a0aa39c8fe77a8a356bc" translate="yes" xml:space="preserve">
          <source>Ordering$.Implicits()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04098ed6bd0cf2f7f43842b876bad827a514e8a3" translate="yes" xml:space="preserve">
          <source>Ordering$.Int$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82d858f84763f5800b7e71c4906b60abcd862ce1" translate="yes" xml:space="preserve">
          <source>Ordering$.Int$.compare()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37b942aba8870897cc8e1a3ac91e24764f8e32da" translate="yes" xml:space="preserve">
          <source>Ordering$.Int()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7203d315fa9137427536e329446bd30e6bb60969" translate="yes" xml:space="preserve">
          <source>Ordering$.IntOrdering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e289f2158cb02dfe18035a336e8704679a969d8" translate="yes" xml:space="preserve">
          <source>Ordering$.IntOrdering()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60051a151b9381a55016709878e161ad7add7329" translate="yes" xml:space="preserve">
          <source>Ordering$.IntOrdering.compare()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69c1de19ab016565f9e26b6c6f92b6ccd1f68751" translate="yes" xml:space="preserve">
          <source>Ordering$.Long$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43e4b7c23ec385ec9fdaf67c913669eb9a675b1c" translate="yes" xml:space="preserve">
          <source>Ordering$.Long$.compare()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af7dd6d33ffa26d24b659b019395bcaf5efb9597" translate="yes" xml:space="preserve">
          <source>Ordering$.Long()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="542a7afd4797de1c5d6538b996cffcb23ea063e8" translate="yes" xml:space="preserve">
          <source>Ordering$.LongOrdering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ad3a72ffac75c9ea6362f5ecd52ec622349e1f4" translate="yes" xml:space="preserve">
          <source>Ordering$.LongOrdering()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40d4f4fa81b1539960daae04498ab62ee60bb6df" translate="yes" xml:space="preserve">
          <source>Ordering$.LongOrdering.compare()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da689d915593632726348fd5c06e3d4c1a62db7a" translate="yes" xml:space="preserve">
          <source>Ordering$.Option()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="682744ecd611c0b8df8b66d445baf057e5693aa0" translate="yes" xml:space="preserve">
          <source>Ordering$.OptionOrdering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f5542811ee23abc6331c3ab880aa31618d9c1db" translate="yes" xml:space="preserve">
          <source>Ordering$.OptionOrdering()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd7a98b6ef012eb5f1c87b5c655602761146b0eb" translate="yes" xml:space="preserve">
          <source>Ordering$.OptionOrdering.compare()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="876a1b447f4a7ad5aed246290f4b3efa241604e8" translate="yes" xml:space="preserve">
          <source>Ordering$.OptionOrdering.equals()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30d6e2f8cb74fe10a05232d9e8fa452e6e6d83a6" translate="yes" xml:space="preserve">
          <source>Ordering$.OptionOrdering.hashCode()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5fdbf783c862a0ca6fae3035ddc5bc9bdcbfc99" translate="yes" xml:space="preserve">
          <source>Ordering$.OptionOrdering.optionOrdering()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d318bdb8e0a14f8e32e255e5d0da32a2eb613212" translate="yes" xml:space="preserve">
          <source>Ordering$.Short$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6166cc7edcf794d0024d2428090bb761134461ef" translate="yes" xml:space="preserve">
          <source>Ordering$.Short$.compare()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec6cb01ef873d167c4e4cbd600261bce4610d07d" translate="yes" xml:space="preserve">
          <source>Ordering$.Short()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="315b008808b140cc90cd240d95fd0b261f426460" translate="yes" xml:space="preserve">
          <source>Ordering$.ShortOrdering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25be0fca8e79a91b5640ac3a2b7e9037e086847b" translate="yes" xml:space="preserve">
          <source>Ordering$.ShortOrdering()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7faf8563716cd68bcd8b0c3bf0d07e3b31aa081" translate="yes" xml:space="preserve">
          <source>Ordering$.ShortOrdering.compare()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccb0ac2968eb1b69cec4416888f7dc3402f77851" translate="yes" xml:space="preserve">
          <source>Ordering$.String$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="953cd21d26d966269360de76196c8846f703c9dc" translate="yes" xml:space="preserve">
          <source>Ordering$.String$.compare()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff6de127c81836cf1647b1571426d77401e9109b" translate="yes" xml:space="preserve">
          <source>Ordering$.String()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5decfb152b57ea548d777ede03bb21c28941e7ea" translate="yes" xml:space="preserve">
          <source>Ordering$.StringOrdering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb17a0c4804b57b659ef288f63496ba2cd2789ea" translate="yes" xml:space="preserve">
          <source>Ordering$.StringOrdering()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b539e342952890ae693cf15b3f610422eb56b7a3" translate="yes" xml:space="preserve">
          <source>Ordering$.StringOrdering.compare()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f658766b4a9514a41717b7928b17b9b589ac0564" translate="yes" xml:space="preserve">
          <source>Ordering$.Symbol$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6c55757d494b83fac68532ae71749cfafa66ad3" translate="yes" xml:space="preserve">
          <source>Ordering$.Symbol$.compare()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06415b771333dc71d71c63eee3f6610c8e846904" translate="yes" xml:space="preserve">
          <source>Ordering$.Symbol()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fa70bc04ecab4911376f7d3561631949f832885" translate="yes" xml:space="preserve">
          <source>Ordering$.SymbolOrdering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f589ecb03fc2a1c66aaa2ffb971fa718044a0abc" translate="yes" xml:space="preserve">
          <source>Ordering$.SymbolOrdering()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="462fdb19466990d17151f26c744222b22e6f2410" translate="yes" xml:space="preserve">
          <source>Ordering$.SymbolOrdering.compare()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f39bdd680ba3adc25fc0fe001977ef266ae0c2e2" translate="yes" xml:space="preserve">
          <source>Ordering$.Tuple2()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebe5de47208d6b9d2f6cb518f3346f6ce8d5d383" translate="yes" xml:space="preserve">
          <source>Ordering$.Tuple3()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37002c4fcf6229c5f6c59ffce9cf25dd9e678d3d" translate="yes" xml:space="preserve">
          <source>Ordering$.Tuple4()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3471e91e726727fc283ba038de13eabe27941142" translate="yes" xml:space="preserve">
          <source>Ordering$.Tuple5()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01b8f18d105faf97c7d413ab4eb4c3c7f4d2889f" translate="yes" xml:space="preserve">
          <source>Ordering$.Tuple6()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0af4c9c1bccd43d1aa4fadbf2450535dc988422" translate="yes" xml:space="preserve">
          <source>Ordering$.Tuple7()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35f753310655bf6ee79201e33e4f32fc79fb17de" translate="yes" xml:space="preserve">
          <source>Ordering$.Tuple8()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e040233fa64c58e37042bfdc514324d78472bf4f" translate="yes" xml:space="preserve">
          <source>Ordering$.Tuple9()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05666577ef96fc64de692ba5ca36a13901708b2f" translate="yes" xml:space="preserve">
          <source>Ordering$.Unit$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="410be23dace83a6fc4bffeb9fc6b274e12144031" translate="yes" xml:space="preserve">
          <source>Ordering$.Unit$.compare()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69bd853e1fa9a2d4614e6fadd86d855ad6f7eaba" translate="yes" xml:space="preserve">
          <source>Ordering$.Unit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="468e990d33e05f4317ea44847f9bf4ada6c57093" translate="yes" xml:space="preserve">
          <source>Ordering$.UnitOrdering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90bf89556a5558f457de3ec8f34015691d16c0a0" translate="yes" xml:space="preserve">
          <source>Ordering$.UnitOrdering()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28cfa1b2623bc28021479b384c39fef563b43721" translate="yes" xml:space="preserve">
          <source>Ordering$.UnitOrdering.compare()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="405e8490246bc703b78a6eb372eb8a8de3e5df6a" translate="yes" xml:space="preserve">
          <source>Ordering$.apply()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5887ff7d050a3534674f585514ea25910d7aa0d2" translate="yes" xml:space="preserve">
          <source>Ordering$.by()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68921c256ff285f73d45193a5bd51fd769cbace8" translate="yes" xml:space="preserve">
          <source>Ordering$.fromLessThan()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="438515098e0623599e7ce5d5ecf851e19a0e7083" translate="yes" xml:space="preserve">
          <source>Ordering's companion object defines many implicit objects to deal with subtypes of AnyVal (e.g. Int, Double), String, and others.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03de076e969bd71e4c01b3d69a0090e300e8245d" translate="yes" xml:space="preserve">
          <source>Ordering.OrderingOps</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c54fd27796995e799ca02aefa1a7d0b86b9c331a" translate="yes" xml:space="preserve">
          <source>Ordering.OrderingOps()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f43764996070671c6d63a05f6419dd6c1336e650" translate="yes" xml:space="preserve">
          <source>Ordering.OrderingOps.&amp;gt;()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7049879a7d1a00236008652674704dd941af5626" translate="yes" xml:space="preserve">
          <source>Ordering.OrderingOps.&amp;gt;=()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab982082f91eb022ac1133e5fb4a77546bc0dbe1" translate="yes" xml:space="preserve">
          <source>Ordering.OrderingOps.&amp;lt;()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0e38e4ec2536c3af3f190fd03cbc41b9b749dc6" translate="yes" xml:space="preserve">
          <source>Ordering.OrderingOps.&amp;lt;=()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98bed9fc09bc8a782c1a17879585902ec3b29844" translate="yes" xml:space="preserve">
          <source>Ordering.OrderingOps.OrderingOps()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdcb226e88e3cc9379070c575cfe73872c1fbf9f" translate="yes" xml:space="preserve">
          <source>Ordering.OrderingOps.equiv()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78df238f17b516411efa83366951d7b67da9e97c" translate="yes" xml:space="preserve">
          <source>Ordering.OrderingOps.max()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c772c82125424cb64732c8c2fc6943f99b300992" translate="yes" xml:space="preserve">
          <source>Ordering.OrderingOps.min()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74a0abc1f60144f4ce153e8973062495fd6ff7c4" translate="yes" xml:space="preserve">
          <source>Ordering.compare()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f60945c303fc2749acd0dd222cc73e4114dcda51" translate="yes" xml:space="preserve">
          <source>Ordering.equiv()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05a08bd071dd0a420f78baf8b715c2f5adc82801" translate="yes" xml:space="preserve">
          <source>Ordering.gt()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc5b80a229209dd5fc42f69ca84a66b6b970a9ca" translate="yes" xml:space="preserve">
          <source>Ordering.gteq()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6a4c13e35d2c2c7711014ae912b12af2107d7ef" translate="yes" xml:space="preserve">
          <source>Ordering.isReverseOf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="208183c842d7cc1d780b3f8b4fa3abc74b73d154" translate="yes" xml:space="preserve">
          <source>Ordering.lt()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62fa16c23c84abda7b14c1f35fc2d90d9a32013b" translate="yes" xml:space="preserve">
          <source>Ordering.lteq()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec155a3f6922757a62e7f6a0d80dbeaee57805e2" translate="yes" xml:space="preserve">
          <source>Ordering.max()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a807363c1e0f6668b96a2720afe6d894fc2048b8" translate="yes" xml:space="preserve">
          <source>Ordering.min()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba980caa2630591db21228d2078c683e06405889" translate="yes" xml:space="preserve">
          <source>Ordering.mkOrderingOps()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b8e1eddaa8fde254359046954c3fad8176fabf1" translate="yes" xml:space="preserve">
          <source>Ordering.on()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c4d20cb98e86f2f18e19921c004fface2b592f7" translate="yes" xml:space="preserve">
          <source>Ordering.orElse()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e61b5c686a5570706e9760901299067e290b0be7" translate="yes" xml:space="preserve">
          <source>Ordering.orElseBy()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97ea0a950c6a4ff28cc2ab5ce3c716f82d22afef" translate="yes" xml:space="preserve">
          <source>Ordering.reverse()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5732467200069488e055b2173c539d8e3e0010f0" translate="yes" xml:space="preserve">
          <source>Ordering.scala</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="162d5adf7feab49dabec58fc842892624c64cb93" translate="yes" xml:space="preserve">
          <source>Ordering.tryCompare()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51aaceb72ec35e7b551d412539aceba46a979881" translate="yes" xml:space="preserve">
          <source>Other aliases refer to classes provided by the underlying platform. For example, on the JVM, &lt;code&gt;String&lt;/code&gt; is an alias for &lt;code&gt;java.lang.String&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0beaf813ab8c0b13b6b21bae6cd22134dc02f07b" translate="yes" xml:space="preserve">
          <source>Other groupings:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7a44dca8046c869d5fbb8f6dea4da6a694df592" translate="yes" xml:space="preserve">
          <source>Other packages exist. See the complete list on the right.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90303d621dbe6296eb29397494f47aa0b07c85dc" translate="yes" xml:space="preserve">
          <source>Otherwise, computes value from given expression &lt;code&gt;op&lt;/code&gt;, stores with key in map and returns that value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="813a0c123e69d6d8660be888cbf8563d5922941f" translate="yes" xml:space="preserve">
          <source>Otherwise, this Regex is applied to the previously matched input, and the result of that match is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cee4db7cd9269481ec4a4268f09e141f4f2d93a" translate="yes" xml:space="preserve">
          <source>Output of the process as a &lt;code&gt;String&lt;/code&gt; (&lt;code&gt;!!&lt;/code&gt; methods)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7e7eee768ff5811e88b3b4b64a3e8633e867fab" translate="yes" xml:space="preserve">
          <source>Overridden here as final to trigger tail-call optimization, which replaces 'this' with 'tail' at each iteration. This is absolutely necessary for allowing the GC to collect the underlying LazyList as elements are consumed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dbe27ee2acbc0de1152b17c828c110c5403aa5e" translate="yes" xml:space="preserve">
          <source>Overridden here as final to trigger tail-call optimization, which replaces 'this' with 'tail' at each iteration. This is absolutely necessary for allowing the GC to collect the underlying Stream as elements are consumed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02121a0413e4b5c9df74357b2bd8406a59421bf4" translate="yes" xml:space="preserve">
          <source>Overriding such a member in a sub-class then generates a warning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16994e3383b687c6951d6241732d39fc1916a3c2" translate="yes" xml:space="preserve">
          <source>Package Members</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4366b758aaf549a871bcfe2a7555dbc2d01323d8" translate="yes" xml:space="preserve">
          <source>Package root</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92c228497e4df588dcb015260b25eede053a6af2" translate="yes" xml:space="preserve">
          <source>Package scala</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7fc3e24551b4714c1b875668621b2523362c9fc" translate="yes" xml:space="preserve">
          <source>Package scala.annotation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c37228b9fba97aafcef5ca4f06b1cc912e606848" translate="yes" xml:space="preserve">
          <source>Package scala.annotation.meta</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84d37a7f8fa569165d1de0da6e9f5f2b9ce8724c" translate="yes" xml:space="preserve">
          <source>Package scala.annotation.unchecked</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db065a4624ee166862ced45ea4f43c9e5c528972" translate="yes" xml:space="preserve">
          <source>Package scala.beans</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de620c8b68d3eb800dff263f57baf21af558fa34" translate="yes" xml:space="preserve">
          <source>Package scala.collection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ece7fa639edeecbd48aee2bf738ce3242af78ae" translate="yes" xml:space="preserve">
          <source>Package scala.collection.concurrent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c23076830447c8d8b654274b10aa8e1832db035" translate="yes" xml:space="preserve">
          <source>Package scala.collection.convert</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5652ca9840d7c6ee8b28c883d7028ccf3ad2e01" translate="yes" xml:space="preserve">
          <source>Package scala.collection.generic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="365e0758618f7137b704d677a58a6a4e60094438" translate="yes" xml:space="preserve">
          <source>Package scala.collection.immutable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f54a0001164c3071aab27e6808b7b33892369776" translate="yes" xml:space="preserve">
          <source>Package scala.collection.mutable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="228ee01b2b23b73d160fa30881afd45216f7e863" translate="yes" xml:space="preserve">
          <source>Package scala.compat</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="692965b8dc3cabea93ece560350517dccf7c1ef6" translate="yes" xml:space="preserve">
          <source>Package scala.concurrent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2c3b7ae92b3579196532572c624535cc1e36696" translate="yes" xml:space="preserve">
          <source>Package scala.concurrent.duration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ccba3000bfb937256fe626971511c4a0db4d845" translate="yes" xml:space="preserve">
          <source>Package scala.io</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2285ce2c30cfc17386889e1891c2db8fa37a3f78" translate="yes" xml:space="preserve">
          <source>Package scala.jdk</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d439ebff834d5133473d68a4d7ec0df6383c58d" translate="yes" xml:space="preserve">
          <source>Package scala.jdk.javaapi</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="970cee9ca3b203580c2dbe756603f240c85d8d1d" translate="yes" xml:space="preserve">
          <source>Package scala.math</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26ae4b7271a622612378aa3edeb38b200e73c9c4" translate="yes" xml:space="preserve">
          <source>Package scala.ref</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfeec458a3691997ce647f77b8ac66f6a10d783c" translate="yes" xml:space="preserve">
          <source>Package scala.reflect</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2696fc0e1af6a1b9083bd0fa75b69fbcbdfa16b" translate="yes" xml:space="preserve">
          <source>Package scala.sys</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79be41165e73aa672aaddb4aaa5a302a3a83a125" translate="yes" xml:space="preserve">
          <source>Package scala.sys.process</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6503ba7831057c29056df8377a127d448da9091" translate="yes" xml:space="preserve">
          <source>Package scala.util</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf46b93b9cd7b5a91af08700b8553d206688206a" translate="yes" xml:space="preserve">
          <source>Package scala.util.control</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fb73df56b8eac965ffc04ac121364b1e12d0d0e" translate="yes" xml:space="preserve">
          <source>Package scala.util.hashing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9df8d287dc6a47d5d901e6b97facdc45bc15d9a" translate="yes" xml:space="preserve">
          <source>Package scala.util.matching</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b3dada27bfad5ff51da937fccac0bdd7dc89386" translate="yes" xml:space="preserve">
          <source>Package structure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c986f6d045296ac171db06e26b1af9a3fb0630a" translate="yes" xml:space="preserve">
          <source>Pads the last segment if necessary so that all segments will have the same size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6188a0d0a0300c9a37178aa4f032f6903ea742e2" translate="yes" xml:space="preserve">
          <source>Paradoxically, this is the simplest component of all, and the one least likely to be interacted with. It consists solely of &lt;a href=&quot;process&quot; id=&quot;scala.sys.process.Process&quot; name=&quot;scala.sys.process.Process&quot;&gt;scala.sys.process.Process&lt;/a&gt;, and it provides only two methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20af453325c45607784e731b7f6443c4c0a9a41c" translate="yes" xml:space="preserve">
          <source>Paradoxically, this is the simplest component of all, and the one least likely to be interacted with. It consists solely of &lt;a href=&quot;process/process&quot; id=&quot;scala.sys.process.Process&quot; name=&quot;scala.sys.process.Process&quot;&gt;scala.sys.process.Process&lt;/a&gt;, and it provides only two methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="145ddb7a826aa54cb520a842eb59b23a192b6501" translate="yes" xml:space="preserve">
          <source>Parse String into Duration. Format is &lt;code&gt;&quot;&amp;lt;length&amp;gt;&amp;lt;unit&amp;gt;&quot;&lt;/code&gt;, where whitespace is allowed before, between and after the parts. Infinities are designated by &lt;code&gt;&quot;Inf&quot;&lt;/code&gt;, &lt;code&gt;&quot;PlusInf&quot;&lt;/code&gt;, &lt;code&gt;&quot;+Inf&quot;&lt;/code&gt; and &lt;code&gt;&quot;-Inf&quot;&lt;/code&gt; or &lt;code&gt;&quot;MinusInf&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d01be6093e7c525152c6ba2a6e719d2ac619316b" translate="yes" xml:space="preserve">
          <source>Parse String into Duration. Format is &lt;code&gt;&quot;&amp;lt;length&amp;gt;&amp;lt;unit&amp;gt;&quot;&lt;/code&gt;, where whitespace is allowed before, between and after the parts. Infinities are designated by &lt;code&gt;&quot;Inf&quot;&lt;/code&gt;, &lt;code&gt;&quot;PlusInf&quot;&lt;/code&gt;, &lt;code&gt;&quot;+Inf&quot;&lt;/code&gt;, &lt;code&gt;&quot;Duration.Inf&quot;&lt;/code&gt; and &lt;code&gt;&quot;-Inf&quot;&lt;/code&gt;, &lt;code&gt;&quot;MinusInf&quot;&lt;/code&gt; or &lt;code&gt;&quot;Duration.MinusInf&quot;&lt;/code&gt;. Undefined is designated by &lt;code&gt;&quot;Duration.Undefined&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3617c21d500d8e3efdaf01f6e533edb0e4c2538" translate="yes" xml:space="preserve">
          <source>Parse as a &lt;code&gt;Byte&lt;/code&gt; (string must contain only decimal digits and optional leading &lt;code&gt;-&lt;/code&gt; or &lt;code&gt;+&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9157df7ab71ff81c1e42bb406501782bde3c8ea2" translate="yes" xml:space="preserve">
          <source>Parse as a &lt;code&gt;Double&lt;/code&gt; (surrounding whitespace is removed with a &lt;code&gt;trim&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c67dcd60dc0e28e3a2dabd5c9857a55482732f6" translate="yes" xml:space="preserve">
          <source>Parse as a &lt;code&gt;Float&lt;/code&gt; (surrounding whitespace is removed with a &lt;code&gt;trim&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="119a9428c3d8a35f94640ed5604c2ba0328bdaf0" translate="yes" xml:space="preserve">
          <source>Parse as a &lt;code&gt;Long&lt;/code&gt; (string must contain only decimal digits and optional leading &lt;code&gt;-&lt;/code&gt; or &lt;code&gt;+&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96fd25a62a173b4cb803e78fc18b9d99d3eb60f2" translate="yes" xml:space="preserve">
          <source>Parse as a &lt;code&gt;Short&lt;/code&gt; (string must contain only decimal digits and optional leading &lt;code&gt;-&lt;/code&gt; or &lt;code&gt;+&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9ad95d9369cb4607d58eebe69ceabea64ce99ed" translate="yes" xml:space="preserve">
          <source>Parse as an &lt;code&gt;Int&lt;/code&gt; (string must contain only decimal digits and optional leading &lt;code&gt;-&lt;/code&gt; or &lt;code&gt;+&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2938a795d0c2a24896fc26500a22a114269f6428" translate="yes" xml:space="preserve">
          <source>Partial function used when applying catch logic to determine result value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fc4e1c1ff6ff8383f809556148bb2dba4a690ab" translate="yes" xml:space="preserve">
          <source>PartialFunction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcfdcbb950a41fb89a52da419218e67eee73c62c" translate="yes" xml:space="preserve">
          <source>PartialFunction$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ae5be616d692e8137f5c62c09a2ec6f307c8d0a" translate="yes" xml:space="preserve">
          <source>PartialFunction$.ElementWiseExtractor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30f856cbf53fed873311c7d8fcd140a2284d2a3b" translate="yes" xml:space="preserve">
          <source>PartialFunction$.ElementWiseExtractor()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="227b612447009cbe2990204abbde4b37ecf4656f" translate="yes" xml:space="preserve">
          <source>PartialFunction$.ElementWiseExtractor.unapplySeq()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a830a09e0b43da04ad3517be35f972282f1792d" translate="yes" xml:space="preserve">
          <source>PartialFunction$.cond()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c81c3b5b63343802532ed6c7976d9992fdcf58d9" translate="yes" xml:space="preserve">
          <source>PartialFunction$.condOpt()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="561ccf1b15e2c31c4afe3cbc42a7c4eac05dedde" translate="yes" xml:space="preserve">
          <source>PartialFunction$.empty()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ffea4d726a14f6f686839b36937d678dbeb35bb" translate="yes" xml:space="preserve">
          <source>PartialFunction$.fromFunction()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39ff8b1d30e62b5f99754e8cd9008488ffc50051" translate="yes" xml:space="preserve">
          <source>PartialFunction.andThen()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cfc9a40e7a92ea35a9463e17c18470b4452569f" translate="yes" xml:space="preserve">
          <source>PartialFunction.applyOrElse()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99a5e2082fbe1a62d133587ce09df1c2b7231b16" translate="yes" xml:space="preserve">
          <source>PartialFunction.compose()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b55eda5a40942054d0789e33d54199885aa7e88" translate="yes" xml:space="preserve">
          <source>PartialFunction.elementWise()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eb4dd6ab95a52bdfdf2290d6e4eca1f07156a82" translate="yes" xml:space="preserve">
          <source>PartialFunction.isDefinedAt()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45e2a4ff34c58bfb1ba0a39ac88646fa086d2b92" translate="yes" xml:space="preserve">
          <source>PartialFunction.lift()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd5213d04dd7ae393e7be2a3baf6f1062606165a" translate="yes" xml:space="preserve">
          <source>PartialFunction.orElse()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9d3eae34f4c3097de95b3305fa97aa26bbfdda8" translate="yes" xml:space="preserve">
          <source>PartialFunction.runWith()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68871672900479ad0cac569112bde5b1e750de29" translate="yes" xml:space="preserve">
          <source>PartialFunction.scala</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efa9fa40ce37eea335d7963fbc4d8e098335a79f" translate="yes" xml:space="preserve">
          <source>PartialFunction.unapply()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b9945f875fbb390a4dea4fa377c0f36d92a99a7" translate="yes" xml:space="preserve">
          <source>PartialOrdering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61d37ab6754785afbd32e8f61ea93dd24153a5e4" translate="yes" xml:space="preserve">
          <source>PartialOrdering$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85ab10b0fae7da8b60cd5d68650b767082948de1" translate="yes" xml:space="preserve">
          <source>PartialOrdering$.apply()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76480fb35f030e9dc436c717bc8d0de491462c63" translate="yes" xml:space="preserve">
          <source>PartialOrdering.equiv()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b39bcd154c61c1e2b970a40c4588002689952bb0" translate="yes" xml:space="preserve">
          <source>PartialOrdering.gt()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05f193417ad19b415f9a2ee016488c79702606b5" translate="yes" xml:space="preserve">
          <source>PartialOrdering.gteq()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24ba69b00fe9fcdb4f7bed1dc97c39f148df50ec" translate="yes" xml:space="preserve">
          <source>PartialOrdering.lt()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c751e61ae769553359e8bbbba26691a492a6a649" translate="yes" xml:space="preserve">
          <source>PartialOrdering.lteq()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="466f8015cba9c5288c0f73aa90cff8467be00f75" translate="yes" xml:space="preserve">
          <source>PartialOrdering.reverse()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3439d9fde6f96d2c3508b1a8ee8b4770530529cb" translate="yes" xml:space="preserve">
          <source>PartialOrdering.scala</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14558dc75517e28e8a9c7ec5818105b1b6e74a89" translate="yes" xml:space="preserve">
          <source>PartialOrdering.tryCompare()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="797781b629e4bb497d876190b7119f72284dc266" translate="yes" xml:space="preserve">
          <source>Partially apply a BuildFrom to a Factory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13f341c82a2446bbdbed830d3b9e812d1bbeb33a" translate="yes" xml:space="preserve">
          <source>PartiallyOrdered</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="802d1263b0f2cba5bce7b5d18580e07121ed939a" translate="yes" xml:space="preserve">
          <source>PartiallyOrdered.&amp;gt;()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c076b804f69d70a317fb0545cab00f2868123ae" translate="yes" xml:space="preserve">
          <source>PartiallyOrdered.&amp;gt;=()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="149a096c1994d740067ee6c92ed49bfe3109d1b6" translate="yes" xml:space="preserve">
          <source>PartiallyOrdered.&amp;lt;()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4d3ef25b2b01245c46e77f07647e0e433c3fe5e" translate="yes" xml:space="preserve">
          <source>PartiallyOrdered.&amp;lt;=()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88e9b27f2529a71a6c2691239ca14f2dc38cd312" translate="yes" xml:space="preserve">
          <source>PartiallyOrdered.AsPartiallyOrdered()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5203a098636988bde0693a447cb1e354e204f1e1" translate="yes" xml:space="preserve">
          <source>PartiallyOrdered.scala</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4d67a765c502399569d2331f8dfc42fdd935302" translate="yes" xml:space="preserve">
          <source>PartiallyOrdered.tryCompareTo()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17185d492134cecbe7337c52ba11ae00854b8564" translate="yes" xml:space="preserve">
          <source>Partitions elements in fixed size arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d598a37f37eeca615701477e56e0589435a7b5df" translate="yes" xml:space="preserve">
          <source>Partitions elements in fixed size immutable sequences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20cd61b81d50a133063fc5790959ae13ba204bea" translate="yes" xml:space="preserve">
          <source>Partitions elements in fixed size iterable collections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fee69999c379ec3f9a342fc53c036fd2df0dc383" translate="yes" xml:space="preserve">
          <source>Partitions elements in fixed size lazy lists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fcf881a9df103ab24aa0265e4904e05e6e895df" translate="yes" xml:space="preserve">
          <source>Partitions elements in fixed size ranges.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b5469097f5465e66cefd8ba22d5488c2050d351" translate="yes" xml:space="preserve">
          <source>Partitions elements in fixed size sequences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2466602d2d900cfd7b6ab2d44d2ebe29f5385e78" translate="yes" xml:space="preserve">
          <source>Partitions elements in fixed size strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1232e69dcd5604cf5ef5b12b4089022cb3710567" translate="yes" xml:space="preserve">
          <source>Partitions elements in fixed size views.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7217fe0544a91ede2f9b071ce6088e9212bf0382" translate="yes" xml:space="preserve">
          <source>Partitions this array into a map of arrays according to a discriminator function &lt;code&gt;key&lt;/code&gt;. Each element in a group is transformed into a value of type &lt;code&gt;B&lt;/code&gt; using the &lt;code&gt;value&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71274baa8cc7bdf4c3fbf70c978e6de6398dd6c3" translate="yes" xml:space="preserve">
          <source>Partitions this array into a map of arrays according to some discriminator function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6169a0cd0e964dd38ed203a0e4e094fe337c721" translate="yes" xml:space="preserve">
          <source>Partitions this immutable sequence into a map according to a discriminator function &lt;code&gt;key&lt;/code&gt;. All the values that have the same discriminator are then transformed by the &lt;code&gt;value&lt;/code&gt; function and then reduced into a single value with the &lt;code&gt;reduce&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6999a7cb9bcdea0778f59b040581248cf91af66e" translate="yes" xml:space="preserve">
          <source>Partitions this immutable sequence into a map of immutable sequences according to a discriminator function &lt;code&gt;key&lt;/code&gt;. Each element in a group is transformed into a value of type &lt;code&gt;B&lt;/code&gt; using the &lt;code&gt;value&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10d4e75f622c2afa68a63e689f1df803cefdf425" translate="yes" xml:space="preserve">
          <source>Partitions this immutable sequence into a map of immutable sequences according to some discriminator function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="122b4a14e89d4d92d45c2f9f135093d301f70de2" translate="yes" xml:space="preserve">
          <source>Partitions this iterable collection into a map according to a discriminator function &lt;code&gt;key&lt;/code&gt;. All the values that have the same discriminator are then transformed by the &lt;code&gt;value&lt;/code&gt; function and then reduced into a single value with the &lt;code&gt;reduce&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e58b28720a79a063423db2273f3b5f0e2ba7620" translate="yes" xml:space="preserve">
          <source>Partitions this iterable collection into a map of iterable collections according to a discriminator function &lt;code&gt;key&lt;/code&gt;. Each element in a group is transformed into a value of type &lt;code&gt;B&lt;/code&gt; using the &lt;code&gt;value&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebeeb88e04776e1b0928b89f8f33213f881642f2" translate="yes" xml:space="preserve">
          <source>Partitions this iterable collection into a map of iterable collections according to some discriminator function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b08d1492546dc79d9e2cac20c91effd5b555b3e" translate="yes" xml:space="preserve">
          <source>Partitions this iterator in two iterators according to a predicate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5841c7665fcbe3e6f84d95029cc911d977e24eb0" translate="yes" xml:space="preserve">
          <source>Partitions this view into a map according to a discriminator function &lt;code&gt;key&lt;/code&gt;. All the values that have the same discriminator are then transformed by the &lt;code&gt;value&lt;/code&gt; function and then reduced into a single value with the &lt;code&gt;reduce&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7df2be985c33f8c1b74f0f934b691d5cc16b36f" translate="yes" xml:space="preserve">
          <source>Partitions this view into a map of views according to a discriminator function &lt;code&gt;key&lt;/code&gt;. Each element in a group is transformed into a value of type &lt;code&gt;B&lt;/code&gt; using the &lt;code&gt;value&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc2ff598662958755199ace27204027c8c3342f7" translate="yes" xml:space="preserve">
          <source>Partitions this view into a map of views according to some discriminator function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44d7aa4907bda4f6ef190e4ab51a32b398f6a5e8" translate="yes" xml:space="preserve">
          <source>Pass a different value for rethrow if you want to probably unwisely allow catching control exceptions and other throwables which the rest of the world may expect to get through.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="541e1b8e4e443bce103a996d1c1d6ae3cc23e9bb" translate="yes" xml:space="preserve">
          <source>Patching at negative indices is the same as patching starting at 0. Patching at indices at or larger than the length of the original immutable sequence appends the patch to the end. If more values are replaced than actually exist, the excess is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fb1086b08c07aebac01006b033b662f078b16a3" translate="yes" xml:space="preserve">
          <source>Patching at negative indices is the same as patching starting at 0. Patching at indices at or larger than the length of the original lazy list appends the patch to the end. If more values are replaced than actually exist, the excess is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3e3b9245aca636660f742511ec34b21b17b8b62" translate="yes" xml:space="preserve">
          <source>Patching at negative indices is the same as patching starting at 0. Patching at indices at or larger than the length of the original sequence appends the patch to the end. If more values are replaced than actually exist, the excess is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0309835ff16950c3798db2c467e0dfbd2b71da09" translate="yes" xml:space="preserve">
          <source>Patching at negative indices is the same as patching starting at 0. Patching at indices at or larger than the length of the original string appends the patch to the end. If more values are replaced than actually exist, the excess is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f6087dbf1a2713ba126a6ec3754de13ee0d280b" translate="yes" xml:space="preserve">
          <source>Pattern matching the &lt;code&gt;Match&lt;/code&gt; against the &lt;code&gt;Regex&lt;/code&gt; that created it does not reapply the &lt;code&gt;Regex&lt;/code&gt;. In the expression for &lt;code&gt;reformatted&lt;/code&gt;, each &lt;code&gt;date&lt;/code&gt; match is computed once. But it is possible to apply a &lt;code&gt;Regex&lt;/code&gt; to a &lt;code&gt;Match&lt;/code&gt; resulting from a different pattern:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63c904559993935c470f516c8b549ca7f3640dbb" translate="yes" xml:space="preserve">
          <source>Performance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c66688586872f3828be82b5dfeade06ce2b948c0" translate="yes" xml:space="preserve">
          <source>Performs a tailcall</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fc7844e3ff5e8b9c76b718451438e2319318f38" translate="yes" xml:space="preserve">
          <source>Performs an operation using a &lt;code&gt;Manager&lt;/code&gt;, then closes the &lt;code&gt;Manager&lt;/code&gt;, releasing its resources (in reverse order of acquisition).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="940ffd198e986ce6132265c20498ac25934e15a1" translate="yes" xml:space="preserve">
          <source>Performs an operation using a resource, and then releases the resource, even if the operation throws an exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db47bf9e481a2e50fd4d768fff89b35d8e61aa01" translate="yes" xml:space="preserve">
          <source>Performs an operation using a resource, and then releases the resource, even if the operation throws an exception. This method behaves similarly to Java's try-with-resources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b365252fd27a7e4322f42d6897bd7f2ea4e011f7" translate="yes" xml:space="preserve">
          <source>Performs an operation using four resources, and then releases the resources in reverse order, even if the operation throws an exception. This method behaves similarly to Java's try-with-resources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e5db2af73eb0bbb590aef7e7f1fe7a10daac76d" translate="yes" xml:space="preserve">
          <source>Performs an operation using three resources, and then releases the resources in reverse order, even if the operation throws an exception. This method behaves similarly to Java's try-with-resources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4ca8d177c2e96c2b01a2fd69e87f2c7665e5ffe" translate="yes" xml:space="preserve">
          <source>Performs an operation using two resources, and then releases the resources in reverse order, even if the operation throws an exception. This method behaves similarly to Java's try-with-resources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a57bc8d81703fbcf5660e549c2611d67f425145" translate="yes" xml:space="preserve">
          <source>PhantomReference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57b16243d16d9f3f709c528cee580ac35d964427" translate="yes" xml:space="preserve">
          <source>PhantomReference.PhantomReference()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3209fd9f15c7ebcedcb6377ad89cf06a41086119" translate="yes" xml:space="preserve">
          <source>PhantomReference.scala</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7faa3174508a5d022e8b8d740d24abb722a78b30" translate="yes" xml:space="preserve">
          <source>PhantomReference.underlying()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a73a50e07f30a41b64d6a68f910879d57e733ed" translate="yes" xml:space="preserve">
          <source>Place a value in the SyncVar. If the SyncVar already has a stored value, wait until another thread takes it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1a00f89b7fa1523aa570b2111a970daa2ea83a8" translate="yes" xml:space="preserve">
          <source>Platform$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21d55727a921ab16a8f4d1d32d99d021857d97dc" translate="yes" xml:space="preserve">
          <source>Platform.scala</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89e3ef7874e822ad70a22bb1cd5aa7f514928ef5" translate="yes" xml:space="preserve">
          <source>Pop all elements from this stack and return it</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf1c85adba548e8d681255278976584a7e4a44de" translate="yes" xml:space="preserve">
          <source>Position</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efe5d7814cfa467492edd5eded64fc5d610d07f7" translate="yes" xml:space="preserve">
          <source>Positioner</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="847238f4f256b26a3c220d521d5ee2cb10f8fb31" translate="yes" xml:space="preserve">
          <source>Predef provides type aliases for types which are commonly used, such as the immutable collection types &lt;a href=&quot;collection/immutable/map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;scala.collection.immutable.Map&lt;/a&gt;, &lt;a href=&quot;collection/immutable/set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;scala.collection.immutable.Set&lt;/a&gt;, and the &lt;a href=&quot;collection/immutable/list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;scala.collection.immutable.List&lt;/a&gt; constructors (&lt;a href=&quot;collection/immutable/%24colon%24colon&quot; id=&quot;scala.collection.immutable.::&quot; name=&quot;scala.collection.immutable.::&quot;&gt;scala.collection.immutable.::&lt;/a&gt; and &lt;a href=&quot;collection/immutable/nil%24&quot; id=&quot;scala.collection.immutable.Nil&quot; name=&quot;scala.collection.immutable.Nil&quot;&gt;scala.collection.immutable.Nil&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f282daf6fef39d4d6fd9c7e096d2f66d2e966562" translate="yes" xml:space="preserve">
          <source>Predef$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="843a4f819d13434deae1b71506c4c3361762357f" translate="yes" xml:space="preserve">
          <source>Predef$.$conforms()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63049f4b61748e3eae6c127d3310897b770b3bde" translate="yes" xml:space="preserve">
          <source>Predef$.-&amp;gt;()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f38378b6804dc4f6fbca033c35da1eab7edb4edf" translate="yes" xml:space="preserve">
          <source>Predef$.???()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da497b1e6270a26234ec027518e972a0381f4ad0" translate="yes" xml:space="preserve">
          <source>Predef$.ArrayCharSequence</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="967d8b195db09acad4104b1b5024f55ae2902781" translate="yes" xml:space="preserve">
          <source>Predef$.ArrayCharSequence()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a23845ed52046d146f0bcd6e63ca6101aa2c4981" translate="yes" xml:space="preserve">
          <source>Predef$.ArrayCharSequence.ArrayCharSequence()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffcc29c94f72ca99b21952f2a18016a11ea8105a" translate="yes" xml:space="preserve">
          <source>Predef$.ArrayCharSequence.charAt()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19bbe12e2d59c03a88822b934b7ced3de6d7c04a" translate="yes" xml:space="preserve">
          <source>Predef$.ArrayCharSequence.length()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="906d508a24e88b040f584393a2b7e05c60291128" translate="yes" xml:space="preserve">
          <source>Predef$.ArrayCharSequence.subSequence()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99f0d47748f9f78490fb7cb73d6a0c0e2c3a55d1" translate="yes" xml:space="preserve">
          <source>Predef$.ArrayCharSequence.toString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e86cb5db8fde4fbddfa3dd883d763a208093dd69" translate="yes" xml:space="preserve">
          <source>Predef$.ArrowAssoc</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12b4c9310b24ddd0c53181b56ca3ca2d6ec2b616" translate="yes" xml:space="preserve">
          <source>Predef$.ArrowAssoc()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5fd55f8d2c583961ed41300f009a613eaf92a8d" translate="yes" xml:space="preserve">
          <source>Predef$.ArrowAssoc.-&amp;gt;()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cb721b07ec2113dabf8da2c13f6dbe2c26d0913" translate="yes" xml:space="preserve">
          <source>Predef$.ArrowAssoc.ArrowAssoc()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbebdfe11f467afd8de2ef00726b150165211e18" translate="yes" xml:space="preserve">
          <source>Predef$.Boolean2boolean()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cca91f9ded4948241b173c34d56403729893ec6" translate="yes" xml:space="preserve">
          <source>Predef$.Byte2byte()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4fb974725446c04bdd94a9b1db88311de6e88ea" translate="yes" xml:space="preserve">
          <source>Predef$.Character2char()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66fdbf5700dc0d02d2f586d01899cd51b3148b85" translate="yes" xml:space="preserve">
          <source>Predef$.Class()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b4d00e0c80f4b63e7418b3c1c05c7e02f7517eb" translate="yes" xml:space="preserve">
          <source>Predef$.Double2double()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e83da7148e05a63938800a52ef1be13e8222fd35" translate="yes" xml:space="preserve">
          <source>Predef$.Ensuring</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aaaf4ec4b5149096e78a1be356037166affdfb7" translate="yes" xml:space="preserve">
          <source>Predef$.Ensuring()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4636d2789a6267872cca9288570783e409f191f3" translate="yes" xml:space="preserve">
          <source>Predef$.Ensuring.Ensuring()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79d1139c1fe8647ab97850da49ea320c52951266" translate="yes" xml:space="preserve">
          <source>Predef$.Ensuring.ensuring()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d6d600696a506bf52f70d2bfceef8a56375578b" translate="yes" xml:space="preserve">
          <source>Predef$.Float2float()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eece0c8bfb64e5248ae969a263e7b4cf25168d7b" translate="yes" xml:space="preserve">
          <source>Predef$.Function()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec097a118568d870f94d5e6c4a2fb9c6b024b7b9" translate="yes" xml:space="preserve">
          <source>Predef$.Integer2int()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="480dc5ee7de175866012c80f9ed3fcaaf00291ea" translate="yes" xml:space="preserve">
          <source>Predef$.Long2long()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1abdcc2d7a6998773d1e55ed90e5ff371085fbf2" translate="yes" xml:space="preserve">
          <source>Predef$.Manifest()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27f4768041e5eb19af0b3d3ec196e5053f007fc9" translate="yes" xml:space="preserve">
          <source>Predef$.Map()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bfd603aaaa3b0a5ee4c97b702009adf6f04ab9b" translate="yes" xml:space="preserve">
          <source>Predef$.NoManifest()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cae634b0ef95e9cd6206d2629f8bc044d443e8a3" translate="yes" xml:space="preserve">
          <source>Predef$.OptManifest()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8e45a35fbe577bf7e257ee225279100556da3eb" translate="yes" xml:space="preserve">
          <source>Predef$.SeqCharSequence</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f498330e2d91f3d2c260c060dfb1bfb63dcf3ba8" translate="yes" xml:space="preserve">
          <source>Predef$.SeqCharSequence()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b0459835ca490aacbbb286aae97f25b7cd3de68" translate="yes" xml:space="preserve">
          <source>Predef$.SeqCharSequence.SeqCharSequence()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3f28c0ddb93b5767a35aac4447a833734901cd3" translate="yes" xml:space="preserve">
          <source>Predef$.SeqCharSequence.charAt()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4d8caebb0020e6b8d823f480d6e35c8444eec31" translate="yes" xml:space="preserve">
          <source>Predef$.SeqCharSequence.length()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8376ef5d0533a645cbd37d70cba65c49e34c95e3" translate="yes" xml:space="preserve">
          <source>Predef$.SeqCharSequence.subSequence()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71f75c22d9cd0bf8686c544d3d9fa05b4250b632" translate="yes" xml:space="preserve">
          <source>Predef$.SeqCharSequence.toString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70fe2af32d19d02c7f2136a3c58bf1feac51334a" translate="yes" xml:space="preserve">
          <source>Predef$.Set()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b9b5caac347b9d3b0efce5bf3ace61c823fc17a" translate="yes" xml:space="preserve">
          <source>Predef$.Short2short()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4325ec34ac558f0f798ede1b96209754b81a03e5" translate="yes" xml:space="preserve">
          <source>Predef$.String()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e55ebdd8752df02e806ec969d208e2ad67fb858b" translate="yes" xml:space="preserve">
          <source>Predef$.StringFormat</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b911302596bd4d27d8d211027e1384e26e63a938" translate="yes" xml:space="preserve">
          <source>Predef$.StringFormat()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c42c49927bad6f86a21eab17694562d1a2c9234c" translate="yes" xml:space="preserve">
          <source>Predef$.StringFormat.StringFormat()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de6546fa10ee2970253bac7e1f4df26072f66b05" translate="yes" xml:space="preserve">
          <source>Predef$.StringFormat.formatted()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ada2c4cfb0f32944470e20cdb23524a984d969c7" translate="yes" xml:space="preserve">
          <source>Predef$.any2stringadd</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dd19c0e7b9add58c5aa4c2ab4ad9575731f858c" translate="yes" xml:space="preserve">
          <source>Predef$.any2stringadd()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7bec52aad804b2f214f71308174a96c42b7f239" translate="yes" xml:space="preserve">
          <source>Predef$.any2stringadd.+()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="075930f787bb87a7d0f2cf82eea162079a1da064" translate="yes" xml:space="preserve">
          <source>Predef$.any2stringadd.any2stringadd()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8471cb3c7a0369a899ccf2c888c72d27c36b06c5" translate="yes" xml:space="preserve">
          <source>Predef$.assert()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="320b3997029257c7b1d86ffc80bfba9217e41a4c" translate="yes" xml:space="preserve">
          <source>Predef$.assume()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0167dbbdce92ab125e2a6530ed595cedda52621f" translate="yes" xml:space="preserve">
          <source>Predef$.augmentString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f95674ad91953e1f6d2a0d844b6d3c70e45623c7" translate="yes" xml:space="preserve">
          <source>Predef$.boolean2Boolean()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79b79d3abfebea4c51969854cdb2382aa780576e" translate="yes" xml:space="preserve">
          <source>Predef$.booleanArrayOps()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed3dc411252ee0336f581051d4a7bba683ff86c9" translate="yes" xml:space="preserve">
          <source>Predef$.byte2Byte()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9886c300ff6459894647f13d43cd897b3b1d16b6" translate="yes" xml:space="preserve">
          <source>Predef$.byteArrayOps()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab04f9370e8a8f842cc72bdea311f7d95d6c987a" translate="yes" xml:space="preserve">
          <source>Predef$.char2Character()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82a9916e4964c1195467885570d792f33e4b3614" translate="yes" xml:space="preserve">
          <source>Predef$.charArrayOps()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e268f0577a7d0ecb52b1735b026e87971c04b558" translate="yes" xml:space="preserve">
          <source>Predef$.classOf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6026cfbbe94f639c26e578a9402254d2a98ce324" translate="yes" xml:space="preserve">
          <source>Predef$.double2Double()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84d46943ba59fc509b386c80d5dc9a63535969ea" translate="yes" xml:space="preserve">
          <source>Predef$.doubleArrayOps()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de34c07d7955bb894717bfb4a84f74045a2110ba" translate="yes" xml:space="preserve">
          <source>Predef$.float2Float()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc8bc57412a234b91894d1a984b8e5264577fa5e" translate="yes" xml:space="preserve">
          <source>Predef$.floatArrayOps()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b182fa6c3fdc096e9c3ffec82a47bcbc8cbaa2ad" translate="yes" xml:space="preserve">
          <source>Predef$.genericArrayOps()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec6b65ab4df7d2eaf14f9bf4c777255344943c69" translate="yes" xml:space="preserve">
          <source>Predef$.identity()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6647488adfb5f7b607b2e2f56e50704c0457ded6" translate="yes" xml:space="preserve">
          <source>Predef$.implicitly()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc06b818a199794b09f778f3d73cb9770b3627a9" translate="yes" xml:space="preserve">
          <source>Predef$.int2Integer()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d32dd19b006f94214efcaaae2f2991f5061fb529" translate="yes" xml:space="preserve">
          <source>Predef$.intArrayOps()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="267eb0ce3fb76399c54de100f0086afb4090fdab" translate="yes" xml:space="preserve">
          <source>Predef$.locally()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98a997f7120c6fd7c858355257db31c914d9c3a1" translate="yes" xml:space="preserve">
          <source>Predef$.long2Long()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7397ba71c9a72b6c34b2541225a9aacf39f483bd" translate="yes" xml:space="preserve">
          <source>Predef$.longArrayOps()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76b4f1363ab9d0b1587b6443a6c97de192325b91" translate="yes" xml:space="preserve">
          <source>Predef$.manifest()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce51cd580f2ce87d70ed2fde02890c47b9e128dc" translate="yes" xml:space="preserve">
          <source>Predef$.optManifest()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a2d88a2da39fba52a5b13c435bdc0d1e8da7f0d" translate="yes" xml:space="preserve">
          <source>Predef$.print()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae0ba40b87c3db447039a0415f4cca713e09f2c4" translate="yes" xml:space="preserve">
          <source>Predef$.printf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc67cfbe9e98a3c9e25b1c86ec29ef97423e3f82" translate="yes" xml:space="preserve">
          <source>Predef$.println()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5762db68798f32790f0b18d3f74f4ac62127ae88" translate="yes" xml:space="preserve">
          <source>Predef$.refArrayOps()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd2a0e6a0ba84a4658ba6983d34b560fc1520ba4" translate="yes" xml:space="preserve">
          <source>Predef$.require()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a28ff12106d63e60ca32543c192635fc772ac046" translate="yes" xml:space="preserve">
          <source>Predef$.short2Short()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26bcd25af0c47b8d77f4dc53656b0b9af1ed0401" translate="yes" xml:space="preserve">
          <source>Predef$.shortArrayOps()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f91fbb187bbcbc4e8de0847a7cf588c798f9901" translate="yes" xml:space="preserve">
          <source>Predef$.unitArrayOps()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e50d65731638b037ac24b0e282122ff51fc824d" translate="yes" xml:space="preserve">
          <source>Predef$.valueOf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0a543f7546903cb6f2fc54275b7cdca81edc218" translate="yes" xml:space="preserve">
          <source>Predef.scala</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eee28bfd739e1debf4d3b892d013537ae16da9f" translate="yes" xml:space="preserve">
          <source>Predicate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36fb966f7ebe6f0a8b2581e0947f5e2d0deb3db6" translate="yes" xml:space="preserve">
          <source>Predicate on throwables determining when to rethrow a caught &lt;a href=&quot;../../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;Throwable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e1cd1d68d295f28fb5c8a1002a3d64794be000a" translate="yes" xml:space="preserve">
          <source>Prepended</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c0fd6b6d3793c2f13c830f571e608876484a994" translate="yes" xml:space="preserve">
          <source>Prepends a single element at the front of this array buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce5f1cc8adaa7e461bb8ce5b7ea04a81040652be" translate="yes" xml:space="preserve">
          <source>Prepends a single element at the front of this array deque.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="644a449afa0624f386929fc28793668d00864ba5" translate="yes" xml:space="preserve">
          <source>Prepends a single element at the front of this list buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04f8ed3cbb49ad2078bda32630cd56fb839d5b0d" translate="yes" xml:space="preserve">
          <source>Prepends a single element at the front of this shrinkable collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9beb91b32e60800f34dc3ec6f02698c0d829bb7" translate="yes" xml:space="preserve">
          <source>Prepends a single element at the front of this unrolled buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdefa4139c9ac0a30497a97d1cfe924a65a266d8" translate="yes" xml:space="preserve">
          <source>Prepends the elements of this buffer to a given list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd1df1466efc39052623581581f1475d601a47a5" translate="yes" xml:space="preserve">
          <source>Print and flush formatted text to the default output, and read a full line from the default input. Returns &lt;code&gt;null&lt;/code&gt; if the end of the input stream has been reached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bd92b2485e46dd032e9de5b49fb800a4b4ed6b9" translate="yes" xml:space="preserve">
          <source>PrintStream to use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8a6bda16e95431b4a083d79e6560651f7f1dc49" translate="yes" xml:space="preserve">
          <source>PrintStream to use (optional: defaults to &lt;code&gt;Console.err&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb0d66fb5f1fb7c2a8732d2e70479409d6cb7a42" translate="yes" xml:space="preserve">
          <source>PrintStream to use (optional: defaults to &lt;code&gt;Console.out&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fad04f6c6e584216fb145dfde57abfa2b68ec42b" translate="yes" xml:space="preserve">
          <source>Prints an object to &lt;code&gt;out&lt;/code&gt; using its &lt;code&gt;toString&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8cb8cc926bbb950dd5b8dcc79ddcb2d5ddd5aad" translate="yes" xml:space="preserve">
          <source>Prints its arguments as a formatted string to the default output, based on a string pattern (in a fashion similar to printf in C).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6ae9cf7189ee38b16262497de345faf61790df6" translate="yes" xml:space="preserve">
          <source>Prints out an object to the default output, followed by a newline character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e896a0bcbcc81505dacd37aafcb3fcd0b3b47a5" translate="yes" xml:space="preserve">
          <source>Prior to Scala 2.10, &lt;code&gt;AnyVal&lt;/code&gt; was a sealed trait. Beginning with Scala 2.10, however, it is possible to define a subclass of &lt;code&gt;AnyVal&lt;/code&gt; called a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20e85101c2c32a5de3c0bd222f28d0d17b6e9eda" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="200fea2a2cb7c12362de672527befbcec0fd41d4" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsJavaBooleanSupplier()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2984504281a6dd1a4a38b4f4bf261bcd8f1efeef" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsJavaDoubleBinaryOperator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f418c8c70136128c927c4b80ba9adc7799936d02" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsJavaDoubleConsumer()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dabebbff646cdd58f1a415c9a16179d08889314" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsJavaDoublePredicate()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ed3071fd118cfe5ca2ca0b7429645b8a4685d0c" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsJavaDoubleSupplier()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a3d2aa4550ceabfb0fd2d1836e5c10af4e97d8a" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsJavaDoubleToIntFunction()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a3103f37f7c62e3d396df6648e83fd44a71d04b" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsJavaDoubleToLongFunction()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="820f46a5a534a46e8fa0bd1cc10c81a2b1a15e36" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsJavaDoubleUnaryOperator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa65f02c2a5e1e433f8ae64676a536bccbd77f08" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsJavaIntBinaryOperator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f135106c814f3c22087bd9abf4e83a5c60efd634" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsJavaIntConsumer()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf88e1dce94e105725e912ab23792f8564d8e98f" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsJavaIntPredicate()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a0292e5a373cb81e91bde9ecfa56a6ad8602230" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsJavaIntSupplier()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="230542a2b7e0e5fe1b2e5a7c00d49185b7d934bb" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsJavaIntToDoubleFunction()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8f399d3a311ab066b6e33f006bc0ef70e89a505" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsJavaIntToLongFunction()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6afce858896bc487cc368607db04a686e3b0378a" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsJavaIntUnaryOperator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea1b734948ebb0e16a08868ad38941d6e6c3cc92" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsJavaLongBinaryOperator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="117cd9ee9a6d9fb2a469b1df4932a3e4862d015a" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsJavaLongConsumer()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d36c2d430752704f22f156dafad81414a236c6a5" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsJavaLongPredicate()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2db85443fdee3a6b629e8b7f70d8e75b13012c43" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsJavaLongSupplier()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e665bc08f021269340e443f4787583dfed395667" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsJavaLongToDoubleFunction()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f9cfe8dcc7c588fd0f3b6650b73cf88d5be5f4a" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsJavaLongToIntFunction()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c45cc385f9dde4c517edbf7aa99948879ac771ed" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsJavaLongUnaryOperator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff5d5a568fe019739b83d904eedbaff5cfdc649e" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsScalaFromBiConsumer()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bedd81436e02133dbc25bdfa67c64eef202fad3f" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsScalaFromBiFunction()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f4b34969e206ce57ce6a2c54c34bdc7bf415e56" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsScalaFromBiPredicate()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07fb09cdc3ba87fc171e88af4f20f1309e027756" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsScalaFromBinaryOperator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8694635dda17cdf4792e88d6b7a640005bbfefc5" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsScalaFromBooleanSupplier()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93234f286b89def2434aa12a19ec693d5e886f28" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsScalaFromConsumer()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fbf3fbb02e3bf03cf754ad80def38510a8d4b32" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsScalaFromDoubleBinaryOperator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6698678860574bc05fd5176c4115949d973dcf3" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsScalaFromDoubleConsumer()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87ff36a2093619308ff4f26f4d33f2eb5ae9e569" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsScalaFromDoubleFunction()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eaab5b971241af1a7131cbdaefe14ce37e6cb74" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsScalaFromDoublePredicate()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc85a83f4c9758f5e977d11868fcd2ccb5180260" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsScalaFromDoubleSupplier()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0894721c78524e0e60e9a0b1088daa5fd6b3cbaf" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsScalaFromDoubleToIntFunction()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="462b21f4d254ce2867633a73666878499651d254" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsScalaFromDoubleToLongFunction()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c06c52b666727e75e5d37276b8427447cd18ef3" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsScalaFromDoubleUnaryOperator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b19d093d1f3d22a0446fb4242d8bf4af0e6f4b13" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsScalaFromFunction()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2659b252b66b94a4ebb229055aeb5ccf9ed27c7a" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsScalaFromIntBinaryOperator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0feaf6e8851791b423bdf794941bf2dec23499e" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsScalaFromIntConsumer()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34dc82a6caa637e1c4bd400e66eb6ca97cf5d12f" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsScalaFromIntFunction()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed589d607a42cfa64b5fe7c39d00aaf7235eb862" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsScalaFromIntPredicate()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e097fbfb59a1046387ab171e8d7a3c7608d10f2" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsScalaFromIntSupplier()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b250ca5d7b4711435d05d98b271a136ac4682186" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsScalaFromIntToDoubleFunction()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d03a2c54abfcf26ac32592d59eb6e10aee9e2cd5" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsScalaFromIntToLongFunction()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0c733792409543fbdc34dbac7891300679df489" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsScalaFromIntUnaryOperator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34bfac73bc301c7e2c2a2c4edbc63e7b32e4bab3" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsScalaFromLongBinaryOperator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f1b063d1c3fcda83a602a0f6c771242125eb386" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsScalaFromLongConsumer()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a2022b23fe89f2874df205a526b51f960cb37ae" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsScalaFromLongFunction()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fd68541b00a9e134c82b96b2d95f09a20e485f1" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsScalaFromLongPredicate()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f77da1aeac4b0fc1114adb005494c9bc5c9d59a" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsScalaFromLongSupplier()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ddab7ac618739f3affd64467105bbdc7a0e4fac" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsScalaFromLongToDoubleFunction()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3861e869b4a28786501bd0fc25f7f28117787fdb" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsScalaFromLongToIntFunction()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d61fddf9cfc2cb6fcd29b68d708205578a81f2c7" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsScalaFromLongUnaryOperator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="309940374a5202e4d302e2d9861407e112c664ec" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsScalaFromObjDoubleConsumer()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="105d6b4b2478a5f299557064e2a78ffc957ff208" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsScalaFromObjIntConsumer()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2280d6720b8c5e9dfc2976f92e5e09b55dbbcd3" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsScalaFromObjLongConsumer()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33e21639f1e5db6b33a58bdbda1fa51ed582f542" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsScalaFromPredicate()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bc2b249b8b646f99d89cb337c5d774ad9f2c6c8" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsScalaFromSupplier()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42ca795aa3d4417fac1981c6c0d663c6970ed71d" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsScalaFromToDoubleBiFunction()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c273556feb1f466898f9585c1acddbfb6be54199" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsScalaFromToDoubleFunction()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abee6828568062e30b92b2a0546d3fc72b3d7d89" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsScalaFromToIntBiFunction()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="618bf7665435d497b5edc053bbe83b1b24f80435" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsScalaFromToIntFunction()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="815c1643750d85528c1d8076b6d018106e6f5108" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsScalaFromToLongBiFunction()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="121e159b43d3292e07f9cd1c2d8b43bd3e97ad66" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsScalaFromToLongFunction()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fda2e303286c22a44c7c022beb9bab2eb968274b" translate="yes" xml:space="preserve">
          <source>Priority0FunctionExtensions.enrichAsScalaFromUnaryOperator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="839fb6d0bc5e6706b644195e4e9509133ca77706" translate="yes" xml:space="preserve">
          <source>Priority1FunctionExtensions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef617eb20892db6093b7d61bdfb637c9a206bc41" translate="yes" xml:space="preserve">
          <source>Priority1FunctionExtensions.enrichAsJavaBinaryOperator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a49e7e01352b07cbd027ad96ddb2f28169a0935c" translate="yes" xml:space="preserve">
          <source>Priority1FunctionExtensions.enrichAsJavaConsumer()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="260e0123e673c0d3659919579585a1983a4d630a" translate="yes" xml:space="preserve">
          <source>Priority1FunctionExtensions.enrichAsJavaDoubleFunction()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9541803a4481d99f7d2310c957945435b3c1f046" translate="yes" xml:space="preserve">
          <source>Priority1FunctionExtensions.enrichAsJavaIntFunction()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02a44afe7052daa6eed25f63c075272428101048" translate="yes" xml:space="preserve">
          <source>Priority1FunctionExtensions.enrichAsJavaLongFunction()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73a482e5ade2942e54a1b983e3c68c49978dbf70" translate="yes" xml:space="preserve">
          <source>Priority1FunctionExtensions.enrichAsJavaObjDoubleConsumer()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9c9a9a8ff6f741249472d411c794f628feb0115" translate="yes" xml:space="preserve">
          <source>Priority1FunctionExtensions.enrichAsJavaObjIntConsumer()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cb697dd8ee793bf1d38faf25da867f956246f0a" translate="yes" xml:space="preserve">
          <source>Priority1FunctionExtensions.enrichAsJavaObjLongConsumer()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f22f369c866225a9598b697597461f14b7384ac4" translate="yes" xml:space="preserve">
          <source>Priority1FunctionExtensions.enrichAsJavaPredicate()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="385d612cc58b646a10d0480b87288c2b21c9c28d" translate="yes" xml:space="preserve">
          <source>Priority1FunctionExtensions.enrichAsJavaSupplier()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27caea1f304823af641f769fb2361222697b3918" translate="yes" xml:space="preserve">
          <source>Priority1FunctionExtensions.enrichAsJavaToDoubleFunction()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c52e4f93d0423bc7bca8a5ecc11a8ce573ce6ed" translate="yes" xml:space="preserve">
          <source>Priority1FunctionExtensions.enrichAsJavaToIntFunction()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d0a469a096cfe86c4361be560d9eab7f87d2449" translate="yes" xml:space="preserve">
          <source>Priority1FunctionExtensions.enrichAsJavaToLongFunction()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92f462910e4de4139f995d65f2a49c888b4093f3" translate="yes" xml:space="preserve">
          <source>Priority1FunctionExtensions.enrichAsJavaUnaryOperator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaff0e5094389f5dee3b371c1cc3cca4e457a77e" translate="yes" xml:space="preserve">
          <source>Priority2FunctionExtensions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35c7a12ecd046264773768413a487952d5bc546d" translate="yes" xml:space="preserve">
          <source>Priority2FunctionExtensions.enrichAsJavaBiConsumer()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5053ec5383ccd4eadd9cc9e005dc9f34b05f22d" translate="yes" xml:space="preserve">
          <source>Priority2FunctionExtensions.enrichAsJavaBiPredicate()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24fbbbcfcfe0c0a3c96ecfbba62bd7b6ca55ad78" translate="yes" xml:space="preserve">
          <source>Priority2FunctionExtensions.enrichAsJavaFunction()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5afb62616dbb83f799ed6fa459e50fb35d6d5ec" translate="yes" xml:space="preserve">
          <source>Priority2FunctionExtensions.enrichAsJavaToDoubleBiFunction()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56d6dcf31b4bba412138ec8f584432c9e72e739d" translate="yes" xml:space="preserve">
          <source>Priority2FunctionExtensions.enrichAsJavaToIntBiFunction()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d4a3bd25202f0f2e014151621f182d498a620c3" translate="yes" xml:space="preserve">
          <source>Priority2FunctionExtensions.enrichAsJavaToLongBiFunction()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f5da92907a4c383636d711fda3b2f0e3007d12d" translate="yes" xml:space="preserve">
          <source>Priority3FunctionExtensions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd2a8be410833b138c560afa2cd8f493cfce7f83" translate="yes" xml:space="preserve">
          <source>Priority3FunctionExtensions.enrichAsJavaBiFunction()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03d0bc625ddec3be511b7a604cf03963963b5cbf" translate="yes" xml:space="preserve">
          <source>PriorityQueue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="937f1f7f6897bb87a00be18bba4a8d254b4e698d" translate="yes" xml:space="preserve">
          <source>PriorityQueue$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b180033ef793704f52e6d7ddb309c2b089d003cc" translate="yes" xml:space="preserve">
          <source>PriorityQueue$.empty()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3ac786a9cba886ce5defab604508f0f0ff8c650" translate="yes" xml:space="preserve">
          <source>PriorityQueue$.from()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da0f3f6e2e0e2e28b1d4d9a3769d7aa84f2ea35e" translate="yes" xml:space="preserve">
          <source>PriorityQueue$.newBuilder()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="783446d2ec11f61483a7b69d73aad44b1ac7d534" translate="yes" xml:space="preserve">
          <source>PriorityQueue.++()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1f5fd3460e001fb315b11b1ffc5ae6ca7536f7b" translate="yes" xml:space="preserve">
          <source>PriorityQueue.PriorityQueue()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11d081619afcedf7a051d685d40b05744e660cfb" translate="yes" xml:space="preserve">
          <source>PriorityQueue.addAll()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e03527f720a89435bfc6c9f77886a923f52b4e0f" translate="yes" xml:space="preserve">
          <source>PriorityQueue.addOne()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c15fad9180204daa449f90d67328d7fc43be2d3a" translate="yes" xml:space="preserve">
          <source>PriorityQueue.className()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94a6b0d07e38fde4ba46c60c51e434b8002bd470" translate="yes" xml:space="preserve">
          <source>PriorityQueue.clear()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="730a9a20b14554a77b7c697f256ffbac0b573e48" translate="yes" xml:space="preserve">
          <source>PriorityQueue.clone()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7704f706ad05b9eec64daeeabc0e3b39fa09018" translate="yes" xml:space="preserve">
          <source>PriorityQueue.copyToArray()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc050259dd8f4e0d9c1ff35c52ce4fce0f7120da" translate="yes" xml:space="preserve">
          <source>PriorityQueue.dequeue()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b933d3a65183215f3d4164f36bec7a5fc96716f5" translate="yes" xml:space="preserve">
          <source>PriorityQueue.dequeueAll()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45ae2c1102b747088b9425862c90ce48de965b7d" translate="yes" xml:space="preserve">
          <source>PriorityQueue.empty()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99dfaea264a564fd88372c0dc00a07f71179da44" translate="yes" xml:space="preserve">
          <source>PriorityQueue.enqueue()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef93d30ce1df5dca01432dadc43e2a26084e2a6c" translate="yes" xml:space="preserve">
          <source>PriorityQueue.fixDown()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="402a01d89c76a77ac4f505ff8db0beeebe13e681" translate="yes" xml:space="preserve">
          <source>PriorityQueue.fixUp()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab2e1b7ce6d3f3b889a4aa1a603a5a8e30bc950c" translate="yes" xml:space="preserve">
          <source>PriorityQueue.fromSpecific()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2be4526fb70cc292c41f7bc0b1fc2e7203b0d363" translate="yes" xml:space="preserve">
          <source>PriorityQueue.head()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da8e0a39a3505ff20168ea40b2512e62d0b9b7f0" translate="yes" xml:space="preserve">
          <source>PriorityQueue.isEmpty()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b95a3f0913a39d59309f819229b15087f80ab521" translate="yes" xml:space="preserve">
          <source>PriorityQueue.iterator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aaa8309d9dc845987dd2168f04d370711822388" translate="yes" xml:space="preserve">
          <source>PriorityQueue.knownSize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27cf03aeada42205e6b5063f1a5e8ffb7307f3c2" translate="yes" xml:space="preserve">
          <source>PriorityQueue.length()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3cfe686839f6d454d5f88cc8a41b7974eaf88ac" translate="yes" xml:space="preserve">
          <source>PriorityQueue.mapInPlace()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a498d9a44dc4a8dde052b0494eea5f803deb1dbc" translate="yes" xml:space="preserve">
          <source>PriorityQueue.newSpecificBuilder()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a58e5e40bef3c9ec994ddd7ec04a82bbc05b1233" translate="yes" xml:space="preserve">
          <source>PriorityQueue.ord()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1bf58c6b52d3f0d69b16109b78782cd8190cbe4" translate="yes" xml:space="preserve">
          <source>PriorityQueue.result()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c09b323b7632e0645a392a88c8664cf04a8a773" translate="yes" xml:space="preserve">
          <source>PriorityQueue.reverse()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="569816b7220ce65e53c8f182db2b4624698b0dea" translate="yes" xml:space="preserve">
          <source>PriorityQueue.reverseIterator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be075e0dec34767abbeaff1baa25eab9eda2e0d1" translate="yes" xml:space="preserve">
          <source>PriorityQueue.scala</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4444c0796aabeca6a59463233515dff32e38af6" translate="yes" xml:space="preserve">
          <source>PriorityQueue.size()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0c9f6bfd819eb1dbd82938468a4885cea08c47e" translate="yes" xml:space="preserve">
          <source>PriorityQueue.toList()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caf047fa2d7c9973dd6ecd66983020b50275a0c3" translate="yes" xml:space="preserve">
          <source>PriorityQueue.toQueue()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="421636dce1816fdcb3bd4ecea500995485d082c8" translate="yes" xml:space="preserve">
          <source>PriorityQueue.toString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e1d117e32cf723d19210a5ce49da80b43c7e0d5" translate="yes" xml:space="preserve">
          <source>PriorityQueue.writeReplace()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12f4c13a6a06f999cc56eb966c94f71ef2658a3f" translate="yes" xml:space="preserve">
          <source>Process</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9fc5ca745cbf1d7f94be3d10699597751ab7abe" translate="yes" xml:space="preserve">
          <source>Process$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7fa2bdc685344d7d6c55f9146fdce4c53548ca0" translate="yes" xml:space="preserve">
          <source>Process$.apply()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9791d208a3c49a81a873fa0cdf1a594376120c9c" translate="yes" xml:space="preserve">
          <source>Process$.applySeq()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a537cf18d4770ffdc337f7ef7635807d5955eefc" translate="yes" xml:space="preserve">
          <source>Process$.cat()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acdf1a13e4f274a6fe5993899a3b699315471c06" translate="yes" xml:space="preserve">
          <source>Process.destroy()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="122af5efa1a2ebb01e6c39250c286bd440471ea4" translate="yes" xml:space="preserve">
          <source>Process.exitValue()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fdfd2a22a4eb5cc5b59a283e5e8536cc542c8c5" translate="yes" xml:space="preserve">
          <source>Process.isAlive()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b8207314e4df7ad2dbd44b860ca011624951e94" translate="yes" xml:space="preserve">
          <source>Process.scala</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0d42abdeda321c822adae1ed5c6234acb031647" translate="yes" xml:space="preserve">
          <source>ProcessBuilder</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67ca606224e57464808a37c2a34d2da6bb810791" translate="yes" xml:space="preserve">
          <source>ProcessBuilder$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3acbb25cf50f288c9a7e555fdab2cafa7dd5d27" translate="yes" xml:space="preserve">
          <source>ProcessBuilder$.FileBuilder</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="071a91c94c5f5e816d6f024656b7bfab3964221f" translate="yes" xml:space="preserve">
          <source>ProcessBuilder$.FileBuilder()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4af50cd6b5443b5542fc3df62040f529b8c3110" translate="yes" xml:space="preserve">
          <source>ProcessBuilder$.FileBuilder.#&amp;lt;&amp;lt;()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7d2b63caef52a757803a0f3420caa92a69a4b2e" translate="yes" xml:space="preserve">
          <source>ProcessBuilder$.Sink</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb6f27c404e6f8c4873fa366a7e4864fb0b37b8b" translate="yes" xml:space="preserve">
          <source>ProcessBuilder$.Sink()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3a7f68cf446d7ce817c4a3cfcef57b4beb2716e" translate="yes" xml:space="preserve">
          <source>ProcessBuilder$.Sink.#&amp;lt;()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a9cd390173c8013d14afb591e4e6df76fff6d3b" translate="yes" xml:space="preserve">
          <source>ProcessBuilder$.Sink.toSink()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bc3923bb116fc5bae93ba741138019ce3aa229f" translate="yes" xml:space="preserve">
          <source>ProcessBuilder$.Source</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c922b738f227a38a1beab5d842a8a7a024abc70" translate="yes" xml:space="preserve">
          <source>ProcessBuilder$.Source()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="391a267dc9ed4640e4d3db20b397320d42cd1d91" translate="yes" xml:space="preserve">
          <source>ProcessBuilder$.Source.#&amp;gt;&amp;gt;()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a41c8344a63586fd8328e21d34151f3de850337c" translate="yes" xml:space="preserve">
          <source>ProcessBuilder$.Source.#&amp;gt;()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af7665d23bf563558977b25c3d1fd99e8e178f60" translate="yes" xml:space="preserve">
          <source>ProcessBuilder$.Source.cat()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a973df5f18583bd197b6d0daf0bd33f17b148708" translate="yes" xml:space="preserve">
          <source>ProcessBuilder$.Source.toSource()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1798378c20dfd65158bfad5e98dcc20df2f945ad" translate="yes" xml:space="preserve">
          <source>ProcessBuilder$.URLBuilder</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65c6fe66b54ad926dd3831dac3343a86a6263779" translate="yes" xml:space="preserve">
          <source>ProcessBuilder$.URLBuilder()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87a349c9b39c23a743cb75f9d56d01dd5dacf910" translate="yes" xml:space="preserve">
          <source>ProcessBuilder.!!&amp;lt;()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fdbc0a0875ff84ce5126112cdbcf4bcfa19a89a" translate="yes" xml:space="preserve">
          <source>ProcessBuilder.!!()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad7b8c64ed07ec1e13be127aa3125230c7c8e4ce" translate="yes" xml:space="preserve">
          <source>ProcessBuilder.!&amp;lt;()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af78ea86584863082977ef75476e2f26efce7511" translate="yes" xml:space="preserve">
          <source>ProcessBuilder.!()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcc01cc10cdcebc6a924e4e9844194dfddb33767" translate="yes" xml:space="preserve">
          <source>ProcessBuilder.#&amp;amp;&amp;amp;()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0db92d77e69e0cef2890429c1e0a99a6d708eb94" translate="yes" xml:space="preserve">
          <source>ProcessBuilder.#&amp;gt;&amp;gt;()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1bdcec640ec3951240172f2551aef91ca41acea" translate="yes" xml:space="preserve">
          <source>ProcessBuilder.#&amp;gt;()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cf1f67ee004420426d3c4e84e300d30fdf4747c" translate="yes" xml:space="preserve">
          <source>ProcessBuilder.#&amp;lt;()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="614910b23eda7022166350e08c8cf9fef092e067" translate="yes" xml:space="preserve">
          <source>ProcessBuilder.#|()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d474b61c14b8e1becc55241a54c955470de543d9" translate="yes" xml:space="preserve">
          <source>ProcessBuilder.#||()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e24075186a0d7ac5255db56cc84c132fb833f07c" translate="yes" xml:space="preserve">
          <source>ProcessBuilder.canPipeTo()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08d2cf1bcb61df1b39fc3deae20320b8d5de1894" translate="yes" xml:space="preserve">
          <source>ProcessBuilder.cat()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5471e6bd395c2ee342d573ed99e4b3308390fbf2" translate="yes" xml:space="preserve">
          <source>ProcessBuilder.hasExitValue()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1df6495158ce3cd3dd195a326e34b6b51d8eebe3" translate="yes" xml:space="preserve">
          <source>ProcessBuilder.lazyLines()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc70cb749f9d672fad51855b192edf50989ebcd1" translate="yes" xml:space="preserve">
          <source>ProcessBuilder.lazyLines_!()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de9ed2a94d8a54bd912b2c31b05900b5f9ad1a0d" translate="yes" xml:space="preserve">
          <source>ProcessBuilder.run()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92f9fcae5eae22cfa4fbe13dbe85118d6c7784ce" translate="yes" xml:space="preserve">
          <source>ProcessBuilder.scala</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e7025fbf1603cdbd64fb48ef641365046428322" translate="yes" xml:space="preserve">
          <source>ProcessBuilder.toSink()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="630a69acdd3a989b581f03c64653bf347d197505" translate="yes" xml:space="preserve">
          <source>ProcessBuilder.toSource()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3136ea2b201855d9082cfa20190d51ba7fafed02" translate="yes" xml:space="preserve">
          <source>ProcessCreation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8845e43df05cffa15aff735afadc37e330b44098" translate="yes" xml:space="preserve">
          <source>ProcessCreation.apply()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2229bf6cc394814dc1606ff6699b3ada96298d3f" translate="yes" xml:space="preserve">
          <source>ProcessCreation.applySeq()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c188ebcb984a6fd61c1bbb1f87b65edbfa9bbc16" translate="yes" xml:space="preserve">
          <source>ProcessCreation.cat()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6d01a92a2173bd4ff1a3b943ce84244bd392028" translate="yes" xml:space="preserve">
          <source>ProcessIO</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8fa2414868c59e77111c8f8d7b3a2ba2540cca0" translate="yes" xml:space="preserve">
          <source>ProcessIO.ProcessIO()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d089179a431140f6dde82aba33696ecc89cb755" translate="yes" xml:space="preserve">
          <source>ProcessIO.daemonizeThreads()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eb3d66733947bd1ed25699353429d132287ba6b" translate="yes" xml:space="preserve">
          <source>ProcessIO.daemonized()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d6d7097b4be80060ea017a67f01c7c763082c45" translate="yes" xml:space="preserve">
          <source>ProcessIO.processError()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0899921b57a0f425903a28b6d2767b9c1fd53916" translate="yes" xml:space="preserve">
          <source>ProcessIO.processOutput()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4490bc4677894f226fbb6a37b1e6aa0628232c6e" translate="yes" xml:space="preserve">
          <source>ProcessIO.scala</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="404d694bb367dc57686250b5d8fff8e3e6908166" translate="yes" xml:space="preserve">
          <source>ProcessIO.withError()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c33d552a7dc4999be40a8f5f9a0448fc72ca4062" translate="yes" xml:space="preserve">
          <source>ProcessIO.withInput()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1db36fe8be84194e4d901078d311caf608e8fe1" translate="yes" xml:space="preserve">
          <source>ProcessIO.withOutput()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88ea7daf157aa4a4c9e443504bef70ec007e7cf9" translate="yes" xml:space="preserve">
          <source>ProcessIO.writeInput()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08fa01bd571a4876ae9078bc1e30128a4ce7b2dc" translate="yes" xml:space="preserve">
          <source>ProcessImplicits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b937dc34594705bdc301e86d6eebd1e96fefcc9" translate="yes" xml:space="preserve">
          <source>ProcessImplicits.builderToProcess()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29cc29315ff051fea717dac6b6177eab2de0d1e5" translate="yes" xml:space="preserve">
          <source>ProcessImplicits.buildersToProcess()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64607b5b8808835cf7482e11fc038ae7727c8853" translate="yes" xml:space="preserve">
          <source>ProcessImplicits.fileToProcess()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="825c0d19bec8b5b7a8c68f5ab3d2eda5e01e3515" translate="yes" xml:space="preserve">
          <source>ProcessImplicits.stringSeqToProcess()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="182de16c86cf3590156cdea74487ace498202755" translate="yes" xml:space="preserve">
          <source>ProcessImplicits.stringToProcess()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="864e2c90ba325da331f0bcc74f9a21f6c942532a" translate="yes" xml:space="preserve">
          <source>ProcessImplicits.urlToProcess()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a88419230c58ef91265edf2b4690c4d66e5dee14" translate="yes" xml:space="preserve">
          <source>ProcessLogger</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db05a23cd29380dd50ce924864ec7f4cb64e56cc" translate="yes" xml:space="preserve">
          <source>ProcessLogger$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ddae0b5680d165bbb7954b0efc23266834e7af5" translate="yes" xml:space="preserve">
          <source>ProcessLogger$.apply()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b3196f6e9cd630f14cc3af527e851da2c300d88" translate="yes" xml:space="preserve">
          <source>ProcessLogger.buffer()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e622263acfd87e24afcfc12c1b59419c768aff7f" translate="yes" xml:space="preserve">
          <source>ProcessLogger.err()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7e37fb6968569837c11597659db11b3cc77ecfa" translate="yes" xml:space="preserve">
          <source>ProcessLogger.out()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4e07da0c851a9ce6e0278358ed12f387945acf1" translate="yes" xml:space="preserve">
          <source>ProcessLogger.scala</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8f19a3952cb47afb1a8e7fe4d7fc4d069f77acb" translate="yes" xml:space="preserve">
          <source>Produces a &lt;code&gt;ClassTag&lt;/code&gt; that knows how to instantiate an &lt;code&gt;Array[Array[T]]&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5ca29b17a150d31d5df58c00f40e76c8eef821d" translate="yes" xml:space="preserve">
          <source>Produces a collection containing a sequence of increasing of integers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40bf5d4943a64a42ee46940fdddea5ca6f414827" translate="yes" xml:space="preserve">
          <source>Produces a collection containing cumulative results of applying the operator going left to right, including the initial value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="043ad87069619f67e9e23db297e8962d0f4463e2" translate="yes" xml:space="preserve">
          <source>Produces a collection containing cumulative results of applying the operator going right to left. The head of the collection is the last cumulative result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70a3c610c6385abb0a86e86be9f8fcfceac30ad1" translate="yes" xml:space="preserve">
          <source>Produces a collection containing equally spaced values in some integer interval.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1df4cb2a4554dacbf7f14bb18c6797806af3344c" translate="yes" xml:space="preserve">
          <source>Produces a collection containing repeated applications of a function to a start value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="063ec869d2e6cd9088e542ea833af5cb9e702a69" translate="yes" xml:space="preserve">
          <source>Produces a collection containing the results of some element computation a number of times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f24ca1992c5627b777cf89cfeae580e554d1746d" translate="yes" xml:space="preserve">
          <source>Produces a collection containing values of a given function over a range of integer values starting from 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="831ee50bce2aaec9c6375b27a366b89bed7bc06e" translate="yes" xml:space="preserve">
          <source>Produces a collection from the added elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fe63e1b67788d80105219611af6d6fa444967bd" translate="yes" xml:space="preserve">
          <source>Produces a collection that uses a function &lt;code&gt;f&lt;/code&gt; to produce elements of type &lt;code&gt;A&lt;/code&gt; and update an internal state of type &lt;code&gt;S&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4df7e1d5c9fee2a9869b35b54d6a0acd300395d" translate="yes" xml:space="preserve">
          <source>Produces a five-dimensional Accumulator containing the results of some element computation a number of times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="457e67f6f02ca0da41527aecc171c491e86b19cf" translate="yes" xml:space="preserve">
          <source>Produces a five-dimensional Accumulator containing values of a given function over ranges of integer values starting from 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eac88e8888918ceaf2ef29a397dfe322463214b" translate="yes" xml:space="preserve">
          <source>Produces a five-dimensional collection containing the results of some element computation a number of times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ede4cfdafd159cde627da9176c3e1142387fad4f" translate="yes" xml:space="preserve">
          <source>Produces a five-dimensional collection containing values of a given function over ranges of integer values starting from 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46f5bf63db2a97161e22cf33aa314c9cc81c3c71" translate="yes" xml:space="preserve">
          <source>Produces a four-dimensional Accumulator containing the results of some element computation a number of times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9250f7b41faa1eb86837d0fe261c36fd3548fa03" translate="yes" xml:space="preserve">
          <source>Produces a four-dimensional Accumulator containing values of a given function over ranges of integer values starting from 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1ab53cb5ff9daad4c10b368f55ad6ae8c7255e6" translate="yes" xml:space="preserve">
          <source>Produces a four-dimensional collection containing the results of some element computation a number of times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b911c52e87d504bb35c51ca3622dc16865f9bac6" translate="yes" xml:space="preserve">
          <source>Produces a four-dimensional collection containing values of a given function over ranges of integer values starting from 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29a476893a9b97641a852df701473b6c4e713eb3" translate="yes" xml:space="preserve">
          <source>Produces a immutable array containing the results of some element computation a number of times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d5f2b736d8b8ceff99019e13f4d8aa7de1153d4" translate="yes" xml:space="preserve">
          <source>Produces a immutable array containing values of a given function over a range of integer values starting from 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bad332aa7223f1b974c526096f91c05d26811a84" translate="yes" xml:space="preserve">
          <source>Produces a immutable sequence containing cumulative results of applying the operator going left to right, including the initial value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="170cf909163d32eec3f579b64648f5c79f45b939" translate="yes" xml:space="preserve">
          <source>Produces a iterable collection containing cumulative results of applying the operator going left to right, including the initial value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da6c62751febd79e3c44035d652e41cace53d2fb" translate="yes" xml:space="preserve">
          <source>Produces a iterator containing cumulative results of applying the operator going left to right, including the initial value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90c502e3dac05f2bd75ca3d8abb09980171fb6be" translate="yes" xml:space="preserve">
          <source>Produces a lazy list containing cumulative results of applying the operator going left to right, including the initial value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c70921862ac8db084f8d26b0bd13b05f7f1bb38" translate="yes" xml:space="preserve">
          <source>Produces a lazy list containing the results of some element computation a number of times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b958fb232506c4e9f1c28aedd9262897f0b633d" translate="yes" xml:space="preserve">
          <source>Produces a lazy list containing values of a given function over a range of integer values starting from 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b303ed061262b94a6ddfe17130ba00bc6017165" translate="yes" xml:space="preserve">
          <source>Produces a lazy list that uses a function &lt;code&gt;f&lt;/code&gt; to produce elements of type &lt;code&gt;A&lt;/code&gt; and update an internal state of type &lt;code&gt;S&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a905cc04a291bbb6106a13ea22cbd192a2c51358" translate="yes" xml:space="preserve">
          <source>Produces a new array with element type &lt;code&gt;T&lt;/code&gt; and length &lt;code&gt;len&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="844497c47a4288dd37789496b8ee0066ee164c4c" translate="yes" xml:space="preserve">
          <source>Produces a new collection where a slice of characters in this string is replaced by another collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45ad6d3df57283dcc1dcbeab2c4eb9e4ef6cd236" translate="yes" xml:space="preserve">
          <source>Produces a new immutable sequence where a slice of elements in this immutable sequence is replaced by another sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04e42f84a4bd73b8415ec9ea8c15cb9ab5d10520" translate="yes" xml:space="preserve">
          <source>Produces a new lazy list where a slice of elements in this lazy list is replaced by another sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d8ce868d5e1b2f907b8ba29fd845b3c4dd3a8df" translate="yes" xml:space="preserve">
          <source>Produces a new sequence where a slice of elements in this sequence is replaced by another sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1862c3a5b51c3aecefbdebbfe08faa066a6cb56" translate="yes" xml:space="preserve">
          <source>Produces a new string where a slice of characters in this string is replaced by another string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71f681b38d78afc9a154f0821b32c94f32e01195" translate="yes" xml:space="preserve">
          <source>Produces a three-dimensional Accumulator containing the results of some element computation a number of times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8323e0e84d21b98e42b898279a69183f705af33b" translate="yes" xml:space="preserve">
          <source>Produces a three-dimensional Accumulator containing values of a given function over ranges of integer values starting from 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f22f504b2dff702133e9239d080c51c38f68500b" translate="yes" xml:space="preserve">
          <source>Produces a three-dimensional collection containing the results of some element computation a number of times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2b8677b9ee2603987076c5dcb747a91a55012ff" translate="yes" xml:space="preserve">
          <source>Produces a three-dimensional collection containing values of a given function over ranges of integer values starting from 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81408527fc5e7889de5d985f03c7a35e7e42a1f1" translate="yes" xml:space="preserve">
          <source>Produces a two-dimensional Accumulator containing the results of some element computation a number of times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15b3fe420da0921faacae94e243db93d8934b126" translate="yes" xml:space="preserve">
          <source>Produces a two-dimensional Accumulator containing values of a given function over ranges of integer values starting from 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f891043be3dd92463d34bfa797ff1590146ac7ee" translate="yes" xml:space="preserve">
          <source>Produces a two-dimensional collection containing the results of some element computation a number of times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f4438c137a022766c6984b4198ae573147d842c" translate="yes" xml:space="preserve">
          <source>Produces a two-dimensional collection containing values of a given function over ranges of integer values starting from 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f45784b502772d596782dc160b66a62114d21347" translate="yes" xml:space="preserve">
          <source>Produces a view containing cumulative results of applying the operator going left to right, including the initial value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d200847bb2c49c8007c870b63fb2d19b6e9d97f" translate="yes" xml:space="preserve">
          <source>Produces an Accumulator containing a sequence of increasing of integers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b213808845af0862a0c41ec15e8f2bf82763538" translate="yes" xml:space="preserve">
          <source>Produces an Accumulator containing equally spaced values in some integer interval.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a702f8bd876caa586c7b2a5af503526841e93a8" translate="yes" xml:space="preserve">
          <source>Produces an Accumulator containing repeated applications of a function to a start value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11eecdedcd77d8bd64f8536db5955cb495b051d0" translate="yes" xml:space="preserve">
          <source>Produces an Accumulator containing the results of some element computation a number of times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9561fec948242a68582f64e06dffd388018ed1d" translate="yes" xml:space="preserve">
          <source>Produces an Accumulator containing values of a given function over a range of integer values starting from 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34d1d0771be90441546284c7ab9268e44d973174" translate="yes" xml:space="preserve">
          <source>Produces an Accumulator that uses a function &lt;code&gt;f&lt;/code&gt; to produce elements of type &lt;code&gt;A&lt;/code&gt; and update an internal state of type &lt;code&gt;S&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1143d6d5739425f8bb21e8c08c128dc3baa6af0" translate="yes" xml:space="preserve">
          <source>Produces an array containing cumulative results of applying the binary operator going left to right.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6420d7c6379d1c4587f88893eb7984be7a1c6430" translate="yes" xml:space="preserve">
          <source>Produces an array containing cumulative results of applying the binary operator going right to left.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f276906917ec029539eae0c556f6e8892cd26ea1" translate="yes" xml:space="preserve">
          <source>Produces the range of all indices of this sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d17a0865588fa2d5f43a81ad8d18dee64a9b915" translate="yes" xml:space="preserve">
          <source>Produces the range of all indices of this string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd3b86d1ef21b9fb2e1edc30f524e7afb491b1ad" translate="yes" xml:space="preserve">
          <source>Product</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4d6e22a2ed83a0245ed42fc5f325e4c4242c17e" translate="yes" xml:space="preserve">
          <source>Product.productArity()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a6187cadec62d9b44dc99f4c1e8de05ecad2e08" translate="yes" xml:space="preserve">
          <source>Product.productElement()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="602d3a82f268b083294a21971a963bc4521d72d0" translate="yes" xml:space="preserve">
          <source>Product.productElementName()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="098d023820d7de0815039938963c444839705418" translate="yes" xml:space="preserve">
          <source>Product.productElementNames()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b4e72cc77aae32e06d89b993d8fe52c91ba3c8f" translate="yes" xml:space="preserve">
          <source>Product.productIterator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c2582e34229c2b6a05bd695556188ed42da8200" translate="yes" xml:space="preserve">
          <source>Product.productPrefix()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ee167af42376b1800b3d3221ffba55e0ebecbdf" translate="yes" xml:space="preserve">
          <source>Product.scala</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9f81f1c5735421e1f33b15e6190c03185a0ea07" translate="yes" xml:space="preserve">
          <source>Product1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3357d4371db73fb4edb3d5caed63a3ecd10faf9" translate="yes" xml:space="preserve">
          <source>Product1 is a Cartesian product of 1 component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bca0df178bb79ea0c56051c880f04b5c60328b76" translate="yes" xml:space="preserve">
          <source>Product1$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2972f567e25c02f89bcebdc38e8aab24055a8487" translate="yes" xml:space="preserve">
          <source>Product1$.unapply()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4f1ea639a6e9431c2f1392ac01a9eec88824d9b" translate="yes" xml:space="preserve">
          <source>Product1._1()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e71118195b379253da141c12b266a17321b5833" translate="yes" xml:space="preserve">
          <source>Product1.productArity()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d3f65507e86c0ec8cee868cacb8559c114d60bd" translate="yes" xml:space="preserve">
          <source>Product1.productElement()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed3ac592574150d9831aa6c9ba18a6b13ee43508" translate="yes" xml:space="preserve">
          <source>Product1.scala</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a84f34df65f75f8107bf13fe61f31479c7705c01" translate="yes" xml:space="preserve">
          <source>Product10</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cce52544aea91f51154b7b46144c21f016dd2b1" translate="yes" xml:space="preserve">
          <source>Product10 is a Cartesian product of 10 components.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77060dc569aa133df9751622a8ce573a51a5a038" translate="yes" xml:space="preserve">
          <source>Product10$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff12c2e258473699392b803f8a3e4fbc89a25214" translate="yes" xml:space="preserve">
          <source>Product10$.unapply()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e29a619669045f74af14f96426e3d71ea658a878" translate="yes" xml:space="preserve">
          <source>Product10._1()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="977ee395930722e5db9fb07d97ef965ab5e7717f" translate="yes" xml:space="preserve">
          <source>Product10._10()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dad549236b80874515119677f2ba9d0d3378ac2" translate="yes" xml:space="preserve">
          <source>Product10._2()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e32938a4bf1f6ad621b43778229212626046e801" translate="yes" xml:space="preserve">
          <source>Product10._3()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b37e19cdf03f7ab5fd6bbd768e3d8ffaf266c54f" translate="yes" xml:space="preserve">
          <source>Product10._4()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd7e61224325309f5f6d10cb99da4e27ea21d84c" translate="yes" xml:space="preserve">
          <source>Product10._5()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fcdf3cad7ef72b3b5dd821266e547aa7c730afb" translate="yes" xml:space="preserve">
          <source>Product10._6()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b72366ff83fd85506f4ed52cba834312c38a36b" translate="yes" xml:space="preserve">
          <source>Product10._7()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10caada7c2d47b32b9b237f34ec7d6bb5033e962" translate="yes" xml:space="preserve">
          <source>Product10._8()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="035b71b14f13cafb1c9690fdf51325624537e17b" translate="yes" xml:space="preserve">
          <source>Product10._9()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abcdaaa477382b6b4826af1a55f130820022f010" translate="yes" xml:space="preserve">
          <source>Product10.productArity()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="296b2c37fcd9169976186d777c064d189580184b" translate="yes" xml:space="preserve">
          <source>Product10.productElement()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="173f72e1e07e546180d8575e0e8fe29385125569" translate="yes" xml:space="preserve">
          <source>Product10.scala</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59ddf74749ae63c66a8fb37f5578eaac4a50b6a6" translate="yes" xml:space="preserve">
          <source>Product11</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13ce6b40d6b7def686a6714442ac60af24e89d42" translate="yes" xml:space="preserve">
          <source>Product11 is a Cartesian product of 11 components.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87dc86c0914f2e57a832bf06bef38dd49178d3af" translate="yes" xml:space="preserve">
          <source>Product11$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="026a6f5de5c7a1220a37a9bdedfc71cc1dbb11a3" translate="yes" xml:space="preserve">
          <source>Product11$.unapply()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22165188ffb01760afdedb735687b7a79b70f214" translate="yes" xml:space="preserve">
          <source>Product11._1()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ec44487675c86c2d8785dbb813dba069e74b8a9" translate="yes" xml:space="preserve">
          <source>Product11._10()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="755bc4b41ee76a18c0c9a12a57b580975ad807c4" translate="yes" xml:space="preserve">
          <source>Product11._11()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4f1cadd9b447584ebc36be580d1e2c44a8edce3" translate="yes" xml:space="preserve">
          <source>Product11._2()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d7caa0541c082736719afcb1e7faaf59688754d" translate="yes" xml:space="preserve">
          <source>Product11._3()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc253b01a2915effc7256739542b39c34702b5e7" translate="yes" xml:space="preserve">
          <source>Product11._4()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6182e02f46e5495e1842a4e29bc07f7e6741b78d" translate="yes" xml:space="preserve">
          <source>Product11._5()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ce6b4d18ae4b3f62f70328b8295143ac83c41e9" translate="yes" xml:space="preserve">
          <source>Product11._6()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc31d3bf571f8925b23419cca1ad02228ca4fb9b" translate="yes" xml:space="preserve">
          <source>Product11._7()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2b80993262574eec19c13ba084aba8206845524" translate="yes" xml:space="preserve">
          <source>Product11._8()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c1731611c95aab34a6ee1661bc49bf905fc08e4" translate="yes" xml:space="preserve">
          <source>Product11._9()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="147a8de5f38302b0e72327586b32b2a8496ae049" translate="yes" xml:space="preserve">
          <source>Product11.productArity()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ece3b5211ee93124e0f5de1138437d3c88dcc07" translate="yes" xml:space="preserve">
          <source>Product11.productElement()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdd2e6067ec616189ac89049d22874068bceb627" translate="yes" xml:space="preserve">
          <source>Product11.scala</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99a65afb75ca3e1d7caca48e6146151095cf5898" translate="yes" xml:space="preserve">
          <source>Product12</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ec7b6f1d06e699ab2ef08d044542b7d320aee37" translate="yes" xml:space="preserve">
          <source>Product12 is a Cartesian product of 12 components.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f552c6e0c76e111e5d5e1e57839a77f11d0db8e" translate="yes" xml:space="preserve">
          <source>Product12$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d8542494e3192e36d7bb51689e4e7f867c32643" translate="yes" xml:space="preserve">
          <source>Product12$.unapply()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25e87cd4ccd2faafdb8fa5b04ff2f0437288cbbf" translate="yes" xml:space="preserve">
          <source>Product12._1()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ff1ddc7205f3288e4667f435f191fb4643af6c6" translate="yes" xml:space="preserve">
          <source>Product12._10()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="310da028aeb11394e08267bf7481d04bb11a8cd4" translate="yes" xml:space="preserve">
          <source>Product12._11()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b16cff250b411a073c40435f117aaf7bff19fe7" translate="yes" xml:space="preserve">
          <source>Product12._12()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9403f11bd7bcebd180d4d1e674e386ca7c99060d" translate="yes" xml:space="preserve">
          <source>Product12._2()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="725b63b3da7b6be65266da1d73978983483c5c2d" translate="yes" xml:space="preserve">
          <source>Product12._3()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="976ab92f0c815652f8261b9c9bd18ec2aaedae81" translate="yes" xml:space="preserve">
          <source>Product12._4()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2499ea8308fcf92a88b4da3faf6255f3a7c890d" translate="yes" xml:space="preserve">
          <source>Product12._5()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c931a11e5ce0f618c0f65687fd36e054677f4450" translate="yes" xml:space="preserve">
          <source>Product12._6()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95e19e05e3bcd5d74bafba2c4ce49f4b4692355f" translate="yes" xml:space="preserve">
          <source>Product12._7()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="426f3d9cc7b37e3cdd11eba326de69e4fe446c6e" translate="yes" xml:space="preserve">
          <source>Product12._8()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="507e2a9560d98b6c12e4a3ed1e9f2aa507edc7b1" translate="yes" xml:space="preserve">
          <source>Product12._9()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d72c69d6799f4070419b0d686bd70b976f36079d" translate="yes" xml:space="preserve">
          <source>Product12.productArity()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9127887cee89291dbc2aefde30cddbc60802bf23" translate="yes" xml:space="preserve">
          <source>Product12.productElement()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f51012079ae827196112f7779f07265cac185982" translate="yes" xml:space="preserve">
          <source>Product12.scala</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1e7a8667817bff967e971acd93ed3a6f4ecaec6" translate="yes" xml:space="preserve">
          <source>Product13</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85c63ab2efe4bbf8759d80d2741bf2fe9de3feb4" translate="yes" xml:space="preserve">
          <source>Product13 is a Cartesian product of 13 components.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41efaf8f9e1e9bbe55a185064ab78363c328a5d8" translate="yes" xml:space="preserve">
          <source>Product13$</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a78b9efc57b7811e86e98559e00ca3ec29eb3c57" translate="yes" xml:space="preserve">
          <source>Product13$.unapply()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26cb73a23f7ca1dcd6095e8bf0f1d2d1cefd828f" translate="yes" xml:space="preserve">
          <source>Product13._1()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed7b20ee7138088dfeac2291e320b4b8ee80c5d3" translate="yes" xml:space="preserve">
          <source>Product13._10()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37d5669b4e56f3b2dd220221927276a54d4531ed" translate="yes" xml:space="preserve">
          <source>Product13._11()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32be7f7e1e2498e1d76e99c4b0e8049674bad3b9" translate="yes" xml:space="preserve">
          <source>Product13._12()</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
