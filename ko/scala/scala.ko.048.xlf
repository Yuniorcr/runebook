<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="scala">
    <body>
      <group id="scala">
        <trans-unit id="bf8a93e09ca5b88e6d44848cb9b8452956240722" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de4cb01cd476b8ac66e7d985121c76a32c914bd6" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b551a574e06100e59314627ed1649ed1b382b2a" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;priorityqueue&quot; id=&quot;scala.collection.mutable.PriorityQueue&quot; name=&quot;scala.collection.mutable.PriorityQueue&quot;&gt;PriorityQueue&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="088f6ff8baac5ad527eb08ccd2d8e0ae3e405f09" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51a8539ccb805c7756b9cf31dbfa89d39b677fd5" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0588d604887921b79d3f38b85a71e4ad51d20d67" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9584c245bededc7ded0724a0aa1e69386ed0b4bb" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a295cef4bddb06eae97ac3926de4787acf20dd23" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9494fa74eaac59d4ad254ed18ecbeb361844c099" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.mutable.TreeSet&quot; name=&quot;scala.collection.mutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b21109e1c07c0fdc094240efec6fad221724336b" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b15afa1bffc14a70880bed978efd1ae70be0adc" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LazyList.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="060bc115414d319aa90a88e31936cb9ec8c6dbd3" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;collection/lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.ArrayOps.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8564b5e4f87906bfa28d74fa00ba17f8313857a" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;collection/lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;enumeration%24valueset&quot; id=&quot;scala.Enumeration.ValueSet&quot; name=&quot;scala.Enumeration.ValueSet&quot;&gt;ValueSet&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cfd8eb8897519a0204f57b2e0bc10fbe4a8d58f" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.ArrayOps.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f2c5f4455aeead6d223fda106b6fcf9f962d2c7" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[(&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;abstractmap&quot; id=&quot;scala.collection.AbstractMap&quot; name=&quot;scala.collection.AbstractMap&quot;&gt;AbstractMap&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48e3d89a4c25868335c5082b5e5cd6d53ef94d31" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[(&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;abstractmapview&quot; id=&quot;scala.collection.AbstractMapView&quot; name=&quot;scala.collection.AbstractMapView&quot;&gt;AbstractMapView&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fea3aa94030eb4863c2a64f1ba7febd19c1c43a2" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[(&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;defaultmap&quot; id=&quot;scala.collection.DefaultMap&quot; name=&quot;scala.collection.DefaultMap&quot;&gt;DefaultMap&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23d87b855d1e8fb6bd3d23c85009faf7349046ee" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[(&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d21afbbbbf4616ad14e5b29ee4107c473c0b4b5" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;mapview%24%24filter&quot; id=&quot;scala.collection.MapView.Filter&quot; name=&quot;scala.collection.MapView.Filter&quot;&gt;Filter&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e52a30c0ec6d2584f983b2ee083a8c4da252ea2a" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;mapview%24%24filterkeys&quot; id=&quot;scala.collection.MapView.FilterKeys&quot; name=&quot;scala.collection.MapView.FilterKeys&quot;&gt;FilterKeys&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46b10ac3cd9a1bb31e0169d7fb51787a991a9f23" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;mapview%24%24id&quot; id=&quot;scala.collection.MapView.Id&quot; name=&quot;scala.collection.MapView.Id&quot;&gt;Id&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce5cedaddb7aad7c626251175a68ad13ebce6beb" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="319a4cc4a63fa3ad83bacdb283b8e64c97ff8b6b" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;), &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;mapview%24%24mapvalues&quot; id=&quot;scala.collection.MapView.MapValues&quot; name=&quot;scala.collection.MapView.MapValues&quot;&gt;MapValues&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6cb39cbf31d27534985bbfa3057932fe3ad3e7a" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;mapview%24%24tapeach&quot; id=&quot;scala.collection.MapView.TapEach&quot; name=&quot;scala.collection.MapView.TapEach&quot;&gt;TapEach&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd06e823e02d56970793b3db0f36224ef5e33b8c" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.SeqMap&quot; name=&quot;scala.collection.SeqMap&quot;&gt;SeqMap&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bf511c1ebdd3ac9684958f84c03c79cbee7a233" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.SortedMap&quot; name=&quot;scala.collection.SortedMap&quot;&gt;SortedMap&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0500462d66d928ff1bd7edca714fb275ce9759b8" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt;), &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;view%24%24zip&quot; id=&quot;scala.collection.View.Zip&quot; name=&quot;scala.collection.View.Zip&quot;&gt;Zip&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fc8283312799beb7ecfa281dd3487ad41fbec8c" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt;), &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;view%24%24zipall&quot; id=&quot;scala.collection.View.ZipAll&quot; name=&quot;scala.collection.View.ZipAll&quot;&gt;ZipAll&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="540102a863ec4c981967378f64f6b3377e50291d" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;), &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;view%24%24zipwithindex&quot; id=&quot;scala.collection.View.ZipWithIndex&quot; name=&quot;scala.collection.View.ZipWithIndex&quot;&gt;ZipWithIndex&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="328f9589f85c3ea7b6560fa397bcefc021b9dbe3" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;stringview&quot; id=&quot;scala.collection.StringView&quot; name=&quot;scala.collection.StringView&quot;&gt;StringView&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be5277aea2609a22dd8e3546979934047b27ad70" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deed92691c8ad6fe8c719bbcde4184b87e16aaee" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;view%24%24empty%24&quot; id=&quot;scala.collection.View.Empty&quot; name=&quot;scala.collection.View.Empty&quot;&gt;Empty&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b5bacc002de0623126f5b096e7c127401e791b1" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;abstractindexedseqview&quot; id=&quot;scala.collection.AbstractIndexedSeqView&quot; name=&quot;scala.collection.AbstractIndexedSeqView&quot;&gt;AbstractIndexedSeqView&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ccc5c49a55ec4ee59b2054887e7641e6fae11d8" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;abstractiterable&quot; id=&quot;scala.collection.AbstractIterable&quot; name=&quot;scala.collection.AbstractIterable&quot;&gt;AbstractIterable&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f8a36ce9f63e3f0f82bdfbc9e9aca0c52024a73" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;abstractseq&quot; id=&quot;scala.collection.AbstractSeq&quot; name=&quot;scala.collection.AbstractSeq&quot;&gt;AbstractSeq&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e718c146ed6c4289151ec06657317536b428c88" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;abstractseqview&quot; id=&quot;scala.collection.AbstractSeqView&quot; name=&quot;scala.collection.AbstractSeqView&quot;&gt;AbstractSeqView&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abedf70bdb48b739ed7bdb09037bef032eb67337" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;abstractset&quot; id=&quot;scala.collection.AbstractSet&quot; name=&quot;scala.collection.AbstractSet&quot;&gt;AbstractSet&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df1c1bc5bd51b8c175b7f984e492319b58850981" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;abstractview&quot; id=&quot;scala.collection.AbstractView&quot; name=&quot;scala.collection.AbstractView&quot;&gt;AbstractView&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="010c6f992c89d1c2dfe94ce0a853050713d06280" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0057605092fdf936021b9338c41674337162ba22" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ac7ac707d7aba34647815ade0173493cf433936" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;indexedseqview%24%24appended&quot; id=&quot;scala.collection.IndexedSeqView.Appended&quot; name=&quot;scala.collection.IndexedSeqView.Appended&quot;&gt;Appended&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8451b00e7e0599299ad470b902336dc085b2a733" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;indexedseqview%24%24concat&quot; id=&quot;scala.collection.IndexedSeqView.Concat&quot; name=&quot;scala.collection.IndexedSeqView.Concat&quot;&gt;Concat&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4e60a4c0a499663dedd0e49e1eab754f0407a4d" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;indexedseqview%24%24drop&quot; id=&quot;scala.collection.IndexedSeqView.Drop&quot; name=&quot;scala.collection.IndexedSeqView.Drop&quot;&gt;Drop&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d911d0c6b1202aeb5cf1daf0b5f1e40f2a5d215" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;indexedseqview%24%24dropright&quot; id=&quot;scala.collection.IndexedSeqView.DropRight&quot; name=&quot;scala.collection.IndexedSeqView.DropRight&quot;&gt;DropRight&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59e0f80b84f98d184c877cb6e0303eea39aae396" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;indexedseqview%24%24id&quot; id=&quot;scala.collection.IndexedSeqView.Id&quot; name=&quot;scala.collection.IndexedSeqView.Id&quot;&gt;Id&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6306f36b2ec3e39aa2e9a5148094bc8b54775050" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;indexedseqview%24%24map&quot; id=&quot;scala.collection.IndexedSeqView.Map&quot; name=&quot;scala.collection.IndexedSeqView.Map&quot;&gt;Map&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="705ead0181132a0dcb8438d17aeed85fa999c2a8" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;indexedseqview%24%24prepended&quot; id=&quot;scala.collection.IndexedSeqView.Prepended&quot; name=&quot;scala.collection.IndexedSeqView.Prepended&quot;&gt;Prepended&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05dad9bdc334642b57a1f33260c8f7b5af9ac1cf" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;indexedseqview%24%24reverse&quot; id=&quot;scala.collection.IndexedSeqView.Reverse&quot; name=&quot;scala.collection.IndexedSeqView.Reverse&quot;&gt;Reverse&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="706600fd9c7522a9bbe7d8b6ab77bfb950aed0fe" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;indexedseqview%24%24slice&quot; id=&quot;scala.collection.IndexedSeqView.Slice&quot; name=&quot;scala.collection.IndexedSeqView.Slice&quot;&gt;Slice&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd56459d5ea426d63b960f4f2a946de6770cbe9b" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;indexedseqview%24%24take&quot; id=&quot;scala.collection.IndexedSeqView.Take&quot; name=&quot;scala.collection.IndexedSeqView.Take&quot;&gt;Take&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd275ca20a3cb60e27b91c594e5bd73c57de320b" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;indexedseqview%24%24takeright&quot; id=&quot;scala.collection.IndexedSeqView.TakeRight&quot; name=&quot;scala.collection.IndexedSeqView.TakeRight&quot;&gt;TakeRight&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd6e373f789340b42828a9e52e5efc066f772225" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03985ee2b61ccd51258de01a84a2716b9ae12897" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fc7ca56c266a927296c7f171a8a7d60aa7d0ffb" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;mapops%24keyset&quot; id=&quot;scala.collection.MapOps.KeySet&quot; name=&quot;scala.collection.MapOps.KeySet&quot;&gt;KeySet&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3775406574748ef337d9227b1d9f4d5522ca8d1" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e0d5f197b6e90cd8a6424b14c6f46aa6b404fcb" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfba8bb742c92c60ebbac0b3e92d256e0afdfd82" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;seqview%24%24appended&quot; id=&quot;scala.collection.SeqView.Appended&quot; name=&quot;scala.collection.SeqView.Appended&quot;&gt;Appended&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07243ca71e20cebd57e004acd07bfbf9ac70bc8d" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;seqview%24%24concat&quot; id=&quot;scala.collection.SeqView.Concat&quot; name=&quot;scala.collection.SeqView.Concat&quot;&gt;Concat&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="199b7e4e4539eff75ec25d4ec10b9f70232f3f02" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;seqview%24%24drop&quot; id=&quot;scala.collection.SeqView.Drop&quot; name=&quot;scala.collection.SeqView.Drop&quot;&gt;Drop&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e64338fdefff8566ae9cbbe032070ecfdf429ec" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;seqview%24%24dropright&quot; id=&quot;scala.collection.SeqView.DropRight&quot; name=&quot;scala.collection.SeqView.DropRight&quot;&gt;DropRight&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0076e6ea3fff8907193ec3a477b765a31dae47f7" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;seqview%24%24id&quot; id=&quot;scala.collection.SeqView.Id&quot; name=&quot;scala.collection.SeqView.Id&quot;&gt;Id&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89129c057d2b1dcedca1d777569461ce29927e56" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;seqview%24%24map&quot; id=&quot;scala.collection.SeqView.Map&quot; name=&quot;scala.collection.SeqView.Map&quot;&gt;Map&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="311db30dd2869b840ee0037f146b35888338f8f5" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;seqview%24%24prepended&quot; id=&quot;scala.collection.SeqView.Prepended&quot; name=&quot;scala.collection.SeqView.Prepended&quot;&gt;Prepended&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63f35fe99ad5128dcbec4f54a64788ec9f27d053" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;seqview%24%24reverse&quot; id=&quot;scala.collection.SeqView.Reverse&quot; name=&quot;scala.collection.SeqView.Reverse&quot;&gt;Reverse&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba34281c79542eb94ffc30c8a4dae3f5d420f0db" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;seqview%24%24sorted&quot; id=&quot;scala.collection.SeqView.Sorted&quot; name=&quot;scala.collection.SeqView.Sorted&quot;&gt;Sorted&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="349b285924a51778e069792777f5fa3ebcd5e8a7" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;seqview%24%24take&quot; id=&quot;scala.collection.SeqView.Take&quot; name=&quot;scala.collection.SeqView.Take&quot;&gt;Take&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a73d57c72c008203b8c7619ccea6a1b453c09e1" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;seqview%24%24takeright&quot; id=&quot;scala.collection.SeqView.TakeRight&quot; name=&quot;scala.collection.SeqView.TakeRight&quot;&gt;TakeRight&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e810311065f330edd4bea565a0acb77994c16a90" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3faa66476826b9fcce3810b948753c2fbe38734" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;sortedmapops%24keysortedset&quot; id=&quot;scala.collection.SortedMapOps.KeySortedSet&quot; name=&quot;scala.collection.SortedMapOps.KeySortedSet&quot;&gt;KeySortedSet&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00581ace7f7cb51b3dda03a9588b8c062b8dbb5a" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5103c56ccc4f31e82aeab6bd60f7c02e6078bb47" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea76225497113e7cded885b5023f3a3c60a5e9c9" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;view%24%24appended&quot; id=&quot;scala.collection.View.Appended&quot; name=&quot;scala.collection.View.Appended&quot;&gt;Appended&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5ac597c4898a4be2625dc23fcff09a3407cbf51" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;view%24%24collect&quot; id=&quot;scala.collection.View.Collect&quot; name=&quot;scala.collection.View.Collect&quot;&gt;Collect&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3168ee7afd23bedcaccc5058d7b3e00b51386e7c" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;view%24%24concat&quot; id=&quot;scala.collection.View.Concat&quot; name=&quot;scala.collection.View.Concat&quot;&gt;Concat&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="774c2a4b2c9acaedfb4ffa1925cfe117be569768" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;view%24%24distinctby&quot; id=&quot;scala.collection.View.DistinctBy&quot; name=&quot;scala.collection.View.DistinctBy&quot;&gt;DistinctBy&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fe86977aba6f33f6d19e5215ff3cc139ddae491" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;view%24%24drop&quot; id=&quot;scala.collection.View.Drop&quot; name=&quot;scala.collection.View.Drop&quot;&gt;Drop&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b6e39c0be0f2ba55528abccdfb3150fc472d6d8" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;view%24%24dropright&quot; id=&quot;scala.collection.View.DropRight&quot; name=&quot;scala.collection.View.DropRight&quot;&gt;DropRight&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e95fe55cca3f6d3e278000580a1333a773b8409" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;view%24%24dropwhile&quot; id=&quot;scala.collection.View.DropWhile&quot; name=&quot;scala.collection.View.DropWhile&quot;&gt;DropWhile&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1901669cc94532b35428c97594e14023ee78df42" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;view%24%24elems&quot; id=&quot;scala.collection.View.Elems&quot; name=&quot;scala.collection.View.Elems&quot;&gt;Elems&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfb71a5d631762f0f8876569f1cb91ceb42818e0" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;view%24%24fill&quot; id=&quot;scala.collection.View.Fill&quot; name=&quot;scala.collection.View.Fill&quot;&gt;Fill&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="562e1cf684bf44a55492382c267ed4b9cfba65d6" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;view%24%24filter&quot; id=&quot;scala.collection.View.Filter&quot; name=&quot;scala.collection.View.Filter&quot;&gt;Filter&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e28ad38c4b17c3cb4fa7cd0fa050399002cb9100" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;view%24%24flatmap&quot; id=&quot;scala.collection.View.FlatMap&quot; name=&quot;scala.collection.View.FlatMap&quot;&gt;FlatMap&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="805869c3cd95038ad3e89a21fbe46307e23fd93b" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;view%24%24iterate&quot; id=&quot;scala.collection.View.Iterate&quot; name=&quot;scala.collection.View.Iterate&quot;&gt;Iterate&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb5e80a7e3bb634cc5bc22b69ed658ac2b429bfa" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;view%24%24leftpartitionmapped&quot; id=&quot;scala.collection.View.LeftPartitionMapped&quot; name=&quot;scala.collection.View.LeftPartitionMapped&quot;&gt;LeftPartitionMapped&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8ad645760da06c4130df06feccdc64e68a16d72" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;view%24%24map&quot; id=&quot;scala.collection.View.Map&quot; name=&quot;scala.collection.View.Map&quot;&gt;Map&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3388e054e50f672d77c3283555d3d7dd0d234fea" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;view%24%24padto&quot; id=&quot;scala.collection.View.PadTo&quot; name=&quot;scala.collection.View.PadTo&quot;&gt;PadTo&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c053633f94cc3491343fb9c13f939ed37a979710" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;view%24%24prepended&quot; id=&quot;scala.collection.View.Prepended&quot; name=&quot;scala.collection.View.Prepended&quot;&gt;Prepended&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c12c7e61727ea74d7d910e7aad6cbbcb10ece83" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;view%24%24rightpartitionmapped&quot; id=&quot;scala.collection.View.RightPartitionMapped&quot; name=&quot;scala.collection.View.RightPartitionMapped&quot;&gt;RightPartitionMapped&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92cdd4fdcc3c2eae3e00a0bcf66c40884fb0d13b" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;view%24%24scanleft&quot; id=&quot;scala.collection.View.ScanLeft&quot; name=&quot;scala.collection.View.ScanLeft&quot;&gt;ScanLeft&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efe912ef5ea5525f4df36a3b296b1fa52028e8ec" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;view%24%24single&quot; id=&quot;scala.collection.View.Single&quot; name=&quot;scala.collection.View.Single&quot;&gt;Single&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c33ddabc7133a1ebd7538e826da0958db9bde12" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;view%24%24tabulate&quot; id=&quot;scala.collection.View.Tabulate&quot; name=&quot;scala.collection.View.Tabulate&quot;&gt;Tabulate&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="259e3dc2538bf3d4e71096feab209a62ca35c8c4" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;view%24%24take&quot; id=&quot;scala.collection.View.Take&quot; name=&quot;scala.collection.View.Take&quot;&gt;Take&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="281180982559369627d552f3813d041602f56ec0" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;view%24%24takeright&quot; id=&quot;scala.collection.View.TakeRight&quot; name=&quot;scala.collection.View.TakeRight&quot;&gt;TakeRight&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05927407927a5799810e13777a6be657150274c0" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;view%24%24takewhile&quot; id=&quot;scala.collection.View.TakeWhile&quot; name=&quot;scala.collection.View.TakeWhile&quot;&gt;TakeWhile&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="670cc6fb1e0bfdab39aa35fee15019751b5bec80" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;view%24%24unfold&quot; id=&quot;scala.collection.View.Unfold&quot; name=&quot;scala.collection.View.Unfold&quot;&gt;Unfold&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9621ebb16ee13bcd7da05def796e556a637c5b7a" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;view%24%24updated&quot; id=&quot;scala.collection.View.Updated&quot; name=&quot;scala.collection.View.Updated&quot;&gt;Updated&lt;/a&gt;.this.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c221a32f6787df8fec472e2ef62b1429e49b3cc1" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.LazyZip2.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip3&quot; id=&quot;scala.collection.LazyZip3&quot; name=&quot;scala.collection.LazyZip3&quot;&gt;LazyZip3&lt;/a&gt;[&lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.C1&quot;&gt;C1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d8cb4c171f358604bcf2b940dae0d94cc4fd37a" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.LazyZip3.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip4&quot; id=&quot;scala.collection.LazyZip4&quot; name=&quot;scala.collection.LazyZip4&quot;&gt;LazyZip4&lt;/a&gt;[&lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.C1&quot;&gt;C1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bf5e2da19fbef58e90e950c1e9869e835015543" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StringOps.lazyZip.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazyzip2&quot; id=&quot;scala.collection.LazyZip2&quot; name=&quot;scala.collection.LazyZip2&quot;&gt;LazyZip2&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, &lt;span name=&quot;scala.collection.StringOps.lazyZip.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="569ac245cc6e54c2c7806ebf3c6831eb5f81a245" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;]: ([B](that: Iterable[B])scala.collection.LazyZip2[(El1, El2),B,_1.type]) forSome {val _1: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt;)]}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4fdb7df87a7a70a1572e830069a8066800eda3e" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;]: ([B](that: Iterable[B])scala.collection.LazyZip2[(El1, El2, El3),B,_1.type]) forSome {val _1: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt;)]}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6210117765fcdd565ab437a3db303cca7cd31feb" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;]: ([B](that: Iterable[B])scala.collection.LazyZip2[(El1, El2, El3, El4),B,_1.type]) forSome {val _1: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt;)]}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="255badab686278dd81feee9cc648fcd0c999685d" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;]: ([B](that: Iterable[B])scala.collection.LazyZip2[A,B,_1.type]) forSome {val _1: &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;]}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1280edf822209f55e80e888f43ff0ea839ae3f7" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;]: ([B](that: Iterable[B])scala.collection.LazyZip2[A,B,_1.type]) forSome {val _1: &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;]}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8eecaa07d4eb83c62f6438f67a10d322e07a035" translate="yes" xml:space="preserve">
          <source>def lazyZip[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;]: ([B](that: Iterable[B])scala.collection.LazyZip2[T,B,_1.type]) forSome {val _1: &lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;collection.immutable.IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;]}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64e3c32a6f9938c61d925a6c064e5923d53573f6" translate="yes" xml:space="preserve">
          <source>def left: &lt;a href=&quot;either%24%24leftprojection&quot; id=&quot;scala.util.Either.LeftProjection&quot; name=&quot;scala.util.Either.LeftProjection&quot;&gt;LeftProjection&lt;/a&gt;[&lt;span name=&quot;scala.util.Either.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.util.Either.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c97a6017cdf924d1a07a1716413c12b66430c272" translate="yes" xml:space="preserve">
          <source>def left: &lt;a href=&quot;either%24%24leftprojection&quot; id=&quot;scala.util.Either.LeftProjection&quot; name=&quot;scala.util.Either.LeftProjection&quot;&gt;LeftProjection&lt;/a&gt;[&lt;span name=&quot;scala.util.Left.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.util.Left.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="319182138551a760a79e537c384e38962a418cdf" translate="yes" xml:space="preserve">
          <source>def left: &lt;a href=&quot;either%24%24leftprojection&quot; id=&quot;scala.util.Either.LeftProjection&quot; name=&quot;scala.util.Either.LeftProjection&quot;&gt;LeftProjection&lt;/a&gt;[&lt;span name=&quot;scala.util.Right.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.util.Right.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87da504d0763138572954f6bd520fcd7044d336a" translate="yes" xml:space="preserve">
          <source>def length(): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c43048cb97d2c0e88a4868f7fd5abdd51cc33126" translate="yes" xml:space="preserve">
          <source>def length(): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2ce843510f8e0582dee3c3c02794d6b42be28ed" translate="yes" xml:space="preserve">
          <source>def length(): &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="634cd5f0d306df11fb569ff2dc736ec088ca42cb" translate="yes" xml:space="preserve">
          <source>def length: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f33a35e54a79251f58e3c6540da550e64fb5c4d4" translate="yes" xml:space="preserve">
          <source>def length: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c31fd6d3fd9fcfa03215ba70e74a25d63c7c777b" translate="yes" xml:space="preserve">
          <source>def length: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6ece6de6295ba92aec99f2fabc9c3d4b1e946ad" translate="yes" xml:space="preserve">
          <source>def lengthCompare(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="947ccfb0c980e24b90d2e07a4d15871f2eb5c388" translate="yes" xml:space="preserve">
          <source>def lengthCompare(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c33bb2fa2ba8e2ca1b1797e657728af76dd9af6" translate="yes" xml:space="preserve">
          <source>def lengthCompare(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80c6d299dace83be850c3398c7bf8e3700a6bea7" translate="yes" xml:space="preserve">
          <source>def lengthCompare(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[_]&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44b4f2787ae14504e53a68758b241b3dc0696fb0" translate="yes" xml:space="preserve">
          <source>def lengthCompare(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[_]&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="566999b27c3db21482005daf5927e735e15c8efe" translate="yes" xml:space="preserve">
          <source>def lengthCompare(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[_]&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0398a43237c82df90f5e6d0601176cd636a16b35" translate="yes" xml:space="preserve">
          <source>def lengthIs: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09185c570029e0dd28d594595fbda6fafdaffd6c" translate="yes" xml:space="preserve">
          <source>def lengthIs: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b4d2ee677f0e60d655c8d7297b6bceb561dc739" translate="yes" xml:space="preserve">
          <source>def length_=(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff1c825405731a7fa0457c8d3a3886f22d8c4e45" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcf0f312033e72a8cf72cfd46a39fc7568c95eba" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb1764da6ac5bb942f205e95b681c6b7caa29784" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a142e8bbc02bab9671f4fcb2548ddefdcfd66514" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22bf9650989c84dc0efe6e108c2515d22a668623" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68cf4696bc3cdf60cef01cdd886b4ea2bf10cc34" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ee919b9f36e22a72a3eb983d0df12d59d7cb304" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf3a8b5b820441014b3ca910251d2d35a0897d79" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f449237953188fe4702d8758e1a9bd12246d251b" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5e6e0a6c1f5253302406bd39754c17b339278ed" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aad7d27bd841c6ab92d6c6b8855fd2594d98f2d3" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c76f29bcf6ebf39b5e553992dc73132f5ec37e43" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47685bc5993ec6de7e1f879523421426627af1a5" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaed6d78e4d377506bfe794863ae15bbd8d5b422" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="505863552abead7e93e0cd13cb0e143744da472a" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33aa1fa3efa5a67293fcbfed3a88f20133450254" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93fd43f6377e1bcb284ba8ce6faa0c23a766b6e4" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="208ac8072c8b784d5572cf3de996a417c0a73a2a" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e52fcf94a36f41fbe48810657f0ec90c96249ae" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4770351c93a8f3f6c437440aaf67f98a5d37d88e" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2b3b58a1f91df4403fb1b42728317a86d3893ee" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0643cc9ee4f435d77ceaf5d228a81f0244db4a5" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2728495b91ca1c68ba7012bbfb2b15481081115" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f85e1fa7a9e3cce8adc967746bd8def6eca1eebc" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ca3dfc6670cae861911ac8c1461e6f0a2d8c807" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91a059b5b2218098a41ba1ed9e8ee4e8b9aed64f" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4655c70035af8d0c409092aac8dda6161e98f8a1" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="326e36e46f8aab78293153b42a269cbd08f514d8" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7515f8dc1c10209891ce6372ed6c9032603bc82" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38e413e9e08dbf86a1f029c2daf0af9a1a41109c" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ad4142aebc440869f7350b7aa9c6ceb0b91d758" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eb3c0e7a41b0ea050797396b4e3a3e9ed276c58" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20c715682c9fe7ab2561a5c1f9c17c1ebd0c6df9" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe4ef7bf96ff43ad90f8430daf4bf33f2de9818d" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbbbca377604b44e3b941bc490e53db1b642189e" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f96859a60fb2d44e725b3fc0f9d082625fdc3a33" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2da1e65db5acc6c01c1e77a9de63d52154a03735" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76ddc4c2fe4f12b111e918517d9c09065142b031" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05b0fcd10c22b4694cc76aab0c2ab950280e4c31" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e3f00d235c633e512510b527240bb4ae194b50b" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69f8dda7773a6e1b912b3ab3e868943baa44e701" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db5125353d848729a50ef25aa43757885aebcfee" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f39fa180f441a2a6bc04af9458b3455208789f56" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb855053c39270a8a41d74f6ddf02463bc962377" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fe4f029ab009295d5963a9de72403dc6de82291" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5b5d922ab91006a5608432a799a1fc52e9e9138" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ef516711f360bfaa18eb838a138d8b0e2bf3fdd" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b18d230dbb4b6afdb4900bf3ceb57e9ac7190711" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83580b08c6b472e22bea1501550737f134fd163b" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a07a5cfc0a04cffbf66eea6c9d6e1910ce14b833" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c83251003c6b56b5c4ba1b50460f6541fb74b6a1" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15416eb8c42b25612bed7bbde681565e413e5285" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="058fd1278bf28c800b8bbbc6e4a6001c78b66b13" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.PartialFunction.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c8bb3d6bdedad95ce784edb2072644e498f872f" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd5c1d6bedee752d623c7db9c70ad93354e73569" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7de4e96073df8f4b89173e05390ecf6292dc4e07" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a0f17594ef5a38f39789dfd88d6137120095c29" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c968a008d973084cbfd2b9f68bdbca6fcbe79a4b" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2764cf4454d55cddc029bb6fb5d15b8839fa73ef" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0e624603f26998270cf5597c5c032710751af7e" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2ecff131c2090fe818681ad42840cae1bf65844" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e677659d4b0b4527403c735de463b62b2094ceb8" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04499799f8e0a0d64b50ef3f40ddb34892322aa7" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b593c4c39590e7be1fb9e34e92ff0aa490249ae3" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1181ec5d0bff5ac854b3f01f92af15481724f730" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5890136b909f62bc3bf4a97a41b28f6e38825dbc" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da026ea35406fb92eb58193ece64b2ecf4627d6c" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="784e265678e6645a3f6af069a7277dbfc24742d9" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d302cf793b3b63bd691f6a1ce9f920835c269fa" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1629fc42d58dbd6ab8b0fa57a217b0ca200a2451" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89e97c8c60b38d258f0f862bce1eade4b97db91e" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8df27e38a40f7bacaa98a0fb348fd9e0cff328c" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fef831ed3b8435ea04d6ff717b19861ef5c2917" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46fd31bdd57df3d29eb3fa2eba34a0aa3a5bd378" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba559566fb4c9d4e7c0030b5928dc0581f3cb644" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3359a184a3666791d9865ea6307e7bd3b4726eab" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94abc5a3adeee1245bc657c5d60b2776e7f6856f" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91aa035db9bfe0ca7fa0b9ccaf77c665a9e4934c" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1d786169d9c7a85927a8b2c2b34b0c89258737c" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8424421bb46cd064eba600dcb2356dd6982ab57" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31d5986a82c7f9f6ecf5cdb57c8da1b3f133fc6e" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23bf63919b8f7859dcc2915517c9375c834d7959" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1fbd0896612d0e0858ff940268d8fe764c83d9c" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6108955944eaf477ed3aa3fcacb29911d84e0ca" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38d93a460ebd22997a926f5427f6da29b579322e" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87352f01266be9a3f74f1ac8ec8ebf3c6aba31b1" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d3e9fa0b2c9bc7b7f353e7662b854a921f8be81" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6aaeb6e1f729c208873582010bbb886567f7f82" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c53990fd1a5aee10f7d6f2e6990deb5a9a9284fe" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0620d8cb54fc96c1e827e08bf81dbdbdc7c17b7" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fef26d1a6e12a7a2296d05b91d4dcf07ef9ced8b" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6064116c0fe500093887bb5ef80ef00166b0a83d" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b18cd1b2bec472d333568a2c7a2c8fe8b6cc76a" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30a42aa198466baa630f0bd40c32bef74910c7cd" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b2265d1890890abecfe14e171a373a5c7d5c98c" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="228daa3d78936e9df812b354138ccc1ca27cd0e0" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a896548b4b95a09bdc547ef3be3e8fd5b4c0334" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14facd332c3f3244708fd52cb544018ce8d0eae3" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c859f594d7c14377a20b2d72400c40870e910de" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a5a9559c68f32349ab1e7b58eb4f332b6e28fc0" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e11a19edffbf75e19f0f131d8d4274de00e886f" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19524f7122534291fc01b453d46abbe2a0acbcfe" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb6cbf10c233005f0bccc633395555074fbb8080" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a1ecefbceb0c1308c95d7c467054fda92f55133" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25f65e7bb4093625f7d1bd27a8a14c136ef8c176" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a34ae755b8e3429e81354e101d40054673bfbcfa" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40956584109eff47d8099b509b20acd3288ff6f5" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dda9db8acd86e7672a2c25d1ee4850ff8a0d51ca" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70b718784e48f9cddb0bc536de5d3504a0f763ed" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61403828c7776bf27ce92d50ff47ce91a10ab797" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c4eac876c932d9878e2146d8988abcc7597e54f" translate="yes" xml:space="preserve">
          <source>def lift: (&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f37ea192e948671c2f67f9ce5622e5ca417ee9b" translate="yes" xml:space="preserve">
          <source>def liftCo[&lt;span name=&quot;F&quot;&gt;F[&lt;span name=&quot;_&quot;&gt;+_&lt;/span&gt;]&lt;/span&gt;]: &lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;span name=&quot;scala.&amp;lt;:&amp;lt;.liftCo.F&quot;&gt;F&lt;/span&gt;[&lt;span name=&quot;scala.&amp;lt;:&amp;lt;.From&quot;&gt;From&lt;/span&gt;], &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.liftCo.F&quot;&gt;F&lt;/span&gt;[&lt;span name=&quot;scala.&amp;lt;:&amp;lt;.To&quot;&gt;To&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5006f1fc8cca3af1eb832f6eee9758583fb24bec" translate="yes" xml:space="preserve">
          <source>def liftCo[&lt;span name=&quot;F&quot;&gt;F[&lt;span name=&quot;_&quot;&gt;_&lt;/span&gt;]&lt;/span&gt;]: &lt;a href=&quot;%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=:=&lt;/a&gt;[&lt;span name=&quot;scala.=:=.liftCo.F&quot;&gt;F&lt;/span&gt;[&lt;span name=&quot;scala.=:=.From&quot;&gt;From&lt;/span&gt;], &lt;span name=&quot;scala.=:=.liftCo.F&quot;&gt;F&lt;/span&gt;[&lt;span name=&quot;scala.=:=.To&quot;&gt;To&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbdcdb41e5f055a176bbbe14b26fb398de0b1f5d" translate="yes" xml:space="preserve">
          <source>def liftContra[&lt;span name=&quot;F&quot;&gt;F[&lt;span name=&quot;_&quot;&gt;-_&lt;/span&gt;]&lt;/span&gt;]: &lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;span name=&quot;scala.&amp;lt;:&amp;lt;.liftContra.F&quot;&gt;F&lt;/span&gt;[&lt;span name=&quot;scala.&amp;lt;:&amp;lt;.To&quot;&gt;To&lt;/span&gt;], &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.liftContra.F&quot;&gt;F&lt;/span&gt;[&lt;span name=&quot;scala.&amp;lt;:&amp;lt;.From&quot;&gt;From&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a122d315ad87af998f2362318a8a8ad1a7088a88" translate="yes" xml:space="preserve">
          <source>def liftContra[&lt;span name=&quot;F&quot;&gt;F[&lt;span name=&quot;_&quot;&gt;_&lt;/span&gt;]&lt;/span&gt;]: &lt;a href=&quot;%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=:=&lt;/a&gt;[&lt;span name=&quot;scala.=:=.liftContra.F&quot;&gt;F&lt;/span&gt;[&lt;span name=&quot;scala.=:=.To&quot;&gt;To&lt;/span&gt;], &lt;span name=&quot;scala.=:=.liftContra.F&quot;&gt;F&lt;/span&gt;[&lt;span name=&quot;scala.=:=.From&quot;&gt;From&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d67762df85c402e5b2fde69d0891713384669151" translate="yes" xml:space="preserve">
          <source>def lineSeparator: &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5f284eb33da1f6ac3027085b1bb27e4661169e4" translate="yes" xml:space="preserve">
          <source>def linesIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dfdf99d98182ee7fca0f200261d606524b8f59f" translate="yes" xml:space="preserve">
          <source>def linesWithSeparators: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08476681bad20774c0c7ce5af7342c40dc7db2ef" translate="yes" xml:space="preserve">
          <source>def locally[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.Predef.locally.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.Predef.locally.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fad755c4c15246f4c12af5e8dec429627c787efe" translate="yes" xml:space="preserve">
          <source>def log(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdf09490976e4161fa0af3f1b3e825ec4d170218" translate="yes" xml:space="preserve">
          <source>def log10(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="570aa6e17a2a1e824c10c868575bf6cb8be90cb6" translate="yes" xml:space="preserve">
          <source>def log1p(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f60d5c3475aea111435fd4b32952b7cf71b741d2" translate="yes" xml:space="preserve">
          <source>def longValue(): &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01fb42e85032b405e68c1a7e659de04fe9b06c90" translate="yes" xml:space="preserve">
          <source>def longValue: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="255c5fd4984ed7586d1d371b0701bffa4e0f31f3" translate="yes" xml:space="preserve">
          <source>def longValue: &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b95f8cdec42cf7aafd4a6d43ff85e0ed22b1045" translate="yes" xml:space="preserve">
          <source>def lowestSetBit: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a504adc5be5927882c39b4042c925f88d1adc19" translate="yes" xml:space="preserve">
          <source>def lt(&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="888df8cf12d1f292742a68a5f302cc1cb650d0e6" translate="yes" xml:space="preserve">
          <source>def lt(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71010b4acbd0bf1d86c157595ea7a70d3c20d3db" translate="yes" xml:space="preserve">
          <source>def lt(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de96c90e278c40085d1bcefc9a2b79e89dccd91e" translate="yes" xml:space="preserve">
          <source>def lt(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eaee1b0aba3e795a9417aeb3789d0759845716b" translate="yes" xml:space="preserve">
          <source>def lt(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2689ea64c3a5b3080aa002628e36737e206985d9" translate="yes" xml:space="preserve">
          <source>def lt(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d4def0f63eebba8dcafd27fd6b94dbe2f2de383" translate="yes" xml:space="preserve">
          <source>def lt(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de206e08b5768fc019d8c13ce4416266efa63704" translate="yes" xml:space="preserve">
          <source>def lt(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e25a66f41fb19d2028c7ef9a5227138c9f64533d" translate="yes" xml:space="preserve">
          <source>def lt(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.OptionOrdering.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.OptionOrdering.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b70eee73e2e7c3c657d01330a56c1a8666e24c79" translate="yes" xml:space="preserve">
          <source>def lt(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26bde3fba1f88e927fa181c9c2b3d117d1e598d9" translate="yes" xml:space="preserve">
          <source>def lt(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47ed4737d5cb29cd7d280cc7e9dab1d7dbdc27ba" translate="yes" xml:space="preserve">
          <source>def lt(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../symbol&quot; id=&quot;scala.Symbol&quot; name=&quot;scala.Symbol&quot;&gt;Symbol&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../symbol&quot; id=&quot;scala.Symbol&quot; name=&quot;scala.Symbol&quot;&gt;Symbol&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d254378491f4126052c5d21a053f442f2daf5481" translate="yes" xml:space="preserve">
          <source>def lt(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a8424ce33effbec2e1ecd30ddfef34ef381841b" translate="yes" xml:space="preserve">
          <source>def lt(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1ac587eeff00325e7e9383722366cb44c981982" translate="yes" xml:space="preserve">
          <source>def lt(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b926a1eba469f55f313e8e789f11c64ad4ce53c" translate="yes" xml:space="preserve">
          <source>def lt(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;deadline&quot; id=&quot;scala.concurrent.duration.Deadline&quot; name=&quot;scala.concurrent.duration.Deadline&quot;&gt;Deadline&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;deadline&quot; id=&quot;scala.concurrent.duration.Deadline&quot; name=&quot;scala.concurrent.duration.Deadline&quot;&gt;Deadline&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc3b4858ed1a453e302493d2e09a1873e398615f" translate="yes" xml:space="preserve">
          <source>def lt(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40a8a2e6d6066cbe9aba3f96fa6a02b1a8103d65" translate="yes" xml:space="preserve">
          <source>def lt(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c157f8cde837fc57971703d34701dcde12313ae" translate="yes" xml:space="preserve">
          <source>def lt(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f174e49870bfb4cdc327650a0df99e95c7cc1b2" translate="yes" xml:space="preserve">
          <source>def lt(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afaf3a2dc2ebb5ca0d01ce52ace4f8959f76d880" translate="yes" xml:space="preserve">
          <source>def lt(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d04044ecee88a07872339fbcc4298befc25185d3" translate="yes" xml:space="preserve">
          <source>def lt(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf60eba22960dc24f283daa9a63af3b0a726b70c" translate="yes" xml:space="preserve">
          <source>def lt(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.CachedReverse.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.CachedReverse.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18671707e2b6c9d87f735271d462d762ee622454" translate="yes" xml:space="preserve">
          <source>def lt(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65228b5ba0da5f458448c1aabe366af763895a7b" translate="yes" xml:space="preserve">
          <source>def lt(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.PartialOrdering.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.PartialOrdering.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f4ed9c23eea46ebecb1c5b283e40837ccfbe34a" translate="yes" xml:space="preserve">
          <source>def lteq(&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a002a086c2eeb0dc1e82dd5af635564ad73dc21" translate="yes" xml:space="preserve">
          <source>def lteq(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e29cbf414adf26fdf42134ce3e39aacf13bad7bc" translate="yes" xml:space="preserve">
          <source>def lteq(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b13b865b618f870a3356804af0809fe306eecd58" translate="yes" xml:space="preserve">
          <source>def lteq(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a8ddc616abf2cc11744a9bb82a43d2d1ae29c13" translate="yes" xml:space="preserve">
          <source>def lteq(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d06f9223535ba473d2955b209ef098402cb09f7" translate="yes" xml:space="preserve">
          <source>def lteq(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dbf29fcda95747dcd6d46363ff8a10bc1f9c09a" translate="yes" xml:space="preserve">
          <source>def lteq(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f345a91a0dfa9931ddf0b78cbc5886c2e4e044a6" translate="yes" xml:space="preserve">
          <source>def lteq(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c7e5ef8d3ce3125f131c0664f37b8a3626e9c99" translate="yes" xml:space="preserve">
          <source>def lteq(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.OptionOrdering.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.OptionOrdering.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c175ddd33ca5a34cbfd385df877ab0947f90bc5" translate="yes" xml:space="preserve">
          <source>def lteq(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="442e7cc24106ba835be1f8fae4d5e07cd60fd179" translate="yes" xml:space="preserve">
          <source>def lteq(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84799af65b7c561de10c959e05f5a40a5623c0d8" translate="yes" xml:space="preserve">
          <source>def lteq(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../symbol&quot; id=&quot;scala.Symbol&quot; name=&quot;scala.Symbol&quot;&gt;Symbol&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../symbol&quot; id=&quot;scala.Symbol&quot; name=&quot;scala.Symbol&quot;&gt;Symbol&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="480975a32daa1116ebec5ca03183e60d2bc1e06c" translate="yes" xml:space="preserve">
          <source>def lteq(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="593c13a798da74256dae72cb878aa6850583ab52" translate="yes" xml:space="preserve">
          <source>def lteq(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b77847ad6d49ffc417e0c30ba9b52efe6f0e9f16" translate="yes" xml:space="preserve">
          <source>def lteq(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d356e96517fea9bec85f0d1f8c15baba1a0d9116" translate="yes" xml:space="preserve">
          <source>def lteq(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;deadline&quot; id=&quot;scala.concurrent.duration.Deadline&quot; name=&quot;scala.concurrent.duration.Deadline&quot;&gt;Deadline&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;deadline&quot; id=&quot;scala.concurrent.duration.Deadline&quot; name=&quot;scala.concurrent.duration.Deadline&quot;&gt;Deadline&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc838e2e9dc36982d08e482aba73a86543e859ab" translate="yes" xml:space="preserve">
          <source>def lteq(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a55b533a495783a0b1337c97872f05817df0fa5" translate="yes" xml:space="preserve">
          <source>def lteq(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cb25d823b4b4fe60ef2ea684cc99af2ef5a630a" translate="yes" xml:space="preserve">
          <source>def lteq(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94043ab7e1d077119b3c2628cdaf8c5ea0fd3ced" translate="yes" xml:space="preserve">
          <source>def lteq(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baf06b7e35f559713099798e548243dc4d61f79f" translate="yes" xml:space="preserve">
          <source>def lteq(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d68ed93ee1b3fd0781f8ee7bcf49b9f1f927f438" translate="yes" xml:space="preserve">
          <source>def lteq(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08ee728bf10b08dc461aacf68b4f125f23cb7f85" translate="yes" xml:space="preserve">
          <source>def lteq(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.CachedReverse.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.CachedReverse.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1633430cae0e2ed15beb79e6e434454d21b5d46" translate="yes" xml:space="preserve">
          <source>def lteq(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.math.Ordering.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;span name=&quot;scala.math.Ordering.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6216ab4fe26e823a1e6423ae70e11ac76e0c47a7" translate="yes" xml:space="preserve">
          <source>def main(&lt;span name=&quot;args&quot;&gt;args: &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdd814799fd384e48fa138aba994a01b548484cc" translate="yes" xml:space="preserve">
          <source>def makeSet: &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a9c5f81494a8a95dc43ea5bc73eaa8733b4304f" translate="yes" xml:space="preserve">
          <source>def make[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.make.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.make.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b58dc667b30f515f0e66395dec87831191ab0af5" translate="yes" xml:space="preserve">
          <source>def make[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuilder.make.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arraybuilder&quot; id=&quot;scala.collection.mutable.ArrayBuilder&quot; name=&quot;scala.collection.mutable.ArrayBuilder&quot;&gt;ArrayBuilder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuilder.make.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4a59c78d3ca632e3a1dffb49cb2f6058f335831" translate="yes" xml:space="preserve">
          <source>def manifest[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](implicit &lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;#Manifest%5BT%5D=scala.reflect.Manifest%5BT%5D&quot; id=&quot;scala.Predef.Manifest&quot; name=&quot;scala.Predef.Manifest&quot;&gt;Manifest&lt;/a&gt;[&lt;span name=&quot;scala.Predef.manifest.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;#Manifest%5BT%5D=scala.reflect.Manifest%5BT%5D&quot; id=&quot;scala.Predef.Manifest&quot; name=&quot;scala.Predef.Manifest&quot;&gt;Manifest&lt;/a&gt;[&lt;span name=&quot;scala.Predef.manifest.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d5a565f00a5e236139a90d025e9bce029cc4271" translate="yes" xml:space="preserve">
          <source>def map(&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76f461d796cbcca230b504579846bf66a95b30c9" translate="yes" xml:space="preserve">
          <source>def map(&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.mutable.BitSet&quot; name=&quot;scala.collection.mutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ac9d6329183317b46503e05b2e117362151ea11" translate="yes" xml:space="preserve">
          <source>def map(&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf4c8192c86caee6b6dbdef5bc60e6d9bea11e3e" translate="yes" xml:space="preserve">
          <source>def map(&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;doubleaccumulator&quot; id=&quot;scala.jdk.DoubleAccumulator&quot; name=&quot;scala.jdk.DoubleAccumulator&quot;&gt;DoubleAccumulator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ae859ea11245cb46a4bb2baccc9527b5d475b20" translate="yes" xml:space="preserve">
          <source>def map(&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afdf1733005bd2589ec2ac13531a965cf8d7acd7" translate="yes" xml:space="preserve">
          <source>def map(&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;intaccumulator&quot; id=&quot;scala.jdk.IntAccumulator&quot; name=&quot;scala.jdk.IntAccumulator&quot;&gt;IntAccumulator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9867315eadcdbc6cb4ab46319953014e6388148" translate="yes" xml:space="preserve">
          <source>def map(&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.BitSetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aee96eb78e05e448c6d2c6ca84f56623642989b" translate="yes" xml:space="preserve">
          <source>def map(&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;longaccumulator&quot; id=&quot;scala.jdk.LongAccumulator&quot; name=&quot;scala.jdk.LongAccumulator&quot;&gt;LongAccumulator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad1264c4343e1451bf3ea125c690f36fc0e6669e" translate="yes" xml:space="preserve">
          <source>def map(&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;enumeration%24valueset&quot; id=&quot;scala.Enumeration.ValueSet&quot; name=&quot;scala.Enumeration.ValueSet&quot;&gt;ValueSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c8430d023ce546ada26cd6dd28e2c748d9ec761" translate="yes" xml:space="preserve">
          <source>def mapFactory: &lt;a href=&quot;../collection/mapfactory&quot; id=&quot;scala.collection.MapFactory&quot; name=&quot;scala.collection.MapFactory&quot;&gt;MapFactory&lt;/a&gt;[&lt;a href=&quot;../collection/mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62d109608da9b4f36bb79cda0da5553b6f917df3" translate="yes" xml:space="preserve">
          <source>def mapFactory: &lt;a href=&quot;../mapfactory&quot; id=&quot;scala.collection.MapFactory&quot; name=&quot;scala.collection.MapFactory&quot;&gt;MapFactory&lt;/a&gt;[&lt;a href=&quot;../mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d09b61ea31a322a07fc4c1f1b174c050d752658e" translate="yes" xml:space="preserve">
          <source>def mapFactory: &lt;a href=&quot;../mapfactory&quot; id=&quot;scala.collection.MapFactory&quot; name=&quot;scala.collection.MapFactory&quot;&gt;MapFactory&lt;/a&gt;[&lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.immutable.HashMap&quot; name=&quot;scala.collection.immutable.HashMap&quot;&gt;HashMap&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b568dd9233d41b547786158923bb5f65f6dd166" translate="yes" xml:space="preserve">
          <source>def mapFactory: &lt;a href=&quot;../mapfactory&quot; id=&quot;scala.collection.MapFactory&quot; name=&quot;scala.collection.MapFactory&quot;&gt;MapFactory&lt;/a&gt;[&lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.mutable.HashMap&quot; name=&quot;scala.collection.mutable.HashMap&quot;&gt;HashMap&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1583bfed9785b6c7ef2d0968a0e1006ec0908852" translate="yes" xml:space="preserve">
          <source>def mapFactory: &lt;a href=&quot;../mapfactory&quot; id=&quot;scala.collection.MapFactory&quot; name=&quot;scala.collection.MapFactory&quot;&gt;MapFactory&lt;/a&gt;[&lt;a href=&quot;linkedhashmap&quot; id=&quot;scala.collection.mutable.LinkedHashMap&quot; name=&quot;scala.collection.mutable.LinkedHashMap&quot;&gt;LinkedHashMap&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f74f2b39a19b539a961ff9a28fa92bd65284399" translate="yes" xml:space="preserve">
          <source>def mapFactory: &lt;a href=&quot;../mapfactory&quot; id=&quot;scala.collection.MapFactory&quot; name=&quot;scala.collection.MapFactory&quot;&gt;MapFactory&lt;/a&gt;[&lt;a href=&quot;listmap&quot; id=&quot;scala.collection.immutable.ListMap&quot; name=&quot;scala.collection.immutable.ListMap&quot;&gt;ListMap&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cff508d5f8f4af94298f247b72a60d05fd087e92" translate="yes" xml:space="preserve">
          <source>def mapFactory: &lt;a href=&quot;../mapfactory&quot; id=&quot;scala.collection.MapFactory&quot; name=&quot;scala.collection.MapFactory&quot;&gt;MapFactory&lt;/a&gt;[&lt;a href=&quot;listmap&quot; id=&quot;scala.collection.mutable.ListMap&quot; name=&quot;scala.collection.mutable.ListMap&quot;&gt;ListMap&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f49322a842a23cc4b542176022d532c6ce8944df" translate="yes" xml:space="preserve">
          <source>def mapFactory: &lt;a href=&quot;../mapfactory&quot; id=&quot;scala.collection.MapFactory&quot; name=&quot;scala.collection.MapFactory&quot;&gt;MapFactory&lt;/a&gt;[&lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c18283e69c8115775d33df7dd9463cfcd5c47bd" translate="yes" xml:space="preserve">
          <source>def mapFactory: &lt;a href=&quot;../mapfactory&quot; id=&quot;scala.collection.MapFactory&quot; name=&quot;scala.collection.MapFactory&quot;&gt;MapFactory&lt;/a&gt;[&lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8364d67be06b62193247a2a676a4ef39fc397d5d" translate="yes" xml:space="preserve">
          <source>def mapFactory: &lt;a href=&quot;../mapfactory&quot; id=&quot;scala.collection.MapFactory&quot; name=&quot;scala.collection.MapFactory&quot;&gt;MapFactory&lt;/a&gt;[&lt;a href=&quot;openhashmap&quot; id=&quot;scala.collection.mutable.OpenHashMap&quot; name=&quot;scala.collection.mutable.OpenHashMap&quot;&gt;OpenHashMap&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f444dbcbff2ca1aa4d595e3ff40232b1ef0c3f8" translate="yes" xml:space="preserve">
          <source>def mapFactory: &lt;a href=&quot;../mapfactory&quot; id=&quot;scala.collection.MapFactory&quot; name=&quot;scala.collection.MapFactory&quot;&gt;MapFactory&lt;/a&gt;[&lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.immutable.SeqMap&quot; name=&quot;scala.collection.immutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="372edc8f5d1474a5148bf89783eb8d5df39a7913" translate="yes" xml:space="preserve">
          <source>def mapFactory: &lt;a href=&quot;../mapfactory&quot; id=&quot;scala.collection.MapFactory&quot; name=&quot;scala.collection.MapFactory&quot;&gt;MapFactory&lt;/a&gt;[&lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.mutable.SeqMap&quot; name=&quot;scala.collection.mutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="298070884ca1f9d88b7fcde2e9cc4aeda012edbf" translate="yes" xml:space="preserve">
          <source>def mapFactory: &lt;a href=&quot;../mapfactory&quot; id=&quot;scala.collection.MapFactory&quot; name=&quot;scala.collection.MapFactory&quot;&gt;MapFactory&lt;/a&gt;[&lt;a href=&quot;treeseqmap&quot; id=&quot;scala.collection.immutable.TreeSeqMap&quot; name=&quot;scala.collection.immutable.TreeSeqMap&quot;&gt;TreeSeqMap&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c749c44fa09123e4cde9946988efdb90f7aface6" translate="yes" xml:space="preserve">
          <source>def mapFactory: &lt;a href=&quot;../mapfactory&quot; id=&quot;scala.collection.MapFactory&quot; name=&quot;scala.collection.MapFactory&quot;&gt;MapFactory&lt;/a&gt;[&lt;a href=&quot;triemap&quot; id=&quot;scala.collection.concurrent.TrieMap&quot; name=&quot;scala.collection.concurrent.TrieMap&quot;&gt;TrieMap&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a9b0bf6f430b01fcadf4317a5f867d28c3b5740" translate="yes" xml:space="preserve">
          <source>def mapFactory: &lt;a href=&quot;../mapfactory&quot; id=&quot;scala.collection.MapFactory&quot; name=&quot;scala.collection.MapFactory&quot;&gt;MapFactory&lt;/a&gt;[&lt;a href=&quot;vectormap&quot; id=&quot;scala.collection.immutable.VectorMap&quot; name=&quot;scala.collection.immutable.VectorMap&quot;&gt;VectorMap&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cd5ddab0c3dca580c19ed8dd8b8aa61ab3aad26" translate="yes" xml:space="preserve">
          <source>def mapFactory: &lt;a href=&quot;../mapfactory&quot; id=&quot;scala.collection.MapFactory&quot; name=&quot;scala.collection.MapFactory&quot;&gt;MapFactory&lt;/a&gt;[&lt;a href=&quot;weakhashmap&quot; id=&quot;scala.collection.mutable.WeakHashMap&quot; name=&quot;scala.collection.mutable.WeakHashMap&quot;&gt;WeakHashMap&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23bebd81a043c8d961c285ef08a7aa607abf8a1a" translate="yes" xml:space="preserve">
          <source>def mapFactory: &lt;a href=&quot;mapfactory&quot; id=&quot;scala.collection.MapFactory&quot; name=&quot;scala.collection.MapFactory&quot;&gt;MapFactory&lt;/a&gt;[&lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10ddfa221bf32516cbb134b8fca08b3d8d33bd40" translate="yes" xml:space="preserve">
          <source>def mapFactory: &lt;a href=&quot;mapfactory&quot; id=&quot;scala.collection.MapFactory&quot; name=&quot;scala.collection.MapFactory&quot;&gt;MapFactory&lt;/a&gt;[&lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.SeqMap&quot; name=&quot;scala.collection.SeqMap&quot;&gt;SeqMap&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2d31de7a152aa232ff527b5225831565dc1b457" translate="yes" xml:space="preserve">
          <source>def mapFactory: &lt;a href=&quot;mapviewfactory&quot; id=&quot;scala.collection.MapViewFactory&quot; name=&quot;scala.collection.MapViewFactory&quot;&gt;MapViewFactory&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4f1273e6515cbd3c913e27b39c836e0f07166c8" translate="yes" xml:space="preserve">
          <source>def mapHash(&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../collection/map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[_, _]&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd8eedfd5ce32bcf05c97611efc28091fc3cf376" translate="yes" xml:space="preserve">
          <source>def mapInPlace(&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofboolean&quot; id=&quot;scala.collection.mutable.ArraySeq.ofBoolean&quot; name=&quot;scala.collection.mutable.ArraySeq.ofBoolean&quot;&gt;ofBoolean&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="909e06c946256d406a350bc988cb35b29485934d" translate="yes" xml:space="preserve">
          <source>def mapInPlace(&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofbyte&quot; id=&quot;scala.collection.mutable.ArraySeq.ofByte&quot; name=&quot;scala.collection.mutable.ArraySeq.ofByte&quot;&gt;ofByte&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d8b27f0986475e380ac6a6ab3d1634d0f380b6e" translate="yes" xml:space="preserve">
          <source>def mapInPlace(&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofchar&quot; id=&quot;scala.collection.mutable.ArraySeq.ofChar&quot; name=&quot;scala.collection.mutable.ArraySeq.ofChar&quot;&gt;ofChar&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ba2d0cca1c04de456807cd9dd45086840deb0e7" translate="yes" xml:space="preserve">
          <source>def mapInPlace(&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aaeada9787c9545868c2e6b9995a1b09fd45684" translate="yes" xml:space="preserve">
          <source>def mapInPlace(&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofdouble&quot; id=&quot;scala.collection.mutable.ArraySeq.ofDouble&quot; name=&quot;scala.collection.mutable.ArraySeq.ofDouble&quot;&gt;ofDouble&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d6a3421933b1aac4d335d2ce48ffb1f396b9ace" translate="yes" xml:space="preserve">
          <source>def mapInPlace(&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24offloat&quot; id=&quot;scala.collection.mutable.ArraySeq.ofFloat&quot; name=&quot;scala.collection.mutable.ArraySeq.ofFloat&quot;&gt;ofFloat&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f45c76d71ca9421eb19a4f8638882f751caf9c6d" translate="yes" xml:space="preserve">
          <source>def mapInPlace(&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofint&quot; id=&quot;scala.collection.mutable.ArraySeq.ofInt&quot; name=&quot;scala.collection.mutable.ArraySeq.ofInt&quot;&gt;ofInt&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbe7681009de9f5cec1beb03152b32222e3663cb" translate="yes" xml:space="preserve">
          <source>def mapInPlace(&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24oflong&quot; id=&quot;scala.collection.mutable.ArraySeq.ofLong&quot; name=&quot;scala.collection.mutable.ArraySeq.ofLong&quot;&gt;ofLong&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e92dbcf580d2d2c7aa3c1700f2fb56fb55eb007" translate="yes" xml:space="preserve">
          <source>def mapInPlace(&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofshort&quot; id=&quot;scala.collection.mutable.ArraySeq.ofShort&quot; name=&quot;scala.collection.mutable.ArraySeq.ofShort&quot;&gt;ofShort&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ee08781fa06f4fe97e0c7ae76da5d0c2fb3b57e" translate="yes" xml:space="preserve">
          <source>def mapInPlace(&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofunit&quot; id=&quot;scala.collection.mutable.ArraySeq.ofUnit&quot; name=&quot;scala.collection.mutable.ArraySeq.ofUnit&quot;&gt;ofUnit&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f76dba6310f1c8ead36c79429fe98f6549007be4" translate="yes" xml:space="preserve">
          <source>def mapInPlace(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d2b573b19aeaab6687b16e487be95cf7a5ca424" translate="yes" xml:space="preserve">
          <source>def mapInPlace(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aec993cf8991ed27df01b90070f58230745f84ce" translate="yes" xml:space="preserve">
          <source>def mapInPlace(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9639596337ce93e95b9c9ad7938e3c37bae565a3" translate="yes" xml:space="preserve">
          <source>def mapInPlace(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36a9157216a3a0061d3f3586e682ecc1090dbc35" translate="yes" xml:space="preserve">
          <source>def mapInPlace(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3c2c58d278a785ab1b89a0d1a75d7b36a259150" translate="yes" xml:space="preserve">
          <source>def mapInPlace(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofref&quot; id=&quot;scala.collection.mutable.ArraySeq.ofRef&quot; name=&quot;scala.collection.mutable.ArraySeq.ofRef&quot;&gt;ofRef&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c012856439daf8f5c005ce9bb6d8dc78e274b9bf" translate="yes" xml:space="preserve">
          <source>def mapInPlace(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c16da9d15acd72e105f1bcee0c576804a48f6cdc" translate="yes" xml:space="preserve">
          <source>def mapInPlace(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d28900b333993a1859b99925f281c1cbb542b53c" translate="yes" xml:space="preserve">
          <source>def mapInPlace(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqops&quot; id=&quot;scala.collection.mutable.IndexedSeqOps&quot; name=&quot;scala.collection.mutable.IndexedSeqOps&quot;&gt;IndexedSeqOps&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b33e25705386ba2ea3b6cc9cfdb12bcf94ab993f" translate="yes" xml:space="preserve">
          <source>def mapInPlace(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37a7474e6f23046e1fb288533428ff1b492135dc" translate="yes" xml:space="preserve">
          <source>def mapInPlace(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;priorityqueue&quot; id=&quot;scala.collection.mutable.PriorityQueue&quot; name=&quot;scala.collection.mutable.PriorityQueue&quot;&gt;PriorityQueue&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db059eec156390968f8fab0edbd7f3c7a6ed537d" translate="yes" xml:space="preserve">
          <source>def mapInPlace(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6589c457dc560ec3f424bdcd30cf36440fcb03d5" translate="yes" xml:space="preserve">
          <source>def mapInPlace(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ebc30ed0a5a3f17695665ffdea763f94ca3047b" translate="yes" xml:space="preserve">
          <source>def mapInPlace(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faa7621f6682772dea5ffbf5ffe82edf4b2d2ac9" translate="yes" xml:space="preserve">
          <source>def mapInPlace(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.Unrolled.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.Unrolled.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75f0d1994eb73e6b880a735c15dd15504f9c8689" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;]) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eacc1859848377508fc471247f1bbc7e14bb6082" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;]) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afcda5d726281978f3f9616d274a49432a8948af" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4dbcea52203b379340fff9cd7ec44f5b97bfdd8" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a6c1bcd4b499c581921a10d383777667d64f39e" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;]) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bf851ff1033a6d00a158b88f3d974863a495275" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5a3e31050f0d3e87a4b594d50c7c5cb844b62c1" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c740b038db800f2cbe9af56335d9186e9592056" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;]) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="649a20415331278802f52bb497b07742881f9397" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;]) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13c12e8d339e6d41f6e30ee75ab05c0c7e0ec80b" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuilder.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuilder.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bfc2bb3520f45bbc619ea096e473a6a6fb2962a" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuilder.ofRef.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuilder.ofRef.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dc2d05f73eb2d240dae3c2d1aebf5c974b4ccb8" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../collection/mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;), &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9559a34367ebea01d697c466bf0f7eb99a47264" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../immutable/list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;immutable.List&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="424c79b9685e9ff2715f31d9539300592286a546" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78ea5fe92c1f814175c461a789ca2970677be8ef" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e506d5e33de0f87777bd95e2d910d556f42b710f" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;anyrefmap&quot; id=&quot;scala.collection.mutable.AnyRefMap&quot; name=&quot;scala.collection.mutable.AnyRefMap&quot;&gt;AnyRefMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.AnyRefMapBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.AnyRefMapBuilder.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.AnyRefMap.AnyRefMapBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.AnyRefMapBuilder.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cc643672a2e211bf73f2a3e5cd5f193ee521e7c" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;anyrefmap&quot; id=&quot;scala.collection.mutable.AnyRefMap&quot; name=&quot;scala.collection.mutable.AnyRefMap&quot;&gt;AnyRefMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52d0e99cafec50605912445a4c049fe2533df0a5" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;bitset&quot; id=&quot;scala.collection.mutable.BitSet&quot; name=&quot;scala.collection.mutable.BitSet&quot;&gt;BitSet&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92c07ea6186e11427cdf8643457167e0e4a6cdb7" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;collisionproofhashmap&quot; id=&quot;scala.collection.mutable.CollisionProofHashMap&quot; name=&quot;scala.collection.mutable.CollisionProofHashMap&quot;&gt;CollisionProofHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2da93a344449599636603b173bbc2fadb4593d7d" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;doubleaccumulator&quot; id=&quot;scala.jdk.DoubleAccumulator&quot; name=&quot;scala.jdk.DoubleAccumulator&quot;&gt;DoubleAccumulator&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9d23385a86164511f112660c46631c2a2b26de5" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.mutable.HashMap&quot; name=&quot;scala.collection.mutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30dd5de47797bd29b04b837b7d8f757df7c17aee" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecfe3ef31e0a6f32c0df3f415069aff5fb365626" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;intaccumulator&quot; id=&quot;scala.jdk.IntAccumulator&quot; name=&quot;scala.jdk.IntAccumulator&quot;&gt;IntAccumulator&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ff548dcb0bd4a0b8dc90d5cc06e0cdd497f697e" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;linkedhashmap&quot; id=&quot;scala.collection.mutable.LinkedHashMap&quot; name=&quot;scala.collection.mutable.LinkedHashMap&quot;&gt;LinkedHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff9ea9a9f0e977d88d2aaa0502f784313ba7dfaa" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70a2f07e7928c5d369892434de2497c211918e10" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;listmap&quot; id=&quot;scala.collection.mutable.ListMap&quot; name=&quot;scala.collection.mutable.ListMap&quot;&gt;ListMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdbacfd0b1bd8fdf74e5a9d9ca5f5087024e6159" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;longaccumulator&quot; id=&quot;scala.jdk.LongAccumulator&quot; name=&quot;scala.jdk.LongAccumulator&quot;&gt;LongAccumulator&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae7c354b3e80f59de7895807ac07fc6cba2a034a" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;longmap&quot; id=&quot;scala.collection.mutable.LongMap&quot; name=&quot;scala.collection.mutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LongMap.LongMapBuilder.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.LongMapBuilder.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="486ac3d40a5a574c89edb2ea04a4fa9b7f1586a1" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;longmap&quot; id=&quot;scala.collection.mutable.LongMap&quot; name=&quot;scala.collection.mutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5e90e17b7e217670959c4a5755f548a7e5723d3" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71a0dec01105ecc5153111bbd093989a36cd3392" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1d3de094fc20a6f234f905f149bafbcc7366c82" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;]]) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;]), &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03557f66ef836c97ff0354ff6b6226133994c393" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.mutable.Map.WithDefault&quot; name=&quot;scala.collection.mutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="106de3ab2698eb52f3ac27495ad0470a52813ae7" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;openhashmap&quot; id=&quot;scala.collection.mutable.OpenHashMap&quot; name=&quot;scala.collection.mutable.OpenHashMap&quot;&gt;OpenHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;]) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;), &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="445ea7adbda0ec2e693d2232d240469ee4d9c7b9" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;priorityqueue&quot; id=&quot;scala.collection.mutable.PriorityQueue&quot; name=&quot;scala.collection.mutable.PriorityQueue&quot;&gt;PriorityQueue&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95cf87a29410fb6077319f65ddbe8c2162da4ad7" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.mutable.SeqMap&quot; name=&quot;scala.collection.mutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fca64a9f8c75c3052d4c35d633e43ef582082df9" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95c69bf6db8883f77f240ea85738c6e7efb7a969" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a83e7d5200df5696fca0aacb2af30b63336c9ee" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.mutable.SortedMap&quot; name=&quot;scala.collection.mutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8442fd0630520ebec15f890d3b162c2e0c061b0e" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.mutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.mutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d32dd7353bcd5bfddb6ec444dda9cc21f73d512" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fed4107c7b1093e1604aa748f74c0ea71cbea421" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;treemap&quot; id=&quot;scala.collection.mutable.TreeMap&quot; name=&quot;scala.collection.mutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c15b7d804a12ec41a2ecb8c69fb680b8eb3662a" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;treeseqmap&quot; id=&quot;scala.collection.immutable.TreeSeqMap&quot; name=&quot;scala.collection.immutable.TreeSeqMap&quot;&gt;TreeSeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Builder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Builder.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;mutable.Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Builder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Builder.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5de94a16a3368d402010849fd25593abdfdc7a6" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;treeset&quot; id=&quot;scala.collection.mutable.TreeSet&quot; name=&quot;scala.collection.mutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b684cd6a7415f9bbc698eea1eb104d686715eeee" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;triemap&quot; id=&quot;scala.collection.concurrent.TrieMap&quot; name=&quot;scala.collection.concurrent.TrieMap&quot;&gt;TrieMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccf0f8c095bb5f86f7d7ce36c693229875425cdd" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6133df45da8dc9457eefa37d4d89a98034233eb" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorBuilder.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="670e3097bf5fed00b5801ef9e9c030d169b8b230" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;weakhashmap&quot; id=&quot;scala.collection.mutable.WeakHashMap&quot; name=&quot;scala.collection.mutable.WeakHashMap&quot;&gt;WeakHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99ae336b9694110b7501990afd90848a504ca459" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a4eb06b4780ad605f91da8fb601e7292d41af48" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.Builder.To&quot;&gt;To&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Builder.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3e66ca931bfef4f163ec5600e307fc6281730bc" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.GrowableBuilder.To&quot;&gt;To&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.GrowableBuilder.Elem&quot;&gt;Elem&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6b0eaba939e8211ee1a0f17b88feae25be64f0f" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.ImmutableBuilder.C&quot;&gt;C&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ImmutableBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b72a437a87da2282113d684a54df41447a2042ef" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.MapOps.C&quot;&gt;C&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f9e65d8d839409eb8b58a306ff81730951256f1" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.ReusableBuilder.To&quot;&gt;To&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ReusableBuilder.Elem&quot;&gt;Elem&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="817007e3f669e22397ff8ab67e995e6c21aa1589" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.SetOps.C&quot;&gt;C&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bcf5c17e9f4fe70beda81ce1e9786739f849cb0" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.SortedMapOps.C&quot;&gt;C&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b066eb10c09b13b1f38b1a824997eba344826080" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c5f10100f4141d06f4b213cba4f728275ac1730" translate="yes" xml:space="preserve">
          <source>def mapResult[&lt;span name=&quot;NewTo&quot;&gt;NewTo&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.jdk.Accumulator.C&quot;&gt;C&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Builder.mapResult.NewTo&quot;&gt;NewTo&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8fc4b7d56010e27c9e6d63e87ebd71037f9ef8a" translate="yes" xml:space="preserve">
          <source>def mapTo[&lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](implicit &lt;span name=&quot;tag&quot;&gt;tag: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.mapTo.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.mapTo.S&quot;&gt;S&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fd95560ffe9b985b3ccaed39f99703bbc69b08b" translate="yes" xml:space="preserve">
          <source>def mapValuesInPlace(&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.mutable.LongMap&quot; name=&quot;scala.collection.mutable.LongMap&quot;&gt;LongMap&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89c9106e36d1560fed6b1d8701379258f20cdc7c" translate="yes" xml:space="preserve">
          <source>def mapValuesInPlace(&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;systemproperties&quot; id=&quot;scala.sys.SystemProperties&quot; name=&quot;scala.sys.SystemProperties&quot;&gt;SystemProperties&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f4d024ee82a0629434e89e5007b0d9db7541bcd" translate="yes" xml:space="preserve">
          <source>def mapValuesInPlace(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.concurrent.Map&quot; name=&quot;scala.collection.concurrent.Map&quot;&gt;Map&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86b9416892d752bb9352d36e14a268fd5357edbd" translate="yes" xml:space="preserve">
          <source>def mapValuesInPlace(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;triemap&quot; id=&quot;scala.collection.concurrent.TrieMap&quot; name=&quot;scala.collection.concurrent.TrieMap&quot;&gt;TrieMap&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="435ddb8eaef42b6bf3822c2b15f9ffc1dba730a9" translate="yes" xml:space="preserve">
          <source>def mapValuesInPlace(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;abstractmap&quot; id=&quot;scala.collection.mutable.AbstractMap&quot; name=&quot;scala.collection.mutable.AbstractMap&quot;&gt;AbstractMap&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aefa020d80f3c20700449f5c56198a9b1dffb3c2" translate="yes" xml:space="preserve">
          <source>def mapValuesInPlace(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;anyrefmap&quot; id=&quot;scala.collection.mutable.AnyRefMap&quot; name=&quot;scala.collection.mutable.AnyRefMap&quot;&gt;AnyRefMap&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d67e664e478e05b538cd767dfa45a435740e54c" translate="yes" xml:space="preserve">
          <source>def mapValuesInPlace(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;collisionproofhashmap&quot; id=&quot;scala.collection.mutable.CollisionProofHashMap&quot; name=&quot;scala.collection.mutable.CollisionProofHashMap&quot;&gt;CollisionProofHashMap&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2d7e7614988dab03d5a138ece08a2b2b1c69c30" translate="yes" xml:space="preserve">
          <source>def mapValuesInPlace(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.mutable.HashMap&quot; name=&quot;scala.collection.mutable.HashMap&quot;&gt;HashMap&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ded51dbbf49bc36219d7034393425e1e972cb09" translate="yes" xml:space="preserve">
          <source>def mapValuesInPlace(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;linkedhashmap&quot; id=&quot;scala.collection.mutable.LinkedHashMap&quot; name=&quot;scala.collection.mutable.LinkedHashMap&quot;&gt;LinkedHashMap&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94f6d18f8a5bfd4c02556350c5020fa2414091fc" translate="yes" xml:space="preserve">
          <source>def mapValuesInPlace(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.mutable.ListMap&quot; name=&quot;scala.collection.mutable.ListMap&quot;&gt;ListMap&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c052921515072465035e2fafa8c04faf029cf2a" translate="yes" xml:space="preserve">
          <source>def mapValuesInPlace(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eead83ab1432840bcee8b75eff70b18d47f79d67" translate="yes" xml:space="preserve">
          <source>def mapValuesInPlace(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.mutable.Map.WithDefault&quot; name=&quot;scala.collection.mutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b52588737b3c9c821691f0d9eb92888f811ae45f" translate="yes" xml:space="preserve">
          <source>def mapValuesInPlace(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;mapops&quot; id=&quot;scala.collection.mutable.MapOps&quot; name=&quot;scala.collection.mutable.MapOps&quot;&gt;MapOps&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="288129c07ab6dc879d808385e62e541923cc4a0c" translate="yes" xml:space="preserve">
          <source>def mapValuesInPlace(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;multimap&quot; id=&quot;scala.collection.mutable.MultiMap&quot; name=&quot;scala.collection.mutable.MultiMap&quot;&gt;MultiMap&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d10af5124d9ca9e46b26cd1665c89f6460ae8992" translate="yes" xml:space="preserve">
          <source>def mapValuesInPlace(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;openhashmap&quot; id=&quot;scala.collection.mutable.OpenHashMap&quot; name=&quot;scala.collection.mutable.OpenHashMap&quot;&gt;OpenHashMap&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b8099d8dbfc7bad34545ff65aa0ee8cdef8a1fb" translate="yes" xml:space="preserve">
          <source>def mapValuesInPlace(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.mutable.SeqMap&quot; name=&quot;scala.collection.mutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7faec1a682d68c77dfc23968b8599ae7691c226" translate="yes" xml:space="preserve">
          <source>def mapValuesInPlace(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.mutable.SortedMap&quot; name=&quot;scala.collection.mutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d19e22519cb96e7f0fc11f653afb2ec63edd87d5" translate="yes" xml:space="preserve">
          <source>def mapValuesInPlace(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.mutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.mutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c081af84d4770188193c036200338d371b7768b" translate="yes" xml:space="preserve">
          <source>def mapValuesInPlace(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmapops&quot; id=&quot;scala.collection.mutable.SortedMapOps&quot; name=&quot;scala.collection.mutable.SortedMapOps&quot;&gt;SortedMapOps&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86aaee5342bb627d6862af14f2f10fafc18f5af4" translate="yes" xml:space="preserve">
          <source>def mapValuesInPlace(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.mutable.TreeMap&quot; name=&quot;scala.collection.mutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d1d9536eecb07c7eba35c44cdf7e3de28071d50" translate="yes" xml:space="preserve">
          <source>def mapValuesInPlace(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;weakhashmap&quot; id=&quot;scala.collection.mutable.WeakHashMap&quot; name=&quot;scala.collection.mutable.WeakHashMap&quot;&gt;WeakHashMap&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1597574808a9fb4d5cc49fdb061d8fd18969099" translate="yes" xml:space="preserve">
          <source>def mapValuesNow[&lt;span name=&quot;V1&quot;&gt;V1&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.AnyRefMap.mapValuesNow.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;anyrefmap&quot; id=&quot;scala.collection.mutable.AnyRefMap&quot; name=&quot;scala.collection.mutable.AnyRefMap&quot;&gt;AnyRefMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.mapValuesNow.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfa087d4f91dc8d92d96a62175b02085bef218e3" translate="yes" xml:space="preserve">
          <source>def mapValuesNow[&lt;span name=&quot;V1&quot;&gt;V1&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.LongMap.mapValuesNow.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.mutable.LongMap&quot; name=&quot;scala.collection.mutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LongMap.mapValuesNow.V1&quot;&gt;V1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5b0549e7c8221c997718c6a038549294ef1a371" translate="yes" xml:space="preserve">
          <source>def mapValues[&lt;span name=&quot;W&quot;&gt;W&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapView.mapValues.W&quot;&gt;W&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.mapValues.W&quot;&gt;W&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7056e219d9e14df2388c3c0d8d22ff64c959093" translate="yes" xml:space="preserve">
          <source>def mapValues[&lt;span name=&quot;W&quot;&gt;W&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapView.mapValues.W&quot;&gt;W&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.mapValues.W&quot;&gt;W&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d5e64ca5965c8d3678bac3718601dc107ba4106" translate="yes" xml:space="preserve">
          <source>def mapValues[&lt;span name=&quot;W&quot;&gt;W&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapView.mapValues.W&quot;&gt;W&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.mapValues.W&quot;&gt;W&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dba30337fba030708ebc40578aaac99c95fc594" translate="yes" xml:space="preserve">
          <source>def mapValues[&lt;span name=&quot;W&quot;&gt;W&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapView.mapValues.W&quot;&gt;W&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.mapValues.W&quot;&gt;W&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec3b5efea2c275fe3eed498474d39b99902dab3d" translate="yes" xml:space="preserve">
          <source>def mapValues[&lt;span name=&quot;W&quot;&gt;W&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapView.mapValues.W&quot;&gt;W&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.mapValues.W&quot;&gt;W&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83ee857a15217c5c259dd4f9fa90aa51b44cd7ea" translate="yes" xml:space="preserve">
          <source>def mapValues[&lt;span name=&quot;W&quot;&gt;W&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapView.mapValues.W&quot;&gt;W&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.mapValues.W&quot;&gt;W&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cbe60f094d3136b469075b7ba7cac4f27941143" translate="yes" xml:space="preserve">
          <source>def mapValues[&lt;span name=&quot;W&quot;&gt;W&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapView.mapValues.W&quot;&gt;W&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.mapValues.W&quot;&gt;W&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d7914c7ef958bde3120aa899bca8d5f2664dcc5" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.util.Either.LeftProjection.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.util.Either.LeftProjection.map.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.util.Either.LeftProjection.map.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.util.Either.LeftProjection.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49e381cb9f124228a32fd08d2e2aff6a3d6faf37" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.LazyZip2.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;bf&quot;&gt;bf: &lt;a href=&quot;buildfrom&quot; id=&quot;scala.collection.BuildFrom&quot; name=&quot;scala.collection.BuildFrom&quot;&gt;BuildFrom&lt;/a&gt;[&lt;span name=&quot;scala.collection.LazyZip2.C1&quot;&gt;C1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.map.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.map.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.LazyZip2.map.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6977b391f4d70d4200fd946209343cd8658eaf8" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.LazyZip3.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;bf&quot;&gt;bf: &lt;a href=&quot;buildfrom&quot; id=&quot;scala.collection.BuildFrom&quot; name=&quot;scala.collection.BuildFrom&quot;&gt;BuildFrom&lt;/a&gt;[&lt;span name=&quot;scala.collection.LazyZip3.C1&quot;&gt;C1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.map.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.map.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.LazyZip3.map.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="407bf6b0fbc03586ddf9e33cebb4f4ad5a280a3a" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.LazyZip4.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;bf&quot;&gt;bf: &lt;a href=&quot;buildfrom&quot; id=&quot;scala.collection.BuildFrom&quot; name=&quot;scala.collection.BuildFrom&quot;&gt;BuildFrom&lt;/a&gt;[&lt;span name=&quot;scala.collection.LazyZip4.C1&quot;&gt;C1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.map.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.map.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.LazyZip4.map.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a000a3ec453e3d6dad688b08fbdbb06adcef8da3" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5b0e3297cc717c02c42d751023205c777efa241" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;collection.mutable.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d982f8b7218adb70a97cd17572a9ca8b5255e891" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81a15423b8c695d5e70d0aa72b8bff30ad74cba7" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5733a8f3ef17aa1d879aeaac6e18fbb9a0365921" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3830f9f5b7f7e3c91291da77f5be8465cb3a896" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="338e2397a1095d5007c9c386ea015a3b4e821cc1" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc31999cab0a644d2e2250d49b4b1f75c803ecbe" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce90305846155f7c487e595f3d53e5054527cce5" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94d2f95e75081d904ca86d63dd0eafad32de5504" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bce798478f0eb10af720b2c36e401fb8e956fd2" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f71af494a6fcabb6a3dbf1a48d2d2ac1bf05484" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.MapOps.WithFilter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.WithFilter.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.WithFilter.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.WithFilter.IterableCC&quot;&gt;IterableCC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.WithFilter.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fef5de1c4c356b69aa21363f4c79d72f4dd8cb1" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b6994c819aa183023f7f570b1faab545eaa4f66" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a9a66aa94eb7885627f867db5ec069e349dac9d" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69d94df7978d3858844ab47a4b9ea55b71a76447" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f150fbef7fd758bf206edd4760b4a5def7c42ef" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1a08157dd86e7472eed538af05848c4b02db3a1" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca0f3926afcff814084c1043aacc28a69575b456" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e54c3953d5e21c877d883b9b9d7690e5ca92e36" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d72dd6eab6905b0cc5469ce740d9d6f7fc1d0164" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="984b613cd704d30eedc780148895cac1a7471c4a" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="304caa948d9b09640cbb472b72583058b239088f" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.WithFilter.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.IterableCC&quot;&gt;IterableCC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.WithFilter.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88882d8f283ef570c9e0059ef1410e5b31e7005c" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c49a6738f80613d12663b3b329fecd1939a4850d" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="176db2e0de48a040de67eab8c45ef5a4cc0e9bae" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a586737686b283cf662f84133a0aff8cdb72de5c" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="288349b6695191c28aa7130bf5f84078019ca5e0" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="008f75d748a5bd84af9e0da1a3e88c8018542482" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;mutable.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="963ee2c8dcb9f860247364dda413f1f37eda9cb9" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;mutable.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76cc1d90290a33e5f8530a627a7b4970a1dcdd39" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd94ff73555c7c1a06b8ef49154ce4940cd1d2eb" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e066ffffd2b557ee64f9a319ca402e32f8f05a93" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f98394f3ebaba9bf30bf36dd4f01d26beec32423" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46ab5a16d147f15c6a0c210cbc1a3c27e326ace6" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8fc71f72841c3ad0ec445c33c60f6076d61cbcb" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1d674353840df77686f561d945e05c24da12228" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d39f7b8514331ae9169041603ac6f67a69f8d2b" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11c50e07da5b90a67918604e1113b0c419c9241a" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72fcf3cecd6e860b54ef4a07679bf69ada5d42c2" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8070b86b0eabf7decbbe729563a07504ec23816" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="643fec1a187cab8e7b8dab1affea2bdc521483d2" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38e6f58c975057662c198ab15bb84a71c6804d51" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28f0d05d14195f2a89b09f46aa9a1e5239758d07" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f116c73cf175699439aa902448a5e5d095c770e2" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e6845acda121ae63d00271a9b5835412a5a50e3" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="815b2bb1877a5966d996f3325611118e1091892a" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ba538cf863b3cb395720ff574e4e9a65e04c422" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c4a22c36a09a2fddd3bd0a11801016eb9337ce6" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcc0b55a5b47cf4b5f3da45cdb7f7d3d72219d96" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="926351048d8990144759961e4df7df43283ab42e" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccda937aee023aec5be351df98ca7993e599838a" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="847519fe2662f5348dfec1543f4e1206283ac666" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d474d73d0b5bc08d3e118b6c37bcc468d8eada26" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e926f3d210232272c6d990d5f3a9bffb9d17b70" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b27163b725c07c63b470e163af4bfdd0b2ac15c" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b1085cda15fa41dd7564d40d838a3352da2e7ba" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4ef5ca737f46235e89eb992391580d9164e6a23" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63f27c0368068c32b65e497136352011146e92c4" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7665187d0b640f8d6be587b6eef7ccb443b6cbe" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cadde18996421e35dafee9e3f3931c41e635b36f" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;])) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9253b63eab9f8b2f76c7421e203c6d35ffa3d4c8" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1501aaaa29240f9e11e5c0f189f7607845fbbf0" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ea191e1ba4f0a9defe1e8b0bb5e279f7a92670b" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab6e6a8ae04d806b34f81060dc59565baee1205b" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19d27150173dda20e6c07e046f0e9e3d0d5971bb" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="604e5bcbe23cd92987f467dc7ba8e819ee4a4126" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="191d7a75c986daa44dcfd3f25aea908487f061ed" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a71fe76faf0a95292c731742293b93d1979fece" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67c97be21bd579eb56c76331e6c728dca1218791" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.ArraySeq.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1d3f4fd6b1f11b4eb31eab7a46bab4acdcf622f" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="256eed5f16d0eedcbd7ff040229552f380738b19" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.ArraySeq.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e2bd4fc05403278706db517bf1009c8c811bb17" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IndexedSeqOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d252fb1745f5a65e46969653b2da40a70e935021" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IndexedSeqOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ed4bb80a087c0cd62d096ca493a096437d70643" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bd38db2158d7d98bfd85035fbe94ad23146134e" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.ArraySeq.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc9f2c53213305b2fc74935ed30e3c3fe549f5fd" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="860d02f5f67caeb069e515935f0542b8f5fe562a" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.ArraySeq.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="386c9b35fe068a8b3b557dacb61db4a6c66b512a" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a4cd7a88e6382ac1337bd92200ed13fa4f482c6" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.ArraySeq.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0faccfff1d86901391156a2fe547ad9de3760b86" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="912bbcd10b4f0d97fe887aeff439feecca7d3b94" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="366334903bff2f73b87434e6f5be1b99e717e63f" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6d1580c8199966900120d8f912a1ce10b787b29" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.ArraySeq.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f445eac9506644a755f37568640cb567b60fe41" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.BitSet.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.BitSet.map.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.BitSet.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1408d7c538ee5faff55f1bc76b219141efc9a774" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.Range.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Range.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bfecd410834cf3bde03144fae3bd4b73e228579" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.BitSet.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.BitSet.map.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.BitSet.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d007f99f80f619ecad6245e4790278c682e2fe9" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc8d2e46e08178994b6e1ea8f20237821a99b048" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.ArraySeq.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ec7fe6745945437e210fcc014f4e9cf31f2ebeb" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.Iterator.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d8a0f81191da87ebc0d882b7de8e170d84d4473" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91bbdfb3f21dbd95696a5e3217a65d81e84c7731" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.ArraySeq.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aa5d9547aa1fa31a78c0949cb5e815daa7aa5e5" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e8f329e08e024b2a049b17a0afd4cb8f21cc37a" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.ArraySeq.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8c24944b1924c75863ad2500c7ba8b9c15b2077" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IndexedSeqView.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b009491cafccee9d6a4715daefc21df5876071b2" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.Iterator.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cbf14ade400027d617af9d1746c2d59267f344a" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StringOps.WithFilter.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;immutable.IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StringOps.WithFilter.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0947d2377f0ead75db2fde9e00baf07f6db517e4" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StringOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;immutable.IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StringOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d11b8ccecff1a4d8261798923823c87efa47d69" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="577dcee79f2a504683ce5721729d6e66c8eca4e6" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79842bedbf7c40c9455da8a912d5b5a30a42c60f" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42e2445b2b2fe62ba98adf71d4fbeedec05f9171" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.SortedSetOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.map.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c2666e3fcdf95d8f01a7d5c289abc9b0e6387cf" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de1eb6021c36f8d96d4ffa81b7c71e40275c6f6c" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a2a88487e57d4d8203f280cdda463150a46740e" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.Iterator.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="130532a571df559bbd2eba3049e46b5ec0f5ac2c" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Enumeration.ValueSet.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.Enumeration.ValueSet.map.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;collection/immutable/sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.Enumeration.ValueSet.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b642f559f8553e88daa5be555b2852ec252e9cd" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;collection/immutable/set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7400d26449ef0fe9a23d06ca1b1ab38d94642278" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;]) =&amp;gt; &lt;span name=&quot;scala.collection.Iterator.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37dbf0de1714821c83aa01120357cb1d6ecf57b6" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.ArrayOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ct&quot;&gt;ct: &lt;a href=&quot;reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.map.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11e8d8dc13fe9bff98966152175f62eed3c1eb8f" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IndexedSeqOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;collection.immutable.IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd1d7c6db1228e98a0e3dd5698bb32d3dc16dd2b" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Option.WithFilter.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.WithFilter.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5554e967b5a4abc76de6918c45c0f8e8e5642a6" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eef81947a6a45e52b565cb63c1c9807b7888a41" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6b7c89f0d162258a236134ba0c9976bea88afc6" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IndexedSeqView.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8326e997d194dbc4497ec8f39bf0148f865db6b" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d2a67faca4f3aaf7385a4e0e7223db55b20beec" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.Iterator.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e845290972fc34a992d31bd6859f02c12a4a2e82" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60739aeb4abfe9ad48e5b44e2da18484160900fb" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.SeqView.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47ff08a8abab0e776a728f247117b8fb8905176a" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f89021460af65cb9cc6beabffbda5e94a62a1a04" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9daa85ff128d066b6462eab71a4da6f24704ce25" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.ArrayOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ct&quot;&gt;ct: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.map.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28b14cec74cc81b27cb7e8c9bf6173ebcc748665" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.ArrayOps.WithFilter.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.ArrayOps.WithFilter.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.WithFilter.map.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.WithFilter.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53fcfb8801e4128874d07bdbd9ae0bc474ef1f17" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.Iterator.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="086978f4e9447e5aea19d6d6c36a27159633a167" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="606c76a4b635f496e516d7a30f4588313a6ffb0f" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IndexedSeqOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca3296846eaaa030fa6d3db50987b4aa471efa5d" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IndexedSeqOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9771b750aba1a915b5a041180109ae0df6425893" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IndexedSeqView.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b51876dac88f17927972f9c18ce9baa7a110929b" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IndexedSeqView.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="900ba98cb2a5caf0a5096ebce08ba35c3e574d70" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IndexedSeqView.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7aea47f0e8f64a7675e0c142a316c11f637ef88" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IndexedSeqView.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="703e227b3c9e9ac12498513e8011a35520ad1781" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IndexedSeqView.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab958b3e6c5e9111ac177937fa29cfcbe4d96f26" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IndexedSeqView.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e0fbee2f14d59f741885f7775be19fcb7e75db8" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IndexedSeqView.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33ce5c246ce999faecc9d2c7864e02737d3b2842" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IndexedSeqView.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dccd109d096bb3f8f64a3ad1a06e488edf686944" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IndexedSeqView.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1333a711bf1fa8f25dcfe4ddabd3ce101828d61" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IndexedSeqView.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67bcf18dcc11583fe93013340d22c0c24e6db70c" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IndexedSeqView.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="721261546533a34316380349cd35dde8dad357b2" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IndexedSeqView.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69821a8254d4389c9ba2072d9b370fbfe8611008" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1517f4689e7d9bf4efbe125d387c66c02468fbc0" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11d8ffc4773e315f652da601357ee6d2abd0d51d" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92347f1f0e42f56ec47a1f4e332c33f02ca4b067" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableOps.WithFilter.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.WithFilter.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOps.WithFilter.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.WithFilter.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3575dd2f7ad5e361c2410b30ad1ba521f1dc5041" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.Iterator.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07aec152b6a29cfa9c6bbe8e66285250f3d5c687" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7975eceee35fccb2a6e50ccb6aa0a4d714115e4c" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93c317fc7d8a685bd9ca16a7a25e538e88c32d0c" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62da40c2619883831dd71638194e1b1e6ac9cabd" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78e269eb588fea4476ce09127a51aa81039105a2" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d1d3f2d8170ba8681a19d927892b3ecf9bcefb0" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.SeqView.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aa228484936f8ee12ac3a8aff290e774a57039b" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.SeqView.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f7332d270172e892ab8fa77b60e81903b1e9650" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.SeqView.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e9a9c6bce6e315b0c683886386ab763d64e70cf" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.SeqView.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cffe0fa68df24fff4e0b3a664e9865cff097eb8" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.SeqView.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57a7baf43517d1f273248cc3b6150f3f98730caa" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.SeqView.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f88b2bf70df85a6b016f8fbd5b0f3ecd0eae575c" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.SeqView.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2687bf2510e9ef693edb285bab1f3e762c6c80ba" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.SeqView.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6115e210c3b2418a60a983024e67ba91b121fe1" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.SeqView.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48164ae977c3bea13572b7fc49af226ea4e5c431" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.SeqView.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99d4a6f977c90f563b75e24fc7e242d92ab5075b" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.SeqView.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62ffda63d51879c76101b626d08e9817a9e0bbfc" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.SeqView.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a20fe148e057ab271665b60c892aab5a8d192479" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de41c87061c76c25533dd273ffcaa7f9278d2150" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c15b463ce292c09ac53f0dfba09c970ca23c0ae" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acc810663c0a0ad42154ba1043025bf194012fa3" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.SortedSetOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.map.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b6b07dae08228768c0d7065306c80161f1057c3" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45ad1afdbc69dd47c91fbf1e57c15b7298a7edc8" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.SortedSetOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.map.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8388b6c0b39322c2dcab53fde5fd85de14dd17b" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e49e23894281ba7cbf81d173ea13bcb3931fcba6" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58f87eb113655e0a3ffafe2dc12fc82ef2d9b3bf" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.SortedSetOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.map.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedSetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eea28e373535a144fa1131360eb7aea871091db2" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SortedSetOps.WithFilter.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.WithFilter.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedSetOps.WithFilter.IterableCC&quot;&gt;IterableCC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.WithFilter.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c769da4a71325aa1de2cb3637570250530cf005" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SortedSetOps.WithFilter.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.SortedSetOps.WithFilter.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.WithFilter.map.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedSetOps.WithFilter.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.WithFilter.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1ec1723403eaf218e2ba7ef5d55dfeef945e2f5" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e88c009b1668e87a1ae71ca7cfbab9ade574aee" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfead92a634d08daa471c0bcd15329bcb1dfb26e" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2c077d5c21c36f909e7858028eac5708787d03d" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87f6f209a714d75ec539f7534b076e77d48a363f" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ff985223c4e12d223f319357b00946cf5a14cc8" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.map.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d933d4f5ed9c74b97a65823b9e3acaef57fa0b44" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e52023403f59ac3c40306aa9380ffd87f4b8a31" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4fe535b3971a8e986333310bd08fc4fca6a70c2" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73dc3a3acf920059f69d9f1ccea56aad1401148b" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75d9abc7777e6f4e655279eed6a3fa6f2824bc91" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2c60d6982988fc3d8c429b96f7c3add57d10aea" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="290f4e4abe39a53ac6814507bc72a1e03dea601f" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7627a8892b3747c22c14fc467b205180ccc5806" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1285c8848c920d2230fc080b9a621b929e79c1e6" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="287b7e30cb174a9b8a2b2351b939062bcf1b952e" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ad4a36083c4981bfce83ec7eb6e01f035dfa054" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b11f64f28f6b25bda0cc96ac3bd675474a42b26" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81524a87a7d2e426e47d2a48b449e23c77cc3609" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2476459fb014bfeea9fde8bb345e7bd9ab5c670b" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7a5b549da4170649812b92897fe2cc596a7e6af" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="987c87fe3fe216678676d5c6be875496627be1e2" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a757d89f0174bfa00a14b0df28f475b029382f41" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7768ab6a26f992b353f578e54c1d4c03f3c8729" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33df5e340f6d0c236b99cecb9177aa4f160c438e" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4d123d42cdbb6ad7922b0f79dcc7ff178af20a0" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d7f29d42471574f6a50674ce427b4d34fc8619b" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6190c02fbfeb679a3ac61071e525c0c6cce800e9" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="377c90804e6524d80019f4af8c98643d41603d44" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a10f25abc8c98512e567549b40e0456e598babaf" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1e98360c9f949835f860c4c332937f9255763e6" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c120704659a9ab7a3611b1e9df7d7f6ecde3659" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24318ebf965974647dbe7c5198b0e75ab266e624" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbec1e68cb3bcd5e4db8db164de427b7040532da" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="168e7db44cb7584068198597f3e298920314f366" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.ArraySeq.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01c042482e5aced3efc6870747a920433e9ccb66" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.ArraySeq.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77eeddcf03528fa1c90562192d63a7faeec932df" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="568cbf3d84aa56c6641f4d53c53c9294a7b62ff6" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IndexedSeqOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f20bb0423333f148266c1f773295363ba872642" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IndexedSeqOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72682b2969209a50a8d8646c072711796890d863" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5b016b4c99030d4f9de25dc86d8461033895a8c" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.LazyList.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3834792ee656c5590d0a67bb051d8559e10cbf6d" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9df958d2688d09412dcfb83fb31aef7b6f630084" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ef2802e9b3d4e680a3ea2eef68187b6479562b0" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21c606dd54833f1c0d4f24d7ce715fc2602a636b" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="239e039e8296c84f1e7b0534eb6de550147f1270" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc5f99a316f10434319d74c66f3d048fa245b278" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe64b55e24a4e58b9c52e1c986b065cb1e8b2cd3" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bce850be90b970dea8f12fe44abc2e8adaec514" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="091f99a759d5c6624ac07b76fdd3598fcd244eeb" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dadae85ab11f5935e1a9cbc7ce50f9b6ce1491e" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67079c8668c18f0606c027621cebfd3f0d4debce" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ba81bf2454458f502ed2f1eeff0147052095aa6" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7f6cded8c0b74e87ec5703e9b777f0d957c7223" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="137582ab5ede46da4193200d0583f88528afd7fd" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17198e644eb75b6635dc81781f9e65b74557e798" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3142642f76cd6df6537984dba87010369a6e2dc" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c6805f1c0a7e4efe8761a8c27bb0478e0257cf9" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f459e7dc579a6b33e6573be6b00ac4502a6413c7" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.SortedSetOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.map.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="879060023b6f5f22e5db88975e160523bddc88d9" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9a61bb8fe205797ac282c663f71b2434b53b57f" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.SortedSetOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.map.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29037b01f31159468381649634dba558c0dbb537" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0bb7461c616f560168aa1341b8b479e1e67d904" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.SortedSetOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.map.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SortedSetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5065c616a3ef8a0de7abfe555693a96d85a38831" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf1f44ed6f9beeefbe781c62e744c3a9bd87262f" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dac80260adf1ad1024194bfe36bc9d587e2ffb2" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98b664b4ce706d63629e57be51e6786fcc2ed0b4" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.map.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23f5add11d064f9c95b25102b162f6e8143d2292" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34fdd270b13cd2877498f7d0981707432bed059a" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.map.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72b6f0d4b9d9511f6c16f33642ec874e195dc34c" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70ce68c7eb8d09a6ec0b965e8182c63daf40b223" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.Iterator.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37193eb9e103e9e01765de4371077fb42a9e4c26" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b895a1b9e237e2ef1a26ad51e498a508c4457115" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dcd14e7e548e5659457b781e3e015c6bac4fc1c" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c53f60e0b258b39cd222a731807a313b54aa2eeb" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74ec5369795ce8187205f9dbb2dbd1278c4f7be5" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82c043d2df5667a230f3aa2318e1693917ceb58a" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IndexedSeqView.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5b2d7aa9b5927ac226a8ee85edd8e3165efffe2" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d465d1b7e6df59c89c1803d031287e02e9369782" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9076337f25d0d57c8c4dd992f8f1665f7c48ef1" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ddb8f7191c0ed0ec87a8e420fce396f9846fb00" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aaeb963a674bf12828ed24b17047caf1c11c524" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a330b465654a570d1d76d85d52fd4712762f254e" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90feb5c61e77ee5650552dc1a2eda8decff115ba" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IndexedSeqOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4935a447421b2f5f698c30b668ef698fdf632194" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IndexedSeqOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed7bada6147e94f836f78398e11a2620013769f4" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IndexedSeqOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c156f7bc43966782a3b7bff4820fda83bff5301" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f443cb3a8b64059a9147934c8c4911fe8442208" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faf75e4c14e38de4c23821947763161e83558ff9" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fea65d549e62279d610815492b2b70bc00a3452e" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30909d89212ec981d1283c863fc09a854a10e77f" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e74faeac65aa684e605a0554278fbbbf73c9cd52" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d2d4c3956aab67e476ac3baa84fabc24cee7b50" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="566264fa5672b0c0086d28abc420fbf52ecc912d" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="684a5e3c382a3095546c3d75ba30522f86284ccc" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f19fdfecb1965effbfbb3b3ec3fe2d9933c71609" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8522e15f6655eb59fce4dcae39f3fbe3256c871d" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb9d5a5ca7cdd17926f58d91fb42cfae0a48594f" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.SortedSetOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.map.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bd68c14ba16092f5c7fe6fb50ed8afff036efee" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f8bb185cae9f9a1cebfb1d99c042e9be9f69380" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.SortedSetOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.map.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SortedSetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0cfa63e21a07ae05283f5ffcc5880ff7ccac390" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8415a234559ca4a0decdb51fe461fafd1b03f165" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f18f5721fad33274a9d91df39ffaff0975423c7e" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.map.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.mutable.TreeSet&quot; name=&quot;scala.collection.mutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f74079c19a9a3f6cc6e237d738f84a67ec548158" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13e245e5bcbefecab9250e7786d7b747c08bf6af" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;collection.mutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16889dbba38c47a79db48e0bdce5a4fc44d5055e" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33b2d5dd461ecff7fd739bccb5fc04371a9fd1b9" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (A @scala.annotation.unchecked.uncheckedVariance) =&amp;gt; &lt;span name=&quot;scala.collection.SortedSetOps.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.map.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d61b87687cd515fb1054ecfb7bfd2b5238f6308" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B1&quot;&gt;B1&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.util.Either.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.util.Either.map.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.util.Either.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.util.Either.map.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="156ef3b80ab06685235472a52d5de18e9cbc7a3e" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B1&quot;&gt;B1&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.util.Either.RightProjection.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.util.Either.RightProjection.map.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.util.Either.RightProjection.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.util.Either.RightProjection.map.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="677f004c9644ba690e3482dda5640e6611936830" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B1&quot;&gt;B1&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.util.Left.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.util.Either.map.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.util.Left.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.util.Either.map.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93bb35fc60ef4fd2b2068bdc3154b7ec1e45d355" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;B1&quot;&gt;B1&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.util.Right.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.util.Either.map.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.util.Right.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.util.Either.map.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2204d72a08815ebd98dc5423623854ba335af609" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2 &amp;lt;: &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.mutable.AnyRefMap.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;)(implicit &lt;span name=&quot;dummy&quot;&gt;dummy: &lt;a href=&quot;../../dummyimplicit&quot; id=&quot;scala.DummyImplicit&quot; name=&quot;scala.DummyImplicit&quot;&gt;DummyImplicit&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;anyrefmap&quot; id=&quot;scala.collection.mutable.AnyRefMap&quot; name=&quot;scala.collection.mutable.AnyRefMap&quot;&gt;AnyRefMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f00f63475b3450bf3b7d1ce90d737aca833fe98c" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2a2edab3989a6250d6eb4f9047d64cac3fe099b" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;../collection/mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5de0f2fdc4654267ea5fbbb7777fcc4627385423" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f7cce0061141cbd98fda2eb3d20093d90dd9203" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b6f137e2e95c6bc7c17fc6d9d4077af2735b3e3" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="988cbe8261787db9305c45db71b807c802d8936c" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36104afb6b47718aeb35aa8ced527c8f70a33c41" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39b3c4dc7080267d31008221b4b8f88e49d87525" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="167f1c51379a4672315efaa619ab5252bb1c2126" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.MapOps.WithFilter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.WithFilter.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.MapOps.WithFilter.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.WithFilter.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.WithFilter.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.MapOps.WithFilter.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.WithFilter.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13fdeebcce48132ea261b08df12a43b7e3d933a8" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d6824a6aeee3f29edef98327257c5b84dc39c9f" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f52e5a16f6f967beaadedd95e6064eea5a86868" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff49d5e4d99185259e19dc61aa5de885a2c23b25" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b34970258172fe0e095cee8fff3bf123d219973" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57c5c9863425f476167a3d767407bc959a81c35a" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ebdef00a0f8e72f67abdb79b40937e9a34726bd" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.SeqMap&quot; name=&quot;scala.collection.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="038fe31e8739865af628e727130abdc5e5c45544" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4111256bed44a5c683fada9b6fa089c0a8702dbd" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.SortedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;)(implicit &lt;span name=&quot;ordering&quot;&gt;ordering: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.SortedMap&quot; name=&quot;scala.collection.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea66c78cc1846d0b95dd9668eed9357ea0bbfbe3" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.UnsortedCC&quot;&gt;UnsortedCC&lt;/span&gt;[&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2244d9d2d66ab26f6bd0aba2f1a0429d6c365bd" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.SortedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;)(implicit &lt;span name=&quot;ordering&quot;&gt;ordering: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7145660b3101fc9aa29f93f580a256cb76f675b6" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb9e32030795b8cceb202f8c362c70f965e47cf4" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.SortedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;)(implicit &lt;span name=&quot;ordering&quot;&gt;ordering: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedMapOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="899aa19b42eb745dfdd72c0dcc22eefc03c54674" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.MapOps.WithFilter.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.WithFilter.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.MapCC&quot;&gt;MapCC&lt;/span&gt;[&lt;span name=&quot;scala.collection.MapOps.WithFilter.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.WithFilter.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ca1fb277185cfb378f9731d7d5d1ef8ffba179a" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.map.K2&quot;&gt;K2&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc3b765daeb7ad695f4e1798408cf831970305f8" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="743b084dcda07f44a37a775e64d12818ed8f46af" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="794f9dc3fd25f891fc0b89d531e3352d90fbb443" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;)(implicit &lt;span name=&quot;ordering&quot;&gt;ordering: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1cb5a3178c3cb263952bbd730aa4be93acfddc0" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;../mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bf6f5293c7196121a0fb20e2573dd665ab87af1" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;triemap&quot; id=&quot;scala.collection.concurrent.TrieMap&quot; name=&quot;scala.collection.concurrent.TrieMap&quot;&gt;TrieMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adae26d18c47cd8b27f8c83a00e9238c5c812de2" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f50138c19fff59014a110ca83c6e03251be28794" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec9a5a152aa817e9d4f5aa5fb9892ba445cd98bc" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5161759d8499f725219d6ad6e8e1fd3d351f160a" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.immutable.HashMap&quot; name=&quot;scala.collection.immutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef03f47e906177b56474f771f88e22772143d51d" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.immutable.ListMap&quot; name=&quot;scala.collection.immutable.ListMap&quot;&gt;ListMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cc3f506dc661883162e17c24116bceaf81a7199" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33827277bcff9dbf2150133d0aa639d14b6ce2f4" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0061a51e6f7a476c8a77fb88c0cb4b06d02c17bb" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8ac3821fa385c449ba6f541b1badc6dd43e0dea" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b371a90793d89f12a5c3702cfd1fcd60401a4f9b" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85694ad840a1295357d7847a727379fac9ce97ad" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeb14bf36ff82d060e5166b88c1b77ca44bd5d29" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.MapOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9f700fc91bb2bea7fc019660cc675cba21c8644" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.immutable.SeqMap&quot; name=&quot;scala.collection.immutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3648a1a4d8a1d489c48e793c0f5ae101979b55d1" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="588a545c95ca781c975c1764444d72b95d8c18ac" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.SortedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;)(implicit &lt;span name=&quot;ordering&quot;&gt;ordering: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.immutable.SortedMap&quot; name=&quot;scala.collection.immutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56ecb97004a33751a1cbb527023bb4b83b4ddfe7" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0550bcc9f39d764e1fede6f0dd6c0d79b65ad224" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.SortedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;)(implicit &lt;span name=&quot;ordering&quot;&gt;ordering: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.immutable.SortedMap&quot; name=&quot;scala.collection.immutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bcf8d69d8c39588ecdf5a842c8e5ce1b991ce85" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dedbb3b975bf21038b1d45a1d4490e52bae3a73" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.SortedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;)(implicit &lt;span name=&quot;ordering&quot;&gt;ordering: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SortedMapOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a00385e6889ad3be4868657b54cf615209511ff1" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ec6b38025946d74b025805b8208ed211805e2c0" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11ddc737fba8d2b7f2321bfc86398042024ea79c" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;)(implicit &lt;span name=&quot;ordering&quot;&gt;ordering: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea4a25dfb0b59dce9f5f7486d40da55084977536" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1afce4f0b8cc96de974abb72f42c6818343852ab" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;)(implicit &lt;span name=&quot;ordering&quot;&gt;ordering: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.immutable.TreeMap&quot; name=&quot;scala.collection.immutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a88afce3bccc80f83e658daf90bf24c1140b2d3c" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;treeseqmap&quot; id=&quot;scala.collection.immutable.TreeSeqMap&quot; name=&quot;scala.collection.immutable.TreeSeqMap&quot;&gt;TreeSeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abc3d5b5fd13dc50d73e9cc0f5727a1dc8cd83bc" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;vectormap&quot; id=&quot;scala.collection.immutable.VectorMap&quot; name=&quot;scala.collection.immutable.VectorMap&quot;&gt;VectorMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edaf14c954b0c0c83e47a5916a5b2e725f8cf4ce" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64b39dfdf22c3e3f1b18c36b6ee4af8fac66eb82" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed44ccdad68bb251b6c9244873056ac618e08737" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e4d7f9e627273562a14a00db879e92e8b107fab" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;)(implicit &lt;span name=&quot;ordering&quot;&gt;ordering: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.map.K2&quot;&gt;K2&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;collisionproofhashmap&quot; id=&quot;scala.collection.mutable.CollisionProofHashMap&quot; name=&quot;scala.collection.mutable.CollisionProofHashMap&quot;&gt;CollisionProofHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce3e49e1ce74786763c858b6c22ebcbec7261619" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.mutable.HashMap&quot; name=&quot;scala.collection.mutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="960132543a29e7bcdf4ce0c325a056902b8c2e99" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;linkedhashmap&quot; id=&quot;scala.collection.mutable.LinkedHashMap&quot; name=&quot;scala.collection.mutable.LinkedHashMap&quot;&gt;LinkedHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="393e45383a73202548ed8fa634bcec7d0280bdde" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.mutable.ListMap&quot; name=&quot;scala.collection.mutable.ListMap&quot;&gt;ListMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a7c21b756b6b4791ded939e264c4673a5f6dedd" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b84aef8c35f9c204e2170176a300efe351d42214" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91452deda06c1e0fe0feb1ad61219350e6155306" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.MapOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4c1ff2e1a188ca09b3fa883794ca4b87eb6885d" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;])) =&amp;gt; (&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b95af31ef04e3a429a77e948dfcd24e7e341189d" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;openhashmap&quot; id=&quot;scala.collection.mutable.OpenHashMap&quot; name=&quot;scala.collection.mutable.OpenHashMap&quot;&gt;OpenHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="633218f581125b5e058512c31c032eaf826288c8" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.mutable.SeqMap&quot; name=&quot;scala.collection.mutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b386a6f5f796b24f94f55859ef2b9cc16ec5d03a" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5e998c534bba00d6eed9d218729cc276971c38d" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.SortedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;)(implicit &lt;span name=&quot;ordering&quot;&gt;ordering: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.mutable.SortedMap&quot; name=&quot;scala.collection.mutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="674d538bd69ebda19483468dc7da7874d51fe943" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c749031235df6a622ebfe8e27b5f49ab45d0baec" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.SortedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;)(implicit &lt;span name=&quot;ordering&quot;&gt;ordering: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.mutable.SortedMap&quot; name=&quot;scala.collection.mutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3aba1264fbee4028cc9f6b6d119a85219b9359b" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5f272a0a9a42821aec97a8c239ba73b0d8ee670" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.SortedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;)(implicit &lt;span name=&quot;ordering&quot;&gt;ordering: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SortedMapOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1dc4391c78d45f925573609ae65835cbb892e8a" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4e07e52983b78625110d17e9ee9397f31c624e2" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;)(implicit &lt;span name=&quot;ordering&quot;&gt;ordering: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.mutable.TreeMap&quot; name=&quot;scala.collection.mutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1f46f82fb4f4dceeae1ea41c6703a348d209cba" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;weakhashmap&quot; id=&quot;scala.collection.mutable.WeakHashMap&quot; name=&quot;scala.collection.mutable.WeakHashMap&quot;&gt;WeakHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.map.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="750dea01814ecfdbd775fe76bafac75fa17043fd" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.concurrent.Future.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.concurrent.Future.map.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;executor&quot;&gt;executor: &lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.map.S&quot;&gt;S&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c17122e41089009e839e5a1d073f7d07ba4d16c7" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.util.Failure.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.util.Failure.map.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;span name=&quot;scala.util.Failure.map.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a0751e3e12dff4140a853fb41a1235e6c646799" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.util.Success.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.util.Success.map.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;span name=&quot;scala.util.Success.map.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca73e9fcd3a2e0d1d9b50533d3f595357a3ff0b4" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.util.Try.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.util.Try.WithFilter.map.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;span name=&quot;scala.util.Try.WithFilter.map.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="796744e03396fe2eeef1ae73daf41290b5e7fe04" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.mutable.LongMap&quot; name=&quot;scala.collection.mutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LongMap.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="576a61e982f61c2d4748ff98a486e221428c3758" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IntMap.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19fa14833bc37b0b86c7496e0e8c8222888ed418" translate="yes" xml:space="preserve">
          <source>def map[&lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;)) =&amp;gt; (&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.map.V2&quot;&gt;V2&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LongMap.map.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="050da55e0404c574f96555d4bf323f1cbe25d009" translate="yes" xml:space="preserve">
          <source>def matchData: &lt;a href=&quot;../../index#Iterator%5B+A%5D=Iterator%5BA%5D&quot; id=&quot;scala.Iterator&quot; name=&quot;scala.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;regex%24%24match&quot; id=&quot;scala.util.matching.Regex.Match&quot; name=&quot;scala.util.matching.Regex.Match&quot;&gt;Match&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb2f14acfb58ca09458ab0a061c1020fbca8d218" translate="yes" xml:space="preserve">
          <source>def matched: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ec4d3c08ab1c803fd22599d6398ae2f1cc0d08b" translate="yes" xml:space="preserve">
          <source>def matches(&lt;span name=&quot;source&quot;&gt;source: &lt;span name=&quot;java.lang.CharSequence&quot;&gt;CharSequence&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5562a54091276d48bb067412fac08f7329b4649d" translate="yes" xml:space="preserve">
          <source>def max(&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="785ff701e56182e8ba8cfc6c3be737f33c339f3c" translate="yes" xml:space="preserve">
          <source>def max(&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ec06b9c710320ad5e1edaf80b3952c0d0e11b60" translate="yes" xml:space="preserve">
          <source>def max(&lt;span name=&quot;rhs&quot;&gt;rhs: &lt;span name=&quot;scala.math.Ordering.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.math.Ordering.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a22da88403d18a0da8e87733009239dbcca61066" translate="yes" xml:space="preserve">
          <source>def max(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f5bbf4c7aa93f96c6c42b5a504d935f70965699" translate="yes" xml:space="preserve">
          <source>def max(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad33e31604ec4d4292758de57608551f58d64173" translate="yes" xml:space="preserve">
          <source>def max(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce86d8a0ce51d760b366615b72cc22764344c59d" translate="yes" xml:space="preserve">
          <source>def max(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b3dd365e585256534205f4fb6d5b893e357e5c9" translate="yes" xml:space="preserve">
          <source>def max(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="675645903b0d2cad3ebc620735aedb1ca5b95587" translate="yes" xml:space="preserve">
          <source>def max(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c77db62910b135144cad836cd56efdacb5d49e5d" translate="yes" xml:space="preserve">
          <source>def max(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc379c21dbfa6a0a06444ffe66217eb101b575da" translate="yes" xml:space="preserve">
          <source>def max(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bebdbf2f38adc9423668b7689cf8a87eba5498d" translate="yes" xml:space="preserve">
          <source>def max(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a750b62d3bdba94fbc2791c687e196a2594c8fa" translate="yes" xml:space="preserve">
          <source>def max(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e3ce1d7baeb70d1b62d146fa7974c12f5d27c1b" translate="yes" xml:space="preserve">
          <source>def max(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1f3973a02b2d8d964baeb33eafc1db8405b9162" translate="yes" xml:space="preserve">
          <source>def max(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="103338b009b1f3691ac156c00c7765be6ffc7af7" translate="yes" xml:space="preserve">
          <source>def max(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="546d75d12c2350d4d6c0cdb2ebfb1aa5199cb668" translate="yes" xml:space="preserve">
          <source>def maxBefore(&lt;span name=&quot;key&quot;&gt;key: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9223cfd16aa7ca575b60364ea698227ca2efeffc" translate="yes" xml:space="preserve">
          <source>def maxBefore(&lt;span name=&quot;key&quot;&gt;key: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="899daba025048a95fda2576f599c792a0e7c3e7d" translate="yes" xml:space="preserve">
          <source>def maxBefore(&lt;span name=&quot;key&quot;&gt;key: &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53df1645566ce77ce77b15c50559f97ba484dedc" translate="yes" xml:space="preserve">
          <source>def maxBefore(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="059a6de46d8603fdbec8af25f4aaf4ba2ade55b2" translate="yes" xml:space="preserve">
          <source>def maxBefore(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0cd9592899e860e578d6ad4dcb1a37c4cda6eb7" translate="yes" xml:space="preserve">
          <source>def maxBefore(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30f43816b223c4425f91fca643ccd36a30e260c1" translate="yes" xml:space="preserve">
          <source>def maxBefore(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c8a17d5b0a65f61e92abb1b4e56e8f4b07cb3ba" translate="yes" xml:space="preserve">
          <source>def maxBefore(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24a419efdd9d3471d33e603c8354c6f8abc11480" translate="yes" xml:space="preserve">
          <source>def maxBefore(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32600c3f2dc17954b20bd51b58813de7aaeb1fff" translate="yes" xml:space="preserve">
          <source>def maxBefore(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b983db57281cba912627885e66064a91052748c9" translate="yes" xml:space="preserve">
          <source>def maxBefore(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7629966e8d8e02b20095f48d9c8b2d056ba5b50c" translate="yes" xml:space="preserve">
          <source>def maxBefore(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e14c68626f1bce480ee3cf9ab2153d9e367fb59" translate="yes" xml:space="preserve">
          <source>def maxBefore(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54e8f7050ddabcf8237e8d0e469ac7e54cef1509" translate="yes" xml:space="preserve">
          <source>def maxBefore(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88cfe72f43f0b0a4b64a34bf2b6c197106d2b5d3" translate="yes" xml:space="preserve">
          <source>def maxBefore(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f72b0ce1309fe54618fc5beb4680ce85e1394a5" translate="yes" xml:space="preserve">
          <source>def maxBefore(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05f8da6faaa8b36c4057ef89671edb79e5383e6e" translate="yes" xml:space="preserve">
          <source>def maxBefore(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4bb15ae56e55bccbe09ccfc606e69b18a2ffcb5" translate="yes" xml:space="preserve">
          <source>def maxBefore(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c27c4801493e5cc482bff8b587f04d86d8fa161a" translate="yes" xml:space="preserve">
          <source>def maxBefore(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f064da4dad0661389026bc882018481c3de8731" translate="yes" xml:space="preserve">
          <source>def maxBefore(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e18c6f1f2749bee59c8b157ec2e5b11677b86cff" translate="yes" xml:space="preserve">
          <source>def maxBefore(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e35579862c4d4421ff1e832096a87d3dc8fd9c97" translate="yes" xml:space="preserve">
          <source>def maxBefore(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a096df36e50ef5c8cc9946bf632c796db51dddf0" translate="yes" xml:space="preserve">
          <source>def maxBefore(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eac6c0e959c0cfab148785ae5ae0ecfb7ebf5650" translate="yes" xml:space="preserve">
          <source>def maxBefore(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1a319d7b3e44f9f8abb17264e13cf713f894ca5" translate="yes" xml:space="preserve">
          <source>def maxBefore(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7678b8eb4f47df519851992cdfeecd808190f69" translate="yes" xml:space="preserve">
          <source>def maxBefore(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c5b0acad06094a8d8ddffe79a7cbb42397affdf" translate="yes" xml:space="preserve">
          <source>def maxBefore(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42ee550df799c42d0a25f6184390f82aaa83481c" translate="yes" xml:space="preserve">
          <source>def maxBefore(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bd23fcc40778dd8409086709ad62b6524939b4f" translate="yes" xml:space="preserve">
          <source>def maxBefore(&lt;span name=&quot;key&quot;&gt;key: A @scala.annotation.unchecked.uncheckedVariance&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[A @scala.annotation.unchecked.uncheckedVariance]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5170454a8b6cec3f0075354324be096b0ec4a9f" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69dbf573551d1e7f5c877c2a9d9e04dead515ec6" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9be9ea762795bac3fce84d07773b4944fddbb48b" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17e61fbd76c73972ffb207869bf0e215c20715d8" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6c0abe23af76891a0d9ecf4a71fa6560e4ea14a" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8c413694e000a5e2f5d3daa3a5a841ae7543617" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d991397cd52c114d45e03755ff3884473404548" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92a0913397638348c267e2f56eb80a147e940b63" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7e772dbf193b425eac1920f2861fa3baf8aed00" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8af6b1929f2281fa8fe1a41c3eaae50177a9199b" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b97a4887e75e5ff787bf322eda3d2bfd0e536fb2" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f1b94801a1adf5d7cc27d4a2b8e7986bb4071a8" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76023cd50e18d4c9d412289dc6ba0e886fe38c50" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ad79e1f939d215e12fbfb2c0347dc22f505415f" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c114e839cc92b5595584437acaea42c59314421c" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e1829f654f5dd77da976d34995ccae0ea83b2db" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="817038864c992a891b384384f8943b8189d2e3fb" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0808a4b798fa4bb5935aac9074c47a831ec440b4" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55bc7aa57cb38e6386e521c556b167c42aee46ac" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfbe15740306b06ac115dc87a8ed5741e552db8d" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="835c39088041c8f831b31ba763cf0a7fff36bed1" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23473753c998c79e9ab7e9f50dac40a260de724c" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa014d44f6166bb206f94df28f028eec28aefe64" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="effe5588223bd006223423ab7c0434b720a7afe6" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="134f46fd32af49d333c17b5a4e1498e562adcdd0" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7d1cf55123b10506469340d4a121354e5b3e6c3" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f5cd69ea48dac75e58eddfee6c9ff3468e5fcda" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5a175f7297c0e937071a0588f0b96765ffc4305" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fff7809ca90fa0e7e825b8a7357a1fe00f19f83" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2f9b5f2d5d0ddefb95307fa1640c3b9cf5f981d" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e1b1e2fa15017a1d45b35b0b6a3ff1c911ec558" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efdc8027e7fda3e323bcf730b9f6956462a8362a" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c222e27989552b3a4dadd7a4834dc7e713fe92d7" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="024a1cec86ed77388dae4c851f5f9ebc6383e2b6" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc97a6285c3fba5c4496eaa6b856635ee1e792dc" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c37e1a6a9cb7559d19025e4eca4be087cddf46b9" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e017b17a281ebc9d2bb2fc1c2002fc8abccf3bb" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0d043546651a064f473e1091304e1e52b26faea" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e442e1c7b040a0943466754128471fb3dd4c8fc8" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06c05d81978566dced2f8d55ad8c4d2c7f5d17c8" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7952783c981f26e8073eabd43bc7ddb71c2a74bd" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcdaf31f28070f636884c19ede6b04f09c46caa3" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fab1a9d6eb578120c709b67816586aaf0015601" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="490c491341ca47c0828f4ae2a1ca3d24e4c7896c" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cae00cf7d399827880cdf7d4e54eea67ca3daed3" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95caa2ec6dadb75e0990b3a91b3d04017896d4ca" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3758b2c5cdae6e0da04450323b068f6bda6a091" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb5c13bcfa29e9d1230713d6b4aa0a9888e59ee4" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f16fbaf0951c16ee8283bd581c236f35808d5b55" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e28fb58c9027a29904edd71fbb5cc2367f8ca87a" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55e231ad84f10f1dfbbf949884a5bce63ba4ccb8" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2929f20d43dc4b29598dabc6fa1e9d141f7a88b3" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45bf589a9c07ed6a363d6ef310aeb3d93ef61a0d" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="649f29bcde21c75752018a0b8af0aace273a4027" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0953820b74eb746a34f7ca698a1ebd310322bb4f" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b97dfeb932bcb6458dd163228ee6ef4419f8b106" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc0ab8709fbe3a3c4b5905d859b1dd860bad74ef" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="321ec744f90b596d135fe8deff9f2128c9003631" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ba80877dba72740401cb072ee34eb827ca4661a" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;])) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;])]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="075168b362630203ce4e8e37728353275f46a17a" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff11ad2581ab59efd2800828510adcabaca35927" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7b96f983617eb05baa03d82ebcb4f783b2c54a2" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17b0e0a1fef10dcddd9df0a0debc9c4bce4e73f5" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78f774dc811a171991e66f861611bc5ba1a438cb" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86a3f34edf756db03be068ef4b0d7448123b5663" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b2cce2dff2f188e5c3f4645dcdf7e7ae7345033" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0412ef5df6093903a0828074cc486fc87473ee3f" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49c9a9b98b4dc99be9885958a4452a37ea19ad88" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a53a89110e53a04c8a24a90a0166aaf15dd88966" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d072b9747868d7bb86e37926c95d49a6afa59090" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8abef46a473d154b1cfabe5106af8b0d8e569f8" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ae22e1f4cb842b9a7fd10b35728c22dc9632b87" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="543cdc1720894a1f43dec7aa52d797d724728203" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae0f9fa3d90d74153175bc1e8d0d6ee73c20242d" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bee2ff154c96c018cf9a856e55639259767b2cb1" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="912ecf5643036e73c149f7ab05ddf6716532ce88" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="341aaa7da609a83ba99ab6795c28394e3553a605" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8a95dfd395579cb4524cbb9dc58bd1dadd54d3c" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6910cbe7e71711c3fa4eb2344845d3739488785a" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70ab6f51c260d322078c4ef377772557e957b1de" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d4ebfb7e4088ea82f2384fb5ebd2cebc9aa0266" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="686ed1ad9da19fb5931f90f64b7f89cf5720d169" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a87f2020fe701f7bc28add3d1cec36a9d3d7b8f7" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e19650c9fec0770d50a96e6c6d837df2ef496d5a" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77c89d8807458e5427df73ab71694c0897928037" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;]) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5b653a3d4f996030259c4af5d575cce492065d4" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b34aaff260b802a337a1fbd678f3a7334456581" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22507cc6366ca29284d1ac591c1e37b1f9f11df5" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1bd7c88fa56ad44091247b8b39e1da23da711fa" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aeeaf0bb411cdfcd188ac530d724ad24976b591" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="851efb16147cab0a2f57396ec64466598b172394" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c4f179a142599c35a00e1b03a3d8de77d405061" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0a1fa977063d634c0573d855f84c1e608ceda32" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a88dafaaf5ebef02e0ec344839a8c06289b9b00" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b42ab76c412b98b6fc9e89e3870f9e112c5964f7" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea210d982ce600e01ba583a81aa622598cf9009a" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac39296ae89bdd25f25cf9942f455ee8b6d585bc" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="842b33c9f77bbe60634b96dcf1067d63f2f4b499" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfd34cc154ae27376e6138a92d37366af6bfcca3" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52c9848ccbee4e13901ff9a048dbd30ade852b90" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a86aec9727be256142adaf80e1a42be6a6c874ef" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="657130f7d5834dcee6d7cf37c2435059c053a767" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aebb6c94487f628f811a04f94c10de79306609b4" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba3a22139487eb87aa4a4dd58947a9f40975638a" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efea76a84e7e09c8e8e17fa0afeaeb0b0e8cfde8" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5d0aaa25574abde18e9c49456e8b76a9793ae4c" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c851901ab85b8c4a3ef2dd374e7589986377202" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b77135f4eb3ddc592c283bcd436110af5048142a" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae4c1a7286809829a04739902b7a47363d261524" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03f5c9f4dd7b937d629c327ec793f0b65e0b9fb0" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56b15ad8cf483a7e450015c38cd921cc17226f5b" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c389f61bdee25aa9df21dc828c586187b6d99bf2" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16c2eb545c8b0d5180f8b9a511dae597da94b29a" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="440a40ca5f63e39f275858d0e8203252713cb18f" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f84bc48306752f2b43e608e73e5fa3b5d380c85e" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2535dfcfa0e398da344343a7ab9212491d95bd8" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cc8732e915729bcb763ca7221ed0d335b3159f1" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2e57562661dab7595e0565199d03483fa22eb7d" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2b86acd04bcfd9572cf6b0ef7f88fa9b44d55b9" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f6f6400ef4ac57a3a280fd9b1d7133028ed5c52" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d04caa00f2b3a56b537d42dc401092dd67133c8" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f823b795b90a389caf2c87c33ef9aed1d86d0d6" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe5af30bab80a06f9c981ac9a19b93af9874e2d8" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b200900a487316fdcff38696458823a77d82259" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51c2b934935c5bb6b016ecb022d98a9d5c2431fc" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4baf2a69f7c23d8af86ff7ecfe326018aeb93a23" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1e038bda1309760aabdf097210793c8e7861d1e" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="364ec347866cd105af525405c2e27c0093d77458" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b01545102fda052541b79c6bbb4f281fe2cff938" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17b73d3f0c5d5bd8c084e4b80fcd3fc8463edbf3" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2847585377efc3e4764512cc31c0b23b187bb87e" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78cdf6f43c092aea0b128f762d48567df4f683d0" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f015737f96f2eb2d8de35b135f287710f37f620a" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eb226eedbfa13da67d404e4e65b8e684cae6240" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="900dec03f5d0ae99dfad095c88eb93b1df7431b3" translate="yes" xml:space="preserve">
          <source>def maxByOption[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;cmp&quot;&gt;cmp: &lt;a href=&quot;../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.maxByOption.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
