<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="scala">
    <body>
      <group id="scala">
        <trans-unit id="6d18aff71660ee9aaae43e5009788eba5333723c" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55985e8c42ef7767351339e40e4cb663f911b3bb" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0f3a0cd5f890a5e5e04c5deef4001aa3adf521e" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e025189e2f9c83412f1f15fd7cfdc76e41c2a1f3" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5a4e886107337d34b507d7ec86e3677a3af67bd" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="173fa8c836dd65f90e0b2df0077f04066bacdfdb" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5fbd2046b3a9ba35a54c708332e966c28b556d4" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9da867975ba6236fcebc2f88794d90d28f5b86a" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d621c624d3d1fcd5d0643e0c6a56de0515428a04" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="924c44821f09d5160aefc6519f393b452187d653" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b232c07e2b451580e6b5aa0d0e3fe46bd76614c0" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fbe76fca0527f8e43ce62c9e03331e546525d39" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e10b8828e11b5242ecc3a2a12f3e6224e1e5ae2" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0674190582ede3ba6aaab1ea992c8fc9a6da7c0" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0f6b82a12dfd425d94f937389ab51f8030edbca" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="996db6e32d589da958c8cb28b1cf921b758e2d9f" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="593ef013c97af01c85aadc69b1504572aa67bbf8" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df50e5a888fde28e50b036ce57f5aa8314e28cdb" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0473cc18ad97f7888b6cba9c162cb9d04653766f" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10ebf83024329b8455893c8d5f8d79333805435f" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa1d08247dbd0f746977936efb6c61f601a8fa3d" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2dab1abee2966d32bad269a259b79d95e2295d5" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fec0bdde334ee7a0ab7aebfda1ff7cfb7d9b0fce" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdcace83eddb78998ce006b44be83636db0455ff" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aa131909cade53ca1b1b9965c8d4416ae717142" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0dd7ad0a177bc6f5ab471058b7687fbb6c33983" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7514557e0b443317d60f904620970f2ae3bdc96" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21c12f898efd3b6bd139928d0823140bb298efdd" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec43b75fbfec6227797718885c74d23583121cbe" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="588dd422b5181c841ee744fadaa6b50bf712302e" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1222af4e808db586c00e096925c341a6de78824" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="919988fa8a85a388fd0d2f162cde68ce8deb1bfd" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfaedf6a4d3c86169cae63d24866a4bd3257ebff" translate="yes" xml:space="preserve">
          <source>def applyOrElse[&lt;span name=&quot;K1&quot;&gt;K1 &amp;lt;: &lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;V1&quot;&gt;V1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: (&lt;span name=&quot;scala.collection.MapOps.applyOrElse.K1&quot;&gt;K1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.applyOrElse.V1&quot;&gt;V1&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b1db71725954eed92b7b52fdebe95b104904498" translate="yes" xml:space="preserve">
          <source>def applyPreferredMaxLength: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c02c71fc2657ae91e076b46e97feb4cbf468f7e" translate="yes" xml:space="preserve">
          <source>def applySeq[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;builders&quot;&gt;builders: &lt;a href=&quot;../../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.sys.process.ProcessCreation.applySeq.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;)(implicit &lt;span name=&quot;convert&quot;&gt;convert: (&lt;span name=&quot;scala.sys.process.ProcessCreation.applySeq.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;processbuilder%24%24source&quot; id=&quot;scala.sys.process.ProcessBuilder.Source&quot; name=&quot;scala.sys.process.ProcessBuilder.Source&quot;&gt;Source&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;a href=&quot;processbuilder%24%24source&quot; id=&quot;scala.sys.process.ProcessBuilder.Source&quot; name=&quot;scala.sys.process.ProcessBuilder.Source&quot;&gt;Source&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ea7a4a53c987593a301e65b79402dba3fe4948a" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: &lt;span name=&quot;scala.jdk.Accumulator.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;)(implicit &lt;span name=&quot;canAccumulate&quot;&gt;canAccumulate: &lt;a href=&quot;accumulator%24%24accumulatorfactoryshape&quot; id=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot; name=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot;&gt;AccumulatorFactoryShape&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.apply.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Accumulator.apply.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.jdk.Accumulator.apply.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8e38045a2efbffb037d09838168e5ceaddba1b3" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: &lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;): &lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92b3ef085d10b394755fdf16fc9774534a8da1e0" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: &lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;): &lt;span name=&quot;scala.collection.ClassTagSeqFactory.AnySeqDelegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed1bd436366ff9ddeb4f11a6f53664f3b8dacaa8" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: &lt;span name=&quot;scala.collection.IterableFactory.Delegate.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.Delegate.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16bc2bbc33f07543ab53edfed9b0a6d55accee8d" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: &lt;span name=&quot;scala.collection.IterableFactory.Delegate.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.Delegate.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce5e39b230edd3eb57003e7b4aa36daeea95eeef" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: &lt;span name=&quot;scala.collection.IterableFactory.Delegate.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.Delegate.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48de56fb8f1fed7e3af8c596d6c6a1bc9ac03307" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: &lt;span name=&quot;scala.collection.IterableFactory.Delegate.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.Delegate.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="578804569dcc2f0cbb0a8b0f950faeb354f70977" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: &lt;span name=&quot;scala.collection.IterableFactory.Delegate.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.Delegate.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eea484695ea1c56b2fb7005294bb7f7c97ede9d" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: &lt;span name=&quot;scala.collection.IterableFactory.Delegate.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.Delegate.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c2441941b729c2b08009ae459f82a6a792540b0" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: &lt;span name=&quot;scala.collection.IterableFactory.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b363318ee48b6e80beef60dca065d0e31a8caaa" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: &lt;span name=&quot;scala.collection.IterableFactory.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;): &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22092ca05f4acc8c69a0188df28dab357be66647" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: &lt;span name=&quot;scala.collection.IterableFactory.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="957bda2f390b7ff9304fef61b239058f51240e3a" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: &lt;span name=&quot;scala.collection.IterableFactory.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50bc4927228eac7271d78434b3463bef8014cc68" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: &lt;span name=&quot;scala.collection.IterableFactory.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="065c3b2bc641c9b84d1033b272d36207b544d90d" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: &lt;span name=&quot;scala.collection.IterableFactory.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;): &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87bad85cce4940a3ea6eae1ec2a6e869a583eafb" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: &lt;span name=&quot;scala.collection.IterableFactory.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;): &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfeea519a351b5c6a7f17bbcd89839bb9c0af7de" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: &lt;span name=&quot;scala.collection.IterableFactory.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1a7ef102c5379bce56ebbca56c41c4e990dbbc7" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: &lt;span name=&quot;scala.collection.IterableFactory.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;): &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0f4ea1878da58a23717608e654560e34285589d" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: &lt;span name=&quot;scala.collection.IterableFactory.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;): &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="673620075bd78ca38adf705d3daa8ab1b520f4bf" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: &lt;span name=&quot;scala.collection.IterableFactory.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="829d105dfc4628f1cbf086d51e6feeae7dccf46e" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: &lt;span name=&quot;scala.collection.IterableFactory.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02dd5ae4619134e6b7aae30b220f716672adfae1" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: &lt;span name=&quot;scala.collection.IterableFactory.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72050228ec58d9d5ab301e56721b2c25d347d13c" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: &lt;span name=&quot;scala.collection.IterableFactory.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="371061889c6b73245a6a6d8e90d2134d40baa366" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: &lt;span name=&quot;scala.collection.IterableFactory.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;): &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96b0da9e91e209c0a52db29274ddf41324864ea7" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: &lt;span name=&quot;scala.collection.IterableFactory.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d052cef80db7ff0906d2777436cf2078864667d4" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: &lt;span name=&quot;scala.collection.IterableFactory.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="981c115514557980c75509b6eeae2ab174a78c37" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: &lt;span name=&quot;scala.collection.IterableFactory.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2bfae3f6c33c5117f5cc07f422d3940a00e01cd" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: &lt;span name=&quot;scala.collection.SeqFactory.Delegate.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bb7a8e486c4997e2bd055ff6f0c817acd1f8553" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: &lt;span name=&quot;scala.collection.SeqFactory.Delegate.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;): &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3598e7a1e24d51adc81a4500f7c3a04e1f8e25ea" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: &lt;span name=&quot;scala.collection.SeqFactory.Delegate.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76ca2755902269c8217f6ffc964f4f4eab99c6ec" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: &lt;span name=&quot;scala.collection.SeqFactory.Delegate.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="394f0382782f15ca2ed4de614ffa70b7618b95a6" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: &lt;span name=&quot;scala.collection.SeqFactory.Delegate.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="985306181130112a2d5b5af62b47a8fa43e966f2" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: &lt;span name=&quot;scala.collection.SeqFactory.Delegate.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8f846978853925ad59b6938008a48e785c3dfb0" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: &lt;span name=&quot;scala.collection.SeqFactory.Delegate.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b5147a566c7bf63dd8046e0373ed7080da35fc3" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: &lt;span name=&quot;scala.collection.SeqFactory.Delegate.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dd4616df48699cda72c663fc68723bf488a68ed" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: &lt;span name=&quot;scala.collection.SeqFactory.Delegate.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f24f835d6632dafc962a3aed67cba87341feb0e7" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: &lt;span name=&quot;scala.collection.SeqFactory.Delegate.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1029fd4c3fd02fed58593dc6153169b0a9fb52b9" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: &lt;span name=&quot;scala.collection.SeqFactory.Delegate.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7252ec28eedb44ae134199939ca3b342a4b9b8cb" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;hd&quot;&gt;hd: &lt;span name=&quot;scala.collection.immutable.Stream.cons.apply.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;tl&quot;&gt;tl: =&amp;gt; &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.cons.apply.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.cons.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edb2b251008f906b7f8ecf10a4e021fcf50532c7" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;hd&quot;&gt;hd: =&amp;gt; &lt;span name=&quot;scala.collection.immutable.LazyList.cons.apply.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;tl&quot;&gt;tl: =&amp;gt; &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.cons.apply.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.cons.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8490a22c9bc2f235fcd7bf8418b0f4fd68ed5a5f" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;op&quot;&gt;op: (&lt;a href=&quot;using%24%24manager&quot; id=&quot;scala.util.Using.Manager&quot; name=&quot;scala.util.Using.Manager&quot;&gt;Manager&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.util.Using.Manager.apply.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;span name=&quot;scala.util.Using.Manager.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb7a3d866a8ff570285a79c8ae370c0774f4aaf0" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Filter.apply.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Filter.apply.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;isFlipped&quot;&gt;isFlipped: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24filter&quot; id=&quot;scala.collection.View.Filter&quot; name=&quot;scala.collection.View.Filter&quot;&gt;Filter&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Filter.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20e126db4b4ca9cefea7aa6a0dab3eea1380089a" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.Option.apply.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8399366d25c06a138013e1c15f06765c1a46d3c" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.apply.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25f9da6f5a03783140f9ce5ee05622f9deca9953" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.apply.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5938533d770e994e10af06c907772f52a652055" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.apply.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b303b28a3a80e7c386c873fccc852320d3faad0" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.apply.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10fd1f75cd6044ad8a97a848c840bfd52ef94eb2" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.apply.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.ClassTagIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8e74a1383f52f3c786e911c64cb394cf8198cb9" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.apply.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.ClassTagSeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="715080a1b99bde555565ee59ac7acc1805194f39" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.Ev&quot;&gt;Ev&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.apply.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="654293b3f096ed239b048471fd58537bddfffe29" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.apply.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;priorityqueue&quot; id=&quot;scala.collection.mutable.PriorityQueue&quot; name=&quot;scala.collection.mutable.PriorityQueue&quot;&gt;PriorityQueue&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67a1bf252101dd911bc41c04f28996090bce18ce" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.apply.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37cefdd118fd7e4c5f0404dcd9eff6569aed2054" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.apply.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.mutable.TreeSet&quot; name=&quot;scala.collection.mutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59f3350a0c894862c837155d9b29065bc16a684b" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.apply.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6925bd122a99ee5e3e09b263f011c60290e3917e" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.apply.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d51042ec622a829d6c88a466dff7b56c23f886a" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.apply.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80b575a670c2bdb9c1edf860e3210ce2f3b76755" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.apply.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedIterableFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c367e04475c077df6af1c082319156e5fd33e89d" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.apply.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.ClassTagIterableFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37e9f6f494619eeec0f13f19e08822201292b923" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.apply.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.ClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97494f880a1ab92dbebf3f1c239d9842dd653373" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.apply.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="979f721ef8341c31f9955ed367da5343b3675c1e" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Ev&quot;&gt;Ev&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.apply.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.EvidenceIterableFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b944a68d81e983baec24096382e1d986e016f4ad" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;span name=&quot;scala.collection.Iterator.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48d83aa31789b7dbf6240897f7316be028e9e942" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;span name=&quot;scala.collection.View.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df7ad18ca9d0113f18b20a12a21ee4427c3f5751" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;span name=&quot;scala.collection.immutable.Queue.apply.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Queue.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d6fda9367b87a63a2ab7200108e180ae22e41e4" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;K&quot;&gt;K &amp;lt;: &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: (&lt;span name=&quot;scala.collection.mutable.AnyRefMap.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.apply.V&quot;&gt;V&lt;/span&gt;)*&lt;/span&gt;): &lt;a href=&quot;anyrefmap&quot; id=&quot;scala.collection.mutable.AnyRefMap&quot; name=&quot;scala.collection.mutable.AnyRefMap&quot;&gt;AnyRefMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.apply.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ce51fcf18b61fd39f85c05159ac90f5a7102cde" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: (&lt;span name=&quot;scala.collection.MapFactory.Delegate.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.Delegate.apply.V&quot;&gt;V&lt;/span&gt;)*&lt;/span&gt;): &lt;a href=&quot;immutable/seqmap&quot; id=&quot;scala.collection.immutable.SeqMap&quot; name=&quot;scala.collection.immutable.SeqMap&quot;&gt;immutable.SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactory.Delegate.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.Delegate.apply.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7106eab0e9a9724d7bf6e33c0e24a9804b3b503" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: (&lt;span name=&quot;scala.collection.MapFactory.Delegate.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.Delegate.apply.V&quot;&gt;V&lt;/span&gt;)*&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactory.Delegate.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.Delegate.apply.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eab105be53d5cc34ef4db21252a863faf6bf529" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: (&lt;span name=&quot;scala.collection.MapFactory.Delegate.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.Delegate.apply.V&quot;&gt;V&lt;/span&gt;)*&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactory.Delegate.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.Delegate.apply.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1587583b0ebbfd1eb4981c6ffc7b25443b5d464c" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: (&lt;span name=&quot;scala.collection.MapFactory.Delegate.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.Delegate.apply.V&quot;&gt;V&lt;/span&gt;)*&lt;/span&gt;): &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.mutable.SeqMap&quot; name=&quot;scala.collection.mutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactory.Delegate.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.Delegate.apply.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="066afe182d3947bd969207df2bb975923f5a419d" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: (&lt;span name=&quot;scala.collection.MapFactory.Delegate.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.Delegate.apply.V&quot;&gt;V&lt;/span&gt;)*&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapFactory.Delegate.C&quot;&gt;C&lt;/span&gt;[&lt;span name=&quot;scala.collection.MapFactory.Delegate.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.Delegate.apply.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbde26b8cb086ac861d8c576fdaf9b7112ab09f4" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: (&lt;span name=&quot;scala.collection.MapFactory.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.apply.V&quot;&gt;V&lt;/span&gt;)*&lt;/span&gt;): &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.immutable.HashMap&quot; name=&quot;scala.collection.immutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactory.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.apply.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="205418fe10d51fc5c11ac576ac73f85a08d8d02e" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: (&lt;span name=&quot;scala.collection.MapFactory.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.apply.V&quot;&gt;V&lt;/span&gt;)*&lt;/span&gt;): &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.mutable.HashMap&quot; name=&quot;scala.collection.mutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactory.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.apply.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54e13ebde2f2ef90c5ceea3480a474b4638aebce" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: (&lt;span name=&quot;scala.collection.MapFactory.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.apply.V&quot;&gt;V&lt;/span&gt;)*&lt;/span&gt;): &lt;a href=&quot;linkedhashmap&quot; id=&quot;scala.collection.mutable.LinkedHashMap&quot; name=&quot;scala.collection.mutable.LinkedHashMap&quot;&gt;LinkedHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactory.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.apply.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="977000596c83750bf02c166b2e3431b3cc126824" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: (&lt;span name=&quot;scala.collection.MapFactory.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.apply.V&quot;&gt;V&lt;/span&gt;)*&lt;/span&gt;): &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.immutable.ListMap&quot; name=&quot;scala.collection.immutable.ListMap&quot;&gt;ListMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactory.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.apply.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43e80d9d0553cf6eed6e7661209c5fb4225bc8cf" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: (&lt;span name=&quot;scala.collection.MapFactory.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.apply.V&quot;&gt;V&lt;/span&gt;)*&lt;/span&gt;): &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.mutable.ListMap&quot; name=&quot;scala.collection.mutable.ListMap&quot;&gt;ListMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactory.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.apply.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a01db1f798c1fea30427e997b59f46b3a7b2c29" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: (&lt;span name=&quot;scala.collection.MapFactory.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.apply.V&quot;&gt;V&lt;/span&gt;)*&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactory.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.apply.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b947e2851ef62b09ce334802227c1561da49e433" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: (&lt;span name=&quot;scala.collection.MapFactory.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.apply.V&quot;&gt;V&lt;/span&gt;)*&lt;/span&gt;): &lt;a href=&quot;openhashmap&quot; id=&quot;scala.collection.mutable.OpenHashMap&quot; name=&quot;scala.collection.mutable.OpenHashMap&quot;&gt;OpenHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactory.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.apply.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cdccbcc9ab52fee4c22280487d1eaf19efd9c84" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: (&lt;span name=&quot;scala.collection.MapFactory.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.apply.V&quot;&gt;V&lt;/span&gt;)*&lt;/span&gt;): &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.immutable.SeqMap&quot; name=&quot;scala.collection.immutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactory.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.apply.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="935fdf70eeb4cb461cf6675e3b737426320f7549" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: (&lt;span name=&quot;scala.collection.MapFactory.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.apply.V&quot;&gt;V&lt;/span&gt;)*&lt;/span&gt;): &lt;a href=&quot;treeseqmap&quot; id=&quot;scala.collection.immutable.TreeSeqMap&quot; name=&quot;scala.collection.immutable.TreeSeqMap&quot;&gt;TreeSeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactory.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.apply.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68d156fa9e804abb1525038bfd3cb30d96ad33cc" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: (&lt;span name=&quot;scala.collection.MapFactory.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.apply.V&quot;&gt;V&lt;/span&gt;)*&lt;/span&gt;): &lt;a href=&quot;triemap&quot; id=&quot;scala.collection.concurrent.TrieMap&quot; name=&quot;scala.collection.concurrent.TrieMap&quot;&gt;TrieMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactory.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.apply.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a67276a1bd564ba37fa60741d30059a29bab1e7c" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: (&lt;span name=&quot;scala.collection.MapFactory.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.apply.V&quot;&gt;V&lt;/span&gt;)*&lt;/span&gt;): &lt;a href=&quot;vectormap&quot; id=&quot;scala.collection.immutable.VectorMap&quot; name=&quot;scala.collection.immutable.VectorMap&quot;&gt;VectorMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactory.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.apply.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c7e289b9752a668cccfe229eb82fc51a5d786b9" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: (&lt;span name=&quot;scala.collection.MapFactory.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.apply.V&quot;&gt;V&lt;/span&gt;)*&lt;/span&gt;): &lt;a href=&quot;weakhashmap&quot; id=&quot;scala.collection.mutable.WeakHashMap&quot; name=&quot;scala.collection.mutable.WeakHashMap&quot;&gt;WeakHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactory.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.apply.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c7279504ac4bb2350f5346e1b6fea4fbe43f32c" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: (&lt;span name=&quot;scala.collection.MapFactory.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.apply.V&quot;&gt;V&lt;/span&gt;)*&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.MapFactory.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.apply.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a5545366defbc0ea950b058b08e3d414756d9c3" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: (&lt;span name=&quot;scala.collection.MapView.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.apply.V&quot;&gt;V&lt;/span&gt;)*&lt;/span&gt;): &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.apply.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87d42d10a6a2a545136d6326b910482c36d2e24d" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: (&lt;span name=&quot;scala.collection.MapViewFactory.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapViewFactory.apply.V&quot;&gt;V&lt;/span&gt;)*&lt;/span&gt;): &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapViewFactory.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapViewFactory.apply.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4c08391b34953886387e85bb7ebe83b0eb8ba9e" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: (&lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.apply.V&quot;&gt;V&lt;/span&gt;)*&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.apply.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.immutable.SortedMap&quot; name=&quot;scala.collection.immutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.apply.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d06a238d4f78cab2c30871aaf963120b5c0c63e" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: (&lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.apply.V&quot;&gt;V&lt;/span&gt;)*&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.apply.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.mutable.SortedMap&quot; name=&quot;scala.collection.mutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.apply.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eba62fd3e6914c50aa93ac68c7758968e7df2399" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: (&lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.apply.V&quot;&gt;V&lt;/span&gt;)*&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.apply.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.SortedMap&quot; name=&quot;scala.collection.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.apply.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccfefb50e346ffb72d9c0b621a1808e4f6f4b1b3" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: (&lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.apply.V&quot;&gt;V&lt;/span&gt;)*&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.apply.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.apply.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f252bd22f49c59e438be8fe2497ef95bfed5b78" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: (&lt;span name=&quot;scala.collection.SortedMapFactory.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactory.apply.V&quot;&gt;V&lt;/span&gt;)*&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.apply.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;collisionproofhashmap&quot; id=&quot;scala.collection.mutable.CollisionProofHashMap&quot; name=&quot;scala.collection.mutable.CollisionProofHashMap&quot;&gt;CollisionProofHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactory.apply.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86dfef28333d18e90fd1994bd2c336537f5bad45" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: (&lt;span name=&quot;scala.collection.SortedMapFactory.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactory.apply.V&quot;&gt;V&lt;/span&gt;)*&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.apply.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.immutable.TreeMap&quot; name=&quot;scala.collection.immutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactory.apply.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15d69c2a3bf293d5258695d2bdd983be7aebb6f7" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: (&lt;span name=&quot;scala.collection.SortedMapFactory.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactory.apply.V&quot;&gt;V&lt;/span&gt;)*&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.apply.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.mutable.TreeMap&quot; name=&quot;scala.collection.mutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactory.apply.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59ba2cc6a4770b28a87b06a6ef836062c1f7dc13" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: (&lt;span name=&quot;scala.collection.SortedMapFactory.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactory.apply.V&quot;&gt;V&lt;/span&gt;)*&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.apply.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedMapFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.apply.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactory.apply.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="594bb45668aac9e152105545a74b192f1aef4a72" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;, &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;resource&quot;&gt;resource: =&amp;gt; &lt;span name=&quot;scala.util.Using.apply.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.util.Using.apply.R&quot;&gt;R&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.util.Using.apply.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;using%24%24releasable&quot; id=&quot;scala.util.Using.Releasable&quot; name=&quot;scala.util.Using.Releasable&quot;&gt;Releasable&lt;/a&gt;[&lt;span name=&quot;scala.util.Using.apply.R&quot;&gt;R&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;span name=&quot;scala.util.Using.apply.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fbf414da3a4a915208264c88ad28e35119d7a6b" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;resource&quot;&gt;resource: &lt;span name=&quot;scala.util.Using.Manager.apply.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;using%24%24releasable&quot; id=&quot;scala.util.Using.Releasable&quot; name=&quot;scala.util.Using.Releasable&quot;&gt;Releasable&lt;/a&gt;[&lt;span name=&quot;scala.util.Using.Manager.apply.R&quot;&gt;R&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.util.Using.Manager.apply.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c06ffa11905e2b1bd0a51b264573f9dfd14b9586" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;T&quot;&gt;T &amp;lt;: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.ref.SoftReference.apply.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;softreference&quot; id=&quot;scala.ref.SoftReference&quot; name=&quot;scala.ref.SoftReference&quot;&gt;SoftReference&lt;/a&gt;[&lt;span name=&quot;scala.ref.SoftReference.apply.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a93158b81674bbdd18770908a5d3acff1ec5570d" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;T&quot;&gt;T &amp;lt;: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.ref.WeakReference.apply.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;weakreference&quot; id=&quot;scala.ref.WeakReference&quot; name=&quot;scala.ref.WeakReference&quot;&gt;WeakReference&lt;/a&gt;[&lt;span name=&quot;scala.ref.WeakReference.apply.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc96bf9a250bd418e5ad8434ffe44f9a5b82aa47" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: (&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.apply.T&quot;&gt;T&lt;/span&gt;)*&lt;/span&gt;): &lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IntMap.apply.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13a940ef8fdbf04de89b7546e7302100b8286a9e" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: (&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.apply.T&quot;&gt;T&lt;/span&gt;)*&lt;/span&gt;): &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LongMap.apply.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="172d8fdcb1115224e7e32a17f256142b553154c3" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;prop%24%24creator&quot; id=&quot;scala.sys.Prop.Creator&quot; name=&quot;scala.sys.Prop.Creator&quot;&gt;Creator&lt;/a&gt;[&lt;span name=&quot;scala.sys.Prop.apply.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;prop&quot; id=&quot;scala.sys.Prop&quot; name=&quot;scala.sys.Prop&quot;&gt;Prop&lt;/a&gt;[&lt;span name=&quot;scala.sys.Prop.apply.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d4c004999d0a6f10bb0a3ea16d39398a006f6c4" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;r&quot;&gt;r: =&amp;gt; &lt;span name=&quot;scala.util.Try.apply.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;span name=&quot;scala.util.Try.apply.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9313c0f7ba27ca7a27bffef5538a53eebd3b11bd" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;runtimeClass1&quot;&gt;runtimeClass1: &lt;span name=&quot;java.lang.Class&quot;&gt;Class&lt;/span&gt;[_]&lt;/span&gt;): &lt;a href=&quot;classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.reflect.ClassTag.apply.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65924abcf96b09aab9a14d99fd203f320b79ab90" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.immutable.NumericRange.apply.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;end&quot;&gt;end: &lt;span name=&quot;scala.collection.immutable.NumericRange.apply.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;step&quot;&gt;step: &lt;span name=&quot;scala.collection.immutable.NumericRange.apply.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;num&quot;&gt;num: &lt;a href=&quot;../../index#Integral%5BT%5D=scala.math.Integral%5BT%5D&quot; id=&quot;scala.Integral&quot; name=&quot;scala.Integral&quot;&gt;Integral&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.apply.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;numericrange%24%24exclusive&quot; id=&quot;scala.collection.immutable.NumericRange.Exclusive&quot; name=&quot;scala.collection.immutable.NumericRange.Exclusive&quot;&gt;Exclusive&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.apply.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="326e40e8bc1f8d9d578178e33b525b9eca196c6a" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;span name=&quot;scala.Array.apply.T&quot;&gt;T&lt;/span&gt;*&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.Array.apply.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.Array.apply.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee489fcbee6ebd1e9b34e3b8be301152af903c6e" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.apply.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.apply.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a643f85e211934b1f1ce1bb676cb04ad51b98f6" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;partialordering&quot; id=&quot;scala.math.PartialOrdering&quot; name=&quot;scala.math.PartialOrdering&quot;&gt;PartialOrdering&lt;/a&gt;[&lt;span name=&quot;scala.math.PartialOrdering.apply.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;partialordering&quot; id=&quot;scala.math.PartialOrdering&quot; name=&quot;scala.math.PartialOrdering&quot;&gt;PartialOrdering&lt;/a&gt;[&lt;span name=&quot;scala.math.PartialOrdering.apply.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="867d6a3c7029665c3ff6d7b1e78e47bd8d7354f8" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](implicit &lt;span name=&quot;frac&quot;&gt;frac: &lt;a href=&quot;fractional&quot; id=&quot;scala.math.Fractional&quot; name=&quot;scala.math.Fractional&quot;&gt;Fractional&lt;/a&gt;[&lt;span name=&quot;scala.math.Fractional.apply.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;fractional&quot; id=&quot;scala.math.Fractional&quot; name=&quot;scala.math.Fractional&quot;&gt;Fractional&lt;/a&gt;[&lt;span name=&quot;scala.math.Fractional.apply.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c79f8266e3099886bc54f3000a9262e9a4fa1a8c" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](implicit &lt;span name=&quot;int&quot;&gt;int: &lt;a href=&quot;integral&quot; id=&quot;scala.math.Integral&quot; name=&quot;scala.math.Integral&quot;&gt;Integral&lt;/a&gt;[&lt;span name=&quot;scala.math.Integral.apply.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;integral&quot; id=&quot;scala.math.Integral&quot; name=&quot;scala.math.Integral&quot;&gt;Integral&lt;/a&gt;[&lt;span name=&quot;scala.math.Integral.apply.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68f5d5f3e18c67ec634b2db46e99f9f0b7ce838e" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](implicit &lt;span name=&quot;num&quot;&gt;num: &lt;a href=&quot;numeric&quot; id=&quot;scala.math.Numeric&quot; name=&quot;scala.math.Numeric&quot;&gt;Numeric&lt;/a&gt;[&lt;span name=&quot;scala.math.Numeric.apply.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;numeric&quot; id=&quot;scala.math.Numeric&quot; name=&quot;scala.math.Numeric&quot;&gt;Numeric&lt;/a&gt;[&lt;span name=&quot;scala.math.Numeric.apply.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dc57c5b439b78b8bf8665dfaffcc2d031892426" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.apply.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.apply.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f945395cb21f93498ff15b2a53d2816983cfe0fa" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;U&quot;&gt;U &amp;gt;: &lt;span name=&quot;scala.util.control.Exception.Catch.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;body&quot;&gt;body: =&amp;gt; &lt;span name=&quot;scala.util.control.Exception.Catch.apply.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.util.control.Exception.Catch.apply.U&quot;&gt;U&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cd0521ccae10097e8037049b8f91464ec2f2c5f" translate="yes" xml:space="preserve">
          <source>def apply[&lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;elems&quot;&gt;elems: (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.apply.V&quot;&gt;V&lt;/span&gt;)*&lt;/span&gt;): &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.mutable.LongMap&quot; name=&quot;scala.collection.mutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LongMap.apply.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="429d0207bd888d009ad0ebde921214c22e4fa071" translate="yes" xml:space="preserve">
          <source>def argString: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5e5fd19959c84ce9b1030a51c984e5cb66a9abe" translate="yes" xml:space="preserve">
          <source>def arrayClass[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;tp&quot;&gt;tp: &lt;span name=&quot;java.lang.Class&quot;&gt;Class&lt;/span&gt;[_]&lt;/span&gt;): &lt;span name=&quot;java.lang.Class&quot;&gt;Class&lt;/span&gt;[&lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.reflect.ClassManifestDeprecatedApis.arrayClass.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eeb4a7a0b7432354a76a913c367d12b60d85755" translate="yes" xml:space="preserve">
          <source>def arrayHash[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.util.hashing.MurmurHash3.arrayHash.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="622594d45627afac85afd66c0c5ecd7c627a2cc2" translate="yes" xml:space="preserve">
          <source>def arrayHashing[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;]: &lt;a href=&quot;murmurhash3%24%24arrayhashing&quot; id=&quot;scala.util.hashing.MurmurHash3.ArrayHashing&quot; name=&quot;scala.util.hashing.MurmurHash3.ArrayHashing&quot;&gt;ArrayHashing&lt;/a&gt;[&lt;span name=&quot;scala.util.hashing.MurmurHash3.arrayHashing.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64e5da5817c2d4ead0e6cc40e03b4f50206c0031" translate="yes" xml:space="preserve">
          <source>def arrayManifest: &lt;a href=&quot;manifest&quot; id=&quot;scala.reflect.Manifest&quot; name=&quot;scala.reflect.Manifest&quot;&gt;Manifest&lt;/a&gt;[&lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.reflect.AnyValManifest.T&quot;&gt;T&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e5491f6997464c11d4522d3d79ffbb9cfe61e34" translate="yes" xml:space="preserve">
          <source>def arrayManifest: &lt;a href=&quot;manifest&quot; id=&quot;scala.reflect.Manifest&quot; name=&quot;scala.reflect.Manifest&quot;&gt;Manifest&lt;/a&gt;[&lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.reflect.Manifest.T&quot;&gt;T&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75adfe23a31d8f850a436c81766e35d1a536e91d" translate="yes" xml:space="preserve">
          <source>def arrayType[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;arg&quot;&gt;arg: &lt;a href=&quot;manifest&quot; id=&quot;scala.reflect.Manifest&quot; name=&quot;scala.reflect.Manifest&quot;&gt;Manifest&lt;/a&gt;[_]&lt;/span&gt;): &lt;a href=&quot;manifest&quot; id=&quot;scala.reflect.Manifest&quot; name=&quot;scala.reflect.Manifest&quot;&gt;Manifest&lt;/a&gt;[&lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.reflect.Manifest.arrayType.T&quot;&gt;T&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="197fd73fd141ecc5f673cfe83c67b3969cba5e62" translate="yes" xml:space="preserve">
          <source>def arrayType[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;arg&quot;&gt;arg: &lt;a href=&quot;manifest&quot; id=&quot;scala.reflect.Manifest&quot; name=&quot;scala.reflect.Manifest&quot;&gt;Manifest&lt;/a&gt;[_]&lt;/span&gt;): &lt;a href=&quot;manifest&quot; id=&quot;scala.reflect.Manifest&quot; name=&quot;scala.reflect.Manifest&quot;&gt;Manifest&lt;/a&gt;[&lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.reflect.ManifestFactory.arrayType.T&quot;&gt;T&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c82fb61d7776dea8a1e35db2c3e3fa508623f69a" translate="yes" xml:space="preserve">
          <source>def arrayType[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;arg&quot;&gt;arg: &lt;a href=&quot;optmanifest&quot; id=&quot;scala.reflect.OptManifest&quot; name=&quot;scala.reflect.OptManifest&quot;&gt;OptManifest&lt;/a&gt;[_]&lt;/span&gt;): &lt;a href=&quot;index#ClassManifest%5BT%5D=scala.reflect.ClassTag%5BT%5D&quot; id=&quot;scala.reflect.ClassManifest&quot; name=&quot;scala.reflect.ClassManifest&quot;&gt;ClassManifest&lt;/a&gt;[&lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.reflect.ClassManifestFactory.arrayType.T&quot;&gt;T&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="397f36f445aca46a7917685d76aa721c19a17852" translate="yes" xml:space="preserve">
          <source>def asDigit: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a07a524d394549fd8fa30c5ad74120b55150ca60" translate="yes" xml:space="preserve">
          <source>def asJava: &lt;span name=&quot;java.lang.Iterable&quot;&gt;java.lang.Iterable&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.IterableHasAsJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47526265e8bc17e8016e5d083d965b1913fb21c7" translate="yes" xml:space="preserve">
          <source>def asJava: &lt;span name=&quot;java.util.Iterator&quot;&gt;java.util.Iterator&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.IteratorHasAsJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fac7cbf30fe293485b67fc0e82d793228b25d74b" translate="yes" xml:space="preserve">
          <source>def asJava: &lt;span name=&quot;java.util.List&quot;&gt;java.util.List&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.BufferHasAsJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d1069a8cef7ff8bd101c9778105b57820125a03" translate="yes" xml:space="preserve">
          <source>def asJava: &lt;span name=&quot;java.util.List&quot;&gt;java.util.List&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.MutableSeqHasAsJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19c2774179dcd6833ae942a3ebbe66fa4ba230a9" translate="yes" xml:space="preserve">
          <source>def asJava: &lt;span name=&quot;java.util.List&quot;&gt;java.util.List&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.SeqHasAsJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2efa5b62341f4969e722cd717a04d2d1113e0ac" translate="yes" xml:space="preserve">
          <source>def asJava: &lt;span name=&quot;java.util.Map&quot;&gt;java.util.Map&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.MapHasAsJava.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsJavaExtensions.MapHasAsJava.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df0120352569dac0c0f6b766f3bb72bdb115dda4" translate="yes" xml:space="preserve">
          <source>def asJava: &lt;span name=&quot;java.util.Map&quot;&gt;java.util.Map&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.MutableMapHasAsJava.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsJavaExtensions.MutableMapHasAsJava.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c93320150e3e0626bac43217bc34eb3ff6746c92" translate="yes" xml:space="preserve">
          <source>def asJava: &lt;span name=&quot;java.util.Set&quot;&gt;java.util.Set&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.MutableSetHasAsJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="150f16a77e54a5ff55b440b216f5f9eb7cc30efc" translate="yes" xml:space="preserve">
          <source>def asJava: &lt;span name=&quot;java.util.Set&quot;&gt;java.util.Set&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.SetHasAsJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e2f0ff9a9ed8630c2a6d416f4617dba4e8a90c2" translate="yes" xml:space="preserve">
          <source>def asJava: &lt;span name=&quot;java.util.concurrent.CompletionStage&quot;&gt;CompletionStage&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FutureConverters.FutureOps.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bea5d0fcc106ae806cd260263aa359bb5dada24d" translate="yes" xml:space="preserve">
          <source>def asJava: &lt;span name=&quot;java.util.concurrent.ConcurrentMap&quot;&gt;ConcurrentMap&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.ConcurrentMapHasAsJava.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsJavaExtensions.ConcurrentMapHasAsJava.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfff13ceafa77b9943ad27ac62af412ee0cadd67" translate="yes" xml:space="preserve">
          <source>def asJava: &lt;span name=&quot;java.util.function.BiConsumer&quot;&gt;BiConsumer&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiConsumer.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14925b08f9f8950d4e54d87d740c4ecd3c5635fd" translate="yes" xml:space="preserve">
          <source>def asJava: &lt;span name=&quot;java.util.function.BiFunction&quot;&gt;BiFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiFunction.U&quot;&gt;U&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiFunction.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd376daed0e006eae6231262840ff4316c028b5f" translate="yes" xml:space="preserve">
          <source>def asJava: &lt;span name=&quot;java.util.function.BiPredicate&quot;&gt;BiPredicate&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiPredicate.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiPredicate.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b4cfd47bff1ec2c6162b75329e0e33745b27bbb" translate="yes" xml:space="preserve">
          <source>def asJava: &lt;span name=&quot;java.util.function.BinaryOperator&quot;&gt;BinaryOperator&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBinaryOperator.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09b79104f43eac1ae3ba8b231e9abab34f34d486" translate="yes" xml:space="preserve">
          <source>def asJava: &lt;span name=&quot;java.util.function.BooleanSupplier&quot;&gt;BooleanSupplier&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae6aa336382d823b027e92bfe95fc7e5522c5701" translate="yes" xml:space="preserve">
          <source>def asJava: &lt;span name=&quot;java.util.function.Consumer&quot;&gt;Consumer&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsConsumer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="292761f2a8cf38fa07eb646b809c46fba651f05f" translate="yes" xml:space="preserve">
          <source>def asJava: &lt;span name=&quot;java.util.function.DoubleBinaryOperator&quot;&gt;DoubleBinaryOperator&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15ee2887ee2298f3ed368b30afd0e1ca7b2341bc" translate="yes" xml:space="preserve">
          <source>def asJava: &lt;span name=&quot;java.util.function.DoubleConsumer&quot;&gt;DoubleConsumer&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cae9e7eb3f6807682f6f6abbdef976491235699" translate="yes" xml:space="preserve">
          <source>def asJava: &lt;span name=&quot;java.util.function.DoubleFunction&quot;&gt;DoubleFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleFunction.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1b273458d2e01368eacfd98b01a482ee37c3ac4" translate="yes" xml:space="preserve">
          <source>def asJava: &lt;span name=&quot;java.util.function.DoublePredicate&quot;&gt;DoublePredicate&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac54586a764ac5e58beb103e4f3a1b9a216f49ec" translate="yes" xml:space="preserve">
          <source>def asJava: &lt;span name=&quot;java.util.function.DoubleSupplier&quot;&gt;DoubleSupplier&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee81060250d72ca53321c91ac35c1c1a7042556f" translate="yes" xml:space="preserve">
          <source>def asJava: &lt;span name=&quot;java.util.function.DoubleToIntFunction&quot;&gt;DoubleToIntFunction&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de8ea6534e52f46dc1a817a9e1e055d1c1ddf8f0" translate="yes" xml:space="preserve">
          <source>def asJava: &lt;span name=&quot;java.util.function.DoubleToLongFunction&quot;&gt;DoubleToLongFunction&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="841868e5faa76c7506ea17f6d8703ae1d3b46489" translate="yes" xml:space="preserve">
          <source>def asJava: &lt;span name=&quot;java.util.function.DoubleUnaryOperator&quot;&gt;DoubleUnaryOperator&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea0d7082ba8b7501a7aa3bc4e0fb38da78525399" translate="yes" xml:space="preserve">
          <source>def asJava: &lt;span name=&quot;java.util.function.Function&quot;&gt;java.util.function.Function&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsFunction.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d28359114173a3db12594d7adece600b5bb3c9d" translate="yes" xml:space="preserve">
          <source>def asJava: &lt;span name=&quot;java.util.function.IntBinaryOperator&quot;&gt;IntBinaryOperator&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e28650ce23637437b9fadcc84e22627022a89815" translate="yes" xml:space="preserve">
          <source>def asJava: &lt;span name=&quot;java.util.function.IntConsumer&quot;&gt;IntConsumer&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="090c0680c516fd0a1709c76559324bb933aacdc5" translate="yes" xml:space="preserve">
          <source>def asJava: &lt;span name=&quot;java.util.function.IntFunction&quot;&gt;IntFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntFunction.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31540e6b8d2f2286f2048bd9879c47b5be2cdce9" translate="yes" xml:space="preserve">
          <source>def asJava: &lt;span name=&quot;java.util.function.IntPredicate&quot;&gt;IntPredicate&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b50dfdcfe621d6ac992a7191750baec62d70c121" translate="yes" xml:space="preserve">
          <source>def asJava: &lt;span name=&quot;java.util.function.IntSupplier&quot;&gt;IntSupplier&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df56f18f9972628b57821ec6cf53689c1979726f" translate="yes" xml:space="preserve">
          <source>def asJava: &lt;span name=&quot;java.util.function.IntToDoubleFunction&quot;&gt;IntToDoubleFunction&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="784c6289ff09e7b2117e965f608ad76564da4bf3" translate="yes" xml:space="preserve">
          <source>def asJava: &lt;span name=&quot;java.util.function.IntToLongFunction&quot;&gt;IntToLongFunction&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41c3790e4e58eff6f8e2f1d97470a35c975d3489" translate="yes" xml:space="preserve">
          <source>def asJava: &lt;span name=&quot;java.util.function.IntUnaryOperator&quot;&gt;IntUnaryOperator&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e036cab264dbf42fda495e3c010b031b07a99dac" translate="yes" xml:space="preserve">
          <source>def asJava: &lt;span name=&quot;java.util.function.LongBinaryOperator&quot;&gt;LongBinaryOperator&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd0b382d0311f5c9106c0649a581875e3b9142be" translate="yes" xml:space="preserve">
          <source>def asJava: &lt;span name=&quot;java.util.function.LongConsumer&quot;&gt;LongConsumer&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a6bfa97cc0176eac6f1bba6c52bb8f609e54a9d" translate="yes" xml:space="preserve">
          <source>def asJava: &lt;span name=&quot;java.util.function.LongFunction&quot;&gt;LongFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongFunction.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="090503e3ef25f8771336d55ba0b33c91cc3ca663" translate="yes" xml:space="preserve">
          <source>def asJava: &lt;span name=&quot;java.util.function.LongPredicate&quot;&gt;LongPredicate&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e0ca783f2c6e39bf722766fdd8242003c55c229" translate="yes" xml:space="preserve">
          <source>def asJava: &lt;span name=&quot;java.util.function.LongSupplier&quot;&gt;LongSupplier&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9372a2ffe8f20cd362faeea1e2f4ca9d0e6425b" translate="yes" xml:space="preserve">
          <source>def asJava: &lt;span name=&quot;java.util.function.LongToDoubleFunction&quot;&gt;LongToDoubleFunction&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6e76399340b17908b588ea9e4384bccc2b0aea5" translate="yes" xml:space="preserve">
          <source>def asJava: &lt;span name=&quot;java.util.function.LongToIntFunction&quot;&gt;LongToIntFunction&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95ce31ea25506ee33119f2cc5c0aeb280a58c87c" translate="yes" xml:space="preserve">
          <source>def asJava: &lt;span name=&quot;java.util.function.LongUnaryOperator&quot;&gt;LongUnaryOperator&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bff604f9cdbf99f21db2fb4d2c19b3c295e9f48d" translate="yes" xml:space="preserve">
          <source>def asJava: &lt;span name=&quot;java.util.function.ObjDoubleConsumer&quot;&gt;ObjDoubleConsumer&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsObjDoubleConsumer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c5361bde3cf65dd231beccbcad0c1edcb929400" translate="yes" xml:space="preserve">
          <source>def asJava: &lt;span name=&quot;java.util.function.ObjIntConsumer&quot;&gt;ObjIntConsumer&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsObjIntConsumer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b753814c2d2e591526fb557aeedfaf2927956c94" translate="yes" xml:space="preserve">
          <source>def asJava: &lt;span name=&quot;java.util.function.ObjLongConsumer&quot;&gt;ObjLongConsumer&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsObjLongConsumer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e714cc0b5364a92cb393c1f4da4fb286314ab346" translate="yes" xml:space="preserve">
          <source>def asJava: &lt;span name=&quot;java.util.function.Predicate&quot;&gt;Predicate&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsPredicate.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a10893f1d57133f8fe5d8c0494305bfd72ca13ba" translate="yes" xml:space="preserve">
          <source>def asJava: &lt;span name=&quot;java.util.function.Supplier&quot;&gt;Supplier&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction0AsSupplier.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="459f443a4b34f6a1a42f816645383e5ec4f3a197" translate="yes" xml:space="preserve">
          <source>def asJava: &lt;span name=&quot;java.util.function.ToDoubleBiFunction&quot;&gt;ToDoubleBiFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToDoubleBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToDoubleBiFunction.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fab8bcba8c8815b755d17bc886222309dab15456" translate="yes" xml:space="preserve">
          <source>def asJava: &lt;span name=&quot;java.util.function.ToDoubleFunction&quot;&gt;ToDoubleFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsToDoubleFunction.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b303c806f71a542a5facc9c0200170b835a41ae2" translate="yes" xml:space="preserve">
          <source>def asJava: &lt;span name=&quot;java.util.function.ToIntBiFunction&quot;&gt;ToIntBiFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToIntBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToIntBiFunction.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5abec5057e9a807e1c44a96aa80d8b1b113af524" translate="yes" xml:space="preserve">
          <source>def asJava: &lt;span name=&quot;java.util.function.ToIntFunction&quot;&gt;ToIntFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsToIntFunction.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ad35be77bd129325aee59343b234743d01ad372" translate="yes" xml:space="preserve">
          <source>def asJava: &lt;span name=&quot;java.util.function.ToLongBiFunction&quot;&gt;ToLongBiFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToLongBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToLongBiFunction.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0e5c960fd49528ca43c115586c4e2be07d8fb65" translate="yes" xml:space="preserve">
          <source>def asJava: &lt;span name=&quot;java.util.function.ToLongFunction&quot;&gt;ToLongFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsToLongFunction.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0741a96322d50c4e0c84b8375a3cfbcc0ae6690e" translate="yes" xml:space="preserve">
          <source>def asJava: &lt;span name=&quot;java.util.function.UnaryOperator&quot;&gt;UnaryOperator&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsUnaryOperator.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d42ea4324106d2c0e470a46616d97704e36bd6fe" translate="yes" xml:space="preserve">
          <source>def asJava: &lt;span name=&quot;scala.collection.JavaConverters.AsJava.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63b7a424467769b51858a51223e4a53ce9498dda" translate="yes" xml:space="preserve">
          <source>def asJavaBiConsumer: &lt;span name=&quot;java.util.function.BiConsumer&quot;&gt;BiConsumer&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiConsumer.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="493a41f09b9db377891c47301ff99476c1c085d2" translate="yes" xml:space="preserve">
          <source>def asJavaBiConsumer[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaBiConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaBiConsumer.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.runtime.BoxedUnit&quot;&gt;BoxedUnit&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.function.BiConsumer&quot;&gt;BiConsumer&lt;/span&gt;[&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaBiConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaBiConsumer.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a342ce0fe574eaee548c0ff6af822c10d065d81" translate="yes" xml:space="preserve">
          <source>def asJavaBiFunction: &lt;span name=&quot;java.util.function.BiFunction&quot;&gt;BiFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiFunction.U&quot;&gt;U&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiFunction.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3e7d58b4637ea1d3dce2453a85f9e0dd4b2d7dd" translate="yes" xml:space="preserve">
          <source>def asJavaBiFunction[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;, &lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaBiFunction.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaBiFunction.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.function.BiFunction&quot;&gt;BiFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaBiFunction.U&quot;&gt;U&lt;/span&gt;, &lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaBiFunction.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4496df9ea7e1f1cc52f6b171e2cde49c0763102" translate="yes" xml:space="preserve">
          <source>def asJavaBiPredicate: &lt;span name=&quot;java.util.function.BiPredicate&quot;&gt;BiPredicate&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiPredicate.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiPredicate.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe64a913189a2b4eb26b86db28ee03bcaf2928fd" translate="yes" xml:space="preserve">
          <source>def asJavaBiPredicate[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaBiPredicate.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaBiPredicate.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;java.lang.Boolean&quot;&gt;java.lang.Boolean&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.function.BiPredicate&quot;&gt;BiPredicate&lt;/span&gt;[&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaBiPredicate.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaBiPredicate.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64c63509947f124b957f9a061d0bf00f279faa85" translate="yes" xml:space="preserve">
          <source>def asJavaBinaryOperator: &lt;span name=&quot;java.util.function.BinaryOperator&quot;&gt;BinaryOperator&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBinaryOperator.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="462120b4f62cbdd2f6380b7f0e0c6e5a69bcc65a" translate="yes" xml:space="preserve">
          <source>def asJavaBinaryOperator[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.function.BinaryOperator&quot;&gt;BinaryOperator&lt;/span&gt;[&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad56d5e73bfecad50da5e5cb1fc4e40fadeef522" translate="yes" xml:space="preserve">
          <source>def asJavaBooleanSupplier(&lt;span name=&quot;sf&quot;&gt;sf: () =&amp;gt; &lt;span name=&quot;java.lang.Boolean&quot;&gt;java.lang.Boolean&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.function.BooleanSupplier&quot;&gt;BooleanSupplier&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18ce92102d6ddd350c2736765ac23beb6c314686" translate="yes" xml:space="preserve">
          <source>def asJavaCollection: &lt;span name=&quot;java.util.Collection&quot;&gt;Collection&lt;/span&gt;[&lt;span name=&quot;scala.collection.JavaConverters.AsJavaCollection.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5b2ccfd963e01d00ed38552435d5de2dd2741b0" translate="yes" xml:space="preserve">
          <source>def asJavaCollection: &lt;span name=&quot;java.util.Collection&quot;&gt;Collection&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.IterableHasAsJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd6e07556eb243225dc8d7d7aa50b4ac8558ba78" translate="yes" xml:space="preserve">
          <source>def asJavaCollection[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../../collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJavaCollection.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.Collection&quot;&gt;Collection&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJavaCollection.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ad4951beba1a50f003c7077fc827887e8971572" translate="yes" xml:space="preserve">
          <source>def asJavaCollection[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJavaCollection.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.Collection&quot;&gt;Collection&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJavaCollection.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27c7a5871cdf0e89198b1c4a5991adcb507f6ae9" translate="yes" xml:space="preserve">
          <source>def asJavaCollection[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJavaCollection.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.Collection&quot;&gt;Collection&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJavaCollection.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2da91868a930f75c026c950c70884deac5670e8" translate="yes" xml:space="preserve">
          <source>def asJavaConsumer: &lt;span name=&quot;java.util.function.Consumer&quot;&gt;Consumer&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsConsumer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e3e2354eab28aa7c2ac7faa65017f870a7f2798" translate="yes" xml:space="preserve">
          <source>def asJavaConsumer[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaConsumer.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.runtime.BoxedUnit&quot;&gt;BoxedUnit&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.function.Consumer&quot;&gt;Consumer&lt;/span&gt;[&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaConsumer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e130115fd4eb6810fc63ad8a13bfe87384680d4" translate="yes" xml:space="preserve">
          <source>def asJavaDictionary: &lt;span name=&quot;java.util.Dictionary&quot;&gt;Dictionary&lt;/span&gt;[&lt;span name=&quot;scala.collection.JavaConverters.AsJavaDictionary.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.JavaConverters.AsJavaDictionary.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23f3a5ca25df48faa406fb08ea0bad2f46ecd225" translate="yes" xml:space="preserve">
          <source>def asJavaDictionary: &lt;span name=&quot;java.util.Dictionary&quot;&gt;Dictionary&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.MutableMapHasAsJava.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsJavaExtensions.MutableMapHasAsJava.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ec44522599ea3072d63b0f9f3ca8812a355acc3" translate="yes" xml:space="preserve">
          <source>def asJavaDictionary[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;../../collection/mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJavaDictionary.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJavaDictionary.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.Dictionary&quot;&gt;Dictionary&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJavaDictionary.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJavaDictionary.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba9126215fded041022bc5e79ad5e6d81091791b" translate="yes" xml:space="preserve">
          <source>def asJavaDictionary[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;../mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJavaDictionary.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJavaDictionary.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.Dictionary&quot;&gt;Dictionary&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJavaDictionary.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJavaDictionary.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9399e43ad3323b824c3f8ddd2787533c14c82885" translate="yes" xml:space="preserve">
          <source>def asJavaDictionary[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJavaDictionary.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJavaDictionary.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.Dictionary&quot;&gt;Dictionary&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJavaDictionary.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJavaDictionary.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ade59d07bd7f80ec0f6c1577b790253fa5e18228" translate="yes" xml:space="preserve">
          <source>def asJavaDoubleBinaryOperator(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;java.lang.Double&quot;&gt;java.lang.Double&lt;/span&gt;, &lt;span name=&quot;java.lang.Double&quot;&gt;java.lang.Double&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;java.lang.Double&quot;&gt;java.lang.Double&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.function.DoubleBinaryOperator&quot;&gt;DoubleBinaryOperator&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02293dd056107628627928aece35919b18c4a2d3" translate="yes" xml:space="preserve">
          <source>def asJavaDoubleConsumer(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;java.lang.Double&quot;&gt;java.lang.Double&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.runtime.BoxedUnit&quot;&gt;BoxedUnit&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.function.DoubleConsumer&quot;&gt;DoubleConsumer&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfa3a1ad78ef84a567881132e176fab22df0dd4e" translate="yes" xml:space="preserve">
          <source>def asJavaDoubleFunction: &lt;span name=&quot;java.util.function.DoubleFunction&quot;&gt;DoubleFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleFunction.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37ea10fdbd88906240def88e8baca459bd10266e" translate="yes" xml:space="preserve">
          <source>def asJavaDoubleFunction[&lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;java.lang.Double&quot;&gt;java.lang.Double&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaDoubleFunction.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.function.DoubleFunction&quot;&gt;DoubleFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaDoubleFunction.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7463ddfb31f3e704336201a7d0312520f37d5af5" translate="yes" xml:space="preserve">
          <source>def asJavaDoublePredicate(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;java.lang.Double&quot;&gt;java.lang.Double&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;java.lang.Boolean&quot;&gt;java.lang.Boolean&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.function.DoublePredicate&quot;&gt;DoublePredicate&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9e670d8a0360bd77ead7d051961d50f82dd43c6" translate="yes" xml:space="preserve">
          <source>def asJavaDoubleSupplier(&lt;span name=&quot;sf&quot;&gt;sf: () =&amp;gt; &lt;span name=&quot;java.lang.Double&quot;&gt;java.lang.Double&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.function.DoubleSupplier&quot;&gt;DoubleSupplier&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="685357c7a20dff6652793995eb211ccc3b2722a2" translate="yes" xml:space="preserve">
          <source>def asJavaDoubleToIntFunction(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;java.lang.Double&quot;&gt;java.lang.Double&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.function.DoubleToIntFunction&quot;&gt;DoubleToIntFunction&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e907a520ea97e100909a9ec724e188e3f95b2001" translate="yes" xml:space="preserve">
          <source>def asJavaDoubleToLongFunction(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;java.lang.Double&quot;&gt;java.lang.Double&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;java.lang.Long&quot;&gt;java.lang.Long&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.function.DoubleToLongFunction&quot;&gt;DoubleToLongFunction&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27215d023de5fc1c13648fe6fa2028d272851da0" translate="yes" xml:space="preserve">
          <source>def asJavaDoubleUnaryOperator(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;java.lang.Double&quot;&gt;java.lang.Double&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;java.lang.Double&quot;&gt;java.lang.Double&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.function.DoubleUnaryOperator&quot;&gt;DoubleUnaryOperator&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f4eee532a6517c463f0162f5aa8c7260d0a1aa3" translate="yes" xml:space="preserve">
          <source>def asJavaEnumeration: &lt;span name=&quot;java.util.Enumeration&quot;&gt;java.util.Enumeration&lt;/span&gt;[&lt;span name=&quot;scala.collection.JavaConverters.AsJavaEnumeration.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa60fc35fc7ef4667a7fe658881dc793bd055ab2" translate="yes" xml:space="preserve">
          <source>def asJavaEnumeration: &lt;span name=&quot;java.util.Enumeration&quot;&gt;java.util.Enumeration&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.IteratorHasAsJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="357a66f4daaaa2044ffcf9aa3e63cc6b7c5c3dee" translate="yes" xml:space="preserve">
          <source>def asJavaEnumeration[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJavaEnumeration.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.Enumeration&quot;&gt;java.util.Enumeration&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJavaEnumeration.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a9fbe1680d220b243a7abc106b9610f4beb006c" translate="yes" xml:space="preserve">
          <source>def asJavaEnumeration[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJavaEnumeration.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.Enumeration&quot;&gt;java.util.Enumeration&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJavaEnumeration.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b190cf7ab53a04ef8d9f11321ee58731eaf0d29" translate="yes" xml:space="preserve">
          <source>def asJavaEnumeration[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJavaEnumeration.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.Enumeration&quot;&gt;java.util.Enumeration&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJavaEnumeration.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="891914c98f91b2db40c7e7754462a2e3edfb87c7" translate="yes" xml:space="preserve">
          <source>def asJavaFunction: &lt;span name=&quot;java.util.function.Function&quot;&gt;java.util.function.Function&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsFunction.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7d9fac09f9c05947f66f277e7f14d481fa8b20a" translate="yes" xml:space="preserve">
          <source>def asJavaFunction[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaFunction.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaFunction.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.function.Function&quot;&gt;java.util.function.Function&lt;/span&gt;[&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaFunction.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5cf1dd576e7abc0f6415f109908d4f9657f0555" translate="yes" xml:space="preserve">
          <source>def asJavaIntBinaryOperator(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;, &lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.function.IntBinaryOperator&quot;&gt;IntBinaryOperator&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc6ab430623ac06de78d993586a14d77ce50d62d" translate="yes" xml:space="preserve">
          <source>def asJavaIntConsumer(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.runtime.BoxedUnit&quot;&gt;BoxedUnit&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.function.IntConsumer&quot;&gt;IntConsumer&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb559f1f7fef11b10218f7840e734f3b887df975" translate="yes" xml:space="preserve">
          <source>def asJavaIntFunction: &lt;span name=&quot;java.util.function.IntFunction&quot;&gt;IntFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntFunction.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cd658c489735d0460e4879fb4d9cc796f2979a5" translate="yes" xml:space="preserve">
          <source>def asJavaIntFunction[&lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaIntFunction.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.function.IntFunction&quot;&gt;IntFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaIntFunction.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63af2f6c9dccfe8bf16361803848573441093a3f" translate="yes" xml:space="preserve">
          <source>def asJavaIntPredicate(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;java.lang.Boolean&quot;&gt;java.lang.Boolean&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.function.IntPredicate&quot;&gt;IntPredicate&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="382e9ad8fcf49bb6f5e839c0b04104e3888dc640" translate="yes" xml:space="preserve">
          <source>def asJavaIntSupplier(&lt;span name=&quot;sf&quot;&gt;sf: () =&amp;gt; &lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.function.IntSupplier&quot;&gt;IntSupplier&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62db4f019b6f8fa9fb625b01be26ee5296dddaaf" translate="yes" xml:space="preserve">
          <source>def asJavaIntToDoubleFunction(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;java.lang.Double&quot;&gt;java.lang.Double&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.function.IntToDoubleFunction&quot;&gt;IntToDoubleFunction&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c3ce4b938d7dde405c608c109af91906d563e3f" translate="yes" xml:space="preserve">
          <source>def asJavaIntToLongFunction(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;java.lang.Long&quot;&gt;java.lang.Long&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.function.IntToLongFunction&quot;&gt;IntToLongFunction&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ccdc1b4b52822c90688e786405fff9928707a72" translate="yes" xml:space="preserve">
          <source>def asJavaIntUnaryOperator(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.function.IntUnaryOperator&quot;&gt;IntUnaryOperator&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b02bf471fe2a401ac47c9c694b915782c0a6685c" translate="yes" xml:space="preserve">
          <source>def asJavaLongBinaryOperator(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;java.lang.Long&quot;&gt;java.lang.Long&lt;/span&gt;, &lt;span name=&quot;java.lang.Long&quot;&gt;java.lang.Long&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;java.lang.Long&quot;&gt;java.lang.Long&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.function.LongBinaryOperator&quot;&gt;LongBinaryOperator&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d2adb7a4530777ffd8ee3e9bb5f1ed4b6a38020" translate="yes" xml:space="preserve">
          <source>def asJavaLongConsumer(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;java.lang.Long&quot;&gt;java.lang.Long&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.runtime.BoxedUnit&quot;&gt;BoxedUnit&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.function.LongConsumer&quot;&gt;LongConsumer&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d62aede12cbf77d5dd6d4fc6c3cb800a33e53392" translate="yes" xml:space="preserve">
          <source>def asJavaLongFunction: &lt;span name=&quot;java.util.function.LongFunction&quot;&gt;LongFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongFunction.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="061d728b8d0869ebe6592c8d64234c671487be4d" translate="yes" xml:space="preserve">
          <source>def asJavaLongFunction[&lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;java.lang.Long&quot;&gt;java.lang.Long&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaLongFunction.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.function.LongFunction&quot;&gt;LongFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaLongFunction.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="217a613a5bb198e92cfe9ed5a0b0cd9834b9e249" translate="yes" xml:space="preserve">
          <source>def asJavaLongPredicate(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;java.lang.Long&quot;&gt;java.lang.Long&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;java.lang.Boolean&quot;&gt;java.lang.Boolean&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.function.LongPredicate&quot;&gt;LongPredicate&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f34ff95c530a2e2285aaecaab393d35269299d1" translate="yes" xml:space="preserve">
          <source>def asJavaLongSupplier(&lt;span name=&quot;sf&quot;&gt;sf: () =&amp;gt; &lt;span name=&quot;java.lang.Long&quot;&gt;java.lang.Long&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.function.LongSupplier&quot;&gt;LongSupplier&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dda354272c1496bc406a3b6a8c3b523e6bd28f8" translate="yes" xml:space="preserve">
          <source>def asJavaLongToDoubleFunction(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;java.lang.Long&quot;&gt;java.lang.Long&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;java.lang.Double&quot;&gt;java.lang.Double&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.function.LongToDoubleFunction&quot;&gt;LongToDoubleFunction&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdfcc369ed72a1e5bb772928fc56e9c40ebbdc7a" translate="yes" xml:space="preserve">
          <source>def asJavaLongToIntFunction(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;java.lang.Long&quot;&gt;java.lang.Long&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.function.LongToIntFunction&quot;&gt;LongToIntFunction&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04383658bdd6e6d5a9d67c487fc6f5906a807226" translate="yes" xml:space="preserve">
          <source>def asJavaLongUnaryOperator(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;java.lang.Long&quot;&gt;java.lang.Long&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;java.lang.Long&quot;&gt;java.lang.Long&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.function.LongUnaryOperator&quot;&gt;LongUnaryOperator&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="217df0261380b3194d34ad3fb664be5d4eddfb5b" translate="yes" xml:space="preserve">
          <source>def asJavaObjDoubleConsumer: &lt;span name=&quot;java.util.function.ObjDoubleConsumer&quot;&gt;ObjDoubleConsumer&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsObjDoubleConsumer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50f97cf5e9b1f1ba3920253baccd9eaedac51a73" translate="yes" xml:space="preserve">
          <source>def asJavaObjDoubleConsumer[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaObjDoubleConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;java.lang.Double&quot;&gt;java.lang.Double&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.runtime.BoxedUnit&quot;&gt;BoxedUnit&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.function.ObjDoubleConsumer&quot;&gt;ObjDoubleConsumer&lt;/span&gt;[&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaObjDoubleConsumer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2657304fd59bf66559ea1ec640123eddcb33c85a" translate="yes" xml:space="preserve">
          <source>def asJavaObjIntConsumer: &lt;span name=&quot;java.util.function.ObjIntConsumer&quot;&gt;ObjIntConsumer&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsObjIntConsumer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1063f68380c554d07eff118e60d60db2a2b6287e" translate="yes" xml:space="preserve">
          <source>def asJavaObjIntConsumer[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaObjIntConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.runtime.BoxedUnit&quot;&gt;BoxedUnit&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.function.ObjIntConsumer&quot;&gt;ObjIntConsumer&lt;/span&gt;[&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaObjIntConsumer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2123bd55d027c64e2df1d6553a8da4754e753557" translate="yes" xml:space="preserve">
          <source>def asJavaObjLongConsumer: &lt;span name=&quot;java.util.function.ObjLongConsumer&quot;&gt;ObjLongConsumer&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsObjLongConsumer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6164f6c45148af2ae78c3721acd99e98b1a6298a" translate="yes" xml:space="preserve">
          <source>def asJavaObjLongConsumer[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaObjLongConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;java.lang.Long&quot;&gt;java.lang.Long&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.runtime.BoxedUnit&quot;&gt;BoxedUnit&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.function.ObjLongConsumer&quot;&gt;ObjLongConsumer&lt;/span&gt;[&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaObjLongConsumer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b56404a514f71a2c094f021ab7c7f6195ad452c4" translate="yes" xml:space="preserve">
          <source>def asJavaParCharStream: &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;IntStream&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a1a605d98f70ded5fd455a27a80cbcbf601ad49" translate="yes" xml:space="preserve">
          <source>def asJavaParCodePointStream: &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;IntStream&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ab1d21b43b3f1226632441676e276c9b72a39d2" translate="yes" xml:space="preserve">
          <source>def asJavaParDoubleStream(&lt;span name=&quot;cc&quot;&gt;cc: &lt;a href=&quot;../../index#IterableOnce%5B+A%5D=scala.collection.IterableOnce%5BA%5D&quot; id=&quot;scala.IterableOnce&quot; name=&quot;scala.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;java.lang.Double&quot;&gt;java.lang.Double&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.stream.DoubleStream&quot;&gt;DoubleStream&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0463f43c123e41a4b3b8d4500e83bf7d3a58b18" translate="yes" xml:space="preserve">
          <source>def asJavaParDoubleStreamFromFloat(&lt;span name=&quot;cc&quot;&gt;cc: &lt;a href=&quot;../../index#IterableOnce%5B+A%5D=scala.collection.IterableOnce%5BA%5D&quot; id=&quot;scala.IterableOnce&quot; name=&quot;scala.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;java.lang.Float&quot;&gt;java.lang.Float&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.stream.DoubleStream&quot;&gt;DoubleStream&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02dff70fd329e07a13e109fa32b5e4675a2f8a57" translate="yes" xml:space="preserve">
          <source>def asJavaParIntStream(&lt;span name=&quot;cc&quot;&gt;cc: &lt;a href=&quot;../../index#IterableOnce%5B+A%5D=scala.collection.IterableOnce%5BA%5D&quot; id=&quot;scala.IterableOnce&quot; name=&quot;scala.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;IntStream&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a6462a3dea7e805aefd34b98d2027b99a0615bd" translate="yes" xml:space="preserve">
          <source>def asJavaParIntStreamFromByte(&lt;span name=&quot;cc&quot;&gt;cc: &lt;a href=&quot;../../index#IterableOnce%5B+A%5D=scala.collection.IterableOnce%5BA%5D&quot; id=&quot;scala.IterableOnce&quot; name=&quot;scala.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;java.lang.Byte&quot;&gt;java.lang.Byte&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;IntStream&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65924b11753d10c3d3f6fa0ac27546305115bec1" translate="yes" xml:space="preserve">
          <source>def asJavaParIntStreamFromChar(&lt;span name=&quot;cc&quot;&gt;cc: &lt;a href=&quot;../../index#IterableOnce%5B+A%5D=scala.collection.IterableOnce%5BA%5D&quot; id=&quot;scala.IterableOnce&quot; name=&quot;scala.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;java.lang.Character&quot;&gt;Character&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;IntStream&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e46537d8821234ea8a80df11325a6dcb015b797" translate="yes" xml:space="preserve">
          <source>def asJavaParIntStreamFromShort(&lt;span name=&quot;cc&quot;&gt;cc: &lt;a href=&quot;../../index#IterableOnce%5B+A%5D=scala.collection.IterableOnce%5BA%5D&quot; id=&quot;scala.IterableOnce&quot; name=&quot;scala.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;java.lang.Short&quot;&gt;java.lang.Short&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;IntStream&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e002290a62f61ff970244961d66047644a0a0009" translate="yes" xml:space="preserve">
          <source>def asJavaParKeyDoubleStreamFromFloat[&lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;../../collection/map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;java.lang.Float&quot;&gt;java.lang.Float&lt;/span&gt;, &lt;span name=&quot;scala.jdk.javaapi.StreamConverters.asJavaParKeyDoubleStreamFromFloat.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.stream.DoubleStream&quot;&gt;DoubleStream&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fd577f9963dff52d26c9dc9fa33eb232d24195a" translate="yes" xml:space="preserve">
          <source>def asJavaParKeyDoubleStream[&lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;../../collection/map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;java.lang.Double&quot;&gt;java.lang.Double&lt;/span&gt;, &lt;span name=&quot;scala.jdk.javaapi.StreamConverters.asJavaParKeyDoubleStream.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.stream.DoubleStream&quot;&gt;DoubleStream&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="609ceb5d99a57a4c5486f2c1c6203568a216b472" translate="yes" xml:space="preserve">
          <source>def asJavaParKeyIntStreamFromByte[&lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;../../collection/map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;java.lang.Byte&quot;&gt;java.lang.Byte&lt;/span&gt;, &lt;span name=&quot;scala.jdk.javaapi.StreamConverters.asJavaParKeyIntStreamFromByte.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;IntStream&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="478a4e448670d8e809032de7518a20d73086dafa" translate="yes" xml:space="preserve">
          <source>def asJavaParKeyIntStreamFromChar[&lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;../../collection/map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;java.lang.Character&quot;&gt;Character&lt;/span&gt;, &lt;span name=&quot;scala.jdk.javaapi.StreamConverters.asJavaParKeyIntStreamFromChar.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;IntStream&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f469ec72820a8cbc758ba4d46fb035408deabab" translate="yes" xml:space="preserve">
          <source>def asJavaParKeyIntStreamFromShort[&lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;../../collection/map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;java.lang.Short&quot;&gt;java.lang.Short&lt;/span&gt;, &lt;span name=&quot;scala.jdk.javaapi.StreamConverters.asJavaParKeyIntStreamFromShort.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;IntStream&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66263e157fc551db34232019cbeb3b71b871a783" translate="yes" xml:space="preserve">
          <source>def asJavaParKeyIntStream[&lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;../../collection/map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;, &lt;span name=&quot;scala.jdk.javaapi.StreamConverters.asJavaParKeyIntStream.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;IntStream&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e953388f9f07929de901ea9fa267152f86aa971" translate="yes" xml:space="preserve">
          <source>def asJavaParKeyLongStream[&lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;../../collection/map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;java.lang.Long&quot;&gt;java.lang.Long&lt;/span&gt;, &lt;span name=&quot;scala.jdk.javaapi.StreamConverters.asJavaParKeyLongStream.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.stream.LongStream&quot;&gt;LongStream&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e9fbc8a5352a4825f5ae0478488bd8aea9fadcd" translate="yes" xml:space="preserve">
          <source>def asJavaParKeyStream[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;../../collection/map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.jdk.javaapi.StreamConverters.asJavaParKeyStream.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.jdk.javaapi.StreamConverters.asJavaParKeyStream.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.stream.Stream&quot;&gt;java.util.stream.Stream&lt;/span&gt;[&lt;span name=&quot;scala.jdk.javaapi.StreamConverters.asJavaParKeyStream.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc6a0afa825424f1cf2bc92f83881672c1bc1cad" translate="yes" xml:space="preserve">
          <source>def asJavaParKeyStream[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;span name=&quot;java.util.stream.BaseStream&quot;&gt;BaseStream&lt;/span&gt;[_, _]&lt;/span&gt;, &lt;span name=&quot;St&quot;&gt;St &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;s&quot;&gt;s: &lt;a href=&quot;streamextensions%24%24streamshape&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot;&gt;StreamShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.asJavaParKeyStream.S&quot;&gt;S&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.asJavaParKeyStream.St&quot;&gt;St&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;st&quot;&gt;st: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.asJavaParKeyStream.St&quot;&gt;St&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;isEfficient&quot;&gt;isEfficient: &lt;a href=&quot;../../%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.V&quot;&gt;V&lt;/span&gt;], &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.MapOpsWithEfficientKeyStepper&quot;&gt;MapOpsWithEfficientKeyStepper&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.asJavaParKeyStream.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e67fcf8616b88e4bfd9b884dcf60907f64a50783" translate="yes" xml:space="preserve">
          <source>def asJavaParLongStream(&lt;span name=&quot;cc&quot;&gt;cc: &lt;a href=&quot;../../index#IterableOnce%5B+A%5D=scala.collection.IterableOnce%5BA%5D&quot; id=&quot;scala.IterableOnce&quot; name=&quot;scala.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;java.lang.Long&quot;&gt;java.lang.Long&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.stream.LongStream&quot;&gt;LongStream&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f38c9bca87e65e80f1e795f13d1f7e82be8b77f" translate="yes" xml:space="preserve">
          <source>def asJavaParStream: &lt;span name=&quot;java.util.stream.DoubleStream&quot;&gt;DoubleStream&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb301ed89b225be6536aefd657115e8df33dc8f5" translate="yes" xml:space="preserve">
          <source>def asJavaParStream: &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;IntStream&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="509ff33521c957fe8671d46dcbe45dde042ecc83" translate="yes" xml:space="preserve">
          <source>def asJavaParStream: &lt;span name=&quot;java.util.stream.LongStream&quot;&gt;LongStream&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dd4cb3b01ceddaae6224decfa409033ea123dbe" translate="yes" xml:space="preserve">
          <source>def asJavaParStream: &lt;span name=&quot;java.util.stream.Stream&quot;&gt;java.util.stream.Stream&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.AnyArrayHasSeqParStream.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8d4353624d6c16756d235e128801687dafd3dc9" translate="yes" xml:space="preserve">
          <source>def asJavaParStream[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;cc&quot;&gt;cc: &lt;a href=&quot;../../index#IterableOnce%5B+A%5D=scala.collection.IterableOnce%5BA%5D&quot; id=&quot;scala.IterableOnce&quot; name=&quot;scala.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.jdk.javaapi.StreamConverters.asJavaParStream.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.stream.Stream&quot;&gt;java.util.stream.Stream&lt;/span&gt;[&lt;span name=&quot;scala.jdk.javaapi.StreamConverters.asJavaParStream.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91f2e6ae08b9d289a2d7a08ddc7f8f26daa17ec6" translate="yes" xml:space="preserve">
          <source>def asJavaParStream[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;span name=&quot;java.util.stream.BaseStream&quot;&gt;BaseStream&lt;/span&gt;[_, _]&lt;/span&gt;, &lt;span name=&quot;St&quot;&gt;St &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;s&quot;&gt;s: &lt;a href=&quot;streamextensions%24%24streamshape&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot;&gt;StreamShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.asJavaParStream.S&quot;&gt;S&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.asJavaParStream.St&quot;&gt;St&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;st&quot;&gt;st: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.asJavaParStream.St&quot;&gt;St&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;isEfficient&quot;&gt;isEfficient: &lt;a href=&quot;../../%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.V&quot;&gt;V&lt;/span&gt;], &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.MapOpsWithEfficientStepper&quot;&gt;MapOpsWithEfficientStepper&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.asJavaParStream.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a3e402af0c08c3fe1b30b288ce7c8352c1c2527" translate="yes" xml:space="preserve">
          <source>def asJavaParStream[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;span name=&quot;java.util.stream.BaseStream&quot;&gt;BaseStream&lt;/span&gt;[_, _]&lt;/span&gt;, &lt;span name=&quot;St&quot;&gt;St &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;s&quot;&gt;s: &lt;a href=&quot;streamextensions%24%24streamshape&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot;&gt;StreamShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.IterableNonGenericHasParStream.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.IterableNonGenericHasParStream.asJavaParStream.S&quot;&gt;S&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.IterableNonGenericHasParStream.asJavaParStream.St&quot;&gt;St&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;st&quot;&gt;st: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.IterableNonGenericHasParStream.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.IterableNonGenericHasParStream.asJavaParStream.St&quot;&gt;St&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;isEfficient&quot;&gt;isEfficient: &lt;a href=&quot;../../%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.IterableNonGenericHasParStream.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.IterableNonGenericHasParStream.IterableOnceWithEfficientStepper&quot;&gt;IterableOnceWithEfficientStepper&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.convert.StreamExtensions.IterableNonGenericHasParStream.asJavaParStream.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8cf10c04da96ce9b7a2857ebd4336c130da87e8" translate="yes" xml:space="preserve">
          <source>def asJavaParStream[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;span name=&quot;java.util.stream.BaseStream&quot;&gt;BaseStream&lt;/span&gt;[_, _]&lt;/span&gt;, &lt;span name=&quot;St&quot;&gt;St &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;s&quot;&gt;s: &lt;a href=&quot;streamextensions%24%24streamshape&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot;&gt;StreamShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.StepperHasParStream.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.StepperHasParStream.asJavaParStream.S&quot;&gt;S&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.StepperHasParStream.asJavaParStream.St&quot;&gt;St&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;st&quot;&gt;st: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.StepperHasParStream.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.StepperHasParStream.asJavaParStream.St&quot;&gt;St&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.convert.StreamExtensions.StepperHasParStream.asJavaParStream.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f95df3e00b9627a19859cf26aea106b6b5629a41" translate="yes" xml:space="preserve">
          <source>def asJavaParValueDoubleStreamFromFloat[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;../../collection/map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.jdk.javaapi.StreamConverters.asJavaParValueDoubleStreamFromFloat.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;java.lang.Float&quot;&gt;java.lang.Float&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.stream.DoubleStream&quot;&gt;DoubleStream&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0b757ffdd44f1af95f52a7e4fe5ece12b040282" translate="yes" xml:space="preserve">
          <source>def asJavaParValueDoubleStream[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;../../collection/map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.jdk.javaapi.StreamConverters.asJavaParValueDoubleStream.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;java.lang.Double&quot;&gt;java.lang.Double&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.stream.DoubleStream&quot;&gt;DoubleStream&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e493624fdae061b1043e6c262963133d14e2941" translate="yes" xml:space="preserve">
          <source>def asJavaParValueIntStreamFromByte[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;../../collection/map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.jdk.javaapi.StreamConverters.asJavaParValueIntStreamFromByte.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;java.lang.Byte&quot;&gt;java.lang.Byte&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;IntStream&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="566d19256b4a7ee2ff4a77f869dd7dd65077ced8" translate="yes" xml:space="preserve">
          <source>def asJavaParValueIntStreamFromChar[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;../../collection/map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.jdk.javaapi.StreamConverters.asJavaParValueIntStreamFromChar.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;java.lang.Character&quot;&gt;Character&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;IntStream&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63e8e96b37d1d8ed1a0c12610c286e730a70be72" translate="yes" xml:space="preserve">
          <source>def asJavaParValueIntStreamFromShort[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;../../collection/map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.jdk.javaapi.StreamConverters.asJavaParValueIntStreamFromShort.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;java.lang.Short&quot;&gt;java.lang.Short&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;IntStream&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5acb67fc8b8e1530606c698ffa5721ca14c9f1c1" translate="yes" xml:space="preserve">
          <source>def asJavaParValueIntStream[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;../../collection/map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.jdk.javaapi.StreamConverters.asJavaParValueIntStream.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;IntStream&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcd30bb030d6d9306bc5a22ae6e0a25177f317dd" translate="yes" xml:space="preserve">
          <source>def asJavaParValueLongStream[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;../../collection/map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.jdk.javaapi.StreamConverters.asJavaParValueLongStream.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;java.lang.Long&quot;&gt;java.lang.Long&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.stream.LongStream&quot;&gt;LongStream&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46c5c203be08f8f2889e737e7feb330623eaa79c" translate="yes" xml:space="preserve">
          <source>def asJavaParValueStream[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;../../collection/map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.jdk.javaapi.StreamConverters.asJavaParValueStream.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.jdk.javaapi.StreamConverters.asJavaParValueStream.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.stream.Stream&quot;&gt;java.util.stream.Stream&lt;/span&gt;[&lt;span name=&quot;scala.jdk.javaapi.StreamConverters.asJavaParValueStream.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b1bcb543bda080e56349e4fd93c5835616d1329" translate="yes" xml:space="preserve">
          <source>def asJavaParValueStream[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;span name=&quot;java.util.stream.BaseStream&quot;&gt;BaseStream&lt;/span&gt;[_, _]&lt;/span&gt;, &lt;span name=&quot;St&quot;&gt;St &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;s&quot;&gt;s: &lt;a href=&quot;streamextensions%24%24streamshape&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot;&gt;StreamShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.asJavaParValueStream.S&quot;&gt;S&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.asJavaParValueStream.St&quot;&gt;St&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;st&quot;&gt;st: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.asJavaParValueStream.St&quot;&gt;St&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;isEfficient&quot;&gt;isEfficient: &lt;a href=&quot;../../%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.V&quot;&gt;V&lt;/span&gt;], &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.MapOpsWithEfficientValueStepper&quot;&gt;MapOpsWithEfficientValueStepper&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.asJavaParValueStream.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="392fdaa1daf7b93481fc166a5d45ec4cd4bab829" translate="yes" xml:space="preserve">
          <source>def asJavaPredicate: &lt;span name=&quot;java.util.function.Predicate&quot;&gt;Predicate&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsPredicate.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df076c0dba8f4b2cb236e6f42f3fafc62ba21b8c" translate="yes" xml:space="preserve">
          <source>def asJavaPredicate[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaPredicate.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;java.lang.Boolean&quot;&gt;java.lang.Boolean&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.function.Predicate&quot;&gt;Predicate&lt;/span&gt;[&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaPredicate.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22b83fc19cc4e388831f0dbdec9d899fd8bc34fb" translate="yes" xml:space="preserve">
          <source>def asJavaPrimitiveStream[&lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](implicit &lt;span name=&quot;unboxer&quot;&gt;unboxer: &lt;a href=&quot;streamextensions%24%24streamunboxer&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamUnboxer&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamUnboxer&quot;&gt;StreamUnboxer&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.StreamHasToScala.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.StreamHasToScala.asJavaPrimitiveStream.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.convert.StreamExtensions.StreamHasToScala.asJavaPrimitiveStream.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="612e0209cc5286667888a37e1bfec83f478f3133" translate="yes" xml:space="preserve">
          <source>def asJavaSeqCharStream: &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;IntStream&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5c186c8e3620aeea1509284e0e6ae99a929fd82" translate="yes" xml:space="preserve">
          <source>def asJavaSeqCodePointStream: &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;IntStream&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f756449eff014e941beb1e0ff2159dcef01c2eac" translate="yes" xml:space="preserve">
          <source>def asJavaSeqDoubleStream(&lt;span name=&quot;cc&quot;&gt;cc: &lt;a href=&quot;../../index#IterableOnce%5B+A%5D=scala.collection.IterableOnce%5BA%5D&quot; id=&quot;scala.IterableOnce&quot; name=&quot;scala.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;java.lang.Double&quot;&gt;java.lang.Double&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.stream.DoubleStream&quot;&gt;DoubleStream&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b1a75f96d7cb0d636c53447c0cb7c2eed95d9f2" translate="yes" xml:space="preserve">
          <source>def asJavaSeqDoubleStreamFromFloat(&lt;span name=&quot;cc&quot;&gt;cc: &lt;a href=&quot;../../index#IterableOnce%5B+A%5D=scala.collection.IterableOnce%5BA%5D&quot; id=&quot;scala.IterableOnce&quot; name=&quot;scala.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;java.lang.Float&quot;&gt;java.lang.Float&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.stream.DoubleStream&quot;&gt;DoubleStream&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad02875b7042621e682f69df1bec544b6693319e" translate="yes" xml:space="preserve">
          <source>def asJavaSeqIntStream(&lt;span name=&quot;cc&quot;&gt;cc: &lt;a href=&quot;../../index#IterableOnce%5B+A%5D=scala.collection.IterableOnce%5BA%5D&quot; id=&quot;scala.IterableOnce&quot; name=&quot;scala.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;IntStream&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13b2a8696f8a198fb9ed28879767d3498e49d421" translate="yes" xml:space="preserve">
          <source>def asJavaSeqIntStreamFromByte(&lt;span name=&quot;cc&quot;&gt;cc: &lt;a href=&quot;../../index#IterableOnce%5B+A%5D=scala.collection.IterableOnce%5BA%5D&quot; id=&quot;scala.IterableOnce&quot; name=&quot;scala.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;java.lang.Byte&quot;&gt;java.lang.Byte&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;IntStream&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d2aef3797d09956dc80b1765915897127279471" translate="yes" xml:space="preserve">
          <source>def asJavaSeqIntStreamFromChar(&lt;span name=&quot;cc&quot;&gt;cc: &lt;a href=&quot;../../index#IterableOnce%5B+A%5D=scala.collection.IterableOnce%5BA%5D&quot; id=&quot;scala.IterableOnce&quot; name=&quot;scala.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;java.lang.Character&quot;&gt;Character&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;IntStream&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bd9b10bfbe88874a5a121f7fd7c21dee7fc722b" translate="yes" xml:space="preserve">
          <source>def asJavaSeqIntStreamFromShort(&lt;span name=&quot;cc&quot;&gt;cc: &lt;a href=&quot;../../index#IterableOnce%5B+A%5D=scala.collection.IterableOnce%5BA%5D&quot; id=&quot;scala.IterableOnce&quot; name=&quot;scala.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;java.lang.Short&quot;&gt;java.lang.Short&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;IntStream&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9fcf9f73855c702cd6c3fab8ab166d0d8497889" translate="yes" xml:space="preserve">
          <source>def asJavaSeqKeyDoubleStreamFromFloat[&lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;../../collection/map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;java.lang.Float&quot;&gt;java.lang.Float&lt;/span&gt;, &lt;span name=&quot;scala.jdk.javaapi.StreamConverters.asJavaSeqKeyDoubleStreamFromFloat.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.stream.DoubleStream&quot;&gt;DoubleStream&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb9b79fcf7a2e2a733d97d483638cca12ae959ad" translate="yes" xml:space="preserve">
          <source>def asJavaSeqKeyDoubleStream[&lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;../../collection/map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;java.lang.Double&quot;&gt;java.lang.Double&lt;/span&gt;, &lt;span name=&quot;scala.jdk.javaapi.StreamConverters.asJavaSeqKeyDoubleStream.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.stream.DoubleStream&quot;&gt;DoubleStream&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36fc3916e48bab28ab147c45cd3c4ad6796d1011" translate="yes" xml:space="preserve">
          <source>def asJavaSeqKeyIntStreamFromByte[&lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;../../collection/map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;java.lang.Byte&quot;&gt;java.lang.Byte&lt;/span&gt;, &lt;span name=&quot;scala.jdk.javaapi.StreamConverters.asJavaSeqKeyIntStreamFromByte.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;IntStream&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e18efcaf962a943a749c1f8a7b9d284ac5bb3f6c" translate="yes" xml:space="preserve">
          <source>def asJavaSeqKeyIntStreamFromChar[&lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;../../collection/map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;java.lang.Character&quot;&gt;Character&lt;/span&gt;, &lt;span name=&quot;scala.jdk.javaapi.StreamConverters.asJavaSeqKeyIntStreamFromChar.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;IntStream&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7573c84c24f77ab5032273c3fcc595352fc10b65" translate="yes" xml:space="preserve">
          <source>def asJavaSeqKeyIntStreamFromShort[&lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;../../collection/map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;java.lang.Short&quot;&gt;java.lang.Short&lt;/span&gt;, &lt;span name=&quot;scala.jdk.javaapi.StreamConverters.asJavaSeqKeyIntStreamFromShort.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;IntStream&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d68b8796bf1af44bd04b879ee29935b25d806862" translate="yes" xml:space="preserve">
          <source>def asJavaSeqKeyIntStream[&lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;../../collection/map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;, &lt;span name=&quot;scala.jdk.javaapi.StreamConverters.asJavaSeqKeyIntStream.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;IntStream&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e698c5ef154493baf99f4292a8729cd4b2e8912d" translate="yes" xml:space="preserve">
          <source>def asJavaSeqKeyLongStream[&lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;../../collection/map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;java.lang.Long&quot;&gt;java.lang.Long&lt;/span&gt;, &lt;span name=&quot;scala.jdk.javaapi.StreamConverters.asJavaSeqKeyLongStream.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.stream.LongStream&quot;&gt;LongStream&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c2ed6f0e429bb9d3965057161f310b0f5a8b009" translate="yes" xml:space="preserve">
          <source>def asJavaSeqKeyStream[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;../../collection/map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.jdk.javaapi.StreamConverters.asJavaSeqKeyStream.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.jdk.javaapi.StreamConverters.asJavaSeqKeyStream.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.stream.Stream&quot;&gt;java.util.stream.Stream&lt;/span&gt;[&lt;span name=&quot;scala.jdk.javaapi.StreamConverters.asJavaSeqKeyStream.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b3cb9f265946c92d739a50edfd734e6e3c76120" translate="yes" xml:space="preserve">
          <source>def asJavaSeqKeyStream[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;span name=&quot;java.util.stream.BaseStream&quot;&gt;BaseStream&lt;/span&gt;[_, _]&lt;/span&gt;, &lt;span name=&quot;St&quot;&gt;St &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;s&quot;&gt;s: &lt;a href=&quot;streamextensions%24%24streamshape&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot;&gt;StreamShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream.asJavaSeqKeyStream.S&quot;&gt;S&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream.asJavaSeqKeyStream.St&quot;&gt;St&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;st&quot;&gt;st: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream.asJavaSeqKeyStream.St&quot;&gt;St&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream.asJavaSeqKeyStream.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb971f64033a99c240c4c333c7b440755423caba" translate="yes" xml:space="preserve">
          <source>def asJavaSeqLongStream(&lt;span name=&quot;cc&quot;&gt;cc: &lt;a href=&quot;../../index#IterableOnce%5B+A%5D=scala.collection.IterableOnce%5BA%5D&quot; id=&quot;scala.IterableOnce&quot; name=&quot;scala.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;java.lang.Long&quot;&gt;java.lang.Long&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.stream.LongStream&quot;&gt;LongStream&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92244740af9fbd3e37fd2da6062de225fe02380e" translate="yes" xml:space="preserve">
          <source>def asJavaSeqStream: &lt;span name=&quot;java.util.stream.DoubleStream&quot;&gt;DoubleStream&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f3125b21f49068af3504bc94b1fbf913d0dd97d" translate="yes" xml:space="preserve">
          <source>def asJavaSeqStream: &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;IntStream&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a6cd3591948acbe8778cd961fec7d0af11c0ef4" translate="yes" xml:space="preserve">
          <source>def asJavaSeqStream: &lt;span name=&quot;java.util.stream.LongStream&quot;&gt;LongStream&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ef44b79d6a43c3d40836a9fe4fb84c7c3d44601" translate="yes" xml:space="preserve">
          <source>def asJavaSeqStream: &lt;span name=&quot;java.util.stream.Stream&quot;&gt;java.util.stream.Stream&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.AnyArrayHasSeqParStream.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d690cb59b12e717685e0d9c627da91265fe1e439" translate="yes" xml:space="preserve">
          <source>def asJavaSeqStream[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;cc&quot;&gt;cc: &lt;a href=&quot;../../index#IterableOnce%5B+A%5D=scala.collection.IterableOnce%5BA%5D&quot; id=&quot;scala.IterableOnce&quot; name=&quot;scala.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.jdk.javaapi.StreamConverters.asJavaSeqStream.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.stream.Stream&quot;&gt;java.util.stream.Stream&lt;/span&gt;[&lt;span name=&quot;scala.jdk.javaapi.StreamConverters.asJavaSeqStream.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ebbbb839a8e7ae83e6c839e253787e5a6262c31" translate="yes" xml:space="preserve">
          <source>def asJavaSeqStream[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;span name=&quot;java.util.stream.BaseStream&quot;&gt;BaseStream&lt;/span&gt;[_, _]&lt;/span&gt;, &lt;span name=&quot;St&quot;&gt;St &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;s&quot;&gt;s: &lt;a href=&quot;streamextensions%24%24streamshape&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot;&gt;StreamShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream.asJavaSeqStream.S&quot;&gt;S&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream.asJavaSeqStream.St&quot;&gt;St&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;st&quot;&gt;st: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[(&lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream.asJavaSeqStream.St&quot;&gt;St&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream.asJavaSeqStream.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="876fe0ae270d12ca106966d3c88cdde6e00c8f69" translate="yes" xml:space="preserve">
          <source>def asJavaSeqStream[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;span name=&quot;java.util.stream.BaseStream&quot;&gt;BaseStream&lt;/span&gt;[_, _]&lt;/span&gt;, &lt;span name=&quot;St&quot;&gt;St &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;s&quot;&gt;s: &lt;a href=&quot;streamextensions%24%24streamshape&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot;&gt;StreamShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.IterableHasSeqStream.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.IterableHasSeqStream.asJavaSeqStream.S&quot;&gt;S&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.IterableHasSeqStream.asJavaSeqStream.St&quot;&gt;St&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;st&quot;&gt;st: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.IterableHasSeqStream.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.IterableHasSeqStream.asJavaSeqStream.St&quot;&gt;St&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.convert.StreamExtensions.IterableHasSeqStream.asJavaSeqStream.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b474b74ebfe392873cd8484a08d3c0d72cb7445e" translate="yes" xml:space="preserve">
          <source>def asJavaSeqStream[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;span name=&quot;java.util.stream.BaseStream&quot;&gt;BaseStream&lt;/span&gt;[_, _]&lt;/span&gt;, &lt;span name=&quot;St&quot;&gt;St &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;s&quot;&gt;s: &lt;a href=&quot;streamextensions%24%24streamshape&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot;&gt;StreamShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.StepperHasSeqStream.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.StepperHasSeqStream.asJavaSeqStream.S&quot;&gt;S&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.StepperHasSeqStream.asJavaSeqStream.St&quot;&gt;St&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;st&quot;&gt;st: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.StepperHasSeqStream.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.StepperHasSeqStream.asJavaSeqStream.St&quot;&gt;St&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.convert.StreamExtensions.StepperHasSeqStream.asJavaSeqStream.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3edc5e2c6a9a633249996d9e75cdd9cedd2b32b3" translate="yes" xml:space="preserve">
          <source>def asJavaSeqValueDoubleStreamFromFloat[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;../../collection/map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.jdk.javaapi.StreamConverters.asJavaSeqValueDoubleStreamFromFloat.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;java.lang.Float&quot;&gt;java.lang.Float&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.stream.DoubleStream&quot;&gt;DoubleStream&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc224c413905c6ce7de0442d5cc3a3b81c2d141f" translate="yes" xml:space="preserve">
          <source>def asJavaSeqValueDoubleStream[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;../../collection/map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.jdk.javaapi.StreamConverters.asJavaSeqValueDoubleStream.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;java.lang.Double&quot;&gt;java.lang.Double&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.stream.DoubleStream&quot;&gt;DoubleStream&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d6d6faf74c1341aa48acf79d2fde017eb537f2c" translate="yes" xml:space="preserve">
          <source>def asJavaSeqValueIntStreamFromByte[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;../../collection/map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.jdk.javaapi.StreamConverters.asJavaSeqValueIntStreamFromByte.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;java.lang.Byte&quot;&gt;java.lang.Byte&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;IntStream&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93938247c1610657111814f346ccf772a86cc047" translate="yes" xml:space="preserve">
          <source>def asJavaSeqValueIntStreamFromChar[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;../../collection/map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.jdk.javaapi.StreamConverters.asJavaSeqValueIntStreamFromChar.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;java.lang.Character&quot;&gt;Character&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;IntStream&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9256e9baee894d0b45d2b584019293ea877410b6" translate="yes" xml:space="preserve">
          <source>def asJavaSeqValueIntStreamFromShort[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;../../collection/map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.jdk.javaapi.StreamConverters.asJavaSeqValueIntStreamFromShort.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;java.lang.Short&quot;&gt;java.lang.Short&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;IntStream&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6ab897920c3d5f5692fc66828b1cbd68a0790c3" translate="yes" xml:space="preserve">
          <source>def asJavaSeqValueIntStream[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;../../collection/map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.jdk.javaapi.StreamConverters.asJavaSeqValueIntStream.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;IntStream&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30f2ffe7867a138671738227cd639833d5bec872" translate="yes" xml:space="preserve">
          <source>def asJavaSeqValueLongStream[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;../../collection/map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.jdk.javaapi.StreamConverters.asJavaSeqValueLongStream.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;java.lang.Long&quot;&gt;java.lang.Long&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.stream.LongStream&quot;&gt;LongStream&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12d0fce9a6759e8c9a34fe71c6bdccab0ec0a6b4" translate="yes" xml:space="preserve">
          <source>def asJavaSeqValueStream[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;../../collection/map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.jdk.javaapi.StreamConverters.asJavaSeqValueStream.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.jdk.javaapi.StreamConverters.asJavaSeqValueStream.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.stream.Stream&quot;&gt;java.util.stream.Stream&lt;/span&gt;[&lt;span name=&quot;scala.jdk.javaapi.StreamConverters.asJavaSeqValueStream.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb9dceb0e0bfc3d21c3edbfa8ebc93d214fa5027" translate="yes" xml:space="preserve">
          <source>def asJavaSeqValueStream[&lt;span name=&quot;S&quot;&gt;S &amp;lt;: &lt;span name=&quot;java.util.stream.BaseStream&quot;&gt;BaseStream&lt;/span&gt;[_, _]&lt;/span&gt;, &lt;span name=&quot;St&quot;&gt;St &amp;lt;: &lt;a href=&quot;../stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[_]&lt;/span&gt;](implicit &lt;span name=&quot;s&quot;&gt;s: &lt;a href=&quot;streamextensions%24%24streamshape&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot;&gt;StreamShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream.asJavaSeqValueStream.S&quot;&gt;S&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream.asJavaSeqValueStream.St&quot;&gt;St&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;st&quot;&gt;st: &lt;a href=&quot;../steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream.asJavaSeqValueStream.St&quot;&gt;St&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream.asJavaSeqValueStream.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9703b2602b15df79abd40978b3e866bd71685500" translate="yes" xml:space="preserve">
          <source>def asJavaSupplier: &lt;span name=&quot;java.util.function.Supplier&quot;&gt;Supplier&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction0AsSupplier.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82543029064622bd4f49b52ff2e00cd3d61243c6" translate="yes" xml:space="preserve">
          <source>def asJavaSupplier[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: () =&amp;gt; &lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaSupplier.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.function.Supplier&quot;&gt;Supplier&lt;/span&gt;[&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaSupplier.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28c6fb095a6663b26758597d7debd7ae8c161cc4" translate="yes" xml:space="preserve">
          <source>def asJavaToDoubleBiFunction: &lt;span name=&quot;java.util.function.ToDoubleBiFunction&quot;&gt;ToDoubleBiFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToDoubleBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToDoubleBiFunction.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b1fe3fa4070995994cf3b214a6e2c5430f53756" translate="yes" xml:space="preserve">
          <source>def asJavaToDoubleBiFunction[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaToDoubleBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaToDoubleBiFunction.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;java.lang.Double&quot;&gt;java.lang.Double&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.function.ToDoubleBiFunction&quot;&gt;ToDoubleBiFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaToDoubleBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaToDoubleBiFunction.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aa15fc4d97ea9e79c4f9a246972e1b4073cc465" translate="yes" xml:space="preserve">
          <source>def asJavaToDoubleFunction: &lt;span name=&quot;java.util.function.ToDoubleFunction&quot;&gt;ToDoubleFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsToDoubleFunction.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7961435c393b57c1fea64495fd1554a63c35b96" translate="yes" xml:space="preserve">
          <source>def asJavaToDoubleFunction[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaToDoubleFunction.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;java.lang.Double&quot;&gt;java.lang.Double&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.function.ToDoubleFunction&quot;&gt;ToDoubleFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaToDoubleFunction.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2fc9233ed75686775f4db3e7d6b3cff324d5999" translate="yes" xml:space="preserve">
          <source>def asJavaToIntBiFunction: &lt;span name=&quot;java.util.function.ToIntBiFunction&quot;&gt;ToIntBiFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToIntBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToIntBiFunction.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="602d760277278d6e1d16a304131287be3c98b718" translate="yes" xml:space="preserve">
          <source>def asJavaToIntBiFunction[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaToIntBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaToIntBiFunction.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.function.ToIntBiFunction&quot;&gt;ToIntBiFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaToIntBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaToIntBiFunction.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc277fc918023d8d70cebc06109c1e79557e8602" translate="yes" xml:space="preserve">
          <source>def asJavaToIntFunction: &lt;span name=&quot;java.util.function.ToIntFunction&quot;&gt;ToIntFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsToIntFunction.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4beb33aa9bc655fe02453b267fbbf92dce0d1e8f" translate="yes" xml:space="preserve">
          <source>def asJavaToIntFunction[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaToIntFunction.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.function.ToIntFunction&quot;&gt;ToIntFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaToIntFunction.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d62e6896e1de81343d9e30af1b96fffbdfb9cb5" translate="yes" xml:space="preserve">
          <source>def asJavaToLongBiFunction: &lt;span name=&quot;java.util.function.ToLongBiFunction&quot;&gt;ToLongBiFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToLongBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToLongBiFunction.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bef10e4e73b62738cf0fa07f01d04856b985fb8" translate="yes" xml:space="preserve">
          <source>def asJavaToLongBiFunction[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaToLongBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaToLongBiFunction.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;java.lang.Long&quot;&gt;java.lang.Long&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.function.ToLongBiFunction&quot;&gt;ToLongBiFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaToLongBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaToLongBiFunction.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c2545e3125bdec6299eb03f2f63c5d8d9c702d7" translate="yes" xml:space="preserve">
          <source>def asJavaToLongFunction: &lt;span name=&quot;java.util.function.ToLongFunction&quot;&gt;ToLongFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsToLongFunction.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cf3fa61d74ed1574017d9888cc0fde17a3ce19c" translate="yes" xml:space="preserve">
          <source>def asJavaToLongFunction[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaToLongFunction.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;java.lang.Long&quot;&gt;java.lang.Long&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.function.ToLongFunction&quot;&gt;ToLongFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaToLongFunction.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8babc0a378ab945ba8c9591674c1e28d94292daa" translate="yes" xml:space="preserve">
          <source>def asJavaUnaryOperator: &lt;span name=&quot;java.util.function.UnaryOperator&quot;&gt;UnaryOperator&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsUnaryOperator.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d698592b7e2f092ea8dea577f8fc338d35462ce" translate="yes" xml:space="preserve">
          <source>def asJavaUnaryOperator[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaUnaryOperator.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaUnaryOperator.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.function.UnaryOperator&quot;&gt;UnaryOperator&lt;/span&gt;[&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asJavaUnaryOperator.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0df717ced19458b96c25d692895c594fbd8e2d8e" translate="yes" xml:space="preserve">
          <source>def asJava[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;b&quot;&gt;b: &lt;a href=&quot;../../collection/mutable/buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.List&quot;&gt;java.util.List&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="321ac15ae82e49df4b0f2dbc72df82bc7f380eb8" translate="yes" xml:space="preserve">
          <source>def asJava[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;b&quot;&gt;b: &lt;a href=&quot;../mutable/buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.List&quot;&gt;java.util.List&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52f5a883219f240c7fe252688a93beeaf26f77e5" translate="yes" xml:space="preserve">
          <source>def asJava[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;b&quot;&gt;b: &lt;a href=&quot;mutable/buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.List&quot;&gt;java.util.List&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef7fac9fe02a4915c14a7c79f4fb926543e76b8c" translate="yes" xml:space="preserve">
          <source>def asJava[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../../collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.lang.Iterable&quot;&gt;java.lang.Iterable&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15cd7b74aab3776c123b49210fab0cb53df563db" translate="yes" xml:space="preserve">
          <source>def asJava[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.Iterator&quot;&gt;java.util.Iterator&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11b2c85b5a89a290af21f90e1097aa487a94456b" translate="yes" xml:space="preserve">
          <source>def asJava[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.lang.Iterable&quot;&gt;java.lang.Iterable&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ac6b6189910ba1693d14b13ac6a7b0320104655" translate="yes" xml:space="preserve">
          <source>def asJava[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.Iterator&quot;&gt;java.util.Iterator&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d91579cfbe2114684f8109068aac460061b0588f" translate="yes" xml:space="preserve">
          <source>def asJava[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.lang.Iterable&quot;&gt;java.lang.Iterable&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c6ee3431a32e449fb1a6a0d8c7077a989d19088" translate="yes" xml:space="preserve">
          <source>def asJava[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.Iterator&quot;&gt;java.util.Iterator&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75a404bbfeb55a97036e8c381065d93f9c05a275" translate="yes" xml:space="preserve">
          <source>def asJava[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;s&quot;&gt;s: &lt;a href=&quot;../../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;collection.mutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.List&quot;&gt;java.util.List&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="242239c33f09423b6d82add44d5b557be05a83ba" translate="yes" xml:space="preserve">
          <source>def asJava[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;s&quot;&gt;s: &lt;a href=&quot;../../collection/mutable/set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.Set&quot;&gt;Set&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c73ce77c48e8291a08066206aeb523c371600c78" translate="yes" xml:space="preserve">
          <source>def asJava[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;s&quot;&gt;s: &lt;a href=&quot;../../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.List&quot;&gt;java.util.List&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1f79ef795f45b399c3f385ee5b6ee590b7055c8" translate="yes" xml:space="preserve">
          <source>def asJava[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;s&quot;&gt;s: &lt;a href=&quot;../../collection/set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.Set&quot;&gt;Set&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="138c126e88956beb47fca59097afe6cd3fae074c" translate="yes" xml:space="preserve">
          <source>def asJava[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;s&quot;&gt;s: &lt;a href=&quot;../mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;mutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.List&quot;&gt;java.util.List&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d423b3524caa88b6459dcf9352ce7a78af02f13c" translate="yes" xml:space="preserve">
          <source>def asJava[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;s&quot;&gt;s: &lt;a href=&quot;../mutable/set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;mutable.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.Set&quot;&gt;java.util.Set&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b867658b99c3b87a5cfdebcbf138618fb5c65acd" translate="yes" xml:space="preserve">
          <source>def asJava[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;s&quot;&gt;s: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.List&quot;&gt;java.util.List&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="492ff37c3da7b13948c1e33dcd887f51ee185400" translate="yes" xml:space="preserve">
          <source>def asJava[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;s&quot;&gt;s: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.Set&quot;&gt;java.util.Set&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c07cddc1d453b21b739d396ffcdd15ff09eeabe7" translate="yes" xml:space="preserve">
          <source>def asJava[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;s&quot;&gt;s: &lt;a href=&quot;mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;mutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.List&quot;&gt;java.util.List&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9773bce1dbffa82e886014d323235831d4418d4" translate="yes" xml:space="preserve">
          <source>def asJava[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;s&quot;&gt;s: &lt;a href=&quot;mutable/set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;mutable.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.Set&quot;&gt;java.util.Set&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="408ab0b70fb9b64ea7a56a1c12ed02f9955f44fd" translate="yes" xml:space="preserve">
          <source>def asJava[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;s&quot;&gt;s: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.List&quot;&gt;java.util.List&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2845d9722f1b8ca46875348d667f1a12157dd89" translate="yes" xml:space="preserve">
          <source>def asJava[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;s&quot;&gt;s: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.Set&quot;&gt;java.util.Set&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7cf10f14317fbef6bfafc1f5562501ddc37842b" translate="yes" xml:space="preserve">
          <source>def asJava[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;../../collection/concurrent/map&quot; id=&quot;scala.collection.concurrent.Map&quot; name=&quot;scala.collection.concurrent.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.concurrent.ConcurrentMap&quot;&gt;ConcurrentMap&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb21987b1bbbd83bc4c026f76c224940b9aaf52a" translate="yes" xml:space="preserve">
          <source>def asJava[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;../../collection/map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.Map&quot;&gt;Map&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a7f8c9b799dbf58bd88f9ce9039862d3c7b39fb" translate="yes" xml:space="preserve">
          <source>def asJava[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;../../collection/mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.Map&quot;&gt;Map&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="698bb84b89cdb2433a11da665b0652ceb60d39d6" translate="yes" xml:space="preserve">
          <source>def asJava[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;../concurrent/map&quot; id=&quot;scala.collection.concurrent.Map&quot; name=&quot;scala.collection.concurrent.Map&quot;&gt;concurrent.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.concurrent.ConcurrentMap&quot;&gt;ConcurrentMap&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be0309bf6a310091582e00df1217e2403fa8e7c8" translate="yes" xml:space="preserve">
          <source>def asJava[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;../map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.Map&quot;&gt;java.util.Map&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03ce08d6c6cce3d595def55cef415f586aa503a7" translate="yes" xml:space="preserve">
          <source>def asJava[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;../mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.Map&quot;&gt;java.util.Map&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e730a3a846fc88195253e80a28984a20c4541e4" translate="yes" xml:space="preserve">
          <source>def asJava[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;concurrent/map&quot; id=&quot;scala.collection.concurrent.Map&quot; name=&quot;scala.collection.concurrent.Map&quot;&gt;concurrent.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.concurrent.ConcurrentMap&quot;&gt;ConcurrentMap&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b02d8f68ffe71aa3058be6c788d1cbef0447126" translate="yes" xml:space="preserve">
          <source>def asJava[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.Map&quot;&gt;java.util.Map&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="132435c0bb2cffe4f2cfb121637654f5ce092e1c" translate="yes" xml:space="preserve">
          <source>def asJava[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.Map&quot;&gt;java.util.Map&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsJavaConverters.asJava.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="744ed6f5dabd318e5d555d9e58dd173a341a52c9" translate="yes" xml:space="preserve">
          <source>def asJava[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: &lt;a href=&quot;../../concurrent/future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.jdk.javaapi.FutureConverters.asJava.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.concurrent.CompletionStage&quot;&gt;CompletionStage&lt;/span&gt;[&lt;span name=&quot;scala.jdk.javaapi.FutureConverters.asJava.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7ea9255c0c212da54a1a7a19a242eaff34ca3fa" translate="yes" xml:space="preserve">
          <source>def asScala(&lt;span name=&quot;p&quot;&gt;p: &lt;span name=&quot;java.util.Properties&quot;&gt;Properties&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../collection/mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0c674a8bc1de0f3c4065475580cb6c829207f51" translate="yes" xml:space="preserve">
          <source>def asScala(&lt;span name=&quot;p&quot;&gt;p: &lt;span name=&quot;java.util.Properties&quot;&gt;Properties&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt;[&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad5aa0743052deaa91da99533f0caa6760113b44" translate="yes" xml:space="preserve">
          <source>def asScala(&lt;span name=&quot;p&quot;&gt;p: &lt;span name=&quot;java.util.Properties&quot;&gt;Properties&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6df05e2c5695f7b75718e56777f7418efe6aa9e6" translate="yes" xml:space="preserve">
          <source>def asScala: () =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72adf7d4d39d4933f86859d266be8aca36ca15f8" translate="yes" xml:space="preserve">
          <source>def asScala: () =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62537cac100af0697ee580ae36a2af3e11b83922" translate="yes" xml:space="preserve">
          <source>def asScala: () =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="750fec8a5fbbcb98c5367a92f7fe396d74759faa" translate="yes" xml:space="preserve">
          <source>def asScala: () =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c6d30afb5e44083638e21b5e8862d76e10d89f8" translate="yes" xml:space="preserve">
          <source>def asScala: () =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.RichSupplierAsFunction0.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aefbee71926086cbaf1962010c11e393c068157" translate="yes" xml:space="preserve">
          <source>def asScala: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4af286c1fc756106a485036b9837cf6a92c5fd0b" translate="yes" xml:space="preserve">
          <source>def asScala: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36e799a7f68d8555d26a910b4b700f49175f0c73" translate="yes" xml:space="preserve">
          <source>def asScala: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40397ae1c61215265d85b4ba14d32278bfd55367" translate="yes" xml:space="preserve">
          <source>def asScala: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf9242594418e76cf0f2f3e3eb8c74f994c05a6a" translate="yes" xml:space="preserve">
          <source>def asScala: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f98597f06226bb036a63c54b431cf319237616d" translate="yes" xml:space="preserve">
          <source>def asScala: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.RichDoubleFunctionAsFunction1.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="662fa56925449baec50cd5a0ac15e516278f7fc4" translate="yes" xml:space="preserve">
          <source>def asScala: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;, &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9ecfb68068cc48fe6df23499d3297430c2056a2" translate="yes" xml:space="preserve">
          <source>def asScala: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d875685c0b5cb8fbce030545fdd58c34e5b20f5" translate="yes" xml:space="preserve">
          <source>def asScala: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1e81845503ef418c6bb1939f72653a689ff4e53" translate="yes" xml:space="preserve">
          <source>def asScala: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5ad2eeb0917e1a2ffbdb067a2399996b0ed886e" translate="yes" xml:space="preserve">
          <source>def asScala: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c3b64bbacfd506a9b9439d72f188cae65651942" translate="yes" xml:space="preserve">
          <source>def asScala: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46aca8d2170537f5b4af1ca48c5bd4f19d8599f1" translate="yes" xml:space="preserve">
          <source>def asScala: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.RichIntFunctionAsFunction1.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="484bf192d8e7eb7ec13e2651911886165fd2df8e" translate="yes" xml:space="preserve">
          <source>def asScala: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f8a362ff6023876c8ee7a79e0e22e712cc088a5" translate="yes" xml:space="preserve">
          <source>def asScala: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ea299394f473e4de290a82b69e823fd608c0cce" translate="yes" xml:space="preserve">
          <source>def asScala: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="256e1092b34987f5eb6042f01d538eee12541092" translate="yes" xml:space="preserve">
          <source>def asScala: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4df2bd8dee433a8d8e412836abe6f664140d0503" translate="yes" xml:space="preserve">
          <source>def asScala: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ce6f15512da9e7ed5c0d0af68fa8b75a2a5667c" translate="yes" xml:space="preserve">
          <source>def asScala: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b21c639b5fe53c0515d32af08389670aecc007e" translate="yes" xml:space="preserve">
          <source>def asScala: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.RichLongFunctionAsFunction1.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dde3cbc1389eb03cb10674b36e4ecb76a5a1475" translate="yes" xml:space="preserve">
          <source>def asScala: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0efc6236d8ef3fa5b40e859cffa2b1a12829e2d" translate="yes" xml:space="preserve">
          <source>def asScala: (&lt;span name=&quot;scala.jdk.FunctionWrappers.RichBiConsumerAsFunction2.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichBiConsumerAsFunction2.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba134cf3e326ffb7d858ebc8c4f22e1363e1c8b1" translate="yes" xml:space="preserve">
          <source>def asScala: (&lt;span name=&quot;scala.jdk.FunctionWrappers.RichBiFunctionAsFunction2.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichBiFunctionAsFunction2.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.RichBiFunctionAsFunction2.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6324899d4d179b62c01d4904249e9b2cf1d83e3" translate="yes" xml:space="preserve">
          <source>def asScala: (&lt;span name=&quot;scala.jdk.FunctionWrappers.RichBiPredicateAsFunction2.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichBiPredicateAsFunction2.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f68e65be145940da4479a7ab5ba32c342a95925" translate="yes" xml:space="preserve">
          <source>def asScala: (&lt;span name=&quot;scala.jdk.FunctionWrappers.RichBinaryOperatorAsFunction2.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichBinaryOperatorAsFunction2.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.RichBinaryOperatorAsFunction2.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="983560e868ca91a52cc1444e931acf251b3c59a8" translate="yes" xml:space="preserve">
          <source>def asScala: (&lt;span name=&quot;scala.jdk.FunctionWrappers.RichConsumerAsFunction1.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de0f9397f64e92cb2e611059bbe3a0f4a01665b2" translate="yes" xml:space="preserve">
          <source>def asScala: (&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunctionAsFunction1.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunctionAsFunction1.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a29d0f7c89d5ada34dfe6b1a2beb3115fa10cde" translate="yes" xml:space="preserve">
          <source>def asScala: (&lt;span name=&quot;scala.jdk.FunctionWrappers.RichObjDoubleConsumerAsFunction2.T&quot;&gt;T&lt;/span&gt;, &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22efa7be5c7a482a3996b780d649036f0d5a5f4e" translate="yes" xml:space="preserve">
          <source>def asScala: (&lt;span name=&quot;scala.jdk.FunctionWrappers.RichObjIntConsumerAsFunction2.T&quot;&gt;T&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d096cef9f996b45eb387e638b59acdd5ac3e22f" translate="yes" xml:space="preserve">
          <source>def asScala: (&lt;span name=&quot;scala.jdk.FunctionWrappers.RichObjLongConsumerAsFunction2.T&quot;&gt;T&lt;/span&gt;, &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a9e7e4a2a3172cad8b3632a0a164f5eefac0933" translate="yes" xml:space="preserve">
          <source>def asScala: (&lt;span name=&quot;scala.jdk.FunctionWrappers.RichPredicateAsFunction1.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99e1fd7028638b48b75c83cf3347ba01e51ddb82" translate="yes" xml:space="preserve">
          <source>def asScala: (&lt;span name=&quot;scala.jdk.FunctionWrappers.RichToDoubleBiFunctionAsFunction2.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichToDoubleBiFunctionAsFunction2.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="392c473d6fc53734f024f54d3366f5398498156f" translate="yes" xml:space="preserve">
          <source>def asScala: (&lt;span name=&quot;scala.jdk.FunctionWrappers.RichToDoubleFunctionAsFunction1.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9f27540f4165928c9e55ab7f3fe8d055642b270" translate="yes" xml:space="preserve">
          <source>def asScala: (&lt;span name=&quot;scala.jdk.FunctionWrappers.RichToIntBiFunctionAsFunction2.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichToIntBiFunctionAsFunction2.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc8b42ca66ef60ced6af94f96ab4ccb0d7149f83" translate="yes" xml:space="preserve">
          <source>def asScala: (&lt;span name=&quot;scala.jdk.FunctionWrappers.RichToIntFunctionAsFunction1.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c8d114fcaddaf58332410701bca6d739986b003" translate="yes" xml:space="preserve">
          <source>def asScala: (&lt;span name=&quot;scala.jdk.FunctionWrappers.RichToLongBiFunctionAsFunction2.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichToLongBiFunctionAsFunction2.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1a1fd2625d92356242f4bb082fc862f36146ea6" translate="yes" xml:space="preserve">
          <source>def asScala: (&lt;span name=&quot;scala.jdk.FunctionWrappers.RichToLongFunctionAsFunction1.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f292a6cfeb5c63d48a44eb1fd9693049d33d5e78" translate="yes" xml:space="preserve">
          <source>def asScala: (&lt;span name=&quot;scala.jdk.FunctionWrappers.RichUnaryOperatorAsFunction1.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.RichUnaryOperatorAsFunction1.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59f1e366cac8d1afec3fc2639cf4f154e6889101" translate="yes" xml:space="preserve">
          <source>def asScala: &lt;a href=&quot;../concurrent/future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FutureConverters.CompletionStageOps.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44fc4a5e14a43a6455a49603f6a849b280c3c413" translate="yes" xml:space="preserve">
          <source>def asScala: &lt;a href=&quot;../concurrent/map&quot; id=&quot;scala.collection.concurrent.Map&quot; name=&quot;scala.collection.concurrent.Map&quot;&gt;concurrent.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.ConcurrentMapHasAsScala.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsScalaExtensions.ConcurrentMapHasAsScala.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73ad2fbe010bd9e891e1a4b388e81b990c9fd829" translate="yes" xml:space="preserve">
          <source>def asScala: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.CollectionHasAsScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af63f68a2c6faa4c6840d9d9dd9868c3974d0260" translate="yes" xml:space="preserve">
          <source>def asScala: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.IterableHasAsScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14915682c6e4f15110733cb279b534e232c64de2" translate="yes" xml:space="preserve">
          <source>def asScala: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.EnumerationHasAsScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19b284987a67cb56c8cf256a5bd2bd0cb8f38796" translate="yes" xml:space="preserve">
          <source>def asScala: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.IteratorHasAsScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="428e31bec871c1c1b88c6be0e39e9df8b8c2bf73" translate="yes" xml:space="preserve">
          <source>def asScala: &lt;a href=&quot;../mutable/buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.ListHasAsScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="053842c37dfe480575dd8b6bda38d5de1e4ac677" translate="yes" xml:space="preserve">
          <source>def asScala: &lt;a href=&quot;../mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt;[&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdfe52f7b2ae055304e6c11ffd8448016252ce8d" translate="yes" xml:space="preserve">
          <source>def asScala: &lt;a href=&quot;../mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.DictionaryHasAsScala.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsScalaExtensions.DictionaryHasAsScala.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af1a90e1e3884e5fd72a131302bf2584ff008c0e" translate="yes" xml:space="preserve">
          <source>def asScala: &lt;a href=&quot;../mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.MapHasAsScala.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsScalaExtensions.MapHasAsScala.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8ee77addfdbdf68db1b7bfff1147f5e3bc6340e" translate="yes" xml:space="preserve">
          <source>def asScala: &lt;a href=&quot;../mutable/set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;mutable.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.SetHasAsScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="584bc34530624d0500bce31b5a03f53a785203d0" translate="yes" xml:space="preserve">
          <source>def asScala: &lt;span name=&quot;scala.collection.JavaConverters.AsScala.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c8e89787f9bf31091605fab05a696b79dfab777" translate="yes" xml:space="preserve">
          <source>def asScalaFromBiConsumer[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.BiConsumer&quot;&gt;BiConsumer&lt;/span&gt;[&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromBiConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromBiConsumer.U&quot;&gt;U&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromBiConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromBiConsumer.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.runtime.BoxedUnit&quot;&gt;BoxedUnit&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="556f8240edaac4ee9b5d2a6c04f58cb903ae88c4" translate="yes" xml:space="preserve">
          <source>def asScalaFromBiFunction[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;, &lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.BiFunction&quot;&gt;BiFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromBiFunction.U&quot;&gt;U&lt;/span&gt;, &lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromBiFunction.R&quot;&gt;R&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromBiFunction.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromBiFunction.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0841b689ec3e1dfd71c5883058cf97fb829aa56" translate="yes" xml:space="preserve">
          <source>def asScalaFromBiPredicate[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.BiPredicate&quot;&gt;BiPredicate&lt;/span&gt;[&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromBiPredicate.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromBiPredicate.U&quot;&gt;U&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromBiPredicate.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromBiPredicate.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;java.lang.Boolean&quot;&gt;java.lang.Boolean&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7acc14df61bf3ebfa9d2bdd16c407729ad2e4f41" translate="yes" xml:space="preserve">
          <source>def asScalaFromBinaryOperator[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.BinaryOperator&quot;&gt;BinaryOperator&lt;/span&gt;[&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromBinaryOperator.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromBinaryOperator.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromBinaryOperator.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromBinaryOperator.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bc95b328131ef1d0c74d3a600714ef364698a0f" translate="yes" xml:space="preserve">
          <source>def asScalaFromBooleanSupplier(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.BooleanSupplier&quot;&gt;BooleanSupplier&lt;/span&gt;&lt;/span&gt;): () =&amp;gt; &lt;span name=&quot;java.lang.Boolean&quot;&gt;java.lang.Boolean&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5064778c6f3c358a06be942fa93e77d4e2d1765" translate="yes" xml:space="preserve">
          <source>def asScalaFromConsumer[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.Consumer&quot;&gt;Consumer&lt;/span&gt;[&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromConsumer.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromConsumer.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.runtime.BoxedUnit&quot;&gt;BoxedUnit&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a06f6fc11da957c78e4128f8a8cde4ebded5eff" translate="yes" xml:space="preserve">
          <source>def asScalaFromDoubleBinaryOperator(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.DoubleBinaryOperator&quot;&gt;DoubleBinaryOperator&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;java.lang.Double&quot;&gt;java.lang.Double&lt;/span&gt;, &lt;span name=&quot;java.lang.Double&quot;&gt;java.lang.Double&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;java.lang.Double&quot;&gt;java.lang.Double&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43810cb437520c9ab302adc77740fb25451fb022" translate="yes" xml:space="preserve">
          <source>def asScalaFromDoubleConsumer(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.DoubleConsumer&quot;&gt;DoubleConsumer&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;java.lang.Double&quot;&gt;java.lang.Double&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.runtime.BoxedUnit&quot;&gt;BoxedUnit&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64a1fac44c9db8db217d1c8286a75650360e1254" translate="yes" xml:space="preserve">
          <source>def asScalaFromDoubleFunction[&lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.DoubleFunction&quot;&gt;DoubleFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromDoubleFunction.R&quot;&gt;R&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;java.lang.Double&quot;&gt;java.lang.Double&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromDoubleFunction.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fe6efad57bac4c894b5e764e9412d9218cc62ba" translate="yes" xml:space="preserve">
          <source>def asScalaFromDoublePredicate(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.DoublePredicate&quot;&gt;DoublePredicate&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;java.lang.Double&quot;&gt;java.lang.Double&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;java.lang.Boolean&quot;&gt;java.lang.Boolean&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05dde32b4a24ef7b0f0d49125f91d177b1649d71" translate="yes" xml:space="preserve">
          <source>def asScalaFromDoubleSupplier(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.DoubleSupplier&quot;&gt;DoubleSupplier&lt;/span&gt;&lt;/span&gt;): () =&amp;gt; &lt;span name=&quot;java.lang.Double&quot;&gt;java.lang.Double&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c14cecae3e44f5330a35808ef9242a872792c7ff" translate="yes" xml:space="preserve">
          <source>def asScalaFromDoubleToIntFunction(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.DoubleToIntFunction&quot;&gt;DoubleToIntFunction&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;java.lang.Double&quot;&gt;java.lang.Double&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0cc25cb4bf81c7c935804bd5e8b5285c4c8fc2b" translate="yes" xml:space="preserve">
          <source>def asScalaFromDoubleToLongFunction(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.DoubleToLongFunction&quot;&gt;DoubleToLongFunction&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;java.lang.Double&quot;&gt;java.lang.Double&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;java.lang.Long&quot;&gt;java.lang.Long&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d40f6e6fd8b23d8195033824250155c5423101b" translate="yes" xml:space="preserve">
          <source>def asScalaFromDoubleUnaryOperator(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.DoubleUnaryOperator&quot;&gt;DoubleUnaryOperator&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;java.lang.Double&quot;&gt;java.lang.Double&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;java.lang.Double&quot;&gt;java.lang.Double&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc8f5909e45b8f624bfab1230c980251a2b63625" translate="yes" xml:space="preserve">
          <source>def asScalaFromFunction[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.Function&quot;&gt;java.util.function.Function&lt;/span&gt;[&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromFunction.R&quot;&gt;R&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromFunction.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromFunction.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="030659cc7386f337bd0ece74829e054c86de9c31" translate="yes" xml:space="preserve">
          <source>def asScalaFromIntBinaryOperator(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.IntBinaryOperator&quot;&gt;IntBinaryOperator&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;, &lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fce440a2054eefd34b01515e651da6e93c3d15a6" translate="yes" xml:space="preserve">
          <source>def asScalaFromIntConsumer(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.IntConsumer&quot;&gt;IntConsumer&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.runtime.BoxedUnit&quot;&gt;BoxedUnit&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="349d089f0cff13130450df3465f4f2ae59798180" translate="yes" xml:space="preserve">
          <source>def asScalaFromIntFunction[&lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.IntFunction&quot;&gt;IntFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromIntFunction.R&quot;&gt;R&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromIntFunction.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="753e0f04d19b7ff4a773a8054dc8c5460884dd49" translate="yes" xml:space="preserve">
          <source>def asScalaFromIntPredicate(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.IntPredicate&quot;&gt;IntPredicate&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;java.lang.Boolean&quot;&gt;java.lang.Boolean&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d02a61c23de82c8c5e7ca87c2456cdebfba71aca" translate="yes" xml:space="preserve">
          <source>def asScalaFromIntSupplier(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.IntSupplier&quot;&gt;IntSupplier&lt;/span&gt;&lt;/span&gt;): () =&amp;gt; &lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c3e33bf9c7bf9d01b50f4d3bc48de2e301edfc1" translate="yes" xml:space="preserve">
          <source>def asScalaFromIntToDoubleFunction(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.IntToDoubleFunction&quot;&gt;IntToDoubleFunction&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;java.lang.Double&quot;&gt;java.lang.Double&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0da8ede0881272cfab5bc3394d33a67ccfbc7f19" translate="yes" xml:space="preserve">
          <source>def asScalaFromIntToLongFunction(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.IntToLongFunction&quot;&gt;IntToLongFunction&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;java.lang.Long&quot;&gt;java.lang.Long&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aee99f15e8ed1747b04e39c93e07ea937dd3d48" translate="yes" xml:space="preserve">
          <source>def asScalaFromIntUnaryOperator(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.IntUnaryOperator&quot;&gt;IntUnaryOperator&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d2bdb980510fe24f76c20600b60e6973b8c2e0a" translate="yes" xml:space="preserve">
          <source>def asScalaFromLongBinaryOperator(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.LongBinaryOperator&quot;&gt;LongBinaryOperator&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;java.lang.Long&quot;&gt;java.lang.Long&lt;/span&gt;, &lt;span name=&quot;java.lang.Long&quot;&gt;java.lang.Long&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;java.lang.Long&quot;&gt;java.lang.Long&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3277ba9237e6e0082bd3ff35584538ed101c7c69" translate="yes" xml:space="preserve">
          <source>def asScalaFromLongConsumer(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.LongConsumer&quot;&gt;LongConsumer&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;java.lang.Long&quot;&gt;java.lang.Long&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.runtime.BoxedUnit&quot;&gt;BoxedUnit&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7096dd58d53a01461b235ad8103a2c935f5b81d8" translate="yes" xml:space="preserve">
          <source>def asScalaFromLongFunction[&lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.LongFunction&quot;&gt;LongFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromLongFunction.R&quot;&gt;R&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;java.lang.Long&quot;&gt;java.lang.Long&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromLongFunction.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21035067f094421604ae4138149a4e12f72c9a18" translate="yes" xml:space="preserve">
          <source>def asScalaFromLongPredicate(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.LongPredicate&quot;&gt;LongPredicate&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;java.lang.Long&quot;&gt;java.lang.Long&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;java.lang.Boolean&quot;&gt;java.lang.Boolean&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27a43fe765193d9443a3b412fcf71b13ab173c39" translate="yes" xml:space="preserve">
          <source>def asScalaFromLongSupplier(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.LongSupplier&quot;&gt;LongSupplier&lt;/span&gt;&lt;/span&gt;): () =&amp;gt; &lt;span name=&quot;java.lang.Long&quot;&gt;java.lang.Long&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4e026f1c1c505e2e71f82724ea3ab5066e1d58a" translate="yes" xml:space="preserve">
          <source>def asScalaFromLongToDoubleFunction(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.LongToDoubleFunction&quot;&gt;LongToDoubleFunction&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;java.lang.Long&quot;&gt;java.lang.Long&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;java.lang.Double&quot;&gt;java.lang.Double&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="132b567943a1c93f4d43b482bb69574d816e8bbd" translate="yes" xml:space="preserve">
          <source>def asScalaFromLongToIntFunction(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.LongToIntFunction&quot;&gt;LongToIntFunction&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;java.lang.Long&quot;&gt;java.lang.Long&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3042cefb1cd0c2cffda37c6064e41ab2502b75da" translate="yes" xml:space="preserve">
          <source>def asScalaFromLongUnaryOperator(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.LongUnaryOperator&quot;&gt;LongUnaryOperator&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;java.lang.Long&quot;&gt;java.lang.Long&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;java.lang.Long&quot;&gt;java.lang.Long&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d510b804c7701e999a75a9e661d4e6f67d5eec6" translate="yes" xml:space="preserve">
          <source>def asScalaFromObjDoubleConsumer[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.ObjDoubleConsumer&quot;&gt;ObjDoubleConsumer&lt;/span&gt;[&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromObjDoubleConsumer.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromObjDoubleConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;java.lang.Double&quot;&gt;java.lang.Double&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.runtime.BoxedUnit&quot;&gt;BoxedUnit&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b725cc67cbc05c7eb3370b1871c318d117e7f33" translate="yes" xml:space="preserve">
          <source>def asScalaFromObjIntConsumer[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.ObjIntConsumer&quot;&gt;ObjIntConsumer&lt;/span&gt;[&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromObjIntConsumer.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromObjIntConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.runtime.BoxedUnit&quot;&gt;BoxedUnit&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c653660a3d566cbbd45d24f0c7459d61a60c6ef" translate="yes" xml:space="preserve">
          <source>def asScalaFromObjLongConsumer[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.ObjLongConsumer&quot;&gt;ObjLongConsumer&lt;/span&gt;[&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromObjLongConsumer.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromObjLongConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;java.lang.Long&quot;&gt;java.lang.Long&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.runtime.BoxedUnit&quot;&gt;BoxedUnit&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4932a6f02c84d80b2f82b153ae709e043b399dd4" translate="yes" xml:space="preserve">
          <source>def asScalaFromPredicate[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.Predicate&quot;&gt;Predicate&lt;/span&gt;[&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromPredicate.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromPredicate.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;java.lang.Boolean&quot;&gt;java.lang.Boolean&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf606d8749493ea4edc403316cc615dfd1259cbc" translate="yes" xml:space="preserve">
          <source>def asScalaFromSupplier[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.Supplier&quot;&gt;Supplier&lt;/span&gt;[&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromSupplier.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): () =&amp;gt; &lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromSupplier.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90011aa6f8fe4be1fd16c8f226b8f9e515d62e86" translate="yes" xml:space="preserve">
          <source>def asScalaFromToDoubleBiFunction[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.ToDoubleBiFunction&quot;&gt;ToDoubleBiFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromToDoubleBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromToDoubleBiFunction.U&quot;&gt;U&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromToDoubleBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromToDoubleBiFunction.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;java.lang.Double&quot;&gt;java.lang.Double&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aabfdb693804c74d753e2eb739979ea0a77630d6" translate="yes" xml:space="preserve">
          <source>def asScalaFromToDoubleFunction[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.ToDoubleFunction&quot;&gt;ToDoubleFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromToDoubleFunction.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromToDoubleFunction.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;java.lang.Double&quot;&gt;java.lang.Double&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c4887f81d88b99011ce8423722d61d60544b3c5" translate="yes" xml:space="preserve">
          <source>def asScalaFromToIntBiFunction[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.ToIntBiFunction&quot;&gt;ToIntBiFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromToIntBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromToIntBiFunction.U&quot;&gt;U&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromToIntBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromToIntBiFunction.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95f74c9350d07459f2e4f5ae125defa0422afada" translate="yes" xml:space="preserve">
          <source>def asScalaFromToIntFunction[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.ToIntFunction&quot;&gt;ToIntFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromToIntFunction.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromToIntFunction.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0acdfe8f45729a5c3a33b171daa0ed976e46783f" translate="yes" xml:space="preserve">
          <source>def asScalaFromToLongBiFunction[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.ToLongBiFunction&quot;&gt;ToLongBiFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromToLongBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromToLongBiFunction.U&quot;&gt;U&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromToLongBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromToLongBiFunction.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;java.lang.Long&quot;&gt;java.lang.Long&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37e8f65244fc73cd48859105ab38f6a623aa75ad" translate="yes" xml:space="preserve">
          <source>def asScalaFromToLongFunction[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.ToLongFunction&quot;&gt;ToLongFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromToLongFunction.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromToLongFunction.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;java.lang.Long&quot;&gt;java.lang.Long&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ace6dd99cf14300a856dfa9407c517a26697729" translate="yes" xml:space="preserve">
          <source>def asScalaFromUnaryOperator[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.UnaryOperator&quot;&gt;UnaryOperator&lt;/span&gt;[&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromUnaryOperator.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromUnaryOperator.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.javaapi.FunctionConverters.asScalaFromUnaryOperator.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="122935c69133608024b0158b003926b4a14568c5" translate="yes" xml:space="preserve">
          <source>def asScala[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;d&quot;&gt;d: &lt;span name=&quot;java.util.Dictionary&quot;&gt;Dictionary&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../collection/mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5242949418dfd11c2c04b72d5c8cc6cdddbba246" translate="yes" xml:space="preserve">
          <source>def asScala[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;d&quot;&gt;d: &lt;span name=&quot;java.util.Dictionary&quot;&gt;Dictionary&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b92513254b7b3b77bae8ca071d8aac840b9861c8" translate="yes" xml:space="preserve">
          <source>def asScala[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;d&quot;&gt;d: &lt;span name=&quot;java.util.Dictionary&quot;&gt;Dictionary&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcd0ac46df82a537fd3abb753f0581c5ff18c52a" translate="yes" xml:space="preserve">
          <source>def asScala[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;span name=&quot;java.util.Map&quot;&gt;Map&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../collection/mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="697832b020e089a0ca70224ee72e3cb071867638" translate="yes" xml:space="preserve">
          <source>def asScala[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;span name=&quot;java.util.Map&quot;&gt;java.util.Map&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97f07e028fc4e7221c2d4108003692fe92979f93" translate="yes" xml:space="preserve">
          <source>def asScala[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;span name=&quot;java.util.Map&quot;&gt;java.util.Map&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c84030200d5617d74a6acca35089bf57d78da354" translate="yes" xml:space="preserve">
          <source>def asScala[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;span name=&quot;java.util.concurrent.ConcurrentMap&quot;&gt;ConcurrentMap&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../collection/concurrent/map&quot; id=&quot;scala.collection.concurrent.Map&quot; name=&quot;scala.collection.concurrent.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa065b9685496c2f8fa8c365f3513c9463586979" translate="yes" xml:space="preserve">
          <source>def asScala[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;span name=&quot;java.util.concurrent.ConcurrentMap&quot;&gt;ConcurrentMap&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../concurrent/map&quot; id=&quot;scala.collection.concurrent.Map&quot; name=&quot;scala.collection.concurrent.Map&quot;&gt;concurrent.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7c26f46f262c2ec4e2b34a4de0ad51fe662bc16" translate="yes" xml:space="preserve">
          <source>def asScala[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;span name=&quot;java.util.concurrent.ConcurrentMap&quot;&gt;ConcurrentMap&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;concurrent/map&quot; id=&quot;scala.collection.concurrent.Map&quot; name=&quot;scala.collection.concurrent.Map&quot;&gt;concurrent.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b892269b42df174a49aacba5f2df69a2b19d499a" translate="yes" xml:space="preserve">
          <source>def asScala[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;c&quot;&gt;c: &lt;span name=&quot;java.util.Collection&quot;&gt;Collection&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01484c2b8e66c4953b76e33fc030beb9aad3d454" translate="yes" xml:space="preserve">
          <source>def asScala[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;c&quot;&gt;c: &lt;span name=&quot;java.util.Collection&quot;&gt;Collection&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c274005773869ea37e451eddd6433e98c83bcb53" translate="yes" xml:space="preserve">
          <source>def asScala[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;c&quot;&gt;c: &lt;span name=&quot;java.util.Collection&quot;&gt;Collection&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd443e9c3a3ad87f1e3edc0408063b19604a48ae" translate="yes" xml:space="preserve">
          <source>def asScala[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;e&quot;&gt;e: &lt;span name=&quot;java.util.Enumeration&quot;&gt;java.util.Enumeration&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a4db09757373222e1cd11b29875a6ee2129eb5d" translate="yes" xml:space="preserve">
          <source>def asScala[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;e&quot;&gt;e: &lt;span name=&quot;java.util.Enumeration&quot;&gt;java.util.Enumeration&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="156f8076d2f6c96a84b36a0cc12bf69fdd976cc3" translate="yes" xml:space="preserve">
          <source>def asScala[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;e&quot;&gt;e: &lt;span name=&quot;java.util.Enumeration&quot;&gt;java.util.Enumeration&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="020229d9ae34e747bc6f1d8463860e3ebe160ff2" translate="yes" xml:space="preserve">
          <source>def asScala[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;i&quot;&gt;i: &lt;span name=&quot;java.lang.Iterable&quot;&gt;java.lang.Iterable&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e24f15353f5101df4b60317ea014174e95ea1e6" translate="yes" xml:space="preserve">
          <source>def asScala[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;i&quot;&gt;i: &lt;span name=&quot;java.lang.Iterable&quot;&gt;java.lang.Iterable&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03ac2e048060b121ce36a6f459ef706e2f1b708b" translate="yes" xml:space="preserve">
          <source>def asScala[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;i&quot;&gt;i: &lt;span name=&quot;java.lang.Iterable&quot;&gt;java.lang.Iterable&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67192d4d9beacae3436477b34f81212f2fa6d77f" translate="yes" xml:space="preserve">
          <source>def asScala[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;i&quot;&gt;i: &lt;span name=&quot;java.util.Iterator&quot;&gt;java.util.Iterator&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db3faea1d5a7aaea206d20a994993fc38f96c94e" translate="yes" xml:space="preserve">
          <source>def asScala[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;i&quot;&gt;i: &lt;span name=&quot;java.util.Iterator&quot;&gt;java.util.Iterator&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49c1096df62117b2f9fc6c1d1032af4a7b68be28" translate="yes" xml:space="preserve">
          <source>def asScala[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;i&quot;&gt;i: &lt;span name=&quot;java.util.Iterator&quot;&gt;java.util.Iterator&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3faf15aedc518455b6ff0729ce6584e6d90b7cf" translate="yes" xml:space="preserve">
          <source>def asScala[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;l&quot;&gt;l: &lt;span name=&quot;java.util.List&quot;&gt;java.util.List&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../collection/mutable/buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8e005b9f4a84a595167a2da718204199d5460ba" translate="yes" xml:space="preserve">
          <source>def asScala[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;l&quot;&gt;l: &lt;span name=&quot;java.util.List&quot;&gt;java.util.List&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../mutable/buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2429500409d43d0eeb3b9fb06fd54e21fe7ff4b1" translate="yes" xml:space="preserve">
          <source>def asScala[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;l&quot;&gt;l: &lt;span name=&quot;java.util.List&quot;&gt;java.util.List&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;mutable/buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b033a140a27ca325cfcf3c045c26196254e63417" translate="yes" xml:space="preserve">
          <source>def asScala[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;s&quot;&gt;s: &lt;span name=&quot;java.util.Set&quot;&gt;Set&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../collection/mutable/set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b2841e83a3d8f83e65a2b5a7f7835225fead774" translate="yes" xml:space="preserve">
          <source>def asScala[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;s&quot;&gt;s: &lt;span name=&quot;java.util.Set&quot;&gt;java.util.Set&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../mutable/set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;mutable.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87bc6463af3c90d19a8d852a0f5e37b366754ada" translate="yes" xml:space="preserve">
          <source>def asScala[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;s&quot;&gt;s: &lt;span name=&quot;java.util.Set&quot;&gt;java.util.Set&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;mutable/set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;mutable.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaConverters.asScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab811a4e3790dc6cc80b3f6610bdc16515ad82b7" translate="yes" xml:space="preserve">
          <source>def asScala[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;cs&quot;&gt;cs: &lt;span name=&quot;java.util.concurrent.CompletionStage&quot;&gt;CompletionStage&lt;/span&gt;[&lt;span name=&quot;scala.jdk.javaapi.FutureConverters.asScala.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../concurrent/future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.jdk.javaapi.FutureConverters.asScala.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7378cc7beb628d1341b9d1270dec95a2d8d9496" translate="yes" xml:space="preserve">
          <source>def asin(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0df1883bcab7f284092c873e90138ee7d082aac" translate="yes" xml:space="preserve">
          <source>def assert(&lt;span name=&quot;assertion&quot;&gt;assertion: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0797a1db183f06d1ff1edaa08e958c83970e0998" translate="yes" xml:space="preserve">
          <source>def assume(&lt;span name=&quot;assumption&quot;&gt;assumption: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df860daba69c08ef5a65334a2b76b756f643876c" translate="yes" xml:space="preserve">
          <source>def atan(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6f5c3a38f44afd91766dce5e9f00fd55cd2ce60" translate="yes" xml:space="preserve">
          <source>def atan2(&lt;span name=&quot;y&quot;&gt;y: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dcbb5210528bd2a098d01dfbad65273201bb261" translate="yes" xml:space="preserve">
          <source>def before(&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;java.lang.CharSequence&quot;&gt;CharSequence&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39911058c9fe44bb352acde63f4ab03027633a28" translate="yes" xml:space="preserve">
          <source>def before: &lt;span name=&quot;java.lang.CharSequence&quot;&gt;CharSequence&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eb9626d885980becefaf748699cffba7c75b8e2" translate="yes" xml:space="preserve">
          <source>def between(&lt;span name=&quot;minInclusive&quot;&gt;minInclusive: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;maxExclusive&quot;&gt;maxExclusive: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="703b54cb76c94a8018b0ba9d81dc6168ef949bdb" translate="yes" xml:space="preserve">
          <source>def between(&lt;span name=&quot;minInclusive&quot;&gt;minInclusive: &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;maxExclusive&quot;&gt;maxExclusive: &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3c3668dead4e2bdca3fd0ec8175457c97ec94ef" translate="yes" xml:space="preserve">
          <source>def between(&lt;span name=&quot;minInclusive&quot;&gt;minInclusive: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;maxExclusive&quot;&gt;maxExclusive: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c0e610e17af214f82633c2c58c1b95d87a904a1" translate="yes" xml:space="preserve">
          <source>def between(&lt;span name=&quot;minInclusive&quot;&gt;minInclusive: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;maxExclusive&quot;&gt;maxExclusive: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8080769ddbfe75a5a5699f731ffdce953a30b728" translate="yes" xml:space="preserve">
          <source>def binary(&lt;span name=&quot;d&quot;&gt;d: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed8195ef7d6ace942a635aa4ab4f664f322e2dd5" translate="yes" xml:space="preserve">
          <source>def binary(&lt;span name=&quot;d&quot;&gt;d: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;mc&quot;&gt;mc: &lt;span name=&quot;java.math.MathContext&quot;&gt;MathContext&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4c875092eb77bb34c8fd2158a2ec5e5eec9fb88" translate="yes" xml:space="preserve">
          <source>def bind(&lt;span name=&quot;thathead&quot;&gt;thathead: &lt;a href=&quot;unrolledbuffer%24%24unrolled&quot; id=&quot;scala.collection.mutable.UnrolledBuffer.Unrolled&quot; name=&quot;scala.collection.mutable.UnrolledBuffer.Unrolled&quot;&gt;Unrolled&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.Unrolled.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ab299d25208e9ac8544708752eee71a1a250286" translate="yes" xml:space="preserve">
          <source>def bitCount: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd1f020e9e395acb01126585fe4031408ae57934" translate="yes" xml:space="preserve">
          <source>def bitLength: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d784612a9ad7f00c829e88d213a1a6b18897427" translate="yes" xml:space="preserve">
          <source>def bitSetFactory: &lt;a href=&quot;bitset%24&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69bbd7bb3bd8078d90617ea2a19d481457eec6a4" translate="yes" xml:space="preserve">
          <source>def bitSetFactory: &lt;a href=&quot;bitset%24&quot; id=&quot;scala.collection.mutable.BitSet&quot; name=&quot;scala.collection.mutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cf96d9bc47fb362fc4b5efb5339f464eb643789" translate="yes" xml:space="preserve">
          <source>def booleanValue(): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e5e55a48b2add9af681c4ddcccb7d65fde007c6" translate="yes" xml:space="preserve">
          <source>def box(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;java.lang.Boolean&quot;&gt;java.lang.Boolean&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b8c8a436d64d95c101449dc19a9cd042b0c80f1" translate="yes" xml:space="preserve">
          <source>def box(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;java.lang.Byte&quot;&gt;java.lang.Byte&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ef3040d23d330595ac28a68fa1d7d3eb03f2183" translate="yes" xml:space="preserve">
          <source>def box(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;java.lang.Character&quot;&gt;Character&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="074a5f422eeb9658c0ebefb6fffcb02b2555798e" translate="yes" xml:space="preserve">
          <source>def box(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;java.lang.Double&quot;&gt;java.lang.Double&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bc61bf7321f6b32bd9b08cf9f57c47fcc64e4ea" translate="yes" xml:space="preserve">
          <source>def box(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;java.lang.Float&quot;&gt;java.lang.Float&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db06efc3af9053212fed1be4c892440f71f32801" translate="yes" xml:space="preserve">
          <source>def box(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5571d1904427a05dec127cdc14af5c40f06aa331" translate="yes" xml:space="preserve">
          <source>def box(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;java.lang.Long&quot;&gt;java.lang.Long&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51b27ea6398f13ac67424aea635086f6196738de" translate="yes" xml:space="preserve">
          <source>def box(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;java.lang.Short&quot;&gt;java.lang.Short&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8242760f412b8550731e0eeec61a1f1407128096" translate="yes" xml:space="preserve">
          <source>def box(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.runtime.BoxedUnit&quot;&gt;BoxedUnit&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d683bc7f665f25beb715a68b16598a68353b88cf" translate="yes" xml:space="preserve">
          <source>def boxedAdder: &lt;span name=&quot;java.util.function.BiConsumer&quot;&gt;BiConsumer&lt;/span&gt;[&lt;a href=&quot;doubleaccumulator&quot; id=&quot;scala.jdk.DoubleAccumulator&quot; name=&quot;scala.jdk.DoubleAccumulator&quot;&gt;DoubleAccumulator&lt;/a&gt;, &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfaedddd331f06de614d142ddb9d7a981591d258" translate="yes" xml:space="preserve">
          <source>def boxedAdder: &lt;span name=&quot;java.util.function.BiConsumer&quot;&gt;BiConsumer&lt;/span&gt;[&lt;a href=&quot;intaccumulator&quot; id=&quot;scala.jdk.IntAccumulator&quot; name=&quot;scala.jdk.IntAccumulator&quot;&gt;IntAccumulator&lt;/a&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d460af2c86909e1f3e8b117c3b2c7e091a7816e" translate="yes" xml:space="preserve">
          <source>def boxedAdder: &lt;span name=&quot;java.util.function.BiConsumer&quot;&gt;BiConsumer&lt;/span&gt;[&lt;a href=&quot;longaccumulator&quot; id=&quot;scala.jdk.LongAccumulator&quot; name=&quot;scala.jdk.LongAccumulator&quot;&gt;LongAccumulator&lt;/a&gt;, &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39ff39b729f0ead2647215787baebaefad6395f7" translate="yes" xml:space="preserve">
          <source>def break(): &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4144f6fa478e589244eaaf17563f0805fc1d9fc4" translate="yes" xml:space="preserve">
          <source>def breakable(&lt;span name=&quot;op&quot;&gt;op: =&amp;gt; &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e906ecda99606247fa08bf6c741fe462845da27" translate="yes" xml:space="preserve">
          <source>def buffer[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: =&amp;gt; &lt;span name=&quot;scala.sys.process.FileProcessLogger.buffer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.sys.process.FileProcessLogger.buffer.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae2f4ad61175f488f00deb0c5fca8aa30c08c483" translate="yes" xml:space="preserve">
          <source>def buffered: &lt;a href=&quot;../../collection/bufferediterator&quot; id=&quot;scala.collection.BufferedIterator&quot; name=&quot;scala.collection.BufferedIterator&quot;&gt;collection.BufferedIterator&lt;/a&gt;[&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54d0a743eb9fd165e6f9cadf9102604f0d637a07" translate="yes" xml:space="preserve">
          <source>def buffered: &lt;a href=&quot;../bufferediterator&quot; id=&quot;scala.collection.BufferedIterator&quot; name=&quot;scala.collection.BufferedIterator&quot;&gt;BufferedIterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a066edf16b20a4bac6539d43412431eecddcf18" translate="yes" xml:space="preserve">
          <source>def buffered: &lt;a href=&quot;../collection/bufferediterator&quot; id=&quot;scala.collection.BufferedIterator&quot; name=&quot;scala.collection.BufferedIterator&quot;&gt;collection.BufferedIterator&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="580876622e7d9e74f8e64398a96fce67ada836c1" translate="yes" xml:space="preserve">
          <source>def buffered: &lt;a href=&quot;../collection/bufferediterator&quot; id=&quot;scala.collection.BufferedIterator&quot; name=&quot;scala.collection.BufferedIterator&quot;&gt;collection.BufferedIterator&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7af71af06ed7259268129b5c393118849ea9bcb6" translate="yes" xml:space="preserve">
          <source>def buffered: &lt;a href=&quot;bufferediterator&quot; id=&quot;scala.collection.BufferedIterator&quot; name=&quot;scala.collection.BufferedIterator&quot;&gt;BufferedIterator&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c216fd4193eb75f7d30fc4ccc154485bfe1fc16" translate="yes" xml:space="preserve">
          <source>def buffered: &lt;a href=&quot;bufferediterator&quot; id=&quot;scala.collection.BufferedIterator&quot; name=&quot;scala.collection.BufferedIterator&quot;&gt;BufferedIterator&lt;/a&gt;[&lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee90cdbd768bfbb965c302d1b83778a6041ff5d5" translate="yes" xml:space="preserve">
          <source>def buffered: &lt;a href=&quot;bufferediterator&quot; id=&quot;scala.collection.BufferedIterator&quot; name=&quot;scala.collection.BufferedIterator&quot;&gt;BufferedIterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aa489df70221b876c85ed51a2a21b97be4bbc3c" translate="yes" xml:space="preserve">
          <source>def buffered: &lt;a href=&quot;bufferediterator&quot; id=&quot;scala.collection.BufferedIterator&quot; name=&quot;scala.collection.BufferedIterator&quot;&gt;BufferedIterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d52f3bc9bec1b2b6ba1e9d45d84001b86fbaab7e" translate="yes" xml:space="preserve">
          <source>def bufferedReader(): &lt;span name=&quot;java.io.BufferedReader&quot;&gt;BufferedReader&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03140196bd4763dd578104fc1b2d9e131d207d0d" translate="yes" xml:space="preserve">
          <source>def by(&lt;span name=&quot;newStep&quot;&gt;newStep: &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;numericrange&quot; id=&quot;scala.collection.immutable.NumericRange&quot; name=&quot;scala.collection.immutable.NumericRange&quot;&gt;NumericRange&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6555eb26745d9b406f3cdb910584abf15a4a717" translate="yes" xml:space="preserve">
          <source>def by(&lt;span name=&quot;newStep&quot;&gt;newStep: &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;numericrange&quot; id=&quot;scala.collection.immutable.NumericRange&quot; name=&quot;scala.collection.immutable.NumericRange&quot;&gt;NumericRange&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e5d4ff45c9a441a7532a8799295ce47416109e1" translate="yes" xml:space="preserve">
          <source>def by(&lt;span name=&quot;newStep&quot;&gt;newStep: &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;numericrange&quot; id=&quot;scala.collection.immutable.NumericRange&quot; name=&quot;scala.collection.immutable.NumericRange&quot;&gt;NumericRange&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1187e673d90b08e15a4aa39a1f3e7af18e19e44c" translate="yes" xml:space="preserve">
          <source>def by(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.immutable.Range.Partial.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.Range.Partial.U&quot;&gt;U&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="569619ee5b9fcb7c019d754b454297e29d1df1a0" translate="yes" xml:space="preserve">
          <source>def by(&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.util.control.Exception.By.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.util.control.Exception.By.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82c136e151de771f9f80b79a59590448d1538bcf" translate="yes" xml:space="preserve">
          <source>def by[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.math.Equiv.by.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.math.Equiv.by.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.by.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.by.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8e980f9b962225a610a0f10a0a3f5f9a0d11319" translate="yes" xml:space="preserve">
          <source>def by[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.math.Ordering.by.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.math.Ordering.by.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.by.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.by.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c00611240941e03ae75c8fe46f1452f85443a11" translate="yes" xml:space="preserve">
          <source>def byteValue(): &lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="096fd8c6e0a460aa851594eaae68813acc802090" translate="yes" xml:space="preserve">
          <source>def byteValue(): &lt;a href=&quot;byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70130bd84706e938caaa0d56925649d8fed454a8" translate="yes" xml:space="preserve">
          <source>def byteValue: &lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9949e7337f2ddd8c6ab6fcb1f8ddcf468a0b5902" translate="yes" xml:space="preserve">
          <source>def byteValue: &lt;a href=&quot;byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3386bdf2d37e0d3d2d120a4ea8f3436b722dba84" translate="yes" xml:space="preserve">
          <source>def bytesHash(&lt;span name=&quot;data&quot;&gt;data: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2940c3ebefd56d31ae79fbaf16bf5ad6884a56e8" translate="yes" xml:space="preserve">
          <source>def bytesHashing: &lt;a href=&quot;hashing&quot; id=&quot;scala.util.hashing.Hashing&quot; name=&quot;scala.util.hashing.Hashing&quot;&gt;Hashing&lt;/a&gt;[&lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55f385257c6be397dc78260beffa66006c02312b" translate="yes" xml:space="preserve">
          <source>def byteswap32(&lt;span name=&quot;v&quot;&gt;v: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d653f66218c409c79fa22efdd267069652f3d71" translate="yes" xml:space="preserve">
          <source>def byteswap64(&lt;span name=&quot;v&quot;&gt;v: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="928f152f72d8498ee1471cbcb9d82bdce44e47de" translate="yes" xml:space="preserve">
          <source>def canEqual(&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5232a8294afbf51d5370377da952ca53222112f8" translate="yes" xml:space="preserve">
          <source>def canEqual(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9e8e09ce183f84893cfa620401df5949e3c8cfd" translate="yes" xml:space="preserve">
          <source>def canEqual(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db4d5bfcf54ebfd38007f2d564628ee39d67af5a" translate="yes" xml:space="preserve">
          <source>def canEqual(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b645970adc52ec264c9ef941b4b05574b7be1880" translate="yes" xml:space="preserve">
          <source>def canEqual(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5627bb4425c3bc65ec714b5f96a1e28fb77091c0" translate="yes" xml:space="preserve">
          <source>def capacity: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c931832c9e43f8480cb1dac469d07991921ba864" translate="yes" xml:space="preserve">
          <source>def capitalize: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed948aa9dff9ac4d70adae996521c48c52eeef37" translate="yes" xml:space="preserve">
          <source>def cat(&lt;span name=&quot;file&quot;&gt;file: &lt;a href=&quot;processbuilder%24%24source&quot; id=&quot;scala.sys.process.ProcessBuilder.Source&quot; name=&quot;scala.sys.process.ProcessBuilder.Source&quot;&gt;Source&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;files&quot;&gt;files: &lt;a href=&quot;processbuilder%24%24source&quot; id=&quot;scala.sys.process.ProcessBuilder.Source&quot; name=&quot;scala.sys.process.ProcessBuilder.Source&quot;&gt;Source&lt;/a&gt;*&lt;/span&gt;): &lt;a href=&quot;processbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder&quot;&gt;ProcessBuilder&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be89f8da336395c767d9ab7b81b6f4a76e472a09" translate="yes" xml:space="preserve">
          <source>def cat(&lt;span name=&quot;files&quot;&gt;files: &lt;a href=&quot;../../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;a href=&quot;processbuilder%24%24source&quot; id=&quot;scala.sys.process.ProcessBuilder.Source&quot; name=&quot;scala.sys.process.ProcessBuilder.Source&quot;&gt;Source&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;processbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder&quot;&gt;ProcessBuilder&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c466536daecd6e3dc528a975dab26130d1c2aa7" translate="yes" xml:space="preserve">
          <source>def cat: &lt;a href=&quot;processbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder&quot;&gt;ProcessBuilder&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e3cb970c5fb417ca730f4028366a5f585c5ee3d" translate="yes" xml:space="preserve">
          <source>def catchingPromiscuously[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;c&quot;&gt;c: &lt;a href=&quot;#Catcher%5B+T%5D=PartialFunction%5BThrowable,T%5D&quot; id=&quot;scala.util.control.Exception.Catcher&quot; name=&quot;scala.util.control.Exception.Catcher&quot;&gt;Catcher&lt;/a&gt;[&lt;span name=&quot;scala.util.control.Exception.catchingPromiscuously.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;exception%24%24catch&quot; id=&quot;scala.util.control.Exception.Catch&quot; name=&quot;scala.util.control.Exception.Catch&quot;&gt;Catch&lt;/a&gt;[&lt;span name=&quot;scala.util.control.Exception.catchingPromiscuously.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23d08cb9cf7fc19df85d9302fc7f9f56952ddc8a" translate="yes" xml:space="preserve">
          <source>def catchingPromiscuously[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;exceptions&quot;&gt;exceptions: &lt;a href=&quot;../../predef%24#Class%5BT%5D=Class%5BT%5D&quot; id=&quot;scala.Predef.Class&quot; name=&quot;scala.Predef.Class&quot;&gt;Class&lt;/a&gt;[_]*&lt;/span&gt;): &lt;a href=&quot;exception%24%24catch&quot; id=&quot;scala.util.control.Exception.Catch&quot; name=&quot;scala.util.control.Exception.Catch&quot;&gt;Catch&lt;/a&gt;[&lt;span name=&quot;scala.util.control.Exception.catchingPromiscuously.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="521537a5555aaa75b29ac1f8db2405437e6f9481" translate="yes" xml:space="preserve">
          <source>def catching[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;c&quot;&gt;c: &lt;a href=&quot;#Catcher%5B+T%5D=PartialFunction%5BThrowable,T%5D&quot; id=&quot;scala.util.control.Exception.Catcher&quot; name=&quot;scala.util.control.Exception.Catcher&quot;&gt;Catcher&lt;/a&gt;[&lt;span name=&quot;scala.util.control.Exception.catching.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;exception%24%24catch&quot; id=&quot;scala.util.control.Exception.Catch&quot; name=&quot;scala.util.control.Exception.Catch&quot;&gt;Catch&lt;/a&gt;[&lt;span name=&quot;scala.util.control.Exception.catching.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ccedde2d48d78f6713ad257d1f59984cdebb409" translate="yes" xml:space="preserve">
          <source>def catching[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;exceptions&quot;&gt;exceptions: &lt;a href=&quot;../../predef%24#Class%5BT%5D=Class%5BT%5D&quot; id=&quot;scala.Predef.Class&quot; name=&quot;scala.Predef.Class&quot;&gt;Class&lt;/a&gt;[_]*&lt;/span&gt;): &lt;a href=&quot;exception%24%24catch&quot; id=&quot;scala.util.control.Exception.Catch&quot; name=&quot;scala.util.control.Exception.Catch&quot;&gt;Catch&lt;/a&gt;[&lt;span name=&quot;scala.util.control.Exception.catching.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b8178e20e3c95a56d74b9383018ca5760601d8d" translate="yes" xml:space="preserve">
          <source>def cbrt(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddf07622773fb421a714674e0b71ab7e573587fe" translate="yes" xml:space="preserve">
          <source>def ceil(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="141821f7cf573f2159259de2df19faa98fc0d253" translate="yes" xml:space="preserve">
          <source>def ceil: &lt;a href=&quot;double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b4e9d577b0c41703aa7bb07598d21c19ba97025" translate="yes" xml:space="preserve">
          <source>def ceil: &lt;a href=&quot;float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeb47141d68901602d2170141fd597dd6e1ba120" translate="yes" xml:space="preserve">
          <source>def ch: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38a2ee3e31c8c93b3890db8e15d86e7ddd5b38e1" translate="yes" xml:space="preserve">
          <source>def chain[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;fs&quot;&gt;fs: &lt;a href=&quot;collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[(&lt;span name=&quot;scala.Function.chain.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function.chain.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.Function.chain.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function.chain.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="551f9ef0c91b9ba69396e677ebc11c201d44c56d" translate="yes" xml:space="preserve">
          <source>def chain[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;h&quot;&gt;h: &lt;a href=&quot;hashing&quot; id=&quot;scala.util.hashing.Hashing&quot; name=&quot;scala.util.hashing.Hashing&quot;&gt;Hashing&lt;/a&gt;[&lt;span name=&quot;scala.util.hashing.ByteswapHashing.chain.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;hashing&quot; id=&quot;scala.util.hashing.Hashing&quot; name=&quot;scala.util.hashing.Hashing&quot;&gt;Hashing&lt;/a&gt;[&lt;span name=&quot;scala.util.hashing.ByteswapHashing.chain.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a9cfdcd08097a6604008bb6faf36c98829c00c4" translate="yes" xml:space="preserve">
          <source>def charAt(&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e01e029dd926e458535789506f3c87986bb442d3" translate="yes" xml:space="preserve">
          <source>def charAt(&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58340d6660723834e3446af111a200e1fd114b35" translate="yes" xml:space="preserve">
          <source>def charAt(&lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="453bd79ab779082f23b5b87938b9dcca1d512d45" translate="yes" xml:space="preserve">
          <source>def charStepper: &lt;a href=&quot;intstepper&quot; id=&quot;scala.collection.IntStepper&quot; name=&quot;scala.collection.IntStepper&quot;&gt;IntStepper&lt;/a&gt; with &lt;a href=&quot;stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50dbcd467b0dad0094e15079fb2490f1b779176e" translate="yes" xml:space="preserve">
          <source>def charValue(): &lt;a href=&quot;char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b6808184d521a4fb6123e9949d11e8da9febfe3" translate="yes" xml:space="preserve">
          <source>def charValue: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de1eee98d952b6777070914c196336aa07def086" translate="yes" xml:space="preserve">
          <source>def characteristics(): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7e5f56cbfd54a121c071aeff8835f43f6bd4d01" translate="yes" xml:space="preserve">
          <source>def chars(): &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;IntStream&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4717c88098e2f82db32d34521073637ed67a4e5" translate="yes" xml:space="preserve">
          <source>def checkInput(&lt;span name=&quot;line&quot;&gt;line: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;column&quot;&gt;column: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="868822364dd37798156e2b7ea33e0175a90a521f" translate="yes" xml:space="preserve">
          <source>def checkLengths(&lt;span name=&quot;args&quot;&gt;args: &lt;a href=&quot;collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;]&lt;/span&gt;, &lt;span name=&quot;parts&quot;&gt;parts: &lt;a href=&quot;index#Seq%5B+A%5D=Seq%5BA%5D&quot; id=&quot;scala.Seq&quot; name=&quot;scala.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b665f71bd1fd9419766cd49bd884e5d1fe2ce0af" translate="yes" xml:space="preserve">
          <source>def className: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80a63f49a0702fd6b03b4552db5e9594d89ec4a5" translate="yes" xml:space="preserve">
          <source>def className: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c0d1fce4eee079f81f112efeb5e63d3138b562f" translate="yes" xml:space="preserve">
          <source>def className: &lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adff7fa068e1af4bc9abcd478af5698f4d0a624f" translate="yes" xml:space="preserve">
          <source>def className: &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10cd367fc37c087aa48b01ece625fc1128983668" translate="yes" xml:space="preserve">
          <source>def classOf[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;]: &lt;a href=&quot;#Class%5BT%5D=Class%5BT%5D&quot; id=&quot;scala.Predef.Class&quot; name=&quot;scala.Predef.Class&quot;&gt;Class&lt;/a&gt;[&lt;span name=&quot;scala.Predef.classOf.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef0459178b3229e52a8dac2365f26505f9c68b8d" translate="yes" xml:space="preserve">
          <source>def classTagCompanion: &lt;a href=&quot;unrolledbuffer%24&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="554aa07698674f7a2f173affe66bb0aaf1301e96" translate="yes" xml:space="preserve">
          <source>def classTag[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](implicit &lt;span name=&quot;ctag&quot;&gt;ctag: &lt;a href=&quot;classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.reflect.classTag.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.reflect.classTag.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0bec9895fcad038eb90f3fe5d326b684ca49fcd" translate="yes" xml:space="preserve">
          <source>def classType[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;clazz&quot;&gt;clazz: &lt;a href=&quot;../predef%24#Class%5BT%5D=Class%5BT%5D&quot; id=&quot;scala.Predef.Class&quot; name=&quot;scala.Predef.Class&quot;&gt;Class&lt;/a&gt;[&lt;span name=&quot;scala.reflect.Manifest.classType.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;arg1&quot;&gt;arg1: &lt;a href=&quot;manifest&quot; id=&quot;scala.reflect.Manifest&quot; name=&quot;scala.reflect.Manifest&quot;&gt;Manifest&lt;/a&gt;[_]&lt;/span&gt;, &lt;span name=&quot;args&quot;&gt;args: &lt;a href=&quot;manifest&quot; id=&quot;scala.reflect.Manifest&quot; name=&quot;scala.reflect.Manifest&quot;&gt;Manifest&lt;/a&gt;[_]*&lt;/span&gt;): &lt;a href=&quot;manifest&quot; id=&quot;scala.reflect.Manifest&quot; name=&quot;scala.reflect.Manifest&quot;&gt;Manifest&lt;/a&gt;[&lt;span name=&quot;scala.reflect.Manifest.classType.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9acdec58944260ef97f87077c450cd84da52c955" translate="yes" xml:space="preserve">
          <source>def classType[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;clazz&quot;&gt;clazz: &lt;a href=&quot;../predef%24#Class%5BT%5D=Class%5BT%5D&quot; id=&quot;scala.Predef.Class&quot; name=&quot;scala.Predef.Class&quot;&gt;Class&lt;/a&gt;[&lt;span name=&quot;scala.reflect.ManifestFactory.classType.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;arg1&quot;&gt;arg1: &lt;a href=&quot;manifest&quot; id=&quot;scala.reflect.Manifest&quot; name=&quot;scala.reflect.Manifest&quot;&gt;Manifest&lt;/a&gt;[_]&lt;/span&gt;, &lt;span name=&quot;args&quot;&gt;args: &lt;a href=&quot;manifest&quot; id=&quot;scala.reflect.Manifest&quot; name=&quot;scala.reflect.Manifest&quot;&gt;Manifest&lt;/a&gt;[_]*&lt;/span&gt;): &lt;a href=&quot;manifest&quot; id=&quot;scala.reflect.Manifest&quot; name=&quot;scala.reflect.Manifest&quot;&gt;Manifest&lt;/a&gt;[&lt;span name=&quot;scala.reflect.ManifestFactory.classType.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c88ecf10fc35153cf74c5954164f456a3657a0cd" translate="yes" xml:space="preserve">
          <source>def classType[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;clazz&quot;&gt;clazz: &lt;a href=&quot;../predef%24#Class%5BT%5D=Class%5BT%5D&quot; id=&quot;scala.Predef.Class&quot; name=&quot;scala.Predef.Class&quot;&gt;Class&lt;/a&gt;[_]&lt;/span&gt;): &lt;a href=&quot;manifest&quot; id=&quot;scala.reflect.Manifest&quot; name=&quot;scala.reflect.Manifest&quot;&gt;Manifest&lt;/a&gt;[&lt;span name=&quot;scala.reflect.Manifest.classType.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83382c9e627f2cd827f644e8ce55c155bbb06f43" translate="yes" xml:space="preserve">
          <source>def classType[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;clazz&quot;&gt;clazz: &lt;a href=&quot;../predef%24#Class%5BT%5D=Class%5BT%5D&quot; id=&quot;scala.Predef.Class&quot; name=&quot;scala.Predef.Class&quot;&gt;Class&lt;/a&gt;[_]&lt;/span&gt;): &lt;a href=&quot;manifest&quot; id=&quot;scala.reflect.Manifest&quot; name=&quot;scala.reflect.Manifest&quot;&gt;Manifest&lt;/a&gt;[&lt;span name=&quot;scala.reflect.ManifestFactory.classType.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f97762db34d27d25871ccc257975c83f7f941a1" translate="yes" xml:space="preserve">
          <source>def classType[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;clazz&quot;&gt;clazz: &lt;span name=&quot;java.lang.Class&quot;&gt;Class&lt;/span&gt;[_]&lt;/span&gt;): &lt;a href=&quot;index#ClassManifest%5BT%5D=scala.reflect.ClassTag%5BT%5D&quot; id=&quot;scala.reflect.ClassManifest&quot; name=&quot;scala.reflect.ClassManifest&quot;&gt;ClassManifest&lt;/a&gt;[&lt;span name=&quot;scala.reflect.ClassManifestFactory.classType.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e40e5a4922efd92ce993ae00bb2432b0b7e188d0" translate="yes" xml:space="preserve">
          <source>def classType[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;clazz&quot;&gt;clazz: &lt;span name=&quot;java.lang.Class&quot;&gt;Class&lt;/span&gt;[_]&lt;/span&gt;, &lt;span name=&quot;arg1&quot;&gt;arg1: &lt;a href=&quot;optmanifest&quot; id=&quot;scala.reflect.OptManifest&quot; name=&quot;scala.reflect.OptManifest&quot;&gt;OptManifest&lt;/a&gt;[_]&lt;/span&gt;, &lt;span name=&quot;args&quot;&gt;args: &lt;a href=&quot;optmanifest&quot; id=&quot;scala.reflect.OptManifest&quot; name=&quot;scala.reflect.OptManifest&quot;&gt;OptManifest&lt;/a&gt;[_]*&lt;/span&gt;): &lt;a href=&quot;index#ClassManifest%5BT%5D=scala.reflect.ClassTag%5BT%5D&quot; id=&quot;scala.reflect.ClassManifest&quot; name=&quot;scala.reflect.ClassManifest&quot;&gt;ClassManifest&lt;/a&gt;[&lt;span name=&quot;scala.reflect.ClassManifestFactory.classType.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01a4ee415b43676621d86d1b9e3e53bc470f0e25" translate="yes" xml:space="preserve">
          <source>def classType[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;prefix&quot;&gt;prefix: &lt;a href=&quot;manifest&quot; id=&quot;scala.reflect.Manifest&quot; name=&quot;scala.reflect.Manifest&quot;&gt;Manifest&lt;/a&gt;[_]&lt;/span&gt;, &lt;span name=&quot;clazz&quot;&gt;clazz: &lt;a href=&quot;../predef%24#Class%5BT%5D=Class%5BT%5D&quot; id=&quot;scala.Predef.Class&quot; name=&quot;scala.Predef.Class&quot;&gt;Class&lt;/a&gt;[_]&lt;/span&gt;, &lt;span name=&quot;args&quot;&gt;args: &lt;a href=&quot;manifest&quot; id=&quot;scala.reflect.Manifest&quot; name=&quot;scala.reflect.Manifest&quot;&gt;Manifest&lt;/a&gt;[_]*&lt;/span&gt;): &lt;a href=&quot;manifest&quot; id=&quot;scala.reflect.Manifest&quot; name=&quot;scala.reflect.Manifest&quot;&gt;Manifest&lt;/a&gt;[&lt;span name=&quot;scala.reflect.Manifest.classType.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d86f65ceb828a42bcfd4989a1c63b69c78e1917" translate="yes" xml:space="preserve">
          <source>def classType[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;prefix&quot;&gt;prefix: &lt;a href=&quot;manifest&quot; id=&quot;scala.reflect.Manifest&quot; name=&quot;scala.reflect.Manifest&quot;&gt;Manifest&lt;/a&gt;[_]&lt;/span&gt;, &lt;span name=&quot;clazz&quot;&gt;clazz: &lt;a href=&quot;../predef%24#Class%5BT%5D=Class%5BT%5D&quot; id=&quot;scala.Predef.Class&quot; name=&quot;scala.Predef.Class&quot;&gt;Class&lt;/a&gt;[_]&lt;/span&gt;, &lt;span name=&quot;args&quot;&gt;args: &lt;a href=&quot;manifest&quot; id=&quot;scala.reflect.Manifest&quot; name=&quot;scala.reflect.Manifest&quot;&gt;Manifest&lt;/a&gt;[_]*&lt;/span&gt;): &lt;a href=&quot;manifest&quot; id=&quot;scala.reflect.Manifest&quot; name=&quot;scala.reflect.Manifest&quot;&gt;Manifest&lt;/a&gt;[&lt;span name=&quot;scala.reflect.ManifestFactory.classType.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51307e000f534b286f963e43dd9fa2160a67100b" translate="yes" xml:space="preserve">
          <source>def classType[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;prefix&quot;&gt;prefix: &lt;a href=&quot;optmanifest&quot; id=&quot;scala.reflect.OptManifest&quot; name=&quot;scala.reflect.OptManifest&quot;&gt;OptManifest&lt;/a&gt;[_]&lt;/span&gt;, &lt;span name=&quot;clazz&quot;&gt;clazz: &lt;span name=&quot;java.lang.Class&quot;&gt;Class&lt;/span&gt;[_]&lt;/span&gt;, &lt;span name=&quot;args&quot;&gt;args: &lt;a href=&quot;optmanifest&quot; id=&quot;scala.reflect.OptManifest&quot; name=&quot;scala.reflect.OptManifest&quot;&gt;OptManifest&lt;/a&gt;[_]*&lt;/span&gt;): &lt;a href=&quot;index#ClassManifest%5BT%5D=scala.reflect.ClassTag%5BT%5D&quot; id=&quot;scala.reflect.ClassManifest&quot; name=&quot;scala.reflect.ClassManifest&quot;&gt;ClassManifest&lt;/a&gt;[&lt;span name=&quot;scala.reflect.ClassManifestFactory.classType.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15f6fcd92dc288cb773cad0a9673bdf74d8003c0" translate="yes" xml:space="preserve">
          <source>def clear(): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ee7860cd4dc25f70318a46cf3cd69625a9852f1" translate="yes" xml:space="preserve">
          <source>def clear(): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1452b02a24c0f23b4399fb4392bec947cef9fe11" translate="yes" xml:space="preserve">
          <source>def clearAndShrink(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = &lt;a href=&quot;arraybuffer%24&quot;&gt;ArrayBuffer.DefaultInitialSize&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68c50ce0282f725ed42a8b7b53a29cd3a7f65e7d" translate="yes" xml:space="preserve">
          <source>def clearAndShrink(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = &lt;a href=&quot;arraydeque%24&quot;&gt;ArrayDeque.DefaultInitialSize&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b761dae8c246f5ce39668adda736f3f9c12e964d" translate="yes" xml:space="preserve">
          <source>def clearAndShrink(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = &lt;a href=&quot;arraydeque%24&quot;&gt;ArrayDeque.DefaultInitialSize&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aad3163ccb91e3c0b5d2426e67ae87221ddf5f2b" translate="yes" xml:space="preserve">
          <source>def clearAndShrink(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = &lt;a href=&quot;arraydeque%24&quot;&gt;ArrayDeque.DefaultInitialSize&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67a4987890008c5b7327d4d59d4b8ff0255a9dab" translate="yes" xml:space="preserve">
          <source>def clearBit(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19e71d132d8ec338a64ba4a873822950b35e639a" translate="yes" xml:space="preserve">
          <source>def clearProp(&lt;span name=&quot;name&quot;&gt;name: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1346abd90c413b30e5f50991bbd5497d49fe78f7" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f49fdbf8f9e2c555ade94284975c9d403a6cd30" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a40b39df04084a44c2c94696085128fdfb00e93" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;../collection/mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b413d6e1a1a2be9c4dbf6a280ef949b10c9faf28" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;collection.mutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79737ff1f3b50a35219d1811a87ed86f9c705fcd" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;../mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39eee146365434d0a003f750f5e6a92c2ad33984" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c66490c87e9e15c4f79c773f93bd0714cc93dba3" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22f8eab95b3959c4fa1e0c3a4449ad5f74199565" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;anyrefmap&quot; id=&quot;scala.collection.mutable.AnyRefMap&quot; name=&quot;scala.collection.mutable.AnyRefMap&quot;&gt;AnyRefMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="313974d3c069ddc54037e7cf5e563e4dc4ff2428" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="610cc1dd553941b2c515fcf9dca05fae8b711e44" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1656660676f5a3e14a67d6919c42ce9d83463266" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c58ba4f9bcba8d1fa90060aa03192b03eeccdf7" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4df6cff2b0d1d8a19805caca38503cd396a596a0" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7cdd53528a8659dacdffc836b998d24402909ad" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1913aec47f527357bec6679ca467b4ea93ca514" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0db2a17834441eaff28fa9af13894417a89a4faa" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc33ec0a309eb23f12c4b895d35529337f62daa5" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2c0cea4b8635b00d7f240753d642a389d23cd3e" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5a5783efd4977b0cdd96be40d71a9efc77617a7" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d765765d62e742dc27e1f86cee0b1db2912ea96e" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7180add092c05afd9ab9f7e570ae624441d936f" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e10ced361561984408c1e5efd69927ec0aae8811" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.mutable.BitSet&quot; name=&quot;scala.collection.mutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23ce38c2782acac9684b577180d1d24be502625a" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab20a018d03ef8870f3bd3564ba24f0e280e494b" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19c97c4ccef12ff4e84101ac1400caffc24bac07" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;collisionproofhashmap&quot; id=&quot;scala.collection.mutable.CollisionProofHashMap&quot; name=&quot;scala.collection.mutable.CollisionProofHashMap&quot;&gt;CollisionProofHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6345909d16a9a71c8f6e7d20aa8c7bf67259f04d" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;doubleaccumulator&quot; id=&quot;scala.jdk.DoubleAccumulator&quot; name=&quot;scala.jdk.DoubleAccumulator&quot;&gt;DoubleAccumulator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99d052cac9cd4fc95d70ce40da6668d825c4efdb" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.mutable.HashMap&quot; name=&quot;scala.collection.mutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a8b7476d75178aea780216b021308b3785d0ccd" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f786a5a7f98120d645217a41e0b02d70c79fb4c" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fecfeb1f733b7c0de72da69b306e3a80b699f03" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f38a14c2e237a508c8035dd784909190d0562ee" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;intaccumulator&quot; id=&quot;scala.jdk.IntAccumulator&quot; name=&quot;scala.jdk.IntAccumulator&quot;&gt;IntAccumulator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b45fc995d99515f79230e6f6d035d0549ad18b9e" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;linkedhashmap&quot; id=&quot;scala.collection.mutable.LinkedHashMap&quot; name=&quot;scala.collection.mutable.LinkedHashMap&quot;&gt;LinkedHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37cf02b6faebf6d4c0ccd63a0b664dfb88fba799" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d78207122c2194cd0b205c9f2caf5738de57592" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6e89c9a030f9105fc0632113c057a1853a1269d" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.mutable.ListMap&quot; name=&quot;scala.collection.mutable.ListMap&quot;&gt;ListMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f09331f4b5f540ad782611cb6c8c27fa1eaaf9ad" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;longaccumulator&quot; id=&quot;scala.jdk.LongAccumulator&quot; name=&quot;scala.jdk.LongAccumulator&quot;&gt;LongAccumulator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d821e54e4b4c40dfad0861cb7db6f575cada875" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.mutable.LongMap&quot; name=&quot;scala.collection.mutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ec0eed3afa01d911dbf55708e1af016862640d4" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fec325baf6b0fb9e81967702a017bbc6950fc38c" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fab1dad6903ebb8d0af99caf25a74b281fe57673" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb3fbfd43f1c588dba683f72cdadca6ad6f025e3" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.mutable.Map.WithDefault&quot; name=&quot;scala.collection.mutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41bdbc433f30aece5d6477bf41d5777f96805655" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;openhashmap&quot; id=&quot;scala.collection.mutable.OpenHashMap&quot; name=&quot;scala.collection.mutable.OpenHashMap&quot;&gt;OpenHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fe8ff17effbdd2bc51046e3cfe7c6718fe16a76" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;priorityqueue&quot; id=&quot;scala.collection.mutable.PriorityQueue&quot; name=&quot;scala.collection.mutable.PriorityQueue&quot;&gt;PriorityQueue&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5671ca27ba4f15325174fbbfa323343740fa419b" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b2748386fb73511f27d1f402bbef5388cb83fb8" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aba7b49b4c5067e196f706edfbcd8b1388e1f88" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.mutable.SeqMap&quot; name=&quot;scala.collection.mutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c8e8bb0658d90a1cd61dbd56c7d2b15e05f4f41" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa21ab8b95388586d3ac9ef84b3e25ec962898e1" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1b00eb332f9aeda9eafa14e3dc5bfcefac5b87f" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.mutable.SortedMap&quot; name=&quot;scala.collection.mutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e5238d35073dd6d40e40c989d58054a0e495a4d" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.mutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.mutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fabb3ef743476c88eb57f37ebe8775478ac2817f" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64c0ab9578d729adb87257f534047ab539cd65d8" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2220dea7e8905a09c921f4e6673cc440368da819" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.mutable.TreeMap&quot; name=&quot;scala.collection.mutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bd54b8b78ea173435ba54ebd5c03a3ebf44897e" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.mutable.TreeSet&quot; name=&quot;scala.collection.mutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cff52c21c64de52bf2565ee98344cf1b2d437db" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;triemap&quot; id=&quot;scala.collection.concurrent.TrieMap&quot; name=&quot;scala.collection.concurrent.TrieMap&quot;&gt;TrieMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b31d551ff13b3160c10704d816cc9816fbbb6549" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60c982f5e16315940ea75ad4e5597e4f026e893f" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;a href=&quot;weakhashmap&quot; id=&quot;scala.collection.mutable.WeakHashMap&quot; name=&quot;scala.collection.mutable.WeakHashMap&quot;&gt;WeakHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02921812ca4d9c9c72ac7e668a799a2a41342a69" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;span name=&quot;scala.collection.mutable.Cloneable.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e740cbe5af0d46038f54087547e5407441b835b5" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74bdbddb563127918d947773d454641fb3130345" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;span name=&quot;scala.collection.mutable.MapOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66881e95e3b96512a7d7b475330337b1681c3eac" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;span name=&quot;scala.collection.mutable.SeqOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2f5860a154e6a929247419b2361bf855f57b0fb" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;span name=&quot;scala.collection.mutable.SetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37ef3492ce9e377adb2c8992edcdfe07d446fea1" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;span name=&quot;scala.collection.mutable.SortedMapOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d1c124146a48ad3383a2f5b5caf8a453dafaac9" translate="yes" xml:space="preserve">
          <source>def clone(): &lt;span name=&quot;scala.collection.mutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecb054506f71306298e6f0923acab1919c641354" translate="yes" xml:space="preserve">
          <source>def close(): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfaa7765919f143be7784ffd5ecbd5fe1191c045" translate="yes" xml:space="preserve">
          <source>def close(): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92c0aac75f6ee7ea03a82330b1ec2ce22b25ac7c" translate="yes" xml:space="preserve">
          <source>def close(&lt;span name=&quot;c&quot;&gt;c: &lt;span name=&quot;scala.sys.process.processInternal.Closeable&quot;&gt;Closeable&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8347be2f749c783e8952467a4186cbd7527dab4" translate="yes" xml:space="preserve">
          <source>def codePointStepper: &lt;a href=&quot;intstepper&quot; id=&quot;scala.collection.IntStepper&quot; name=&quot;scala.collection.IntStepper&quot;&gt;IntStepper&lt;/a&gt; with &lt;a href=&quot;stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfd66dbd4b59bf595eef0a01a1ef2e24d52f19fb" translate="yes" xml:space="preserve">
          <source>def codePoints(): &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;IntStream&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87735ca572c1a3df1016a2a8ac348af3b0db5d1e" translate="yes" xml:space="preserve">
          <source>def collect(&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4a3aae88fa0ef4267e7230c3c8ac1255a92ce5f" translate="yes" xml:space="preserve">
          <source>def collect(&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.mutable.BitSet&quot; name=&quot;scala.collection.mutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe1e1e49432940af4496146c92937e7810d09584" translate="yes" xml:space="preserve">
          <source>def collect(&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f122de7690bd3945f815567255f434f258c1b168" translate="yes" xml:space="preserve">
          <source>def collect(&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;, &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;doubleaccumulator&quot; id=&quot;scala.jdk.DoubleAccumulator&quot; name=&quot;scala.jdk.DoubleAccumulator&quot;&gt;DoubleAccumulator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e082d7c880b7052f1a4c362d545cc534a9f34a4d" translate="yes" xml:space="preserve">
          <source>def collect(&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f60b202e793308bc7e451ae69c2c6e61d8ffa9ba" translate="yes" xml:space="preserve">
          <source>def collect(&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;intaccumulator&quot; id=&quot;scala.jdk.IntAccumulator&quot; name=&quot;scala.jdk.IntAccumulator&quot;&gt;IntAccumulator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45f534f34ff8b794b71b31957546958b7541166a" translate="yes" xml:space="preserve">
          <source>def collect(&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.BitSetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cce72d03e37c56c1816f5d3e533786c37a7bfe4" translate="yes" xml:space="preserve">
          <source>def collect(&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;longaccumulator&quot; id=&quot;scala.jdk.LongAccumulator&quot; name=&quot;scala.jdk.LongAccumulator&quot;&gt;LongAccumulator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fb314aa35e8ea2311c71ce7af89df96bb841664" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.ArrayOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf3f47f13b1b4a4f4c72a31823b5489c6ae24393" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: &lt;a href=&quot;partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.ArrayOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dff836388cca0a8f80cdda4b5387c5d43272ce88" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8ab8fba7e11f5cb4e2f192bf0e8beb89dfd418d" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9a12da5fcd26028401d654b8eed114517689af0" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dd6ac2c43c45b0b1808d36925b6958e89a909f2" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bc5b7831641466e4bb88f649f1b12f3f8cf1fa5" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="487f7e567ef85af39928d2e60d62fd843759fae6" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1603a221445282e493754f30ba41e7b14d6d6efe" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f55b2d2f1264e451c6c6c6d0bf4d26da3673aa07" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3214d184ec68b6a80fcfc9bc0dc938d72128868" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="983b124a827d75de787c88abc76f2a57bbbbb1c0" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88b6333b76db2bc6863772aeb928b91023acce33" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9d01fc6148e5d20dc3e7945dbb4b45b7ce69d3d" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17737d2ba4ff3a16e360eaaab041c71384f0e563" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5832ffd69b316353c2c197da378aa683e8ab1e0a" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1f3d37a90ae3a94143908abd2bece24774e574b" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94b4866fcc4f38d7d6cebf8090a1b54646c9da8f" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c84327aa47395f975ca5b563076fd4edda62da4a" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b62e6edd132be084bb746da8b903f5962bc9d267" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79d175e7def84763cc7e83da38282f734f89e01f" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06149c637d9c305e38fe841f234eac28c6579c69" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9988435d97dcca74bffa6530f9229820e46264c0" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61e8fa903616a8259673a0035ccb5ee80e55d10e" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76bb65f2c77a32d39a6d527564962c8ae2a05c3d" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76718eec6507ca82ade766f407ef7ae27882b2d8" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="878ef0503e7182df0ab2780dd55a04d3bcf39ef2" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ce5c1fa145b92a5aa32eda1d9d996ad95fe4b90" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="122f1fb256386c5373735a2d21433dd0aa65cc30" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b18f94a99c1e80f51bb7ea596422b5c21901fb3" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef7ca4d9cee910e31e2e1c643a52dcc788409ea5" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="280b94de79d459dd82ba49640fd4d819cc435004" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3df301bf567bd57a46c5642c1c50e1fc0dee7137" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc7b1a75d2ba4b08515c7bb4d71d4d8cc8cccf19" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="216397bebc89c2645b5d8e1a2f392a8ce496dbab" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7276c5c53950cfebbb98f65bef922b956fec4286" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;]), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e25b36b0b1ea85b9486eef511f156dbff36ff169" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c3d745fed741222735860670b6eee153c1494ef" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8abc92840cc7b7e2865fdfb25258aad73ddf2ad8" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad7a8f4529c16253ed8c15a74b0cf9e90345d123" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9650e0b8a298e9377dedf568159253e183cbfe9" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16180fc0e7c49d6773a96048a17884a41783315f" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b925ecfbf5787295f2be19766916190f42741453" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fcce2ef6a943680633818389a877b8c40b2899b" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf1de81cf470d5339152aad466dc98321abc51e4" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb313e82cbbfda1f018a070e3dcfd2be2df2472b" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="977243ca5397653f8dd7c4a0322e414315bc35ed" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bd8777803f128dae34872123112b8ff9b961875" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d62fad8dad7c2a89037551bcf23aed73f19dced" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae484ea6663d05b7ddc76a970126a59075b2c1e6" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2ab8fb54107cc81c1bc3a0e3f0b36a8d137a7ff" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d029d3895e50716465babcc967fad56ed0ab690" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13a164ce0151cf5be5e43ad6f81c8f86f29f35c0" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c77e02d2f462ac7e510bf157c9a736b90871f83c" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47f8173c997d8af9d4a5bb63cfc8b3b9d1f4f994" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56994cce4db1e9114f5bf6a7102915f7a9e1cc57" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff3533124d71108e34f576f12dcdcc5db7844d68" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17f698d94a0dd31970e769a12cd8d22f6d29c67e" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="475ce7512188bae3511ed5760a825923ce7d6966" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2da6a7b2f0d95e5939dc8b0d7350dc96345e318" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abf77f2298de1b6385ed864e4d1418a645365d88" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41853c74ce7ff440ca24c74e89f23dc9d4098657" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2282684cd32845158ce9f998a32a9e6858861938" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2f6f46575ad7269142057a4d51667d5d0ae87b1" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LazyList.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea8335fed7d0fda57a16e17c09c1ff50f409bea7" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73e5791bac6aeb7993e29130dc0d692579c1e163" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e1488ade196618d5534f805a7e899434cc6d9b5" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53ca45dc6e1d00e332f0c8a706a1cd1ffcfc230b" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a656d268a7fed88e647e841980b585ada8f799b" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fba889a2ed7c64fae81145047d04ac9b409484b" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5887bc2ee98c1b2e3e76b6540d684d80b95afeea" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e7a5e07de224c4ee2f850fbdce8999c23c4f5cd" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cbcf31cba4b1926e249de8e7ddaaf94b6501c46" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce1ea18e42d0983922da313907edc429f50671b4" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06373fb7be4a95b684408a833371c1dea38ce024" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82215ffdb89abecbb98d612234dfba3f8ac336cf" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d530e5446729c4e9e8c3079dcaba6c056b06b234" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02161a559f11b08862c6823e99ab3bbc948539af" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d56d3111b75f0004ff558c43460daec672fed2a" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f4f184db3203ca036ab2ae1b6fb21bd07fbc7e5" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08c1297af2d5b07f2e4dbb6c13ced40697868974" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7daaf3dc1aac395627b954edff9eae055123d8ec" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7a13f2b10e7e43077a1d4ebcfcc3834b46f0723" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="985c63b83ba8bfcd7d7a2845127dc0a90353c56a" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9be14613ae9d723ae2eefadc51b4cf6a5b40ffc1" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc1da6805b1dc4d78f7f3b782d215038eb7c0e0c" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="207721df57899c78971a6877c7f4a153a104ea93" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75e1825f0ef460a9101f9312bb089c63a74f0808" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfc947e58befdf900b05e0742f17728cacb88ae4" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c1802ab96dfcf118479f442c19f43646233e0f3" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddc859eb48d796e6201fc07e8ee515ae65a01b8a" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25ff6b477965bd503bbc4456dc939374f3c6d325" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa758c529de3e2166b227de81863da6b39d3178f" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99bc54ade1a5197a803d11b4b9fc611b6bc4e0f5" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b498603dc47834131049a4b933dd7c34e11bff3" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cbeb6ae5007e3889869a6fd1d03db596d82b98d" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfb7c403c073f8200e26f4e13d5e749d0d09e1a0" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0c4478bdb1692eb7d8cc2cc2a73629615d3ca63" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="384da17ed1c1871acd9d61fc8809a3d5442aab8b" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73223a737338aa88e8c15a09f6d3da0d954fede0" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e47f9b4f9f5b64e211e09913ea29076adc69e7c" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97937c39366fcb2bceb0815a060819a57ec6d0d4" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee3d4f542b9ad0fc59afae5b44b99c3ee278e774" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b2527a31f706f032f4093f204e5ace57c6fdd7c" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a8dc5d1765968d43475c3822c494458894a5198" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="503fcf913755bcc611280ca2db827f05e952f936" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="298be086beb761acd751531a3c714c2eb41b80f5" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5cc7e37c9378b2b2a45551d40088b2fda47f494" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4146d9cfb9374d053483a6c6772d2a2601185ed3" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6937b3d1f0a385cec993a920aa34af43762bb6a4" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b964cf4d4edc11b41159321e9a6dd07a43cced17" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="977afad8cfeec863bea25357fd92d07b6c3f16c3" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94b1935c6a4d642efcedd05357972f79d62ee708" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bd6ef21020a6a6a46f2aacbeefd433849e76f72" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7a409519ac7295e0bf6385e54a6734a0f584405" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="548d197bc51db9bd138626fdb9fa73d03b08b555" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f6dc561299ff39ba68cec0c00e4641881cb973f" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67a64bc76a2f5a7c406e4027c67c4bee629764d5" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dc8ab74b4d01db4bebc55ee5e4a9f58a7c9c67e" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f76366bd3d1b8bb05e62f5d8e10cdd3c0ed605bf" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bad8ae12d08fc7c876f22b8849f171eb09b1fe47" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d555a35fd4ba7040aa6fb1c3f1a52ee21313c782" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="792b11f766d32c08c7e6e813de6c6ac7570809d2" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b54bd3bbb1dd23f0b39035237e19a43fea2f97a" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed813ac279d9ca2d50ecafacd9e1c9ad52216ebc" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c2a2da1da02f59d5074add1e602cd374dd2f1fc" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ceb3ab88ea3e30a30b68e676bb8fce1c7214095" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c10ec8837a98aa61c7cf7cfe25f9f212b5cbccca" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8980e08379839c42bd1e26a2ca1551f3ab1ea67" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aea7754c731e2ac7097944ff575bd196aa0f0ad9" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="062c93848d0bffe76a4ef895f687ac4a5dbad343" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ed7adf17bc43889dab3c99ccb9462c05a3caea0" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0184daaa80a0a70a3b9f8b3b27f9f6212b5ae868" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c45ab08701c1713bed6b7203fcbf3d5560520a3" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83a146a7965eaaada34b06c6909383e8ca125030" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9e6aa8b52991d4c56bfe6cbd2e6fc17fa09366d" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e13f526cf574ae848e5a5112608b6c60403391b" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ea5646b63d3a10fe87e5cf954ff1e5835f96be3" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c17f23e9fde00bbf1138045359b151fec27ff8f8" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a95908beba340c457a80ce1572508c353ac50ba7" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbf6f5ac7e142a8ffa959a06bdef89a93aac44a2" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77b2aa17b6607af7fe6c038f5d94ae8696030287" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bea172e037085e827dd0e0b1a76e2c9ac5bc931c" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="973d4fb3c4d7d78cedd937376066362331627f09" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18cbfbbee155efc2ee85453e9472108b1f3052c5" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42f4d48cf8a8471582867ac36d5ec7bed485b3ec" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f7b994dcd237a2684c5b6588c9df2351fc9a527" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;), &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db5c8e3d3f7e3acdd12c9246d2a29efd7aa98471" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="626f767937ccb534509bad7698f6349523904727" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a670dcf33aa506fc22ddc640404d132a7a8635aa" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70390796de688bf7b7002d9a8424383ea0b9bed3" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="833976c5692249a2f83d4d1a73c467ce4f2d488e" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db401cae383d9e6a6f94e6c52eac27035b9224fe" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f3963285df9a716c11904cdd5535b1a6a32d810" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;], &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51026b1e6ba67e4bf65c43f0bd8c6ef7b60e7c47" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a14e117381824e6bce15d1b4e8df6730c82fcf3" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37a935f54f64481b29e2c3bfc270cabcd76d5ed0" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c62bb1fa6fcfac6a5692b54233c8d94cc8dad171" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1692dfd861f96cbb3cd1b7d535b5e35b4037dfff" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dba7ca0502f35c925125859149e9d51da90d414f" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71ad16b03d89df0892a99c908018145c72fc5873" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="170409061ede4aa88888c201dfb55ee48573817d" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ce97676c184598c49c2f568c8353792258636e3" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34ec8d1b0c9e218b3fe2f4c8298afb9b233bb49a" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8a7e5ce0e40008aafd75322b44aa341bb21fce9" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fd49b860c7ca606a1433b77b2b4d7680a55c119" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddb907bcd788eb8417aadcb211bf303e72502145" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8ac225633c56ee43e04522651b88a031bada1f4" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26a41e034e2d191d9a964f2e620547f5ae8b6e6c" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09bbd2c0ff822314468cb48470023fab4db92f86" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93c30a265d8682e6387f1a0e2253a3019e3c186b" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="374dba0f547b722b6ddba453028edf94f2ac21cf" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ba817cf4d90a6021b22ccadf1920d00e3466303" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="922ae08868a8b82ce5f1016256a3a9dd70ece333" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="700d80a5363fedb9b5e954247380c5d0a61eb660" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddd1a48ad9852dae656df5708ceff037a80fd118" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4528ed202515636688c2f908818d4788002eb58" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb710b89ae38e1e4fc0db15b301383506b4742ab" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00e591199dc28e79ef09006ffc1e1fd8fd00d3ee" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="660b78aa37eb45e149abe417bf171896bef46019" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d58860ea0c5f7c4d560b2701d0d55fb87b1907e" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af5371888e2c27908bd0acb3c65e4c4db2602420" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="448a0aec9bd3b13c238d04ed122edd944923effa" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="085242d18a92d4e5bf486ca2af024212e7351f38" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35ca8d6cee2b619f2b5f77932b6d01771916979a" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0004bc17ee173f1c24c7dfcf844d41671ced7651" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6212f2e9b8777b31353449f8ed4367862a3a84a" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a87979568293101f36ba288721632bee04f65ea2" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b6c7d2bc983ba2a8e4ce36f98061b77d38e1d27" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dae0286f29c42c594ef1775f616caced1d3c8b42" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de761a999ac0dce03e985f6d66dbe9570806054b" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ccc2a87505fba78ddcb7c3943d3387d1a894ce5" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aba443e7c4d40b3affd2a01fa54e31d1fc8faa2b" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b159d60e9b955fb97948fa64780acd1685e94267" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb64215045514b92a84d0fa359cf0fca6f2dff74" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2643907aa3a16babb154f4e5e28a4430f0a3bc2f" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="754b755bb85fa69a2394f1bd1a2be22a23e35fa2" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14c88e160c01f6424ce40d8d492400e688d01797" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca30d9ae19c84cca52743bbb759c7d3575eac2bb" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37a829fba7ee00326aa3350f6f1dd1cd14c21daa" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="715ace0db7dcf8929d99dc867d3cd5de92def769" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d9206724a55af36e39717bef6fa32309b596d21" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62adbfea6e235db88747db9ae5cabc154b961f31" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11175481d97f6347e3a9c9f88005ea549eb250f0" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d471849e9293d6c910915ccc2e927a75c132e5b1" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1acc86e894b25358a3f81d9d5db365d3e6d4a726" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a30224bed8edad74964318770247f1bf3b2f298" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e201623e5a4694ed8ff35f21ff80655a0b948502" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebc4c8c1b6792237a2caeec71de36a729a3602d9" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="220ad958529db071bec49ad84e5bb65734eb323c" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5edd5f49ff17d6db1c6da1c6b46db9d1a0f451af" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e87a31adf7e669baa5cc6b4931c1c72a35d5d0f1" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df84d02c5a29b3de4e8163013f7967684c470527" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d1187328b284fe89e847bca97098d1469940394" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7372d183851632bc8677fe1149b7c8a6584a0b80" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c62321212cdcf7391b3e66eb2ed85219f70adcef" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aac61a72bc5d231c9b039b3b431dd150bd1b6c71" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3780bd83f906d7a4171e07092549337044f4648" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d10ae460b7b813a01d6649c2fc860077c8306086" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeb3f7d244d788f4a65827f804d0c5b28965b51e" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f160574436d83957ca866b1cc59228c13171b6ca" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c65b0be9ba320cf2b37ff964b36aaf71b2d5137" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e46f44b24a17fae7e8918ee109c049fe750f5cfc" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f22e75203b7b73f457b2226b927d24d606dd563a" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5119af03f9add67227f5e2219459be17a0df1a9" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ae2b03ec3dc8ff74eb7948886dd0d763059295a" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="262a6136cd33f492bf8bcdd50dcc08854fe52a7b" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe7488ae5ff7e10d56470a23d86efa637327b0bb" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38366653245fde2ea6dce41e56af81abe96346f1" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11d6ccc9b2cdabf55817c75f212a09aca11ba6ce" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71850776ed3c76a054c468d4b33031dc597a1613" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89ea5c6a43f20d322fbb6648e3430fe301876608" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="276d7b12c7493026795b9fa56ccb4c4dc44e3bf4" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9760e9efee8ace3f1555b703296c7d7802550b21" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60ad77359e716b3dae5f561570dcc794136b7af8" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e4bcb711b6e3bdc850e6875a931f48fc327d64c" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16fd1e7fcf23170970b6506bf060bfceb78d4de3" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef3e4a6b28b96ea04c19e44c6a6b4197ddcea760" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66d13da92eb7aa3de82b2418ca4db01aa467a32d" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b8b781abb69562fd1fe669a1bb4e1d28baff778" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0236ada131ad20eb3e2b9d472cabd0a6af78a781" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="314b2e10ffc459efe72f4beb4f293beb3a3a22ba" translate="yes" xml:space="preserve">
          <source>def collectFirst[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.collectFirst.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9ab81adf1d5871b9da081e889974aeffca6f1f8" translate="yes" xml:space="preserve">
          <source>def collect[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47e6c9edcc7bc0ef58823c4becf5a71373f8651c" translate="yes" xml:space="preserve">
          <source>def collect[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;mutable.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="615cf61538374074ec60b1d6a6c3f35d116f7de9" translate="yes" xml:space="preserve">
          <source>def collect[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;mutable.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c55a501ab1becbce2ae121293d1575404895ce6" translate="yes" xml:space="preserve">
          <source>def collect[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;), &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2c9b06793d95950d5d57acb4ad078526981ffaa" translate="yes" xml:space="preserve">
          <source>def collect[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;), &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f55e8fd8a6c7f63425cfd6333c3a4c54a3cd22fd" translate="yes" xml:space="preserve">
          <source>def collect[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b42a8d565453b487599c81804603a19b00c4137" translate="yes" xml:space="preserve">
          <source>def collect[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9c9eaaa1978392218b65af40a2c92a008793899" translate="yes" xml:space="preserve">
          <source>def collect[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47b176720e9369f78a7368d9602bdf9b89825dd5" translate="yes" xml:space="preserve">
          <source>def collect[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27e43382f7e3c8e34f47f941f12552eb7ab5ef23" translate="yes" xml:space="preserve">
          <source>def collect[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a210abc50a7088768ca2d505bb9368106f81a0d" translate="yes" xml:space="preserve">
          <source>def collect[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="639249c09bbec43fe3d5be8d2403c18009e4e5b6" translate="yes" xml:space="preserve">
          <source>def collect[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="331c29978f7a506c83adeb73b785cd46a23ea691" translate="yes" xml:space="preserve">
          <source>def collect[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8160e9751d62d5066a45b476993f4d3fd388e637" translate="yes" xml:space="preserve">
          <source>def collect[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e688a6d10609d1ceb738ed4c9fb42322235ba81" translate="yes" xml:space="preserve">
          <source>def collect[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8438bb501d095b08577e9bdca449b4721cb1deaa" translate="yes" xml:space="preserve">
          <source>def collect[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3e46b619be2e7c4523f10f01921c9283aac0bf1" translate="yes" xml:space="preserve">
          <source>def collect[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bda8707920619ccf1b8072870c2b8fd2ea98479d" translate="yes" xml:space="preserve">
          <source>def collect[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c87c085e90cf0783c79b7fb6303403fd989b8e21" translate="yes" xml:space="preserve">
          <source>def collect[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e123f44eb67b99f865496f62990af3809bd5d82" translate="yes" xml:space="preserve">
          <source>def collect[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c0e2737d5d267ec4e81af8933dfc7f8bb9d525f" translate="yes" xml:space="preserve">
          <source>def collect[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b4f79239527eeb54ffa0bd6cd691032867a2351" translate="yes" xml:space="preserve">
          <source>def collect[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c264a1045e125588ea8ff9d9e3a3fccffc8347b4" translate="yes" xml:space="preserve">
          <source>def collect[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a44d7a1605649b8d38ed6b3cd7e21d6c7ae1c6c7" translate="yes" xml:space="preserve">
          <source>def collect[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bae8e3e99e46faeb6bf75e7d16f27a692f46b98e" translate="yes" xml:space="preserve">
          <source>def collect[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0e6c9a2afbb47793d5ea6032c116eca0654e0df" translate="yes" xml:space="preserve">
          <source>def collect[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1f256587b130daae7f5eae2676282150b63d6e7" translate="yes" xml:space="preserve">
          <source>def collect[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcf7cc85216a5fcd161bfeeb0575a30f57e70599" translate="yes" xml:space="preserve">
          <source>def collect[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad4706ef43d6efd311aaa7a69becfa9cc0baaf51" translate="yes" xml:space="preserve">
          <source>def collect[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93024c3fed9e94d9081fd06b6a6a274c15ae221c" translate="yes" xml:space="preserve">
          <source>def collect[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="360b9703b832857cfc3014a149dfbd9dd48ac0dc" translate="yes" xml:space="preserve">
          <source>def collect[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8109c47806f9ae6ff6418f7af51f53033cb72b05" translate="yes" xml:space="preserve">
          <source>def collect[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2732299e1f6540d4fdf877ece06c0fbf58d78086" translate="yes" xml:space="preserve">
          <source>def collect[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c58ed83244d2e2a41ce7ae0bba251e0ec80867ff" translate="yes" xml:space="preserve">
          <source>def collect[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;]), &lt;span name=&quot;scala.collection.IterableOps.collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="235e4a62d6928cf7e3357f6ba6a4da503a562003" translate="yes" xml:space="preserve">
          <source>def collect[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;), &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a750b8d5aff045d3bb121fffd9d12455967e4eb" translate="yes" xml:space="preserve">
          <source>def collect[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63c7362bf9f1227f2613e96c1c85cffbba638a76" translate="yes" xml:space="preserve">
          <source>def collect[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ddf3eac4ec9233f20350b58d32bc43de1834c9f" translate="yes" xml:space="preserve">
          <source>def collect[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f7c531f61398c10ed8aa8436c96ed92d71e1785" translate="yes" xml:space="preserve">
          <source>def collect[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bf5c81b25feab056e7e530638108d0af7d78b3a" translate="yes" xml:space="preserve">
          <source>def collect[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9073f2fe8ee3ffd50d6b051d69e03cfea2ecee60" translate="yes" xml:space="preserve">
          <source>def collect[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec0fe8ac6b5cc11f85e5a1954550dca90f9c2c1d" translate="yes" xml:space="preserve">
          <source>def collect[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3475a41eab7f36d78ccf0d071a785a2992aacee8" translate="yes" xml:space="preserve">
          <source>def collect[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7340f7d78439524b23f63c20bde08e88f07192a5" translate="yes" xml:space="preserve">
          <source>def collect[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2518ed90a6702d5e148d4503ff1ae9f2445a949" translate="yes" xml:space="preserve">
          <source>def collect[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e60bd89ee4d2ff0a9e471f5d9eff0956ef338ded" translate="yes" xml:space="preserve">
          <source>def collect[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOps.collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
