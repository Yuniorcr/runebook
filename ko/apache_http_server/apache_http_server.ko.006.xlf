<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="apache_http_server">
    <body>
      <group id="apache_http_server">
        <trans-unit id="4812266c1a251b00701253af3f416406e99586be" translate="yes" xml:space="preserve">
          <source>It is recommended that you do this sort of postprocessing of your log files on some machine other than the production web server machine, in order that this activity not adversely affect server performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fe1d1198f9bb54d1c400a1fd843d42466d3c743" translate="yes" xml:space="preserve">
          <source>It is recommended that you set up a new group specifically for running the server. Some admins use user &lt;code&gt;nobody&lt;/code&gt;, but this is not always possible or desirable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf988796797c4db7fbde2c68fe722bf3ea281fb9" translate="yes" xml:space="preserve">
          <source>It is recommended that you use an IP address instead of a hostname (see &lt;a href=&quot;../dns-caveats&quot;&gt;DNS caveats&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="556e25f532192f3773bb464cfe7b65fab197ff27" translate="yes" xml:space="preserve">
          <source>It is recommended that you use an IP address instead of a hostname in the &amp;lt;VirtualHost&amp;gt; directive (see &lt;a href=&quot;../dns-caveats&quot;&gt;DNS caveats&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dad3255f0c5c6c6a3ca3d89eca6851f65a2faf3c" translate="yes" xml:space="preserve">
          <source>It is recommended to not reduce &lt;code&gt;ThreadStackSize&lt;/code&gt; unless a high number of threads per child process is needed. On some platforms (including Linux), a setting of 128000 is already too low and causes crashes with some common modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="194a1bcf0683d12efd161b6bdb757c9c81bc6f03" translate="yes" xml:space="preserve">
          <source>It is safe to specify protocols that are unavailable/disabled. Such protocol names will simply be ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4d09623b9855a7b8e855213fe66f6e4dac469e2" translate="yes" xml:space="preserve">
          <source>It is safer to avoid placing CGI scripts under the &lt;code&gt;&lt;a href=&quot;core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt; in order to avoid accidentally revealing their source code if the configuration is ever changed. The &lt;code&gt;ScriptAlias&lt;/code&gt; makes this easy by mapping a URL and designating CGI scripts at the same time. If you do choose to place your CGI scripts in a directory already accessible from the web, do not use &lt;code&gt;ScriptAlias&lt;/code&gt;. Instead, use &lt;code&gt;&lt;a href=&quot;core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;core#sethandler&quot;&gt;SetHandler&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;core#options&quot;&gt;Options&lt;/a&gt;&lt;/code&gt; as in:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3edb400e505dac5674ae6d8e93b8e4ff765fafd8" translate="yes" xml:space="preserve">
          <source>It is strongly suggested to review the concept of a &lt;a href=&quot;#workers&quot;&gt;Worker&lt;/a&gt; before proceeding any further with this section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="029fc7f7a7030d935aeae53e51e3fb993271b16d" translate="yes" xml:space="preserve">
          <source>It is therefore important, if you are using &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; directives in one of these contexts, that you take explicit steps to avoid rules looping, and not count solely on the [L] flag to terminate execution of a series of rules, as shown below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54e3c82fcaba7338cb179ede4cbde9bbd2b094eb" translate="yes" xml:space="preserve">
          <source>It is up to dbd user modules to use the prepared statements and document what statements can be specified in httpd.conf, or to provide their own directives and use &lt;code&gt;ap_dbd_prepare&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b34e785896c1bb36f62f6e05c5b6a8357cd25f8" translate="yes" xml:space="preserve">
          <source>It is usually a good practice to grant the user the Apache service runs as read and execute (RX) access to the whole Apache2.4 directory, except the &lt;code&gt;logs&lt;/code&gt; subdirectory, where the user has to have at least change (RWXD) rights.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b70d775e50c806e6898f32931bb781bd4d50397e" translate="yes" xml:space="preserve">
          <source>It may be worth setting up a dedicated address for this, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2206dd7a4de6ec593f95085c5d0b08dc7bd34575" translate="yes" xml:space="preserve">
          <source>It should be up to the client creating the request, or the origin server constructing the response to decide whether or not the content should be cacheable or not by correctly setting the &lt;code&gt;Cache-Control&lt;/code&gt; header, and &lt;code&gt;&lt;a href=&quot;mod/mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; should be left alone to honor the wishes of the client or server as appropriate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab4080d21f6882ce7cea52c2e177c9d764a96938" translate="yes" xml:space="preserve">
          <source>It should never be used for XML, nor well-formed HTML.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcdb2814ae75cb0d08f5a988640d561b19b64a40" translate="yes" xml:space="preserve">
          <source>It specifies the directory path and file name of the trusted CA certificates and/or system wide client certificates &lt;code&gt;&lt;a href=&quot;mod_ldap&quot;&gt;mod_ldap&lt;/a&gt;&lt;/code&gt; should use when establishing an SSL or TLS connection to an LDAP server. Note that all certificate information specified using this directive is applied globally to the entire server installation. Some LDAP toolkits (notably Novell) require all client certificates to be set globally using this directive. Most other toolkits require clients certificates to be set per Directory or per Location using LDAPTrustedClientCert. If you get this wrong, an error may be logged when an attempt is made to contact the LDAP server, or the connection may silently fail (See the SSL/TLS certificate guide above for details). The type specifies the kind of certificate parameter being set, depending on the LDAP toolkit being used. Supported types are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb684bd5bc4a69f58a3e67c109c20da186dcf796" translate="yes" xml:space="preserve">
          <source>It specifies the directory path, file name or nickname of a per connection client certificate used when establishing an SSL or TLS connection to an LDAP server. Different locations or directories may have their own independent client certificate settings. Some LDAP toolkits (notably Novell) do not support per connection client certificates, and will throw an error on LDAP server connection if you try to use this directive (Use the LDAPTrustedGlobalCert directive instead for Novell client certificates - See the SSL/TLS certificate guide above for details). The type specifies the kind of certificate parameter being set, depending on the LDAP toolkit being used. Supported types are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53e41961e07365004cce858b022debaa06729635" translate="yes" xml:space="preserve">
          <source>It supports an unlimited number of rules and an unlimited number of attached rule conditions for each rule to provide a really flexible and powerful URL manipulation mechanism. The URL manipulations can depend on various tests: server variables, environment variables, HTTP headers, time stamps, external database lookups, and various other external programs or handlers, can be used to achieve granular URL matching.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba498f0152f1fbdfbcb23b3ad7bfb216c3064fb0" translate="yes" xml:space="preserve">
          <source>It's recommended that you undefine a macro once you've used it. This avoids confusion in a complex configuration file where there may be conflicts in variable names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ffe9ac1edd755341bfb383df71948021987304b" translate="yes" xml:space="preserve">
          <source>It's strongly recommended that the magic username '&lt;code&gt;anonymous&lt;/code&gt;' is always one of the allowed userIDs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5429ea975bc776f7aaef53cde678ba4ebfa7069c" translate="yes" xml:space="preserve">
          <source>JAVA still being ported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e027e57610f85225767aafbbf23fed7457e55828" translate="yes" xml:space="preserve">
          <source>Java</source>
          <target state="translated">Java</target>
        </trans-unit>
        <trans-unit id="5cef758291a02c974c15e53c0299ecc215cfd868" translate="yes" xml:space="preserve">
          <source>Just as multiple authentication providers can be implemented, multiple authorization methods can also be used. In this example both file group authorization as well as LDAP group authorization is being used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0f225524d2e8f6551e5df104bba5c94ffce1fe9" translate="yes" xml:space="preserve">
          <source>Just before passing a request to the configured FastCGI server, the core of the web server sets a number of environment variables based on details of the current request. FastCGI programs often uses these environment variables as inputs that determine what underlying scripts they will process, or what output they directly produce.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cf65b5b91ac9feda9bee54291e771e3bc562a85" translate="yes" xml:space="preserve">
          <source>Just displays the contents of the DBM file. If you specify a &lt;var&gt;username&lt;/var&gt;, it displays the particular record only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06ad39e8e742c96fbbb8ed569495d1c9a612f4e5" translate="yes" xml:space="preserve">
          <source>Just like LuaHookTranslateName, but executed at the fixups phase</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4e89b86631da3915b94ab2c6cd96276cd8904fb" translate="yes" xml:space="preserve">
          <source>Just the configuration directives, not sorted by module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aa6b9ce5252e56bf06b425d5e9844d6b6dc51f4" translate="yes" xml:space="preserve">
          <source>KEY_BASE64 - PEM encoded private key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8f61009ea455b96610f986ea949cb7397023e94" translate="yes" xml:space="preserve">
          <source>KEY_DER - binary DER encoded private key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc9414ac7bf68c65c4b3fe1b3b73e3e0bdaca699" translate="yes" xml:space="preserve">
          <source>KEY_PFX - PKCS#12 encoded private key (Novell SDK)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc5a4247990561eef6a4a3851b9244cb1c30d1e4" translate="yes" xml:space="preserve">
          <source>Keep Alive handling is the most basic improvement from the worker MPM. Once a worker thread finishes to flush the response to the client, it can offload the socket handling to the listener thread, that in turns will wait for any event from the OS, like &quot;the socket is readable&quot;. If any new request comes from the client, then the listener will forward it to the first worker thread available. Conversely, if the &lt;code&gt;&lt;a href=&quot;core#keepalivetimeout&quot;&gt;KeepAliveTimeout&lt;/a&gt;&lt;/code&gt; occurs then the socket will be closed by the listener. In this way the worker threads are not responsible for idle sockets and they can be re-used to serve other requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31ef692a19033263a2340984cb46c79dc42e9cc5" translate="yes" xml:space="preserve">
          <source>Keep in mind that the same parameter key can have a different meaning depending whether it is applied to a balancer or a worker, as shown by the two examples above regarding timeout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ccd765f4ee22fd63f0c132cfef3b0994a43088a" translate="yes" xml:space="preserve">
          <source>Keep the console window open on error so that the error message can be read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1730198d7be2df9858fcc25794a780bef9142ae7" translate="yes" xml:space="preserve">
          <source>Keep the request body instead of discarding it up to the specified maximum size, for potential use by filters such as mod_include.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73546cb1ac49522c64f3419ec168e19ae1745e7f" translate="yes" xml:space="preserve">
          <source>Keep this turned off unless you need it! Adding variables to &lt;code&gt;ProxyPass&lt;/code&gt; for example may lead to the use of the default mod_proxy's workers configured (that don't allow any fine tuning like connections reuse, etc..).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30d91104cf8a6e4b00be1f33abe20fe5c9566ff9" translate="yes" xml:space="preserve">
          <source>Keep track of extended status information for each request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dc1ba3041a96d563647ab2b5f68de11612f6496" translate="yes" xml:space="preserve">
          <source>Keep up to Date</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28448a4fde77f41b6b6323c1f4ae45a632587a44" translate="yes" xml:space="preserve">
          <source>Keep your rewrite map program as simple as possible. If the program hangs, it will cause httpd to wait indefinitely for a response from the map, which will, in turn, cause httpd to stop responding to requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b00a16396266bae3bce8442a4e181102bbd2a0a" translate="yes" xml:space="preserve">
          <source>Keep-Alive requests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41d7a3a4338312412258517850785e2023dfca81" translate="yes" xml:space="preserve">
          <source>Keep-alive</source>
          <target state="translated">Keep-alive</target>
        </trans-unit>
        <trans-unit id="8775d89e9cb6ceaf6f9a68c0a7a2eaf95ccb0a4a" translate="yes" xml:space="preserve">
          <source>KeepAlive Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="478e31722ea68c674a167a8cb1261d4a822e3c58" translate="yes" xml:space="preserve">
          <source>KeepAliveTimeout Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcc276b676e70e7370f80c783d512d36815b6efe" translate="yes" xml:space="preserve">
          <source>Keepalive time for idle connections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a22b51540eb7364f0b9085ef678186bf02aa9095" translate="yes" xml:space="preserve">
          <source>Keeping sessions on the browser</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6194ddf2df72098912edc04528c2a3c536199b59" translate="yes" xml:space="preserve">
          <source>Keeping sessions on the server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80d17a872105dc2a32d842ab27fae2b73fc34490" translate="yes" xml:space="preserve">
          <source>KeptBodySize Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e0f0a39601d2db6d12eebce00c6f7bfeb37b299" translate="yes" xml:space="preserve">
          <source>Key Ex.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1713c9d1e43ef7de9c9fcc05ebda67dfed8de2fa" translate="yes" xml:space="preserve">
          <source>Key Exchange Method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e88ffc1d4510f1d2c113f60538e720631351c3d" translate="yes" xml:space="preserve">
          <source>Keys are more secure when they are long, and consist of truly random characters. Changing the key on a server has the effect of invalidating all existing sessions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84cebd6c527d5cc04572a1db246e5d82a02f4222" translate="yes" xml:space="preserve">
          <source>Keywords may only be separated by a comma; &lt;em&gt;no whitespace&lt;/em&gt; is allowed between them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="616ae0e516f073c066a59a8a38d5b52110f5407c" translate="yes" xml:space="preserve">
          <source>Known Limitations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="719fb592fff2f0043580d0373cf7239a4c92b368" translate="yes" xml:space="preserve">
          <source>Known to support the &lt;a href=&quot;http://www.openldap.org/&quot;&gt;OpenLDAP SDK&lt;/a&gt; (both 1.x and 2.x), &lt;a href=&quot;http://developer.novell.com/ndk/cldap.htm&quot;&gt; Novell LDAP SDK&lt;/a&gt; and the &lt;a href=&quot;http://www.iplanet.com/downloads/developer/&quot;&gt;iPlanet (Netscape)&lt;/a&gt; SDK.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d160e0986aca4714714a16f29ec605af90be704d" translate="yes" xml:space="preserve">
          <source>L</source>
          <target state="translated">L</target>
        </trans-unit>
        <trans-unit id="644680092d489bf5e32b499a3677c7f649b0d0a3" translate="yes" xml:space="preserve">
          <source>L=Snake City</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64b8a7e20b4f639e91be58a1c2dfc4878f384e11" translate="yes" xml:space="preserve">
          <source>LABEL</source>
          <target state="translated">LABEL</target>
        </trans-unit>
        <trans-unit id="6b4ea09c602750b0a244d8e174179eb5b33473f9" translate="yes" xml:space="preserve">
          <source>LDAP Cache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29a1e12129d6dd9940768a6b0ee5445593b41e78" translate="yes" xml:space="preserve">
          <source>LDAP Connection Pool</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dfa075d8945f141f8785186c93724f2caa52c71" translate="yes" xml:space="preserve">
          <source>LDAP Libraries for C</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48bb39f003832ac2d27dad2fa617ea675531e433" translate="yes" xml:space="preserve">
          <source>LDAP attributes used to identify the user members of groups.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc256d1e15de346fb4d0656d919b176aef9000ad" translate="yes" xml:space="preserve">
          <source>LDAP connection pooling and result caching services for use by other LDAP modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c057e282c9296bd8a581bbafab48e15782497983" translate="yes" xml:space="preserve">
          <source>LDAP connections are pooled from request to request. This allows the LDAP server to remain connected and bound ready for the next request, without the need to unbind/connect/rebind. The performance advantages are similar to the effect of HTTP keepalives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29f9c07186ce742ae3cdbf648ed8da1a6720b604" translate="yes" xml:space="preserve">
          <source>LDAP connections can keep track of the ldap client credentials used when binding to an LDAP server. These credentials can be provided to LDAP servers that do not allow anonymous binds during referral chasing. To control this feature, see the &lt;code&gt;&lt;a href=&quot;#ldapreferrals&quot;&gt;LDAPReferrals&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#ldapreferralhoplimit&quot;&gt;LDAPReferralHopLimit&lt;/a&gt;&lt;/code&gt; directives. By default, this feature is enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b49948d9323e88bbfcd2b71f2ce058cecc8eb63a" translate="yes" xml:space="preserve">
          <source>LDAP errors such as timeouts and refused connections are retryable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52783a5cfaedf6263f76038d8cb4f49abc83ceae" translate="yes" xml:space="preserve">
          <source>LDAP result cache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fc96552852e6ef15f4a8a37ca40fb8d6e646c9d" translate="yes" xml:space="preserve">
          <source>LDAPCacheEntries Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9531c779c963850b89b2b43c2eeefd7c416b5e9" translate="yes" xml:space="preserve">
          <source>LDAPCacheTTL Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1979915839a930fbdc98a888602cbef8a5ba490b" translate="yes" xml:space="preserve">
          <source>LDAPConnectionPoolTTL Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b501f21bacdc2ae652f563f48060f5d2af9681f" translate="yes" xml:space="preserve">
          <source>LDAPConnectionTimeout Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e38a847bb559df810735b5fa6252a8d5625d0e08" translate="yes" xml:space="preserve">
          <source>LDAPConnectionTimeout is only available when the LDAP client library linked with the server supports the LDAP_OPT_NETWORK_TIMEOUT (or LDAP_OPT_CONNECT_TIMEOUT) option, and the ultimate behavior is dictated entirely by the LDAP client library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66f202dad8e82ffaf103098e4130e4e5b28da38e" translate="yes" xml:space="preserve">
          <source>LDAPLibraryDebug Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c0c67a89b4bab0d9c90324c72f7b01a457ac0b8" translate="yes" xml:space="preserve">
          <source>LDAPOpCacheEntries Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8abb353ed8237deaade07b7157b9e01a3f5d49b7" translate="yes" xml:space="preserve">
          <source>LDAPOpCacheTTL Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b0250a49822e386a83f46411e20f586f7b69d33" translate="yes" xml:space="preserve">
          <source>LDAPReferralHopLimit</source>
          <target state="translated">LDAPReferralHopLimit</target>
        </trans-unit>
        <trans-unit id="f7ffee5764d5275c5a5b12fede73fe1a355f7324" translate="yes" xml:space="preserve">
          <source>LDAPReferralHopLimit Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f57d620d72f81c3a1a8ab2c9d8d76f50d7249c27" translate="yes" xml:space="preserve">
          <source>LDAPReferrals</source>
          <target state="translated">LDAPReferrals</target>
        </trans-unit>
        <trans-unit id="cdcfb42a3baecaa58ceac3483d5ee8822b816ec4" translate="yes" xml:space="preserve">
          <source>LDAPReferrals Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a62517bf19de04c36cdb110e3a1985a9ee3516f7" translate="yes" xml:space="preserve">
          <source>LDAPRetries Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5435a60c03bcd2504d593a223358392927702fe5" translate="yes" xml:space="preserve">
          <source>LDAPRetryDelay Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e3b61f517741483b9803006939880142598a490" translate="yes" xml:space="preserve">
          <source>LDAPSharedCacheFile Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b62649f7625e1ae34990d7aa2af8a1c373e07a63" translate="yes" xml:space="preserve">
          <source>LDAPSharedCacheSize Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="658b3145762d4a0466cf2c0a585203ffda77b5ac" translate="yes" xml:space="preserve">
          <source>LDAPTimeout Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="682b2e5c3f66d54474063c85450d346ed5221a04" translate="yes" xml:space="preserve">
          <source>LDAPTrustedClientCert Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="725a8673a57c206ef315e3104d9e255aca7a74f2" translate="yes" xml:space="preserve">
          <source>LDAPTrustedGlobalCert Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1401e67c473d51efbbd03967719410b26f6b2f9" translate="yes" xml:space="preserve">
          <source>LDAPTrustedMode Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17b4feb0f6b038c037214feb1e31dc60821f3e3a" translate="yes" xml:space="preserve">
          <source>LDAPVerifyServerCert Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43808cdb8b3a1fb0a33ea340636c33469fcd6fba" translate="yes" xml:space="preserve">
          <source>LE Staging Setup</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c37eb4cb935a6017aaaaaab327837c7d9bbbc004" translate="yes" xml:space="preserve">
          <source>LOCK</source>
          <target state="translated">LOCK</target>
        </trans-unit>
        <trans-unit id="89b86ab0e66f527166d98df92ddbcf5416ed58f6" translate="yes" xml:space="preserve">
          <source>Language</source>
          <target state="translated">Language</target>
        </trans-unit>
        <trans-unit id="8bab785769b60a584536a98bdc3b1163f440f99b" translate="yes" xml:space="preserve">
          <source>Language Negotiation Exceptions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed4e69fad209f53f1bf8de50dc11a9030d1b57ee" translate="yes" xml:space="preserve">
          <source>Language to charset conversion configuration file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="236c1868784fe00723619ff8a1d4af7d4e279c10" translate="yes" xml:space="preserve">
          <source>Language/Country Codes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a1cf82a114f324ad62bd1ba9e03bcddf4d81535" translate="yes" xml:space="preserve">
          <source>LanguagePriority</source>
          <target state="translated">LanguagePriority</target>
        </trans-unit>
        <trans-unit id="d4762f4eb97e67d21394c70fb3dc56a7b26078b5" translate="yes" xml:space="preserve">
          <source>LanguagePriority Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56028cb07a329d8197076651bd192ea3670a0996" translate="yes" xml:space="preserve">
          <source>Last but not least, pushes happen only when the client signals its willingness to accept those. Most browsers do, some, like Safari 9, do not. Also, pushes also only happen for resources from the same &lt;em&gt;authority&lt;/em&gt; as the original response is for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7461e5712b19eef4e37ecc8c4c7b879e9ecd8bb" translate="yes" xml:space="preserve">
          <source>Last modified column</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35a97387a1225e207b04ed5938ff9fbb2b79d088" translate="yes" xml:space="preserve">
          <source>Last, but not least, there are some specifics of the syntax to be used in this directive:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4312b9cdc22a0d8cf25ab213c9d034cee9ce16ee" translate="yes" xml:space="preserve">
          <source>Last-Modified</source>
          <target state="translated">Last-Modified</target>
        </trans-unit>
        <trans-unit id="39d80a35cf2d30d3ff98c1978359ca473152eb9d" translate="yes" xml:space="preserve">
          <source>Last-match. If this rule matches, no more rules are applied (note that this happens automatically for HTML links).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16c1b34903fa96146138af3f531778dce3c5a9fd" translate="yes" xml:space="preserve">
          <source>Later in your ruleset you might check for this environment variable using a RewriteCond:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1809b607431a61442b14e6a1e3ca2106b460556b" translate="yes" xml:space="preserve">
          <source>Later version of ajp13, will transport additional methods, even if they are not in this list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26f5ffd0d51e2f49ef8ba0981774d6cd798d90ec" translate="yes" xml:space="preserve">
          <source>Legacy URL pathname for a name-based virtual host that is accessed by an incompatible browser</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf5c187685b1e666ceca9c7f4ca6ca6eb49fccee" translate="yes" xml:space="preserve">
          <source>Legacy expression syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed776f6f8af425b23e10f114b554b5667edcb78d" translate="yes" xml:space="preserve">
          <source>Let's Encrypt offers, right now, two such URLs. One for the real certificates and one for testing (their staging area, at https://acme-staging.api.letsencrypt.org/directory). In order to have &lt;code&gt;&lt;a href=&quot;mod_md&quot;&gt;mod_md&lt;/a&gt;&lt;/code&gt; use this testing service, configure your server like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de9ff64ba2eb5976348851e41bfab4ae91d7b8e5" translate="yes" xml:space="preserve">
          <source>Let's examine each of those directives individually. The &lt;code&gt;&lt;a href=&quot;../mod/mod_authn_core#authtype&quot;&gt;AuthType&lt;/a&gt;&lt;/code&gt; directive selects that method that is used to authenticate the user. The most common method is &lt;code&gt;Basic&lt;/code&gt;, and this is the method implemented by &lt;code&gt;&lt;a href=&quot;../mod/mod_auth_basic&quot;&gt;mod_auth_basic&lt;/a&gt;&lt;/code&gt;. It is important to be aware, however, that Basic authentication sends the password from the client to the server unencrypted. This method should therefore not be used for highly sensitive data, unless accompanied by &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt;. Apache supports one other authentication method: &lt;code&gt;AuthType Digest&lt;/code&gt;. This method is implemented by &lt;code&gt;&lt;a href=&quot;../mod/mod_auth_digest&quot;&gt;mod_auth_digest&lt;/a&gt;&lt;/code&gt; and was intended to be more secure. This is no longer the case and the connection should be encrypted with &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e735bfff8811f18ef1ef9c87e52c2c74f79e3fb" translate="yes" xml:space="preserve">
          <source>Letting more than one person in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78805509a28f765f4f05b2f0ae17acc25dd1d7ab" translate="yes" xml:space="preserve">
          <source>Lexicographically equal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71a2723fad4da723674f7feae2d576f9e4973149" translate="yes" xml:space="preserve">
          <source>Lexicographically follows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06fee2cf9600c66acacfdd7ee7c24d930ba30b55" translate="yes" xml:space="preserve">
          <source>Lexicographically greater than or equal to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc7d74da8b1427c2c2d61d62ddbf6fb79d090b9f" translate="yes" xml:space="preserve">
          <source>Lexicographically less than or equal to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a73ac0d4e3d929f490affe4d78b25cce04f89ee2" translate="yes" xml:space="preserve">
          <source>Lexicographically precedes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec793eb7fd1d6c9106d97e622f4fcbf89e666960" translate="yes" xml:space="preserve">
          <source>Licensed under the Apache License, Version 2.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d33f31baff91c27917dcfcd7222cc394cee13fd" translate="yes" xml:space="preserve">
          <source>Lifetime</source>
          <target state="translated">Lifetime</target>
        </trans-unit>
        <trans-unit id="eb6f1765c511354cfeb8e567488e332d7ac72bc2" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;--with-gdbm&lt;/code&gt;, but searches for a Berkeley DB installation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2787a7e86a518ad7fb52024409293d8f30fe164" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;--with-gdbm&lt;/code&gt;, but searches for a New DBM installation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96a87baa8a873d0a27080d70c177c9ec19d0f77c" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;Inherit&lt;/code&gt; above, but the rules from the parent scope are applied &lt;strong&gt;before&lt;/strong&gt; rules specified in the child scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fbdbcd23f692b69b70820060ec72bf2ffa0de65" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;InheritDown&lt;/code&gt; above, but the rules from the current scope are applied &lt;strong&gt;before&lt;/strong&gt; rules specified in any child's scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3a1d68bf0fb4ffaf48124958e3d38a2583a59b1" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;LuaHookTranslateName&lt;/code&gt; but executed at the map-to-storage phase of a request. Modules like mod_cache run at this phase, which makes for an interesting example on what to do here:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f8d61cbb05d41504ae0193da79bad1761156539" translate="yes" xml:space="preserve">
          <source>Likewise, if the response includes the &quot;no-store&quot; option in a &quot;Cache-Control:&quot; header, it will not be stored unless the &lt;code&gt;&lt;a href=&quot;mod/mod_cache#cachestorenostore&quot;&gt;CacheStoreNoStore&lt;/a&gt;&lt;/code&gt; has been used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24d948e4bdbe5b8224bbc0dfbab1923fab00b98e" translate="yes" xml:space="preserve">
          <source>Limit</source>
          <target state="translated">Limit</target>
        </trans-unit>
        <trans-unit id="3c66efd5521c1c0c6060258a7bfa224657297c94" translate="yes" xml:space="preserve">
          <source>Limit (in bytes) on maximum size of an XML-based request body. A value of &lt;code&gt;0&lt;/code&gt; will disable any checking.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb14a4dbc774a35292b08adfb903a97fa7eb056c" translate="yes" xml:space="preserve">
          <source>Limit concurrent connections per process</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="012246b9785c1bf2dc37bfb8fe2311e052b9262f" translate="yes" xml:space="preserve">
          <source>Limit on the number of connections that an individual child server will handle during its life</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccac49dc9336627ea290dddde7ddf4da3d662e7c" translate="yes" xml:space="preserve">
          <source>Limit the size of the HTTP request line that will be accepted from the client</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="728b16c854d61e22ae68842ecee949017e8d3154" translate="yes" xml:space="preserve">
          <source>LimitInternalRecursion Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76dd41c1a4f7ae157a58cd71a6db72d11b182158" translate="yes" xml:space="preserve">
          <source>LimitRequestBody</source>
          <target state="translated">LimitRequestBody</target>
        </trans-unit>
        <trans-unit id="331843b0400d9f5ddae87ff2452273b50b04f9dd" translate="yes" xml:space="preserve">
          <source>LimitRequestBody Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6196272a227c4cce02efac336d058b75a9d741f" translate="yes" xml:space="preserve">
          <source>LimitRequestFieldSize Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dcf08d56c5530a51627c142f9e46a3e6fe7f068" translate="yes" xml:space="preserve">
          <source>LimitRequestFields Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d4939d74f49ee9d89a27de288b2041cee27b29c" translate="yes" xml:space="preserve">
          <source>LimitRequestLine Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="934c4de36ac32f08c9bb3adc8aa51179cf06bbda" translate="yes" xml:space="preserve">
          <source>LimitXMLRequestBody</source>
          <target state="translated">LimitXMLRequestBody</target>
        </trans-unit>
        <trans-unit id="590dfd45f530363dfebd553d5f42abecb84bf0d2" translate="yes" xml:space="preserve">
          <source>LimitXMLRequestBody Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7c04c64ed3f2a9374590c76c50d3b7f1b18e3da" translate="yes" xml:space="preserve">
          <source>Limitations</source>
          <target state="translated">Limitations</target>
        </trans-unit>
        <trans-unit id="c32bd2403d8b6f32946b24d8b20bbe8e43441661" translate="yes" xml:space="preserve">
          <source>Limiting CGI to special directories gives the admin control over what goes into those directories. This is inevitably more secure than non script aliased CGI, but only if users with write access to the directories are trusted or the admin is willing to test each new CGI script/program for potential security holes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25fca556ddaba3e1581909415deeedd315921d82" translate="yes" xml:space="preserve">
          <source>Limiting Resource Usage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2fcb79c35c1a82fd190e45f14bf807d4a612e5d" translate="yes" xml:space="preserve">
          <source>Limits the CPU consumption of processes launched by Apache httpd children</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90c647ac3055530617da63d468f8b1a93a966f5c" translate="yes" xml:space="preserve">
          <source>Limits the action of the speling module to case corrections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b76abae9146c9023b6fc8db48a6995703a84ec31" translate="yes" xml:space="preserve">
          <source>Limits the memory consumption of processes launched by Apache httpd children</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b685583333caf820d452cda79ab3ee0aeaf7d8c8" translate="yes" xml:space="preserve">
          <source>Limits the number of HTTP request header fields that will be accepted from the client</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e929fe060548846246737643c856d3361d2b9ed3" translate="yes" xml:space="preserve">
          <source>Limits the number of overlapping ranges to a compile-time default of 20.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfff028ae33085fed378c246149d13b7fa9935c8" translate="yes" xml:space="preserve">
          <source>Limits the number of processes that can be launched by processes launched by Apache httpd children</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9083f7cbb77202d70751066a99572f30343ef030" translate="yes" xml:space="preserve">
          <source>Limits the number of range reversals to a compile-time default of 20.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0133fbda7aee59ac4b6419ca783009763af0056" translate="yes" xml:space="preserve">
          <source>Limits the number of ranges to a compile-time default of 200.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6778d2c69d890a76a7f58e62a8f7216e6d2f93c2" translate="yes" xml:space="preserve">
          <source>Limits the size of an XML-based request body</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d1f8352a76145a50d27fa80ca2a10efbac7140b" translate="yes" xml:space="preserve">
          <source>Limits the size of the HTTP request header allowed from the client</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c7437487555148c7c81449a3c4480271f954bc1" translate="yes" xml:space="preserve">
          <source>Line-based regexp matching. Only applicable with R.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6686de40762cada1fdb82623e537c0a02405d8c7" translate="yes" xml:space="preserve">
          <source>Lingering Close</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="209af2e5542d91772bc2ac2a5b7739c2b8c9d935" translate="yes" xml:space="preserve">
          <source>Link headers in responses are either set by the application or can be configured via &lt;code&gt;&lt;a href=&quot;mod_headers&quot;&gt;mod_headers&lt;/a&gt;&lt;/code&gt; as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19681f8ea459c3395b76b73944bf46a4d07e7e4c" translate="yes" xml:space="preserve">
          <source>Link in the named object file or library</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dc316c867c19548791a8d7553506a56f2c21ac4" translate="yes" xml:space="preserve">
          <source>Links in the object file or library, and adds to the list of active modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac2ebc7ac96a993a47a116095618515cf161046b" translate="yes" xml:space="preserve">
          <source>Linux on x86</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3c1bfd87cbfcf248432942c161081a15039fe4f" translate="yes" xml:space="preserve">
          <source>Linux's &lt;code&gt;TCP_DEFER_ACCEPT&lt;/code&gt; does not support buffering http requests. Any value besides &lt;code&gt;none&lt;/code&gt; will enable &lt;code&gt;TCP_DEFER_ACCEPT&lt;/code&gt; on that listener. For more details see the Linux &lt;a href=&quot;http://man7.org/linux/man-pages/man7/tcp.7.html&quot;&gt; tcp(7)&lt;/a&gt; man page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac796df210307ef0f4c2510c0f89c1985843c9b0" translate="yes" xml:space="preserve">
          <source>List &lt;var&gt;socache&lt;/var&gt; ahead of the provider you're cacheing for in your &lt;code&gt;&lt;a href=&quot;mod_auth_basic#authbasicprovider&quot;&gt;AuthBasicProvider&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;mod_auth_digest#authdigestprovider&quot;&gt;AuthDigestProvider&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e55d881459b62373ce83c048c03820e3fac178b" translate="yes" xml:space="preserve">
          <source>List of additional client certificates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="812726760767935d2c046d196e7d456b1065c341" translate="yes" xml:space="preserve">
          <source>List of resources to look for when the client requests a directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19eac801003a9fa637a5d21a25b6f9abc069ca3a" translate="yes" xml:space="preserve">
          <source>List the URLs currently stored in the cache, along with their attributes in the following order: url, header size, body size, status, entity version, date, expiry, request time, response time, body present, head request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="627eec5b0f6123eeb78416657d90c91ed3972834" translate="yes" xml:space="preserve">
          <source>List the URLs currently stored in the cache. Variants of the same URL will be listed once for each variant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5224b84a1a610d3fb13a9c1a0a4cde9879b1d202" translate="yes" xml:space="preserve">
          <source>List the providers that are available on your server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbe7c7c93c4d12a55373e3a246ee0a259ed1cd22" translate="yes" xml:space="preserve">
          <source>Listen Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aef2f9c752b938ea83ab6d20e44058ce8c281a9" translate="yes" xml:space="preserve">
          <source>ListenBackLog Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70d8a9f946ca4ccea25e29b5017b2bf07621a254" translate="yes" xml:space="preserve">
          <source>ListenCoresBucketsRatio Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2747a17e132d3ac54abbddb16dde411fd5ccb4ca" translate="yes" xml:space="preserve">
          <source>Listing URLs in the Cache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c54d9baf62bc1287373afc7a211503417e64a6f" translate="yes" xml:space="preserve">
          <source>Lists of specific enabled and disabled users are replaced, not merged, from global to virtual host scope</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eb24b588b22c0b9641d19a0eb23be1ce0fbc392" translate="yes" xml:space="preserve">
          <source>Load Balancing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="886f1676e0c94197cbc9884ed1b3024d843bd34b" translate="yes" xml:space="preserve">
          <source>Load balancer scheduler algorithm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6875a9eb23b33e9af4e1504711df5e702654716e" translate="yes" xml:space="preserve">
          <source>Load balancer stickyness</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="386f5a7ab6d1b8d0a97e240845fb38535f1e5be1" translate="yes" xml:space="preserve">
          <source>Load balancing for multiple backends can be achieved using &lt;code&gt;&lt;a href=&quot;mod_proxy_balancer&quot;&gt;mod_proxy_balancer&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a8e7d950ca9bb7cf92e991f4954698ab70b6f92" translate="yes" xml:space="preserve">
          <source>LoadFile Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="108cb7d759636de3f8be1816b2ef89032935c0ea" translate="yes" xml:space="preserve">
          <source>LoadModule Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d42d01490dfe362df2544d553e3d84a615c8040" translate="yes" xml:space="preserve">
          <source>Loading of executable code and modules into the server at start-up or restart time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="731c1e165b554f3959a2fec54da85f3d97d0e060" translate="yes" xml:space="preserve">
          <source>Local (Unix) sockets or pipes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="951db9a0c0adfa48b0738e002c75ba63f68f87e0" translate="yes" xml:space="preserve">
          <source>Local IP-address and port</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2168e832ac6e01137441a7965f620e99042c56b" translate="yes" xml:space="preserve">
          <source>Local IP-address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e89b69e274a48ae38649ed32f46d034f55bf2b0f" translate="yes" xml:space="preserve">
          <source>Local exploits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d219c68101f532de10add2cf42fb9dbeca73d3be" translate="yes" xml:space="preserve">
          <source>Location</source>
          <target state="translated">Location</target>
        </trans-unit>
        <trans-unit id="d3f22ec3d0ae08ecfa629c02c0c2882766ee0b6d" translate="yes" xml:space="preserve">
          <source>Location of rule</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45cd437849b45860388b70d3301a28f3ee080bee" translate="yes" xml:space="preserve">
          <source>Location of the CGI script error logfile</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f3ed12dbbb85e1e7b6cd562847b3fffcad9ebf9" translate="yes" xml:space="preserve">
          <source>Location of the DAV lock database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3d9c388708626b6c49ad50b5118620e005afd46" translate="yes" xml:space="preserve">
          <source>Location of the file used to store coordination data for the child processes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="480057a401a3d7d814dea9b7052007ab83d0cdec" translate="yes" xml:space="preserve">
          <source>Location of the user-specific directories</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="718b8e98ba0c14c53065f292a8279ead23a2be57" translate="yes" xml:space="preserve">
          <source>Location where the server will log errors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44acb3886a1b28e841e91e84d93a85d09728e91a" translate="yes" xml:space="preserve">
          <source>Locks and Cache-Control: no-cache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2726e83301d74702a40416350a8f406870723c3f" translate="yes" xml:space="preserve">
          <source>Locks are used as a &lt;strong&gt;hint only&lt;/strong&gt; to enable the cache to be more gentle on backend servers, however the lock can be overridden if necessary. If the client sends a request with a Cache-Control header forcing a reload, any lock that may be present will be ignored, and the client's request will be honored immediately and the cached entry refreshed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d92568ed56fa1cfe15a1c3c976d00ea13bd2efac" translate="yes" xml:space="preserve">
          <source>Log Files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e394479c8244d689cd9abe49e7b708e926a7e388" translate="yes" xml:space="preserve">
          <source>Log Files and Troubleshooting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f5a478511cc69edf0f8dd18d8b8628716ff14bf" translate="yes" xml:space="preserve">
          <source>Log ID of the connection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79c5fac403ae901ce2122bbfea709c37f86e6302" translate="yes" xml:space="preserve">
          <source>Log ID of the connection if used in connection scope, empty otherwise</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fed6e5b909157058b2d8a08d5c517ca178826789" translate="yes" xml:space="preserve">
          <source>Log ID of the request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdb48c7877806d17e4623c02a5893cb88c9e4367" translate="yes" xml:space="preserve">
          <source>Log Rotation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89c1fa2e15f695efb135cb30fb9f5831930153fc" translate="yes" xml:space="preserve">
          <source>Log files will be created, in the directory where you run the script, for each virtual host name that appears in the combined log file. These logfiles will named after the hostname, with a &lt;code&gt;.log&lt;/code&gt; file extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f037e0e03f5f9088c20094dcd5ef13889b7e4dd4" translate="yes" xml:space="preserve">
          <source>Log message after request to /foo/* is processed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b8bb20d26cead5c059de6135aad8b5a3abbdb5a" translate="yes" xml:space="preserve">
          <source>Log message if an IPv6 client causes a request timeout:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ffb78a88519820e7218312efeb01d4f8bb8cffd" translate="yes" xml:space="preserve">
          <source>Log message if request to /foo/* is processed in a sub-request:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92ed4967c61f7ddd83213eae369664b77b54c44e" translate="yes" xml:space="preserve">
          <source>Log the value of the &quot;X-Foo&quot; request environment variable in each stage of the request:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1a5d9e8f8c1aba9c050d10a4be66d9247fd77c2" translate="yes" xml:space="preserve">
          <source>Log unsupported feature requests from ISAPI extensions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df25ebcc43fb5b3eb46ab8d537643887cda0310a" translate="yes" xml:space="preserve">
          <source>Log user-defined message to error log</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e0461ae13bb7465845e1518853476b26c981568" translate="yes" xml:space="preserve">
          <source>LogFormat Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18b44ee4c7cfc2f4861e69040453d147b89d645f" translate="yes" xml:space="preserve">
          <source>LogIOTrackTTFB</source>
          <target state="translated">LogIOTrackTTFB</target>
        </trans-unit>
        <trans-unit id="60867af9f4eb246b651770ccf55034d4c326e53e" translate="yes" xml:space="preserve">
          <source>LogIOTrackTTFB Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6b888a4bccde991d3435af3562b14e04850df5e" translate="yes" xml:space="preserve">
          <source>LogLevel Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff235d261790054cf9bf82116d9a234969f97949" translate="yes" xml:space="preserve">
          <source>LogMessage Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57003616863fe634c645e342ee9080681e419c5f" translate="yes" xml:space="preserve">
          <source>Logging</source>
          <target state="translated">Logging</target>
        </trans-unit>
        <trans-unit id="a596b3089855158116013fae3b94a3569f207596" translate="yes" xml:space="preserve">
          <source>Logging Functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c816ebdd9fac2c178b10f425ad795e1609b0ac4" translate="yes" xml:space="preserve">
          <source>Logging Out</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c138d7457fdd2bcfd0eb758080dda2c10a1ab267" translate="yes" xml:space="preserve">
          <source>Logging actual bytes sent and received</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="040b58b76baa052f8bfe0c263f8e113a302cf233" translate="yes" xml:space="preserve">
          <source>Logging of input and output bytes per request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f95c90bcd14078c1f3dcbc24e2f7c953409db5f6" translate="yes" xml:space="preserve">
          <source>Logging of the requests made to the server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="548f65f7ac584f0d45578ce03d60dc8db5092643" translate="yes" xml:space="preserve">
          <source>Loglevel of the message</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d84cba6e5934972030ed291050552d1759c9e60" translate="yes" xml:space="preserve">
          <source>Logs &lt;code&gt;Referer&lt;/code&gt; on all requests that do &lt;em&gt;not&lt;/em&gt; return one of the three specified codes, &quot;&lt;code&gt;-&lt;/code&gt;&quot; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="796c19b0940374aecf6be580574ed856a6f01f82" translate="yes" xml:space="preserve">
          <source>Logs &lt;code&gt;User-agent&lt;/code&gt; on 400 errors and 501 errors only. For other status codes, the literal string &lt;code&gt;&quot;-&quot;&lt;/code&gt; will be logged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="524ac72cce1325b8b9524f918c58341900d932a1" translate="yes" xml:space="preserve">
          <source>Logs a &lt;code&gt;-&lt;/code&gt; if &lt;code&gt;Referer&lt;/code&gt; is not set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fbf0e42ff2bb8d14ba41e411f710e041379fb27" translate="yes" xml:space="preserve">
          <source>Logs all requests for unsupported features from ISAPI extensions in the server error log. This may help administrators to track down problems. Once set to on and all desired ISAPI modules are functioning, it should be set back to off.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5f951ecbccba369b334cbd7bfa2b9cb66394bda" translate="yes" xml:space="preserve">
          <source>Logs the &lt;code&gt;Referer&lt;/code&gt; only if the log message severity is higher than 4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34a2ce27dfa077670508fbaa84a92a4aa3de012d" translate="yes" xml:space="preserve">
          <source>Looking at the hostname of the requesting client, we determine which country they are coming from. If we can't do a lookup on their IP address, we fall back to a default server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3101cfe1538168cf2ccc7820de91d516e2eaa60f" translate="yes" xml:space="preserve">
          <source>Looking at the table above, you will notice that it is always possible to use the name without any extensions in a hyperlink (&lt;em&gt;e.g.&lt;/em&gt;, &lt;code&gt;foo&lt;/code&gt;). The advantage is that you can hide the actual type of a document rsp. file and can change it later, &lt;em&gt;e.g.&lt;/em&gt;, from &lt;code&gt;html&lt;/code&gt; to &lt;code&gt;shtml&lt;/code&gt; or &lt;code&gt;cgi&lt;/code&gt; without changing any hyperlink references.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aceec6801f19e74056067401427b34dba8885b2f" translate="yes" xml:space="preserve">
          <source>Looks up an entry in a dbm file containing name, value pairs. Hash is constructed from a plain text file format using the &lt;code&gt;&lt;a href=&quot;../programs/httxt2dbm&quot;&gt;httxt2dbm&lt;/a&gt;&lt;/code&gt; utility. (&lt;a href=&quot;../rewrite/rewritemap#dbm&quot;&gt;Details ...&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ba925740f58d3d48a5492511cebd7ed18b195ab" translate="yes" xml:space="preserve">
          <source>Lookup operating system environment variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d7b197b56c3e847c3192a1932bf1b410cf8ce00" translate="yes" xml:space="preserve">
          <source>Lookup request environment variable (as a shortcut, &lt;code&gt;v&lt;/code&gt; can also be used to access variables).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ea7689ebab6c771bafa9a0ffc7ed09f593efcae" translate="yes" xml:space="preserve">
          <source>Lookup request note</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abf9022ef8d018f1ddc0751755d72dabb09c2c45" translate="yes" xml:space="preserve">
          <source>LuaAuthzProvider Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39d3e85c93c7802bec2f02b57a6c64d73b83fce4" translate="yes" xml:space="preserve">
          <source>LuaCodeCache</source>
          <target state="translated">LuaCodeCache</target>
        </trans-unit>
        <trans-unit id="993a459743a74bede759e1c46c45648bc2c173a9" translate="yes" xml:space="preserve">
          <source>LuaCodeCache Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1a506c6cb26af5c1626a0cbfdbf8afe09c61895" translate="yes" xml:space="preserve">
          <source>LuaHookAccessChecker</source>
          <target state="translated">LuaHookAccessChecker</target>
        </trans-unit>
        <trans-unit id="b8bb70c615b22b66fdb17f7eee246b4d861e6411" translate="yes" xml:space="preserve">
          <source>LuaHookAccessChecker Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="976ce35d3f2a03019ad6e076b8d8e13fb82e9556" translate="yes" xml:space="preserve">
          <source>LuaHookAuthChecker</source>
          <target state="translated">LuaHookAuthChecker</target>
        </trans-unit>
        <trans-unit id="085c90861b42815dd89d324f3fc47cfe8c71546a" translate="yes" xml:space="preserve">
          <source>LuaHookAuthChecker Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b44a844fa167ce95582c78165419b91576dafefa" translate="yes" xml:space="preserve">
          <source>LuaHookCheckUserID</source>
          <target state="translated">LuaHookCheckUserID</target>
        </trans-unit>
        <trans-unit id="1415022356fd6b7a7a9cf10e8f17c383372c3da3" translate="yes" xml:space="preserve">
          <source>LuaHookCheckUserID Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b67e5fbb680c755f9f7dc9278bd44b42fe0a7b41" translate="yes" xml:space="preserve">
          <source>LuaHookFixups</source>
          <target state="translated">LuaHookFixups</target>
        </trans-unit>
        <trans-unit id="feacb22ee1193b8a2a903e7fdfaf03bca19329a4" translate="yes" xml:space="preserve">
          <source>LuaHookFixups Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="383918699a64a4657590dc507d3bcac9c7734232" translate="yes" xml:space="preserve">
          <source>LuaHookInsertFilter</source>
          <target state="translated">LuaHookInsertFilter</target>
        </trans-unit>
        <trans-unit id="7666814ec57a4ed5227c655c6904f5842c5b6728" translate="yes" xml:space="preserve">
          <source>LuaHookInsertFilter Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa8637361a7c6da3362b484a36667d7aed2ded82" translate="yes" xml:space="preserve">
          <source>LuaHookLog</source>
          <target state="translated">LuaHookLog</target>
        </trans-unit>
        <trans-unit id="46d489119e7fa1301bc1140ead7144f2a86806c6" translate="yes" xml:space="preserve">
          <source>LuaHookLog Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e234c1f2cee28d4249d2793456fb70a89872988" translate="yes" xml:space="preserve">
          <source>LuaHookMapToStorage</source>
          <target state="translated">LuaHookMapToStorage</target>
        </trans-unit>
        <trans-unit id="12ff0ba29e7bab20e878beff375bde7012e409ad" translate="yes" xml:space="preserve">
          <source>LuaHookMapToStorage Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="101caaac12de51133d4efd598cdcfeb56dd9b885" translate="yes" xml:space="preserve">
          <source>LuaHookTranslateName</source>
          <target state="translated">LuaHookTranslateName</target>
        </trans-unit>
        <trans-unit id="c3cfd2b285379480e12ba7a9b72fa1845ed911f2" translate="yes" xml:space="preserve">
          <source>LuaHookTranslateName Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="225b19858fdd0ea435f9a0b6d5b829be4ecdc7bd" translate="yes" xml:space="preserve">
          <source>LuaHookTypeChecker</source>
          <target state="translated">LuaHookTypeChecker</target>
        </trans-unit>
        <trans-unit id="f4b02f8f9c012229174d6e3bca04ed237301b26c" translate="yes" xml:space="preserve">
          <source>LuaHookTypeChecker Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a357ec5dd7c505d73c9c6564f3c2beebd283209" translate="yes" xml:space="preserve">
          <source>LuaInherit</source>
          <target state="translated">LuaInherit</target>
        </trans-unit>
        <trans-unit id="da3b5337e941b4f1c61a032c4a0f31c498e96093" translate="yes" xml:space="preserve">
          <source>LuaInherit Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6c2c3352d42815db84e27f63f1c4b333e39f5a1" translate="yes" xml:space="preserve">
          <source>LuaInputFilter Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60dd6b6cf26091dabccc8ccd4353c8ba39006c3a" translate="yes" xml:space="preserve">
          <source>LuaMapHandler</source>
          <target state="translated">LuaMapHandler</target>
        </trans-unit>
        <trans-unit id="1ffdff6df880b3f40441ad6dc620b288b946f763" translate="yes" xml:space="preserve">
          <source>LuaMapHandler Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f9cc889ee35b0ef0388bcbd834cb4a6a98bb38c" translate="yes" xml:space="preserve">
          <source>LuaOutputFilter Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca44873e34b90b00087436e2cf15ab2b2e7ef62a" translate="yes" xml:space="preserve">
          <source>LuaPackageCPath</source>
          <target state="translated">LuaPackageCPath</target>
        </trans-unit>
        <trans-unit id="c79cd905e55f2646eb8ffbb481db315e50d30a37" translate="yes" xml:space="preserve">
          <source>LuaPackageCPath Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36f25347e1084ae92c2de1b307bfcd4a43213a51" translate="yes" xml:space="preserve">
          <source>LuaPackagePath</source>
          <target state="translated">LuaPackagePath</target>
        </trans-unit>
        <trans-unit id="b13bf11f253d8f9c225c0427cad3c61ca0ae4359" translate="yes" xml:space="preserve">
          <source>LuaPackagePath Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0db663eb9ce82085be59d4f5e3ab280cbc9a75cc" translate="yes" xml:space="preserve">
          <source>LuaQuickHandler</source>
          <target state="translated">LuaQuickHandler</target>
        </trans-unit>
        <trans-unit id="04d7f49798971e1e5405864ef123d82c137188da" translate="yes" xml:space="preserve">
          <source>LuaQuickHandler Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be887bdf0f7a4f54b12fca52f2c620b0db715714" translate="yes" xml:space="preserve">
          <source>LuaRoot</source>
          <target state="translated">LuaRoot</target>
        </trans-unit>
        <trans-unit id="6bfa4feee3d5dca687887d45f5d0da592441337a" translate="yes" xml:space="preserve">
          <source>LuaRoot Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="353f9266128af6cdc15fa4a7726e001bbfdf3756" translate="yes" xml:space="preserve">
          <source>LuaScope</source>
          <target state="translated">LuaScope</target>
        </trans-unit>
        <trans-unit id="1dfd93f0e75a13af2293f7436587c49c6eef49e4" translate="yes" xml:space="preserve">
          <source>LuaScope Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d57e4561c237574db43a3ca5a49adf4ac922bf9e" translate="yes" xml:space="preserve">
          <source>L|last</source>
          <target state="translated">L|last</target>
        </trans-unit>
        <trans-unit id="a8df7b671cd72e7f847737d5b5be88444ad977a4" translate="yes" xml:space="preserve">
          <source>MAC</source>
          <target state="translated">MAC</target>
        </trans-unit>
        <trans-unit id="b773bed04a48de200b96981bb79467413a222066" translate="yes" xml:space="preserve">
          <source>MD5</source>
          <target state="translated">MD5</target>
        </trans-unit>
        <trans-unit id="07d92a45d1585add4fbd235ee336f791b66166c3" translate="yes" xml:space="preserve">
          <source>MD5 encryption (default on Win32, Netware)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed7672015825e4fbe9e7e03a34623129a251b5e6" translate="yes" xml:space="preserve">
          <source>MD5 hash function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45920ec298737003751d497e830f8f9fdc4aa66b" translate="yes" xml:space="preserve">
          <source>MD5 is an algorithm for computing a &quot;message digest&quot; (sometimes called &quot;fingerprint&quot;) of arbitrary-length data, with a high degree of confidence that any alterations in the data will be reflected in alterations in the message digest.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb98c162225055fafd98d940c385dfda7802d612" translate="yes" xml:space="preserve">
          <source>MD5, SHA or SHA1, SHA256, SHA384.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ce9357789514e3f645330d90ff9d63f8dab8fd7" translate="yes" xml:space="preserve">
          <source>MD5, a 128-bit hash</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10a213c395b7aa6f363996d2ff4311d526a933e4" translate="yes" xml:space="preserve">
          <source>MDBaseServer Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6296ce92c75784b09c92b55764c6757e87e982e9" translate="yes" xml:space="preserve">
          <source>MDCAChallenges Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55fc643a095e836f901c0135c0f01bae7eba653c" translate="yes" xml:space="preserve">
          <source>MDCertificateAgreement Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67e6b718f8b4c03e7ca4cd58251e24b9a1655c63" translate="yes" xml:space="preserve">
          <source>MDCertificateAuthority Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5371f0fad08b90fba4e69fac47a350eb744ce507" translate="yes" xml:space="preserve">
          <source>MDCertificateProtocol Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79f160242a85eb9d3c49bf7b12e195bd1ec9f32e" translate="yes" xml:space="preserve">
          <source>MDDriveMode Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cce1363aa9605ab4a49ad4a0ffd2ac33446c9388" translate="yes" xml:space="preserve">
          <source>MDHttpProxy Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc846613547c9d9a908726ceb092c82e156f4450" translate="yes" xml:space="preserve">
          <source>MDMember Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c4d0544eb6e0592e1bc3dd637db8128090dd5e4" translate="yes" xml:space="preserve">
          <source>MDMembers Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e467d9c38ad10f688e8c8c4867bc56586755892b" translate="yes" xml:space="preserve">
          <source>MDMustStaple Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edc4b0b15f381cd3d423feb0444331848eb21ba6" translate="yes" xml:space="preserve">
          <source>MDNotifyCmd Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3efdc7c92a380b66912b0cfe04ce3d19a6bb651c" translate="yes" xml:space="preserve">
          <source>MDPortMap Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb82a84674fe9cf65947c1fba96e67c87d5f76f8" translate="yes" xml:space="preserve">
          <source>MDPrivateKeys Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b76485398544b3ea3f7a20bdc7678c75481ff360" translate="yes" xml:space="preserve">
          <source>MDRenewWindow Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5279e74fe141b5a7429d46e4efc1708dfe0b0b4" translate="yes" xml:space="preserve">
          <source>MDRequireHttps Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="372c9ffe439d37472c001eba26d5164ce4058f5f" translate="yes" xml:space="preserve">
          <source>MDStoreDir Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c19c0d381e675d82c71ea5a1233c3f25b705289d" translate="yes" xml:space="preserve">
          <source>MDomain Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e0d71f7c2ca86f9b5bd1c9f3f6ecd2b6b9a5790" translate="yes" xml:space="preserve">
          <source>MERGE</source>
          <target state="translated">MERGE</target>
        </trans-unit>
        <trans-unit id="50a56e6b24876323870770315c1f896cd3771820" translate="yes" xml:space="preserve">
          <source>MIME encoding if matched (optional)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b836e832142e1bea303e129017ba73fc75f1b99" translate="yes" xml:space="preserve">
          <source>MIME header environment for the response, printed even on errors and persist across internal redirects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f257f00748ea94461f45c9e4f599495b63b540bc" translate="yes" xml:space="preserve">
          <source>MIME header environment for the response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa4f63c022bd2c8d5e5dc32fd14ad262477ef0e1" translate="yes" xml:space="preserve">
          <source>MIME header environment from the request. This contains headers such as &lt;code&gt;Host, User-Agent, Referer&lt;/code&gt; and so on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3598d04f235f5868dcab96ad4f4e0b52a561284f" translate="yes" xml:space="preserve">
          <source>MIME type if matched</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bffcafe1f167e97c1877234fae4c372306d2583" translate="yes" xml:space="preserve">
          <source>MKACTIVITY</source>
          <target state="translated">MKACTIVITY</target>
        </trans-unit>
        <trans-unit id="bf167b8644ff067ef2fa43ba1f4a0c34d70ee8a0" translate="yes" xml:space="preserve">
          <source>MKCOL</source>
          <target state="translated">MKCOL</target>
        </trans-unit>
        <trans-unit id="c2a0b45a79f540c942278d945f5182f093e19d8c" translate="yes" xml:space="preserve">
          <source>MKWORKSPACE</source>
          <target state="translated">MKWORKSPACE</target>
        </trans-unit>
        <trans-unit id="f837a8fd9a2d6d0fd621e0c5b5a14bb8ec27fe93" translate="yes" xml:space="preserve">
          <source>MMapFile Caching</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b118254e7894be13dfade9d66ff73a28fe8260b" translate="yes" xml:space="preserve">
          <source>MMapFile Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="479396de59be987e42108d35e44f4b59dc1b4a9e" translate="yes" xml:space="preserve">
          <source>MODULES</source>
          <target state="translated">MODULES</target>
        </trans-unit>
        <trans-unit id="3bf08a84f15b98ce4d14b707f4a093b3cc8b853e" translate="yes" xml:space="preserve">
          <source>MOVE</source>
          <target state="translated">MOVE</target>
        </trans-unit>
        <trans-unit id="8d3bb99cab18887c2548fd080f34f3d9af953e07" translate="yes" xml:space="preserve">
          <source>MPM</source>
          <target state="translated">MPM</target>
        </trans-unit>
        <trans-unit id="1b9096b45975016c3392baffc10f03e92c7f5520" translate="yes" xml:space="preserve">
          <source>MPM Common Directives</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9399543ee31c8f8c658f01f608d4df0538f3d21a" translate="yes" xml:space="preserve">
          <source>MPM Configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d1f02e6edf80c35af2dd614ed43b0792b135aa6" translate="yes" xml:space="preserve">
          <source>MPM Defaults</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="408886c3a72d7b56dd21c612c81bd6884f6867ed" translate="yes" xml:space="preserve">
          <source>MPM event</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b92e168a7249aee3f5371172309f09856f47af1" translate="yes" xml:space="preserve">
          <source>MPM netware</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="209003d500826307d264351db4512c4445912bf8" translate="yes" xml:space="preserve">
          <source>MPM os2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c94141d5868dafbd5a16c032760eb3d7c7f9fcfe" translate="yes" xml:space="preserve">
          <source>MPM prefork</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2fcae179a05061da91e2a085055c354d4adbec1" translate="yes" xml:space="preserve">
          <source>MPM winnt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ae7eec4f0ec06dbb156651902a5975d338e2c3d" translate="yes" xml:space="preserve">
          <source>MPM worker</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6b65fb93038793da7a4eefb62599fa4eb64bc6b" translate="yes" xml:space="preserve">
          <source>MPM: AsyncRequestWorkerFactor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3d5dd49f9d4fdc38dcded21443aea3a81949a3d" translate="yes" xml:space="preserve">
          <source>MPM: CoreDumpDirectory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6b063f9cc584f1aced1310374788de1683a8eb0" translate="yes" xml:space="preserve">
          <source>MPM: EnableExceptionHook</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f57d04db46bd33be245af3f953c714bfc9b28f58" translate="yes" xml:space="preserve">
          <source>MPM: GracefulShutdownTimeout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="421c067d91bdb77c9a977d415aa75dbd3015b4db" translate="yes" xml:space="preserve">
          <source>MPM: Listen</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8f39c0dfb862bac92045b01a6518464053c3cbe" translate="yes" xml:space="preserve">
          <source>MPM: ListenBackLog</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c518c4dfe90bf0a029d69865d2a398da4f19786a" translate="yes" xml:space="preserve">
          <source>MPM: ListenCoresBucketsRatio</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="888c4081e32e33ab7f2bc212656f5f0a64433053" translate="yes" xml:space="preserve">
          <source>MPM: MaxConnectionsPerChild</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b16cc3bcbcdf953274a433b1d8964c1862942e95" translate="yes" xml:space="preserve">
          <source>MPM: MaxMemFree</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8a62daea20034bf945f2e7bb67d83c0058d0915" translate="yes" xml:space="preserve">
          <source>MPM: MaxRequestWorkers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40ebc9becae46e7e2d36b0fe11db595e053146b3" translate="yes" xml:space="preserve">
          <source>MPM: MaxSpareServers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8639843a4733116ab407720c2c28c07372f689dd" translate="yes" xml:space="preserve">
          <source>MPM: MaxSpareThreads</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="649e1695034b0d86c1960e990332350fe4c6de4a" translate="yes" xml:space="preserve">
          <source>MPM: MaxThreads</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10037fd7a004f9b364908fe0efb53c3ca322daae" translate="yes" xml:space="preserve">
          <source>MPM: MinSpareServers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9e2de2ce8b34a2cd4e0ac76882635b4877756b1" translate="yes" xml:space="preserve">
          <source>MPM: MinSpareThreads</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cc54d4e9b52866931553956778c039f90c8311e" translate="yes" xml:space="preserve">
          <source>MPM: PidFile</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7753a8e798df98281a4f6b4dcb02bf0a5515684b" translate="yes" xml:space="preserve">
          <source>MPM: ReceiveBufferSize</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83e3e3a4f0bbaad99f61fc2d04469b8614e7e523" translate="yes" xml:space="preserve">
          <source>MPM: ScoreBoardFile</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="270afa4e948354968447ee925bbf7a76c6e148c9" translate="yes" xml:space="preserve">
          <source>MPM: SendBufferSize</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a96501ae98939f1dae3f2f08f2c4491db24e7ba6" translate="yes" xml:space="preserve">
          <source>MPM: ServerLimit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8343ae1c4c99a94ddf7a28ca618975e40972669" translate="yes" xml:space="preserve">
          <source>MPM: StartServers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bd499c801a3afa724ab7921acb67f0818491a34" translate="yes" xml:space="preserve">
          <source>MPM: StartThreads</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fcd47788a1c2f275a6868c2446283235027b7b2" translate="yes" xml:space="preserve">
          <source>MPM: ThreadLimit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86d166b0a3277d97088cf23221ff5009a8bfc611" translate="yes" xml:space="preserve">
          <source>MPM: ThreadStackSize</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d3ef2cca74f973159ba26223ae3cff329af0a0d" translate="yes" xml:space="preserve">
          <source>MPM: ThreadsPerChild</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76cee6c50967a71d3bd2e8e29d3e7c70d1370a72" translate="yes" xml:space="preserve">
          <source>MPMs can be built as DSOs for dynamic loading or statically linked with the server, and are enabled using the following options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87dbd3c8030814a97b5169639370e9e26fbe92c9" translate="yes" xml:space="preserve">
          <source>MPMs can be built as static modules on all platforms. A single MPM is chosen at build time and linked into the server. The server must be rebuilt in order to change the MPM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bee673839e9fd2cc71ff34a5480c6c3ad2110498" translate="yes" xml:space="preserve">
          <source>Machine Readable Status File</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ff59c8ee3779775d40623bfa24c765ef5a0162a" translate="yes" xml:space="preserve">
          <source>Macro names are case-insensitive, like httpd configuration directives. However, variable names are case sensitive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02ba04ad9eae2b135b4d249362b058316015521a" translate="yes" xml:space="preserve">
          <source>Macros are defined using &lt;code&gt;&lt;a href=&quot;#macro&quot;&gt;&amp;lt;Macro&amp;gt;&lt;/a&gt;&lt;/code&gt; blocks, which contain the portion of your configuration that needs to be repeated, complete with variables for those parts that will need to be substituted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f05dbfff589b95d20d090e26afb7f3d924875610" translate="yes" xml:space="preserve">
          <source>Main Configuration Files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b04d871a29f23ca79a85657b3f4d927061c7a629" translate="yes" xml:space="preserve">
          <source>Maintaining the Disk Cache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ac8a95ad89f47a045c1dd928aa4c3a8f761482d" translate="yes" xml:space="preserve">
          <source>Maintains a cache of authentication credentials, so that a new backend lookup is not required for every authenticated request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7481a49fb82f2753894fc0606d60375cc1b8ce9" translate="yes" xml:space="preserve">
          <source>Make sure OpenSSL is installed and in your &lt;code&gt;PATH&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6fa366b626f18f3c8300c26e2045cdb261e9a3e" translate="yes" xml:space="preserve">
          <source>Make sure that the &lt;code&gt;AuthDBMGroupFile&lt;/code&gt; is stored outside the document tree of the web-server. Do &lt;strong&gt;not&lt;/strong&gt; put it in the directory that it protects. Otherwise, clients will be able to download the &lt;code&gt;AuthDBMGroupFile&lt;/code&gt; unless otherwise protected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="913a0bbb8012d08ef01170184ab4be2db93679b4" translate="yes" xml:space="preserve">
          <source>Make sure that the &lt;code&gt;AuthDBMUserFile&lt;/code&gt; is stored outside the document tree of the web-server; do &lt;em&gt;not&lt;/em&gt; put it in the directory that it protects. Otherwise, clients will be able to download the &lt;code&gt;AuthDBMUserFile&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="562c1a27cc06231103132a126bc56b1c66b69ef2" translate="yes" xml:space="preserve">
          <source>Make sure that the &lt;code&gt;AuthGroupFile&lt;/code&gt; is stored outside the document tree of the web-server; do &lt;em&gt;not&lt;/em&gt; put it in the directory that it protects. Otherwise, clients may be able to download the &lt;code&gt;AuthGroupFile&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36d51ec123fed50fa74fe4cfae9425ea3aeb4acc" translate="yes" xml:space="preserve">
          <source>Make sure that the &lt;code&gt;AuthUserFile&lt;/code&gt; is stored outside the document tree of the web-server. Do &lt;strong&gt;not&lt;/strong&gt; put it in the directory that it protects. Otherwise, clients may be able to download the &lt;code&gt;AuthUserFile&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f534399a254aad39c88e745c28b2d2adb762041d" translate="yes" xml:space="preserve">
          <source>Make sure that the path to the AWK utility and the GNU make utility (&lt;code&gt;gmake.exe&lt;/code&gt;) have been included in the system's &lt;code&gt;PATH&lt;/code&gt; environment variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b85ecc8dd4de779c113a178c3699e351c9fb2f53" translate="yes" xml:space="preserve">
          <source>Make sure that this is in fact the path to the interpreter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80757b77fadaf2c0277ba384ba14025677464624" translate="yes" xml:space="preserve">
          <source>Make sure the server.key file is only readable by root:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c48fbccdb36ced237ea1a1e39f11dc2fc07ccb0a" translate="yes" xml:space="preserve">
          <source>Make sure you enter the FQDN (&quot;Fully Qualified Domain Name&quot;) of the server when OpenSSL prompts you for the &quot;CommonName&quot;, i.e. when you generate a CSR for a website which will be later accessed via &lt;code&gt;https://www.foo.dom/&lt;/code&gt;, enter &quot;www.foo.dom&quot; here. You can see the details of this CSR by using</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a2f334c275f31df282557d99a1c283e2e74c0dd" translate="yes" xml:space="preserve">
          <source>Make sure you have APR and APR-Util already installed on your system. If you don't, or prefer to not use the system-provided versions, download the latest versions of both APR and APR-Util from &lt;a href=&quot;http://apr.apache.org/&quot;&gt;Apache APR&lt;/a&gt;, unpack them into &lt;code&gt;/httpd_source_tree_root/srclib/apr&lt;/code&gt; and &lt;code&gt;/httpd_source_tree_root/srclib/apr-util&lt;/code&gt; (be sure the directory names do not have version numbers; for example, the APR distribution must be under /httpd_source_tree_root/srclib/apr/) and use &lt;code&gt;./configure&lt;/code&gt;'s &lt;code&gt;--with-included-apr&lt;/code&gt; option. On some platforms, you may have to install the corresponding &lt;code&gt;-dev&lt;/code&gt; packages to allow httpd to build against your installed copy of APR and APR-Util.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffcb84daa676ba8ff6fb5089c9f8c7e773bbe46c" translate="yes" xml:space="preserve">
          <source>Make sure you have an ANSI-C compiler installed. The &lt;a href=&quot;http://gcc.gnu.org/&quot;&gt;GNU C compiler (GCC)&lt;/a&gt; from the &lt;a href=&quot;http://www.gnu.org/&quot;&gt;Free Software Foundation (FSF)&lt;/a&gt; is recommended. If you don't have GCC then at least make sure your vendor's compiler is ANSI compliant. In addition, your &lt;code&gt;PATH&lt;/code&gt; must contain basic build tools such as &lt;code&gt;make&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12d9dd5fc08f516cb23e9f27004412b4fab6d185" translate="yes" xml:space="preserve">
          <source>Make sure you have at least 200 MB of free disk space available. After installation Apache requires approximately 80 MB of disk space, plus space for log and cache files, which can grow rapidly. The actual disk space requirements will vary considerably based on your chosen configuration and any third-party modules or libraries, especially when OpenSSL is also built. Because many files are text and very easily compressed, NTFS filesystem compression cuts these requirements in half.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b970fa9b40152176c23df1d443c4db1245203cfe" translate="yes" xml:space="preserve">
          <source>Make sure you have at least 50 MB of temporary free disk space available. After installation the server occupies approximately 10 MB of disk space. The actual disk space requirements will vary considerably based on your chosen configuration options, any third-party modules, and, of course, the size of the web site or sites that you have on the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58fd865f6d6ddfd5b45b844b0bb2c4ccbbb6d940" translate="yes" xml:space="preserve">
          <source>Make sure you have debugging symbols available, at least in Apache. On platforms where you use GCC/GDB, you will have to build Apache+mod_ssl with ``&lt;code&gt;OPTIM=&quot;-g -ggdb3&quot;&lt;/code&gt;'' to get this. On other platforms at least ``&lt;code&gt;OPTIM=&quot;-g&quot;&lt;/code&gt;'' is needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e1ea797fc3f2edeb0c2ae5e7b623c099c826074" translate="yes" xml:space="preserve">
          <source>Make the server (run &quot;&lt;code&gt;make&lt;/code&gt;&quot;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a9b68f72f1913d6573bcef751b6ee1d46905fab" translate="yes" xml:space="preserve">
          <source>Makes the match optional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fa47697e108f704646203b97211f6b3a9de25de" translate="yes" xml:space="preserve">
          <source>Makes the pattern comparison case-insensitive. &lt;em&gt;&lt;a href=&quot;../rewrite/flags#flag_nc&quot;&gt;details ...&lt;/a&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="921fce91203fc1b75b751afeda9e3de58c206e80" translate="yes" xml:space="preserve">
          <source>Manages SQL database connections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69290b8c78f75a82a820aaa665fe5e27c048f2a8" translate="yes" xml:space="preserve">
          <source>Manages a cache of authentication credentials to relieve the load on backends</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e5dc31c07c9f7009280145027ef74f21519402f" translate="yes" xml:space="preserve">
          <source>Managing domains across virtual hosts, certificate provisioning via the ACME protocol</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77b5a60d13007bfff0f096c96bef6ac2b0927e65" translate="yes" xml:space="preserve">
          <source>Manipulate DBM password databases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff3eb51e063764abafb7c0571a7449b34293f112" translate="yes" xml:space="preserve">
          <source>Many filters will change the content, invalidating existing content tags, checksums, hashes, and lengths.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d1d8096d08f235c0f6450518ffefbebdbd9377a" translate="yes" xml:space="preserve">
          <source>Many of the solutions in this section will all use the same condition, which leaves the matched value in the %2 backreference. %1 is the beginining of the query string (up to the key of intererest), and %3 is the remainder. This condition is a bit complex for flexibility and to avoid double '&amp;amp;&amp;amp;' in the substitutions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3dd9213daaf3a7191064fb62779189bdb9f9a14" translate="yes" xml:space="preserve">
          <source>Many servers want to be accessible by more than one name. This is possible with the &lt;code&gt;&lt;a href=&quot;../mod/core#serveralias&quot;&gt;ServerAlias&lt;/a&gt;&lt;/code&gt; directive, placed inside the &lt;code&gt;&lt;a href=&quot;../mod/core#virtualhost&quot;&gt;&amp;lt;VirtualHost&amp;gt;&lt;/a&gt;&lt;/code&gt; section. For example in the first &lt;code&gt;&lt;a href=&quot;../mod/core#virtualhost&quot;&gt;&amp;lt;VirtualHost&amp;gt;&lt;/a&gt;&lt;/code&gt; block above, the &lt;code&gt;&lt;a href=&quot;../mod/core#serveralias&quot;&gt;ServerAlias&lt;/a&gt;&lt;/code&gt; directive indicates that the listed names are other names which people can use to see that same web site:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae71ce93193a705a69317b65eaccf259ae110c8d" translate="yes" xml:space="preserve">
          <source>Many sites use the same TLS certificate for multiple virtual hosts. The certificate either has a wildcard name, such as '*.example.org' or carries several alternate names. Browsers using HTTP/2 will recognize that and reuse an already opened connection for such hosts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13ad38f86d18499de3e55343220277232972d083" translate="yes" xml:space="preserve">
          <source>Map a list of files into memory at startup time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31287db26c4d73d50299b90d14812e6ce2d0d528" translate="yes" xml:space="preserve">
          <source>Map a path to a lua handler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0086ba1032914db1a30a093b2a9ccd43ca4ed68" translate="yes" xml:space="preserve">
          <source>Map external to internal ports for domain ownership verification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="133ed0654d5a0ebc702f2b3b797fd4f27902a44f" translate="yes" xml:space="preserve">
          <source>Map to storage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62c157a5cdee2032a2eb5ebac6196273f1792c5f" translate="yes" xml:space="preserve">
          <source>Mapped drive letters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d802a9d6528b98da070f8ee9ab128c0b1813b7a3" translate="yes" xml:space="preserve">
          <source>Mapped drive letters allow the administrator to maintain the mapping to a specific machine and path outside of the Apache httpd configuration. However, these mappings are associated only with interactive sessions and are not directly available to Apache httpd when it is started as a service. &lt;strong&gt;Use only UNC paths for network resources in httpd.conf&lt;/strong&gt; so that the resources can be accessed consistently regardless of how Apache httpd is started. (Arcane and error prone procedures may work around the restriction on mapped drive letters, but this is not recommended.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b791887f455f92bac9c736083632e621d31ba399" translate="yes" xml:space="preserve">
          <source>Mapping URLs to Filesystem Locations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b2e121d22b7fc9f14041e14b54216ce82fb8eea" translate="yes" xml:space="preserve">
          <source>Mapping URLs to the Filesystem</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d4dce4a0d904e809383c39b8a26e0a485f12726" translate="yes" xml:space="preserve">
          <source>Maps URLs to filesystem locations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf15a0e7991cd65da08966aa6fe9aba471a4eddf" translate="yes" xml:space="preserve">
          <source>Maps URLs to filesystem locations using regular expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ea4810b586076f5907f5962ddfbdf12f12c910e" translate="yes" xml:space="preserve">
          <source>Maps a URL to a filesystem location and designates the target as a CGI script</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f66472fa1598c6f1b2166f254f17773da6e25f1" translate="yes" xml:space="preserve">
          <source>Maps a URL to a filesystem location using a regular expression and designates the target as a CGI script</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1162913ec96ddc2c1388fd9c4fb9aeec8b5c99b2" translate="yes" xml:space="preserve">
          <source>Maps filename extensions to the filters that will process client requests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38fc13104ffced309d5500af0b2bc2bef5af3d96" translate="yes" xml:space="preserve">
          <source>Maps filename extensions to the filters that will process responses from the server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd711b323a5a7de042f35ca2c0676c98375cce5d" translate="yes" xml:space="preserve">
          <source>Maps remote servers into the local server URL-space</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd992caabbcea2e4d09e28bf7e6395aee598e4f1" translate="yes" xml:space="preserve">
          <source>Maps remote servers into the local server URL-space using regular expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1293e38c4224ccced8f2f76c76536228f85e65be" translate="yes" xml:space="preserve">
          <source>Maps the filename extensions to the specified handler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63fec5008f83e81ae381b0b4152fd1b69940477d" translate="yes" xml:space="preserve">
          <source>Maps the given filename extension to the specified content language</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="734a77562fe113d3de0a96849f49f4e450cc301e" translate="yes" xml:space="preserve">
          <source>Maps the given filename extensions onto the specified content type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75b07cf2228c35b45b28a3b12355f9c1b3cdd28f" translate="yes" xml:space="preserve">
          <source>Maps the given filename extensions to the specified content charset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="173e704062e40edb035ed145798d31b6d7d24bc6" translate="yes" xml:space="preserve">
          <source>Maps the given filename extensions to the specified encoding type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84f29a3c513c84d5dba9c80c5cf856a77ddbbd21" translate="yes" xml:space="preserve">
          <source>Marks the end of the response (and thus the request-handling cycle).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aa60d39fb37a254bbc3f4f97f4c996a72de88ff" translate="yes" xml:space="preserve">
          <source>Mass virtual hosting may also be accomplished using &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt;, either using simple &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; directives, or using more complicated techniques such as storing the vhost definitions externally and accessing them via &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewritemap&quot;&gt;RewriteMap&lt;/a&gt;&lt;/code&gt;. These techniques are discussed in the &lt;a href=&quot;../rewrite/vhosts&quot;&gt;rewrite documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7f6a0cf4a80639c5dd10116e11385c1fb13a3bd" translate="yes" xml:space="preserve">
          <source>Mass virtual hosts with mod_macro</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c443907f3e4616da42fa08b8ff38a0337c151f1c" translate="yes" xml:space="preserve">
          <source>Mass virtual hosts with mod_rewrite</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0335207f5e840d81afa158c6c2bb6e3fa02653b4" translate="yes" xml:space="preserve">
          <source>Match</source>
          <target state="translated">Match</target>
        </trans-unit>
        <trans-unit id="3233835c66dc7c3d2a74ee7534606dd9855abb5a" translate="yes" xml:space="preserve">
          <source>Match Allow only</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e92e9744e689f2236c88a602a23beff316ffb2f8" translate="yes" xml:space="preserve">
          <source>Match Deny only</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00d55be847a2568e7d382ac73095dd3e648558b0" translate="yes" xml:space="preserve">
          <source>Match at end only. This applies only to string matching (not regexps) and is irrelevant to HTML links.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc19e4ffb5661c89bce0f7d7fb418e08cf33c5e2" translate="yes" xml:space="preserve">
          <source>Match at start only. This applies only to string matching (not regexps) and is irrelevant to HTML links.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ab33be95d724bfbea354f3d3dda959479e72674" translate="yes" xml:space="preserve">
          <source>Match both Allow &amp;amp; Deny</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b12baed7e06669a4cd00a54f86cc9789b613710" translate="yes" xml:space="preserve">
          <source>Matches any single character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf52cf7f4b33cdfc63b03c216aac9a0b593a63cc" translate="yes" xml:space="preserve">
          <source>Matches in the regular expressions contained in the &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewritecond&quot;&gt;RewriteCond&lt;/a&gt;&lt;/code&gt;s can be used as part of the &lt;var&gt;Substitution&lt;/var&gt; in the &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; using the variables &lt;code&gt;%1&lt;/code&gt;, &lt;code&gt;%2&lt;/code&gt;, etc. For example, this will direct the request to a different directory depending on the hostname used to access the site:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d65ad6f199b3af0de062efccc309ae67f0a2aa7d" translate="yes" xml:space="preserve">
          <source>MaxConnectionsPerChild Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="067982bee83dad28bc53a2edc09d6799e8df8215" translate="yes" xml:space="preserve">
          <source>MaxKeepAliveRequests Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aa57a53c2e2b4368218c74bcce4d8a049322556" translate="yes" xml:space="preserve">
          <source>MaxMemFree Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0c0d8d0a7c1753ad14489b7f71ad22b7e160088" translate="yes" xml:space="preserve">
          <source>MaxRangeOverlaps Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="624479f4a047710d313c72e4fc8c59fe4fcb3937" translate="yes" xml:space="preserve">
          <source>MaxRangeReversals Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8187e87e942fbbfd88f929f1e231e5a867a1d69a" translate="yes" xml:space="preserve">
          <source>MaxRanges Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="129d970a8800601bbeb4e392a4f5a6bd6037d160" translate="yes" xml:space="preserve">
          <source>MaxRequestWorkers Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4902e248130387addea3a9ee3d763ce47844a435" translate="yes" xml:space="preserve">
          <source>MaxSpareServers Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dd2122921df7c986749eeeeb081f7b52362f53b" translate="yes" xml:space="preserve">
          <source>MaxSpareThreads Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6128e108dbdf591ded5946d6443742c9479f33fb" translate="yes" xml:space="preserve">
          <source>MaxThreads Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd8a09b5874f0a2d5d98ef5e0aa2bec3abba2222" translate="yes" xml:space="preserve">
          <source>Maximium number of proxies that a request can be forwarded through</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c343ea242e1f24326a3d06170e733c03328691e3" translate="yes" xml:space="preserve">
          <source>Maximum allowable age for OCSP responses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ebd54247ea7fe8285342ec965263e7f509bebb7" translate="yes" xml:space="preserve">
          <source>Maximum allowable age for OCSP stapling responses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="427192a2e76c091a9f0119c32331967a74450e70" translate="yes" xml:space="preserve">
          <source>Maximum allowable time skew for OCSP response validation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad37280ec1f44020ad81433be9c5f1915578229e" translate="yes" xml:space="preserve">
          <source>Maximum allowable time skew for OCSP stapling response validation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e4b681f851f4c0f35ca5ba3db807637b257561f" translate="yes" xml:space="preserve">
          <source>Maximum amount of PUT or POST requests that will be recorded in the scriptlog</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e401dc73d63c1987575e69f84587eae5bcc3b14" translate="yes" xml:space="preserve">
          <source>Maximum amount of memory that the main allocator is allowed to hold without calling &lt;code&gt;free()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f3c5218b5a2d41e98293fc20eaf0f5fc8e5b393" translate="yes" xml:space="preserve">
          <source>Maximum amount of output data buffered per stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3c5e1a8d215041e298192c2d5f80f584e4a65d9" translate="yes" xml:space="preserve">
          <source>Maximum depth of CA Certificates in Client Certificate verification</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d504463ec45f1aa9c0aa1a92c2f9108073994c83" translate="yes" xml:space="preserve">
          <source>Maximum depth of CA Certificates in Remote Server Certificate verification</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c92f8f9204c479b59d686221f4b7d2d89eaa6a8" translate="yes" xml:space="preserve">
          <source>Maximum inflation ratio for request bodies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="867712d55ec0089a333b9615af5e57867c59dd53" translate="yes" xml:space="preserve">
          <source>Maximum input block size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9321227ceb896dab932667412d372239ffeadea1" translate="yes" xml:space="preserve">
          <source>Maximum length of the queue of pending connections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b5718c502319ce23025457cec83006ceff95dd2" translate="yes" xml:space="preserve">
          <source>Maximum number of active streams per HTTP/2 session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f8575730fc901df68f9812937ede31bfeca0fc7" translate="yes" xml:space="preserve">
          <source>Maximum number of connections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa363d1fde0d338e3d20654b16873922195c9309" translate="yes" xml:space="preserve">
          <source>Maximum number of connections that will be allowed to the backend server. The default for this limit is the number of threads per process in the active MPM. In the Prefork MPM, this is always 1, while with other MPMs, it is controlled by the &lt;code&gt;ThreadsPerChild&lt;/code&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="382d1283de0e564a20eab2370252c4eb2acd2d36" translate="yes" xml:space="preserve">
          <source>Maximum number of connections that will be processed simultaneously</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4231f18f7c58732e5ca44c5ffdf10c636d52757d" translate="yes" xml:space="preserve">
          <source>Maximum number of entries in the primary LDAP cache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c73804fc29b7fd22ec2dc1bd811a430457f77e7" translate="yes" xml:space="preserve">
          <source>Maximum number of failover attempts before giving up.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27817ae7715f46a4c5d9807f096a8586082cec5c" translate="yes" xml:space="preserve">
          <source>Maximum number of idle child server processes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a0bf4466841fb0a47d1456b8865b84d1debf104" translate="yes" xml:space="preserve">
          <source>Maximum number of idle threads</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73debc5ac8a0f97a21f3270de09f266520eb3565" translate="yes" xml:space="preserve">
          <source>Maximum number of idle threads. Different MPMs deal with this directive differently.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="431644d91f54db8b0d25f563914156621732b8a5" translate="yes" xml:space="preserve">
          <source>Maximum number of seconds h2 workers remain idle until shut down.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f5d677494b21e2d41d149658947f5f0348bd4b4" translate="yes" xml:space="preserve">
          <source>Maximum number of seconds to spend for benchmarking. This implies a &lt;code&gt;-n 50000&lt;/code&gt; internally. Use this to benchmark the server within a fixed total amount of time. Per default there is no timelimit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e73fa27f7c34dc4577f89a3965d94585a841ff20" translate="yes" xml:space="preserve">
          <source>Maximum number of seconds to wait before the socket times out. Default is 30 seconds. Available in 2.4.4 and later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00aa9630f26836258af65aee5c967484b1cb6e66" translate="yes" xml:space="preserve">
          <source>Maximum number of times the inflation ratio for request bodies can be crossed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb953f2d62131507f63fe5ecabedfa72e0fafd83" translate="yes" xml:space="preserve">
          <source>Maximum number of worker threads to use per child process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="451ae682eea51a1c2643c471c8f8be35741ebee3" translate="yes" xml:space="preserve">
          <source>Maximum size in bytes to buffer by the buffer filter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7edc47236e9e627f2fd0cdea1207479ce52053c" translate="yes" xml:space="preserve">
          <source>Maximum size of inflated request bodies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="123f0c3fbd5da52e54ccde4db06f87fd659963ef" translate="yes" xml:space="preserve">
          <source>Maximum sustained number of connections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19cd7d185cfd95a703e62d43597e9ae28e0646e5" translate="yes" xml:space="preserve">
          <source>Meaning</source>
          <target state="translated">Meaning</target>
        </trans-unit>
        <trans-unit id="1fe2c243854d2f937c57dddc889ce6aedbdd8386" translate="yes" xml:space="preserve">
          <source>Meanwhile, the listener thread is able to accept another connection as soon as it has dispatched this connection to a worker thread (subject to some flow-control logic in the worker MPM that throttles the listener if all the available workers are busy). Though it isn't apparent from this trace, the next &lt;code&gt;accept(2)&lt;/code&gt; can (and usually does, under high load conditions) occur in parallel with the worker thread's handling of the just-accepted connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afcdb9cbfda1c073e0a9251c27db8b4933abae7d" translate="yes" xml:space="preserve">
          <source>Measurements by &lt;a href=&quot;https://www.igvita.com&quot;&gt;google performance labs&lt;/a&gt; show that best performance on TLS connections is reached, if initial record sizes stay below the MTU level, to allow a complete record to fit into an IP packet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="622a2e56f6d7c0edc29dd1ba6eff3f8fab20db4f" translate="yes" xml:space="preserve">
          <source>Media Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54d7e6cacbe43ceccde4342c6d4b812025ee76fb" translate="yes" xml:space="preserve">
          <source>Media Types and Wildcards</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ec7dd956e07328852b10f357c285563f8f0b8aa" translate="yes" xml:space="preserve">
          <source>Members can also be found within sub-groups of a specified LDAP group if &lt;code&gt;&lt;a href=&quot;#authldapmaxsubgroupdepth&quot;&gt;AuthLDAPMaxSubGroupDepth&lt;/a&gt;&lt;/code&gt; is set to a value greater than 0. For example, assume the following entries exist in the LDAP directory:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cea11e59c3b2afbf9fde770828b0118f607f576" translate="yes" xml:space="preserve">
          <source>Memcache based shared object cache provider.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85ce749b40044a04cf755d98ac98d53c3737865d" translate="yes" xml:space="preserve">
          <source>Memcache based shared object cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97199845330d2ee1aab649ac8e6271e48ea8cefe" translate="yes" xml:space="preserve">
          <source>MemcacheConnTTL Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9959b5cba20cdc65baaa25bcbf373cb7e66d65a3" translate="yes" xml:space="preserve">
          <source>Memory allocation is done through the Apache API's pool structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99237a7654624a79630e0a7bb2960f9ba302cecb" translate="yes" xml:space="preserve">
          <source>Memory resource limits are expressed in bytes per process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f761cd3518f5bdec52f69b1540c9f01a0f6d7aa2" translate="yes" xml:space="preserve">
          <source>Memory-mapping</source>
          <target state="translated">Memory-mapping</target>
        </trans-unit>
        <trans-unit id="c59bec818ff18e0824756db1a041c8c0d1e8e4f7" translate="yes" xml:space="preserve">
          <source>MergeTrailers Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4abf69189ddd9cbc673dce8c7c9573b6f686ce1" translate="yes" xml:space="preserve">
          <source>Merging of .htaccess with the main configuration files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df80484ae2c02329bec763a78fbe6f9ba7b7e009" translate="yes" xml:space="preserve">
          <source>Merging of configuration sections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="574505fe2b171971896f2f67ce5b4424d9bbc614" translate="yes" xml:space="preserve">
          <source>Message Digest for creating the Message Authentication Code (MAC)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="221792f2228cef26a54b3d7121a34f08ca606928" translate="yes" xml:space="preserve">
          <source>Message Digests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d72cb29e88037c7f96aad266062bd052ea6ae1c" translate="yes" xml:space="preserve">
          <source>Messages written by the application are logged at log level &lt;code&gt;warn&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc02dd2f9680b4fe10a9116bef71ee35dd42cbcc" translate="yes" xml:space="preserve">
          <source>Messages written to the filter's standard error will be stored in the Apache error log.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd565cdbd453ec7b4aaafb02f690bbdb1dd88340" translate="yes" xml:space="preserve">
          <source>MetaDir</source>
          <target state="translated">MetaDir</target>
        </trans-unit>
        <trans-unit id="0909de765185cd4bd144ac1647ca7a3801eda129" translate="yes" xml:space="preserve">
          <source>MetaDir Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43cac0ab68462d88eff68c53dfb8aa0bb1c3e9c2" translate="yes" xml:space="preserve">
          <source>MetaFiles</source>
          <target state="translated">MetaFiles</target>
        </trans-unit>
        <trans-unit id="ba4c807b1a93ab23d9909a38ac54ccd6687d3ced" translate="yes" xml:space="preserve">
          <source>MetaFiles Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c213b7a5862a6cddde7d31efb552bf3f6cd83a18" translate="yes" xml:space="preserve">
          <source>MetaSuffix</source>
          <target state="translated">MetaSuffix</target>
        </trans-unit>
        <trans-unit id="6fc14de67f5a8240ba7ee2e1132e36ec6b065018" translate="yes" xml:space="preserve">
          <source>MetaSuffix Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88306943fea7e76f9cd57cae0ea6d8b32d2e8434" translate="yes" xml:space="preserve">
          <source>Method</source>
          <target state="translated">Method</target>
        </trans-unit>
        <trans-unit id="db15b29ccbeeaa6dbd87df2d3f802c7c8814f69a" translate="yes" xml:space="preserve">
          <source>Metrowerks CodeWarrior 6.0 or higher with the &lt;a href=&quot;http://developer.novell.com/ndk/cwpdk.htm&quot;&gt;NetWare PDK 3.0&lt;/a&gt; or higher.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4e5609d5f42eb5a7674861a10c16586fa5dcec1" translate="yes" xml:space="preserve">
          <source>Microsoft Internet Explorer (MSIE) will by default ignore server-generated error messages when they are &quot;too small&quot; and substitute its own &quot;friendly&quot; error messages. The size threshold varies depending on the type of error, but in general, if you make your error document greater than 512 bytes, then MSIE will show the server-generated error rather than masking it. More information is available in Microsoft Knowledge Base article &lt;a href=&quot;http://support.microsoft.com/default.aspx?scid=kb;en-us;Q294807&quot;&gt;Q294807&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0c234792bf02f9cfa7386db5bba568ee82634dc" translate="yes" xml:space="preserve">
          <source>Microsoft SDK</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70561157f033be7389caef770f647a9b494ee476" translate="yes" xml:space="preserve">
          <source>Microsoft Visual C++ 6.0 (Visual Studio 97) or later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e86d6956c2fad54938e3bc8f2087e0ec793c9ed8" translate="yes" xml:space="preserve">
          <source>Microsoft Windows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="931c21bf067a36f9be7983199f28ce6fa86a4339" translate="yes" xml:space="preserve">
          <source>Migrating a name-based vhost to an IP-based vhost</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f44e87c1912cdebec65b48bb607c80cd3e00043e" translate="yes" xml:space="preserve">
          <source>MimeMagicFile Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55641e4b570398a28cdff0c2e17ce4ab806f68a7" translate="yes" xml:space="preserve">
          <source>MinSpareServers Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71afe65b7f2ecf8c230d330320ed77a53aacb703" translate="yes" xml:space="preserve">
          <source>MinSpareThreads Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f38a1ab7514aabb5a8283b617dfb4d7ba8bd3b4a" translate="yes" xml:space="preserve">
          <source>Minimal number of worker threads to use per child process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f39b57fb2a3f52f7e6193049830e2fe2e80dc2c1" translate="yes" xml:space="preserve">
          <source>Minimum amount of time the server holds a lock on a DAV resource</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f65b05274a1fe0764b01b4081a80ac7e0212040" translate="yes" xml:space="preserve">
          <source>Minimum number of connection pool entries, unrelated to the actual number of connections. This only needs to be modified from the default for special circumstances where heap memory associated with the backend connections should be preallocated or retained.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6054203262566ad6a96a2ac2d86c32f0fc885cd" translate="yes" xml:space="preserve">
          <source>Minimum number of connections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd9760951da3d9eeb4448fbcf88a27d8c4cf6658" translate="yes" xml:space="preserve">
          <source>Minimum number of idle child server processes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d75c1a9046f3d81c9fddba0565d08525ae90fb6" translate="yes" xml:space="preserve">
          <source>Minimum number of idle threads available to handle request spikes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a7d5c918ef263d4803f7d993d7fce470be49fb0" translate="yes" xml:space="preserve">
          <source>Minimum number of idle threads to handle request spikes. Different MPMs deal with this directive differently.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecbecd18d93f98ccb683bc4868c423770065d5b0" translate="yes" xml:space="preserve">
          <source>Misc variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f2cbd107037ed23248e5058a7a64cd6bae05468" translate="yes" xml:space="preserve">
          <source>Miscellaneous</source>
          <target state="translated">Miscellaneous</target>
        </trans-unit>
        <trans-unit id="0cc43731c5fd03fb614383cfe8bf09240c08cac2" translate="yes" xml:space="preserve">
          <source>Mismatch between character set of content and translation rules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5e89ce43428dfc4510553f5f210e4a3827a8030" translate="yes" xml:space="preserve">
          <source>Missing environment variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92ed7b5dfa553295249deef85da549db1899359b" translate="yes" xml:space="preserve">
          <source>Mixed name-based and IP-based vhosts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b56a581ba47e2ef9495f52dcd381787c985cbd0" translate="yes" xml:space="preserve">
          <source>Mixed port-based and ip-based virtual hosts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c98f488937f9678a8af29bfeb25a7c83770b2a35" translate="yes" xml:space="preserve">
          <source>Mixing &lt;code&gt;Options&lt;/code&gt; with a &lt;code&gt;+&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt; with those without is not valid syntax and will be rejected during server startup by the syntax check with an abort.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01e2b8fcb03ef684574b40021f2119e0889fc444" translate="yes" xml:space="preserve">
          <source>Mixing ProxyPass settings in different contexts does not work:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd27433f1752ec6972f8dbd3fd86adea8bf367f1" translate="yes" xml:space="preserve">
          <source>ModMimeUsePathInfo Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71b73d9f847bee3e4b2f8f010ee436e30f9971de" translate="yes" xml:space="preserve">
          <source>Mod_lua implements a simple database feature for querying and running commands on the most popular database engines (mySQL, PostgreSQL, FreeTDS, ODBC, SQLite, Oracle) as well as mod_dbd.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da778d1bbf9bb5f4509946cca70c698de06842db" translate="yes" xml:space="preserve">
          <source>Mode &lt;em&gt;leaf&lt;/em&gt; available in httpd 2.4.34 and later</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05e831d2ba3c593510b92ca4c78b18f1986fa221" translate="yes" xml:space="preserve">
          <source>Modem standard to simulate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a7f6faf834d09f2d761ea86c25eab488ac4fd56" translate="yes" xml:space="preserve">
          <source>ModemStandard Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cb4229e0f05f1b1b889c8042f4c293ac1f7ebaa" translate="yes" xml:space="preserve">
          <source>Modification date of the file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a57bd342d8fbccdac0a5eb2c4d08e02fb009e33" translate="yes" xml:space="preserve">
          <source>Modified Token</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a7ea294bf33134dce4b142b8b7182de29b978b2" translate="yes" xml:space="preserve">
          <source>Modifiers</source>
          <target state="translated">Modifiers</target>
        </trans-unit>
        <trans-unit id="6d11c3c403714bf5b700a0c8176ceb15eececff4" translate="yes" xml:space="preserve">
          <source>Modifies the environment which is passed to CGI scripts and SSI pages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36f1b37753dc2f44472192fe639fe8b63f4643b3" translate="yes" xml:space="preserve">
          <source>Modify restrictions on HTTP Request Messages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a98d47d8a58a5b1d5609c091a048022ce4587c35" translate="yes" xml:space="preserve">
          <source>Modify the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5750a0c527f71a4bf107042170ffbc3ff273711" translate="yes" xml:space="preserve">
          <source>Modify those examples to match your &lt;code&gt;&lt;a href=&quot;mod/core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mod/mpm_common#pidfile&quot;&gt;PidFile&lt;/a&gt;&lt;/code&gt; settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f03675ae29646cd61cbb68664c74899bfeef5d4" translate="yes" xml:space="preserve">
          <source>Modifying contents with Lua filters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d09a42e84edb465fa3f8fbe1b642999018a53da9" translate="yes" xml:space="preserve">
          <source>Modifying static content using a CGI script</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feadcf2ef777306574eb4a7b509c2de49e4bca13" translate="yes" xml:space="preserve">
          <source>Modifying the response in case of missing authorization weakens the security of the password, because it reveals to a possible attacker, that his guessed password was right.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8ff02892916ff59f7fbd4e617fccd01f6bca576" translate="yes" xml:space="preserve">
          <source>Module</source>
          <target state="translated">Module</target>
        </trans-unit>
        <trans-unit id="3cb22c5e4eabc0e7d3ccf2b60e66f53421b63149" translate="yes" xml:space="preserve">
          <source>Module Index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9970f2be1c5e2f549a053a0a9eb77a1c08dd3d3" translate="yes" xml:space="preserve">
          <source>Module developers should note that their modules must be enabled for cacheing with mod_authn_socache. A single optional API function &lt;var&gt;ap_authn_cache_store&lt;/var&gt; is provided to cache credentials a provider has just looked up or generated. Usage examples are available in &lt;a href=&quot;http://svn.eu.apache.org/viewvc?view=revision&amp;amp;revision=957072&quot;&gt;r957072&lt;/a&gt;, in which three authn providers are enabled for cacheing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="763e37275d445f264b5320e2ce5e83c5e695e670" translate="yes" xml:space="preserve">
          <source>Module identifiers are available in version 2.1 and later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34fbc17e0acddff527b58b3639050a7f351cd927" translate="yes" xml:space="preserve">
          <source>Module(s)</source>
          <target state="translated">Module(s)</target>
        </trans-unit>
        <trans-unit id="d60ceaa995b9a7096628c7dee8145d8ce19d1838" translate="yes" xml:space="preserve">
          <source>Module:</source>
          <target state="translated">Module:</target>
        </trans-unit>
        <trans-unit id="ab7367cb9b30d03a7a825624fc7d63cf1501c21a" translate="yes" xml:space="preserve">
          <source>ModuleIdentifier:</source>
          <target state="translated">ModuleIdentifier:</target>
        </trans-unit>
        <trans-unit id="04e9462c0ff02bb9032b92abd45881a3c7e15fb7" translate="yes" xml:space="preserve">
          <source>Modules</source>
          <target state="translated">Modules</target>
        </trans-unit>
        <trans-unit id="90894b47e74023fd3c14bcd5a05b1baad8cb33fa" translate="yes" xml:space="preserve">
          <source>Modules built for one major version of the Apache HTTP Server will generally not work on another. (e.g. 1.3 vs. 2.0, or 2.0 vs. 2.2) There are usually API changes between one major version and another that require that modules be modified to work with the new version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d676b0193cc5507b13930c4923f224fb30d5480e" translate="yes" xml:space="preserve">
          <source>Modules such as &lt;code&gt;&lt;a href=&quot;../mod/mod_macro&quot;&gt;mod_macro&lt;/a&gt;&lt;/code&gt; are also useful for creating a large number of virtual hosts dynamically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="815ee735249987bc2eb7dc0dba7a717d6a7a8ecd" translate="yes" xml:space="preserve">
          <source>Modules such as &lt;code&gt;&lt;a href=&quot;mod_proxy_html&quot;&gt;mod_proxy_html&lt;/a&gt;&lt;/code&gt; version 3.1 and up use the &lt;code&gt;xml2enc_charset&lt;/code&gt; optional function to retrieve the charset argument to pass to the libxml2 parser, and may use the &lt;code&gt;xml2enc_filter&lt;/code&gt; optional function to postprocess to another encoding. Using mod_xml2enc with an enabled module, no configuration is necessary: the other module will configure mod_xml2enc for you (though you may still want to customise it using the configuration directives below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45d3333f55372f42365854f577de24031a46da68" translate="yes" xml:space="preserve">
          <source>Modules within the server that need access to the session can use the &lt;strong&gt;mod_session.h&lt;/strong&gt; API in order to read from and write to the session. This mechanism is used by modules like &lt;code&gt;&lt;a href=&quot;mod_auth_form&quot;&gt;mod_auth_form&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cae23eb103b3ffe68dbe63a965c01c46efd22245" translate="yes" xml:space="preserve">
          <source>Modules, that wish it, can have one or more SQL statements executed when a connection to a database is created. Example usage could be initializing certain values or adding a log entry when a new connection is made to the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aacc7a8bda0f420093065fc1f77fe5a44d94159" translate="yes" xml:space="preserve">
          <source>Monitoring the Cache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae6a363c5bf6e91ab3cd7e7257aa874e0e898f7f" translate="yes" xml:space="preserve">
          <source>More Efficient IP-Based Virtual Hosting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f925f9bea399a4c9a234cd8ef31a89c2955d37e0" translate="yes" xml:space="preserve">
          <source>More information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6961e77120db7c2b0a46c29ff9da6e17a712a3e0" translate="yes" xml:space="preserve">
          <source>More information on the &lt;a href=&quot;http://www.w3.org/pub/WWW/Daemon/User/Config/General.html#MetaDir&quot;&gt;CERN metafile semantics&lt;/a&gt; is available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="643fd4be5516eba6c0e4f9b3fa296d8df064147c" translate="yes" xml:space="preserve">
          <source>More information on the Lua programming language can be found at the &lt;a href=&quot;http://www.lua.org/&quot;&gt;the Lua website&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a77997ab69f11d9d8cd4e24c8ea226b5ac4d140b" translate="yes" xml:space="preserve">
          <source>More than one hostname may point to the same IP address, and more than one IP address can be attached to the same physical server. Thus, you can run more than one web site on the same physical server, using a feature called &lt;a href=&quot;vhosts/index&quot;&gt;virtual hosts&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7222c0d52c781874f4ac556349b6235f0e52515" translate="yes" xml:space="preserve">
          <source>More verbose output</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c2bbd197cea0db566e3de18bb53ac226ffc1156" translate="yes" xml:space="preserve">
          <source>Most browsers in use today will not allow cookies to be set for a two-part top level domain, such as &lt;code&gt;.co.uk&lt;/code&gt;, although such a domain ostensibly fulfills the requirements above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1379ff259684efd83ad73c784cd5292e80f5ee3e" translate="yes" xml:space="preserve">
          <source>Most commonly, the problem is that &lt;code&gt;&lt;a href=&quot;../mod/core#allowoverride&quot;&gt;AllowOverride&lt;/a&gt;&lt;/code&gt; is not set such that your configuration directives are being honored. Make sure that you don't have a &lt;code&gt;AllowOverride None&lt;/code&gt; in effect for the file scope in question. A good test for this is to put garbage in your &lt;code&gt;.htaccess&lt;/code&gt; file and reload the page. If a server error is not generated, then you almost certainly have &lt;code&gt;AllowOverride None&lt;/code&gt; in effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df7414284df9c756ad129dff4204802a3df070a1" translate="yes" xml:space="preserve">
          <source>Most mechanisms are only available on selected platforms, where the underlying platform and &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#apr&quot;&gt;APR&lt;/a&gt; support it. Mechanisms which aren't available on all platforms are &lt;em&gt;posixsem&lt;/em&gt;, &lt;em&gt;sysvsem&lt;/em&gt;, &lt;em&gt;sem&lt;/em&gt;, &lt;em&gt;pthread&lt;/em&gt;, &lt;em&gt;fcntl&lt;/em&gt;, &lt;em&gt;flock&lt;/em&gt;, and &lt;em&gt;file&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a88bf66a49acee0f9af1b63b13f588b7dd527f8" translate="yes" xml:space="preserve">
          <source>Most modules are compiled by default and have to be disabled explicitly or by using the keyword &lt;code&gt;few&lt;/code&gt; (see &lt;code&gt;--enable-modules&lt;/code&gt;, &lt;code&gt;--enable-mods-shared&lt;/code&gt; and &lt;code&gt;--enable-mods-static&lt;/code&gt; below for further explanation) or &lt;code&gt;--enable-modules=none&lt;/code&gt; to be removed as a group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="639f8a7e85e74f851e167857027fafd0d593317c" translate="yes" xml:space="preserve">
          <source>Most of the time when a CGI program fails, it's because of a problem with the program itself. This is particularly true once you get the hang of this CGI stuff, and no longer make the above two mistakes. The first thing to do is to make sure that your program runs from the command line before testing it via the web server. For example, try:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3268204ae55c6bfdd16f7b03b49c3f01ba790dee" translate="yes" xml:space="preserve">
          <source>Most of this document assumes that you are installing Apache from a binary distribution. If you want to compile Apache yourself (possibly to help with development, or to track down bugs), see the section on &lt;a href=&quot;#comp&quot;&gt;Compiling Apache for NetWare&lt;/a&gt; below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23d7a22b7dfd1b4fe3c1028a33db06cac1f92539" translate="yes" xml:space="preserve">
          <source>Most sites choose this option over the non script aliased CGI approach.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ad927bdbda679c2e27d59fae18b50068e0d5ccc" translate="yes" xml:space="preserve">
          <source>Most users should read about &lt;a href=&quot;name-based#namevip&quot;&gt; Name-based vs. IP-based Virtual Hosts&lt;/a&gt; to decide which type they want to use, then read more about &lt;a href=&quot;name-based&quot;&gt;name-based&lt;/a&gt; or &lt;a href=&quot;ip-based&quot;&gt;IP-based&lt;/a&gt; virtualhosts, and then see &lt;a href=&quot;examples&quot;&gt;some examples&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6a06199cc127e571d3588aef63c79108675eabc" translate="yes" xml:space="preserve">
          <source>Motivation</source>
          <target state="translated">Motivation</target>
        </trans-unit>
        <trans-unit id="b65cdb0e50808b3638ffe1ad90bab8b5374d1840" translate="yes" xml:space="preserve">
          <source>Moved &lt;code&gt;DocumentRoot&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cedebc27cee9b32ae759b28bbf5f4dbb19cf6b8" translate="yes" xml:space="preserve">
          <source>Moved from &lt;code&gt;&lt;a href=&quot;mod_proxy&quot;&gt;mod_proxy&lt;/a&gt;&lt;/code&gt; in Apache 2.3.5. Port ranges available since Apache 2.3.7.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b992853b393d748a3e8629720143bdeebe1a9638" translate="yes" xml:space="preserve">
          <source>Moved out of core in Apache 2.1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="787724415e6b9f882a8a93cfbb3e193cb2b688c4" translate="yes" xml:space="preserve">
          <source>Multi Language Custom Error Documents</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="985f9f09991d9e10fe31912d10798fed9c2b852f" translate="yes" xml:space="preserve">
          <source>Multi-Processing Module implementing a hybrid multi-threaded multi-process web server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5b4c6243fb9936f137fdcb925b607bd644676bb" translate="yes" xml:space="preserve">
          <source>Multi-Processing Module implementing an exclusively threaded web server optimized for Novell NetWare</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70f83410da978b700dc7199801ecfb700f6a139d" translate="yes" xml:space="preserve">
          <source>Multi-Processing Module optimized for Windows NT.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="852588e9cc4a747571aab064fa066fb03a078e2e" translate="yes" xml:space="preserve">
          <source>Multi-Processing Modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="273a2bd809a34ca2907eccf939077da2236175b8" translate="yes" xml:space="preserve">
          <source>Multi-Processing Modules (MPMs)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5252fd491491d97d2aaa7f54f050acd05e33a10c" translate="yes" xml:space="preserve">
          <source>Multi-argument functions are not currently accessible from this starting point</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d4c1b1765af8567036fcda755f4a16acd0a45fa" translate="yes" xml:space="preserve">
          <source>Multi-protocol proxy/gateway server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d95036b71b66a565547cf820837cc98af8fe84ad" translate="yes" xml:space="preserve">
          <source>Multicast address for heartbeat packets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9299765a1078db9a1c6452d77e2fa62810315e3c" translate="yes" xml:space="preserve">
          <source>Multiple &lt;code&gt;IndexOptions&lt;/code&gt; directives for a single directory are now merged together. The result of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e3f2cbfb5148061d616df9243320e94dc605e7a" translate="yes" xml:space="preserve">
          <source>Multiple &lt;code&gt;Listen&lt;/code&gt; directives for the same ip address and port will result in an &lt;code&gt;Address already in use&lt;/code&gt; error message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbfb5f63a698e6df9890925a81dcb9748d7cc3a1" translate="yes" xml:space="preserve">
          <source>Multiple &lt;code&gt;Listen&lt;/code&gt; directives may be used to specify a number of addresses and ports to listen to. The server will respond to requests from any of the listed addresses and ports.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d5388c22165c1c3007da4c4dad10558a1984608" translate="yes" xml:space="preserve">
          <source>Multiple Access Logs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cef56585af9c5a50514a03bf16d7d7c796fa0e6" translate="yes" xml:space="preserve">
          <source>Multiple Hosts and Misdirected Requests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fa3eb3046b683d5c15fca1afb9e7815b37d8dbc" translate="yes" xml:space="preserve">
          <source>Multiple access logs can be created simply by specifying multiple &lt;code&gt;&lt;a href=&quot;mod/mod_log_config#customlog&quot;&gt;CustomLog&lt;/a&gt;&lt;/code&gt; directives in the configuration file. For example, the following directives will create three access logs. The first contains the basic CLF information, while the second and third contain referer and browser information. The last two &lt;code&gt;&lt;a href=&quot;mod/mod_log_config#customlog&quot;&gt;CustomLog&lt;/a&gt;&lt;/code&gt; lines show how to mimic the effects of the &lt;code&gt;ReferLog&lt;/code&gt; and &lt;code&gt;AgentLog&lt;/code&gt; directives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bead74643c7a5311ac7aaa4cccc14cb44c99873f" translate="yes" xml:space="preserve">
          <source>Multiple attribute/value pairs can be specified on the same line separated by spaces or they can be specified in multiple &lt;code&gt;Require ldap-attribute&lt;/code&gt; directives. The effect of listing multiple attribute/values pairs is an OR operation. Access will be granted if any of the listed attribute values match the value of the corresponding attribute in the user object. If the value of the attribute contains a space, only the value must be within double quotes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d7cd0895eade82558fde6e76dd379b255bb365d" translate="yes" xml:space="preserve">
          <source>Multiple content negotiated responses can be stored concurrently, however the caching of partial content is not yet supported by this module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="982547d2028637f8c4f237cbc9aa17eddca5910a" translate="yes" xml:space="preserve">
          <source>Multiple directories or directory paths can also be set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7e763297647a6c2d609b94e10bf8d4bdd65a454" translate="yes" xml:space="preserve">
          <source>Multiple keys can be specified in order to support key rotation. The first key listed will be used for encryption, while all keys listed will be attempted for decryption. To rotate keys across multiple servers over a period of time, add a new secret to the end of the list, and once rolled out completely to all servers, remove the first key from the start of the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b80234fe566a0e9b11876fa271b7903afc744b1f" translate="yes" xml:space="preserve">
          <source>Multiple leading slashes in the requested URL are discarded by the server before directives from this module compares against the requested URL-path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="074e83d85a1db34c26a4177fa1ea29ceb6216199" translate="yes" xml:space="preserve">
          <source>Multiple requests per connection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f8c5a6bda11d5cadca1a834d224fcadf36b9533" translate="yes" xml:space="preserve">
          <source>Multiple variants of the content can be cached side by side, &lt;code&gt;&lt;a href=&quot;mod/mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; uses the &lt;code&gt;Vary&lt;/code&gt; header and the corresponding values of the request headers listed by &lt;code&gt;Vary&lt;/code&gt; to decide on which of many variants to return to the client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa11f3f644b71274f479b3b1a49e7360c675e5f9" translate="yes" xml:space="preserve">
          <source>Multiply the quality factor from the &lt;code&gt;Accept&lt;/code&gt; header with the quality-of-source factor for this variants media type, and select the variants with the highest value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66115f9ab2f9ed60d5f3c977475f829e34f69fcb" translate="yes" xml:space="preserve">
          <source>Multiviews</source>
          <target state="translated">Multiviews</target>
        </trans-unit>
        <trans-unit id="5685a579652eb77bded536230d79783da6c12f6a" translate="yes" xml:space="preserve">
          <source>MultiviewsMatch</source>
          <target state="translated">MultiviewsMatch</target>
        </trans-unit>
        <trans-unit id="b1d8112b57b234adff3fe53b77a97dd490d77118" translate="yes" xml:space="preserve">
          <source>MultiviewsMatch Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d87d3c515ee3bbbd7b2643d13831e00d9257c03a" translate="yes" xml:space="preserve">
          <source>Mutex Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d43d7bea1acba8d4c807e2782a4627aefbea2bc" translate="yes" xml:space="preserve">
          <source>Mutex name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deaa0c393a6613972aaccbf1fecfdad67aa21e88" translate="yes" xml:space="preserve">
          <source>MySQL</source>
          <target state="translated">MySQL</target>
        </trans-unit>
        <trans-unit id="2798c20ccf3485c07a1388527b401b90a37ef998" translate="yes" xml:space="preserve">
          <source>N. Freed, N. Borenstein, &lt;q&gt;Multipurpose Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies&lt;/q&gt;, RFC2045. See for instance &lt;a href=&quot;http://tools.ietf.org/html/rfc2045&quot;&gt;http://tools.ietf.org/html/rfc2045&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d70326b8408b26961e6d7eb49d804d49fb9e642f" translate="yes" xml:space="preserve">
          <source>N: Worker is in drain mode and will only accept existing sticky sessions destined for itself and ignore all other requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82688a36e15b75b060c6c09d17a4414d03ae07c7" translate="yes" xml:space="preserve">
          <source>NCSA extended/combined log format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68a64961e191006bc520d4068f46f5a91d582cb7" translate="yes" xml:space="preserve">
          <source>NC|nocase</source>
          <target state="translated">NC|nocase</target>
        </trans-unit>
        <trans-unit id="fa2a83617a7fb26a202c393d9f6d05664bd2dec6" translate="yes" xml:space="preserve">
          <source>NDBM files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fba1a09c2f2c2d21a15eca4fc613787b8b25b4f6" translate="yes" xml:space="preserve">
          <source>NE|noescape</source>
          <target state="translated">NE|noescape</target>
        </trans-unit>
        <trans-unit id="0654a028e5aea48c8fbb09871b8f397a186c883b" translate="yes" xml:space="preserve">
          <source>NONE</source>
          <target state="translated">NONE</target>
        </trans-unit>
        <trans-unit id="1b333419445b695a6d0521c29e2f9da8bec0863f" translate="yes" xml:space="preserve">
          <source>NONE - no encryption</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b417093b09a471520ecfefb21363f9437b3daeec" translate="yes" xml:space="preserve">
          <source>NOTE: interpolation will only be enabled if &lt;code&gt;&lt;a href=&quot;#proxyhtmlinterp&quot;&gt;ProxyHTMLInterp&lt;/a&gt;&lt;/code&gt; is &lt;var&gt;On&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abb2472e617528e4467653623ecbc4c406bba2fc" translate="yes" xml:space="preserve">
          <source>NSS with certificate database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49ae09ce2553f856c79259d83f47f5e24f238728" translate="yes" xml:space="preserve">
          <source>NSS with certificate database and parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb9bb652ae307a4b6288920d226baf06b7b11c7d" translate="yes" xml:space="preserve">
          <source>NSS with paths containing spaces</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6df0c38dc1d499efc12305bca672896f732a9cd9" translate="yes" xml:space="preserve">
          <source>NSS without a certificate database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="629e34d00024da0840e2f508c36d968ef160fb32" translate="yes" xml:space="preserve">
          <source>NS|nosubreq</source>
          <target state="translated">NS|nosubreq</target>
        </trans-unit>
        <trans-unit id="b3a760f168e2067168f0d6fb7259faa5f6f953fd" translate="yes" xml:space="preserve">
          <source>NWSSLTrustedCerts Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a08d86c17b27eb1398c25d9cc86bf94c0369797" translate="yes" xml:space="preserve">
          <source>NWSSLUpgradeable Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="709a23220f2c3d64d1e1d6d18c4d5280f8d82fca" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">Name</target>
        </trans-unit>
        <trans-unit id="06fe396960b028936ff122b6bbcdc36010954f0b" translate="yes" xml:space="preserve">
          <source>Name (the name of the attribute follows)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61d3924a47c48e910189596a3634999a84e5ec8f" translate="yes" xml:space="preserve">
          <source>Name and attributes for the RFC2109 cookie storing the session</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6e618090b27fc653c2cc53e1553045ca23f71a4" translate="yes" xml:space="preserve">
          <source>Name and attributes for the RFC2109 cookie storing the session ID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="794618ec20bab1ad4b95f8c0e3c3355d21964cba" translate="yes" xml:space="preserve">
          <source>Name and attributes for the RFC2965 cookie storing the session</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="887f65b77bf724a5930ba50406629a7c25488426" translate="yes" xml:space="preserve">
          <source>Name and attributes for the RFC2965 cookie storing the session ID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6734e17559ce55a4e9223d79714d131d917fc898" translate="yes" xml:space="preserve">
          <source>Name being certified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e1352354647752a189581180e5a1fae3abfcfef" translate="yes" xml:space="preserve">
          <source>Name is associated with this</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a0e28a004712ce812008f19d011f38a310ad0ee" translate="yes" xml:space="preserve">
          <source>Name is located in this City</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bf6bd706c68b8027f0d984e8b50dfee123ba7cc" translate="yes" xml:space="preserve">
          <source>Name is located in this Country (ISO code)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89ce1c3567bd89573784963e06ea5518f4265577" translate="yes" xml:space="preserve">
          <source>Name is located in this State/Province</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73a1797d1761d684f7c33b5e48afc4fb64abb4b3" translate="yes" xml:space="preserve">
          <source>Name of expression, created via &lt;code&gt;&lt;a href=&quot;#proxyhcexpr&quot;&gt;ProxyHCExpr&lt;/a&gt;&lt;/code&gt;, used to check response headers for health.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d862487657c3072953ba9b8dec83f4013ee089ee" translate="yes" xml:space="preserve">
          <source>Name of template, created via &lt;code&gt;&lt;a href=&quot;#proxyhctemplate&quot;&gt;ProxyHCTemplate&lt;/a&gt;&lt;/code&gt;, to use for setting health check parameters for this worker</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55ac4c28bcaa5b028d883e250b2261e33698c4ac" translate="yes" xml:space="preserve">
          <source>Name of the directory to find CERN-style meta information files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49b6977231fe0c0a6245059178cfcd80b933a8aa" translate="yes" xml:space="preserve">
          <source>Name of the distributed configuration file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="230bec7d64c99fabbce4477e0882eea53c8036c7" translate="yes" xml:space="preserve">
          <source>Name of the file that will be inserted at the end of the index listing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a6ea4c4bf93ffe6fb4b7a984b0e65f91af8566b" translate="yes" xml:space="preserve">
          <source>Name of the file that will be inserted at the top of the index listing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb9b22be63055e6e9c969553286f7e0d2139da40" translate="yes" xml:space="preserve">
          <source>Name of the file to contain the user name and password. If &lt;code&gt;-c&lt;/code&gt; is given, this file is created if it does not already exist, or rewritten and truncated if it does exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ce4b0849c8525c5701e65b8acb1b09e0c9930a7" translate="yes" xml:space="preserve">
          <source>Name of the file to contain the username, realm and password. If &lt;code&gt;-c&lt;/code&gt; is given, this file is created if it does not already exist, or deleted and recreated if it does exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bdbc0dcf946778d92359d3126b64499f5cd2216" translate="yes" xml:space="preserve">
          <source>Name of the module logging the message</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf79c3c0c17a2ea48c41c3cc4a8b1e9eca4233d5" translate="yes" xml:space="preserve">
          <source>Name of the output dbm files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94a520cd8c2d6c963500deb51bc87861fc2d21c8" translate="yes" xml:space="preserve">
          <source>Name of the provider used by &lt;code&gt;&lt;a href=&quot;mod_proxy_fdpass&quot;&gt;mod_proxy_fdpass&lt;/a&gt;&lt;/code&gt;. See the documentation of this module for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2a399ee40912152f6759918d0b4f2eebc667602" translate="yes" xml:space="preserve">
          <source>Name of the tracking cookie</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af21f9524a0ff9ced82aa25d656aab838e7e1172" translate="yes" xml:space="preserve">
          <source>Name-Based Virtual Hosting is a very popular method of identifying different virtual hosts. It allows you to use the same IP address and the same port number for many different sites. When people move on to SSL, it seems natural to assume that the same method can be used to have lots of different SSL virtual hosts on the same server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4093d67d799b70e28cd638f4aba68af0280027ef" translate="yes" xml:space="preserve">
          <source>Name-based Virtual Host</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5dac1b2110e1d4e562f24f42f4a3169f0f0f3a7" translate="yes" xml:space="preserve">
          <source>Name-based Virtual Host Support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8ad7d7e943ce823d847e60d10a3c6fcacaf2e76" translate="yes" xml:space="preserve">
          <source>Name-based hosts on more than one IP address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2204efb72681372b8fe5727533c63a3b8f7d5910" translate="yes" xml:space="preserve">
          <source>Name-based vhost</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4f077167af72ee9b78a2e83ba74bc6f1f6d8655" translate="yes" xml:space="preserve">
          <source>Name-based virtual hosting builds off of the IP-based virtual host selection algorithm, meaning that searches for the proper server name occur only between virtual hosts that have the best IP-based address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a3fe97756db92d94f749b8798cedadd1e8d0320" translate="yes" xml:space="preserve">
          <source>Name-based virtual hosting is a process applied after the server has selected the best matching IP-based virtual host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="372bd79a5a8a6666ed58e206f6c8c62ea70af4ca" translate="yes" xml:space="preserve">
          <source>Name-based virtual hosting is usually simpler, since you need only configure your DNS server to map each hostname to the correct IP address and then configure the Apache HTTP Server to recognize the different hostnames. Name-based virtual hosting also eases the demand for scarce IP addresses. Therefore you should use name-based virtual hosting unless you are using equipment that explicitly demands IP-based hosting. Historical reasons for IP-based virtual hosting based on client support are no longer applicable to a general-purpose web server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26184f30cee1386dcf303e70f7bed7c081125228" translate="yes" xml:space="preserve">
          <source>Name-based virtual hosts for the best-matching set of &lt;code&gt;&lt;a href=&quot;#virtualhost&quot;&gt;&amp;lt;virtualhost&amp;gt;&lt;/a&gt;&lt;/code&gt;s are processed in the order they appear in the configuration. The first matching &lt;code&gt;&lt;a href=&quot;#servername&quot;&gt;ServerName&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#serveralias&quot;&gt;ServerAlias&lt;/a&gt;&lt;/code&gt; is used, with no different precedence for wildcards (nor for ServerName vs. ServerAlias).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="858051a01d075d35815680dc240a1de940fa6a29" translate="yes" xml:space="preserve">
          <source>Name-based virtual hosts for the best-matching set of &lt;code&gt;&lt;a href=&quot;../mod/core#virtualhost&quot;&gt;&amp;lt;virtualhost&amp;gt;&lt;/a&gt;&lt;/code&gt;s are processed in the order they appear in the configuration. The first matching &lt;code&gt;&lt;a href=&quot;../mod/core#servername&quot;&gt;ServerName&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../mod/core#serveralias&quot;&gt;ServerAlias&lt;/a&gt;&lt;/code&gt; is used, with no different precedence for wildcards (nor for ServerName vs. ServerAlias).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="501583eb14bebb67f262ac24a306484cf5cb4373" translate="yes" xml:space="preserve">
          <source>Name-based vs. IP-based Virtual Hosts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5704e87b471a7d3273a8100a1b4a98f519f25998" translate="yes" xml:space="preserve">
          <source>NameVirtualHost Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6de5abd39240537d10df93fe677a9c0c6be61087" translate="yes" xml:space="preserve">
          <source>NameWidth=[&lt;var&gt;n&lt;/var&gt; | *]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3869500fe1d1c2448c9e051b728586d126423721" translate="yes" xml:space="preserve">
          <source>Negative character class - matches any character not specified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1de809f5a78012b04f5940ad808ef9bd5e6eb085" translate="yes" xml:space="preserve">
          <source>Negotiate the Cipher Suite to be used during data transfer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="368cbdd7c8c358ff72b4f63575c1683eda2c9a39" translate="yes" xml:space="preserve">
          <source>Negotiation</source>
          <target state="translated">Negotiation</target>
        </trans-unit>
        <trans-unit id="d7253b4937e8daedf5312686cdfffc7fe0d8fd13" translate="yes" xml:space="preserve">
          <source>Negotiation in httpd</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adaddbff764770747fbeef198e8bcb80c484c70c" translate="yes" xml:space="preserve">
          <source>Nested conditions are evaluated in 2.4.26 and later</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aae375a3303ccc2def77b5c9f1a08f3ec4c54f7" translate="yes" xml:space="preserve">
          <source>Nested sections are merged after non-nested sections of the same type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78358ad6e71c410c518792be9dd07b804ac58fce" translate="yes" xml:space="preserve">
          <source>Nesting of sections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fe4dcd9ba80079046ce68ffdace463c0eb89077" translate="yes" xml:space="preserve">
          <source>NetWare Libraries for C (LibC)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="138649189ec19d415b662eadbf04d8c5304d94be" translate="yes" xml:space="preserve">
          <source>NetWare only</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="907deda9d5606802803232336d622e9e6d5e8ff1" translate="yes" xml:space="preserve">
          <source>NetWare service packs are available &lt;a href=&quot;http://support.novell.com/misc/patlst.htm#nw&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7ce643c6a9a0b920c621474ca408fa866e68e3d" translate="yes" xml:space="preserve">
          <source>Netscape/Mozilla/iPlanet SDK</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="048ecf96e88481e5c55ee050143051c5ef4f6167" translate="yes" xml:space="preserve">
          <source>Netware</source>
          <target state="translated">Netware</target>
        </trans-unit>
        <trans-unit id="b4e7b083a7468dc8f834262113901977ab688970" translate="yes" xml:space="preserve">
          <source>Network buffer size for proxied HTTP and FTP connections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f774aae3237b439f178c902a03b2616faf80303" translate="yes" xml:space="preserve">
          <source>Network timeout for proxied requests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="025519ea3f483eb11a3c8608b8a731eee0947b1b" translate="yes" xml:space="preserve">
          <source>New Features</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a60961dd1d5db7f466b1aaf59d944399ff966a27" translate="yes" xml:space="preserve">
          <source>New child processes read the configuration files instead of inheriting the configuration from the parent. The behavior will be the same as on Unix if the child process is created at startup or restart, but if a child process is created because the prior one crashed or reached &lt;code&gt;&lt;a href=&quot;mpm_common#maxconnectionsperchild&quot;&gt;MaxConnectionsPerChild&lt;/a&gt;&lt;/code&gt;, any pending changes to the configuration will become active in the child at that point, and the parent and child will be using a different configuration. If planned configuration changes have been partially implemented and the current configuration cannot be parsed, the replacement child process cannot start up and the server will halt. Because of this behavior, configuration files should not be changed until the time of a server restart.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2db3b0036d863db820bf856327d5597228a139b" translate="yes" xml:space="preserve">
          <source>New features with Apache 2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4da63f508a4eb429d01fc9cab7a9c1fcf7b40fc9" translate="yes" xml:space="preserve">
          <source>New features with Apache 2.1/2.2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ba5e543043a72640b2edcdb6fdb16d83d93b98d" translate="yes" xml:space="preserve">
          <source>New features with Apache 2.3/2.4</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb48f77dfb9e5ca840d748ebbbc239e2901a1fb5" translate="yes" xml:space="preserve">
          <source>New in httpd 2.0, some exceptions have been added to the negotiation algorithm to allow graceful fallback when language negotiation fails to find a match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6787c781da665e142d5019cbaff24191788432ab" translate="yes" xml:space="preserve">
          <source>Newer releases of these distros use &lt;code&gt;dnf&lt;/code&gt; rather than &lt;code&gt;yum&lt;/code&gt;. See &lt;a href=&quot;https://fedoraproject.org/wiki/Apache_HTTP_Server&quot;&gt;the Fedora project's documentation&lt;/a&gt; for platform-specific notes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe63b821a305579265a5721febec45bdf40cdab0" translate="yes" xml:space="preserve">
          <source>Next, the worker thread puts the connection to the client (file descriptor 9) in non-blocking mode. The &lt;code&gt;setsockopt(2)&lt;/code&gt; and &lt;code&gt;getsockopt(2)&lt;/code&gt; calls are a side-effect of how Solaris' libc handles &lt;code&gt;fcntl(2)&lt;/code&gt; on sockets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="884496e3f06f631ef88ed52f4fe0cbe5e86525ec" translate="yes" xml:space="preserve">
          <source>Next, you can customize your Apache HTTP server by editing the &lt;a href=&quot;configuring&quot;&gt;configuration files&lt;/a&gt; under &lt;code&gt;&lt;em&gt;PREFIX&lt;/em&gt;/conf/&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2be9fe65d36cac9554000d8fc31c98078aa31f4a" translate="yes" xml:space="preserve">
          <source>Next, you'll need to configure the server to request a password and tell the server which users are allowed access. You can do this either by editing the &lt;code&gt;httpd.conf&lt;/code&gt; file or using an &lt;code&gt;.htaccess&lt;/code&gt; file. For example, if you wish to protect the directory &lt;code&gt;/usr/local/apache/htdocs/secret&lt;/code&gt;, you can use the following directives, either placed in the file &lt;code&gt;/usr/local/apache/htdocs/secret/.htaccess&lt;/code&gt;, or placed in &lt;code&gt;httpd.conf&lt;/code&gt; inside a &amp;lt;Directory &quot;/usr/local/apache/htdocs/secret&quot;&amp;gt; section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94a806704ab94ef8d10f623af40f69f5c84f9110" translate="yes" xml:space="preserve">
          <source>No Range reversals headers are allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cd50fe2dbfb311929fc5f9c2faa8e73600853a3" translate="yes" xml:space="preserve">
          <source>No authentication</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7363457147c97492f5edd676fb359ad49ade6365" translate="yes" xml:space="preserve">
          <source>No authorization variables are set when a user is authorized on the basis of &lt;code&gt;Require valid-user&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b4ec4bc3a1583a45ef28cafacc2288e96e17eaa" translate="yes" xml:space="preserve">
          <source>No cmake build for the APR-iconv subproject is available, and the APR-util cmake build cannot consume an existing APR-iconv build. Thus, &lt;code&gt;&lt;a href=&quot;../mod/mod_charset_lite&quot;&gt;mod_charset_lite&lt;/a&gt;&lt;/code&gt; and possibly some third-party modules cannot be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5160de133f1678f128e77eef1f0d33ed57b01c94" translate="yes" xml:space="preserve">
          <source>No debug information is generated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ebf199b2608ea11f01b136a70d9e66bc594cad6" translate="yes" xml:space="preserve">
          <source>No digest (Null choice)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a8aae050cf3bfbb33bf70ecac44c2950af0c7d7" translate="yes" xml:space="preserve">
          <source>No dynamic health check performed. Choices are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7d13ff2387763da97b2738f07b9827a8da1236f" translate="yes" xml:space="preserve">
          <source>No dynamic health checking done</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c1a2fe372b2bed74b5ce1729a4f7cb6b9f15788" translate="yes" xml:space="preserve">
          <source>No encryption</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3518dffe0672f0f7d2dcbd1509a8a46e18a84e0f" translate="yes" xml:space="preserve">
          <source>No match</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74881938295c4917527e304c4f5f8c7e33bf5b59" translate="yes" xml:space="preserve">
          <source>No need for &lt;code&gt;imagemap.conf&lt;/code&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9906233e704940eafcacea710356088ac79499a0" translate="yes" xml:space="preserve">
          <source>No overlapping Range headers are allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f495620bca181e24e66a2e89b7fc208b525b71d" translate="yes" xml:space="preserve">
          <source>No request is being handled over this connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="050a5680a58514e46e0e288d16d13c90033f44da" translate="yes" xml:space="preserve">
          <source>No special handling takes place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa49fff19800d7df0e71cbd1b148c21821c1e98d" translate="yes" xml:space="preserve">
          <source>No special treatment of executable files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c46e81b51a837e81be0ad6d075f7bfd0f0eed1c" translate="yes" xml:space="preserve">
          <source>No, the username/password is transmitted encrypted. The icon in Netscape browsers is not actually synchronized with the SSL/TLS layer. It only toggles to the locked state when the first part of the actual webpage data is transferred, which may confuse people. The Basic Authentication facility is part of the HTTP layer, which is above the SSL/TLS layer in HTTPS. Before any HTTP data communication takes place in HTTPS, the SSL/TLS layer has already completed its handshake phase, and switched to encrypted communication. So don't be confused by this icon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="963dfc6547e3689689e7488bc49b9c6111d7a6d4" translate="yes" xml:space="preserve">
          <source>NoChange</source>
          <target state="translated">NoChange</target>
        </trans-unit>
        <trans-unit id="0faa9123ecbf010817f4889d525e570b82a5ef9b" translate="yes" xml:space="preserve">
          <source>NoDecode option available in 2.3.12 and later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a679daa7681bda3e8ec8f6063dc2e39232934f8f" translate="yes" xml:space="preserve">
          <source>NoProxy Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77762f4880d7272de674792e307d0e9681504feb" translate="yes" xml:space="preserve">
          <source>Non Existent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64208ee40031e48f3e08c48740274d31380b5f45" translate="yes" xml:space="preserve">
          <source>Non Script Aliased CGI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96eea88569249100fbd2080088b2d3e0014ff54c" translate="yes" xml:space="preserve">
          <source>Non-2xx responses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8d319486d8dd58543f8e9da660b95a6ae745f59" translate="yes" xml:space="preserve">
          <source>Non-Basic authentication; generally, determining the user id of the client and returning it from the authorizer; see the &lt;code&gt;UserExpr&lt;/code&gt; option below</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73afe8afe2b13dfb7b2e174c7177a60e1c98a724" translate="yes" xml:space="preserve">
          <source>Non-enabled modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47e7a9c4a4a4d384acdb0a8628267c694a7210e7" translate="yes" xml:space="preserve">
          <source>Non-field delimiting space</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3af0852417208a7cf533749c5454019e2effa086" translate="yes" xml:space="preserve">
          <source>Non-text documents are always served &quot;binary&quot; without conversion. This seems to be the most sensible choice for, .&lt;em&gt;e.g.&lt;/em&gt;, GIF/ZIP/AU file types. This of course requires the user to copy them to the mainframe host using the &quot;&lt;code&gt;rcp -b&lt;/code&gt;&quot; binary switch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eef6648406c333a4035cd5e60d0bf2ecf2606d7" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">None</target>
        </trans-unit>
        <trans-unit id="0e4047daa0f0fa538dbe335714f9549ff601e708" translate="yes" xml:space="preserve">
          <source>Nonfatal errors may have security implications for .htaccess users. For example, if AllowOverride disallows AuthConfig, users' configuration designed to restrict access to a site will be disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec0ff226b09616f1c31cf0a643e50881d0625f90" translate="yes" xml:space="preserve">
          <source>Nonfatal=[Override|Unknown|All]</source>
          <target state="translated">Nonfatal=[Override|Unknown|All]</target>
        </trans-unit>
        <trans-unit id="dd4f0cae38db1df2652148005256124de3d1b0ad" translate="yes" xml:space="preserve">
          <source>Normal but significant condition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0af29de9a6fcd2aa51552dd44dc95bfe137ada4c" translate="yes" xml:space="preserve">
          <source>Normal handler phase</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f7837c0c1266685fd140647fe28863da7d445e4" translate="yes" xml:space="preserve">
          <source>Normal starting, restarting and shutting down of an Apache service is usually done via the Apache Service Monitor, by using commands like &lt;code&gt;NET START Apache2.4&lt;/code&gt; and &lt;code&gt;NET STOP Apache2.4&lt;/code&gt; or via normal Windows service management. Before starting Apache as a service by any means, you should test the service's configuration file by using:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce03909f6162410298c07407fc78e9572eb8aa00" translate="yes" xml:space="preserve">
          <source>Normal string-valued functions take one string as argument and return a string. Functions names are not case sensitive. Modules may register additional functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="547a55c50f3aff4e3a449b7e3f450be5a8b6fce4" translate="yes" xml:space="preserve">
          <source>Normally it is not necessary to change the maximum packet size. Problems with the default value have been reported when sending certificates or certificate chains.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5791ff987be30cac43d452dd19d1fa0d16514c13" translate="yes" xml:space="preserve">
          <source>Normally you'll set this globally. If you set &lt;code&gt;ProxyHTMLEvents&lt;/code&gt; in more than one scope so that one overrides the other, you'll need to specify a complete set in each of those scopes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3a1f699a4f3d4dca443c4012060a56efaf27052" translate="yes" xml:space="preserve">
          <source>Normally you'll set this globally. If you set &lt;code&gt;ProxyHTMLLinks&lt;/code&gt; in more than one scope so that one overrides the other, you'll need to specify a complete set in each of those scopes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d417516fb357bdce711f85a1185bd7dd9331d8d" translate="yes" xml:space="preserve">
          <source>Normally, &lt;code&gt;&lt;a href=&quot;mod_charset_lite&quot;&gt;mod_charset_lite&lt;/a&gt;&lt;/code&gt; will only perform translation on a small subset of possible mimetypes. When the &lt;code&gt;TranslateAllMimeTypes&lt;/code&gt; keyword is specified for a given configuration section, translation is performed without regard for mimetype.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0ee695bfa59cc78bcb942a401d8c977ed68f863" translate="yes" xml:space="preserve">
          <source>Normally, FrontPage uses FrontPage-web-specific user/group files (i.e., the &lt;code&gt;&lt;a href=&quot;mod_authn_file&quot;&gt;mod_authn_file&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mod_authz_groupfile&quot;&gt;mod_authz_groupfile&lt;/a&gt;&lt;/code&gt; modules) to handle all authentication. Unfortunately, it is not possible to just change to LDAP authentication by adding the proper directives, because it will break the &lt;em&gt;Permissions&lt;/em&gt; forms in the FrontPage client, which attempt to modify the standard text-based authorization files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9e3d8fd3079dbdaa517b85a4b3abec5c005be86" translate="yes" xml:space="preserve">
          <source>Normally, certificates are valid for around 90 days and &lt;code&gt;&lt;a href=&quot;mod_md&quot;&gt;mod_md&lt;/a&gt;&lt;/code&gt; will renew them the earliest 33% of their complete lifetime before they expire (so for 90 days validity, 30 days before it expires). If you think this is not what you need, you can specify either the exact time, as in:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f97ad1343710112cf2b4376aa664ee894feb0f8" translate="yes" xml:space="preserve">
          <source>Normally, each authorization module listed in &lt;code&gt;&lt;a href=&quot;#authbasicprovider&quot;&gt;AuthBasicProvider&lt;/a&gt;&lt;/code&gt; will attempt to verify the user, and if the user is not found in any provider, access will be denied. Setting the &lt;code&gt;AuthBasicAuthoritative&lt;/code&gt; directive explicitly to &lt;code&gt;Off&lt;/code&gt; allows for both authentication and authorization to be passed on to other non-provider-based modules if there is &lt;strong&gt;no userID&lt;/strong&gt; or &lt;strong&gt;rule&lt;/strong&gt; matching the supplied userID. This should only be necessary when combining &lt;code&gt;&lt;a href=&quot;mod_auth_basic&quot;&gt;mod_auth_basic&lt;/a&gt;&lt;/code&gt; with third-party modules that are not configured with the &lt;code&gt;&lt;a href=&quot;#authbasicprovider&quot;&gt;AuthBasicProvider&lt;/a&gt;&lt;/code&gt; directive. When using such modules, the order of processing is determined in the modules' source code and is not configurable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d58b7868874eee7c50c379f70736089b4f5e932" translate="yes" xml:space="preserve">
          <source>Normally, each authorization module listed in &lt;code&gt;&lt;a href=&quot;#authformprovider&quot;&gt;AuthFormProvider&lt;/a&gt;&lt;/code&gt; will attempt to verify the user, and if the user is not found in any provider, access will be denied. Setting the &lt;code&gt;AuthFormAuthoritative&lt;/code&gt; directive explicitly to &lt;code&gt;Off&lt;/code&gt; allows for both authentication and authorization to be passed on to other non-provider-based modules if there is &lt;strong&gt;no userID&lt;/strong&gt; or &lt;strong&gt;rule&lt;/strong&gt; matching the supplied userID. This should only be necessary when combining &lt;code&gt;&lt;a href=&quot;mod_auth_form&quot;&gt;mod_auth_form&lt;/a&gt;&lt;/code&gt; with third-party modules that are not configured with the &lt;code&gt;&lt;a href=&quot;#authformprovider&quot;&gt;AuthFormProvider&lt;/a&gt;&lt;/code&gt; directive. When using such modules, the order of processing is determined in the modules' source code and is not configurable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbac6b75a27737b4ee9c7b618f0b55db081f16be" translate="yes" xml:space="preserve">
          <source>Normally, if multiple &lt;code&gt;Options&lt;/code&gt; could apply to a directory, then the most specific one is used and others are ignored; the options are not merged. (See &lt;a href=&quot;../sections#merging&quot;&gt;how sections are merged&lt;/a&gt;.) However if &lt;em&gt;all&lt;/em&gt; the options on the &lt;code&gt;Options&lt;/code&gt; directive are preceded by a &lt;code&gt;+&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt; symbol, the options are merged. Any options preceded by a &lt;code&gt;+&lt;/code&gt; are added to the options currently in force, and any options preceded by a &lt;code&gt;-&lt;/code&gt; are removed from the options currently in force.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f951fe6a9c1abbcc08eaaf055658aefadd1da425" translate="yes" xml:space="preserve">
          <source>Normally, mod_proxy will canonicalise ProxyPassed URLs. But this may be incompatible with some backends, particularly those that make use of &lt;var&gt;PATH_INFO&lt;/var&gt;. The optional &lt;var&gt;nocanon&lt;/var&gt; keyword suppresses this and passes the URL path &quot;raw&quot; to the backend. Note that this keyword may affect the security of your backend, as it removes the normal limited protection against URL-based attacks provided by the proxy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72881d5908848fec4f0b706d6cbb8a4cd1edab89" translate="yes" xml:space="preserve">
          <source>Normally, mod_proxy will include the query string when generating the &lt;var&gt;SCRIPT_FILENAME&lt;/var&gt; environment variable. The optional &lt;var&gt;noquery&lt;/var&gt; keyword (available in httpd 2.4.1 and later) prevents this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37d9beed81b633ca60207c5d7b1305bbd5f87d85" translate="yes" xml:space="preserve">
          <source>Normally, the expression is evaluated before authentication. However, if the expression returns false and references the variable &lt;code&gt;%{REMOTE_USER}&lt;/code&gt;, authentication will be performed and the expression will be re-evaluated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83c2b03c77d1caddc2c517e1a7f99918e8c0660c" translate="yes" xml:space="preserve">
          <source>Normally, when using Basic Authentication, the providers listed in &lt;code&gt;&lt;a href=&quot;#authbasicprovider&quot;&gt;AuthBasicProvider&lt;/a&gt;&lt;/code&gt; attempt to verify a user by checking their data stores for a matching username and associated password. The stored passwords are usually encrypted, but not necessarily so; each provider may choose its own storage scheme for passwords.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="852615d198265196a89351a8447ae6aa1d93b6a5" translate="yes" xml:space="preserve">
          <source>Not Before Date, Not After Date</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0e043f538c92e62d75d7a858c5b2fda51da7845" translate="yes" xml:space="preserve">
          <source>Not Yet Implemented</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61d86c62f26fce6c77a15d06abaca7bf662a5cbd" translate="yes" xml:space="preserve">
          <source>Not all LDAP toolkits support all the above modes. An error message will be logged at runtime if a mode is not supported, and the connection to the LDAP server will fail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="653b732528828a098111856445b5ecef96c5f5ce" translate="yes" xml:space="preserve">
          <source>Not all clients can understand all of these formats, but you should use the newest one that is generally acceptable to your users' browsers. At the time of writing, most browsers support all three of these formats, with &lt;code&gt;Cookie2&lt;/code&gt; being the preferred format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61fbfb4654504563939de4e2903ca88d3ffcddad" translate="yes" xml:space="preserve">
          <source>Not all platforms support both directives. You will receive an error message in the server error log if you attempt to use an unsupported directive. If given an unsupported directive, the server will start but the file will not be cached. On platforms that support both directives, you should experiment with both to see which works best for you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ae5128acb0742ac2afea5ffe7dfb2fee9f8c3df" translate="yes" xml:space="preserve">
          <source>Not currently implemented</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75959975864f20d3a671112f0b679a818b48c303" translate="yes" xml:space="preserve">
          <source>Not just any file is parsed for SSI directives. You have to tell Apache which files should be parsed. There are two ways to do this. You can tell Apache to parse any file with a particular file extension, such as &lt;code&gt;.shtml&lt;/code&gt;, with the following directives:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac2db1fd0f24bb669a5a6b702ce3186f89014603" translate="yes" xml:space="preserve">
          <source>Not supported by mod_ssl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eb3053c3b1502d7274f2dae7aec38e08c104b68" translate="yes" xml:space="preserve">
          <source>Not that the all-important header is &lt;code&gt;content-length&lt;/code&gt;, because it determines whether or not the container looks for another packet immediately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c924e3088204ee77ba681f72be3444357932fca" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="translated">Note</target>
        </trans-unit>
        <trans-unit id="d919d38901fac4db34c15324a8736079e6eaa881" translate="yes" xml:space="preserve">
          <source>Note also that</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bc9c54950c6a23872b0007867fa8bb0328ad6a4" translate="yes" xml:space="preserve">
          <source>Note also that a typemap file will take precedence over the filename's extension, even when Multiviews is on. If the variants have different source qualities, that may be indicated by the &quot;qs&quot; parameter to the media type, as in this picture (available as JPEG, GIF, or ASCII-art):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aeac12cd5c050776411d980b0098ec318428f6e" translate="yes" xml:space="preserve">
          <source>Note also that the example rewrites only the root URL. That is, it rewrites a request for &lt;code&gt;http://example.com/&lt;/code&gt;, but not a request for &lt;code&gt;http://example.com/page.html&lt;/code&gt;. If you have in fact changed your document root - that is, if &lt;strong&gt;all&lt;/strong&gt; of your content is in fact in that subdirectory, it is greatly preferable to simply change your &lt;code&gt;&lt;a href=&quot;../mod/core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt; directive, or move all of the content up one directory, rather than rewriting URLs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11e181f150295a1cd5bd34f764fb831bb789f8e7" translate="yes" xml:space="preserve">
          <source>Note also that, in the above example, you can replace the list of IP addresses with &lt;code&gt;*&lt;/code&gt;, which will cause the server to respond the same on all addresses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1016b350eed25d6b33672f98f74111b981aa4ced" translate="yes" xml:space="preserve">
          <source>Note for people familiar with the Unix version of Apache: these commands provide a Windows equivalent to &lt;code&gt;kill -TERM &lt;em&gt;pid&lt;/em&gt;&lt;/code&gt; and &lt;code&gt;kill -USR1 &lt;em&gt;pid&lt;/em&gt;&lt;/code&gt;. The command line option used, &lt;code&gt;-k&lt;/code&gt;, was chosen as a reminder of the &lt;code&gt;kill&lt;/code&gt; command used on Unix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfb1948e6d7f14a81763ec742969f9675600d05f" translate="yes" xml:space="preserve">
          <source>Note on Caching</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21bdac9d2532ecadce8eee03dfa377069e269be3" translate="yes" xml:space="preserve">
          <source>Note on hyperlinks and naming conventions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9894953b39d5f391208f4396d719638fdd5f9ffb" translate="yes" xml:space="preserve">
          <source>Note only the &lt;code&gt;.dsp&lt;/code&gt; files are maintained between &lt;code&gt;release&lt;/code&gt; builds. The &lt;code&gt;.mak&lt;/code&gt; files are NOT regenerated, due to the tremendous waste of reviewer's time. Therefore, you cannot rely on the &lt;code&gt;NMAKE&lt;/code&gt; commands above to build revised &lt;code&gt;.dsp&lt;/code&gt; project files unless you then export all &lt;code&gt;.mak&lt;/code&gt; files yourself from the project. This is unnecessary if you build from within the Microsoft Developer Studio environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec407eb065843b21e6e7ce9b64cb9c8155887657" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;&lt;a href=&quot;mod_dav_fs&quot;&gt;mod_dav_fs&lt;/a&gt;&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; need this generic locking module, because it uses its own more specialized version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5fb980e5d74a6eb737a05a558762c75bcb872f0" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;AllowOverride AuthConfig&lt;/code&gt; must be in effect for these directives to have any effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19ca72ef99ebb683448927a3cceff355f66f8b5f" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;AllowOverride Options&lt;/code&gt; and &lt;code&gt;AllowOverride FileInfo&lt;/code&gt; must both be in effect for these directives to have any effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21b23d7dd3bdb1d4f1a32e57880e4f608e2a97c8" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;AuthzDBDLoginToReferer&lt;/code&gt; takes precedence if both are set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b14960a8fa14380184633b8ebf4cb4cae37bf2d0" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;example&lt;/code&gt; would also be sufficient to match any of these sites.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dc8f79210067fc549a1c3f7df9e0cfc8491a540" translate="yes" xml:space="preserve">
          <source>Note that a syntax error in a valid directive will still cause an internal server error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04f74e77cfea42ffeedf665ca12193140877918d" translate="yes" xml:space="preserve">
          <source>Note that all &lt;code&gt;&lt;a href=&quot;#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; directives are processed, unlike a typical firewall, where only the first match is used. The last match is effective (also unlike a typical firewall). Additionally, the order in which lines appear in the configuration files is not significant -- all &lt;code&gt;&lt;a href=&quot;#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt; lines are processed as one group, all &lt;code&gt;&lt;a href=&quot;#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; lines are considered as another, and the default state is considered by itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd3e472a18548909b51bddd489539928003f0ca5" translate="yes" xml:space="preserve">
          <source>Note that changing the metadata for a file does not change the value of the &lt;code&gt;Last-Modified&lt;/code&gt; header. Thus, previously cached copies may still be used by a client or proxy, with the previous headers. If you change the metadata (language, content type, character set or encoding) you may need to 'touch' affected files (updating their last modified date) to ensure that all visitors are receive the corrected content headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c8dcb80b13267112bc96027cc831b7bbeaf74ce" translate="yes" xml:space="preserve">
          <source>Note that environment variables do not survive an external redirect. You might consider using the [CO] flag to set a cookie.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d4de95c197c7007c9d538fac0714016d08915b8" translate="yes" xml:space="preserve">
          <source>Note that form submission involves URLEncoding the form data: in this case the username and password. You should therefore pick usernames and passwords that avoid characters that are URLencoded in form submission, or you may get unexpected results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d14eb5c64ec096d5aeb639b885c333cb31aa3dd" translate="yes" xml:space="preserve">
          <source>Note that if the response contains &lt;code&gt;Location:&lt;/code&gt; header (in order to issue a client-side redirect), the script &lt;em&gt;must&lt;/em&gt; emit an appropriate &lt;code&gt;Status:&lt;/code&gt; header (such as &lt;code&gt;302 Found&lt;/code&gt;). Otherwise the &lt;code&gt;Location:&lt;/code&gt; header may have no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c28e4dd88a7fe207ba3b62503da2cfea97159c6" translate="yes" xml:space="preserve">
          <source>Note that if you have a wildcard SSL certificate, or a certificate that has multiple hostnames on it using subjectAltName fields, you can use SSL on name-based virtual hosts without further workarounds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ea833cfa5e98a34c2aa925d28a9b097cd63461a" translate="yes" xml:space="preserve">
          <source>Note that if you include a trailing / on the &lt;var&gt;URL-path&lt;/var&gt; then the server will require a trailing / in order to expand the alias. That is, if you use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e572258f42ce03cbf4a7605d8a2809cd87cff161" translate="yes" xml:space="preserve">
          <source>Note that if you use a modification date based setting, the Expires header will &lt;strong&gt;not&lt;/strong&gt; be added to content that does not come from a file on disk. This is due to the fact that there is no modification time for such content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9d6e3935f9ac6a39cc5190ed8529a792e427487" translate="yes" xml:space="preserve">
          <source>Note that in many cases these two are exactly the same thing. However, the &lt;code&gt;file&lt;/code&gt; attribute doesn't respect URL-space aliases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38b6f01052f77be546f9a8045d304f21664ce8c1" translate="yes" xml:space="preserve">
          <source>Note that in many configurations, the client sending the request body will be untrusted so a denial of service attack by consumption of memory must be considered when changing this configuration setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d4a864c5083265fca078be168dd14eef55d2a86" translate="yes" xml:space="preserve">
          <source>Note that it is completely equivalent to put a &lt;code&gt;.htaccess&lt;/code&gt; file in a directory &lt;code&gt;/www/htdocs/example&lt;/code&gt; containing a directive, and to put that same directive in a Directory section &lt;code&gt;&amp;lt;Directory &quot;/www/htdocs/example&quot;&amp;gt;&lt;/code&gt; in your main server configuration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2706f9edb8a0043d90ae3599f09e678cb4c6d719" translate="yes" xml:space="preserve">
          <source>Note that it's possible to scope the directives, such as within a &lt;code&gt;&amp;lt;Location &quot;/server-status&quot;&amp;gt;&lt;/code&gt; section. In this case the DNS lookups are only performed on requests matching the criteria. Here's an example which disables lookups except for &lt;code&gt;.html&lt;/code&gt; and &lt;code&gt;.cgi&lt;/code&gt; files:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b0eda81d2d950f3097855b2c6c2c617bd81acb7" translate="yes" xml:space="preserve">
          <source>Note that loading &lt;code&gt;&lt;a href=&quot;mod_status&quot;&gt;mod_status&lt;/a&gt;&lt;/code&gt; will change the default behavior to ExtendedStatus On, while other third party modules may do the same. Such modules rely on collecting detailed information about the state of all workers. The default is changed by &lt;code&gt;&lt;a href=&quot;mod_status&quot;&gt;mod_status&lt;/a&gt;&lt;/code&gt; beginning with version 2.3.6. The previous default was always Off.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7312d200066ebe31d04f8e9c25bce01e9252e552" translate="yes" xml:space="preserve">
          <source>Note that logging a user out does not delete the session; it merely removes the username and password from the session. If this results in an empty session, the net effect will be the removal of that session, but this is not guaranteed. If you want to guarantee the removal of a session, set the &lt;code&gt;&lt;a href=&quot;mod_session#sessionmaxage&quot;&gt;SessionMaxAge&lt;/a&gt;&lt;/code&gt; directive to a small value, like 1 (setting the directive to zero would mean no session age limit).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39f74743aef8aeb272bf75405f72f5daa2e91da3" translate="yes" xml:space="preserve">
          <source>Note that many of these examples won't work unchanged in your particular server configuration, so it's important that you understand them, rather than merely cutting and pasting the examples into your configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb972a8e45cf590ef0726b1d96d0d4c3a0712bc6" translate="yes" xml:space="preserve">
          <source>Note that on Windows, you may run into problems when running many piped logger processes, especially when HTTPD is running as a service. This is caused by running out of desktop heap space. The desktop heap space given to each service is specified by the third argument to the &lt;code&gt;SharedSection&lt;/code&gt; parameter in the HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\SessionManager\SubSystems\Windows registry value. &lt;strong&gt;Change this value with care&lt;/strong&gt;; the normal caveats for changing the Windows registry apply, but you might also exhaust the desktop heap pool if the number is adjusted too high.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02a8c8413aa10461dd810b786dfb39de42b18861" translate="yes" xml:space="preserve">
          <source>Note that questions about CGI problems should &lt;strong&gt;never&lt;/strong&gt; be posted to the Apache bug database unless you are sure you have found a problem in the Apache source code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3884fed4f3da5159a6a830b1cb79058755b070e8" translate="yes" xml:space="preserve">
          <source>Note that rewrite configurations are not inherited by virtual hosts. This means that you need to have a &lt;code&gt;RewriteEngine on&lt;/code&gt; directive for each virtual host in which you wish to use rewrite rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eff3492228b610fa288a49201cc2a3558d0a5319" translate="yes" xml:space="preserve">
          <source>Note that running the server under chroot is not simple, and requires additional setup, particularly if you are running scripts such as CGI or PHP. Please make sure you are properly familiar with the operation of chroot before attempting to use this feature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2378f549cc1d8407151af3341b29f0e655cfef2" translate="yes" xml:space="preserve">
          <source>Note that script logging is meant to be a debugging feature when writing CGI scripts, and is not meant to be activated continuously on running servers. It is not optimized for speed or efficiency, and may have security problems if used in a manner other than that for which it was designed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46476175a8a29c1ac92b12c338b055d762fadd4c" translate="yes" xml:space="preserve">
          <source>Note that searching large text files is &lt;em&gt;very&lt;/em&gt; inefficient; &lt;code&gt;&lt;a href=&quot;mod_authn_dbm#authdbmuserfile&quot;&gt;AuthDBMUserFile&lt;/a&gt;&lt;/code&gt; should be used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58c37c3eadb41c92d0f79e85b806915e1755b832" translate="yes" xml:space="preserve">
          <source>Note that searching large text files is &lt;em&gt;very&lt;/em&gt; inefficient; &lt;code&gt;&lt;a href=&quot;mod_authz_dbm#authdbmgroupfile&quot;&gt;AuthDBMGroupFile&lt;/a&gt;&lt;/code&gt; provides a much better performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70a5a43132bc0933bb85753f1c4bd0e7d6adb050" translate="yes" xml:space="preserve">
          <source>Note that setting &lt;code&gt;ProxyMaxForwards&lt;/code&gt; is a violation of the HTTP/1.1 protocol (RFC2616), which forbids a Proxy setting &lt;code&gt;Max-Forwards&lt;/code&gt; if the Client didn't set it. Earlier Apache httpd versions would always set it. A negative &lt;code&gt;ProxyMaxForwards&lt;/code&gt; value, including the default -1, gives you protocol-compliant behavior but may leave you open to loops.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e00793b18c4e75b81ba2fca1b6b59735635537cd" translate="yes" xml:space="preserve">
          <source>Note that the 'P'attern query argument is tested &lt;em&gt;after&lt;/em&gt; the usual &lt;code&gt;&lt;a href=&quot;#indexignore&quot;&gt;IndexIgnore&lt;/a&gt;&lt;/code&gt; directives are processed, and all file names are still subjected to the same criteria as any other autoindex listing. The Query Arguments parser in &lt;code&gt;&lt;a href=&quot;mod_autoindex&quot;&gt;mod_autoindex&lt;/a&gt;&lt;/code&gt; will stop abruptly when an unrecognized option is encountered. The Query Arguments must be well formed, according to the table above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="954f8b0cfbd141f144614dfbbb240bfff7b4bf84" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;&lt;a href=&quot;mod_auth_basic#authbasicfake&quot;&gt;AuthBasicFake&lt;/a&gt;&lt;/code&gt; directive within &lt;code&gt;&lt;a href=&quot;mod_auth_basic&quot;&gt;mod_auth_basic&lt;/a&gt;&lt;/code&gt; can be used as a more general mechanism for faking basic authentication, giving control over the structure of both the username and password.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22f8bbdfaff446a9057bac21f6a31f0653a28d7f" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;PT&lt;/code&gt; flag is implied in per-directory contexts such as &lt;code&gt;&lt;a href=&quot;../mod/core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; sections or in &lt;code&gt;.htaccess&lt;/code&gt; files. The only way to circumvent that is to rewrite to &lt;code&gt;-&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cc23bf67f979e9102f01e59f05c3763b629a83a" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;SSLProxyEngine&lt;/code&gt; directive should not, in general, be included in a virtual host that will be acting as a forward proxy (using &lt;code&gt;&lt;a href=&quot;mod_proxy#proxy&quot;&gt;&amp;lt;Proxy&amp;gt;&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;mod_proxy#proxyrequests&quot;&gt;ProxyRequests&lt;/a&gt;&lt;/code&gt; directives). &lt;code&gt;SSLProxyEngine&lt;/code&gt; is not required to enable a forward proxy server to proxy SSL/TLS requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28405da428b80bc9a574db9d9ec5cb8ed1773a8a" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;Script&lt;/code&gt; command defines default actions only. If a CGI script is called, or some other resource that is capable of handling the requested method internally, it will do so. Also note that &lt;code&gt;Script&lt;/code&gt; with a method of &lt;code&gt;GET&lt;/code&gt; will only be called if there are query arguments present (&lt;em&gt;e.g.&lt;/em&gt;, foo.html?hi). Otherwise, the request will proceed normally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="008d5d949c99df99059b8086c55bf5744ca3f09f" translate="yes" xml:space="preserve">
          <source>Note that the documents do not need to be relative to the directory;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1147cffbcc5429fcc02050ead702755ae91cf1ac" translate="yes" xml:space="preserve">
          <source>Note that the following is still supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54e7bf61731895047a28123fab36e3c465c61bb3" translate="yes" xml:space="preserve">
          <source>Note that the last three examples above match exactly the same set of hosts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c848b020b5b866cbc415e372cc9a854597272827" translate="yes" xml:space="preserve">
          <source>Note that the match no longer support substring matches. They can be replaced by regular expression matches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdb0f16d3e2f3cc9fdc47e22c951eae96e4abc34" translate="yes" xml:space="preserve">
          <source>Note that the proxy_html filter will only act on HTML data (Content-Type text/html or application/xhtml+xml) and when the data are proxied. You can override this (at your own risk) by setting the &lt;var&gt;PROXY_HTML_FORCE&lt;/var&gt; environment variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8942caa79050bd880ca547a48a423828f2b896cb" translate="yes" xml:space="preserve">
          <source>Note that there are methods of accomplishing this which do not use mod_rewrite. Note also that any technique that relies on the clients &lt;code&gt;USER_AGENT&lt;/code&gt; string can be circumvented very easily, since that string can be changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c749049692d237bb8aa9d6b6b16546864144c50" translate="yes" xml:space="preserve">
          <source>Note that these rulesets can be used in a &lt;code&gt;.htaccess&lt;/code&gt; file, as well as in a &amp;lt;Directory&amp;gt; block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f7c8f3e7c14aab055662c29de95f7c1718f2316" translate="yes" xml:space="preserve">
          <source>Note that this &lt;code&gt;ProxyPassReverse&lt;/code&gt; directive can also be used in conjunction with the proxy feature (&lt;code&gt;RewriteRule ... [P]&lt;/code&gt;) from &lt;code&gt;&lt;a href=&quot;mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; because it doesn't depend on a corresponding &lt;code&gt;&lt;a href=&quot;#proxypass&quot;&gt;ProxyPass&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb7354a37b643efcf5b36b02857e6c0cff234298" translate="yes" xml:space="preserve">
          <source>Note that this can also be handled using the &lt;code&gt;&lt;a href=&quot;../mod/mod_alias#redirectmatch&quot;&gt;RedirectMatch&lt;/a&gt;&lt;/code&gt; directive:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aa6573d5ff923b38d028e41c95627293b9e0d53" translate="yes" xml:space="preserve">
          <source>Note that this can cause performance problems on your server since the message digest is computed on every request (the values are not cached).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5616bbcfa320e4fa6dd20898e642281f9749e131" translate="yes" xml:space="preserve">
          <source>Note that this can cause serious latency problems accessing your server since every request requires one of these lookups to be performed. When firewalls or proxy servers are involved, each lookup might possibly fail and add a latency duration as defined by the &lt;code&gt;&lt;a href=&quot;#identitychecktimeout&quot;&gt;IdentityCheckTimeout&lt;/a&gt;&lt;/code&gt; directive to each hit. So in general this is not very useful on public servers accessible from the Internet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64067684bb335945b80c8b9a8f68465b8a6ffcd1" translate="yes" xml:space="preserve">
          <source>Note that this directive does not guarantee that an &lt;code&gt;Expires&lt;/code&gt; or &lt;code&gt;Cache-Control&lt;/code&gt; header will be generated. If the criteria aren't met, no header will be sent, and the effect will be as though this directive wasn't even specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e852a40775afe6963f43ad9584a483fba974b4f" translate="yes" xml:space="preserve">
          <source>Note that this directive has no effect if the &lt;code&gt;FakeBasicAuth&lt;/code&gt; option is used (see &lt;a href=&quot;#ssloptions&quot;&gt;SSLOptions&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="183b5a84e8d899091c1b7a7916f342ac335a9a56" translate="yes" xml:space="preserve">
          <source>Note that this directive only has an effect if a 'best' language cannot be determined by any other means or the &lt;code&gt;&lt;a href=&quot;#forcelanguagepriority&quot;&gt;ForceLanguagePriority&lt;/a&gt;&lt;/code&gt; directive is not &lt;code&gt;None&lt;/code&gt;. In general, the client determines the language preference, not the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a620b6338ba18fba32c13121a4cf77b60fa7d59" translate="yes" xml:space="preserve">
          <source>Note that this directive only has effect if &lt;code&gt;ExpiresActive On&lt;/code&gt; has been specified. It overrides, for the specified MIME type &lt;em&gt;only&lt;/em&gt;, any expiration date set by the &lt;code&gt;&lt;a href=&quot;#expiresdefault&quot;&gt;ExpiresDefault&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="536e98d6c960a0357ee403efc1bc8c7b688b6842" translate="yes" xml:space="preserve">
          <source>Note that this directive overrides other indirect media type associations defined in mime.types or via the &lt;code&gt;&lt;a href=&quot;mod_mime#addtype&quot;&gt;AddType&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0a0afd701a11ac366fb0d6f7d38e3830667d4c3" translate="yes" xml:space="preserve">
          <source>Note that this feature is exceedingly dangerous, as it will execute whatever code happens to be embedded in the &lt;code&gt;exec&lt;/code&gt; tag. If you have any situation where users can edit content on your web pages, such as with a ``guestbook'', for example, make sure that you have this feature disabled. You can allow SSI, but not the &lt;code&gt;exec&lt;/code&gt; feature, with the &lt;code&gt;IncludesNOEXEC&lt;/code&gt; argument to the &lt;code&gt;Options&lt;/code&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="715b35f73d09fd703fcc65e0c43246414a60e41f" translate="yes" xml:space="preserve">
          <source>Note that this preference will only be applied when there is a choice of representations and they vary by language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ca7e0fef40b67d3e8ea1e6e028742c3cfac2854" translate="yes" xml:space="preserve">
          <source>Note that this relies on &lt;code&gt;&lt;a href=&quot;mod_xml2enc&quot;&gt;mod_xml2enc&lt;/a&gt;&lt;/code&gt; being loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6af6564089ab5989890eec132ce303d9c87cea89" translate="yes" xml:space="preserve">
          <source>Note that this same effect can be obtained using &lt;code&gt;&lt;a href=&quot;../mod/mod_setenvif#setenvif&quot;&gt;SetEnvIf&lt;/a&gt;&lt;/code&gt;. This technique is offered as an example, not as a recommendation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e24cec8f0b3e887ace0a4e082323c86144cbb0df" translate="yes" xml:space="preserve">
          <source>Note that this setting is the default since Apache 2.3.9.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c90be556d0c75292d5a47cdb1979a6acfe4154a9" translate="yes" xml:space="preserve">
          <source>Note that this will only be activated on Windows, so the module can continue to be used, unchanged, with Unix if needed. Also, if you are familiar with &lt;code&gt;.DEF&lt;/code&gt; files, you can export the module record with that method instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cfedf890bf06f6b395ade4dc450c59d157f2d50" translate="yes" xml:space="preserve">
          <source>Note that unlike &lt;code&gt;&lt;a href=&quot;#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; sections, &lt;code&gt;&amp;lt;Files&amp;gt;&lt;/code&gt; sections can be used inside &lt;code&gt;.htaccess&lt;/code&gt; files. This allows users to control access to their own files, at a file-by-file level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0bd331cc3ee55681f8e64e4e51bb6d0bb6fc7d7" translate="yes" xml:space="preserve">
          <source>Note that using &lt;code&gt;myPasswo&lt;/code&gt; instead of &lt;code&gt;myPassword&lt;/code&gt; will produce the same result because only the first 8 characters of CRYPT passwords are considered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c6c4ff070b8a335a9ad7b80219e7b26d88f4d3b" translate="yes" xml:space="preserve">
          <source>Note that usually no &lt;code&gt;&lt;a href=&quot;mod_proxy#proxypassreverse&quot;&gt;ProxyPassReverse&lt;/a&gt;&lt;/code&gt; directive is necessary. The AJP request includes the original host header given to the proxy, and the application server can be expected to generate self-referential headers relative to this host, so no rewriting is necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1dad89c5e4341fd8629427311ecb65c822e9e53" translate="yes" xml:space="preserve">
          <source>Note that when defining a set of filters using the &lt;code&gt;&lt;a href=&quot;#addoutputfilter&quot;&gt;AddOutputFilter&lt;/a&gt;&lt;/code&gt; directive, any definition made will replace any previous definition made by the &lt;code&gt;&lt;a href=&quot;#addoutputfilter&quot;&gt;AddOutputFilter&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="560c864aa8c0415d2005bfd21f04fb24bfd4cf22" translate="yes" xml:space="preserve">
          <source>Note that when the display is sorted by &quot;Size&quot;, it's the &lt;em&gt;actual&lt;/em&gt; size of the files that's used, not the displayed value - so a 1010-byte file will always be displayed before a 1011-byte file (if in ascending order) even though they both are shown as &quot;1K&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a59a5fbcd5a7889195c3fde86cb78b6cb3fe212c" translate="yes" xml:space="preserve">
          <source>Note that when you specify an &lt;code&gt;ErrorDocument&lt;/code&gt; that points to a remote URL (ie. anything with a method such as &lt;code&gt;http&lt;/code&gt; in front of it), Apache HTTP Server will send a redirect to the client to tell it where to find the document, even if the document ends up being on the same server. This has several implications, the most important being that the client will not receive the original error status code, but instead will receive a redirect status code. This in turn can confuse web robots and other clients which try to determine if a URL is valid using the status code. In addition, if you use a remote URL in an &lt;code&gt;ErrorDocument 401&lt;/code&gt;, the client will not know to prompt the user for a password since it will not receive the 401 status code. Therefore, &lt;strong&gt;if you use an &lt;code&gt;ErrorDocument 401&lt;/code&gt; directive, then it must refer to a local document.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7c8aac2fe25f825c617d4af139ec8a640df3570" translate="yes" xml:space="preserve">
          <source>Note that whether you use &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../mod/mod_proxy#proxypass&quot;&gt;ProxyPass&lt;/a&gt;&lt;/code&gt;, you'll still need to use the &lt;code&gt;&lt;a href=&quot;../mod/mod_proxy#proxypassreverse&quot;&gt;ProxyPassReverse&lt;/a&gt;&lt;/code&gt; directive to catch redirects issued from the back-end server:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fa8f5ffe8b790918216b74923342e0cc86e5e58" translate="yes" xml:space="preserve">
          <source>Note that with some dbm types, more than one file is generated, with a common base name. For example, you may have two files named &lt;code&gt;mapfile.map.dir&lt;/code&gt; and &lt;code&gt;mapfiile.map.pag&lt;/code&gt;. This is normal, and you need only use the base name &lt;code&gt;mapfile.map&lt;/code&gt; in your &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewritemap&quot;&gt;RewriteMap&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2549fd1616bb082437f65ce6429e23f9c767ce1" translate="yes" xml:space="preserve">
          <source>Note that you may also need to set &lt;code&gt;&lt;a href=&quot;../mod/core#allowencodedslashes&quot;&gt;AllowEncodedSlashes&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;On&lt;/code&gt; to get this particular example to work, as httpd does not allow encoded slashes in URLs, and returns a 404 if it sees one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ef5aedee96ff4fda7b065976194a027fa0d4d7e" translate="yes" xml:space="preserve">
          <source>Note that you may need to specify additional &lt;code&gt;&lt;a href=&quot;core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; sections which cover the &lt;em&gt;destination&lt;/em&gt; of aliases. Aliasing occurs before &lt;code&gt;&lt;a href=&quot;core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; sections are checked, so only the destination of aliases are affected. (Note however &lt;code&gt;&lt;a href=&quot;core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; sections are run through once before aliases are performed, so they will apply.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf5887e226c8f98b7dde9bf9d924b2b1b3264c97" translate="yes" xml:space="preserve">
          <source>Note that, by default, access to these directories is &lt;strong&gt;not&lt;/strong&gt; enabled. You can enable access when using &lt;code&gt;&lt;a href=&quot;../mod/mod_userdir#userdir&quot;&gt;UserDir&lt;/a&gt;&lt;/code&gt; by uncommenting the line:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44ee3c1b95c5ae8dec89529bf2a35071a6341c3c" translate="yes" xml:space="preserve">
          <source>Note that, when group membership is being checked, any sub-group comparison results are cached to speed future sub-group comparisons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3819190050f4290b58ef8009042d15cdeecd89d0" translate="yes" xml:space="preserve">
          <source>Note the lack of &lt;code&gt;accept(2)&lt;/code&gt; serialization. On this particular platform, the worker MPM uses an unserialized accept by default unless it is listening on multiple ports.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58673134845db457758089e1e31f5b461ad294ef" translate="yes" xml:space="preserve">
          <source>Note the placing of the double quotes for the &lt;code&gt;expr=&lt;/code&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a50c782ab6287374493e7132aece5633a3a0e47" translate="yes" xml:space="preserve">
          <source>Note: &lt;code&gt;&lt;a href=&quot;../mod/mod_proxy&quot;&gt;mod_proxy&lt;/a&gt;&lt;/code&gt; must be enabled in order to use this flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="269ea441a71b503ab109da1ac5121a5db90e7e35" translate="yes" xml:space="preserve">
          <source>Note: &lt;code&gt;&lt;a href=&quot;mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; is implemented as a quick-handler and not as a standard handler. Therefore, the &lt;code&gt;%R&lt;/code&gt; format string will not return any handler information when content caching is involved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73a16027ecedb250fcffc470d9310b83983fd8b8" translate="yes" xml:space="preserve">
          <source>Note: &lt;code&gt;ServerRoot&lt;/code&gt; should be specified before this directive is used. Otherwise, the default value of &lt;code&gt;ServerRoot&lt;/code&gt; would be used to set the base directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc70096aae39905406aff1ff20b22aa919371ff9" translate="yes" xml:space="preserve">
          <source>Note: As the IP addresses are parsed on startup, expressions are not evaluated at request time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="370a80f05c777816f2961b88fe3f0e793ff94b00" translate="yes" xml:space="preserve">
          <source>Note: Client certificates are specified globally rather than per connection, and so must be specified with the LDAPTrustedGlobalCert directive as below. Trying to set client certificates via the LDAPTrustedClientCert directive will cause an error to be logged when an attempt is made to connect to the LDAP server..</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bcfb3697807bbfedf10456c3b3d89439ba28bb7" translate="yes" xml:space="preserve">
          <source>Note: If Apache has been built with shared module support you need to ensure that the module is loaded; in your &lt;code&gt;httpd.conf&lt;/code&gt; you need to make sure the &lt;code&gt;&lt;a href=&quot;../mod/mod_so#loadmodule&quot;&gt;LoadModule&lt;/a&gt;&lt;/code&gt; directive has not been commented out. A correctly configured directive may look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77dcee7e902fd46da9edaa9bdbb030cde672fe92" translate="yes" xml:space="preserve">
          <source>Note: If you need to specify custom request headers to be added to the forwarded request, use the &lt;code&gt;&lt;a href=&quot;mod_headers#requestheader&quot;&gt;RequestHeader&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a69491b928ff48d50019d969a9056adb060777e5" translate="yes" xml:space="preserve">
          <source>Note: The status of support for client certificates is not yet known for this toolkit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a4972ab7dbc5ae9a5be85d6713207225c12f94c" translate="yes" xml:space="preserve">
          <source>Note: input and output bytes are weighted the same.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f111b0045ad39d249776a5f0a9a501a79620797" translate="yes" xml:space="preserve">
          <source>Note: this gzip example is just for the purposes of illustration. Please refer to &lt;code&gt;&lt;a href=&quot;mod_deflate&quot;&gt;mod_deflate&lt;/a&gt;&lt;/code&gt; for a practical implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70440046a3dc2e079f23ee1c57dfa76669b732aa" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">Notes</target>
        </trans-unit>
        <trans-unit id="0752350ff818db92fb6a252a1fd660056a2cf7d5" translate="yes" xml:space="preserve">
          <source>Notes about how to (run-time and compile-time) configure Apache for highest performance. Notes explaining why Apache does some things, and why it doesn't do other things (which make it slower/faster).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a871d66fc25ad478b61c9820edbdc17c7896bde0" translate="yes" xml:space="preserve">
          <source>Notes about the password encryption formats generated and understood by Apache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adb6ab7ee65cd18fadbcade22dd889c89913c9fc" translate="yes" xml:space="preserve">
          <source>Notice that quotes are used to enclose the entire command that will be called for the pipe. Although these examples are for the access log, the same technique can be used for the error log.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4af140c58f3e83ce11429d627f7e31df12553f66" translate="yes" xml:space="preserve">
          <source>Notice that the exclamation mark specifies a negative match, so the rule is only applied if the cookie does not contain &quot;go&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24e7509c58ddbb03f80d194cc63d9b4a2e6a9d83" translate="yes" xml:space="preserve">
          <source>Notice that this directive can be used both in per-server and per-directory context. In per-server context it applies to the standard SSL handshake when a connection is established. In per-directory context it forces a SSL renegotiation with the reconfigured Cipher Suite after the HTTP request was read but before the HTTP response is sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b27fcd558074ece58a1fdda598129d8074ebf39" translate="yes" xml:space="preserve">
          <source>Notice that, as discussed above, some fields are omitted entirely because they are not defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08f92b40ff91f01d118ac938590f83c8b0e704be" translate="yes" xml:space="preserve">
          <source>Notice: You cannot use this for speeding up CGI programs or other files which are served by special content handlers. It can only be used for regular files which are usually served by the Apache core content handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08b4e6e59892d8f9ba9791603cf2ab26fd0a8d5f" translate="yes" xml:space="preserve">
          <source>Novell NetWare</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="505da833937226a62bd2ca5126158b019b086a05" translate="yes" xml:space="preserve">
          <source>Novell SDK</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a62818f610dd5a56934e2975b51d76a6a25382ac" translate="yes" xml:space="preserve">
          <source>Now &lt;code&gt;server.key&lt;/code&gt; contains an unencrypted copy of the key. If you point your server at this file, it will not prompt you for a pass-phrase. HOWEVER, if anyone gets this key they will be able to impersonate you on the net. PLEASE make sure that the permissions on this file are such that only root or the web server user can read it (preferably get your web server to start as root but run as another user, and have the key readable only by root).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43d93377a60c00b62c3f6ee505fe3a137afcf817" translate="yes" xml:space="preserve">
          <source>Now anything that doesn't match the regexp's $1 match is discarded, so the statement is safe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bacc17390ab13ab502be50e7174d0afb7f71349c" translate="yes" xml:space="preserve">
          <source>Now if a request contains a &lt;code&gt;Content-Encoding: gzip&lt;/code&gt; header, the body will be automatically decompressed. Few browsers have the ability to gzip request bodies. However, some special applications actually do support request compression, for instance some &lt;a href=&quot;http://www.webdav.org&quot;&gt;WebDAV&lt;/a&gt; clients.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edcf16f191e28dd9e1733c164ea5658ee2dbd641" translate="yes" xml:space="preserve">
          <source>Now it's time to install the package under the configured installation &lt;em&gt;PREFIX&lt;/em&gt; (see &lt;code&gt;--prefix&lt;/code&gt; option above) by running:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c4cd15e80c00d680eb9686bac70d4b3652e609a" translate="yes" xml:space="preserve">
          <source>Now look in your process list (using &lt;code&gt;top&lt;/code&gt;, or similar process viewing utility) to identify the specific processes that are the main culprits. Order the output of &lt;code&gt;top&lt;/code&gt; by CPU usage, or memory usage, depending on what problem you're trying to address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30d05aaeb5cf7cd0a9a4db3dc0e9f3e9b7241267" translate="yes" xml:space="preserve">
          <source>Now requests from both networks will be served from the same &lt;code&gt;&lt;a href=&quot;../mod/core#virtualhost&quot;&gt;&amp;lt;VirtualHost&amp;gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deeb4a20e922d40577630b23b17378d455447d92" translate="yes" xml:space="preserve">
          <source>Now that we have variables, and are able to set and compare their values, we can use them to express conditionals. This lets SSI be a tiny programming language of sorts. &lt;code&gt;&lt;a href=&quot;../mod/mod_include&quot;&gt;mod_include&lt;/a&gt;&lt;/code&gt; provides an &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;elif&lt;/code&gt;, &lt;code&gt;else&lt;/code&gt;, &lt;code&gt;endif&lt;/code&gt; structure for building conditional statements. This allows you to effectively generate multiple logical pages out of one actual page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e5c2dd4280c7927f2199b5979b16512ac948a9f" translate="yes" xml:space="preserve">
          <source>Now when mod_rewrite is triggered in these two API phases, it reads the configured rulesets from its configuration structure (which itself was either created on startup for per-server context or during the directory walk of the Apache kernel for per-directory context). Then the URL rewriting engine is started with the contained ruleset (one or more rules together with their conditions). The operation of the URL rewriting engine itself is exactly the same for both configuration contexts. Only the final result processing is different.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c587ff7081c900eb12ecc1f6cec8b6dd1f274ed" translate="yes" xml:space="preserve">
          <source>Now where this becomes interesting is that these can be put together to specify the order and ciphers you wish to use. To speed this up there are also aliases (&lt;code&gt;SSLv3, TLSv1, EXP, LOW, MEDIUM, HIGH&lt;/code&gt;) for certain groups of ciphers. These tags can be joined together with prefixes to form the &lt;em&gt;cipher-spec&lt;/em&gt;. Available prefixes are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3c098ab1fb97f559959ceb7b6b1680e36496cf2" translate="yes" xml:space="preserve">
          <source>Now you can &lt;a href=&quot;invoking&quot;&gt;start&lt;/a&gt; your Apache HTTP server by immediately running:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4394cd217c4cd356ffee073c082bac126f8bb021" translate="yes" xml:space="preserve">
          <source>Now you can build the various parts which form the Apache package by simply running the command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="116672fd3f5c8277f28c0b1e73b96dd3a8a954f2" translate="yes" xml:space="preserve">
          <source>Now, anyone that is listed in the group &lt;code&gt;GroupName&lt;/code&gt;, and has an entry in the &lt;code&gt;password&lt;/code&gt; file, will be let in, if they type the correct password.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dd8ff1250678d3fd3c3519064dd1f8497e7e776" translate="yes" xml:space="preserve">
          <source>Now, create a DLL containing your module. You will need to link this against the libhttpd.lib export library that is created when the libhttpd.dll shared library is compiled. You may also have to change the compiler settings to ensure that the Apache httpd header files are correctly located. You can find this library in your server root's modules directory. It is best to grab an existing module .dsp file from the tree to assure the build environment is configured correctly, or alternately compare the compiler and link options to your .dsp.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68b2e17c67d36de08ea2ba74bd194ab4c516d321" translate="yes" xml:space="preserve">
          <source>Now, you need to modify your &lt;code&gt;.htaccess&lt;/code&gt; file or &lt;code&gt;&lt;a href=&quot;../mod/core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; block to look like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76b3f7cc125a027395af41df1dda782ee3efa814" translate="yes" xml:space="preserve">
          <source>Number of additional BalancerMembers to allow to be added to this balancer in addition to those defined at configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e94bf650e8fbb96142e41ffec158c1310834803" translate="yes" xml:space="preserve">
          <source>Number of additional Balancers that can be added Post-configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="347dbb0cb649f65ac55f038e9259f0ae05acc936" translate="yes" xml:space="preserve">
          <source>Number of child server processes created at startup</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f469c81f56893e2ee5dec66aa907cd08aa643dcf" translate="yes" xml:space="preserve">
          <source>Number of cipher bits (actually used)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0247a6adb484f43a61d64d2f5652496341195c97" translate="yes" xml:space="preserve">
          <source>Number of cipher bits (possible)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="043bdfcdf1e5fffaa8b35ecc7d726b0c1a471852" translate="yes" xml:space="preserve">
          <source>Number of days until client's certificate expires</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="368c81ef6b3e76aadb7ada17d5d2af83294d9776" translate="yes" xml:space="preserve">
          <source>Number of entries used to cache LDAP compare operations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62df810de6a8a41bc746db8740f3186c7d864616" translate="yes" xml:space="preserve">
          <source>Number of failed health check tests before worker is disabled</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3742fc75b9d12174782c0b9ca8eae27388be4ea6" translate="yes" xml:space="preserve">
          <source>Number of instances of the program</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c9dff9e81a76e9c22351df4eff94e3a6561f8d4" translate="yes" xml:space="preserve">
          <source>Number of keep-alive requests on this connection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d0a64743f08a186f50a250648907da66cf23325" translate="yes" xml:space="preserve">
          <source>Number of keepalive requests handled on this connection. Interesting if &lt;code&gt;&lt;a href=&quot;core#keepalive&quot;&gt;KeepAlive&lt;/a&gt;&lt;/code&gt; is being used, so that, for example, a '1' means the first keepalive request after the initial one, '2' the second, etc...; otherwise this is always 0 (indicating the initial request).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e99fe5d893ee59611f4f5f2d1277b2747a8a28ab" translate="yes" xml:space="preserve">
          <source>Number of multiple requests to perform at a time. Default is one request at a time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fa530245f8a279c89527a03190885bcd329e3cc" translate="yes" xml:space="preserve">
          <source>Number of overlapping ranges (eg: &lt;code&gt;100-200,150-300&lt;/code&gt;) allowed before returning the complete resource</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a61b40597e4b87b5496a5cce117636dd8613fe3f" translate="yes" xml:space="preserve">
          <source>Number of range reversals (eg: &lt;code&gt;100-200,50-70&lt;/code&gt;) allowed before returning the complete resource</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19eb3831920ee11052e4a712ac30fbe811364d7e" translate="yes" xml:space="preserve">
          <source>Number of ranges allowed before returning the complete resource</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f7830422860018e59a3aafd5d5b86a20fedf24f" translate="yes" xml:space="preserve">
          <source>Number of requests allowed on a persistent connection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6e8dd2ab0885a95a10a580ea943cbb8d5c50ddb" translate="yes" xml:space="preserve">
          <source>Number of requests to perform for the benchmarking session. The default is to just perform a single request which usually leads to non-representative benchmarking results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e678bedab137cf0d047d64faebf6eede15ffaa2" translate="yes" xml:space="preserve">
          <source>Number of seconds before an SSL session expires in the Session Cache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0537bd6109539b0b181b45ff4238a5b78480c083" translate="yes" xml:space="preserve">
          <source>Number of seconds before expiring invalid responses in the OCSP stapling cache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f39d88b7f697e71172f5333c8d2ccfb528ab5d2f" translate="yes" xml:space="preserve">
          <source>Number of seconds before expiring responses in the OCSP stapling cache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18a8a2f97f4242b32229df34e156d48c84d3b8da" translate="yes" xml:space="preserve">
          <source>Number of successful health check tests before worker is re-enabled</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="583637dc2cc090884f539f6fbe47074ec16a0b3f" translate="yes" xml:space="preserve">
          <source>Number of threads created by each child process</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a488e0a524396d96569a06f825d7ed7503b97ce" translate="yes" xml:space="preserve">
          <source>Number of threads created on startup</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="144adc5d9e4266e431871af87e70218a82af0916" translate="yes" xml:space="preserve">
          <source>Number of threads created on startup. As the number of threads is dynamically controlled depending on the load, (see &lt;code&gt;&lt;a href=&quot;#minsparethreads&quot;&gt;MinSpareThreads&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#maxsparethreads&quot;&gt;MaxSpareThreads&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;prefork#minspareservers&quot;&gt;MinSpareServers&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;prefork#maxspareservers&quot;&gt;MaxSpareServers&lt;/a&gt;&lt;/code&gt;) there is usually little reason to adjust this parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="755c161bcfd34deba14e196de3fc33df9c53303b" translate="yes" xml:space="preserve">
          <source>N|next</source>
          <target state="translated">N|next</target>
        </trans-unit>
        <trans-unit id="08a914cde05039694ef0194d9ee79ff9a79dde33" translate="yes" xml:space="preserve">
          <source>O</source>
          <target state="translated">O</target>
        </trans-unit>
        <trans-unit id="41e791e988b7e352b0014017f75fe350b46d194d" translate="yes" xml:space="preserve">
          <source>O=Snake Oil, Ltd.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06470cfe5baccab24b62ca7b00e0a29d48d26891" translate="yes" xml:space="preserve">
          <source>OCSP Stapling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21fa30c66bd15afa6d36a48776ee4a7526e48c14" translate="yes" xml:space="preserve">
          <source>OCSP responses are stored in the SSL stapling cache. While the responses are typically a few hundred to a few thousand bytes in size, mod_ssl supports OCSP responses up to around 10K bytes in size. With more than a few certificates, the stapling cache size (32768 bytes in the example above) may need to be increased. Error message AH01929 will be logged in case of an error storing a response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89110a5a40b9621e8146d28278939a4779f3fda4" translate="yes" xml:space="preserve">
          <source>OCSP stapling relieves the client of querying the OCSP responder on its own, but it should be noted that with the RFC 6066 specification, the server's &lt;code&gt;CertificateStatus&lt;/code&gt; reply may only include an OCSP response for a single cert. For server certificates with intermediate CA certificates in their chain (the typical case nowadays), stapling in its current implementation therefore only partially achieves the stated goal of &quot;saving roundtrips and resources&quot; - see also &lt;a href=&quot;http://www.ietf.org/rfc/rfc6961.txt&quot;&gt;RFC 6961&lt;/a&gt; (TLS Multiple Certificate Status Extension).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbc52b707608c5a484a435f9348684c5baa6330f" translate="yes" xml:space="preserve">
          <source>OCSP stapling response cache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb91068c51189c866a8e510b38ba4dfebf5d32bc" translate="yes" xml:space="preserve">
          <source>ODBC</source>
          <target state="translated">ODBC</target>
        </trans-unit>
        <trans-unit id="39dd320e8c4e9f06b35e0be0b4942ac2022fb9c1" translate="yes" xml:space="preserve">
          <source>OPTIONS</source>
          <target state="translated">OPTIONS</target>
        </trans-unit>
        <trans-unit id="49f5479219ce3d4b44c672d19081b527acbff3f8" translate="yes" xml:space="preserve">
          <source>OS/2</source>
          <target state="translated">OS/2</target>
        </trans-unit>
        <trans-unit id="d29a663de815adfb49ac20b6f2994284c409fd2c" translate="yes" xml:space="preserve">
          <source>OU</source>
          <target state="translated">OU</target>
        </trans-unit>
        <trans-unit id="13bb8499ab282fdc5da5a22c599b8c0b9b2681e6" translate="yes" xml:space="preserve">
          <source>OU=Research Institute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="461ebaa1f07be70daced315214b9277178250b82" translate="yes" xml:space="preserve">
          <source>Observations</source>
          <target state="translated">Observations</target>
        </trans-unit>
        <trans-unit id="c7d89207417b042d19e79bcd9a2f390212fcb7a5" translate="yes" xml:space="preserve">
          <source>Obviously, a server-wide &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl#sslciphersuite&quot;&gt;SSLCipherSuite&lt;/a&gt;&lt;/code&gt; which restricts ciphers to the strong variants, isn't the answer here. However, &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; can be reconfigured within &lt;code&gt;Location&lt;/code&gt; blocks, to give a per-directory solution, and can automatically force a renegotiation of the SSL parameters to meet the new configuration. This can be done as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f39b53dd1b03a0cf3c8d616672fd2216d81356ee" translate="yes" xml:space="preserve">
          <source>Of course, most times that a web server is compromised, it is not because of problems in the HTTP Server code. Rather, it comes from problems in add-on code, CGI scripts, or the underlying Operating System. You must therefore stay aware of problems and updates with all the software on your system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7464ec207166a54d7a0504b90c6e9e9bda2e066c" translate="yes" xml:space="preserve">
          <source>Of course, on Windows, there is no such thing as an execute bit to set, so that limits your options a little.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1993bb2414d100f3b9468df87c23e579ee8e47ca" translate="yes" xml:space="preserve">
          <source>Of course, storing the information in the access log is only the start of log management. The next step is to analyze this information to produce useful statistics. Log analysis in general is beyond the scope of this document, and not really part of the job of the web server itself. For more information about this topic, and for applications which perform log analysis, check the &lt;a href=&quot;http://dmoz.org/Computers/Software/Internet/Site_Management/Log_Analysis/&quot;&gt; Open Directory&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77436de73b5b8df0797240dbb20f6ba305630433" translate="yes" xml:space="preserve">
          <source>Of course, there's no point in using &lt;code&gt;&lt;a href=&quot;#aliasmatch&quot;&gt;AliasMatch&lt;/a&gt;&lt;/code&gt; where &lt;code&gt;&lt;a href=&quot;#alias&quot;&gt;Alias&lt;/a&gt;&lt;/code&gt; would work. &lt;code&gt;&lt;a href=&quot;#aliasmatch&quot;&gt;AliasMatch&lt;/a&gt;&lt;/code&gt; lets you do more complicated things. For example, you could serve different kinds of files from different directories:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d57238a206705287bb21f6c747f674eb06c6bc6d" translate="yes" xml:space="preserve">
          <source>Of course, you will need to replace the &lt;code&gt;ssi.shtml&lt;/code&gt; with the actual name of the file that you're referring to. This can be inconvenient if you're just looking for a generic piece of code that you can paste into any file, so you probably want to use the &lt;code&gt;LAST_MODIFIED&lt;/code&gt; variable instead:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb1a1a78beb79f2385ea164a38f0b6dc4ba180ce" translate="yes" xml:space="preserve">
          <source>Of these techniques, the last two tend to be the most effective in getting people to stop hotlinking your images, because they will simply not see the image that they expected to see.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3de5ab0ca4c69dbf00e86d2558843e8d806bb49" translate="yes" xml:space="preserve">
          <source>Off</source>
          <target state="translated">Off</target>
        </trans-unit>
        <trans-unit id="c509c7d462c1660ff51bdecf19fe2de7eeb634c7" translate="yes" xml:space="preserve">
          <source>Off (default)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7c55dbed8f7eb97d3c6af58dacaeb5a10a57608" translate="yes" xml:space="preserve">
          <source>Often the most effective anti-DoS tool will be a firewall or other operating-system configurations. For example, most firewalls can be configured to restrict the number of simultaneous connections from any individual IP address or network, thus preventing a range of simple attacks. Of course this is no help against Distributed Denial of Service attacks (DDoS).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6329370bc353350e615f2ce1f49c3a3a68a09a23" translate="yes" xml:space="preserve">
          <source>Old Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3753ef03b41080c174e0742482e6b5d79e52a052" translate="yes" xml:space="preserve">
          <source>Old Variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eb9e5b7f0f2092e13c6977c92e321c1db899d26" translate="yes" xml:space="preserve">
          <source>Old clients expect &lt;code&gt;x-gzip&lt;/code&gt; and &lt;code&gt;x-compress&lt;/code&gt;, however the standard dictates that they're equivalent to &lt;code&gt;gzip&lt;/code&gt; and &lt;code&gt;compress&lt;/code&gt; respectively. Apache does content encoding comparisons by ignoring any leading &lt;code&gt;x-&lt;/code&gt;. When responding with an encoding Apache will use whatever form (&lt;em&gt;i.e.&lt;/em&gt;, &lt;code&gt;x-foo&lt;/code&gt; or &lt;code&gt;foo&lt;/code&gt;) the client requested. If the client didn't specifically request a particular form Apache will use the form given by the &lt;code&gt;AddEncoding&lt;/code&gt; directive. To make this long story short, you should always use &lt;code&gt;x-gzip&lt;/code&gt; and &lt;code&gt;x-compress&lt;/code&gt; for these two specific encodings. More recent encodings, such as &lt;code&gt;deflate&lt;/code&gt;, should be specified without the &lt;code&gt;x-&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="751ab78da1d1c02b06269c7474a56532b8e04766" translate="yes" xml:space="preserve">
          <source>Omission of the [PT] flag in this case will cause the Alias to be ignored, resulting in a 'File not found' error being returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a35c7fd00466fb1ed0437b470d8a6b525d8251fc" translate="yes" xml:space="preserve">
          <source>Omits the entire line if &lt;code&gt;Referer&lt;/code&gt; is not set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee0b15286d11581bea6ea19cb9a44bed0f4a94bd" translate="yes" xml:space="preserve">
          <source>Omitting this option should not be considered a security restriction, since symlink testing is subject to race conditions that make it circumventable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0049a66519cae71159800bb77a35007bc2d76d3" translate="yes" xml:space="preserve">
          <source>On</source>
          <target state="translated">On</target>
        </trans-unit>
        <trans-unit id="d07ef2ee770591f80b7ae702c4b9f8f880603e1d" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;../platform/windows&quot;&gt;Windows systems&lt;/a&gt;, the following additional arguments are available:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00822f8fab6be218faeaca45eea68c0bc9141185" translate="yes" xml:space="preserve">
          <source>On Linux (and also BSD) a CPU core can be turned on/off if &lt;a href=&quot;https://www.kernel.org/doc/Documentation/cpu-hotplug.txt&quot;&gt;Hotplug&lt;/a&gt; is configured, therefore &lt;code&gt;ListenCoresBucketsRatio&lt;/code&gt; needs to take this parameter into account while calculating the number of buckets to create.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9a1c9fa8640959437b76ae395783a91e6285ce5" translate="yes" xml:space="preserve">
          <source>On Linux on Itanium, &lt;code&gt;sendfile&lt;/code&gt; may be unable to handle files over 2GB in size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5323ab6ec110e7fba30102a2095ad4cb3f0f161c" translate="yes" xml:space="preserve">
          <source>On Linux the use of sendfile triggers TCP-checksum offloading bugs on certain networking cards when using IPv6.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb1bb89492486a1bb87cd6504e21fec0382dc113" translate="yes" xml:space="preserve">
          <source>On Linux, this directive can only be used to increase the default stack size, as the underlying system call uses the value as a &lt;em&gt;minimum&lt;/em&gt; stack size. The (often large) soft limit for &lt;code&gt;ulimit -s&lt;/code&gt; (8MB if unlimited) is used as the default stack size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c75f34b1c71cff1e3225e596cca454fccb782721" translate="yes" xml:space="preserve">
          <source>On Unix and similar platforms, MPMs can be built as DSO modules and dynamically loaded into the server in the same manner as other DSO modules. Building MPMs as DSO modules allows the MPM to be changed by updating the &lt;code&gt;&lt;a href=&quot;mod/mod_so#loadmodule&quot;&gt;LoadModule&lt;/a&gt;&lt;/code&gt; directive for the MPM instead of by rebuilding the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2b9dca5d1ca70483260b4f8ad39a6506608496e" translate="yes" xml:space="preserve">
          <source>On Unix, the &lt;code&gt;&lt;a href=&quot;programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; program is run as a daemon that executes continuously in the background to handle requests. This document describes how to invoke &lt;code&gt;&lt;a href=&quot;programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbc49168d442821b1748ed2046e5679df070ab13" translate="yes" xml:space="preserve">
          <source>On Unix, the loaded code typically comes from shared object files (usually with &lt;code&gt;.so&lt;/code&gt; extension), on Windows this may either be the &lt;code&gt;.so&lt;/code&gt; or &lt;code&gt;.dll&lt;/code&gt; extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="825b5e36810fed6fe404a5fea9ba349fedcdaadb" translate="yes" xml:space="preserve">
          <source>On Windows, &lt;code&gt;none&lt;/code&gt; uses accept() rather than AcceptEx() and will not recycle sockets between connections. This is useful for network adapters with broken driver support, as well as some virtual network providers such as vpn drivers, or spam, virus or spyware filters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d9a8775cffefd2a649d9dd751c079dab29caa74" translate="yes" xml:space="preserve">
          <source>On Windows, Apache is normally run as a service. For details, see &lt;a href=&quot;platform/windows#winsvc&quot;&gt;Running Apache as a Service&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88ac452f23c00dcfe082c8c3a4286b302f904d87" translate="yes" xml:space="preserve">
          <source>On Windows, or using a non-threaded MPM like prefork, A correctly configured directive may look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39e2548bc7dd3d7e990cd71246be6fe8cd7331d1" translate="yes" xml:space="preserve">
          <source>On Windows, where loadable files typically have a file extension of &lt;code&gt;.dll&lt;/code&gt;, Apache httpd modules are called &lt;code&gt;mod_whatever.so&lt;/code&gt;, just as they are on other platforms. However, you may encounter third-party modules, such as PHP for example, that continue to use the &lt;code&gt;.dll&lt;/code&gt; convention.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad79572d83f003f009b0006f1cbf6b94c961aef0" translate="yes" xml:space="preserve">
          <source>On a busy server it is possible that many requests will try and access the same LDAP server connection simultaneously. Where an LDAP connection is in use, Apache will create a new connection alongside the original one. This ensures that the connection pool does not become a bottleneck.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d7877ccf40cf791389e5e5ab850ba353e55ecf3" translate="yes" xml:space="preserve">
          <source>On certain unix operating systems, forking a process from a multi-threaded server is a very expensive operation because the new process will replicate all the threads of the parent process. In order to avoid incurring this expense on each CGI invocation, &lt;code&gt;&lt;a href=&quot;mod_cgid&quot;&gt;mod_cgid&lt;/a&gt;&lt;/code&gt; creates an external daemon that is responsible for forking child processes to run CGI scripts. The main server communicates with this daemon using a unix domain socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3783771f370a2aec28949f8bafe0cc1c6c207c6" translate="yes" xml:space="preserve">
          <source>On even a moderately busy server, the quantity of information stored in the log files is very large. The access log file typically grows 1 MB or more per 10,000 requests. It will consequently be necessary to periodically rotate the log files by moving or deleting the existing logs. This cannot be done while the server is running, because Apache httpd will continue writing to the old log file as long as it holds the file open. Instead, the server must be &lt;a href=&quot;stopping&quot;&gt;restarted&lt;/a&gt; after the log files are moved or deleted so that it will open new log files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecb9ebf68d00f516c3d0acfb974c1435d16dabca" translate="yes" xml:space="preserve">
          <source>On modern Unix derivatives there exists a mechanism called dynamic linking/loading of &lt;em&gt;Dynamic Shared Objects&lt;/em&gt; (DSO) which provides a way to build a piece of program code in a special format for loading it at run-time into the address space of an executable program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bc56d97b924c1ba71679e047f9fb7edeb7180bf" translate="yes" xml:space="preserve">
          <source>On most platforms, using sendfile improves performance by eliminating separate read and send mechanics. However, there are cases where using sendfile can harm the stability of the httpd:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4392a38803864a9678bbd677967be4e7ca8afd84" translate="yes" xml:space="preserve">
          <source>On most systems, if a child process terminates abnormally while holding a mutex that uses this implementation, the server will deadlock and stop responding to requests. When this occurs, the server will require a manual restart to recover.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b32a5f3486df1bffe5ac03004891278a5e6f838e" translate="yes" xml:space="preserve">
          <source>On operating systems that support it, make sure that you use the &lt;code&gt;&lt;a href=&quot;../mod/core#acceptfilter&quot;&gt;AcceptFilter&lt;/a&gt;&lt;/code&gt; directive to offload part of the request processing to the operating system. This is active by default in Apache httpd, but may require reconfiguration of your kernel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="296adb1b4a42002526196c451be049c91cc1bd8b" translate="yes" xml:space="preserve">
          <source>On platforms where a filesystem might be slow, or where file handles are expensive, the option exists to pre-load files into memory on startup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56458cebd20461efc17693bd8cd849064b234041" translate="yes" xml:space="preserve">
          <source>On platforms where the default thread stack size is significantly larger than necessary for the web server configuration, a higher number of threads per child process will be achievable if &lt;code&gt;ThreadStackSize&lt;/code&gt; is set to a value lower than the operating system default. This type of adjustment should only be made in a test environment which allows the full set of web server processing can be exercised, as there may be infrequent requests which require more stack to process. The minimum required stack size strongly depends on the modules used, but any change in the web server configuration can invalidate the current &lt;code&gt;ThreadStackSize&lt;/code&gt; setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="887865300af6dedabfdf70e357c2a403f41cfa81" translate="yes" xml:space="preserve">
          <source>On platforms with a relatively small default thread stack size (e.g., HP-UX), Apache httpd may crash when using some third-party modules which use a relatively large amount of autodata storage. Those same modules may have worked fine on other platforms where the default thread stack size is larger. This type of crash is resolved by setting &lt;code&gt;ThreadStackSize&lt;/code&gt; to a value higher than the operating system default. This type of adjustment is necessary only if the provider of the third-party module specifies that it is required, or if diagnosis of an Apache httpd crash indicates that the thread stack size was too small.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0855302f916df979b2015e9e771f14512757941" translate="yes" xml:space="preserve">
          <source>On selected operating systems this module can be used to load modules into Apache HTTP Server at runtime via the &lt;a href=&quot;../dso&quot;&gt;Dynamic Shared Object&lt;/a&gt; (DSO) mechanism, rather than requiring a recompilation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df3a1db99bcb802eb56bfc00611eeb6303f849dd" translate="yes" xml:space="preserve">
          <source>On some multiprocessor systems, memory-mapping can reduce the performance of the &lt;code&gt;&lt;a href=&quot;../programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2ebfc43663d50fe1feaba82a82f36fb2393a0e5" translate="yes" xml:space="preserve">
          <source>On some operating systems, &lt;code&gt;mmap&lt;/code&gt; does not scale as well as &lt;code&gt;read(2)&lt;/code&gt; when the number of CPUs increases. On multiprocessor Solaris servers, for example, Apache 2.x sometimes delivers server-parsed files faster when &lt;code&gt;mmap&lt;/code&gt; is disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e44144b4e9f97c5271dce383a10c765bb988bb61" translate="yes" xml:space="preserve">
          <source>On some operating systems, SIGQUIT also results in a core dump but does not go through &lt;code&gt;CoreDumpDirectory&lt;/code&gt; or &lt;code&gt;EnableExceptionHook&lt;/code&gt; processing, so the core location is dictated entirely by the operating system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d529ede6580cd4ca8276717734c1fa5b6100ac6a" translate="yes" xml:space="preserve">
          <source>On some operating systems, changes in TCP behavior resulting from a larger &lt;code&gt;SendBufferSize&lt;/code&gt; may not be seen unless &lt;code&gt;&lt;a href=&quot;core#enablesendfile&quot;&gt;EnableSendfile&lt;/a&gt;&lt;/code&gt; is set to OFF. This interaction applies only to static files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e975843bb3ce5942a571e3569e76a46625bb2981" translate="yes" xml:space="preserve">
          <source>On some platforms, this memory-mapping improves performance. However, there are cases where memory-mapping can hurt the performance or even the stability of the httpd:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c8708399c8c1553d7675d065014cb73099af861" translate="yes" xml:space="preserve">
          <source>On some webservers there is more than one URL for a resource. Usually there are canonical URLs (which are be actually used and distributed) and those which are just shortcuts, internal ones, and so on. Independent of which URL the user supplied with the request, they should finally see the canonical one in their browser address bar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ae13d4941267e2fcf5312e08911c243e61933a6" translate="yes" xml:space="preserve">
          <source>On startup, Apache httpd saves the process id of the parent httpd process to the file &lt;code&gt;logs/httpd.pid&lt;/code&gt;. This filename can be changed with the &lt;code&gt;&lt;a href=&quot;mod/mpm_common#pidfile&quot;&gt;PidFile&lt;/a&gt;&lt;/code&gt; directive. The process-id is for use by the administrator in restarting and terminating the daemon by sending signals to the parent process; on Windows, use the -k command line option instead. For more information see the &lt;a href=&quot;stopping&quot;&gt;Stopping and Restarting&lt;/a&gt; page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d3a25aadbceda9105410b1d026b8deeea2022a8" translate="yes" xml:space="preserve">
          <source>On systems where opening files is slow, the option exists to open the file on startup and cache the file handle. These options can help on systems where access to static files is slow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a41f6b2f06926ef67123273fbbc6b6c9e957952" translate="yes" xml:space="preserve">
          <source>On systems with multiple users, each user can be permitted to have a web site in their home directory using the &lt;code&gt;&lt;a href=&quot;../mod/mod_userdir#userdir&quot;&gt;UserDir&lt;/a&gt;&lt;/code&gt; directive. Visitors to a URL &lt;code&gt;http://example.com/~username/&lt;/code&gt; will get content out of the home directory of the user &quot;&lt;code&gt;username&lt;/code&gt;&quot;, out of the subdirectory specified by the &lt;code&gt;&lt;a href=&quot;../mod/mod_userdir#userdir&quot;&gt;UserDir&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f13161659d13269e857b5b46244cf73eea8fe6c" translate="yes" xml:space="preserve">
          <source>On the Windows platform, passwords encrypted with &lt;code&gt;htdbm&lt;/code&gt; are limited to no more than &lt;code&gt;255&lt;/code&gt; characters in length. Longer passwords will be truncated to 255 characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f02116b3d5fb97f15cef19c8d4bfede46376794e" translate="yes" xml:space="preserve">
          <source>On the Windows platform, passwords encrypted with &lt;code&gt;htpasswd&lt;/code&gt; are limited to no more than &lt;code&gt;255&lt;/code&gt; characters in length. Longer passwords will be truncated to 255 characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8a229d6b3b73c9aca37a1b3c805ee7faf0d17c1" translate="yes" xml:space="preserve">
          <source>On the internal network, one can just use the name &lt;code&gt;server&lt;/code&gt; rather than the fully qualified host name &lt;code&gt;server.example.com&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9153701e70fe893f804d78c99e7f6ec866fef65f" translate="yes" xml:space="preserve">
          <source>On the other hand, because &lt;code&gt;&lt;a href=&quot;mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; implements its per-directory context (&lt;code&gt;.htaccess&lt;/code&gt; file) via the Fixup phase of the API and because the authorization phases come &lt;em&gt;before&lt;/em&gt; this phase, you just can use &lt;code&gt;%{REMOTE_USER}&lt;/code&gt; in that context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1c0bf2b5ab7ad22c5f543db3e0f5629ee2ba706" translate="yes" xml:space="preserve">
          <source>On the other hand, if the &lt;code&gt;Order&lt;/code&gt; in the last example is changed to &lt;code&gt;Deny,Allow&lt;/code&gt;, all hosts will be allowed access. This happens because, regardless of the actual ordering of the directives in the configuration file, the &lt;code&gt;Allow from example.org&lt;/code&gt; will be evaluated last and will override the &lt;code&gt;Deny from foo.example.org&lt;/code&gt;. All hosts not in the &lt;code&gt;example.org&lt;/code&gt; domain will also be allowed access because the default state is &lt;code&gt;&lt;a href=&quot;#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ad5e78b8111157926e3fbb0354b24879d0e5cd9" translate="yes" xml:space="preserve">
          <source>On the other hand, on some platforms, such as Linux and Tru64, the &lt;strong&gt;only&lt;/strong&gt; way to handle both IPv6 and IPv4 is to use mapped addresses. If you want &lt;code&gt;httpd&lt;/code&gt; to handle IPv4 and IPv6 connections with a minimum of sockets, which requires using IPv4-mapped IPv6 addresses, specify the &lt;code&gt;--enable-v4-mapped&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;programs/configure&quot;&gt;configure&lt;/a&gt;&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6062955cd425ff66e2656db057704d2c7ebf2ed" translate="yes" xml:space="preserve">
          <source>On-the-fly Content-Regeneration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60e0686cdb041a3a1fb86fabb07b3e8c87e8f26f" translate="yes" xml:space="preserve">
          <source>Once &lt;code&gt;&lt;a href=&quot;mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; has made a decision as to whether or not an entity is to be served from cache, the detailed reason for the decision is written to the subprocess environment within the request under the &lt;strong&gt;cache-status&lt;/strong&gt; key. This reason can be logged by the &lt;code&gt;&lt;a href=&quot;mod_log_config#logformat&quot;&gt;LogFormat&lt;/a&gt;&lt;/code&gt; directive as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36df7d3749b5ced13cf40ce207a72ff54552da2c" translate="yes" xml:space="preserve">
          <source>Once &lt;code&gt;&lt;a href=&quot;mod_info&quot;&gt;mod_info&lt;/a&gt;&lt;/code&gt; is loaded into the server, its handler capability is available in &lt;em&gt;all&lt;/em&gt; configuration files, including per-directory files (&lt;em&gt;e.g.&lt;/em&gt;, &lt;code&gt;.htaccess&lt;/code&gt;). This may have security-related ramifications for your site.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8e01d11e9fdfbbfbd13c507d3d42ccbce46219b" translate="yes" xml:space="preserve">
          <source>Once Apache has been compiled, it needs to be installed in its server root directory. The default is the &lt;code&gt;\Apache2&lt;/code&gt; directory, of the same drive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cd9fb0dbd86dfee77a6ab163bc54a2665b246e2" translate="yes" xml:space="preserve">
          <source>Once a FrontPage web has been created, adding LDAP authentication to it is a matter of adding the following directives to &lt;em&gt;every&lt;/em&gt;&lt;code&gt;.htaccess&lt;/code&gt; file that gets created in the web</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6acea54cc73b9e38d69cc56a7a2146f080f50fe" translate="yes" xml:space="preserve">
          <source>Once a connection has been made to a server, that connection remains active for the life of the &lt;code&gt;&lt;a href=&quot;../programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; process, or until the LDAP server goes down.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3d753b77f11906f2088bb44b75578dc51095888" translate="yes" xml:space="preserve">
          <source>Once a connection is assigned to a particular request, it will not be used for any others until the request-handling cycle has terminated. In other words, requests are not multiplexed over connections. This makes for much simpler code at either end of the connection, although it does cause more connections to be open at once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32d58228e0f3df17aa67c7213a560ad859d3b0ea" translate="yes" xml:space="preserve">
          <source>Once a connection is assigned to handle a particular request, the basic request information (e.g. HTTP headers, etc) is sent over the connection in a highly condensed form (e.g. common strings are encoded as integers). Details of that format are below in Request Packet Structure. If there is a body to the request &lt;code&gt;(content-length &amp;gt; 0)&lt;/code&gt;, that is sent in a separate packet immediately after.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8392340f06730e78c9948e45d002198e8c89f94" translate="yes" xml:space="preserve">
          <source>Once a request has been handled, it enters several logging phases, which logs the request in either the error or access log. Mod_lua is able to hook into the start of this and control logging output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2142d96dfe32805387845532a9a1b29aab7fc4cb" translate="yes" xml:space="preserve">
          <source>Once an SSL session has been established, it may be reused. This avoids the performance penalty of repeating the many steps needed to start a session. To do this, the server assigns each SSL session a unique session identifier which is cached in the server and which the client can use in future connections to reduce the handshake time (until the session identifier expires from the cache of the server).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5a6fe334fccd388254e65eea5308a9bb3aa4e3a" translate="yes" xml:space="preserve">
          <source>Once configured, the server information is obtained by accessing &lt;code&gt;http://your.host.example.com/server-info&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1b7c10256eb2ef56b5878e41204f0cd8af0a949" translate="yes" xml:space="preserve">
          <source>Once directives have been added as specified above, FrontPage users will be able to perform all management operations from the FrontPage client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d685a3846fa347e169f1e96c237511d97d9016bb" translate="yes" xml:space="preserve">
          <source>Once general SSL support has been configured properly, enabling OCSP Stapling generally requires only very minor modifications to the httpd configuration &amp;mdash; the addition of these two directives:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c3ac99b00a77b5245bb99df459f8024285d69ca" translate="yes" xml:space="preserve">
          <source>Once read, the CGI variable &lt;code&gt;HTTP_SESSION&lt;/code&gt; should contain the value &lt;code&gt;key1=foo&amp;amp;key3=bar&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b068352465f87f0cd207f310925ee220b200803" translate="yes" xml:space="preserve">
          <source>Once replaced as instructed, this overridden useragent IP address is then used for the &lt;code&gt;&lt;a href=&quot;mod_authz_host&quot;&gt;mod_authz_host&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;mod_authz_core#require&quot;&gt;Require ip&lt;/a&gt;&lt;/code&gt; feature, is reported by &lt;code&gt;&lt;a href=&quot;mod_status&quot;&gt;mod_status&lt;/a&gt;&lt;/code&gt;, and is recorded by &lt;code&gt;&lt;a href=&quot;mod_log_config&quot;&gt;mod_log_config&lt;/a&gt;&lt;/code&gt;&lt;code&gt;%a&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;core&quot;&gt;core&lt;/a&gt;&lt;/code&gt;&lt;code&gt;%a&lt;/code&gt; format strings. The underlying client IP of the connection is available in the &lt;code&gt;%{c}a&lt;/code&gt; format string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98d50e9b436104c11149efbde5730cf6b8f53931" translate="yes" xml:space="preserve">
          <source>Once that has been put into your httpd.conf file, any file containing the &lt;code&gt;.cgi&lt;/code&gt; extension will be treated as a CGI program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebcca845cca6234e62eeaf31382fe47d2143144d" translate="yes" xml:space="preserve">
          <source>Once the server has been compiled, it is possible to determine which MPM was chosen by using &lt;code&gt;./httpd -l&lt;/code&gt;. This command will list every module that is compiled into the server, including the MPM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6a46afd8a414688bd0dcf0dc7c770701bb4d9b9" translate="yes" xml:space="preserve">
          <source>Once the user has been successfully authenticated, the user's login details will be stored in a session provided by &lt;code&gt;&lt;a href=&quot;mod_session&quot;&gt;mod_session&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8d8ff2ce5163cc4b2145bcd99c3d4fdaef19a08" translate="yes" xml:space="preserve">
          <source>Once the web server has opened a connection to the servlet container, the connection can be in one of the following states:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03c94043f4253aedb77351f2598b7fbd02fba76c" translate="yes" xml:space="preserve">
          <source>Once you have the prerequisites under your belt, it's time to move on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eb11edac97e5bf3f2c02c99396eab44f0c3a09f" translate="yes" xml:space="preserve">
          <source>Once your CSR has been signed, you can see the details of the Certificate as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3534fe5dd0256f64bf8caa7f21de800801168963" translate="yes" xml:space="preserve">
          <source>Once your basic installation is working, you should configure it properly by editing the files in the &lt;code&gt;conf&lt;/code&gt; directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1416e36c67985997908b57596b6c10b4c84f5e1" translate="yes" xml:space="preserve">
          <source>Once your basic installation is working, you should configure it properly by editing the files in the &lt;code&gt;conf&lt;/code&gt; subdirectory. Again, if you change the configuration of the Windows NT service for Apache, first attempt to start it from the command line to make sure that the service starts with no errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea1e98aae721497648d0d4f86e49b49555793baf" translate="yes" xml:space="preserve">
          <source>One additional parameter is available only to &lt;code&gt;BalancerMember&lt;/code&gt; directives: &lt;var&gt;loadfactor&lt;/var&gt;. This is the member load factor - a decimal number between 1.0 (default) and 100.0, which defines the weighted load to be applied to the member in question.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a356ab4e2f09a414c6fe55554c545593dc4bdd9" translate="yes" xml:space="preserve">
          <source>One aspect of Apache which is occasionally misunderstood is the feature of default access. That is, unless you take steps to change it, if the server can find its way to a file through normal URL mapping rules, it can serve it to clients.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9c4597ca85ae8301977aa91f92ca3d27f5458c7" translate="yes" xml:space="preserve">
          <source>One can construct a function that returns an iterative function to iterate over all rows in a synchronous or asynchronous way, depending on the async argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ace028bfa9bd99d94f8ac3974ce0397dc3bb0ac" translate="yes" xml:space="preserve">
          <source>One can usually use the &lt;code&gt;file&lt;/code&gt; program supplied with most Unix systems to see what format a DBM file is in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d2de5bd94fe9808a8d01c23268bc75bf9bb3123" translate="yes" xml:space="preserve">
          <source>One common request is to use &lt;code&gt;&lt;a href=&quot;mod_dav&quot;&gt;mod_dav&lt;/a&gt;&lt;/code&gt; to manipulate dynamic files (PHP scripts, CGI scripts, etc). This is difficult because a &lt;code&gt;GET&lt;/code&gt; request will always run the script, rather than downloading its contents. One way to avoid this is to map two different URLs to the content, one of which will run the script, and one of which will allow it to be downloaded and manipulated with DAV.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cd66e2779a5e7b4171b4377c4027a079d1e8858" translate="yes" xml:space="preserve">
          <source>One common use of SSL is to secure Web HTTP communication between a browser and a webserver. This does not preclude the use of non-secured HTTP - the secure version (called HTTPS) is the same as plain HTTP over SSL, but uses the URL scheme &lt;code&gt;https&lt;/code&gt; rather than &lt;code&gt;http&lt;/code&gt;, and a different server port (by default, port 443). This functionality is a large part of what &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; provides for the Apache webserver.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a96203d1333b9daaf6d53951efc59ae22353d3b0" translate="yes" xml:space="preserve">
          <source>One complicating factor for httpd administrators is whether or not an IPv6 socket can handle both IPv4 connections and IPv6 connections. Handling IPv4 connections with an IPv6 socket uses IPv4-mapped IPv6 addresses, which are allowed by default on most platforms, but are disallowed by default on FreeBSD, NetBSD, and OpenBSD, in order to match the system-wide policy on those platforms. On systems where it is disallowed by default, a special &lt;code&gt;&lt;a href=&quot;programs/configure&quot;&gt;configure&lt;/a&gt;&lt;/code&gt; parameter can change this behavior for httpd.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6e52150a4f55dafa73a95aedd4bff227d7e41fa" translate="yes" xml:space="preserve">
          <source>One disadvantage to this approach is that if you wanted to add SSI directives to an existing page, you would have to change the name of that page, and all links to that page, in order to give it a &lt;code&gt;.shtml&lt;/code&gt; extension, so that those directives would be executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a5b6c7bfdbbf6a5cbc294e4cf193fe9088f266f" translate="yes" xml:space="preserve">
          <source>One example of values that change based on the setting of this directive is SCRIPT_FILENAME. When using &lt;code&gt;&lt;a href=&quot;mod_proxy_fcgi&quot;&gt;mod_proxy_fcgi&lt;/a&gt;&lt;/code&gt; historically, SCRIPT_FILENAME was prefixed with the string &quot;proxy:fcgi://&quot;. This variable is what some generic FastCGI applications would read as their script input, but PHP-FPM would strip the prefix then remember it was talking to Apache. In 2.4.21 through 2.4.25, this prefix was automatically stripped by the server, breaking the ability of PHP-FPM to detect and interoperate with Apache in some scenarios.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93dcd9748e52e1f3224dfacad055fc4a2abc30f2" translate="yes" xml:space="preserve">
          <source>One feature of HTTP/2 that offers new capabilities for web developers is &lt;a href=&quot;#push&quot;&gt;Server Push&lt;/a&gt;. See that section on how your web application can make use of it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="718bd2d5ae27561c52853934e64452ff8246b37d" translate="yes" xml:space="preserve">
          <source>One further directive &lt;code&gt;&lt;a href=&quot;mod/mod_filter#addoutputfilterbytype&quot;&gt;AddOutputFilterByType&lt;/a&gt;&lt;/code&gt; is still supported, but deprecated. Use dynamic configuration instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed066ceb4c9c9d145eb32df55377e522436f8530" translate="yes" xml:space="preserve">
          <source>One important thing here has to be remembered: Whenever you use parentheses in &lt;em&gt;Pattern&lt;/em&gt; or in one of the &lt;em&gt;CondPattern&lt;/em&gt;, back-references are internally created which can be used with the strings &lt;code&gt;$N&lt;/code&gt; and &lt;code&gt;%N&lt;/code&gt; (see below). These are available for creating the &lt;em&gt;Substitution&lt;/em&gt; parameter of a &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; or the &lt;em&gt;TestString&lt;/em&gt; parameter of a &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewritecond&quot;&gt;RewriteCond&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8bc1bc1e5e351dbd7bd353a039c356ea4f6e554" translate="yes" xml:space="preserve">
          <source>One important use of piped logs is to allow log rotation without having to restart the server. The Apache HTTP Server includes a simple program called &lt;code&gt;&lt;a href=&quot;programs/rotatelogs&quot;&gt;rotatelogs&lt;/a&gt;&lt;/code&gt; for this purpose. For example, to rotate the logs every 24 hours, you can use:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5792344102f5c40846dcea4dd248c3cbc3eb123c" translate="yes" xml:space="preserve">
          <source>One less than the number of workers, or 1 with a single worker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02c1d68d5f9ca9f8631289fa486580cf1b474dcb" translate="yes" xml:space="preserve">
          <source>One objective of the EBCDIC port was to maintain enough backwards compatibility with the (EBCDIC) CERN server to make the transition to the new server attractive and easy. This required the addition of a configurable method to define whether a HTML document was stored in ASCII (the only format accepted by the old server) or in EBCDIC (the native document format in the POSIX subsystem, and therefore the only realistic format in which the other POSIX tools like &lt;code&gt;grep&lt;/code&gt; or &lt;code&gt;sed&lt;/code&gt; could operate on the documents). The current solution to this is a &quot;pseudo-MIME-format&quot; which is intercepted and interpreted by the Apache server (see below). Future versions might solve the problem by defining an &quot;ebcdic-handler&quot; for all documents which must be converted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cd9850915f36fbe972c1ea5c07a928d914ae21a" translate="yes" xml:space="preserve">
          <source>One of once, request, conn, thread -- default is once</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7a69deec5e516bb2294644aa5431a2e91eb8489" translate="yes" xml:space="preserve">
          <source>One of the following aspects of the request:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f43201b50562c21afda76819400ac703eef8c574" translate="yes" xml:space="preserve">
          <source>One of the four available internal functions provided by &lt;code&gt;RewriteMap&lt;/code&gt;: toupper, tolower, escape or unescape. (&lt;a href=&quot;../rewrite/rewritemap#int&quot;&gt;Details ...&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f39477a2d1a794169d365750d075988e74581d63" translate="yes" xml:space="preserve">
          <source>One of the most unique and useful features of Apache httpd's reverse proxy is the embedded &lt;em&gt;balancer-manager&lt;/em&gt; application. Similar to &lt;code&gt;&lt;a href=&quot;../mod/mod_status&quot;&gt;mod_status&lt;/a&gt;&lt;/code&gt;, &lt;em&gt;balancer-manager&lt;/em&gt; displays the current working configuration and status of the enabled balancers and workers currently in use. However, not only does it display these parameters, it also allows for dynamic, runtime, on-the-fly reconfiguration of almost all of them, including adding new &lt;em&gt;BalancerMembers&lt;/em&gt; (workers) to an existing balancer. To enable these capability, the following needs to be added to your configuration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa2659b795a0df2d82d70afb01b27612d8fe38a7" translate="yes" xml:space="preserve">
          <source>One of the primary uses of environment variables is to communicate information to CGI scripts. As discussed above, the environment passed to CGI scripts includes standard meta-information about the request in addition to any variables set within the Apache configuration. For more details, see the &lt;a href=&quot;howto/cgi&quot;&gt;CGI tutorial&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="201ad410724b708b4efe9c578f07e20fa9333a1d" translate="yes" xml:space="preserve">
          <source>One of the side effects of adopting a provider based mechanism for authentication is that the previous access control directives &lt;code&gt;&lt;a href=&quot;../mod/mod_access_compat#order&quot;&gt;Order&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../mod/mod_access_compat#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../mod/mod_access_compat#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../mod/mod_access_compat#satisfy&quot;&gt;Satisfy&lt;/a&gt;&lt;/code&gt; are no longer needed. However to provide backwards compatibility for older configurations, these directives have been moved to the &lt;code&gt;&lt;a href=&quot;../mod/mod_access_compat&quot;&gt;mod_access_compat&lt;/a&gt;&lt;/code&gt; module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1a7b74592a876c043af01efd4eafe421e8f8a40" translate="yes" xml:space="preserve">
          <source>One option is to use the &lt;code&gt;&lt;a href=&quot;mod_include&quot;&gt;mod_include&lt;/a&gt;&lt;/code&gt; module along with the &lt;code&gt;&lt;a href=&quot;mod_request#keptbodysize&quot;&gt;KeptBodySize&lt;/a&gt;&lt;/code&gt; directive, along with a suitable CGI script to embed the variables in the form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7de812a7b025611be0a48675c22e7281bde34115" translate="yes" xml:space="preserve">
          <source>One or more &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewritecond&quot;&gt;RewriteCond&lt;/a&gt;&lt;/code&gt; directives can be used to restrict the types of requests that will be subject to the following &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt;. The first argument is a variable describing a characteristic of the request, the second argument is a &lt;a href=&quot;#regex&quot;&gt;regular expression&lt;/a&gt; that must match the variable, and a third optional argument is a list of flags that modify how the match is evaluated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="542322cae245fc108d258e5b85f08c56c34a2c5c" translate="yes" xml:space="preserve">
          <source>One or more CA certificates must be specified for the Novell SDK to work correctly. These certificates can be specified as binary DER or Base64 (PEM) encoded files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87d06921ee59f0158cd3506644534f5b6f80fd2b" translate="yes" xml:space="preserve">
          <source>One or more CA certificates must be specified for the OpenLDAP SDK to work correctly. These certificates can be specified as binary DER or Base64 (PEM) encoded files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc86fe50d2f63df5dd842cb59a7b02612ba1d13d" translate="yes" xml:space="preserve">
          <source>One purpose of having these checks in &lt;code&gt;&lt;a href=&quot;mod_http2&quot;&gt;mod_http2&lt;/a&gt;&lt;/code&gt; is to enforce this security level for all connections, not only those from browsers. The other purpose is to prevent the negotiation of HTTP/2 as a protocol should the requirements not be met.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="590d4c182088837f836ccc2400969396037b2702" translate="yes" xml:space="preserve">
          <source>One question that often arises after reading how configuration sections are merged is related to how and when directives of specific modules like &lt;code&gt;&lt;a href=&quot;mod/mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; are processed. The answer is not trivial and needs a bit of background. Each httpd module manages its own configuration, and each of its directives in httpd.conf specify one piece of configuration in a particular context. httpd does not execute a command as it is read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="447ea2952125a2f3d2f871b2b406c991b9a4a429" translate="yes" xml:space="preserve">
          <source>One reason this might happen is because your server certificate is signed by an intermediate CA. Various CAs, such as Verisign or Thawte, have started signing certificates not with their root certificate but with intermediate certificates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03017504b6295a602411e0acfc6fea452caa3ffe" translate="yes" xml:space="preserve">
          <source>One should be aware that there are a number of different DBM file formats in existence, and with all likelihood, libraries for more than one format may exist on your system. The three primary examples are SDBM, NDBM, GNU GDBM, and Berkeley/Sleepycat DB 2/3/4. Unfortunately, all these libraries use different file formats, and you must make sure that the file format used by &lt;var&gt;filename&lt;/var&gt; is the same format that &lt;code&gt;htdbm&lt;/code&gt; expects to see. &lt;code&gt;htdbm&lt;/code&gt; currently has no way of determining what type of DBM file it is looking at. If used against the wrong format, will simply return nothing, or may create a different DBM file with a different name, or at worst, it may corrupt the DBM file if you were attempting to write to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3fce3e9b20722de9fce3ff2677ec9083bf873d5" translate="yes" xml:space="preserve">
          <source>One should be aware that there are a number of different DBM file formats in existence, and with all likelihood, libraries for more than one format may exist on your system. The three primary examples are SDBM, NDBM, the GNU project's GDBM, and Berkeley DB 2. Unfortunately, all these libraries use different file formats, and you must make sure that the file format used by &lt;var&gt;filename&lt;/var&gt; is the same format that &lt;code&gt;dbmmanage&lt;/code&gt; expects to see. &lt;code&gt;dbmmanage&lt;/code&gt; currently has no way of determining what type of DBM file it is looking at. If used against the wrong format, will simply return nothing, or may create a different DBM file with a different name, or at worst, it may corrupt the DBM file if you were attempting to write to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="320a5494bcdee747b2c6679610f2bef2550be86b" translate="yes" xml:space="preserve">
          <source>One solution is to make the sockets non-blocking. In this case the &lt;code&gt;accept&lt;/code&gt; won't block the children, and they will be allowed to continue immediately. But this wastes CPU time. Suppose you have ten idle children in &lt;code&gt;select&lt;/code&gt;, and one connection arrives. Then nine of those children will wake up, try to &lt;code&gt;accept&lt;/code&gt; the connection, fail, and loop back into &lt;code&gt;select&lt;/code&gt;, accomplishing nothing. Meanwhile none of those children are servicing requests that occurred on other sockets until they get back up to the &lt;code&gt;select&lt;/code&gt; again. Overall this solution does not seem very fruitful unless you have as many idle CPUs (in a multiprocessor box) as you have idle children (not a very likely situation).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3db9dcb20737b0a8ea7e14ca7ed8d848b491161c" translate="yes" xml:space="preserve">
          <source>One subtle difference between &lt;code&gt;&lt;a href=&quot;#alias&quot;&gt;Alias&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#aliasmatch&quot;&gt;AliasMatch&lt;/a&gt;&lt;/code&gt; is that &lt;code&gt;&lt;a href=&quot;#alias&quot;&gt;Alias&lt;/a&gt;&lt;/code&gt; will automatically copy any additional part of the URI, past the part that matched, onto the end of the file path on the right side, while &lt;code&gt;&lt;a href=&quot;#aliasmatch&quot;&gt;AliasMatch&lt;/a&gt;&lt;/code&gt; will not. This means that in almost all cases, you will want the regular expression to match the entire request URI from beginning to end, and to use substitution on the right side.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6b256c9b1b5b42259f6f00945b0abb8d0f34567" translate="yes" xml:space="preserve">
          <source>One variable in the choice of key exchange methods is digital signatures -- whether or not to use them, and if so, what kind of signatures to use. Signing with a private key provides protection against a man-in-the-middle-attack during the information exchange used to generating the shared key [&lt;a href=&quot;#AC96&quot;&gt;AC96&lt;/a&gt;, p516].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ddb1271bcb855dadc9f78f5144e96806e604178" translate="yes" xml:space="preserve">
          <source>One way to send the digest securely is to include it in a digital signature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="693234f836e800ee1002e3f6eb9b8885a70fecad" translate="yes" xml:space="preserve">
          <source>One way to use the suEXEC wrapper is through the &lt;code&gt;&lt;a href=&quot;mod/mod_suexec#suexecusergroup&quot;&gt;SuexecUserGroup&lt;/a&gt;&lt;/code&gt; directive in &lt;code&gt;&lt;a href=&quot;mod/core#virtualhost&quot;&gt;VirtualHost&lt;/a&gt;&lt;/code&gt; definitions. By setting this directive to values different from the main server user ID, all requests for CGI resources will be executed as the &lt;em&gt;User&lt;/em&gt; and &lt;em&gt;Group&lt;/em&gt; defined for that &lt;code&gt;&lt;a href=&quot;mod/core#virtualhost&quot;&gt;&amp;lt;VirtualHost&amp;gt;&lt;/a&gt;&lt;/code&gt;. If this directive is not specified for a &lt;code&gt;&lt;a href=&quot;mod/core#virtualhost&quot;&gt;&amp;lt;VirtualHost&amp;gt;&lt;/a&gt;&lt;/code&gt; then the main server userid is assumed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bb1984dcef6010639e1e70ab6df7c2f74594336" translate="yes" xml:space="preserve">
          <source>Only TCP sockets are currently supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f6e645e745297d200ab62087dedd3492b52ffd7" translate="yes" xml:space="preserve">
          <source>Only a simple list of enabled modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f4ebfc5d7a8d3379427f3efa5af65919700d270" translate="yes" xml:space="preserve">
          <source>Only available from Apache 2.4.17 and later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28d5b9367023c263815665f36a8cde3cd0eec8ad" translate="yes" xml:space="preserve">
          <source>Only available from Apache 2.4.30 and later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6911bda04da0f1c3b198fbe7e55e1e6d34b4dbf0" translate="yes" xml:space="preserve">
          <source>Only complete path segments are matched, so the above example would not match a request for &lt;code&gt;http://example.com/servicefoo.txt&lt;/code&gt;. For more complex matching using the &lt;a href=&quot;../expr&quot;&gt;expression syntax&lt;/a&gt;, omit the URL-path argument as described below. Alternatively, for matching using regular expressions, see the &lt;code&gt;&lt;a href=&quot;#redirectmatch&quot;&gt;RedirectMatch&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a54f7b2e47c3cfcccc6e0b1dd6baa395de9293e1" translate="yes" xml:space="preserve">
          <source>Only directives that support the directory context can be used within this configuration section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0941332a84ad8c90a59cc003c94ffc22f66a2e1" translate="yes" xml:space="preserve">
          <source>Only information relevant to the named module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d227becfe6b53bb708266b3a58e941fd1dfb0a25" translate="yes" xml:space="preserve">
          <source>Only one &lt;code&gt;&lt;a href=&quot;#proxypass&quot;&gt;ProxyPass&lt;/a&gt;&lt;/code&gt; directive can be placed in a &lt;code&gt;&lt;a href=&quot;core#location&quot;&gt;Location&lt;/a&gt;&lt;/code&gt; block, and the most specific location will take precedence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31e3aa6a8f6a4257572f1cbe7d7313276f54eea3" translate="yes" xml:space="preserve">
          <source>Only providers which support Digest Authentication will be able to authenticate users when &lt;code&gt;AuthBasicUseDigestAlgorithm&lt;/code&gt; is set to &lt;code&gt;MD5&lt;/code&gt;. Use of other providers will result in an error response and the client will be denied access.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7795356c46f7e0343a4eaa50a09db70995d495a" translate="yes" xml:space="preserve">
          <source>Only shell environment variables defined before the server is started can be used in expansions. Environment variables defined in the configuration file itself, for example with &lt;code&gt;&lt;a href=&quot;mod/mod_env#setenv&quot;&gt;SetEnv&lt;/a&gt;&lt;/code&gt;, take effect too late to be used for expansions in the configuration file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71a9194cc102e6a4bb36714cfc9f08381dbe5a15" translate="yes" xml:space="preserve">
          <source>Only specific URIs can be proxied, as shown in this example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcda44bf30b9c613c5bb15e98777453f7fffb64b" translate="yes" xml:space="preserve">
          <source>Only the HTTP response headers specifically mentioned above will be rewritten. Apache httpd will not rewrite other response headers, nor will it by default rewrite URL references inside HTML pages. This means that if the proxied content contains absolute URL references, they will bypass the proxy. To rewrite HTML content to match the proxy, you must load and enable &lt;code&gt;&lt;a href=&quot;mod_proxy_html&quot;&gt;mod_proxy_html&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fb2a366f818441b6051f8b55e9fde36c2ca82e8" translate="yes" xml:space="preserve">
          <source>Only the Microsoft compiler tool chain is actively supported by the active httpd contributors. Although the project regularly accepts patches to ensure MinGW and other alternative builds work and improve upon them, they are not actively maintained and are often broken in the course of normal development.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54b415b403a5c2b3f0e3cf66a1c1b8913b373249" translate="yes" xml:space="preserve">
          <source>Only the SysV init-style options are defined here. Other arguments are defined on the &lt;code&gt;&lt;a href=&quot;httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; manual page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f703377394eafda2d1e5ef41ae3f063b038423e6" translate="yes" xml:space="preserve">
          <source>Only the basic server information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c14b6a21b830ac505b26b9c633cebaae075f0891" translate="yes" xml:space="preserve">
          <source>Only the list of Hooks each module is attached to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1266e74b7989a18f672111377ba07dff6a0b05df" translate="yes" xml:space="preserve">
          <source>Only the named users can access the resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d30f45db700c34b0e4f7d41d616eda7fd2196c71" translate="yes" xml:space="preserve">
          <source>Only the ordering of name-based vhosts for a specific address set is significant. The one name-based vhosts that comes first in the configuration file has the highest priority for its corresponding address set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c82d94af3c283ae625565eaf02b589f9a0ac0b88" translate="yes" xml:space="preserve">
          <source>Only users in the named groups can access the resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="709c9ac6472e86e04930c2825e0d03f5748bd3d7" translate="yes" xml:space="preserve">
          <source>Only when such a stream results in a PUSH, gets the server to decide what the &lt;em&gt;initial&lt;/em&gt; priority of such a pushed stream is. In the examples below, X is the client stream. It depends on Y and the server decides to PUSH streams P1 and P2 onto X.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc13dc59d2ef853f2447b42744615247094c2970" translate="yes" xml:space="preserve">
          <source>Open a Command Prompt and CD to the httpd-2.x.x folder</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33b21c9f6c4bf0fb7d5d99b1de1137c3c80ab423" translate="yes" xml:space="preserve">
          <source>Open the &lt;code&gt;Apache.dsw&lt;/code&gt; workspace, and select &lt;code&gt;InstallBin&lt;/code&gt; (&lt;code&gt;Release&lt;/code&gt; or &lt;code&gt;Debug&lt;/code&gt; build, as desired) as the Active Project. &lt;code&gt;InstallBin&lt;/code&gt; causes all related project to be built, and then invokes &lt;code&gt;Makefile.win&lt;/code&gt; to move the compiled executables and dlls. You may personalize the &lt;code&gt;INSTDIR=&lt;/code&gt; choice by changing &lt;code&gt;InstallBin&lt;/code&gt;'s Settings, General tab, Build command line entry. &lt;code&gt;INSTDIR&lt;/code&gt; defaults to the &lt;code&gt;/Apache2&lt;/code&gt; directory. If you only want a test compile (without installing) you may build the &lt;code&gt;BuildBin&lt;/code&gt; project instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb1e9a2b10255a275612e7b9a3ed076a2d650354" translate="yes" xml:space="preserve">
          <source>OpenLDAP SDK</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d88721a9659f7640f477860a6e0e50af7b4d9536" translate="yes" xml:space="preserve">
          <source>OpenSSL 0.9.8 started to support this by default when compiled with the &lt;code&gt;zlib&lt;/code&gt; option. If both the client and the server support compression, it will be used. However, most clients still try to initially connect with an SSLv2 Hello. As SSLv2 did not include an array of preferred compression algorithms in its handshake, compression cannot be negotiated with these clients. If the client disables support for SSLv2, either an SSLv3 or TLS Hello may be sent, depending on which SSL library is used, and compression may be set up. You can verify whether clients make use of SSL compression by logging the &lt;code&gt;%{SSL_COMPRESS_METHOD}x&lt;/code&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad66e13501bb57d95527359a7829ab4f75cde885" translate="yes" xml:space="preserve">
          <source>OpenSSL knows the Apache-specific MD5 algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd0ee8bfce2c60ebcd9e499e81629b47d26015bc" translate="yes" xml:space="preserve">
          <source>OpenSSL must be installed into a &lt;code&gt;srclib&lt;/code&gt; subdirectory named &lt;code&gt;openssl&lt;/code&gt;, obtained from &lt;a href=&quot;http://www.openssl.org/source/&quot;&gt;http://www.openssl.org/source/&lt;/a&gt;, in order to compile &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; or the &lt;code&gt;abs.exe&lt;/code&gt; project, which is ab.c with SSL support enabled. To prepare OpenSSL to be linked to Apache mod_ssl or abs.exe, and disable patent encumbered features in OpenSSL, you might use the following build commands:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04ce028f1e80d2a64e27ba2e22023f557acda11a" translate="yes" xml:space="preserve">
          <source>OpenSSL with engine support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dd39ac7cc2899758565a64b97d7e7b64e94b3a8" translate="yes" xml:space="preserve">
          <source>Operating System Caching</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef860d5dc2252b1ec8bb5b6fb5997b63fe3311d2" translate="yes" xml:space="preserve">
          <source>Operating System Requirements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4452ae09af99c07f048d000ca4688258552a8cb8" translate="yes" xml:space="preserve">
          <source>Operating system choice is largely a matter of local concerns. But some guidelines that have proven generally useful are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="430d32076eb256f0fb1db5fd1333254c368ef1ba" translate="yes" xml:space="preserve">
          <source>Operation</source>
          <target state="translated">Operation</target>
        </trans-unit>
        <trans-unit id="3414ed847a9b38547a112be465e18664e4acad4e" translate="yes" xml:space="preserve">
          <source>Operation Caches</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e09d94f86326c1678b03c46f6d620bea451e775d" translate="yes" xml:space="preserve">
          <source>Opposite to L. Overrides the one-change-only default behaviour with HTML links.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c92e098706af01e3431302768776cee42eaa75a" translate="yes" xml:space="preserve">
          <source>Option to enable support for insecure renegotiation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70747f2149ef2c658c69a9e2916294370cf14031" translate="yes" xml:space="preserve">
          <source>Option to prefer the server's cipher preference order</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aea955a5941617bfa02e34a4d8ef090b4708aba" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;flag&lt;/em&gt;s available in httpd 2.4.21 or later</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be0269b2d211f6d3f42ecd61a1a260a62d25d51a" translate="yes" xml:space="preserve">
          <source>Optional DN to use in binding to the LDAP server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c49b1643c903074dd04faa3ee683900d824639b" translate="yes" xml:space="preserve">
          <source>Optional Features</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fc91dcc1616a5c8e329afddb113a08d411bb845" translate="yes" xml:space="preserve">
          <source>Optional features</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b49469465e885468461a55e87c1951d54b869ed" translate="yes" xml:space="preserve">
          <source>Optional packages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ec619ec97d8bcb44b338d573d43b8f0e10b372c" translate="yes" xml:space="preserve">
          <source>Optional provider arguments are available in Apache HTTP Server 2.4.7 and later</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da47f480b533508ccf3f31815d68de713e0f9452" translate="yes" xml:space="preserve">
          <source>Optionally authenticate the client to the server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6f5d9c4548f8fda76a0c82eb9a1603dd0bef40e" translate="yes" xml:space="preserve">
          <source>Optionally authenticate the server to the client</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3b8385f36797dbd1541e5f0e8c614f040e86bf8" translate="yes" xml:space="preserve">
          <source>Optionally configures a secret key for encrypting and decrypting TLS session tickets, as defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc5077.txt&quot;&gt;RFC 5077&lt;/a&gt;. Primarily suitable for clustered environments where TLS sessions information should be shared between multiple nodes. For single-instance httpd setups, it is recommended to &lt;em&gt;not&lt;/em&gt; configure a ticket key file, but to rely on (random) keys generated by mod_ssl at startup, instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8948295fe85b2b5ac221fdc98336e2d1f65e904" translate="yes" xml:space="preserve">
          <source>Optionally, an initial amount of burst data, in KiB, may be configured to be passed at full speed before throttling to the specified rate limit. This value is optional, and is set using the environment variable &lt;code&gt;rate-initial-burst&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bf5da9c080bee3a8142586c412aa39971137eee" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">Options</target>
        </trans-unit>
        <trans-unit id="9ea2dd6f9098a1d04f0255c37bd99ee891ffe1ce" translate="yes" xml:space="preserve">
          <source>Options Directive</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
