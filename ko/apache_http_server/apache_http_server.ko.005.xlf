<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="apache_http_server">
    <body>
      <group id="apache_http_server">
        <trans-unit id="bb6cac41d52cbd8ee69c1cfb5a085a41e48f65e0" translate="yes" xml:space="preserve">
          <source>HTTP/2 server pushes are always related to a client request. Each such request/response pairs, or &lt;em&gt;streams&lt;/em&gt; have a dependency and a weight, together defining the &lt;em&gt;priority&lt;/em&gt; of a stream.</source>
          <target state="translated">HTTP / 2 서버 푸시는 항상 클라이언트 요청과 관련이 있습니다. 이러한 각 요청 / 응답 쌍 또는 &lt;em&gt;스트림&lt;/em&gt; 은 &lt;em&gt;스트림&lt;/em&gt; 의 &lt;em&gt;우선 순위&lt;/em&gt; 를 정의하는 종속성 및 가중치를 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="60ab758619ec5d5ac4d3b99027e865699f7300bc" translate="yes" xml:space="preserve">
          <source>HTTP/2 server pushes are enabled by default. This directive allows it to be switch off on all resources of this server/virtual host.</source>
          <target state="translated">HTTP / 2 서버 푸시는 기본적으로 사용됩니다. 이 지정 문을 사용하면이 서버 / 가상 호스트의 모든 자원을 끌 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="06a23857342c9f3982518206da0e3f66d15b69bb" translate="yes" xml:space="preserve">
          <source>HTTP/2 stream number of this request.</source>
          <target state="translated">이 요청의 HTTP / 2 스트림 번호</target>
        </trans-unit>
        <trans-unit id="ff726c8d441d9bbc944b742d1859ec35ecdcf043" translate="yes" xml:space="preserve">
          <source>HTTP/2 stream number that triggered the push of this request.</source>
          <target state="translated">이 요청의 푸시를 트리거 한 HTTP / 2 스트림 번호.</target>
        </trans-unit>
        <trans-unit id="1c91b43fb3839e1fec2d2afc5fc8b125868eab02" translate="yes" xml:space="preserve">
          <source>HTTP/2 support module for &lt;code&gt;&lt;a href=&quot;mod_proxy&quot;&gt;mod_proxy&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;mod_proxy&quot;&gt;mod_proxy&lt;/a&gt;&lt;/code&gt; 에 대한 HTTP / 2 지원 모듈</target>
        </trans-unit>
        <trans-unit id="f52698c28f0d2036450e02a85451ee4f5be02442" translate="yes" xml:space="preserve">
          <source>HTTPS</source>
          <target state="translated">HTTPS</target>
        </trans-unit>
        <trans-unit id="d675d242173bc8904643389b63bd9a1f8d917947" translate="yes" xml:space="preserve">
          <source>HTTPS is being used.</source>
          <target state="translated">HTTPS가 사용 중입니다.</target>
        </trans-unit>
        <trans-unit id="6731e1bf7c1be4f32f70d3fa00945801bb384421" translate="yes" xml:space="preserve">
          <source>HTTP_ACCEPT</source>
          <target state="translated">HTTP_ACCEPT</target>
        </trans-unit>
        <trans-unit id="0dba9dd62e8de10148bd0d4a5232cd0b8e4c5769" translate="yes" xml:space="preserve">
          <source>HTTP_COOKIE</source>
          <target state="translated">HTTP_COOKIE</target>
        </trans-unit>
        <trans-unit id="f4ed377c2080bcfd90adad1bbfe710b89a218d5b" translate="yes" xml:space="preserve">
          <source>HTTP_FORWARDED</source>
          <target state="translated">HTTP_FORWARDED</target>
        </trans-unit>
        <trans-unit id="5602439cd9887bd232d98c6582bea73536d9ce34" translate="yes" xml:space="preserve">
          <source>HTTP_HOST</source>
          <target state="translated">HTTP_HOST</target>
        </trans-unit>
        <trans-unit id="a7b9357a2dd69d44d624b0e1bc6a1e955ed072f7" translate="yes" xml:space="preserve">
          <source>HTTP_PROXY_CONNECTION</source>
          <target state="translated">HTTP_PROXY_CONNECTION</target>
        </trans-unit>
        <trans-unit id="152d307df2e629814d925e0d13d7a9337802aafd" translate="yes" xml:space="preserve">
          <source>HTTP_REFERER</source>
          <target state="translated">HTTP_REFERER</target>
        </trans-unit>
        <trans-unit id="14bcb7db42bfb9266aa21941303cc0cd6ca135ca" translate="yes" xml:space="preserve">
          <source>HTTP_USER_AGENT</source>
          <target state="translated">HTTP_USER_AGENT</target>
        </trans-unit>
        <trans-unit id="cf4c2dd5b8098515b79eab53b65cd22379bf6672" translate="yes" xml:space="preserve">
          <source>Had severe limitations before being moved to &lt;code&gt;&lt;a href=&quot;mod_filter&quot;&gt;mod_filter&lt;/a&gt;&lt;/code&gt; in version 2.3.7</source>
          <target state="translated">버전 2.3.7에서 &lt;code&gt;&lt;a href=&quot;mod_filter&quot;&gt;mod_filter&lt;/a&gt;&lt;/code&gt; 로 이동하기 전에 심각한 제한이있었습니다.</target>
        </trans-unit>
        <trans-unit id="362f233bfd36bbe9ffba21ece507104cececa24e" translate="yes" xml:space="preserve">
          <source>Handlers</source>
          <target state="translated">Handlers</target>
        </trans-unit>
        <trans-unit id="4c163dd50c47c48934daf52cc526413bb8e493cf" translate="yes" xml:space="preserve">
          <source>Handlers can either be built into the server or included in a module, or they can be added with the &lt;code&gt;&lt;a href=&quot;mod/mod_actions#action&quot;&gt;Action&lt;/a&gt;&lt;/code&gt; directive. The built-in handlers in the standard distribution are as follows:</source>
          <target state="translated">핸들러는 서버에 내장되거나 모듈에 포함되거나 &lt;code&gt;&lt;a href=&quot;mod/mod_actions#action&quot;&gt;Action&lt;/a&gt;&lt;/code&gt; 지시문 으로 추가 될 수 있습니다 . 표준 배포판의 내장 핸들러는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6ce71b1ebbf6d24a2a7f1d0b79dd38f930b29a50" translate="yes" xml:space="preserve">
          <source>Handlers may also be configured explicitly, based on either filename extensions or on location, without relation to file type. This is advantageous both because it is a more elegant solution, and because it also allows for both a type &lt;strong&gt;and&lt;/strong&gt; a handler to be associated with a file. (See also &lt;a href=&quot;mod/mod_mime#multipleext&quot;&gt;Files with Multiple Extensions&lt;/a&gt;.)</source>
          <target state="translated">처리기는 파일 형식과 관계없이 파일 이름 확장자 또는 위치를 기반으로 명시 적으로 구성 할 수도 있습니다. 이것은보다 우아한 솔루션이기 때문에 &lt;strong&gt;그리고&lt;/strong&gt; 형식 &lt;strong&gt;과&lt;/strong&gt; 처리기 모두 파일과 연결될 수 있기 때문에 유리 합니다. ( &lt;a href=&quot;mod/mod_mime#multipleext&quot;&gt;여러 확장자를 가진 파일&lt;/a&gt; 도 참조하십시오 .)</target>
        </trans-unit>
        <trans-unit id="9ae5aaa9d233f0ff958c4e17c37701d0a3441e63" translate="yes" xml:space="preserve">
          <source>Handler|H=&lt;em&gt;Content-handler&lt;/em&gt;</source>
          <target state="translated">Handler|H=&lt;em&gt;Content-handler&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="421501075ec8b6ee0031a94b7a9628f7721d85fa" translate="yes" xml:space="preserve">
          <source>Handshake Sequence Protocol</source>
          <target state="translated">핸드 셰이크 시퀀스 프로토콜</target>
        </trans-unit>
        <trans-unit id="d997669d03ea82d03236a2995da89d1be2664c1a" translate="yes" xml:space="preserve">
          <source>Hardware and Operating System Issues</source>
          <target state="translated">하드웨어 및 운영 체제 문제</target>
        </trans-unit>
        <trans-unit id="ab764962089f32b0125a0fb7a8725880e562b950" translate="yes" xml:space="preserve">
          <source>Has e&lt;strong&gt;x&lt;/strong&gt;ecutable permissions.</source>
          <target state="translated">e &lt;strong&gt;x&lt;/strong&gt; ecutable 권한이 있습니다.</target>
        </trans-unit>
        <trans-unit id="8336462af6a84411ec1bd42847ff1b1608ad98c4" translate="yes" xml:space="preserve">
          <source>Has the effect of &lt;code&gt;&amp;lt;base href=&quot;value&quot;&amp;gt;&lt;/code&gt;. The non-absolute URLs of the map-file are taken relative to this value. The &lt;code&gt;base&lt;/code&gt; directive overrides &lt;code&gt;&lt;a href=&quot;#imapbase&quot;&gt;ImapBase&lt;/a&gt;&lt;/code&gt; as set in a &lt;code&gt;.htaccess&lt;/code&gt; file or in the server configuration files. In the absence of an &lt;code&gt;ImapBase&lt;/code&gt; configuration directive, &lt;code&gt;base&lt;/code&gt; defaults to &lt;code&gt;http://server_name/&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;base href=&quot;value&quot;&amp;gt;&lt;/code&gt; 의 효과가 있습니다. 맵 파일의 절대 URL이이 값을 기준으로합니다. &lt;code&gt;base&lt;/code&gt; 지침 오버라이드 (override) &lt;code&gt;&lt;a href=&quot;#imapbase&quot;&gt;ImapBase&lt;/a&gt;&lt;/code&gt; A의 집합으로 &lt;code&gt;.htaccess&lt;/code&gt; 파일이나 서버 구성 파일입니다. 이없는 &lt;code&gt;ImapBase&lt;/code&gt; 구성 지침, &lt;code&gt;base&lt;/code&gt; 디폴트 &lt;code&gt;http://server_name/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ef7fba929c6c1b70ba4125218083ce43879c2d4d" translate="yes" xml:space="preserve">
          <source>Has the exact same behavior as:</source>
          <target state="translated">다음과 정확히 같은 동작을합니다.</target>
        </trans-unit>
        <trans-unit id="75dac585e8c1175f8d5fedc0e0fdd511453d3690" translate="yes" xml:space="preserve">
          <source>Hash the string using MD5, then encode the hash with hexadecimal encoding</source>
          <target state="translated">MD5를 사용하여 문자열을 해시 한 다음 16 진수 인코딩으로 해시를 인코딩</target>
        </trans-unit>
        <trans-unit id="b75971ea62319f935f0ca9cf56cdca93bed5a70e" translate="yes" xml:space="preserve">
          <source>Hash the string using SHA1, then encode the hash with hexadecimal encoding</source>
          <target state="translated">SHA1을 사용하여 문자열을 해시 한 다음 16 진 인코딩으로 해시를 인코딩하십시오.</target>
        </trans-unit>
        <trans-unit id="364e4a3bbab57ccf5bff27c0970f25d30f22f504" translate="yes" xml:space="preserve">
          <source>Have a look at the Apache manual under &lt;code&gt;&lt;em&gt;PREFIX&lt;/em&gt;/docs/manual/&lt;/code&gt; or consult &lt;a href=&quot;http://httpd.apache.org/docs/2.4/&quot;&gt;http://httpd.apache.org/docs/2.4/&lt;/a&gt; for the most recent version of this manual and a complete reference of available &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/mod/directives.html&quot;&gt;configuration directives&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;PREFIX&lt;/em&gt;/docs/manual/&lt;/code&gt; 에서 Apache 매뉴얼을 보거나 &lt;a href=&quot;http://httpd.apache.org/docs/2.4/&quot;&gt;http://httpd.apache.org/docs/2.4/&lt;/a&gt; 에서이 매뉴얼의 최신 버전과 사용 가능한 &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/mod/directives.html&quot;&gt;구성 지시문에&lt;/a&gt; 대한 완전한 참조를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e80fa5501887d15a0a538cb41220d4c5aade6032" translate="yes" xml:space="preserve">
          <source>Having said that, if you still think you need to use a &lt;code&gt;.htaccess&lt;/code&gt; file, you may find that a configuration such as what follows may work for you.</source>
          <target state="translated">그래도 &lt;code&gt;.htaccess&lt;/code&gt; 파일 을 사용해야한다고 생각되면 다음과 같은 구성이 적합 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="287753f565c03d60052581a820ad1ddc72ba21ea" translate="yes" xml:space="preserve">
          <source>Having to manually enter the passphrase when starting the server can be problematic - for example, when starting the server from the system boot scripts. In this case, you can follow the steps &lt;a href=&quot;#removepassphrase&quot;&gt;below&lt;/a&gt; to remove the passphrase from your private key. Bear in mind that doing so brings additional security risks - proceed with caution!</source>
          <target state="translated">서버를 시작할 때 암호 문구를 수동으로 입력해야하는 경우 (예 : 시스템 부팅 스크립트에서 서버를 시작할 때) 문제가 될 수 있습니다. 이 경우 &lt;a href=&quot;#removepassphrase&quot;&gt;아래&lt;/a&gt; 단계에 따라 개인 키에서 암호를 제거 할 수 있습니다 . 그렇게하면 추가적인 보안 위험이 발생합니다.주의해서 진행하십시오!</target>
        </trans-unit>
        <trans-unit id="31341c6f0c7af677ffb8fadcb92038e8ac2b6193" translate="yes" xml:space="preserve">
          <source>Header</source>
          <target state="translated">Header</target>
        </trans-unit>
        <trans-unit id="658c7a9e4f33b9362e6674ac3321d56900178e9c" translate="yes" xml:space="preserve">
          <source>Header Directive</source>
          <target state="translated">헤더 지시어</target>
        </trans-unit>
        <trans-unit id="e659043e4449bc20f205a984b25ce70cff5951c5" translate="yes" xml:space="preserve">
          <source>Header row of listing</source>
          <target state="translated">목록의 헤더 행</target>
        </trans-unit>
        <trans-unit id="87a9f1c73fedae1d0d31f13194adecb5376a93c6" translate="yes" xml:space="preserve">
          <source>HeaderName</source>
          <target state="translated">HeaderName</target>
        </trans-unit>
        <trans-unit id="ccf31eb8470e5b9f2f076fa843601f2e05f5dcd8" translate="yes" xml:space="preserve">
          <source>HeaderName Directive</source>
          <target state="translated">HeaderName 지시어</target>
        </trans-unit>
        <trans-unit id="520de7443d00d6ff4dc3ababbbf6cfbe0b74f4ec" translate="yes" xml:space="preserve">
          <source>Headers</source>
          <target state="translated">Headers</target>
        </trans-unit>
        <trans-unit id="c4ed55702fd20e907bd74b90713e2d299da0f2be" translate="yes" xml:space="preserve">
          <source>Headers and development files for the server.</source>
          <target state="translated">서버의 헤더 및 개발 파일</target>
        </trans-unit>
        <trans-unit id="9521df02c85dd51ae7493164f1a455f31e005564" translate="yes" xml:space="preserve">
          <source>Heartbeat Traffic Counting load balancer scheduler algorithm for &lt;code&gt;&lt;a href=&quot;mod_proxy_balancer&quot;&gt;mod_proxy_balancer&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;mod_proxy_balancer&quot;&gt;mod_proxy_balancer&lt;/a&gt;&lt;/code&gt; 에 대한 하트 비트 트래픽 카운팅로드 밸런서 스케줄러 알고리즘</target>
        </trans-unit>
        <trans-unit id="d46d102ab191ba394652055e389424998dfd9f3c" translate="yes" xml:space="preserve">
          <source>HeartbeatAddress Directive</source>
          <target state="translated">하트 비트 주소 지시어</target>
        </trans-unit>
        <trans-unit id="a6d9b9624fbf0d2fced32c2916374eacd9c35c9f" translate="yes" xml:space="preserve">
          <source>HeartbeatListen Directive</source>
          <target state="translated">HeartbeatListen 지시어</target>
        </trans-unit>
        <trans-unit id="9b726dd1d54cfbd36b781a162d6d97522bf638ac" translate="yes" xml:space="preserve">
          <source>HeartbeatMaxServers Directive</source>
          <target state="translated">HeartbeatMaxServers 지시어</target>
        </trans-unit>
        <trans-unit id="2e6205162f65726312f1a8ff4f5431dd6b752b35" translate="yes" xml:space="preserve">
          <source>HeartbeatStorage Directive</source>
          <target state="translated">HeartbeatStorage 지시어</target>
        </trans-unit>
        <trans-unit id="776742f407ff5071e73d918004abf0f79ae962fe" translate="yes" xml:space="preserve">
          <source>Helping with the documentation</source>
          <target state="translated">설명서 도움</target>
        </trans-unit>
        <trans-unit id="e6d6adda270dbc8e999aabcd9e8cc8b12f5fe448" translate="yes" xml:space="preserve">
          <source>Here an external program is configured which is called at startup for each encrypted Private Key file. It is called with two arguments (the first is of the form ``&lt;code&gt;servername:portnumber&lt;/code&gt;'', the second is either ``&lt;code&gt;RSA&lt;/code&gt;'', ``&lt;code&gt;DSA&lt;/code&gt;'', ``&lt;code&gt;ECC&lt;/code&gt;'' or an integer index starting at 3 if more than three keys are configured), which indicate for which server and algorithm it has to print the corresponding Pass Phrase to &lt;code&gt;stdout&lt;/code&gt;. In versions 2.4.8 (unreleased) and 2.4.9, it is called with one argument, a string of the form ``&lt;code&gt;servername:portnumber:index&lt;/code&gt;'' (with &lt;code&gt;index&lt;/code&gt; being a zero-based integer number), which indicate the server, TCP port and certificate number. The intent is that this external program first runs security checks to make sure that the system is not compromised by an attacker, and only when these checks were passed successfully it provides the Pass Phrase.</source>
          <target state="translated">여기서 암호화 된 각 개인 키 파일에 대해 시작시 호출되는 외부 프로그램이 구성됩니다. 두 개의 인수로 호출됩니다 (첫 번째는`` &lt;code&gt;servername:portnumber&lt;/code&gt; ''형식이고 두 번째는`` &lt;code&gt;RSA&lt;/code&gt; '',`` &lt;code&gt;DSA&lt;/code&gt; '',`` &lt;code&gt;ECC&lt;/code&gt; ''또는 3에서 시작하는 정수 인덱스 임) 세 개 이상의 키가 구성되어 있으며 이는 해당 서버에서 해당 패스 문구를 &lt;code&gt;stdout&lt;/code&gt; 에 인쇄해야하는 서버 및 알고리즘을 나타냅니다 . 버전 2.4.8 (미공개) 및 2.4.9, 그것은 하나 개의 인수, 형태``의 문자열로 호출 &lt;code&gt;servername:portnumber:index&lt;/code&gt; 에 ''( &lt;code&gt;index&lt;/code&gt; 서버, TCP 포트 및 인증서 번호를 나타내는 0부터 시작하는 정수)입니다. 이 외부 프로그램은 먼저 보안 검사를 실행하여 공격자가 시스템을 손상시키지 않았는지 확인하고 이러한 검사가 성공적으로 통과 된 경우에만 암호 문구를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="c5e202fea1dd094f66daaedceabf4e9f2743b350" translate="yes" xml:space="preserve">
          <source>Here are all possible substitution combinations and their meanings:</source>
          <target state="translated">가능한 모든 대체 조합 및 의미는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2f3462965fa6182abab720e49f6d67b801a17ee2" translate="yes" xml:space="preserve">
          <source>Here is a snippet that avoids both of these problems:</source>
          <target state="translated">다음은이 두 가지 문제를 피하는 스 니펫입니다.</target>
        </trans-unit>
        <trans-unit id="9424c413d4c6c4dffe950a04608d109984fc6437" translate="yes" xml:space="preserve">
          <source>Here is a step-by-step description:</source>
          <target state="translated">다음은 단계별 설명입니다.</target>
        </trans-unit>
        <trans-unit id="bb357664ec6ac11aa9e4f756a85e79233ec1dece" translate="yes" xml:space="preserve">
          <source>Here is a system call trace of Apache 2.0.38 with the worker MPM on Solaris 8. This trace was collected using:</source>
          <target state="translated">다음은 Solaris 8에서 작업자 MPM이있는 Apache 2.0.38의 시스템 호출 추적입니다.이 추적은 다음을 사용하여 수집되었습니다.</target>
        </trans-unit>
        <trans-unit id="dfd48a1c181391f323b71ef42633c528ab7f8433" translate="yes" xml:space="preserve">
          <source>Here is the filter which traces the data:</source>
          <target state="translated">데이터를 추적하는 필터는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="359343f34093411d151ba6058ce9c464d8b1087a" translate="yes" xml:space="preserve">
          <source>Here is where suEXEC ends and the target CGI/SSI program begins.</source>
          <target state="translated">여기에서 suEXEC가 끝나고 대상 CGI / SSI 프로그램이 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="a8fa8212a7f2d763fa2ec4642a71e1dd135bb766" translate="yes" xml:space="preserve">
          <source>Here is where the program becomes the target user and group via setuid and setgid calls. The group access list is also initialized with all of the groups of which the user is a member.</source>
          <target state="translated">여기서 프로그램은 setuid 및 setgid 호출을 통해 대상 사용자 및 그룹이됩니다. 그룹 액세스 목록은 사용자가 구성원 인 모든 그룹으로 초기화됩니다.</target>
        </trans-unit>
        <trans-unit id="b2255a5e5410152775607a633c9a1cbe438345aa" translate="yes" xml:space="preserve">
          <source>Here some more examples of filenames together with valid and invalid hyperlinks:</source>
          <target state="translated">다음은 유효하고 유효하지 않은 하이퍼 링크와 함께 파일 이름의 몇 가지 예입니다</target>
        </trans-unit>
        <trans-unit id="56d564aefb7892f347028d4391988afd4a93c634" translate="yes" xml:space="preserve">
          <source>Here's an example of a file whose contents are sent &lt;em&gt;as is&lt;/em&gt; so as to tell the client that a file has redirected.</source>
          <target state="translated">여기에 내용을 전송되는 파일의 예 &lt;em&gt;와 같이&lt;/em&gt; 파일이 재 것을 클라이언트에게 정도로는.</target>
        </trans-unit>
        <trans-unit id="7a66443452c08fe1457b3fa44a2ed515dc2724bd" translate="yes" xml:space="preserve">
          <source>Here's something else that you can do with the &lt;code&gt;exec&lt;/code&gt; function. You can actually have SSI execute a command using the shell (&lt;code&gt;/bin/sh&lt;/code&gt;, to be precise - or the DOS shell, if you're on Win32). The following, for example, will give you a directory listing.</source>
          <target state="translated">&lt;code&gt;exec&lt;/code&gt; 함수로 할 수있는 다른 작업이 있습니다 . 실제로 SSI가 셸을 사용하여 명령을 실행하도록 할 수 있습니다 ( &lt;code&gt;/bin/sh&lt;/code&gt; , 또는 DOS 셸인 경우 Win32 인 경우). 예를 들어, 다음은 디렉토리 목록을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="2b48e4f298102a103a3f2cc0bce5b3e27001c939" translate="yes" xml:space="preserve">
          <source>Here's the basics of password protecting a directory on your server.</source>
          <target state="translated">서버의 디렉토리를 보호하는 비밀번호의 기본 사항은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="fcb63b05da17099ea103dacda6cf946f7ca68f85" translate="yes" xml:space="preserve">
          <source>Here's where we begin the fun.</source>
          <target state="translated">여기서 우리는 재미를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="edc0b9df416b9dc92b149104dd481b9874894483" translate="yes" xml:space="preserve">
          <source>Here, 'Unix' is used to mean Unix-like operating systems, such as Linux, BSD, Solaris, Mac OS X, etc.</source>
          <target state="translated">여기서 'Unix'는 Linux, BSD, Solaris, Mac OS X 등과 같은 유닉스 계열 운영 체제를 의미합니다.</target>
        </trans-unit>
        <trans-unit id="c01916b5c732a63f7576fd9c45f629fdbfdcb6a1" translate="yes" xml:space="preserve">
          <source>Hierarchy limitations</source>
          <target state="translated">계층 제한</target>
        </trans-unit>
        <trans-unit id="5286bdb1658c80dbb084ac2e0ede1b1a597239b1" translate="yes" xml:space="preserve">
          <source>Historical note: The Linux port of Apache didn't start to use shared memory until version 1.2 of Apache. This oversight resulted in really poor and unreliable behavior of earlier versions of Apache on Linux.</source>
          <target state="translated">역사적 메모 : Apache의 Linux 포트는 Apache 1.2 버전까지 공유 메모리를 사용하지 않았습니다. 이 감독으로 인해 Linux에서 이전 버전의 Apache가 제대로 작동하지 않고 신뢰할 수 없게되었습니다.</target>
        </trans-unit>
        <trans-unit id="0faca42ef676d80c7e6b6a8f5cdf3222563c5efd" translate="yes" xml:space="preserve">
          <source>Historically, each filter is responsible for ensuring that whatever changes it makes are correctly represented in the HTTP response headers, and that it does not run when it would make an illegal change. This imposes a burden on filter authors to re-implement some common functionality in every filter:</source>
          <target state="translated">역사적으로 각 필터는 변경 내용이 HTTP 응답 헤더에 올바르게 표시되고 불법적으로 변경 될 때 실행되지 않도록합니다. 이로 인해 필터 작성자는 모든 필터에서 몇 가지 공통 기능을 다시 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="36938e9f37fd7b443d03060d5f3b7177aa8e0043" translate="yes" xml:space="preserve">
          <source>Historically, there are several syntax variants for expressions used to express a condition in the different modules of the Apache HTTP Server. There is some ongoing effort to only use a single variant, called &lt;em&gt;ap_expr&lt;/em&gt;, for all configuration directives. This document describes the &lt;em&gt;ap_expr&lt;/em&gt; expression parser.</source>
          <target state="translated">역사적으로 Apache HTTP Server의 다른 모듈에서 조건을 표현하는 데 사용되는 표현식에 대한 여러 구문 변형이 있습니다. 모든 구성 지시문에 &lt;em&gt;ap_expr&lt;/em&gt; 라는 단일 변형 만 사용하려는 지속적인 노력이 있습니다 . 이 문서는 &lt;em&gt;ap_expr&lt;/em&gt; 표현식 파서를 설명합니다 .</target>
        </trans-unit>
        <trans-unit id="abcf7e70171472138bc3cb35b8e7cc94a592f771" translate="yes" xml:space="preserve">
          <source>Hook functions are how modules (and Lua scripts) participate in the processing of requests. Each type of hook exposed by the server exists for a specific purpose, such as mapping requests to the file system, performing access control, or setting mime types:</source>
          <target state="translated">후크 함수는 모듈 (및 Lua 스크립트)이 요청 처리에 참여하는 방법입니다. 서버에 의해 노출되는 각 유형의 후크는 요청을 파일 시스템에 매핑, 액세스 제어 수행 또는 MIME 유형 설정과 같은 특정 목적을 위해 존재합니다.</target>
        </trans-unit>
        <trans-unit id="b1607bcf3c2cdc3d29ef0df28d6b2d83a605e676" translate="yes" xml:space="preserve">
          <source>Hook functions are passed the request object as their only argument (except for LuaAuthzProvider, which also gets passed the arguments from the Require directive). They can return any value, depending on the hook, but most commonly they'll return OK, DONE, or DECLINED, which you can write in Lua as &lt;code&gt;apache2.OK&lt;/code&gt;, &lt;code&gt;apache2.DONE&lt;/code&gt;, or &lt;code&gt;apache2.DECLINED&lt;/code&gt;, or else an HTTP status code.</source>
          <target state="translated">후크 함수는 요청 객체를 유일한 인수로 전달합니다 (LuaAuthzProvider는 제외하고 Require 지시문에서 인수를 전달 함). 후크에 따라 모든 값을 반환 할 수 있지만 가장 일반적으로 OK, DONE 또는 DECLINED를 반환합니다 .OK, &lt;code&gt;apache2.OK&lt;/code&gt; , &lt;code&gt;apache2.DONE&lt;/code&gt; 또는 &lt;code&gt;apache2.DECLINED&lt;/code&gt; 또는 다른 HTTP 상태 로 Lua에 쓸 수 있습니다 암호.</target>
        </trans-unit>
        <trans-unit id="45da0ac20c0f97123992cb5c7685f5ba1c4f14ea" translate="yes" xml:space="preserve">
          <source>Hook phase</source>
          <target state="translated">훅 단계</target>
        </trans-unit>
        <trans-unit id="37dd35afe0de9b3584142b970f248216171d7e8c" translate="yes" xml:space="preserve">
          <source>Hopefully, end users will never see this message, because you will have resolved all the problems with your SSI directives before your site goes live. (Right?)</source>
          <target state="translated">사이트를 운영하기 전에 SSI 지시문과 관련된 모든 문제를 해결 했으므로 최종 사용자에게는이 메시지가 표시되지 않습니다. (권리?)</target>
        </trans-unit>
        <trans-unit id="f8a7ea3224d0208f6f8539cb5224ef442ee33b8d" translate="yes" xml:space="preserve">
          <source>Horizontal rule at the bottom of the table</source>
          <target state="translated">테이블 하단의 수평 규칙</target>
        </trans-unit>
        <trans-unit id="c983a1551dcbdb6f0ce43637e89a8726577d4f4b" translate="yes" xml:space="preserve">
          <source>Hostname</source>
          <target state="translated">Hostname</target>
        </trans-unit>
        <trans-unit id="f05cc26ad3091649eb2c3e5fd29c6babe627198e" translate="yes" xml:space="preserve">
          <source>Hostname and port that the server uses to identify itself</source>
          <target state="translated">서버가 자신을 식별하는 데 사용하는 호스트 이름 및 포트</target>
        </trans-unit>
        <trans-unit id="c70741f6b554163b239584c9f0e03fa9a7b79ffd" translate="yes" xml:space="preserve">
          <source>HostnameLookups Directive</source>
          <target state="translated">HostnameLookups 지시어</target>
        </trans-unit>
        <trans-unit id="03655fcfe63ec850a0ed71f0d9044dc3b4470ed0" translate="yes" xml:space="preserve">
          <source>HostnameLookups and other DNS considerations</source>
          <target state="translated">호스트 이름 조회 및 기타 DNS 고려 사항</target>
        </trans-unit>
        <trans-unit id="3ecc096bfd2902732b2768db68a0879b1604b558" translate="yes" xml:space="preserve">
          <source>Hostnames and DNS</source>
          <target state="translated">호스트 이름 및 DNS</target>
        </trans-unit>
        <trans-unit id="c5c357aae5ef12449343429f0a5c58bcf3ab5912" translate="yes" xml:space="preserve">
          <source>Hostnames can be used in place of IP addresses in a virtual host definition, but they are resolved at startup and if any name resolutions fail, those virtual host definitions are ignored. This is, therefore, not recommended.</source>
          <target state="translated">가상 호스트 정의에서 IP 주소 대신 호스트 이름을 사용할 수 있지만 시작시 분석되며 이름 확인에 실패하면 해당 가상 호스트 정의가 무시됩니다. 따라서 권장하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6c9dd4734a6ab2c2ae72781229350a77656ba861" translate="yes" xml:space="preserve">
          <source>Hosts whose names match, or end in, this string are allowed access. Only complete components are matched, so the above example will match &lt;code&gt;foo.example.org&lt;/code&gt; but it will not match &lt;code&gt;fooexample.org&lt;/code&gt;. This configuration will cause Apache httpd to perform a double DNS lookup on the client IP address, regardless of the setting of the &lt;code&gt;&lt;a href=&quot;core#hostnamelookups&quot;&gt;HostnameLookups&lt;/a&gt;&lt;/code&gt; directive. It will do a reverse DNS lookup on the IP address to find the associated hostname, and then do a forward lookup on the hostname to assure that it matches the original IP address. Only if the forward and reverse DNS are consistent and the hostname matches will access be allowed.</source>
          <target state="translated">이 문자열과 이름이 일치하거나 끝나는 호스트는 액세스가 허용됩니다. 완전한 구성 요소 만 일치하므로 위의 예제는 &lt;code&gt;foo.example.org&lt;/code&gt; 와 일치 하지만 &lt;code&gt;fooexample.org&lt;/code&gt; 와는 일치하지 않습니다 . 이 구성은 Apache httpd가 &lt;code&gt;&lt;a href=&quot;core#hostnamelookups&quot;&gt;HostnameLookups&lt;/a&gt;&lt;/code&gt; 지시문 의 설정에 관계없이 클라이언트 IP 주소에서 이중 DNS 조회를 수행하게합니다 . IP 주소에서 역방향 DNS 조회를 수행하여 연결된 호스트 이름을 찾은 다음 호스트 이름에서 정방향 조회를 수행하여 원래 IP 주소와 일치하는지 확인합니다. 정방향 및 역방향 DNS가 일치하고 호스트 이름 일치가 액세스 가능한 경우에만 가능합니다.</target>
        </trans-unit>
        <trans-unit id="1cee4c898eb23ba9a57a69bb07db64d1e15715af" translate="yes" xml:space="preserve">
          <source>Hosts whose names match, or end in, this string are allowed access. Only complete components are matched, so the above example will match &lt;code&gt;foo.example.org&lt;/code&gt; but it will not match &lt;code&gt;fooexample.org&lt;/code&gt;. This configuration will cause Apache to perform a double reverse DNS lookup on the client IP address, regardless of the setting of the &lt;code&gt;&lt;a href=&quot;core#hostnamelookups&quot;&gt;HostnameLookups&lt;/a&gt;&lt;/code&gt; directive. It will do a reverse DNS lookup on the IP address to find the associated hostname, and then do a forward lookup on the hostname to assure that it matches the original IP address. Only if the forward and reverse DNS are consistent and the hostname matches will access be allowed.</source>
          <target state="translated">이 문자열과 이름이 일치하거나 끝나는 호스트는 액세스가 허용됩니다. 완전한 구성 요소 만 일치하므로 위의 예제는 &lt;code&gt;foo.example.org&lt;/code&gt; 와 일치 하지만 &lt;code&gt;fooexample.org&lt;/code&gt; 와는 일치하지 않습니다 . 이 구성은 Apache가 &lt;code&gt;&lt;a href=&quot;core#hostnamelookups&quot;&gt;HostnameLookups&lt;/a&gt;&lt;/code&gt; 지시문 의 설정에 관계없이 클라이언트 IP 주소에서 이중 역방향 DNS 조회를 수행하게합니다 . IP 주소에서 역방향 DNS 조회를 수행하여 연결된 호스트 이름을 찾은 다음 호스트 이름에서 정방향 조회를 수행하여 원래 IP 주소와 일치하는지 확인합니다. 정방향 및 역방향 DNS가 일치하고 호스트 이름 일치가 액세스 가능한 경우에만 가능합니다.</target>
        </trans-unit>
        <trans-unit id="ed391e754f3620e7fa9a48796c00b6f8356c467d" translate="yes" xml:space="preserve">
          <source>Hosts would also be matched if referenced by IP address.</source>
          <target state="translated">IP 주소로 참조되는 경우 호스트도 일치합니다.</target>
        </trans-unit>
        <trans-unit id="21d33c8d4b756edc8e52d95f7583ff35317d4c5f" translate="yes" xml:space="preserve">
          <source>Hosts, domains, or networks that will be connected to directly</source>
          <target state="translated">직접 연결될 호스트, 도메인 또는 네트워크</target>
        </trans-unit>
        <trans-unit id="ed21dedc084881ae99ff34bc2273237131ae6536" translate="yes" xml:space="preserve">
          <source>How Apache Starts</source>
          <target state="translated">아파치 시작 방법</target>
        </trans-unit>
        <trans-unit id="8cecc82d72d68f9151cb0901cfe40eeac15bfca6" translate="yes" xml:space="preserve">
          <source>How It Works</source>
          <target state="translated">작동 원리</target>
        </trans-unit>
        <trans-unit id="e38d6bf5e3b2625202888dcad5eeaa48a65b3ea6" translate="yes" xml:space="preserve">
          <source>How This Works With Virtual Hosts</source>
          <target state="translated">가상 호스트와의 작동 방식</target>
        </trans-unit>
        <trans-unit id="e7a28de39137fd676e3c6f7262d554d23c5491dc" translate="yes" xml:space="preserve">
          <source>How can I access FTP files outside of my home directory?</source>
          <target state="translated">홈 디렉토리 외부의 FTP 파일에 어떻게 액세스 할 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="6c0ab157b7dcc1cb92685ef6079e96faa73af9ff" translate="yes" xml:space="preserve">
          <source>How can I allow only clients who have certificates to access a particular URL, but allow all clients to access the rest of the server?</source>
          <target state="translated">인증서가있는 클라이언트 만 특정 URL에 액세스 할 수 있지만 모든 클라이언트가 나머지 서버에 액세스 할 수 있도록하려면 어떻게해야합니까?</target>
        </trans-unit>
        <trans-unit id="d061550ec76262c4be6725a955cc7b2375884691" translate="yes" xml:space="preserve">
          <source>How can I change the pass-phrase on my private key file?</source>
          <target state="translated">개인 키 파일의 암호를 어떻게 변경합니까?</target>
        </trans-unit>
        <trans-unit id="68c739ba68134ba93961d018a96acaf51a5e9a53" translate="yes" xml:space="preserve">
          <source>How can I convert a certificate from PEM to DER format?</source>
          <target state="translated">인증서를 PEM에서 DER 형식으로 변환하려면 어떻게해야합니까?</target>
        </trans-unit>
        <trans-unit id="7fd5bdd57e5b69823c44a9a16710536fc15f5edc" translate="yes" xml:space="preserve">
          <source>How can I create an SSL server which accepts all types of ciphers in general, but requires a strong cipher for access to a particular URL?</source>
          <target state="translated">일반적으로 모든 유형의 암호를 허용하지만 특정 URL에 액세스하기 위해 강력한 암호가 필요한 SSL 서버를 어떻게 만들 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="fa448de5edf6433216d41143fe27226fbc1d2e71" translate="yes" xml:space="preserve">
          <source>How can I create an SSL server which accepts all types of ciphers in general, but requires a strong ciphers for access to a particular URL?</source>
          <target state="translated">일반적으로 모든 유형의 암호를 허용하지만 특정 URL에 액세스하기 위해 강력한 암호가 필요한 SSL 서버를 어떻게 만들 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="a0335639a4838b14c3e3122b29c12b1f71c80784" translate="yes" xml:space="preserve">
          <source>How can I create an SSL server which accepts strong encryption only?</source>
          <target state="translated">강력한 암호화 만 허용하는 SSL 서버를 만들려면 어떻게해야합니까?</target>
        </trans-unit>
        <trans-unit id="5fcd626df27d9109437478fd7d13c8a0d6fb9f70" translate="yes" xml:space="preserve">
          <source>How can I do FTP upload?</source>
          <target state="translated">FTP 업로드는 어떻게합니까?</target>
        </trans-unit>
        <trans-unit id="29349891b7b058fd45ec51a5ce0d8b49fba082fd" translate="yes" xml:space="preserve">
          <source>How can I force an FTP ASCII download of file &lt;var&gt;xxx&lt;/var&gt;?</source>
          <target state="translated">&lt;var&gt;xxx&lt;/var&gt; 파일의 FTP ASCII 다운로드를 어떻게 강제 할 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="d35e2506e5f56d8193dcd7e72e7eec70e7864b6b" translate="yes" xml:space="preserve">
          <source>How can I force clients to authenticate using certificates for a particular URL, but still allow arbitrary clients to access the rest of the server?</source>
          <target state="translated">클라이언트가 특정 URL에 대한 인증서를 사용하여 강제로 인증하지만 임의의 클라이언트가 나머지 서버에 계속 액세스하도록하려면 어떻게해야합니까?</target>
        </trans-unit>
        <trans-unit id="4c674bd4359074dee2d85331edb26dcb7b35a5db" translate="yes" xml:space="preserve">
          <source>How can I force clients to authenticate using certificates?</source>
          <target state="translated">클라이언트가 인증서를 사용하여 인증하도록하려면 어떻게해야합니까?</target>
        </trans-unit>
        <trans-unit id="d56e0172c99212893249b77342dc9f25f20bdd70" translate="yes" xml:space="preserve">
          <source>How can I get rid of the pass-phrase dialog at Apache startup time?</source>
          <target state="translated">Apache 시작시 암호 문구 대화 상자를 제거하려면 어떻게해야합니까?</target>
        </trans-unit>
        <trans-unit id="2e453b3d283074b230fa653f97c6319e9fc552cb" translate="yes" xml:space="preserve">
          <source>How can I hide the FTP cleartext password in my browser's URL line?</source>
          <target state="translated">브라우저의 URL 행에서 FTP 일반 텍스트 비밀번호를 숨기려면 어떻게해야합니까?</target>
        </trans-unit>
        <trans-unit id="ab9c17849e4c9d2bf2e9584a014ec1f9a3132832" translate="yes" xml:space="preserve">
          <source>How can I require HTTPS with strong ciphers, and either basic authentication or client certificates, for access to part of the Intranet website, for clients coming from the Internet?</source>
          <target state="translated">인터넷에서 오는 클라이언트에 대해 인트라넷 웹 사이트의 일부에 액세스하기 위해 강력한 암호를 가진 HTTPS와 기본 인증 또는 클라이언트 인증서를 요구하는 방법은 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="19f0cd8eedb4d895b4221f13c0f14b134afed827" translate="yes" xml:space="preserve">
          <source>How can I require HTTPS with strong ciphers, and either basic authentication or client certificates, for access to part of the Intranet website, for clients coming from the Internet? I still want to allow plain HTTP access for clients on the Intranet.</source>
          <target state="translated">인터넷에서 오는 클라이언트에 대해 인트라넷 웹 사이트의 일부에 액세스하기 위해 강력한 암호를 가진 HTTPS와 기본 인증 또는 클라이언트 인증서를 요구하는 방법은 무엇입니까? 여전히 인트라넷의 클라이언트에 일반 HTTP 액세스를 허용하고 싶습니다.</target>
        </trans-unit>
        <trans-unit id="d942162429cc95babcf74e5c8f74505219af733e" translate="yes" xml:space="preserve">
          <source>How can I switch between HTTP and HTTPS in relative hyperlinks?</source>
          <target state="translated">상대 하이퍼 링크에서 HTTP와 HTTPS를 어떻게 전환 할 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="fe660f8a77cb0a937a9e4e662d67edbf6758f64e" translate="yes" xml:space="preserve">
          <source>How can we make URLs backward compatible (still existing virtually) after migrating &lt;code&gt;document.YYYY&lt;/code&gt; to &lt;code&gt;document.XXXX&lt;/code&gt;, e.g. after translating a bunch of &lt;code&gt;.html&lt;/code&gt; files to &lt;code&gt;.php&lt;/code&gt;?</source>
          <target state="translated">우리는 어떻게 URL이 이전 버전과 호환 마이그레이션 한 후 (가상적으로 존재하게) 할 수 &lt;code&gt;document.YYYY&lt;/code&gt; 에 &lt;code&gt;document.XXXX&lt;/code&gt; , 예를 들어, 한 무리의 번역 후 &lt;code&gt;.html&lt;/code&gt; 중에서 파일을하기 &lt;code&gt;.php&lt;/code&gt; ?</target>
        </trans-unit>
        <trans-unit id="64823e869ecb72c64fddbf22f408bc0a7c5c1a9c" translate="yes" xml:space="preserve">
          <source>How can we transform a static page &lt;code&gt;foo.html&lt;/code&gt; into a dynamic variant &lt;code&gt;foo.cgi&lt;/code&gt; in a seamless way, i.e. without notice by the browser/user.</source>
          <target state="translated">브라우저 / 사용자가 예고하지 않고 정적 페이지 &lt;code&gt;foo.html&lt;/code&gt; 을 동적 변형 &lt;code&gt;foo.cgi&lt;/code&gt; 로 완벽하게 변환하는 방법</target>
        </trans-unit>
        <trans-unit id="e3b016cf1a56925920b70cfc504809aaf08024c3" translate="yes" xml:space="preserve">
          <source>How directives are applied</source>
          <target state="translated">지시문이 적용되는 방법</target>
        </trans-unit>
        <trans-unit id="7913791fa2e74c59586251f428368626489df128" translate="yes" xml:space="preserve">
          <source>How do I create a real SSL Certificate?</source>
          <target state="translated">실제 SSL 인증서는 어떻게 만듭니 까?</target>
        </trans-unit>
        <trans-unit id="7187576be7d67705ff6dc872e4648398270ceb90" translate="yes" xml:space="preserve">
          <source>How do I create a self-signed SSL Certificate for testing purposes?</source>
          <target state="translated">테스트 목적으로 자체 서명 SSL 인증서를 작성하는 방법</target>
        </trans-unit>
        <trans-unit id="fea1aac19c01648275cdc985756d77766dce20f3" translate="yes" xml:space="preserve">
          <source>How do I create and use my own Certificate Authority (CA)?</source>
          <target state="translated">자체 인증 기관 (CA)을 어떻게 만들고 사용합니까?</target>
        </trans-unit>
        <trans-unit id="0cb0b8095505f4e97848a8bff152f4f459c2e383" translate="yes" xml:space="preserve">
          <source>How do I enable TLS-SRP?</source>
          <target state="translated">TLS-SRP를 어떻게 활성화합니까?</target>
        </trans-unit>
        <trans-unit id="36094ed3826d2b9ae08440a058db59008cd75855" translate="yes" xml:space="preserve">
          <source>How do I get SSL compression working?</source>
          <target state="translated">SSL 압축이 작동하도록하려면 어떻게합니까?</target>
        </trans-unit>
        <trans-unit id="6c5a8a265aec10661da63225f51291c9b6af6f45" translate="yes" xml:space="preserve">
          <source>How do I get a backtrace, to help find the reason for my core dump?</source>
          <target state="translated">코어 덤프의 원인을 찾는 데 도움이되는 역 추적을 얻는 방법은 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="c19f94dc5499461cff772bad098e7c5ae1a41738" translate="yes" xml:space="preserve">
          <source>How do I speak HTTPS manually for testing purposes?</source>
          <target state="translated">테스트 목적으로 HTTPS를 수동으로 말하려면 어떻게해야합니까?</target>
        </trans-unit>
        <trans-unit id="33aa156e5a3201a44c4215f8965c045665c1229c" translate="yes" xml:space="preserve">
          <source>How do I verify that a private key matches its Certificate?</source>
          <target state="translated">개인 키가 해당 인증서와 일치하는지 어떻게 확인합니까?</target>
        </trans-unit>
        <trans-unit id="7763e193f28c2223b59285f49652db917844096d" translate="yes" xml:space="preserve">
          <source>How good a defense is it? Suppose that one of your machines serves at most 500 requests per second (which is a very reasonable upper bound at this writing, because systems generally do more than just shovel out static files). To do that it will require a number of children which depends on how many concurrent clients you have. But we'll be pessimistic and suppose that a single child is able to serve 500 requests per second. There are 1000 possible starting counter values such that two sequences of 500 requests overlap. So there is a 1.5% chance that if time (at one second resolution) repeats itself this child will repeat a counter value, and uniqueness will be broken. This was a very pessimistic example, and with real world values it's even less likely to occur. If your system is such that it's still likely to occur, then perhaps you should make the counter 32 bits (by editing the code).</source>
          <target state="translated">방어는 얼마나 좋은가요? 컴퓨터 중 하나가 초당 최대 500 개의 요청을 처리한다고 가정합니다 (시스템은 일반적으로 정적 파일을 삽질하는 것 이상을 수행하기 때문에이 쓰기에서 매우 합리적인 상한입니다). 이를 위해서는 동시 클라이언트 수에 따라 많은 자녀가 필요합니다. 그러나 우리는 비관적이며 한 자녀가 초당 500 건의 요청을 처리 할 수 ​​있다고 가정합니다. 500 개 요청의 두 시퀀스가 ​​겹치도록 1000 개의 가능한 시작 카운터 값이 있습니다. 따라서 시간 (1 초 해상도)이 반복되면이 자식은 카운터 값을 반복하여 고유성이 손상 될 확률이 1.5 %입니다. 이것은 매우 비관적 인 예였으며 실제 가치로 인해 발생할 가능성은 훨씬 적습니다. 시스템이 여전히 발생할 가능성이있는 경우,그런 다음 카운터를 32 비트로 만들어야합니다 (코드를 편집하여).</target>
        </trans-unit>
        <trans-unit id="100cb0b9b76cf128bd36c57de623e9519f3f1a9c" translate="yes" xml:space="preserve">
          <source>How it Works</source>
          <target state="translated">작동 원리</target>
        </trans-unit>
        <trans-unit id="1dd6a17cb4033f4f74df1bb6912b8a28a8074084" translate="yes" xml:space="preserve">
          <source>How it works</source>
          <target state="translated">작동 원리</target>
        </trans-unit>
        <trans-unit id="acd5d406df5b7b7adeb222552008161a38545212" translate="yes" xml:space="preserve">
          <source>How long the server nonce is valid</source>
          <target state="translated">서버 nonce 유효 기간</target>
        </trans-unit>
        <trans-unit id="da14aa670e31d3c56492056dc4f7c973fac7d2a0" translate="yes" xml:space="preserve">
          <source>How much compression do we apply to the output</source>
          <target state="translated">출력에 얼마나 많은 압축을 적용합니까</target>
        </trans-unit>
        <trans-unit id="3a35338f8974882a72d47a3276db8dec78b8f327" translate="yes" xml:space="preserve">
          <source>How much memory should be used by zlib for compression</source>
          <target state="translated">압축을 위해 zlib에서 사용해야하는 메모리 양</target>
        </trans-unit>
        <trans-unit id="7c4a71a5adcfa94ba1681e26b6584ba313fc68bb" translate="yes" xml:space="preserve">
          <source>How the method, mimetype and body of the original request are embedded within the login form will depend on the platform and technology being used within the website.</source>
          <target state="translated">원래 요청의 방법, MIME 유형 및 본문이 로그인 양식에 포함되는 방법은 웹 사이트에서 사용되는 플랫폼 및 기술에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="1c09a07afdaca487f2ff7567ab6920adea05fdb4" translate="yes" xml:space="preserve">
          <source>How the outgoing ETag header should be modified during compression</source>
          <target state="translated">압축하는 동안 발신 ETag 헤더를 수정하는 방법</target>
        </trans-unit>
        <trans-unit id="211123c5915f65ba7826cf7650d82154415c5436" translate="yes" xml:space="preserve">
          <source>How the sections are merged</source>
          <target state="translated">섹션이 병합되는 방법</target>
        </trans-unit>
        <trans-unit id="fe2981f70909e0220e6e4a37e06a03e2a185faec" translate="yes" xml:space="preserve">
          <source>How the server selects the proper name-based virtual host</source>
          <target state="translated">서버가 올바른 이름 기반 가상 호스트를 선택하는 방법</target>
        </trans-unit>
        <trans-unit id="42a9a80b7f8be980c32025942bfd3ef59a346caf" translate="yes" xml:space="preserve">
          <source>How to set up Apache</source>
          <target state="translated">Apache를 설정하는 방법</target>
        </trans-unit>
        <trans-unit id="ff04180eb3f0ac11071a732a70950e138895e22d" translate="yes" xml:space="preserve">
          <source>How-To / Tutorials</source>
          <target state="translated">방법 / 자습서</target>
        </trans-unit>
        <trans-unit id="5bb60b6d7f22dd5bd6e37a21940c24ed046246cf" translate="yes" xml:space="preserve">
          <source>However if you have some fancy port forwarding in place, your server may be reachable from the Internet on port 443, but the local port that httpd uses is another one. Your server might only listen on ports 5001 and 5002, but be reached on ports 443 and 80. How should &lt;code&gt;&lt;a href=&quot;mod_md&quot;&gt;mod_md&lt;/a&gt;&lt;/code&gt; figure that one out?</source>
          <target state="translated">그러나 멋진 포트 포워딩이 있으면 포트 443의 인터넷에서 서버에 연결할 수 있지만 httpd가 사용하는 로컬 포트는 다른 포트입니다. 서버는 포트 5001 및 5002에서만 수신 할 수 있지만 포트 443 및 80에서는 도달 할 수 있습니다. &lt;code&gt;&lt;a href=&quot;mod_md&quot;&gt;mod_md&lt;/a&gt;&lt;/code&gt; 는이를 어떻게 알아 내야합니까?</target>
        </trans-unit>
        <trans-unit id="1c4aa8e85ec3825bf59d7259f21a340038240ad0" translate="yes" xml:space="preserve">
          <source>However, an effort was made to improve the performance of the original &lt;code&gt;file(1)&lt;/code&gt; code to make it fit in a busy web server. It was designed for a server where there are thousands of users who publish their own documents. This is probably very common on intranets. Many times, it's helpful if the server can make more intelligent decisions about a file's contents than the file name allows ...even if just to reduce the &quot;why doesn't my page work&quot; calls when users improperly name their own files. You have to decide if the extra work suits your environment.</source>
          <target state="translated">그러나 원본 &lt;code&gt;file(1)&lt;/code&gt; 코드 의 성능을 향상시켜 바쁜 웹 서버에 적합하도록 노력했습니다. 자체 문서를 게시하는 수천 명의 사용자가있는 서버를 위해 설계되었습니다. 이것은 아마도 인트라넷에서 매우 일반적입니다. 사용자가 자신의 파일 이름을 잘못 지정했을 때 &quot;내 페이지가 작동하지 않는 이유&quot;호출을 줄이더라도 파일 이름이 허용하는 것보다 서버가 파일 내용에 대해보다 현명한 결정을 내릴 수 있다면 도움이되는 경우가 많습니다. 추가 작업이 환경에 적합한 지 결정해야합니다.</target>
        </trans-unit>
        <trans-unit id="e63d0e2dcb94761a10c7b6bad1ccbba58e20088b" translate="yes" xml:space="preserve">
          <source>However, if the redirection is to a page that uses a different character set, some broken browser versions will try to use the character set from the redirection text rather than the actual page. This can result in Greek, for instance, being incorrectly rendered.</source>
          <target state="translated">그러나 다른 문자 집합을 사용하는 페이지로 리디렉션하는 경우 일부 깨진 브라우저 버전에서는 실제 페이지가 아닌 리디렉션 텍스트에서 문자 집합을 사용하려고합니다. 예를 들어 그리스어가 잘못 렌더링 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="96e083fe364ab17304ed6cac4c247786e813b11e" translate="yes" xml:space="preserve">
          <source>However, in earlier versions of Apache, or if your needs are more complicated than this, you can use a variation of the following rewrite set to accomplish the same thing:</source>
          <target state="translated">그러나 이전 버전의 Apache 또는 이보다 더 복잡한 요구가있는 경우 다음 재 작성 세트의 변형을 사용하여 동일한 작업을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="35a61d53134b005e46c37f882f4b995dd76bacab" translate="yes" xml:space="preserve">
          <source>However, in general, use of &lt;code&gt;.htaccess&lt;/code&gt; files should be avoided when possible. Any configuration that you would consider putting in a &lt;code&gt;.htaccess&lt;/code&gt; file, can just as effectively be made in a &lt;code&gt;&lt;a href=&quot;../mod/core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; section in your main server configuration file.</source>
          <target state="translated">그러나 일반적으로 가능한 경우 &lt;code&gt;.htaccess&lt;/code&gt; 파일을 사용 하지 않아야합니다. &lt;code&gt;.htaccess&lt;/code&gt; 파일에 넣는 모든 구성은 기본 서버 구성 파일 의 &lt;code&gt;&lt;a href=&quot;../mod/core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; 섹션에서 효과적으로 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="74c6927804909de7c4ad3248fadd460a78c4fc69" translate="yes" xml:space="preserve">
          <source>However, in many cases, when there is no actual pattern matching needed, as in the example shown above, the &lt;code&gt;&lt;a href=&quot;../mod/mod_proxy#proxypass&quot;&gt;ProxyPass&lt;/a&gt;&lt;/code&gt; directive is a better choice. The example here could be rendered as:</source>
          <target state="translated">그러나 대부분의 경우 위에 표시된 예와 같이 실제 패턴 일치가 필요하지 않은 경우 &lt;code&gt;&lt;a href=&quot;../mod/mod_proxy#proxypass&quot;&gt;ProxyPass&lt;/a&gt;&lt;/code&gt; 지시문이 더 나은 선택입니다. 여기 예제는 다음과 같이 렌더링 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="116ccccf878fdcfc1fb5476c364790c00faee7fc" translate="yes" xml:space="preserve">
          <source>However, it is additionally useful to use &lt;code&gt;*&lt;/code&gt; on systems where the IP address is not predictable - for example if you have a dynamic IP address with your ISP, and you are using some variety of dynamic DNS solution. Since &lt;code&gt;*&lt;/code&gt; matches any IP address, this configuration would work without changes whenever your IP address changes.</source>
          <target state="translated">그러나 IP 주소를 예측할 수없는 시스템 (예 : ISP에 동적 IP 주소가 있고 다양한 동적 DNS 솔루션 을 사용하는 경우)에서 &lt;code&gt;*&lt;/code&gt; 를 사용하는 것이 추가로 유용합니다 . 이후 &lt;code&gt;*&lt;/code&gt; 모든 IP 주소와 일치,이 구성은 변경 때마다 IP 주소가 변경없이 작동합니다.</target>
        </trans-unit>
        <trans-unit id="aca9857c1433eaf79fe37ffe588b442ce7a5e7bf" translate="yes" xml:space="preserve">
          <source>However, it is usually better to deploy the application on the backend server at the same path as the proxy rather than to take this approach.</source>
          <target state="translated">그러나 일반적으로이 방법을 사용하는 대신 프록시와 동일한 경로로 백엔드 서버에 응용 프로그램을 배포하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="59011f4ad5625e79c6bfaf4f58cb768e12773bb6" translate="yes" xml:space="preserve">
          <source>However, putting this configuration in your server configuration file will result in less of a performance hit, as the configuration is loaded once when httpd starts, rather than every time a file is requested.</source>
          <target state="translated">그러나이 구성을 서버 구성 파일에 넣으면 파일을 요청할 때마다가 아니라 httpd가 시작될 때 구성이 한 번로드되므로 성능 저하가 줄어 듭니다.</target>
        </trans-unit>
        <trans-unit id="b7dffd5e239258b817838af0ca2cd9cf9f02e518" translate="yes" xml:space="preserve">
          <source>However, the &lt;var&gt;FreeTDS&lt;/var&gt; driver is inherently &lt;strong&gt;unsafe&lt;/strong&gt;. The underlying library doesn't support prepared statements, so the driver emulates them, and the untrusted input is merged into the SQL statement.</source>
          <target state="translated">그러나 &lt;var&gt;FreeTDS&lt;/var&gt; 드라이버는 본질적으로 &lt;strong&gt;안전하지 않습니다&lt;/strong&gt; . 기본 라이브러리는 준비된 명령문을 지원하지 않으므로 드라이버가 해당 명령문을 에뮬레이트하고 신뢰할 수없는 입력이 SQL 문에 병합됩니다.</target>
        </trans-unit>
        <trans-unit id="505f2c2cd5239abe07497d238517b902866b0a18" translate="yes" xml:space="preserve">
          <source>However, there may be circumstances in which it is desirable for a configuration section's authorization to be combined with that of its predecessor while configuration sections are being merged. Two options are available for this case, &lt;code&gt;And&lt;/code&gt; and &lt;code&gt;Or&lt;/code&gt;.</source>
          <target state="translated">그러나 구성 섹션을 병합하는 동안 구성 섹션의 권한을 이전 섹션의 권한과 결합하는 것이 바람직한 상황이있을 수 있습니다. 이 경우 &lt;code&gt;And&lt;/code&gt; 및 &lt;code&gt;Or&lt;/code&gt; 의 두 가지 옵션을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8daa2fa1a36a4b0c56deff423538686b65dcbb39" translate="yes" xml:space="preserve">
          <source>However, we are trying to phase out &quot;magic MIME types&quot; so we are deprecating this method.</source>
          <target state="translated">그러나 &quot;magic MIME 유형&quot;을 단계적으로 폐지하려고하므로이 방법은 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2ebf5747393f3f1a607dd9b49cb22f6ccb12da98" translate="yes" xml:space="preserve">
          <source>HttpProtocolOptions Directive</source>
          <target state="translated">HttpProtocolOptions 지시어</target>
        </trans-unit>
        <trans-unit id="11de99a00506b19b7a198eee53076973ce18ee27" translate="yes" xml:space="preserve">
          <source>Hybrid multi-process, multi-threaded MPM for OS/2</source>
          <target state="translated">OS / 2 용 하이브리드 다중 프로세스, 다중 스레드 MPM</target>
        </trans-unit>
        <trans-unit id="cd085e06634b0b8e342ea0543ecda3bd2872d2f7" translate="yes" xml:space="preserve">
          <source>H|handler</source>
          <target state="translated">H|handler</target>
        </trans-unit>
        <trans-unit id="cf4f387bf3f43d96bbd0dcc07638443fca5267ef" translate="yes" xml:space="preserve">
          <source>I had a core dump, can you help me?</source>
          <target state="translated">코어 덤프가있었습니다. 도와 드릴까요?</target>
        </trans-unit>
        <trans-unit id="7a7090737033addaf423c3bb5d913ccdcd164688" translate="yes" xml:space="preserve">
          <source>I'll frequently combine the last two things, putting a &lt;code&gt;LAST_MODIFIED&lt;/code&gt; directive inside a footer file to be included. SSI directives can be contained in the included file, and includes can be nested - that is, the included file can include another file, and so on.</source>
          <target state="translated">마지막 두 항목을 자주 결합하여 포함 할 바닥 글 파일에 &lt;code&gt;LAST_MODIFIED&lt;/code&gt; 지시문을 넣습니다. SSI 지시문은 포함 된 파일에 포함될 수 있으며 포함은 중첩 될 수 있습니다. 즉 포함 된 파일에 다른 파일이 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0eb5eb267e9cbbee32ad5724a57e4425f566526d" translate="yes" xml:space="preserve">
          <source>I: Worker is in ignore-errors mode and will always be considered available.</source>
          <target state="translated">I : 작업자가 오류 무시 모드에 있으며 항상 사용 가능한 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="d0ef5ce80d893590b1e4a0077d7dfe619d11a899" translate="yes" xml:space="preserve">
          <source>IDEA encryption</source>
          <target state="translated">IDEA 암호화</target>
        </trans-unit>
        <trans-unit id="61482e2d19a66418c54e8d7b27bbb96cfe4a0d24" translate="yes" xml:space="preserve">
          <source>IDEA(128)</source>
          <target state="translated">IDEA(128)</target>
        </trans-unit>
        <trans-unit id="db12b238fec3c6832ae409cfb5989ac34ea29bd9" translate="yes" xml:space="preserve">
          <source>IP address lookup</source>
          <target state="translated">IP 주소 조회</target>
        </trans-unit>
        <trans-unit id="2af7a9c4dfd3704b9712d4cf41f066eb92d8a01f" translate="yes" xml:space="preserve">
          <source>IP address matches address/netmask</source>
          <target state="translated">IP 주소가 주소 / 넷 마스크와 일치</target>
        </trans-unit>
        <trans-unit id="361c5cb4f3aa622149f61164df41d98c8910d37c" translate="yes" xml:space="preserve">
          <source>IP addresses and ports that the server listens to</source>
          <target state="translated">서버가 청취하는 IP 주소 및 포트</target>
        </trans-unit>
        <trans-unit id="1636445d2e409274b42d81d69260e3995aaaf548" translate="yes" xml:space="preserve">
          <source>IP-based</source>
          <target state="translated">IP-based</target>
        </trans-unit>
        <trans-unit id="aef9908ce9c7f4cb6c8dfa07a00bf05a249ee1bf" translate="yes" xml:space="preserve">
          <source>IP-based Virtual Host</source>
          <target state="translated">IP 기반 가상 호스트</target>
        </trans-unit>
        <trans-unit id="3020d9efa7a0d08dafe0becde3c189a30923a974" translate="yes" xml:space="preserve">
          <source>IP-based vhost</source>
          <target state="translated">IP 기반 가상 호스트</target>
        </trans-unit>
        <trans-unit id="fef6655fa2dd5a61ae819302c769f184bf820b20" translate="yes" xml:space="preserve">
          <source>IP-based virtual hosting</source>
          <target state="translated">IP 기반 가상 호스팅</target>
        </trans-unit>
        <trans-unit id="d865a249da311b61029204e3dfd1183b7e06fb76" translate="yes" xml:space="preserve">
          <source>IP-based virtual hosting is a method to apply different directives based on the IP address and port a request is received on. Most commonly, this is used to serve different websites on different ports or interfaces.</source>
          <target state="translated">IP 기반 가상 호스팅은 요청이 수신 된 IP 주소 및 포트를 기반으로 다른 지시문을 적용하는 방법입니다. 가장 일반적으로 다른 포트 또는 인터페이스에서 다른 웹 사이트를 제공하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a4e70467b63d139c6d6b6dea22930185c7391a0f" translate="yes" xml:space="preserve">
          <source>IPAddr</source>
          <target state="translated">IPAddr</target>
        </trans-unit>
        <trans-unit id="759f1c1a036684d03fe174d3c3eeb3bbc6dee65c" translate="yes" xml:space="preserve">
          <source>IPV6</source>
          <target state="translated">IPV6</target>
        </trans-unit>
        <trans-unit id="f0233b2e64376dbba5ec4e5f43b81d901151f610" translate="yes" xml:space="preserve">
          <source>IPv6 addresses and IPv6 subnets can be specified as shown below:</source>
          <target state="translated">IPv6 주소 및 IPv6 서브넷은 아래와 같이 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="93fcee9c975ff3e25ca812d82c4d7137202e7f95" translate="yes" xml:space="preserve">
          <source>IPv6 addresses must be enclosed in square brackets, as in the following example:</source>
          <target state="translated">IPv6 주소는 다음 예와 같이 대괄호로 묶어야합니다.</target>
        </trans-unit>
        <trans-unit id="c9f0c6bceeccb5131651c4a8cc3c0eda0ad10478" translate="yes" xml:space="preserve">
          <source>IPv6 addresses must be specified in square brackets because the optional port number could not be determined otherwise. An IPv6 example is shown below:</source>
          <target state="translated">선택적 포트 번호를 확인할 수 없으므로 IPv6 주소는 대괄호로 지정해야합니다. IPv6 예제는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f83fced5a3e5b6ef88f8a9e11a4a5a67296692c1" translate="yes" xml:space="preserve">
          <source>IPv6 addresses must be surrounded in square brackets, as in the following example:</source>
          <target state="translated">IPv6 주소는 다음 예제와 같이 대괄호로 묶어야합니다.</target>
        </trans-unit>
        <trans-unit id="e5bd21208a7fda43f182ad5e2045b09332242eac" translate="yes" xml:space="preserve">
          <source>ISAPI .dll files to be loaded at startup</source>
          <target state="translated">시작시로드 할 ISAPI .dll 파일</target>
        </trans-unit>
        <trans-unit id="4c65d7906b892163e13f44b40d7f78e4f789c4d7" translate="yes" xml:space="preserve">
          <source>ISAPI Extensions within Apache for Windows</source>
          <target state="translated">Windows 용 Apache 내의 ISAPI 확장</target>
        </trans-unit>
        <trans-unit id="9cf3573b45f0cf76b402cf66420a25c12e6cec53" translate="yes" xml:space="preserve">
          <source>ISAPI extension modules (.dll files) are written by third parties. The Apache Group does not author these modules, so we provide no support for them. Please contact the ISAPI's author directly if you are experiencing problems running their ISAPI extension. &lt;strong&gt;Please &lt;em&gt;do not&lt;/em&gt; post such problems to Apache's lists or bug reporting pages.&lt;/strong&gt;</source>
          <target state="translated">ISAPI 확장 모듈 (.dll 파일)은 타사에서 작성합니다. Apache Group은 이러한 모듈을 작성하지 않으므로 지원하지 않습니다. ISAPI 확장을 실행하는 데 문제가있는 경우 ISAPI 작성자에게 직접 문의하십시오. &lt;strong&gt;제발 &lt;em&gt;하지&lt;/em&gt; 아파치의리스트 나 버그보고 페이지에 게시 이러한 문제를.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="70851441b88d722ab8f3d4fe736fa90b10fe54c5" translate="yes" xml:space="preserve">
          <source>ISAPIAppendLogToErrors</source>
          <target state="translated">ISAPIAppendLogToErrors</target>
        </trans-unit>
        <trans-unit id="c160450dd210fbf021ca024713beb4a0ff81aa22" translate="yes" xml:space="preserve">
          <source>ISAPIAppendLogToErrors Directive</source>
          <target state="translated">ISAPIAppendLogToErrors 지시어</target>
        </trans-unit>
        <trans-unit id="b208a0a052d6ff08e2b778507fbcb962f6463358" translate="yes" xml:space="preserve">
          <source>ISAPIAppendLogToQuery</source>
          <target state="translated">ISAPIAppendLogToQuery</target>
        </trans-unit>
        <trans-unit id="20912b5e1a71e96d37ba5d9ae9ba2e1e45385760" translate="yes" xml:space="preserve">
          <source>ISAPIAppendLogToQuery Directive</source>
          <target state="translated">ISAPIAppendLogToQuery 지시어</target>
        </trans-unit>
        <trans-unit id="cb065b192ad06dd66fcf7ba7c8d2953ecd5ef35f" translate="yes" xml:space="preserve">
          <source>ISAPICacheFile Directive</source>
          <target state="translated">ISAPICacheFile 지시어</target>
        </trans-unit>
        <trans-unit id="dfd3d29399835ebb981e98d2955916d341bce2ff" translate="yes" xml:space="preserve">
          <source>ISAPIFakeAsync</source>
          <target state="translated">ISAPIFakeAsync</target>
        </trans-unit>
        <trans-unit id="6987d320cb5e4265db78eab1b0fa743a444989bd" translate="yes" xml:space="preserve">
          <source>ISAPIFakeAsync Directive</source>
          <target state="translated">ISAPIFakeAsync 지시어</target>
        </trans-unit>
        <trans-unit id="be060818cac54bd2b080dc60a4ee3e3acfebacd2" translate="yes" xml:space="preserve">
          <source>ISAPILogNotSupported</source>
          <target state="translated">ISAPILogNotSupported</target>
        </trans-unit>
        <trans-unit id="9bd7d28ee8027d7463175ea3b927f384401e35e1" translate="yes" xml:space="preserve">
          <source>ISAPILogNotSupported Directive</source>
          <target state="translated">ISAPILogNotSupported 지시어</target>
        </trans-unit>
        <trans-unit id="a6ebfe2579cdc7042c4c41a1d24f9b72345ed9f5" translate="yes" xml:space="preserve">
          <source>ISAPIReadAheadBuffer</source>
          <target state="translated">ISAPIReadAheadBuffer</target>
        </trans-unit>
        <trans-unit id="fe04528cf9c78a8395dba35b556c85241df0855d" translate="yes" xml:space="preserve">
          <source>ISAPIReadAheadBuffer Directive</source>
          <target state="translated">ISAPIReadAheadBuffer 지시어</target>
        </trans-unit>
        <trans-unit id="5cd3d42d50a3817bacd89159bab6a571fc550df8" translate="yes" xml:space="preserve">
          <source>ISO 3166-1</source>
          <target state="translated">ISO 3166-1</target>
        </trans-unit>
        <trans-unit id="938ba86ead48ad6e2182a67bcbd7441d89b4862e" translate="yes" xml:space="preserve">
          <source>ISO 639 provides two sets of language codes, one as a two-letter code set (639-1) and another as a three-letter code set (this part of ISO 639) for the representation of names of languages.</source>
          <target state="translated">ISO 639는 언어 이름 표현을 위해 2 문자 코드 세트 (639-1)와 3 문자 코드 세트 (이 부분은 ISO 639의 일부)의 두 가지 언어 코드 세트를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="f964a9af0bf547fd0c82b12999e735fff35c0d5c" translate="yes" xml:space="preserve">
          <source>ISO 639-2</source>
          <target state="translated">ISO 639-2</target>
        </trans-unit>
        <trans-unit id="ae3adfe79ceb586dd65d13f01dbd970007013a2b" translate="yes" xml:space="preserve">
          <source>IS_SUBREQ</source>
          <target state="translated">IS_SUBREQ</target>
        </trans-unit>
        <trans-unit id="eef0d51554e011f10acd38733c098bb9252a233c" translate="yes" xml:space="preserve">
          <source>ITU-T Recommendation X.208, &lt;q&gt;Specification of Abstract Syntax Notation One (ASN.1)&lt;/q&gt;, last updated 2008. See &lt;a href=&quot;http://www.itu.int/ITU-T/asn1/&quot;&gt;http://www.itu.int/ITU-T/asn1/&lt;/a&gt;.</source>
          <target state="translated">ITU-T 권고 X.208, &lt;q&gt;추상 구문 표기법 1 (ASN.1)의 사양&lt;/q&gt; , 2008 년 마지막 업데이트. &lt;a href=&quot;http://www.itu.int/ITU-T/asn1/&quot;&gt;http://www.itu.int/ITU-T/asn1/ 참조&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2d832f46d999602423e59bcd40cbf2940bee3608" translate="yes" xml:space="preserve">
          <source>ITU-T Recommendation X.509, &lt;q&gt;The Directory - Authentication Framework&lt;/q&gt;. For references, see &lt;a href=&quot;http://en.wikipedia.org/wiki/X.509&quot;&gt;http://en.wikipedia.org/wiki/X.509&lt;/a&gt;.</source>
          <target state="translated">ITU-T 권고 X.509, &lt;q&gt;디렉토리 인증 프레임 워크&lt;/q&gt; . 참조는 &lt;a href=&quot;http://en.wikipedia.org/wiki/X.509&quot;&gt;http://en.wikipedia.org/wiki/X.509&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="96398505567aa96f2078fbe2c58e6ad76452f3aa" translate="yes" xml:space="preserve">
          <source>Icon column</source>
          <target state="translated">아이콘 열</target>
        </trans-unit>
        <trans-unit id="55424e2909aec885d15462a27f621d6d07d3ce5f" translate="yes" xml:space="preserve">
          <source>Icon to display for a file selected by name</source>
          <target state="translated">이름으로 선택한 파일을 표시하는 아이콘</target>
        </trans-unit>
        <trans-unit id="f5dbb7eea4a912d531e3af6a0677e0ccb06482ae" translate="yes" xml:space="preserve">
          <source>Icon to display for files when no specific icon is configured</source>
          <target state="translated">특정 아이콘이 구성되지 않은 경우 파일에 표시되는 아이콘</target>
        </trans-unit>
        <trans-unit id="3fc9d2ddcf2257f526bc840553452c87244be8d5" translate="yes" xml:space="preserve">
          <source>Icon to display next to files selected by MIME content-encoding</source>
          <target state="translated">MIME 컨텐츠 인코딩으로 선택한 파일 옆에 표시되는 아이콘</target>
        </trans-unit>
        <trans-unit id="0b3045cc0979639080d73fcea07fa8f457446bdc" translate="yes" xml:space="preserve">
          <source>Icon to display next to files selected by MIME content-type</source>
          <target state="translated">MIME 컨텐츠 유형으로 선택한 파일 옆에 표시되는 아이콘</target>
        </trans-unit>
        <trans-unit id="c4ed42ba53dbc34641007a2878cdf81abe9928d9" translate="yes" xml:space="preserve">
          <source>IconHeight[=&lt;var&gt;pixels&lt;/var&gt;]</source>
          <target state="translated">IconHeight[=&lt;var&gt;pixels&lt;/var&gt;]</target>
        </trans-unit>
        <trans-unit id="8267b83f97dcb10df8e1bfd997d1d26e0500f972" translate="yes" xml:space="preserve">
          <source>IconWidth[=&lt;var&gt;pixels&lt;/var&gt;]</source>
          <target state="translated">IconWidth[=&lt;var&gt;pixels&lt;/var&gt;]</target>
        </trans-unit>
        <trans-unit id="8a57faaf30ba2a475cec8a69294c0f2c85f47ad7" translate="yes" xml:space="preserve">
          <source>IconsAreLinks</source>
          <target state="translated">IconsAreLinks</target>
        </trans-unit>
        <trans-unit id="0601828d5f9b4b9fb066fedf054c2b8777cb3f7e" translate="yes" xml:space="preserve">
          <source>Idea (128 bit key)</source>
          <target state="translated">아이디어 (128 비트 키)</target>
        </trans-unit>
        <trans-unit id="7d367f0be6acd2a3951ad8f4ec0fc19478b3809a" translate="yes" xml:space="preserve">
          <source>Ideally you should run servers without multiple &lt;code&gt;&lt;a href=&quot;../mod/mpm_common#listen&quot;&gt;Listen&lt;/a&gt;&lt;/code&gt; statements if you want the highest performance. But read on.</source>
          <target state="translated">최상의 성능을 원할 경우 여러 &lt;code&gt;&lt;a href=&quot;../mod/mpm_common#listen&quot;&gt;Listen&lt;/a&gt;&lt;/code&gt; 문 없이 서버를 실행하는 것이 이상적 입니다. 그러나 계속 읽어보십시오.</target>
        </trans-unit>
        <trans-unit id="9a076076483b413eb53b4d3db1e3e8e306ffc0cc" translate="yes" xml:space="preserve">
          <source>IdentityCheck Directive</source>
          <target state="translated">IdentityCheck 지시어</target>
        </trans-unit>
        <trans-unit id="d20614693d0bb52bf8a7a7b4b62487724d60884e" translate="yes" xml:space="preserve">
          <source>IdentityCheckTimeout Directive</source>
          <target state="translated">IdentityCheckTimeout 지시어</target>
        </trans-unit>
        <trans-unit id="cc1ebdd04e76a4b8baffb29a22fa00446d382b18" translate="yes" xml:space="preserve">
          <source>Idle</source>
          <target state="translated">Idle</target>
        </trans-unit>
        <trans-unit id="8509cb26c8ebea3f7a3c13c835da9ed36251de78" translate="yes" xml:space="preserve">
          <source>If 0, no body is stored with this request, 1 otherwise.</source>
          <target state="translated">0이면이 요청과 함께 본문이 저장되지 않으며, 그렇지 않으면 1입니다.</target>
        </trans-unit>
        <trans-unit id="6d087a6b60a00d35ea21cbbd29bb9f74360914ae" translate="yes" xml:space="preserve">
          <source>If 1, the entry contains a cached HEAD request with no body, 0 otherwise.</source>
          <target state="translated">1 인 경우 항목에 본문이없는 캐시 된 HEAD 요청이 포함되며 그렇지 않은 경우 0입니다.</target>
        </trans-unit>
        <trans-unit id="16268ba95f56dac4aee3daaee4b3d2ef774861bb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;#authldapinitialbindasuser&quot;&gt;AuthLDAPInitialBindAsUser&lt;/a&gt;&lt;/code&gt; is set to &lt;em&gt;ON&lt;/em&gt;, the basic authentication username will be transformed according to the regular expression and substitution arguments.</source>
          <target state="translated">경우 &lt;code&gt;&lt;a href=&quot;#authldapinitialbindasuser&quot;&gt;AuthLDAPInitialBindAsUser&lt;/a&gt;&lt;/code&gt; 가 설정되어 &lt;em&gt;ON&lt;/em&gt; , 기본 인증 아이디는 정규식과 교체 인자에 따라 변화 될 것이다.</target>
        </trans-unit>
        <trans-unit id="76e896bbaf61d41998c7adf49c5748dbcf8fc265" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;../mod/core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt; is set to &lt;code&gt;/usr/local/apache2/htdocs&lt;/code&gt;, then this directive would map requests for &lt;code&gt;http://example.com/foo&lt;/code&gt; to the path &lt;code&gt;/usr/local/apache2/htdocs/bar&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;&lt;a href=&quot;../mod/core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt; 설정되어 &lt;code&gt;/usr/local/apache2/htdocs&lt;/code&gt; ,이 지시어는 요청 매핑 할 &lt;code&gt;http://example.com/foo&lt;/code&gt; 을 경로가 &lt;code&gt;/usr/local/apache2/htdocs/bar&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cb44751fcf64024654927a593ec0d0a1bfe6bc74" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;../mod/mod_http2#h2push&quot;&gt;H2Push&lt;/a&gt;&lt;/code&gt; is enabled, this will also start the PUSH right after the 103 response. If &lt;code&gt;&lt;a href=&quot;../mod/mod_http2#h2push&quot;&gt;H2Push&lt;/a&gt;&lt;/code&gt; is disabled however, the 103 response will be send nevertheless to the client.</source>
          <target state="translated">경우 &lt;code&gt;&lt;a href=&quot;../mod/mod_http2#h2push&quot;&gt;H2Push&lt;/a&gt;&lt;/code&gt; 가 활성화되어,이 또한 103 응답 후 PUSH 권리를 시작합니다. 그러나 &lt;code&gt;&lt;a href=&quot;../mod/mod_http2#h2push&quot;&gt;H2Push&lt;/a&gt;&lt;/code&gt; 를 사용하지 않으면 103 응답이 클라이언트로 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="549c5283ae64bd5b6be59c82ac1915c7d6e59660" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; has been enabled &lt;code&gt;configure&lt;/code&gt; searches for an installed OpenSSL. You can set the directory path to the SSL/TLS toolkit instead.</source>
          <target state="translated">경우 &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; 활성화 된 &lt;code&gt;configure&lt;/code&gt; 설치된 OpenSSL에 대한 검색. 대신 디렉토리 경로를 SSL / TLS 툴킷으로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="79448b559326597ec511a08d4e8c8ecebeb7e4ca" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;../programs/htpasswd&quot;&gt;htpasswd&lt;/a&gt;&lt;/code&gt; is not in your path, of course you'll have to type the full path to the file to get it to run. With a default installation, it's located at &lt;code&gt;/usr/local/apache2/bin/htpasswd&lt;/code&gt;</source>
          <target state="translated">경우 &lt;code&gt;&lt;a href=&quot;../programs/htpasswd&quot;&gt;htpasswd&lt;/a&gt;&lt;/code&gt; 가이 경로에 있지, 물론 당신은 그것을 실행 얻을 수있는 파일의 전체 경로를 입력해야합니다. 기본 설치의 경우 &lt;code&gt;/usr/local/apache2/bin/htpasswd&lt;/code&gt; 에 있습니다.</target>
        </trans-unit>
        <trans-unit id="ccb74ca23c369247d30a1af0c6c087347d520a3a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;mod/mod_log_config#customlog&quot;&gt;CustomLog&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;mod/core#errorlog&quot;&gt;ErrorLog&lt;/a&gt;&lt;/code&gt; directives are placed inside a &lt;code&gt;&lt;a href=&quot;mod/core#virtualhost&quot;&gt;&amp;lt;VirtualHost&amp;gt;&lt;/a&gt;&lt;/code&gt; section, all requests or errors for that virtual host will be logged only to the specified file. Any virtual host which does not have logging directives will still have its requests sent to the main server logs. This technique is very useful for a small number of virtual hosts, but if the number of hosts is very large, it can be complicated to manage. In addition, it can often create problems with &lt;a href=&quot;vhosts/fd-limits&quot;&gt;insufficient file descriptors&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;code&gt;&lt;a href=&quot;mod/mod_log_config#customlog&quot;&gt;CustomLog&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;mod/core#errorlog&quot;&gt;ErrorLog&lt;/a&gt;&lt;/code&gt; 지시어가 내부에 배치 된 &lt;code&gt;&lt;a href=&quot;mod/core#virtualhost&quot;&gt;&amp;lt;VirtualHost&amp;gt;&lt;/a&gt;&lt;/code&gt; 섹션, 해당 가상 호스트에 대한 요청과 오류 만이 지정된 파일에 기록됩니다. 로깅 지시문이없는 가상 호스트는 여전히 주 서버 로그로 요청을 보냅니다. 이 기술은 소수의 가상 호스트에 매우 유용하지만 호스트 수가 너무 많으면 관리하기가 복잡 할 수 있습니다. 또한 &lt;a href=&quot;vhosts/fd-limits&quot;&gt;불충분 한 파일 디스크립터에&lt;/a&gt; 문제가 발생할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cf3457c8911bb4d9cd82b6f8d114248e68c37db0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;mod_alias&quot;&gt;mod_alias&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;mod_userdir&quot;&gt;mod_userdir&lt;/a&gt;&lt;/code&gt; are used for translating URIs to filenames, they will override the directives of &lt;code&gt;&lt;a href=&quot;mod_vhost_alias&quot;&gt;mod_vhost_alias&lt;/a&gt;&lt;/code&gt; described below. For example, the following configuration will map &lt;code&gt;/cgi-bin/script.pl&lt;/code&gt; to &lt;code&gt;/usr/local/apache2/cgi-bin/script.pl&lt;/code&gt; in all cases:</source>
          <target state="translated">URI를 파일 이름으로 변환하는 데 &lt;code&gt;&lt;a href=&quot;mod_alias&quot;&gt;mod_alias&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;mod_userdir&quot;&gt;mod_userdir&lt;/a&gt;&lt;/code&gt; 을 사용하는 경우 아래 설명 된 &lt;code&gt;&lt;a href=&quot;mod_vhost_alias&quot;&gt;mod_vhost_alias&lt;/a&gt;&lt;/code&gt; 의 지시문을 대체합니다 . 예를 들어 다음 구성은 모든 경우에 &lt;code&gt;/cgi-bin/script.pl&lt;/code&gt; 을 &lt;code&gt;/usr/local/apache2/cgi-bin/script.pl&lt;/code&gt; 에 매핑 합니다.</target>
        </trans-unit>
        <trans-unit id="f044f4f6464d0ce4f1d3250b31a9a0744f49b213" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;mod_authz_owner&quot;&gt;mod_authz_owner&lt;/a&gt;&lt;/code&gt; is used in order to authorize a resource that is not actually present in the filesystem (&lt;em&gt;i.e.&lt;/em&gt; a virtual resource), it will deny the access.</source>
          <target state="translated">경우 &lt;code&gt;&lt;a href=&quot;mod_authz_owner&quot;&gt;mod_authz_owner&lt;/a&gt;&lt;/code&gt; 가 파일 시스템에 실제로 존재하지 않는 자원 (권한을 부여하기 위해 사용되는 &lt;em&gt;즉,&lt;/em&gt; 가상 자원),이 액세스를 거부합니다.</target>
        </trans-unit>
        <trans-unit id="5216d8aa78d86bf087962fe215ede849d8342fe1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; is built against a version of OpenSSL which supports the secure renegotiation extension, this note is set to the value &lt;code&gt;1&lt;/code&gt; if SSL is in used for the current connection, and the client also supports the secure renegotiation extension. If the client does not support the secure renegotiation extension, the note is set to the value &lt;code&gt;0&lt;/code&gt;. If &lt;code&gt;&lt;a href=&quot;mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; is not built against a version of OpenSSL which supports secure renegotiation, or if SSL is not in use for the current connection, the note is not set.</source>
          <target state="translated">경우 &lt;code&gt;&lt;a href=&quot;mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; 보안 재협상 확장을 지원 OpenSSL 버전에 내장되어,이 메모는 값으로 설정 &lt;code&gt;1&lt;/code&gt; SSL이의 현재 연결에 사용되는 경우, 클라이언트는 보안 재협상 확장을 지원합니다. 클라이언트가 보안 재협상 확장을 지원하지 않으면 메모는 &lt;code&gt;0&lt;/code&gt; 값으로 설정됩니다 . 경우 &lt;code&gt;&lt;a href=&quot;mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; 보안 재협상을 지원하거나 SSL은 현재 연결에 대한 사용하지 않을 경우, 노트가 설정되지 않은 OpenSSL 버전에 내장되어 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3d29064040bdab194f4c3a50defa94191debcd62" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; is linked against OpenSSL version 0.9.8m or later, by default renegotiation is only supported with clients supporting the new protocol extension. If this directive is enabled, renegotiation will be allowed with old (unpatched) clients, albeit insecurely.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; 이 OpenSSL 버전 0.9.8m 이상에 연결된 경우 기본적으로 재협상은 새 프로토콜 확장을 지원하는 클라이언트에서만 지원됩니다. 이 지시문을 사용하면 안전하지는 않지만 이전 (패치되지 않은) 클라이언트와의 재협상이 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="8dcc0cb20f5fb406a771525acef685f343bae8d9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;KeepAliveTimeout&lt;/code&gt; is &lt;strong&gt;not&lt;/strong&gt; set for a name-based virtual host, the value of the first defined virtual host best matching the local IP and port will be used.</source>
          <target state="translated">경우 &lt;code&gt;KeepAliveTimeout&lt;/code&gt; 값이 되어 &lt;strong&gt;있지&lt;/strong&gt; 이름 기반 가상 호스트 설정 로컬 IP 및 포트 일치 가장 먼저 정의 가상 호스트의 값이 사용된다.</target>
        </trans-unit>
        <trans-unit id="938c0402960ac831fa427eb67d96edf5594b4289" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;LDAPRetryDelay&lt;/code&gt; is set to a non-zero value, the server will delay retrying an LDAP request for the specified amount of time. Setting this directive to 0 will result in any retry to occur without delay.</source>
          <target state="translated">경우 &lt;code&gt;LDAPRetryDelay&lt;/code&gt; 가 0이 아닌 값으로 설정되고, 서버는 지정된 시간을위한 LDAP 요청 재시도 지연된다. 이 지정 문을 0으로 설정하면 지연없이 재 시도가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9a99f260037f8378f4686ce5077000a7033b6fb1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;LegacyDNStringFormat&lt;/code&gt; is set, the old format will be used which sorts the &quot;C&quot; attribute first, uses slashes as separators, and does not handle non-ASCII and special characters in any consistent way.</source>
          <target state="translated">경우 &lt;code&gt;LegacyDNStringFormat&lt;/code&gt; 가 설정되어, 기존의 형식은, 첫째 구분 기호로 사용 슬래시을 &quot;C&quot;속성을 정렬하는 데 사용되며, 어떤 일관된 방식이 아닌 ASCII 및 특수 문자를 처리하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6d0e84697fa05616b782c377072f2808b24e68d1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;Multiviews&lt;/code&gt; is enabled, and &lt;code&gt;&lt;a href=&quot;mod_mime#multiviewsmatch&quot;&gt;MultiviewsMatch&lt;/a&gt;&lt;/code&gt; is set to &quot;handlers&quot; or &quot;any&quot;, a request to &lt;code&gt;document.html&lt;/code&gt; will discover &lt;code&gt;document.html.var&lt;/code&gt; and continue negotiating with the explicit type map.</source>
          <target state="translated">경우 &lt;code&gt;Multiviews&lt;/code&gt; 를가 활성화되고 &lt;code&gt;&lt;a href=&quot;mod_mime#multiviewsmatch&quot;&gt;MultiviewsMatch&lt;/a&gt;&lt;/code&gt; 는 &quot;처리기&quot;또는로 설정되어 &quot;어떤&quot;에 요청 &lt;code&gt;document.html&lt;/code&gt; 가 발견 할 &lt;code&gt;document.html.var&lt;/code&gt; 및 명시 적 형태 맵과 협상을 계속합니다.</target>
        </trans-unit>
        <trans-unit id="ee65f679d7435f936e8903b81faf628e3b23bc23" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;N&lt;/code&gt; or &lt;code&gt;M&lt;/code&gt; is greater than the number of parts available a single underscore is interpolated.</source>
          <target state="translated">경우 &lt;code&gt;N&lt;/code&gt; 또는 &lt;code&gt;M&lt;/code&gt; 은 단일 밑줄 보간 가능 부품의 수보다 더 크다.</target>
        </trans-unit>
        <trans-unit id="dbee81340fa3b62dfa94c2be0cd2122eb32fac30" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;VHostSecure&lt;/code&gt; prevents an application running, this may be a warning sign that the application should be reviewed for security.</source>
          <target state="translated">&lt;code&gt;VHostSecure&lt;/code&gt; 가 응용 프로그램 실행을 방해하는 경우 , 보안을 위해 응용 프로그램을 검토해야한다는 경고 신호일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="736609d15d1de0258845d81721d629609c59859d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;append&lt;/code&gt; was used instead of &lt;code&gt;merge&lt;/code&gt;, then the response would contain the following header:</source>
          <target state="translated">경우 &lt;code&gt;append&lt;/code&gt; 대신 사용 &lt;code&gt;merge&lt;/code&gt; 후 응답은 다음 헤더를 포함합니다 :</target>
        </trans-unit>
        <trans-unit id="e14663c5737b59276d026778d1d337762098640a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;htcacheclean&lt;/code&gt; is passed one or more URLs, each URL will be deleted from the cache. If multiple variants of an URL exists, all variants would be deleted.</source>
          <target state="translated">경우 &lt;code&gt;htcacheclean&lt;/code&gt; 은 하나 개 이상의 URL을 전달, 각 URL은 캐시에서 삭제됩니다. URL의 변형이 여러 개인 경우 모든 변형이 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="369e9caf51156b2d29b557803b8409d06bc70ce0" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;file-path&lt;/var&gt; is not an absolute path, the location specified will be relative to the value of &lt;code&gt;&lt;a href=&quot;core#defaultruntimedir&quot;&gt;DefaultRuntimeDir&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;var&gt;file-path&lt;/var&gt; 절대 경로가 아닌, 지정된 위치의 값에 상대적인 것이다 &lt;code&gt;&lt;a href=&quot;core#defaultruntimedir&quot;&gt;DefaultRuntimeDir&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2762a1f700620ca1d4b18515b7aa54c8f6aca24c" translate="yes" xml:space="preserve">
          <source>If Apache httpd and APR are built with thread support, the health check module will offload the work of the actual checking to a threadpool associated with the Watchdog process, allowing for parallel checks. The &lt;code&gt;ProxyHCTPsize&lt;/code&gt; directive determines the size of this threadpool. If set to &lt;code&gt;0&lt;/code&gt;, no threadpool is used at all, resulting in serialized health checks.</source>
          <target state="translated">Apache httpd 및 APR이 스레드 지원으로 빌드 된 경우 상태 점검 모듈은 실제 점검 작업을 워치 독 프로세스와 연관된 스레드 풀로 오프로드하여 병렬 점검을 허용합니다. &lt;code&gt;ProxyHCTPsize&lt;/code&gt; 의 지정이 스레드 풀의 크기를 결정한다. &lt;code&gt;0&lt;/code&gt; 으로 설정하면 스레드 풀이 전혀 사용되지 않아 직렬화 된 상태 확인이 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="a304c64061c90077e2b0848f9bedf1cf50305f12" translate="yes" xml:space="preserve">
          <source>If Apache httpd is handling &lt;code&gt;GET /disk1/storage/apache/htdocs/images/imagestore1/food/apples.jpg HTTP/1.1&lt;/code&gt; mod_status displays as follows:</source>
          <target state="translated">Apache httpd가 &lt;code&gt;GET /disk1/storage/apache/htdocs/images/imagestore1/food/apples.jpg HTTP/1.1&lt;/code&gt; 처리하는 경우 HTTP / 1.1 mod_status는 다음과 같이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="8475f1ab5d5d0c1db70dbe356d0ccf4e71961e18" translate="yes" xml:space="preserve">
          <source>If Apache httpd starts as root and switches to another user, the Linux kernel &lt;em&gt;disables&lt;/em&gt; core dumps even if the directory is writable for the process. Apache httpd (2.0.46 and later) reenables core dumps on Linux 2.4 and beyond, but only if you explicitly configure a &lt;code&gt;CoreDumpDirectory&lt;/code&gt;.</source>
          <target state="translated">Apache httpd가 루트로 시작하여 다른 사용자로 전환하면 Linux 커널 &lt;em&gt;은&lt;/em&gt; 디렉토리가 프로세스에 대해 쓰기 가능하더라도 코어 덤프를 &lt;em&gt;비활성화합니다&lt;/em&gt; . Apache httpd (2.0.46 이상)는 Linux 2.4 이상에서 코어 덤프를 다시 활성화하지만 &lt;code&gt;CoreDumpDirectory&lt;/code&gt; 를 명시 적으로 구성한 경우에만 가능합니다 .</target>
        </trans-unit>
        <trans-unit id="bc67c706ff2240ad302bc969d452feb985c2fb75" translate="yes" xml:space="preserve">
          <source>If Apache is running as a service, you can tell it to stop by opening another console window and entering:</source>
          <target state="translated">Apache가 서비스로 실행중인 경우 다른 콘솔 창을 열고 다음을 입력하여 중지하도록 지시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="429b1b8fdf8dee5069ddf9a0d119469b25568622" translate="yes" xml:space="preserve">
          <source>If Apache suffers a fatal problem during startup, it will write a message describing the problem either to the console or to the &lt;code&gt;&lt;a href=&quot;mod/core#errorlog&quot;&gt;ErrorLog&lt;/a&gt;&lt;/code&gt; before exiting. One of the most common error messages is &quot;&lt;code&gt;Unable to bind to Port ...&lt;/code&gt;&quot;. This message is usually caused by either:</source>
          <target state="translated">시작하는 동안 Apache에 치명적인 문제가 발생하면 종료하기 전에 콘솔 또는 &lt;code&gt;&lt;a href=&quot;mod/core#errorlog&quot;&gt;ErrorLog&lt;/a&gt;&lt;/code&gt; 에 문제를 설명하는 메시지를 작성합니다 . 가장 일반적인 오류 메시지 중 하나는 &quot; &lt;code&gt;Unable to bind to Port ...&lt;/code&gt; &quot;입니다. 이 메시지는 일반적으로 다음 중 하나에 의해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b4e1ff30661373f8f27ac6cbf1fd18f3b5a66997" translate="yes" xml:space="preserve">
          <source>If CGI processes are &lt;strong&gt;not&lt;/strong&gt; running under user ids other than the web server user id, this directive will limit the number of processes that the server itself can create. Evidence of this situation will be indicated by &lt;strong&gt;&lt;code&gt;cannot fork&lt;/code&gt;&lt;/strong&gt; messages in the &lt;code&gt;error_log&lt;/code&gt;.</source>
          <target state="translated">CGI 프로세스가 웹 서버 사용자 ID 이외의 사용자 ID로 실행 &lt;strong&gt;되지 않는&lt;/strong&gt; 경우이 지정 문은 서버 자체가 작성할 수있는 프로세스 수를 제한합니다. 이 상황의 증거 는 &lt;code&gt;error_log&lt;/code&gt; 에&lt;strong&gt; &lt;code&gt;cannot fork&lt;/code&gt; &lt;/strong&gt; 메시지 로 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="672bf0a83cf5078496008055b9c7a56edc40fe0d" translate="yes" xml:space="preserve">
          <source>If CGIs make assumptions about the values of &lt;code&gt;SERVER_NAME&lt;/code&gt;, they may be broken by this option. The client is essentially free to give whatever value they want as a hostname. But if the CGI is only using &lt;code&gt;SERVER_NAME&lt;/code&gt; to construct self-referential URLs, then it should be just fine.</source>
          <target state="translated">CGI가 &lt;code&gt;SERVER_NAME&lt;/code&gt; 값에 대해 가정하면 이 옵션에 의해 손상 될 수 있습니다. 클라이언트는 기본적으로 원하는 값을 호스트 이름으로 자유롭게 지정할 수 있습니다. 그러나 CGI가 &lt;code&gt;SERVER_NAME&lt;/code&gt; 만 사용하여 자체 참조 URL을 구성 하는 경우에는 괜찮습니다.</target>
        </trans-unit>
        <trans-unit id="345125dd19087cda5d224e52b51a7c244e0331ac" translate="yes" xml:space="preserve">
          <source>If ImapMenu is &lt;code&gt;none&lt;/code&gt;, no menu is generated, and the &lt;code&gt;default&lt;/code&gt; action is performed.</source>
          <target state="translated">ImapMenu가 &lt;code&gt;none&lt;/code&gt; 이면 메뉴가 생성되지 않고 &lt;code&gt;default&lt;/code&gt; 조치가 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="ed08d6b3237e1eabad39ce76c6471c3d75cf8795" translate="yes" xml:space="preserve">
          <source>If R is not set, it will use string-literal search-and-replace. The logic is &lt;em&gt;starts-with&lt;/em&gt; in HTML links, but &lt;em&gt;contains&lt;/em&gt; in scripting events and embedded script and style sections.</source>
          <target state="translated">R을 설정하지 않으면 문자열 리터럴 검색 및 바꾸기가 사용됩니다. 논리는 &lt;em&gt;시작-와&lt;/em&gt; HTML 링크에서, 그러나 &lt;em&gt;포함&lt;/em&gt; 스크립트 이벤트 및 임베디드 스크립트와 스타일 섹션에서.</target>
        </trans-unit>
        <trans-unit id="949cb3c521436cbd7d047ad7c36f85bd0dbc66d6" translate="yes" xml:space="preserve">
          <source>If The answer to #1 is 'yes', but the answer to #2 is 'no', the default will be &lt;code&gt;&lt;a href=&quot;mod/worker&quot;&gt;worker&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated"># 1에 대한 대답은 '예'이지만 # 2에 대한 대답은 '아니오'이면 기본값은 &lt;code&gt;&lt;a href=&quot;mod/worker&quot;&gt;worker&lt;/a&gt;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="bbbd95e96583b57813b9707d11b0564af3b43247" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;&lt;a href=&quot;../mod/core#virtualhost&quot;&gt;VirtualHost&lt;/a&gt;&lt;/code&gt; doesn't specify a &lt;code&gt;&lt;a href=&quot;../mod/core#servername&quot;&gt;ServerName&lt;/a&gt;&lt;/code&gt;, a server name will be inherited from the base server configuration. If no server name was specified globally, one is detected at startup through reverse DNS resolution of the first listening address. In either case, this inherited server name will influence name-based virtual host resolution, so it is best to always explicitly list a &lt;code&gt;&lt;a href=&quot;../mod/core#servername&quot;&gt;ServerName&lt;/a&gt;&lt;/code&gt; in every name-based virtual host.</source>
          <target state="translated">경우 &lt;code&gt;&lt;a href=&quot;../mod/core#virtualhost&quot;&gt;VirtualHost&lt;/a&gt;&lt;/code&gt; 지정하지 않는 &lt;code&gt;&lt;a href=&quot;../mod/core#servername&quot;&gt;ServerName&lt;/a&gt;&lt;/code&gt; 서버 이름은 기본 서버 구성에서 상속됩니다. 전체적으로 서버 이름을 지정하지 않은 경우 시작시 첫 번째 수신 주소의 역방향 DNS 확인을 통해 서버 이름이 감지됩니다. 두 경우 모두이 상속 된 서버 이름은 이름 기반 가상 호스트 확인에 영향을 미치므로 모든 이름 기반 가상 호스트 에 항상 &lt;code&gt;&lt;a href=&quot;../mod/core#servername&quot;&gt;ServerName&lt;/a&gt;&lt;/code&gt; 을 명시 적으로 나열하는 것이 가장 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="917eec6f8c882fed572340cacc2c10e2048cf944" translate="yes" xml:space="preserve">
          <source>If a HTTP header is used in a condition this header is added to the Vary header of the response in case the condition evaluates to true for the request. It is &lt;strong&gt;not&lt;/strong&gt; added if the condition evaluates to false for the request. Adding the HTTP header to the Vary header of the response is needed for proper caching.</source>
          <target state="translated">HTTP 헤더가 조건에서 사용되는 경우이 헤더는 요청에 대해 조건이 true로 평가되는 경우 응답의 Vary 헤더에 추가됩니다. 그것은되어 &lt;strong&gt;있지&lt;/strong&gt; 조건이 요청에 대해 false로 평가되면 추가했다. 적절한 캐싱을 위해서는 응답의 Vary 헤더에 HTTP 헤더를 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="7b477d456d642922aa60002a8100ed8aaf42b6a9" translate="yes" xml:space="preserve">
          <source>If a HTTP header is used in the condition, this flag prevents this header from being added to the Vary header of the response.</source>
          <target state="translated">조건에서 HTTP 헤더가 사용되는 경우이 플래그는이 헤더가 응답의 Vary 헤더에 추가되지 않도록합니다.</target>
        </trans-unit>
        <trans-unit id="85e8dd834665fd5fa165982711a2a47498914e71" translate="yes" xml:space="preserve">
          <source>If a URL which maps to a directory is requested and there is no &lt;code&gt;&lt;a href=&quot;mod_dir#directoryindex&quot;&gt;DirectoryIndex&lt;/a&gt;&lt;/code&gt; (&lt;em&gt;e.g.&lt;/em&gt;, &lt;code&gt;index.html&lt;/code&gt;) in that directory, then &lt;code&gt;&lt;a href=&quot;mod_autoindex&quot;&gt;mod_autoindex&lt;/a&gt;&lt;/code&gt; will return a formatted listing of the directory.</source>
          <target state="translated">디렉토리에 매핑되는 URL을 요청하고 어떤이없는 경우 &lt;code&gt;&lt;a href=&quot;mod_dir#directoryindex&quot;&gt;DirectoryIndex&lt;/a&gt;&lt;/code&gt; 에 ( &lt;em&gt;예를 들어&lt;/em&gt; , &lt;code&gt;index.html&lt;/code&gt; 을이 ) 그 디렉토리에, 다음 &lt;code&gt;&lt;a href=&quot;mod_autoindex&quot;&gt;mod_autoindex&lt;/a&gt;&lt;/code&gt; 가 포맷 된 디렉토리의 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="64ed0f861e1195f9a4855224cbfcaa437b4bcf0d" translate="yes" xml:space="preserve">
          <source>If a balancer is configured as follows:</source>
          <target state="translated">밸런서가 다음과 같이 구성된 경우 :</target>
        </trans-unit>
        <trans-unit id="7b1d874f8e8b93f22defa4b3fa7a2dd73c60ed48" translate="yes" xml:space="preserve">
          <source>If a connection is not successful with the timeout period, either an error will be returned or the LDAP client library will attempt to connect to a secondary LDAP server if one is specified (via a space-separated list of hostnames in the &lt;code&gt;&lt;a href=&quot;mod_authnz_ldap#authldapurl&quot;&gt;AuthLDAPURL&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">시간 종료 기간으로 연결에 실패하면 오류가 리턴되거나 LDAP 클라이언트 라이브러리가 지정된 경우 ( &lt;code&gt;&lt;a href=&quot;mod_authnz_ldap#authldapurl&quot;&gt;AuthLDAPURL&lt;/a&gt;&lt;/code&gt; 에서 공백으로 구분 된 호스트 이름 목록을 통해) 2 차 LDAP 서버에 연결을 시도합니다 .</target>
        </trans-unit>
        <trans-unit id="65d155ebd489faf81886eaca4f98a81d75d17b94" translate="yes" xml:space="preserve">
          <source>If a database query for example returned the username, full name and telephone number of a user, a CGI program will have access to this information without the need to make a second independent database query to gather this additional information.</source>
          <target state="translated">예를 들어 데이터베이스 쿼리가 사용자의 사용자 이름, 성명 및 전화 번호를 반환 한 경우 CGI 프로그램은이 추가 정보를 수집하기 위해 두 번째 독립 데이터베이스 쿼리를 만들 필요없이이 정보에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7aae1cf2d4a2fe9a1cb2154b01edde88e2ac9640" translate="yes" xml:space="preserve">
          <source>If a directory is requested (i.e. a path ending with &lt;code&gt;/&lt;/code&gt;), the file served from that directory is defined by the &lt;code&gt;&lt;a href=&quot;mod/mod_dir#directoryindex&quot;&gt;DirectoryIndex&lt;/a&gt;&lt;/code&gt; directive. For example, if &lt;code&gt;DocumentRoot&lt;/code&gt; were set as above, and you were to set:</source>
          <target state="translated">디렉토리가 요청되면 (즉, &lt;code&gt;/&lt;/code&gt; 로 끝나는 경로 ) 해당 디렉토리에서 제공되는 파일은 &lt;code&gt;&lt;a href=&quot;mod/mod_dir#directoryindex&quot;&gt;DirectoryIndex&lt;/a&gt;&lt;/code&gt; 지시문에 의해 정의됩니다 . 예를 들어 &lt;code&gt;DocumentRoot&lt;/code&gt; 가 위와 같이 설정되어 있고 다음을 설정 한 경우 :</target>
        </trans-unit>
        <trans-unit id="9b53b2c37995328f1879038eb55d8975e93de74d" translate="yes" xml:space="preserve">
          <source>If a directory's configuration includes &lt;code&gt;FileETag INode MTime Size&lt;/code&gt;, and a subdirectory's includes &lt;code&gt;FileETag -INode&lt;/code&gt;, the setting for that subdirectory (which will be inherited by any sub-subdirectories that don't override it) will be equivalent to &lt;code&gt;FileETag MTime Size&lt;/code&gt;.</source>
          <target state="translated">디렉토리 구성에 &lt;code&gt;FileETag INode MTime Size&lt;/code&gt; 가 포함 &lt;code&gt;FileETag -INode&lt;/code&gt; 서브 디렉토리에 FileETag -INode 가 포함 된 경우 , 해당 서브 디렉토리에 대한 설정 (이를 대체하지 않는 서브 서브 디렉토리에 상 속됨)은 &lt;code&gt;FileETag MTime Size&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="e083cb05dcf8afd3125a0cb4133d8effef507e3f" translate="yes" xml:space="preserve">
          <source>If a document is file-based, no &lt;code&gt;ETag&lt;/code&gt; field will be included in the response</source>
          <target state="translated">문서가 파일 기반 인 경우 응답에 &lt;code&gt;ETag&lt;/code&gt; 필드가 포함 되지 않습니다</target>
        </trans-unit>
        <trans-unit id="02e6a0e551db5f6faf0ce2fc7eb42b9da6a7a1e0" translate="yes" xml:space="preserve">
          <source>If a literal ':' character is needed in any of the cookie fields, an alternate syntax is available. To opt-in to the alternate syntax, the cookie &quot;Name&quot; should be preceded with a ';' character, and field separators should be specified as ';'.</source>
          <target state="translated">쿠키 필드에 리터럴 ':'문자가 필요한 경우 대체 구문을 사용할 수 있습니다. 대체 구문을 옵트 인하려면 &quot;Name&quot;쿠키 앞에 ';'가 있어야합니다. 문자 및 필드 구분 기호는 ';'로 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="6ec7abe740c409098e5112e5f25fad65a6a83703" translate="yes" xml:space="preserve">
          <source>If a login request arrives that exceeds this size, the whole request will be aborted with the HTTP response code &lt;code&gt;HTTP_REQUEST_TOO_LARGE&lt;/code&gt;.</source>
          <target state="translated">이 크기를 초과하는 로그인 요청이 도착하면 HTTP 응답 코드 &lt;code&gt;HTTP_REQUEST_TOO_LARGE&lt;/code&gt; 로 전체 요청이 중단됩니다 .</target>
        </trans-unit>
        <trans-unit id="263471172738fbf06f6b27c907df465dc53aa033" translate="yes" xml:space="preserve">
          <source>If a non-authenticated user attempts to access a page protected by &lt;code&gt;&lt;a href=&quot;mod_auth_form&quot;&gt;mod_auth_form&lt;/a&gt;&lt;/code&gt; that isn't configured with a &lt;code&gt;&lt;a href=&quot;#authformloginrequiredlocation&quot;&gt;AuthFormLoginRequiredLocation&lt;/a&gt;&lt;/code&gt; directive, a &lt;var&gt;HTTP_UNAUTHORIZED&lt;/var&gt; status code is returned to the browser indicating to the user that they are not authorized to view the page.</source>
          <target state="translated">인증되지 않은 사용자가 &lt;code&gt;&lt;a href=&quot;#authformloginrequiredlocation&quot;&gt;AuthFormLoginRequiredLocation&lt;/a&gt;&lt;/code&gt; 지시문으로 구성되지 않은 &lt;code&gt;&lt;a href=&quot;mod_auth_form&quot;&gt;mod_auth_form&lt;/a&gt;&lt;/code&gt; 으로 보호 된 페이지에 액세스하려고 하면 &lt;var&gt;HTTP_UNAUTHORIZED&lt;/var&gt; 상태 코드가 브라우저에 리턴되어 사용자에게 페이지를 볼 권한이 없음을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="2f19834f47ac49a738c74c701253ff2bced07d49" translate="yes" xml:space="preserve">
          <source>If a path is given starting with a slash, a directory path will be constructed using that path, plus the username specified. Given this configuration:</source>
          <target state="translated">슬래시로 시작하는 경로가 제공되면 해당 경로와 지정된 사용자 이름을 사용하여 디렉토리 경로가 구성됩니다. 이 구성이 주어지면 :</target>
        </trans-unit>
        <trans-unit id="028413e6dc59d36e753df023d4d63980467c1615" translate="yes" xml:space="preserve">
          <source>If a path is given which does not start with a leading slash, it is assumed to be a directory path relative to the home directory of the specified user. Given this configuration:</source>
          <target state="translated">슬래시로 시작하지 않는 경로가 제공되면 지정된 사용자의 홈 디렉토리에 상대적인 디렉토리 경로로 간주됩니다. 이 구성이 주어지면 :</target>
        </trans-unit>
        <trans-unit id="eea094b700bc76d3091a34ea6b0e2bd8fccbe3dd" translate="yes" xml:space="preserve">
          <source>If a path is provided which contains an asterisk (*), a path is used in which the asterisk is replaced with the username. Given this configuration:</source>
          <target state="translated">별표 (*)가 포함 된 경로가 제공되면 별표가 사용자 이름으로 대체되는 경로가 사용됩니다. 이 구성이 주어지면 :</target>
        </trans-unit>
        <trans-unit id="5267c2d57a455a82c88e6f627f93e6544def7433" translate="yes" xml:space="preserve">
          <source>If a program is used, then it will be run as the user who started &lt;code&gt;&lt;a href=&quot;../programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt;. This will be root if the server was started by root; be sure that the program is secure or switches to a less privileged user.</source>
          <target state="translated">프로그램이 사용되면 &lt;code&gt;&lt;a href=&quot;../programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; 를 시작한 사용자로 실행됩니다 . 서버가 루트로 시작된 경우 루트가됩니다. 프로그램이 안전하거나 권한이 적은 사용자로 전환해야합니다.</target>
        </trans-unit>
        <trans-unit id="bb02c3b2024b05c224d137bfcdc3115d4050f1a3" translate="yes" xml:space="preserve">
          <source>If a program is used, then it will be run as the user who started &lt;code&gt;&lt;a href=&quot;../programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt;. This will be root if the server was started by root; be sure that the program is secure.</source>
          <target state="translated">프로그램이 사용되면 &lt;code&gt;&lt;a href=&quot;../programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; 를 시작한 사용자로 실행됩니다 . 서버가 루트로 시작된 경우 루트가됩니다. 프로그램이 안전한지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="175027cd60fe1ebb90e0313a7db1805b3a116910" translate="yes" xml:space="preserve">
          <source>If a query returns more than one row, a random row from the result set is used.</source>
          <target state="translated">쿼리가 둘 이상의 행을 반환하면 결과 집합의 임의의 행이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="959267d5cc10975d72f42db5913758627c67dc18" translate="yes" xml:space="preserve">
          <source>If a query string is present in the request for the active SSI document, this variable contains the (%-decoded) query string, which is &lt;em&gt;escaped&lt;/em&gt; for shell usage (special characters like &lt;code&gt;&amp;amp;&lt;/code&gt; etc. are preceded by backslashes). It is not set if a query string is not present. Use &lt;code&gt;DOCUMENT_ARGS&lt;/code&gt; if shell escaping is not desired.</source>
          <target state="translated">활성 SSI 문서에 대한 요청에 쿼리 문자열이있는 경우이 변수에는 쉘 사용을 위해 &lt;em&gt;이스케이프 된&lt;/em&gt; (% 디코딩 된) 쿼리 문자열이 포함 됩니다 ( &lt;code&gt;&amp;amp;&lt;/code&gt; 등의 특수 문자 앞에 백 슬래시가옵니다). 쿼리 문자열이 없으면 설정되지 않습니다. 쉘 이스케이프를 원하지 않으면 &lt;code&gt;DOCUMENT_ARGS&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="b3818773cb256ea94dffe57f892f13e3f047af93" translate="yes" xml:space="preserve">
          <source>If a relative &lt;var&gt;filename&lt;/var&gt; is supplied, the check is &lt;code&gt;&lt;a href=&quot;#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt; relative. In the case where this directive occurs before the &lt;code&gt;&lt;a href=&quot;#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt;, the path will be checked relative to the compiled-in server root or the server root passed in on the command line via the &lt;code&gt;-d&lt;/code&gt; parameter.</source>
          <target state="translated">상대 &lt;var&gt;filename&lt;/var&gt; 이 제공되면 점검은 &lt;code&gt;&lt;a href=&quot;#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt; 상대입니다. 이 지정 문이 &lt;code&gt;&lt;a href=&quot;#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt; 이전에 발생하는 경우 , 경로는 컴파일 된 서버 루트 또는 &lt;code&gt;-d&lt;/code&gt; 매개 변수 를 통해 명령 행에 전달 된 서버 루트를 기준으로 점검 됩니다.</target>
        </trans-unit>
        <trans-unit id="49062e603d05cafd9fde8478a29fb852cdc8fe83" translate="yes" xml:space="preserve">
          <source>If a resource has moved to another server, you may wish to have URLs continue to work for a time on the old server while people update their bookmarks.</source>
          <target state="translated">자원이 다른 서버로 이동 한 경우 사람들이 책갈피를 업데이트하는 동안 기존 서버에서 URL이 계속 작동하도록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="43562cc934e0df99de4f6090e4feca95b57e4710" translate="yes" xml:space="preserve">
          <source>If a response does not include an &lt;code&gt;Expires&lt;/code&gt; header but does include a &lt;code&gt;Last-Modified&lt;/code&gt; header, &lt;code&gt;&lt;a href=&quot;mod/mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; can infer a freshness lifetime based on a heuristic, which can be controlled through the use of the &lt;code&gt;&lt;a href=&quot;mod/mod_cache#cachelastmodifiedfactor&quot;&gt;CacheLastModifiedFactor&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">응답에 &lt;code&gt;Expires&lt;/code&gt; 헤더는 없지만 &lt;code&gt;Last-Modified&lt;/code&gt; 헤더 는 포함 된 경우 &lt;code&gt;&lt;a href=&quot;mod/mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; 는 휴리스틱을 기반으로 최신 수명을 유추 할 수 있으며 이는 &lt;code&gt;&lt;a href=&quot;mod/mod_cache#cachelastmodifiedfactor&quot;&gt;CacheLastModifiedFactor&lt;/a&gt;&lt;/code&gt; 지시문을 사용하여 제어 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0d71234740e45443b2bb69ffaa1187a8dc3f6dd1" translate="yes" xml:space="preserve">
          <source>If a substitution is made in per-directory context, a new internal subrequest is issued with the new URL, which restarts processing of the request phases. If the substitution is a relative path, the &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewritebase&quot;&gt;RewriteBase&lt;/a&gt;&lt;/code&gt; directive determines the URL-path prefix prepended to the substitution. In per-directory context, care must be taken to create rules which will eventually (in some future &quot;round&quot; of per-directory rewrite processing) not perform a substitution to avoid looping. (See &lt;a href=&quot;http://wiki.apache.org/httpd/RewriteLooping&quot;&gt;RewriteLooping&lt;/a&gt; for further discussion of this problem.)</source>
          <target state="translated">디렉토리 별 컨텍스트에서 대체가 이루어지면 새 URL로 새 내부 하위 요청이 발행되어 요청 단계 처리가 다시 시작됩니다. 대체가 상대 경로 인 경우 &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewritebase&quot;&gt;RewriteBase&lt;/a&gt;&lt;/code&gt; 지시문은 대체 앞에 추가 된 URL 경로 접두사를 결정합니다. 디렉토리 별 컨텍스트에서 루핑을 피하기 위해 대체 (디렉토리 당 다시 쓰기 처리의 &quot;일부&quot;)가 대체를 수행하지 않는 규칙을 작성하도록주의를 기울여야합니다. 이 문제에 대한 자세한 내용은 &lt;a href=&quot;http://wiki.apache.org/httpd/RewriteLooping&quot;&gt;RewriteLooping&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b39e5af7d41f7d0b14a4cc4c978f694750441deb" translate="yes" xml:space="preserve">
          <source>If a substitution occurred and the rewriting continues, the value of both variables will be updated accordingly.</source>
          <target state="translated">대체가 발생하고 다시 쓰기가 계속되면 두 변수의 값이 그에 따라 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="835ba3c2558fd7f0a09cd539b5892b8dea75bd58" translate="yes" xml:space="preserve">
          <source>If a variable reference needs to be substituted in the middle of a character sequence that might otherwise be considered a valid identifier in its own right, it can be disambiguated by enclosing the reference in braces, &lt;em&gt;a la&lt;/em&gt; shell substitution:</source>
          <target state="translated">변수 참조의 요구는 달리 그 자체로 유효한 식별자로 간주 될 수있는 문자 순서의 중간에 교체 할 경우에는 괄호의 참조, 둘러 싸서으로 명확 할 수있다 &lt;em&gt;라&lt;/em&gt; 쉘 대체를 :</target>
        </trans-unit>
        <trans-unit id="9b7e7959a08cd7a4e5876c2c63ccd40010a400d5" translate="yes" xml:space="preserve">
          <source>If a vhost has no &lt;code&gt;&lt;a href=&quot;../mod/core#serveradmin&quot;&gt;ServerAdmin&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../mod/core#timeout&quot;&gt;Timeout&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../mod/core#keepalivetimeout&quot;&gt;KeepAliveTimeout&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../mod/core#keepalive&quot;&gt;KeepAlive&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../mod/core#maxkeepaliverequests&quot;&gt;MaxKeepAliveRequests&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../mod/mpm_common#receivebuffersize&quot;&gt;ReceiveBufferSize&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;../mod/mpm_common#sendbuffersize&quot;&gt;SendBufferSize&lt;/a&gt;&lt;/code&gt; directive then the respective value is inherited from the main server. (That is, inherited from whatever the final setting of that value is in the main server.)</source>
          <target state="translated">호스트에 &lt;code&gt;&lt;a href=&quot;../mod/core#serveradmin&quot;&gt;ServerAdmin&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../mod/core#timeout&quot;&gt;Timeout&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../mod/core#keepalivetimeout&quot;&gt;KeepAliveTimeout&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../mod/core#keepalive&quot;&gt;KeepAlive&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../mod/core#maxkeepaliverequests&quot;&gt;MaxKeepAliveRequests&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../mod/mpm_common#receivebuffersize&quot;&gt;ReceiveBufferSize&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;../mod/mpm_common#sendbuffersize&quot;&gt;SendBufferSize&lt;/a&gt;&lt;/code&gt; 지시문이없는 경우 각 값은 기본 서버에서 상속됩니다. (즉, 해당 값의 최종 설정이 기본 서버에있는 것에서 상속됩니다.)</target>
        </trans-unit>
        <trans-unit id="d6ed485c507caa9e706e8823aa4e980867ed25c7" translate="yes" xml:space="preserve">
          <source>If all attempts to locate the content fail, httpd returns an error page with HTTP status code 404 (file not found). The appearance of this page is controlled with the &lt;code&gt;&lt;a href=&quot;mod/core#errordocument&quot;&gt;ErrorDocument&lt;/a&gt;&lt;/code&gt; directive and can be customized in a flexible manner as discussed in the &lt;a href=&quot;custom-error&quot;&gt;Custom error responses&lt;/a&gt; document.</source>
          <target state="translated">내용을 찾으려는 모든 시도가 실패하면 httpd는 HTTP 상태 코드 404 (파일을 찾을 수 없음)와 함께 오류 페이지를 반환합니다. 이 페이지의 모양은 &lt;code&gt;&lt;a href=&quot;mod/core#errordocument&quot;&gt;ErrorDocument&lt;/a&gt;&lt;/code&gt; 지시문으로 제어되며 &lt;a href=&quot;custom-error&quot;&gt;사용자 정의 오류 응답&lt;/a&gt; 문서에 설명 된대로 유연한 방식으로 사용자 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="147a831be04322b14f95aa0760293812d6de6047" translate="yes" xml:space="preserve">
          <source>If all goes well during startup, the server will detach from the terminal and the command prompt will return almost immediately. This indicates that the server is up and running. You can then use your browser to connect to the server and view the test page in the &lt;code&gt;&lt;a href=&quot;mod/core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt; directory.</source>
          <target state="translated">시작하는 동안 모든 것이 제대로 진행되면 서버가 터미널에서 분리되고 명령 프롬프트가 거의 즉시 반환됩니다. 이는 서버가 작동 중임을 나타냅니다. 그런 다음 브라우저를 사용하여 서버에 연결하고 &lt;code&gt;&lt;a href=&quot;mod/core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt; 디렉토리 에서 테스트 페이지를 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="518b0f7253629879fa550c74e30b4b574a8108ed" translate="yes" xml:space="preserve">
          <source>If all load balancer set &lt;code&gt;0&lt;/code&gt; workers, spares, and the standby are unavailable, only then will the &lt;code&gt;http://bkup1.example.com:8080&lt;/code&gt; and &lt;code&gt;http://bkup2.example.com:8080&lt;/code&gt; workers from balancer set &lt;code&gt;1&lt;/code&gt; be brought into rotation.</source>
          <target state="translated">모든로드 밸런서 세트 &lt;code&gt;0&lt;/code&gt; 작업자, 예비 및 대기를 사용할 수없는 경우 밸런서 세트 &lt;code&gt;1&lt;/code&gt; 의 &lt;code&gt;http://bkup1.example.com:8080&lt;/code&gt; 및 &lt;code&gt;http://bkup2.example.com:8080&lt;/code&gt; 작업자 만 가져옵니다. 회전으로.</target>
        </trans-unit>
        <trans-unit id="40f6ebed2ea9a304ed8ef9cf6f83c10e56c13f49" translate="yes" xml:space="preserve">
          <source>If all the processes have all threads idle then:</source>
          <target state="translated">모든 프로세스에 모든 스레드가 유휴 상태 인 경우 :</target>
        </trans-unit>
        <trans-unit id="3637a20cfea1a331ba498717f7bf10c7ed5eea3c" translate="yes" xml:space="preserve">
          <source>If all you wish to do is deny access to the resource, rather than redirecting that request elsewhere, this can be accomplished without the use of mod_rewrite:</source>
          <target state="translated">요청을 다른 곳으로 리디렉션하지 않고 리소스에 대한 액세스를 거부하기 만하면 mod_rewrite를 사용하지 않고도이 작업을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="46bd5fbbc42f8a3f5b9d8bf29ca38ddb91b6cc82" translate="yes" xml:space="preserve">
          <source>If an SSL renegotiation is required in per-location context, for example, any use of &lt;code&gt;&lt;a href=&quot;#sslverifyclient&quot;&gt;SSLVerifyClient&lt;/a&gt;&lt;/code&gt; in a Directory or Location block, then &lt;code&gt;&lt;a href=&quot;mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; must buffer any HTTP request body into memory until the new SSL handshake can be performed. This directive can be used to set the amount of memory that will be used for this buffer.</source>
          <target state="translated">예를 들어 Directory 또는 Location 블록에서 &lt;code&gt;&lt;a href=&quot;#sslverifyclient&quot;&gt;SSLVerifyClient&lt;/a&gt;&lt;/code&gt; 를 사용하는 등의 위치 별 컨텍스트에서 SSL 재협상이 필요한 경우 &lt;code&gt;&lt;a href=&quot;mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; 은 새 SSL 핸드 셰이크가 수행 될 때까지 HTTP 요청 본문을 메모리에 버퍼링해야합니다. 이 지정 문은이 버퍼에 사용될 메모리 양을 설정하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b5b44f7c11e8e27b4374414ac701207d90e8f0aa" translate="yes" xml:space="preserve">
          <source>If an absolute URL is specified, &lt;code&gt;&lt;a href=&quot;mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; checks to see whether the hostname matches the current host. If it does, the scheme and hostname are stripped out and the resulting path is treated as a URL-path. Otherwise, an external redirect is performed for the given URL. To force an external redirect back to the current host, see the &lt;code&gt;[R]&lt;/code&gt; flag below.</source>
          <target state="translated">절대 URL을 지정하면 &lt;code&gt;&lt;a href=&quot;mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; 는 호스트 이름이 현재 호스트와 일치하는지 확인합니다. 그럴 경우 체계와 호스트 이름이 제거되고 결과 경로가 URL 경로로 처리됩니다. 그렇지 않으면 지정된 URL에 대해 외부 리디렉션이 수행됩니다. 외부 호스트를 현재 호스트로 강제로 되돌리려면 아래 의 &lt;code&gt;[R]&lt;/code&gt; 플래그를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="62c656cf12e4b981be66febc5d4cb839cb1e5860" translate="yes" xml:space="preserve">
          <source>If an attempt to update the session affects no rows, the insert query will be called to insert the session into the database. If the database supports InsertOrUpdate, override this query to perform the update in one query instead of two.</source>
          <target state="translated">세션 업데이트 시도가 행에 영향을주지 않으면 데이터베이스에 세션을 삽입하기 위해 삽입 쿼리가 호출됩니다. 데이터베이스가 InsertOrUpdate를 지원하는 경우이 쿼리를 재정 의하여 두 쿼리 대신 한 쿼리에서 업데이트를 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="964968ee5a04d4a24330755167a82b6b1deb1170" translate="yes" xml:space="preserve">
          <source>If an attempt to update the session affects no rows, this query will be called to insert the session into the database.</source>
          <target state="translated">세션 업데이트 시도가 행에 영향을 미치지 않으면이 쿼리가 호출되어 세션을 데이터베이스에 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="25a80c0a1f1ebbaf8d89be268772e0a2dcea61b1" translate="yes" xml:space="preserve">
          <source>If an authentication check has been made, this is set to the name of the authenticated user.</source>
          <target state="translated">인증 확인이 이루어진 경우 인증 된 사용자 이름으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="ebceca98835ea4465f5e63ab46f15c9d2fd86924" translate="yes" xml:space="preserve">
          <source>If an authentication check was made, this is set to the type of authentication (f.x. &lt;code&gt;basic&lt;/code&gt;)</source>
          <target state="translated">인증 확인을 한 경우 인증 유형 (fx &lt;code&gt;basic&lt;/code&gt; )으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="bd1539ad4a0063718fdfa5336feb70d63fe87ac8" translate="yes" xml:space="preserve">
          <source>If an encoding is declared in an HTML &lt;code&gt;&amp;lt;META&amp;gt;&lt;/code&gt; element, that is used.</source>
          <target state="translated">인코딩이 HTML &lt;code&gt;&amp;lt;META&amp;gt;&lt;/code&gt; 요소에 선언되면 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="0dc8fa7317fa3f9e7035bc4fde7700aaeb86859d" translate="yes" xml:space="preserve">
          <source>If an error can be detected within the configuration, this directive can be used to generate a custom error message, and halt configuration parsing. The typical use is for reporting required modules which are missing from the configuration.</source>
          <target state="translated">구성 내에서 오류가 감지되면이 지정 문을 사용하여 사용자 정의 오류 메시지를 생성하고 구성 구문 분석을 중지 할 수 있습니다. 일반적으로 구성에서 누락 된 필수 모듈을보고하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="7cf2ad2ce57944b9c32aa3708dbc36b672c60b08" translate="yes" xml:space="preserve">
          <source>If an ldaps:// URL is specified, the mode becomes SSL and the setting of LDAPTrustedMode is ignored.</source>
          <target state="translated">ldaps : // URL을 지정하면 모드가 SSL이되고 LDAPTrustedMode 설정이 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="2ac1fb0ef2ad6db9709f8075f688cf1262a63b5c" translate="yes" xml:space="preserve">
          <source>If apache is running in a protected address space specify the address space in the unload statement:</source>
          <target state="translated">아파치가 보호 된 주소 공간에서 실행중인 경우 unload 문에 주소 공간을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="123f8497de7f9539f9218e5e627fcc61c494ad37" translate="yes" xml:space="preserve">
          <source>If at all possible, avoid content negotiation if you're really interested in every last ounce of performance. In practice the benefits of negotiation outweigh the performance penalties. There's one case where you can speed up the server. Instead of using a wildcard such as:</source>
          <target state="translated">가능하면 모든 마지막 성능에 관심이 있다면 컨텐츠 협상을 피하십시오. 실제로 협상의 이점은 성과 처벌보다 중요합니다. 서버 속도를 높일 수있는 경우가 있습니다. 다음과 같은 와일드 카드를 사용하는 대신 :</target>
        </trans-unit>
        <trans-unit id="659d76c805ba67f560c91d9b3040ccd01b26e1d6" translate="yes" xml:space="preserve">
          <source>If authentication succeeds but authorization fails, Apache HTTPD will respond with an HTTP response code of '401 UNAUTHORIZED' by default. This usually causes browsers to display the password dialogue to the user again, which is not wanted in all situations. &lt;code&gt;AuthzSendForbiddenOnFailure&lt;/code&gt; allows to change the response code to '403 FORBIDDEN'.</source>
          <target state="translated">인증에 성공했지만 권한 부여에 실패하면 Apache HTTPD는 기본적으로 HTTP 응답 코드 '401 UNAUTHORIZED'로 응답합니다. 이로 인해 일반적으로 브라우저가 사용자에게 비밀번호 대화 상자를 다시 표시하므로 모든 상황에서 원하지는 않습니다. &lt;code&gt;AuthzSendForbiddenOnFailure&lt;/code&gt; 는 응답 코드를 '403 FORBIDDEN'으로 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ee59536cf35e4291f76185245b4174851904ef62" translate="yes" xml:space="preserve">
          <source>If awk.exe is not found, Makefile.win's install target will not perform substitutions in the installed .conf files. You must manually modify the installed .conf files to allow the server to start. Search and replace all &quot;@token@&quot; tags as appropriate.</source>
          <target state="translated">awk.exe를 찾을 수 없으면 Makefile.win의 설치 대상이 설치된 .conf 파일에서 대체를 수행하지 않습니다. 서버가 시작되도록 설치된 .conf 파일을 수동으로 수정해야합니다. 모든 &quot;@ token @&quot;태그를 적절히 검색하고 교체하십시오.</target>
        </trans-unit>
        <trans-unit id="449e86fd999468b4e3c4c87795dc5ced0351482a" translate="yes" xml:space="preserve">
          <source>If backreferences are being escaped, spaces should be escaped to %20 instead of +. Useful when the backreference will be used in the path component rather than the query string.&lt;em&gt;&lt;a href=&quot;../rewrite/flags#flag_bnp&quot;&gt;details ...&lt;/a&gt;&lt;/em&gt;</source>
          <target state="translated">역 참조가 이스케이프되는 경우 공백이 + 대신 % 20으로 이스케이프되어야합니다. 역 참조가 쿼리 문자열이 아닌 경로 구성 요소에서 사용될 때 유용합니다. &lt;em&gt;&lt;a href=&quot;../rewrite/flags#flag_bnp&quot;&gt;세부 사항 ...&lt;/a&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f859fa5bfd6a3f254f1845343a9a04b1db03b946" translate="yes" xml:space="preserve">
          <source>If configured Off, the client supplied list order of protocols has precedence over the order in the server configuration.</source>
          <target state="translated">Off로 구성하면 클라이언트가 제공 한 프로토콜 목록 순서가 서버 구성 순서보다 우선합니다.</target>
        </trans-unit>
        <trans-unit id="4d064f03e29955bb235e12e66fe757aaccef6cb1" translate="yes" xml:space="preserve">
          <source>If configured to send data as part of the test, this is the total number of bytes sent during the tests. This field is omitted if the test did not include a body to send.</source>
          <target state="translated">테스트의 일부로 데이터를 보내도록 구성된 경우 테스트 중 전송 된 총 바이트 수입니다. 테스트에 전송할 본문이 포함되지 않은 경우이 필드는 생략됩니다.</target>
        </trans-unit>
        <trans-unit id="8d8f83ab363fb8508b614ca73bd6931af59f8bf2" translate="yes" xml:space="preserve">
          <source>If configured, sessions are tracked through the use of a session ID that is stored inside a cookie, or extracted from the parameters embedded within the URL query string, as found in a typical GET request.</source>
          <target state="translated">구성된 경우 일반적인 GET 요청에서 볼 수 있듯이 쿠키 내에 저장되거나 URL 쿼리 문자열에 포함 된 매개 변수에서 추출 된 세션 ID를 사용하여 세션이 추적됩니다.</target>
        </trans-unit>
        <trans-unit id="bb156c741759994b77e65ae9c522a3647c3fbfab" translate="yes" xml:space="preserve">
          <source>If configured, the session can be read back from the HTTP_SESSION environment variable. By default, the session is kept private, so this has to be explicitly turned on with the &lt;code&gt;&lt;a href=&quot;#sessionenv&quot;&gt;SessionEnv&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">구성된 경우 HTTP_SESSION 환경 변수에서 세션을 다시 읽을 수 있습니다. 기본적으로 세션은 비공개로 유지되므로 &lt;code&gt;&lt;a href=&quot;#sessionenv&quot;&gt;SessionEnv&lt;/a&gt;&lt;/code&gt; 지시문 을 사용하여 명시 적으로 설정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="04fff39f793a051fafc3eddd6fdbeb6afa2245ee" translate="yes" xml:space="preserve">
          <source>If content changes often, expressed by a freshness lifetime of minutes or seconds, the content can still be cached, however it is highly desirable that the origin server supports &lt;strong&gt;conditional requests&lt;/strong&gt; correctly to ensure that full responses do not have to be generated on a regular basis.</source>
          <target state="translated">컨텐츠가 자주 (몇 분 또는 몇 초의 신선도 수명으로 표시됨) 변경되는 경우 컨텐츠를 계속 캐시 할 수 있지만 오리진 서버가 &lt;strong&gt;조건부 요청을&lt;/strong&gt; 올바르게 지원 하여 정기적으로 전체 응답을 생성하지 않아도되도록하는 것이 매우 바람직합니다. .</target>
        </trans-unit>
        <trans-unit id="6b9c4381d6230812286b3ef487578325a727958b" translate="yes" xml:space="preserve">
          <source>If each party has a certificate which validates the other's identity, confirms the public key and is signed by a trusted agency, then both can be assured that they are communicating with whom they think they are. Such a trusted agency is called a &lt;em&gt;Certificate Authority&lt;/em&gt; and certificates are used for authentication.</source>
          <target state="translated">각 당사자에게 상대방의 신원을 확인하고 공개 키를 확인하며 신뢰할 수있는 기관이 서명 한 인증서가있는 경우 둘 다 자신이 생각하는 사람과 통신하고 있음을 보증 할 수 있습니다. 이러한 신뢰할 수있는 기관을 &lt;em&gt;인증 기관&lt;/em&gt; 이라고하며 &lt;em&gt;인증에&lt;/em&gt; 인증서가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6f9ec5b83bb8d6c2b1a9df0a3cc5ca736cadf8a4" translate="yes" xml:space="preserve">
          <source>If either the pattern or the substitution contain a slash character then an alternative delimiter may be used to make the directive more readable:</source>
          <target state="translated">패턴 또는 대체에 슬래시 문자가 포함 된 경우 대체 구분 기호를 사용하여 지시문을 더 읽기 쉽게 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="36a62deaadc595248aea81100d9c653cf431562a" translate="yes" xml:space="preserve">
          <source>If enabled, the Global Catalog is an independent directory server that runs on port 3268 (3269 for SSL). To search for a user, do a subtree search for the attribute &lt;em&gt;userPrincipalName&lt;/em&gt;, with an empty search root, like so:</source>
          <target state="translated">사용 가능한 경우, 글로벌 카탈로그는 포트 3268 (SSL의 경우 3269)에서 실행되는 독립 디렉토리 서버입니다. 사용자를 검색하려면 빈 검색 루트를 사용하여 &lt;em&gt;userPrincipalName&lt;/em&gt; 속성에 대한 서브 트리 검색을 수행하십시오 .</target>
        </trans-unit>
        <trans-unit id="5d2ce63ca762e2fec964df0886bed9fccdb80069" translate="yes" xml:space="preserve">
          <source>If encoded slashes are needed in path info, use of &lt;code&gt;NoDecode&lt;/code&gt; is strongly recommended as a security measure. Allowing slashes to be decoded could potentially allow unsafe paths.</source>
          <target state="translated">경로 정보에 인코딩 된 슬래시가 필요한 경우 보안 조치로 &lt;code&gt;NoDecode&lt;/code&gt; 를 사용 하는 것이 좋습니다. 슬래시를 디코딩하면 안전하지 않은 경로가 허용 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="965c48d9e24b144a472c5500b3e967b1828a6cfa" translate="yes" xml:space="preserve">
          <source>If even more flexible matching is required, each container has a regular expression (regex) counterpart &lt;code&gt;&lt;a href=&quot;mod/core#directorymatch&quot;&gt;&amp;lt;DirectoryMatch&amp;gt;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod/core#filesmatch&quot;&gt;&amp;lt;FilesMatch&amp;gt;&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;mod/core#locationmatch&quot;&gt;&amp;lt;LocationMatch&amp;gt;&lt;/a&gt;&lt;/code&gt; that allow perl-compatible &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#regex&quot;&gt;regular expressions&lt;/a&gt; to be used in choosing the matches. But see the section below on configuration merging to find out how using regex sections will change how directives are applied.</source>
          <target state="translated">보다 유연한 일치가 필요한 경우 각 컨테이너에는 정규식 (regex) 대응 &lt;code&gt;&lt;a href=&quot;mod/core#directorymatch&quot;&gt;&amp;lt;DirectoryMatch&amp;gt;&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;mod/core#filesmatch&quot;&gt;&amp;lt;FilesMatch&amp;gt;&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;mod/core#locationmatch&quot;&gt;&amp;lt;LocationMatch&amp;gt;&lt;/a&gt;&lt;/code&gt; 가있어 perl 호환 &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#regex&quot;&gt;정규식&lt;/a&gt; 을 사용하여 일치 항목을 선택할 수 있습니다. 그러나 정규식 섹션을 사용하여 지시문 적용 방법을 변경하는 방법을 알아 보려면 구성 병합에 대한 아래 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="3cff94e726613ec82b0d149d73860e96b77d85a7" translate="yes" xml:space="preserve">
          <source>If for example, a response is received with a vary header such as;</source>
          <target state="translated">예를 들어, 다음과 같은 가변 헤더로 응답이 수신됩니다.</target>
        </trans-unit>
        <trans-unit id="5e8c3e9042f0b2f0b8634b0ff3a1fad5e4a056a1" translate="yes" xml:space="preserve">
          <source>If for example, your web server is configured to run as:</source>
          <target state="translated">예를 들어, 웹 서버가 다음과 같이 실행되도록 구성되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="d031b4078a918cde7cbaa955c17ca5307754ce11" translate="yes" xml:space="preserve">
          <source>If given, &lt;code&gt;rotatelogs&lt;/code&gt; will execute the specified program every time a new log file is opened. The filename of the newly opened file is passed as the first argument to the program. If executing after a rotation, the old log file is passed as the second argument. &lt;code&gt;rotatelogs&lt;/code&gt; does not wait for the specified program to terminate before continuing to operate, and will not log any error code returned on termination. The spawned program uses the same stdin, stdout, and stderr as rotatelogs itself, and also inherits the environment.</source>
          <target state="translated">주어진 경우, 새 로그 파일을 열 때마다 &lt;code&gt;rotatelogs&lt;/code&gt; 가 지정된 프로그램을 실행합니다. 새로 열린 파일의 파일 이름이 프로그램의 첫 번째 인수로 전달됩니다. 회전 후에 실행하면 이전 로그 파일이 두 번째 인수로 전달됩니다. &lt;code&gt;rotatelogs&lt;/code&gt; 는 작업을 계속하기 전에 지정된 프로그램이 종료 될 때까지 기다리지 않으며 종료시 반환 된 오류 코드를 기록하지 않습니다. 생성 된 프로그램은 회전 로그 자체와 동일한 stdin, stdout 및 stderr을 사용하며 환경도 상속합니다.</target>
        </trans-unit>
        <trans-unit id="751bb3d8dc2b8b188ffd3c519bfd3a7dc19afd5a" translate="yes" xml:space="preserve">
          <source>If headers like &lt;code&gt;Expires&lt;/code&gt; which are needed for proper cache management are not stored due to a &lt;code&gt;CacheIgnoreHeaders&lt;/code&gt; setting, the behaviour of mod_cache is undefined.</source>
          <target state="translated">&lt;code&gt;CacheIgnoreHeaders&lt;/code&gt; 설정 으로 인해 적절한 캐시 관리에 필요한 &lt;code&gt;Expires&lt;/code&gt; 와 같은 헤더 가 저장되지 않으면 mod_cache의 동작은 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="52036b9e9d6f3ec9e88aea1fb78ae6c79b191dec" translate="yes" xml:space="preserve">
          <source>If httpd was built against &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#apr&quot;&gt;APR&lt;/a&gt; version 1.3.0 or higher, any additional column values in the first row returned by the query statement will be stored as environment variables with names of the form &lt;code&gt;AUTHENTICATE_COLUMN&lt;/code&gt;.</source>
          <target state="translated">httpd가 &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#apr&quot;&gt;APR&lt;/a&gt; 버전 1.3.0 이상 에 대해 빌드 된 경우 , 조회 문에 의해 리턴되는 첫 번째 행의 추가 열 값은 이름이 &lt;code&gt;AUTHENTICATE_COLUMN&lt;/code&gt; 형식의 환경 변수로 저장됩니다 .</target>
        </trans-unit>
        <trans-unit id="286e09d9594b85b2fdc8dd862f4abe68b1ccc468" translate="yes" xml:space="preserve">
          <source>If httpd was built against &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#apr&quot;&gt;APR&lt;/a&gt; version 1.3.0 or higher, then whenever a query is made to the database server, all column values in the first row returned by the query are placed in the environment, using environment variables with the prefix &quot;AUTHENTICATE_&quot;.</source>
          <target state="translated">httpd가 &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#apr&quot;&gt;APR&lt;/a&gt; 버전 1.3.0 이상 에 대해 빌드 된 경우 데이터베이스 서버에 쿼리 할 때마다 &quot;AUTHENTICATE_&quot;접두어가있는 환경 변수를 사용하여 쿼리에 의해 리턴 된 첫 번째 행의 모든 ​​열 값이 환경에 배치됩니다. .</target>
        </trans-unit>
        <trans-unit id="47b1fe27760cf8fcf92e4363bd3650b16df870d1" translate="yes" xml:space="preserve">
          <source>If httpd was compiled against an SSL library which did not support the FIPS_mode flag, &lt;code&gt;SSLFIPS on&lt;/code&gt; will fail. Refer to the FIPS 140-2 Security Policy document of the SSL provider library for specific requirements to use mod_ssl in a FIPS 140-2 approved mode of operation; note that mod_ssl itself is not validated, but may be described as using FIPS 140-2 validated cryptographic module, when all components are assembled and operated under the guidelines imposed by the applicable Security Policy.</source>
          <target state="translated">FIPS_mode 플래그를 지원하지 않는 SSL 라이브러리에 대해 httpd가 컴파일 된 경우 &lt;code&gt;SSLFIPS on&lt;/code&gt; 이 실패합니다. FIPS 140-2 승인 작동 모드에서 mod_ssl을 사용하기위한 특정 요구 사항은 SSL 제공자 라이브러리의 FIPS 140-2 보안 정책 문서를 참조하십시오. mod_ssl 자체는 검증되지 않지만 모든 구성 요소가 적용 가능한 보안 정책에 의해 부과 된 지침에 따라 조립되고 작동 될 때 FIPS 140-2 검증 된 암호화 모듈을 사용하는 것으로 설명 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="555d025e37cdd1997d1c0abe18c36990e61a909c" translate="yes" xml:space="preserve">
          <source>If interpolation is not enabled, all rules are pre-compiled at startup. With interpolation, they must be re-compiled for every request, which implies an extra processing overhead. It should therefore be enabled only when necessary.</source>
          <target state="translated">보간을 사용하지 않으면 시작시 모든 규칙이 미리 컴파일됩니다. 보간을 사용하면 모든 요청에 ​​대해 다시 컴파일해야하므로 추가 처리 오버 헤드가 발생합니다. 따라서 필요할 때만 활성화해야합니다.</target>
        </trans-unit>
        <trans-unit id="7ea358f5a77421472cb766fa6a7f119214881ea2" translate="yes" xml:space="preserve">
          <source>If it cannot write its data, the child process exits immediately and may dump core (depending on your &lt;code&gt;&lt;a href=&quot;mpm_common#coredumpdirectory&quot;&gt;CoreDumpDirectory&lt;/a&gt;&lt;/code&gt; configuration).</source>
          <target state="translated">데이터를 쓸 수 없으면 하위 프로세스가 즉시 종료되고 &lt;code&gt;&lt;a href=&quot;mpm_common#coredumpdirectory&quot;&gt;CoreDumpDirectory&lt;/a&gt;&lt;/code&gt; 구성 에 따라 코어가 덤프 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a1d50d18aedaf910c967269b3f4c991f7506c5c8" translate="yes" xml:space="preserve">
          <source>If it doesn't exist, it can't very well contain files. If we can't change directory to it, it might as well not exist.</source>
          <target state="translated">존재하지 않으면 파일을 잘 포함 할 수 없습니다. 디렉토리를 변경할 수 없으면 존재하지 않을 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="fea0851c412528381fd5288923c2f693f5bf6112" translate="yes" xml:space="preserve">
          <source>If it doesn't exists, it can't very well be executed.</source>
          <target state="translated">존재하지 않으면 잘 실행할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="5d2c0fec54cd078e4b4b410f16fcc6d6f456324c" translate="yes" xml:space="preserve">
          <source>If mod_authnz_fcgi runs in an EBCDIC compilation environment, all FastCGI protocol data is written in EBCDIC and expected to be received in EBCDIC.</source>
          <target state="translated">mod_authnz_fcgi가 EBCDIC 컴파일 환경에서 실행되면 모든 FastCGI 프로토콜 데이터가 EBCDIC으로 작성되고 EBCDIC에서 수신 될 것으로 예상됩니다.</target>
        </trans-unit>
        <trans-unit id="3426a4d4d9247ba6889274944a77bafb31804139" translate="yes" xml:space="preserve">
          <source>If mod_ssl logs error AH02217</source>
          <target state="translated">mod_ssl이 오류 AH02217을 기록하는 경우</target>
        </trans-unit>
        <trans-unit id="187e8611c2c347114c69ede50940676b6ada0ece" translate="yes" xml:space="preserve">
          <source>If more than a few SSL certificates are used for the server</source>
          <target state="translated">서버에 SSL 인증서가 몇 개 이상 사용 된 경우</target>
        </trans-unit>
        <trans-unit id="826566f78d16ee315591712d8b150b933bdf5e12" translate="yes" xml:space="preserve">
          <source>If more than a few dozen piped loggers are used on an operating system instance, scaling up the &quot;desktop heap&quot; is often necessary. For more detailed information, refer to the &lt;a href=&quot;../logs#piped&quot;&gt;piped logging&lt;/a&gt; documentation.</source>
          <target state="translated">운영 체제 인스턴스에서 수십 개 이상의 파이프 로거를 사용하는 경우 &quot;데스크톱 힙&quot;을 확장해야하는 경우가 종종 있습니다. 자세한 정보는 &lt;a href=&quot;../logs#piped&quot;&gt;파이프 로깅&lt;/a&gt; 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ddb206953830064f50466c6cdfba161af883c2ff" translate="yes" xml:space="preserve">
          <source>If more than one &lt;var&gt;filter&lt;/var&gt; is specified, they must be separated by semicolons in the order in which they should process the content. The &lt;var&gt;filter&lt;/var&gt; is case-insensitive.</source>
          <target state="translated">둘 이상의 &lt;var&gt;filter&lt;/var&gt; 가 지정된 경우 컨텐츠를 처리해야하는 순서대로 세미콜론으로 분리해야합니다. &lt;var&gt;filter&lt;/var&gt; 대소 문자를 구분한다.</target>
        </trans-unit>
        <trans-unit id="f181dafefb33f55161e307ca0cedb2e428be8ca2" translate="yes" xml:space="preserve">
          <source>If more than one filter is specified, they must be separated by semicolons in the order in which they should process the content.</source>
          <target state="translated">둘 이상의 필터가 지정된 경우 컨텐츠를 처리해야하는 순서대로 세미콜론으로 분리해야합니다.</target>
        </trans-unit>
        <trans-unit id="ff4988ab71750e2cf944b889996d799bcd663856" translate="yes" xml:space="preserve">
          <source>If more than one filter is specified, they must be separated by semicolons in the order in which they should process the content. The &lt;var&gt;filter&lt;/var&gt; argument is case-insensitive.</source>
          <target state="translated">둘 이상의 필터가 지정된 경우 컨텐츠를 처리해야하는 순서대로 세미콜론으로 분리해야합니다. &lt;var&gt;filter&lt;/var&gt; 인수는 대소 문자를 구분한다.</target>
        </trans-unit>
        <trans-unit id="dc258ddd66e6cc7cb70bba045a34410c9e10b01f" translate="yes" xml:space="preserve">
          <source>If multiple (non-regular expression) &lt;code&gt;&amp;lt;Directory&amp;gt;&lt;/code&gt; sections match the directory (or one of its parents) containing a document, then the directives are applied in the order of shortest match first, interspersed with the directives from the &lt;a href=&quot;#accessfilename&quot;&gt;.htaccess&lt;/a&gt; files. For example, with</source>
          <target state="translated">여러 개의 (정규 표현식이 아닌) &lt;code&gt;&amp;lt;Directory&amp;gt;&lt;/code&gt; 섹션이 문서를 포함하는 디렉토리 (또는 상위 디렉토리 중 하나)와 일치하는 경우, 지시문은 &lt;a href=&quot;#accessfilename&quot;&gt;.htaccess&lt;/a&gt; 파일 의 지시문과 함께 가장 짧은 일치 순서로 먼저 적용됩니다 . 예를 들어</target>
        </trans-unit>
        <trans-unit id="70c09c4fa66484fd83e878165c0ebd9e1b52be60" translate="yes" xml:space="preserve">
          <source>If multiple &lt;code&gt;&lt;a href=&quot;mod/core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; sections apply to the same directory they are processed in the configuration file order.</source>
          <target state="translated">여러 &lt;code&gt;&lt;a href=&quot;mod/core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; 섹션이 동일한 디렉토리에 적용되는 경우 구성 파일 순서로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="9a920797bf973a544f7722b160d7af82458c5002" translate="yes" xml:space="preserve">
          <source>If multiple SSL-enabled virtual hosts are configured and OCSP Stapling should be disabled for some</source>
          <target state="translated">여러 SSL 사용 가상 호스트가 구성되어 있고 일부에 대해 OCSP 스테이플 링을 사용하지 않아야하는 경우</target>
        </trans-unit>
        <trans-unit id="12a8cf64c9e8327f60bc74c2c2cdcd59ceece965" translate="yes" xml:space="preserve">
          <source>If multiple language assignments are made for the same extension, the last one encountered is the one that is used. That is, for the case of:</source>
          <target state="translated">동일한 확장에 대해 여러 언어를 할당 한 경우 마지막으로 발생한 언어가 사용됩니다. 즉, 다음과 같은 경우입니다.</target>
        </trans-unit>
        <trans-unit id="d8331037b733855a9a3cf241d755201a0c056ca2" translate="yes" xml:space="preserve">
          <source>If multiple virtual hosts contain the best matching IP address and port, the server selects from these virtual hosts the best match based on the requested hostname. If no matching name-based virtual host is found, then the first listed virtual host that matched the IP address will be used. As a consequence, the first listed virtual host for a given IP address and port combination is the default virtual host for that IP and port combination.</source>
          <target state="translated">여러 가상 호스트에 가장 일치하는 IP 주소 및 포트가 포함 된 경우 서버는 이러한 가상 호스트에서 요청 된 호스트 이름을 기반으로 가장 일치하는 것을 선택합니다. 일치하는 이름 기반 가상 호스트가 없으면 IP 주소와 일치하는 첫 번째로 나열된 가상 호스트가 사용됩니다. 결과적으로, 주어진 IP 주소 및 포트 조합에 대해 첫 번째로 나열된 가상 호스트는 해당 IP 및 포트 조합에 대한 기본 가상 호스트입니다.</target>
        </trans-unit>
        <trans-unit id="0d1d97a1e1fd7efa47e840a97d43594eadd31775" translate="yes" xml:space="preserve">
          <source>If necessary, you can also create a decrypted PEM version (not recommended) of this RSA private key with:</source>
          <target state="translated">필요한 경우 다음을 사용하여이 RSA 개인 키의 암호 해독 된 PEM 버전 (권장하지 않음)을 만들 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="28dc1e39d530b2691af661d90ee7156cac4a6c15" translate="yes" xml:space="preserve">
          <source>If neither of the directives &lt;code&gt;&lt;a href=&quot;#sslcadnrequestpath&quot;&gt;SSLCADNRequestPath&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#sslcadnrequestfile&quot;&gt;SSLCADNRequestFile&lt;/a&gt;&lt;/code&gt; are given, then the set of acceptable CA names sent to the client is the names of all the CA certificates given by the &lt;code&gt;&lt;a href=&quot;#sslcacertificatefile&quot;&gt;SSLCACertificateFile&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#sslcacertificatepath&quot;&gt;SSLCACertificatePath&lt;/a&gt;&lt;/code&gt; directives; in other words, the names of the CAs which will actually be used to verify the client certificate.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#sslcadnrequestpath&quot;&gt;SSLCADNRequestPath&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;#sslcadnrequestfile&quot;&gt;SSLCADNRequestFile&lt;/a&gt;&lt;/code&gt; 지시문이 제공되지 않으면 클라이언트로 전송되는 허용 가능한 CA 이름 세트는 &lt;code&gt;&lt;a href=&quot;#sslcacertificatefile&quot;&gt;SSLCACertificateFile&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#sslcacertificatepath&quot;&gt;SSLCACertificatePath&lt;/a&gt;&lt;/code&gt; 지시문이 제공 한 모든 CA 인증서의 이름입니다 . 즉, 실제로 클라이언트 인증서를 확인하는 데 사용되는 CA의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="f5ea380f1388db5ae37484391546831f23b33865" translate="yes" xml:space="preserve">
          <source>If neither of these files existed, the next step is to attempt to provide a directory index, if &lt;code&gt;&lt;a href=&quot;mod/mod_autoindex&quot;&gt;mod_autoindex&lt;/a&gt;&lt;/code&gt; is loaded and configured to permit that.</source>
          <target state="translated">이 파일 중 어느 것도 존재하지 않으면 다음 단계는 &lt;code&gt;&lt;a href=&quot;mod/mod_autoindex&quot;&gt;mod_autoindex&lt;/a&gt;&lt;/code&gt; 가로 드되고이를 허용하도록 구성된 경우 디렉토리 색인을 제공하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="11e38a88168944e3489369b9585928d6014e90f6" translate="yes" xml:space="preserve">
          <source>If neither the &lt;code&gt;enabled&lt;/code&gt; nor the &lt;code&gt;disabled&lt;/code&gt; keywords appear in the &lt;code&gt;Userdir&lt;/code&gt; directive, the argument is treated as a filename pattern, and is used to turn the name into a directory specification. A request for &lt;code&gt;http://www.example.com/~bob/one/two.html&lt;/code&gt; will be translated to:</source>
          <target state="translated">어느 쪽도이 경우 &lt;code&gt;enabled&lt;/code&gt; 나 &lt;code&gt;disabled&lt;/code&gt; 키워드가 나타납니다 &lt;code&gt;Userdir&lt;/code&gt; 지시자, 인수는 파일 이름 패턴으로 처리하여 디렉토리에 이름을 설정하는 데 사용됩니다. &lt;code&gt;http://www.example.com/~bob/one/two.html&lt;/code&gt; 에 대한 요청 은 다음과 같이 번역됩니다.</target>
        </trans-unit>
        <trans-unit id="ae0103d53cb38101a5b1a8f5c1c05f63182ec084" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;DefaultLanguage&lt;/code&gt; directive is in force and a file does not have any language extensions as configured by &lt;code&gt;&lt;a href=&quot;#addlanguage&quot;&gt;AddLanguage&lt;/a&gt;&lt;/code&gt;, then no Content-Language header field will be generated.</source>
          <target state="translated">어떤 경우 &lt;code&gt;DefaultLanguage&lt;/code&gt; 가의 지침이 시행되지 않습니다에 의해 구성된 파일이 어떤 언어 확장이없는 &lt;code&gt;&lt;a href=&quot;#addlanguage&quot;&gt;AddLanguage&lt;/a&gt;&lt;/code&gt; , 다음 내용이없는-Language 헤더 필드는 생성되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="06957e4ac117f84c506cb12762a02e08b9224f5e" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;ServerName&lt;/code&gt; is specified, the server attempts to deduce the client visible hostname by first asking the operating system for the system hostname, and if that fails, performing a reverse lookup on an IP address present on the system.</source>
          <target state="translated">&lt;code&gt;ServerName&lt;/code&gt; 이 지정 되지 않은 경우, 서버는 먼저 운영 체제에 시스템 호스트 이름을 요청하여 클라이언트 표시 호스트 이름을 추론하려고 시도하고, 실패하면 시스템에 존재하는 IP 주소에서 역방향 조회를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="7ef272a3608868290e867aad151eba9e7f9b451e" translate="yes" xml:space="preserve">
          <source>If no &lt;var&gt;path&lt;/var&gt; is specified, &lt;code&gt;configure&lt;/code&gt; will search for the include files and libraries of a GNU DBM installation in the usual search paths. An explicit &lt;var&gt;path&lt;/var&gt; will cause &lt;code&gt;configure&lt;/code&gt; to look in &lt;code&gt;path/lib&lt;/code&gt; and &lt;code&gt;path/include&lt;/code&gt; for the relevant files. Finally, the &lt;var&gt;path&lt;/var&gt; may specify specific include and library paths separated by a colon.</source>
          <target state="translated">&lt;var&gt;path&lt;/var&gt; 를 지정 하지 않으면 &lt;code&gt;configure&lt;/code&gt; 는 일반적인 검색 경로에서 GNU DBM 설치의 포함 파일과 라이브러리를 검색합니다. 명시 적 &lt;var&gt;path&lt;/var&gt; 는 &lt;code&gt;configure&lt;/code&gt; 가 관련 파일 을 &lt;code&gt;path/lib&lt;/code&gt; 및 &lt;code&gt;path/include&lt;/code&gt; 에서 찾게 합니다. 마지막으로 &lt;var&gt;path&lt;/var&gt; 는 콜론으로 구분 된 특정 포함 및 라이브러리 경로를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="513eb45254c4bd78e8a395027760f220a039472c" translate="yes" xml:space="preserve">
          <source>If no &lt;var&gt;status&lt;/var&gt; argument is given, the redirect will be &quot;temporary&quot; (HTTP status 302). This indicates to the client that the resource has moved temporarily. The &lt;var&gt;status&lt;/var&gt; argument can be used to return other HTTP status codes:</source>
          <target state="translated">&lt;var&gt;status&lt;/var&gt; 인수가 제공 되지 않으면 경로 재 지정은 &quot;임시&quot;(HTTP 상태 302)가됩니다. 클라이언트에게 리소스가 일시적으로 이동했음을 나타냅니다. &lt;var&gt;status&lt;/var&gt; 인수는 다른 HTTP 상태 코드를 반환 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="d825e98065c87df90bbb4cfa5333a16553538172" translate="yes" xml:space="preserve">
          <source>If no OCSP URI is provided, contact your Certificate Authority to determine if one is available; if so, configure it with &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl#sslstaplingforceurl&quot;&gt;SSLStaplingForceURL&lt;/a&gt;&lt;/code&gt; in the virtual host that uses the certificate.</source>
          <target state="translated">OCSP URI가 제공되지 않으면 인증 기관에 문의하여 사용 가능한지 확인하십시오. 그렇다면 인증서를 사용하는 가상 호스트에서 &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl#sslstaplingforceurl&quot;&gt;SSLStaplingForceURL&lt;/a&gt;&lt;/code&gt; 을 사용하여 구성하십시오 .</target>
        </trans-unit>
        <trans-unit id="f6c9367079b7f29bb513ad5878dd073facd6567f" translate="yes" xml:space="preserve">
          <source>If no handler is explicitly set for a request, the specified content type will also be used as the handler name.</source>
          <target state="translated">핸들러가 요청에 대해 명시 적으로 설정되지 않은 경우 지정된 컨텐츠 유형도 핸들러 이름으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="590f391a46775a0b2279533e3c407ffc8e03daa0" translate="yes" xml:space="preserve">
          <source>If no matches are found, the request is served by the main server.</source>
          <target state="translated">일치하는 것이 없으면 주 서버에서 요청을 처리합니다.</target>
        </trans-unit>
        <trans-unit id="cd6431af37ab282133e8e8d00c38dcb0a8ea5b60" translate="yes" xml:space="preserve">
          <source>If no matching ServerName or ServerAlias is found in the set of virtual hosts containing the most specific matching IP address and port combination, then &lt;strong&gt;the first listed virtual host&lt;/strong&gt; that matches that will be used.</source>
          <target state="translated">가장 구체적인 일치하는 IP 주소 및 포트 조합을 포함하는 가상 호스트 세트에서 일치하는 ServerName 또는 ServerAlias가 없으면 일치 &lt;strong&gt;하는 첫 번째 나열된 가상 호스트&lt;/strong&gt; 가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e7c4817085a47f2e73701377dc46c733dfbcf0f5" translate="yes" xml:space="preserve">
          <source>If no port is specified in the &lt;code&gt;ServerName&lt;/code&gt;, then the server will use the port from the incoming request. For optimal reliability and predictability, you should specify an explicit hostname and port using the &lt;code&gt;ServerName&lt;/code&gt; directive.</source>
          <target state="translated">&lt;code&gt;ServerName&lt;/code&gt; 에 포트가 지정되지 않은 경우 서버는 들어오는 요청의 포트를 사용합니다. 최적의 안정성과 예측 성을 위해서는 &lt;code&gt;ServerName&lt;/code&gt; 지시문을 사용하여 명시적인 호스트 이름과 포트를 지정해야 합니다.</target>
        </trans-unit>
        <trans-unit id="ecdb8233398cd674ea8ef9b98b61c389a6d2d163" translate="yes" xml:space="preserve">
          <source>If no quoted text is present, the name of the link will be used as the text:</source>
          <target state="translated">인용 된 텍스트가 없으면 링크 이름이 텍스트로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="2fe71c59c5575af3c4c113f27054c2fad8cd115e" translate="yes" xml:space="preserve">
          <source>If none of the above match, the default value set by &lt;code&gt;xml2EncDefault&lt;/code&gt; is used.</source>
          <target state="translated">위와 일치하는 것이 &lt;code&gt;xml2EncDefault&lt;/code&gt; 에 의해 설정된 기본값 이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e92370cc2c774d07d929615014d5d6d5bddcd2d4" translate="yes" xml:space="preserve">
          <source>If none of the directives contained within the &lt;code&gt;&amp;lt;RequireAll&amp;gt;&lt;/code&gt; directive fails, and at least one succeeds, then the &lt;code&gt;&amp;lt;RequireAll&amp;gt;&lt;/code&gt; directive succeeds. If none succeed and none fail, then it returns a neutral result. In all other cases, it fails.</source>
          <target state="translated">&lt;code&gt;&amp;lt;RequireAll&amp;gt;&lt;/code&gt; 지시문에 포함 된 지시문 중 하나도 실패하고 하나 이상이 성공하면 &lt;code&gt;&amp;lt;RequireAll&amp;gt;&lt;/code&gt; 지시문이 성공합니다. 성공하지 못하고 실패하지 않으면 중립 결과를 반환합니다. 다른 모든 경우에는 실패합니다.</target>
        </trans-unit>
        <trans-unit id="a82c26248f00cc0d3477452d26740e283348aa83" translate="yes" xml:space="preserve">
          <source>If not required, turning ProxyHTMLMeta Off will give a small performance boost by skipping this parse step. However, it is sometimes necessary for internationalisation to work correctly.</source>
          <target state="translated">필요하지 않은 경우 ProxyHTMLMeta를 끄면이 구문 분석 단계를 건너 뛰어 성능이 약간 향상됩니다. 그러나 국제화가 제대로 작동해야하는 경우가 있습니다.</target>
        </trans-unit>
        <trans-unit id="92912bb1ccecfb524dde0b80d7baf6ccbef9a859" translate="yes" xml:space="preserve">
          <source>If one of the files found when reading the directory does not have an extension recognized by &lt;code&gt;mod_mime&lt;/code&gt; to designate its Charset, Content-Type, Language, or Encoding, then the result depends on the setting of the &lt;code&gt;&lt;a href=&quot;mod/mod_mime#multiviewsmatch&quot;&gt;MultiViewsMatch&lt;/a&gt;&lt;/code&gt; directive. This directive determines whether handlers, filters, and other extension types can participate in MultiViews negotiation.</source>
          <target state="translated">디렉토리를 읽을 때 찾은 파일 중 하나에 char_set, Content-Type, Language 또는 Encoding을 지정하기 위해 &lt;code&gt;mod_mime&lt;/code&gt; 이 인식하는 확장자가없는 경우 결과는 &lt;code&gt;&lt;a href=&quot;mod/mod_mime#multiviewsmatch&quot;&gt;MultiViewsMatch&lt;/a&gt;&lt;/code&gt; 지시문 의 설정에 따라 다릅니다 . 이 지시문은 핸들러, 필터 및 기타 확장 유형이 MultiViews 협상에 참여할 수 있는지 여부를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="9e4a4ca075b232c3b5ee06481e6e3c7db1a59a26" translate="yes" xml:space="preserve">
          <source>If one or more of the directives contained within the &lt;code&gt;&amp;lt;RequireAny&amp;gt;&lt;/code&gt; directive succeed, then the &lt;code&gt;&amp;lt;RequireAny&amp;gt;&lt;/code&gt; directive succeeds. If none succeed and none fail, then it returns a neutral result. In all other cases, it fails.</source>
          <target state="translated">&lt;code&gt;&amp;lt;RequireAny&amp;gt;&lt;/code&gt; 지시문에 포함 된 지시문 중 하나 이상이 성공하면 &lt;code&gt;&amp;lt;RequireAny&amp;gt;&lt;/code&gt; 지시문이 성공합니다. 성공하지 못하고 실패하지 않으면 중립 결과를 반환합니다. 다른 모든 경우에는 실패합니다.</target>
        </trans-unit>
        <trans-unit id="6266111d84e09bc50f1f16ee87de824252b0bd71" translate="yes" xml:space="preserve">
          <source>If one or more of the directives contained within the &lt;code&gt;&amp;lt;RequireNone&amp;gt;&lt;/code&gt; directive succeed, then the &lt;code&gt;&amp;lt;RequireNone&amp;gt;&lt;/code&gt; directive fails. In all other cases, it returns a neutral result. Thus as with the other negated authorization directive &lt;code&gt;Require not&lt;/code&gt;, it can never independently authorize a request because it can never return a successful result. It can be used, however, to restrict the set of users who are authorized to access a resource.</source>
          <target state="translated">&lt;code&gt;&amp;lt;RequireNone&amp;gt;&lt;/code&gt; 지시문에 포함 된 지시문 중 하나 이상이 성공하면 &lt;code&gt;&amp;lt;RequireNone&amp;gt;&lt;/code&gt; 지시문이 실패합니다. 다른 모든 경우에는 중립 결과를 반환합니다. 따라서 다른 부정 된 권한 부여 지시문 &lt;code&gt;Require not&lt;/code&gt; 과 같이 요청이 성공적인 결과를 리턴 할 수 없으므로 독립적으로 요청을 승인 할 수 없습니다. 그러나 리소스 액세스 권한이있는 사용자 집합을 제한하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f9cc5c3ce8e9cb5b1f29ccaa8aa97006111b5ad6" translate="yes" xml:space="preserve">
          <source>If session privacy is required, the &lt;code&gt;&lt;a href=&quot;mod_session_crypto&quot;&gt;mod_session_crypto&lt;/a&gt;&lt;/code&gt; module can be used to encrypt the contents of the session before writing the session to the client.</source>
          <target state="translated">세션 프라이버시가 필요한 경우 클라이언트에 세션을 쓰기 전에 &lt;code&gt;&lt;a href=&quot;mod_session_crypto&quot;&gt;mod_session_crypto&lt;/a&gt;&lt;/code&gt; 모듈을 사용하여 세션의 내용을 암호화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="22d8642851ae05b2c65fbff50be401380272bafb" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;Block&lt;/code&gt;, every proxy request will have all its &lt;code&gt;Via:&lt;/code&gt; header lines removed. No new &lt;code&gt;Via:&lt;/code&gt; header will be generated.</source>
          <target state="translated">&lt;code&gt;Block&lt;/code&gt; 으로 설정하면 모든 프록시 요청에 모든 &lt;code&gt;Via:&lt;/code&gt; 헤더 행이 제거됩니다. 새로운 &lt;code&gt;Via:&lt;/code&gt; 헤더가 생성 되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="6c9e0e72129bdae754c00c793d38aebb8ab85e48" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;Full&lt;/code&gt;, each generated &lt;code&gt;Via:&lt;/code&gt; header line will additionally have the Apache httpd server version shown as a &lt;code&gt;Via:&lt;/code&gt; comment field.</source>
          <target state="translated">&lt;code&gt;Full&lt;/code&gt; 로 설정하면 생성 된 각 &lt;code&gt;Via:&lt;/code&gt; 헤더 행에 &lt;code&gt;Via:&lt;/code&gt; 주석 필드 로 표시된 Apache httpd 서버 버전이 추가됩니다 .</target>
        </trans-unit>
        <trans-unit id="4b650bd62cfdfc8796166a2ddf023833d40a02f0" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;HttpOnly&lt;/code&gt;, &lt;code&gt;true&lt;/code&gt;, or &lt;code&gt;1&lt;/code&gt;, the cookie will have the &lt;code&gt;HttpOnly&lt;/code&gt; flag set, which means that the cookie is inaccessible to JavaScript code on browsers that support this feature.</source>
          <target state="translated">로 설정하면 &lt;code&gt;HttpOnly&lt;/code&gt; , &lt;code&gt;true&lt;/code&gt; , 또는 &lt;code&gt;1&lt;/code&gt; , 쿠키는 것 &lt;code&gt;HttpOnly&lt;/code&gt; 쿠키가이 기능을 지원하는 브라우저에서 자바 스크립트 코드에 액세스 할 수 있음을 의미 플래그가 설정.</target>
        </trans-unit>
        <trans-unit id="f495a57a6a4ae536e095fc42ae44b801ab722aa1" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;Off&lt;/code&gt;, which is the default, no special processing is performed. If a request or reply contains a &lt;code&gt;Via:&lt;/code&gt; header, it is passed through unchanged.</source>
          <target state="translated">기본값 인 &lt;code&gt;Off&lt;/code&gt; 설정하면 특수 처리가 수행되지 않습니다. 요청 또는 응답에 &lt;code&gt;Via:&lt;/code&gt; 헤더 가 포함 된 경우 변경되지 않은 상태로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="9a515c9e176d220cbf1a9f23c950fab97bfcb657" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;On&lt;/code&gt;, each request and reply will get a &lt;code&gt;Via:&lt;/code&gt; header line added for the current host.</source>
          <target state="translated">&lt;code&gt;On&lt;/code&gt; 으로 설정하면 각 요청 및 응답 에 현재 호스트에 &lt;code&gt;Via:&lt;/code&gt; 헤더 행이 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="6a21035a1c9e7f2cbd5e13f264a13b11a4787391" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;On&lt;/code&gt;, the semi-colon character ';' will be used as an additional sticky session path delimiter/separator. This is mainly used to emulate mod_jk's behavior when dealing with paths such as &lt;code&gt;JSESSIONID=6736bcf34;foo=aabfa&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;On&lt;/code&gt; 으로 설정되면 세미콜론 문자 ';' 추가 고정 세션 경로 구분 기호 / 구분자로 사용됩니다. 이것은 &lt;code&gt;JSESSIONID=6736bcf34;foo=aabfa&lt;/code&gt; 와 같은 경로를 처리 할 때 mod_jk의 동작을 에뮬레이트하는 데 주로 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="be98e7c089bd3988ebc643e21d8134a1ab91fb63" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;On&lt;/code&gt;, the session will break if the worker is in error state or disabled. Set this value to &lt;code&gt;On&lt;/code&gt; if backend servers do not support session replication.</source>
          <target state="translated">&lt;code&gt;On&lt;/code&gt; 으로 설정 하면 작업자가 오류 상태이거나 비활성화 된 경우 세션이 중단됩니다. 백엔드 서버가 세션 복제를 지원하지 않는 경우이 값을 &lt;code&gt;On&lt;/code&gt; 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="99e59c1251cf9d211675a8a8e14fe4e6f4380c37" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;secure&lt;/code&gt;, &lt;code&gt;true&lt;/code&gt;, or &lt;code&gt;1&lt;/code&gt;, the cookie will only be permitted to be translated via secure (https) connections.</source>
          <target state="translated">&lt;code&gt;secure&lt;/code&gt; , &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;1&lt;/code&gt; 로 설정된 경우 쿠키는 보안 (https) 연결을 통해서만 변환 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6ab87ef8c4a92aa9c3284b6d7dbeabf5f16e8dcb" translate="yes" xml:space="preserve">
          <source>If set to &lt;var&gt;On&lt;/var&gt; or &lt;var&gt;Secure&lt;/var&gt;, the virtual host is permitted to run external programs and scripts as above. Setting &lt;code&gt;VHostCGIMode&lt;/code&gt;&lt;var&gt;Secure&lt;/var&gt; has the effect of denying privileges to the subprocesses, as described for &lt;code&gt;VHostSecure&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;On&lt;/var&gt; 또는 &lt;var&gt;Secure&lt;/var&gt; 로 설정 되면 가상 호스트는 위와 같이 외부 프로그램 및 스크립트를 실행할 수 있습니다. 설정 &lt;code&gt;VHostCGIMode&lt;/code&gt; 가 &lt;var&gt;Secure&lt;/var&gt; 설명한 바와 같이, 서브 프로세스에 권한을 거부하는 효과가 &lt;code&gt;VHostSecure&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="b71a5ce8ed0210dd2ea8b8d1bee520b910b9abb3" translate="yes" xml:space="preserve">
          <source>If set to &lt;var&gt;On&lt;/var&gt;, the &lt;code&gt;SessionEnv&lt;/code&gt; directive causes the contents of the session to be written to a CGI environment variable called &lt;var&gt;HTTP_SESSION&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;On&lt;/var&gt; 으로 설정 하면 &lt;code&gt;SessionEnv&lt;/code&gt; 지시문이 세션의 내용을 &lt;var&gt;HTTP_SESSION&lt;/var&gt; 이라는 CGI 환경 변수에 기록합니다 .</target>
        </trans-unit>
        <trans-unit id="3a90c2e3f96332233d531f64ae7da5128ad5a030" translate="yes" xml:space="preserve">
          <source>If set to Off, persistent and pooled connections are disabled. A new database connection is opened when requested by a client, and closed immediately on release. This option is for debugging and low-usage servers.</source>
          <target state="translated">Off로 설정하면 지속적 및 풀링 된 연결이 비활성화됩니다. 클라이언트가 요청하면 새 데이터베이스 연결이 열리고 릴리스 즉시 닫힙니다. 이 옵션은 디버깅 및 사용량이 적은 서버에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6898850c966fc996ff4920d9ac163b7c13bbafe3" translate="yes" xml:space="preserve">
          <source>If set to the value of &lt;code&gt;0&lt;/code&gt;, the server will use the OS default.</source>
          <target state="translated">값을 &lt;code&gt;0&lt;/code&gt; 으로 설정하면 서버는 OS 기본값을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="290e22ccb405dbdb8dc6c69eb42d351ab66ab224" translate="yes" xml:space="preserve">
          <source>If set to the value of &lt;code&gt;0&lt;/code&gt;, the server will use the default value provided by your OS.</source>
          <target state="translated">값을 &lt;code&gt;0&lt;/code&gt; 으로 설정하면 서버가 OS에서 제공 한 기본값을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="54a82d7fec56a5e60d8fe1b702d19e72660fb344" translate="yes" xml:space="preserve">
          <source>If set, an IO read timeout after a request is sent to the backend will force the worker into error state. Worker recovery behaves the same as other worker errors.</source>
          <target state="translated">설정하면 요청이 백엔드로 전송 된 후 IO 읽기 시간 초과가 작업자를 오류 상태로 만듭니다. 작업자 복구는 다른 작업자 오류와 동일하게 작동합니다.</target>
        </trans-unit>
        <trans-unit id="9863ed6c47e1c96860a5fc4a1b1fed7e4099367d" translate="yes" xml:space="preserve">
          <source>If set, this directive allows content-negotiated documents to be cached by proxy servers. This could mean that clients behind those proxys could retrieve versions of the documents that are not the best match for their abilities, but it will make caching more efficient.</source>
          <target state="translated">설정되면이 지시문을 통해 컨텐츠 협상 문서를 프록시 서버가 캐시 할 수 있습니다. 이는 해당 프록시 뒤에있는 클라이언트가 자신의 기능과 가장 일치하지 않는 문서 버전을 검색 할 수 있지만 캐싱을보다 효율적으로 만들 수 있음을 의미 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5817877629cfc71c1cf872651de853016a545f75" translate="yes" xml:space="preserve">
          <source>If set, this will be the maximum time to wait for a free connection in the connection pool, in milliseconds. If there are no free connections in the pool, the Apache httpd will return &lt;code&gt;SERVER_BUSY&lt;/code&gt; status to the client.</source>
          <target state="translated">설정된 경우이 시간은 연결 풀에서 사용 가능한 연결을 기다리는 최대 시간 (밀리 초)입니다. 풀에 사용 가능한 연결이없는 경우 Apache httpd는 &lt;code&gt;SERVER_BUSY&lt;/code&gt; 상태를 클라이언트에 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="59bad35f2ba55f5509fb534a335b0a85257b4673" translate="yes" xml:space="preserve">
          <source>If several parameters are needed in &lt;var&gt;Require-Parameters&lt;/var&gt;, they must be enclosed in quotation marks. Otherwise, only the first one is taken into account.</source>
          <target state="translated">&lt;var&gt;Require-Parameters&lt;/var&gt; 에 여러 매개 변수가 필요한 경우 따옴표로 묶어야합니다. 그렇지 않으면 첫 번째 것만 고려됩니다.</target>
        </trans-unit>
        <trans-unit id="8f3475024ea3d62ec86bf18cae7664a82b30f7bf" translate="yes" xml:space="preserve">
          <source>If some workers are disabled, the others will still be scheduled correctly.</source>
          <target state="translated">일부 작업자가 비활성화 된 경우 다른 작업자는 계속 올바르게 예약됩니다.</target>
        </trans-unit>
        <trans-unit id="ae9fe5d859b228e3baaab3adba9a6d4d38a32da6" translate="yes" xml:space="preserve">
          <source>If specified, Apache httpd will not make the column headings in a FancyIndexed directory listing into links for sorting. The default behavior is for them to be links; selecting the column heading will sort the directory listing by the values in that column. However, query string arguments which are appended to the URL will still be honored. That behavior is controlled by &lt;a href=&quot;#indexoptions.ignoreclient&quot;&gt;&lt;code&gt;IndexOptions IgnoreClient&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">지정된 경우 Apache httpd는 FancyIndexed 디렉토리 목록의 열 표제를 정렬 링크로 만들지 않습니다. 기본 동작은 링크입니다. 열 제목을 선택하면 해당 열의 값을 기준으로 디렉토리 목록이 정렬됩니다. 그러나 URL에 추가 된 쿼리 문자열 인수는 계속 적용됩니다. 이 동작은 &lt;a href=&quot;#indexoptions.ignoreclient&quot;&gt; &lt;code&gt;IndexOptions IgnoreClient&lt;/code&gt; 에&lt;/a&gt; 의해 제어됩니다 .</target>
        </trans-unit>
        <trans-unit id="0e436c8bfe805ac9d6e412d6ccdc8e895ee727aa" translate="yes" xml:space="preserve">
          <source>If specified, Apache httpd will show files normally hidden because the subrequest returned &lt;code&gt;HTTP_UNAUTHORIZED&lt;/code&gt; or &lt;code&gt;HTTP_FORBIDDEN&lt;/code&gt;</source>
          <target state="translated">지정된 경우 하위 요청이 &lt;code&gt;HTTP_UNAUTHORIZED&lt;/code&gt; 또는 &lt;code&gt;HTTP_FORBIDDEN&lt;/code&gt; 을 반환했기 때문에 Apache httpd는 일반적으로 숨겨진 파일을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="a7d7fbb581b9e0ce27cd82884405360e9083aff1" translate="yes" xml:space="preserve">
          <source>If successful, the following RPMs will be created:</source>
          <target state="translated">성공하면 다음 RPM이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="aa4a50a8270934cd12bc7da1b6c8fae734a41e4a" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&lt;a href=&quot;#indexoptions.fancyindexing&quot;&gt;FancyIndexing&lt;/a&gt;&lt;/code&gt; option is given with the &lt;code&gt;&lt;a href=&quot;#indexoptions&quot;&gt;IndexOptions&lt;/a&gt;&lt;/code&gt; directive, the column headers are links that control the order of the display. If you select a header link, the listing will be regenerated, sorted by the values in that column. Selecting the same header repeatedly toggles between ascending and descending order. These column header links are suppressed with the &lt;code&gt;&lt;a href=&quot;#indexoptions&quot;&gt;IndexOptions&lt;/a&gt;&lt;/code&gt; directive's &lt;code&gt;&lt;a href=&quot;#indexoptions.suppresscolumnsorting&quot;&gt;SuppressColumnSorting&lt;/a&gt;&lt;/code&gt; option.</source>
          <target state="translated">는 IF &lt;code&gt;&lt;a href=&quot;#indexoptions.fancyindexing&quot;&gt;FancyIndexing&lt;/a&gt;&lt;/code&gt; 에서의 옵션이 함께 제공됩니다 &lt;code&gt;&lt;a href=&quot;#indexoptions&quot;&gt;IndexOptions&lt;/a&gt;&lt;/code&gt; 지시어, 열 머리글은 표시 순서를 제어하는 링크입니다. 헤더 링크를 선택하면 해당 열의 값을 기준으로 목록이 재생성됩니다. 동일한 헤더를 반복해서 선택하면 오름차순과 내림차순간에 전환됩니다. 이러한 열 헤더 링크는 &lt;code&gt;&lt;a href=&quot;#indexoptions&quot;&gt;IndexOptions&lt;/a&gt;&lt;/code&gt; 지시문의 &lt;code&gt;&lt;a href=&quot;#indexoptions.suppresscolumnsorting&quot;&gt;SuppressColumnSorting&lt;/a&gt;&lt;/code&gt; 옵션으로 표시되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="80aaf098d4f0b644566bb737affc4f1bd485bce0" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&lt;a href=&quot;#sessionheader&quot;&gt;SessionHeader&lt;/a&gt;&lt;/code&gt; directive is used to define an HTTP request header, the session, encoded as a &lt;strong&gt;application/x-www-form-urlencoded&lt;/strong&gt; string, will be made available to the application. If the same header is provided in the response, the value of this response header will be used to replace the session. As above, any encryption or decryption, and the reading the session from or writing the session to the chosen storage mechanism is handled by the &lt;code&gt;&lt;a href=&quot;mod_session&quot;&gt;mod_session&lt;/a&gt;&lt;/code&gt; modules and corresponding configuration.</source>
          <target state="translated">경우] &lt;code&gt;&lt;a href=&quot;#sessionheader&quot;&gt;SessionHeader&lt;/a&gt;&lt;/code&gt; 의 지시가로 코딩되는 HTTP 요청 헤더는 세션을 정의하는 데 사용되는 &lt;strong&gt;을 application / x-www-form-urlencoded 된&lt;/strong&gt; 문자열을 애플리케이션에 제공한다. 응답에 동일한 헤더가 제공되면이 응답 헤더의 값이 세션을 대체하는 데 사용됩니다. 상술 한 바와 같이, 임의의 암호화 또는 복호화, 및 선택된 저장 메커니즘으로부터 세션을 읽거나 세션을 기록하는 것은 &lt;code&gt;&lt;a href=&quot;mod_session&quot;&gt;mod_session&lt;/a&gt;&lt;/code&gt; 모듈 및 대응하는 구성에 의해 처리된다 .</target>
        </trans-unit>
        <trans-unit id="187a2fe037e023ef190f5f02e979a7d2fa95cc57" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&lt;a href=&quot;mod/mpm_common#listen&quot;&gt;Listen&lt;/a&gt;&lt;/code&gt; specified in the configuration file is default of 80 (or any other port below 1024), then it is necessary to have root privileges in order to start apache, so that it can bind to this privileged port. Once the server has started and performed a few preliminary activities such as opening its log files, it will launch several &lt;em&gt;child&lt;/em&gt; processes which do the work of listening for and answering requests from clients. The main &lt;code&gt;httpd&lt;/code&gt; process continues to run as the root user, but the child processes run as a less privileged user. This is controlled by the selected &lt;a href=&quot;mpm&quot;&gt;Multi-Processing Module&lt;/a&gt;.</source>
          <target state="translated">이 경우 &lt;code&gt;&lt;a href=&quot;mod/mpm_common#listen&quot;&gt;Listen&lt;/a&gt;&lt;/code&gt; 구성 파일에 지정된 80의 기본 (혹은 1024 이하의 다른 포트) 인이라면이 특권 포트에 바인딩 할 수 있습니다 그래서, 아파치를 시작하기 위해 루트 권한이 필요합니다. 서버가 로그 파일 열기와 같은 몇 가지 예비 활동을 시작하고 수행하면 클라이언트의 요청을 듣고 응답하는 작업을 수행하는 여러 &lt;em&gt;하위&lt;/em&gt; 프로세스를 시작 합니다. 기본 &lt;code&gt;httpd&lt;/code&gt; 프로세스는 계속 루트 사용자로 실행되지만 하위 프로세스는 권한이 낮은 사용자로 실행됩니다. 선택한 &lt;a href=&quot;mpm&quot;&gt;다중 처리 모듈에&lt;/a&gt; 의해 제어됩니다 .</target>
        </trans-unit>
        <trans-unit id="26b8c9102d77c7d55ca41887662cb5776eaccb8e" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&lt;a href=&quot;mod_request#keptbodysize&quot;&gt;KeptBodySize&lt;/a&gt;&lt;/code&gt; directive is correctly configured and valid for this included file, attempts to POST requests to the enclosing HTML document will be passed through to subrequests as POST requests as well. Without the directive, all subrequests are processed as GET requests.</source>
          <target state="translated">는 IF &lt;code&gt;&lt;a href=&quot;mod_request#keptbodysize&quot;&gt;KeptBodySize&lt;/a&gt;&lt;/code&gt; 의 지침이 제대로 구성이 포함 된 파일에 대한 유효 POST뿐만 아니라 요청으로, 주위를 둘러싸는 HTML 문서에 POST 요청에 대한 시도는 하위 요청을 통해 전달됩니다. 지시문이 없으면 모든 하위 요청이 GET 요청으로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="ca4ba4453b4f97065207066c52f04a72403d976e" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;Accept:&lt;/code&gt; header contains &lt;em&gt;no&lt;/em&gt; q factors at all, httpd sets the q value of &quot;*/*&quot;, if present, to 0.01 to emulate the desired behavior. It also sets the q value of wildcards of the format &quot;type/*&quot; to 0.02 (so these are preferred over matches against &quot;*/*&quot;. If any media type on the &lt;code&gt;Accept:&lt;/code&gt; header contains a q factor, these special values are &lt;em&gt;not&lt;/em&gt; applied, so requests from browsers which send the explicit information to start with work as expected.</source>
          <target state="translated">(가) 경우 &lt;code&gt;Accept:&lt;/code&gt; 헤더가 포함되지 &lt;em&gt;아니&lt;/em&gt; 전혀 Q 인자, 아파치는 &quot;* / *&quot;, 현재는 0.01 에뮬레이트 경우 원하는 동작의 Q 값을 설정한다. 또한 &quot;type / *&quot;형식의 와일드 카드 q 값을 0.02로 설정합니다 (따라서 &quot;* / *&quot;와 일치하는 것보다 선호됩니다. &lt;code&gt;Accept:&lt;/code&gt; 헤더 의 미디어 유형에 aq factor가 포함 된 경우 이러한 특수 값은 &lt;em&gt;그렇지 않습니다)&lt;/em&gt; 따라서 명시 적 정보를 전송하는 브라우저의 요청이 예상대로 작업을 시작합니다.</target>
        </trans-unit>
        <trans-unit id="584fb91ce6324deb929eb384947711096d64889e" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;Alias&lt;/code&gt; directive is used within a &lt;code&gt;&lt;a href=&quot;core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;core#locationmatch&quot;&gt;&amp;lt;LocationMatch&amp;gt;&lt;/a&gt;&lt;/code&gt; section the URL-path is omitted, and the file-path is interpreted using &lt;a href=&quot;../expr&quot;&gt;expression syntax&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;code&gt;Alias&lt;/code&gt; 지시어가 내에서 사용되는 &lt;code&gt;&lt;a href=&quot;core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;core#locationmatch&quot;&gt;&amp;lt;LocationMatch&amp;gt;&lt;/a&gt;&lt;/code&gt; 섹션 URL 경로는 생략하고 파일 경로를 사용하여 해석됩니다 &lt;a href=&quot;../expr&quot;&gt;표현식 구문을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c3f975a6c70a8a40418bb630fa25ab501c05d63f" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;Redirect&lt;/code&gt; directive is used within a &lt;code&gt;&lt;a href=&quot;core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;core#locationmatch&quot;&gt;&amp;lt;LocationMatch&amp;gt;&lt;/a&gt;&lt;/code&gt; section with the &lt;var&gt;URL-path&lt;/var&gt; omitted, then the &lt;var&gt;URL&lt;/var&gt; parameter will be interpreted using &lt;a href=&quot;../expr&quot;&gt;expression syntax&lt;/a&gt;.</source>
          <target state="translated">&lt;var&gt;URL-path&lt;/var&gt; 생략 된 &lt;code&gt;&lt;a href=&quot;core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;core#locationmatch&quot;&gt;&amp;lt;LocationMatch&amp;gt;&lt;/a&gt;&lt;/code&gt; 섹션 내 에서 &lt;code&gt;Redirect&lt;/code&gt; 지시문을 사용 하면 &lt;var&gt;URL&lt;/var&gt; 매개 변수는 &lt;a href=&quot;../expr&quot;&gt;식 구문을&lt;/a&gt; 사용하여 해석됩니다 .</target>
        </trans-unit>
        <trans-unit id="8d3c028b26b0a98efeb2c7ceeb6a06d6f6f90df3" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;ScriptAlias&lt;/code&gt; directive is used within a &lt;code&gt;&lt;a href=&quot;core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;core#locationmatch&quot;&gt;&amp;lt;LocationMatch&amp;gt;&lt;/a&gt;&lt;/code&gt; section with the URL-path omitted, then the URL parameter will be interpreted using &lt;a href=&quot;../expr&quot;&gt;expression syntax&lt;/a&gt;.</source>
          <target state="translated">URL 경로가 생략 된 &lt;code&gt;&lt;a href=&quot;core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;core#locationmatch&quot;&gt;&amp;lt;LocationMatch&amp;gt;&lt;/a&gt;&lt;/code&gt; 섹션 에서 &lt;code&gt;ScriptAlias&lt;/code&gt; 지시문을 사용 하면 URL 매개 변수는 &lt;a href=&quot;../expr&quot;&gt;식 구문을&lt;/a&gt; 사용하여 해석됩니다 .</target>
        </trans-unit>
        <trans-unit id="af236c4126475898a1387b24b79386162c46b241" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;uid&lt;/code&gt; attribute was used instead of the &lt;code&gt;cn&lt;/code&gt; attribute in the URL above, the above three lines could be condensed to</source>
          <target state="translated">경우 &lt;code&gt;uid&lt;/code&gt; 속성이 대신 사용 된 &lt;code&gt;cn&lt;/code&gt; URL에 속성 세 줄 위가 응축 될 수 위</target>
        </trans-unit>
        <trans-unit id="ad841171b3ab57cbcca6acc1ad24337d36372b92" translate="yes" xml:space="preserve">
          <source>If the &lt;em&gt;TestString&lt;/em&gt; has the special value &lt;code&gt;expr&lt;/code&gt;, the &lt;em&gt;CondPattern&lt;/em&gt; will be treated as an &lt;a href=&quot;../expr&quot;&gt;ap_expr&lt;/a&gt;.</source>
          <target state="translated">경우 &lt;em&gt;TestString에이&lt;/em&gt; 특수 값이 &lt;code&gt;expr&lt;/code&gt; 의 &lt;em&gt;CondPattern는&lt;/em&gt; 로 처리됩니다 &lt;a href=&quot;../expr&quot;&gt;ap_expr&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c35fccc2c1d91aa8b5ce5c9e8f7dff0972997a33" translate="yes" xml:space="preserve">
          <source>If the &lt;em&gt;TestString&lt;/em&gt; has the special value &lt;code&gt;expr&lt;/code&gt;, the &lt;em&gt;CondPattern&lt;/em&gt; will be treated as an &lt;a href=&quot;../expr&quot;&gt;ap_expr&lt;/a&gt;. HTTP headers referenced in the expression will be added to the Vary header if the &lt;code&gt;novary&lt;/code&gt; flag is not given.</source>
          <target state="translated">경우 &lt;em&gt;TestString에이&lt;/em&gt; 특수 값이 &lt;code&gt;expr&lt;/code&gt; 의 &lt;em&gt;CondPattern는&lt;/em&gt; 로 처리됩니다 &lt;a href=&quot;../expr&quot;&gt;ap_expr&lt;/a&gt; . &lt;code&gt;novary&lt;/code&gt; 플래그가 제공되지 않으면 표현식에서 참조 된 HTTP 헤더가 Vary 헤더에 추가됩니다 .</target>
        </trans-unit>
        <trans-unit id="0a335426bb1bc53928ea1adcbf27925c85c60b49" translate="yes" xml:space="preserve">
          <source>If the &lt;var&gt;file-path&lt;/var&gt; begins with a pipe character &quot;&lt;code&gt;|&lt;/code&gt;&quot; then it is assumed to be a command to spawn to handle the error log.</source>
          <target state="translated">경우 &lt;var&gt;file-path&lt;/var&gt; 파이프 문자로 시작 &quot; &lt;code&gt;|&lt;/code&gt; &quot;다음은 오류 로그를 처리하기 위해 산란하는 명령을 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="8aea7a8101ad8caf85dbeadd7053f103c8a1b1a3" translate="yes" xml:space="preserve">
          <source>If the &lt;var&gt;operator&lt;/var&gt; is omitted, it is assumed to be &lt;code&gt;=&lt;/code&gt;.</source>
          <target state="translated">는 IF &lt;var&gt;operator&lt;/var&gt; 생략이를 것으로 가정 &lt;code&gt;=&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="60dff75a0118e7de10f2411b976389d9d83be1e5" translate="yes" xml:space="preserve">
          <source>If the Apache console window closes immediately or unexpectedly after startup, open the Command Prompt from the Start Menu --&amp;gt; Programs. Change to the folder to which you installed Apache, type the command &lt;code&gt;httpd.exe&lt;/code&gt;, and read the error message. Then change to the logs folder, and review the &lt;code&gt;error.log&lt;/code&gt; file for configuration mistakes. Assuming httpd was installed into &lt;code&gt;C:\Program Files\Apache Software Foundation\Apache2.4\&lt;/code&gt;, you can do the following:</source>
          <target state="translated">시작 후 Apache 콘솔 창이 즉시 또는 예기치 않게 닫히는 경우 시작 메뉴-&amp;gt; 프로그램에서 명령 프롬프트를여십시오. Apache를 설치 한 폴더로 변경하고 &lt;code&gt;httpd.exe&lt;/code&gt; 명령을 입력 한 후 오류 메시지를 읽으십시오. 그런 다음 logs 폴더로 변경하고 &lt;code&gt;error.log&lt;/code&gt; 파일에서 구성 실수를 검토하십시오 . httpd가 &lt;code&gt;C:\Program Files\Apache Software Foundation\Apache2.4\&lt;/code&gt; 에 설치되었다고 가정하면 다음을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d747714645d22056e6436f1d9ea1e98dce4b2458" translate="yes" xml:space="preserve">
          <source>If the Apache user is compromised, for example through a flaw in a CGI process, it is possible that the cache may be targeted. When using &lt;code&gt;&lt;a href=&quot;mod/mod_cache_disk&quot;&gt;mod_cache_disk&lt;/a&gt;&lt;/code&gt;, it is relatively easy to insert or modify a cached entity.</source>
          <target state="translated">예를 들어 CGI 프로세스의 결함으로 인해 Apache 사용자가 손상된 경우 캐시가 대상이 될 수 있습니다. &lt;code&gt;&lt;a href=&quot;mod/mod_cache_disk&quot;&gt;mod_cache_disk&lt;/a&gt;&lt;/code&gt; 를 사용할 때 캐시 된 엔티티를 삽입하거나 수정하는 것이 상대적으로 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="b2fa946abfb1a911ca46a05e531a9450d015a14a" translate="yes" xml:space="preserve">
          <source>If the CACHE filter is specified more than once, the last instance will apply.</source>
          <target state="translated">CACHE 필터가 두 번 이상 지정된 경우 마지막 인스턴스가 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="3e244716d2bf3f55686b6a2b2063aa2db0f8c86b" translate="yes" xml:space="preserve">
          <source>If the ErrorDocument specifies a local redirect to a CGI script, the script should include a &quot;&lt;code&gt;Status:&lt;/code&gt;&quot; header field in its output in order to ensure the propagation all the way back to the client of the error condition that caused it to be invoked. For instance, a Perl ErrorDocument script might include the following:</source>
          <target state="translated">ErrorDocument가 CGI 스크립트로의 로컬 경로 재 지정을 지정하는 경우, 스크립트는 호출 된 오류 상태의 클라이언트로 다시 전파되도록하기 위해 출력에 &quot; &lt;code&gt;Status:&lt;/code&gt; &quot;헤더 필드를 포함해야합니다. 예를 들어 Perl ErrorDocument 스크립트는 다음을 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="439e79618992a5d79f16ae74abbe297577c114b3" translate="yes" xml:space="preserve">
          <source>If the FTP server asks for a password when given this username (which it should), then Apache will reply with a &lt;code&gt;401&lt;/code&gt; (Authorization required) response, which causes the Browser to pop up the username/password dialog. Upon entering the password, the connection attempt is retried, and if successful, the requested resource is presented. The advantage of this procedure is that your browser does not display the password in cleartext (which it would if you had used</source>
          <target state="translated">FTP 서버가이 사용자 이름이 주어질 때 암호를 요청하면 (필수) Apache는 &lt;code&gt;401&lt;/code&gt; (권한 부여 필요) 응답으로 응답하여 브라우저가 사용자 이름 / 암호 대화 상자를 표시합니다. 비밀번호를 입력하면 연결 시도가 재 시도되고 성공하면 요청 된 자원이 제공됩니다. 이 절차의 장점은 브라우저가 암호를 일반 텍스트로 표시하지 않는다는 것입니다 (사용한 경우와 동일)</target>
        </trans-unit>
        <trans-unit id="3420055936258920b9fb577c970017f0ee0c3068" translate="yes" xml:space="preserve">
          <source>If the HTTP &lt;var&gt;Content-Type&lt;/var&gt; header includes a &lt;var&gt;charset&lt;/var&gt; parameter, that is used.</source>
          <target state="translated">HTTP &lt;var&gt;Content-Type&lt;/var&gt; 헤더에 &lt;var&gt;charset&lt;/var&gt; 매개 변수가 포함되어 있으면 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="c14626595bac93bb3a579a09abbe840c5085eb5f" translate="yes" xml:space="preserve">
          <source>If the LDAP server goes down and breaks an existing connection, &lt;code&gt;&lt;a href=&quot;mod_authnz_ldap&quot;&gt;mod_authnz_ldap&lt;/a&gt;&lt;/code&gt; will attempt to re-connect, starting with the primary server, and trying each redundant server in turn. Note that this is different than a true round-robin search.</source>
          <target state="translated">LDAP 서버가 작동 중지되고 기존 연결이 끊어지면 &lt;code&gt;&lt;a href=&quot;mod_authnz_ldap&quot;&gt;mod_authnz_ldap&lt;/a&gt;&lt;/code&gt; 는 기본 서버부터 시작하여 각 중복 서버를 차례로 시도하여 다시 연결을 시도합니다. 이것은 실제 라운드 로빈 검색과 다릅니다.</target>
        </trans-unit>
        <trans-unit id="8368fd63defc7a67273cad6fb714f7faae47403c" translate="yes" xml:space="preserve">
          <source>If the OCSP URI is provided and the web server can communicate to it directly without using a proxy, no configuration is required. Note that firewall rules that control outbound connections from the web server may need to be adjusted.</source>
          <target state="translated">OCSP URI가 제공되고 웹 서버가 프록시를 사용하지 않고 직접 통신 할 수 있으면 구성이 필요하지 않습니다. 웹 서버에서 아웃 바운드 연결을 제어하는 ​​방화벽 규칙을 조정해야 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="b455f0e95cff3035376482a1dfdf01ff203b58db" translate="yes" xml:space="preserve">
          <source>If the OCSP responder is slow or unreliable</source>
          <target state="translated">OCSP 응답자가 느리거나 신뢰할 수없는 경우</target>
        </trans-unit>
        <trans-unit id="eeea036e9d16e4349ed3b9262315603b3c2aa630" translate="yes" xml:space="preserve">
          <source>If the Proxy directive scheme starts with the &lt;code&gt;balancer://&lt;/code&gt; (eg: &lt;code&gt;balancer://cluster&lt;/code&gt;, any path information is ignored), then a virtual worker that does not really communicate with the backend server will be created. Instead, it is responsible for the management of several &quot;real&quot; workers. In that case, the special set of parameters can be added to this virtual worker. See &lt;code&gt;&lt;a href=&quot;mod_proxy_balancer&quot;&gt;mod_proxy_balancer&lt;/a&gt;&lt;/code&gt; for more information about how the balancer works.</source>
          <target state="translated">Proxy 지시문 체계가 &lt;code&gt;balancer://&lt;/code&gt; 로 시작하면 (예 : &lt;code&gt;balancer://cluster&lt;/code&gt; , 경로 정보는 무시 됨) 실제로 백엔드 서버와 통신하지 않는 가상 작업자가 작성됩니다. 대신 여러 &quot;실제&quot;근로자의 관리를 담당합니다. 이 경우이 가상 작업자에 특수 매개 변수 집합을 추가 할 수 있습니다. 밸런서 작동 방식에 대한 자세한 내용은 &lt;code&gt;&lt;a href=&quot;mod_proxy_balancer&quot;&gt;mod_proxy_balancer&lt;/a&gt;&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3788102fb775723595d585b9f2d18a371ddd8386" translate="yes" xml:space="preserve">
          <source>If the SSL library supports TLSv1.3 (OpenSSL 1.1.1 and later), the protocol specifier &quot;TLSv1.3&quot; can be used to configure the cipher suites for that protocol. Since TLSv1.3 does not offer renegotiations, specifying ciphers for it in a directory context is not allowed.</source>
          <target state="translated">SSL 라이브러리가 TLSv1.3 (OpenSSL 1.1.1 이상)을 지원하는 경우 프로토콜 지정자 &quot;TLSv1.3&quot;을 사용하여 해당 프로토콜의 암호 제품군을 구성 할 수 있습니다. TLSv1.3은 재협상을 제공하지 않으므로 디렉토리 컨텍스트에서 암호를 지정하는 것은 허용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="59e824ccee6ddf0c861325d1b7ebed2b9622db50" translate="yes" xml:space="preserve">
          <source>If the URI from the request is an absolute URI, and its hostname and port match the main server or one of the configured virtual hosts &lt;em&gt;and&lt;/em&gt; match the address and port to which the client sent the request, then the scheme/hostname/port prefix is stripped off and the remaining relative URI is served by the corresponding main server or virtual host. If it does not match, then the URI remains untouched and the request is taken to be a proxy request.</source>
          <target state="translated">요청의 URI가 절대 URI이고 해당 호스트 이름 및 포트가 기본 서버 또는 구성된 가상 호스트 중 하나 &lt;em&gt;와&lt;/em&gt; 일치하고 클라이언트가 요청을 보낸 주소 및 포트 &lt;em&gt;와&lt;/em&gt; 일치하는 경우 scheme / hostname / port 접두어는 제거되고 나머지 상대 URI는 해당 기본 서버 또는 가상 호스트에서 제공됩니다. 일치하지 않으면 URI는 그대로 유지되며 요청은 프록시 요청으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="5e9e7d61ae559148802142fd994f42db401bac23" translate="yes" xml:space="preserve">
          <source>If the URL included a query string (e.g. from a HTML form GET method) it will not be cached unless the response specifies an explicit expiration by including an &quot;Expires:&quot; header or the max-age or s-maxage directive of the &quot;Cache-Control:&quot; header, as per RFC2616 sections 13.9 and 13.2.1.</source>
          <target state="translated">URL에 쿼리 문자열이 포함 된 경우 (예 : HTML 양식 GET 메소드의) &quot;Expires :&quot;헤더 또는 &quot;Cache의 max-age 또는 s-maxage 지시문을 포함하여 응답이 명시적인 만료를 지정하지 않으면 캐시되지 않습니다. -Control : &quot;헤더, RFC2616 섹션 13.9 및 13.2.1에 따름.</target>
        </trans-unit>
        <trans-unit id="76db290ed92b1865df4ac49a69a06843ffacd710" translate="yes" xml:space="preserve">
          <source>If the URL is not found within the cache, &lt;code&gt;&lt;a href=&quot;mod/mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; will add a &lt;a href=&quot;filter&quot;&gt;filter&lt;/a&gt; to the filter stack in order to record the response to the cache, and then stand down, allowing normal request processing to continue. If the content is determined to be cacheable, the content will be saved to the cache for future serving, otherwise the content will be ignored.</source>
          <target state="translated">캐시 내에서 URL을 찾을 수없는 경우 &lt;code&gt;&lt;a href=&quot;mod/mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; 는 캐시에 대한 응답을 기록하기 위해 필터 스택에 &lt;a href=&quot;filter&quot;&gt;필터&lt;/a&gt; 를 추가 한 다음 서서 정상적인 요청 처리를 계속할 수 있도록합니다. 콘텐츠가 캐시 가능한 것으로 판단되면 향후 서비스를 위해 콘텐츠가 캐시에 저장되고, 그렇지 않으면 콘텐츠가 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="d5cf1845a6e293dd51ef8ab58d8b5f77b1ab3ae0" translate="yes" xml:space="preserve">
          <source>If the answer to both questions is 'no', then the default MPM will be &lt;code&gt;&lt;a href=&quot;mod/prefork&quot;&gt;prefork&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">두 질문 모두에 대한 대답이 '아니요'인 경우 기본 MPM은 &lt;code&gt;&lt;a href=&quot;mod/prefork&quot;&gt;prefork&lt;/a&gt;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0c5c832af2d1e97f75a3a747661ebdd5b87837df" translate="yes" xml:space="preserve">
          <source>If the answer to both questions is 'yes', the default MPM is &lt;code&gt;&lt;a href=&quot;mod/event&quot;&gt;event&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">두 질문 모두에 대한 대답이 '예'인 경우 기본 MPM은 &lt;code&gt;&lt;a href=&quot;mod/event&quot;&gt;event&lt;/a&gt;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="81ccedf3c1fd071fa61236861e014b40a67e34b9" translate="yes" xml:space="preserve">
          <source>If the attribute field contains the username, common name and telephone number of a user, a CGI program will have access to this information without the need to make a second independent LDAP query to gather this additional information.</source>
          <target state="translated">속성 필드에 사용자의 사용자 이름, 공통 이름 및 전화 번호가 포함 된 경우 CGI 프로그램은이 추가 정보를 수집하기 위해 두 번째 독립 LDAP 쿼리를 만들 필요없이이 정보에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5dbcf7205890b5518b70bb67b290f76b50d0107a" translate="yes" xml:space="preserve">
          <source>If the cache gets full, it reserves the option to delete content from the cache to make space. Content can be deleted at any time, and can be stale or fresh. The &lt;a href=&quot;programs/htcacheclean&quot;&gt;htcacheclean&lt;/a&gt; tool can be run on a once off basis, or deployed as a daemon to keep the size of the cache within the given size, or the given number of inodes. The tool attempts to delete stale content before attempting to delete fresh content.</source>
          <target state="translated">캐시가 가득 차면 캐시에서 컨텐츠를 삭제하여 공간을 확보하는 옵션이 예약됩니다. 컨텐츠는 언제든지 삭제 될 수 있으며 오래되거나 새로워 질 수 있습니다. &lt;a href=&quot;programs/htcacheclean&quot;&gt;htcacheclean의&lt;/a&gt; 도구는 기초 떨어져 일단 실행, 또는 지정된 크기 또는 아이 노드의 지정된 수 내에서 캐시의 크기를 유지하는 데몬으로 배포 할 수 있습니다. 도구는 새로운 컨텐츠를 삭제하기 전에 오래된 컨텐츠를 삭제하려고 시도합니다.</target>
        </trans-unit>
        <trans-unit id="c1e1191526272d37ceba137a730d8b0179c4ff46" translate="yes" xml:space="preserve">
          <source>If the certificate does not point to an OCSP responder, or if a different address must be used</source>
          <target state="translated">인증서가 OCSP 응답자를 가리 키지 않거나 다른 주소를 사용해야하는 경우</target>
        </trans-unit>
        <trans-unit id="d7c1c17c837245aee22a0ca6abd74c0d81f01754" translate="yes" xml:space="preserve">
          <source>If the client requests &lt;code&gt;http://example.com/service/foo.txt&lt;/code&gt;, it will be told to access &lt;code&gt;http://foo2.example.com/service/foo.txt&lt;/code&gt; instead. This includes requests with &lt;code&gt;GET&lt;/code&gt; parameters, such as &lt;code&gt;http://example.com/service/foo.pl?q=23&amp;amp;a=42&lt;/code&gt;, it will be redirected to &lt;code&gt;http://foo2.example.com/service/foo.pl?q=23&amp;amp;a=42&lt;/code&gt;. Note that &lt;code&gt;POST&lt;/code&gt;s will be discarded.</source>
          <target state="translated">클라이언트가 &lt;code&gt;http://example.com/service/foo.txt&lt;/code&gt; 를 요청하면 대신 &lt;code&gt;http://foo2.example.com/service/foo.txt&lt;/code&gt; 에 액세스하라는 메시지가 표시 됩니다. 여기에는 &lt;code&gt;http://example.com/service/foo.pl?q=23&amp;amp;a=42&lt;/code&gt; 와 같은 &lt;code&gt;GET&lt;/code&gt; 매개 변수 가있는 요청이 포함 되며 &lt;code&gt;http://foo2.example.com/service/foo.pl?q=23&amp;amp;a=42&lt;/code&gt; . 참고 &lt;code&gt;POST&lt;/code&gt; 의이 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="5dec122707f5e194cdac5a7a70c1fe2d618dd879" translate="yes" xml:space="preserve">
          <source>If the config define &lt;code&gt;-DDUMP_CONFIG&lt;/code&gt; is set, &lt;code&gt;&lt;a href=&quot;mod_info&quot;&gt;mod_info&lt;/a&gt;&lt;/code&gt; will dump the pre-parsed configuration to &lt;code&gt;stdout&lt;/code&gt; during server startup.</source>
          <target state="translated">config define &lt;code&gt;-DDUMP_CONFIG&lt;/code&gt; 가 설정되면, &lt;code&gt;&lt;a href=&quot;mod_info&quot;&gt;mod_info&lt;/a&gt;&lt;/code&gt; 는 서버 시작 중에 사전 구문 분석 된 구성을 &lt;code&gt;stdout&lt;/code&gt; 으로 덤프합니다 .</target>
        </trans-unit>
        <trans-unit id="55526160eba92ffedf8c47d082e95548331ff375" translate="yes" xml:space="preserve">
          <source>If the connection is using SSL, the server supports &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#servernameindication&quot;&gt;Server Name Indication&lt;/a&gt;, and the SSL client handshake includes the TLS extension with the requested hostname, then that hostname is used below just like the &lt;code&gt;Host:&lt;/code&gt; header would be used on a non-SSL connection. Otherwise, the first name-based vhost whose address matched is used for SSL connections. This is significant because the vhost determines which certificate the server will use for the connection.</source>
          <target state="translated">연결이 SSL을 사용하는 경우 서버가 &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#servernameindication&quot;&gt;서버 이름 표시를&lt;/a&gt; 지원 하고 SSL 클라이언트 핸드 셰이크에 요청 된 호스트 이름을 가진 TLS 확장이 포함 된 경우 해당 호스트 이름은 &lt;code&gt;Host:&lt;/code&gt; 헤더 처럼 SSL이 아닌 연결에서 사용됩니다. 그렇지 않으면 주소가 일치하는 이름 기반 가상 호스트가 SSL 연결에 사용됩니다. 이는 호스트가 서버가 연결에 사용할 인증서를 결정하기 때문에 중요합니다.</target>
        </trans-unit>
        <trans-unit id="a601cb22559a2eb8a51c32babb677e8e2dfb053c" translate="yes" xml:space="preserve">
          <source>If the connection supports PUSH, these two resources will be sent to the client. As a web developer, you may set these headers either directly in your application response or you configure the server via</source>
          <target state="translated">연결이 PUSH를 지원하면이 두 자원이 클라이언트로 전송됩니다. 웹 개발자는 애플리케이션 응답에서 직접 이러한 헤더를 설정하거나 다음을 통해 서버를 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f66c6eab68db705bb8f07e1084159ad0d4f547cd" translate="yes" xml:space="preserve">
          <source>If the content found within the cache is stale, the &lt;code&gt;&lt;a href=&quot;mod/mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; module converts the request into a &lt;strong&gt;conditional request&lt;/strong&gt;. If the origin server responds with a normal response, the normal response is cached, replacing the content already cached. If the origin server responds with a 304 Not Modified response, the content is marked as fresh again, and the cached content is served by the filter instead of saving it.</source>
          <target state="translated">캐시에서 찾은 내용이 오래되면 &lt;code&gt;&lt;a href=&quot;mod/mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; 모듈은 요청을 &lt;strong&gt;조건부 요청&lt;/strong&gt; 으로 변환합니다 . 오리진 서버가 정상 응답으로 응답하면 정상 응답이 캐시되어 이미 캐시 된 컨텐츠를 대체합니다. 오리진 서버가 304 Not Modified 응답으로 응답하면 컨텐츠는 다시 최신으로 표시되고 캐시 된 컨텐츠는 저장하지 않고 필터에 의해 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="aed470f34eb69884e4bce98c0bb64d4b74826057" translate="yes" xml:space="preserve">
          <source>If the content has changed, then the content is served as if the request were not conditional to begin with.</source>
          <target state="translated">컨텐츠가 변경된 경우, 컨텐츠는 요청이 처음부터 시작하지 않은 것처럼 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="82c42b25fe793bdfccdd6c21e189074681acaf84" translate="yes" xml:space="preserve">
          <source>If the content is new enough (younger than its &lt;strong&gt;freshness lifetime&lt;/strong&gt;), it is considered &lt;strong&gt;fresh&lt;/strong&gt;. An HTTP cache is free to serve fresh content without making any calls to the origin server at all.</source>
          <target state="translated">내용이 새 충분이 (그 미만의 경우 &lt;strong&gt;신선한 기간&lt;/strong&gt; ), 그것은 간주됩니다 &lt;strong&gt;신선한&lt;/strong&gt; . HTTP 캐시는 오리진 서버를 전혀 호출하지 않고도 새로운 컨텐츠를 자유롭게 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c2499f7db11188367f2690abefd5033229cf2f58" translate="yes" xml:space="preserve">
          <source>If the content is too old (older than its &lt;strong&gt;freshness lifetime&lt;/strong&gt;), it is considered &lt;strong&gt;stale&lt;/strong&gt;. An HTTP cache should contact the origin server and check whether the content is still fresh before serving stale content to a client. The origin server will either respond with replacement content if not still valid, or ideally, the origin server will respond with a code to tell the cache the content is still fresh, without the need to generate or send the content again. The content becomes fresh again and the cycle continues.</source>
          <target state="translated">내용이 너무 오래된 경우 ( &lt;strong&gt;신선도 수명&lt;/strong&gt; 보다 오래됨 ) &lt;strong&gt;오래된&lt;/strong&gt; 것으로 간주됩니다 . HTTP 캐시는 원본 서버에 접속하여 오래된 컨텐츠를 클라이언트에 제공하기 전에 컨텐츠가 최신인지 확인해야합니다. 원본 서버는 여전히 유효하지 않은 경우 대체 콘텐츠로 응답하거나 이상적으로 원본 서버는 콘텐츠를 다시 생성하거나 보낼 필요없이 캐시에 콘텐츠가 최신 상태임을 알리는 코드로 응답합니다. 내용이 다시 새로워지고주기가 계속됩니다.</target>
        </trans-unit>
        <trans-unit id="d1bd8748f84f89f5114ec4e5335c0513bcb3a95f" translate="yes" xml:space="preserve">
          <source>If the cookie and the request parameter both provide routing information for the same request, the information from the request parameter is used.</source>
          <target state="translated">쿠키와 요청 매개 변수가 모두 동일한 요청에 대한 라우팅 정보를 제공하는 경우 요청 매개 변수의 정보가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="06f85e767a2cab89b294f0e0c048ab6b68f4c484" translate="yes" xml:space="preserve">
          <source>If the data start with an XML Byte Order Mark (BOM) or an XML encoding declaration, that is used.</source>
          <target state="translated">데이터가 BOM (XML Byte Order Mark) 또는 XML 인코딩 선언으로 시작되면 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="52739adf786064186985f91946f14f8d25580ed1" translate="yes" xml:space="preserve">
          <source>If the directory actually contains a file specified by the &lt;code&gt;&lt;a href=&quot;#headername&quot;&gt;HeaderName&lt;/a&gt;&lt;/code&gt; directive, the module usually includes the contents of the file after a standard HTML preamble (&lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;, &lt;em&gt;et cetera&lt;/em&gt;). The &lt;code&gt;SuppressHTMLPreamble&lt;/code&gt; option disables this behaviour, causing the module to start the display with the header file contents. The header file must contain appropriate HTML instructions in this case. If there is no header file, the preamble is generated as usual. If you also specify a &lt;code&gt;&lt;a href=&quot;#readmename&quot;&gt;ReadmeName&lt;/a&gt;&lt;/code&gt;, and if that file exists, The closing &amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt; tags are also ommitted from the output, under the assumption that you'll likely put those closing tags in that file.</source>
          <target state="translated">디렉토리가 실제로으로 지정된 파일이 포함 된 경우 &lt;code&gt;&lt;a href=&quot;#headername&quot;&gt;HeaderName&lt;/a&gt;&lt;/code&gt; 지시어를, 모듈은 보통 표준 HTML 프리앰블 후 파일의 내용 (포함 &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; , &lt;em&gt;등등을&lt;/em&gt; ). &lt;code&gt;SuppressHTMLPreamble&lt;/code&gt; 을 옵션은 헤더 파일 내용을 먼저 보여 주도록 모듈을 일으키는 원인이 동작을 사용하지 않습니다. 이 경우 헤더 파일에는 적절한 HTML 지침이 포함되어야합니다. 헤더 파일이 없으면 평소와 같이 프리앰블이 생성됩니다. 또한 &lt;code&gt;&lt;a href=&quot;#readmename&quot;&gt;ReadmeName&lt;/a&gt;&lt;/code&gt; 을 지정하고 해당 파일이 존재하면 닫는 &amp;lt;/ body&amp;gt; &amp;lt;/ html&amp;gt; 태그도 해당 파일에 닫는 태그를 넣을 것이라는 가정하에 출력에서 ​​생략됩니다.</target>
        </trans-unit>
        <trans-unit id="d3159a8a27a9e54c47448c742cdd0c77d3db9a7e" translate="yes" xml:space="preserve">
          <source>If the encryption key is changed, sessions will be invalidated automatically.</source>
          <target state="translated">암호화 키가 변경되면 세션이 자동으로 무효화됩니다.</target>
        </trans-unit>
        <trans-unit id="b8cb75cb3649dd76791190854db4b0924be4485e" translate="yes" xml:space="preserve">
          <source>If the error is that CGI script cannot be run, the log file will contain an extra two lines:</source>
          <target state="translated">CGI 스크립트를 실행할 수 없다는 오류가 발생하면 로그 파일에 추가 두 줄이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="73134ca5731abf97fff43e59ac4f3eceef967f3b" translate="yes" xml:space="preserve">
          <source>If the expressions become more complex and slow down processing significantly, you can try to optimize them according to the evaluation rules:</source>
          <target state="translated">식이 더 복잡해지고 처리 속도가 현저하게 저하되는 경우 평가 규칙에 따라 식을 최적화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e6f8dd9a02b417354b090fff2a419d17c121e66c" translate="yes" xml:space="preserve">
          <source>If the file is removed while httpd is running, it will continue to maintain an open file descriptor and serve the file as it was when httpd was started. This usually also means that although the file will have been deleted, and not show up on the filesystem, extra free space will not be recovered until httpd is stopped and the file descriptor closed.</source>
          <target state="translated">httpd가 실행되는 동안 파일이 제거되면 열린 파일 디스크립터를 계속 유지하고 httpd가 시작되었을 때와 같이 파일을 제공합니다. 이는 일반적으로 파일이 삭제되어 파일 시스템에 표시되지 않더라도 httpd가 중지되고 파일 설명자가 닫힐 때까지 추가 여유 공간이 복구되지 않음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="a9063c78d878f65d8791b1290b5a29a159b5ba4f" translate="yes" xml:space="preserve">
          <source>If the file specified by &lt;code&gt;HeaderName&lt;/code&gt; contains the beginnings of an HTML document (&amp;lt;html&amp;gt;, &amp;lt;head&amp;gt;, etc.) then you will probably want to set &lt;a href=&quot;#indexoptions.suppresshtmlpreamble&quot;&gt;&lt;code&gt;IndexOptions +SuppressHTMLPreamble&lt;/code&gt;&lt;/a&gt;, so that these tags are not repeated.</source>
          <target state="translated">&lt;code&gt;HeaderName&lt;/code&gt; 으로 지정된 파일 에 HTML 문서의 시작 부분 (&amp;lt;html&amp;gt;, &amp;lt;head&amp;gt; 등) 이 포함 된 경우 이러한 태그가 반복되지 않도록 &lt;a href=&quot;#indexoptions.suppresshtmlpreamble&quot;&gt; &lt;code&gt;IndexOptions +SuppressHTMLPreamble&lt;/code&gt; &lt;/a&gt; 을 설정 하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="def10040600772a4417a584cc076801bf4a5d2fb" translate="yes" xml:space="preserve">
          <source>If the first VirtualHost block does &lt;em&gt;not&lt;/em&gt; include a &lt;code&gt;&lt;a href=&quot;../mod/core#servername&quot;&gt;ServerName&lt;/a&gt;&lt;/code&gt; directive, the reverse DNS of the relevant IP will be used instead. If this is not the server name you wish to use, a bogus entry (eg. &lt;code&gt;ServerName none.example.com&lt;/code&gt;) can be added to get around this behaviour.</source>
          <target state="translated">첫 번째 VirtualHost 블록 에 &lt;code&gt;&lt;a href=&quot;../mod/core#servername&quot;&gt;ServerName&lt;/a&gt;&lt;/code&gt; 지시문이 포함되어 있지 &lt;em&gt;않으면&lt;/em&gt; 관련 IP의 역방향 DNS가 대신 사용됩니다. 이것이 사용하려는 서버 이름이 아닌 경우, 위 동작을 해결하기 위해 가짜 항목 (예 : &lt;code&gt;ServerName none.example.com&lt;/code&gt; )을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dfabf5f56ac130e6465fad0ac1d89657095bcc85" translate="yes" xml:space="preserve">
          <source>If the first argument ends with a trailing &lt;strong&gt;/&lt;/strong&gt;, the second argument should also end with a trailing &lt;strong&gt;/&lt;/strong&gt;, and vice versa. Otherwise, the resulting requests to the backend may miss some needed slashes and do not deliver the expected results.</source>
          <target state="translated">첫 번째 인수가 후행 &lt;strong&gt;/로&lt;/strong&gt; 끝나는 경우 두 번째 인수도 후행 &lt;strong&gt;/로&lt;/strong&gt; 끝나고 그 반대도 마찬가지입니다. 그렇지 않으면 백엔드에 대한 결과 요청에 필요한 슬래시가 누락되어 예상 된 결과가 전달되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bdbfec130cda2680411dd99e514216da2cdc94eb" translate="yes" xml:space="preserve">
          <source>If the first form is used, mod_proxy_html will also clean up the HTML to the specified standard. It cannot fix every error, but it will strip out bogus elements and attributes. It will also optionally log other errors at &lt;code&gt;&lt;a href=&quot;core#loglevel&quot;&gt;LogLevel&lt;/a&gt;&lt;/code&gt; Debug.</source>
          <target state="translated">첫 번째 형식을 사용하면 mod_proxy_html은 지정된 표준에 따라 HTML을 정리합니다. 모든 오류를 해결할 수는 없지만 가짜 요소와 속성을 제거합니다. 또한 선택적으로 &lt;code&gt;&lt;a href=&quot;core#loglevel&quot;&gt;LogLevel&lt;/a&gt;&lt;/code&gt; Debug에 다른 오류를 기록합니다 .</target>
        </trans-unit>
        <trans-unit id="4b1141389e34a73988fa4efa3526efe349c5b626" translate="yes" xml:space="preserve">
          <source>If the header &lt;code&gt;MyRequestHeader: myvalue&lt;/code&gt; is present on the HTTP request, the response will contain the following header:</source>
          <target state="translated">&lt;code&gt;MyRequestHeader: myvalue&lt;/code&gt; 헤더 가 HTTP 요청에 있으면 응답에 다음 헤더가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="e1aeab101372413c90795e3ad26c8064808e3f98" translate="yes" xml:space="preserve">
          <source>If the intent is that a URL &lt;strong&gt;starts with&lt;/strong&gt;&lt;code&gt;/extra/data&lt;/code&gt;, rather than merely &lt;strong&gt;contains&lt;/strong&gt;&lt;code&gt;/extra/data&lt;/code&gt;, prefix the regular expression with a &lt;code&gt;^&lt;/code&gt; to require this.</source>
          <target state="translated">URL &lt;strong&gt;이&lt;/strong&gt; 단순히 &lt;code&gt;/extra/data&lt;/code&gt; 를&lt;strong&gt;포함&lt;/strong&gt; 하지 않고 &lt;code&gt;/extra/data&lt;/code&gt; 로&lt;strong&gt;시작&lt;/strong&gt; 하려는 의도라면 정규 표현식 앞에 &lt;code&gt;^&lt;/code&gt; 를 붙여야합니다 .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9b6b98ddc783417c4e73044387a1bcddaf1030e2" translate="yes" xml:space="preserve">
          <source>If the location of the &lt;strong&gt;CACHE&lt;/strong&gt; filter in the filter chain is changed for any reason, you may need to &lt;strong&gt;flush your cache&lt;/strong&gt; to ensure that your data served remains consistent. &lt;code&gt;&lt;a href=&quot;mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; is not in a position to enforce this for you.</source>
          <target state="translated">어떤 이유로 든 필터 체인에서 &lt;strong&gt;CACHE&lt;/strong&gt; 필터 의 위치 가 변경되면 제공된 데이터가 일관성을 유지하도록 &lt;strong&gt;캐시&lt;/strong&gt; 를 &lt;strong&gt;플러시해야합니다&lt;/strong&gt; . &lt;code&gt;&lt;a href=&quot;mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; 는 이것을 시행 할 위치에 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="204e7159d642671cded6231264ff758d54c06cae" translate="yes" xml:space="preserve">
          <source>If the main server has no &lt;code&gt;ServerName&lt;/code&gt; at this point, then the hostname of the machine that &lt;code&gt;&lt;a href=&quot;../programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; is running on is used instead. We will call the &lt;em&gt;main server address set&lt;/em&gt; those IP addresses returned by a DNS lookup on the &lt;code&gt;ServerName&lt;/code&gt; of the main server.</source>
          <target state="translated">이 시점에서 주 서버에 &lt;code&gt;ServerName&lt;/code&gt; 이 없으면 &lt;code&gt;&lt;a href=&quot;../programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; 가 실행중인 시스템의 호스트 이름이 대신 사용됩니다. 우리는 호출 &lt;em&gt;메인 서버 주소를 설정&lt;/em&gt; 상의 DNS 조회에 의해 반환 된 IP 주소를 &lt;code&gt;ServerName&lt;/code&gt; 메인 서버의합니다.</target>
        </trans-unit>
        <trans-unit id="c5318e67e53f912c3d08c5343a86071ff114c17f" translate="yes" xml:space="preserve">
          <source>If the maximum size is reached, newer entries replace the oldest ones. A diary entry uses 8 bytes, letting a default diary with 256 entries consume around 2 KB of memory.</source>
          <target state="translated">최대 크기에 도달하면 가장 오래된 항목이 새로운 항목으로 바뀝니다. 다이어리 항목은 8 바이트를 사용하므로 256 개의 항목이있는 기본 다이어리는 약 2KB의 메모리를 소비합니다.</target>
        </trans-unit>
        <trans-unit id="02fa93a5e61a593529b530eb5e7d389bf021892d" translate="yes" xml:space="preserve">
          <source>If the memory needs to be shared between threads and processes, a better provider would be &lt;code&gt;&lt;a href=&quot;mod_slotmem_shm&quot;&gt;mod_slotmem_shm&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">스레드와 프로세스간에 메모리를 공유해야하는 경우 더 나은 공급자는 &lt;code&gt;&lt;a href=&quot;mod_slotmem_shm&quot;&gt;mod_slotmem_shm&lt;/a&gt;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="2378e9a19eb3d676b6275d1d8efdf4e5e0dc71d8" translate="yes" xml:space="preserve">
          <source>If the normal handler is used, this directive may appear within a &lt;code&gt;&lt;a href=&quot;core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; directive. If the quick handler is used, this directive must appear within a server or virtual host context, otherwise the setting will be ignored.</source>
          <target state="translated">일반 핸들러가 사용되는 경우이 지시문은 &lt;code&gt;&lt;a href=&quot;core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; 지시문 내에 나타날 수 있습니다 . 빠른 핸들러가 사용되는 경우이 지정 문은 서버 또는 가상 호스트 컨텍스트 내에 나타나야합니다. 그렇지 않으면 설정이 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="1f07eafe59fbdc0940794e56b839ba9010d75187" translate="yes" xml:space="preserve">
          <source>If the number starts with a zero, then it is considered to be a fraction:</source>
          <target state="translated">숫자가 0으로 시작하면 분수로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="ec173c3ab88518374b658a2119efc94130fbd308" translate="yes" xml:space="preserve">
          <source>If the output file already exists, it will not be truncated. New keys will be added and existing keys will be updated.</source>
          <target state="translated">출력 파일이 이미 존재하면 잘리지 않습니다. 새 키가 추가되고 기존 키가 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="c84755a1984cfd6108e365883bda1852dfc68ea0" translate="yes" xml:space="preserve">
          <source>If the password is not specified, the default value &quot;password&quot; will be used. To disable fake basic authentication for an URL space, specify &quot;AuthBasicFake off&quot;.</source>
          <target state="translated">암호를 지정하지 않으면 기본값 &quot;password&quot;가 사용됩니다. URL 공간에 가짜 기본 인증을 사용하지 않으려면 &quot;AuthBasicFake off&quot;를 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="e7a771ea8642819bbb66b30b1c55053ff357ee80" translate="yes" xml:space="preserve">
          <source>If the proxy requires authentication, it will read and consume the proxy authentication credentials sent by the client. With &lt;var&gt;proxy-chain-auth&lt;/var&gt; it will &lt;em&gt;also&lt;/em&gt; forward the credentials to the next proxy in the chain. This may be necessary if you have a chain of proxies that share authentication information. &lt;strong&gt;Security Warning:&lt;/strong&gt; Do not set this unless you know you need it, as it forwards sensitive information!</source>
          <target state="translated">프록시에 인증이 필요한 경우 클라이언트가 보낸 프록시 인증 자격 증명을 읽고 사용합니다. 와 &lt;var&gt;proxy-chain-auth&lt;/var&gt; 이 것 &lt;em&gt;또한&lt;/em&gt; 체인의 다음 프록시 앞으로 자격 증명. 인증 정보를 공유하는 일련의 프록시가있는 경우에 필요할 수 있습니다. &lt;strong&gt;보안 경고 :&lt;/strong&gt; 중요한 정보를 전달하므로 필요한 경우가 아니라면 설정하지 마십시오!</target>
        </trans-unit>
        <trans-unit id="97f4645e78f7f07d333e1967391be467542e57ca" translate="yes" xml:space="preserve">
          <source>If the request contains a &lt;code&gt;Host:&lt;/code&gt; header field, the list is searched for the first vhost with a matching &lt;code&gt;ServerName&lt;/code&gt; or &lt;code&gt;ServerAlias&lt;/code&gt;, and the request is served from that vhost. A &lt;code&gt;Host:&lt;/code&gt; header field can contain a port number, but Apache always ignores it and matches against the real port to which the client sent the request.</source>
          <target state="translated">요청에 &lt;code&gt;Host:&lt;/code&gt; 헤더 필드 가 포함되어 있으면 목록에서 일치하는 &lt;code&gt;ServerName&lt;/code&gt; 또는 &lt;code&gt;ServerAlias&lt;/code&gt; 가있는 첫 번째 호스트를 검색하고 해당 호스트 에서 요청이 제공됩니다. &lt;code&gt;Host:&lt;/code&gt; 헤더에 포트 번호가 나올 수 있지만, 아파치는 항상 그것을 무시하고 클라이언트가 보낸 요청에 실제 포트에 일치합니다.</target>
        </trans-unit>
        <trans-unit id="cd96f1bd475c92db4f020e0efa5af0092b5726d7" translate="yes" xml:space="preserve">
          <source>If the request is for a regular portion of the server, is the requested directory within suEXEC's document root? If the request is for a &lt;code&gt;&lt;a href=&quot;mod/mod_userdir#userdir&quot;&gt;UserDir&lt;/a&gt;&lt;/code&gt;, is the requested directory within the directory configured as suEXEC's userdir (see &lt;a href=&quot;#install&quot;&gt;suEXEC's configuration options&lt;/a&gt;)?</source>
          <target state="translated">요청이 서버의 일반 부분 인 경우 suEXEC의 문서 루트 내에 요청 된 디렉토리가 있습니까? 요청이 &lt;code&gt;&lt;a href=&quot;mod/mod_userdir#userdir&quot;&gt;UserDir&lt;/a&gt;&lt;/code&gt; 인 경우 디렉토리 내의 요청 된 디렉토리가 suEXEC의 userdir로 구성되어 있습니까 ( &lt;a href=&quot;#install&quot;&gt;suEXEC의 구성 옵션&lt;/a&gt; 참조 )?</target>
        </trans-unit>
        <trans-unit id="370927cb685999b1054898d67d65be756fbc1e4d" translate="yes" xml:space="preserve">
          <source>If the request size sent by the client exceeds the maximum size allocated by this directive, the server will return &lt;code&gt;413 Request Entity Too Large&lt;/code&gt;.</source>
          <target state="translated">클라이언트가 보낸 요청 크기가이 지시문에 의해 할당 된 최대 크기를 초과하면 서버는 &lt;code&gt;413 Request Entity Too Large&lt;/code&gt; 를 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="594fa54600741a37a595b272fd3af1157be198f5" translate="yes" xml:space="preserve">
          <source>If the request was for &lt;code&gt;http://example.com/foo/bar&lt;/code&gt;, then &lt;code&gt;%1&lt;/code&gt; would contain &lt;code&gt;example.com&lt;/code&gt; and &lt;code&gt;$1&lt;/code&gt; would contain &lt;code&gt;foo/bar&lt;/code&gt;.</source>
          <target state="translated">요청이 &lt;code&gt;http://example.com/foo/bar&lt;/code&gt; 인 경우 &lt;code&gt;%1&lt;/code&gt; 은 &lt;code&gt;example.com&lt;/code&gt; 을 포함 하고 &lt;code&gt;$1&lt;/code&gt; 은 &lt;code&gt;foo/bar&lt;/code&gt; 를 포함 합니다 .</target>
        </trans-unit>
        <trans-unit id="c640e1665672a7fa3f9517adf962c5b81edecd4a" translate="yes" xml:space="preserve">
          <source>If the response contains an &quot;Authorization:&quot; header, it must also contain an &quot;s-maxage&quot;, &quot;must-revalidate&quot; or &quot;public&quot; option in the &quot;Cache-Control:&quot; header, or it won't be cached.</source>
          <target state="translated">응답에 &quot;Authorization :&quot;헤더가 포함되어 있으면 &quot;Cache-Control :&quot;헤더에 &quot;s-maxage&quot;, &quot;must-revalidate&quot;또는 &quot;public&quot;옵션도 포함되어 있어야합니다. 그렇지 않으면 캐시되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="706df99cb2c56d2c63c2f8efc66297ed941eca4b" translate="yes" xml:space="preserve">
          <source>If the response has a status of 200 (OK), the response must also include at least one of the &quot;Etag&quot;, &quot;Last-Modified&quot; or the &quot;Expires&quot; headers, or the max-age or s-maxage directive of the &quot;Cache-Control:&quot; header, unless the &lt;code&gt;&lt;a href=&quot;mod/mod_cache#cacheignorenolastmod&quot;&gt;CacheIgnoreNoLastMod&lt;/a&gt;&lt;/code&gt; directive has been used to require otherwise.</source>
          <target state="translated">응답 상태가 200 (OK) 인 경우 응답에는 &quot;Etag&quot;, &quot;Last-Modified&quot;또는 &quot;Expires&quot;헤더 중 하나 이상 또는 &lt;code&gt;&lt;a href=&quot;mod/mod_cache#cacheignorenolastmod&quot;&gt;CacheIgnoreNoLastMod&lt;/a&gt;&lt;/code&gt; 지시문을 사용하여 달리 요구 하지 않는 한 &quot;Cache-Control :&quot;헤더 .</target>
        </trans-unit>
        <trans-unit id="72a8d58c20b1c4b360ea39282aeafffb41fb7e20" translate="yes" xml:space="preserve">
          <source>If the response has an HTTP status code other than 200, 203, 300, 301 or 410 it must also specify an &quot;Expires&quot; or &quot;Cache-Control&quot; header.</source>
          <target state="translated">응답에 200, 203, 300, 301 또는 410 이외의 HTTP 상태 코드가있는 경우 &quot;Expires&quot;또는 &quot;Cache-Control&quot;헤더도 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="5ba83588c2432820ca57ea387c715ffce12784cf" translate="yes" xml:space="preserve">
          <source>If the response includes the &quot;private&quot; option in a &quot;Cache-Control:&quot; header, it will not be stored unless the &lt;code&gt;&lt;a href=&quot;mod/mod_cache#cachestoreprivate&quot;&gt;CacheStorePrivate&lt;/a&gt;&lt;/code&gt; has been used to require otherwise.</source>
          <target state="translated">응답에 &quot;Cache-Control :&quot;헤더에 &quot;private&quot;옵션이 포함 된 경우 &lt;code&gt;&lt;a href=&quot;mod/mod_cache#cachestoreprivate&quot;&gt;CacheStorePrivate&lt;/a&gt;&lt;/code&gt; 를 사용하여 달리 요구 하지 않는 한 저장되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="162685f4ec4bcb8d01298d0120d067be48714869" translate="yes" xml:space="preserve">
          <source>If the scoreboard is full, prevent more processes to finish gracefully due to reduced load until old processes have terminated (otherwise the situation would get worse once the load increases again).</source>
          <target state="translated">스코어 보드가 가득 찬 경우 오래된 프로세스가 종료 될 때까지로드 감소로 인해 더 많은 프로세스가 정상적으로 완료되지 않도록하십시오 (그렇지 않으면로드가 다시 증가하면 상황이 악화 될 수 있음).</target>
        </trans-unit>
        <trans-unit id="e16972bb9ba45170ae305399d61a1e385a5e9755" translate="yes" xml:space="preserve">
          <source>If the script is dedicated to handling a particular error condition, such as &lt;code&gt;404 Not Found&lt;/code&gt;, it can use the specific code and error text instead.</source>
          <target state="translated">스크립트가 &lt;code&gt;404 Not Found&lt;/code&gt; 와 같은 특정 오류 조건을 처리하기 위해 전용 인 경우 특정 코드와 오류 텍스트를 대신 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="abd3bfaec1c6f4bad43cd5abcb893ba70078d58a" translate="yes" xml:space="preserve">
          <source>If the script returns a &lt;code&gt;Location:&lt;/code&gt; header instead of output, then this will be translated into an HTML anchor.</source>
          <target state="translated">스크립트가 출력 대신 &lt;code&gt;Location:&lt;/code&gt; 헤더를 반환 하면 HTML 앵커로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="c5382bea9cf441853416a79e3b53ffadf10b7397" translate="yes" xml:space="preserve">
          <source>If the session is exposed to the user through the use of &lt;code&gt;&lt;a href=&quot;mod_session_cookie&quot;&gt;mod_session_cookie&lt;/a&gt;&lt;/code&gt;, and the session is not protected with &lt;code&gt;&lt;a href=&quot;mod_session_crypto&quot;&gt;mod_session_crypto&lt;/a&gt;&lt;/code&gt;, the passphrase is open to potential exposure through a dictionary attack. Regardless of how the session is configured, ensure that this directive is not used within URL spaces where private user data could be exposed, or sensitive transactions can be conducted. Use at own risk.</source>
          <target state="translated">세션이의 사용을 통해 사용자에게 노출되면 &lt;code&gt;&lt;a href=&quot;mod_session_cookie&quot;&gt;mod_session_cookie&lt;/a&gt;&lt;/code&gt; , 세션이 보호되지 &lt;code&gt;&lt;a href=&quot;mod_session_crypto&quot;&gt;mod_session_crypto&lt;/a&gt;&lt;/code&gt; , 암호는 사전 공격을 통해 노출 가능성에 열려 있습니다. 세션 구성 방법에 관계없이이 지시문은 개인 사용자 데이터가 노출되거나 민감한 트랜잭션이 수행 될 수있는 URL 공간에서 사용되지 않아야합니다. 자기 책임으로 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="fdb3bed9ed12d01fc8cbfbd986ed216f5caec218" translate="yes" xml:space="preserve">
          <source>If the specified URL is a CGI program, the program will be executed and its output inserted in place of the directive in the parsed file. You may include a query string in a CGI url:</source>
          <target state="translated">지정된 URL이 CGI 프로그램 인 경우 프로그램이 실행되고 구문 분석 된 파일의 지시문 대신 해당 출력이 삽입됩니다. CGI URL에 쿼리 문자열을 포함시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8ad992dc89b071dda8f6d7c2de3bdbc1726aee5e" translate="yes" xml:space="preserve">
          <source>If the target URI has a query string, the default behavior will be observed - that is, the original query string will be discarded and replaced with the query string in the &lt;code&gt;RewriteRule&lt;/code&gt; target URI.</source>
          <target state="translated">대상 URI에 쿼리 문자열이 있으면 기본 동작이 관찰됩니다. 즉, 원래 쿼리 문자열이 삭제되고 &lt;code&gt;RewriteRule&lt;/code&gt; 대상 URI 에서 쿼리 문자열로 바뀝니다 .</target>
        </trans-unit>
        <trans-unit id="c98cce125c24bc7b455d828b4ba8d2086995268e" translate="yes" xml:space="preserve">
          <source>If the timeout expires, httpd will retry in case an existing connection has been silently dropped by a firewall. However, performance will be much better if the firewall is configured to send TCP RST packets instead of silently dropping packets.</source>
          <target state="translated">시간 초과가 만료되면 기존 연결이 방화벽에 의해 자동으로 삭제 된 경우 httpd가 다시 시도합니다. 그러나 방화벽이 자동으로 패킷을 삭제하는 대신 TCP RST 패킷을 보내도록 구성하면 성능이 훨씬 향상됩니다.</target>
        </trans-unit>
        <trans-unit id="2dc73e5cc1796fcd82c741307d1aed5aa44e9cf6" translate="yes" xml:space="preserve">
          <source>If the translation rules don't make sense for the content, translation can fail in various ways, including:</source>
          <target state="translated">번역 규칙이 내용에 맞지 않으면 다음과 같은 다양한 방법으로 번역이 실패 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0bef265198a19dbae8fbbb70b09b1aa9cfe33029" translate="yes" xml:space="preserve">
          <source>If the validity of the certificate falls below duration, &lt;code&gt;&lt;a href=&quot;mod_md&quot;&gt;mod_md&lt;/a&gt;&lt;/code&gt; will get a new signed certificate.</source>
          <target state="translated">인증서의 유효 기간이 기간 아래로 떨어지면 &lt;code&gt;&lt;a href=&quot;mod_md&quot;&gt;mod_md&lt;/a&gt;&lt;/code&gt; 는 새로운 서명 된 인증서를받습니다.</target>
        </trans-unit>
        <trans-unit id="9716de436583dfe8712587916f936e9ce8c8ac4a" translate="yes" xml:space="preserve">
          <source>If the value begins with exec: the resulting command will be executed and the first line returned to standard output by the program will be used as the password.</source>
          <target state="translated">값이 exec로 시작하면 결과 명령이 실행되고 프로그램에서 표준 출력으로 리턴 된 첫 번째 행이 비밀번호로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="62ea7aea4a9e2e299a1cd5c0217ea808e14767ff" translate="yes" xml:space="preserve">
          <source>If the value specified for &lt;code&gt;rate-limit&lt;/code&gt; causes integer overflow, the rate-limited will be disabled. If the value specified for &lt;code&gt;rate-limit-burst&lt;/code&gt; causes integer overflow, the burst will be disabled.</source>
          <target state="translated">&lt;code&gt;rate-limit&lt;/code&gt; 에 지정된 값 으로 정수 오버플로가 발생하면 rate-limited가 비활성화됩니다. &lt;code&gt;rate-limit-burst&lt;/code&gt; 에 지정된 값으로 인해 정수 오버플로가 발생하면 버스트가 비활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="5786d632a1e2c3dbb2dd9320bcc60e7434e927b9" translate="yes" xml:space="preserve">
          <source>If the verbatim username can't directly bind, but needs some cosmetic transformation, see &lt;code&gt;&lt;a href=&quot;#authldapinitialbindpattern&quot;&gt; AuthLDAPInitialBindPattern&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#authldapinitialbindpattern&quot;&gt; AuthLDAPInitialBindPattern&lt;/a&gt;&lt;/code&gt; 사용자 이름을 직접 바인딩 할 수 없지만 약간의 변형이 필요한 경우 AuthLDAPInitialBindPattern을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="13682077a43e8a926eb0174cdb395b9a4b2e273c" translate="yes" xml:space="preserve">
          <source>If there are &lt;code&gt;VirtualHost&lt;/code&gt; definitions for the IP address, the next step is to decide if we have to deal with an IP-based or a name-based vhost.</source>
          <target state="translated">이 경우 &lt;code&gt;VirtualHost&lt;/code&gt; IP 주소에 대한 정의는, 다음 단계는 우리가 IP 기반 또는 이름 기반 가상 호스트를 처리해야하는 경우 결정하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="beff8d8865b14d793c0389cee29b3cd02015d925" translate="yes" xml:space="preserve">
          <source>If there are multiple &lt;code&gt;VirtualHost&lt;/code&gt; directives listing the IP address and port combination that was determined to be the best match, the &quot;list&quot; in the remaining steps refers to the list of vhosts that matched, in the order they were in the configuration file.</source>
          <target state="translated">가장 일치하는 것으로 결정된 IP 주소 및 포트 조합을 나열하는 여러 &lt;code&gt;VirtualHost&lt;/code&gt; 지시문이있는 경우 나머지 단계의 &quot;목록&quot;은 구성 파일에있는 순서대로 일치하는 호스트 목록을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="0e265b8bcb339630988f0f791c958475b9f66983" translate="yes" xml:space="preserve">
          <source>If there are no exact matches for the address and port, then wildcard (&lt;code&gt;*&lt;/code&gt;) matches are considered.</source>
          <target state="translated">주소와 포트가 정확히 일치하지 않으면 와일드 카드 ( &lt;code&gt;*&lt;/code&gt; ) 일치가 고려됩니다.</target>
        </trans-unit>
        <trans-unit id="79f1deaf85803ea8159c912edc94773b174555b1" translate="yes" xml:space="preserve">
          <source>If there is exactly one &lt;code&gt;VirtualHost&lt;/code&gt; directive listing the IP address and port combination that was determined to be the best match, no further actions are performed and the request is served from the matching vhost.</source>
          <target state="translated">가장 일치하는 것으로 결정된 IP 주소 및 포트 조합을 나열하는 &lt;code&gt;VirtualHost&lt;/code&gt; 지시문 이 정확히 하나만 있으면 추가 조치가 수행되지 않고 일치하는 호스트에서 요청이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="721e1f57554b60f73a156baa9315eb38c4af0405" translate="yes" xml:space="preserve">
          <source>If there is more than one expression in parenthesis, they are available in order in the variables &lt;code&gt;$1&lt;/code&gt;, &lt;code&gt;$2&lt;/code&gt;, &lt;code&gt;$3&lt;/code&gt;, and so on.</source>
          <target state="translated">괄호 안에 둘 이상의 표현식이 있으면 변수 &lt;code&gt;$1&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; , &lt;code&gt;$3&lt;/code&gt; 등의 순서로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a94aceae7ac5e69071e36da5a6c4e04ac4411f1c" translate="yes" xml:space="preserve">
          <source>If there is no more data in the body (i.e. the servlet container is trying to read past the end of the body), the server will send back an &lt;em&gt;empty&lt;/em&gt; packet, which is a body packet with a payload length of 0. &lt;code&gt;(0x12,0x34,0x00,0x00)&lt;/code&gt;</source>
          <target state="translated">본문에 더 이상 데이터가 없으면 (즉, 서블릿 컨테이너가 본문 끝을 지나서 읽으려고 시도하는 경우) 서버는 &lt;em&gt;빈&lt;/em&gt; 패킷 &lt;code&gt;(0x12,0x34,0x00,0x00)&lt;/code&gt; 페이로드 길이가 0 인 본문 패킷)을 다시 보냅니다. (0x12, 0x34,0x00,0x00)</target>
        </trans-unit>
        <trans-unit id="55e218a82ff6cc0bf17bbf493040f04c075e85bb" translate="yes" xml:space="preserve">
          <source>If this directive is enabled, SSL connections will be vulnerable to the Man-in-the-Middle prefix attack as described in &lt;a href=&quot;http://cve.mitre.org/cgi-bin/cvename.cgi?name=CAN-2009-3555&quot;&gt;CVE-2009-3555&lt;/a&gt;.</source>
          <target state="translated">이 지시문을 사용하면 &lt;a href=&quot;http://cve.mitre.org/cgi-bin/cvename.cgi?name=CAN-2009-3555&quot;&gt;CVE-2009-3555에&lt;/a&gt; 설명 된대로 SSL 연결이 중간자 접두사 공격 에 취약 합니다.</target>
        </trans-unit>
        <trans-unit id="784ed500610949ff4546defd5bc71e3d3d287cb0" translate="yes" xml:space="preserve">
          <source>If this directive is enabled, all of the certificates in the file will be trusted as if they were also in &lt;code&gt;&lt;a href=&quot;#sslproxycacertificatefile&quot;&gt; SSLProxyCACertificateFile&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">이 지정 문이 사용 가능한 경우 파일의 모든 인증서는 마치 &lt;code&gt;&lt;a href=&quot;#sslproxycacertificatefile&quot;&gt; SSLProxyCACertificateFile&lt;/a&gt;&lt;/code&gt; 에 있는 것처럼 신뢰됩니다 .</target>
        </trans-unit>
        <trans-unit id="25098e295a886a228021905282cb0d48109f53f3" translate="yes" xml:space="preserve">
          <source>If this directive is not used, cookies last only for the current browser session.</source>
          <target state="translated">이 지정 문을 사용하지 않으면 쿠키는 현재 브라우저 세션 동안 만 지속됩니다.</target>
        </trans-unit>
        <trans-unit id="997810c53554fdfd14ef47fd1648efc833831b70" translate="yes" xml:space="preserve">
          <source>If this directive is set to on, the value of the &lt;code&gt;REMOTE_USER&lt;/code&gt; environment variable will be set to the full distinguished name of the authenticated user, rather than just the username that was passed by the client. It is turned off by default.</source>
          <target state="translated">이 지정 문이 on으로 설정되면 &lt;code&gt;REMOTE_USER&lt;/code&gt; 환경 변수 의 값은 클라이언트가 전달한 사용자 이름이 아니라 인증 된 사용자의 전체 식별 이름으로 설정됩니다. 기본적으로 해제되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="e67f44a3236c50797da6e500bbaf8a41f24e0ddb" translate="yes" xml:space="preserve">
          <source>If this directive is set, the value of the &lt;code&gt;REMOTE_USER&lt;/code&gt; environment variable will be set to the value of the attribute specified. Make sure that this attribute is included in the list of attributes in the AuthLDAPUrl definition, otherwise this directive will have no effect. This directive, if present, takes precedence over &lt;code&gt;&lt;a href=&quot;#authldapremoteuserisdn&quot;&gt;AuthLDAPRemoteUserIsDN&lt;/a&gt;&lt;/code&gt;. This directive is useful should you want people to log into a website using an email address, but a backend application expects the username as a userid.</source>
          <target state="translated">이 지정 문이 설정되면 &lt;code&gt;REMOTE_USER&lt;/code&gt; 환경 변수의 값이 지정된 속성의 값으로 설정됩니다. 이 속성이 AuthLDAPUrl 정의의 속성 목록에 포함되어 있는지 확인하십시오. 그렇지 않으면이 지시문이 적용되지 않습니다. 이 지시문이 있으면 &lt;code&gt;&lt;a href=&quot;#authldapremoteuserisdn&quot;&gt;AuthLDAPRemoteUserIsDN&lt;/a&gt;&lt;/code&gt; 보다 우선 합니다. 이 지시문은 사람들이 전자 메일 주소를 사용하여 웹 사이트에 로그인하도록하려는 경우 유용하지만 백엔드 응용 프로그램은 사용자 이름을 사용자 ID로 예상합니다.</target>
        </trans-unit>
        <trans-unit id="fe08203b1292b2678ad231f8591fd6238e2dbf1a" translate="yes" xml:space="preserve">
          <source>If this feature is on, you can use the directive &lt;code&gt;&lt;a href=&quot;../mod/mod_http2#h2pushresource&quot;&gt;H2PushResource&lt;/a&gt;&lt;/code&gt; to trigger early hints and resource PUSHes:</source>
          <target state="translated">이 기능이 켜져 있으면 &lt;code&gt;&lt;a href=&quot;../mod/mod_http2#h2pushresource&quot;&gt;H2PushResource&lt;/a&gt;&lt;/code&gt; 지시문을 사용하여 초기 힌트 및 리소스 PUSH를 트리거 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="78425fe9e59e6b6ed2b5a337bdc9d1407ad1bbc5" translate="yes" xml:space="preserve">
          <source>If this option is enabled, all child configurations will inherit the configuration of the current configuration. It is equivalent to specifying &lt;code&gt;RewriteOptions Inherit&lt;/code&gt; in all child configurations. See the &lt;code&gt;Inherit&lt;/code&gt; option for more details on how the parent-child relationships are handled.</source>
          <target state="translated">이 옵션을 사용하면 모든 하위 구성이 현재 구성의 구성을 상속합니다. 모든 자식 구성에서 &lt;code&gt;RewriteOptions Inherit&lt;/code&gt; 를 지정하는 것과 같습니다 . 부모-자식 관계를 처리하는 방법에 대한 자세한 내용 은 &lt;code&gt;Inherit&lt;/code&gt; 옵션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="88ca4c5dcf539e61c44922ff45b72d48f5635f0b" translate="yes" xml:space="preserve">
          <source>If this option is enabled, names are sorted in a case-insensitive manner. For instance, if the sort order is ascending by name, and &lt;code&gt;IgnoreCase&lt;/code&gt; is enabled, file Zeta will be listed after file alfa (Note: file GAMMA will always be listed before file gamma).</source>
          <target state="translated">이 옵션을 사용하면 이름이 대소 문자를 구분하지 않고 정렬됩니다. 예를 들어, 정렬 순서가 이름에 따라 오름차순이고 &lt;code&gt;IgnoreCase&lt;/code&gt; 가 활성화 된 경우 파일 Zeta는 파일 alfa 다음에 나열됩니다 (참고 : 파일 GAMMA는 항상 파일 감마 앞에 나열됩니다).</target>
        </trans-unit>
        <trans-unit id="8fbdfad6d15f59b959976155fd269c4c557798ff" translate="yes" xml:space="preserve">
          <source>If this option is enabled, subdirectory listings will &lt;em&gt;always&lt;/em&gt; appear first, followed by normal files in the directory. The listing is basically broken into two components, the files and the subdirectories, and each is sorted separately and then displayed subdirectories-first. For instance, if the sort order is descending by name, and &lt;code&gt;FoldersFirst&lt;/code&gt; is enabled, subdirectory &lt;code&gt;Zed&lt;/code&gt; will be listed before subdirectory &lt;code&gt;Beta&lt;/code&gt;, which will be listed before normal files &lt;code&gt;Gamma&lt;/code&gt; and &lt;code&gt;Alpha&lt;/code&gt;. &lt;strong&gt;This option only has an effect if &lt;a href=&quot;#indexoptions.fancyindexing&quot;&gt;&lt;code&gt;FancyIndexing&lt;/code&gt;&lt;/a&gt; is also enabled.&lt;/strong&gt;</source>
          <target state="translated">이 옵션을 사용하면 하위 디렉토리 목록이 &lt;em&gt;항상&lt;/em&gt; 먼저 나타난 다음 디렉토리의 일반 파일이 나타납니다. 리스팅은 기본적으로 파일과 서브 디렉토리의 두 구성 요소로 나뉘며 각각은 개별적으로 분류 된 다음 서브 디렉토리를 먼저 표시합니다. 예를 들어, 정렬 순서가 이름별로 내림차순이고 &lt;code&gt;FoldersFirst&lt;/code&gt; 가 사용 가능한 경우, 서브 디렉토리 &lt;code&gt;Zed&lt;/code&gt; 는 서브 디렉토리 &lt;code&gt;Beta&lt;/code&gt; 앞에 나열 되며 이는 일반 파일 &lt;code&gt;Gamma&lt;/code&gt; 및 &lt;code&gt;Alpha&lt;/code&gt; 앞에 나열됩니다 . &lt;strong&gt;이 옵션은 &lt;a href=&quot;#indexoptions.fancyindexing&quot;&gt; &lt;code&gt;FancyIndexing&lt;/code&gt; &lt;/a&gt; 이 활성화 된 경우에만 적용됩니다 .&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6be1435dabd736bad285acc5efd9bde99e325725" translate="yes" xml:space="preserve">
          <source>If this option is omitted, the &lt;a href=&quot;../mpm#defaults&quot;&gt;default MPM&lt;/a&gt; for your operating system will be used.</source>
          <target state="translated">이 옵션을 생략하면 운영 체제 의 &lt;a href=&quot;../mpm#defaults&quot;&gt;기본 MPM&lt;/a&gt; 이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="31aab77489282d730dcc11feb22c8ebbc40518e6" translate="yes" xml:space="preserve">
          <source>If this request header exists, its value is transformed according to a &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#regex&quot;&gt;regular expression&lt;/a&gt; search-and-replace. The &lt;var&gt;value&lt;/var&gt; argument is a &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#regex&quot;&gt;regular expression&lt;/a&gt;, and the &lt;var&gt;replacement&lt;/var&gt; is a replacement string, which may contain backreferences or format specifiers. The &lt;code&gt;edit&lt;/code&gt; form will match and replace exactly once in a header value, whereas the &lt;code&gt;edit*&lt;/code&gt; form will replace &lt;em&gt;every&lt;/em&gt; instance of the search pattern if it appears more than once.</source>
          <target state="translated">이 요청 헤더가 존재하면 해당 값은 &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#regex&quot;&gt;정규식&lt;/a&gt; 검색 및 바꾸기 에 따라 변환됩니다 . &lt;var&gt;value&lt;/var&gt; 인자는이다 &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#regex&quot;&gt;정규식&lt;/a&gt; 과 &lt;var&gt;replacement&lt;/var&gt; 역 참조 또는 포맷 지시자를 포함 할 수있는 여분의 문자열이다. &lt;code&gt;edit&lt;/code&gt; 형태는 반면, 일치와 헤더 값에 정확히 한 번만 대체 할 &lt;code&gt;edit*&lt;/code&gt; 양식을 대체 할 &lt;em&gt;때마다&lt;/em&gt; 한 번 이상 나타나는 경우 검색 패턴의 인스턴스를.</target>
        </trans-unit>
        <trans-unit id="9eb7121ee4261fb74251fa5d73929edd8999fd74" translate="yes" xml:space="preserve">
          <source>If this response header exists, its value is transformed according to a &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#regex&quot;&gt;regular expression&lt;/a&gt; search-and-replace. The &lt;var&gt;value&lt;/var&gt; argument is a &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#regex&quot;&gt;regular expression&lt;/a&gt;, and the &lt;var&gt;replacement&lt;/var&gt; is a replacement string, which may contain backreferences or format specifiers. The &lt;code&gt;edit&lt;/code&gt; form will match and replace exactly once in a header value, whereas the &lt;code&gt;edit*&lt;/code&gt; form will replace &lt;em&gt;every&lt;/em&gt; instance of the search pattern if it appears more than once.</source>
          <target state="translated">이 응답 헤더가 있으면 해당 값은 &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#regex&quot;&gt;정규식&lt;/a&gt; 검색 및 바꾸기 에 따라 변환됩니다 . &lt;var&gt;value&lt;/var&gt; 인자는이다 &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#regex&quot;&gt;정규식&lt;/a&gt; 과 &lt;var&gt;replacement&lt;/var&gt; 역 참조 또는 포맷 지시자를 포함 할 수있는 여분의 문자열이다. &lt;code&gt;edit&lt;/code&gt; 형태는 반면, 일치와 헤더 값에 정확히 한 번만 대체 할 &lt;code&gt;edit*&lt;/code&gt; 양식을 대체 할 &lt;em&gt;때마다&lt;/em&gt; 한 번 이상 나타나는 경우 검색 패턴의 인스턴스를.</target>
        </trans-unit>
        <trans-unit id="84e0c31cfed012fa351572a573540e93d61e3813" translate="yes" xml:space="preserve">
          <source>If this variable is set, no pooled connection will be reused if the client request is the initial request on the frontend connection. This avoids the &quot;proxy: error reading status line from remote server&quot; error message caused by the race condition that the backend server closed the pooled connection after the connection check by the proxy and before data sent by the proxy reached the backend. It has to be kept in mind that setting this variable downgrades performance, especially with HTTP/1.0 clients.</source>
          <target state="translated">이 변수를 설정하면 클라이언트 요청이 프런트 엔드 연결의 초기 요청 인 경우 풀링 된 연결이 재사용되지 않습니다. 이렇게하면 프록시가 연결을 확인한 후 프록시가 보낸 데이터가 백엔드에 도달하기 전에 백엔드 서버가 풀링 된 연결을 닫은 경쟁 조건으로 인해 발생하는 &quot;프록시 : 원격 서버에서 상태 라인을 읽는 중 오류&quot;오류 메시지가 표시되지 않습니다. 이 변수를 설정하면 특히 HTTP / 1.0 클라이언트에서 성능이 다운 그레이드된다는 점을 명심해야합니다.</target>
        </trans-unit>
        <trans-unit id="6246476f098b3f7e8a4cacb4452232bad3d8c59c" translate="yes" xml:space="preserve">
          <source>If two vhosts have an address in common, those common addresses act as name-based virtual hosts implicitly. This is new behavior as of 2.3.11.</source>
          <target state="translated">두 개의 호스트에 공통 주소가있는 경우 해당 공통 주소는 이름 기반 가상 호스트 역할을 암시 적으로 수행합니다. 이것은 2.3.11의 새로운 동작입니다.</target>
        </trans-unit>
        <trans-unit id="400149d4017eec9958b169e3bfbd9b9ea787b9a5" translate="yes" xml:space="preserve">
          <source>If used in a &lt;code&gt;&amp;lt;Location&amp;gt;&lt;/code&gt; directive, the path needs to be specified below the Location, or if the word &quot;on&quot; is used, caching for the whole location will be disabled.</source>
          <target state="translated">&lt;code&gt;&amp;lt;Location&amp;gt;&lt;/code&gt; 지시문에 사용 된 경우 경로를 위치 아래에 지정해야하거나 &quot;on&quot;이라는 단어를 사용하면 전체 위치에 대한 캐싱이 비활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="e06ba102bde75d6c2458a3c27f070d7a54193eea" translate="yes" xml:space="preserve">
          <source>If used in per-directory context, use only &lt;code&gt;-&lt;/code&gt; (dash) as the substitution &lt;em&gt;for the entire round of mod_rewrite processing&lt;/em&gt;, otherwise the MIME-type set with this flag is lost due to an internal re-processing (including subsequent rounds of mod_rewrite processing). The &lt;code&gt;L&lt;/code&gt; flag can be useful in this context to end the &lt;em&gt;current&lt;/em&gt; round of mod_rewrite processing.</source>
          <target state="translated">디렉토리 별 컨텍스트에서 사용되는 경우, &lt;em&gt;mod_rewrite 처리 전체 라운드의&lt;/em&gt; 대체로 &lt;code&gt;-&lt;/code&gt; (대시) 만 사용 하십시오 . 그렇지 않으면이 플래그로 설정된 MIME 유형이 내부 재 처리 (이후의 mod_rewrite 처리 라운드 포함)로 인해 손실됩니다. ). &lt;code&gt;L&lt;/code&gt; 의 플래그는 끝이 문맥에서 유용 할 수있는 &lt;em&gt;현재&lt;/em&gt; 의 mod_rewrite 처리 라운드.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="55dcab36fe91530f2f13756f85cdb06db94754fe" translate="yes" xml:space="preserve">
          <source>If used in per-server context (&lt;em&gt;i.e.&lt;/em&gt;, before the request is mapped to the filesystem) SCRIPT_FILENAME and REQUEST_FILENAME cannot contain the full local filesystem path since the path is unknown at this stage of processing. Both variables will initially contain the value of REQUEST_URI in that case. In order to obtain the full local filesystem path of the request in per-server context, use an URL-based look-ahead &lt;code&gt;%{LA-U:REQUEST_FILENAME}&lt;/code&gt; to determine the final value of REQUEST_FILENAME.</source>
          <target state="translated">서버 별 컨텍스트에서 사용되는 경우 ( &lt;em&gt;즉&lt;/em&gt; , 요청이 파일 시스템에 매핑되기 전에) SCRIPT_FILENAME 및 REQUEST_FILENAME은이 처리 단계에서 경로를 알 수 없으므로 전체 로컬 파일 시스템 경로를 포함 할 수 없습니다. 이 경우 두 변수 모두 처음에 REQUEST_URI 값을 포함합니다. 서버 별 컨텍스트에서 요청의 전체 로컬 파일 시스템 경로를 얻으려면 URL 기반 미리보기 &lt;code&gt;%{LA-U:REQUEST_FILENAME}&lt;/code&gt; 을 (를) 사용하여 REQUEST_FILENAME의 최종 값을 결정하십시오.</target>
        </trans-unit>
        <trans-unit id="3330080d34be361ef164d57bd0f2463ce1f3e362" translate="yes" xml:space="preserve">
          <source>If used with AJP, this directive sets the maximum AJP packet size in bytes. Values larger than 65536 are set to 65536. If you change it from the default, you must also change the &lt;code&gt;packetSize&lt;/code&gt; attribute of your AJP connector on the Tomcat side! The attribute &lt;code&gt;packetSize&lt;/code&gt; is only available in Tomcat &lt;code&gt;5.5.20+&lt;/code&gt; and &lt;code&gt;6.0.2+&lt;/code&gt;</source>
          <target state="translated">AJP와 함께 사용되는 경우이 지정 문은 최대 AJP 패킷 크기를 바이트 단위로 설정합니다. 65536보다 큰 값은 65536으로 설정됩니다. 기본값에서 변경 하면 Tomcat 측에서 AJP 커넥터 의 &lt;code&gt;packetSize&lt;/code&gt; 속성 도 변경해야합니다 ! &lt;code&gt;packetSize&lt;/code&gt; 속성 은 Tomcat &lt;code&gt;5.5.20+&lt;/code&gt; 및 &lt;code&gt;6.0.2+&lt;/code&gt; 에서만 사용 가능합니다.</target>
        </trans-unit>
        <trans-unit id="39244197652c81363ec5dbf37d50951612d089fd" translate="yes" xml:space="preserve">
          <source>If using a health check method (eg: &lt;code&gt;GET&lt;/code&gt;) which results in a response body, that body itself can be checked via &lt;code&gt;ap_expr&lt;/code&gt; using the &lt;code&gt;hc()&lt;/code&gt; expression function, which is unique to this module.</source>
          <target state="translated">응답 본문을 생성 하는 상태 확인 방법 (예 : &lt;code&gt;GET&lt;/code&gt; )을 사용하는 경우 해당 본문 자체는 이 모듈에 고유 한 &lt;code&gt;hc()&lt;/code&gt; 표현식 함수를 사용하여 &lt;code&gt;ap_expr&lt;/code&gt; 을 통해 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f0fdb288a2aa9c3fa1de83a138fccd9ba3006ff0" translate="yes" xml:space="preserve">
          <source>If you add a redirect, it must be the last alternative in the list. Apache httpd cannot determine if the redirect succeeded or not, so if you have the redirect earlier in the list, that will always be the alternative that is used.</source>
          <target state="translated">리디렉션을 추가하는 경우 목록에서 마지막 대안이어야합니다. Apache httpd는 경로 재 지정의 성공 여부를 판별 할 수 없으므로 목록의 앞부분에 경로 재 지정이있는 경우 항상 대체 방법이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a3974bcf02073e9bd452d2abec2fb6b8c669fd65" translate="yes" xml:space="preserve">
          <source>If you allow non-root users to modify any files that root either executes or writes on then you open your system to root compromises. For example, someone could replace the &lt;code&gt;&lt;a href=&quot;../programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; binary so that the next time you start it, it will execute some arbitrary code. If the logs directory is writeable (by a non-root user), someone could replace a log file with a symlink to some other system file, and then root might overwrite that file with arbitrary data. If the log files themselves are writeable (by a non-root user), then someone may be able to overwrite the log itself with bogus data.</source>
          <target state="translated">루트가 아닌 사용자가 루트가 실행하거나 기록하는 파일을 수정할 수 있도록 허용하면 시스템이 루트 손상으로 열립니다. 예를 들어, 누군가 다음에 시작할 때 &lt;code&gt;&lt;a href=&quot;../programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; 바이너리를 대체하여 임의의 코드를 실행할 수 있습니다. root가 아닌 사용자가 logs 디렉토리를 쓸 수있는 경우 누군가가 로그 파일을 다른 시스템 파일에 대한 심볼릭 링크로 대체 한 다음 root가 해당 파일을 임의의 데이터로 겹쳐 쓸 수 있습니다. 루트가 아닌 사용자가 로그 파일 자체를 쓸 수있는 경우 누군가가 로그 자체를 가짜 데이터로 덮어 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6b79f6a75e22eded68b5a83c1dd288161de5798c" translate="yes" xml:space="preserve">
          <source>If you allow the account to log in as a user and as a service, then you can log on with that account and test that the account has the privileges to execute the scripts, read the web pages, and that you can start Apache in a console window. If this works, and you have followed the steps above, Apache should execute as a service with no problems.</source>
          <target state="translated">계정이 사용자 및 서비스로 로그인하도록 허용 한 경우 해당 계정으로 로그온하여 계정에 스크립트를 실행할 수있는 권한이 있는지 테스트하고 웹 페이지를 읽고 Apache 웹 사이트에서 Apache를 시작할 수 있는지 테스트 할 수 있습니다 콘솔 창. 이것이 작동하고 위의 단계를 따른 경우 Apache는 문제없이 서비스로 실행되어야합니다.</target>
        </trans-unit>
        <trans-unit id="a4376b1525efb77494b9dfd55e5df909261c4f0b" translate="yes" xml:space="preserve">
          <source>If you are &lt;code&gt;root&lt;/code&gt;, this option displays the compile options of &lt;code&gt;suexec&lt;/code&gt;. For security reasons all configuration options are changeable only at compile time.</source>
          <target state="translated">당신이 경우 &lt;code&gt;root&lt;/code&gt; ,이 옵션이 표시의 컴파일 옵션 &lt;code&gt;suexec&lt;/code&gt; 를 . 보안상의 이유로 모든 구성 옵션은 컴파일 타임에만 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="620302d1d107eb54e9915bef46f3e6e8d9cc3e78" translate="yes" xml:space="preserve">
          <source>If you are having problems with the service, it is suggested you follow the instructions below to try starting httpd.exe from a console window, and work out the errors before struggling to start it as a service again.</source>
          <target state="translated">서비스에 문제가있는 경우 아래 지침에 따라 콘솔 창에서 httpd.exe를 시작하고 오류를 해결 한 후 다시 시작하여 서비스로 시작하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="fd654d76188f199920d718b61293ebd6596a3eee" translate="yes" xml:space="preserve">
          <source>If you are managing any site that is more than a few pages, you may find that making changes to all those pages can be a real pain, particularly if you are trying to maintain some kind of standard look across all those pages.</source>
          <target state="translated">몇 페이지 이상의 사이트를 관리하는 경우, 특히 모든 페이지에서 일종의 표준 모양을 유지하려는 경우 모든 페이지를 변경하는 것이 매우 어려울 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="55655a8dcd8075b7231661ac57903cc83d0aa90a" translate="yes" xml:space="preserve">
          <source>If you are matching positive (&lt;code&gt;=&lt;/code&gt; or &lt;code&gt;==&lt;/code&gt;), you can capture grouped parts of the regular expression. The captured parts are stored in the special variables &lt;code&gt;$1&lt;/code&gt; .. &lt;code&gt;$9&lt;/code&gt;. The whole string matched by the regular expression is stored in the special variable &lt;code&gt;$0&lt;/code&gt;</source>
          <target state="translated">양수 ( &lt;code&gt;=&lt;/code&gt; 또는 &lt;code&gt;==&lt;/code&gt; )와 일치하는 경우 정규식의 그룹화 된 부분을 캡처 할 수 있습니다. 캡처 된 부품은 특수 변수 &lt;code&gt;$1&lt;/code&gt; .. &lt;code&gt;$9&lt;/code&gt; 됩니다. 정규식과 일치하는 전체 문자열은 특수 변수 &lt;code&gt;$0&lt;/code&gt; 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="8d6206cf8b27b055dffd11a5c363fa95e4a4c741" translate="yes" xml:space="preserve">
          <source>If you are processing data with known encoding but no encoding information, you can set this default to help mod_xml2enc process the data correctly. For example, to work with the default value of Latin1 (&lt;var&gt;iso-8859-1&lt;/var&gt; specified in HTTP/1.0, use</source>
          <target state="translated">알려진 인코딩은 있지만 인코딩 정보는없는 데이터를 처리하는 경우 mod_xml2enc가 데이터를 올바르게 처리하도록이 기본값을 설정할 수 있습니다. 예를 들어, Latin1 ( HTTP / 1.0에 지정된 &lt;var&gt;iso-8859-1&lt;/var&gt; ) 기본값으로 작업 하려면</target>
        </trans-unit>
        <trans-unit id="27dde7e4bcf5b53971ae08d41ad374987d3386cf" translate="yes" xml:space="preserve">
          <source>If you are programming Apache 2.0 &lt;code&gt;&lt;a href=&quot;mod_isapi&quot;&gt;mod_isapi&lt;/a&gt;&lt;/code&gt; modules, you must limit your calls to &lt;code&gt;ServerSupportFunction&lt;/code&gt; to the following directives:</source>
          <target state="translated">Apache 2.0 &lt;code&gt;&lt;a href=&quot;mod_isapi&quot;&gt;mod_isapi&lt;/a&gt;&lt;/code&gt; 모듈을 프로그래밍하는 경우 &lt;code&gt;ServerSupportFunction&lt;/code&gt; 에 대한 호출을 다음 지시문으로 제한해야합니다 .</target>
        </trans-unit>
        <trans-unit id="e4d54f0d893f59771db7008978d580d1de25f1e8" translate="yes" xml:space="preserve">
          <source>If you are proxying content to your server, you need to be aware that the client address will be the address of your proxy server, not the address of the client, and so using the &lt;code&gt;Require&lt;/code&gt; directive in this context may not do what you mean. See &lt;code&gt;&lt;a href=&quot;mod_remoteip&quot;&gt;mod_remoteip&lt;/a&gt;&lt;/code&gt; for one possible solution to this problem.</source>
          <target state="translated">컨텐츠를 서버에 프록시하는 경우 클라이언트 주소는 클라이언트 주소가 아닌 프록시 서버의 주소가 &lt;code&gt;Require&lt;/code&gt; 컨텍스트에서 Require 지시문을 사용하면 원하는대로 작동하지 않을 수 있습니다. 이 문제에 대한 가능한 해결책 은 &lt;code&gt;&lt;a href=&quot;mod_remoteip&quot;&gt;mod_remoteip&lt;/a&gt;&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="81069bf1271973c7e91a896aa740574930b7b28d" translate="yes" xml:space="preserve">
          <source>If you are really stuck with &lt;code&gt;&lt;a href=&quot;../mod/prefork&quot;&gt;prefork&lt;/a&gt;&lt;/code&gt; and want multiple requests, you can tweak the &lt;code&gt;&lt;a href=&quot;../mod/mod_http2#h2minworkers&quot;&gt;H2MinWorkers&lt;/a&gt;&lt;/code&gt; to make that possible. If it breaks, however, you own both parts.</source>
          <target state="translated">당신이 정말로 붙어있는 경우 &lt;code&gt;&lt;a href=&quot;../mod/prefork&quot;&gt;prefork&lt;/a&gt;&lt;/code&gt; 의 여러 요청을하려는 경우에는 조정할 수 &lt;code&gt;&lt;a href=&quot;../mod/mod_http2#h2minworkers&quot;&gt;H2MinWorkers&lt;/a&gt;&lt;/code&gt; 을 것을 가능하게 할 수 있습니다. 그러나 고장난 경우 두 부품을 모두 소유 한 것입니다.</target>
        </trans-unit>
        <trans-unit id="ebdbfbfaffa36267b0cde70d16a7c04e02d0f36e" translate="yes" xml:space="preserve">
          <source>If you are testing a server that is not Internet-accessible, you can put host names in your hosts file in order to do local resolution. For example, you might want to put a record in your hosts file to map a request for &lt;code&gt;www.example.com&lt;/code&gt; to your local system, for testing purposes. This entry would look like:</source>
          <target state="translated">인터넷에 액세스 할 수없는 서버를 테스트하는 경우 로컬 확인을 수행하기 위해 호스트 파일에 호스트 이름을 넣을 수 있습니다. 예를 들어 테스트 목적으로 &lt;code&gt;www.example.com&lt;/code&gt; 에 대한 요청을 로컬 시스템 에 매핑하기 위해 호스트 파일에 레코드를 넣을 수 있습니다 . 이 항목은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="08b79107313d93324ba9c49ed2fe15276fcdf987" translate="yes" xml:space="preserve">
          <source>If you are trying to debug your virtual host configuration, you may find the &lt;code&gt;-S&lt;/code&gt; command line switch useful.</source>
          <target state="translated">가상 호스트 구성을 디버그하려는 경우 &lt;code&gt;-S&lt;/code&gt; 명령 행 스위치가 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c980d16248819c4e18d45e759b7355e200aaa778" translate="yes" xml:space="preserve">
          <source>If you are unsure whether a particular directive is permitted in a &lt;code&gt;.htaccess&lt;/code&gt; file, look at the documentation for that directive, and check the Context line for &quot;.htaccess&quot;.</source>
          <target state="translated">&lt;code&gt;.htaccess&lt;/code&gt; 파일 에서 특정 지시문이 허용되는지 확실하지 않은 경우 해당 지시문의 문서를보고 컨텍스트 행에서 &quot;.htaccess&quot;를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="e40669ef956ac9d27b0fa09b8c04f35043177d12" translate="yes" xml:space="preserve">
          <source>If you are upgrading from one minor version to the next (for example, 2.4.9 to 2.4.10), please skip down to the &lt;a href=&quot;#upgrading&quot;&gt;upgrading&lt;/a&gt; section.</source>
          <target state="translated">하나의 부 버전에서 다음 부 버전으로 업그레이드하는 경우 (예 : 2.4.9에서 2.4.10) &lt;a href=&quot;#upgrading&quot;&gt;업그레이드&lt;/a&gt; 섹션으로 건너 뛰십시오 .</target>
        </trans-unit>
        <trans-unit id="794058e8ad218b25b3122b7f4e1407e9a615b80d" translate="yes" xml:space="preserve">
          <source>If you are upgrading, the installation will not overwrite your configuration files or documents.</source>
          <target state="translated">업그레이드하는 경우 설치시 구성 파일 또는 문서를 덮어 쓰지 않습니다.</target>
        </trans-unit>
        <trans-unit id="020cf8f3252135d43d1095a4d53ada0d3f78c418" translate="yes" xml:space="preserve">
          <source>If you are using &lt;a href=&quot;../vhosts/name-based&quot;&gt;name-based virtual hosts&lt;/a&gt;, the &lt;code&gt;ServerName&lt;/code&gt; inside a &lt;code&gt;&lt;a href=&quot;#virtualhost&quot;&gt;&amp;lt;VirtualHost&amp;gt;&lt;/a&gt;&lt;/code&gt; section specifies what hostname must appear in the request's &lt;code&gt;Host:&lt;/code&gt; header to match this virtual host.</source>
          <target state="translated">당신이 사용하는 경우 &lt;a href=&quot;../vhosts/name-based&quot;&gt;이름 기반 가상 호스트&lt;/a&gt; 의 &lt;code&gt;ServerName&lt;/code&gt; , 안쪽 &lt;code&gt;&lt;a href=&quot;#virtualhost&quot;&gt;&amp;lt;VirtualHost&amp;gt;&lt;/a&gt;&lt;/code&gt; 섹션에 지정하는 호스트 이름은 요청의에 표시해야하는지 &lt;code&gt;Host:&lt;/code&gt; 헤더는이 가상 호스트에 일치하도록.</target>
        </trans-unit>
        <trans-unit id="d4a033642a8f865f9e86a5ed2402ef4305e2c4ad" translate="yes" xml:space="preserve">
          <source>If you are using &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; in either &lt;code&gt;.htaccess&lt;/code&gt; files or in &lt;code&gt;&lt;a href=&quot;../mod/core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; sections, it is important to have some understanding of how the rules are processed. The simplified form of this is that once the rules have been processed, the rewritten request is handed back to the URL parsing engine to do what it may with it. It is possible that as the rewritten request is handled, the &lt;code&gt;.htaccess&lt;/code&gt; file or &lt;code&gt;&lt;a href=&quot;../mod/core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; section may be encountered again, and thus the ruleset may be run again from the start. Most commonly this will happen if one of the rules causes a redirect - either internal or external - causing the request process to start over.</source>
          <target state="translated">&lt;code&gt;.htaccess&lt;/code&gt; 파일 또는 &lt;code&gt;&lt;a href=&quot;../mod/core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; 섹션 에서 &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; 을 사용 하는 경우 규칙이 처리되는 방식을 이해하는 것이 중요합니다. 이 규칙의 단순화 된 형식은 일단 규칙이 처리되면 다시 작성된 요청이 URL 구문 분석 엔진으로 다시 전달되어 규칙을 수행 할 수 있다는 것입니다. 다시 작성된 요청이 처리 될 때 &lt;code&gt;.htaccess&lt;/code&gt; 파일 또는 &lt;code&gt;&lt;a href=&quot;../mod/core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; 섹션이 다시 발생하여 규칙 세트가 처음부터 다시 실행될 수 있습니다. 규칙 중 하나에서 내부 또는 외부로 리디렉션이 발생하여 요청 프로세스가 다시 시작되는 경우 가장 일반적으로 발생합니다.</target>
        </trans-unit>
        <trans-unit id="96380335ff61e26dbf750b21b120c5fc3accd47b" translate="yes" xml:space="preserve">
          <source>If you are using a version of the web server and OpenSSL that support SNI, though, and the client's browser also supports SNI, then the hostname is included in the original SSL request, and the web server can select the correct SSL virtual host.</source>
          <target state="translated">SNI를 지원하는 웹 서버 및 OpenSSL 버전을 사용하고 있고 클라이언트 브라우저도 SNI를 지원하는 경우 호스트 이름은 원래 SSL 요청에 포함되며 웹 서버는 올바른 SSL 가상 호스트를 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="131d2e35e21825a8b23c08b844d01f00b0fb06f6" translate="yes" xml:space="preserve">
          <source>If you are using language negotiation you can choose between different naming conventions, because files can have more than one extension, and the order of the extensions is normally irrelevant (see the &lt;a href=&quot;mod/mod_mime#multipleext&quot;&gt;mod_mime&lt;/a&gt; documentation for details).</source>
          <target state="translated">언어 협상을 사용하는 경우 파일 이름이 둘 이상일 수 있고 확장 순서가 일반적으로 관련이 없기 때문에 다른 명명 규칙 중에서 선택할 수 있습니다 (자세한 내용은 &lt;a href=&quot;mod/mod_mime#multipleext&quot;&gt;mod_mime&lt;/a&gt; 설명서 참조).</target>
        </trans-unit>
        <trans-unit id="5c548c1d1f2e583cdcffc8a0991961d75aa4393b" translate="yes" xml:space="preserve">
          <source>If you are using mod_proxy, you may wish to enable &lt;code&gt;&lt;a href=&quot;mod_proxy#proxyerroroverride&quot;&gt;ProxyErrorOverride&lt;/a&gt;&lt;/code&gt; so that you can provide custom error messages on behalf of your Origin servers. If you don't enable ProxyErrorOverride, Apache httpd will not generate custom error documents for proxied content.</source>
          <target state="translated">mod_proxy를 사용하는 경우 Origin 서버 대신 사용자 정의 오류 메시지를 제공 할 수 있도록 &lt;code&gt;&lt;a href=&quot;mod_proxy#proxyerroroverride&quot;&gt;ProxyErrorOverride&lt;/a&gt;&lt;/code&gt; 를 활성화 할 수 있습니다. ProxyErrorOverride를 활성화하지 않으면 Apache httpd는 프록시 컨텐츠에 대한 사용자 정의 오류 문서를 생성하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="babd2ac9249d0946c7749b0b95b0b216017d3f3a" translate="yes" xml:space="preserve">
          <source>If you are working with encodings that are not supported by any of the conversion methods available on your platform, you can still alias them to a supported encoding using &lt;code&gt;xml2EncAlias&lt;/code&gt;.</source>
          <target state="translated">플랫폼에서 사용 가능한 변환 방법 중 어느 것도 지원하지 않는 인코딩으로 작업하는 경우 &lt;code&gt;xml2EncAlias&lt;/code&gt; 를 사용하여 지원되는 인코딩으로 별칭을 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="75b0ea6845c771afaedb78c73a291d8668387f8e" translate="yes" xml:space="preserve">
          <source>If you are, perhaps, thinking that none of this applies to you because you use a case-sensitive filesystem, remember that there are many other ways to map multiple webspace locations to the same filesystem location. Therefore you should always use the filesystem containers when you can. There is, however, one exception to this rule. Putting configuration restrictions in a &lt;code&gt;&amp;lt;Location &quot;/&quot;&amp;gt;&lt;/code&gt; section is perfectly safe because this section will apply to all requests regardless of the specific URL.</source>
          <target state="translated">대소 문자를 구분하는 파일 시스템을 사용하기 때문에이 중 어느 것도 적용되지 않는다고 생각하는 경우 여러 웹 공간 위치를 동일한 파일 시스템 위치에 매핑하는 다른 방법이 많이 있습니다. 따라서 가능하면 항상 파일 시스템 컨테이너를 사용해야합니다. 그러나이 규칙에는 한 가지 예외가 있습니다. 이 섹션은 특정 URL에 관계없이 모든 요청에 ​​적용되므로 &lt;code&gt;&amp;lt;Location &quot;/&quot;&amp;gt;&lt;/code&gt; 섹션 에 구성 제한을 적용하면 완벽하게 안전합니다.</target>
        </trans-unit>
        <trans-unit id="8982944d90d911882936ddb6344a9f3d9f0d801e" translate="yes" xml:space="preserve">
          <source>If you cannot compile the Apache HTTP Server yourself, you can obtain a binary package from numerous binary distributions available on the Internet.</source>
          <target state="translated">Apache HTTP Server를 직접 컴파일 할 수없는 경우 인터넷에서 사용 가능한 수많은 바이너리 배포판에서 바이너리 패키지를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e7b0e83185b3a8c6c47325527e80932a74eeabab" translate="yes" xml:space="preserve">
          <source>If you check the &lt;a href=&quot;#errorlogs&quot;&gt;Apache error log&lt;/a&gt;, you will probably find that it says &quot;Premature end of script headers&quot;, possibly along with an error message generated by your CGI program. In this case, you will want to check each of the below sections to see what might be preventing your CGI program from emitting the proper HTTP headers.</source>
          <target state="translated">&lt;a href=&quot;#errorlogs&quot;&gt;Apache 오류 로그&lt;/a&gt; 를 확인하면 CGI 프로그램에서 생성 된 오류 메시지와 함께 &quot;스크립트 헤더의 조기 종료&quot;라고 표시 될 수 있습니다. 이 경우 아래의 각 섹션을 확인하여 CGI 프로그램이 올바른 HTTP 헤더를 생성하지 못하게하는 원인을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="7b06bf5f73f4ea8a4583030868b2f538cbdc1880" translate="yes" xml:space="preserve">
          <source>If you contribute back a patch that revises project files, we must commit project files in Visual Studio 6.0 format. Changes should be simple, with minimal compilation and linkage flags that can be recognized by all Visual Studio environments.</source>
          <target state="translated">프로젝트 파일을 수정하는 패치를 다시 제공하면 프로젝트 파일을 Visual Studio 6.0 형식으로 커밋해야합니다. 모든 Visual Studio 환경에서 인식 할 수있는 최소한의 컴파일 및 링크 플래그로 변경이 간단해야합니다.</target>
        </trans-unit>
        <trans-unit id="8b2ab327d311e7d501e725aae1d2894f87d61eba" translate="yes" xml:space="preserve">
          <source>If you did not do a binary install, Apache will in some scenarios complain about the missing registry key. This warning can be ignored if the server was otherwise able to find its configuration file.</source>
          <target state="translated">바이너리 설치를하지 않았다면, 일부 시나리오에서 Apache는 누락 된 레지스트리 키에 대해 불평합니다. 서버가 구성 파일을 찾을 수 없으면이 경고를 무시할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cd65b1b17cb73502299d059b48aa4d3fd6c7e259" translate="yes" xml:space="preserve">
          <source>If you do not want to offer any sites on port 80 any more, you may leave it open and redirect all requests to your https: sites instead. Use the &lt;code&gt;&lt;a href=&quot;#mdrequirehttps&quot;&gt;MDRequireHttps&lt;/a&gt;&lt;/code&gt; described below to do that in a convenient fashion. This will continue to answer http: challenges from Let's Encrypt.</source>
          <target state="translated">포트 80에서 더 이상 사이트를 제공하지 않으려면 사이트를 열어두고 모든 요청을 https : 사이트로 리디렉션하십시오. 아래 설명 된 &lt;code&gt;&lt;a href=&quot;#mdrequirehttps&quot;&gt;MDRequireHttps&lt;/a&gt;&lt;/code&gt; 를 사용하여 편리한 방식으로이를 수행하십시오. Let 's Encrypt의 http : 도전 과제에 계속 대답합니다.</target>
        </trans-unit>
        <trans-unit id="cee57615c3a7751be38d9d8c0547b40eb8789884" translate="yes" xml:space="preserve">
          <source>If you don't care what IP address the client has connected to, use a &quot;*&quot; as the address of every virtual host, and name-based virtual hosting is applied across all configured virtual hosts.</source>
          <target state="translated">클라이언트가 연결된 IP 주소를 신경 쓰지 않으면 모든 가상 호스트의 주소로 &quot;*&quot;를 사용하고 이름 기반 가상 호스팅이 구성된 모든 가상 호스트에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="ec871089d2e00ae31fe59c3c9ac3a990f586c2fb" translate="yes" xml:space="preserve">
          <source>If you don't know how to do this, you'll need to contact your network administrator, or Internet service provider, to perform this step for you.</source>
          <target state="translated">이 작업을 수행하는 방법을 모르는 경우 네트워크 관리자 나 인터넷 서비스 제공 업체에 문의하여이 단계를 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="dceef3c83131052ceaf4fc6132047827e720b21a" translate="yes" xml:space="preserve">
          <source>If you don't like the format in which the date gets printed, you can use the &lt;code&gt;config&lt;/code&gt; function, with a &lt;code&gt;timefmt&lt;/code&gt; attribute, to modify that formatting.</source>
          <target state="translated">날짜가 인쇄되는 형식이 마음에 들지 않으면 &lt;code&gt;timefmt&lt;/code&gt; 속성 과 함께 &lt;code&gt;config&lt;/code&gt; 기능을 사용하여 해당 형식을 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="80537836fb1b76e3d7ac46217962f4af9b03294d" translate="yes" xml:space="preserve">
          <source>If you don't see this message at server startup, the server is most likely not finding the wrapper program where it expects it, or the executable is not installed &lt;em&gt;setuid root&lt;/em&gt;.</source>
          <target state="translated">서버 시작시이 메시지가 표시되지 않으면 서버가 예상 한 랩퍼 프로그램을 찾지 못하거나 실행 파일이 &lt;em&gt;setuid root&lt;/em&gt; 설치되지 않은 것 입니다.</target>
        </trans-unit>
        <trans-unit id="6001260e8531e38ae83348c7929ed210dffd8f3c" translate="yes" xml:space="preserve">
          <source>If you don't specify a configuration file name with &lt;code&gt;-f&lt;/code&gt;, Apache will use the file name compiled into the server, usually &lt;code&gt;conf/httpd.conf&lt;/code&gt;. Invoking Apache with the &lt;code&gt;-V&lt;/code&gt; switch will display this value labeled as &lt;code&gt;SERVER_CONFIG_FILE&lt;/code&gt;. Apache will then determine its &lt;code&gt;&lt;a href=&quot;../mod/core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt; by trying the following, in this order:</source>
          <target state="translated">구성 파일 이름을 &lt;code&gt;-f&lt;/code&gt; 로 지정하지 않으면 Apache는 서버에 컴파일 된 파일 이름 (일반적으로 &lt;code&gt;conf/httpd.conf&lt;/code&gt; )을 사용 합니다. &lt;code&gt;-V&lt;/code&gt; 스위치를 사용하여 Apache를 호출하면 이 값이 &lt;code&gt;SERVER_CONFIG_FILE&lt;/code&gt; 로 표시됩니다 . 그런 다음 Apache는 다음 순서에 따라 &lt;code&gt;&lt;a href=&quot;../mod/core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt; 를 결정합니다 .</target>
        </trans-unit>
        <trans-unit id="c08a3a90ac2cc6ed47ef002eca6dd1f7edab398d" translate="yes" xml:space="preserve">
          <source>If you don't specify a configuration file with &lt;code&gt;-f&lt;/code&gt; or &lt;code&gt;-n&lt;/code&gt;, Apache will use the file name compiled into the server, such as &lt;code&gt;conf\httpd.conf&lt;/code&gt;. This built-in path is relative to the installation directory. You can verify the compiled file name from a value labelled as &lt;code&gt;SERVER_CONFIG_FILE&lt;/code&gt; when invoking Apache with the &lt;code&gt;-V&lt;/code&gt; switch, like this:</source>
          <target state="translated">&lt;code&gt;-f&lt;/code&gt; 또는 &lt;code&gt;-n&lt;/code&gt; 으로 구성 파일을 지정하지 않으면 Apache는 서버에 컴파일 된 파일 이름 (예 : &lt;code&gt;conf\httpd.conf&lt;/code&gt; 합니다. 이 내장 경로는 설치 디렉토리와 관련이 있습니다. 다음 과 같이 &lt;code&gt;-V&lt;/code&gt; 스위치를 사용하여 Apache를 호출 할 때 &lt;code&gt;SERVER_CONFIG_FILE&lt;/code&gt; 로 레이블 된 값에서 컴파일 된 파일 이름을 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="387e2d6f3259230a8f27c1af948a400edd1b551a" translate="yes" xml:space="preserve">
          <source>If you don't want this effect &lt;em&gt;and&lt;/em&gt; the reasons above don't apply to you, you can turn off the redirect as shown below. However, be aware that there are possible security implications to doing this.</source>
          <target state="translated">이 효과를 원하지 않는 경우 &lt;em&gt;와&lt;/em&gt; 그 이유는 위의 사용자에게 적용되지 않는 아래와 같이, 당신은 리디렉션을 해제 할 수 있습니다. 그러나 이렇게하면 보안에 영향을 줄 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a7418a21a9e97b7b660f0dc1055007b90df85021" translate="yes" xml:space="preserve">
          <source>If you evaluate the request body yourself, &lt;em&gt;don't trust the &lt;code&gt;Content-Length&lt;/code&gt; header!&lt;/em&gt; The Content-Length header reflects the length of the incoming data from the client and &lt;em&gt;not&lt;/em&gt; the byte count of the decompressed data stream.</source>
          <target state="translated">요청 본문을 직접 평가하는 경우 &lt;em&gt; &lt;code&gt;Content-Length&lt;/code&gt; &lt;/em&gt;&lt;em&gt; 헤더를 &lt;/em&gt;&lt;em&gt;신뢰하지 마십시오 ! &lt;/em&gt;Content-Length 헤더는 압축 해제 된 데이터 스트림의 바이트 수가 &lt;em&gt;아닌&lt;/em&gt; 클라이언트에서 들어오는 데이터의 길이를 반영합니다 .</target>
        </trans-unit>
        <trans-unit id="fcb405d07d1ae0ed46000d7975fca2ea48bdc993" translate="yes" xml:space="preserve">
          <source>If you experience stickyness errors, e.g. users lose their application sessions and need to login again, you first want to check whether this is because the back-ends are sometimes unavailable or whether your configuration is wrong. To find out about possible stability problems with the back-ends, check your Apache error log for proxy error messages.</source>
          <target state="translated">사용자가 응용 프로그램 세션을 잃어 다시 로그인해야하는 등 끈적 거림 오류가 발생하면 백엔드를 사용할 수 없는지 또는 구성이 잘못된 지 여부를 먼저 확인하려고합니다. 백엔드의 가능한 안정성 문제에 대해 알아 보려면 Apache 오류 로그에서 프록시 오류 메시지를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="a2e3dffbaa89311ca312b6ca34804b7288b8bf97" translate="yes" xml:space="preserve">
          <source>If you fear that this lookup might fail because your DNS server is down then you can insert the hostname in &lt;code&gt;/etc/hosts&lt;/code&gt; (where you probably already have it so that the machine can boot properly). Then ensure that your machine is configured to use &lt;code&gt;/etc/hosts&lt;/code&gt; in the event that DNS fails. Depending on what OS you are using this might be accomplished by editing &lt;code&gt;/etc/resolv.conf&lt;/code&gt;, or maybe &lt;code&gt;/etc/nsswitch.conf&lt;/code&gt;.</source>
          <target state="translated">DNS 서버가 다운되어이 조회가 실패 할 수 있다고 생각되면 &lt;code&gt;/etc/hosts&lt;/code&gt; 에 호스트 이름을 삽입 할 수 있습니다 (시스템이 이미 부팅되어있을 수 있음). 그런 다음 DNS가 실패한 경우 시스템이 &lt;code&gt;/etc/hosts&lt;/code&gt; 를 사용하도록 구성되어 있는지 확인하십시오 . 사용중인 OS에 따라 &lt;code&gt;/etc/resolv.conf&lt;/code&gt; 또는 &lt;code&gt;/etc/nsswitch.conf&lt;/code&gt; 를 편집하여 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="11e7c20cb08e70ba783117aefea7e3bc2c994b1b" translate="yes" xml:space="preserve">
          <source>If you happen to be running Apache on an alternate port, you need to explicitly put that in the URL:</source>
          <target state="translated">대체 포트에서 Apache를 실행하는 경우 URL에 명시 적으로 넣어야합니다.</target>
        </trans-unit>
        <trans-unit id="8fb52a5219d7a15e7e19373fab723a294995c4ca" translate="yes" xml:space="preserve">
          <source>If you have a request for &lt;code&gt;/index.php/foo.shtml&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;mod_mime&quot;&gt;mod_mime&lt;/a&gt;&lt;/code&gt; will now treat the incoming request as &lt;code&gt;/index.php/foo.shtml&lt;/code&gt; and directives like &lt;code&gt;AddOutputFilter INCLUDES .shtml&lt;/code&gt; will add the &lt;code&gt;INCLUDES&lt;/code&gt; filter to the request. If &lt;code&gt;ModMimeUsePathInfo&lt;/code&gt; is not set, the &lt;code&gt;INCLUDES&lt;/code&gt; filter will not be added. This will work analogously for virtual paths, such as those defined by &lt;code&gt;&amp;lt;Location&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;/index.php/foo.shtml&lt;/code&gt; 에 대한 요청이있는 경우 &lt;code&gt;&lt;a href=&quot;mod_mime&quot;&gt;mod_mime&lt;/a&gt;&lt;/code&gt; 는 이제 들어오는 요청을 &lt;code&gt;/index.php/foo.shtml&lt;/code&gt; 로 처리하고 &lt;code&gt;AddOutputFilter INCLUDES .shtml&lt;/code&gt; 와 같은 지시문 은 &lt;code&gt;INCLUDES&lt;/code&gt; 필터를 요청에 추가합니다 . 경우 &lt;code&gt;ModMimeUsePathInfo&lt;/code&gt; 가 설정되지는이 &lt;code&gt;INCLUDES&lt;/code&gt; 필터가 추가되지 않습니다. 이것은 &lt;code&gt;&amp;lt;Location&amp;gt;&lt;/code&gt; 에 의해 정의 된 것과 같은 가상 경로와 유사하게 작동합니다.</target>
        </trans-unit>
        <trans-unit id="1264ed5af9cce77e6ad835ab1ffafd496f1bba85" translate="yes" xml:space="preserve">
          <source>If you have enabled the suEXEC feature with the &lt;code&gt;--enable-suexec&lt;/code&gt; option the &lt;code&gt;suexec&lt;/code&gt; binary (together with httpd itself) is automatically built if you execute the &lt;code&gt;make&lt;/code&gt; command.</source>
          <target state="translated">&lt;code&gt;--enable-suexec&lt;/code&gt; 옵션 을 사용하여 suEXEC 기능을 활성화 한 경우 &lt;code&gt;make&lt;/code&gt; 명령 을 실행하면 &lt;code&gt;suexec&lt;/code&gt; 바이너리 (httpd 자체와 함께)가 자동으로 빌드됩니다 .</target>
        </trans-unit>
        <trans-unit id="4a230c668553a335789926a50af5e4a7e3588699" translate="yes" xml:space="preserve">
          <source>If you have information on your web site that is sensitive or intended for only a small group of people, the techniques in this article will help you make sure that the people that see those pages are the people that you wanted to see them.</source>
          <target state="translated">웹 사이트에 중요하거나 소수의 사람들 만 대상으로하는 정보가있는 경우이 기사의 기술을 통해 해당 페이지를 보는 사람들이 원하는 사람들인지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b62338e0c4c35275d3737e32bfb5890fb7574393" translate="yes" xml:space="preserve">
          <source>If you have no intention of using dynamically loaded modules (you probably don't if you're reading this and tuning your server for every last ounce of performance), then you should add &lt;code&gt;-DDYNAMIC_MODULE_LIMIT=0&lt;/code&gt; when building your server. This will save RAM that's allocated only for supporting dynamically loaded modules.</source>
          <target state="translated">동적으로로드 된 모듈을 사용하지 않으려는 경우 (이를 읽고 마지막 성능마다 서버를 조정하지 않는 경우) 서버를 빌드 할 때 &lt;code&gt;-DDYNAMIC_MODULE_LIMIT=0&lt;/code&gt; 을 추가 해야합니다. 이렇게하면 동적으로로드 된 모듈을 지원하기 위해 할당 된 RAM이 절약됩니다.</target>
        </trans-unit>
        <trans-unit id="11400b36d543d0c5b3c5222dfc9889591f05ef0a" translate="yes" xml:space="preserve">
          <source>If you have populated the form with fields described by &lt;code&gt;&lt;a href=&quot;#authformmethod&quot;&gt;AuthFormMethod&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#authformmimetype&quot;&gt;AuthFormMimetype&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#authformbody&quot;&gt;AuthFormBody&lt;/a&gt;&lt;/code&gt;, you probably want to set this field to a similar size as the &lt;code&gt;&lt;a href=&quot;mod_request#keptbodysize&quot;&gt;KeptBodySize&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#authformmethod&quot;&gt;AuthFormMethod&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#authformmimetype&quot;&gt;AuthFormMimetype&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#authformbody&quot;&gt;AuthFormBody&lt;/a&gt;&lt;/code&gt; 에 설명 된 필드로 양식을 채운 경우이 필드를 &lt;code&gt;&lt;a href=&quot;mod_request#keptbodysize&quot;&gt;KeptBodySize&lt;/a&gt;&lt;/code&gt; 지시문 과 비슷한 크기로 설정 하려고 합니다.</target>
        </trans-unit>
        <trans-unit id="7026827403076bef16a2b49f7a38f1d1c416115d" translate="yes" xml:space="preserve">
          <source>If you have the &lt;code&gt;DEFLATE&lt;/code&gt; filter activated, this environment variable will ignore the accept-encoding setting of your browser and will send compressed output unconditionally.</source>
          <target state="translated">당신이있는 경우 &lt;code&gt;DEFLATE&lt;/code&gt; 의 필터가 작동,이 환경 변수는 브라우저의 동의를 인코딩 설정을 무시하고 무조건 압축 된 출력을 보내드립니다.</target>
        </trans-unit>
        <trans-unit id="698371c9888b3fb35c08929dccc845d3a052dfcd" translate="yes" xml:space="preserve">
          <source>If you have to support a client which sends broken headers and which can't be fixed, a simple workaround involving &lt;code&gt;&lt;a href=&quot;mod/mod_setenvif&quot;&gt;mod_setenvif &lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mod/mod_headers&quot;&gt;mod_headers&lt;/a&gt;&lt;/code&gt; allows you to still accept these headers:</source>
          <target state="translated">깨진 헤더를 전송하고 수정할 수없는 클라이언트를 지원해야하는 경우 &lt;code&gt;&lt;a href=&quot;mod/mod_setenvif&quot;&gt;mod_setenvif &lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;mod/mod_headers&quot;&gt;mod_headers&lt;/a&gt;&lt;/code&gt; 와 관련된 간단한 해결 방법을 통해 다음 헤더를 계속 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="46187745e56b44b5f602c37d51cffa3399339811" translate="yes" xml:space="preserve">
          <source>If you have virtual hosts with a different &lt;code&gt;&lt;a href=&quot;mod/mod_userdir#userdir&quot;&gt;UserDir&lt;/a&gt;&lt;/code&gt; for each, you will need to define them to all reside in one parent directory; then name that parent directory here. &lt;strong&gt;If this is not defined properly, &quot;~userdir&quot; cgi requests will not work!&lt;/strong&gt;</source>
          <target state="translated">각각에 대해 다른 &lt;code&gt;&lt;a href=&quot;mod/mod_userdir#userdir&quot;&gt;UserDir&lt;/a&gt;&lt;/code&gt; 이있는 가상 호스트가있는 경우 모두 하나의 상위 디렉토리에 상주하도록 정의해야합니다. 그런 다음 해당 상위 디렉토리의 이름을 여기에 지정하십시오. &lt;strong&gt;이것이 제대로 정의되지 않으면 &quot;~ userdir&quot;cgi 요청이 작동하지 않습니다!&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="af3f946a4c60d7988037dfddb3913030d8db1cda" translate="yes" xml:space="preserve">
          <source>If you include &lt;code&gt;&lt;a href=&quot;../mod/mod_status&quot;&gt;mod_status&lt;/a&gt;&lt;/code&gt; and you also set &lt;code&gt;ExtendedStatus On&lt;/code&gt; when building and running Apache, then on every request Apache will perform two calls to &lt;code&gt;gettimeofday(2)&lt;/code&gt; (or &lt;code&gt;times(2)&lt;/code&gt; depending on your operating system), and (pre-1.3) several extra calls to &lt;code&gt;time(2)&lt;/code&gt;. This is all done so that the status report contains timing indications. For highest performance, set &lt;code&gt;ExtendedStatus off&lt;/code&gt; (which is the default).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../mod/mod_status&quot;&gt;mod_status&lt;/a&gt;&lt;/code&gt; 를 포함 하고 Apache를 빌드하고 실행할 때 &lt;code&gt;ExtendedStatus On&lt;/code&gt; 을 설정 하면 모든 요청에서 Apache는 &lt;code&gt;gettimeofday(2)&lt;/code&gt; (또는 운영 체제에 따라 &lt;code&gt;times(2)&lt;/code&gt; 및 (1.3 이전) 여러 번의 호출을 수행 합니다. &lt;code&gt;time(2)&lt;/code&gt; 추가 호출 . 이는 상태 보고서에 타이밍 표시가 포함되도록하기위한 것입니다. 최상의 성능을 얻으 려면 &lt;code&gt;ExtendedStatus off&lt;/code&gt; (기본값).</target>
        </trans-unit>
        <trans-unit id="9ce9d8708a113a6be59ac7c14ab7f22a223cb00f" translate="yes" xml:space="preserve">
          <source>If you installed to the default location &lt;code&gt;C:\Program Files\Metrowerks\CodeWarrior&lt;/code&gt;, you don't need to set this.</source>
          <target state="translated">기본 위치 &lt;code&gt;C:\Program Files\Metrowerks\CodeWarrior&lt;/code&gt; 에 설치 한 경우이를 설정할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="1b0123d84955c58dce22153fc6c63330775aced7" translate="yes" xml:space="preserve">
          <source>If you intend to cache a large number of files in this manner, you must ensure that your operating system's limit for the number of open files is set appropriately.</source>
          <target state="translated">이런 방식으로 많은 수의 파일을 캐시하려면 열려있는 파일 수에 대한 운영 체제 제한이 적절하게 설정되어 있는지 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="1886459373c12ab4a9f86a13a9cd65ae7fbb2ff2" translate="yes" xml:space="preserve">
          <source>If you intend to use SSL or TLS, read this section CAREFULLY so as to understand the differences between configurations on the different LDAP toolkits supported.</source>
          <target state="translated">SSL 또는 TLS를 사용하려는 경우 지원되는 다른 LDAP 툴킷의 구성 차이점을 이해하려면이 섹션을주의해서 읽으십시오.</target>
        </trans-unit>
        <trans-unit id="bb558a506d8517858f268daa518def264177d717" translate="yes" xml:space="preserve">
          <source>If you jumped directly to this part of the document to find out how to do authentication, it is important to note one thing. There is a common misconception that you are required to use &lt;code&gt;.htaccess&lt;/code&gt; files in order to implement password authentication. This is not the case. Putting authentication directives in a &lt;code&gt;&lt;a href=&quot;../mod/core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; section, in your main server configuration file, is the preferred way to implement this, and &lt;code&gt;.htaccess&lt;/code&gt; files should be used only if you don't have access to the main server configuration file. See &lt;a href=&quot;#when&quot;&gt;above&lt;/a&gt; for a discussion of when you should and should not use &lt;code&gt;.htaccess&lt;/code&gt; files.</source>
          <target state="translated">인증을 수행하는 방법을 찾기 위해 문서의이 부분으로 바로 이동 한 경우 한 가지 사항에 유의해야합니다. 비밀번호 인증을 구현하기 위해 &lt;code&gt;.htaccess&lt;/code&gt; 파일 을 사용해야한다는 일반적인 오해가 있습니다 . 그렇지 않다. 주 서버 구성 파일 의 &lt;code&gt;&lt;a href=&quot;../mod/core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; 섹션 에 인증 지시문을 넣는 것이이 방법을 선호하는 방법이며 주 서버 구성 파일에 액세스 할 수없는 경우에만 &lt;code&gt;.htaccess&lt;/code&gt; 파일을 사용해야합니다. &lt;code&gt;.htaccess&lt;/code&gt; 파일 을 사용해야하는 경우와 사용하지 않아야하는 경우에 대한 설명은 &lt;a href=&quot;#when&quot;&gt;위&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a71d0e83be0177b0962f4417ba4b89fb5ffdd554" translate="yes" xml:space="preserve">
          <source>If you memory-map a file located on an NFS-mounted filesystem and a process on another NFS client machine deletes or truncates the file, your process may get a bus error the next time it tries to access the mapped file content.</source>
          <target state="translated">NFS 마운트 파일 시스템에있는 파일을 메모리 맵핑하고 다른 NFS 클라이언트 시스템의 프로세스가 파일을 삭제하거나 잘라 내면 다음에 맵핑 된 파일 컨텐츠에 액세스하려고 할 때 프로세스에서 버스 오류가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="88c9f742e5508d9db4a3a2a0854ab6eca5162744" translate="yes" xml:space="preserve">
          <source>If you mix things, Apache httpd will detect it and return a special response code, 421 Misdirected Request, to the client.</source>
          <target state="translated">여러 가지를 혼합하면 Apache httpd가이를 감지하여 특수 응답 코드 421 Misdirected Request를 클라이언트에 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5e7981d4c6f2bf9eb0af251a79d071ee55e8dddb" translate="yes" xml:space="preserve">
          <source>If you move this and have already data, be sure to move/copy the data first to the new location, reconfigure and then restart the server. If you reconfigure and restart first, the server will try to get new certificates that it thinks are missing.</source>
          <target state="translated">이 위치를 이동하고 이미 데이터가있는 경우 데이터를 먼저 새 위치로 이동 / 복사하고 서버를 재구성 한 다음 다시 시작하십시오. 먼저 재구성하고 다시 시작하면 서버는 누락 된 것으로 생각되는 새 인증서를 가져 오려고 시도합니다.</target>
        </trans-unit>
        <trans-unit id="e3abf23622dc262e3707f674b79544fc49802b40" translate="yes" xml:space="preserve">
          <source>If you need to have specifically named configuration files for different services, you must use this:</source>
          <target state="translated">다른 서비스에 대해 특별히 명명 된 구성 파일이 필요한 경우 다음을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="51a8e49b5fc4ce486d61a1fb63e599e4b7f85d34" translate="yes" xml:space="preserve">
          <source>If you need to specify the name of the service you want to install, use the following command. You have to do this if you have several different service installations of Apache on your computer. If you specify a name during the install, you have to also specify it during any other -k operation.</source>
          <target state="translated">설치하려는 서비스 이름을 지정해야하는 경우 다음 명령을 사용하십시오. 컴퓨터에 여러 다른 Apache 서비스 설치가있는 경우이 작업을 수행해야합니다. 설치 중에 이름을 지정하면 다른 -k 조작 중에도 이름을 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="6be0b93d563a9ebbed751f0da0563d8fda4603dc" translate="yes" xml:space="preserve">
          <source>If you omit the &lt;code&gt;&lt;a href=&quot;../mod/core#servername&quot;&gt;ServerName&lt;/a&gt;&lt;/code&gt; directive from any name-based virtual host, the server will default to a fully qualified domain name (FQDN) derived from the system hostname. This implicitly set server name can lead to counter-intuitive virtual host matching and is discouraged.</source>
          <target state="translated">이름 기반 가상 호스트에서 &lt;code&gt;&lt;a href=&quot;../mod/core#servername&quot;&gt;ServerName&lt;/a&gt;&lt;/code&gt; 지시문 을 생략하면 서버는 기본적으로 시스템 호스트 이름에서 파생 된 FQDN (정규화 된 도메인 이름)으로 설정됩니다. 이 암시 적으로 설정된 서버 이름은 직관적이지 않은 가상 호스트 일치를 유발할 수 있으므로 권장하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cf041f937decaa6ffa02929217cc3df9b46d0d7a" translate="yes" xml:space="preserve">
          <source>If you omit the &lt;var&gt;value&lt;/var&gt; argument, the variable is set to an empty string.</source>
          <target state="translated">&lt;var&gt;value&lt;/var&gt; 인수 를 생략하면 변수가 빈 문자열로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="146b6aa1011c7657b77e70d5ff1dd5ee9d1a1a47" translate="yes" xml:space="preserve">
          <source>If you open your favorite browser and tell it to get the address</source>
          <target state="translated">즐겨 찾는 브라우저를 열고 주소를 가져 오라고하면</target>
        </trans-unit>
        <trans-unit id="2dcde7e0bec98fc56c4a05c62b0f5a818b053ad7" translate="yes" xml:space="preserve">
          <source>If you plan to use &lt;code&gt;.htaccess&lt;/code&gt; files, you will need to have a server configuration that permits putting authentication directives in these files. This is done with the &lt;code&gt;&lt;a href=&quot;../mod/core#allowoverride&quot;&gt;AllowOverride&lt;/a&gt;&lt;/code&gt; directive, which specifies which directives, if any, may be put in per-directory configuration files.</source>
          <target state="translated">&lt;code&gt;.htaccess&lt;/code&gt; 파일 을 사용하려면 해당 파일에 인증 지시문을 넣을 수있는 서버 구성이 필요합니다. 이는 디렉토리 별 구성 파일에 넣을 수있는 지시문을 지정하는 &lt;code&gt;&lt;a href=&quot;../mod/core#allowoverride&quot;&gt;AllowOverride&lt;/a&gt;&lt;/code&gt; 지시문으로 수행됩니다 .</target>
        </trans-unit>
        <trans-unit id="a1ffd4b41ada6e8b8abc35bd12683a16f166d12b" translate="yes" xml:space="preserve">
          <source>If you point your &lt;code&gt;ErrorDocument&lt;/code&gt; to some variety of dynamic handler such as a server-side include document, CGI script, or some variety of other handler, you may wish to use the available custom environment variables to customize this response.</source>
          <target state="translated">&lt;code&gt;ErrorDocument&lt;/code&gt; 가 서버 측 포함 문서, CGI 스크립트 또는 기타 다양한 핸들러와 같은 다양한 동적 핸들러 를 가리키는 경우 사용 가능한 사용자 정의 환경 변수를 사용하여이 응답을 사용자 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="78ebaa24887f29cc5edffd1c23654b8f4a4009e7" translate="yes" xml:space="preserve">
          <source>If you prefer to explicitly declare all the domain names, use 'manual' mode. An error will be logged if the names do not match with the expected ones.</source>
          <target state="translated">모든 도메인 이름을 명시 적으로 선언하려면 '수동'모드를 사용하십시오. 이름이 예상 한 이름과 일치하지 않으면 오류가 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="c60331a6b59fb2c05e3985e3512e18a6da90b720" translate="yes" xml:space="preserve">
          <source>If you require a more flexible reverse-proxy configuration, see the &lt;code&gt;&lt;a href=&quot;mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; directive with the &lt;code&gt;[P]&lt;/code&gt; flag.</source>
          <target state="translated">보다 유연한 리버스 프록시 구성이 필요한 경우 &lt;code&gt;[P]&lt;/code&gt; 플래그가 있는 &lt;code&gt;&lt;a href=&quot;mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; 지시문을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e513da335c0408a371870dfe212d7526e308e738" translate="yes" xml:space="preserve">
          <source>If you set this globally, it applies to all managed domains. If you want it for a specific domain only, use:</source>
          <target state="translated">이를 전역으로 설정하면 모든 관리 도메인에 적용됩니다. 특정 도메인에 대해서만 원하는 경우 다음을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="714ef7344ba3e84267ad3195c52e376f51867ecf" translate="yes" xml:space="preserve">
          <source>If you system falls into 1 or 2 (above), then increase the file descriptor limit before starting Apache, using a script like</source>
          <target state="translated">시스템이 1 또는 2 (위)에 해당하는 경우 다음과 같은 스크립트를 사용하여 Apache를 시작하기 전에 파일 디스크립터 한계를 늘리십시오.</target>
        </trans-unit>
        <trans-unit id="d3a38a2fe785e745efbd8645b0cdf1d8e55efb4c" translate="yes" xml:space="preserve">
          <source>If you use a &lt;code&gt;ScoreBoardFile&lt;/code&gt; then you may see improved speed by placing it on a RAM disk. But be careful that you heed the same warnings about log file placement and &lt;a href=&quot;../misc/security_tips&quot;&gt;security&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;ScoreBoardFile&lt;/code&gt; 을 사용하는 경우 RAM 디스크에 배치하여 속도가 향상 될 수 있습니다. 그러나 로그 파일 배치 및 &lt;a href=&quot;../misc/security_tips&quot;&gt;보안에&lt;/a&gt; 대해 동일한 경고에주의하십시오 .</target>
        </trans-unit>
        <trans-unit id="1b92967028f03d88d5fd035eb8a4e4bceee40645" translate="yes" xml:space="preserve">
          <source>If you use a Certificate Authority that browsers are not configured to trust by default, it is necessary to load the Certificate Authority certificate into the browser, enabling the browser to validate server certificates signed by that Certificate Authority. Doing so may be dangerous, since once loaded, the browser will accept all certificates signed by that Certificate Authority.</source>
          <target state="translated">브라우저가 기본적으로 신뢰하도록 구성되지 않은 인증 기관을 사용하는 경우 브라우저가 인증 기관 인증서를 브라우저에로드하여 브라우저가 해당 인증 기관이 서명 한 서버 인증서를 검증 할 수 있도록해야합니다. 브라우저는 일단로드되면 해당 인증 기관이 서명 한 모든 인증서를 수락하므로 위험 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fd513d98e0ed784abfe3b9e27df96c04c1f9e912" translate="yes" xml:space="preserve">
          <source>If you use any &lt;code&gt;&lt;code&gt;&lt;a href=&quot;../mod/mod_access_compat#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt; from domain&lt;/code&gt; or &lt;code&gt;&lt;code&gt;&lt;a href=&quot;../mod/mod_access_compat#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; from domain&lt;/code&gt; directives (i.e., using a hostname, or a domain name, rather than an IP address) then you will pay for two DNS lookups (a reverse, followed by a forward lookup to make sure that the reverse is not being spoofed). For best performance, therefore, use IP addresses, rather than names, when using these directives, if possible.</source>
          <target state="translated">당신은 어떤 사용하는 경우 &lt;code&gt;&lt;code&gt;&lt;a href=&quot;../mod/mod_access_compat#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt; from domain&lt;/code&gt; 또는 &lt;code&gt;&lt;code&gt;&lt;a href=&quot;../mod/mod_access_compat#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; from domain&lt;/code&gt; (즉, 호스트 이름 또는 도메인 이름, IP 주소가 아닌 사용) 정방향 조회 다음에 다음 두 개의 DNS 조회 (역 지불 할 것은, 확인 지시 그 반대는 스푸핑되지 않습니다). 따라서 최상의 성능을 위해서는 가능하면 이러한 지시문을 사용할 때 이름 대신 IP 주소를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="7a74196109337c98e4ee1572a14caa5fab551d08" translate="yes" xml:space="preserve">
          <source>If you use it in the global context, outside a specific MD, you can only specify one value, 'auto' or 'manual' as the default for all other MDs. See &lt;code&gt;&lt;a href=&quot;#mdomain&quot;&gt;MDomain&lt;/a&gt;&lt;/code&gt; for a description of these special values.</source>
          <target state="translated">특정 MD 외부의 전역 컨텍스트에서이 값을 사용하는 경우 다른 모든 MD의 기본값으로 'auto'또는 'manual'값 하나만 지정할 수 있습니다. 이러한 특수 값에 대한 설명은 &lt;code&gt;&lt;a href=&quot;#mdomain&quot;&gt;MDomain&lt;/a&gt;&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="88c025b6231497e4932fd9f7b420856fe29dd195" translate="yes" xml:space="preserve">
          <source>If you use some special exclusions dependent on, for example, the &lt;code&gt;User-Agent&lt;/code&gt; header, you must manually configure an addition to the &lt;code&gt;Vary&lt;/code&gt; header to alert proxies of the additional restrictions. For example, in a typical configuration where the addition of the &lt;code&gt;BROTLI_COMPRESS&lt;/code&gt; filter depends on the &lt;code&gt;User-Agent&lt;/code&gt;, you should add:</source>
          <target state="translated">예를 들어 &lt;code&gt;User-Agent&lt;/code&gt; 헤더 에 따라 일부 특수 제외를 사용하는 경우 프록시에 추가 제한을 알리 도록 &lt;code&gt;Vary&lt;/code&gt; 헤더에 추가를 수동으로 구성해야합니다 . 예를 들어, &lt;code&gt;BROTLI_COMPRESS&lt;/code&gt; 필터 추가가 &lt;code&gt;User-Agent&lt;/code&gt; 에 의존 하는 일반적인 구성에서는 다음을 추가 해야합니다.</target>
        </trans-unit>
        <trans-unit id="2562309644518451fb4d2cb3ddef3e9f99813d79" translate="yes" xml:space="preserve">
          <source>If you use some special exclusions dependent on, for example, the &lt;code&gt;User-Agent&lt;/code&gt; header, you must manually configure an addition to the &lt;code&gt;Vary&lt;/code&gt; header to alert proxies of the additional restrictions. For example, in a typical configuration where the addition of the &lt;code&gt;DEFLATE&lt;/code&gt; filter depends on the &lt;code&gt;User-Agent&lt;/code&gt;, you should add:</source>
          <target state="translated">예를 들어 &lt;code&gt;User-Agent&lt;/code&gt; 헤더 에 따라 일부 특수 제외를 사용하는 경우 프록시에 추가 제한을 알리 도록 &lt;code&gt;Vary&lt;/code&gt; 헤더에 추가를 수동으로 구성해야합니다 . 예를 들어 &lt;code&gt;DEFLATE&lt;/code&gt; 필터 추가가 &lt;code&gt;User-Agent&lt;/code&gt; 에 의존 하는 일반적인 구성에서는 다음을 추가 해야합니다.</target>
        </trans-unit>
        <trans-unit id="4394d67d7bf0a4067d27578b2f0e2a09effcdaf3" translate="yes" xml:space="preserve">
          <source>If you use the first command without any special parameters except &lt;code&gt;-k install&lt;/code&gt;, the service will be called &lt;code&gt;Apache2.4&lt;/code&gt; and the configuration will be assumed to be &lt;code&gt;conf\httpd.conf&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-k install&lt;/code&gt; 이외의 특수 매개 변수없이 첫 번째 명령을 사용하는 경우 서비스는 &lt;code&gt;Apache2.4&lt;/code&gt; 이며 구성은 &lt;code&gt;conf\httpd.conf&lt;/code&gt; 로 가정됩니다 .</target>
        </trans-unit>
        <trans-unit id="31159d323102ff98708bd6b179557a1171552651" translate="yes" xml:space="preserve">
          <source>If you want a core dump for debugging, you can use this directive to place it in a different location. This directive has no effect if your operating system is not configured to write core files to the working directory of the crashing processes.</source>
          <target state="translated">디버깅을위한 코어 덤프를 원하는 경우이 지정 문을 사용하여 다른 위치에 배치 할 수 있습니다. 운영 체제가 코어 파일을 충돌 프로세스의 작업 디렉토리에 쓰도록 구성되지 않은 경우이 지시문은 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="c4d9c3685d19deec3a67a5fb3baabaed53ce32f5" translate="yes" xml:space="preserve">
          <source>If you want httpd to handle IPv4 connections only, regardless of what your platform and APR will support, specify an IPv4 address on all &lt;code&gt;&lt;a href=&quot;mod/mpm_common#listen&quot;&gt;Listen&lt;/a&gt;&lt;/code&gt; directives, as in the following examples:</source>
          <target state="translated">플랫폼 및 APR에서 지원하는 내용에 관계없이 httpd가 IPv4 연결 만 처리하도록 하려면 다음 예제와 같이 모든 &lt;code&gt;&lt;a href=&quot;mod/mpm_common#listen&quot;&gt;Listen&lt;/a&gt;&lt;/code&gt; 지시문 에 IPv4 주소를 지정 하십시오.</target>
        </trans-unit>
        <trans-unit id="7b849a94628d3b93f59f4b3abb13178f7f0f8e0b" translate="yes" xml:space="preserve">
          <source>If you want one particular server to get more of the load than the others, add it more times to the list.</source>
          <target state="translated">하나의 특정 서버가 다른 서버보다 더 많은 부하를 받도록하려면 목록에 서버를 더 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="376c39f06112d7ee94df440aa45a7ff0d4ce2088" translate="yes" xml:space="preserve">
          <source>If you want the content to be processed by more than one filter, their names have to be separated by semicolons. It's also possible to use one &lt;code&gt;AddOutputFilterByType&lt;/code&gt; directive for each of these filters.</source>
          <target state="translated">내용을 둘 이상의 필터로 처리하려면 해당 이름을 세미콜론으로 구분해야합니다. 이러한 각 필터에 대해 하나의 &lt;code&gt;AddOutputFilterByType&lt;/code&gt; 지시문 을 사용할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="90fae2c31a2c6af13baad1f6a771e1e8a77fc9f2" translate="yes" xml:space="preserve">
          <source>If you want to allows users to modify the server configuration in their web space, they will need to use &lt;code&gt;.htaccess&lt;/code&gt; files to make these changes. Ensure that you have set &lt;code&gt;&lt;a href=&quot;../mod/core#allowoverride&quot;&gt;AllowOverride&lt;/a&gt;&lt;/code&gt; to a value sufficient for the directives that you want to permit the users to modify. See the &lt;a href=&quot;htaccess&quot;&gt;.htaccess tutorial&lt;/a&gt; for additional details on how this works.</source>
          <target state="translated">사용자가 웹 공간에서 서버 구성을 수정할 수있게하려면 &lt;code&gt;.htaccess&lt;/code&gt; 파일을 사용하여 이러한 변경을 수행해야합니다. 사용자가 수정할 수있는 지시문에 충분한 값으로 &lt;code&gt;&lt;a href=&quot;../mod/core#allowoverride&quot;&gt;AllowOverride&lt;/a&gt;&lt;/code&gt; 를 설정했는지 확인하십시오 . 작동 방식에 대한 자세한 내용은 &lt;a href=&quot;htaccess&quot;&gt;.htaccess 자습서&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="38eee170ed7bedbbb95b17d03b0875e3532f5feb" translate="yes" xml:space="preserve">
          <source>If you want to avoid worker sharing, sort your worker definitions by URL length, starting with the longest worker URLs. If you want to maximize worker sharing, use the reverse sort order. See also the related warning about ordering &lt;code&gt;&lt;a href=&quot;#proxypass&quot;&gt;ProxyPass&lt;/a&gt;&lt;/code&gt; directives.</source>
          <target state="translated">작업자 공유를 피하려면 가장 긴 작업자 URL부터 시작하여 URL 길이별로 작업자 정의를 정렬하십시오. 작업자 공유를 최대화하려면 역 정렬 순서를 사용하십시오. &lt;code&gt;&lt;a href=&quot;#proxypass&quot;&gt;ProxyPass&lt;/a&gt;&lt;/code&gt; 지시문 순서에 대한 관련 경고도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e0548898c66646fbf53300f16c84bb32f90c9d78" translate="yes" xml:space="preserve">
          <source>If you want to build a DSO module instead of a statically linked use &lt;code&gt;&lt;a href=&quot;apxs&quot;&gt;apxs&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">정적으로 링크 된 대신 DSO 모듈을 빌드하려면 &lt;code&gt;&lt;a href=&quot;apxs&quot;&gt;apxs&lt;/a&gt;&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="6202e10e1fe603fb30396cce85838fccd4eb4ecf" translate="yes" xml:space="preserve">
          <source>If you want to call your &lt;code&gt;.htaccess&lt;/code&gt; file something else, you can change the name of the file using the &lt;code&gt;&lt;a href=&quot;../mod/core#accessfilename&quot;&gt;AccessFileName&lt;/a&gt;&lt;/code&gt; directive. For example, if you would rather call the file &lt;code&gt;.config&lt;/code&gt; then you can put the following in your server configuration file:</source>
          <target state="translated">&lt;code&gt;.htaccess&lt;/code&gt; 파일을 다른 것으로 호출 하려면 &lt;code&gt;&lt;a href=&quot;../mod/core#accessfilename&quot;&gt;AccessFileName&lt;/a&gt;&lt;/code&gt; 지시문을 사용하여 파일 이름을 변경할 수 있습니다 . 예를 들어, &lt;code&gt;.config&lt;/code&gt; 파일을 호출하려는 경우 서버 구성 파일에 다음을 넣을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="362143d3336485f578cadc7533842c13c08a1b27" translate="yes" xml:space="preserve">
          <source>If you want to change that message to something else, you can do so with the &lt;code&gt;errmsg&lt;/code&gt; attribute to the &lt;code&gt;config&lt;/code&gt; function:</source>
          <target state="translated">해당 메시지를 다른 것으로 변경하려면 &lt;code&gt;errmsg&lt;/code&gt; 속성을 사용하여 &lt;code&gt;config&lt;/code&gt; 함수 로 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e3bce406ccd1e0ba41281395763054ecab03d5a9" translate="yes" xml:space="preserve">
          <source>If you want to continue to use a MIME-type in your hyperlinks (&lt;em&gt;e.g.&lt;/em&gt;&lt;code&gt;foo.html&lt;/code&gt;) the language extension (including an encoding extension if there is one) must be on the right hand side of the MIME-type extension (&lt;em&gt;e.g.&lt;/em&gt;, &lt;code&gt;foo.html.en&lt;/code&gt;).</source>
          <target state="translated">당신이 당신의 하이퍼 링크에서 (A MIME 타입을 계속 사용하려면 &lt;em&gt;예를 들어, &lt;/em&gt; &lt;code&gt;foo.html&lt;/code&gt; 파일을 ) (존재하는 경우 인코딩 확장 포함) 언어 확장자를 MIME 타입의 확장의 오른쪽 (에 있어야합니다 &lt;em&gt;예를 들어&lt;/em&gt; , &lt;code&gt;foo.html.en&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="aef1949a4d382ed389f32eac9b908a0901478d18" translate="yes" xml:space="preserve">
          <source>If you want to disable suEXEC you should kill and restart httpd after you have removed the &lt;code&gt;&lt;a href=&quot;programs/suexec&quot;&gt;suexec&lt;/a&gt;&lt;/code&gt; file.</source>
          <target state="translated">suEXEC를 비활성화하려면 &lt;code&gt;&lt;a href=&quot;programs/suexec&quot;&gt;suexec&lt;/a&gt;&lt;/code&gt; 파일 을 제거한 후 httpd를 종료하고 다시 시작해야 합니다.</target>
        </trans-unit>
        <trans-unit id="6b2744594692ae1b0eaf53baae07b998f544dba0" translate="yes" xml:space="preserve">
          <source>If you want to enable the suEXEC mechanism for the first time and an Apache HTTP Server is already running you must kill and restart httpd. Restarting it with a simple HUP or USR1 signal will not be enough.</source>
          <target state="translated">suEXEC 메커니즘을 처음 활성화하고 Apache HTTP Server가 이미 실행중인 경우 httpd를 종료 한 후 다시 시작해야합니다. 간단한 HUP 또는 USR1 신호로 다시 시작하는 것만으로는 충분하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e215f195fc8209164557e75ed19f0d13418b9146" translate="yes" xml:space="preserve">
          <source>If you want to extract more accurate values from your logs, you can use the &lt;var&gt;type&lt;/var&gt; argument to specify the type of data left as a note for logging. &lt;var&gt;type&lt;/var&gt; can be one of:</source>
          <target state="translated">로그에서보다 정확한 값을 추출하려면 &lt;var&gt;type&lt;/var&gt; 인수를 사용하여 로깅에 대한 메모로 남은 데이터 유형을 지정할 수 있습니다 . &lt;var&gt;type&lt;/var&gt; 은 다음 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dfa89017607dc6e0675e22fd702f73f667c4d2e4" translate="yes" xml:space="preserve">
          <source>If you want to include the &lt;code&gt;.&lt;/code&gt; character in a &lt;code&gt;VirtualDocumentRoot&lt;/code&gt; directive, but it clashes with a &lt;code&gt;%&lt;/code&gt; directive, you can work around the problem in the following way:</source>
          <target state="translated">당신은을 포함 할 경우 &lt;code&gt;.&lt;/code&gt; &lt;code&gt;VirtualDocumentRoot&lt;/code&gt; 지시문에 문자가 있지만 &lt;code&gt;%&lt;/code&gt; 지시문 과 충돌 하면 다음과 같은 방법으로 문제를 해결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="73e81ab13718913b917a615a4c5cd9f796a30b3e" translate="yes" xml:space="preserve">
          <source>If you want to let more than one person in, you'll need to create a group file that associates group names with a list of users in that group. The format of this file is pretty simple, and you can create it with your favorite editor. The contents of the file will look like this:</source>
          <target state="translated">둘 이상의 사람을 참여 시키려면 그룹 이름을 해당 그룹의 사용자 목록과 연결하는 그룹 파일을 만들어야합니다. 이 파일의 형식은 매우 간단하며 즐겨 사용하는 편집기를 사용하여 만들 수 있습니다. 파일 내용은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="34056a9490183471e5da919834f4e2a82689e62d" translate="yes" xml:space="preserve">
          <source>If you want to log multiple virtual hosts to the same log file, you may want to split up the log files afterwards in order to run statistical analysis of the various virtual hosts. This can be accomplished in the following manner.</source>
          <target state="translated">여러 가상 호스트를 동일한 로그 파일에 로그하려는 경우 나중에 다양한 가상 호스트의 통계 분석을 실행하기 위해 로그 파일을 분할 할 수 있습니다. 이것은 다음과 같은 방식으로 달성 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9f3a270222f1f7bc3459028ca1c3b1399b4127b8" translate="yes" xml:space="preserve">
          <source>If you want to look how a particular expression is handled, you can recompile &lt;code&gt;&lt;a href=&quot;mod_include&quot;&gt;mod_include&lt;/a&gt;&lt;/code&gt; using the &lt;code&gt;-DDEBUG_INCLUDE&lt;/code&gt; compiler option. This inserts for every parsed expression tokenizer information, the parse tree and how it is evaluated into the output sent to the client.</source>
          <target state="translated">특정 표현식을 처리하는 방법을 &lt;code&gt;-DDEBUG_INCLUDE&lt;/code&gt; 컴파일러 옵션을 사용하여 &lt;code&gt;&lt;a href=&quot;mod_include&quot;&gt;mod_include&lt;/a&gt;&lt;/code&gt; 를 다시 컴파일 하십시오 . 구문 분석 된 모든 표현식 토크 나이저 정보, 구문 분석 트리 및 클라이언트로 전송 된 출력으로 정보가 평가되는 방식에 대해 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="20157084947f731db2ee1b452f73294c013b14e2" translate="yes" xml:space="preserve">
          <source>If you want to restrict the compression to particular MIME types in general, you may use the &lt;code&gt;&lt;a href=&quot;mod_filter#addoutputfilterbytype&quot;&gt;AddOutputFilterByType&lt;/a&gt;&lt;/code&gt; directive. Here is an example of enabling compression only for the html files of the Apache documentation:</source>
          <target state="translated">일반적으로 압축을 특정 MIME 유형으로 제한하려면 &lt;code&gt;&lt;a href=&quot;mod_filter#addoutputfilterbytype&quot;&gt;AddOutputFilterByType&lt;/a&gt;&lt;/code&gt; 지시문을 사용할 수 있습니다 . 다음은 Apache 설명서의 html 파일에 대해서만 압축을 활성화하는 예입니다.</target>
        </trans-unit>
        <trans-unit id="9087584288dd582cb9a8fb0426892004b016a6e6" translate="yes" xml:space="preserve">
          <source>If you want to specify more than one LDAP URL that Apache should try in turn, the syntax is:</source>
          <target state="translated">Apache가 차례로 시도해야하는 둘 이상의 LDAP URL을 지정하려는 경우 구문은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3bde7f7c2478beff1c60fd4be4b4be351b78231f" translate="yes" xml:space="preserve">
          <source>If you want to understand all the details, then you can come back to this page.</source>
          <target state="translated">모든 세부 사항을 이해하려면이 페이지로 돌아갈 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e3957a75f21d2a62ec387710a1ab29f1908fc34e" translate="yes" xml:space="preserve">
          <source>If you want to use &lt;code&gt;preload&lt;/code&gt; links without triggering a PUSH, you can use the &lt;code&gt;nopush&lt;/code&gt; parameter, as in</source>
          <target state="translated">사용하고자하는 경우 &lt;code&gt;preload&lt;/code&gt; 푸시를 트리거하지 않고 링크를, 당신은 사용할 수 있습니다 &lt;code&gt;nopush&lt;/code&gt; 같이 매개 변수를</target>
        </trans-unit>
        <trans-unit id="45e151d666e97d53d0bebd328e3e4927f33dd2e4" translate="yes" xml:space="preserve">
          <source>If you want to use a value within another string, it is useful to surround the parameter in braces, to avoid confusion:</source>
          <target state="translated">다른 문자열 내에서 값을 사용하려면 혼동을 피하기 위해 매개 변수를 중괄호로 묶는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="ce442c59e0e711d95feac5edeb432920d4440fc5" translate="yes" xml:space="preserve">
          <source>If you want to use double quotes within this text, you have to write them as &lt;code&gt;&amp;amp;quot;&lt;/code&gt;.</source>
          <target state="translated">이 텍스트에 큰 따옴표를 사용하려면 &lt;code&gt;&amp;amp;quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="347d7f495fadd4c5ece7b26429346a74dfb59a8b" translate="yes" xml:space="preserve">
          <source>If you want your server to continue running after a system reboot, you should add a call to &lt;code&gt;&lt;a href=&quot;programs/apachectl&quot;&gt;apachectl&lt;/a&gt;&lt;/code&gt; to your system startup files (typically &lt;code&gt;rc.local&lt;/code&gt; or a file in an &lt;code&gt;rc.N&lt;/code&gt; directory). This will start Apache as root. Before doing this ensure that your server is properly configured for security and access restrictions.</source>
          <target state="translated">시스템을 재부팅 한 후에도 서버를 계속 실행 하려면 시스템 시작 파일 (일반적으로 &lt;code&gt;rc.local&lt;/code&gt; 또는 &lt;code&gt;rc.N&lt;/code&gt; 의 파일)에 &lt;code&gt;&lt;a href=&quot;programs/apachectl&quot;&gt;apachectl&lt;/a&gt;&lt;/code&gt; 에 대한 호출을 추가해야합니다. 디렉토리 . 그러면 루트로 Apache가 시작됩니다. 이 작업을 수행하기 전에 서버가 보안 및 액세스 제한에 맞게 올바르게 구성되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="996a5fd09cde124f505165296338153a631e9c5b" translate="yes" xml:space="preserve">
          <source>If you wanted to do this generically for all domain names - that is, if you want to redirect &lt;strong&gt;example.com&lt;/strong&gt; to &lt;strong&gt;www.example.com&lt;/strong&gt; for all possible values of &lt;strong&gt;example.com&lt;/strong&gt;, you could use the following recipe:</source>
          <target state="translated">모든 도메인 이름 일반적으로이 작업을 수행하고 싶다면 - 리디렉션 할 경우 즉, &lt;strong&gt;example.com&lt;/strong&gt; 에 &lt;strong&gt;www.example.com&lt;/strong&gt; 의 모든 가능한 값을 &lt;strong&gt;example.com&lt;/strong&gt; 다음과 같은 조리법을 사용할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="260a4a8a4a69e9a3d7f1617bde97927eabc82594" translate="yes" xml:space="preserve">
          <source>If you wanted to have one of the servers more likely to be chosen (for example, if one of the server has more memory than the others, and so can handle more requests) simply list it more times in the map file.</source>
          <target state="translated">서버 중 하나를 선택하기 쉽도록하려면 (예를 들어, 서버 중 하나가 다른 것보다 많은 메모리를 가지고 있으므로 더 많은 요청을 처리 할 수있는 경우) 맵 파일에 더 많은 시간을 나열하십시오.</target>
        </trans-unit>
        <trans-unit id="fbebe90b78fb22d5372ab5a373a80418254917a8" translate="yes" xml:space="preserve">
          <source>If you wish designate a &lt;code&gt;cgi-bin&lt;/code&gt; subdirectory of a user's directory where everything will be treated as a CGI program, you can use the following.</source>
          <target state="translated">모든 것이 CGI 프로그램으로 취급 될 사용자 디렉토리의 &lt;code&gt;cgi-bin&lt;/code&gt; 서브 디렉토리를 지정 하려면 다음을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d2d546bf2b02aaaf69651784b7692dab740a37c6" translate="yes" xml:space="preserve">
          <source>If you wish to have your module engage a handler, you need only to set &lt;code&gt;r-&amp;gt;handler&lt;/code&gt; to the name of the handler at any time prior to the &lt;code&gt;invoke_handler&lt;/code&gt; stage of the request. Handlers are implemented as they were before, albeit using the handler name instead of a content type. While it is not necessary, the naming convention for handlers is to use a dash-separated word, with no slashes, so as to not invade the media type name-space.</source>
          <target state="translated">모듈이 핸들러 를 사용하게하려면 요청 의 &lt;code&gt;invoke_handler&lt;/code&gt; 단계 이전에 언제든지 &lt;code&gt;r-&amp;gt;handler&lt;/code&gt; 를 핸들러 이름으로 설정하면 됩니다. 핸들러는 컨텐츠 유형 대신 핸들러 이름을 사용하더라도 이전과 같이 구현됩니다. 필요하지는 않지만 처리기의 명명 규칙은 슬래시없이 대시로 구분 된 단어를 사용하여 미디어 유형 네임 스페이스에 침입하지 않도록합니다.</target>
        </trans-unit>
        <trans-unit id="bd813810359a54b7b3085b40db04ee40bbb65f48" translate="yes" xml:space="preserve">
          <source>If you wish to match against the full URL-path in a per-directory (htaccess) RewriteRule, use the &lt;code&gt;%{REQUEST_URI}&lt;/code&gt; variable in a &lt;code&gt;&lt;a href=&quot;#rewritecond&quot;&gt;RewriteCond&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">디렉토리 별 (htaccess) RewriteRule에서 전체 URL 경로와 일치 시키려면 &lt;code&gt;&lt;a href=&quot;#rewritecond&quot;&gt;RewriteCond&lt;/a&gt;&lt;/code&gt; 에서 &lt;code&gt;%{REQUEST_URI}&lt;/code&gt; 변수를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="b71b092b4dc15b4895fbce619b07b0b924ce8ac8" translate="yes" xml:space="preserve">
          <source>If you wish to match against the hostname, port, or query string, use a &lt;code&gt;&lt;a href=&quot;#rewritecond&quot;&gt;RewriteCond&lt;/a&gt;&lt;/code&gt; with the &lt;code&gt;%{HTTP_HOST}&lt;/code&gt;, &lt;code&gt;%{SERVER_PORT}&lt;/code&gt;, or &lt;code&gt;%{QUERY_STRING}&lt;/code&gt; variables respectively.</source>
          <target state="translated">호스트 이름, 포트 또는 쿼리 문자열과 일치 시키 려면 각각 &lt;code&gt;%{HTTP_HOST}&lt;/code&gt; , &lt;code&gt;%{SERVER_PORT}&lt;/code&gt; 또는 &lt;code&gt;%{QUERY_STRING}&lt;/code&gt; 변수 와 함께 &lt;code&gt;&lt;a href=&quot;#rewritecond&quot;&gt;RewriteCond&lt;/a&gt;&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="2711c7664e764e449edc8dadc43cc042148cab44" translate="yes" xml:space="preserve">
          <source>If you wish to restrict access to portions of your site based on the host address of your visitors, this is most easily done using &lt;code&gt;&lt;a href=&quot;../mod/mod_authz_host&quot;&gt;mod_authz_host&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">방문자의 호스트 주소를 기반으로 사이트의 일부에 대한 액세스를 제한하려면 &lt;code&gt;&lt;a href=&quot;../mod/mod_authz_host&quot;&gt;mod_authz_host&lt;/a&gt;&lt;/code&gt; 를 사용하여 가장 쉽게 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="73a9259b2ae0161f8cc7d662b6fe892abbe8e862" translate="yes" xml:space="preserve">
          <source>If you would prefer only the last dot-separated part of the filename to be mapped to a particular piece of meta-data, then do not use the &lt;code&gt;Add*&lt;/code&gt; directives. For example, if you wish to have the file &lt;code&gt;foo.html.cgi&lt;/code&gt; processed as a CGI script, but not the file &lt;code&gt;bar.cgi.html&lt;/code&gt;, then instead of using &lt;code&gt;AddHandler cgi-script .cgi&lt;/code&gt;, use</source>
          <target state="translated">파일 이름의 마지막 점으로 구분 된 부분 만 특정 메타 데이터 조각에 매핑되도록하려면 &lt;code&gt;Add*&lt;/code&gt; 지시문을 사용하지 마십시오 . 예를 들어, 파일이하고자하는 경우 &lt;code&gt;foo.html.cgi&lt;/code&gt; CGI 스크립트로 처리가 아니라 파일 &lt;code&gt;bar.cgi.html&lt;/code&gt; 을 , 다음 사용하는 대신 &lt;code&gt;AddHandler cgi-script .cgi&lt;/code&gt; 사용</target>
        </trans-unit>
        <trans-unit id="fc46b7a58b277c6e4b60d9ba448686ebaa7bfa79" translate="yes" xml:space="preserve">
          <source>If you're completely new to the Apache HTTP Server, or even to running a website at all, you might not know where to start, or what questions to ask. This document walks you through the basics.</source>
          <target state="translated">Apache HTTP Server를 처음 사용하거나 웹 사이트를 전혀 사용하지 않는 경우 시작 위치 또는 질문을 모를 수 있습니다. 이 문서는 기본 사항을 안내합니다.</target>
        </trans-unit>
        <trans-unit id="b206cf96ccf5c8d21c9160fc80cbacb1adb92f56" translate="yes" xml:space="preserve">
          <source>If you're using the &lt;code&gt;&lt;a href=&quot;#proxyblock&quot;&gt;ProxyBlock&lt;/a&gt;&lt;/code&gt; directive, hostnames' IP addresses are looked up and cached during startup for later match test. This may take a few seconds (or more) depending on the speed with which the hostname lookups occur.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#proxyblock&quot;&gt;ProxyBlock&lt;/a&gt;&lt;/code&gt; 지시문을 사용하는 경우 나중에 일치하는 테스트를 위해 호스트 이름의 IP 주소를 찾아 캐시에 저장합니다. 호스트 이름 조회 속도에 따라 몇 초 (또는 그 이상)가 걸릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a811b167e821c5b82064a100351e498b62d16fa0" translate="yes" xml:space="preserve">
          <source>If you're writing CGI programs in C, there are a variety of options. One of these is the &lt;code&gt;CGIC&lt;/code&gt; library, from &lt;a href=&quot;http://www.boutell.com/cgic/&quot;&gt;http://www.boutell.com/cgic/&lt;/a&gt;.</source>
          <target state="translated">C로 CGI 프로그램을 작성하는 경우 다양한 옵션이 있습니다. 이 중 하나는 &lt;a href=&quot;http://www.boutell.com/cgic/&quot;&gt;http://www.boutell.com/cgic/&lt;/a&gt; 의 &lt;code&gt;CGIC&lt;/code&gt; 라이브러리 입니다.</target>
        </trans-unit>
        <trans-unit id="00f89c9018d1ff69f800d63b79201169e2e77a49" translate="yes" xml:space="preserve">
          <source>If you're writing CGI programs in Perl, modules are available on &lt;a href=&quot;http://www.cpan.org/&quot;&gt;CPAN&lt;/a&gt;. The most popular module for this purpose is &lt;code&gt;CGI.pm&lt;/code&gt;. You might also consider &lt;code&gt;CGI::Lite&lt;/code&gt;, which implements a minimal set of functionality, which is all you need in most programs.</source>
          <target state="translated">Perl에서 CGI 프로그램을 작성하는 경우 &lt;a href=&quot;http://www.cpan.org/&quot;&gt;CPAN&lt;/a&gt; 에서 모듈을 사용할 수 있습니다 . 이 목적에 가장 많이 사용되는 모듈은 &lt;code&gt;CGI.pm&lt;/code&gt; 입니다. &lt;code&gt;CGI::Lite&lt;/code&gt; 고려할 수도 있는데, 이는 최소한의 기능 세트를 구현하며 대부분의 프로그램에서 필요한 전부입니다.</target>
        </trans-unit>
        <trans-unit id="24269a61c4de8d7176ff17ba02a584802c7ddc84" translate="yes" xml:space="preserve">
          <source>If your &lt;code&gt;AllowOverride&lt;/code&gt; setting is &lt;code&gt;All&lt;/code&gt;, add every directive listed on this page to the list.</source>
          <target state="translated">귀하의 경우 &lt;code&gt;AllowOverride&lt;/code&gt; 설정은 &lt;code&gt;All&lt;/code&gt; 목록이 페이지에있는 모든 지시문을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="2d615ff2bc521afcc7573cbc7d8da54f87f73b96" translate="yes" xml:space="preserve">
          <source>If your &lt;code&gt;AllowOverride&lt;/code&gt; setting is &lt;code&gt;None&lt;/code&gt;, you're done. Only the directives in the &lt;code&gt;AllowOverrideList&lt;/code&gt; (if any) will be allowed.</source>
          <target state="translated">귀하의 경우 &lt;code&gt;AllowOverride&lt;/code&gt; 설정이없는 &lt;code&gt;None&lt;/code&gt; , 당신은 완료됩니다. &lt;code&gt;AllowOverrideList&lt;/code&gt; 의 지시문 (있는 경우) 만 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="7e68a8943758db523a9a22b55295484148f43c0a" translate="yes" xml:space="preserve">
          <source>If your Apache httpd dumps its core, please attach a stack-frame ``backtrace'' (see &lt;a href=&quot;#backtrace&quot;&gt;below&lt;/a&gt; for information on how to get this). This information is required in order to find a reason for your core dump.</source>
          <target state="translated">Apache httpd가 코어를 덤프하면 스택 프레임``백 트레이스 ''를 첨부하십시오 ( 이 방법에 대한 정보는 &lt;a href=&quot;#backtrace&quot;&gt;아래&lt;/a&gt; 참조 ). 이 정보는 코어 덤프의 이유를 찾기 위해 필요합니다.</target>
        </trans-unit>
        <trans-unit id="53b86e00d02a2e114080a2830f8d4e34b349a143" translate="yes" xml:space="preserve">
          <source>If your Apache installation uses non-standard paths, you will need to edit the &lt;code&gt;apachectl&lt;/code&gt; script to set the appropriate paths to the &lt;code&gt;&lt;a href=&quot;httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; binary. You can also specify any necessary &lt;code&gt;&lt;a href=&quot;httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; command line arguments. See the comments in the script for details.</source>
          <target state="translated">Apache 설치에서 비표준 경로를 사용하는 경우, &lt;code&gt;apachectl&lt;/code&gt; 스크립트를 편집 하여 &lt;code&gt;&lt;a href=&quot;httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; 바이너리에 대한 적절한 경로를 설정해야합니다 . 필요한 &lt;code&gt;&lt;a href=&quot;httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; 명령 줄 인수를 지정할 수도 있습니다 . 자세한 내용은 스크립트의 주석을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1f1347626dd04a93ba22e8078997b0f3ff6e6484" translate="yes" xml:space="preserve">
          <source>If your CGI program depends on non-standard &lt;a href=&quot;#env&quot;&gt;environment variables&lt;/a&gt;, you will need to assure that those variables are passed by Apache.</source>
          <target state="translated">CGI 프로그램이 비표준 &lt;a href=&quot;#env&quot;&gt;환경 변수&lt;/a&gt; 에 의존 하는 경우 해당 변수가 Apache에 의해 전달되는지 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="97f0d022a88fa305704e2f36824ae8980380e55d" translate="yes" xml:space="preserve">
          <source>If your Java-based client aborts with exceptions such as &lt;code&gt;java.lang.RuntimeException: Could not generate DH keypair&lt;/code&gt; and &lt;code&gt;java.security.InvalidAlgorithmParameterException: Prime size must be multiple of 64, and can only range from 512 to 1024 (inclusive)&lt;/code&gt;, and httpd logs &lt;code&gt;tlsv1 alert internal error (SSL alert number 80)&lt;/code&gt; (at &lt;code&gt;&lt;a href=&quot;../mod/core#loglevel&quot;&gt;LogLevel&lt;/a&gt;&lt;/code&gt;&lt;code&gt;info&lt;/code&gt; or higher), you can either rearrange mod_ssl's cipher list with &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl#sslciphersuite&quot;&gt;SSLCipherSuite&lt;/a&gt;&lt;/code&gt; (possibly in conjunction with &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl#sslhonorcipherorder&quot;&gt;SSLHonorCipherOrder&lt;/a&gt;&lt;/code&gt;), or you can use custom DH parameters with a 1024-bit prime, which will always have precedence over any of the built-in DH parameters.</source>
          <target state="translated">만약 같은 예외를 제외하고 자바 기반 클라이언트 중단한다 &lt;code&gt;java.lang.RuntimeException: Could not generate DH keypair&lt;/code&gt; 및 &lt;code&gt;java.security.InvalidAlgorithmParameterException: Prime size must be multiple of 64, and can only range from 512 to 1024 (inclusive)&lt;/code&gt; 하고, httpd logs &lt;code&gt;tlsv1 alert internal error (SSL alert number 80)&lt;/code&gt; ( &lt;code&gt;&lt;a href=&quot;../mod/core#loglevel&quot;&gt;LogLevel&lt;/a&gt;&lt;/code&gt; &lt;code&gt;info&lt;/code&gt; 이상에서) &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl#sslciphersuite&quot;&gt;SSLCipherSuite&lt;/a&gt;&lt;/code&gt; 를 사용 하여 mod_ssl의 암호 목록을 재 배열하거나 ( &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl#sslhonorcipherorder&quot;&gt;SSLHonorCipherOrder&lt;/a&gt;&lt;/code&gt; 와 함께 사용 가능 ) 1024 비트 소수로 사용자 정의 DH 매개 변수를 사용할 수 있습니다. 내장 DH 매개 변수보다 항상 우선합니다.</target>
        </trans-unit>
        <trans-unit id="fc4c34a6fd2e24211e653bafb627e0042a913b77" translate="yes" xml:space="preserve">
          <source>If your OS supports a &lt;code&gt;sendfile(2)&lt;/code&gt; system call, make sure you install the release and/or patches needed to enable it. (With Linux, for example, this means using Linux 2.4 or later. For early releases of Solaris 8, you may need to apply a patch.) On systems where it is available, &lt;code&gt;sendfile&lt;/code&gt; enables Apache 2 to deliver static content faster and with lower CPU utilization.</source>
          <target state="translated">OS가 &lt;code&gt;sendfile(2)&lt;/code&gt; 시스템 호출을 지원하는 경우이를 활성화하는 데 필요한 릴리스 및 / 또는 패치를 설치해야합니다. (예를 들어, Linux의 경우 이는 Linux 2.4 이상을 사용함을 의미합니다. Solaris 8의 초기 릴리스의 경우 패치를 적용해야 할 수 있습니다.) 사용 가능한 시스템에서 &lt;code&gt;sendfile&lt;/code&gt; 을 사용하면 Apache 2가 정적 컨텐츠를 더 빠르고 더 적게 전달할 수 있습니다 CPU 사용률.</target>
        </trans-unit>
        <trans-unit id="53b0a4b5ebe8c36d6e0c7a8bd8ec503cf72ea771" translate="yes" xml:space="preserve">
          <source>If your application supports the generic &lt;code&gt;AUTHORIZER&lt;/code&gt; role (authentication and authorizer in one invocation), define a single provider as follows:</source>
          <target state="translated">애플리케이션이 일반 &lt;code&gt;AUTHORIZER&lt;/code&gt; 역할 (한 번의 호출에서 인증 및 권한 부 여자)을 지원하는 경우 다음과 같이 단일 제공자를 정의하십시오.</target>
        </trans-unit>
        <trans-unit id="4fc3e8e936ab86983908b760ff3feaf69fbc1469" translate="yes" xml:space="preserve">
          <source>If your application supports the separate authentication and authorization roles (&lt;code&gt;AUTHENTICATOR&lt;/code&gt; and &lt;code&gt;AUTHORIZER&lt;/code&gt;), define separate providers as follows, even if they map to the same application:</source>
          <target state="translated">애플리케이션이 별도의 인증 및 권한 부여 역할 ( &lt;code&gt;AUTHENTICATOR&lt;/code&gt; 및 &lt;code&gt;AUTHORIZER&lt;/code&gt; )을 지원하는 경우 동일한 애플리케이션에 맵핑 된 경우에도 다음과 같이 별도의 제공자를 정의하십시오.</target>
        </trans-unit>
        <trans-unit id="58a7afef16c44016ebf135d588e800bf80f4388a" translate="yes" xml:space="preserve">
          <source>If your data really needs to be secure, consider using &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; in addition to any authentication.</source>
          <target state="translated">데이터가 실제로 안전해야하는 경우 인증 외에도 &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; 을 사용 하십시오.</target>
        </trans-unit>
        <trans-unit id="f016fb1534dd33b0141c3239104e98c15274e871" translate="yes" xml:space="preserve">
          <source>If your decision about compression depends on other information than request headers (&lt;em&gt;e.g.&lt;/em&gt; HTTP version), you have to set the &lt;code&gt;Vary&lt;/code&gt; header to the value &lt;code&gt;*&lt;/code&gt;. This prevents compliant proxies from caching entirely.</source>
          <target state="translated">압축에 대한 결정이 요청 헤더 ( &lt;em&gt;예 :&lt;/em&gt; HTTP 버전) 이외의 다른 정보에 의존하는 경우 &lt;code&gt;Vary&lt;/code&gt; 헤더를 &lt;code&gt;*&lt;/code&gt; 값 으로 설정해야합니다 . 이는 준수 프록시가 완전히 캐싱하는 것을 방지합니다.</target>
        </trans-unit>
        <trans-unit id="3c667f75d9ac1b0501b1065ff426aa86350a6071" translate="yes" xml:space="preserve">
          <source>If your module needs additional C compiler flags, linker flags or libraries, add them to CFLAGS, LDFLAGS and LIBS accordingly. See other &lt;code&gt;config.m4&lt;/code&gt; files in modules directory for examples.</source>
          <target state="translated">모듈에 추가 C 컴파일러 플래그, 링커 플래그 또는 라이브러리가 필요한 경우 CFLAGS, LDFLAGS 및 LIBS에 추가하십시오. 예제는 모듈 디렉토리의 다른 &lt;code&gt;config.m4&lt;/code&gt; 파일을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7fad64125f88d128c97c214309d49f0610ad568f" translate="yes" xml:space="preserve">
          <source>If your platform supports it and you want httpd to handle IPv4 and IPv6 connections on separate sockets (i.e., to disable IPv4-mapped addresses), specify the &lt;code&gt;--disable-v4-mapped&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;programs/configure&quot;&gt;configure&lt;/a&gt;&lt;/code&gt; option. &lt;code&gt;--disable-v4-mapped&lt;/code&gt; is the default on FreeBSD, NetBSD, and OpenBSD.</source>
          <target state="translated">플랫폼이이를 지원하고 httpd가 별도의 소켓에서 IPv4 및 IPv6 연결을 처리하도록하려면 (즉, IPv4 매핑 주소 비활성화) &lt;code&gt;--disable-v4-mapped&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;programs/configure&quot;&gt;configure&lt;/a&gt;&lt;/code&gt; 옵션을 지정하십시오 . &lt;code&gt;--disable-v4-mapped&lt;/code&gt; 는 FreeBSD, NetBSD 및 OpenBSD의 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="7fe354e7f422b3332f9cc0c8aa6badc84e51bc71" translate="yes" xml:space="preserve">
          <source>If your server doesn't have to perform DNS for any other reason then you might be able to get away with running httpd with the &lt;code&gt;HOSTRESORDER&lt;/code&gt; environment variable set to &quot;local&quot;. This all depends on what OS and resolver libraries you are using. It also affects CGIs unless you use &lt;code&gt;&lt;a href=&quot;mod/mod_env&quot;&gt;mod_env&lt;/a&gt;&lt;/code&gt; to control the environment. It's best to consult the man pages or FAQs for your OS.</source>
          <target state="translated">서버가 다른 이유로 DNS를 수행하지 않아도되는 경우 &lt;code&gt;HOSTRESORDER&lt;/code&gt; 환경 변수를 &quot;local&quot;로 설정하여 httpd를 실행하지 않아도 됩니다. 이것은 사용중인 OS 및 리졸버 라이브러리에 따라 다릅니다. &lt;code&gt;&lt;a href=&quot;mod/mod_env&quot;&gt;mod_env&lt;/a&gt;&lt;/code&gt; 를 사용하여 환경을 제어 하지 않으면 CGI에도 영향을줍니다 . OS에 대한 매뉴얼 페이지 나 FAQ를 참조하는 것이 가장 좋습니다.</target>
        </trans-unit>
        <trans-unit id="7903af2a1cd91ecfd86cd07130149bf010d52d32" translate="yes" xml:space="preserve">
          <source>If your setup can handle it, configuring &lt;code&gt;&lt;a href=&quot;../mod/event&quot;&gt;event&lt;/a&gt;&lt;/code&gt; mpm is nowadays the best one (if supported on your platform).</source>
          <target state="translated">설치 프로그램에서 처리 할 수 ​​있으면 현재 &lt;code&gt;&lt;a href=&quot;../mod/event&quot;&gt;event&lt;/a&gt;&lt;/code&gt; mpm 구성 이 가장 좋습니다 (플랫폼에서 지원되는 경우).</target>
        </trans-unit>
        <trans-unit id="80ea3b68208be9cbe3afd4e10f55d23bb793fe5a" translate="yes" xml:space="preserve">
          <source>If your site needs content negotiation, consider using &lt;code&gt;type-map&lt;/code&gt; files, rather than the &lt;code&gt;Options MultiViews&lt;/code&gt; directive to accomplish the negotiation. See the &lt;a href=&quot;../content-negotiation&quot;&gt;Content Negotiation&lt;/a&gt; documentation for a full discussion of the methods of negotiation, and instructions for creating &lt;code&gt;type-map&lt;/code&gt; files.</source>
          <target state="translated">사이트에서 내용 협상이 필요한 경우 협상 을 수행하기 위해 &lt;code&gt;Options MultiViews&lt;/code&gt; 지시문 대신 &lt;code&gt;type-map&lt;/code&gt; 파일을 사용하는 것이 좋습니다 . &lt;a href=&quot;../content-negotiation&quot;&gt;협상&lt;/a&gt; 방법 및 &lt;code&gt;type-map&lt;/code&gt; 파일 작성에 대한 자세한 내용은 Content Negotiation 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6bc36d332c17c745054778c304a873983d341a79" translate="yes" xml:space="preserve">
          <source>If your system is POSIX compliant or if it implements the &lt;code&gt;pthread_mutexattr_setrobust_np()&lt;/code&gt; function, you may be able to use the &lt;code&gt;pthread&lt;/code&gt; option safely.</source>
          <target state="translated">시스템이 POSIX 호환이거나 &lt;code&gt;pthread_mutexattr_setrobust_np()&lt;/code&gt; 함수를 구현하는 경우 &lt;code&gt;pthread&lt;/code&gt; 옵션을 안전하게 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="272a7d775c43eea6bab32e724579041769798406" translate="yes" xml:space="preserve">
          <source>If, after scanning the directory,</source>
          <target state="translated">디렉토리를 스캔 한 후</target>
        </trans-unit>
        <trans-unit id="c4d8b51bc5831e957dd3678966f1abc5661de3d1" translate="yes" xml:space="preserve">
          <source>If, for example, you are permitting file upload to a particular location and wish to limit the size of the uploaded file to 100K, you might use the following directive:</source>
          <target state="translated">예를 들어 특정 위치로 파일 업로드를 허용하고 업로드 된 파일의 크기를 100K로 제한하려는 경우 다음 지시문을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="740f777c11f223037c39b8f8896ad5803747da3f" translate="yes" xml:space="preserve">
          <source>If, for example, you have an &lt;code&gt;&lt;a href=&quot;../mod/mod_alias#alias&quot;&gt;Alias&lt;/a&gt;&lt;/code&gt; for /icons, and have a &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; pointing there, you should use the [PT] flag to ensure that the &lt;code&gt;&lt;a href=&quot;../mod/mod_alias#alias&quot;&gt;Alias&lt;/a&gt;&lt;/code&gt; is evaluated.</source>
          <target state="translated">예를 들어, / icons에 대한 &lt;code&gt;&lt;a href=&quot;../mod/mod_alias#alias&quot;&gt;Alias&lt;/a&gt;&lt;/code&gt; 이 있고이를 가리키는 &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; 이있는 경우 [PT] 플래그를 사용하여 &lt;code&gt;&lt;a href=&quot;../mod/mod_alias#alias&quot;&gt;Alias&lt;/a&gt;&lt;/code&gt; 이 평가 되도록해야합니다 .</target>
        </trans-unit>
        <trans-unit id="f27fe1c360a69d371ba22dbd88b4718c27dbf38f" translate="yes" xml:space="preserve">
          <source>If, for example, your configuration permits access to a resource by IP address you should ensure that this content is not cached. You can do this by using the &lt;code&gt;&lt;a href=&quot;mod/mod_cache#cachedisable&quot;&gt;CacheDisable&lt;/a&gt;&lt;/code&gt; directive, or &lt;code&gt;&lt;a href=&quot;mod/mod_expires&quot;&gt;mod_expires&lt;/a&gt;&lt;/code&gt;. Left unchecked, &lt;code&gt;&lt;a href=&quot;mod/mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; - very much like a reverse proxy - would cache the content when served and then serve it to any client, on any IP address.</source>
          <target state="translated">예를 들어, 구성에서 IP 주소로 자원에 액세스 할 수있는 경우이 컨텐츠가 캐시되지 않아야합니다. &lt;code&gt;&lt;a href=&quot;mod/mod_cache#cachedisable&quot;&gt;CacheDisable&lt;/a&gt;&lt;/code&gt; 지시문 또는 &lt;code&gt;&lt;a href=&quot;mod/mod_expires&quot;&gt;mod_expires&lt;/a&gt;&lt;/code&gt; 를 사용하여이를 수행 할 수 있습니다 . 선택하지 않으면 &lt;code&gt;&lt;a href=&quot;mod/mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; ( 역 프록시와 매우 유사)는 제공 될 때 내용을 캐시 한 다음 모든 IP 주소의 클라이언트에게 제공합니다.</target>
        </trans-unit>
        <trans-unit id="da1954b377b095cbe47b9127714200ae264dfdea" translate="yes" xml:space="preserve">
          <source>If, for whatever reason, you still want to use &lt;code&gt;mod_rewrite&lt;/code&gt; - if, for example, you need this to work with a larger set of RewriteRules - you might use one of the recipes below.</source>
          <target state="translated">어떤 이유로 든 &lt;code&gt;mod_rewrite&lt;/code&gt; 를 사용하려는 경우 (예를 들어, 더 큰 RewriteRules 세트로 작업하기 위해 필요한 경우) 아래 레시피 중 하나를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="594e3b4d5d088cfa164a276546997bbe62a44b43" translate="yes" xml:space="preserve">
          <source>If, on the other hand, you are getting server errors when trying to access documents, check your httpd error log. It will likely tell you that the directive used in your &lt;code&gt;.htaccess&lt;/code&gt; file is not permitted.</source>
          <target state="translated">반면에 문서에 액세스 할 때 서버 오류가 발생하면 httpd 오류 로그를 확인하십시오. &lt;code&gt;.htaccess&lt;/code&gt; 파일에 사용 된 지시문 이 허용되지 않음을 알려줄 것입니다 .</target>
        </trans-unit>
        <trans-unit id="4c079cb294b28ae3d6521df9d0afca15dc4194e6" translate="yes" xml:space="preserve">
          <source>If, on the other hand, you have modules statically linked into your Apache binary, you will need to recompile Apache in order to remove unwanted modules.</source>
          <target state="translated">반면에 모듈을 Apache 바이너리에 정적으로 링크 한 경우 원하지 않는 모듈을 제거하려면 Apache를 다시 컴파일해야합니다.</target>
        </trans-unit>
        <trans-unit id="bc757319fe7516e179e46b1bf6a424f52effeb7f" translate="yes" xml:space="preserve">
          <source>If, on the other hand, you wish to pass the requested URI as a query string argument to index.php, you can replace that RewriteRule with:</source>
          <target state="translated">반면에 요청 된 URI를 쿼리 문자열 인수로 index.php에 전달하려는 경우 해당 RewriteRule을 다음과 같이 바꿀 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e7019a5d19f2e3544475f5a6ba0308a3520b4ab7" translate="yes" xml:space="preserve">
          <source>Ignore HTML links (pass through unchanged)</source>
          <target state="translated">HTML 링크 무시 (변경되지 않은 상태로 전달)</target>
        </trans-unit>
        <trans-unit id="4018ed5bbb53942b79e93f12905678f54417f934" translate="yes" xml:space="preserve">
          <source>Ignore defined session identifiers encoded in the URL when caching</source>
          <target state="translated">캐싱 할 때 URL로 인코딩 된 정의 된 세션 식별자 무시</target>
        </trans-unit>
        <trans-unit id="0e5b4946ddc33923edcd604c412398c40477edf6" translate="yes" xml:space="preserve">
          <source>Ignore query string when caching</source>
          <target state="translated">캐싱 할 때 쿼리 문자열 무시</target>
        </trans-unit>
        <trans-unit id="b7ee52b078bceeb16f6400461ba53be634829765" translate="yes" xml:space="preserve">
          <source>Ignore request to not serve cached content to client</source>
          <target state="translated">캐시 된 컨텐츠를 클라이언트에 제공하지 않는 요청 무시</target>
        </trans-unit>
        <trans-unit id="61c76f80d83d7ee5aac9d19ba5bfec5adf0b7342" translate="yes" xml:space="preserve">
          <source>Ignore scripting events (pass through unchanged)</source>
          <target state="translated">스크립팅 이벤트 무시 (변경되지 않은 상태로 전달)</target>
        </trans-unit>
        <trans-unit id="a2691f1c22d27202887f403c05b14027b9490d2f" translate="yes" xml:space="preserve">
          <source>Ignore the fact that a response has no Last Modified header.</source>
          <target state="translated">응답에 Last Modified 헤더가 없다는 사실을 무시하십시오.</target>
        </trans-unit>
        <trans-unit id="36099609b63a93090d2faa1dbdb6a9d2ed799b28" translate="yes" xml:space="preserve">
          <source>IgnoreCase</source>
          <target state="translated">IgnoreCase</target>
        </trans-unit>
        <trans-unit id="c297c37a6db3c996a6588a64e3680ee260005e3f" translate="yes" xml:space="preserve">
          <source>IgnoreClient</source>
          <target state="translated">IgnoreClient</target>
        </trans-unit>
        <trans-unit id="f52483c8aa11d319d29e4cde2e137487fe62a4df" translate="yes" xml:space="preserve">
          <source>Illustrates the Apache module API</source>
          <target state="translated">Apache 모듈 API를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="39f0fa8b43b020120d0cde0bca2a60bb843701fc" translate="yes" xml:space="preserve">
          <source>Image Downsampling</source>
          <target state="translated">이미지 다운 샘플링</target>
        </trans-unit>
        <trans-unit id="e82b84fd40366936ed8c8771058ebcfef3dfa07f" translate="yes" xml:space="preserve">
          <source>Image downsampling service</source>
          <target state="translated">이미지 다운 샘플링 서비스</target>
        </trans-unit>
        <trans-unit id="5bb3ad26e2fda3cd343bd1dc49196d9e2b80c785" translate="yes" xml:space="preserve">
          <source>Image processing</source>
          <target state="translated">이미지 처리</target>
        </trans-unit>
        <trans-unit id="5b446f7b3ec681a9ba666f496199a1e963931d3c" translate="yes" xml:space="preserve">
          <source>Imagemap File</source>
          <target state="translated">이미지 맵 파일</target>
        </trans-unit>
        <trans-unit id="0f11976cd1f2b519c8e2ce09fed0fc85ed95e846" translate="yes" xml:space="preserve">
          <source>Imagemap File Directives</source>
          <target state="translated">이미지 맵 파일 지시어</target>
        </trans-unit>
        <trans-unit id="2f00845912bc2b2c06fd713b1987191b2fef9faf" translate="yes" xml:space="preserve">
          <source>Images, javascript files, or css files, loaded as part of an HTML page, are not subrequests - the browser requests them as separate HTTP requests.</source>
          <target state="translated">HTML 페이지의 일부로로드 된 이미지, 자바 스크립트 파일 또는 CSS 파일은 하위 요청이 아닙니다. 브라우저는 별도의 HTTP 요청으로 이미지를 요청합니다.</target>
        </trans-unit>
        <trans-unit id="1e779f4d1d49f3aefa4130ab50ea8ef7c0e83b64" translate="yes" xml:space="preserve">
          <source>ImapBase</source>
          <target state="translated">ImapBase</target>
        </trans-unit>
        <trans-unit id="7163a14ad5db3e2b9b1815fa834af259db06d47b" translate="yes" xml:space="preserve">
          <source>ImapBase Directive</source>
          <target state="translated">ImapBase 지시어</target>
        </trans-unit>
        <trans-unit id="cb565e85a9270e1a9a8a524123502f44667c0173" translate="yes" xml:space="preserve">
          <source>ImapDefault</source>
          <target state="translated">ImapDefault</target>
        </trans-unit>
        <trans-unit id="9fa0ac8209f07212b6e6efa4c923d8e63f1bdb30" translate="yes" xml:space="preserve">
          <source>ImapDefault Directive</source>
          <target state="translated">ImapDefault 지시어</target>
        </trans-unit>
        <trans-unit id="2822ac4db76affec3d35d1c949eff618911e11cf" translate="yes" xml:space="preserve">
          <source>ImapMenu</source>
          <target state="translated">ImapMenu</target>
        </trans-unit>
        <trans-unit id="2f78ece8669356fdf1974db95c201d0068cfb450" translate="yes" xml:space="preserve">
          <source>ImapMenu Directive</source>
          <target state="translated">ImapMenu 지시어</target>
        </trans-unit>
        <trans-unit id="8781d615fd77be9578225c40ac67b9471394cced" translate="yes" xml:space="preserve">
          <source>Implementation</source>
          <target state="translated">Implementation</target>
        </trans-unit>
        <trans-unit id="d3fe1353eac3c0b1d213bbc487299b0cc6d80d70" translate="yes" xml:space="preserve">
          <source>Implementation Choices</source>
          <target state="translated">구현 선택</target>
        </trans-unit>
        <trans-unit id="eef725bb17c4ef924087c55d09a53cbfecb3e7d5" translate="yes" xml:space="preserve">
          <source>Implementing a content encoding filter</source>
          <target state="translated">컨텐츠 인코딩 필터 구현</target>
        </trans-unit>
        <trans-unit id="8878faf9f60187f368966ab642c1424ca7df8a43" translate="yes" xml:space="preserve">
          <source>Implements a disk based storage manager. Headers and bodies are stored separately on disk, in a directory structure derived from the md5 hash of the cached URL. Multiple content negotiated responses can be stored concurrently, however the caching of partial content is not supported by this module. The &lt;code&gt;&lt;a href=&quot;../programs/htcacheclean&quot;&gt;htcacheclean&lt;/a&gt;&lt;/code&gt; tool is provided to list cached URLs, remove cached URLs, or to maintain the size of the disk cache within size and inode limits.</source>
          <target state="translated">디스크 기반 스토리지 관리자를 구현합니다. 헤더와 본문은 캐시 된 URL의 md5 해시에서 파생 된 디렉토리 구조로 디스크에 별도로 저장됩니다. 여러 컨텐츠 협상 응답을 동시에 저장할 수 있지만이 모듈에서는 부분 컨텐츠 캐싱을 지원하지 않습니다. &lt;code&gt;&lt;a href=&quot;../programs/htcacheclean&quot;&gt;htcacheclean&lt;/a&gt;&lt;/code&gt; 도구는 캐시 된 URL을 제거하거나 크기와 아이 노드 범위 내에서 디스크 캐시의 크기를 유지하기 위해, 목록 캐시 URL로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="b432dac2775cfe23e8649bf9d6614dfd0a5dd9d0" translate="yes" xml:space="preserve">
          <source>Implements a non-threaded, pre-forking web server</source>
          <target state="translated">스레드되지 않은 사전 포크 웹 서버를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="748c9ae5120ad4da24698370850fc2a6d7d34c76" translate="yes" xml:space="preserve">
          <source>Implements a shared object cache based storage manager. Headers and bodies are stored together beneath a single key based on the URL of the response being cached. Multiple content negotiated responses can be stored concurrently, however the caching of partial content is not supported by this module.</source>
          <target state="translated">공유 객체 캐시 기반 스토리지 관리자를 구현합니다. 헤더와 본문은 캐시되는 응답의 URL을 기반으로 단일 키 아래에 함께 저장됩니다. 여러 컨텐츠 협상 응답을 동시에 저장할 수 있지만이 모듈에서는 부분 컨텐츠 캐싱을 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="073804cc477294ea6900be7f38afe2334c4ee4f5" translate="yes" xml:space="preserve">
          <source>Import session updates from a given HTTP response header</source>
          <target state="translated">지정된 HTTP 응답 헤더에서 세션 업데이트 가져 오기</target>
        </trans-unit>
        <trans-unit id="d6e2df3a72f01923d5f141c193c7b348a84af734" translate="yes" xml:space="preserve">
          <source>Important compatibility note: The implementation of &lt;code&gt;dbmopen&lt;/code&gt; in the Apache modules reads the string length of the hashed values from the DBM data structures, rather than relying upon the string being NULL-appended. Some applications, such as the Netscape web server, rely upon the string being NULL-appended, so if you are having trouble using DBM files interchangeably between applications this may be a part of the problem.</source>
          <target state="translated">중요 호환성 참고 : Apache 모듈에서 &lt;code&gt;dbmopen&lt;/code&gt; 을 구현 하면 NULL이 추가 된 문자열에 의존하지 않고 DBM 데이터 구조에서 해시 된 값의 문자열 길이를 읽습니다. Netscape 웹 서버와 같은 일부 응용 프로그램은 널 (null)이 추가 된 문자열에 의존하므로, 응용 프로그램간에 DBM 파일을 상호 교환하여 사용하는 데 문제가있는 경우 이는 문제의 일부일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5accdf9c2e442f1bd44af23f40fb1df697964bcb" translate="yes" xml:space="preserve">
          <source>Importantly, as the cached files are locally stored, operating system in-memory caching will typically be applied to their access also. So although the files are stored on disk, if they are frequently accessed it is likely the operating system will ensure that they are actually served from memory.</source>
          <target state="translated">중요한 점은 캐시 된 파일이 로컬로 저장되므로 일반적으로 운영 체제 인 메모리 캐싱도 액세스에 적용됩니다. 따라서 파일이 디스크에 저장되어 있지만 자주 액세스하는 경우 운영 체제에서 실제로 메모리에서 서비스를 제공 할 가능성이 높습니다.</target>
        </trans-unit>
        <trans-unit id="5581c31adb95b00fbd43bea4b5a838d47e136af2" translate="yes" xml:space="preserve">
          <source>Improving Cache Hits</source>
          <target state="translated">캐시 적중 개선</target>
        </trans-unit>
        <trans-unit id="0b4cfb74250825e25c41687e223ced16286839a1" translate="yes" xml:space="preserve">
          <source>In 'auto' mode, &lt;code&gt;&lt;a href=&quot;mod_md&quot;&gt;mod_md&lt;/a&gt;&lt;/code&gt; will &lt;em&gt;drive&lt;/em&gt; a Managed Domain's properties (e.g. certificate management) whenever necessary. When a MD is not used in any virtual host, the module will do nothing. When a certificate is missing, it will try to get one. When a certificate expires soon (see &lt;code&gt;&lt;a href=&quot;#mdrenewwindow&quot;&gt;MDRenewWindow&lt;/a&gt;&lt;/code&gt;), it will renew it.</source>
          <target state="translated">'자동'모드에서는 &lt;code&gt;&lt;a href=&quot;mod_md&quot;&gt;mod_md&lt;/a&gt;&lt;/code&gt; 는 것입니다 &lt;em&gt;운전&lt;/em&gt; 필요할 때마다 관리되는 도메인의 속성 (예 : 인증서 관리). 가상 호스트에서 MD를 사용하지 않으면 모듈은 아무 작업도 수행하지 않습니다. 인증서가 없으면 인증서를 얻으려고 시도합니다. 인증서가 곧 만료되면 ( &lt;code&gt;&lt;a href=&quot;#mdrenewwindow&quot;&gt;MDRenewWindow&lt;/a&gt;&lt;/code&gt; 참조 ) 인증서가 갱신됩니다.</target>
        </trans-unit>
        <trans-unit id="7d5c9f83c0652943ebd31ba64437ee4ebf827468" translate="yes" xml:space="preserve">
          <source>In 'manual' mode, it is your duty to do all this. The module will provide the existing certificate to &lt;code&gt;&lt;a href=&quot;mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt;, if available. But it will not contact the CA for signup/renewal. This can be useful in clustered setups where you want just one node to perform the driving.</source>
          <target state="translated">'수동'모드에서는이 모든 작업을 수행해야합니다. 모듈은 사용 가능한 경우 기존 인증서를 &lt;code&gt;&lt;a href=&quot;mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; 에 제공합니다. 그러나 가입 / 갱신을 위해 CA에 연락하지 않습니다. 이는 하나의 노드 만 구동을 수행하려는 클러스터 된 설정에서 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="69454853a33c06cac79061762fd1752b93ab7c93" translate="yes" xml:space="preserve">
          <source>In 2.4.26 and later, the &quot;no-proxy&quot; environment variable can be set to disable &lt;code&gt;&lt;a href=&quot;mod_proxy&quot;&gt;mod_proxy&lt;/a&gt;&lt;/code&gt; processing the current request. This variable should be set with &lt;code&gt;&lt;a href=&quot;mod_setenvif#setenvif&quot;&gt;SetEnvIf&lt;/a&gt;&lt;/code&gt;, as &lt;code&gt;&lt;a href=&quot;mod_env#setenv&quot;&gt;SetEnv&lt;/a&gt;&lt;/code&gt; is not evaluated early enough.</source>
          <target state="translated">2.4.26 이상에서는 &quot;no-proxy&quot;환경 변수를 설정 하여 현재 요청을 처리하는 &lt;code&gt;&lt;a href=&quot;mod_proxy&quot;&gt;mod_proxy&lt;/a&gt;&lt;/code&gt; 를 비활성화 할 수 있습니다 . 이 변수로 설정해야 &lt;code&gt;&lt;a href=&quot;mod_setenvif#setenvif&quot;&gt;SetEnvIf&lt;/a&gt;&lt;/code&gt; 로, &lt;code&gt;&lt;a href=&quot;mod_env#setenv&quot;&gt;SetEnv&lt;/a&gt;&lt;/code&gt; 조기에 평가되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f7dc22e9cd21bd36370cf6584133031526d39c00" translate="yes" xml:space="preserve">
          <source>In 2.4.26 and later, you can limit the escaping to specific characters in backreferences by listing them: &lt;code&gt;[B=#?;]&lt;/code&gt;. Note: The space character can be used in the list of characters to escape, but it cannot be the last character in the list.</source>
          <target state="translated">2.4.26 이상에서는 &lt;code&gt;[B=#?;]&lt;/code&gt; 을 나열하여 역 참조에서 특정 문자로 이스케이프를 제한 할 수 있습니다 . 참고 : 공백 문자는 이스케이프 할 문자 목록에서 사용할 수 있지만 목록의 마지막 문자는 될 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="3fa49fbee76b53638de2e9d907c747ef3b686e74" translate="yes" xml:space="preserve">
          <source>In 2.4.7 and later, support for using a Unix Domain Socket is available by using a target which prepends &lt;code&gt;unix:/path/lis.sock|&lt;/code&gt;. For example, to proxy HTTP and target the UDS at /home/www/socket, you would use &lt;code&gt;unix:/home/www.socket|http://localhost/whatever/&lt;/code&gt;.</source>
          <target state="translated">2.4.7 이상에서 유닉스 도메인 소켓 사용에 대한 지원은 &lt;code&gt;unix:/path/lis.sock|&lt;/code&gt; . 예를 들어, HTTP를 프록시하고 / home / www / socket에서 UDS를 대상으로 지정하려면 &lt;code&gt;unix:/home/www.socket|http://localhost/whatever/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c47e49c411e76576572f050d2228e85f4c9a152c" translate="yes" xml:space="preserve">
          <source>In 2.4.8 and later, this module returns an error after 32,000 iterations to protect against unintended looping. An alternative maximum number of iterations can be specified by adding to the N flag.</source>
          <target state="translated">2.4.8 이상에서이 모듈은 의도하지 않은 루핑을 방지하기 위해 32,000 회 반복 후 오류를 반환합니다. N 플래그에 추가하여 대체 최대 반복 횟수를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="25484da34acf6c9118d5b07cc5f4e9eec701cdf4" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; the &lt;code&gt;!&lt;/code&gt; character can be used before a regular expression to negate it. This is, a string will be considered to have matched only if it does not match the rest of the expression.</source>
          <target state="translated">에서 &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; 를 &lt;code&gt;!&lt;/code&gt; 정규 표현식 앞에 문자를 사용하여 무효화 할 수 있습니다. 이는 문자열이 나머지 표현식과 일치하지 않는 경우에만 일치하는 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="5eccca75d5daae389d2af447f6be28fb2894ad9d" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;&lt;a href=&quot;../mod/prefork&quot;&gt;prefork&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../mod/mod_http2&quot;&gt;mod_http2&lt;/a&gt;&lt;/code&gt; will only process one request at at time per connection. But clients, such as browsers, will send many requests at the same time. If one of these takes long to process (or is a long polling one), the other requests will stall.</source>
          <target state="translated">에서 &lt;code&gt;&lt;a href=&quot;../mod/prefork&quot;&gt;prefork&lt;/a&gt;&lt;/code&gt; 의 , &lt;code&gt;&lt;a href=&quot;../mod/mod_http2&quot;&gt;mod_http2&lt;/a&gt;&lt;/code&gt; 는 전용 연결 당 한번에 하나 개의 요청을 처리합니다. 그러나 브라우저와 같은 클라이언트는 동시에 많은 요청을 보냅니다. 이 중 하나를 처리하는 데 시간이 오래 걸리거나 긴 폴링 인 경우 다른 요청이 중단됩니다.</target>
        </trans-unit>
        <trans-unit id="1a8b28fa5f3cc09154560994fad7eacca10a5f83" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;&lt;a href=&quot;core#virtualhost&quot;&gt;VirtualHost&lt;/a&gt;&lt;/code&gt; context, The &lt;em&gt;Pattern&lt;/em&gt; will initially be matched against the part of the URL after the hostname and port, and before the query string (e.g. &quot;/app1/index.html&quot;). This is the (%-decoded) URL-path.</source>
          <target state="translated">에서 &lt;code&gt;&lt;a href=&quot;core#virtualhost&quot;&gt;VirtualHost&lt;/a&gt;&lt;/code&gt; 컨텍스트의 &lt;em&gt;패턴은&lt;/em&gt; 처음에 호스트 이름과 포트 후 URL의 부분에 대해 일치되며, 쿼리 문자열 전에 (예 : &quot;/app1/index.html&quot;). 이것이 (% 디코딩 된) URL 경로입니다.</target>
        </trans-unit>
        <trans-unit id="5a0541f0147ebef7897569877b8648b8b2326175" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;&lt;a href=&quot;mod_cgi&quot;&gt;mod_cgi&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mod_cgid&quot;&gt;mod_cgid&lt;/a&gt;&lt;/code&gt;, the length of time to wait for any individual block of output from a CGI script.</source>
          <target state="translated">에서는 &lt;code&gt;&lt;a href=&quot;mod_cgi&quot;&gt;mod_cgi&lt;/a&gt;&lt;/code&gt; 를 하고 &lt;code&gt;&lt;a href=&quot;mod_cgid&quot;&gt;mod_cgid&lt;/a&gt;&lt;/code&gt; 가 , 시간의 길이는 CGI 스크립트 출력의 개별 블록 기다리는.</target>
        </trans-unit>
        <trans-unit id="6e7e1635e2542c3ec872a4ad432a25dbbab202e9" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;&lt;a href=&quot;mod_ext_filter&quot;&gt;mod_ext_filter&lt;/a&gt;&lt;/code&gt;, the length of time to wait for output from a filtering process.</source>
          <target state="translated">에서는 &lt;code&gt;&lt;a href=&quot;mod_ext_filter&quot;&gt;mod_ext_filter&lt;/a&gt;&lt;/code&gt; 의 시간 길이는 필터링 프로세스의 출력을 대기.</target>
        </trans-unit>
        <trans-unit id="d1acfc33ead488ca01a11e818a774c79cdbd5dc9" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;&lt;a href=&quot;mod_proxy&quot;&gt;mod_proxy&lt;/a&gt;&lt;/code&gt;, the default timeout value if &lt;code&gt;&lt;a href=&quot;mod_proxy#proxytimeout&quot;&gt;ProxyTimeout&lt;/a&gt;&lt;/code&gt; is not configured.</source>
          <target state="translated">에서 &lt;code&gt;&lt;a href=&quot;mod_proxy&quot;&gt;mod_proxy&lt;/a&gt;&lt;/code&gt; 를 , 경우 기본 시간 초과 값 &lt;code&gt;&lt;a href=&quot;mod_proxy#proxytimeout&quot;&gt;ProxyTimeout&lt;/a&gt;&lt;/code&gt; 가 구성되어 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="eca5ea1921722a1a67056643167ce1bbc4ebdb83" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;&lt;a href=&quot;mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt;, the NOT character ('&lt;code&gt;!&lt;/code&gt;') is also available as a possible pattern prefix. This enables you to negate a pattern; to say, for instance: ``&lt;em&gt;if the current URL does &lt;strong&gt;NOT&lt;/strong&gt; match this pattern&lt;/em&gt;''. This can be used for exceptional cases, where it is easier to match the negative pattern, or as a last default rule.</source>
          <target state="translated">에서 &lt;code&gt;&lt;a href=&quot;mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; 를 의 NOT 문자 ( ' &lt;code&gt;!&lt;/code&gt; ')도 가능한 패턴 접두어로 사용할 수 있습니다. 이를 통해 패턴을 무효화 할 수 있습니다. 예를 들어`` &lt;em&gt;현재 URL 이이 패턴과 일치 하지 &lt;strong&gt;않는&lt;/strong&gt; 경우&lt;/em&gt; ''입니다. 이것은 부정적인 패턴을 맞추기가 더 쉬운 예외적 인 경우 나 마지막 기본 규칙으로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="de3e9fb31cefa2a5531e6fc75bd29dfdb2cdfd4a" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;SSLRequire&lt;/code&gt;, the comparison operators &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, ... are completely equivalent to the operators &lt;code&gt;lt&lt;/code&gt;, &lt;code&gt;le&lt;/code&gt;, ... and work in a somewhat peculiar way that first compares the length of two strings and then the lexical order. On the other hand, &lt;a href=&quot;../expr&quot;&gt;ap_expr&lt;/a&gt; has two sets of comparison operators: The operators &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, ... do lexical string comparison, while the operators &lt;code&gt;-lt&lt;/code&gt;, &lt;code&gt;-le&lt;/code&gt;, ... do integer comparison. For the latter, there are also aliases without the leading dashes: &lt;code&gt;lt&lt;/code&gt;, &lt;code&gt;le&lt;/code&gt;, ...</source>
          <target state="translated">에서는 &lt;code&gt;SSLRequire&lt;/code&gt; , 비교 연산자 &lt;code&gt;&amp;lt;&lt;/code&gt; , &lt;code&gt;&amp;lt;=&lt;/code&gt; , ...이다 오퍼레이터 완전히 동등 &lt;code&gt;lt&lt;/code&gt; , &lt;code&gt;le&lt;/code&gt; 먼저 두 문자열의 길이와 그 어휘 순서를 비교하는 다소 독특한 방식 ... 작업. 반면에 &lt;a href=&quot;../expr&quot;&gt;ap_expr&lt;/a&gt; 에는 두 개의 비교 연산자 세트가 있습니다. 연산자 &lt;code&gt;&amp;lt;&lt;/code&gt; , &lt;code&gt;&amp;lt;=&lt;/code&gt; , ...는 어휘 문자열 비교를 수행하고 연산자 &lt;code&gt;-lt&lt;/code&gt; , &lt;code&gt;-le&lt;/code&gt; , ...은 정수 비교를 수행합니다. 후자의 경우 선행 대시가없는 별칭이 있습니다 : &lt;code&gt;lt&lt;/code&gt; , &lt;code&gt;le&lt;/code&gt; , ...</target>
        </trans-unit>
        <trans-unit id="ba34b0cea9de8bcf46a8c32e12904eb3386f0901" translate="yes" xml:space="preserve">
          <source>In &lt;var&gt;FAST&lt;/var&gt; mode, requests are run in-process with the selected uid/gid and privileges, so the overhead is negligible. This is suitable for benign situations, but is not secure against an attacker escalating privileges with an in-process module or script.</source>
          <target state="translated">에서 &lt;var&gt;FAST&lt;/var&gt; 모드 요청으로 프로세스 실행되는 오버 헤드는 무시할 수 있으므로, UID / GID 및 권한을 선택했습니다. 이는 양성 상황에 적합하지만 프로세스 내 모듈 또는 스크립트를 사용하여 권한을 상승시키는 공격자에 대해서는 안전하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="73b6aaaaee62e590694f5115b4728303accadcc7" translate="yes" xml:space="preserve">
          <source>In Apache 2.1 and later, &lt;code&gt;SSLEngine&lt;/code&gt; can be set to &lt;code&gt;optional&lt;/code&gt;. This enables support for &lt;a href=&quot;http://www.ietf.org/rfc/rfc2817.txt&quot;&gt;RFC 2817&lt;/a&gt;, Upgrading to TLS Within HTTP/1.1. At this time no web browsers support RFC 2817.</source>
          <target state="translated">Apache 2.1 이상에서 &lt;code&gt;SSLEngine&lt;/code&gt; 을 &lt;code&gt;optional&lt;/code&gt; 로 설정할 수 있습니다 . 이는 HTTP / 1.1 내에서 TLS로 업그레이드하여 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2817.txt&quot;&gt;RFC 2817을&lt;/a&gt; 지원합니다 . 현재 RFC 2817을 지원하는 웹 브라우저는 없습니다.</target>
        </trans-unit>
        <trans-unit id="fd7c7c204292b66440643f0c4f54a7de8ebb915a" translate="yes" xml:space="preserve">
          <source>In Apache HTTP Server 2.1 and later, mod_proxy supports pooled connections to a backend server. Connections created on demand can be retained in a pool for future use. Limits on the pool size and other settings can be coded on the &lt;code&gt;ProxyPass&lt;/code&gt; directive using &lt;code&gt;key=value&lt;/code&gt; parameters, described in the tables below.</source>
          <target state="translated">Apache HTTP Server 2.1 이상에서 mod_proxy는 백엔드 서버에 대한 풀링 된 연결을 지원합니다. 요청시 생성 된 연결은 나중에 사용하기 위해 풀에 보관할 수 있습니다. 풀 크기 및 기타 설정에 대한 제한은 아래 표에 설명 된 &lt;code&gt;key=value&lt;/code&gt; 매개 변수를 사용하여 &lt;code&gt;ProxyPass&lt;/code&gt; 지정 문 에서 코딩 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="40d0948002d293493888965897eb86db764d3c42" translate="yes" xml:space="preserve">
          <source>In Apache HTTP Server 2.4.16 and later, this directive may be omitted when the request is mapped via &lt;code&gt;&lt;a href=&quot;mod_alias#alias&quot;&gt;Alias&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;mod_userdir&quot;&gt;mod_userdir&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Apache HTTP Server 2.4.16 이상에서이 지정 문은 &lt;code&gt;&lt;a href=&quot;mod_alias#alias&quot;&gt;Alias&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;mod_userdir&quot;&gt;mod_userdir&lt;/a&gt;&lt;/code&gt; 을 통해 요청이 맵핑 될 때 생략 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="63a5475966b91ce96af1f67737b6f6a067a9b9ca" translate="yes" xml:space="preserve">
          <source>In a &lt;code&gt;&amp;lt;Directory&amp;gt;&lt;/code&gt; context, it is applicable only where SELECTIVE mode was set for the VirtualHost. Only FAST or SECURE can be set in this context (SELECTIVE would be meaningless).</source>
          <target state="translated">A의 &lt;code&gt;&amp;lt;Directory&amp;gt;&lt;/code&gt; 문맥, 선택적 모드가 가상 호스트 설정 한 경우에만 적용됩니다. 이 컨텍스트에서는 FAST 또는 SECURE 만 설정할 수 있습니다 (SELECTIVE는 의미가 없습니다).</target>
        </trans-unit>
        <trans-unit id="efefb2680323da6d465046e862d6ceae09ccc1d6" translate="yes" xml:space="preserve">
          <source>In a &lt;code&gt;.htaccess&lt;/code&gt; in your document directory, the leading slash is removed from the value supplied to &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt;, and in the &lt;code&gt;images&lt;/code&gt; subdirectory, &lt;code&gt;/images/&lt;/code&gt; is removed from it. Thus, your regular expression needs to omit that portion as well.</source>
          <target state="translated">A의 &lt;code&gt;.htaccess&lt;/code&gt; 문서 디렉토리에, 선두 슬래시에 공급되는 값에서 제거 &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; 과의 &lt;code&gt;images&lt;/code&gt; 하위 디렉토리, &lt;code&gt;/images/&lt;/code&gt; 그것에서 제거됩니다. 따라서 정규 표현식에서도 해당 부분을 생략해야합니다.</target>
        </trans-unit>
        <trans-unit id="144a35c98d4aaaae099e47af57d1a4c194f9c5f8" translate="yes" xml:space="preserve">
          <source>In a caching scenario one would want to know about the efficiency of the cache. A very simple method to find this out would be:</source>
          <target state="translated">캐싱 시나리오에서 캐시의 효율성에 대해 알고 싶어합니다. 이것을 알아내는 매우 간단한 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d92b41759dc342f326d3bbd659ef971af3fd9b9e" translate="yes" xml:space="preserve">
          <source>In a minimal configuration the following directive is all that is needed to enable the thundering herd lock in the default system temp directory.</source>
          <target state="translated">최소 구성에서 다음 지시문 만 있으면 기본 시스템 temp 디렉토리에서 썬더 링 무리 잠금을 활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="69125138ca48649d57390493bd18790464f079ad" translate="yes" xml:space="preserve">
          <source>In a reverse proxy situation where the Apache server acts as a server frontend for a backend origin server, revealing the contents of the session ID cookie to the backend could be a potential privacy violation. When set to on, the session ID cookie will be removed from the incoming HTTP headers.</source>
          <target state="translated">Apache 서버가 백엔드 오리진 서버의 서버 프론트 엔드로 작동하는 리버스 프록시 상황에서 세션 ID 쿠키의 컨텐츠를 백엔드에 공개하면 잠재적 인 개인 정보 보호 위반이 될 수 있습니다. on으로 설정하면 세션 ID 쿠키가 들어오는 HTTP 헤더에서 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="b5302145ff11aee97647a879a7e2511e216b96ff" translate="yes" xml:space="preserve">
          <source>In a reverse proxy situation where the Apache server acts as a server frontend for a backend origin server, revealing the contents of the session cookie to the backend could be a potential privacy violation. When set to on, the session cookie will be removed from the incoming HTTP headers.</source>
          <target state="translated">Apache 서버가 백엔드 오리진 서버의 서버 프론트 엔드로 작동하는 리버스 프록시 상황에서 세션 쿠키의 컨텐츠를 백엔드에 공개하면 잠재적 인 개인 정보 보호 위반이 될 수 있습니다. on으로 설정하면 세션 쿠키가 들어오는 HTTP 헤더에서 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="50fbaffc70b58ed46e336d81f69a6df922300d29" translate="yes" xml:space="preserve">
          <source>In a sub-URI, such as &lt;em&gt;http://example.com/blog/&lt;/em&gt; this &lt;em&gt;sub-URI&lt;/em&gt; has to be supplied as &lt;var&gt;local-url&lt;/var&gt;:</source>
          <target state="translated">&lt;em&gt;http://example.com/blog/&lt;/em&gt; 와 같은 &lt;em&gt;하위 URI&lt;/em&gt; 에서이 &lt;em&gt;하위 URI&lt;/em&gt; 는 &lt;var&gt;local-url&lt;/var&gt; 로 제공되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="4379cb695625a89e635fb355acdef94fcf0770ca" translate="yes" xml:space="preserve">
          <source>In a typical reverse proxy or gateway configuration, this option should be set to &lt;code&gt;Off&lt;/code&gt;.</source>
          <target state="translated">일반적인 리버스 프록시 또는 게이트웨이 구성에서이 옵션은 &lt;code&gt;Off&lt;/code&gt; 로 설정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="1790a32c23df18875ed46bd42bc7d11320d6c9be" translate="yes" xml:space="preserve">
          <source>In addition to all environment variables set within the Apache configuration and passed from the shell, CGI scripts and SSI pages are provided with a set of environment variables containing meta-information about the request as required by the &lt;a href=&quot;http://www.ietf.org/rfc/rfc3875&quot;&gt;CGI specification&lt;/a&gt;.</source>
          <target state="translated">Apache 구성 내에 설정되고 셸에서 전달 된 모든 환경 변수 외에도 CGI 스크립트 및 SSI 페이지에는 &lt;a href=&quot;http://www.ietf.org/rfc/rfc3875&quot;&gt;CGI 사양에&lt;/a&gt; 필요한 요청에 대한 메타 정보가 포함 된 환경 변수 세트가 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="2256a74f9b4c54b5d16149a99d519044f899b56e" translate="yes" xml:space="preserve">
          <source>In addition to being a &quot;basic&quot; web server, and providing static and dynamic content to end-users, Apache httpd (as well as most other web servers) can also act as a reverse proxy server, also-known-as a &quot;gateway&quot; server.</source>
          <target state="translated">&quot;기본&quot;웹 서버 일뿐 아니라 최종 사용자에게 정적 및 동적 컨텐츠를 제공하는 것 외에도 Apache httpd (및 대부분의 다른 웹 서버)는 &quot;게이트웨이&quot;라고도하는 리버스 프록시 서버로 작동 할 수 있습니다. &quot;서버.</target>
        </trans-unit>
        <trans-unit id="71b1b3cbd0d3cafba17aee90d0dad5b530bd9496" translate="yes" xml:space="preserve">
          <source>In addition to being able to &lt;code&gt;config&lt;/code&gt; the time format, you can also &lt;code&gt;config&lt;/code&gt; two other things.</source>
          <target state="translated">시간 형식 을 &lt;code&gt;config&lt;/code&gt; 할 수있을뿐만 아니라 다른 두 가지 를 &lt;code&gt;config&lt;/code&gt; 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1a15682183ca3b2f8a606a425eaf71d37a27c14d" translate="yes" xml:space="preserve">
          <source>In addition to file type and the file encoding, another important piece of information is what language a particular document is in, and in what character set the file should be displayed. For example, the document might be written in the Vietnamese alphabet, or in Cyrillic, and should be displayed as such. This information, also, is transmitted in HTTP headers.</source>
          <target state="translated">파일 유형 및 파일 인코딩 외에도 중요한 다른 정보는 특정 문서의 언어와 파일을 표시 할 문자 세트입니다. 예를 들어, 문서는 베트남어 알파벳 또는 키릴 문자로 작성 될 수 있으며 그대로 표시되어야합니다. 이 정보는 또한 HTTP 헤더로 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="c2d0e2c4b8b5614dd66728231d57cc0562b89229" translate="yes" xml:space="preserve">
          <source>In addition to merely setting values literally like that, you can use any other variable, including &lt;a href=&quot;../env&quot;&gt;environment variables&lt;/a&gt; or the variables discussed above (like &lt;code&gt;LAST_MODIFIED&lt;/code&gt;, for example) to give values to your variables. You will specify that something is a variable, rather than a literal string, by using the dollar sign ($) before the name of the variable.</source>
          <target state="translated">문자 그대로 값을 설정하는 것 외에도 &lt;a href=&quot;../env&quot;&gt;환경 변수&lt;/a&gt; 또는 위에서 논의한 변수 (예 &lt;code&gt;LAST_MODIFIED&lt;/code&gt; 등)를 포함한 다른 변수 를 사용하여 변수에 값을 제공 할 수 있습니다. 변수 이름 앞에 달러 기호 ($)를 사용하여 리터럴 문자열이 아닌 변수가되도록 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="88177058ca46393cfbd751e77e798dde1e0f67b6" translate="yes" xml:space="preserve">
          <source>In addition to plain text, the &lt;em&gt;Substitution&lt;/em&gt; string can include</source>
          <target state="translated">&lt;em&gt;대체&lt;/em&gt; 텍스트에는 &lt;em&gt;대체&lt;/em&gt; 텍스트 가 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3ed8083beafcb8d6bdc2ceaecb5e72a465ac202a" translate="yes" xml:space="preserve">
          <source>In addition to response status codes, you may also specify redirect status using their symbolic names: &lt;code&gt;temp&lt;/code&gt; (default), &lt;code&gt;permanent&lt;/code&gt;, or &lt;code&gt;seeother&lt;/code&gt;.</source>
          <target state="translated">응답 상태 코드 외에도 기호 이름 인 &lt;code&gt;temp&lt;/code&gt; (기본값), &lt;code&gt;permanent&lt;/code&gt; 또는 &lt;code&gt;seeother&lt;/code&gt; 를 사용하여 경로 재 지정 상태를 지정할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d9e744a421956e82e65c90cdce96f7e38a5aef25" translate="yes" xml:space="preserve">
          <source>In addition to spitting out content, Apache SSI gives you the option of setting variables, and using those variables in comparisons and conditionals.</source>
          <target state="translated">컨텐츠를 추출하는 것 외에도 Apache SSI는 변수를 설정하고 비교 및 ​​조건부에서 해당 변수를 사용하는 옵션을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="0752226cc3d489a74f9d8eed99d74e3127027a3f" translate="yes" xml:space="preserve">
          <source>In addition to string-valued functions, there are also list-valued functions which take one string as argument and return a wordlist, i.e. a list of strings. The wordlist can be used with the special &lt;code&gt;-in&lt;/code&gt; operator. Functions names are not case sensitive. Modules may register additional functions.</source>
          <target state="translated">문자열 값 함수 외에도 하나의 문자열을 인수로 사용하여 단어 목록, 즉 문자열 목록을 반환하는 목록 값 함수도 있습니다. 단어 목록은 특별한 사용할 수 있습니다 &lt;code&gt;-in&lt;/code&gt; 연산자. 함수 이름은 대소 문자를 구분하지 않습니다. 모듈은 추가 기능을 등록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3cb7033bbe4329609e6f8cddeb3fd022bb6c7b41" translate="yes" xml:space="preserve">
          <source>In addition to that, if the second parameter is given, a config variable is set to this value. The variable can be used in the configuration using the &lt;code&gt;${VAR}&lt;/code&gt; syntax. The variable is always globally defined and not limited to the scope of the surrounding config section.</source>
          <target state="translated">또한 두 번째 매개 변수가 제공되면 구성 변수가이 값으로 설정됩니다. 변수는 &lt;code&gt;${VAR}&lt;/code&gt; 구문을 사용하여 구성에 사용될 수 있습니다 . 변수는 항상 전역 적으로 정의되며 주변 구성 섹션의 범위로 제한되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b0c46e40c839fe86859f1dfe393d09f557f5e4c8" translate="yes" xml:space="preserve">
          <source>In addition to the &lt;code&gt;env=&lt;/code&gt; syntax, &lt;code&gt;&lt;a href=&quot;mod/mod_log_config#logformat&quot;&gt;LogFormat&lt;/a&gt;&lt;/code&gt; supports logging values conditional upon the HTTP response code:</source>
          <target state="translated">&lt;code&gt;env=&lt;/code&gt; 구문 외에도 &lt;code&gt;&lt;a href=&quot;mod/mod_log_config#logformat&quot;&gt;LogFormat&lt;/a&gt;&lt;/code&gt; 은 HTTP 응답 코드에 따라 조건부로 로깅 값을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="746377dcd52ffbe7dd1d785cfaf5a787c96ea4af" translate="yes" xml:space="preserve">
          <source>In addition to the configuration directives that control the behaviour of &lt;code&gt;&lt;a href=&quot;mod_proxy&quot;&gt;mod_proxy&lt;/a&gt;&lt;/code&gt;, an</source>
          <target state="translated">의 동작을 제어하는 설정 지시어에 추가 &lt;code&gt;&lt;a href=&quot;mod_proxy&quot;&gt;mod_proxy&lt;/a&gt;&lt;/code&gt; 를을 ,</target>
        </trans-unit>
        <trans-unit id="06ac83c631aa0bd7c0aa7035a62b5977d01f9662" translate="yes" xml:space="preserve">
          <source>In addition to the configuration directives that control the behaviour of &lt;code&gt;&lt;a href=&quot;mod_proxy&quot;&gt;mod_proxy&lt;/a&gt;&lt;/code&gt;, there are a number of</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;mod_proxy&quot;&gt;mod_proxy&lt;/a&gt;&lt;/code&gt; 의 동작을 제어하는 ​​구성 지시문 외에도 여러 가지가 있습니다.</target>
        </trans-unit>
        <trans-unit id="3a326911b1c9123bec51205f1ee7a264343dea2e" translate="yes" xml:space="preserve">
          <source>In addition to the information listed below, the following resources should be consulted:</source>
          <target state="translated">아래에 나열된 정보 외에도 다음 리소스를 참조해야합니다.</target>
        </trans-unit>
        <trans-unit id="414d78a2db1b0425c47101eac2d7cda849d98696" translate="yes" xml:space="preserve">
          <source>In addition to the main configuration files, certain directives may go in &lt;code&gt;.htaccess&lt;/code&gt; files located in the content directories. &lt;code&gt;.htaccess&lt;/code&gt; files are primarily for people who do not have access to the main server configuration file(s). You can read more about &lt;code&gt;.htaccess&lt;/code&gt; files in the &lt;a href=&quot;howto/htaccess&quot;&gt;&lt;code&gt;.htaccess&lt;/code&gt; howto&lt;/a&gt;.</source>
          <target state="translated">기본 구성 파일 외에도 특정 지시문은 컨텐츠 디렉토리에있는 &lt;code&gt;.htaccess&lt;/code&gt; 파일 로 이동할 수 있습니다 . &lt;code&gt;.htaccess&lt;/code&gt; 파일은 주로 주 서버 구성 파일에 액세스 할 수없는 사용자를위한 것입니다. &lt;a href=&quot;howto/htaccess&quot;&gt; &lt;code&gt;.htaccess&lt;/code&gt; &lt;/a&gt; howto 에서 &lt;code&gt;.htaccess&lt;/code&gt; 파일에 대한 자세한 내용을 읽을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="12b23341717f965472310fd82e5b7694748924e7" translate="yes" xml:space="preserve">
          <source>In addition to the nonce, the &lt;code&gt;balancer-manager&lt;/code&gt; page should be protected via an ACL.</source>
          <target state="translated">nonce 외에도 &lt;code&gt;balancer-manager&lt;/code&gt; 페이지는 ACL을 통해 보호되어야합니다.</target>
        </trans-unit>
        <trans-unit id="52ec5f91ac0f6313bb627a1082a01e3e4e5383d1" translate="yes" xml:space="preserve">
          <source>In addition to the set of active child processes, there may be additional child processes which are terminating, but where at least one server thread is still handling an existing client connection. Up to &lt;code&gt;&lt;a href=&quot;mpm_common#maxrequestworkers&quot;&gt;MaxRequestWorkers&lt;/a&gt;&lt;/code&gt; terminating processes may be present, though the actual number can be expected to be much smaller. This behavior can be avoided by disabling the termination of individual child processes, which is achieved using the following:</source>
          <target state="translated">활성 하위 프로세스 세트 외에도 종료되는 추가 하위 프로세스가있을 수 있지만 하나 이상의 서버 스레드가 여전히 기존 클라이언트 연결을 처리하고 있습니다. 실제 프로세스는 훨씬 더 작을 것으로 예상되지만 &lt;code&gt;&lt;a href=&quot;mpm_common#maxrequestworkers&quot;&gt;MaxRequestWorkers&lt;/a&gt;&lt;/code&gt; 까지 프로세스가 종료 될 수 있습니다. 이 문제는 다음을 사용하여 개별 하위 프로세스 종료를 비활성화하여 방지 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fad1dc77a94c9aeb666fd23e36a71fdb967b3ede" translate="yes" xml:space="preserve">
          <source>In addition to the standard authorization function of checking group membership, this module can also provide server-side user session management via database-backed login/logout capabilities. Specifically, it can update a user's session status in the database whenever the user visits designated URLs (subject of course to users supplying the necessary credentials).</source>
          <target state="translated">이 멤버쉽을 확인하는 표준 권한 부여 기능 외에도이 모듈은 데이터베이스 기반 로그인 / 로그 아웃 기능을 통해 서버 측 사용자 세션 관리를 제공 할 수 있습니다. 특히, 사용자가 지정된 URL을 방문 할 때마다 (필수 자격 증명을 제공하는 사용자의 경우) 데이터베이스에서 사용자의 세션 상태를 업데이트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="730cf2400cc720e8c96ed2e41736e12b5aef2b70" translate="yes" xml:space="preserve">
          <source>In addition to the tips on the &lt;a href=&quot;../dns-caveats#tips&quot;&gt;DNS Issues&lt;/a&gt; page, here are some further tips:</source>
          <target state="translated">&lt;a href=&quot;../dns-caveats#tips&quot;&gt;DNS 문제&lt;/a&gt; 페이지 의 팁 외에도 몇 가지 추가 팁이 있습니다.</target>
        </trans-unit>
        <trans-unit id="d70621f2a9c40ebd42f23eb0f00b7e33037da869" translate="yes" xml:space="preserve">
          <source>In addition to the variables in the standard CGI environment, these are available for the &lt;code&gt;echo&lt;/code&gt; command, for &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;elif&lt;/code&gt;, and to any program invoked by the document.</source>
          <target state="translated">표준 CGI 환경의 변수 외에도 &lt;code&gt;echo&lt;/code&gt; 명령, &lt;code&gt;if&lt;/code&gt; 및 &lt;code&gt;elif&lt;/code&gt; 및 문서에서 호출 한 모든 프로그램에 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="12a8dbb0670f3c544beefc67560b3d5bcacea1fc" translate="yes" xml:space="preserve">
          <source>In addition to these modules, there are also &lt;code&gt;&lt;a href=&quot;../mod/mod_authn_core&quot;&gt;mod_authn_core&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../mod/mod_authz_core&quot;&gt;mod_authz_core&lt;/a&gt;&lt;/code&gt;. These modules implement core directives that are core to all auth modules.</source>
          <target state="translated">이 모듈 외에도 &lt;code&gt;&lt;a href=&quot;../mod/mod_authn_core&quot;&gt;mod_authn_core&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;../mod/mod_authz_core&quot;&gt;mod_authz_core&lt;/a&gt;&lt;/code&gt; 도 있습니다. 이 모듈은 모든 인증 모듈의 핵심 인 핵심 지시문을 구현합니다.</target>
        </trans-unit>
        <trans-unit id="762fc2ef87c6de53246de828d8191825ddd56726" translate="yes" xml:space="preserve">
          <source>In addition, &lt;code&gt;&lt;a href=&quot;mod_mime&quot;&gt;mod_mime&lt;/a&gt;&lt;/code&gt; may define the &lt;a href=&quot;../handler&quot;&gt;handler&lt;/a&gt; and &lt;a href=&quot;../filter&quot;&gt;filters&lt;/a&gt; that originate and process content. The directives &lt;code&gt;&lt;a href=&quot;#addhandler&quot;&gt;AddHandler&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#addoutputfilter&quot;&gt;AddOutputFilter&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#addinputfilter&quot;&gt;AddInputFilter&lt;/a&gt;&lt;/code&gt; control the modules or scripts that serve the document. The &lt;code&gt;&lt;a href=&quot;#multiviewsmatch&quot;&gt;MultiviewsMatch&lt;/a&gt;&lt;/code&gt; directive allows &lt;code&gt;&lt;a href=&quot;mod_negotiation&quot;&gt;mod_negotiation&lt;/a&gt;&lt;/code&gt; to consider these file extensions to be included when testing Multiviews matches.</source>
          <target state="translated">또한 &lt;code&gt;&lt;a href=&quot;mod_mime&quot;&gt;mod_mime&lt;/a&gt;&lt;/code&gt; 는 컨텐츠를 시작하고 처리 하는 &lt;a href=&quot;../handler&quot;&gt;핸들러&lt;/a&gt; 와 &lt;a href=&quot;../filter&quot;&gt;필터&lt;/a&gt; 를 정의 할 수 있습니다. &lt;code&gt;&lt;a href=&quot;#addhandler&quot;&gt;AddHandler&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#addoutputfilter&quot;&gt;AddOutputFilter&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#addinputfilter&quot;&gt;AddInputFilter&lt;/a&gt;&lt;/code&gt; 지시문 은 문서를 제공하는 모듈 또는 스크립트를 제어합니다. &lt;code&gt;&lt;a href=&quot;#multiviewsmatch&quot;&gt;MultiviewsMatch&lt;/a&gt;&lt;/code&gt; 지시문을 사용하면 &lt;code&gt;&lt;a href=&quot;mod_negotiation&quot;&gt;mod_negotiation&lt;/a&gt;&lt;/code&gt; 이 멀티 뷰 일치를 테스트 할 때 이러한 파일 확장자가 포함되는 것으로 간주 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7caa0861de9c26c106a48f54da3bcf02d12fb571" translate="yes" xml:space="preserve">
          <source>In addition, a location for the DAV lock database must be specified in the global section of your &lt;code&gt;httpd.conf&lt;/code&gt; file using the &lt;code&gt;&lt;a href=&quot;mod_dav_fs#davlockdb&quot;&gt;DavLockDB&lt;/a&gt;&lt;/code&gt; directive:</source>
          <target state="translated">또한 DAV 잠금 데이터베이스의 위치 는 &lt;code&gt;&lt;a href=&quot;mod_dav_fs#davlockdb&quot;&gt;DavLockDB&lt;/a&gt;&lt;/code&gt; 지시문을 사용 하여 &lt;code&gt;httpd.conf&lt;/code&gt; 파일 의 전역 섹션에 지정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="8c075fe98352235e9375f7d35f3a63f68a62a042" translate="yes" xml:space="preserve">
          <source>In addition, extended features are provided by other modules. Caching is provided by &lt;code&gt;&lt;a href=&quot;mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; and related modules. The ability to contact remote servers using the SSL/TLS protocol is provided by the &lt;code&gt;SSLProxy*&lt;/code&gt; directives of &lt;code&gt;&lt;a href=&quot;mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt;. These additional modules will need to be loaded and configured to take advantage of these features.</source>
          <target state="translated">또한 다른 모듈에서 확장 기능을 제공합니다. 캐싱은 &lt;code&gt;&lt;a href=&quot;mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; 및 관련 모듈에 의해 제공됩니다 . SSL / TLS 프로토콜을 사용하여 원격 서버에 접속하는 기능 은 &lt;code&gt;&lt;a href=&quot;mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; 의 &lt;code&gt;SSLProxy*&lt;/code&gt; 지시문에 의해 제공됩니다 . 이러한 기능을 활용하려면 이러한 추가 모듈을로드하고 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="45c8a39e70e73eda11cd84da5179abeb87ebc2c8" translate="yes" xml:space="preserve">
          <source>In addition, if you wish to have caching enabled, consult the documentation from &lt;code&gt;&lt;a href=&quot;mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">또한 캐싱을 사용하려면 &lt;code&gt;&lt;a href=&quot;mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; 의 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="bd3bdc77702c03c792ce02afb00b37e2edb88379" translate="yes" xml:space="preserve">
          <source>In addition, it is sometimes necessary to provide the &lt;code&gt;&lt;a href=&quot;programs/configure&quot;&gt;configure&lt;/a&gt;&lt;/code&gt; script with extra information about the location of your compiler, libraries, or header files. This is done by passing either environment variables or command line options to &lt;code&gt;&lt;a href=&quot;programs/configure&quot;&gt;configure&lt;/a&gt;&lt;/code&gt;. For more information, see the &lt;code&gt;&lt;a href=&quot;programs/configure&quot;&gt;configure&lt;/a&gt;&lt;/code&gt; manual page. Or invoke &lt;code&gt;&lt;a href=&quot;programs/configure&quot;&gt;configure&lt;/a&gt;&lt;/code&gt; using the &lt;code&gt;--help&lt;/code&gt; option.</source>
          <target state="translated">또한 컴파일러, 라이브러리 또는 헤더 파일의 위치에 대한 추가 정보를 &lt;code&gt;&lt;a href=&quot;programs/configure&quot;&gt;configure&lt;/a&gt;&lt;/code&gt; 스크립트 에 제공해야하는 경우가 있습니다. 환경 변수 나 명령 행 옵션을 전달하여 &lt;code&gt;&lt;a href=&quot;programs/configure&quot;&gt;configure&lt;/a&gt;&lt;/code&gt; 됩니다. 자세한 내용은 &lt;code&gt;&lt;a href=&quot;programs/configure&quot;&gt;configure&lt;/a&gt;&lt;/code&gt; manual 페이지를 참조하십시오. 또는 &lt;code&gt;--help&lt;/code&gt; 옵션을 사용하여 &lt;code&gt;&lt;a href=&quot;programs/configure&quot;&gt;configure&lt;/a&gt;&lt;/code&gt; 를 호출 하십시오 .</target>
        </trans-unit>
        <trans-unit id="62d9ee3e3c7a45e857d9433f4bb05c25b22ba5a8" translate="yes" xml:space="preserve">
          <source>In addition, log files may contain information supplied directly by the client, without escaping. Therefore, it is possible for malicious clients to insert control-characters in the log files, so care must be taken in dealing with raw logs.</source>
          <target state="translated">또한 로그 파일에는 이스케이프 처리없이 클라이언트가 직접 제공 한 정보가 포함될 수 있습니다. 따라서 악의적 인 클라이언트가 로그 파일에 제어 문자를 삽입 할 수 있으므로 원시 로그를 처리 할 때주의를 기울여야합니다.</target>
        </trans-unit>
        <trans-unit id="8787a16f204030029b180f934606df038d8dd09e" translate="yes" xml:space="preserve">
          <source>In addition, on some platforms, like Win32, and on unix when using &lt;a href=&quot;../suexec&quot;&gt;suexec&lt;/a&gt;, you cannot pass arguments to a command in an &lt;code&gt;exec&lt;/code&gt; directive, or otherwise include spaces in the command. Thus, while the following will work under a non-suexec configuration on unix, it will not produce the desired result under Win32, or when running suexec:</source>
          <target state="translated">또한 Win32와 같은 일부 플랫폼 및 &lt;a href=&quot;../suexec&quot;&gt;suexec&lt;/a&gt; 사용시 유닉스 에서는 &lt;code&gt;exec&lt;/code&gt; 지시문 의 명령에 인수를 전달하거나 명령에 공백을 포함 시킬 수 없습니다 . 따라서 다음은 유닉스의 비 suexec 구성에서 작동하지만 Win32 또는 suexec를 실행할 때 원하는 결과를 생성하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="73340fdad957cfbf97b861b0dedcb9eec3e42317" translate="yes" xml:space="preserve">
          <source>In addition, the administrator may optionally specify the &lt;strong&gt;precise point within the filter chain&lt;/strong&gt; where caching is to take place by adding the &lt;strong&gt;CACHE&lt;/strong&gt; filter to the output filter chain.</source>
          <target state="translated">또한 관리자는 선택적으로 &lt;strong&gt;CACHE&lt;/strong&gt; 필터를 출력 필터 체인 에 추가하여 캐싱을 수행 &lt;strong&gt;할 필터 체인 내의 정확한 지점을&lt;/strong&gt; 지정할 수 있습니다 .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eda3cdf3fe5b5fea6621a5d3b4f2935a1ee95489" translate="yes" xml:space="preserve">
          <source>In all cases, once the shared module is compiled, you must use a &lt;code&gt;&lt;a href=&quot;mod/mod_so#loadmodule&quot;&gt;LoadModule&lt;/a&gt;&lt;/code&gt; directive in &lt;code&gt;httpd.conf&lt;/code&gt; to tell Apache httpd to activate the module.</source>
          <target state="translated">모든 경우에 공유 모듈이 컴파일되면 &lt;code&gt;httpd.conf&lt;/code&gt; 에서 &lt;code&gt;&lt;a href=&quot;mod/mod_so#loadmodule&quot;&gt;LoadModule&lt;/a&gt;&lt;/code&gt; 지시문을 사용하여 Apache httpd에 모듈을 활성화하도록 지시 해야합니다 .</target>
        </trans-unit>
        <trans-unit id="c4558371caf3fed5f9a02531fa25b3ce9ff90dc3" translate="yes" xml:space="preserve">
          <source>In all cases, the user's ID will be passed as a single string parameter when the SQL query is executed. It may be referenced within the query statement using a &lt;code&gt;%s&lt;/code&gt; format specifier.</source>
          <target state="translated">모든 경우에 사용자의 ID는 SQL 쿼리가 실행될 때 단일 문자열 매개 변수로 전달됩니다. &lt;code&gt;%s&lt;/code&gt; 형식 지정자를 사용하여 쿼리 문 내에서 참조 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f3c8c99afdd1ebdd3bb3b6d70e030e237dd072e3" translate="yes" xml:space="preserve">
          <source>In all releases 2.4.5 through 2.4.20, setting &lt;code&gt;SSLProxyCheckPeerName off&lt;/code&gt; was sufficient to enable this behavior (as the &lt;code&gt;SSLProxyCheckPeerCN&lt;/code&gt; default was &lt;code&gt;on&lt;/code&gt;.) In these releases, both directives must be set to &lt;code&gt;off&lt;/code&gt; to completely avoid remote server certificate name validation. Many users reported this to be very confusing.</source>
          <target state="translated">모든 릴리스 &lt;code&gt;SSLProxyCheckPeerName off&lt;/code&gt; 로 설정 하면이 동작을 수행하기에 충분합니다 ( &lt;code&gt;SSLProxyCheckPeerCN&lt;/code&gt; 기본값이 &lt;code&gt;on&lt;/code&gt; 이므로 ).이 릴리스에서 원격 서버 인증서 이름 유효성 검증을 완전히 피 하려면 두 지시문을 모두 &lt;code&gt;off&lt;/code&gt; 로 설정해야합니다 . 많은 사용자들이이를 매우 혼란스럽게보고했습니다.</target>
        </trans-unit>
        <trans-unit id="e54ca31d828adade36f797fafd7689c311d571c3" translate="yes" xml:space="preserve">
          <source>In almost every case, there's no reason to change that value.</source>
          <target state="translated">거의 모든 경우에 해당 값을 변경할 이유가 없습니다.</target>
        </trans-unit>
        <trans-unit id="2072696c6d4bfd538c9a5962d695a57da7bd26de" translate="yes" xml:space="preserve">
          <source>In both of these cases, the proper &lt;code&gt;&lt;a href=&quot;../mod/core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt; should be set in the configuration file.</source>
          <target state="translated">이 두 경우 모두 구성 파일에서 적절한 &lt;code&gt;&lt;a href=&quot;../mod/core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt; 를 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="34c9e6c862046deab37984264be57151e8c57e0a" translate="yes" xml:space="preserve">
          <source>In case of Let's Encrypt, their current &lt;a href=&quot;https://letsencrypt.org/documents/LE-SA-v1.2-November-15-2017.pdf&quot;&gt;Terms of Service are here&lt;/a&gt;. Those terms might (and probably will) change over time. So, the certificate renewal might require you to update this agreement URL.</source>
          <target state="translated">Let 's Encrypt의 경우 현재 &lt;a href=&quot;https://letsencrypt.org/documents/LE-SA-v1.2-November-15-2017.pdf&quot;&gt;서비스 약관이 여기에 있습니다&lt;/a&gt; . 이러한 용어는 시간이 지남에 따라 변경 될 수 있습니다. 따라서 인증서를 갱신하려면이 계약 URL을 업데이트해야합니다.</target>
        </trans-unit>
        <trans-unit id="7c4c16c291800d89b84d0e825a907201721f1f5b" translate="yes" xml:space="preserve">
          <source>In case of core dumps please include a Backtrace</source>
          <target state="translated">코어 덤프의 경우 Backtrace를 포함하십시오</target>
        </trans-unit>
        <trans-unit id="c27797f6dfb2b1d4d28e3b72e7fc9a3df05e137c" translate="yes" xml:space="preserve">
          <source>In cases where the Apache server forms the frontend for backend origin servers, it is possible to have the session cookies removed from the incoming HTTP headers using the &lt;code&gt;&lt;a href=&quot;mod_session_cookie#sessioncookieremove&quot;&gt;SessionCookieRemove&lt;/a&gt;&lt;/code&gt; directive. This keeps the contents of the session cookies from becoming accessible from the backend server.</source>
          <target state="translated">Apache 서버가 백엔드 오리진 서버의 프론트 엔드를 형성하는 경우 &lt;code&gt;&lt;a href=&quot;mod_session_cookie#sessioncookieremove&quot;&gt;SessionCookieRemove&lt;/a&gt;&lt;/code&gt; 지시문을 사용하여 수신 HTTP 헤더에서 세션 쿠키를 제거 할 수 있습니다 . 이렇게하면 백엔드 서버에서 세션 쿠키의 내용에 액세스 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="091a444a2fd4b2dc0601a1b9e131e1da6296d5b2" translate="yes" xml:space="preserve">
          <source>In conjunction with &lt;code&gt;Require dbd-login&lt;/code&gt; or &lt;code&gt;Require dbd-logout&lt;/code&gt;, this provides the option to redirect the client back to the Referring page (the URL in the &lt;code&gt;Referer&lt;/code&gt; HTTP request header, if present). When there is no &lt;code&gt;Referer&lt;/code&gt; header, &lt;code&gt;AuthzDBDLoginToReferer On&lt;/code&gt; will be ignored.</source>
          <target state="translated">와 함께 &lt;code&gt;Require dbd-login&lt;/code&gt; 하거나 &lt;code&gt;Require dbd-logout&lt;/code&gt; ,이합니다 (의 URL 의뢰 한 페이지에 클라이언트 다시 리디렉션 할 수있는 옵션이 제공 &lt;code&gt;Referer&lt;/code&gt; 있는 경우, HTTP 요청 헤더를). &lt;code&gt;Referer&lt;/code&gt; 헤더 가 없으면 &lt;code&gt;AuthzDBDLoginToReferer On&lt;/code&gt; 이 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="e00a8dc4bc5e40a835337ada732985caa78e07d0" translate="yes" xml:space="preserve">
          <source>In contrast to setting &lt;code&gt;Link&lt;/code&gt; response headers via &lt;code&gt;&lt;a href=&quot;mod_headers&quot;&gt;mod_headers&lt;/a&gt;&lt;/code&gt;, this directive will only take effect on HTTP/2 connections.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;mod_headers&quot;&gt;mod_headers&lt;/a&gt;&lt;/code&gt; 를 통해 &lt;code&gt;Link&lt;/code&gt; 응답 헤더를 설정하는 것과 달리이 지시문은 HTTP / 2 연결에만 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="3e58074228e139925c880a677e170c2b74a43579" translate="yes" xml:space="preserve">
          <source>In contrast to the &lt;code&gt;host&lt;/code&gt; provider, this provider does not rely on reverse DNS lookups: it simply queries the DNS for the host name and allows a client if its IP matches. As a consequence, it will only work with host names, not domain names. However, as the reverse DNS is not used, it will work with clients which use a dynamic DNS service.</source>
          <target state="translated">받는 반면 &lt;code&gt;host&lt;/code&gt; 제공이 제공자는 역 DNS 조회에 의존하지 않습니다 단순히 호스트 이름에 대한 DNS를 쿼리하고 해당 IP와 일치하는 경우 클라이언트를 할 수 있습니다. 결과적으로 도메인 이름이 아닌 호스트 이름으로 만 작동합니다. 그러나 역방향 DNS는 사용되지 않으므로 동적 DNS 서비스를 사용하는 클라이언트와 작동합니다.</target>
        </trans-unit>
        <trans-unit id="3f6cd3c60ab9ad7539e1e9e79b475037fb500831" translate="yes" xml:space="preserve">
          <source>In contrast, the PATH_INFO that is appended to the URI before each rule reflects only the value of PATH_INFO before this round of mod_rewrite processing. As a consequence, if large portions of the URI are matched and copied into a substitution in multiple &lt;code&gt;RewriteRule&lt;/code&gt; directives, without regard for which parts of the URI came from the current PATH_INFO, the final URI may have multiple copies of PATH_INFO appended to it.</source>
          <target state="translated">반대로 각 규칙 전에 URI에 추가되는 PATH_INFO는이 라운드의 mod_rewrite 처리 이전의 PATH_INFO 값만 반영합니다. 결과적으로 URI의 많은 부분이 여러 &lt;code&gt;RewriteRule&lt;/code&gt; 지시문 에서 일치하고 대체로 복사 되면 URI의 어느 부분이 현재 PATH_INFO에서 왔는지에 관계없이 최종 URI에 여러 개의 PATH_INFO 사본이 추가 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a3d30b4141f0267015ae6cb56bc946aa2c248a91" translate="yes" xml:space="preserve">
          <source>In deciding what file to serve for a given request, httpd's default behavior is to take the URL-Path for the request (the part of the URL following the hostname and port) and add it to the end of the &lt;code&gt;&lt;a href=&quot;mod/core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt; specified in your configuration files. Therefore, the files and directories underneath the &lt;code&gt;&lt;a href=&quot;mod/core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt; make up the basic document tree which will be visible from the web.</source>
          <target state="translated">지정된 요청에 제공 할 파일을 결정할 때 httpd의 기본 동작은 요청에 대한 URL 경로 (호스트 이름 및 포트 다음에 오는 URL 부분)를 가져와 구성 파일에 지정된 &lt;code&gt;&lt;a href=&quot;mod/core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt; 끝에 추가하는 것입니다. . 따라서 &lt;code&gt;&lt;a href=&quot;mod/core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt; 아래의 파일과 디렉토리 는 웹에서 볼 수있는 기본 문서 트리를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="b630d29aa93b02c4acfd00b229780cda308a7743" translate="yes" xml:space="preserve">
          <source>In deployments where connections can be considered reliable, this timer can be disabled by setting it to 0.</source>
          <target state="translated">연결이 안정적인 것으로 간주 될 수있는 배포에서는이 타이머를 0으로 설정하여 비활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="abb5d5e385d6976d59560292932121107598ee45" translate="yes" xml:space="preserve">
          <source>In deployments where servers are reached locally or over reliable connections only, the value might be decreased with 0 disabling any warmup phase altogether.</source>
          <target state="translated">서버가 로컬에 연결되거나 안정적인 연결을 통해서만 배포되는 배포에서는 예열 단계를 모두 사용하지 않도록 설정하면 값이 감소 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c039cce227493be9af1597590f4d029092e16777" translate="yes" xml:space="preserve">
          <source>In each case, we add a &lt;code&gt;&lt;a href=&quot;../mod/mod_proxy#proxypassreverse&quot;&gt;ProxyPassReverse&lt;/a&gt;&lt;/code&gt; directive to ensure that any redirects issued by the backend are correctly passed on to the client.</source>
          <target state="translated">각각의 경우에 백엔드가 발행 한 모든 리디렉션이 클라이언트에 올바르게 전달되도록 &lt;code&gt;&lt;a href=&quot;../mod/mod_proxy#proxypassreverse&quot;&gt;ProxyPassReverse&lt;/a&gt;&lt;/code&gt; 지시문을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="6f60054e191d45da84dee11196aee6b0336865a0" translate="yes" xml:space="preserve">
          <source>In each of these cases, mod_rewrite rewrites the &lt;code&gt;REQUEST_URI&lt;/code&gt; either to a new URL, or to a filename.</source>
          <target state="translated">이러한 각 경우에 mod_rewrite는 &lt;code&gt;REQUEST_URI&lt;/code&gt; 를 새 URL 또는 파일 이름으로 다시 씁니다 .</target>
        </trans-unit>
        <trans-unit id="6ad48c7d42ff39f7a52b20a3be9b2cd523b71dd7" translate="yes" xml:space="preserve">
          <source>In earlier versions of httpd, this effect typically required &lt;code&gt;&lt;a href=&quot;mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt;, and the use of the &lt;code&gt;-f&lt;/code&gt; and &lt;code&gt;-d&lt;/code&gt; tests for file and directory existence. This now requires only one line of configuration.</source>
          <target state="translated">이전 버전의 httpd에서이 효과는 일반적으로 &lt;code&gt;&lt;a href=&quot;mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; 및 파일 및 디렉토리 존재에 대해 &lt;code&gt;-f&lt;/code&gt; 및 &lt;code&gt;-d&lt;/code&gt; 테스트를 사용해야했습니다 . 이제는 한 줄의 구성 만 필요합니다.</target>
        </trans-unit>
        <trans-unit id="00b49972a209cd1a8310d903afdc620bd0954e0f" translate="yes" xml:space="preserve">
          <source>In fact the module can be used to upgrade to other protocols, you can set the &lt;code&gt;upgrade&lt;/code&gt; parameter in the &lt;code&gt;&lt;a href=&quot;mod_proxy#proxypass&quot;&gt;ProxyPass&lt;/a&gt;&lt;/code&gt; directive to allow the module to accept other protocol. NONE means you bypass the check for the header but still upgrade to WebSocket. ANY means that &lt;code&gt;Upgrade&lt;/code&gt; will read in the request headers and use in the response &lt;code&gt;Upgrade&lt;/code&gt;</source>
          <target state="translated">실제로 모듈을 사용하여 다른 프로토콜로 업그레이드 할 수 있습니다 . &lt;code&gt;&lt;a href=&quot;mod_proxy#proxypass&quot;&gt;ProxyPass&lt;/a&gt;&lt;/code&gt; 지정 문 에서 &lt;code&gt;upgrade&lt;/code&gt; 매개 변수를 설정 하여 모듈이 다른 프로토콜을 승인 할 수 있습니다. NONE은 헤더 확인을 생략하지만 여전히 WebSocket으로 업그레이드 함을 의미합니다. ANY는 &lt;code&gt;Upgrade&lt;/code&gt; 가 요청 헤더를 읽고 응답 &lt;code&gt;Upgrade&lt;/code&gt; 사용함을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="25b945f7818b3e3531664312a4b24710815b4f27" translate="yes" xml:space="preserve">
          <source>In general no, at least not unless you provide more details about the code location where Apache dumped core. What is usually always required in order to help you is a backtrace (see next question). Without this information it is mostly impossible to find the problem and help you in fixing it.</source>
          <target state="translated">아파치가 코어를 덤프 한 코드 위치에 대한 자세한 정보를 제공하지 않는 한 일반적으로 아니오. 당신을 돕기 위해 일반적으로 항상 필요한 것은 역 추적입니다 (다음 질문 참조). 이 정보가 없으면 문제를 찾아 해결할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="2baea62b8cb3752d298b9d081e0e7762be54450e" translate="yes" xml:space="preserve">
          <source>In general stat or forever is good for production, and stat or never for development.</source>
          <target state="translated">일반적으로 stat 또는 forever는 프로덕션에 적합하고 개발에 stat 또는 절대로 적합하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="697be94801903173f6c8047e2d77d2aed822d496" translate="yes" xml:space="preserve">
          <source>In general, &lt;code&gt;.htaccess&lt;/code&gt; files use the same syntax as the &lt;a href=&quot;../configuring#syntax&quot;&gt;main configuration files&lt;/a&gt;. What you can put in these files is determined by the &lt;code&gt;&lt;a href=&quot;../mod/core#allowoverride&quot;&gt;AllowOverride&lt;/a&gt;&lt;/code&gt; directive. This directive specifies, in categories, what directives will be honored if they are found in a &lt;code&gt;.htaccess&lt;/code&gt; file. If a directive is permitted in a &lt;code&gt;.htaccess&lt;/code&gt; file, the documentation for that directive will contain an Override section, specifying what value must be in &lt;code&gt;&lt;a href=&quot;../mod/core#allowoverride&quot;&gt;AllowOverride&lt;/a&gt;&lt;/code&gt; in order for that directive to be permitted.</source>
          <target state="translated">일반적으로 &lt;code&gt;.htaccess&lt;/code&gt; 파일은 &lt;a href=&quot;../configuring#syntax&quot;&gt;기본 구성 파일&lt;/a&gt; 과 동일한 구문을 사용합니다 . 이 파일에 넣을 수있는 것은 &lt;code&gt;&lt;a href=&quot;../mod/core#allowoverride&quot;&gt;AllowOverride&lt;/a&gt;&lt;/code&gt; 지시어에 의해 결정됩니다 . 이 지시문은 &lt;code&gt;.htaccess&lt;/code&gt; 파일 에서 발견 될 경우 어떤 지시문을 범주로 지정 합니다. 지시문이 &lt;code&gt;.htaccess&lt;/code&gt; 파일 에서 허용되는 경우 해당 지시문 에 대한 문서에는 해당 지시문을 허용하기 위해 &lt;code&gt;&lt;a href=&quot;../mod/core#allowoverride&quot;&gt;AllowOverride&lt;/a&gt;&lt;/code&gt; 에 있어야하는 값을 지정하는 Override 섹션이 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="45257c02acdfe1ed2671e10ba4940c09bd058d28" translate="yes" xml:space="preserve">
          <source>In general, &lt;code&gt;httpd&lt;/code&gt; should not be invoked directly, but rather should be invoked via &lt;code&gt;&lt;a href=&quot;apachectl&quot;&gt;apachectl&lt;/a&gt;&lt;/code&gt; on Unix-based systems or &lt;a href=&quot;../platform/windows#winsvc&quot;&gt;as a service on Windows NT, 2000 and XP&lt;/a&gt; and &lt;a href=&quot;../platform/windows#wincons&quot;&gt;as a console application on Windows 9x and ME&lt;/a&gt;.</source>
          <target state="translated">일반적으로 &lt;code&gt;httpd&lt;/code&gt; 는 직접 호출하지 말고 Unix 기반 시스템의 &lt;code&gt;&lt;a href=&quot;apachectl&quot;&gt;apachectl&lt;/a&gt;&lt;/code&gt; 을 통해 또는 &lt;a href=&quot;../platform/windows#winsvc&quot;&gt;Windows NT, 2000 및 XP의 서비스&lt;/a&gt; 및 &lt;a href=&quot;../platform/windows#wincons&quot;&gt;Windows 9x 및 ME의 콘솔 응용 프로그램으로&lt;/a&gt; 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="2e1041061b6ff96149c069d97dc60c9b283319f9" translate="yes" xml:space="preserve">
          <source>In general, access restriction directives apply to all access methods (&lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;PUT&lt;/code&gt;, &lt;code&gt;POST&lt;/code&gt;, etc). This is the desired behavior in most cases. However, it is possible to restrict some methods, while leaving other methods unrestricted, by enclosing the directives in a &lt;code&gt;&lt;a href=&quot;core#limit&quot;&gt;&amp;lt;Limit&amp;gt;&lt;/a&gt;&lt;/code&gt; section.</source>
          <target state="translated">일반적으로 액세스 제한 지시문은 모든 액세스 방법 ( &lt;code&gt;GET&lt;/code&gt; , &lt;code&gt;PUT&lt;/code&gt; , &lt;code&gt;POST&lt;/code&gt; 등)에 적용됩니다. 대부분의 경우 바람직한 동작입니다. 그러나 &lt;code&gt;&lt;a href=&quot;core#limit&quot;&gt;&amp;lt;Limit&amp;gt;&lt;/a&gt;&lt;/code&gt; 섹션에 지시문을 묶어 다른 메소드를 제한하지 않고 일부 메소드를 제한 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2e66b2e555f57d87adaa9acc014d311307906125" translate="yes" xml:space="preserve">
          <source>In general, you should only use &lt;code&gt;.htaccess&lt;/code&gt; files when you don't have access to the main server configuration file. There is, for example, a common misconception that user authentication should always be done in &lt;code&gt;.htaccess&lt;/code&gt; files, and, in more recent years, another misconception that &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; directives must go in &lt;code&gt;.htaccess&lt;/code&gt; files. This is simply not the case. You can put user authentication configurations in the main server configuration, and this is, in fact, the preferred way to do things. Likewise, &lt;code&gt;mod_rewrite&lt;/code&gt; directives work better, in many respects, in the main server configuration.</source>
          <target state="translated">일반적으로 주 서버 구성 파일에 액세스 할 수없는 경우 &lt;code&gt;.htaccess&lt;/code&gt; 파일 만 사용해야 합니다. 예를 들어, 사용자 인증은 항상 &lt;code&gt;.htaccess&lt;/code&gt; 파일 에서 수행되어야한다는 일반적인 오해가 있으며, 최근에는 &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; 지시문이 &lt;code&gt;.htaccess&lt;/code&gt; 파일에 있어야 한다는 또 다른 오해가 있습니다. 이것은 사실이 아닙니다. 기본 서버 구성에 사용자 인증 구성을 넣을 수 있으며, 이것이 실제로 선호하는 방법입니다. 마찬가지로 &lt;code&gt;mod_rewrite&lt;/code&gt; 지시문은 여러 측면에서 기본 서버 구성에서 더 잘 작동합니다.</target>
        </trans-unit>
        <trans-unit id="d03cf0fc100b9f700ed211b54f6b37611b00bd75" translate="yes" xml:space="preserve">
          <source>In high traffic environments where keeping track of a session on a server is too resource intensive or inconvenient, the option exists to store the contents of the session within a cookie on the client browser instead.</source>
          <target state="translated">서버에서 세션을 추적하는 것이 리소스를 많이 사용하거나 불편한 트래픽이 많은 환경에서는 세션의 내용을 클라이언트 브라우저의 쿠키 내에 저장하는 옵션이 있습니다.</target>
        </trans-unit>
        <trans-unit id="8a6719d1795c99a2a3bdd7f3da872fc78523b803" translate="yes" xml:space="preserve">
          <source>In httpd 2.4.32 and later, an optional &lt;em&gt;_RAW&lt;/em&gt; suffix may be added to &lt;em&gt;x509&lt;/em&gt; in a DN component, to suppress conversion of the attribute value to UTF-8. This must be placed after the index suffix (if any). For example, &lt;code&gt;SSL_SERVER_S_DN_OU_RAW&lt;/code&gt; or &lt;code&gt;SSL_SERVER_S_DN_OU_0_RAW&lt;/code&gt; could be used.</source>
          <target state="translated">httpd 2.4.32 이상 에서 속성 값이 UTF-8로 변환되지 않도록 DN 구성 요소의 &lt;em&gt;x509&lt;/em&gt; 에 선택적 &lt;em&gt;_RAW&lt;/em&gt; 접미 부를 추가 할 수 있습니다 . 색인 접미사 (있는 경우) 뒤에 배치해야합니다. 예를 들어 &lt;code&gt;SSL_SERVER_S_DN_OU_RAW&lt;/code&gt; 또는 &lt;code&gt;SSL_SERVER_S_DN_OU_0_RAW&lt;/code&gt; 를 사용할 수 있습니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="33d09c19ef7d2b62797742c9ddba1def96167fc7" translate="yes" xml:space="preserve">
          <source>In its default configuration, Apache does not send the last modified date or content length HTTP headers on SSI pages, because these values are difficult to calculate for dynamic content. This can prevent your document from being cached, and result in slower perceived client performance. There are two ways to solve this:</source>
          <target state="translated">기본 구성에서 Apache는 SSI 페이지에서 마지막 수정 날짜 또는 컨텐츠 길이 HTTP 헤더를 보내지 않습니다. 이러한 값은 동적 컨텐츠에 대해 계산하기 어렵 기 때문입니다. 이로 인해 문서가 캐시되는 것을 방지하고 클라이언트 성능이 느려질 수 있습니다. 이 문제를 해결하는 두 가지 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="09711eb52e967a7ae7963f891033e002895aaedd" translate="yes" xml:space="preserve">
          <source>In its one parameter form, &lt;code&gt;Define&lt;/code&gt; is equivalent to passing the &lt;code&gt;-D&lt;/code&gt; argument to &lt;code&gt;&lt;a href=&quot;../programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt;. It can be used to toggle the use of &lt;code&gt;&lt;a href=&quot;#ifdefine&quot;&gt;&amp;lt;IfDefine&amp;gt;&lt;/a&gt;&lt;/code&gt; sections without needing to alter &lt;code&gt;-D&lt;/code&gt; arguments in any startup scripts.</source>
          <target state="translated">하나의 매개 변수 형식에서 &lt;code&gt;Define&lt;/code&gt; 은 &lt;code&gt;-D&lt;/code&gt; 인수를 &lt;code&gt;&lt;a href=&quot;../programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; 에 전달하는 것과 같습니다 . 시작 스크립트에서 &lt;code&gt;-D&lt;/code&gt; 인수 를 변경할 필요없이 &lt;code&gt;&lt;a href=&quot;#ifdefine&quot;&gt;&amp;lt;IfDefine&amp;gt;&lt;/a&gt;&lt;/code&gt; 섹션 사용을 토글하는 데 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e0ef9989c73e0cf62cfbd0a3239c161e88fb7792" translate="yes" xml:space="preserve">
          <source>In many cases, &lt;a href=&quot;name-based&quot;&gt;name-based virtual hosts&lt;/a&gt; are more convenient, because they allow many virtual hosts to share a single address/port. See &lt;a href=&quot;name-based#namevip&quot;&gt;Name-based vs. IP-based Virtual Hosts&lt;/a&gt; to help you decide.</source>
          <target state="translated">대부분의 경우 &lt;a href=&quot;name-based&quot;&gt;이름 기반 가상 호스트&lt;/a&gt; 는 많은 가상 호스트가 단일 주소 / 포트를 공유 할 수 있기 때문에 더 편리합니다. 결정에 도움이되도록 &lt;a href=&quot;name-based#namevip&quot;&gt;이름 기반 대 IP 기반 가상 호스트&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="021ee1575b413140effa382cf6666141d79beeb2" translate="yes" xml:space="preserve">
          <source>In many situations Apache httpd must construct a &lt;em&gt;self-referential&lt;/em&gt; URL -- that is, a URL that refers back to the same server. With &lt;code&gt;UseCanonicalName On&lt;/code&gt; Apache httpd will use the hostname and port specified in the &lt;code&gt;&lt;a href=&quot;#servername&quot;&gt;ServerName&lt;/a&gt;&lt;/code&gt; directive to construct the canonical name for the server. This name is used in all self-referential URLs, and for the values of &lt;code&gt;SERVER_NAME&lt;/code&gt; and &lt;code&gt;SERVER_PORT&lt;/code&gt; in CGIs.</source>
          <target state="translated">많은 상황에서 Apache httpd는 &lt;em&gt;자체 참조&lt;/em&gt; URL, 즉 동일한 서버를 다시 참조하는 URL을 구성해야합니다. 함께 &lt;code&gt;UseCanonicalName On&lt;/code&gt; 아파치 웹 서버에 지정된 호스트 이름과 포트를 사용하는 &lt;code&gt;&lt;a href=&quot;#servername&quot;&gt;ServerName&lt;/a&gt;&lt;/code&gt; 서버의 정식 이름을 구성하는 지침을. 이 이름은 모든 자체 참조 URL과 CGI 의 &lt;code&gt;SERVER_NAME&lt;/code&gt; 및 &lt;code&gt;SERVER_PORT&lt;/code&gt; 값에 사용 됩니다.</target>
        </trans-unit>
        <trans-unit id="d99a1dbd5650335a2ecc8cf81593f079fd3971f2" translate="yes" xml:space="preserve">
          <source>In many situations Apache httpd must construct a &lt;em&gt;self-referential&lt;/em&gt; URL -- that is, a URL that refers back to the same server. With &lt;code&gt;UseCanonicalPhysicalPort On&lt;/code&gt;, Apache httpd will, when constructing the canonical port for the server to honor the &lt;code&gt;&lt;a href=&quot;#usecanonicalname&quot;&gt;UseCanonicalName&lt;/a&gt;&lt;/code&gt; directive, provide the actual physical port number being used by this request as a potential port. With &lt;code&gt;UseCanonicalPhysicalPort Off&lt;/code&gt;, Apache httpd will not ever use the actual physical port number, instead relying on all configured information to construct a valid port number.</source>
          <target state="translated">많은 상황에서 Apache httpd는 &lt;em&gt;자체 참조&lt;/em&gt; URL, 즉 동일한 서버를 다시 참조하는 URL을 구성해야합니다. &lt;code&gt;UseCanonicalPhysicalPort On&lt;/code&gt; 을 사용하면 Apache httpd는 &lt;code&gt;&lt;a href=&quot;#usecanonicalname&quot;&gt;UseCanonicalName&lt;/a&gt;&lt;/code&gt; 지시문을 준수 하기 위해 서버의 표준 포트를 구성 할 때이 요청에서 사용중인 실제 물리적 포트 번호를 잠재적 포트로 제공합니다. &lt;code&gt;UseCanonicalPhysicalPort Off&lt;/code&gt; 를 사용하면 Apache httpd는 실제 실제 포트 번호를 사용하지 않고 구성된 모든 정보를 사용하여 유효한 포트 번호를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="d4884f4726e3896d0b3d8c930d06cedae1bec9cb" translate="yes" xml:space="preserve">
          <source>In many situations, it is more effective to specify an &lt;var&gt;&lt;a href=&quot;#ipaddr&quot;&gt;IPAddr&lt;/a&gt;&lt;/var&gt; in place of a &lt;var&gt;Hostname&lt;/var&gt; since a DNS lookup can be avoided. Name resolution in Apache httpd can take a remarkable deal of time when the connection to the name server uses a slow PPP link.</source>
          <target state="translated">많은 경우 DNS 조회를 피할 수 있으므로 &lt;var&gt;Hostname&lt;/var&gt; 대신 &lt;var&gt;&lt;a href=&quot;#ipaddr&quot;&gt;IPAddr&lt;/a&gt;&lt;/var&gt; 을 지정하는 것이 더 효과적 입니다. Apache httpd의 이름 확인은 이름 서버 연결이 느린 PPP 링크를 사용하는 데 상당한 시간이 걸릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cc01cd136923aaa99909cd029fa931891435b24b" translate="yes" xml:space="preserve">
          <source>In most cases, for a complete authentication and authorization configuration, &lt;code&gt;Require&lt;/code&gt; must be accompanied by &lt;code&gt;&lt;a href=&quot;mod_authn_core#authname&quot;&gt;AuthName&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod_authn_core#authtype&quot;&gt;AuthType&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mod_auth_basic#authbasicprovider&quot;&gt;AuthBasicProvider&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;mod_auth_digest#authdigestprovider&quot;&gt;AuthDigestProvider&lt;/a&gt;&lt;/code&gt; directives, and directives such as &lt;code&gt;&lt;a href=&quot;mod_authn_file#authuserfile&quot;&gt;AuthUserFile&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mod_authz_groupfile#authgroupfile&quot;&gt;AuthGroupFile&lt;/a&gt;&lt;/code&gt; (to define users and groups) in order to work correctly. Example:</source>
          <target state="translated">대부분의 경우, 전체 인증 및 권한 부여 구성, &lt;code&gt;Require&lt;/code&gt; 동반해야합니다 &lt;code&gt;&lt;a href=&quot;mod_authn_core#authname&quot;&gt;AuthName&lt;/a&gt;&lt;/code&gt; 지정 , &lt;code&gt;&lt;a href=&quot;mod_authn_core#authtype&quot;&gt;AuthType&lt;/a&gt;&lt;/code&gt; 이 와 &lt;code&gt;&lt;a href=&quot;mod_auth_basic#authbasicprovider&quot;&gt;AuthBasicProvider&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;mod_auth_digest#authdigestprovider&quot;&gt;AuthDigestProvider&lt;/a&gt;&lt;/code&gt; 의 지시와 같은 지시 &lt;code&gt;&lt;a href=&quot;mod_authn_file#authuserfile&quot;&gt;AuthUserFile&lt;/a&gt;&lt;/code&gt; 과 및 &lt;code&gt;&lt;a href=&quot;mod_authz_groupfile#authgroupfile&quot;&gt;AuthGroupFile&lt;/a&gt;&lt;/code&gt; 을 제대로 작동하려면 (사용자 및 그룹을 정의합니다). 예:</target>
        </trans-unit>
        <trans-unit id="0bae8c4b2a496b979902faa85351654667f666fd" translate="yes" xml:space="preserve">
          <source>In older versions of the Apache server, &lt;code&gt;isapi-isa&lt;/code&gt; was the proper handler name, rather than &lt;code&gt;isapi-handler&lt;/code&gt;. As of 2.3 development versions of the Apache server, &lt;code&gt;isapi-isa&lt;/code&gt; is no longer valid. You will need to change your configuration to use &lt;code&gt;isapi-handler&lt;/code&gt; instead.</source>
          <target state="translated">이전 버전의 Apache 서버에서 &lt;code&gt;isapi-isa&lt;/code&gt; 는 &lt;code&gt;isapi-handler&lt;/code&gt; 가 아닌 올바른 핸들러 이름이었습니다 . 2.3 개발 버전의 Apache 서버에서 &lt;code&gt;isapi-isa&lt;/code&gt; 는 더 이상 유효하지 않습니다. &lt;code&gt;isapi-handler&lt;/code&gt; 를 대신 사용하도록 구성을 변경해야합니다 .</target>
        </trans-unit>
        <trans-unit id="6eda3448b6c380f197d9305938311284df8bbf4e" translate="yes" xml:space="preserve">
          <source>In order for &lt;code&gt;&lt;a href=&quot;mod_dav&quot;&gt;mod_dav&lt;/a&gt;&lt;/code&gt; to manage files, it must be able to write to the directories and files under its control using the &lt;code&gt;&lt;a href=&quot;mod_unixd#user&quot;&gt;User&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mod_unixd#group&quot;&gt;Group&lt;/a&gt;&lt;/code&gt; under which Apache is running. New files created will also be owned by this &lt;code&gt;&lt;a href=&quot;mod_unixd#user&quot;&gt;User&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mod_unixd#group&quot;&gt;Group&lt;/a&gt;&lt;/code&gt;. For this reason, it is important to control access to this account. The DAV repository is considered private to Apache; modifying files outside of Apache (for example using FTP or filesystem-level tools) should not be allowed.</source>
          <target state="translated">위해서는 &lt;code&gt;&lt;a href=&quot;mod_dav&quot;&gt;mod_dav&lt;/a&gt;&lt;/code&gt; 의 파일을 관리하기 위해서는 해당 디렉토리와 파일에 쓸 수 있어야합니다 &lt;code&gt;&lt;a href=&quot;mod_unixd#user&quot;&gt;User&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;mod_unixd#group&quot;&gt;Group&lt;/a&gt;&lt;/code&gt; 아파치가 실행되고있는합니다. 작성된 새 파일도이 &lt;code&gt;&lt;a href=&quot;mod_unixd#user&quot;&gt;User&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;mod_unixd#group&quot;&gt;Group&lt;/a&gt;&lt;/code&gt; 이 소유합니다 . 따라서이 계정에 대한 액세스를 제어하는 ​​것이 중요합니다. DAV 저장소는 Apache 전용으로 간주됩니다. 아파치 외부의 파일 수정 (예 : FTP 또는 파일 시스템 레벨 도구 사용)은 허용되지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="df8d00b49cd514e5113ca05b63db0092f34e3cd7" translate="yes" xml:space="preserve">
          <source>In order for sessions to be useful, it must be possible to share the contents of a session with external applications, and it must be possible for an external application to write a session of its own.</source>
          <target state="translated">세션을 유용하게 사용하려면 세션의 내용을 외부 응용 프로그램과 공유 할 수 있어야하며 외부 응용 프로그램이 자체 세션을 작성할 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="8959d8c8ce0108363442113188cea70cb50fde0a" translate="yes" xml:space="preserve">
          <source>In order for the server to function properly, it absolutely needs to have two pieces of information about each virtual host: the &lt;code&gt;&lt;a href=&quot;mod/core#servername&quot;&gt;ServerName&lt;/a&gt;&lt;/code&gt; and at least one IP address that the server will bind and respond to. The above example does not include the IP address, so httpd must use DNS to find the address of &lt;code&gt;www.example.dom&lt;/code&gt;. If for some reason DNS is not available at the time your server is parsing its config file, then this virtual host &lt;strong&gt;will not be configured&lt;/strong&gt;. It won't be able to respond to any hits to this virtual host.</source>
          <target state="translated">서버가 제대로 작동하려면 각 가상 호스트에 대한 두 가지 정보, 즉 &lt;code&gt;&lt;a href=&quot;mod/core#servername&quot;&gt;ServerName&lt;/a&gt;&lt;/code&gt; 과 서버가 바인딩하고 응답 할 하나 이상의 IP 주소가 있어야합니다. 위의 예에는 IP 주소가 포함되어 있지 않으므로 httpd는 DNS를 사용하여 &lt;code&gt;www.example.dom&lt;/code&gt; 의 주소를 찾아야합니다 . 어떤 이유로 서버가 구성 파일을 구문 분석 할 때 DNS를 사용할 수없는 경우이 가상 호스트 &lt;strong&gt;가 구성되지 않습니다&lt;/strong&gt; . 이 가상 호스트에 대한 적중에 응답 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="99a5b6e209654188584fed0cfecd6ee077cef40a" translate="yes" xml:space="preserve">
          <source>In order to aid in debugging, the &lt;code&gt;&lt;a href=&quot;mod/mod_cgi#scriptlog&quot;&gt;ScriptLog&lt;/a&gt;&lt;/code&gt; directive allows you to record the input to and output from CGI scripts. This should only be used in testing - not for live servers. More information is available in the &lt;a href=&quot;mod/mod_cgi&quot;&gt;mod_cgi&lt;/a&gt; documentation.</source>
          <target state="translated">디버깅을 돕기 위해 &lt;code&gt;&lt;a href=&quot;mod/mod_cgi#scriptlog&quot;&gt;ScriptLog&lt;/a&gt;&lt;/code&gt; 지시문을 사용하면 CGI 스크립트의 입력 및 출력을 기록 할 수 있습니다. 이는 라이브 서버가 아닌 테스트에만 사용해야합니다. 자세한 내용은 &lt;a href=&quot;mod/mod_cgi&quot;&gt;mod_cgi&lt;/a&gt; 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="fde015a0edf7e0bb183372308f55e8ff606478a5" translate="yes" xml:space="preserve">
          <source>In order to allow both browsing the directories on an FTP server and downloading files, Apache looks at the request URL. If it looks like a directory, or contains wildcard characters (&quot;*?[{~&quot;), then it guesses that a listing is wanted instead of a download.</source>
          <target state="translated">FTP 서버에서 디렉토리를 탐색하고 파일을 다운로드 할 수 있도록 Apache는 요청 URL을 확인합니다. 디렉토리처럼 보이거나 와일드 카드 문자 ( &quot;*? [{~&quot;)를 포함하는 경우 다운로드 대신 목록을 원한다고 추측합니다.</target>
        </trans-unit>
        <trans-unit id="68c7e2aa789d3de1bf13da87cc78db1c073ffc20" translate="yes" xml:space="preserve">
          <source>In order to avoid cross-site scripting issues, you should &lt;em&gt;always&lt;/em&gt; encode user supplied data.</source>
          <target state="translated">사이트 간 스크립팅 문제를 피하려면 &lt;em&gt;항상&lt;/em&gt; 사용자 제공 데이터를 인코딩 해야 합니다.</target>
        </trans-unit>
        <trans-unit id="920b465fa4b2d001ab582722210356eff8b5476c" translate="yes" xml:space="preserve">
          <source>In order to connect to a server, the client will first have to resolve the servername to an IP address - the location on the Internet where the server resides. Thus, in order for your web server to be reachable, it is necessary that the servername be in DNS.</source>
          <target state="translated">서버에 연결하려면 클라이언트는 먼저 서버 이름을 IP 주소 (서버가있는 인터넷상의 위치)로 확인해야합니다. 따라서 웹 서버에 연결하려면 서버 이름이 DNS에 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="a71631f2787d20340427b5c42a6442f160b6516f" translate="yes" xml:space="preserve">
          <source>In order to effectively manage a web server, it is necessary to get feedback about the activity and performance of the server as well as any problems that may be occurring. The Apache HTTP Server provides very comprehensive and flexible logging capabilities. This document describes how to configure its logging capabilities, and how to understand what the logs contain.</source>
          <target state="translated">웹 서버를 효과적으로 관리하려면 발생할 수있는 문제는 물론 서버의 활동 및 성능에 대한 피드백을 받아야합니다. Apache HTTP Server는 매우 포괄적이고 유연한 로깅 기능을 제공합니다. 이 문서는 로깅 기능을 구성하는 방법과 로그에 포함 된 내용을 이해하는 방법에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="1f9ba6f7034a518fb9fdd31dbf26518fc96bfbcb" translate="yes" xml:space="preserve">
          <source>In order to get the functionality of (forward) proxying HTTPS sites, you need &lt;code&gt;&lt;a href=&quot;mod_proxy_connect&quot;&gt;mod_proxy_connect&lt;/a&gt;&lt;/code&gt; enabled in the server.</source>
          <target state="translated">프록시 HTTPS 사이트의 (전달) 기능을 사용하려면 서버에서 &lt;code&gt;&lt;a href=&quot;mod_proxy_connect&quot;&gt;mod_proxy_connect&lt;/a&gt;&lt;/code&gt; 를 활성화 해야 합니다.</target>
        </trans-unit>
        <trans-unit id="5c31b76688f37ba31bf8b02efa8cd141a016af83" translate="yes" xml:space="preserve">
          <source>In order to get the functionality of proxying HTTP or FTP sites, you need also &lt;code&gt;&lt;a href=&quot;mod_proxy_http&quot;&gt;mod_proxy_http&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;mod_proxy_ftp&quot;&gt;mod_proxy_ftp&lt;/a&gt;&lt;/code&gt; (or both) present in the server.</source>
          <target state="translated">HTTP 또는 FTP 사이트 프록시 기능을 사용 하려면 서버에있는 &lt;code&gt;&lt;a href=&quot;mod_proxy_http&quot;&gt;mod_proxy_http&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;mod_proxy_ftp&quot;&gt;mod_proxy_ftp&lt;/a&gt;&lt;/code&gt; (또는 둘 다) 도 필요 합니다.</target>
        </trans-unit>
        <trans-unit id="ad996e64a84829d9edba66cb0c59e49e7f91e980" translate="yes" xml:space="preserve">
          <source>In order to get your CGI programs to work properly, you'll need to have Apache configured to permit CGI execution. There are several ways to do this.</source>
          <target state="translated">CGI 프로그램이 제대로 작동하려면 CGI 실행을 허용하도록 Apache를 구성해야합니다. 이를 수행하는 몇 가지 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="405efbfef10475f0060b251d4913870ad17c2dcc" translate="yes" xml:space="preserve">
          <source>In order to give each user their own cgi-bin directory, you can use a &lt;code&gt;&lt;a href=&quot;../mod/core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; directive to make a particular subdirectory of a user's home directory cgi-enabled.</source>
          <target state="translated">각 사용자에게 고유 한 cgi-bin 디렉토리를 제공하기 위해 &lt;code&gt;&lt;a href=&quot;../mod/core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; 지시문을 사용하여 사용자 홈 디렉토리의 특정 하위 디렉토리를 cgi 가능하게 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b7155072499eaf421cc7e15352acfd02c4fc608c" translate="yes" xml:space="preserve">
          <source>In order to have two overlapping URLs one has to consider the order in which certain sections or directives are evaluated. For &lt;code&gt;&lt;a href=&quot;mod/core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; this would be:</source>
          <target state="translated">두 개의 겹치는 URL을 가지려면 특정 섹션이나 지시문이 평가되는 순서를 고려해야합니다. 를 들어 &lt;code&gt;&lt;a href=&quot;mod/core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; 이 될 것이다 :</target>
        </trans-unit>
        <trans-unit id="dc43f34c97daaf25c08b57caf0d33e49ee47b551" translate="yes" xml:space="preserve">
          <source>In order to identify each request, a unique request ID is assigned. This forensic ID can be cross logged in the normal transfer log using the &lt;code&gt;%{forensic-id}n&lt;/code&gt; format string. If you're using &lt;code&gt;&lt;a href=&quot;mod_unique_id&quot;&gt;mod_unique_id&lt;/a&gt;&lt;/code&gt;, its generated ID will be used.</source>
          <target state="translated">각 요청을 식별하기 위해 고유 한 요청 ID가 할당됩니다. 이 포렌식 ID는 &lt;code&gt;%{forensic-id}n&lt;/code&gt; 형식 문자열을 사용하여 일반 전송 로그에 교차 로깅 될 수 있습니다 . &lt;code&gt;&lt;a href=&quot;mod_unique_id&quot;&gt;mod_unique_id&lt;/a&gt;&lt;/code&gt; 를 사용하는 경우 생성 된 ID가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e5d258800d6528d9303221698013103d654592a6" translate="yes" xml:space="preserve">
          <source>In order to implement the handler features, an addition has been made to the &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/developer/API.html&quot;&gt;Apache API&lt;/a&gt; that you may wish to make use of. Specifically, a new record has been added to the &lt;code&gt;request_rec&lt;/code&gt; structure:</source>
          <target state="translated">핸들러 기능을 구현 하기 위해 사용하려는 &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/developer/API.html&quot;&gt;Apache API&lt;/a&gt; 가 추가되었습니다 . 특히 새로운 레코드가 &lt;code&gt;request_rec&lt;/code&gt; 구조 에 추가되었습니다 :</target>
        </trans-unit>
        <trans-unit id="8f6f90f1fc95b8281d85a20118df47c39fbd6037" translate="yes" xml:space="preserve">
          <source>In order to implement virtual hosts, Apache needs to know the local socket address used to accept the connection. It is possible to eliminate this call in many situations (such as when there are no virtual hosts, or when &lt;code&gt;&lt;a href=&quot;../mod/mpm_common#listen&quot;&gt;Listen&lt;/a&gt;&lt;/code&gt; directives are used which do not have wildcard addresses). But no effort has yet been made to do these optimizations.</source>
          <target state="translated">가상 호스트를 구현하려면 Apache가 연결을 수락하는 데 사용되는 로컬 소켓 주소를 알아야합니다. 많은 상황에서 (가상 호스트 가 없거나 와일드 카드 주소가없는 &lt;code&gt;&lt;a href=&quot;../mod/mpm_common#listen&quot;&gt;Listen&lt;/a&gt;&lt;/code&gt; 지시문이 사용되는 경우)이 호출을 제거 할 수 있습니다 . 그러나 이러한 최적화를위한 노력은 아직 이루어지지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="42116ec57a79e99e93910f8cc0e34c3252f137e6" translate="yes" xml:space="preserve">
          <source>In order to make &lt;code&gt;&lt;a href=&quot;mod_dav_lock&quot;&gt;mod_dav_lock&lt;/a&gt;&lt;/code&gt; functional, you just have to specify the location of the lock database using the &lt;code&gt;&lt;a href=&quot;#davgenericlockdb&quot;&gt;DavGenericLockDB&lt;/a&gt;&lt;/code&gt; directive described below.</source>
          <target state="translated">하기 위해서는 &lt;code&gt;&lt;a href=&quot;mod_dav_lock&quot;&gt;mod_dav_lock&lt;/a&gt;&lt;/code&gt; 기능, 당신은 단지 사용하여 잠금 데이터베이스의 위치를 지정해야 &lt;code&gt;&lt;a href=&quot;#davgenericlockdb&quot;&gt;DavGenericLockDB&lt;/a&gt;&lt;/code&gt; 의 지시 아래에 설명합니다.</target>
        </trans-unit>
        <trans-unit id="cc6a6505f0442410da8b7c1e9cc74642f8dad06a" translate="yes" xml:space="preserve">
          <source>In order to negotiate a resource, the server needs to be given information about each of the variants. This is done in one of two ways:</source>
          <target state="translated">리소스를 협상하려면 서버에 각 변형에 대한 정보가 제공되어야합니다. 이는 두 가지 방법 중 하나로 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="d848212dfd971006c2548b65d9f89645c3f2ed06" translate="yes" xml:space="preserve">
          <source>In order to parse non-HTML content (stylesheets and scripts) embedded in HTML documents, &lt;code&gt;&lt;a href=&quot;mod_proxy_html&quot;&gt;mod_proxy_html&lt;/a&gt;&lt;/code&gt; has to read the entire script or stylesheet into a buffer. This buffer will be expanded as necessary to hold the largest script or stylesheet in a page, in increments of &lt;var&gt;bytes&lt;/var&gt; as set by this directive.</source>
          <target state="translated">HTML 문서에 포함 된 HTML이 아닌 내용 (스타일 시트 및 스크립트)을 구문 분석하려면 &lt;code&gt;&lt;a href=&quot;mod_proxy_html&quot;&gt;mod_proxy_html&lt;/a&gt;&lt;/code&gt; 이 전체 스크립트 또는 스타일 시트를 버퍼로 읽어야합니다. 이 버퍼는 페이지에서 가장 큰 스크립트 또는 스타일 시트를 이 지시문에 의해 설정된 &lt;var&gt;bytes&lt;/var&gt; 로 보유하기 위해 필요에 따라 확장됩니다 .</target>
        </trans-unit>
        <trans-unit id="2758e000978706c9ae6bb10f35caec735dca4f3f" translate="yes" xml:space="preserve">
          <source>In order to retrieve the pointer to the locking provider function, you have to use the &lt;code&gt;ap_lookup_provider&lt;/code&gt; API with the arguments &lt;code&gt;dav-lock&lt;/code&gt;, &lt;code&gt;generic&lt;/code&gt;, and &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">잠금 제공자 기능에 대한 포인터를 검색하려면 인수 &lt;code&gt;dav-lock&lt;/code&gt; , &lt;code&gt;generic&lt;/code&gt; 및 &lt;code&gt;0&lt;/code&gt; 과 함께 &lt;code&gt;ap_lookup_provider&lt;/code&gt; API 를 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="4d6e10281641907b294d4b9863a25f9ef777e934" translate="yes" xml:space="preserve">
          <source>In order to reverse the meaning, all operators can be preceded by an exclamation mark (&lt;code&gt;!&lt;/code&gt;):</source>
          <target state="translated">의미를 반대로 바꾸기 위해 모든 연산자 앞에 느낌표 ( &lt;code&gt;!&lt;/code&gt; )를 붙일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7842656373114bfa9edd2eabb98289abebbe6fc6" translate="yes" xml:space="preserve">
          <source>In order to stop or restart the Apache HTTP Server, you must send a signal to the running &lt;code&gt;&lt;a href=&quot;programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; processes. There are two ways to send the signals. First, you can use the unix &lt;code&gt;kill&lt;/code&gt; command to directly send signals to the processes. You will notice many &lt;code&gt;&lt;a href=&quot;programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; executables running on your system, but you should not send signals to any of them except the parent, whose pid is in the &lt;code&gt;&lt;a href=&quot;mod/mpm_common#pidfile&quot;&gt;PidFile&lt;/a&gt;&lt;/code&gt;. That is to say you shouldn't ever need to send signals to any process except the parent. There are four signals that you can send the parent: &lt;code&gt;&lt;a href=&quot;#term&quot;&gt;TERM&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#graceful&quot;&gt;USR1&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#hup&quot;&gt;HUP&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#gracefulstop&quot;&gt;WINCH&lt;/a&gt;&lt;/code&gt;, which will be described in a moment.</source>
          <target state="translated">Apache HTTP Server를 중지하거나 다시 시작하려면 실행중인 &lt;code&gt;&lt;a href=&quot;programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; 프로세스에 신호를 보내야 합니다. 신호를 보내는 방법에는 두 가지가 있습니다. 먼저, unix &lt;code&gt;kill&lt;/code&gt; 명령을 사용하여 신호를 프로세스에 직접 보낼 수 있습니다. 시스템에서 많은 &lt;code&gt;&lt;a href=&quot;programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; 실행 파일이 실행되는 것을 볼 수 있지만, pid가 &lt;code&gt;&lt;a href=&quot;mod/mpm_common#pidfile&quot;&gt;PidFile&lt;/a&gt;&lt;/code&gt; 에있는 부모를 제외한 다른 httpd 실행 파일로 신호를 보내면 안됩니다 . 즉, 부모를 제외한 모든 프로세스에 신호를 보낼 필요가 없습니다. 부모에게 보낼 수있는 신호는 &lt;code&gt;&lt;a href=&quot;#term&quot;&gt;TERM&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#graceful&quot;&gt;USR1&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#hup&quot;&gt;HUP&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#gracefulstop&quot;&gt;WINCH&lt;/a&gt;&lt;/code&gt; 의 네 가지 입니다.</target>
        </trans-unit>
        <trans-unit id="5c6b68cade8ef08b75d3fc9c2a14a503cef7d76e" translate="yes" xml:space="preserve">
          <source>In order to support OCSP Stapling when a particular server certificate is used, the certificate chain for that certificate must be configured. If it was not configured as part of enabling SSL, the AH02217 error will be issued when stapling is enabled, and an OCSP response will not be provided for clients using the certificate.</source>
          <target state="translated">특정 서버 인증서를 사용할 때 OCSP 스테이플 링을 지원하려면 해당 인증서의 인증서 체인을 구성해야합니다. SSL 사용의 일부로 구성되지 않은 경우 스테이플 링이 사용 가능할 때 AH02217 오류가 발생하며 인증서를 사용하는 클라이언트에 대해 OCSP 응답이 제공되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="31b7e0d498825e8db62cdc1d0321e2d580cb1ef3" translate="yes" xml:space="preserve">
          <source>In order to support advanced techniques (such as cookies or special URL-paths) to determine the user's preferred language, since httpd 2.0.47 &lt;code&gt;&lt;a href=&quot;mod/mod_negotiation&quot;&gt;mod_negotiation&lt;/a&gt;&lt;/code&gt; recognizes the &lt;a href=&quot;env&quot;&gt;environment variable&lt;/a&gt;&lt;code&gt;prefer-language&lt;/code&gt;. If it exists and contains an appropriate language tag, &lt;code&gt;&lt;a href=&quot;mod/mod_negotiation&quot;&gt;mod_negotiation&lt;/a&gt;&lt;/code&gt; will try to select a matching variant. If there's no such variant, the normal negotiation process applies.</source>
          <target state="translated">httpd 2.0.47 &lt;code&gt;&lt;a href=&quot;mod/mod_negotiation&quot;&gt;mod_negotiation&lt;/a&gt;&lt;/code&gt; 은 &lt;a href=&quot;env&quot;&gt;환경 변수 &lt;/a&gt; &lt;code&gt;prefer-language&lt;/code&gt; 를 인식 하므로 사용자가 선호하는 언어를 결정하는 고급 기술 (예 : 쿠키 또는 특수 URL 경로)을 지원 합니다. 존재하고 적절한 언어 태그가 포함되어 있으면 &lt;code&gt;&lt;a href=&quot;mod/mod_negotiation&quot;&gt;mod_negotiation&lt;/a&gt;&lt;/code&gt; 은 일치하는 변형을 선택하려고 시도합니다. 그러한 변형이 없으면 정상적인 협상 프로세스가 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="9dc1f94679bc8b5f3fab996f5b5d3bd6eb411b0e" translate="yes" xml:space="preserve">
          <source>In order to use Anonymous Diffie-Hellman (ADH) ciphers, you must build OpenSSL with ``&lt;code&gt;-DSSL_ALLOW_ADH&lt;/code&gt;'', and then add ``&lt;code&gt;ADH&lt;/code&gt;'' into your &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl#sslciphersuite&quot;&gt;SSLCipherSuite&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">ADH (Anonymous Diffie-Hellman) 암호를 사용하려면`` &lt;code&gt;-DSSL_ALLOW_ADH&lt;/code&gt; ''를 사용하여 OpenSSL을 빌드 한 다음 &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl#sslciphersuite&quot;&gt;SSLCipherSuite&lt;/a&gt;&lt;/code&gt; 에 `` &lt;code&gt;ADH&lt;/code&gt; ''를 추가 해야합니다 .</target>
        </trans-unit>
        <trans-unit id="1143ed26a36025fa3a6985b6e30f31874bc69808" translate="yes" xml:space="preserve">
          <source>In order to use another provider, you have to set the &lt;code&gt;flusher&lt;/code&gt; parameter in the &lt;code&gt;&lt;a href=&quot;mod_proxy#proxypass&quot;&gt;ProxyPass&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">다른 제공자를 사용 하려면 &lt;code&gt;&lt;a href=&quot;mod_proxy#proxypass&quot;&gt;ProxyPass&lt;/a&gt;&lt;/code&gt; 지시문 에서 &lt;code&gt;flusher&lt;/code&gt; 매개 변수 를 설정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="b23f07135a529cfd84338192975a62591b3f4b26" translate="yes" xml:space="preserve">
          <source>In order to use this, you need to explicitly enable it on the server via</source>
          <target state="translated">이것을 사용하려면 서버를 통해 명시 적으로 활성화해야합니다.</target>
        </trans-unit>
        <trans-unit id="c81dc4a1976ea75193757dcda0c0751e2aad342b" translate="yes" xml:space="preserve">
          <source>In other cases, there may be a need to change the URL of a particular resource on every request, usually by adding a &quot;cachebuster&quot; string to the URL. If this content is declared cacheable by a server for a significant freshness lifetime, these entries can crowd out legitimate entries in a cache. While &lt;code&gt;&lt;a href=&quot;mod/mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; provides a &lt;code&gt;&lt;a href=&quot;mod/mod_cache#cacheignoreurlsessionidentifiers&quot;&gt;CacheIgnoreURLSessionIdentifiers&lt;/a&gt;&lt;/code&gt; directive, this directive should be used with care to ensure that downstream proxy or browser caches aren't subjected to the same denial of service issue.</source>
          <target state="translated">다른 경우에는 일반적으로 URL에 &quot;캐시 버스터&quot;문자열을 추가하여 모든 요청에서 특정 자원의 URL을 변경해야 할 수도 있습니다. 이 컨텐츠가 서버에서 유효 신선도 수명 동안 캐시 가능하다고 선언되면 이러한 항목이 캐시에서 합법적 인 항목으로 가득 차게됩니다. &lt;code&gt;&lt;a href=&quot;mod/mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;mod/mod_cache#cacheignoreurlsessionidentifiers&quot;&gt;CacheIgnoreURLSessionIdentifiers&lt;/a&gt;&lt;/code&gt; 지시문을 제공 하지만 이 지시문은 다운 스트림 프록시 또는 브라우저 캐시에 동일한 서비스 거부 문제가 발생하지 않도록주의해서 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="b28f34077bfdf358347ec677728e60ed47918395" translate="yes" xml:space="preserve">
          <source>In other words, just changing &lt;code&gt;&lt;a href=&quot;#alias&quot;&gt;Alias&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;#aliasmatch&quot;&gt;AliasMatch&lt;/a&gt;&lt;/code&gt; will not have the same effect. At a minimum, you need to add &lt;code&gt;^&lt;/code&gt; to the beginning of the regular expression and add &lt;code&gt;(.*)$&lt;/code&gt; to the end, and add &lt;code&gt;$1&lt;/code&gt; to the end of the replacement.</source>
          <target state="translated">즉, &lt;code&gt;&lt;a href=&quot;#alias&quot;&gt;Alias&lt;/a&gt;&lt;/code&gt; 를 &lt;code&gt;&lt;a href=&quot;#aliasmatch&quot;&gt;AliasMatch&lt;/a&gt;&lt;/code&gt; 로 변경해 도 동일한 효과가 없습니다. 최소한 정규식의 시작 부분에 &lt;code&gt;^&lt;/code&gt; 를 추가 하고 끝에 &lt;code&gt;(.*)$&lt;/code&gt; 를 추가 하고 대체의 끝에 &lt;code&gt;$1&lt;/code&gt; 을 추가 해야합니다.</target>
        </trans-unit>
        <trans-unit id="4221d5ac642b716eab4f5591f5dfd0a5d4759d07" translate="yes" xml:space="preserve">
          <source>In overriding the client IP, the module stores the list of intermediate hosts in a remoteip-proxy-ip-list note, which &lt;code&gt;&lt;a href=&quot;mod_log_config&quot;&gt;mod_log_config&lt;/a&gt;&lt;/code&gt; can record using the &lt;code&gt;%{remoteip-proxy-ip-list}n&lt;/code&gt; format token. If the administrator needs to store this as an additional header, this same value can also be recording as a header using the directive &lt;code&gt;&lt;a href=&quot;#remoteipproxiesheader&quot;&gt;RemoteIPProxiesHeader&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">클라이언트 IP를 대체 할 때 모듈은 remoteip-proxy-ip-list 메모에 중간 호스트 목록을 저장합니다. &lt;code&gt;&lt;a href=&quot;mod_log_config&quot;&gt;mod_log_config&lt;/a&gt;&lt;/code&gt; 는 &lt;code&gt;%{remoteip-proxy-ip-list}n&lt;/code&gt; 형식 토큰을 사용하여 기록 할 수 있습니다 . 관리자가이를 추가 헤더로 저장해야하는 경우 &lt;code&gt;&lt;a href=&quot;#remoteipproxiesheader&quot;&gt;RemoteIPProxiesHeader&lt;/a&gt;&lt;/code&gt; 지시문을 사용하여 동일한 값을 헤더로 기록 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c8b1b9cf0952e2f31df101d3ad00ed473710fcc4" translate="yes" xml:space="preserve">
          <source>In particular, if you are creating an &lt;code&gt;Alias&lt;/code&gt; to a directory outside of your &lt;code&gt;&lt;a href=&quot;core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt;, you may need to explicitly permit access to the target directory.</source>
          <target state="translated">특히, &lt;code&gt;&lt;a href=&quot;core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt; 외부의 디렉토리에 대한 &lt;code&gt;Alias&lt;/code&gt; 을 작성하는 경우 대상 디렉토리에 대한 액세스를 명시 적으로 허용해야 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="9733494e0aa979a912c30ffdc44926c4ba56c936" translate="yes" xml:space="preserve">
          <source>In particular, this module can leak sensitive information from the configuration directives of other Apache modules such as system paths, usernames/passwords, database names, etc. Therefore, this module should &lt;strong&gt;only&lt;/strong&gt; be used in a controlled environment and always with caution.</source>
          <target state="translated">특히이 모듈은 시스템 경로, 사용자 이름 / 암호, 데이터베이스 이름 등과 같은 다른 Apache 모듈의 구성 지시문에서 민감한 정보를 유출 할 수 있습니다. 따라서이 모듈은 제어 된 환경 &lt;strong&gt;에서만&lt;/strong&gt; 사용해야하며 항상주의해야합니다.</target>
        </trans-unit>
        <trans-unit id="c50411ba19e4294e2644e803621ac8e05f1c903a" translate="yes" xml:space="preserve">
          <source>In per-directory context (&lt;code&gt;&lt;a href=&quot;core#directory&quot;&gt;Directory&lt;/a&gt;&lt;/code&gt; and .htaccess), the &lt;em&gt;Pattern&lt;/em&gt; is matched against only a partial path, for example a request of &quot;/app1/index.html&quot; may result in comparison against &quot;app1/index.html&quot; or &quot;index.html&quot; depending on where the &lt;code&gt;RewriteRule&lt;/code&gt; is defined.</source>
          <target state="translated">디렉토리 별 컨텍스트 ( &lt;code&gt;&lt;a href=&quot;core#directory&quot;&gt;Directory&lt;/a&gt;&lt;/code&gt; 및 .htaccess)에서 &lt;em&gt;패턴&lt;/em&gt; 은 부분 경로와 만 일치합니다. 예를 들어 &quot;/app1/index.html&quot;요청은 ​​&quot;app1 / index.html&quot;또는 &quot;index와 비교할 수 있습니다. .html &quot;은 &lt;code&gt;RewriteRule&lt;/code&gt; 이 정의 된 위치에 따라 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="99717dc2b879de52cbaa60de973d0096aa114202" translate="yes" xml:space="preserve">
          <source>In per-directory context (i.e., within &lt;code&gt;.htaccess&lt;/code&gt; files and &lt;code&gt;Directory&lt;/code&gt; blocks), these rules are being applied after a URL has already been translated to a filename. Because of this, the URL-path that mod_rewrite initially compares &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; directives against is the full filesystem path to the translated filename with the current directories path (including a trailing slash) removed from the front.</source>
          <target state="translated">디렉토리 별 컨텍스트 (즉, &lt;code&gt;.htaccess&lt;/code&gt; 파일 및 &lt;code&gt;Directory&lt;/code&gt; 블록 내)에서 이러한 규칙은 URL이 이미 파일 이름으로 변환 된 후에 적용됩니다. 이 때문에 mod_rewrite가 처음에 &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; 지시문을 비교하는 URL 경로 는 현재 디렉토리 경로 (후행 슬래시 포함)와 함께 변환 된 파일 이름의 전체 파일 시스템 경로입니다.</target>
        </trans-unit>
        <trans-unit id="98c4aea32efa0511d90c41a623ffa7a05d5540ec" translate="yes" xml:space="preserve">
          <source>In per-directory context, the URI each &lt;code&gt;RewriteRule&lt;/code&gt; compares against is the concatenation of the current values of the URI and PATH_INFO.</source>
          <target state="translated">디렉토리 별 컨텍스트에서 각 &lt;code&gt;RewriteRule&lt;/code&gt; 과 비교 하는 URI 는 현재 URI 값과 PATH_INFO를 연결합니다.</target>
        </trans-unit>
        <trans-unit id="300fba782c565c27ddf465d2d771b61ce854d02a" translate="yes" xml:space="preserve">
          <source>In practical terms, this means that the default will almost always be &lt;code&gt;&lt;a href=&quot;mod/event&quot;&gt;event&lt;/a&gt;&lt;/code&gt;, as all modern operating systems support these two features.</source>
          <target state="translated">실제로 모든 현대 운영 체제가이 두 가지 기능을 지원 하므로 기본적으로 거의 항상 &lt;code&gt;&lt;a href=&quot;mod/event&quot;&gt;event&lt;/a&gt;&lt;/code&gt; 가됩니다.</target>
        </trans-unit>
        <trans-unit id="ad0a1741e99fa5f96001a7d1073a20e68a67d860" translate="yes" xml:space="preserve">
          <source>In practice only levels &lt;strong&gt;none&lt;/strong&gt; and &lt;strong&gt;require&lt;/strong&gt; are really interesting, because level &lt;strong&gt;optional&lt;/strong&gt; doesn't work with all servers and level &lt;strong&gt;optional_no_ca&lt;/strong&gt; is actually against the idea of authentication (but can be used to establish SSL test pages, etc.)</source>
          <target state="translated">연습 만 레벨에 &lt;strong&gt;없음&lt;/strong&gt; 및 &lt;strong&gt;필요는&lt;/strong&gt; 수준 때문에, 정말 흥미로운 &lt;strong&gt;옵션은&lt;/strong&gt; 모든 서버에 작업을하지 않는 및 수준 &lt;strong&gt;optional_no_ca이&lt;/strong&gt; 인증의 아이디어에 대해 실제로 (그러나, 등 SSL 테스트 페이지를 설정하는 데 사용할 수 있습니다)</target>
        </trans-unit>
        <trans-unit id="dc0ab17ef3f44a22cf0b8ad12e6b1210341c283a" translate="yes" xml:space="preserve">
          <source>In previous 2.3.x releases, the default was effectively to ignore LuaHook* directives from parent configuration sections.</source>
          <target state="translated">이전 2.3.x 릴리스에서는 기본적으로 상위 구성 섹션에서 LuaHook * 지시문을 무시했습니다.</target>
        </trans-unit>
        <trans-unit id="aa11ab8a306b41071f151022755977ec2d567046" translate="yes" xml:space="preserve">
          <source>In releases prior to 2.4, this module did not take any action if any other handler was configured for a URL. This allows directory indexes to be served even when a &lt;code&gt;SetHandler&lt;/code&gt; directive is specified for an entire directory, but it can also result in some conflicts with modules such as &lt;code&gt;&lt;a href=&quot;mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">2.4 이전의 릴리스에서는 다른 핸들러가 URL에 대해 구성된 경우이 모듈이 조치를 취하지 않았습니다. 따라서 전체 디렉토리에 &lt;code&gt;SetHandler&lt;/code&gt; 지시문이 지정된 경우에도 디렉토리 색인을 제공 할 수 있지만 &lt;code&gt;&lt;a href=&quot;mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; 와 같은 모듈과 충돌이 발생할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dc17b2aac0d9bf584f4c0aa53431a65d1503313c" translate="yes" xml:space="preserve">
          <source>In situations where Apache 2.x can ignore the contents of the file to be delivered -- for example, when serving static file content -- it normally uses the kernel sendfile support for the file if the OS supports the &lt;code&gt;sendfile(2)&lt;/code&gt; operation.</source>
          <target state="translated">정적 파일 컨텐츠를 제공 할 때와 같이 Apache 2.x가 전달할 파일의 컨텐츠를 무시할 수있는 상황에서 OS가 &lt;code&gt;sendfile(2)&lt;/code&gt; 조작을 지원하는 경우 일반적으로 파일에 대한 커널 송신 파일 지원을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="e628e148cdf08986cfa9f0ddc033c1780441240c" translate="yes" xml:space="preserve">
          <source>In situations where Apache 2.x needs to look at the contents of a file being delivered--for example, when doing server-side-include processing--it normally memory-maps the file if the OS supports some form of &lt;code&gt;mmap(2)&lt;/code&gt;.</source>
          <target state="translated">Apache 2.x가 전달되는 파일의 내용 (예 : 서버 측 포함 처리를 수행 할 때)을 살펴 봐야하는 상황에서 OS가 어떤 형식의 &lt;code&gt;mmap(2)&lt;/code&gt; 지원하는 경우 일반적으로 파일을 메모리 맵핑합니다. ) .</target>
        </trans-unit>
        <trans-unit id="d5386848866849fda31cf63f04299cd71f0cf4a2" translate="yes" xml:space="preserve">
          <source>In some circumstances, it is useful to be able to send a set of acceptable CA names which differs from the actual CAs used to verify the client certificate - for example, if the client certificates are signed by intermediate CAs. In such cases, &lt;code&gt;&lt;a href=&quot;#sslcadnrequestpath&quot;&gt;SSLCADNRequestPath&lt;/a&gt;&lt;/code&gt; and/or &lt;code&gt;&lt;a href=&quot;#sslcadnrequestfile&quot;&gt;SSLCADNRequestFile&lt;/a&gt;&lt;/code&gt; can be used; the acceptable CA names are then taken from the complete set of certificates in the directory and/or file specified by this pair of directives.</source>
          <target state="translated">경우에 따라 클라이언트 인증서를 확인하는 데 사용 된 실제 CA와 다른 허용 가능한 CA 이름 세트를 보낼 수 있으면 유용합니다 (예 : 클라이언트 인증서가 중간 CA에 의해 서명 된 경우). 이러한 경우 &lt;code&gt;&lt;a href=&quot;#sslcadnrequestpath&quot;&gt;SSLCADNRequestPath&lt;/a&gt;&lt;/code&gt; 및 / 또는 &lt;code&gt;&lt;a href=&quot;#sslcadnrequestfile&quot;&gt;SSLCADNRequestFile&lt;/a&gt;&lt;/code&gt; 을 사용할 수 있습니다. 허용 가능한 CA 이름은이 지시문 쌍에 의해 지정된 디렉토리 및 / 또는 파일의 전체 인증서 세트에서 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="a7f1a3e792d05cdf14f75d1a886444546b6cae90" translate="yes" xml:space="preserve">
          <source>In such scenarios, httpd itself does not generate or host the data, but rather the content is obtained by one or several backend servers, which normally have no direct connection to the external network. As httpd receives a request from a client, the request itself is &lt;em&gt;proxied&lt;/em&gt; to one of these backend servers, which then handles the request, generates the content and then sends this content back to httpd, which then generates the actual HTTP response back to the client.</source>
          <target state="translated">이러한 시나리오에서 httpd 자체는 데이터를 생성하거나 호스트하지 않지만 일반적으로 외부 네트워크에 직접 연결되지 않은 하나 이상의 백엔드 서버에서 컨텐츠를 얻습니다. httpd가 클라이언트로부터 요청을 받으면 요청 자체 가이 백엔드 서버 중 하나로 &lt;em&gt;프록시&lt;/em&gt; 되어 요청을 처리하고 컨텐츠를 생성 한 다음이 컨텐츠를 httpd로 다시 전송하여 실제 HTTP 응답을 클라이언트로 다시 생성합니다. .</target>
        </trans-unit>
        <trans-unit id="3d881a7ff121abad262163b99962573ae2507b02" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;semiformatted&lt;/code&gt; menu, comments are printed where they occur in the imagemap file. Blank lines are turned into HTML breaks. No header or hrule is printed, but otherwise the menu is the same as a &lt;code&gt;formatted&lt;/code&gt; menu.</source>
          <target state="translated">에서 &lt;code&gt;semiformatted&lt;/code&gt; 가 이미지 맵 파일에서 발생하는 경우 메뉴, 주석 인쇄됩니다. 빈 줄은 HTML 나누기로 바뀝니다. 헤더 나 hrule이 인쇄되지 않지만 메뉴는 &lt;code&gt;formatted&lt;/code&gt; 메뉴 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="c2947fce709df5603a75706378c2d960b5f04f0e" translate="yes" xml:space="preserve">
          <source>In the &lt;em&gt;balancer-manager&lt;/em&gt; the current state, or &lt;em&gt;status&lt;/em&gt;, of a worker is displayed and can be set/reset. The meanings of these statuses are as follows:</source>
          <target state="translated">에서는 &lt;em&gt;평형 - 관리자&lt;/em&gt; 의 현재 상태 나 &lt;em&gt;상태&lt;/em&gt; 작업자의이 표시되고, 세트 / 리셋 될 수있다. 이러한 상태의 의미는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6dc73e3e63c6dfb6b18d5a466dfa84edbd266157" translate="yes" xml:space="preserve">
          <source>In the Apache HTTP Server API, the handler is a specific kind of hook responsible for generating the response. Examples of modules that include a handler are &lt;code&gt;&lt;a href=&quot;mod_proxy&quot;&gt;mod_proxy&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod_cgi&quot;&gt;mod_cgi&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;mod_status&quot;&gt;mod_status&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Apache HTTP Server API에서 핸들러는 응답 생성을 담당하는 특정 종류의 후크입니다. 핸들러를 포함하는 모듈의 예는 &lt;code&gt;&lt;a href=&quot;mod_proxy&quot;&gt;mod_proxy&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;mod_cgi&quot;&gt;mod_cgi&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;mod_status&quot;&gt;mod_status&lt;/a&gt;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="2ecdd8799a8937c2203f90faf90a7e654d32b1a6" translate="yes" xml:space="preserve">
          <source>In the above example, authentication will be required for the &lt;code&gt;/var/www/private&lt;/code&gt; directory, but will not be required for the &lt;code&gt;/var/www/private/public&lt;/code&gt; directory.</source>
          <target state="translated">위의 예에서 &lt;code&gt;/var/www/private&lt;/code&gt; 디렉토리 에는 인증이 필요 하지만 &lt;code&gt;/var/www/private/public&lt;/code&gt; 디렉토리 에는 인증이 필요 하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="dcb3d90dcf1d7734dd7d60c09fda6140e73000ab" translate="yes" xml:space="preserve">
          <source>In the above, any requests which start with the &lt;code&gt;/images&lt;/code&gt; path with be proxied to the specified backend, otherwise it will be handled locally.</source>
          <target state="translated">위의 &lt;code&gt;/images&lt;/code&gt; 경로로 시작하는 모든 요청 은 지정된 백엔드로 프록시됩니다. 그렇지 않으면 로컬로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="6f3574f7d6549778b2d9114d9913eb02806fd05c" translate="yes" xml:space="preserve">
          <source>In the below example, &lt;code&gt;-strmatch&lt;/code&gt; is used to compare the &lt;code&gt;REFERER&lt;/code&gt; against the site hostname, to block unwanted hotlinking.</source>
          <target state="translated">아래 예에서 &lt;code&gt;-strmatch&lt;/code&gt; 는 원하지 않는 핫 링크를 차단하기 위해 &lt;code&gt;REFERER&lt;/code&gt; 를 사이트 호스트 이름과 비교하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="7e143fa7f0b573ce250e9c837cbab019682fd810" translate="yes" xml:space="preserve">
          <source>In the case of &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; directives, in &lt;code&gt;.htaccess&lt;/code&gt; context these regular expressions must be re-compiled with every request to the directory, whereas in main server configuration context they are compiled once and cached. Additionally, the rules themselves are more complicated, as one must work around the restrictions that come with per-directory context and &lt;code&gt;mod_rewrite&lt;/code&gt;. Consult the &lt;a href=&quot;../rewrite/intro#htaccess&quot;&gt;Rewrite Guide&lt;/a&gt; for more detail on this subject.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; 지시문 의 경우 &lt;code&gt;.htaccess&lt;/code&gt; 컨텍스트에서 이러한 정규 표현식은 디렉토리에 대한 모든 요청과 함께 다시 컴파일되어야하지만 주 서버 구성 컨텍스트에서는 한 번 컴파일되고 캐시됩니다. 또한 디렉토리마다 컨텍스트 및 &lt;code&gt;mod_rewrite&lt;/code&gt; 와 함께 제공되는 제한 사항을 해결해야하므로 규칙 자체가 더 복잡합니다 . 이 주제에 대한 자세한 내용 은 &lt;a href=&quot;../rewrite/intro#htaccess&quot;&gt;재 작성 안내서&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="59b4dae3ffaebd82037571136a9659fe4296595a" translate="yes" xml:space="preserve">
          <source>In the case of Unix, the decision as to which MPM is installed is based on two questions:</source>
          <target state="translated">유닉스의 경우 MPM 설치 여부는 두 가지 질문에 따라 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="bb84611880b49e28cc8c529093a6da6e9e2ebbf4" translate="yes" xml:space="preserve">
          <source>In the case of a content negotiated via the &quot;Vary&quot; header, a &quot;.vary&quot; directory will be created for the URL in question. This directory will have multiple &quot;.data&quot; files corresponding to the differently negotiated content.</source>
          <target state="translated">&quot;Vary&quot;헤더를 통해 협상 된 컨텐츠의 경우 해당 URL에 대해 &quot;.vary&quot;디렉토리가 작성됩니다. 이 디렉토리에는 다르게 협상 된 내용에 해당하는 여러 &quot;.data&quot;파일이 있습니다.</target>
        </trans-unit>
        <trans-unit id="8230ddde0cf4c04b5829eed34deff59370c2ba54" translate="yes" xml:space="preserve">
          <source>In the case of multiple least-busy workers, the statistics (and weightings) used by the Request Counting method are used to break the tie. Over time, the distribution of work will come to resemble that characteristic of &lt;code&gt;byrequests&lt;/code&gt; (as implemented by &lt;code&gt;&lt;a href=&quot;mod_lbmethod_byrequests&quot;&gt;mod_lbmethod_byrequests&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">최소 업무량이 많은 작업자의 경우 요청 계산 방법에 사용 된 통계 (및 가중치)를 사용하여 동점을 끊습니다. 시간이 지남에 따라 작품의 분포의 특성을 닮은 올 것이다 &lt;code&gt;byrequests&lt;/code&gt; 을 (에 의해 구현 된 &lt;code&gt;&lt;a href=&quot;mod_lbmethod_byrequests&quot;&gt;mod_lbmethod_byrequests&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="0eaae951f3a99f65207fb845e72b2693ac80edd7" translate="yes" xml:space="preserve">
          <source>In the case of the &lt;em&gt;http-to-https&lt;/em&gt; redirection, the use of &lt;code&gt;RewriteRule&lt;/code&gt; would be appropriate if you don't have access to the main server configuration file, and are obliged to perform this task in a &lt;code&gt;.htaccess&lt;/code&gt; file instead.</source>
          <target state="translated">의 경우 &lt;em&gt;HTTP에서 HTTPS&lt;/em&gt; 리디렉션을 사용 &lt;code&gt;RewriteRule&lt;/code&gt; 메인 서버 구성 파일에 액세스 할 수없는, 그리고이 작업을 수행 할 의무가있는 경우, 적절한 것 &lt;code&gt;.htaccess&lt;/code&gt; 대신 파일.</target>
        </trans-unit>
        <trans-unit id="fbeba7cd23dd1ed29f7d8c31521aa0935a9915ed" translate="yes" xml:space="preserve">
          <source>In the current implementation, these workers use a separate thread pool from the MPM workers that you might be familiar with. This is just how things are right now and not intended to be like this forever. (It might be forever for the 2.4.x release line, though.) So, HTTP/2 workers, or shorter H2Workers, will not show up in &lt;code&gt;&lt;a href=&quot;mod_status&quot;&gt;mod_status&lt;/a&gt;&lt;/code&gt;. They are also not counted against directives such as &lt;code&gt;&lt;a href=&quot;mpm_common#threadsperchild&quot;&gt;ThreadsPerChild&lt;/a&gt;&lt;/code&gt;. However they take &lt;code&gt;&lt;a href=&quot;mpm_common#threadsperchild&quot;&gt;ThreadsPerChild&lt;/a&gt;&lt;/code&gt; as default if you have not configured something else via &lt;code&gt;&lt;a href=&quot;#h2minworkers&quot;&gt;H2MinWorkers&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#h2maxworkers&quot;&gt;H2MaxWorkers&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">현재 구현에서 이러한 작업자는 익숙한 MPM 작업자와 별도의 스레드 풀을 사용합니다. 이것은 단지 상황이 지금과 같고 영원히 그런 것이 아닙니다. (하지만 2.4.x 릴리스 라인에서는 영원히있을 수 있습니다.) 따라서 HTTP / 2 워커 또는 더 짧은 H2Workers는 &lt;code&gt;&lt;a href=&quot;mod_status&quot;&gt;mod_status&lt;/a&gt;&lt;/code&gt; 에 표시되지 않습니다 . 또한 &lt;code&gt;&lt;a href=&quot;mpm_common#threadsperchild&quot;&gt;ThreadsPerChild&lt;/a&gt;&lt;/code&gt; 와 같은 지시문에 대해서는 계산되지 않습니다 . 그러나 &lt;code&gt;&lt;a href=&quot;#h2minworkers&quot;&gt;H2MinWorkers&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;#h2maxworkers&quot;&gt;H2MaxWorkers&lt;/a&gt;&lt;/code&gt; 를 통해 다른 것을 구성하지 않은 경우 &lt;code&gt;&lt;a href=&quot;mpm_common#threadsperchild&quot;&gt;ThreadsPerChild&lt;/a&gt;&lt;/code&gt; 를 기본값으로 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="dc2b0eefa3c7eb6de87e6830b2362d7e4bd6aad8" translate="yes" xml:space="preserve">
          <source>In the default configuration, &lt;code&gt;&lt;a href=&quot;mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; inserts the caching filter as far forward as possible within the filter stack, utilising the &lt;strong&gt;quick handler&lt;/strong&gt; to bypass all per request processing when returning content to the client. In this mode of operation, &lt;code&gt;&lt;a href=&quot;mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; may be thought of as a caching proxy server bolted to the front of the webserver, while running within the webserver itself.</source>
          <target state="translated">기본 구성에서 &lt;code&gt;&lt;a href=&quot;mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; 는 클라이언트에 컨텐츠를 리턴 할 때 요청마다 처리를 모두 생략하기 위해 &lt;strong&gt;빠른 핸들러&lt;/strong&gt; 를 사용하여 필터 스택 내에서 가능한 한 &lt;strong&gt;빨리&lt;/strong&gt; 캐싱 필터를 삽입합니다 . 이 작동 모드에서 &lt;code&gt;&lt;a href=&quot;mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; 는 웹 서버 자체 내에서 실행되는 동안 웹 서버의 전면에 볼트로 연결된 캐싱 프록시 서버로 간주 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="52730053baed86ecacf713e9592c908cd9ae15a5" translate="yes" xml:space="preserve">
          <source>In the default enabled configuration, the cache operates within the quick handler phase. This phase short circuits the majority of server processing, and represents the most performant mode of operation for a typical server. The cache &lt;strong&gt;bolts onto&lt;/strong&gt; the front of the server, and the majority of server processing is avoided.</source>
          <target state="translated">기본 활성화 구성에서 캐시는 빠른 처리기 단계 내에서 작동합니다. 이 단계는 대부분의 서버 처리를 단락 시키며 일반적인 서버에서 가장 성능이 뛰어난 작동 모드를 나타냅니다. 캐시 는 서버 전면에 &lt;strong&gt;볼트로 고정되며&lt;/strong&gt; 대부분의 서버 처리는 피합니다.</target>
        </trans-unit>
        <trans-unit id="100b5585f2c76516c603381664553d30ac617200" translate="yes" xml:space="preserve">
          <source>In the directory &lt;code&gt;/www/htdocs/example1/example2&lt;/code&gt; we have a &lt;code&gt;.htaccess&lt;/code&gt; file containing:</source>
          <target state="translated">&lt;code&gt;/www/htdocs/example1/example2&lt;/code&gt; 디렉토리에는 다음을 포함 하는 &lt;code&gt;.htaccess&lt;/code&gt; 파일이 있습니다.</target>
        </trans-unit>
        <trans-unit id="ef2f4f6fc9f22164e7b7882f142832c95b7f72d5" translate="yes" xml:space="preserve">
          <source>In the directory &lt;code&gt;/www/htdocs/example1&lt;/code&gt; we have a &lt;code&gt;.htaccess&lt;/code&gt; file containing the following:</source>
          <target state="translated">&lt;code&gt;/www/htdocs/example1&lt;/code&gt; 디렉토리 에는 다음을 포함 하는 &lt;code&gt;.htaccess&lt;/code&gt; 파일이 있습니다.</target>
        </trans-unit>
        <trans-unit id="dd5da14321d9036ef6d866f52249c1a35c22a2a9" translate="yes" xml:space="preserve">
          <source>In the event of a problem or error, Apache httpd can be configured to do one of four things,</source>
          <target state="translated">문제 나 오류가 발생하면 Apache httpd는 다음 4 가지 중 하나를 수행하도록 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="67fbbbfcb292e56c0b7ba95c9b1dddbca04001c4" translate="yes" xml:space="preserve">
          <source>In the event of problems you can:</source>
          <target state="translated">문제가 발생하면 다음을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4b368a86e6901ee79f40f56f029be3115bb0366b" translate="yes" xml:space="preserve">
          <source>In the event that a document does not provide an expiry date but does provide a last-modified date, an expiry date can be calculated based on the time since the document was last modified. The &lt;code&gt;CacheLastModifiedFactor&lt;/code&gt; directive specifies a &lt;var&gt;factor&lt;/var&gt; to be used in the generation of this expiry date according to the following formula: &lt;code&gt;expiry-period = time-since-last-modified-date * factor expiry-date = current-date + expiry-period&lt;/code&gt; For example, if the document was last modified 10 hours ago, and &lt;var&gt;factor&lt;/var&gt; is 0.1 then the expiry-period will be set to 10*0.1 = 1 hour. If the current time was 3:00pm then the computed expiry-date would be 3:00pm + 1hour = 4:00pm. If the expiry-period would be longer than that set by &lt;code&gt;CacheMaxExpire&lt;/code&gt;, then the latter takes precedence.</source>
          <target state="translated">문서가 만기 날짜를 제공하지 않지만 최종 수정 날짜를 제공하는 경우, 만기 날짜는 문서가 마지막으로 수정 된 이후의 시간을 기반으로 계산 될 수 있습니다. &lt;code&gt;CacheLastModifiedFactor&lt;/code&gt; 의 지향성 지정하는 &lt;var&gt;factor&lt;/var&gt; 는 다음 식에 의해이 유효 기간의 생성에 사용한다 : &lt;code&gt;expiry-period = time-since-last-modified-date * factor expiry-date = current-date + expiry-period&lt;/code&gt; , 예를 들어 , 문서가 10 시간 전에 마지막으로 수정되었고 &lt;var&gt;factor&lt;/var&gt; 가 0.1 인 경우 만료 기간은 10 * 0.1 = 1 시간으로 설정됩니다. 현재 시간이 오후 3시이면 계산 만료 날짜는 오후 3시 + 1 시간 = 4:00 pm입니다. 만료 기간이 &lt;code&gt;CacheMaxExpire&lt;/code&gt; 가 설정 한 기간보다 길 경우그러면 후자가 우선합니다.</target>
        </trans-unit>
        <trans-unit id="5a95c2c129b65ecd0f60da8cd983ef92767c0e08" translate="yes" xml:space="preserve">
          <source>In the event that the URL space overlaps between different &lt;code&gt;CacheEnable&lt;/code&gt; directives (as in the example below), each possible storage manager will be run until the first one that actually processes the request. The order in which the storage managers are run is determined by the order of the &lt;code&gt;CacheEnable&lt;/code&gt; directives in the configuration file. &lt;code&gt;CacheEnable&lt;/code&gt; directives within &lt;code&gt;&amp;lt;Location&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;LocationMatch&amp;gt;&lt;/code&gt; sections are processed before globally defined &lt;code&gt;CacheEnable&lt;/code&gt; directives.</source>
          <target state="translated">URL 공간이 다른 &lt;code&gt;CacheEnable&lt;/code&gt; 지정 문 (아래 예에서 와 같이)간에 겹치는 경우 , 가능한 각 스토리지 관리자는 실제로 요청을 처리하는 첫 번째 것이 될 때까지 실행됩니다. 스토리지 관리자가 실행되는 순서 는 구성 파일 의 &lt;code&gt;CacheEnable&lt;/code&gt; 지시문 순서에 따라 결정됩니다 . &lt;code&gt;&amp;lt;Location&amp;gt;&lt;/code&gt; 또는 &lt;code&gt;&amp;lt;LocationMatch&amp;gt;&lt;/code&gt; 섹션 내의 &lt;code&gt;CacheEnable&lt;/code&gt; 지시문 은 전역 적으로 정의 된 &lt;code&gt;CacheEnable&lt;/code&gt; 지시문 보다 먼저 처리됩니다 .</target>
        </trans-unit>
        <trans-unit id="900cc283d2bca00ba4d16994876ca9e426139790" translate="yes" xml:space="preserve">
          <source>In the example above, &lt;code&gt;&lt;a href=&quot;#allowoverride&quot;&gt;AllowOverride &lt;/a&gt;&lt;/code&gt; grants permission to the &lt;code&gt;AuthConfig&lt;/code&gt; directive grouping and &lt;code&gt;AllowOverrideList&lt;/code&gt; grants permission to only two directives from the &lt;code&gt;FileInfo&lt;/code&gt; directive grouping. All others will cause an internal server error.</source>
          <target state="translated">위의 예에서 &lt;code&gt;&lt;a href=&quot;#allowoverride&quot;&gt;AllowOverride &lt;/a&gt;&lt;/code&gt; 는 &lt;code&gt;AuthConfig&lt;/code&gt; 지시문 그룹화에 권한을 부여 하고 &lt;code&gt;AllowOverrideList&lt;/code&gt; 는 &lt;code&gt;FileInfo&lt;/code&gt; 지시문 그룹화 에서 두 지시문에만 권한을 부여 합니다. 다른 모든 것들은 내부 서버 오류를 일으킬 것입니다.</target>
        </trans-unit>
        <trans-unit id="1e102f773efcad198bfd61da7c574bbd172bcecb" translate="yes" xml:space="preserve">
          <source>In the example above, all directives that are neither in the group &lt;code&gt;AuthConfig&lt;/code&gt; nor &lt;code&gt;Indexes&lt;/code&gt; cause an internal server error.</source>
          <target state="translated">위의 예에서 &lt;code&gt;AuthConfig&lt;/code&gt; 그룹 과 &lt;code&gt;Indexes&lt;/code&gt; 그룹에없는 모든 지시문 은 내부 서버 오류를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="e6da71583d9512b62f779e33e33bb2bc192c6835" translate="yes" xml:space="preserve">
          <source>In the example above, both &lt;code&gt;www.example.com&lt;/code&gt; as well as &lt;code&gt;www.sub.example.com&lt;/code&gt; or &lt;code&gt;example.com&lt;/code&gt; will all point to &lt;code&gt;/usr/local/apache/vhosts/example.com&lt;/code&gt;.</source>
          <target state="translated">위의 예에서 &lt;code&gt;www.example.com&lt;/code&gt; 과 &lt;code&gt;www.sub.example.com&lt;/code&gt; 또는 &lt;code&gt;example.com&lt;/code&gt; 은 모두 &lt;code&gt;/usr/local/apache/vhosts/example.com&lt;/code&gt; 을 가리 킵니다 .</target>
        </trans-unit>
        <trans-unit id="5f0507498a6b6a21ce268e9d0518276e1e9cc5d5" translate="yes" xml:space="preserve">
          <source>In the example above, only the &lt;code&gt;Redirect&lt;/code&gt; and &lt;code&gt;RedirectMatch&lt;/code&gt; directives are allowed. All others will cause an internal server error.</source>
          <target state="translated">위의 예에서는 &lt;code&gt;Redirect&lt;/code&gt; 및 &lt;code&gt;RedirectMatch&lt;/code&gt; 지시문 만 허용됩니다. 다른 모든 것들은 내부 서버 오류를 일으킬 것입니다.</target>
        </trans-unit>
        <trans-unit id="e25870d2b8ad8f07fef85df61f1063089b80c266" translate="yes" xml:space="preserve">
          <source>In the example below, &lt;code&gt;RewriteBase&lt;/code&gt; is necessary to avoid rewriting to http://example.com/opt/myapp-1.2.3/welcome.html since the resource was not relative to the document root. This misconfiguration would normally cause the server to look for an &quot;opt&quot; directory under the document root.</source>
          <target state="translated">아래 예 에서 리소스는 문서 루트와 관련이 없으므로 http://example.com/opt/myapp-1.2.3/welcome.html에 다시 쓰지 않도록 &lt;code&gt;RewriteBase&lt;/code&gt; 가 필요합니다. 이 구성이 잘못되면 일반적으로 서버가 문서 루트 아래에서 &quot;opt&quot;디렉토리를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="37eabe7fa8e9c0fa2738d5f1dba0c2fca070d31d" translate="yes" xml:space="preserve">
          <source>In the example below, any request for an image file will be proxied to your dedicated image server. The match is case-insensitive, so that &lt;code&gt;.jpg&lt;/code&gt; and &lt;code&gt;.JPG&lt;/code&gt; files are both acceptable, for example.</source>
          <target state="translated">아래 예에서 이미지 파일 요청은 전용 이미지 서버로 프록시됩니다. 일치는 대소 문자를 구분하지 않으므로 예를 들어 &lt;code&gt;.jpg&lt;/code&gt; 및 &lt;code&gt;.JPG&lt;/code&gt; 파일을 모두 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="764e7bbf6937273b4df357da0d2255518112f817" translate="yes" xml:space="preserve">
          <source>In the example below, where a trailing slash is used, requests to /private2/ and /private2/file.txt will have the enclosed directives applied, but /private2 and /private2other would not.</source>
          <target state="translated">후행 슬래시가 사용되는 아래 예에서 / private2 / 및 /private2/file.txt에 대한 요청에는 동봉 된 지시문이 적용되지만 / private2 및 / private2other는 적용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b0198fe34b25825a466cbdf29c555e4d9b0e1b3d" translate="yes" xml:space="preserve">
          <source>In the example below, where no trailing slash is used, requests to /private1, /private1/ and /private1/file.txt will have the enclosed directives applied, but /private1other would not.</source>
          <target state="translated">후행 슬래시가 사용되지 않는 아래 예에서 / private1, / private1 / 및 /private1/file.txt에 대한 요청에는 동봉 된 지시문이 적용되지만 / private1other는 그렇지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c46df073f2808b07c8496be238868eb14a60f437" translate="yes" xml:space="preserve">
          <source>In the example give, the rule doesn't rewrite the request. The &quot;-&quot; rewrite target tells mod_rewrite to pass the request through unchanged. Instead, it sets a cookie called 'frontdoor' to a value of 'yes'. The cookie is valid for any host in the &lt;code&gt;.example.com&lt;/code&gt; domain. It is set to expire in 1440 minutes (24 hours) and is returned for all URIs.</source>
          <target state="translated">예제에서 규칙은 요청을 다시 쓰지 않습니다. &quot;-&quot;재 작성 대상은 mod_rewrite가 요청을 변경하지 않고 전달하도록 지시합니다. 대신 'frontdoor'라는 쿠키를 'yes'값으로 설정합니다. 쿠키는 &lt;code&gt;.example.com&lt;/code&gt; 도메인의 모든 호스트에 유효 합니다. 1440 분 (24 시간) 후에 만료되도록 설정되어 모든 URI에 대해 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="65e94a226bc947d105d8b97ce676b1f28fa38f5b" translate="yes" xml:space="preserve">
          <source>In the example given with &lt;code&gt;&lt;a href=&quot;#proxypassreverse&quot;&gt;ProxyPassReverse&lt;/a&gt;&lt;/code&gt;, the directive:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#proxypassreverse&quot;&gt;ProxyPassReverse&lt;/a&gt;&lt;/code&gt; 와 함께 제공된 예제 에서 지시문은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c793ddb391799f9676ebb0bda0f5850fa7bbf098" translate="yes" xml:space="preserve">
          <source>In the first example, the &lt;code&gt;User-agent&lt;/code&gt; will be logged if the HTTP status code is 400 or 501. In other cases, a literal &quot;-&quot; will be logged instead. Likewise, in the second example, the &lt;code&gt;Referer&lt;/code&gt; will be logged if the HTTP status code is &lt;strong&gt;not&lt;/strong&gt; 200, 204, or 302. (Note the &quot;!&quot; before the status codes.</source>
          <target state="translated">첫 번째 예 에서 HTTP 상태 코드가 400 또는 501이면 &lt;code&gt;User-agent&lt;/code&gt; 가 기록됩니다. 다른 경우에는 리터럴 &quot;-&quot;가 대신 기록됩니다. 마찬가지로 두 번째 예 에서 HTTP 상태 코드가 200, 204 또는 302 가 &lt;strong&gt;아닌&lt;/strong&gt; 경우 &lt;code&gt;Referer&lt;/code&gt; 가 기록됩니다 . 상태 코드 앞에 &quot;!&quot;가 표시됩니다.&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="81da996241c2f8b4480bd0dcf977960fd76b8a52" translate="yes" xml:space="preserve">
          <source>In the first form, &lt;var&gt;address&lt;/var&gt; is a fully qualified domain name (or a partial domain name); you may provide multiple addresses or domain names, if desired.</source>
          <target state="translated">첫 번째 양식에서 &lt;var&gt;address&lt;/var&gt; 는 완전한 도메인 이름 (또는 부분 도메인 이름)입니다. 원하는 경우 여러 주소 또는 도메인 이름을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="468705e5865cd020268ebfd34fcd3498418ccce4" translate="yes" xml:space="preserve">
          <source>In the first form, documents will be declared as HTML 4.01 or XHTML 1.0 according to the option selected. This option also determines whether HTML or XHTML syntax is used for output. Note that the format of the documents coming from the backend server is immaterial: the parser will deal with it automatically. If the optional second argument is set to &lt;code&gt;Legacy&lt;/code&gt;, documents will be declared &quot;Transitional&quot;, an option that may be necessary if you are proxying pre-1998 content or working with defective authoring/publishing tools.</source>
          <target state="translated">첫 번째 양식에서 문서는 선택한 옵션에 따라 HTML 4.01 또는 XHTML 1.0으로 선언됩니다. 이 옵션은 출력에 HTML 또는 XHTML 구문을 사용할지 여부도 결정합니다. 백엔드 서버에서 제공되는 문서 형식은 중요하지 않습니다. 파서는 자동으로 처리합니다. 선택적인 두 번째 인수가 &lt;code&gt;Legacy&lt;/code&gt; 로 설정 되면 문서는 &quot;Transitional&quot;로 선언되며, 1998 년 이전의 컨텐츠를 프록시하거나 결함있는 저작 / 게시 도구를 사용하는 경우 필요할 수있는 옵션입니다.</target>
        </trans-unit>
        <trans-unit id="44bdbf09c8b49c4c449c96a9c5e0567aed0aadbe" translate="yes" xml:space="preserve">
          <source>In the first form, the value will be set to &quot;1&quot;. The second will remove the given variable if already defined, and the third will set the variable to the literal value given by &lt;code&gt;&lt;em&gt;value&lt;/em&gt;&lt;/code&gt;. Since version 2.0.51, Apache httpd will recognize occurrences of &lt;code&gt;$1&lt;/code&gt;..&lt;code&gt;$9&lt;/code&gt; within &lt;var&gt;value&lt;/var&gt; and replace them by parenthesized subexpressions of &lt;var&gt;regex&lt;/var&gt;. &lt;code&gt;$0&lt;/code&gt; provides access to the whole string matched by that pattern.</source>
          <target state="translated">첫 번째 형식에서는 값이 &quot;1&quot;로 설정됩니다. 이미 정의되어있는 경우에는 제 주어진 변수를 제거하고, 세번째는 주어진 리터럴 값을 가변 설정한다 &lt;code&gt;&lt;em&gt;value&lt;/em&gt;&lt;/code&gt; . 버전 2.0.51부터 Apache httpd는 &lt;var&gt;value&lt;/var&gt; 내에서 &lt;code&gt;$1&lt;/code&gt; .. &lt;code&gt;$9&lt;/code&gt; 발생을 인식 하고 괄호로 묶은 &lt;var&gt;regex&lt;/var&gt; 하위 표현식으로 대체합니다 . &lt;code&gt;$0&lt;/code&gt; 는 해당 패턴과 일치하는 전체 문자열에 대한 액세스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="0f868aa0eda0e3af6b7871085b700eecc810503c" translate="yes" xml:space="preserve">
          <source>In the first way the DSO's are usually called &lt;em&gt;shared libraries&lt;/em&gt; or &lt;em&gt;DSO libraries&lt;/em&gt; and named &lt;code&gt;libfoo.so&lt;/code&gt; or &lt;code&gt;libfoo.so.1.2&lt;/code&gt;. They reside in a system directory (usually &lt;code&gt;/usr/lib&lt;/code&gt;) and the link to the executable program is established at build-time by specifying &lt;code&gt;-lfoo&lt;/code&gt; to the linker command. This hard-codes library references into the executable program file so that at start-time the Unix loader is able to locate &lt;code&gt;libfoo.so&lt;/code&gt; in &lt;code&gt;/usr/lib&lt;/code&gt;, in paths hard-coded via linker-options like &lt;code&gt;-R&lt;/code&gt; or in paths configured via the environment variable &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt;. It then resolves any (yet unresolved) symbols in the executable program which are available in the DSO.</source>
          <target state="translated">첫 번째 방법으로 DSO는 일반적으로 &lt;em&gt;공유 라이브러리&lt;/em&gt; 또는 &lt;em&gt;DSO 라이브러리&lt;/em&gt; 라고하며 이름이 &lt;code&gt;libfoo.so&lt;/code&gt; 또는 &lt;code&gt;libfoo.so.1.2&lt;/code&gt; 입니다. 그것들은 시스템 디렉토리 (보통 &lt;code&gt;/usr/lib&lt;/code&gt; )에 있으며 실행 프로그램에 대한 링크 는 링커 명령에 &lt;code&gt;-lfoo&lt;/code&gt; 를 지정하여 빌드시 설정됩니다 . 이 하드 코드 시작 시간에 유닉스 로더가 찾을 수 있도록하는 실행 프로그램 파일에 라이브러리 참조 &lt;code&gt;libfoo.so&lt;/code&gt; 에 &lt;code&gt;/usr/lib&lt;/code&gt; , 경로의 하드 코딩 같은 링커 옵션을 통해 &lt;code&gt;-R&lt;/code&gt; 또는 통해 구성 경로에 환경 변수 &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt; . 그런 다음 DSO에서 사용 가능한 실행 프로그램의 (아직 미해결) 기호를 확인합니다.</target>
        </trans-unit>
        <trans-unit id="ca079e26dce1b7d6fad032ba43f7df7c8ea774e5" translate="yes" xml:space="preserve">
          <source>In the following example, all hosts in the example.org domain are allowed access; all other hosts are denied access.</source>
          <target state="translated">다음 예에서 example.org 도메인의 모든 호스트는 액세스가 허용됩니다. 다른 모든 호스트는 액세스가 거부됩니다.</target>
        </trans-unit>
        <trans-unit id="243d10e71b877b094d398254deb772e9eecf071d" translate="yes" xml:space="preserve">
          <source>In the following example, all users in the &lt;code&gt;alpha&lt;/code&gt; and &lt;code&gt;beta&lt;/code&gt; groups are authorized, except for those who are also in the &lt;code&gt;reject&lt;/code&gt; group.</source>
          <target state="translated">다음 예에서는 &lt;code&gt;reject&lt;/code&gt; 그룹 에있는 사용자를 제외한 &lt;code&gt;alpha&lt;/code&gt; 및 &lt;code&gt;beta&lt;/code&gt; 그룹 의 모든 사용자에게 권한이 부여 됩니다.</target>
        </trans-unit>
        <trans-unit id="a46ab504f8a2340bdcae7755276c00d12498ad4c" translate="yes" xml:space="preserve">
          <source>In the following example, the &lt;code&gt;&lt;a href=&quot;mod/mod_mime_magic#mimemagicfile&quot;&gt;MimeMagicFile&lt;/a&gt;&lt;/code&gt; directive will be applied only if &lt;code&gt;&lt;a href=&quot;mod/mod_mime_magic&quot;&gt;mod_mime_magic&lt;/a&gt;&lt;/code&gt; is available.</source>
          <target state="translated">다음 예제에서 &lt;code&gt;&lt;a href=&quot;mod/mod_mime_magic#mimemagicfile&quot;&gt;MimeMagicFile&lt;/a&gt;&lt;/code&gt; 지시문은 &lt;code&gt;&lt;a href=&quot;mod/mod_mime_magic&quot;&gt;mod_mime_magic&lt;/a&gt;&lt;/code&gt; 을 사용할 수있는 경우에만 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="b142e6288d833347e7dec9596a285fe96ca26cff" translate="yes" xml:space="preserve">
          <source>In the following example, the mutex mechanism for the MPM accept mutex will be changed from the compiled-in default to &lt;code&gt;fcntl&lt;/code&gt;, with the associated lock file created in directory &lt;code&gt;/var/httpd/locks&lt;/code&gt;. The mutex mechanism for all other mutexes will be changed from the compiled-in default to &lt;code&gt;sysvsem&lt;/code&gt;.</source>
          <target state="translated">다음 예에서 MPM accept mutex에 대한 mutex 메커니즘은 &lt;code&gt;/var/httpd/locks&lt;/code&gt; 디렉토리에 생성 된 관련 잠금 파일과 함께 컴파일 된 기본값에서 &lt;code&gt;fcntl&lt;/code&gt; 로 변경됩니다 . 다른 모든 뮤텍스에 대한 뮤텍스 메커니즘은 컴파일 된 기본값에서 &lt;code&gt;sysvsem&lt;/code&gt; 으로 변경됩니다 .</target>
        </trans-unit>
        <trans-unit id="da10503fbb9a7acb8026d0163238519dc1c19ed5" translate="yes" xml:space="preserve">
          <source>In the following example, we send the backend a &lt;code&gt;GET&lt;/code&gt; request and if the response body contains the phrase &lt;em&gt;Under maintenance&lt;/em&gt;, we want to disable the backend.</source>
          <target state="translated">다음 예에서는 백엔드에 &lt;code&gt;GET&lt;/code&gt; 요청을 전송하고 응답 본문에 &lt;em&gt;유지 보수&lt;/em&gt; 중 문구가 포함 된 경우 백엔드를 사용하지 않으려 고합니다.</target>
        </trans-unit>
        <trans-unit id="9c578e342fe7b81688c56c72f048e688fa7a877c" translate="yes" xml:space="preserve">
          <source>In the following example, when clients request documents under the &lt;code&gt;/foo/&lt;/code&gt; directory, the server fetches those documents from the &lt;code&gt;/bar/&lt;/code&gt; directory on &lt;code&gt;internal.example.com&lt;/code&gt; and returns them to the client as if they were from the local server.</source>
          <target state="translated">다음 예에서 클라이언트가 &lt;code&gt;/foo/&lt;/code&gt; 디렉토리 아래에 문서를 요청 하면 서버 는 &lt;code&gt;internal.example.com&lt;/code&gt; 의 &lt;code&gt;/bar/&lt;/code&gt; 디렉토리 에서 해당 문서를 가져 와서 로컬 서버에서 온 것처럼 클라이언트에 반환합니다.</target>
        </trans-unit>
        <trans-unit id="665505f3f1914cbefd9e1181122f18bac8228565" translate="yes" xml:space="preserve">
          <source>In the former case, the directives between the start and end markers are only processed if a directive of the given name is available at the time of processing. The second format reverses the test, and only processes the directives if &lt;var&gt;directive-name&lt;/var&gt; is &lt;strong&gt;not&lt;/strong&gt; available.</source>
          <target state="translated">전자의 경우, 시작 및 종료 마커 사이의 지시문은 처리시 지정된 이름의 지시문을 사용할 수있는 경우에만 처리됩니다. 두 번째 형식은 테스트를 반전하고 경우에만 지시어를 처리 &lt;var&gt;directive-name&lt;/var&gt; 입니다 &lt;strong&gt;하지&lt;/strong&gt; 가능합니다.</target>
        </trans-unit>
        <trans-unit id="9294be38bb571023c8672b38497dc30d5a273b43" translate="yes" xml:space="preserve">
          <source>In the former case, the directives between the start and end markers are only processed if a section directive of the given name is available at the time of processing. The second format reverses the test, and only processes the directives if &lt;var&gt;section-name&lt;/var&gt; is &lt;strong&gt;not&lt;/strong&gt; an available section directive.</source>
          <target state="translated">전자의 경우, 시작 마커와 종료 마커 사이의 지시문은 처리시 지정된 이름의 섹션 지시문을 사용할 수있는 경우에만 처리됩니다. 두 번째 형식은 테스트를 취소하고 &lt;var&gt;section-name&lt;/var&gt; 이 사용 가능한 section 지시문 이 &lt;strong&gt;아닌&lt;/strong&gt; 경우에만 지시문을 처리합니다 .</target>
        </trans-unit>
        <trans-unit id="4e1cea19981ff895355226406c56db1de53df492" translate="yes" xml:space="preserve">
          <source>In the former case, the directives between the start and end markers are only processed if the module named &lt;var&gt;module&lt;/var&gt; is included in Apache httpd -- either compiled in or dynamically loaded using &lt;code&gt;&lt;a href=&quot;mod_so#loadmodule&quot;&gt;LoadModule&lt;/a&gt;&lt;/code&gt;. The second format reverses the test, and only processes the directives if &lt;var&gt;module&lt;/var&gt; is &lt;strong&gt;not&lt;/strong&gt; included.</source>
          <target state="translated">전자의 경우 시작 마커와 종료 마커 사이의 지시문은 module &lt;var&gt;module&lt;/var&gt; 이 Apache httpd에 포함 된 경우에만 로드됩니다 ( &lt;code&gt;&lt;a href=&quot;mod_so#loadmodule&quot;&gt;LoadModule&lt;/a&gt;&lt;/code&gt; 에 컴파일되거나 동적으로로드 됨) . 두 번째 형식은 테스트를 취소하고 &lt;var&gt;module&lt;/var&gt; 이 포함 &lt;strong&gt;되지 않은&lt;/strong&gt; 경우에만 지시문을 처리합니다 .</target>
        </trans-unit>
        <trans-unit id="bd049bbcdeb128550c493dedde0034f9433163df" translate="yes" xml:space="preserve">
          <source>In the former case, the directives between the start and end markers are only processed if the parameter named &lt;var&gt;parameter-name&lt;/var&gt; is defined. The second format reverses the test, and only processes the directives if &lt;var&gt;parameter-name&lt;/var&gt; is &lt;strong&gt;not&lt;/strong&gt; defined.</source>
          <target state="translated">전자의 경우 시작 마커와 종료 마커 사이의 지시문은 &lt;var&gt;parameter-name&lt;/var&gt; 이라는 매개 변수 가 정의 된 경우에만 처리됩니다 . 두 번째 형식은 테스트를 취소하고 &lt;var&gt;parameter-name&lt;/var&gt; 이 정의 &lt;strong&gt;되지 않은&lt;/strong&gt; 경우에만 지시문을 처리합니다 .</target>
        </trans-unit>
        <trans-unit id="674d94c39f1683560d497c2f58da42036ce3b05a" translate="yes" xml:space="preserve">
          <source>In the last example, the proxy will forward FTP requests, encapsulated as yet another HTTP proxy request, to another proxy which can handle them.</source>
          <target state="translated">마지막 예에서 프록시는 또 다른 HTTP 프록시 요청으로 캡슐화 된 FTP 요청을 처리 할 수있는 다른 프록시로 전달합니다.</target>
        </trans-unit>
        <trans-unit id="1372707efc2c398ddd4d11281cc77e0970f8ae71" translate="yes" xml:space="preserve">
          <source>In the latter part of the article, we'll talk about some of the somewhat more advanced things that can be done with SSI, such as conditional statements in your SSI directives.</source>
          <target state="translated">이 기사의 후반부에서는 SSI 지시문의 조건문과 같이 SSI로 수행 할 수있는 고급 기능에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="ec87deb1db93922e2104568dfbc7848b3c7c22e6" translate="yes" xml:space="preserve">
          <source>In the next example, all hosts in the example.org domain are allowed access, except for the hosts which are in the foo.example.org subdomain, who are denied access. All hosts not in the example.org domain are denied access because the default state is to &lt;code&gt;&lt;a href=&quot;#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; access to the server.</source>
          <target state="translated">다음 예에서는 액세스가 거부 된 foo.example.org 하위 도메인에있는 호스트를 제외하고 example.org 도메인의 모든 호스트에 액세스가 허용됩니다. 기본 상태는 서버에 대한 액세스 &lt;code&gt;&lt;a href=&quot;#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; 이므로 example.org 도메인에없는 모든 호스트는 액세스가 거부 됩니다.</target>
        </trans-unit>
        <trans-unit id="53d0eaedde361d2506eb0625ac6887c9cfe839a4" translate="yes" xml:space="preserve">
          <source>In the rare situation where you must download a specific file using the FTP &lt;code&gt;ASCII&lt;/code&gt; transfer method (while the default transfer is in &lt;code&gt;binary&lt;/code&gt; mode), you can override &lt;code&gt;&lt;a href=&quot;mod_proxy&quot;&gt;mod_proxy&lt;/a&gt;&lt;/code&gt;'s default by suffixing the request with &lt;code&gt;;type=a&lt;/code&gt; to force an ASCII transfer. (FTP Directory listings are always executed in ASCII mode, however.)</source>
          <target state="translated">FTP &lt;code&gt;ASCII&lt;/code&gt; 전송 방법을 사용하여 특정 파일을 다운로드해야하는 드문 경우 (기본 전송이 &lt;code&gt;binary&lt;/code&gt; 모드 인 경우) 요청을 &lt;code&gt;;type=a&lt;/code&gt; 로 접미사로하여 &lt;code&gt;&lt;a href=&quot;mod_proxy&quot;&gt;mod_proxy&lt;/a&gt;&lt;/code&gt; 기본값을 재정 의하여 ASCII 전송을 강제 할 수 있습니다. 그러나 FTP 디렉토리 목록은 항상 ASCII 모드로 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="2f23974bc81ae40d635e9364e58c53cd9c7a198d" translate="yes" xml:space="preserve">
          <source>In the second example, we proxy the request only if we can't find the resource locally. This can be very useful when you're migrating from one server to another, and you're not sure if all the content has been migrated yet.</source>
          <target state="translated">두 번째 예에서는 리소스를 로컬에서 찾을 수없는 경우에만 요청을 프록시합니다. 한 서버에서 다른 서버로 마이그레이션 할 때 매우 유용 할 수 있으며 모든 컨텐츠가 아직 마이그레이션되었는지 확실하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c9e1673815243d32021bd18336f6a9e61a11e8f7" translate="yes" xml:space="preserve">
          <source>In the second form, &lt;var&gt;ip.address&lt;/var&gt; is an IP address, a partial IP address, a network/netmask pair, or a network/nnn CIDR specification. Either IPv4 or IPv6 addresses may be used.</source>
          <target state="translated">두 번째 형태에서 &lt;var&gt;ip.address&lt;/var&gt; 는 IP 주소, 부분 IP 주소, 네트워크 / 넷 마스크 쌍 또는 네트워크 / nnn CIDR 사양입니다. IPv4 또는 IPv6 주소를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eee35fac23be70539f72a8f0aafe09c07129a943" translate="yes" xml:space="preserve">
          <source>In the second form, it will insert your own FPI. The optional second argument determines whether SGML/HTML or XML/XHTML syntax will be used.</source>
          <target state="translated">두 번째 양식에서는 자체 FPI를 삽입합니다. 선택적 두 번째 인수는 SGML / HTML 또는 XML / XHTML 구문을 사용할지 여부를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="0bfdf608a58172d0b1194e9669ba4deb98f60aca" translate="yes" xml:space="preserve">
          <source>In the second way the DSO's are usually called &lt;em&gt;shared objects&lt;/em&gt; or &lt;em&gt;DSO files&lt;/em&gt; and can be named with an arbitrary extension (although the canonical name is &lt;code&gt;foo.so&lt;/code&gt;). These files usually stay inside a program-specific directory and there is no automatically established link to the executable program where they are used. Instead the executable program manually loads the DSO at run-time into its address space via &lt;code&gt;dlopen()&lt;/code&gt;. At this time no resolving of symbols from the DSO for the executable program is done. But instead the Unix loader automatically resolves any (yet unresolved) symbols in the DSO from the set of symbols exported by the executable program and its already loaded DSO libraries (especially all symbols from the ubiquitous &lt;code&gt;libc.so&lt;/code&gt;). This way the DSO gets knowledge of the executable program's symbol set as if it had been statically linked with it in the first place.</source>
          <target state="translated">두 번째 방법으로 DSO는 일반적으로 &lt;em&gt;공유 객체&lt;/em&gt; 또는 &lt;em&gt;DSO 파일&lt;/em&gt; 이라고하며 임의의 확장명으로 이름을 지정할 수 있습니다 (정식 이름은 &lt;code&gt;foo.so&lt;/code&gt; 임). 이러한 파일은 일반적으로 프로그램 별 디렉토리에 유지되며 사용되는 실행 프로그램에 자동으로 설정된 링크가 없습니다. 대신 실행 프로그램은 &lt;code&gt;dlopen()&lt;/code&gt; 통해 런타임에 DSO를 주소 공간에 수동으로로드합니다 . 현재 실행 프로그램에 대한 DSO의 심볼 분석은 수행되지 않습니다. 그러나 대신 Unix 로더는 실행 프로그램에서 내 보낸 심볼 세트와 이미로드 된 DSO 라이브러리 (특히 유비쿼터스의 모든 심볼)에서 DSO의 (아직 해결되지 않은) 심볼을 자동으로 확인합니다. &lt;code&gt;libc.so&lt;/code&gt; ). 이런 식으로 DSO는 처음에 정적으로 링크 된 것처럼 실행 가능한 프로그램의 심볼 세트를 알게됩니다.</target>
        </trans-unit>
        <trans-unit id="c088e4c8ff3b9615721bc67eef89f9b04a4474af" translate="yes" xml:space="preserve">
          <source>In the server configuration file, associate files with the &lt;code&gt;send-as-is&lt;/code&gt; handler &lt;em&gt;e.g.&lt;/em&gt;</source>
          <target state="translated">서버 구성 파일에서 파일 &lt;code&gt;send-as-is&lt;/code&gt; 핸들러 &lt;em&gt;예를 들어,&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3b9509d8dc4540fcf4afaf5fc119581939396842" translate="yes" xml:space="preserve">
          <source>In the server configuration file, put</source>
          <target state="translated">서버 구성 파일에서</target>
        </trans-unit>
        <trans-unit id="0f22dae1310638ecf8d7adefb54ed1ce8635d4b6" translate="yes" xml:space="preserve">
          <source>In the server configuration file, use the &lt;code&gt;&lt;a href=&quot;mod_mime#addhandler&quot;&gt;AddHandler&lt;/a&gt;&lt;/code&gt; directive to associate ISAPI files with the &lt;code&gt;isapi-handler&lt;/code&gt; handler, and map it to them with their file extensions. To enable any .dll file to be processed as an ISAPI extension, edit the httpd.conf file and add the following line:</source>
          <target state="translated">서버 구성 파일에서 &lt;code&gt;&lt;a href=&quot;mod_mime#addhandler&quot;&gt;AddHandler&lt;/a&gt;&lt;/code&gt; 지시문을 사용하여 ISAPI 파일을 &lt;code&gt;isapi-handler&lt;/code&gt; 핸들러 와 연관 시키고 파일 확장자로 파일에 맵핑하십시오. .dll 파일을 ISAPI 확장으로 처리하려면 httpd.conf 파일을 편집하고 다음 줄을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="0451d6f83be2cddb287e7a38e02aad92dd658025" translate="yes" xml:space="preserve">
          <source>In the simple example above, a URL has been protected by &lt;code&gt;&lt;a href=&quot;mod_auth_form&quot;&gt;mod_auth_form&lt;/a&gt;&lt;/code&gt;, but the user has yet to be given an opportunity to enter their username and password. Options for doing so include providing a dedicated standalone login page for this purpose, or for providing the login page inline.</source>
          <target state="translated">위의 간단한 예에서, URL은 &lt;code&gt;&lt;a href=&quot;mod_auth_form&quot;&gt;mod_auth_form&lt;/a&gt;&lt;/code&gt; 에 의해 보호 되었지만 사용자는 아직 사용자 이름과 비밀번호를 입력 할 기회를 얻지 못했습니다. 이를위한 옵션에는 이러한 목적으로 전용 독립형 로그인 페이지를 제공하거나 로그인 페이지를 인라인으로 제공하는 것이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="5c2b9b01fbe5bebe76852e1be973f2c23f51ac91" translate="yes" xml:space="preserve">
          <source>In the terminology of Apache HTTP Server, using a single IP address but multiple TCP ports, is also IP-based virtual hosting.</source>
          <target state="translated">Apache HTTP Server의 용어에서 단일 IP 주소를 사용하지만 여러 TCP 포트를 사용하는 것도 IP 기반 가상 호스팅입니다.</target>
        </trans-unit>
        <trans-unit id="041bb2fa38f176afb659a370f3eba29a39fef9b1" translate="yes" xml:space="preserve">
          <source>In the third example, we redirect the request to an image on some other site.</source>
          <target state="translated">세 번째 예에서는 요청을 다른 사이트의 이미지로 리디렉션합니다.</target>
        </trans-unit>
        <trans-unit id="af6ed86a8f8ec31db3156ff7ee5e40b0501a8220" translate="yes" xml:space="preserve">
          <source>In the traditional filtering model, filters are inserted unconditionally using &lt;code&gt;&lt;a href=&quot;mod_mime#addoutputfilter&quot;&gt;AddOutputFilter&lt;/a&gt;&lt;/code&gt; and family. Each filter then needs to determine whether to run, and there is little flexibility available for server admins to allow the chain to be configured dynamically.</source>
          <target state="translated">기존의 필터링 모델에서 &lt;code&gt;&lt;a href=&quot;mod_mime#addoutputfilter&quot;&gt;AddOutputFilter&lt;/a&gt;&lt;/code&gt; 및 제품군을 사용하여 필터를 무조건 삽입 합니다. 그런 다음 각 필터는 실행 여부를 결정해야하며 서버 관리자가 체인을 동적으로 구성 할 수있는 유연성이 거의 없습니다.</target>
        </trans-unit>
        <trans-unit id="ad0c9ca189b82ce1849d901851d7d08f53be7eb0" translate="yes" xml:space="preserve">
          <source>In the traditional model, output filters are a simple chain from the content generator (handler) to the client. This works well provided the filter chain can be correctly configured, but presents problems when the filters need to be configured dynamically based on the outcome of the handler.</source>
          <target state="translated">기존 모델에서 출력 필터는 컨텐츠 생성기 (핸들러)에서 클라이언트로의 간단한 체인입니다. 필터 체인을 올바르게 구성 할 수 있으면 제대로 작동하지만 처리기의 결과에 따라 필터를 동적으로 구성해야하는 경우 문제가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="86635c7fbeec4b0298ba6544b56152b2ae7bf39d" translate="yes" xml:space="preserve">
          <source>In their recent documentation, Microsoft appears to have abandoned the distinction between the two &lt;code&gt;HSE_REQ_SEND_URL&lt;/code&gt; functions. Apache continues to treat them as two distinct functions with different requirements and behaviors.</source>
          <target state="translated">최근 문서에서 Microsoft는 두 &lt;code&gt;HSE_REQ_SEND_URL&lt;/code&gt; 기능 간의 구별을 포기한 것으로 보입니다 . 아파치는 계속해서 그것들을 요구 사항과 행동이 다른 두 개의 별개의 기능으로 취급합니다.</target>
        </trans-unit>
        <trans-unit id="1a9c8907d2b0398bbe5b4434b0dbd02ae2916545" translate="yes" xml:space="preserve">
          <source>In these cases, the proper &lt;code&gt;&lt;a href=&quot;../mod/core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt; should be set in the configuration file.</source>
          <target state="translated">이 경우 구성 파일에서 적절한 &lt;code&gt;&lt;a href=&quot;../mod/core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt; 를 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="7eca4eecf9263883726037d38641bc4ead379ed7" translate="yes" xml:space="preserve">
          <source>In these contexts, two special formats can also be used:</source>
          <target state="translated">이러한 맥락에서 두 가지 특수 형식을 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="4a6d570ac9d2f10423bcc6ee2ce4e25a475d8042" translate="yes" xml:space="preserve">
          <source>In this case, &lt;code&gt;mod_substitute&lt;/code&gt; can be used to rewrite those URLs into something that will work from the front end:</source>
          <target state="translated">이 경우 &lt;code&gt;mod_substitute&lt;/code&gt; 를 사용하여 해당 URL을 프런트 엔드에서 작동하는 URL로 다시 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2a84471d788be506028f1150b0e7f1d014fcba05" translate="yes" xml:space="preserve">
          <source>In this case, a request to &lt;code&gt;/mirror/foo/i&lt;/code&gt; will get proxied, because the &lt;code&gt;ProxyPass&lt;/code&gt; directive in the Location block will be evaluated first. The fact that &lt;code&gt;ProxyPass&lt;/code&gt; supports both server and directory contexts does not mean that their scope and position in the configuration file will guarantee any ordering or override.</source>
          <target state="translated">이 경우 Location 블록 의 &lt;code&gt;ProxyPass&lt;/code&gt; 지시문이 먼저 평가 되므로 &lt;code&gt;/mirror/foo/i&lt;/code&gt; 에 대한 요청 이 프록시 됩니다. 사실 &lt;code&gt;ProxyPass&lt;/code&gt; 로는 서버 및 디렉토리 컨텍스트를 지원하는 구성 파일에서의 범위와 위치를 어떤 순서 또는 대체를 보장 할 것이라는 점을 의미하지 않는다.</target>
        </trans-unit>
        <trans-unit id="c1ecac168f35254ad658d142ab61e2ea589a1b4a" translate="yes" xml:space="preserve">
          <source>In this case, browsers with a user-agent string beginning with &lt;code&gt;KnockKnock/2.0&lt;/code&gt; will be allowed access, and all others will be denied.</source>
          <target state="translated">이 경우 &lt;code&gt;KnockKnock/2.0&lt;/code&gt; 으로 시작하는 사용자 에이전트 문자열이있는 브라우저는 액세스가 허용되며 다른 모든 에이전트 는 거부됩니다.</target>
        </trans-unit>
        <trans-unit id="201a37fdc0b0a453489f6a62da6adf2af5b3cf85" translate="yes" xml:space="preserve">
          <source>In this case, the error message should be specific to the particular syntax error that you have committed.</source>
          <target state="translated">이 경우 오류 메시지는 커밋 한 특정 구문 오류와 관련이 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="f624839ca9027cfbe6b1e4bf7ee098057f4b3bbc" translate="yes" xml:space="preserve">
          <source>In this document we discuss the logging modules that are a standard part of the http server.</source>
          <target state="translated">이 문서에서는 http 서버의 표준 부분 인 로깅 모듈에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="eb010a60c97230ef94f287b7fe0cba521cb80049" translate="yes" xml:space="preserve">
          <source>In this document, we attempt to provide enough of a regex vocabulary to get you started, without being overwhelming, in the hope that &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt;s will be scientific formulae, rather than magical incantations.</source>
          <target state="translated">이 문서에서, 우리는 &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; 이 마법의 주술이 아니라 과학적인 공식이 되기를 기대하면서 압도적으로 시작하기에 충분한 정규식 어휘를 제공하려고 시도합니다 .</target>
        </trans-unit>
        <trans-unit id="b74cceabeb689c320ea020e94fe16452a5416b32" translate="yes" xml:space="preserve">
          <source>In this example the file provider will attempt to authenticate the user first. If it is unable to authenticate the user, the LDAP provider will be called. This allows the scope of authentication to be broadened if your organization implements more than one type of authentication store. Other authentication and authorization scenarios may include mixing one type of authentication with a different type of authorization. For example, authenticating against a password file yet authorizing against an LDAP directory.</source>
          <target state="translated">이 예에서 파일 공급자는 먼저 사용자 인증을 시도합니다. 사용자를 인증 할 수 없으면 LDAP 제공자가 호출됩니다. 따라서 조직에서 여러 유형의 인증 저장소를 구현하는 경우 인증 범위가 넓어 질 수 있습니다. 다른 인증 및 권한 부여 시나리오에는 한 가지 유형의 인증을 다른 유형의 권한 부여와 혼합하는 것이 포함될 수 있습니다. 예를 들어, 비밀번호 파일에 대해 인증하면서 LDAP 디렉토리에 대해서는 인증합니다.</target>
        </trans-unit>
        <trans-unit id="62fd44223f7ebf158f7e8880a38a090e5f613e09" translate="yes" xml:space="preserve">
          <source>In this example, a request for &lt;code&gt;/test/1234&lt;/code&gt; would be transformed into &lt;code&gt;/admin.foo?page=test&amp;amp;id=1234&amp;amp;host=admin.example.com&lt;/code&gt;.</source>
          <target state="translated">이 예에서 &lt;code&gt;/test/1234&lt;/code&gt; 에 대한 요청은 &lt;code&gt;/admin.foo?page=test&amp;amp;id=1234&amp;amp;host=admin.example.com&lt;/code&gt; 으로 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="1b326b2ab5b64b878394a040cffe9db48dae33ba" translate="yes" xml:space="preserve">
          <source>In this example, as contrasted to the &lt;a href=&quot;#old-to-new-intern&quot;&gt;internal&lt;/a&gt; example above, we can simply use the Redirect directive. mod_rewrite was used in that earlier example in order to hide the redirect from the client:</source>
          <target state="translated">이 예제에서는 위 의 &lt;a href=&quot;#old-to-new-intern&quot;&gt;내부&lt;/a&gt; 예제 와 달리 Redirect 지시문을 사용할 수 있습니다. 클라이언트에서 리디렉션을 숨기려면 이전 예제에서 mod_rewrite를 사용했습니다.</target>
        </trans-unit>
        <trans-unit id="dc82b4125b2c46da46094f6c9950818e650079b0" translate="yes" xml:space="preserve">
          <source>In this example, requests for files with a MIME content type of &lt;code&gt;image/gif&lt;/code&gt; will be handled by the specified cgi script &lt;code&gt;/cgi-bin/images.cgi&lt;/code&gt;.</source>
          <target state="translated">이 예에서 MIME 내용 유형이 &lt;code&gt;image/gif&lt;/code&gt; 인 파일 요청 은 지정된 cgi 스크립트 &lt;code&gt;/cgi-bin/images.cgi&lt;/code&gt; 에 의해 처리됩니다 .</target>
        </trans-unit>
        <trans-unit id="e7ae4cb5b93cb4ffc0c441e69fa5eaa398122e0d" translate="yes" xml:space="preserve">
          <source>In this example, requests for files with a file extension of &lt;code&gt;.xyz&lt;/code&gt; are handled by the specified cgi script &lt;code&gt;/cgi-bin/program.cgi&lt;/code&gt;.</source>
          <target state="translated">이 예에서 파일 확장자가 &lt;code&gt;.xyz&lt;/code&gt; 인 파일에 대한 요청 은 지정된 cgi 스크립트 &lt;code&gt;/cgi-bin/program.cgi&lt;/code&gt; 에 의해 처리됩니다 .</target>
        </trans-unit>
        <trans-unit id="dc078aa8eb489bcf02031a8fb0aff5573827ad37" translate="yes" xml:space="preserve">
          <source>In this example, the domain 'www.example.org' is automatically added to the MD 'example.org'. Similarly for 'example2.org' where 'auto' is configured explicitly. Whenever you add more ServerAlias names to this virtual host, they will be added as well to the Managed Domain.</source>
          <target state="translated">이 예에서 도메인 'www.example.org'는 MD 'example.org'에 자동으로 추가됩니다. 'auto'가 명시 적으로 구성된 'example2.org'와 유사합니다. 이 가상 호스트에 더 많은 ServerAlias ​​이름을 추가 할 때마다 관리 도메인에도 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="74072832a10b07f84b64d936698e8e9f12a9a6eb" translate="yes" xml:space="preserve">
          <source>In this example, the httpd is able to send the HTTP response header and the requested file with a single &lt;code&gt;sendfilev(2)&lt;/code&gt; system call. Sendfile semantics vary among operating systems. On some other systems, it is necessary to do a &lt;code&gt;write(2)&lt;/code&gt; or &lt;code&gt;writev(2)&lt;/code&gt; call to send the headers before calling &lt;code&gt;sendfile(2)&lt;/code&gt;.</source>
          <target state="translated">이 예제에서 httpd는 단일 &lt;code&gt;sendfilev(2)&lt;/code&gt; 시스템 호출로 HTTP 응답 헤더와 요청 된 파일을 보낼 수 있습니다. Sendfile 의미는 운영 체제마다 다릅니다. 다른 시스템에서, 할 필요가 &lt;code&gt;write(2)&lt;/code&gt; 또는 &lt;code&gt;writev(2)&lt;/code&gt; 호출하기 전에 헤더를 보내 전화를 &lt;code&gt;sendfile(2)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1d51e462e264ebf4e27e0c5047ac2121772dbf5c" translate="yes" xml:space="preserve">
          <source>In this example, we are blocking a robot called &lt;code&gt;NameOfBadRobot&lt;/code&gt; from a location &lt;code&gt;/secret/files&lt;/code&gt;. You may also specify an IP address range, if you are trying to block that user agent only from the particular source.</source>
          <target state="translated">이 예에서는 &lt;code&gt;/secret/files&lt;/code&gt; 위치에서 &lt;code&gt;NameOfBadRobot&lt;/code&gt; 이라는 로봇을 차단 합니다 . 특정 소스에서만 해당 사용자 에이전트를 차단하려는 경우 IP 주소 범위를 지정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="3bb7e6a3abe35bf30c4022d83251bcaa6077e891" translate="yes" xml:space="preserve">
          <source>In this example, we pass a fixed username and password to a backend server.</source>
          <target state="translated">이 예에서는 고정 사용자 이름과 비밀번호를 백엔드 서버에 전달합니다.</target>
        </trans-unit>
        <trans-unit id="87d8f982a049673d48aea63055c761663d17b653" translate="yes" xml:space="preserve">
          <source>In this example, we pass the email address extracted from a client certificate, extending the functionality of the FakeBasicAuth option within the &lt;code&gt;&lt;a href=&quot;mod_ssl#ssloptions&quot;&gt;SSLOptions&lt;/a&gt;&lt;/code&gt; directive. Like the FakeBasicAuth option, the password is set to the fixed string &quot;password&quot;.</source>
          <target state="translated">이 예에서는 클라이언트 인증서에서 추출 된 전자 메일 주소를 전달하여 &lt;code&gt;&lt;a href=&quot;mod_ssl#ssloptions&quot;&gt;SSLOptions&lt;/a&gt;&lt;/code&gt; 지시문 내에서 FakeBasicAuth 옵션의 기능을 확장합니다 . FakeBasicAuth 옵션과 마찬가지로 암호는 고정 문자열 &quot;password&quot;로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="7fb10a87cb2208a123bac01957a26202194f5208" translate="yes" xml:space="preserve">
          <source>In this first example, we simply deny the request, if it didn't initiate from a page on our site. For the purpose of this example, we assume that our site is &lt;code&gt;www.example.com&lt;/code&gt;.</source>
          <target state="translated">이 첫 번째 예에서는 사이트의 페이지에서 요청이 시작되지 않은 경우 요청을 거부합니다. 이 예의 목적을 위해 우리는 &lt;code&gt;www.example.com&lt;/code&gt; 사이트라고 가정합니다 .</target>
        </trans-unit>
        <trans-unit id="27a57a712c1e1c6e57c0a564c4ec1ab15cdc21f4" translate="yes" xml:space="preserve">
          <source>In this mode, &lt;code&gt;FCGI_ROLE&lt;/code&gt; is set to &lt;code&gt;AUTHORIZER&lt;/code&gt; and &lt;code&gt;FCGI_APACHE_ROLE&lt;/code&gt; is set to &lt;code&gt;AUTHENTICATOR&lt;/code&gt;. The application must be defined as provider type &lt;em&gt;authn&lt;/em&gt; using &lt;code&gt;&lt;a href=&quot;#authnzfcgidefineprovider&quot;&gt; AuthnzFcgiDefineProvider&lt;/a&gt;&lt;/code&gt; and enabled with &lt;code&gt;&lt;a href=&quot;mod_auth_basic#authbasicprovider&quot;&gt;AuthBasicProvider&lt;/a&gt;&lt;/code&gt;. When invoked, the application is expected to authenticate the client using the provided user id and password. Example application:</source>
          <target state="translated">이 모드에서 &lt;code&gt;FCGI_ROLE&lt;/code&gt; 은 &lt;code&gt;AUTHORIZER&lt;/code&gt; 로 설정 되고 &lt;code&gt;FCGI_APACHE_ROLE&lt;/code&gt; 은 &lt;code&gt;AUTHENTICATOR&lt;/code&gt; 로 설정됩니다 . 애플리케이션은 &lt;code&gt;&lt;a href=&quot;#authnzfcgidefineprovider&quot;&gt; AuthnzFcgiDefineProvider&lt;/a&gt;&lt;/code&gt; 를 사용 하여 제공자 유형 &lt;em&gt;authn&lt;/em&gt; 으로 정의되고 &lt;code&gt;&lt;a href=&quot;mod_auth_basic#authbasicprovider&quot;&gt;AuthBasicProvider&lt;/a&gt;&lt;/code&gt; 를 사용하여 활성화되어야 합니다. 호출되면 응용 프로그램은 제공된 사용자 ID 및 비밀번호를 사용하여 클라이언트를 인증해야합니다. 적용 예 :</target>
        </trans-unit>
        <trans-unit id="2f88dbc93e24cc89acc8bf0f85a4d8e1210c16d0" translate="yes" xml:space="preserve">
          <source>In this mode, &lt;code&gt;FCGI_ROLE&lt;/code&gt; is set to &lt;code&gt;AUTHORIZER&lt;/code&gt; and &lt;code&gt;FCGI_APACHE_ROLE&lt;/code&gt; is set to &lt;code&gt;AUTHENTICATOR&lt;/code&gt;. The application must be defined as provider type &lt;em&gt;authn&lt;/em&gt; using &lt;code&gt;&lt;a href=&quot;#authnzfcgidefineprovider&quot;&gt; AuthnzFcgiDefineProvider&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;&lt;a href=&quot;#authnzfcgicheckauthnprovider&quot;&gt;AuthnzFcgiCheckAuthnProvider&lt;/a&gt;&lt;/code&gt; specifies when it is called. Example application:</source>
          <target state="translated">이 모드에서 &lt;code&gt;FCGI_ROLE&lt;/code&gt; 은 &lt;code&gt;AUTHORIZER&lt;/code&gt; 로 설정 되고 &lt;code&gt;FCGI_APACHE_ROLE&lt;/code&gt; 은 &lt;code&gt;AUTHENTICATOR&lt;/code&gt; 로 설정됩니다 . 애플리케이션은 &lt;code&gt;&lt;a href=&quot;#authnzfcgidefineprovider&quot;&gt; AuthnzFcgiDefineProvider&lt;/a&gt;&lt;/code&gt; 를 사용하여 제공자 유형 &lt;em&gt;authn&lt;/em&gt; 으로 정의되어야합니다 . &lt;code&gt;&lt;a href=&quot;#authnzfcgicheckauthnprovider&quot;&gt;AuthnzFcgiCheckAuthnProvider&lt;/a&gt;&lt;/code&gt; 는 호출 시기를 지정합니다. 적용 예 :</target>
        </trans-unit>
        <trans-unit id="a355d5d14e661e37316e5c2ae9f3aeead9b508d9" translate="yes" xml:space="preserve">
          <source>In this mode, &lt;code&gt;FCGI_ROLE&lt;/code&gt; is set to &lt;code&gt;AUTHORIZER&lt;/code&gt; and &lt;code&gt;FCGI_APACHE_ROLE&lt;/code&gt; is set to &lt;code&gt;AUTHORIZER&lt;/code&gt;. The application must be defined as provider type &lt;em&gt;authz&lt;/em&gt; using &lt;code&gt;&lt;a href=&quot;#authnzfcgidefineprovider&quot;&gt; AuthnzFcgiDefineProvider&lt;/a&gt;&lt;/code&gt;. When invoked, the application is expected to authorize the client using the provided user id and other request data. Example application:</source>
          <target state="translated">이 모드에서 &lt;code&gt;FCGI_ROLE&lt;/code&gt; 은 &lt;code&gt;AUTHORIZER&lt;/code&gt; 로 설정 되고 &lt;code&gt;FCGI_APACHE_ROLE&lt;/code&gt; 은 &lt;code&gt;AUTHORIZER&lt;/code&gt; 로 설정됩니다 . 애플리케이션은 &lt;code&gt;&lt;a href=&quot;#authnzfcgidefineprovider&quot;&gt; AuthnzFcgiDefineProvider&lt;/a&gt;&lt;/code&gt; 를 사용하여 제공자 유형 &lt;em&gt;authz&lt;/em&gt; 로 정의되어야합니다 . 호출되면 응용 프로그램은 제공된 사용자 ID 및 기타 요청 데이터를 사용하여 클라이언트에 권한을 부여해야합니다. 적용 예 :</target>
        </trans-unit>
        <trans-unit id="e2777994ae73785cd20b3f91647c6c6ec7e0d875" translate="yes" xml:space="preserve">
          <source>In this mode, the cache &lt;strong&gt;bolts onto&lt;/strong&gt; the front of the server, acting as if a free standing RFC 2616 caching proxy had been placed in front of the server.</source>
          <target state="translated">이 모드에서 캐시 는 서버 전면에 &lt;strong&gt;볼트로 연결&lt;/strong&gt; 되어 독립형 RFC 2616 캐싱 프록시가 서버 전면에 배치 된 것처럼 작동합니다.</target>
        </trans-unit>
        <trans-unit id="a1df8aa9c5282cbf88fea36f55ec9fb26659f893" translate="yes" xml:space="preserve">
          <source>In this mode, which supports the web server-agnostic FastCGI &lt;code&gt;AUTHORIZER&lt;/code&gt; protocol, &lt;code&gt;FCGI_ROLE&lt;/code&gt; is set to &lt;code&gt;AUTHORIZER&lt;/code&gt; and &lt;code&gt;FCGI_APACHE_ROLE&lt;/code&gt; is not set. The application must be defined as provider type &lt;em&gt;authnz&lt;/em&gt; using &lt;code&gt;&lt;a href=&quot;#authnzfcgidefineprovider&quot;&gt; AuthnzFcgiDefineProvider&lt;/a&gt;&lt;/code&gt;. The application is expected to handle both authentication and authorization in the same invocation using the user id, password, and other request data. The invocation occurs during the Apache httpd API authentication phase. If the application returns 200 and the same provider is invoked during the authorization phase (via &lt;code&gt;Require&lt;/code&gt;), mod_authnz_fcgi will return success for the authorization phase without invoking the application. Example application:</source>
          <target state="translated">웹 서버에 얽매이지 FastCGI를 지원하는이 모드에서는 &lt;code&gt;AUTHORIZER&lt;/code&gt; 프로토콜을 &lt;code&gt;FCGI_ROLE&lt;/code&gt; 이 설정되어 &lt;code&gt;AUTHORIZER&lt;/code&gt; 및 &lt;code&gt;FCGI_APACHE_ROLE&lt;/code&gt; 가 설정되어 있지 않습니다. 응용 프로그램은 공급자 유형으로 정의되어야합니다 &lt;em&gt;authnz&lt;/em&gt; 사용 &lt;code&gt;&lt;a href=&quot;#authnzfcgidefineprovider&quot;&gt; AuthnzFcgiDefineProvider&lt;/a&gt;&lt;/code&gt; 을 . 애플리케이션은 사용자 ID, 비밀번호 및 기타 요청 데이터를 사용하여 동일한 호출에서 인증 및 권한 부여를 모두 처리해야합니다. Apache httpd API 인증 단계 중에 호출이 발생합니다. 애플리케이션이 200을 리턴하고 권한 부여 단계 동안 ( &lt;code&gt;Require&lt;/code&gt; 를 통해) 동일한 제공자가 호출 된 경우), mod_authnz_fcgi는 응용 프로그램을 호출하지 않고 인증 단계에서 성공을 반환합니다. 적용 예 :</target>
        </trans-unit>
        <trans-unit id="07824d5add858ce633d70fd83a9db60a2ac99a1b" translate="yes" xml:space="preserve">
          <source>In this recipe, we assume that we'll be using the hostname &lt;code&gt;www.SITE.example.com&lt;/code&gt; for each user, and serve their content out of &lt;code&gt;/home/SITE/www&lt;/code&gt;.</source>
          <target state="translated">이 레시피에서는 각 사용자에 대해 호스트 이름 &lt;code&gt;www.SITE.example.com&lt;/code&gt; 을 사용하고 &lt;code&gt;/home/SITE/www&lt;/code&gt; 외부에서 컨텐츠를 제공한다고 가정 합니다.</target>
        </trans-unit>
        <trans-unit id="54e2418d25a51853e435916bf9aa5d5ec8184c5b" translate="yes" xml:space="preserve">
          <source>In this recipe, we discuss how to block persistent requests from a particular robot, or user agent.</source>
          <target state="translated">이 레시피에서는 특정 로봇 또는 사용자 에이전트의 지속적 요청을 차단하는 방법에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="645ddd70d4398fd46db12501940cfae5e9ae7b84" translate="yes" xml:space="preserve">
          <source>In this scenario all files requested in &lt;code&gt;/cgi-bin/&lt;/code&gt; will be handled by the file you have configured, this allows you to use your own custom handler. You may want to use this as a wrapper for CGI so that you can add content, or some other bespoke action.</source>
          <target state="translated">이 시나리오에서 &lt;code&gt;/cgi-bin/&lt;/code&gt; 요청 된 모든 파일 은 구성한 파일에 의해 처리되므로 사용자 정의 처리기를 사용할 수 있습니다. 콘텐츠를 추가하거나 다른 맞춤형 작업을 수행 할 수 있도록이를 CGI의 래퍼로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="819dd428bcdc345970b8ad15a5ed515a56bb8ba4" translate="yes" xml:space="preserve">
          <source>In this scenario, &lt;code&gt;http://www.example.com/&lt;/code&gt; is health checked by sending a &lt;code&gt;GET /status.php&lt;/code&gt; request to that server and seeing that the returned page does not include the string &lt;em&gt;Under maintenance&lt;/em&gt;. If it does, that server is put in health-check fail mode, and disabled. This dynamic check is performed every 30 seconds, which is the default.</source>
          <target state="translated">이 시나리오에서 &lt;code&gt;http://www.example.com/&lt;/code&gt; 은 해당 서버에 &lt;code&gt;GET /status.php&lt;/code&gt; 요청을 전송 하고 리턴 된 페이지에 &lt;em&gt;유지 보수&lt;/em&gt; 중 문자열이 포함되어 있지 않은지 확인하여 상태를 점검합니다 . 이 경우 해당 서버는 상태 확인 실패 모드가되며 비활성화됩니다. 이 동적 검사는 30 초마다 수행되며 이것이 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="0bcdf5b48d6c8fcb1c0c0236a490e008ca41c3d3" translate="yes" xml:space="preserve">
          <source>In this scenario, the cache behaves as if it has been &quot;bolted on&quot; to the back of the server.</source>
          <target state="translated">이 시나리오에서 캐시는 마치 서버 후면에 &quot;볼트 된&quot;것처럼 작동합니다.</target>
        </trans-unit>
        <trans-unit id="b29ddb25e9435785b8c6b449418ff365ec1875b8" translate="yes" xml:space="preserve">
          <source>In this scenario, the cache behaves as if it has been &quot;bolted on&quot; to the front of the server.</source>
          <target state="translated">이 시나리오에서 캐시는 마치 서버 전면에서 &quot;볼트 된&quot;것처럼 동작합니다.</target>
        </trans-unit>
        <trans-unit id="2dd6166bfd0e409724bdedae14c5a951806c21dd" translate="yes" xml:space="preserve">
          <source>In this second example, instead of failing the request, we display an alternate image instead.</source>
          <target state="translated">이 두 번째 예에서는 요청을 실패하는 대신 대체 이미지를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="ff3ae4281c6f6e26dc13dcce73e9de5150ac897b" translate="yes" xml:space="preserve">
          <source>In this trace, a client has requested a 10KB static file from the httpd. Traces of non-static requests or requests with content negotiation look wildly different (and quite ugly in some cases).</source>
          <target state="translated">이 추적에서 클라이언트는 httpd에서 10KB 정적 파일을 요청했습니다. 정적이 아닌 요청 또는 내용 협상이있는 요청의 흔적은 크게 다르게 보입니다 (일부 경우에는 매우 추악함).</target>
        </trans-unit>
        <trans-unit id="02d20292d1efb7e80bb2830657bef9c667c0b773" translate="yes" xml:space="preserve">
          <source>In this trace, the listener thread is running within LWP #67.</source>
          <target state="translated">이 추적에서 리스너 스레드는 LWP # 67 내에서 실행 중입니다.</target>
        </trans-unit>
        <trans-unit id="c41030c7b07546ebdaa9a18c35f76fc92f756d1d" translate="yes" xml:space="preserve">
          <source>In this way, documents that are infrequently updated can be served in static form. if documents need to be refreshed, they can be deleted from the document directory, and they will then be regenerated the next time they are requested.</source>
          <target state="translated">이런 식으로, 자주 업데이트되지 않는 문서는 정적 형식으로 제공 될 수 있습니다. 문서를 새로 고쳐야하는 경우 문서 디렉토리에서 문서를 삭제 한 후 다음에 요청할 때 다시 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="6bc2ec3fcaa7a16479521200d5da5d15aa187ea3" translate="yes" xml:space="preserve">
          <source>In typical operation, Apache is started by the root user, and it switches to the user defined by the &lt;code&gt;&lt;a href=&quot;../mod/mod_unixd#user&quot;&gt;User&lt;/a&gt;&lt;/code&gt; directive to serve hits. As is the case with any command that root executes, you must take care that it is protected from modification by non-root users. Not only must the files themselves be writeable only by root, but so must the directories, and parents of all directories. For example, if you choose to place ServerRoot in &lt;code&gt;/usr/local/apache&lt;/code&gt; then it is suggested that you create that directory as root, with commands like these:</source>
          <target state="translated">일반적인 작업에서 Apache는 루트 사용자가 시작하며 &lt;code&gt;&lt;a href=&quot;../mod/mod_unixd#user&quot;&gt;User&lt;/a&gt;&lt;/code&gt; 지정 문에서 정의한 사용자로 전환하여 적중을 처리합니다. root가 실행하는 명령의 경우와 마찬가지로 root가 아닌 사용자가 수정하지 못하도록주의해야합니다. 파일 자체는 루트만으로 쓸 수 있어야 할뿐만 아니라 모든 디렉토리의 디렉토리와 부모도 있어야합니다. 예를 들어 ServerRoot를 &lt;code&gt;/usr/local/apache&lt;/code&gt; 에 배치하기로 선택한 경우 다음과 같은 명령을 사용하여 해당 디렉토리를 루트로 생성하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="25c66429b8ac221feef28ca30aebe876b9b4b7fe" translate="yes" xml:space="preserve">
          <source>In your server configuration file, you'll see a line such as:</source>
          <target state="translated">서버 구성 파일에는 다음과 같은 줄이 있습니다.</target>
        </trans-unit>
        <trans-unit id="6a1114721ce15ed35f16a82f7e242f54e257849e" translate="yes" xml:space="preserve">
          <source>In-Depth Discussion of Virtual Host Matching</source>
          <target state="translated">가상 호스트 일치에 대한 심층 토론</target>
        </trans-unit>
        <trans-unit id="dc56364317cf88f74596613a331ab9866894ec05" translate="yes" xml:space="preserve">
          <source>In-Memory Caching</source>
          <target state="translated">인 메모리 캐싱</target>
        </trans-unit>
        <trans-unit id="88713e02eb04f142ad5a4309f90cadfce4e07705" translate="yes" xml:space="preserve">
          <source>Include &lt;var&gt;FEATURE&lt;/var&gt;. The default value for &lt;var&gt;ARG&lt;/var&gt; is &lt;code&gt;yes&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;FEATURE&lt;/var&gt; 포함 . &lt;var&gt;ARG&lt;/var&gt; 의 기본값 은 &lt;code&gt;yes&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f461d3ca7d12a08d907beea3284b66b61e324789" translate="yes" xml:space="preserve">
          <source>Include Directive</source>
          <target state="translated">지시어 포함</target>
        </trans-unit>
        <trans-unit id="0537d7dfb2f6436ddb848c19841e34bf47adf2ad" translate="yes" xml:space="preserve">
          <source>Include Variables</source>
          <target state="translated">변수 포함</target>
        </trans-unit>
        <trans-unit id="aa2f30a34bc4d7847696c0adfea923e5d9c322bd" translate="yes" xml:space="preserve">
          <source>Include the provider you're cacheing for in an &lt;code&gt;AuthnCacheProvideFor&lt;/code&gt; directive.</source>
          <target state="translated">&lt;code&gt;AuthnCacheProvideFor&lt;/code&gt; 하려는 제공자를 AuthnCacheProvideFor 지시문에 포함하십시오.</target>
        </trans-unit>
        <trans-unit id="beca8e894fe113f1a53b75e0e51d6f072bfc985f" translate="yes" xml:space="preserve">
          <source>IncludeOptional Directive</source>
          <target state="translated">선택적 지시문 포함</target>
        </trans-unit>
        <trans-unit id="a2f06e3b6ff40817d88f03cf87f7c344647d48d1" translate="yes" xml:space="preserve">
          <source>Includes other configuration files from within the server configuration files</source>
          <target state="translated">서버 구성 파일 내에서 다른 구성 파일을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="f74f0dbf400d3ae05a3b7f43b899ad122211bda0" translate="yes" xml:space="preserve">
          <source>Including a standard footer</source>
          <target state="translated">표준 바닥 글 포함</target>
        </trans-unit>
        <trans-unit id="0cc9ab92f6f5677021de486d6b660f0611bb0ffb" translate="yes" xml:space="preserve">
          <source>Including the results of a CGI program</source>
          <target state="translated">CGI 프로그램 결과 포함</target>
        </trans-unit>
        <trans-unit id="a1496da1d37865b9a22c43fda76935a6ed2360ed" translate="yes" xml:space="preserve">
          <source>Incremental IndexOptions</source>
          <target state="translated">증분 색인 옵션</target>
        </trans-unit>
        <trans-unit id="c2df9b932637fe9d32a0f16da1c11873398f873d" translate="yes" xml:space="preserve">
          <source>Index</source>
          <target state="translated">Index</target>
        </trans-unit>
        <trans-unit id="5da36416d25b61717641ed315af5a7d3ffda7dbe" translate="yes" xml:space="preserve">
          <source>IndexHeadInsert</source>
          <target state="translated">IndexHeadInsert</target>
        </trans-unit>
        <trans-unit id="0f7a5901a9e1a7c51f959e216002fe706896538a" translate="yes" xml:space="preserve">
          <source>IndexHeadInsert Directive</source>
          <target state="translated">IndexHeadInsert 지시어</target>
        </trans-unit>
        <trans-unit id="e58018f7e781e663b99b91610ea61fec915deac6" translate="yes" xml:space="preserve">
          <source>IndexIgnore</source>
          <target state="translated">IndexIgnore</target>
        </trans-unit>
        <trans-unit id="b3eb03ebfb8feb898db19c7eef8e21f199452fed" translate="yes" xml:space="preserve">
          <source>IndexIgnore Directive</source>
          <target state="translated">지시어 무시</target>
        </trans-unit>
        <trans-unit id="7cbe5a165cb98bb0e114df71fea7a4b5aa683ced" translate="yes" xml:space="preserve">
          <source>IndexIgnoreReset</source>
          <target state="translated">IndexIgnoreReset</target>
        </trans-unit>
        <trans-unit id="fa04e8c9ee5024e9b4460491bc506131fccab762" translate="yes" xml:space="preserve">
          <source>IndexIgnoreReset Directive</source>
          <target state="translated">IndexIgnoreReset 지시어</target>
        </trans-unit>
        <trans-unit id="fe526a0619b76be9ac38f677e9cc84a5336f9948" translate="yes" xml:space="preserve">
          <source>IndexOptions</source>
          <target state="translated">IndexOptions</target>
        </trans-unit>
        <trans-unit id="f58ef343dbeeccc0875d1edb7cd13e7a6a938f20" translate="yes" xml:space="preserve">
          <source>IndexOptions Directive</source>
          <target state="translated">IndexOptions 지시어</target>
        </trans-unit>
        <trans-unit id="5d86ae44bf6726eae8a9dc72b10dc46bed0b6d70" translate="yes" xml:space="preserve">
          <source>IndexOrderDefault</source>
          <target state="translated">IndexOrderDefault</target>
        </trans-unit>
        <trans-unit id="b2b042a78462b941921fdbe199b0e3fc533f504c" translate="yes" xml:space="preserve">
          <source>IndexOrderDefault Directive</source>
          <target state="translated">IndexOrderDefault 지시어</target>
        </trans-unit>
        <trans-unit id="44e7d881985bda03f6c61c01d6c1981377f790f3" translate="yes" xml:space="preserve">
          <source>IndexStyleSheet</source>
          <target state="translated">IndexStyleSheet</target>
        </trans-unit>
        <trans-unit id="536e7f5b206da5653b7b677a94f00e7542c71b9e" translate="yes" xml:space="preserve">
          <source>IndexStyleSheet Directive</source>
          <target state="translated">IndexStyleSheet 지시어</target>
        </trans-unit>
        <trans-unit id="f642ee196088372ea886186c6c617515599afd3f" translate="yes" xml:space="preserve">
          <source>Indexes</source>
          <target state="translated">Indexes</target>
        </trans-unit>
        <trans-unit id="aea5a35644a6038ea4b9ed3fbbbdbb7d894a875b" translate="yes" xml:space="preserve">
          <source>Individual directives that are allowed in &lt;code&gt;.htaccess&lt;/code&gt; files</source>
          <target state="translated">&lt;code&gt;.htaccess&lt;/code&gt; 파일 에서 허용되는 개별 지시문</target>
        </trans-unit>
        <trans-unit id="f37500a23d3203eed506ce9901ac4b574d1e9f98" translate="yes" xml:space="preserve">
          <source>Inevitably, URLs will be requested for which no matching file can be found in the filesystem. This can happen for several reasons. In some cases, it can be a result of moving documents from one location to another. In this case, it is best to use &lt;a href=&quot;#redirect&quot;&gt;URL redirection&lt;/a&gt; to inform clients of the new location of the resource. In this way, you can assure that old bookmarks and links will continue to work, even though the resource is at a new location.</source>
          <target state="translated">필연적으로, 파일 시스템에서 일치하는 파일을 찾을 수없는 URL이 요청됩니다. 여러 가지 이유로 발생할 수 있습니다. 경우에 따라 문서를 한 위치에서 다른 위치로 이동 한 결과 일 수 있습니다. 이 경우 &lt;a href=&quot;#redirect&quot;&gt;URL 리디렉션&lt;/a&gt; 을 사용하여 클라이언트에게 리소스의 새로운 위치를 알리는 것이 가장 좋습니다 . 이러한 방식으로 리소스가 새로운 위치에 있더라도 이전 책갈피 및 링크가 계속 작동하도록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fa9dbeb9939842bde9307c90e385dafa26993e97" translate="yes" xml:space="preserve">
          <source>Influenced by &lt;code&gt;&lt;a href=&quot;core#limit&quot;&gt;&amp;lt;Limit&amp;gt;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;core#limitexcept&quot;&gt;&amp;lt;LimitExcept&amp;gt;&lt;/a&gt;&lt;/code&gt; in version 2.0.51 and later</source>
          <target state="translated">버전 2.0.51 이상에서 &lt;code&gt;&lt;a href=&quot;core#limit&quot;&gt;&amp;lt;Limit&amp;gt;&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;core#limitexcept&quot;&gt;&amp;lt;LimitExcept&amp;gt;&lt;/a&gt;&lt;/code&gt; 의 영향</target>
        </trans-unit>
        <trans-unit id="0eb5ed506e4923c28d7f4a8aa69efe99b3ad75d1" translate="yes" xml:space="preserve">
          <source>Information</source>
          <target state="translated">Information</target>
        </trans-unit>
        <trans-unit id="bb20a906b4528032bee3f0ed17eea35f75173c3e" translate="yes" xml:space="preserve">
          <source>Information on &lt;a href=&quot;../mod/mod_so#creating&quot;&gt;creating loadable modules&lt;/a&gt; is also available.</source>
          <target state="translated">&lt;a href=&quot;../mod/mod_so#creating&quot;&gt;로드 가능한 모듈 작성&lt;/a&gt; 에 대한 정보 도 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="94554924bfd63dd62927553b3e660b70fb0083d0" translate="yes" xml:space="preserve">
          <source>Information on the latest version of Apache can be found on the Apache web server at &lt;a href=&quot;http://www.apache.org/&quot;&gt;http://www.apache.org/&lt;/a&gt;. This will list the current release, any more recent alpha or beta-test releases, together with details of mirror web and anonymous ftp sites. Binary builds of the latest releases of Apache 2.0 for NetWare can be downloaded from &lt;a href=&quot;http://www.apache.org/dist/httpd/binaries/netware&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">최신 버전의 Apache에 대한 정보는 Apache 웹 서버 ( &lt;a href=&quot;http://www.apache.org/&quot;&gt;http://www.apache.org/)&lt;/a&gt; 에서 찾을 수 있습니다 . 미러 웹 및 익명 ftp 사이트의 세부 정보와 함께 현재 릴리스, 최신 알파 또는 베타 테스트 릴리스가 나열됩니다. NetWare 용 최신 Apache 2.0의 바이너리 빌드는 &lt;a href=&quot;http://www.apache.org/dist/httpd/binaries/netware&quot;&gt;여기&lt;/a&gt; 에서 다운로드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4715201bec57d0115416cafeba39925788d5a06c" translate="yes" xml:space="preserve">
          <source>Information provided in the &lt;code&gt;Via&lt;/code&gt; HTTP response header for proxied requests</source>
          <target state="translated">프록시 요청을 위해 &lt;code&gt;Via&lt;/code&gt; HTTP 응답 헤더에 제공된 정보</target>
        </trans-unit>
        <trans-unit id="31405a1a8929a8c848e159aba889f1e3aea9d103" translate="yes" xml:space="preserve">
          <source>Informational.</source>
          <target state="translated">Informational.</target>
        </trans-unit>
        <trans-unit id="e7ffa9bcc2ed87aaf2d994005ff09e7c967c1838" translate="yes" xml:space="preserve">
          <source>Inherit ProxyPass directives defined from the main server</source>
          <target state="translated">기본 서버에서 정의 된 ProxyPass 지시문 상속</target>
        </trans-unit>
        <trans-unit id="92388d95dbb28857a5272d28c6b24c0ec1a3774a" translate="yes" xml:space="preserve">
          <source>Inherit ProxyPassed Balancers/Workers from the main server</source>
          <target state="translated">메인 서버에서 ProxyPassed Balancer / Worker 상속</target>
        </trans-unit>
        <trans-unit id="dcb49b8402c085d502915ad3e2fc19353eace148" translate="yes" xml:space="preserve">
          <source>Initial caching of an entry</source>
          <target state="translated">엔트리의 초기 캐싱</target>
        </trans-unit>
        <trans-unit id="8d29ba448e9a76e6a06128a533f22bf2789968ba" translate="yes" xml:space="preserve">
          <source>Initial or Resumed SSL Session. Note: multiple requests may be served over the same (Initial or Resumed) SSL session if HTTP KeepAlive is in use</source>
          <target state="translated">초기 또는 재개 된 SSL 세션. 참고 : HTTP KeepAlive를 사용중인 경우 동일한 (초기 또는 재개) SSL 세션을 통해 여러 요청이 제공 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9a95658cbf3576faa430a90c286fe7f1820b120b" translate="yes" xml:space="preserve">
          <source>Initialize the cache. The cname must be of maximum length 16 characters, and uniquely identifies the consumer of the cache within the server; using the module name is recommended, e.g. &quot;mod_ssl-sess&quot;. This string may be used within a filesystem path so use of only alphanumeric [a-z0-9_-] characters is recommended. If hints is non-NULL, it gives a set of hints for the provider. Return APR error code.</source>
          <target state="translated">캐시를 초기화하십시오. cname은 최대 16 자 여야하며 서버 내에서 캐시 소비자를 고유하게 식별합니다. &quot;mod_ssl-sess&quot;와 같은 모듈 이름을 사용하는 것이 좋습니다. 이 문자열은 파일 시스템 경로 내에서 사용될 수 있으므로 영숫자 [a-z0-9_-] 문자 만 사용하는 것이 좋습니다. 힌트가 NULL이 아닌 경우, 제공자에게 힌트 세트를 제공합니다. APR 오류 코드를 반환하십시오.</target>
        </trans-unit>
        <trans-unit id="86895df783eef6d42a7638aab5d419c0ebe6a182" translate="yes" xml:space="preserve">
          <source>Inline Login</source>
          <target state="translated">인라인 로그인</target>
        </trans-unit>
        <trans-unit id="f2ccc04104520c4ec96f916bc2af0e8614eff2c2" translate="yes" xml:space="preserve">
          <source>Inline Login with Body Preservation</source>
          <target state="translated">신체 보존을 통한 인라인 로그인</target>
        </trans-unit>
        <trans-unit id="7688a604fb2f68c037f91f852daa6253aab53c8b" translate="yes" xml:space="preserve">
          <source>Input Decompression</source>
          <target state="translated">입력 감압</target>
        </trans-unit>
        <trans-unit id="915144f5d82b087dc1d6d63ef13ea1fb8ac6dccc" translate="yes" xml:space="preserve">
          <source>Input file from which the dbm is to be created. The file should be formated with one record per line, of the form: &lt;code&gt;key value&lt;/code&gt;. See the documentation for &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewritemap&quot;&gt;RewriteMap&lt;/a&gt;&lt;/code&gt; for further details of this file's format and meaning.</source>
          <target state="translated">dbm이 작성 될 입력 파일입니다. 파일은 &lt;code&gt;key value&lt;/code&gt; 형식으로 한 줄에 하나의 레코드로 형식화되어야합니다 . 이 파일의 형식과 의미에 대한 자세한 내용은 &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewritemap&quot;&gt;RewriteMap&lt;/a&gt;&lt;/code&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="12a0928ba0ac43bff0878d271fd3f7adf2c7113c" translate="yes" xml:space="preserve">
          <source>InputSed Directive</source>
          <target state="translated">InputSed 지시어</target>
        </trans-unit>
        <trans-unit id="6f48b508fe7f7aadd73bd38182a3e4c277f45b3e" translate="yes" xml:space="preserve">
          <source>Insert &lt;var&gt;filter-name&lt;/var&gt; at the start of the filter chain</source>
          <target state="translated">필터 체인의 시작 부분에 필터 &lt;var&gt;filter-name&lt;/var&gt; 을 삽입하십시오</target>
        </trans-unit>
        <trans-unit id="41814aef32ab12845d320fc0a5dfa31e4e23e591" translate="yes" xml:space="preserve">
          <source>Insert INFLATE filter only if &quot;gzip&quot; is NOT in the Accept-Encoding header. This filter runs with ftype CONTENT_SET.</source>
          <target state="translated">&quot;gzip&quot;이 Accept-Encoding 헤더에없는 경우에만 INFLATE 필터를 삽입하십시오. 이 필터는 ftype CONTENT_SET으로 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="bebb658d8064779630693e250eca0d19de5f8835" translate="yes" xml:space="preserve">
          <source>Inserts text in the HEAD section of an index page.</source>
          <target state="translated">색인 페이지의 HEAD 섹션에 텍스트를 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="fd6c3ebf7befca9f8208f86c76e4d4180303745c" translate="yes" xml:space="preserve">
          <source>Install</source>
          <target state="translated">Install</target>
        </trans-unit>
        <trans-unit id="31bfb6586e8413e3deba51f7bc2741ca065af3ef" translate="yes" xml:space="preserve">
          <source>Install Apache httpd as a Windows NT service; change startup options for the Apache httpd service; and uninstall the Apache httpd service.</source>
          <target state="translated">Apache httpd를 Windows NT 서비스로 설치하십시오. Apache httpd 서비스의 시작 옵션을 변경합니다. Apache httpd 서비스를 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="3ac72855ee772f26679272dd1e0b4940235d0525" translate="yes" xml:space="preserve">
          <source>Install C header files for non-gcc in &lt;var&gt;DIR&lt;/var&gt;. By default &lt;code&gt;oldincludedir&lt;/code&gt; is set to &lt;code&gt;/usr/include&lt;/code&gt;. This option is offered by &lt;code&gt;autoconf&lt;/code&gt; and currently unused.</source>
          <target state="translated">비 gcc에 대한 C 헤더 파일을 &lt;var&gt;DIR&lt;/var&gt; 에 설치하십시오 . 기본적으로 &lt;code&gt;oldincludedir&lt;/code&gt; 은 &lt;code&gt;/usr/include&lt;/code&gt; 로 설정되어 있습니다 . 이 옵션은 &lt;code&gt;autoconf&lt;/code&gt; 에서 제공 하며 현재 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c53fabaf0b71445ff86503e2b090c67917f362de" translate="yes" xml:space="preserve">
          <source>Install C header files in &lt;var&gt;DIR&lt;/var&gt;. By default &lt;code&gt;includedir&lt;/code&gt; is set to &lt;code&gt;EPREFIX/include&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;DIR&lt;/var&gt; 에 C 헤더 파일을 설치하십시오 . 기본적으로 &lt;code&gt;includedir&lt;/code&gt; 은 &lt;code&gt;EPREFIX/include&lt;/code&gt; 로 설정되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e89bcc8805a2632b427e732380e4e693cb5d1f89" translate="yes" xml:space="preserve">
          <source>Install architecture-dependent files in &lt;var&gt;EPREFIX&lt;/var&gt;. By default the installation directory is set to the &lt;var&gt;PREFIX&lt;/var&gt; directory.</source>
          <target state="translated">&lt;var&gt;EPREFIX&lt;/var&gt; 에 아키텍처 종속 파일을 설치하십시오 . 기본적으로 설치 디렉토리는 &lt;var&gt;PREFIX&lt;/var&gt; 디렉토리로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="8b1a58b2caacd0ec0115212dcca1650e5e11af8c" translate="yes" xml:space="preserve">
          <source>Install architecture-independent files in &lt;var&gt;PREFIX&lt;/var&gt;. By default the installation directory is set to &lt;code&gt;/usr/local/apache2&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;PREFIX&lt;/var&gt; 에 아키텍처 독립적 파일을 설치하십시오 . 기본적으로 설치 디렉토리는 &lt;code&gt;/usr/local/apache2&lt;/code&gt; 로 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="2e082c15a1da8949c9c6deaa3f4aac3a35edab78" translate="yes" xml:space="preserve">
          <source>Install info documentation in &lt;var&gt;DIR&lt;/var&gt;. By default &lt;code&gt;infodir&lt;/code&gt; is set to &lt;code&gt;PREFIX/info&lt;/code&gt;. This option is currently unused.</source>
          <target state="translated">&lt;var&gt;DIR&lt;/var&gt; 에 정보 문서를 설치하십시오 . 기본적으로 &lt;code&gt;infodir&lt;/code&gt; 은 &lt;code&gt;PREFIX/info&lt;/code&gt; 로 설정되어 있습니다. 이 옵션은 현재 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e90653f316ae47b36421f8e172859f26795c10ae" translate="yes" xml:space="preserve">
          <source>Install modifiable architecture-independent data in &lt;var&gt;DIR&lt;/var&gt;. By default &lt;code&gt;sharedstatedir&lt;/code&gt; is set to &lt;code&gt;PREFIX/com&lt;/code&gt;. This option is offered by &lt;code&gt;autoconf&lt;/code&gt; and currently unused.</source>
          <target state="translated">&lt;var&gt;DIR&lt;/var&gt; 에 수정 가능한 아키텍처 독립적 데이터를 설치하십시오 . 기본적으로 &lt;code&gt;sharedstatedir&lt;/code&gt; 은 &lt;code&gt;PREFIX/com&lt;/code&gt; 으로 설정되어 있습니다. 이 옵션은 &lt;code&gt;autoconf&lt;/code&gt; 에서 제공 하며 현재 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="13e52d2ee35c93084ab24a1c9d181788057cd9c3" translate="yes" xml:space="preserve">
          <source>Install modifiable single-machine data in &lt;var&gt;DIR&lt;/var&gt;. By default &lt;code&gt;localstatedir&lt;/code&gt; is set to &lt;code&gt;PREFIX/var&lt;/code&gt;. This option is offered by &lt;code&gt;autoconf&lt;/code&gt; and currently unused.</source>
          <target state="translated">&lt;var&gt;DIR&lt;/var&gt; 에 수정 가능한 단일 머신 데이터를 설치하십시오 . 기본적으로 &lt;code&gt;localstatedir&lt;/code&gt; 은 &lt;code&gt;PREFIX/var&lt;/code&gt; 로 설정됩니다 . 이 옵션은 &lt;code&gt;autoconf&lt;/code&gt; 에서 제공 하며 현재 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7ca8946423f290d596a3b26f5cca81a6165e6142" translate="yes" xml:space="preserve">
          <source>Install object code libraries in &lt;var&gt;DIR&lt;/var&gt;. By default &lt;code&gt;libdir&lt;/code&gt; is set to &lt;code&gt;EPREFIX/lib&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;DIR&lt;/var&gt; 에 오브젝트 코드 라이브러리를 설치하십시오 . 기본적으로 &lt;code&gt;libdir&lt;/code&gt; 은 &lt;code&gt;EPREFIX/lib&lt;/code&gt; 로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="1eb7faa4bad5c2bfe1917969bc44b662de93d1f7" translate="yes" xml:space="preserve">
          <source>Install read-only architecture-independent data in &lt;var&gt;DIR&lt;/var&gt;. By default &lt;code&gt;datadir&lt;/code&gt; is set to &lt;code&gt;PREFIX/share&lt;/code&gt;. This option is offered by &lt;code&gt;autoconf&lt;/code&gt; and currently unused.</source>
          <target state="translated">&lt;var&gt;DIR&lt;/var&gt; 에 읽기 전용 아키텍처 독립적 인 데이터를 설치하십시오 . 기본적으로 &lt;code&gt;datadir&lt;/code&gt; 은 &lt;code&gt;PREFIX/share&lt;/code&gt; 로 설정됩니다 . 이 옵션은 &lt;code&gt;autoconf&lt;/code&gt; 에서 제공 하며 현재 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="58dfd1b6f4824cdfad602862abc9e7962274edf4" translate="yes" xml:space="preserve">
          <source>Install read-only single-machine data like the server configuration files &lt;code&gt;httpd.conf&lt;/code&gt;, &lt;code&gt;mime.types&lt;/code&gt;, etc. in &lt;var&gt;DIR&lt;/var&gt;. By default &lt;code&gt;sysconfdir&lt;/code&gt; is set to &lt;code&gt;PREFIX/conf&lt;/code&gt;.</source>
          <target state="translated">서버 구성 파일 &lt;code&gt;httpd.conf&lt;/code&gt; , &lt;code&gt;mime.types&lt;/code&gt; 등과 같은 읽기 전용 단일 머신 데이터 를 &lt;var&gt;DIR&lt;/var&gt; 에 설치하십시오 . 기본적으로 &lt;code&gt;sysconfdir&lt;/code&gt; 은 &lt;code&gt;PREFIX/conf&lt;/code&gt; 로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="67f3487f7c00dbb703634414e18aeb9e470d8707" translate="yes" xml:space="preserve">
          <source>Install the man documentation in &lt;var&gt;DIR&lt;/var&gt;. By default &lt;code&gt;mandir&lt;/code&gt; is set to &lt;code&gt;EPREFIX/man&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;DIR&lt;/var&gt; 에 man 문서를 설치하십시오 . 기본적으로 &lt;code&gt;mandir&lt;/code&gt; 은 &lt;code&gt;EPREFIX/man&lt;/code&gt; 으로 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="525c9e57b004e303e6bb12df2cf37f7ed548ce50" translate="yes" xml:space="preserve">
          <source>Install the program executables (i.e., shared modules) in &lt;var&gt;DIR&lt;/var&gt;. By default &lt;code&gt;libexecdir&lt;/code&gt; is set to &lt;code&gt;EPREFIX/modules&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;DIR&lt;/var&gt; 에 프로그램 실행 파일 (즉, 공유 모듈)을 설치하십시오 . 기본적으로 &lt;code&gt;libexecdir&lt;/code&gt; 은 &lt;code&gt;EPREFIX/modules&lt;/code&gt; 로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="5742964c8040aa93dc750715359c5dec4e7b2c5b" translate="yes" xml:space="preserve">
          <source>Install the system administrator executables in &lt;var&gt;DIR&lt;/var&gt;. Those are server programs like &lt;code&gt;&lt;a href=&quot;httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;apachectl&quot;&gt;apachectl&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;suexec&quot;&gt;suexec&lt;/a&gt;&lt;/code&gt;, etc. which are necessary to run the Apache HTTP Server. By default &lt;code&gt;sbindir&lt;/code&gt; is set to &lt;code&gt;EPREFIX/sbin&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;DIR&lt;/var&gt; 에 시스템 관리자 실행 파일을 설치하십시오 . Apache HTTP Server를 실행하는 데 필요한 &lt;code&gt;&lt;a href=&quot;httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;apachectl&quot;&gt;apachectl&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;suexec&quot;&gt;suexec&lt;/a&gt;&lt;/code&gt; 등의 서버 프로그램 입니다. 기본적으로 &lt;code&gt;sbindir&lt;/code&gt; 은 &lt;code&gt;EPREFIX/sbin&lt;/code&gt; 으로 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="703c7b4f374df4daddad22e3091bb90aca463172" translate="yes" xml:space="preserve">
          <source>Install user executables in &lt;var&gt;DIR&lt;/var&gt;. The user executables are supporting programs like &lt;code&gt;&lt;a href=&quot;htpasswd&quot;&gt;htpasswd&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;dbmmanage&quot;&gt;dbmmanage&lt;/a&gt;&lt;/code&gt;, etc. which are useful for site administrators. By default &lt;var&gt;DIR&lt;/var&gt; is set to &lt;code&gt;EPREFIX/bin&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;DIR&lt;/var&gt; 에 사용자 실행 파일을 설치하십시오 . 사용자 실행 파일은 사이트 관리자에게 유용한 &lt;code&gt;&lt;a href=&quot;htpasswd&quot;&gt;htpasswd&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;dbmmanage&quot;&gt;dbmmanage&lt;/a&gt;&lt;/code&gt; 등과 같은 프로그램을 지원합니다 . 기본적으로 &lt;var&gt;DIR&lt;/var&gt; 은 &lt;code&gt;EPREFIX/bin&lt;/code&gt; 으로 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="fec76963adae1405f24412e85f5691c85faaaf16" translate="yes" xml:space="preserve">
          <source>Installation directories</source>
          <target state="translated">설치 디렉토리</target>
        </trans-unit>
        <trans-unit id="04835d690c34b4d477956ab179bcbdc338d0acf7" translate="yes" xml:space="preserve">
          <source>Installing Apache for NetWare</source>
          <target state="translated">NetWare 용 아파치 설치</target>
        </trans-unit>
        <trans-unit id="25698238529e36c36bbff9a1cf8864afeb7e862b" translate="yes" xml:space="preserve">
          <source>Installing from source</source>
          <target state="translated">소스에서 설치</target>
        </trans-unit>
        <trans-unit id="66a1e1ced0e07213cbfa6f33d6a26ffd394053a4" translate="yes" xml:space="preserve">
          <source>Installing on Fedora/CentOS/Red Hat Enterprise Linux</source>
          <target state="translated">Fedora / CentOS / Red Hat Enterprise Linux에 설치</target>
        </trans-unit>
        <trans-unit id="a5628a9680ce3130226426c266f8760192803c47" translate="yes" xml:space="preserve">
          <source>Installing on Ubuntu/Debian</source>
          <target state="translated">우분투 / 데비안에서 설치</target>
        </trans-unit>
        <trans-unit id="322b4792b6d9555f37ed838af513dc59f6437e8c" translate="yes" xml:space="preserve">
          <source>Installing the Server</source>
          <target state="translated">서버 설치</target>
        </trans-unit>
        <trans-unit id="2a53e86ba7d4b4f6f55e30b3861ead0ba1220100" translate="yes" xml:space="preserve">
          <source>Instead of listing all dns names on the same line, you may use &lt;code&gt;MDMember&lt;/code&gt; to add such names to a managed domain.</source>
          <target state="translated">모든 dns 이름을 동일한 행에 나열하는 대신 &lt;code&gt;MDMember&lt;/code&gt; 를 사용 하여 해당 이름을 관리되는 도메인에 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="441cd62e4eff11e12f87b88fc025333c0822ef8c" translate="yes" xml:space="preserve">
          <source>Instead, provided with httpd is the &lt;a href=&quot;programs/htcacheclean&quot;&gt;htcacheclean&lt;/a&gt; tool which allows you to clean the cache periodically. Determining how frequently to run &lt;a href=&quot;programs/htcacheclean&quot;&gt;htcacheclean&lt;/a&gt; and what target size to use for the cache is somewhat complex and trial and error may be needed to select optimal values.</source>
          <target state="translated">대신 httpd와 함께 제공되는 &lt;a href=&quot;programs/htcacheclean&quot;&gt;htcacheclean&lt;/a&gt; 도구를 사용하면 캐시를 정기적으로 정리할 수 있습니다. &lt;a href=&quot;programs/htcacheclean&quot;&gt;htcacheclean&lt;/a&gt; 실행 빈도 와 캐시에 사용할 대상 크기를 결정하는 것은 다소 복잡하며 최적의 값을 선택하려면 시행 착오가 필요할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7c1b056960a4c327a5977fcc03433bdb01cb6586" translate="yes" xml:space="preserve">
          <source>Instructs Apache to terminate all running worker threads as they become idle, reread the configuration file and restart each worker thread based on the new configuration.</source>
          <target state="translated">실행중인 모든 작업자 스레드가 유휴 상태가되면 Apache가 구성 파일을 다시 읽고 새 구성에 따라 각 작업자 스레드를 다시 시작하도록 지시합니다.</target>
        </trans-unit>
        <trans-unit id="9edcffff4461c9083fbff857f8dcee0f0769cbd4" translate="yes" xml:space="preserve">
          <source>Integer</source>
          <target state="translated">Integer</target>
        </trans-unit>
        <trans-unit id="8ee73d86e8c3fba0e58f78bb3fb22a6e6cf892fc" translate="yes" xml:space="preserve">
          <source>Integer equality</source>
          <target state="translated">정수 평등</target>
        </trans-unit>
        <trans-unit id="79a373cb06f849745d1e3f88685c87b525c46b7a" translate="yes" xml:space="preserve">
          <source>Integer greater than</source>
          <target state="translated">보다 큰 정수</target>
        </trans-unit>
        <trans-unit id="97fab31e5da2e11e0a43753c6de14b4c2b13fd85" translate="yes" xml:space="preserve">
          <source>Integer greater than or equal</source>
          <target state="translated">정수보다 크거나 같은 정수</target>
        </trans-unit>
        <trans-unit id="b8513165462817031f57dc66d8683e569bf33892" translate="yes" xml:space="preserve">
          <source>Integer inequality</source>
          <target state="translated">정수 불평등</target>
        </trans-unit>
        <trans-unit id="cd2295a599b2be24f7be34f909f6305e21d3158e" translate="yes" xml:space="preserve">
          <source>Integer less than</source>
          <target state="translated">보다 작은 정수</target>
        </trans-unit>
        <trans-unit id="ab9a5b5c159eb25d3e153cccff50b4968e9fa886" translate="yes" xml:space="preserve">
          <source>Integer less than or equal</source>
          <target state="translated">정수 이하</target>
        </trans-unit>
        <trans-unit id="9289421e6c38ac47b5bd9f96091631185aaa2694" translate="yes" xml:space="preserve">
          <source>Integrating Sessions with External Applications</source>
          <target state="translated">외부 애플리케이션과 세션 통합</target>
        </trans-unit>
        <trans-unit id="eb838e9ccd07e8b7fa352b08baa333726cd2e06f" translate="yes" xml:space="preserve">
          <source>Interaction between host-level access control and user authentication</source>
          <target state="translated">호스트 수준 액세스 제어와 사용자 인증 간의 상호 작용</target>
        </trans-unit>
        <trans-unit id="301b2222062d0cd682168bda56f6664b16feb8ca" translate="yes" xml:space="preserve">
          <source>Interaction with the Server</source>
          <target state="translated">서버와의 상호 작용</target>
        </trans-unit>
        <trans-unit id="56d84efe9b4ce4f40a470abcc9c7844c7c816516" translate="yes" xml:space="preserve">
          <source>Interface which the program will listen on</source>
          <target state="translated">프로그램이 청취 할 인터페이스</target>
        </trans-unit>
        <trans-unit id="fe9a0ef809ba887aa5875883a88580551336c502" translate="yes" xml:space="preserve">
          <source>Interleaved Priority Rule</source>
          <target state="translated">인터리브 우선 순위 규칙</target>
        </trans-unit>
        <trans-unit id="cc2af07e44ea8ed5c99018401dd5010f6d53309d" translate="yes" xml:space="preserve">
          <source>Intermediate CA certificates lie between the root CA certificate (which is installed in the browsers) and the server certificate (which you installed on the server). In order for the browser to be able to traverse and verify the trust chain from the server certificate to the root certificate it needs need to be given the intermediate certificates. The CAs should be able to provide you such intermediate certificate packages that can be installed on the server.</source>
          <target state="translated">중간 CA 인증서는 브라우저에 설치된 루트 CA 인증서와 서버에 설치 한 서버 인증서 사이에 있습니다. 브라우저가 서버 인증서에서 루트 인증서로 트러스트 체인을 통과하고 확인할 수 있으려면 중간 인증서를 제공해야합니다. CA는 서버에 설치할 수있는 중간 인증서 패키지를 제공 할 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="2d4afc6452f78f45ab912ec448f7c08acfe72c99" translate="yes" xml:space="preserve">
          <source>Internal (Load Balancer) Example</source>
          <target state="translated">내부 (로드 밸런서) 예</target>
        </trans-unit>
        <trans-unit id="373b5e08f5fc88cded97669a6d0b933cefcf2eda" translate="yes" xml:space="preserve">
          <source>Interoperability problems have led to the introduction of mechanisms to modify the way Apache behaves when talking to particular clients. To make these mechanisms as flexible as possible, they are invoked by defining environment variables, typically with &lt;code&gt;&lt;a href=&quot;mod/mod_setenvif#browsermatch&quot;&gt;BrowserMatch&lt;/a&gt;&lt;/code&gt;, though &lt;code&gt;&lt;a href=&quot;mod/mod_env#setenv&quot;&gt;SetEnv&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mod/mod_env#passenv&quot;&gt;PassEnv&lt;/a&gt;&lt;/code&gt; could also be used, for example.</source>
          <target state="translated">상호 운용성 문제로 인해 특정 클라이언트와 대화 할 때 Apache의 동작 방식을 수정하는 메커니즘이 도입되었습니다. 이러한 메커니즘을 최대한 유연하게 만들려면 , 예를 들어 &lt;code&gt;&lt;a href=&quot;mod/mod_env#setenv&quot;&gt;SetEnv&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;mod/mod_env#passenv&quot;&gt;PassEnv&lt;/a&gt;&lt;/code&gt; 를 사용할 수도 있지만 일반적으로 &lt;code&gt;&lt;a href=&quot;mod/mod_setenvif#browsermatch&quot;&gt;BrowserMatch&lt;/a&gt;&lt;/code&gt; 를 사용 하여 환경 변수를 정의하여 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="c4f2078422c49dcdb28306f6080b794e1176b4b6" translate="yes" xml:space="preserve">
          <source>Interpolate environment variables in &lt;code&gt;from-pattern&lt;/code&gt;. Patterns supported are as above.</source>
          <target state="translated">&lt;code&gt;from-pattern&lt;/code&gt; 에서 환경 변수를 보간합니다 . 지원되는 패턴은 위와 같습니다.</target>
        </trans-unit>
        <trans-unit id="71fcab7687c6ca56131e82ad8073a1366f700b0b" translate="yes" xml:space="preserve">
          <source>Interpolate environment variables in &lt;code&gt;to-pattern&lt;/code&gt;. A string of the form &lt;code&gt;${varname|default}&lt;/code&gt; will be replaced by the value of environment variable &lt;code&gt;varname&lt;/code&gt;. If that is unset, it is replaced by &lt;code&gt;default&lt;/code&gt;. The &lt;code&gt;|default&lt;/code&gt; is optional.</source>
          <target state="translated">&lt;code&gt;to-pattern&lt;/code&gt; 에서 환경 변수를 보간합니다 . &lt;code&gt;${varname|default}&lt;/code&gt; 형식의 문자열은 환경 변수 &lt;code&gt;varname&lt;/code&gt; 의 값으로 대체됩니다 . 설정되어 있지 않으면 &lt;code&gt;default&lt;/code&gt; 바뀝니다 . &lt;code&gt;|default&lt;/code&gt; 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="4f7755c212a6f4f3777131fb95755de5f26090d8" translate="yes" xml:space="preserve">
          <source>Interpret the final parameter as a comment. When this option is specified, an additional string can be appended to the command line; this string will be stored in the &quot;Comment&quot; field of the database, associated with the specified username.</source>
          <target state="translated">최종 매개 변수를 주석으로 해석하십시오. 이 옵션을 지정하면 명령 줄에 추가 문자열을 추가 할 수 있습니다. 이 문자열은 지정된 사용자 이름과 연관된 데이터베이스의 &quot;설명&quot;필드에 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="9d4078bbaa2b166e4b34ddffddfb5bb4f7210ddf" translate="yes" xml:space="preserve">
          <source>Interpret the last (right-most) question mark as the query string delimiter, instead of the first (left-most) as normally used. Available in 2.4.19 and later. &lt;em&gt;&lt;a href=&quot;../rewrite/flags#flag_qsl&quot;&gt;details ...&lt;/a&gt;&lt;/em&gt;</source>
          <target state="translated">일반적으로 사용되는 첫 번째 (가장 왼쪽) 대신 마지막 (가장 오른쪽) 물음표를 쿼리 문자열 구분 기호로 해석하십시오. 2.4.19 이상에서 사용 가능합니다. &lt;em&gt;&lt;a href=&quot;../rewrite/flags#flag_qsl&quot;&gt;세부 사항 ...&lt;/a&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1f185b858444754bab61f3b4f962798b08922f03" translate="yes" xml:space="preserve">
          <source>Intranet Proxy</source>
          <target state="translated">인트라넷 프록시</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="00828667736e561630c64dd17eea9e72ef056ea2" translate="yes" xml:space="preserve">
          <source>Introduction To SSL</source>
          <target state="translated">SSL 소개</target>
        </trans-unit>
        <trans-unit id="5d824b95e8144a5378dc4a31cb9fbe74625bfb61" translate="yes" xml:space="preserve">
          <source>Introduction to Server Side Includes</source>
          <target state="translated">서버 측 포함 소개</target>
        </trans-unit>
        <trans-unit id="aad1ca7c2b4d0ef3b41e2c881a1b30f71ac114c8" translate="yes" xml:space="preserve">
          <source>Introduction to regular expressions and mod_rewrite</source>
          <target state="translated">정규 표현식 및 mod_rewrite 소개</target>
        </trans-unit>
        <trans-unit id="08d10f669df8738631d36a3d53daa201cc6404f5" translate="yes" xml:space="preserve">
          <source>Invalid character set names</source>
          <target state="translated">잘못된 문자 세트 이름</target>
        </trans-unit>
        <trans-unit id="cc2ff723b5fbcf65f535d567797ec1300969e957" translate="yes" xml:space="preserve">
          <source>Invalid hyperlink</source>
          <target state="translated">잘못된 하이퍼 링크</target>
        </trans-unit>
        <trans-unit id="f63d5c1b6033a0fded9e877bbe55ee9caaf6b71c" translate="yes" xml:space="preserve">
          <source>Invocation modes</source>
          <target state="translated">호출 모드</target>
        </trans-unit>
        <trans-unit id="256daf39bbbd5b0623bdb1ea206eb3b9e39fe885" translate="yes" xml:space="preserve">
          <source>Invoke a lua function in the auth_checker phase of processing a request. This can be used to implement arbitrary authentication and authorization checking. A very simple example:</source>
          <target state="translated">요청 처리의 auth_checker 단계에서 lua 함수를 호출하십시오. 임의의 인증 및 권한 부여 검사를 구현하는 데 사용할 수 있습니다. 매우 간단한 예 :</target>
        </trans-unit>
        <trans-unit id="467570b74f2a2cfd3d8eaa387a31644532520f67" translate="yes" xml:space="preserve">
          <source>Is &lt;strong&gt;d&lt;/strong&gt;irectory.</source>
          <target state="translated">가 &lt;strong&gt;D&lt;/strong&gt; irectory은.</target>
        </trans-unit>
        <trans-unit id="512cc414fe7aacb2c9a55ab7a031544f72982fb5" translate="yes" xml:space="preserve">
          <source>Is existing URL, via subrequest.</source>
          <target state="translated">하위 요청을 통한 기존 URL입니다.</target>
        </trans-unit>
        <trans-unit id="ca05918c30259782c6d8b1c64c5d1bfedaa2db7a" translate="yes" xml:space="preserve">
          <source>Is existing file, via subrequest.</source>
          <target state="translated">하위 요청을 통해 기존 파일입니다.</target>
        </trans-unit>
        <trans-unit id="6884bcfb900ca88538526bf613a32a91ed65bc6c" translate="yes" xml:space="preserve">
          <source>Is it possible to provide HTTP and HTTPS from the same server?</source>
          <target state="translated">동일한 서버에서 HTTP 및 HTTPS를 제공 할 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="0e5839b02967334dd081518318d686041e1e8dfa" translate="yes" xml:space="preserve">
          <source>Is it possible to use Name-Based Virtual Hosting to identify different SSL virtual hosts?</source>
          <target state="translated">이름 기반 가상 호스팅을 사용하여 다른 SSL 가상 호스트를 식별 할 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="ee13216515a725666a57ee4a5097f27a5492af82" translate="yes" xml:space="preserve">
          <source>Is numerically &lt;strong&gt;eq&lt;/strong&gt;ual to</source>
          <target state="translated">수치되어 &lt;strong&gt;EQ&lt;/strong&gt; 에 연간를</target>
        </trans-unit>
        <trans-unit id="c3888f5925ea1e3e71081b46fd2e8d6ea35ae588" translate="yes" xml:space="preserve">
          <source>Is numerically &lt;strong&gt;g&lt;/strong&gt;reater &lt;strong&gt;t&lt;/strong&gt;han</source>
          <target state="translated">수치가 &lt;strong&gt;g&lt;/strong&gt; reater &lt;strong&gt;t&lt;/strong&gt; 한은</target>
        </trans-unit>
        <trans-unit id="24460245722e56eb7e3a1884d50138d24c3596c9" translate="yes" xml:space="preserve">
          <source>Is numerically &lt;strong&gt;g&lt;/strong&gt;reater than or &lt;strong&gt;e&lt;/strong&gt;qual to</source>
          <target state="translated">수치가 &lt;strong&gt;g&lt;/strong&gt; reater 이상 또는 &lt;strong&gt;전자&lt;/strong&gt; QUAL에</target>
        </trans-unit>
        <trans-unit id="fe7858860fc094acb3a180f049ef31f9fa174b3b" translate="yes" xml:space="preserve">
          <source>Is numerically &lt;strong&gt;l&lt;/strong&gt;ess &lt;strong&gt;t&lt;/strong&gt;han</source>
          <target state="translated">수치가 &lt;strong&gt;리터의&lt;/strong&gt; ESS의 &lt;strong&gt;t&lt;/strong&gt; 한은</target>
        </trans-unit>
        <trans-unit id="9bdd4390959a37b0215d8ca3f3f5de76bd5e0c87" translate="yes" xml:space="preserve">
          <source>Is numerically &lt;strong&gt;l&lt;/strong&gt;ess than or &lt;strong&gt;e&lt;/strong&gt;qual to</source>
          <target state="translated">수치가 &lt;strong&gt;리터&lt;/strong&gt; 이상의 ESS 또는 &lt;strong&gt;전자&lt;/strong&gt; QUAL로는</target>
        </trans-unit>
        <trans-unit id="ca118febad438dcfd44ccc3a55c73befd82481a8" translate="yes" xml:space="preserve">
          <source>Is numerically &lt;strong&gt;n&lt;/strong&gt;ot &lt;strong&gt;e&lt;/strong&gt;qual to</source>
          <target state="translated">수치가 &lt;strong&gt;N&lt;/strong&gt; 하다며 &lt;strong&gt;전자&lt;/strong&gt; QUAL에</target>
        </trans-unit>
        <trans-unit id="8f73215ae4c43c22b70e01286290341162bb95a2" translate="yes" xml:space="preserve">
          <source>Is regular &lt;strong&gt;f&lt;/strong&gt;ile.</source>
          <target state="translated">일반가요 &lt;strong&gt;f를&lt;/strong&gt; ILE는.</target>
        </trans-unit>
        <trans-unit id="a315527a56b8bce07182a4b610953ff97879d792" translate="yes" xml:space="preserve">
          <source>Is regular file, with &lt;strong&gt;s&lt;/strong&gt;ize.</source>
          <target state="translated">로 일반 파일이며, &lt;strong&gt;s는&lt;/strong&gt; 이지는.</target>
        </trans-unit>
        <trans-unit id="e8c44a51bdfa00a81f53a1d6b762a35bb36ae77b" translate="yes" xml:space="preserve">
          <source>Is symbolic &lt;strong&gt;l&lt;/strong&gt;ink.</source>
          <target state="translated">상징 &lt;strong&gt;리터의&lt;/strong&gt; 잉크.</target>
        </trans-unit>
        <trans-unit id="b4b81cfdb9379e0832584a6ea9c4aba5ee87381b" translate="yes" xml:space="preserve">
          <source>Is symbolic link, bash convention.</source>
          <target state="translated">심볼릭 링크, bash 규칙입니다.</target>
        </trans-unit>
        <trans-unit id="e74bf80ec21022a47205fdc0a8ed1ab08ab0c03b" translate="yes" xml:space="preserve">
          <source>Is the user the owner of the file?</source>
          <target state="translated">사용자가 파일의 소유자입니까?</target>
        </trans-unit>
        <trans-unit id="4a4582eb30cb664f6c0235b7ab352ca317b0f76d" translate="yes" xml:space="preserve">
          <source>Is there a difference on startup between a non-SSL-aware Apache and an SSL-aware Apache?</source>
          <target state="translated">SSL을 인식하지 않는 Apache와 SSL을 인식하는 Apache간에 시작시 차이점이 있습니까?</target>
        </trans-unit>
        <trans-unit id="cb71dc6ac67ac5aee2723818367c984b7b384fe2" translate="yes" xml:space="preserve">
          <source>Is this user the user allowed to run this wrapper? Only one user (the Apache user) is allowed to execute this program.</source>
          <target state="translated">이 사용자는이 랩퍼를 실행할 수 있습니까? 한 명의 사용자 (Apache 사용자)만이이 프로그램을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2587e48b81143beb59fc21b7be6db218f7fb98e3" translate="yes" xml:space="preserve">
          <source>Issuer</source>
          <target state="translated">Issuer</target>
        </trans-unit>
        <trans-unit id="45d376ce8e11552b1bb9692a78ffbf363981c7d9" translate="yes" xml:space="preserve">
          <source>Issuer DN of client's certificate</source>
          <target state="translated">클라이언트 인증서의 발급자 DN</target>
        </trans-unit>
        <trans-unit id="353aa54d49d911b71fe188f8e56b037cf1741c87" translate="yes" xml:space="preserve">
          <source>Issuer DN of server's certificate</source>
          <target state="translated">서버 인증서의 발급자 DN</target>
        </trans-unit>
        <trans-unit id="2b6383fd8f90c8b3882d99afb1e424882b6fd2ee" translate="yes" xml:space="preserve">
          <source>Issues Regarding DNS and Apache HTTP Server</source>
          <target state="translated">DNS 및 Apache HTTP Server 관련 문제</target>
        </trans-unit>
        <trans-unit id="e30aea7fa84917220dda8fa507387f5cac349b7e" translate="yes" xml:space="preserve">
          <source>Issuing and managing certificates</source>
          <target state="translated">인증서 발급 및 관리</target>
        </trans-unit>
        <trans-unit id="dfafb016ebe91f6ebaca919740ba3cbfb6d02a26" translate="yes" xml:space="preserve">
          <source>It can be made safe by &lt;em&gt;untainting&lt;/em&gt; all inputs: a process inspired by Perl's taint checking. Each input is matched against a regexp, and only the match is used, according to the Perl idiom:</source>
          <target state="translated">그것은에 의해 안전 할 수 &lt;em&gt;untainting&lt;/em&gt; 모든 입력 : 프로세스는 펄의 더러운 검사에 의해 영감을 된. 각 입력은 정규 표현식과 일치하며 Perl 관용구에 따라 일치 항목 만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="673a825c2cb69d47ae612033d96659479124277c" translate="yes" xml:space="preserve">
          <source>It can be useful during development of cached RESTful services to have additional information about the caching decision written to the response headers, so as to confirm whether &lt;code&gt;Cache-Control&lt;/code&gt; and other headers have been correctly used by the service and client.</source>
          <target state="translated">캐시 된 RESTful 서비스를 개발하는 동안 서비스 및 클라이언트가 &lt;code&gt;Cache-Control&lt;/code&gt; 및 기타 헤더를 ​​올바르게 사용 했는지 확인하기 위해 응답 헤더에 기록 된 캐싱 결정에 대한 추가 정보를 갖는 것이 유용 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0cfc83fa062ba79310ca43286ab95ade8779bca2" translate="yes" xml:space="preserve">
          <source>It can happen that some format string items do not produce output. For example, the Referer header is only present if the log message is associated to a request and the log message happens at a time when the Referer header has already been read from the client. If no output is produced, the default behavior is to delete everything from the preceding space character to the next space character. This means the log line is implicitly divided into fields on non-whitespace to whitespace transitions. If a format string item does not produce output, the whole field is omitted. For example, if the remote address &lt;code&gt;%a&lt;/code&gt; in the log format &lt;code&gt;[%t] [%l] [%a] %M&lt;/code&gt; is not available, the surrounding brackets are not logged either. Space characters can be escaped with a backslash to prevent them from delimiting a field. The combination '% ' (percent space) is a zero-width field delimiter that does not produce any output.</source>
          <target state="translated">일부 형식 문자열 항목이 출력을 생성하지 않을 수 있습니다. 예를 들어, Referer 헤더는 로그 메시지가 요청과 연관되어 있고 Referer 헤더가 클라이언트에서 이미 읽혀질 때 로그 메시지가 발생하는 경우에만 존재합니다. 출력이 생성되지 않으면 기본 동작은 선행 공백 문자에서 다음 공백 문자로 모든 항목을 삭제하는 것입니다. 이것은 로그 라인이 비 공백에서 공백으로의 전이에서 암시 적으로 필드로 분할됨을 의미합니다. 형식 문자열 항목이 출력을 생성하지 않으면 전체 필드가 ​​생략됩니다. 예를 들어 로그 형식 의 원격 주소 &lt;code&gt;%a&lt;/code&gt; 가 &lt;code&gt;[%t] [%l] [%a] %M&lt;/code&gt; 를 사용할 수 없으면 주변 괄호도 기록되지 않습니다. 공백 문자는 백 슬래시로 이스케이프하여 필드를 구분하지 못하게 할 수 있습니다. '%'(백분율) 조합은 출력을 생성하지 않는 너비가 0 인 필드 구분 기호입니다.</target>
        </trans-unit>
        <trans-unit id="8e20f1cc92626699fd6ce6aa6f24a6b0fc4455a7" translate="yes" xml:space="preserve">
          <source>It does not implement HTTP/1.x fully; only accepts some 'expected' forms of responses. The rather heavy use of &lt;code&gt;strstr(3)&lt;/code&gt; shows up top in profile, which might indicate a performance problem; &lt;em&gt;i.e.&lt;/em&gt;, you would measure the &lt;code&gt;ab&lt;/code&gt; performance rather than the server's.</source>
          <target state="translated">HTTP / 1.x를 완전히 구현하지는 않습니다. 일부 '예상 된'형식의 응답 만 허용합니다. &lt;code&gt;strstr(3)&lt;/code&gt; 다소 많이 사용 하면 성능 문제가 있음을 나타내는 프로필에서 맨 위에 나타납니다. &lt;em&gt;즉&lt;/em&gt; , 서버가 아닌 &lt;code&gt;ab&lt;/code&gt; 성능을 측정합니다 .</target>
        </trans-unit>
        <trans-unit id="2d8db3990ee41afc67512d2ab92e017c7bbdf095" translate="yes" xml:space="preserve">
          <source>It does not support regex or pattern matching at all.</source>
          <target state="translated">정규식이나 패턴 일치를 전혀 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="31ad9d4d79a48d98d1831fec383931c0f8d85f1b" translate="yes" xml:space="preserve">
          <source>It emulates:</source>
          <target state="translated">다음을 에뮬레이트합니다.</target>
        </trans-unit>
        <trans-unit id="f9ff43ab213196c281ee69ed9b8f3615a28dcd2a" translate="yes" xml:space="preserve">
          <source>It has to be kept in mind that conditions follow a short circuit logic in the case of the '&lt;strong&gt;&lt;code&gt;ornext|OR&lt;/code&gt;&lt;/strong&gt;' flag so that certain conditions might not be evaluated at all.</source>
          <target state="translated">' &lt;strong&gt; &lt;code&gt;ornext|OR&lt;/code&gt; &lt;/strong&gt; '플래그 의 경우 특정 조건이 전혀 평가되지 않도록 조건이 단락 논리를 따른다는 점을 명심해야 합니다.</target>
        </trans-unit>
        <trans-unit id="ec7aa7190336590cba3c398a0b9704e5df845c6a" translate="yes" xml:space="preserve">
          <source>It insists that the user enters a password. (&lt;code&gt;&lt;a href=&quot;#anonymous_mustgiveemail&quot;&gt;Anonymous_MustGiveEmail&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="translated">사용자가 비밀번호를 입력해야합니다. ( &lt;code&gt;&lt;a href=&quot;#anonymous_mustgiveemail&quot;&gt;Anonymous_MustGiveEmail&lt;/a&gt;&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="a28fe1cef9425081c44eefe023093ed8535abf05" translate="yes" xml:space="preserve">
          <source>It insists that the user enters a userID. (&lt;code&gt;&lt;a href=&quot;#anonymous_nouserid&quot;&gt;Anonymous_NoUserID&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="translated">사용자는 userID를 입력해야합니다. ( &lt;code&gt;&lt;a href=&quot;#anonymous_nouserid&quot;&gt;Anonymous_NoUserID&lt;/a&gt;&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="4617759b878fff2b99bace262cdca6ab50e0c4fc" translate="yes" xml:space="preserve">
          <source>It is a module that sends static content at a bandwidth rate limit, defined by the various old modem standards. So, you can browse your site with a 56k V.92 modem, by adding something like this:</source>
          <target state="translated">다양한 구형 모뎀 표준에 의해 정의 된 대역폭 속도 제한으로 정적 컨텐츠를 전송하는 모듈입니다. 따라서 다음과 같이 추가하면 56k V.92 모뎀으로 사이트를 탐색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8930d631dbbe53bf5e5bcc7b182d1e1f24a63c2c" translate="yes" xml:space="preserve">
          <source>It is also possible to change the level per directory:</source>
          <target state="translated">디렉토리 당 레벨을 변경할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="06032140c85fbcebbd2bcd30d037db86aa638dc1" translate="yes" xml:space="preserve">
          <source>It is also possible to create your own Certificate Authority. Although risky in the Internet environment, it may be useful within an Intranet where the organization can easily verify the identities of individuals and servers.</source>
          <target state="translated">자체 인증 기관을 만들 수도 있습니다. 인터넷 환경에서는 위험하지만 조직에서 개인 및 서버의 ID를 쉽게 확인할 수있는 인트라넷 내에서 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="22634b0b364d135856c1f68808a59047ebeedf3f" translate="yes" xml:space="preserve">
          <source>It is also possible to specify alternative user directories. If you use a command like:</source>
          <target state="translated">대체 사용자 디렉토리를 지정할 수도 있습니다. 다음과 같은 명령을 사용하는 경우 :</target>
        </trans-unit>
        <trans-unit id="e9680b8aa0e1d13945bcda47074aa47d592c5169" translate="yes" xml:space="preserve">
          <source>It is also possible, when the quick handler is disabled, for the administrator to choose the precise location within the filter chain where caching is to be performed, by adding the &lt;strong&gt;CACHE&lt;/strong&gt; filter to the chain.</source>
          <target state="translated">관리자가 퀵 핸들러를 사용하지 않는 경우 관리자가 &lt;strong&gt;CACHE&lt;/strong&gt; 필터를 체인 에 추가하여 캐싱을 수행 할 필터 체인 내의 정확한 위치를 선택할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="84fa0a84925cfe1e20a3c634f65f3a84a8684474" translate="yes" xml:space="preserve">
          <source>It is also recommended that an appropriate &quot;nice&quot; level is chosen for htcacheclean so that the tool does not cause excessive disk io while the server is running.</source>
          <target state="translated">또한 서버가 실행되는 동안 도구가 과도한 디스크 io를 발생시키지 않도록 htcacheclean에 적절한 &quot;nice&quot;레벨을 선택하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="45ccc5d8e95446d6510b360290014ea86fb2226a" translate="yes" xml:space="preserve">
          <source>It is assumed that &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;/usr&lt;/code&gt;, and &lt;code&gt;/usr/local&lt;/code&gt; are only modifiable by root. When you install the &lt;code&gt;&lt;a href=&quot;../programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; executable, you should ensure that it is similarly protected:</source>
          <target state="translated">&lt;code&gt;/&lt;/code&gt; , &lt;code&gt;/usr&lt;/code&gt; 및 &lt;code&gt;/usr/local&lt;/code&gt; 은 루트로만 수정할 수 있다고 가정합니다 . &lt;code&gt;&lt;a href=&quot;../programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; 실행 파일 을 설치할 때 유사하게 보호되는지 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="db128f1b6e287493215a5f97b55b56776c08cf70" translate="yes" xml:space="preserve">
          <source>It is best to &lt;em&gt;avoid&lt;/em&gt; putting mutex files in a world-writable directory such as &lt;code&gt;/var/tmp&lt;/code&gt; because someone could create a denial of service attack and prevent the server from starting by creating a lockfile with the same name as the one the server will try to create.</source>
          <target state="translated">누군가가 서비스 거부 공격을 생성하고 서버가 시도하는 것과 동일한 이름의 잠금 파일을 작성하여 서버가 시작되지 못하게 할 수 있기 때문에 &lt;code&gt;/var/tmp&lt;/code&gt; 와 같은 세계 기록 가능 디렉토리에 뮤텍스 파일을 넣지 &lt;em&gt;않는&lt;/em&gt; 것이 가장 좋습니다. 만들다.</target>
        </trans-unit>
        <trans-unit id="026fce5b0da21205dd08e28dc3ec5a47b2c8cc7e" translate="yes" xml:space="preserve">
          <source>It is best to always explicitly list a &lt;code&gt;&lt;a href=&quot;../mod/core#servername&quot;&gt;ServerName&lt;/a&gt;&lt;/code&gt; in every name-based virtual host.</source>
          <target state="translated">모든 이름 기반 가상 호스트에서 항상 &lt;code&gt;&lt;a href=&quot;../mod/core#servername&quot;&gt;ServerName&lt;/a&gt;&lt;/code&gt; 을 명시 적으로 나열하는 것이 가장 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="8fd1412828bb690a1813db462330f2be70b22fe4" translate="yes" xml:space="preserve">
          <source>It is critical to only enable this behavior from intermediate hosts (proxies, etc) which are trusted by this server, since it is trivial for the remote useragent to impersonate another useragent.</source>
          <target state="translated">원격 사용자 에이전트가 다른 사용자 에이전트를 가장하는 것은 쉽지 않기 때문에이 서버가 신뢰하는 중간 호스트 (프록시 등)에서만이 동작을 활성화하는 것이 중요합니다.</target>
        </trans-unit>
        <trans-unit id="596e232171bc77b4d2c8989950c98437b71d6a99" translate="yes" xml:space="preserve">
          <source>It is crucial that whatever program you use to create your group files is configured to use the same type of database.</source>
          <target state="translated">그룹 파일을 작성하는 데 사용하는 모든 프로그램이 동일한 유형의 데이터베이스를 사용하도록 구성되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="4fe7299f695f5fd5e299912a0d84c8b67e72ffcf" translate="yes" xml:space="preserve">
          <source>It is crucial that whatever program you use to create your password files is configured to use the same type of database.</source>
          <target state="translated">비밀번호 파일을 작성하는 데 사용하는 모든 프로그램이 동일한 유형의 데이터베이스를 사용하도록 구성되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="fd90df5213b641de4e747f53b5676181ab9cc85f" translate="yes" xml:space="preserve">
          <source>It is formatted like an HTML comment, so if you don't have SSI correctly enabled, the browser will ignore it, but it will still be visible in the HTML source. If you have SSI correctly configured, the directive will be replaced with its results.</source>
          <target state="translated">HTML 주석과 같은 형식으로되어 있으므로 SSI를 올바르게 활성화하지 않으면 브라우저가이를 무시하지만 HTML 소스에는 여전히 표시됩니다. SSI를 올바르게 구성한 경우 지시문이 결과로 바뀝니다.</target>
        </trans-unit>
        <trans-unit id="dcefea24fba0f1f53e443fe859a11ac284bcb1d8" translate="yes" xml:space="preserve">
          <source>It is frequently desirable to have a single file or resource handle all requests to a particular directory, except those requests that correspond to an existing file or script. This is often referred to as a 'front controller.'</source>
          <target state="translated">기존 파일 또는 스크립트에 해당하는 요청을 제외하고 특정 디렉토리에 대한 모든 요청을 단일 파일 또는 자원으로 처리하는 것이 바람직합니다. 이를 종종 '프론트 컨트롤러'라고합니다.</target>
        </trans-unit>
        <trans-unit id="34553228bdf559d24073903deb500d405ab8888d" translate="yes" xml:space="preserve">
          <source>It is important that you are aware that this &lt;code&gt;server.key&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; have any passphrase. To add a passphrase to the key, you should run the following command, and enter &amp;amp; verify the passphrase as requested.</source>
          <target state="translated">이 &lt;code&gt;server.key&lt;/code&gt; 에 암호 가 &lt;em&gt;없다는&lt;/em&gt; 것을 알고 있어야합니다 . 키에 암호를 추가하려면 다음 명령을 실행하고 요청 된대로 암호를 입력하고 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="aa178e2413aa133783c91cb2172ae8f8b64fa799" translate="yes" xml:space="preserve">
          <source>It is important to never use &lt;code&gt;&lt;a href=&quot;mod/core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; when trying to restrict access to objects in the filesystem. This is because many different webspace locations (URLs) could map to the same filesystem location, allowing your restrictions to be circumvented. For example, consider the following configuration:</source>
          <target state="translated">파일 시스템의 객체에 대한 액세스를 제한 할 때는 &lt;code&gt;&lt;a href=&quot;mod/core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; 을 사용하지 않는 것이 중요합니다 . 여러 다른 웹 공간 위치 (URL)가 동일한 파일 시스템 위치에 매핑되어 제한 사항을 피할 수 있기 때문입니다. 예를 들어 다음 구성을 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="e87c26ea20ff60c3deae97d2e3fbc66cb2465ffa" translate="yes" xml:space="preserve">
          <source>It is important to note, however, that links inside the documents will not be rewritten. So any absolute links on &lt;code&gt;internal.example.com&lt;/code&gt; will result in the client breaking out of the proxy server and requesting directly from &lt;code&gt;internal.example.com&lt;/code&gt;. You can modify these links (and other content) in a page as it is being served to the client using &lt;code&gt;&lt;a href=&quot;mod/mod_substitute&quot;&gt;mod_substitute&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">그러나 문서 내부의 링크는 다시 작성되지 않습니다. 따라서 &lt;code&gt;internal.example.com&lt;/code&gt; 의 절대 링크 는 클라이언트가 프록시 서버를 벗어나서 &lt;code&gt;internal.example.com&lt;/code&gt; 에서 직접 요청하게합니다 . &lt;code&gt;&lt;a href=&quot;mod/mod_substitute&quot;&gt;mod_substitute&lt;/a&gt;&lt;/code&gt; 를 사용하여 클라이언트에 제공되는 페이지에서 이러한 링크 (및 기타 컨텐츠)를 수정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ebe44c02fa734be7fdfadf7e70c9205331860644" translate="yes" xml:space="preserve">
          <source>It is important to recognize that the first step in name-based virtual host resolution is IP-based resolution. Name-based virtual host resolution only chooses the most appropriate name-based virtual host after narrowing down the candidates to the best IP-based match. Using a wildcard (*) for the IP address in all of the VirtualHost directives makes this IP-based mapping irrelevant.</source>
          <target state="translated">이름 기반 가상 호스트 확인의 첫 번째 단계는 IP 기반 확인이라는 점을 인식해야합니다. 이름 기반 가상 호스트 확인은 후보를 최상의 IP 기반 일치로 좁힌 후에 가장 적합한 이름 기반 가상 호스트 만 선택합니다. 모든 VirtualHost 지시문에서 IP 주소에 와일드 카드 (*)를 사용하면이 IP 기반 매핑이 적합하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fa40eca518f63116b40698f1dd291f4cd86db9e7" translate="yes" xml:space="preserve">
          <source>It is not advisable to use zlib-dynamic, as that transfers the cost of deflating SSL streams to the first request which must load the zlib dll. Note the suggested patch enables the -L flag to work with windows builds, corrects the name of zdll.lib and ensures .pdb files are generated for troubleshooting. If the assembler is not installed, you would add no-asm above and use ms\do_ms.bat instead of the ms\do_masm.bat script.</source>
          <target state="translated">zlib-dynamic을 사용하는 것은 바람직하지 않습니다. SSL 스트림 디플 레이팅 비용이 zlib dll을로드해야하는 첫 번째 요청으로 전송되기 때문입니다. 제안 된 패치는 -L 플래그가 Windows 빌드에서 작동하고 zdll.lib의 이름을 정정하며 문제점 해결을 위해 .pdb 파일이 생성되도록합니다. 어셈블러가 설치되어 있지 않으면 위의 no-asm을 추가하고 ms \ do_masm.bat 스크립트 대신 ms \ do_ms.bat를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="9f7c8442732e5b3d8bf6262671c33dcfb67f3aef" translate="yes" xml:space="preserve">
          <source>It is not possible to override or change the standard CGI variables using the environment manipulation directives.</source>
          <target state="translated">환경 조작 지시문을 사용하여 표준 CGI 변수를 재정의하거나 변경할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="97a992071cddc516986a9d388fec8fdd5b9d52ea" translate="yes" xml:space="preserve">
          <source>It is often useful to be able to send the server a signal, so that it closes and then re-opens its &lt;code&gt;&lt;a href=&quot;core#errorlog&quot;&gt;ErrorLog&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mod_log_config#transferlog&quot;&gt;TransferLog&lt;/a&gt;&lt;/code&gt;, and re-reads its configuration files. This is done by sending a SIGHUP (kill -1) signal to the process id listed in the &lt;code&gt;PidFile&lt;/code&gt;.</source>
          <target state="translated">서버에 신호를 보내서 &lt;code&gt;&lt;a href=&quot;core#errorlog&quot;&gt;ErrorLog&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;mod_log_config#transferlog&quot;&gt;TransferLog&lt;/a&gt;&lt;/code&gt; 를닫았다 가 다시 열고 구성 파일을 다시 읽을 수 있도록하는 것이 종종 유용 합니다. 이는 SIGHUP (kill -1) 신호를 &lt;code&gt;PidFile&lt;/code&gt; 에 나열된 프로세스 ID로 전송하여 수행됩니다 .</target>
        </trans-unit>
        <trans-unit id="2c0cf899eb355ecd4ca15b5193ea4a3cdf8f9e82" translate="yes" xml:space="preserve">
          <source>It is possible to &quot;leak&quot; SysV semaphores if processes crash before the semaphore is removed.</source>
          <target state="translated">세마포어를 제거하기 전에 프로세스가 중단되면 SysV 세마포어를 &quot;누설&quot;할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a1bdf6f387d0b612e317f6b7d3486110c3c9b2f3" translate="yes" xml:space="preserve">
          <source>It is possible to configure additional instances of the Apache httpd server running independently alongside each other on the same machine. These instances can have independent configurations, and can potentially run as separate users if so configured.</source>
          <target state="translated">동일한 컴퓨터에서 서로 독립적으로 실행되는 Apache httpd 서버의 추가 인스턴스를 구성 할 수 있습니다. 이러한 인스턴스는 독립적 인 구성을 가질 수 있으며, 구성된 경우 별도의 사용자로 실행될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0fce6e538bb763d3996bd7fe0151647c13d8f59c" translate="yes" xml:space="preserve">
          <source>It is possible to create a statically linked binary of a single support program by using the following options:</source>
          <target state="translated">다음 옵션을 사용하여 단일 지원 프로그램의 정적으로 링크 된 바이너리를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1aeca8c1f691936781b6d3c6e1ba5307e052b93b" translate="yes" xml:space="preserve">
          <source>It is possible to have the time displayed in another format by specifying &lt;code&gt;%{format}t&lt;/code&gt; in the log format string, where &lt;code&gt;format&lt;/code&gt; is either as in &lt;code&gt;strftime(3)&lt;/code&gt; from the C standard library, or one of the supported special tokens. For details see the &lt;code&gt;&lt;a href=&quot;mod/mod_log_config&quot;&gt;mod_log_config&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;mod/mod_log_config#formats&quot;&gt;format strings&lt;/a&gt;.</source>
          <target state="translated">로그 형식 문자열에 &lt;code&gt;%{format}t&lt;/code&gt; 를 지정하여 다른 형식으로 시간을 표시 할 수 있습니다. 여기서 &lt;code&gt;format&lt;/code&gt; 은 C 표준 라이브러리의 &lt;code&gt;strftime(3)&lt;/code&gt; 또는 지원되는 특수 토큰 중 하나입니다. 자세한 내용은 &lt;code&gt;&lt;a href=&quot;mod/mod_log_config&quot;&gt;mod_log_config&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;mod/mod_log_config#formats&quot;&gt; 형식 문자열을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2627f31901e605abb3b1669b29225b3decdffce8" translate="yes" xml:space="preserve">
          <source>It is possible, but only if using a 2.2.12 or later web server, built with 0.9.8j or later OpenSSL. This is because it requires a feature that only the most recent revisions of the SSL specification added, called Server Name Indication (SNI).</source>
          <target state="translated">0.9.8j 이상의 OpenSSL로 빌드 된 2.2.12 이상의 웹 서버를 사용하는 경우에만 가능합니다. 이는 SNI (Server Name Indication)라는 최신 SSL 사양 개정 만 추가 한 기능이 필요하기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="8ae7b81f12a2c1f71b9ea9fed3e7a0438b33cbd7" translate="yes" xml:space="preserve">
          <source>It is probably easier to accomplish this kind of configuration using the &lt;code&gt;&amp;lt;If&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;ElseIf&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;Else&amp;gt;&lt;/code&gt; directives instead.</source>
          <target state="translated">그것은 사용의 구성이 수행하는 것이 더 쉬울 것입니다 &lt;code&gt;&amp;lt;If&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;ElseIf&amp;gt;&lt;/code&gt; 및 &lt;code&gt;&amp;lt;Else&amp;gt;&lt;/code&gt; 지시어 대신.</target>
        </trans-unit>
        <trans-unit id="f6fb39947684331e68c6c3c7a1ac6618fe2647f6" translate="yes" xml:space="preserve">
          <source>It is recommended that new media types be added using the &lt;code&gt;AddType&lt;/code&gt; directive rather than changing the &lt;code&gt;&lt;a href=&quot;#typesconfig&quot;&gt;TypesConfig&lt;/a&gt;&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#typesconfig&quot;&gt;TypesConfig&lt;/a&gt;&lt;/code&gt; 파일을 변경하는 대신 &lt;code&gt;AddType&lt;/code&gt; 지시문을 사용하여 새 미디어 유형을 추가하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="4ea93c9389c5711c0178f8a1d8fc11fd130f65d9" translate="yes" xml:space="preserve">
          <source>It is recommended that users create a separate account for running Apache service(s). If you have to access network resources via Apache, this is required.</source>
          <target state="translated">사용자는 Apache 서비스를 실행하기 위해 별도의 계정을 만드는 것이 좋습니다. Apache를 통해 네트워크 리소스에 액세스해야하는 경우 필요합니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
