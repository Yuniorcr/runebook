<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="cypress">
    <body>
      <group id="cypress">
        <trans-unit id="4fe5b30322de67a706bc45986a7ccddeaea8f5e2" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;Cypress.version&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Cypress.version&lt;/code&gt; 추가</target>
        </trans-unit>
        <trans-unit id="fca3b87ea920463b02bc0264c953dfe4ea06c4ce" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;Cypress.version&lt;/code&gt; property. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/404&quot;&gt;#404&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Cypress.version&lt;/code&gt; 속성이 추가되었습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/404&quot;&gt;# 404&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="d48044856f33e0dc7e92a6fd222283fac4902d78" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;Parallelization&lt;/code&gt; doc.</source>
          <target state="translated">&lt;code&gt;Parallelization&lt;/code&gt; 문서를 추가했습니다 .</target>
        </trans-unit>
        <trans-unit id="2ba7cc2a06c3d5b938f13508b58ced797948ae3e" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;Recipes&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Recipes&lt;/code&gt; 추가</target>
        </trans-unit>
        <trans-unit id="749bb9583012ada56f6b66ba50107fc32469019b" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;Selector Playground API&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Selector Playground API&lt;/code&gt; 추가</target>
        </trans-unit>
        <trans-unit id="1ca88bd76da8b2fdd906043c8288f38e941277bc" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;Selector Playground Guide&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Selector Playground Guide&lt;/code&gt; 추가</target>
        </trans-unit>
        <trans-unit id="6abcced29a661454485328598062eee25c55e6fc" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;after:screenshot&lt;/code&gt; plugin event doc.</source>
          <target state="translated">&lt;code&gt;after:screenshot&lt;/code&gt; 플러그인 이벤트 문서가 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="339a579c9bc641ab263e08dfc0173963a170e0cc" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;ctrl&lt;/code&gt;, &lt;code&gt;cmd&lt;/code&gt;, &lt;code&gt;shift&lt;/code&gt;, and &lt;code&gt;alt&lt;/code&gt; keyboard modifiers</source>
          <target state="translated">&lt;code&gt;ctrl&lt;/code&gt; , &lt;code&gt;cmd&lt;/code&gt; , &lt;code&gt;shift&lt;/code&gt; 및 &lt;code&gt;alt&lt;/code&gt; 키보드 수정자가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="e225856c572cd4432148877431e6b4c98358943c" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;cy.Blob&lt;/code&gt; utilities for &lt;code&gt;blob&lt;/code&gt; / &lt;code&gt;string&lt;/code&gt; / &lt;code&gt;base64&lt;/code&gt; conversion. Useful for manually handling uploads.</source>
          <target state="translated">&lt;code&gt;blob&lt;/code&gt; / &lt;code&gt;string&lt;/code&gt; / &lt;code&gt;base64&lt;/code&gt; 변환을 위한 &lt;code&gt;cy.Blob&lt;/code&gt; 유틸리티가 추가되었습니다 . 업로드를 수동으로 처리하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="14f5729b0036c8a4932adf56a117c8b10bc7bfe5" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;cy.respond&lt;/code&gt; command which will respond to all pending requests when &lt;code&gt;{respond: false}&lt;/code&gt; is set in the &lt;code&gt;server&lt;/code&gt; or &lt;code&gt;route&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;server&lt;/code&gt; 또는 &lt;code&gt;route&lt;/code&gt; 에 &lt;code&gt;{respond: false}&lt;/code&gt; 가 설정된 경우 보류중인 모든 요청에 ​​응답하는 &lt;code&gt;cy.respond&lt;/code&gt; 명령이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="0708754a2a15b2b8c04cc577021bdefd8f762674" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;delay&lt;/code&gt; option</source>
          <target state="translated">&lt;code&gt;delay&lt;/code&gt; 옵션 추가</target>
        </trans-unit>
        <trans-unit id="de397f68a581f3a17c68249d7fe217fcac12c4df" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;flag&lt;/code&gt; option and appending with &lt;code&gt;a+&lt;/code&gt;</source>
          <target state="translated">추가 &lt;code&gt;flag&lt;/code&gt; 와 옵션을 추기 &lt;code&gt;a+&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="40e872f3a273ced4eebbccfef12504003bda2232" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;flag&lt;/code&gt; option to &lt;a href=&quot;../../api/commands/writefile&quot;&gt;&lt;code&gt;cy.writeFile()&lt;/code&gt; doc&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/writefile&quot;&gt; &lt;code&gt;cy.writeFile()&lt;/code&gt; &lt;/a&gt; doc에 &lt;code&gt;flag&lt;/code&gt; 옵션을 추가했습니다 .</target>
        </trans-unit>
        <trans-unit id="b069fba1db5a823e3e8545e5b2280f8a723df77a" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;onAbort&lt;/code&gt; callback option</source>
          <target state="translated">&lt;code&gt;onAbort&lt;/code&gt; 콜백 옵션 추가</target>
        </trans-unit>
        <trans-unit id="b709eaeb948586dcab97ca908d3b4c74b6e92284" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;parseSpecialCharSequences&lt;/code&gt; option</source>
          <target state="translated">&lt;code&gt;parseSpecialCharSequences&lt;/code&gt; 옵션 추가</target>
        </trans-unit>
        <trans-unit id="236e4378e0846bc758ba30a91310a128014fd56d" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;requestTimeout&lt;/code&gt; and &lt;code&gt;responseTimeout&lt;/code&gt; options to &lt;a href=&quot;../../api/commands/wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/wait&quot;&gt; &lt;code&gt;cy.wait()&lt;/code&gt; &lt;/a&gt; &lt;code&gt;requestTimeout&lt;/code&gt; 및 &lt;code&gt;responseTimeout&lt;/code&gt; 옵션을 추가했습니다.</target>
        </trans-unit>
        <trans-unit id="fd22551e83325397c01867327a6ace1b2bdad287" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;requestTimeout&lt;/code&gt; and &lt;code&gt;responseTimout&lt;/code&gt; option</source>
          <target state="translated">&lt;code&gt;requestTimeout&lt;/code&gt; 및 &lt;code&gt;responseTimout&lt;/code&gt; 옵션 추가</target>
        </trans-unit>
        <trans-unit id="d7bf5229ba200f54c3d9d59b2d07d3029e0e3f05" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;responseTimeout&lt;/code&gt;&lt;a href=&quot;configuration&quot;&gt;configuration&lt;/a&gt; value.</source>
          <target state="translated">&lt;code&gt;responseTimeout&lt;/code&gt; &lt;a href=&quot;configuration&quot;&gt;구성&lt;/a&gt; 값이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="308b70688de548104123489d9f57c756b04dad6d" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;runUrl&lt;/code&gt; to returned run in &lt;a href=&quot;../guides/module-api&quot;&gt;Module API doc&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../guides/module-api&quot;&gt;모듈 API doc&lt;/a&gt; 에서 리턴 된 실행에 &lt;code&gt;runUrl&lt;/code&gt; 을 추가 했습니다 .</target>
        </trans-unit>
        <trans-unit id="4f8cde986467b12e5206099be29e3e95aa5ba96c" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;teamcity&lt;/code&gt; reporter.</source>
          <target state="translated">팀 &lt;code&gt;teamcity&lt;/code&gt; 리포터 추가</target>
        </trans-unit>
        <trans-unit id="4524a472d504eca636f0f7a80461460ee1ff59d6" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;timeout&lt;/code&gt; option</source>
          <target state="translated">&lt;code&gt;timeout&lt;/code&gt; 옵션 추가</target>
        </trans-unit>
        <trans-unit id="6930284fd7c430328290e27428e192f1643860c9" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;waitForAnimations&lt;/code&gt; and &lt;code&gt;animationDistanceThreshold&lt;/code&gt;&lt;a href=&quot;configuration#Animations&quot;&gt;configuration options&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;waitForAnimations&lt;/code&gt; 및 &lt;code&gt;animationDistanceThreshold&lt;/code&gt; &lt;a href=&quot;configuration#Animations&quot;&gt;구성 옵션이&lt;/a&gt; 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="aaf6ba08b1bcefde5e2b02437e4bead2c06febcb" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;whitelist&lt;/code&gt; option</source>
          <target state="translated">&lt;code&gt;whitelist&lt;/code&gt; 옵션 추가</target>
        </trans-unit>
        <trans-unit id="60db8ad77186048a5f58d9909ae9711f1bf2c1e8" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;{downarrow}&lt;/code&gt; and &lt;code&gt;{uparrow}&lt;/code&gt; character sequences</source>
          <target state="translated">추가 &lt;code&gt;{downarrow}&lt;/code&gt; 과 &lt;code&gt;{uparrow}&lt;/code&gt; 문자 시퀀스</target>
        </trans-unit>
        <trans-unit id="8263590e4bc2f9d45d4fc0f7c5bbdd58633a6288" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;{home}&lt;/code&gt; and &lt;code&gt;{end}&lt;/code&gt; character sequences</source>
          <target state="translated">추가 &lt;code&gt;{home}&lt;/code&gt; 과 &lt;code&gt;{end}&lt;/code&gt; 문자 시퀀스</target>
        </trans-unit>
        <trans-unit id="b0e8689941654c5580e74dd428a8b75e8d70dba5" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;{home}&lt;/code&gt; and &lt;code&gt;{end}&lt;/code&gt; character sequences to &lt;a href=&quot;../../api/commands/type&quot;&gt;cy.type()&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/type&quot;&gt;cy.type ()에 &lt;/a&gt; &lt;code&gt;{home}&lt;/code&gt; 및 &lt;code&gt;{end}&lt;/code&gt; 문자 시퀀스 추가</target>
        </trans-unit>
        <trans-unit id="c122e205089fb64e8df9d534e1492fa90f5775f6" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;{insert}&lt;/code&gt;, &lt;code&gt;{pageup}&lt;/code&gt; and &lt;code&gt;{pagedown}&lt;/code&gt; character sequences</source>
          <target state="translated">추가 &lt;code&gt;{insert}&lt;/code&gt; , &lt;code&gt;{pageup}&lt;/code&gt; 과 &lt;code&gt;{pagedown}&lt;/code&gt; 문자 시퀀스</target>
        </trans-unit>
        <trans-unit id="50fc1eeab4cf019afc5fee523cea298b20a8a543" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;{insert}&lt;/code&gt;, &lt;code&gt;{pageup}&lt;/code&gt;, and &lt;code&gt;{pagedown}&lt;/code&gt; as supported special character sequences to &lt;a href=&quot;../../api/commands/type#Arguments&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt;. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/pull/1567&quot;&gt;#1567&lt;/a&gt;.</source>
          <target state="translated">추가 &lt;code&gt;{insert}&lt;/code&gt; , &lt;code&gt;{pageup}&lt;/code&gt; 과 &lt;code&gt;{pagedown}&lt;/code&gt; 지원되는 특수 문자 시퀀스 등의 정보는 다음의 제품에 &lt;a href=&quot;../../api/commands/type#Arguments&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; . &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/pull/1567&quot;&gt;# 1567&lt;/a&gt; 에서 다룬다 .</target>
        </trans-unit>
        <trans-unit id="e553b4a3b343274fb60f9e8eb5793a9f0590e1c7" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;{selectall}&lt;/code&gt;, &lt;code&gt;{del}&lt;/code&gt;, &lt;code&gt;{backspace}&lt;/code&gt;, &lt;code&gt;{esc}&lt;/code&gt;, &lt;code&gt;{{}&lt;/code&gt;, &lt;code&gt;{enter}&lt;/code&gt;, &lt;code&gt;{leftarrow}&lt;/code&gt;, &lt;code&gt;{rightarrow}&lt;/code&gt; character sequences</source>
          <target state="translated">추가 &lt;code&gt;{selectall}&lt;/code&gt; , &lt;code&gt;{del}&lt;/code&gt; , &lt;code&gt;{backspace}&lt;/code&gt; , &lt;code&gt;{esc}&lt;/code&gt; , &lt;code&gt;{{}&lt;/code&gt; , &lt;code&gt;{enter}&lt;/code&gt; , &lt;code&gt;{leftarrow}&lt;/code&gt; , &lt;code&gt;{rightarrow}&lt;/code&gt; 문자 시퀀스</target>
        </trans-unit>
        <trans-unit id="5349f37cad770220d90dfb3f6d975f6912ad8e23" translate="yes" xml:space="preserve">
          <source>Added Chrome flag &lt;code&gt;--disable-blink-features=RootLayerScrolling&lt;/code&gt; to prevent the application under test from &amp;ldquo;shaking&amp;rdquo; in recent versions of Chrome. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1620&quot;&gt;#1620&lt;/a&gt;.</source>
          <target state="translated">Chrome 버전 &lt;code&gt;--disable-blink-features=RootLayerScrolling&lt;/code&gt; 을 추가하여 최신 버전의 Chrome에서 테스트중인 애플리케이션이 &quot;떨리는&quot;것을 방지합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1620&quot;&gt;# 1620&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="7ca0748a40ead19e9f6d15722054c0be7f167fdb" translate="yes" xml:space="preserve">
          <source>Added Cypress logo to nav.</source>
          <target state="translated">탐색에 Cypress 로고가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="d209d04f8b453ec7e9149b29d3dd39b1b0dcaf55" translate="yes" xml:space="preserve">
          <source>Added Desktop Icon.</source>
          <target state="translated">데스크탑 아이콘이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="cbb7c7534921f69d74fecad8e6e86d10fd3b5a7b" translate="yes" xml:space="preserve">
          <source>Added ESLint, Docker, and TypeScript to Plugins</source>
          <target state="translated">플러그인에 ESLint, Docker 및 TypeScript 추가</target>
        </trans-unit>
        <trans-unit id="3e2695b80c9667fdeded798040641b574b659d10" translate="yes" xml:space="preserve">
          <source>Added TypeScript &lt;code&gt;should/and&lt;/code&gt; autocomplete and typings for Cypress events. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1187&quot;&gt;#1187&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1132&quot;&gt;#1132&lt;/a&gt;.</source>
          <target state="translated">Cypress 이벤트에 대한 TypeScript &lt;code&gt;should/and&lt;/code&gt; 자동 완성 및 입력 기능을 추가했습니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1187&quot;&gt;# 1187&lt;/a&gt; 과 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1132&quot;&gt;# 1132&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b1446a3d15f69bdc79d771268bdb58e2c03c9e2e" translate="yes" xml:space="preserve">
          <source>Added TypeScript typings for bundled Cypress tools like &lt;code&gt;$&lt;/code&gt;, &lt;code&gt;_&lt;/code&gt;, etc. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1046&quot;&gt;#1046&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;$&lt;/code&gt; , &lt;code&gt;_&lt;/code&gt; 등의 번들 Cypress 도구에 대한 TypeScript 유형을 추가했습니다 . 수정 사항 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1046&quot;&gt;# 1046&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="61c2cbdb439bc80347ae2ff7c8c13d30356fa080" translate="yes" xml:space="preserve">
          <source>Added a 10 minute Getting Started video that &lt;a href=&quot;https://github.com/avanslaars&quot;&gt;Andrew Van Slaars&lt;/a&gt; created.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/avanslaars&quot;&gt;Andrew Van Slaars가&lt;/a&gt; 만든 10 분의 시작하기 비디오를 추가했습니다 .</target>
        </trans-unit>
        <trans-unit id="97074e2d4a96d331698d68a4f44518fd8fdbeb01" translate="yes" xml:space="preserve">
          <source>Added a new link to Options dropdown in Desktop app for &amp;ldquo;Chat&amp;rdquo; that goes to our &lt;a href=&quot;https://gitter.im/cypress-io/cypress&quot;&gt;chat&lt;/a&gt;.</source>
          <target state="translated">우리에 간다 &quot;채팅&quot;에 대한 데스크톱 응용 프로그램에서 옵션 드롭 다운에 새 링크 추가 &lt;a href=&quot;https://gitter.im/cypress-io/cypress&quot;&gt;채팅&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a63c9e2b6779a0faf5ed55e541a6d7b36c140b7b" translate="yes" xml:space="preserve">
          <source>Added a section about &lt;a href=&quot;../guides/debugging#Hacking-on-Cypress&quot;&gt;Hacking on Cypress&lt;/a&gt; in the Debugging doc. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/pull/1783&quot;&gt;#1783&lt;/a&gt;.</source>
          <target state="translated">디버깅 문서 &lt;a href=&quot;../guides/debugging#Hacking-on-Cypress&quot;&gt;에서 Cypress&lt;/a&gt; 에서 해킹에 대한 섹션을 추가했습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/pull/1783&quot;&gt;# 1783&lt;/a&gt; 에서 다룬다 .</target>
        </trans-unit>
        <trans-unit id="6a9922bfc4d2454c9105672477e61875a5bbb1c7" translate="yes" xml:space="preserve">
          <source>Added a section about how to request our new &lt;a href=&quot;../dashboard/organizations#Open-Source-Plan&quot;&gt;Open Source Plan&lt;/a&gt; in the Dashboard Service doc. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/pull/1584&quot;&gt;#1567&lt;/a&gt;.</source>
          <target state="translated">Dashboard Service 문서에서 새 &lt;a href=&quot;../dashboard/organizations#Open-Source-Plan&quot;&gt;오픈 소스 계획&lt;/a&gt; 을 요청하는 방법에 대한 섹션을 추가했습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/pull/1584&quot;&gt;# 1567&lt;/a&gt; 에서 다룬다 .</target>
        </trans-unit>
        <trans-unit id="837edfefe77a144a34bdf6b468cb6e9e5c719d2a" translate="yes" xml:space="preserve">
          <source>Added a section about video encoding and how to speed up the encoding time to &lt;a href=&quot;../guides/screenshots-and-videos#Video-encoding&quot;&gt;Screenshots and Videos&lt;/a&gt; doc. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/pull/1880&quot;&gt;#1880&lt;/a&gt;</source>
          <target state="translated">비디오 인코딩 및 &lt;a href=&quot;../guides/screenshots-and-videos#Video-encoding&quot;&gt;스크린 샷 및 비디오&lt;/a&gt; 문서 의 인코딩 시간을 단축하는 방법에 대한 섹션을 추가했습니다 . 에서 해결 &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/pull/1880&quot;&gt;# 1880&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3a65044c3ed231bf66777da2100f2f81f4492c4c" translate="yes" xml:space="preserve">
          <source>Added a section on how to &lt;a href=&quot;../getting-started/installing-cypress#Opt-out-of-sending-exception-data-to-Cypress&quot;&gt;opt out of sending exception data to Cypress&lt;/a&gt; in the Installing Cypress doc.</source>
          <target state="translated">&lt;a href=&quot;../getting-started/installing-cypress#Opt-out-of-sending-exception-data-to-Cypress&quot;&gt;Cypress&lt;/a&gt; 설치 문서에서 예외 데이터를 Cypress 로 전송하지 않도록 선택 하는 방법에 대한 섹션을 추가했습니다 .</target>
        </trans-unit>
        <trans-unit id="da95fc2431bf5553daa0175d105817dbaffe0770" translate="yes" xml:space="preserve">
          <source>Added a welcome dialog for new projects that explains how Cypress scaffolds out its folder structure. This dialog will only display if Cypress detects that you haven&amp;rsquo;t written any tests or changed the initial &lt;code&gt;example_spec.js&lt;/code&gt; file. The welcome dialog will no longer display after you&amp;rsquo;ve changed or added any tests.</source>
          <target state="translated">Cypress가 폴더 구조를 어떻게 구성하는지 설명하는 새 프로젝트에 대한 환영 대화 상자를 추가했습니다. 이 대화 상자는 Cypress가 테스트를 작성하지 않았거나 초기 &lt;code&gt;example_spec.js&lt;/code&gt; 파일을 변경하지 않았 음을 감지 한 경우에만 표시됩니다 . 테스트를 변경하거나 추가 한 후에는 환영 대화 상자가 더 이상 표시되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8a608b089a09d76dc31c72d6aa7859342d43dda9" translate="yes" xml:space="preserve">
          <source>Added additional &lt;code&gt;Cypress&lt;/code&gt; events for 3rd party custom handling.</source>
          <target state="translated">타사 사용자 지정 처리를위한 추가 &lt;code&gt;Cypress&lt;/code&gt; 이벤트가 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="8d7609ba97665318a0007c3a9b38722bbdb34eec" translate="yes" xml:space="preserve">
          <source>Added all newly supported HTTP methods to &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; doc.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt; 문서에 새로 지원되는 모든 HTTP 메소드를 추가했습니다 .</target>
        </trans-unit>
        <trans-unit id="fc4a301b0f5d62f0c315cee99fb5c96bf119587e" translate="yes" xml:space="preserve">
          <source>Added an &amp;lsquo;App Data&amp;rsquo; option in the Desktop App that displays app data. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/475&quot;&gt;#475&lt;/a&gt;.</source>
          <target state="translated">앱 데이터를 표시하는 '앱 데이터'옵션을 데스크톱 앱에 추가했습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/475&quot;&gt;# 475&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="85877861aa48e3506028db99e0b4539d9748af3e" translate="yes" xml:space="preserve">
          <source>Added automated functional NW tests during deployment in preparation for &lt;code&gt;0.5.0&lt;/code&gt; release.</source>
          <target state="translated">&lt;code&gt;0.5.0&lt;/code&gt; 릴리스 를 준비하기 위해 배포하는 동안 자동 기능 NW 테스트를 추가했습니다 .</target>
        </trans-unit>
        <trans-unit id="0032a9aada563aa0959802fa1127a1e076925c0e" translate="yes" xml:space="preserve">
          <source>Added button to the reporter that focuses the Test Runner and shows the list of tests.</source>
          <target state="translated">테스트 러너에 초점을 맞추고 테스트 목록을 표시하는 리포터에 버튼을 추가했습니다.</target>
        </trans-unit>
        <trans-unit id="5d3b9671173a409288404ea3630afd0dfb7529e4" translate="yes" xml:space="preserve">
          <source>Added cache buster to test files which forces them to be reloaded in the &lt;code&gt;Sources&lt;/code&gt; panel after making modifications. In previous versions when test files were live reloaded Chrome would not display their new contents due to a bug in Dev Tools. We&amp;rsquo;ve now worked around this issue.</source>
          <target state="translated">수정 후 &lt;code&gt;Sources&lt;/code&gt; 패널 에서 파일을 강제로 다시로드하는 파일을 테스트하기 위해 캐시 버스터를 추가했습니다 . 테스트 파일을 실시간으로 다시로드 한 이전 버전에서는 개발자 도구의 버그로 인해 Chrome에 새 내용이 표시되지 않았습니다. 우리는 이제이 문제를 해결했습니다.</target>
        </trans-unit>
        <trans-unit id="1612ee2d6971f3655fa11dc5827b948f65685f3d" translate="yes" xml:space="preserve">
          <source>Added chai assertions in TypeScript to generate autocompletion. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1073&quot;&gt;#1073&lt;/a&gt;.</source>
          <target state="translated">자동 완성을 생성하기 위해 TypeScript에 차이 어설 션이 추가되었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1073&quot;&gt;# 1073&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="d05091ac7d4a38600a28cea3f264beba2d6ddc8d" translate="yes" xml:space="preserve">
          <source>Added delays on some tooltips.</source>
          <target state="translated">일부 툴팁에 지연이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="ee3d1ebb2016c7575b2bbdc3df68954aed03290f" translate="yes" xml:space="preserve">
          <source>Added docs to nav, consolidated &lt;code&gt;organize&lt;/code&gt; into &lt;code&gt;tests&lt;/code&gt;.</source>
          <target state="translated">탐색에 문서를 추가, 통합 &lt;code&gt;organize&lt;/code&gt; 으로 &lt;code&gt;tests&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1f10e08315b6183495fd00e90f07d1433fbb3abc" translate="yes" xml:space="preserve">
          <source>Added example on how to use a fake video for webcam testing to &lt;a href=&quot;../../api/plugins/browser-launch-api#Use-fake-video-for-webcam-testing&quot;&gt;Browser API doc&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/plugins/browser-launch-api#Use-fake-video-for-webcam-testing&quot;&gt;브라우저 API doc&lt;/a&gt; 에 웹캠 테스트를 위해 가짜 비디오를 사용하는 방법에 대한 예제를 추가했습니다 .</target>
        </trans-unit>
        <trans-unit id="2f90556c7285b3ed081d1582bf58d6996c6b29ff" translate="yes" xml:space="preserve">
          <source>Added examples for &amp;ldquo;Catalog of Events&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;이벤트 카탈로그&amp;rdquo;에 대한 예제 추가</target>
        </trans-unit>
        <trans-unit id="692a24dbc2fefdc85bdda675cb112b912b4996b5" translate="yes" xml:space="preserve">
          <source>Added explicit error message when using child commands on a subject which has been detached or removed from the DOM.</source>
          <target state="translated">DOM에서 분리 또는 제거 된 주제에서 하위 명령을 사용할 때 명시적인 오류 메시지가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="845f2094d0fd96971517747c2a1d9cc08de5bbf3" translate="yes" xml:space="preserve">
          <source>Added external link to changelog when checking for updates :-)</source>
          <target state="translated">업데이트 확인시 변경 로그에 외부 링크 추가 :-)</target>
        </trans-unit>
        <trans-unit id="accc00389899355b97f811cf44ba0c7200acc897" translate="yes" xml:space="preserve">
          <source>Added favicon.</source>
          <target state="translated">파비콘을 추가했습니다.</target>
        </trans-unit>
        <trans-unit id="ad6cf5c597cd5c62d20ff8d298cc53c3c2c808b5" translate="yes" xml:space="preserve">
          <source>Added fs polling support to fix issues where Cypress would not detect file changes.</source>
          <target state="translated">Cypress가 파일 변경을 감지하지 못하는 문제를 해결하기 위해 fs 폴링 지원을 추가했습니다.</target>
        </trans-unit>
        <trans-unit id="c67859fbb20051f52bd72322242fc0070ca62424" translate="yes" xml:space="preserve">
          <source>Added functionality which enables &lt;a href=&quot;../../api/commands/server&quot;&gt;&lt;code&gt;cy.server()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt; to be created prior to &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt;. The server and routes will apply to the next page which is visited. This allows you to stub requests which happen on page load. Suggested in &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/17&quot;&gt;#17&lt;/a&gt;.</source>
          <target state="translated">수 있도록 추가 된 기능 &lt;a href=&quot;../../api/commands/server&quot;&gt; &lt;code&gt;cy.server()&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;../../api/commands/route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt; 이전에 생성되는 &lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; . 서버와 경로는 방문한 다음 페이지에 적용됩니다. 이를 통해 페이지로드시 발생하는 요청을 스텁 할 수 있습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/17&quot;&gt;# 17&lt;/a&gt; 에서 제안 .</target>
        </trans-unit>
        <trans-unit id="8916f344cdda258d0f3b4e07b15e41f097f8c3ff" translate="yes" xml:space="preserve">
          <source>Added icons + tray icons.</source>
          <target state="translated">아이콘 + 트레이 아이콘이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="40d4d3d04b038bda822cfb06cccda6b3e6cb3283" translate="yes" xml:space="preserve">
          <source>Added keywords to Cypress npm package. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1508&quot;&gt;#1508&lt;/a&gt;.</source>
          <target state="translated">Cypress npm 패키지에 키워드를 추가했습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1508&quot;&gt;# 1508&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="4468d82991ff3f4bb9059bbd5fe7182630a47422" translate="yes" xml:space="preserve">
          <source>Added lightweight module system / optimized Cypress listeners to prevent duplicated events.</source>
          <target state="translated">중복 된 이벤트를 방지하기 위해 경량 모듈 시스템 / 최적화 된 Cypress 리스너를 추가했습니다.</target>
        </trans-unit>
        <trans-unit id="50c9918fa5133ea0379d85dbeffc1175c98a23f9" translate="yes" xml:space="preserve">
          <source>Added missing type definitions for some &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; options. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3989&quot;&gt;#3989&lt;/a&gt;.</source>
          <target state="translated">일부 &lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 옵션에 대한 누락 된 유형 정의가 추가되었습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3989&quot;&gt;# 3989&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="cf06a9575443938af3a2570290047c8fac602da8" translate="yes" xml:space="preserve">
          <source>Added more debug logs to FFmpeg to determine why FFmpeg compression sometimes causes Cypress to crash (mostly while running in Travis CI). Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1971&quot;&gt;#1971&lt;/a&gt;.</source>
          <target state="translated">FFmpeg 압축으로 인해 때때로 Cypress가 중단되는 이유 (대부분 Travis CI에서 실행 중)를 판별하기 위해 FFmpeg에 디버그 로그를 추가했습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1971&quot;&gt;# 1971&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="28e4f2ae632db8416bc5cb9df765a783b0265ac4" translate="yes" xml:space="preserve">
          <source>Added more debug logs. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2108&quot;&gt;#2108&lt;/a&gt;.</source>
          <target state="translated">더 많은 디버그 로그가 추가되었습니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2108&quot;&gt;# 2108&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9325247655f9357067b6e59700150530905e44b3" translate="yes" xml:space="preserve">
          <source>Added more tests around various areas of the desktop application and ID generator.</source>
          <target state="translated">데스크탑 응용 프로그램 및 ID 생성기의 다양한 영역에 대한 추가 테스트가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="6d8683ec4e5ecf5ab852628b24a5d224b4b88932" translate="yes" xml:space="preserve">
          <source>Added more video tutorials</source>
          <target state="translated">더 많은 비디오 튜토리얼 추가</target>
        </trans-unit>
        <trans-unit id="634957f4dd6dceb2ca70578272a7106f993649f8" translate="yes" xml:space="preserve">
          <source>Added new &lt;a href=&quot;../../api/commands/each&quot;&gt;&lt;code&gt;.each()&lt;/code&gt;&lt;/a&gt; command which iterates serially on a collection yielding the iteratee, the index, and the collection. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/156&quot;&gt;#156&lt;/a&gt;.</source>
          <target state="translated">컬렉션에서 직렬로 반복하여 반복자, 인덱스 및 컬렉션을 생성하는 새로운 &lt;a href=&quot;../../api/commands/each&quot;&gt; &lt;code&gt;.each()&lt;/code&gt; &lt;/a&gt; 명령이 추가되었습니다 . 주소 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/156&quot;&gt;# 156&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e5c9e963cd8df5ea89490ce67675e10e449133dc" translate="yes" xml:space="preserve">
          <source>Added new &lt;a href=&quot;../../api/commands/screenshot&quot;&gt;&lt;code&gt;cy.screenshot()&lt;/code&gt;&lt;/a&gt; command which can take screenshots on demand.</source>
          <target state="translated">요청시 스크린 샷을 찍을 수있는 새로운 &lt;a href=&quot;../../api/commands/screenshot&quot;&gt; &lt;code&gt;cy.screenshot()&lt;/code&gt; &lt;/a&gt; 명령이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="24783f95caf34e8f3858824d99b9942f3ad5020e" translate="yes" xml:space="preserve">
          <source>Added new &lt;a href=&quot;configuration#Folders-Files&quot;&gt;&lt;code&gt;fileServerFolder&lt;/code&gt;&lt;/a&gt; configuration option that can mount a directory other than your project root when using Cypress as a web server.</source>
          <target state="translated">Cypress를 웹 서버로 사용할 때 프로젝트 루트 이외의 디렉토리를 마운트 할 수있는 새로운 &lt;a href=&quot;configuration#Folders-Files&quot;&gt; &lt;code&gt;fileServerFolder&lt;/code&gt; &lt;/a&gt; 구성 옵션이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="41b99542aa4c865ce4051f16c71b2358222edb49" translate="yes" xml:space="preserve">
          <source>Added new &lt;a href=&quot;configuration#Screenshots&quot;&gt;&lt;code&gt;screenshotsFolder&lt;/code&gt;&lt;/a&gt; configuration option with default of &lt;code&gt;cypress/screenshots&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cypress/screenshots&lt;/code&gt; 기본값으로 새로운 &lt;a href=&quot;configuration#Screenshots&quot;&gt; &lt;code&gt;screenshotsFolder&lt;/code&gt; &lt;/a&gt; 구성 옵션을 추가했습니다 .</target>
        </trans-unit>
        <trans-unit id="1c133c3affb5e059102da3f9c5398f531ab53ca5" translate="yes" xml:space="preserve">
          <source>Added new command: &lt;a href=&quot;../../api/commands/go&quot;&gt;&lt;code&gt;cy.go()&lt;/code&gt;&lt;/a&gt; which accepts &lt;code&gt;back&lt;/code&gt;, &lt;code&gt;forward&lt;/code&gt;, or an arbitrary Number.</source>
          <target state="translated">&lt;code&gt;back&lt;/code&gt; , &lt;code&gt;forward&lt;/code&gt; 또는 임의의 숫자 를 허용하는 &lt;a href=&quot;../../api/commands/go&quot;&gt; &lt;code&gt;cy.go()&lt;/code&gt; &lt;/a&gt; 명령이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="7ed0655536deaa8761c538c2624a5fe0fb712cee" translate="yes" xml:space="preserve">
          <source>Added new commands to handle getting, setting, and clearing cookies: &lt;a href=&quot;../../api/commands/clearcookie&quot;&gt;&lt;code&gt;cy.clearCookie()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/getcookie&quot;&gt;&lt;code&gt;cy.getCookie()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../../api/commands/setcookie&quot;&gt;&lt;code&gt;cy.setCookie()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/clearcookie&quot;&gt; &lt;code&gt;cy.clearCookie()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../api/commands/getcookie&quot;&gt; &lt;code&gt;cy.getCookie()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../api/commands/setcookie&quot;&gt; &lt;code&gt;cy.setCookie()&lt;/code&gt; &lt;/a&gt; : 쿠키 가져 오기, 설정 및 지우기를 처리하는 새로운 명령이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="b0106766ecd6f0279e508ba74ac1cfd386ae663b" translate="yes" xml:space="preserve">
          <source>Added new options &lt;code&gt;retryOnStatusCodeFailure&lt;/code&gt; and &lt;code&gt;retryOnNetworkFailure&lt;/code&gt; to &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">새로운 옵션 추가 &lt;code&gt;retryOnStatusCodeFailure&lt;/code&gt; 및 &lt;code&gt;retryOnNetworkFailure&lt;/code&gt; 을 에 &lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="520e019dcf9b0df93ebe8eb0cad2996415cd64f1" translate="yes" xml:space="preserve">
          <source>Added newly supported &lt;code&gt;focus&lt;/code&gt; assertion to &lt;a href=&quot;assertions&quot;&gt;Assertions&lt;/a&gt; doc. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/pull/1372&quot;&gt;#1372&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;assertions&quot;&gt;어설 션&lt;/a&gt; 문서에 새로 지원되는 &lt;code&gt;focus&lt;/code&gt; 어설 션이 추가되었습니다 . 주소 &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/pull/1372&quot;&gt;# 1372&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4f23ed1d4650d1c4886e60aa15e4b3bb8b111be8" translate="yes" xml:space="preserve">
          <source>Added option &lt;code&gt;failOnStatusCode&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;failOnStatusCode&lt;/code&gt; 옵션 추가</target>
        </trans-unit>
        <trans-unit id="92332215d2bf438a7b97b572e10cb4d469d68f0d" translate="yes" xml:space="preserve">
          <source>Added option &lt;code&gt;force&lt;/code&gt;</source>
          <target state="translated">옵션 &lt;code&gt;force&lt;/code&gt; 추가</target>
        </trans-unit>
        <trans-unit id="ba3d714bbcd87c580ba6074f86b204f9ab8434b3" translate="yes" xml:space="preserve">
          <source>Added option &lt;code&gt;log&lt;/code&gt;</source>
          <target state="translated">옵션 &lt;code&gt;log&lt;/code&gt; 추가</target>
        </trans-unit>
        <trans-unit id="81d0bbbfaa6764e33d804484285ac1fd87a6e2ea" translate="yes" xml:space="preserve">
          <source>Added option &lt;code&gt;onBeforeLoad&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;onBeforeLoad&lt;/code&gt; 옵션 추가</target>
        </trans-unit>
        <trans-unit id="8ab0c65247dc209c1d13e499e409e8a221c399d9" translate="yes" xml:space="preserve">
          <source>Added options &lt;code&gt;url&lt;/code&gt;, &lt;code&gt;method&lt;/code&gt;, &lt;code&gt;body&lt;/code&gt;, and &lt;code&gt;headers&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;url&lt;/code&gt; , &lt;code&gt;method&lt;/code&gt; , &lt;code&gt;body&lt;/code&gt; 및 &lt;code&gt;headers&lt;/code&gt; 옵션 추가</target>
        </trans-unit>
        <trans-unit id="5beb7be28cf184d0757d227b7e8c275b7bc76705" translate="yes" xml:space="preserve">
          <source>Added recipe for Direct Controlling AngularJS</source>
          <target state="translated">직접 제어 AngularJS를위한 레시피 추가</target>
        </trans-unit>
        <trans-unit id="846031a7ce6568762e3b41f67c80cde55102e019" translate="yes" xml:space="preserve">
          <source>Added recipe for E2E API Testing</source>
          <target state="translated">E2E API 테스트를위한 레시피 추가</target>
        </trans-unit>
        <trans-unit id="ed426af3da11df940bf2e2bca5ebfad9296dda23" translate="yes" xml:space="preserve">
          <source>Added recipe for TypeScript with Browserify</source>
          <target state="translated">Browserify로 TypeScript를위한 레시피 추가</target>
        </trans-unit>
        <trans-unit id="9414d7c2c58e4c1f05c73c3650a2d18bc5e96055" translate="yes" xml:space="preserve">
          <source>Added recipe for TypeScript with Webpack</source>
          <target state="translated">Webpack으로 TypeScript를위한 레시피 추가</target>
        </trans-unit>
        <trans-unit id="6bec891c979143afaaf85df7608e4a82ed01db24" translate="yes" xml:space="preserve">
          <source>Added retina favicon. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/83&quot;&gt;#83&lt;/a&gt;.</source>
          <target state="translated">망막 파비콘을 추가했습니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/83&quot;&gt;# 83&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5335944bc2e966c926c3dbdcf6855b54bcfd1eae" translate="yes" xml:space="preserve">
          <source>Added small delay (10ms) between each keystroke during &lt;code&gt;cy.type()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cy.type()&lt;/code&gt; 동안 각 키 입력 사이에 작은 지연 (10ms)이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="50a178c6c3ef4c47dab55ceba0de31d24a2f1ed7" translate="yes" xml:space="preserve">
          <source>Added special error messages when elements cannot have actions applied to them with a suggestion to use &lt;code&gt;{force: true}&lt;/code&gt;.</source>
          <target state="translated">요소에 &lt;code&gt;{force: true}&lt;/code&gt; 사용을 제안하는 요소를 적용 할 수없는 경우 특수 오류 메시지가 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="f7fe3d72dca7f2a0f3c7bb08a6adea2ae3730a62" translate="yes" xml:space="preserve">
          <source>Added support for a command&amp;rsquo;s &lt;code&gt;message&lt;/code&gt; or &lt;code&gt;renderProps.message&lt;/code&gt; to use markdown.</source>
          <target state="translated">마크 다운을 사용하기 위해 명령 &lt;code&gt;message&lt;/code&gt; 또는 &lt;code&gt;renderProps.message&lt;/code&gt; 에 대한 지원이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="89aef9e5ec2dbda10112a16e65524364c12a2ba1" translate="yes" xml:space="preserve">
          <source>Added support for any valid HTTP &lt;code&gt;method&lt;/code&gt; argument including &lt;code&gt;TRACE&lt;/code&gt;, &lt;code&gt;COPY&lt;/code&gt;, &lt;code&gt;LOCK&lt;/code&gt;, &lt;code&gt;MKCOL&lt;/code&gt;, &lt;code&gt;MOVE&lt;/code&gt;, &lt;code&gt;PURGE&lt;/code&gt;, &lt;code&gt;PROPFIND&lt;/code&gt;, &lt;code&gt;PROPPATCH&lt;/code&gt;, &lt;code&gt;UNLOCK&lt;/code&gt;, &lt;code&gt;REPORT&lt;/code&gt;, &lt;code&gt;MKACTIVITY&lt;/code&gt;, &lt;code&gt;CHECKOUT&lt;/code&gt;, &lt;code&gt;MERGE&lt;/code&gt;, &lt;code&gt;M-SEARCH&lt;/code&gt;, &lt;code&gt;NOTIFY&lt;/code&gt;, &lt;code&gt;SUBSCRIBE&lt;/code&gt;, &lt;code&gt;UNSUBSCRIBE&lt;/code&gt;, &lt;code&gt;SEARCH&lt;/code&gt;, and &lt;code&gt;CONNECT&lt;/code&gt;.</source>
          <target state="translated">유효한 HTTP에 대한 지원이 추가되었습니다 &lt;code&gt;method&lt;/code&gt; 을 포함하여 인수 &lt;code&gt;TRACE&lt;/code&gt; , &lt;code&gt;COPY&lt;/code&gt; , &lt;code&gt;LOCK&lt;/code&gt; , &lt;code&gt;MKCOL&lt;/code&gt; 는 , &lt;code&gt;MOVE&lt;/code&gt; , &lt;code&gt;PURGE&lt;/code&gt; , &lt;code&gt;PROPFIND&lt;/code&gt; 는 , &lt;code&gt;PROPPATCH&lt;/code&gt; 는 , &lt;code&gt;UNLOCK&lt;/code&gt; , &lt;code&gt;REPORT&lt;/code&gt; , &lt;code&gt;MKACTIVITY&lt;/code&gt; 는 , &lt;code&gt;CHECKOUT&lt;/code&gt; , &lt;code&gt;MERGE&lt;/code&gt; , &lt;code&gt;M-SEARCH&lt;/code&gt; , &lt;code&gt;NOTIFY&lt;/code&gt; , &lt;code&gt;SUBSCRIBE&lt;/code&gt; , &lt;code&gt;UNSUBSCRIBE&lt;/code&gt; , &lt;code&gt;SEARCH&lt;/code&gt; 및 &lt;code&gt;CONNECT&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="51c2bf439a47480197a9b00911a3e1e289363b83" translate="yes" xml:space="preserve">
          <source>Added support for options &lt;code&gt;retryOnStatusCodeFailure&lt;/code&gt; and &lt;code&gt;retryOnNetworkFailure&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;retryOnStatusCodeFailure&lt;/code&gt; 및 &lt;code&gt;retryOnNetworkFailure&lt;/code&gt; 옵션에 대한 지원 추가</target>
        </trans-unit>
        <trans-unit id="9fbb72efc2199e30fa75b3b1e1a22d5426525820" translate="yes" xml:space="preserve">
          <source>Added support for options &lt;code&gt;retryOnStatusCodeFailure&lt;/code&gt; and &lt;code&gt;retryOnNetworkFailure&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;retryOnStatusCodeFailure&lt;/code&gt; 및 &lt;code&gt;retryOnNetworkFailure&lt;/code&gt; 옵션에 대한 지원이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="39412ed672a29311e6c728c537c5bbeb066f9928" translate="yes" xml:space="preserve">
          <source>Added support to &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; for inputs of type &lt;code&gt;date&lt;/code&gt;, &lt;code&gt;time&lt;/code&gt;, &lt;code&gt;month&lt;/code&gt;, and &lt;code&gt;week&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/27&quot;&gt;#27&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;date&lt;/code&gt; , &lt;code&gt;time&lt;/code&gt; , &lt;code&gt;month&lt;/code&gt; 및 &lt;code&gt;week&lt;/code&gt; 유형의 입력에 대한 &lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 지원이 추가되었습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/27&quot;&gt;# 27&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="e958168342438e8cf735a63b796c60e515b1b4c4" translate="yes" xml:space="preserve">
          <source>Added the &lt;code&gt;Beta&lt;/code&gt; flag everywhere (since we are still technically in beta).</source>
          <target state="translated">기술적으로 베타 버전이므로 &lt;code&gt;Beta&lt;/code&gt; 플래그를 어디에나 추가했습니다 .</target>
        </trans-unit>
        <trans-unit id="3d82a3252ddebe882e2e1cc25a8b15fb4a448502" translate="yes" xml:space="preserve">
          <source>Added the ability to click on file/folder links from within the Cypress webapp that will spawn your OS file/folder finder and show you where the files are located in your project.</source>
          <target state="translated">Cypress webapp 내에서 파일 / 폴더 링크를 클릭하여 OS 파일 / 폴더 파인더를 생성하고 파일이 프로젝트에서 파일이있는 위치를 표시하는 기능을 추가했습니다.</target>
        </trans-unit>
        <trans-unit id="525c608b9349014ab2640891669ad5b050c8a18e" translate="yes" xml:space="preserve">
          <source>Added tooltips everywhere.</source>
          <target state="translated">모든 곳에 툴팁이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="77226f24e080cbf42517445a5cf5f38ce82e807c" translate="yes" xml:space="preserve">
          <source>Added type definition for &lt;a href=&quot;../../api/cypress-api/iscy&quot;&gt;&lt;code&gt;Cypress.isCy()&lt;/code&gt;&lt;/a&gt; method. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3822&quot;&gt;#3822&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/cypress-api/iscy&quot;&gt; &lt;code&gt;Cypress.isCy()&lt;/code&gt; &lt;/a&gt; 메소드에 대한 유형 정의가 추가되었습니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3822&quot;&gt;# 3822&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="42ccb4932d1217df390f573e91b3df2bbbd3b49f" translate="yes" xml:space="preserve">
          <source>Added type definition for undocumented &lt;code&gt;Cypress.LocalStorage.clear&lt;/code&gt; method. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4070&quot;&gt;#4070&lt;/a&gt;.</source>
          <target state="translated">문서화되지 않은 &lt;code&gt;Cypress.LocalStorage.clear&lt;/code&gt; 메소드에 대한 유형 정의가 추가되었습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4070&quot;&gt;# 4070&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="5f6e9a3018bf12c68699e2098cf27adaa1e84bd0" translate="yes" xml:space="preserve">
          <source>Added type definitions for &lt;code&gt;Cypress.moment()&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2746&quot;&gt;#2746&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Cypress.moment()&lt;/code&gt; 대한 유형 정의가 추가되었습니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2746&quot;&gt;# 2746&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fd3d7d418daa5583b3f32db71a7b98561065da2f" translate="yes" xml:space="preserve">
          <source>Added type definitions for &lt;code&gt;Cypress.off&lt;/code&gt; and &lt;code&gt;Cypress.log&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1110&quot;&gt;#1110&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1591&quot;&gt;#1591&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Cypress.off&lt;/code&gt; 및 &lt;code&gt;Cypress.log&lt;/code&gt; 에 대한 유형 정의가 추가되었습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1110&quot;&gt;# 1110&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1591&quot;&gt;# 1591을&lt;/a&gt; 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="b09744d2592ed635b95af69c97d2c9ae57ba0c82" translate="yes" xml:space="preserve">
          <source>Added utility methods &lt;a href=&quot;../../api/cypress-api/platform&quot;&gt;&lt;code&gt;Cypress.platform&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/cypress-api/arch&quot;&gt;&lt;code&gt;Cypress.arch&lt;/code&gt;&lt;/a&gt; for returning the underlying OS information. Uses node&amp;rsquo;s &lt;code&gt;os&lt;/code&gt; module under the hood. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/824&quot;&gt;#824&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/675&quot;&gt;#675&lt;/a&gt;.</source>
          <target state="translated">기본 OS 정보를 반환하기위한 &lt;a href=&quot;../../api/cypress-api/platform&quot;&gt; &lt;code&gt;Cypress.platform&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../api/cypress-api/arch&quot;&gt; &lt;code&gt;Cypress.arch&lt;/code&gt; &lt;/a&gt; 유틸리티 메소드가 추가되었습니다 . 후드 아래에서 노드의 &lt;code&gt;os&lt;/code&gt; 모듈을 사용합니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/824&quot;&gt;# 824&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/675&quot;&gt;# 675를&lt;/a&gt; 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="2b9e4a31489c6fd1bd2206107de38dca0fe49604" translate="yes" xml:space="preserve">
          <source>Added word labels beside icons in Desktop Application for &amp;lsquo;Support&amp;rsquo; and &amp;lsquo;Docs&amp;rsquo; links. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3091&quot;&gt;#3091&lt;/a&gt;.</source>
          <target state="translated">'지원'및 '문서'링크에 대해 데스크탑 응용 프로그램의 아이콘 옆에 단어 레이블을 추가했습니다. 주소 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3091&quot;&gt;# 3091&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="120aebbb2f2b583c8ccd5be7138662cb1ef2a3a6" translate="yes" xml:space="preserve">
          <source>Adding New Assertions</source>
          <target state="translated">새 어설 션 추가</target>
        </trans-unit>
        <trans-unit id="d7a2c4606060e39f4fb87c860138f3fba92bd92b" translate="yes" xml:space="preserve">
          <source>Adding a &lt;a href=&quot;configuration#Global&quot;&gt;&lt;code&gt;baseUrl&lt;/code&gt;&lt;/a&gt; can also save some time during the initial startup of your Cypress tests.</source>
          <target state="translated">&lt;a href=&quot;configuration#Global&quot;&gt; &lt;code&gt;baseUrl&lt;/code&gt; 을&lt;/a&gt; 추가하면 Cypress 테스트를 처음 시작할 때 시간을 절약 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0fd6f4c1b2dfa7a02b06fb44fd121b1091315e1e" translate="yes" xml:space="preserve">
          <source>Adding a &lt;a href=&quot;configuration#Global&quot;&gt;&lt;code&gt;baseUrl&lt;/code&gt;&lt;/a&gt; in your configuration allows you to omit passing the &lt;code&gt;baseUrl&lt;/code&gt; to commands like &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt;. Cypress assumes this is the url you want to use.</source>
          <target state="translated">구성에 &lt;a href=&quot;configuration#Global&quot;&gt; &lt;code&gt;baseUrl&lt;/code&gt; &lt;/a&gt; 을 추가하면 &lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt; 와 같은 명령에 &lt;code&gt;baseUrl&lt;/code&gt; 을 전달하지 않아도 됩니다. Cypress는 이것이 사용하려는 URL이라고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="fa7ae94b3e380782926fae3086a5e6d37fd917ce" translate="yes" xml:space="preserve">
          <source>Adding a &lt;a href=&quot;http://www.typescriptlang.org/docs/handbook/tsconfig-json.html&quot;&gt;&lt;code&gt;tsconfig.json&lt;/code&gt;&lt;/a&gt; inside your &lt;a href=&quot;../core-concepts/writing-and-organizing-tests#Folder-Structure&quot;&gt;&lt;code&gt;cypress&lt;/code&gt; folder&lt;/a&gt; with the following configuration should get intelligent code completion working.</source>
          <target state="translated">다음 구성으로 &lt;a href=&quot;../core-concepts/writing-and-organizing-tests#Folder-Structure&quot;&gt; &lt;code&gt;cypress&lt;/code&gt; &lt;/a&gt; 폴더 안에 &lt;a href=&quot;http://www.typescriptlang.org/docs/handbook/tsconfig-json.html&quot;&gt; &lt;code&gt;tsconfig.json&lt;/code&gt; 을&lt;/a&gt; 추가 하면 지능적인 코드 완성이 작동합니다.</target>
        </trans-unit>
        <trans-unit id="d1827607e9a1ebf3d970be390f7eefa603ae069d" translate="yes" xml:space="preserve">
          <source>Adding an alias using &lt;a href=&quot;as&quot;&gt;&lt;code&gt;.as()&lt;/code&gt;&lt;/a&gt; to spies makes them easier to identify in error messages and Cypress&amp;rsquo; command log.</source>
          <target state="translated">스파이에 &lt;a href=&quot;as&quot;&gt; &lt;code&gt;.as()&lt;/code&gt; &lt;/a&gt; 를 사용하여 별칭을 추가하면 오류 메시지와 Cypress의 명령 로그에서 쉽게 식별 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="27e7d89aa5da0579d59c43b52212f8102937ee41" translate="yes" xml:space="preserve">
          <source>Adding an alias using &lt;a href=&quot;as&quot;&gt;&lt;code&gt;.as()&lt;/code&gt;&lt;/a&gt; to stubs makes them easier to identify in error messages and Cypress&amp;rsquo;s command log.</source>
          <target state="translated">스텁에 &lt;a href=&quot;as&quot;&gt; &lt;code&gt;.as()&lt;/code&gt; &lt;/a&gt; 를 사용하여 별명을 추가하면 오류 메시지 및 Cypress의 명령 로그에서 쉽게 식별 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c461fd64d305b87bea7b5f1a217a1a2ae92794fa" translate="yes" xml:space="preserve">
          <source>Adding an attribute called &lt;code&gt;data-cypress-ignore&lt;/code&gt; to an element will prevent the internal Cypress proxy from rewriting any of its content or attributes.</source>
          <target state="translated">&lt;code&gt;data-cypress-ignore&lt;/code&gt; 라는 속성을 요소에 추가하면 내부 Cypress 프록시가 내용 또는 속성을 다시 쓰지 못하게됩니다.</target>
        </trans-unit>
        <trans-unit id="7505243d5e5f36f2ae798392e98c6f6710866ffe" translate="yes" xml:space="preserve">
          <source>Adding custom properties to the global &lt;code&gt;window&lt;/code&gt; with the right TypeScript type</source>
          <target state="translated">올바른 TypeScript 유형으로 전역 &lt;code&gt;window&lt;/code&gt; 사용자 정의 속성 추가</target>
        </trans-unit>
        <trans-unit id="948a56da88c62a52b1ff1519fb4d1ac9cdf61dca" translate="yes" xml:space="preserve">
          <source>Adding delay can help simulate real world network latency. Normally stubbed responses return in under 20ms. Adding a delay can help you visualize how your application&amp;rsquo;s state reacts to requests that are in flight.</source>
          <target state="translated">지연을 추가하면 실제 네트워크 대기 시간을 시뮬레이션 할 수 있습니다. 일반적으로 스텁 된 응답은 20ms 미만으로 돌아갑니다. 지연을 추가하면 애플리케이션 상태가 비행중인 요청에 어떻게 반응하는지 시각화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0e2022ba53a45c0b6bfce900a7c9a8dfc3cae998" translate="yes" xml:space="preserve">
          <source>Adding more commands and assertions</source>
          <target state="translated">더 많은 명령 및 어설 션 추가</target>
        </trans-unit>
        <trans-unit id="9085f8ef65fbf074655320c20158f4d7ef91508c" translate="yes" xml:space="preserve">
          <source>Adding npm scripts</source>
          <target state="translated">npm 스크립트 추가</target>
        </trans-unit>
        <trans-unit id="871f46d7b3e98ab8e4ab31b3b18b1fa219de1b75" translate="yes" xml:space="preserve">
          <source>Adding validations is optional. Passing &lt;code&gt;{ prevSubject: true }&lt;/code&gt; will require a subject, but not validate its type.</source>
          <target state="translated">유효성 검사를 추가하는 것은 선택 사항입니다. &lt;code&gt;{ prevSubject: true }&lt;/code&gt; 전달 하면 제목이 필요하지만 유형을 확인하지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="bbf54007428a1ae132f48f9e50b37268e62a772b" translate="yes" xml:space="preserve">
          <source>Additional arguments to be given to the function call. There is no limit to the number of arguments.</source>
          <target state="translated">함수 호출에 추가 인수가 제공됩니다. 인수의 수에는 제한이 없습니다.</target>
        </trans-unit>
        <trans-unit id="30c9d38014f6b16fef1e182bee0de48a6f46686f" translate="yes" xml:space="preserve">
          <source>Additional arguments to be printed to the Cypress Command Log. There is no limit to the number of arguments.</source>
          <target state="translated">Cypress 명령 로그에 인쇄 될 추가 인수 인수의 수에는 제한이 없습니다.</target>
        </trans-unit>
        <trans-unit id="6bf5ee7e78978bbcdb206e7947b4c3fd038a5c0b" translate="yes" xml:space="preserve">
          <source>Additional headers to send; Accepts object literal</source>
          <target state="translated">보낼 추가 헤더; 객체 리터럴을 허용</target>
        </trans-unit>
        <trans-unit id="911a0b354b810ade1b41221cd419095a4767144e" translate="yes" xml:space="preserve">
          <source>Additional information</source>
          <target state="translated">추가 정보</target>
        </trans-unit>
        <trans-unit id="d91206f7ffc181e9d7e903c7a51d7a3f4016af88" translate="yes" xml:space="preserve">
          <source>Additionally &lt;code&gt;change&lt;/code&gt; events will be fired either when the &lt;code&gt;{enter}&lt;/code&gt; key is pressed (and the value has changed since the last focus event), or whenever the element loses focus. This matches browser behavior.</source>
          <target state="translated">또한 &lt;code&gt;change&lt;/code&gt; 이벤트가 발사됩니다 어느 때 &lt;code&gt;{enter}&lt;/code&gt; 키를 누를 때 (그리고 값이 마지막 포커스 이벤트 이후 변경된) 또는 요소가 포커스를 잃을 때마다. 이것은 브라우저 동작과 일치합니다.</target>
        </trans-unit>
        <trans-unit id="6a948140f5ee3e640a89457e849cdbe9dfa8e949" translate="yes" xml:space="preserve">
          <source>Additionally Cypress handles these 4 other situations as defined in the spec:</source>
          <target state="translated">또한 Cypress는 사양에 정의 된대로 다음 4 가지 다른 상황을 처리합니다.</target>
        </trans-unit>
        <trans-unit id="468764ab2864517526e548dc2a3176d5881494de" translate="yes" xml:space="preserve">
          <source>Additionally an element is considered hidden if:</source>
          <target state="translated">또한 다음과 같은 경우 요소가 숨겨진 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="f85e140ff278a5f548c74dfc46ec934ba22c58dc" translate="yes" xml:space="preserve">
          <source>Additionally if the &lt;code&gt;mousedown&lt;/code&gt; event causes the element to be removed from the DOM, the remaining events should continue to be fired, but to the resulting element left below the removed element. This has also not been implemented. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;Open an issue&lt;/a&gt; if you need this to be fixed.</source>
          <target state="translated">또한 &lt;code&gt;mousedown&lt;/code&gt; 이벤트로 인해 요소가 DOM에서 제거되면 나머지 이벤트는 계속 발생하지만 결과 요소는 제거 된 요소 아래에 남아 있습니다. 이것은 또한 구현되지 않았습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;이 문제를 해결하려면 문제를여십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="91cfdf20738fead4d1c75a2cdec65956051a528a" translate="yes" xml:space="preserve">
          <source>Additionally we&amp;rsquo;ll display a red &amp;ldquo;hitbox&amp;rdquo; - which is a dot indicating the coordinates of the event.</source>
          <target state="translated">또한 이벤트의 좌표를 나타내는 점인 빨간색&amp;ldquo;hitbox&amp;rdquo;가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="8d3990b822f78b90c0d0e6a0d1612720ef0d0f6d" translate="yes" xml:space="preserve">
          <source>Additionally we&amp;rsquo;ve integrated the tests run into the Cypress &lt;a href=&quot;../core-concepts/test-runner&quot;&gt;Test Runner&lt;/a&gt;. This means you can see the tests run in the &lt;em&gt;Runs&lt;/em&gt; tab from within every project.</source>
          <target state="translated">또한 테스트 실행을 Cypress &lt;a href=&quot;../core-concepts/test-runner&quot;&gt;Test Runner에&lt;/a&gt; 통합했습니다 . 즉, 모든 프로젝트 내 에서 &lt;em&gt;실행&lt;/em&gt; 탭에서 테스트가 실행되는 것을 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7476d1308d7149d2864e651f4f1c1e700b20c2dc" translate="yes" xml:space="preserve">
          <source>Additionally, Cypress automatically sets the viewport to its default size between each test.</source>
          <target state="translated">또한 Cypress는 각 테스트간에 뷰포트를 기본 크기로 자동 설정합니다.</target>
        </trans-unit>
        <trans-unit id="df804973b85c1b22ce250c1ef82d652af52ef6ce" translate="yes" xml:space="preserve">
          <source>Additionally, Cypress will automatically capture screenshots when a failure happens during runs outside of interactive mode.</source>
          <target state="translated">또한 Cypress는 대화식 모드 외부에서 실행하는 동안 오류가 발생하면 자동으로 스크린 샷을 캡처합니다.</target>
        </trans-unit>
        <trans-unit id="230528d44508fade9c80a8c7e3711bdf464f6dbf" translate="yes" xml:space="preserve">
          <source>Additionally, Cypress will respect and await promises you return. This enables you to perform asynchronous tasks and eventually resolve with the modified configuration object.</source>
          <target state="translated">또한 Cypress는 고객의 귀환 약속을 존중하고 기다립니다. 이를 통해 비동기 작업을 수행하고 최종적으로 수정 된 구성 개체로 해결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4801a4b4aee3630e04a15685e0cf2ff70dc1d03f" translate="yes" xml:space="preserve">
          <source>Additionally, Mocha gives us excellent &lt;a href=&quot;http://mochajs.org/#asynchronous-code&quot;&gt;&lt;code&gt;async&lt;/code&gt; support&lt;/a&gt;. Cypress has extended Mocha, sanding off the rough edges, weird edge cases, bugs, and error messages. These fixes are all completely transparent.</source>
          <target state="translated">또한 Mocha는 뛰어난 &lt;a href=&quot;http://mochajs.org/#asynchronous-code&quot;&gt; &lt;code&gt;async&lt;/code&gt; 지원을 제공&lt;/a&gt; 합니다. Cypress는 거친 가장자리, 이상한 가장자리 케이스, 버그 및 오류 메시지를 제거하여 Mocha를 확장했습니다. 이 수정은 모두 완전히 투명합니다.</target>
        </trans-unit>
        <trans-unit id="d260afa0496a40aa960b30970448e4afb9ff6c79" translate="yes" xml:space="preserve">
          <source>Additionally, events that cause a &lt;code&gt;change&lt;/code&gt; event to fire (such as typing &lt;code&gt;{enter}&lt;/code&gt;) will display with the &lt;code&gt;change&lt;/code&gt; event column as &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">또한 &lt;code&gt;change&lt;/code&gt; 이벤트를 발생 시키는 이벤트 (예 : &lt;code&gt;{enter}&lt;/code&gt; 입력 )는 &lt;code&gt;change&lt;/code&gt; 이벤트 열이 &lt;code&gt;true&lt;/code&gt; 로 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="b4e9f9733c1832ebe992ac9b0127b7ab9783c02b" translate="yes" xml:space="preserve">
          <source>Additionally, it is often much easier to use &lt;a href=&quot;debug&quot;&gt;&lt;code&gt;cy.debug()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;pause&quot;&gt;&lt;code&gt;cy.pause()&lt;/code&gt;&lt;/a&gt; when debugging your test code.</source>
          <target state="translated">또한 테스트 코드를 디버깅 할 때 &lt;a href=&quot;debug&quot;&gt; &lt;code&gt;cy.debug()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;pause&quot;&gt; &lt;code&gt;cy.pause()&lt;/code&gt; &lt;/a&gt; 를 사용하는 것이 훨씬 쉽습니다 .</target>
        </trans-unit>
        <trans-unit id="c9d2a81a048c99de1a848edbc31e8b389111b527" translate="yes" xml:space="preserve">
          <source>Additionally, it makes it clear to everyone that this element is used directly by test code.</source>
          <target state="translated">또한이 요소가 테스트 코드에서 직접 사용됨을 모든 사람에게 명확하게합니다.</target>
        </trans-unit>
        <trans-unit id="3a3235843c519d9722896ee477bfdaed75cb97c0" translate="yes" xml:space="preserve">
          <source>Additionally, testing through an OAuth provider is mutable - you will first need a real user on their service and then modifying anything on that user might affect other tests downstream.</source>
          <target state="translated">또한 OAuth 공급자를 통한 테스트는 변경 가능합니다. 먼저 서비스에 실제 사용자가 필요하며 해당 사용자의 모든 항목을 수정하면 다른 테스트 다운 스트림에 영향을 줄 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c47c2859ba82bdc08ef2cd4ebd51f55d7f65246f" translate="yes" xml:space="preserve">
          <source>Additionally, the result of the last Cypress command in the callback function will be yielded as the new subject and flow into the next command if there is no &lt;code&gt;return&lt;/code&gt;.</source>
          <target state="translated">또한 콜백 함수의 마지막 Cypress 명령 결과는 새 주제로 표시되며 &lt;code&gt;return&lt;/code&gt; 이 없으면 다음 명령으로 이동합니다 .</target>
        </trans-unit>
        <trans-unit id="96df8f87b59d741ff09275ce132a63af65e75511" translate="yes" xml:space="preserve">
          <source>Additionally, we&amp;rsquo;ve made the browsers spawned by Cypress look different than regular sessions. You&amp;rsquo;ll see a darker theme around the chrome of the browser. You&amp;rsquo;ll always be able to visually distinguish these.</source>
          <target state="translated">또한 Cypress에서 생성 한 브라우저를 일반 세션과 다르게 보이도록 만들었습니다. 브라우저의 크롬 주위에 더 어두운 테마가 표시됩니다. 항상 시각적으로 구별 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9bc28a1c3538a13f85da39b541d21cd5d47d821f" translate="yes" xml:space="preserve">
          <source>Adds Authorization headers. &lt;a href=&quot;https://github.com/request/request#http-authentication&quot;&gt;Accepts these options.&lt;/a&gt;</source>
          <target state="translated">권한 부여 헤더를 추가합니다. &lt;a href=&quot;https://github.com/request/request#http-authentication&quot;&gt;이러한 옵션을 승인합니다.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ea78242b0d31de5b6c99428ffdd6779230bcba84" translate="yes" xml:space="preserve">
          <source>Adds Basic Authorization headers</source>
          <target state="translated">기본 인증 헤더를 추가합니다</target>
        </trans-unit>
        <trans-unit id="537e752bbd94b12ebba271eb88182ea1d26e9eac" translate="yes" xml:space="preserve">
          <source>Adds XPath command. This repo is also a good example of using custom commands to do retries, provide TypeScript definitions, etc.</source>
          <target state="translated">XPath 명령을 추가합니다. 이 리포지토리는 사용자 지정 명령을 사용하여 재 시도를 수행하고 TypeScript 정의를 제공하는 등의 좋은 예입니다.</target>
        </trans-unit>
        <trans-unit id="233f419c5f3ce301a3ffbe59014a811761f56836" translate="yes" xml:space="preserve">
          <source>Adds a cypress child command for drag'n'drop support.</source>
          <target state="translated">드래그 앤 드롭 지원을위한 cypress 하위 명령을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="08a051ffe2d712bb149aacfcc01b3281c41f4914" translate="yes" xml:space="preserve">
          <source>Adds commands for executing a mocked GraphQL server using only the client</source>
          <target state="translated">클라이언트 만 사용하여 조롱 된 GraphQL 서버를 실행하기위한 명령을 추가합니다</target>
        </trans-unit>
        <trans-unit id="57b147e614b17010d0682e872632d1615f3de93c" translate="yes" xml:space="preserve">
          <source>Adds visual regression testing to Cypress</source>
          <target state="translated">Cypress에 시각적 회귀 테스트 추가</target>
        </trans-unit>
        <trans-unit id="4d064726954a17487f94e931f5b157b733ec22ed" translate="yes" xml:space="preserve">
          <source>Advanced</source>
          <target state="translated">Advanced</target>
        </trans-unit>
        <trans-unit id="b0a8b2c54edfd9a9ea755f46e06649a907893cff" translate="yes" xml:space="preserve">
          <source>Advanced setup</source>
          <target state="translated">고급 설정</target>
        </trans-unit>
        <trans-unit id="1544669a79822dddcd02512f4c2ffb91edd5eff4" translate="yes" xml:space="preserve">
          <source>After &lt;code&gt;cypress run&lt;/code&gt; completes, Cypress automatically compresses the video in order to save on file size. By default it compresses to a &lt;code&gt;32 CRF&lt;/code&gt;, but this is configurable with the &lt;a href=&quot;../references/configuration#Videos&quot;&gt;&lt;code&gt;videoCompression&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">후 &lt;code&gt;cypress run&lt;/code&gt; 완료, 싸이프레스는 자동으로 파일 크기를 줄이기 위해 비디오를 압축합니다. 기본적으로 &lt;code&gt;32 CRF&lt;/code&gt; 로 압축 되지만 &lt;a href=&quot;../references/configuration#Videos&quot;&gt; &lt;code&gt;videoCompression&lt;/code&gt; &lt;/a&gt; 속성을 사용하여 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6d64770f719d98fb093f232b824f4663be682ec4" translate="yes" xml:space="preserve">
          <source>After Screenshot</source>
          <target state="translated">스크린 샷 후</target>
        </trans-unit>
        <trans-unit id="4663040b0fd94ae31c06c2ef4bb077f1b183c7ce" translate="yes" xml:space="preserve">
          <source>After Screenshot API</source>
          <target state="translated">스크린 샷 API 후</target>
        </trans-unit>
        <trans-unit id="2f0c14f15072e5c313e17ef7b8d74a17fcc31a15" translate="yes" xml:space="preserve">
          <source>After a moment, the Cypress Test Runner will launch.</source>
          <target state="translated">잠시 후 Cypress Test Runner가 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="a97761c049ac5643e9eff096614806a9ae8b52bf" translate="yes" xml:space="preserve">
          <source>After a screenshot is taken, you can get details about the screenshot via the &lt;code&gt;after:screenshot&lt;/code&gt; plugin event. This event is called whether a screenshot is taken with &lt;a href=&quot;../commands/screenshot&quot;&gt;&lt;code&gt;cy.screenshot()&lt;/code&gt;&lt;/a&gt; or as a result of a test failure. The event is called after the screenshot image is written to disk.</source>
          <target state="translated">스크린 샷을 만든 &lt;code&gt;after:screenshot&lt;/code&gt; 플러그인 이벤트 를 통해 스크린 샷에 대한 세부 정보를 얻을 수 있습니다 . 이 이벤트는 &lt;a href=&quot;../commands/screenshot&quot;&gt; &lt;code&gt;cy.screenshot()&lt;/code&gt; &lt;/a&gt; 으로 스크린 샷을 찍었는지 또는 테스트 실패로 인해 호출 됩니다. 스크린 샷 이미지가 디스크에 기록 된 후에 이벤트가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="d545171003c5197a9b5e227a8a19148b959ef43d" translate="yes" xml:space="preserve">
          <source>After a test function is finished running, Cypress goes to work executing the commands that were enqueued using the &lt;code&gt;cy.*&lt;/code&gt; command chains. The test above would cause an execution in this order:</source>
          <target state="translated">테스트 기능 실행이 완료되면 Cypress는 &lt;code&gt;cy.*&lt;/code&gt; 명령 체인을 사용하여 큐에 넣은 명령을 실행합니다 . 위의 테스트는 다음 순서로 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="9793b5d949be8e616999352171be0bdcb8528d84" translate="yes" xml:space="preserve">
          <source>After adding a new project, Cypress will automatically scaffold out a suggested folder structure. By default it will create:</source>
          <target state="translated">새 프로젝트를 추가 한 후 Cypress는 제안 된 폴더 구조를 자동으로 비계 화합니다. 기본적으로 다음을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="cff39eea96cbb5de58eb5f71460995aa0f831324" translate="yes" xml:space="preserve">
          <source>After an update Cypress will now open back up and show itself in these same coordinates.</source>
          <target state="translated">업데이트 후 Cypress는 이제 백업을 열고 동일한 좌표로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="5106c8633a4e6b714abaf6821f06f403129010ba" translate="yes" xml:space="preserve">
          <source>After clicking on this &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;, I expect its class to eventually be &lt;code&gt;active&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; 을 클릭하면 클래스가 결국 &lt;code&gt;active&lt;/code&gt; 될 것으로 예상 됩니다.</target>
        </trans-unit>
        <trans-unit id="5bc9dcec32c0df8287938e0e967b52be23c1da17" translate="yes" xml:space="preserve">
          <source>After completing &lt;code&gt;cypress ci&lt;/code&gt;, we now upload build assets (such as &lt;code&gt;screenshots&lt;/code&gt; and &lt;code&gt;videos&lt;/code&gt;) to be used in our upcoming admin interface. This will enable you to review assets without having to touch your CI server. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/292&quot;&gt;#292&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cypress ci&lt;/code&gt; 를 완료 한 후에 는 곧 관리 인터페이스에 사용할 빌드 자산 ( &lt;code&gt;screenshots&lt;/code&gt; 및 &lt;code&gt;videos&lt;/code&gt; )을 업로드 합니다. 이를 통해 CI 서버를 건드리지 않고도 자산을 검토 할 수 있습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/292&quot;&gt;# 292&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="114e2ed52497486047256b0a00c0bafa5bb6bd5b" translate="yes" xml:space="preserve">
          <source>After completing the Cypress GitHub App installation for your organization you can now enable GitHub Integration for &lt;em&gt;any&lt;/em&gt; Cypress project.</source>
          <target state="translated">조직의 싸이프레스 GitHub의 앱 설치를 완료 한 후에는 지금 GitHub의 통합을 활성화 할 수 &lt;em&gt;있는&lt;/em&gt; 싸이프레스 프로젝트.</target>
        </trans-unit>
        <trans-unit id="880bcd9bf637e796ea891464470f3ee8ab3405de" translate="yes" xml:space="preserve">
          <source>After each test I want to ensure the database is reset back to 0 records so when the next test runs, it is run with a clean state.</source>
          <target state="translated">각 테스트 후 데이터베이스가 0 레코드로 다시 설정되어 다음 테스트가 실행될 때 깨끗한 상태로 실행되도록하고 싶습니다.</target>
        </trans-unit>
        <trans-unit id="b2058db633883a3784f1e03db7b20e612cc5fcdc" translate="yes" xml:space="preserve">
          <source>After making an HTTP request to my server, I expect the response body to equal &lt;code&gt;{name: 'Jane'}&lt;/code&gt;</source>
          <target state="translated">서버에 HTTP 요청을 한 후 응답 본문이 &lt;code&gt;{name: 'Jane'}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="53ebcfac82646f78b243b2351374e6d832cfbc8d" translate="yes" xml:space="preserve">
          <source>After reading the above rules you may be wondering:</source>
          <target state="translated">위의 규칙을 읽은 후에 궁금 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fad2f8d32688e7447fc5e568b07607f08501785a" translate="yes" xml:space="preserve">
          <source>After running the test and opening the HTML report, we see 76% code coverage in our application.</source>
          <target state="translated">테스트를 실행하고 HTML 보고서를 열면 응용 프로그램에서 코드 적용 범위가 76 %입니다.</target>
        </trans-unit>
        <trans-unit id="b11d05a74b6b7eeaf1db7256683cb3028ccb1154" translate="yes" xml:space="preserve">
          <source>After running this command, you will need to run &lt;code&gt;cypress install&lt;/code&gt; before running Cypress again.</source>
          <target state="translated">이 명령을 실행 한 후 Cypress를 다시 실행하기 전에 &lt;code&gt;cypress install&lt;/code&gt; 을 실행해야 합니다.</target>
        </trans-unit>
        <trans-unit id="2cc967c14442524d275f2cae453073583c44f7e8" translate="yes" xml:space="preserve">
          <source>After running your test, instead of trying to &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; GitHub, you can use &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; to programmatically interact with GitHub&amp;rsquo;s APIs directly.</source>
          <target state="translated">테스트를 실행 한 후 &lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; GitHub 를 시도하는 대신 &lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt; 를 사용 하여 프로그래밍 방식으로 GitHub의 API와 직접 상호 작용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b604e0bd2b8b2268881be6f118e597f473a17b36" translate="yes" xml:space="preserve">
          <source>After scrolling the element, if we determine that it is still being covered up, we will continue to scroll and &amp;ldquo;nudge&amp;rdquo; the page until it becomes visible. This most frequently happens when you have &lt;code&gt;position: fixed&lt;/code&gt; or &lt;code&gt;position: sticky&lt;/code&gt; navigation elements which are fixed to the top of the page.</source>
          <target state="translated">요소를 스크롤 한 후에도 여전히 덮고 있다고 판단되면 페이지가 계속 보일 때까지 페이지를 계속 스크롤하고 &quot;nudge&quot;합니다. 이것은 페이지 상단에 고정 된 &lt;code&gt;position: fixed&lt;/code&gt; 또는 &lt;code&gt;position: sticky&lt;/code&gt; navigation 요소 가있을 때 가장 자주 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="ba5ddb616e87b19516c1292204fb921dc0baca99" translate="yes" xml:space="preserve">
          <source>After setting up your project, Cypress inserted a unique &lt;a href=&quot;#Identification&quot;&gt;projectId&lt;/a&gt; into your &lt;code&gt;cypress.json&lt;/code&gt;. If you&amp;rsquo;re using source control, we recommend that you check your &lt;code&gt;cypress.json&lt;/code&gt; including the &lt;code&gt;projectId&lt;/code&gt; into source control.</source>
          <target state="translated">프로젝트를 설정 한 후, 싸이프레스는 독특한 삽입 &lt;a href=&quot;#Identification&quot;&gt;projectId을&lt;/a&gt; 당신에 &lt;code&gt;cypress.json&lt;/code&gt; . 당신이 소스 제어를 사용하는 경우, 우리는 당신이 당신의 확인하는 것이 좋습니다 &lt;code&gt;cypress.json&lt;/code&gt; 을 포함 &lt;code&gt;projectId&lt;/code&gt; 소스 제어에.</target>
        </trans-unit>
        <trans-unit id="7c9c8bfe384d058254b06fc47b998d58caa4d6a9" translate="yes" xml:space="preserve">
          <source>After starting a server:</source>
          <target state="translated">서버를 시작한 후 :</target>
        </trans-unit>
        <trans-unit id="b9ed25989ad72360ac6a33250955819cf37e09d1" translate="yes" xml:space="preserve">
          <source>After the first &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; command is issued in a test, Cypress changes its URL to match the origin of your remote application, thereby solving the first major hurdle of &lt;code&gt;same-origin policy&lt;/code&gt;. Your application&amp;rsquo;s code executes the same as it does outside of Cypress, and everything works as expected.</source>
          <target state="translated">테스트에서 첫 번째 &lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 명령이 실행 된 후 Cypress는 URL을 원격 응용 프로그램의 출처와 일치하도록 변경하여 &lt;code&gt;same-origin policy&lt;/code&gt; 의 첫 번째 주요 장애물을 해결합니다 . 애플리케이션 코드는 Cypress 외부에서와 동일하게 실행되며 모든 것이 예상대로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="614db356accb5b760ada23e1a5acaa29047e8cf1" translate="yes" xml:space="preserve">
          <source>After the tests complete, the final code coverage is saved to a &lt;code&gt;.nyc_output&lt;/code&gt; folder. It is a JSON file from which we can generate a report in a variety of formats. The &lt;a href=&quot;https://github.com/cypress-io/code-coverage&quot;&gt;&lt;code&gt;@cypress/code-coverage&lt;/code&gt;&lt;/a&gt; plugin generates the HTML report automatically - you can open the &lt;code&gt;coverage/index.html&lt;/code&gt; page locally after the tests finish. You can also call &lt;code&gt;nyc report&lt;/code&gt; to generate other reports, for example, sending the coverage information to 3rd party services.</source>
          <target state="translated">테스트가 완료된 후 최종 코드 적용 범위는 &lt;code&gt;.nyc_output&lt;/code&gt; 폴더에 저장됩니다 . 다양한 형식으로 보고서를 생성 할 수있는 JSON 파일입니다. &lt;a href=&quot;https://github.com/cypress-io/code-coverage&quot;&gt; &lt;code&gt;@cypress/code-coverage&lt;/code&gt; &lt;/a&gt; 플러그인은 자동으로 HTML 보고서를 생성합니다 - 당신이 열 수있는 &lt;code&gt;coverage/index.html&lt;/code&gt; 테스트 완료 로컬 후에 페이지를. &lt;code&gt;nyc report&lt;/code&gt; 를 호출 하여 다른 보고서 를 생성 할 수도 있습니다 ( 예 : 서비스 범위 정보를 타사 서비스에 전송).</target>
        </trans-unit>
        <trans-unit id="86d5011fd900d5f8d53bae19fa8860aa7e81c0c8" translate="yes" xml:space="preserve">
          <source>After this update if you are seeing &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; origin errors &lt;em&gt;please let us know&lt;/em&gt; by &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;opening an issue&lt;/a&gt;. We will screen-share with you to diagnose the issue. We&amp;rsquo;re no longer aware of any situation where this should happen, so if you&amp;rsquo;re experiencing these bugs, please help us track them down.</source>
          <target state="translated">이 업데이트 후에 &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; 출처 오류가 표시 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;되면 문제&lt;/a&gt; 를 열어 &lt;em&gt;알려 주시기 바랍니다&lt;/em&gt; . 문제를 진단하기 위해 화면을 공유합니다. 더 이상 이러한 상황이 발생하지 않았으므로 이러한 버그가 발생하면이를 추적 할 수 있도록 도와주세요.</target>
        </trans-unit>
        <trans-unit id="5b07810acf9c2d34db9c7240f208f6d87b6c1072" translate="yes" xml:space="preserve">
          <source>After we verify the element is actionable, Cypress will then fire all of the appropriate events and corresponding default actions. Usually these events&amp;rsquo; coordinates are fired at the center of the element, but most commands enable you to change the position it&amp;rsquo;s fired to.</source>
          <target state="translated">요소가 실행 가능한지 확인한 후 Cypress는 모든 해당 이벤트 및 해당 기본 동작을 시작합니다. 일반적으로 이러한 이벤트의 좌표는 요소의 중심에서 시작되지만 대부분의 명령을 사용하면 시작된 위치를 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fd32756fcef998c7af49edd21b43862599a7ac32" translate="yes" xml:space="preserve">
          <source>After you alias DOM elements, you can then later access them for reuse.</source>
          <target state="translated">DOM 요소의 별명을 지정한 후에는 나중에 재사용하기 위해 해당 요소에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9f366b5c18e1c6e130d8094e98aad875ee890dfd" translate="yes" xml:space="preserve">
          <source>After you refresh the page you&amp;rsquo;ll see something that looks like this in your console:</source>
          <target state="translated">페이지를 새로 고치면 콘솔에 다음과 같은 내용이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="781e5d5d256c07852e0229fc228fa546ad878269" translate="yes" xml:space="preserve">
          <source>After you&amp;rsquo;re done, we suggest watching some of our  &lt;a href=&quot;https://docs.cypress.io/examples/examples/tutorials.html&quot;&gt;Tutorial Videos&lt;/a&gt;.</source>
          <target state="translated">완료 한 후 &lt;a href=&quot;https://docs.cypress.io/examples/examples/tutorials.html&quot;&gt;튜토리얼 비디오를&lt;/a&gt; 시청하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="c2c2e3c689c23ff97fa7a81a5b3260f74b707942" translate="yes" xml:space="preserve">
          <source>Aggressively cleaned up listeners after each test completion + run.</source>
          <target state="translated">각 테스트 완료 + 실행 후 리스너를 적극적으로 정리했습니다.</target>
        </trans-unit>
        <trans-unit id="04259816ace1ebe56c853a8763558570c008514a" translate="yes" xml:space="preserve">
          <source>Alias</source>
          <target state="translated">Alias</target>
        </trans-unit>
        <trans-unit id="58a32cb2b2b482fe3807efad24791d4e77bc9df1" translate="yes" xml:space="preserve">
          <source>Alias names cannot match some reserved words.</source>
          <target state="translated">별명은 일부 예약어와 일치 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="c8a78157d8e4bcce166bd6e9b7527b017e3886ce" translate="yes" xml:space="preserve">
          <source>Alias the request using &lt;a href=&quot;as&quot;&gt;&lt;code&gt;.as()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;as&quot;&gt; &lt;code&gt;.as()&lt;/code&gt; &lt;/a&gt; 사용하여 요청의 별명</target>
        </trans-unit>
        <trans-unit id="27fc2389ccf483a69615740c2b66df7ae39d2630" translate="yes" xml:space="preserve">
          <source>Aliased DOM objects are now correctly stored on the test&amp;rsquo;s &lt;code&gt;ctx&lt;/code&gt; as instances of &lt;strong&gt;your&lt;/strong&gt; jQuery (if one exists).</source>
          <target state="translated">별칭 DOM 객체가 올바르게 시험의에 저장되어있는 &lt;code&gt;ctx&lt;/code&gt; 의 인스턴스로 &lt;strong&gt;당신의&lt;/strong&gt; jQuery를 (있는 경우).</target>
        </trans-unit>
        <trans-unit id="f9e43314ee35ec59e34093e695606fd6ba74f0b9" translate="yes" xml:space="preserve">
          <source>Aliased Routes</source>
          <target state="translated">별칭 경로</target>
        </trans-unit>
        <trans-unit id="90c024b3630d0b65ea4c971e8c6b9dd01e34637f" translate="yes" xml:space="preserve">
          <source>Aliased commands now correctly output a command log again when they are replayed.</source>
          <target state="translated">별칭이 지정된 명령이 재생 될 때 명령 로그가 다시 올바르게 출력됩니다.</target>
        </trans-unit>
        <trans-unit id="6a8b49f23c0c2e66b347773e3a4bb453ff1fb91c" translate="yes" xml:space="preserve">
          <source>Aliases</source>
          <target state="translated">Aliases</target>
        </trans-unit>
        <trans-unit id="42d70bc2a052365ba774b17ab2ee432316268cb6" translate="yes" xml:space="preserve">
          <source>Aliases are a powerful construct in Cypress that have many uses. We&amp;rsquo;ll explore each of their capabilities below.</source>
          <target state="translated">별명은 Cypress에서 많은 용도로 사용되는 강력한 구성입니다. 아래에서 각 기능을 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="1dc0ec757c6013b85ce7cc1f587c58892d32fbb8" translate="yes" xml:space="preserve">
          <source>Aliases can also be used with &lt;a href=&quot;../../api/commands/request&quot;&gt;requests&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/request&quot;&gt;요청&lt;/a&gt; 과 함께 별칭을 사용할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b0785c2ca27ad0296e947dd2c3d104b2b93da85d" translate="yes" xml:space="preserve">
          <source>Aliases can also be used with &lt;a href=&quot;../../api/commands/route&quot;&gt;routes&lt;/a&gt;. Aliasing your routes enables you to:</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/route&quot;&gt;경로&lt;/a&gt; 와 함께 별칭을 사용할 수도 있습니다 . 경로 별명을 지정하면 다음을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aba6b4ee98f223dffbd10d1afffccb1cab08e5db" translate="yes" xml:space="preserve">
          <source>Aliases have other special characteristics when being used with DOM elements.</source>
          <target state="translated">별칭은 DOM 요소와 함께 사용할 때 다른 특별한 특성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="ee879bae61a6910e04e4f690c78490274df63bec" translate="yes" xml:space="preserve">
          <source>Aliases of routes display in the routes instrument panel:</source>
          <target state="translated">경로 계기판에 경로 별칭이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="bb21903cca1bc9fc5578b45299641b7324f7f2ed" translate="yes" xml:space="preserve">
          <source>Aliases which replay their commands will no longer break the current chain and therefore not unintentionally null our their subject for the ext command.</source>
          <target state="translated">명령을 재생하는 별명은 더 이상 현재 체인을 중단하지 않으므로 의도 치 않게 ext 명령에 대한 주제를 무효화하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0bf9d1c602827f172accf2bce7dff7e61ea25993" translate="yes" xml:space="preserve">
          <source>Aliasing &lt;a href=&quot;fixture&quot;&gt;&lt;code&gt;cy.fixture()&lt;/code&gt;&lt;/a&gt; data and then using &lt;code&gt;this&lt;/code&gt; to access it via the alias.</source>
          <target state="translated">에일리어싱 &lt;a href=&quot;fixture&quot;&gt; &lt;code&gt;cy.fixture()&lt;/code&gt; &lt;/a&gt; 데이터를 사용하고 &lt;code&gt;this&lt;/code&gt; 별명을 통해 액세스 할.</target>
        </trans-unit>
        <trans-unit id="96ebf78dcb69f4c6915691b38961d7a884c763c1" translate="yes" xml:space="preserve">
          <source>Aliasing a DOM element and then using &lt;a href=&quot;get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt; to access the aliased element.</source>
          <target state="translated">DOM 요소 의 별칭을 &lt;a href=&quot;get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt; 다음 cy.get () 을 사용하여 별칭이 지정된 요소에 액세스합니다.</target>
        </trans-unit>
        <trans-unit id="0b3de34b16d491dddd19ee60acb78e375091988d" translate="yes" xml:space="preserve">
          <source>Aliasing a route and then using &lt;a href=&quot;wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt; to wait for the aliased route.</source>
          <target state="translated">경로의 별칭을 지정한 다음 &lt;a href=&quot;wait&quot;&gt; &lt;code&gt;cy.wait()&lt;/code&gt; &lt;/a&gt; 를 사용 하여 별칭이 지정된 경로를 기다립니다.</target>
        </trans-unit>
        <trans-unit id="3923e52777503070b457a2bb69918d0b0761c656" translate="yes" xml:space="preserve">
          <source>Aliasing custom commands now intelligently figures out where to apply the alias without being specified inside of the actual custom command.</source>
          <target state="translated">앨리어싱 사용자 정의 명령은 이제 실제 사용자 정의 명령 내에 지정되지 않고 앨리어스를 적용 할 위치를 지능적으로 파악합니다.</target>
        </trans-unit>
        <trans-unit id="f3168b4982474d873050724121763fc87c00f626" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;../../api/commands/fixture&quot;&gt;&lt;code&gt;cy.fixture()&lt;/code&gt;&lt;/a&gt; extensions are now supported and Cypress will no longer throw on extensions it doesn&amp;rsquo;t recognize. For known fixture extensions we&amp;rsquo;ll continue to apply a default &lt;code&gt;encoding&lt;/code&gt; and for everything else it will default to &lt;code&gt;utf8&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/200&quot;&gt;#200&lt;/a&gt;.</source>
          <target state="translated">이제 모든 &lt;a href=&quot;../../api/commands/fixture&quot;&gt; &lt;code&gt;cy.fixture()&lt;/code&gt; &lt;/a&gt; 확장이 지원되며 Cypress는 더 이상 인식하지 못하는 확장을 throw하지 않습니다. 알려진 조명기 확장에 대해서는 기본 &lt;code&gt;encoding&lt;/code&gt; 계속 적용하고 다른 모든 것에는 기본적으로 &lt;code&gt;utf8&lt;/code&gt; 로 설정합니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/200&quot;&gt;# 200&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="93cb012e5e912c995119ae70e9032b3c6ae1bd68" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;after()&lt;/code&gt; hooks run (once)</source>
          <target state="translated">모든 &lt;code&gt;after()&lt;/code&gt; 후크 실행 (한 번)</target>
        </trans-unit>
        <trans-unit id="3d93539a87b6ca15b0d4e9f510e70575c80fea86" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;before()&lt;/code&gt; hooks run (once)</source>
          <target state="translated">모든 &lt;code&gt;before()&lt;/code&gt; 후크 실행 (한 번)</target>
        </trans-unit>
        <trans-unit id="06aa2d4a71f181e9e0925d7c94a55d0035f34441" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;ng&lt;/code&gt; based commands now display in the Command Log.</source>
          <target state="translated">이제 모든 &lt;code&gt;ng&lt;/code&gt; 기반 명령이 명령 로그에 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="e345cde6ba462d3a5242f76f02d093e3397ccaac" translate="yes" xml:space="preserve">
          <source>All Assertions</source>
          <target state="translated">모든 주장</target>
        </trans-unit>
        <trans-unit id="ba8a5794229abbed18561a56259b7c285aee006c" translate="yes" xml:space="preserve">
          <source>All Chrome* flavored browsers will be detected and are supported.</source>
          <target state="translated">모든 Chrome * 맛 브라우저가 감지되고 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="822bfcb2c6173e33b67b9c050bfb9483bc8dd8fd" translate="yes" xml:space="preserve">
          <source>All Cypress related services have been updated to use HTTPS. We are forcing HTTPS redirects for everything except for &lt;code&gt;api.cypress.io&lt;/code&gt;, which would be a breaking change. By the next minor release we will force that as well. Once we make this change we will remove all versions below &lt;code&gt;0.13.7&lt;/code&gt;. So make sure you &lt;strong&gt;are not&lt;/strong&gt; locking the Cypress version when running in CI. We periodically remove old Cypress versions which have security flaws and this is an example of one.</source>
          <target state="translated">모든 Cypress 관련 서비스가 HTTPS를 사용하도록 업데이트되었습니다. &lt;code&gt;api.cypress.io&lt;/code&gt; 를 제외한 모든 항목에 대해 HTTPS 리디렉션을 강제 적용하고 있으며 이는 중대한 변경 사항입니다. 다음 마이너 릴리스로 우리는 그것을 강제합니다. 변경하면 &lt;code&gt;0.13.7&lt;/code&gt; 이하의 모든 버전이 제거됩니다 . 따라서 CI에서 실행될 때 Cypress 버전을 잠그지 &lt;strong&gt;않아야&lt;/strong&gt; 합니다. 보안 결함이있는 이전 Cypress 버전을 정기적으로 제거합니다. 이는 예입니다.</target>
        </trans-unit>
        <trans-unit id="a7c369d8a2c14d2db5aaba3036c86bbee3b01968" translate="yes" xml:space="preserve">
          <source>All DOM based commands automatically wait for their elements to exist in the DOM.</source>
          <target state="translated">모든 DOM 기반 명령은 해당 요소가 DOM에 존재하기를 자동으로 기다립니다.</target>
        </trans-unit>
        <trans-unit id="381d815d7a49d2a2497d2e27b5690cefe390856d" translate="yes" xml:space="preserve">
          <source>All XHR&amp;rsquo;s (regardless of whether they are stubbed or not) are now logged in the Command Log. Stubbed XHR&amp;rsquo;s display as &amp;ldquo;XHR Stub&amp;rdquo; vs vanilla &amp;ldquo;XHR&amp;rdquo;.</source>
          <target state="translated">스텁 여부에 관계없이 모든 XHR이 이제 명령 로그에 기록됩니다. XHR의 디스플레이를 &quot;XHR Stub&quot;대 바닐라 &quot;XHR&quot;로 스텁했습니다.</target>
        </trans-unit>
        <trans-unit id="f4b16666ae16b1144b12fe33e8892f324036e7fa" translate="yes" xml:space="preserve">
          <source>All assertions, whether they&amp;rsquo;re the default ones or whether they&amp;rsquo;ve been added by you all share the same timeout values.</source>
          <target state="translated">기본 어설 션이든 사용자가 추가 한 어설 션은 모두 동일한 시간 초과 값을 공유합니다.</target>
        </trans-unit>
        <trans-unit id="4eb34196a949b2a03788444c7818858a118e46ca" translate="yes" xml:space="preserve">
          <source>All commands now retry if the associated element is disabled until the element is no longer disabled. If the command times out a specific error message is now thrown.</source>
          <target state="translated">요소가 더 이상 비활성화되지 않을 때까지 연관된 요소가 비활성화되면 모든 명령이 재 시도됩니다. 명령이 시간 초과되면 특정 오류 메시지가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="563aca6daa156016868ffcf4d9216f6228fe6ab4" translate="yes" xml:space="preserve">
          <source>All commands with a long message (such as assertions) are automatically scaled down in font size and truncated properly. In addition, assertions will correctly bold the &lt;code&gt;expected&lt;/code&gt; and &lt;code&gt;actual&lt;/code&gt; values.</source>
          <target state="translated">긴 메시지 (예 : 어설 션)가있는 모든 명령은 자동으로 글꼴 크기가 축소되고 올바르게 잘립니다. 또한 어설 션은 &lt;code&gt;expected&lt;/code&gt; 및 &lt;code&gt;actual&lt;/code&gt; 값을 올바르게 굵게 표시 합니다.</target>
        </trans-unit>
        <trans-unit id="a4543b6ca4d3691e0ebb9e6bdc9a866f1c344c34" translate="yes" xml:space="preserve">
          <source>All current and &lt;em&gt;future&lt;/em&gt; repositories will be included with this installation if you choose &lt;strong&gt;All repositories&lt;/strong&gt;.</source>
          <target state="translated">모든 저장소를 선택하면 현재 및 &lt;em&gt;미래의 &lt;/em&gt;&lt;strong&gt;모든 저장소&lt;/strong&gt; 가이 설치에 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="e7808ee17aa0bd953fb7802cd8e367bc3503e3f0" translate="yes" xml:space="preserve">
          <source>All elements are now logged out as real DOM elements instead of jQuery wrapped elements. This has several upsides. Chrome will allow you to immediately interact with these elements, drilling into their contents, displaying the element box model on hover, etc. This prevents you from having to expand the jQuery elements and click &amp;ldquo;Reveal in Elements Panel&amp;rdquo;.</source>
          <target state="translated">모든 요소는 이제 jQuery 래핑 된 요소 대신 실제 DOM 요소로 로그 아웃됩니다. 이것은 몇 가지 단점이 있습니다. Chrome을 사용하면 이러한 요소와 즉시 상호 작용하고 콘텐츠를 뚫고 호버에 요소 상자 모델을 표시하는 등의 작업을 수행 할 수 있습니다. 이렇게하면 jQuery 요소를 확장하고 &quot;요소 패널에서 공개&quot;를 클릭하지 않아도됩니다.</target>
        </trans-unit>
        <trans-unit id="aee9dffb0c67d5eae76c5796adae3ffa6e037936" translate="yes" xml:space="preserve">
          <source>All error messages from using the CLI have been rewritten and improved.</source>
          <target state="translated">CLI 사용으로 인한 모든 오류 메시지가 다시 작성되고 개선되었습니다.</target>
        </trans-unit>
        <trans-unit id="6f323a2bc2a27e82337d63d69f9578723cc45773" translate="yes" xml:space="preserve">
          <source>All incompatible &lt;code&gt;a&lt;/code&gt; / &lt;code&gt;link&lt;/code&gt; / &lt;code&gt;form&lt;/code&gt; elements are transparently rewritten to be compatible including FQDN and protocol-less &lt;code&gt;href&lt;/code&gt; / &lt;code&gt;src&lt;/code&gt;.</source>
          <target state="translated">모든 호환되지 않는 / &lt;code&gt;link&lt;/code&gt; / &lt;code&gt;form&lt;/code&gt; 요소는 투명 FQDN 및 프로토콜이없는 포함한 호환되도록 다시 작성됩니다 &lt;code&gt;href&lt;/code&gt; / &lt;code&gt;src&lt;/code&gt; . &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="902268fce917b7f37d9e9121ff109148c97bd51a" translate="yes" xml:space="preserve">
          <source>All of &lt;a href=&quot;click#Events&quot;&gt;the normal events&lt;/a&gt; documented on &lt;a href=&quot;click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt; will fire.</source>
          <target state="translated">&lt;a href=&quot;click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt; 에 설명 된 모든 &lt;a href=&quot;click#Events&quot;&gt;일반 이벤트&lt;/a&gt; 가 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="7140ad825180205ff020a10ec875610310822eb1" translate="yes" xml:space="preserve">
          <source>All of Cypress&amp;rsquo;s commands, when clicked on within the &lt;a href=&quot;../core-concepts/test-runner#Command-Log&quot;&gt;Command Log&lt;/a&gt;, print extra information about the command, its subject, and its yielded result. Try clicking around the Command Log with your Developer Tools open! You may find some useful information here.</source>
          <target state="translated">Cypress의 모든 명령은 &lt;a href=&quot;../core-concepts/test-runner#Command-Log&quot;&gt;명령 로그&lt;/a&gt; 내에서 클릭하면 명령, 주제 및 결과에 대한 추가 정보를 인쇄합니다. 개발자 도구가 열린 상태에서 명령 로그를 클릭하십시오! 여기서 유용한 정보를 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="291e47342b7df69d835e0b9ffa71c3e7a29f3f7d" translate="yes" xml:space="preserve">
          <source>All of the &lt;a href=&quot;../../api/commands/type&quot;&gt;type docs have been updated&lt;/a&gt; to reflect these changes.</source>
          <target state="translated">이러한 변경 사항을 반영 하여 모든 &lt;a href=&quot;../../api/commands/type&quot;&gt;유형 문서가 업데이트되었습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f9ea9c995bc9a01dd550451c9c9d030766e36024" translate="yes" xml:space="preserve">
          <source>All of the docs surrounding &lt;a href=&quot;../core-concepts/introduction-to-cypress#Assertions&quot;&gt;assertions&lt;/a&gt;, &lt;a href=&quot;../../api/commands/should&quot;&gt;&lt;code&gt;.should()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../../api/commands/and&quot;&gt;&lt;code&gt;.and()&lt;/code&gt;&lt;/a&gt; have been updated to reflect the new API.</source>
          <target state="translated">&lt;a href=&quot;../core-concepts/introduction-to-cypress#Assertions&quot;&gt;어설 션&lt;/a&gt; , &lt;a href=&quot;../../api/commands/should&quot;&gt; &lt;code&gt;.should()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../api/commands/and&quot;&gt; &lt;code&gt;.and()&lt;/code&gt; &lt;/a&gt; 둘러싼 모든 문서 가 새 API를 반영하도록 업데이트되었습니다.</target>
        </trans-unit>
        <trans-unit id="0e70eae71f30e6f9f15605e3c4e817e96e453d81" translate="yes" xml:space="preserve">
          <source>All of these functions come from &lt;a href=&quot;../references/bundled-tools&quot;&gt;Bundled Tools&lt;/a&gt; that Cypress bakes in.</source>
          <target state="translated">이러한 모든 기능은 Cypress 가 &lt;a href=&quot;../references/bundled-tools&quot;&gt;제공하는 번들 도구&lt;/a&gt; 에서 제공 됩니다.</target>
        </trans-unit>
        <trans-unit id="a028e9e1d6fe33c6edda776abc2f5e753b9a40eb" translate="yes" xml:space="preserve">
          <source>All responses are now streamed using &lt;code&gt;content-encoding: chunked&lt;/code&gt;.</source>
          <target state="translated">모든 응답은 이제 &lt;code&gt;content-encoding: chunked&lt;/code&gt; 사용하여 스트리밍됩니다 .</target>
        </trans-unit>
        <trans-unit id="90b2688d62fa55582ebd5904280dbdb762f119e4" translate="yes" xml:space="preserve">
          <source>All the &lt;code&gt;cy.cookie&lt;/code&gt; commands have been upgraded to take new options and can do much more powerful things outside of the JavaScript sandbox.</source>
          <target state="translated">모든 &lt;code&gt;cy.cookie&lt;/code&gt; 명령은 새로운 옵션을 사용하도록 업그레이드되었으며 JavaScript 샌드 박스 외부에서 훨씬 더 강력한 작업을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b8e8c14395eb9d1e37133098a1043ea2a4ac52d9" translate="yes" xml:space="preserve">
          <source>All third party &lt;code&gt;@types&lt;/code&gt; have been moved from Cypress &lt;code&gt;dependencies&lt;/code&gt; into &lt;code&gt;devDependencies&lt;/code&gt;. This should fix situations where user&amp;rsquo;s type dependencies were conflicting with Cypress&amp;rsquo;s third party type definitions. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3371&quot;&gt;#3371&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1227&quot;&gt;#1227&lt;/a&gt;.</source>
          <target state="translated">모든 제 3 자 &lt;code&gt;@types&lt;/code&gt; 는 싸이프레스의에서 이동 된 &lt;code&gt;dependencies&lt;/code&gt; 에 &lt;code&gt;devDependencies&lt;/code&gt; . 이것은 사용자의 유형 의존성이 Cypress의 타사 유형 정의와 충돌하는 상황을 수정해야합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3371&quot;&gt;# 3371&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1227&quot;&gt;# 1227을&lt;/a&gt; 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="5cbf8755b5b8f039acb14276dd0d7351dcecc346" translate="yes" xml:space="preserve">
          <source>All users must &lt;em&gt;LOG IN AGAIN&lt;/em&gt; and re-add their projects. Sorry, we&amp;rsquo;ve changed the way we store local data.</source>
          <target state="translated">모든 사용자는 &lt;em&gt;다시 로그인&lt;/em&gt; 하여 프로젝트를 다시 추가해야합니다. 로컬 데이터 저장 방식이 변경되었습니다.</target>
        </trans-unit>
        <trans-unit id="c0d1272b9150bc86fbaee29a8e58268dc2495a6a" translate="yes" xml:space="preserve">
          <source>All we&amp;rsquo;re really doing here is creating a recursive function. Nothing more complicated than that.</source>
          <target state="translated">우리가 실제로 여기서하는 일은 재귀 함수를 만드는 것입니다. 그보다 더 복잡한 것은 없습니다.</target>
        </trans-unit>
        <trans-unit id="35d097c21a5b4117e20adc3a5bba502da964cc13" translate="yes" xml:space="preserve">
          <source>All you have to do is add that assertion and Cypress will &lt;strong&gt;reverse&lt;/strong&gt; its rules waiting for elements to exist.</source>
          <target state="translated">어설 션과 Cypress가 요소가 존재하기를 기다리는 규칙 을 &lt;strong&gt;취소&lt;/strong&gt; 한다는 것만 추가 하면됩니다.</target>
        </trans-unit>
        <trans-unit id="c21e19c45f191abdc83c6ad85c85b05d57f7e32c" translate="yes" xml:space="preserve">
          <source>Allow Multiple Types</source>
          <target state="translated">여러 유형 허용</target>
        </trans-unit>
        <trans-unit id="7de0c74cb45f96835d1223b8275241ce2b65b8c4" translate="yes" xml:space="preserve">
          <source>Allow projects to be scrolled when &amp;gt;4 are added.</source>
          <target state="translated">&amp;gt; 4가 추가 될 때 프로젝트를 스크롤 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a6890fbcdbe0138a698e392b576be6edae9c0cab" translate="yes" xml:space="preserve">
          <source>Allow recording API results and replaying the APIs as a mock server.</source>
          <target state="translated">API 결과를 기록하고 API를 모의 서버로 재생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="93e1a3323056ddee8e7a8e69addfe63e5c2a4a6a" translate="yes" xml:space="preserve">
          <source>Allow timers and animations to keep running</source>
          <target state="translated">타이머와 애니메이션이 계속 실행되도록 허용</target>
        </trans-unit>
        <trans-unit id="d62129852e67531130714d06d38237c62fd9ad51" translate="yes" xml:space="preserve">
          <source>Allows blocked pop-ups.</source>
          <target state="translated">팝업 차단을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="16d55ff0ec6c99f39298a89dbaa709c16da9ea3e" translate="yes" xml:space="preserve">
          <source>Allows callback function argument</source>
          <target state="translated">콜백 함수 인수를 허용합니다</target>
        </trans-unit>
        <trans-unit id="786964bc707ab0e76774c6f306ceb7bffb28fdda" translate="yes" xml:space="preserve">
          <source>Allows for dynamic values between different machines.</source>
          <target state="translated">다른 시스템간에 동적 값을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="ca449c775d0177235f5356bd63a1d5bd1dcedb29" translate="yes" xml:space="preserve">
          <source>Almost all commands can time out in some way.</source>
          <target state="translated">거의 모든 명령이 어떤 방식으로 시간 초과 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f64085a81ca5d3f24d71536387dddc7e54371dec" translate="yes" xml:space="preserve">
          <source>Also note that the &lt;a href=&quot;../core-concepts/test-runner#Overview&quot;&gt;App Preview&lt;/a&gt; pane has updated further after the click, following the link and showing the destination page:</source>
          <target state="translated">또한 링크를 따라 가고 대상 페이지를 표시하는 클릭 후 &lt;a href=&quot;../core-concepts/test-runner#Overview&quot;&gt;앱 미리보기&lt;/a&gt; 창이 추가로 업데이트되었습니다.</target>
        </trans-unit>
        <trans-unit id="d9f4d13b5965de3e9faefd5f19cfa06bf050ca23" translate="yes" xml:space="preserve">
          <source>Also take a look at &lt;a href=&quot;https://github.com/cypress-io/cypress-example-recipes#logging-in-recipes&quot;&gt;&quot;Logging in&quot;&lt;/a&gt; recipes.</source>
          <target state="translated">또한 한 번 봐 걸릴 &lt;a href=&quot;https://github.com/cypress-io/cypress-example-recipes#logging-in-recipes&quot;&gt;&quot;로그인&quot;&lt;/a&gt; 조리법.</target>
        </trans-unit>
        <trans-unit id="434c30a49d12b1dbe147db7fe4b3476a03ad1537" translate="yes" xml:space="preserve">
          <source>Alternate commands and assertions</source>
          <target state="translated">대체 명령 및 어설 션</target>
        </trans-unit>
        <trans-unit id="6daeeba69e1e7e9afdead2e4f886b7543536be37" translate="yes" xml:space="preserve">
          <source>Alternatively a better solution to this problem is by waiting explicitly for an aliased route.</source>
          <target state="translated">또는이 문제에 대한 더 나은 해결책은 별칭이 지정된 경로를 명시 적으로 기다리는 것입니다.</target>
        </trans-unit>
        <trans-unit id="0534612923fba7a4130492ab2343f99675cf49eb" translate="yes" xml:space="preserve">
          <source>Alternatively, if you are creating users, it might just be easier to create the user and set whether you want the wizard to be shown ahead of time. That would avoid this check later.</source>
          <target state="translated">또는 사용자를 작성하는 경우 사용자를 작성하고 마법사를 미리 표시할지 여부를 설정하는 것이 더 쉬울 수 있습니다. 나중에이 검사를 피할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f50ea7a00df6ad51ba616ac7c39de7e390f19c5f" translate="yes" xml:space="preserve">
          <source>Alternatively, if your server saves the campaign with a session, you could just ask your server to tell you which campaign you are on.</source>
          <target state="translated">또는 서버가 세션과 함께 캠페인을 저장하는 경우 서버에 현재 어떤 캠페인이 있는지 알려달라고 요청할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f329e3d74dfc43f72c19a2b98048f5de321c20ae" translate="yes" xml:space="preserve">
          <source>Alternatively, to see screenshots in your Continuous Integration UI, most CI providers document a way to export the screenshots as artifacts and to make them available. Please see their appropriate documentation.</source>
          <target state="translated">또는 Continuous Integration UI에서 스크린 샷을보기 위해 대부분의 CI 제공 업체는 스크린 샷을 아티팩트로 내보내는 방법을 문서화합니다. 해당 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="acb2b619b8ca08a19203294a9e08c2558bef88c0" translate="yes" xml:space="preserve">
          <source>Alternatively, you can always start a new chain of commands off of &lt;code&gt;cy&lt;/code&gt;.</source>
          <target state="translated">또는 &lt;code&gt;cy&lt;/code&gt; 외부에서 항상 새로운 명령 체인을 시작할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1f786cd42ef7634c296a99c528cbfb24bbab7554" translate="yes" xml:space="preserve">
          <source>Although Cypress tries to enforce this limitation, it is possible for your application to bypass Cypress&amp;rsquo;s ability to detect this.</source>
          <target state="translated">Cypress가이 제한을 적용하려고 시도하지만 응용 프로그램에서이를 감지하는 Cypress의 기능을 무시할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="663d009161c0e67121ad0efe3740f77a4e514a56" translate="yes" xml:space="preserve">
          <source>Although in this guide we are testing our example application: &lt;a href=&quot;https://example.cypress.io/&quot;&gt;&lt;code&gt;https://example.cypress.io&lt;/code&gt;&lt;/a&gt; - you &lt;strong&gt;shouldn&amp;rsquo;t&lt;/strong&gt; test applications you &lt;strong&gt;don&amp;rsquo;t control&lt;/strong&gt;. Why?</source>
          <target state="translated">이 가이드에서 우리는 우리의 예제 응용 프로그램을 테스트하고 있지만 : &lt;a href=&quot;https://example.cypress.io/&quot;&gt; &lt;code&gt;https://example.cypress.io&lt;/code&gt; 을&lt;/a&gt; - 당신은 &lt;strong&gt;안&lt;/strong&gt; 당신이 응용 프로그램을 테스트 &lt;strong&gt;제어하지 않습니다를&lt;/strong&gt; . 왜?</target>
        </trans-unit>
        <trans-unit id="33800dad07cac31ad452b3306f95c7c46020f345" translate="yes" xml:space="preserve">
          <source>Although it doesn&amp;rsquo;t do anything useful, this is our first passing test! ✅</source>
          <target state="translated">유용한 기능은 없지만 이것이 첫 번째 통과 테스트입니다! ✅</target>
        </trans-unit>
        <trans-unit id="587c4d6fdb0487cca1922e75ebdceaa21a62a50b" translate="yes" xml:space="preserve">
          <source>Although you &lt;em&gt;should&lt;/em&gt; see a nice error message, nothing beats visually inspecting and poking at the DOM yourself to understand the reason why.</source>
          <target state="translated">멋진 오류 메시지 &lt;em&gt;가&lt;/em&gt; 표시 되지만 그 이유를 이해하기 위해 DOM을 시각적으로 검사하고 파는 것보다 좋은 것은 없습니다.</target>
        </trans-unit>
        <trans-unit id="a91bcce893b5de905ecbd22a99a03889cdcc2544" translate="yes" xml:space="preserve">
          <source>Always</source>
          <target state="translated">Always</target>
        </trans-unit>
        <trans-unit id="ea51b41122e451538fc47d98a2f15970e96b5fb0" translate="yes" xml:space="preserve">
          <source>Amount to scroll after the element has been scrolled into view</source>
          <target state="translated">요소가 화면으로 스크롤 된 후 스크롤 할 양</target>
        </trans-unit>
        <trans-unit id="64afdda10ab6d82d241e9bd300d7e245407161be" translate="yes" xml:space="preserve">
          <source>An Overview</source>
          <target state="translated">개요</target>
        </trans-unit>
        <trans-unit id="bdf2bd2d1675a52b5a64765cf30edc103c20dafd" translate="yes" xml:space="preserve">
          <source>An XHR request hasn&amp;rsquo;t responded.</source>
          <target state="translated">XHR 요청이 응답하지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="95da01758f2d7c5b393ddeeab0ac85ba0de9e723" translate="yes" xml:space="preserve">
          <source>An addition to the Cucumber plugin, featuring a collection of phrases you can use for common actions (ex: &quot;I click on an</source>
          <target state="translated">Cucumber 플러그인에 추가되어 일반적인 작업에 사용할 수있는 문구 모음이 있습니다 (예 : &quot;</target>
        </trans-unit>
        <trans-unit id="02637837a1eea6b4333c86b65a1e19e84f22739b" translate="yes" xml:space="preserve">
          <source>An alias as defined using the &lt;a href=&quot;as&quot;&gt;&lt;code&gt;.as()&lt;/code&gt;&lt;/a&gt; command and referenced with the &lt;code&gt;@&lt;/code&gt; character and the name of the alias.</source>
          <target state="translated">&lt;a href=&quot;as&quot;&gt; &lt;code&gt;.as()&lt;/code&gt; &lt;/a&gt; 명령을 사용하여 정의 되고 &lt;code&gt;@&lt;/code&gt; 문자 및 별명 이름으로 참조되는 별명.</target>
        </trans-unit>
        <trans-unit id="4f5587c8f57cedcbf0a5bab7a74dfdba6c74b510" translate="yes" xml:space="preserve">
          <source>An alias for &lt;a href=&quot;type&quot;&gt;&lt;code&gt;.type({selectall}{backspace})&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;type&quot;&gt; &lt;code&gt;.type({selectall}{backspace})&lt;/code&gt; &lt;/a&gt; 의 별명</target>
        </trans-unit>
        <trans-unit id="c4004cfab86f9ff31dc280f8fcccb53d63ee8800" translate="yes" xml:space="preserve">
          <source>An alias of &lt;a href=&quot;and&quot;&gt;&lt;code&gt;.and()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;and&quot;&gt; &lt;code&gt;.and()&lt;/code&gt; &lt;/a&gt; 의 별칭</target>
        </trans-unit>
        <trans-unit id="1d95145109d457aed292b97da6fedf0e7899882b" translate="yes" xml:space="preserve">
          <source>An alias of &lt;a href=&quot;should&quot;&gt;&lt;code&gt;.should()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;should&quot;&gt; &lt;code&gt;.should()&lt;/code&gt; &lt;/a&gt; 의 별칭</target>
        </trans-unit>
        <trans-unit id="d5cf7c253c7156e9e8c89986d57d37157d577c3b" translate="yes" xml:space="preserve">
          <source>An aliased route as defined using the &lt;a href=&quot;as&quot;&gt;&lt;code&gt;.as()&lt;/code&gt;&lt;/a&gt; command and referenced with the &lt;code&gt;@&lt;/code&gt; character and the name of the alias.</source>
          <target state="translated">&lt;a href=&quot;as&quot;&gt; &lt;code&gt;.as()&lt;/code&gt; &lt;/a&gt; 명령을 사용하여 정의 되고 &lt;code&gt;@&lt;/code&gt; 문자 및 별칭 이름으로 참조되는 별칭 경로.</target>
        </trans-unit>
        <trans-unit id="9820c711d4efa9fed27e734a8c4a3171b9040c25" translate="yes" xml:space="preserve">
          <source>An animation hasn&amp;rsquo;t completed.</source>
          <target state="translated">애니메이션이 완료되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="3257f233abca2d8ca51d6795319a21468b57094f" translate="yes" xml:space="preserve">
          <source>An argument to send along with the event. This can be any value that can be serialized by &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify&quot;&gt;JSON.stringify()&lt;/a&gt;. Unserializable types such as functions, regular expressions, or symbols will be omitted to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">이벤트와 함께 보낼 인수입니다. &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify&quot;&gt;JSON.stringify ()&lt;/a&gt; 로 직렬화 할 수있는 모든 값이 될 수 있습니다 . 함수, 정규 표현식 또는 기호와 같은 직렬화 할 수없는 유형은 &lt;code&gt;null&lt;/code&gt; 로 생략됩니다 .</target>
        </trans-unit>
        <trans-unit id="691ddd55184e6eaaa4efbcb8e109a5a549811eb6" translate="yes" xml:space="preserve">
          <source>An array of &lt;code&gt;values&lt;/code&gt; or text contents of the &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt;s to be selected.</source>
          <target state="translated">&lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; 의 &lt;code&gt;values&lt;/code&gt; 또는 텍스트 내용 배열을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="c6b71fad129d5b83d9ae747b63679234109c665a" translate="yes" xml:space="preserve">
          <source>An array of aliased routes as defined using the &lt;a href=&quot;as&quot;&gt;&lt;code&gt;.as()&lt;/code&gt;&lt;/a&gt; command and referenced with the &lt;code&gt;@&lt;/code&gt; character and the name of the alias.</source>
          <target state="translated">&lt;a href=&quot;as&quot;&gt; &lt;code&gt;.as()&lt;/code&gt; &lt;/a&gt; 명령을 사용하여 정의 되고 &lt;code&gt;@&lt;/code&gt; 문자 및 별칭 이름으로 참조되는 별칭 경로의 배열입니다 .</target>
        </trans-unit>
        <trans-unit id="fbdbf54da094b15bef10ede4fd4284fd9824e944" translate="yes" xml:space="preserve">
          <source>An element is considered hidden if:</source>
          <target state="translated">다음과 같은 경우 요소가 숨겨진 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="818b176224764fc419fbb86e03f40758fb9127bd" translate="yes" xml:space="preserve">
          <source>An element is considered visible if it can be &amp;ldquo;interactive&amp;rdquo; with a user. In other words, if the user is able to click, type, drag, or otherwise physically interact with the element it is considered visible.</source>
          <target state="translated">요소가 사용자와 &quot;대화 형&quot;일 수있는 경우 표시되는 것으로 간주됩니다. 다시 말해서, 사용자가 클릭, 타이핑, 드래그 또는 다른 방식으로 물리적으로 상호 작용할 수있는 경우, 그것이 보이는 것으로 간주된다.</target>
        </trans-unit>
        <trans-unit id="df438f083754c9d7fbdf2769b0617db03410c3d6" translate="yes" xml:space="preserve">
          <source>An error is now thrown if an &lt;code&gt;undefined&lt;/code&gt; value is mistakenly passed into &lt;a href=&quot;../../api/commands/wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt;. Previously, it would set the command timeout to an unimaginably large number of ms. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/332&quot;&gt;#332&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;undefined&lt;/code&gt; 값이 실수로 &lt;a href=&quot;../../api/commands/wait&quot;&gt; &lt;code&gt;cy.wait()&lt;/code&gt; &lt;/a&gt; 로 전달 되면 오류가 발생합니다 . 이전에는 명령 시간 초과를 상상할 수 없을 정도로 많은 수의 ms로 설정했습니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/332&quot;&gt;# 332&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eedf883bbb8388b1a02d5b4d7235e6e4721aaef1" translate="yes" xml:space="preserve">
          <source>An event name to be handled via the &lt;code&gt;task&lt;/code&gt; event in the &lt;a href=&quot;../../guides/references/configuration#Folders-Files&quot;&gt;&lt;code&gt;pluginsFile&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../guides/references/configuration#Folders-Files&quot;&gt; &lt;code&gt;pluginsFile&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;task&lt;/code&gt; 이벤트를 통해 처리 할 이벤트 이름 입니다.</target>
        </trans-unit>
        <trans-unit id="aca60224359e431161ff267923b48249cfd4f793" translate="yes" xml:space="preserve">
          <source>An example of a Cypress pull-request comment can be seen below:</source>
          <target state="translated">Cypress 풀 요청 주석의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="29d778b2fd4d5838fccba526f541fde0f498ca63" translate="yes" xml:space="preserve">
          <source>An object containing any or all of the following options:</source>
          <target state="translated">다음 옵션 중 일부 또는 전부를 포함하는 객체 :</target>
        </trans-unit>
        <trans-unit id="0a4cd3fb5556213ab705abf8cea3032c29616066" translate="yes" xml:space="preserve">
          <source>An object containing one or more of the following:</source>
          <target state="translated">다음 중 하나 이상을 포함하는 객체 :</target>
        </trans-unit>
        <trans-unit id="12a514944497318c2d492e8840ac0b97d676e3b6" translate="yes" xml:space="preserve">
          <source>An object that maps HTTP header names to values to be sent along with the request. &lt;em&gt;Note:&lt;/em&gt;&lt;code&gt;headers&lt;/code&gt; will only be sent for the initial &lt;code&gt;cy.visit()&lt;/code&gt; request, not for any subsequent requests.</source>
          <target state="translated">요청과 함께 전송 될 값에 HTTP 헤더 이름을 맵핑하는 오브젝트입니다. &lt;em&gt;참고 : &lt;/em&gt; &lt;code&gt;headers&lt;/code&gt; 는 이후의 요청이 아닌 초기 &lt;code&gt;cy.visit()&lt;/code&gt; 요청에 대해서만 전송됩니다 .</target>
        </trans-unit>
        <trans-unit id="3711350eed18c8ac3e6d07d8f41ebc50aefedddc" translate="yes" xml:space="preserve">
          <source>An object to be yielded.</source>
          <target state="translated">양보 할 객체입니다.</target>
        </trans-unit>
        <trans-unit id="f00cd0a2708e56ba0a5a740c499463a52bd1729a" translate="yes" xml:space="preserve">
          <source>An optional body to send along with a &lt;code&gt;POST&lt;/code&gt; request. If it is a string, it will be passed along unmodified. If it is an object, it will be URL encoded to a string and sent with a &lt;code&gt;Content-Type: application/x-www-urlencoded&lt;/code&gt; header.</source>
          <target state="translated">&lt;code&gt;POST&lt;/code&gt; 요청 과 함께 보낼 선택적 본문 . 문자열 인 경우 수정되지 않은 상태로 전달됩니다. 객체 인 경우 문자열로 URL 인코딩되어 &lt;code&gt;Content-Type: application/x-www-urlencoded&lt;/code&gt; 헤더 와 함께 전송됩니다 .</target>
        </trans-unit>
        <trans-unit id="80e32c56fc70c6d741114a2380d37e5f2fa825e5" translate="yes" xml:space="preserve">
          <source>An warning icon with a tooltip is displayed in the Runs tab of the Test Runner when parallelization was disabled during the run due to being over the organization&amp;rsquo;s usage limit. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4489&quot;&gt;#4489&lt;/a&gt;.</source>
          <target state="translated">조직의 사용 제한을 초과하여 실행 중에 병렬화가 비활성화 된 경우 툴팁이있는 경고 아이콘이 테스트 러너의 실행 탭에 표시됩니다. 주소 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4489&quot;&gt;# 4489&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b30e8658232c95ce5bc0d894288ca1fd6323a581" translate="yes" xml:space="preserve">
          <source>And hey, this is a very clean test! We didn&amp;rsquo;t have to say anything about &lt;em&gt;how&lt;/em&gt; things work, just that we&amp;rsquo;d like to verify a particular series of events and outcomes.</source>
          <target state="translated">그리고 이것은 매우 깨끗한 테스트입니다! 우리는 일의 작동 &lt;em&gt;방식&lt;/em&gt; 에 &lt;em&gt;대해&lt;/em&gt; 아무 말도 할 필요가 없었으며 특정 일련의 사건과 결과를 확인하고 싶습니다.</target>
        </trans-unit>
        <trans-unit id="7837d1ff75e82d5c687feb8ddc9ccc6eb0af323e" translate="yes" xml:space="preserve">
          <source>And the &lt;code&gt;.actions-email&lt;/code&gt; input has &amp;ldquo;&lt;a href=&quot;https://docs.cypress.io/cdn-cgi/l/email-protection#ec8a8d8789ac89818d8580c28f8381&quot;&gt;fake@email.com&lt;/a&gt;&amp;ldquo; as its value</source>
          <target state="translated">그리고 &lt;code&gt;.actions-email&lt;/code&gt; 입력은 값으로 &quot; &lt;a href=&quot;https://docs.cypress.io/cdn-cgi/l/email-protection#ec8a8d8789ac89818d8580c28f8381&quot;&gt;fake@email.com&lt;/a&gt; &quot; 을가 집니다</target>
        </trans-unit>
        <trans-unit id="01e7b7c6f31ec42c7e1da6fc83cc658b4c0d7252" translate="yes" xml:space="preserve">
          <source>And the HTTP server code would look something like this&amp;hellip;</source>
          <target state="translated">HTTP 서버 코드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6f94bb3ac3364b4d82251ec04905330bde9881cd" translate="yes" xml:space="preserve">
          <source>And then call &lt;code&gt;npm run report&lt;/code&gt;.</source>
          <target state="translated">그런 다음 &lt;code&gt;npm run report&lt;/code&gt; 를 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="895b8ceb36023b6c8a70360ac202a9baaf282123" translate="yes" xml:space="preserve">
          <source>And then in your tests:</source>
          <target state="translated">그리고 테스트에서 :</target>
        </trans-unit>
        <trans-unit id="5a62316abf68a32858e08412e76379cdf7bfee06" translate="yes" xml:space="preserve">
          <source>And there you have it: a simple test in Cypress that visits a page, finds and clicks a link, verifies the URL and then verifies the behavior of an element on the new page. If we read it out loud, it might sound like:</source>
          <target state="translated">Cypress의 간단한 테스트를 통해 페이지를 방문하고 링크를 찾아 클릭 한 후 URL을 확인한 다음 새 페이지에서 요소의 동작을 확인합니다. 큰 소리로 읽으면 다음과 같이 들릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b44d929cdbe32010ddc234d1918c738911e1f040" translate="yes" xml:space="preserve">
          <source>And they type &amp;ldquo;&lt;a href=&quot;https://docs.cypress.io/cdn-cgi/l/email-protection#6600070d0326030b070f0a4805090b&quot;&gt;fake@email.com&lt;/a&gt;&amp;ldquo; into the &lt;code&gt;.actions-email&lt;/code&gt; input</source>
          <target state="translated">그리고 &lt;code&gt;.actions-email&lt;/code&gt; 입력에 &quot; &lt;a href=&quot;https://docs.cypress.io/cdn-cgi/l/email-protection#6600070d0326030b070f0a4805090b&quot;&gt;fake@email.com&lt;/a&gt; &quot;을 입력합니다</target>
        </trans-unit>
        <trans-unit id="3fd0a35fa6a92e89876c39671cdb4d59b4cee92b" translate="yes" xml:space="preserve">
          <source>Angular CLI addition that allows you to install Cypress E2E to an Angular CLI project</source>
          <target state="translated">Cypress E2E를 Angular CLI 프로젝트에 설치할 수있는 Angular CLI 추가</target>
        </trans-unit>
        <trans-unit id="c77dcdedc0f40e8dac08a08c8bef7255abb90e75" translate="yes" xml:space="preserve">
          <source>Animations</source>
          <target state="translated">Animations</target>
        </trans-unit>
        <trans-unit id="3d20355b472cf221b589733d696d252fdda7d84f" translate="yes" xml:space="preserve">
          <source>Another benefit of using &lt;a href=&quot;../../api/commands/wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt; on requests is that it allows you to access the actual &lt;code&gt;XHR&lt;/code&gt; object. This is useful when you want to make assertions about this object.</source>
          <target state="translated">요청에 &lt;a href=&quot;../../api/commands/wait&quot;&gt; &lt;code&gt;cy.wait()&lt;/code&gt; &lt;/a&gt; 를 사용 하면 얻을 수있는 또 다른 이점은 실제 &lt;code&gt;XHR&lt;/code&gt; 객체 에 액세스 할 수 있다는 것 입니다. 이 객체에 대해 어설 션을 만들 때 유용합니다.</target>
        </trans-unit>
        <trans-unit id="bec70d72e5eb2c09ce4c9799153e57903638a5ee" translate="yes" xml:space="preserve">
          <source>Another can be called &lt;code&gt;package/customer&lt;/code&gt;:</source>
          <target state="translated">또 다른 &lt;code&gt;package/customer&lt;/code&gt; 이라고 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0f68a60d624ce348d328df87926bc74201411aba" translate="yes" xml:space="preserve">
          <source>Another file you have to deal with.</source>
          <target state="translated">처리해야 할 다른 파일입니다.</target>
        </trans-unit>
        <trans-unit id="ae28f8800d8303d3e143ffee0dae0eabbce11876" translate="yes" xml:space="preserve">
          <source>Another more balanced approach is just to integrate both strategies. You likely want to have a &lt;strong&gt;single test&lt;/strong&gt; that takes a true &lt;code&gt;e2e&lt;/code&gt; approach and stubs nothing. It&amp;rsquo;ll use the feature for real - including seeding the database and setting up state.</source>
          <target state="translated">보다 균형 잡힌 또 다른 접근법은 두 전략을 통합하는 것입니다. 진정한 &lt;code&gt;e2e&lt;/code&gt; 접근 방식 을 취하고 아무것도 스텁하지 않는 &lt;strong&gt;단일 테스트&lt;/strong&gt; 를 원할 것입니다. 데이터베이스 시드 및 상태 설정을 포함하여 실제 기능을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="1d92e257cbcb2260dfecf16311f053c64640bedf" translate="yes" xml:space="preserve">
          <source>Another possibility is visual regression testing: comparing screenshots of past runs with the current run to ensure that nothing changed. &lt;a href=&quot;../tooling/visual-testing&quot;&gt;Read about how to implement visual testing.&lt;/a&gt;</source>
          <target state="translated">또 다른 가능성은 시각적 회귀 테스트입니다. 과거 실행의 스크린 샷을 현재 실행과 비교하여 아무것도 변경되지 않았는지 확인합니다. &lt;a href=&quot;../tooling/visual-testing&quot;&gt;시각적 테스트를 구현하는 방법에 대해 읽으십시오.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e3abfd604bc77a44708d93501cc95c90c5ed97b3" translate="yes" xml:space="preserve">
          <source>Another potential problem to be aware of is that our own Command Log is using React under the hood and only rendering asynchronously during an animation frame. It is possible you will see screenshots taken before our Command Log is done rendering. This means you may not see the &lt;strong&gt;error displayed&lt;/strong&gt; in the screenshot. But this is also why we take a video - to show you the complete failure.</source>
          <target state="translated">알아야 할 또 다른 잠재적 인 문제는 자체 명령 로그가 후드 아래에서 React를 사용하고 애니메이션 프레임 중 비동기식으로 만 렌더링한다는 것입니다. 명령 로그 렌더링이 완료되기 전에 찍은 스크린 샷을 볼 수 있습니다. 스크린 샷에 &lt;strong&gt;오류가 표시&lt;/strong&gt; 되지 않을 수 있습니다 . 그러나 이것이 또한 우리가 완전한 실패를 보여주기 위해 비디오를 찍는 이유이기도합니다.</target>
        </trans-unit>
        <trans-unit id="8f7b961bffa98940d449f8ec980c667422d4ae8b" translate="yes" xml:space="preserve">
          <source>Another upside is that this enables you to &lt;strong&gt;build out your application&lt;/strong&gt; without needing the &lt;em&gt;contract&lt;/em&gt; of the server to exist. You can build it the way you want the data to be structured, and even test all of the edge cases, without needing a server.</source>
          <target state="translated">또 다른 단점은 서버 &lt;em&gt;계약&lt;/em&gt; 이 없어도 &lt;strong&gt;응용 프로그램&lt;/strong&gt; 을 &lt;strong&gt;빌드&lt;/strong&gt; 할 수 있다는 것 입니다. 서버를 구축하지 않고도 데이터를 원하는 방식으로 구축하고 모든 주요 사례를 테스트 할 수 있습니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d94f7bd884a1746ce32d66778364cb04715aadd3" translate="yes" xml:space="preserve">
          <source>Another valid approach opposed to seeding and talking to your server is to just bypass it altogether. Much simpler!</source>
          <target state="translated">서버를 시드하고 대화하는 것과 반대되는 또 다른 유효한 접근 방식은 서버를 완전히 우회하는 것입니다. 훨씬 간단합니다!</target>
        </trans-unit>
        <trans-unit id="52a766dc5c2e762b0fdc7f469606e823d2763da2" translate="yes" xml:space="preserve">
          <source>Another valid strategy would be to embed data directly into the DOM - but do so in a way where this data is &lt;strong&gt;always&lt;/strong&gt; present and query-able. It would have to be present 100% of the time, else this would not work.</source>
          <target state="translated">또 다른 유효한 전략은 데이터를 DOM에 직접 포함시키는 것이지만이 데이터가 &lt;strong&gt;항상&lt;/strong&gt; 존재하고 쿼리 가능한 방식으로 수행하는 것 입니다. 시간의 100 %가 존재해야합니다. 그렇지 않으면 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7444eb280a7da6e837a9131e9609202603a560ab" translate="yes" xml:space="preserve">
          <source>Another valid strategy would be to embed data directly into the DOM but to do so in a way that the data is &lt;strong&gt;always&lt;/strong&gt; present and query-able. The data would have to be present 100% of the time, otherwise this strategy would not work.</source>
          <target state="translated">또 다른 유효한 전략은 데이터를 DOM에 직접 포함시키는 것이지만 데이터가 &lt;strong&gt;항상&lt;/strong&gt; 존재하고 쿼리 가능한 방식으로 수행하는 것입니다 . 데이터는 시간의 100 %가되어야합니다. 그렇지 않으면이 전략이 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c7055886f1a80a510b3cfdc60515dc36293c42dc" translate="yes" xml:space="preserve">
          <source>Another way to locate things &amp;ndash; a more human way &amp;ndash; is to look them up by their content, by what the user would see on the page. For this, there&amp;rsquo;s the handy &lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains()&lt;/code&gt;&lt;/a&gt; command, for example:</source>
          <target state="translated">보다 인간적인 방법으로 물건을 찾는 또 다른 방법은 사용자가 페이지에서 볼 수있는 내용을 내용으로 찾아 보는 것입니다. 이를 위해 편리한 &lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains()&lt;/code&gt; &lt;/a&gt; 명령이 있습니다.</target>
        </trans-unit>
        <trans-unit id="5853e9b50c154cccedf882276ff924d327f9c93f" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;afterEach()&lt;/code&gt; hooks run</source>
          <target state="translated">모든 &lt;code&gt;afterEach()&lt;/code&gt; 후크 실행</target>
        </trans-unit>
        <trans-unit id="4c4d3c0ee4fb7151b048bcbf091348e37f101c84" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;beforeEach()&lt;/code&gt; hooks run</source>
          <target state="translated">모든 &lt;code&gt;beforeEach()&lt;/code&gt; 실행 후크</target>
        </trans-unit>
        <trans-unit id="6e91bb704fe650c007c5608e1f722e0a69a2bc4b" translate="yes" xml:space="preserve">
          <source>Any change you make here will take effect immediately for the remainder of every single test.</source>
          <target state="translated">여기서 변경 한 내용은 모든 단일 테스트의 나머지에 즉시 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="870f8549da0ac743d77860c7a85f7bcac1e70f09" translate="yes" xml:space="preserve">
          <source>Any command run by &lt;a href=&quot;../../api/commands/exec&quot;&gt;&lt;code&gt;cy.exec()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../api/commands/task&quot;&gt;&lt;code&gt;cy.task()&lt;/code&gt;&lt;/a&gt; has to exit eventually. Otherwise, Cypress will not continue running any other commands.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/exec&quot;&gt; &lt;code&gt;cy.exec()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../../api/commands/task&quot;&gt; &lt;code&gt;cy.task()&lt;/code&gt; &lt;/a&gt; 의해 실행되는 모든 명령 은 결국 종료되어야합니다. 그렇지 않으면 Cypress는 다른 명령을 계속 실행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ecb24ff6d15ae53093c6b296fab9b3c1c9b34a08" translate="yes" xml:space="preserve">
          <source>Any environment variable on your machine that starts with either &lt;code&gt;CYPRESS_&lt;/code&gt; or &lt;code&gt;cypress_&lt;/code&gt; will automatically be added and made available to you.</source>
          <target state="translated">&lt;code&gt;CYPRESS_&lt;/code&gt; 또는 &lt;code&gt;cypress_&lt;/code&gt; 로 시작하는 시스템의 모든 환경 변수 가 자동으로 추가되어 사용할 수있게됩니다.</target>
        </trans-unit>
        <trans-unit id="472899f6b0786d8f9c07a7c8fe8282f0ddaf16b0" translate="yes" xml:space="preserve">
          <source>Any failing test will now automatically expand to display its commands.</source>
          <target state="translated">실패한 테스트는 이제 자동으로 확장되어 해당 명령을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="a192f9fe629713a5410955871805d7c840646e08" translate="yes" xml:space="preserve">
          <source>Any issues related to &lt;code&gt;requestJSON&lt;/code&gt; or &lt;code&gt;responseJSON&lt;/code&gt; being duplicated are now fixed. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/65&quot;&gt;#65&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;requestJSON&lt;/code&gt; 또는 &lt;code&gt;responseJSON&lt;/code&gt; 과 관련된 모든 문제 가 수정되었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/65&quot;&gt;# 65&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="c1924d5d13d13f0fc9aa4d67b0d3e627d8ba3e2a" translate="yes" xml:space="preserve">
          <source>Any key/value you set in your &lt;a href=&quot;../references/configuration&quot;&gt;configuration&lt;/a&gt; under the &lt;code&gt;env&lt;/code&gt; key will become an environment variable.</source>
          <target state="translated">&lt;code&gt;env&lt;/code&gt; 키 아래 &lt;a href=&quot;../references/configuration&quot;&gt;구성&lt;/a&gt; 에서 설정 한 모든 키 / 값 은 환경 변수가됩니다.</target>
        </trans-unit>
        <trans-unit id="afb6da152245a388959ab67769e3a2f80d98a16e" translate="yes" xml:space="preserve">
          <source>Any modifiers activated for the event are also listed in a &lt;code&gt;modifiers&lt;/code&gt; column.</source>
          <target state="translated">이벤트에 대해 활성화 된 수정 자도 &lt;code&gt;modifiers&lt;/code&gt; 열에 나열 됩니다.</target>
        </trans-unit>
        <trans-unit id="9288ef650209f9181ecdd94971cc326bc0fadee8" translate="yes" xml:space="preserve">
          <source>Any of its ancestors &lt;strong&gt;hides overflow&lt;/strong&gt;*</source>
          <target state="translated">조상 &lt;strong&gt;가죽 오버 플로우&lt;/strong&gt; *</target>
        </trans-unit>
        <trans-unit id="a66ca3a9b7739da79ddd9966a1937e98a3a9e2cc" translate="yes" xml:space="preserve">
          <source>Any of the &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt; commands could fail to find their elements in the DOM.</source>
          <target state="translated">의 모든 &lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt; 명령은 DOM에서의 요소를 찾기 위해 실패 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="affcbd3adfa3b580a8826ec0eb06aef908b8acf0" translate="yes" xml:space="preserve">
          <source>Any process that needs to be manually interrupted to stop</source>
          <target state="translated">중지하기 위해 수동으로 중단해야하는 모든 프로세스</target>
        </trans-unit>
        <trans-unit id="7c9cbf2050f8bcc6ee4d45f4192c4a7df794c9db" translate="yes" xml:space="preserve">
          <source>Any process that needs to be manually interrupted to stop.</source>
          <target state="translated">중지하기 위해 수동으로 중단해야하는 모든 프로세스.</target>
        </trans-unit>
        <trans-unit id="8c1f51f5b1233dd40d7ca1063b564fc21e6e1ca9" translate="yes" xml:space="preserve">
          <source>Any request that does &lt;strong&gt;NOT&lt;/strong&gt; match a &lt;a href=&quot;route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt; will pass through to the server.</source>
          <target state="translated">&lt;a href=&quot;route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt; 와 일치 하지 &lt;strong&gt;않는&lt;/strong&gt; 모든 요청 은 서버로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="1bbbdd31d8a348ba4ec10c8f15204a1b5ba31e0b" translate="yes" xml:space="preserve">
          <source>Any request that matches the &lt;code&gt;method&lt;/code&gt; and &lt;code&gt;url&lt;/code&gt; of a route will be responded to based on the configuration of that route.</source>
          <target state="translated">라우트 의 &lt;code&gt;method&lt;/code&gt; 및 &lt;code&gt;url&lt;/code&gt; 과 일치하는 모든 요청 은 해당 라우트 구성에 따라 응답됩니다.</target>
        </trans-unit>
        <trans-unit id="27155c11c6a686685fdd51354e432510709fc5aa" translate="yes" xml:space="preserve">
          <source>Any request that matches the &lt;code&gt;options.whitelist&lt;/code&gt; function will &lt;strong&gt;NOT&lt;/strong&gt; be logged or stubbed. In other words it is &amp;ldquo;whitelisted&amp;rdquo; and ignored.</source>
          <target state="translated">&lt;code&gt;options.whitelist&lt;/code&gt; 함수 와 일치하는 요청은 기록되거나 스텁 &lt;strong&gt;되지 않습니다&lt;/strong&gt; . 즉, &quot;허용&quot;되어 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="48e3da8c4f366df0e1c9d7f0beb0c991f7d72840" translate="yes" xml:space="preserve">
          <source>Any request that passes the &lt;code&gt;whitelist&lt;/code&gt; will be ignored - it will not be logged nor will it be stubbed in any way (even if it matches a specific &lt;a href=&quot;route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;whitelist&lt;/code&gt; 를 통과하는 모든 요청은 무시됩니다. 요청이 특정 &lt;a href=&quot;route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt; 와 일치하더라도 로그되지 않거나 스텁되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="7ed426f0fbf88758f4cbf550f68f86a25e3e876b" translate="yes" xml:space="preserve">
          <source>Any valid chainer that comes from &lt;a href=&quot;../../guides/references/assertions#Chai&quot;&gt;Chai&lt;/a&gt; or &lt;a href=&quot;../../guides/references/assertions#Chai-jQuery&quot;&gt;Chai-jQuery&lt;/a&gt; or &lt;a href=&quot;../../guides/references/assertions#Sinon-Chai&quot;&gt;Sinon-Chai&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../guides/references/assertions#Chai&quot;&gt;Chai&lt;/a&gt; 또는 &lt;a href=&quot;../../guides/references/assertions#Chai-jQuery&quot;&gt;Chai-jQuery&lt;/a&gt; 또는 &lt;a href=&quot;../../guides/references/assertions#Sinon-Chai&quot;&gt;Sinon-Chai&lt;/a&gt; 에서 제공되는 유효한 체인입니다 .</target>
        </trans-unit>
        <trans-unit id="b7529cb0d449d0a82f3166fa6406bfebdedc0959" translate="yes" xml:space="preserve">
          <source>Any value returned from a &lt;code&gt;.should()&lt;/code&gt; callback function will be ignored. The original subject will be yielded to the next command.</source>
          <target state="translated">&lt;code&gt;.should()&lt;/code&gt; 콜백 함수 에서 반환 된 모든 값 은 무시됩니다. 원래 주제는 다음 명령으로 넘어갑니다.</target>
        </trans-unit>
        <trans-unit id="a9b735105d05e8b0fbe15f2bb1b2179fd3ea0aca" translate="yes" xml:space="preserve">
          <source>Any values to be set as &lt;a href=&quot;../guides/environment-variables&quot;&gt;environment variables&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../guides/environment-variables&quot;&gt;환경 변수&lt;/a&gt; 로 설정 될 값</target>
        </trans-unit>
        <trans-unit id="5b1b62baa7b0a25b46be9096d36f4f4b610b1af1" translate="yes" xml:space="preserve">
          <source>Any waiting or retrying that is necessary to ensure a step was successful must complete before the next step begins. If they don&amp;rsquo;t complete successfully before the timeout is reached, the test will fail.</source>
          <target state="translated">단계가 성공했는지 확인하는 데 필요한 대기 또는 재 시도는 다음 단계가 시작되기 전에 완료해야합니다. 시간 종료에 도달하기 전에 완료되지 않으면 테스트가 실패합니다.</target>
        </trans-unit>
        <trans-unit id="4f34996c4bec89b9c5884f97a302c0b1e53249ed" translate="yes" xml:space="preserve">
          <source>App Events</source>
          <target state="translated">앱 이벤트</target>
        </trans-unit>
        <trans-unit id="76566fd3d740c09e9b7c5e27c73406fc12b63ef5" translate="yes" xml:space="preserve">
          <source>App crashes now send a full stack trace (instead of 10 line truncation).</source>
          <target state="translated">앱 충돌로 인해 10 줄 자르기 대신 전체 스택 추적이 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="7a5e3bb03d06453c65b1113c4e3cf6ff8e619ec3" translate="yes" xml:space="preserve">
          <source>AppVeyor</source>
          <target state="translated">AppVeyor</target>
        </trans-unit>
        <trans-unit id="b22b16d37ccace8a17785140a4d540541ecc7f2a" translate="yes" xml:space="preserve">
          <source>Append contents to the end of a file</source>
          <target state="translated">파일 끝에 내용 추가</target>
        </trans-unit>
        <trans-unit id="2aed5e1b9d112a8aa87e06a62abe13c96d1af05b" translate="yes" xml:space="preserve">
          <source>Application HTML</source>
          <target state="translated">응용 프로그램 HTML</target>
        </trans-unit>
        <trans-unit id="dc6da9bb606b50ae3f7c93e52441b25c511f77e9" translate="yes" xml:space="preserve">
          <source>Application JavaScript</source>
          <target state="translated">응용 프로그램 JavaScript</target>
        </trans-unit>
        <trans-unit id="fa3b7a6daca6189563c3b8a252e773b7759bedd2" translate="yes" xml:space="preserve">
          <source>Application Under Test</source>
          <target state="translated">테스트중인 응용 프로그램</target>
        </trans-unit>
        <trans-unit id="442e8f42c4cdb7df576d8790f1e3ce7ab1db8082" translate="yes" xml:space="preserve">
          <source>Application state</source>
          <target state="translated">신청 상태</target>
        </trans-unit>
        <trans-unit id="f5270239ee1d5a112c1d5d99b677184b539e3c1a" translate="yes" xml:space="preserve">
          <source>Applitools</source>
          <target state="translated">Applitools</target>
        </trans-unit>
        <trans-unit id="773afd10aaf52acd29366ff51080973d5ab63492" translate="yes" xml:space="preserve">
          <source>Applitools&amp;rsquo; Cypress documentation</source>
          <target state="translated">Applitools의 Cypress 설명서</target>
        </trans-unit>
        <trans-unit id="1ef5492a364f24a965e295d5b40d19acd59d9d39" translate="yes" xml:space="preserve">
          <source>Applitools&amp;rsquo; Cypress tutorial</source>
          <target state="translated">Applitools의 Cypress 튜토리얼</target>
        </trans-unit>
        <trans-unit id="7e826cf968f4ff0f4ae3f471020ad5cc867e612a" translate="yes" xml:space="preserve">
          <source>Applying Timeouts</source>
          <target state="translated">타임 아웃 적용</target>
        </trans-unit>
        <trans-unit id="6b02bcf450203a9f44972d4b74e763254aee9eb2" translate="yes" xml:space="preserve">
          <source>Applying server defaults to &lt;code&gt;Cypress.Server.defaults({})&lt;/code&gt; now &lt;a href=&quot;../../api/cypress-api/cypress-server&quot;&gt;works as documented&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Cypress.Server.defaults({})&lt;/code&gt; 서버 기본값을 적용하면 이제 &lt;a href=&quot;../../api/cypress-api/cypress-server&quot;&gt;문서화 된대로 작동합니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b040b4179b8b00702858fdb4c1afec3d6d284509" translate="yes" xml:space="preserve">
          <source>Architecture</source>
          <target state="translated">Architecture</target>
        </trans-unit>
        <trans-unit id="b9fc88513acaa3e69787a0d7f56aa06d459c5ef7" translate="yes" xml:space="preserve">
          <source>Are our end-to-end tests that are so effective at covering the web application code are also covering the back end server code?</source>
          <target state="translated">웹 애플리케이션 코드를 다루는 데 효과적인 엔드 투 엔드 테스트도 백엔드 서버 코드를 다루고 있습니까?</target>
        </trans-unit>
        <trans-unit id="0f3711cadaeba8c07638b607a31ebd42c76b496a" translate="yes" xml:space="preserve">
          <source>Are you looking to change the &lt;strong&gt;default options&lt;/strong&gt; for Browserify?</source>
          <target state="translated">Browserify 의 &lt;strong&gt;기본 옵션&lt;/strong&gt; 을 변경 하시겠습니까?</target>
        </trans-unit>
        <trans-unit id="c7882854b22861619ee2e34a8c1c3ed6bb3eeaf2" translate="yes" xml:space="preserve">
          <source>Are you trying to run in CI?</source>
          <target state="translated">CI에서 실행하려고합니까?</target>
        </trans-unit>
        <trans-unit id="4bf0024c4bc943f998126635e2b2826496ec8582" translate="yes" xml:space="preserve">
          <source>Args</source>
          <target state="translated">Args</target>
        </trans-unit>
        <trans-unit id="f23739626e06207de5d614386d4e7599876b0030" translate="yes" xml:space="preserve">
          <source>Argument formatting display for command messages is fixed. There were instances of leading commas, or no commas on some commands.</source>
          <target state="translated">명령 메시지에 대한 인수 형식 표시가 수정되었습니다. 일부 명령에는 선행 쉼표가 있거나 쉼표가 없습니다.</target>
        </trans-unit>
        <trans-unit id="cbb9fa252e60809efa55a7ad83aea5438ef56753" translate="yes" xml:space="preserve">
          <source>Arguments</source>
          <target state="translated">Arguments</target>
        </trans-unit>
        <trans-unit id="b906e39c03121658b6681031c4701d1831b0acb8" translate="yes" xml:space="preserve">
          <source>Arguments are automatically forwarded to the function</source>
          <target state="translated">인수는 자동으로 함수로 전달됩니다</target>
        </trans-unit>
        <trans-unit id="107004472b7ba4e5e31f3082ee1fb5a1239eec61" translate="yes" xml:space="preserve">
          <source>Array</source>
          <target state="translated">Array</target>
        </trans-unit>
        <trans-unit id="e56de359c569c55b71d1418e38ecde7841a27a99" translate="yes" xml:space="preserve">
          <source>Array of string selectors used to match elements that should be blacked out when the screenshot is taken. Does not apply to &lt;code&gt;runner&lt;/code&gt; captures.</source>
          <target state="translated">스크린 샷을 찍을 때 검은 색으로 표시되어야하는 요소를 일치시키는 데 사용되는 문자열 선택기 배열입니다. &lt;code&gt;runner&lt;/code&gt; 캡처 에는 적용되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="7e0466a04f2f6220680daaa225aae7119cc37a36" translate="yes" xml:space="preserve">
          <source>As a best practice, you should not visit or interact with a 3rd party service not under your control. However, there are exceptions! If your organization uses Single Sign On (SSO) or OAuth then you might involve a 3rd party service other than your superdomain.</source>
          <target state="translated">모범 사례로서 귀하는 귀하가 관리하지 않는 타사 서비스를 방문하거나 상호 작용해서는 안됩니다. 그러나 예외가 있습니다! 조직에서 싱글 사인온 (SSO) 또는 OAuth를 사용하는 경우 수퍼 도메인 이외의 타사 서비스가 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f2e42251065d81531e85481c4170c1592f330056" translate="yes" xml:space="preserve">
          <source>As a general rule there are some best practices when visual testing.</source>
          <target state="translated">일반적으로 시각적 테스트시 모범 사례가 있습니다.</target>
        </trans-unit>
        <trans-unit id="38968f89c692b9cee7e1ee0eb6b407159ecf9bfc" translate="yes" xml:space="preserve">
          <source>As a rule of thumb anything you call from &lt;code&gt;Cypress&lt;/code&gt; affects global state. Anything you call from &lt;code&gt;cy&lt;/code&gt; affects local state.</source>
          <target state="translated">일반적으로 &lt;code&gt;Cypress&lt;/code&gt; 에서 전화하는 것은 전역 상태에 영향을줍니다. &lt;code&gt;cy&lt;/code&gt; 에서 호출하는 것은 로컬 상태에 영향을줍니다.</target>
        </trans-unit>
        <trans-unit id="e05150ef1a74b300d95ec0c4646871652b48df43" translate="yes" xml:space="preserve">
          <source>As a workaround, you may be able to use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage&quot;&gt;&lt;code&gt;window.postMessage&lt;/code&gt;&lt;/a&gt; to directly communicate with these iframes and control them (if the 3rd party iframe supports it).</source>
          <target state="translated">이 문제를 해결하려면 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage&quot;&gt; &lt;code&gt;window.postMessage&lt;/code&gt; &lt;/a&gt; 를 사용 하여 이러한 iframe과 직접 통신하고 제어 할 수 있습니다 (타사 iframe에서 지원하는 경우).</target>
        </trans-unit>
        <trans-unit id="c96f29da1cb104ae4786484c67d0eb9d5526c9d2" translate="yes" xml:space="preserve">
          <source>As configuration behavior for &lt;em&gt;all&lt;/em&gt; requests.</source>
          <target state="translated">&lt;em&gt;모든&lt;/em&gt; 요청에 대한 구성 동작으로 .</target>
        </trans-unit>
        <trans-unit id="ffb9a1447b482837f1a5337ad8e3eb3b0a8a6c61" translate="yes" xml:space="preserve">
          <source>As defaults that are merged into &lt;a href=&quot;route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">로 병합 기본값으로 &lt;a href=&quot;route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3ebfa0df89bbc1f61b70db113cf466a5befd383f" translate="yes" xml:space="preserve">
          <source>As each CI machine finishes running its assigned spec file, more spec files are distributed to it. This process repeats until all spec files are complete.</source>
          <target state="translated">각 CI 시스템이 할당 된 사양 파일의 실행을 마치면 더 많은 사양 파일이 배포됩니다. 이 프로세스는 모든 스펙 파일이 완료 될 때까지 반복됩니다.</target>
        </trans-unit>
        <trans-unit id="5a0a1bf613c24f0fdfb95c039c86e7256f19ba6f" translate="yes" xml:space="preserve">
          <source>As more and more tests are recorded to the Cypress Dashboard, Cypress can better predict how long a given spec file will take to run. To prevent irrelevant data from affecting the duration prediction, Cypress doesn&amp;rsquo;t use old historical run data regarding the spec file.</source>
          <target state="translated">Cypress 대시 보드에 점점 더 많은 테스트가 기록 될 때 Cypress는 지정된 스펙 파일을 실행하는 데 걸리는 시간을 더 잘 예측할 수 있습니다. Cypress는 관련없는 데이터가 지속 시간 예측에 영향을 미치지 않도록하기 위해 사양 파일에 대한 이전 실행 기록 데이터를 사용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f7f741f2ba089218d2c23b31c675c532108c24c4" translate="yes" xml:space="preserve">
          <source>As noted in the &lt;a href=&quot;#Arguments&quot;&gt;Arguments&lt;/a&gt; above, you can also set &lt;code&gt;prevSubject&lt;/code&gt; to one of:</source>
          <target state="translated">위 의 &lt;a href=&quot;#Arguments&quot;&gt;인수&lt;/a&gt; 에서 언급 한 것처럼 &lt;code&gt;prevSubject&lt;/code&gt; 를 다음 중 하나로 설정할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1ef3ec978e734658c8786c253536c752ae2156a9" translate="yes" xml:space="preserve">
          <source>As of &lt;a href=&quot;../references/changelog#3-0-0&quot;&gt;Cypress version 3.0&lt;/a&gt;, Cypress downloads its binary to the global system cache - on linux that is &lt;code&gt;~/.cache/Cypress&lt;/code&gt;. By ensuring this cache persists across builds you can shave minutes off install time by preventing a large binary download.</source>
          <target state="translated">현재 &lt;a href=&quot;../references/changelog#3-0-0&quot;&gt;싸이프레스 버전 3.0&lt;/a&gt; 리눅스에 - 싸이프레스는 글로벌 시스템 캐시에 바이너리를 다운로드 &lt;code&gt;~/.cache/Cypress&lt;/code&gt; . 이 캐시가 여러 빌드에서 유지되도록함으로써 큰 ​​바이너리 다운로드를 막아 설치 시간을 단축 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="26c8ef58fdcb19b069ce229859c475e90585a3bb" translate="yes" xml:space="preserve">
          <source>As of &lt;a href=&quot;changelog#1-2-0&quot;&gt;&lt;code&gt;1.2.0&lt;/code&gt;&lt;/a&gt; you can programmatically modify configuration values using Node code. This enables you to do things like use &lt;code&gt;fs&lt;/code&gt; and read off configuration values and dynamically change them.</source>
          <target state="translated">현재 &lt;a href=&quot;changelog#1-2-0&quot;&gt; &lt;code&gt;1.2.0&lt;/code&gt; &lt;/a&gt; 프로그래밍 방식 노드 코드를 사용하여 설정 값을 수정할 수 있습니다. 이를 통해 &lt;code&gt;fs&lt;/code&gt; 사용 및 구성 값 읽기 및 동적 변경과 같은 작업을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d17dc0cfbcaf9cbd8bcd0c543055234fa0347f5a" translate="yes" xml:space="preserve">
          <source>As of &lt;code&gt;0.20.0&lt;/code&gt;, you can also &lt;a href=&quot;../../api/events/catalog-of-events&quot;&gt;bind to Events&lt;/a&gt; that Cypress fires as it&amp;rsquo;s working with your element. Using a debugger with these events will give you a much lower level view into how Cypress works.</source>
          <target state="translated">현재 &lt;code&gt;0.20.0&lt;/code&gt; , 당신은 또한 수있는 &lt;a href=&quot;../../api/events/catalog-of-events&quot;&gt;이벤트에 바인딩&lt;/a&gt; 이 같은 싸이프레스의 불이 요소와 일하고있다. 이러한 이벤트와 함께 디버거를 사용하면 Cypress 작동 방식에 대한 훨씬 낮은 수준의보기가 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="aee8850ff31f0745348e133c3cd2eb7ff0f2e637" translate="yes" xml:space="preserve">
          <source>As of version &lt;a href=&quot;changelog#0-19-0&quot;&gt;&lt;code&gt;0.19.0&lt;/code&gt;&lt;/a&gt; and CLI versions &lt;code&gt;0.13.0&lt;/code&gt;, the &lt;code&gt;cypress ci&lt;/code&gt; command has been deprecated. We did this to make it clearer what the difference was between a &lt;em&gt;regular test run&lt;/em&gt; and a &lt;em&gt;recorded test run&lt;/em&gt;.</source>
          <target state="translated">버전 &lt;a href=&quot;changelog#0-19-0&quot;&gt; &lt;code&gt;0.19.0&lt;/code&gt; &lt;/a&gt; 및 CLI 버전 &lt;code&gt;0.13.0&lt;/code&gt; 부터 &lt;code&gt;cypress ci&lt;/code&gt; 명령은 더 이상 사용되지 않습니다. 우리는 이것을 &lt;em&gt;정기적 인 테스트 실행&lt;/em&gt; 과 &lt;em&gt;기록 된 테스트 실행&lt;/em&gt; 의 차이점이 더 명확 해 지도록하기 위해 이것을했습니다 .</target>
        </trans-unit>
        <trans-unit id="9e3f73e5f4437a6719a63309b2a5a744c5d26902" translate="yes" xml:space="preserve">
          <source>As of version &lt;code&gt;0.20.0&lt;/code&gt; Cypress is also a fully baked &lt;code&gt;node_module&lt;/code&gt; you can require in your Node scripts.</source>
          <target state="translated">버전으로 &lt;code&gt;0.20.0&lt;/code&gt; 싸이프레스는 완전히 구운 또한 &lt;code&gt;node_module&lt;/code&gt; 당신이 당신의 노드 스크립트에 요구할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d81ee39366d8829c3197e2400216ebe31511a22c" translate="yes" xml:space="preserve">
          <source>As of version &lt;code&gt;3.0&lt;/code&gt;, Cypress downloads the matching Cypress binary to the global system cache, so that the binary can be shared between projects. By default, global cache folders are:</source>
          <target state="translated">버전 &lt;code&gt;3.0&lt;/code&gt; 부터 Cypress는 일치하는 Cypress 바이너리를 글로벌 시스템 캐시에 다운로드하여 프로젝트간에 바이너리를 공유 할 수 있습니다. 기본적으로 글로벌 캐시 폴더는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6aa6eb32e6812b4e1580389fd01f1824c8586df2" translate="yes" xml:space="preserve">
          <source>As of version &lt;code&gt;3.0&lt;/code&gt;, the binary is downloaded to a global cache directory to be used across projects.</source>
          <target state="translated">버전 &lt;code&gt;3.0&lt;/code&gt; 부터는 바이너리가 글로벌 캐시 디렉토리로 다운로드되어 프로젝트 전체에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="62bac7fe14c7c41990f09521eab54bd5cefc2ae3" translate="yes" xml:space="preserve">
          <source>As part of your code transpilation pipeline using the &lt;a href=&quot;https://github.com/istanbuljs/babel-plugin-istanbul&quot;&gt;&lt;code&gt;babel-plugin-istanbul&lt;/code&gt;&lt;/a&gt; tool.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/istanbuljs/babel-plugin-istanbul&quot;&gt; &lt;code&gt;babel-plugin-istanbul&lt;/code&gt; &lt;/a&gt; 도구를 사용하는 코드 변환 파이프 라인의 일부로 .</target>
        </trans-unit>
        <trans-unit id="7de22ecee9297cac32649afbd41bbb88348708a3" translate="yes" xml:space="preserve">
          <source>As soon as it encounters a &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt;, Cypress then switches to the url of the main window to the url specified in your visit. This can result in a &amp;lsquo;flash&amp;rsquo; or &amp;lsquo;reload&amp;rsquo; when your tests first start.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 가 발생하자마자 Cypress는 기본 창의 URL을 방문시 지정한 URL로 전환합니다. 테스트가 처음 시작될 때 '플래시'또는 '재로드'가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b6798bd775acfde55a96fc6892ad0f131cbd2626" translate="yes" xml:space="preserve">
          <source>As we continue to save our new test file we&amp;rsquo;ll see the browser auto reloading in real time.</source>
          <target state="translated">새 테스트 파일을 계속 저장하면 브라우저가 자동으로 다시로드되는 것을 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="43b16c5e591ca952af2d6922d0abc82469d245b3" translate="yes" xml:space="preserve">
          <source>As we get closer to a public release we&amp;rsquo;ve decided to focus on onboarding new users and new projects. We&amp;rsquo;ve made several breaking changes to help with this process.</source>
          <target state="translated">공개 릴리스에 가까워지면서 우리는 새로운 사용자와 새로운 프로젝트에 집중하기로 결정했습니다. 이 프로세스에 도움이되도록 몇 가지 주요 변경 사항이 있습니다.</target>
        </trans-unit>
        <trans-unit id="d35dd7fd6087d7dfb10282ee1c9a5fb5c97bb763" translate="yes" xml:space="preserve">
          <source>As we just mentioned, logging in is one of those features that are &lt;strong&gt;mission critical&lt;/strong&gt; and should likely involve your server. We recommend you test signup and login using your UI as a real user would:</source>
          <target state="translated">방금 언급했듯이 로그인은 &lt;strong&gt;미션 크리티컬&lt;/strong&gt; 하고 서버와 관련 이있는 기능 중 하나입니다 . 실제 사용자처럼 UI를 사용하여 가입 및 로그인을 테스트하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="acaa0c4546f51c8dfdda6574d68c31d2ef4e382b" translate="yes" xml:space="preserve">
          <source>As we mentioned previously in this guide:</source>
          <target state="translated">이 안내서에서 이전에 언급 한대로 :</target>
        </trans-unit>
        <trans-unit id="8a1f1736218572903268eb5b18cdd7f75955430b" translate="yes" xml:space="preserve">
          <source>As we saw in the initial example, Cypress makes it easy to click on and type into elements on the page by using &lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; commands with a &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains()&lt;/code&gt;&lt;/a&gt; command. This is a great example of chaining in action. Let&amp;rsquo;s see it again:</source>
          <target state="translated">초기 예제에서 보았 듯이 Cypress를 사용 하면 &lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains()&lt;/code&gt; &lt;/a&gt; 명령 과 함께 &lt;a href=&quot;../../api/commands/click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 명령을 사용하여 페이지의 요소를 쉽게 클릭하고 입력 할 수 있습니다. 이것은 작동중인 체인의 훌륭한 예입니다. 다시 봅시다 :</target>
        </trans-unit>
        <trans-unit id="1130247eb77b52f001a3c9ae1faa17218850034d" translate="yes" xml:space="preserve">
          <source>As we showed above, Cypress anticipates the asynchronous nature of web applications and doesn&amp;rsquo;t fail immediately the first time an element is not found. Instead, Cypress gives your app a window of time to finish whatever it may be doing!</source>
          <target state="translated">위에서 살펴본 것처럼 Cypress는 웹 응용 프로그램의 비동기 특성을 예상하며 요소를 처음 찾을 때 즉시 실패하지 않습니다. 대신 Cypress는 앱에서 수행중인 작업을 완료 할 수있는 시간을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="37ccb547796404fa20d17f1596a0f5d2ad59dd9f" translate="yes" xml:space="preserve">
          <source>As you approach infinity your confidence does continue to rise on the chances you could prove the desired state will be reached, but you can never prove it will. Instead you could theoretically be waiting for the heat death of the universe for a condition to come that is only a moment away from happening. There is no way to prove or disprove that it &lt;em&gt;may&lt;/em&gt; conditionally happen.</source>
          <target state="translated">무한대에 가까워 질수록 원하는 상태에 도달했다는 것을 증명할 수있는 가능성에 대한 자신감은 계속 높아지지만, 그 상태를 증명할 수는 없습니다. 대신 당신은 이론적으로 우주의 열사병이 일어나기 직전 인 상황이 올 때까지 기다릴 수 있습니다. 조건부로 발생할 &lt;em&gt;수&lt;/em&gt; 있음을 증명하거나 반증 할 방법이 없습니다 .</target>
        </trans-unit>
        <trans-unit id="6aba466eef0bd2c502c3348af64fc725d6cf16ad" translate="yes" xml:space="preserve">
          <source>As you can see, Cypress does a lot of extra work to ensure the state of the application matches what our commands expect about it. Each command may resolve quickly (so fast you won&amp;rsquo;t see them in a pending state) but others may take seconds, or even dozens of seconds to resolve.</source>
          <target state="translated">보시다시피 Cypress는 응용 프로그램의 상태가 명령이 기대하는 것과 일치하도록 많은 추가 작업을 수행합니다. 각 명령은 빠르게 해결 될 수 있지만 (대기 상태에서는 빨리 볼 수 없지만) 다른 명령은 해결하는 데 몇 초 또는 수십 초가 걸릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c2f84ae4387fd567cb20e3c90d39b12c13875ba4" translate="yes" xml:space="preserve">
          <source>As you write more and more end-to-end tests, you will find yourself wondering - do I need to write more tests? Are there parts of the application still untested? Are there parts of the application that perhaps are tested too much? One answer to those questions is to find out which lines of the application&amp;rsquo;s source code were executed during end-to-end tests. If there are important sections of the application&amp;rsquo;s logic that &lt;strong&gt;were not&lt;/strong&gt; executed from the tests, then a new test should be added to ensure that part of our application logic is tested.</source>
          <target state="translated">점점 더 많은 엔드-투-엔드 테스트를 작성할 때 궁금해 할 것입니다. 더 많은 테스트를 작성해야합니까? 아직 테스트되지 않은 부분이 있습니까? 응용 프로그램에 너무 많이 테스트 된 부분이 있습니까? 이러한 질문에 대한 한 가지 대답은 종단 간 테스트 중에 실행 된 응용 프로그램 소스 코드 행을 찾는 것입니다. 테스트에서 실행 &lt;strong&gt;되지 않은&lt;/strong&gt; 응용 프로그램 논리의 중요한 섹션이 있으면 응용 프로그램 논리의 일부가 테스트되도록 새 테스트를 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="87a97bf4a1598232a60fa2abcdfc4634e1ead040" translate="yes" xml:space="preserve">
          <source>Ask your administrator to disable these policies so that you can use Cypress with Chrome.</source>
          <target state="translated">Chrome에서 Cypress를 사용할 수 있도록 관리자에게 이러한 정책을 사용 중지하도록 요청하십시오.</target>
        </trans-unit>
        <trans-unit id="cf4ed9c4735b377be3e9623c700ea94074617be5" translate="yes" xml:space="preserve">
          <source>Assert about the content on the page.</source>
          <target state="translated">페이지의 내용에 대해 주장하십시오.</target>
        </trans-unit>
        <trans-unit id="4b9467a4a1ecf2b8384e612c3ea827902723a39b" translate="yes" xml:space="preserve">
          <source>Assert an input is focused after button click</source>
          <target state="translated">버튼 클릭 후 입력에 초점을 맞 춥니 다.</target>
        </trans-unit>
        <trans-unit id="02fc2f7103472b59154070ccc2dea6f5ce6b7501" translate="yes" xml:space="preserve">
          <source>Assert class name contains &lt;code&gt;heading-&lt;/code&gt;</source>
          <target state="translated">클래스 이름에 &lt;code&gt;heading-&lt;/code&gt; 포함되어 있음</target>
        </trans-unit>
        <trans-unit id="3e9f35397f479cdc5e28c72cc3ae9b8f67920e2b" translate="yes" xml:space="preserve">
          <source>Assert element is visible after scrolling it into view</source>
          <target state="translated">어설트 요소가 화면으로 스크롤 된 후 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="b66d50b1e07a39aefbc5c2e7a23ef42cba8913a1" translate="yes" xml:space="preserve">
          <source>Assert it includes: &lt;code&gt;/commands/actions&lt;/code&gt;</source>
          <target state="translated">포함 : &lt;code&gt;/commands/actions&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7ab272b32f2443fab970589de436060f234d1e35" translate="yes" xml:space="preserve">
          <source>Assert multiple things about the same subject</source>
          <target state="translated">같은 주제에 대해 여러 가지 주장</target>
        </trans-unit>
        <trans-unit id="28ef766ecfa1361e53f74f281657e515d30924e1" translate="yes" xml:space="preserve">
          <source>Assert on a function&amp;rsquo;s return value</source>
          <target state="translated">함수의 반환 값에 대한 주장</target>
        </trans-unit>
        <trans-unit id="125634b60989dc3b141c955448d85729f6c546e8" translate="yes" xml:space="preserve">
          <source>Assert on the alert text</source>
          <target state="translated">경고 텍스트에 어설 션</target>
        </trans-unit>
        <trans-unit id="1f737b37c1546853f5c1dca2144fcecbe9031918" translate="yes" xml:space="preserve">
          <source>Assert text contents of 3 elements</source>
          <target state="translated">3 요소의 텍스트 내용 확인</target>
        </trans-unit>
        <trans-unit id="c915fc3b51b99452851ca936f4a63881aa24a260" translate="yes" xml:space="preserve">
          <source>Assert that a propery does not exist on &lt;code&gt;window&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;window&lt;/code&gt; 에 속성이 없다고 주장</target>
        </trans-unit>
        <trans-unit id="5f86756d6aeca7edb5a4c08d915bf818691252ab" translate="yes" xml:space="preserve">
          <source>Assert that a redirect works</source>
          <target state="translated">리디렉션이 작동하는지 확인</target>
        </trans-unit>
        <trans-unit id="bbd76738127dcf4f083861f496d145941c128859" translate="yes" xml:space="preserve">
          <source>Assert that hash is &lt;code&gt;#/users/1&lt;/code&gt; given remote URL: &lt;code&gt;http://localhost:8000/app/#/users/1&lt;/code&gt;</source>
          <target state="translated">원격 URL에서 해시가 &lt;code&gt;#/users/1&lt;/code&gt; 임을 확인 &lt;code&gt;http://localhost:8000/app/#/users/1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8a5a7a3674d89a100e54bd1eec9e2cb25a54e023" translate="yes" xml:space="preserve">
          <source>Assert that the document&amp;rsquo;s title is &amp;ldquo;My Awesome Application&amp;rdquo;</source>
          <target state="translated">문서 제목이 &quot;나의 멋진 응용 프로그램&quot;이라고 주장</target>
        </trans-unit>
        <trans-unit id="24de4c83a3cb291461f7c5d3cc0ae2af7b327c3a" translate="yes" xml:space="preserve">
          <source>Assert that the hash matches via RegExp</source>
          <target state="translated">RegExp를 통해 해시가 일치하는지 확인</target>
        </trans-unit>
        <trans-unit id="06393ca60c2b084cd6a848424a245cabe352afc3" translate="yes" xml:space="preserve">
          <source>Assert that the url contains &amp;ldquo;#users/new&amp;rdquo;</source>
          <target state="translated">URL에 &quot;# users / new&quot;가 포함되어 있는지 확인</target>
        </trans-unit>
        <trans-unit id="d0e358e06c71103b03f7ef1eca4c4ff3d3051315" translate="yes" xml:space="preserve">
          <source>Assert the URL is &lt;code&gt;http://localhost:8000/users/1/edit&lt;/code&gt;</source>
          <target state="translated">URL이 &lt;code&gt;http://localhost:8000/users/1/edit&lt;/code&gt; 인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="ff77f0d76a34309ec03d8c8e39d2fb226f915533" translate="yes" xml:space="preserve">
          <source>Assert the URL to include a specific &lt;em&gt;string&lt;/em&gt;</source>
          <target state="translated">특정 &lt;em&gt;문자열&lt;/em&gt; 을 포함하도록 URL을 확인하십시오.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="13250a120a019f64e88759c9884da42180779b4f" translate="yes" xml:space="preserve">
          <source>Assert the URL to include a specific &lt;em&gt;string&lt;/em&gt;.</source>
          <target state="translated">특정 &lt;em&gt;문자열&lt;/em&gt; 을 포함하도록 URL을 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="16417d7e03062b12edb9edbe5427a47afd0df97d" translate="yes" xml:space="preserve">
          <source>Assert the checkbox is disabled</source>
          <target state="translated">확인란이 비활성화되어 있다고 가정</target>
        </trans-unit>
        <trans-unit id="4f7eca6e8e52d452c9901a276fca67a7eb5103ea" translate="yes" xml:space="preserve">
          <source>Assert the class is &amp;lsquo;form-horizontal&amp;rsquo;</source>
          <target state="translated">클래스가 '형식-수평'이라고 주장</target>
        </trans-unit>
        <trans-unit id="c44f0a5f6177b5f9d4c7958f5e35e956bb880be3" translate="yes" xml:space="preserve">
          <source>Assert the href is equal to &amp;lsquo;/users&amp;rsquo;</source>
          <target state="translated">href가 '/ users'와 같다고 주장</target>
        </trans-unit>
        <trans-unit id="1038a6131176206f351f3d047ba98539168a882b" translate="yes" xml:space="preserve">
          <source>Assert the input reflects the new value</source>
          <target state="translated">입력이 새로운 값을 반영한다고 주장</target>
        </trans-unit>
        <trans-unit id="b88085c8c2d1e0f8670981cd24ba58b2230bc63d" translate="yes" xml:space="preserve">
          <source>Assert the value is not &amp;lsquo;Jane&amp;rsquo;</source>
          <target state="translated">값이 '제인'이 아니라고 주장</target>
        </trans-unit>
        <trans-unit id="3727b7a7437bb392133be46f8128c1d09090e3a8" translate="yes" xml:space="preserve">
          <source>Asserting About Elements</source>
          <target state="translated">요소에 대한 주장</target>
        </trans-unit>
        <trans-unit id="9ff57967d35caef5906df45c2387e1e5c9d46d96" translate="yes" xml:space="preserve">
          <source>Asserting against &lt;a href=&quot;../../api/commands/focused&quot;&gt;&lt;code&gt;cy.focused()&lt;/code&gt;&lt;/a&gt; will indent command logs now.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/focused&quot;&gt; &lt;code&gt;cy.focused()&lt;/code&gt; &lt;/a&gt; 에 대해 어설 션 하면 명령 로그가 들여 쓰기됩니다.</target>
        </trans-unit>
        <trans-unit id="9583b461b8ff4edbaf885d356361c4443b12451d" translate="yes" xml:space="preserve">
          <source>Asserting file non-existence</source>
          <target state="translated">존재하지 않는 파일 확인</target>
        </trans-unit>
        <trans-unit id="fa0cf380edcc5a6b369b220ed3a5bbdc45bdd21c" translate="yes" xml:space="preserve">
          <source>Asserting in English</source>
          <target state="translated">영어로 주장</target>
        </trans-unit>
        <trans-unit id="2560ac029f415c3f4f60afeea7010112b46f071a" translate="yes" xml:space="preserve">
          <source>Asserting on a request&amp;rsquo;s body</source>
          <target state="translated">요청 본문에 대한 주장</target>
        </trans-unit>
        <trans-unit id="30e36ab08f421e5caee6fdcc2478550a634beafd" translate="yes" xml:space="preserve">
          <source>Asserting on a request&amp;rsquo;s headers</source>
          <target state="translated">요청 헤더에 대한 주장</target>
        </trans-unit>
        <trans-unit id="edc4d66b454ac916879e03dc2b000e7bf2cb9e60" translate="yes" xml:space="preserve">
          <source>Asserting on a request&amp;rsquo;s url</source>
          <target state="translated">요청 URL에 대한 주장</target>
        </trans-unit>
        <trans-unit id="c4bf7f32d25381cbadabc740c00acb1a21851081" translate="yes" xml:space="preserve">
          <source>Asserting that an attribute equals a falsy value no longer fails when the value was falsy. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/831&quot;&gt;#831&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1491&quot;&gt;#1491&lt;/a&gt;.</source>
          <target state="translated">값이 거짓 일 때 속성이 거짓 값과 같다고 주장해도 더 이상 실패하지 않습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/831&quot;&gt;# 831&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1491&quot;&gt;# 1491을&lt;/a&gt; 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="e03dc251be8fa0a9d0f75257a00fcb55f9bed839" translate="yes" xml:space="preserve">
          <source>Assertion</source>
          <target state="translated">Assertion</target>
        </trans-unit>
        <trans-unit id="48075c7745848f6b5ffba4fe477e11aad495df4d" translate="yes" xml:space="preserve">
          <source>Assertion Styles</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="139da0520e13ec6926fd499c208eebe28a15fc6c" translate="yes" xml:space="preserve">
          <source>Assertion Support</source>
          <target state="translated">어설 션 지원</target>
        </trans-unit>
        <trans-unit id="631e0c0813e30329106964fd36526f87bf2ccf4f" translate="yes" xml:space="preserve">
          <source>Assertion messages are no longer truncated, and instead will scale down by reducing the &lt;code&gt;font-size&lt;/code&gt; and &lt;code&gt;line-height&lt;/code&gt; after they exceed 110 characters. So you&amp;rsquo;ll now always see the full assertion message.</source>
          <target state="translated">어설 션 메시지는 더 이상 잘리지 않으며 대신 &lt;code&gt;font-size&lt;/code&gt; 와 &lt;code&gt;line-height&lt;/code&gt; 가 110자를 초과하면 크기 가 줄어 듭니다 . 따라서 항상 전체 어설 션 메시지가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="49bf55dc112eb3597726ba8ecf785a4fae4cbce0" translate="yes" xml:space="preserve">
          <source>Assertions</source>
          <target state="translated">Assertions</target>
        </trans-unit>
        <trans-unit id="e2dbf25bdc8bdd90af44c8f13d81535a55f8477c" translate="yes" xml:space="preserve">
          <source>Assertions based around the &lt;code&gt;window&lt;/code&gt; or &lt;code&gt;document&lt;/code&gt; object no longer cause Chai to bomb on formatting their object structures (due to cylic references) and instead now will show up as &lt;code&gt;&amp;lt;window&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;document&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;window&lt;/code&gt; 또는 &lt;code&gt;document&lt;/code&gt; 객체를 기반으로하는 어설 션으로 인해 Chai가 더 이상 객체 구조의 서식 지정에 영향을주지 않으며 (순환 참조로 인해) 이제 &lt;code&gt;&amp;lt;window&amp;gt;&lt;/code&gt; 및 &lt;code&gt;&amp;lt;document&amp;gt;&lt;/code&gt; 로 표시 됩니다.</target>
        </trans-unit>
        <trans-unit id="b46abda2fe2a6b8d37201bea9e12a3e63f5e90ba" translate="yes" xml:space="preserve">
          <source>Assertions describe the &lt;strong&gt;desired&lt;/strong&gt; state of your &lt;strong&gt;elements&lt;/strong&gt;, your &lt;strong&gt;objects&lt;/strong&gt;, and your &lt;strong&gt;application&lt;/strong&gt;.</source>
          <target state="translated">어설 션은 &lt;strong&gt;요소&lt;/strong&gt; , &lt;strong&gt;개체&lt;/strong&gt; 및 &lt;strong&gt;응용 프로그램&lt;/strong&gt; 의 &lt;strong&gt;원하는&lt;/strong&gt; 상태를 설명합니다 .&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="26c7b02910ea1639c957a331167a037b8d84fee6" translate="yes" xml:space="preserve">
          <source>Assertions let you do things like ensuring an element is visible or has a particular attribute, CSS class, or state. Assertions are just commands that enable you to describe the &lt;em&gt;desired&lt;/em&gt; state of your application. Cypress will automatically wait until your elements reach this state, or fail the test if the assertions don&amp;rsquo;t pass. Here&amp;rsquo;s a quick look at assertions in action:</source>
          <target state="translated">어설 션을 사용하면 요소가 표시되도록하거나 특정 특성, CSS 클래스 또는 상태를 유지하는 등의 작업을 수행 할 수 있습니다. 어설 션은 &lt;em&gt;원하는&lt;/em&gt; 응용 프로그램 상태 를 설명 할 수있는 명령입니다 . Cypress는 요소가이 상태에 도달 할 때까지 자동으로 기다리거나 어설 션이 통과되지 않으면 테스트에 실패합니다. 사용중인 어설 션에 대해 간략히 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="9fc8683ffa6bfd55daae9eefe6b8beaa3eb3298c" translate="yes" xml:space="preserve">
          <source>Assertions running outside of a test are now properly handled in Cypress instead of throwing internal errors. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3926&quot;&gt;#3926&lt;/a&gt;.</source>
          <target state="translated">테스트 외부에서 실행되는 어설 션은 이제 내부 오류를 발생시키는 대신 Cypress에서 올바르게 처리됩니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3926&quot;&gt;# 3926&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="23ddc4b368485bc88a12477ddff72e1bc1804b5a" translate="yes" xml:space="preserve">
          <source>Assertions that involved an &lt;code&gt;{exp}&lt;/code&gt; property are no longer incorrectly substituted with the &lt;code&gt;#{this}&lt;/code&gt; subject.</source>
          <target state="translated">&lt;code&gt;{exp}&lt;/code&gt; 속성과 관련된 어설 션 이 더 이상 &lt;code&gt;#{this}&lt;/code&gt; 주제로 잘못 대체되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="d78b302f7a8700182b6d91b01cc06bd42a68a2cd" translate="yes" xml:space="preserve">
          <source>Assertions which actually produced 2 assertions (under the hood) such as &lt;code&gt;should('have.attr', 'href', '/users/1')&lt;/code&gt; will now only log the 2nd assertion, unless the first fails.</source>
          <target state="translated">&lt;code&gt;should('have.attr', 'href', '/users/1')&lt;/code&gt; 와 같이 실제로 두 가지 어설 션을 생성 한 어설 션 ( 첫 번째 실패가 아닌 한)은 두 번째 어설 션 만 기록합니다.</target>
        </trans-unit>
        <trans-unit id="141ed1ac2969e934c84598e3b128c5f2d6936b13" translate="yes" xml:space="preserve">
          <source>Assign an alias for later use. Reference the alias later within a &lt;a href=&quot;get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt; command with an &lt;code&gt;@&lt;/code&gt; prefix.</source>
          <target state="translated">나중에 사용하기 위해 별명을 지정하십시오. 나중에 내 별명 참조 &lt;a href=&quot;get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;wait&quot;&gt; &lt;code&gt;cy.wait()&lt;/code&gt; &lt;/a&gt; 와 명령 &lt;code&gt;@&lt;/code&gt; 의 접두사.</target>
        </trans-unit>
        <trans-unit id="5d6a0c9d46636db546f8c450bb160e696ff6b47b" translate="yes" xml:space="preserve">
          <source>Assigning Return Values</source>
          <target state="translated">반환 값 할당</target>
        </trans-unit>
        <trans-unit id="e0bdc67d8c0bee088a993ebfb54375b0e2faae1e" translate="yes" xml:space="preserve">
          <source>Assuming you&amp;rsquo;ve successfully &lt;a href=&quot;installing-cypress#Installing&quot;&gt;installed the Test Runner&lt;/a&gt; and &lt;a href=&quot;installing-cypress#Opening-Cypress&quot;&gt;opened the Cypress app&lt;/a&gt;, now it&amp;rsquo;s time to write our first test. We&amp;rsquo;re going to:</source>
          <target state="translated">가정 성공적으로 한 &lt;a href=&quot;installing-cypress#Installing&quot;&gt;테스트 러너를 설치&lt;/a&gt; 하고 &lt;a href=&quot;installing-cypress#Opening-Cypress&quot;&gt;싸이프레스 응용 프로그램 개설&lt;/a&gt; , 우리의 첫 번째 테스트를 작성하는 지금의 시간을. 우리는 :</target>
        </trans-unit>
        <trans-unit id="489a672e2e613a7915bae711622ae15ae6ed1a07" translate="yes" xml:space="preserve">
          <source>Assuming you&amp;rsquo;ve successfully &lt;a href=&quot;installing-cypress#Installing&quot;&gt;installed the Test Runner&lt;/a&gt; and &lt;a href=&quot;installing-cypress#Opening-Cypress&quot;&gt;opened the Test Runner&lt;/a&gt; in your project, the first thing you&amp;rsquo;ll want to do is start your local development server that hosts the application.</source>
          <target state="translated">&lt;a href=&quot;installing-cypress#Installing&quot;&gt;Test Runner를&lt;/a&gt; 성공적으로 설치하고 프로젝트에서 Test Runner 를 &lt;a href=&quot;installing-cypress#Opening-Cypress&quot;&gt;열었다 고&lt;/a&gt; 가정하면 가장 먼저해야 할 일은 애플리케이션을 호스팅하는 로컬 개발 서버를 시작하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="fed55757249988c0611abfa4e8ef2e933d32d401" translate="yes" xml:space="preserve">
          <source>Async tests which used a &lt;code&gt;cy&lt;/code&gt; command and had a &lt;code&gt;done&lt;/code&gt; callback was always undefined. Now it&amp;rsquo;s back to real Mocha &lt;code&gt;function done(err)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cy&lt;/code&gt; 명령 을 사용하고 콜백을 &lt;code&gt;done&lt;/code&gt; 한 비동기 테스트 는 항상 정의되지 않았습니다. 이제 실제 모카 &lt;code&gt;function done(err)&lt;/code&gt; 돌아갑니다 .</target>
        </trans-unit>
        <trans-unit id="3d7fac7964f752248f02c5aa61c85fd417dcfbcf" translate="yes" xml:space="preserve">
          <source>Asynchronous</source>
          <target state="translated">Asynchronous</target>
        </trans-unit>
        <trans-unit id="a2ec75ee73f3aec0ec162ad993797b2b7f6f94af" translate="yes" xml:space="preserve">
          <source>Asynchronous APIs are here to stay in JavaScript. They are found everywhere in modern code. In fact, most new browser APIs are asynchronous and many core Node modules are asynchronous as well.</source>
          <target state="translated">비동기 API는 JavaScript로 유지됩니다. 그것들은 현대 코드의 어느 곳에서나 발견됩니다. 실제로 대부분의 새 브라우저 API는 비동기식이며 많은 핵심 노드 모듈도 비동기식입니다.</target>
        </trans-unit>
        <trans-unit id="d2da7c0a9bf7a105a7f9afea2f549789e539a08e" translate="yes" xml:space="preserve">
          <source>At first, we&amp;rsquo;ll use them to make it easy to share objects between your hooks and your tests.</source>
          <target state="translated">처음에는 후크와 테스트간에 객체를 쉽게 공유 할 수 있도록이를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="c1903c75ce54bb3fb624b280eb90df3e50486891" translate="yes" xml:space="preserve">
          <source>At the moment, &lt;code&gt;mouseover&lt;/code&gt; and &lt;code&gt;mouseout&lt;/code&gt; events are &lt;em&gt;not&lt;/em&gt; fired. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;Open an issue&lt;/a&gt; if you need this to be fixed.</source>
          <target state="translated">현재는 &lt;code&gt;mouseover&lt;/code&gt; 및 마우스 &lt;code&gt;mouseout&lt;/code&gt; 이벤트가 발생 &lt;em&gt;하지 않습니다&lt;/em&gt; . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;이 문제를 해결하려면 문제를여십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0e46540f6713af7a953cbcf962397ae439a570c2" translate="yes" xml:space="preserve">
          <source>At the moment, we haven&amp;rsquo;t implemented an automatic way to recover from them, but it is actually possible for us to do so. We have an &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/349&quot;&gt;open issue documenting the steps&lt;/a&gt; we could take to restart the renderer process and continue the run. If you&amp;rsquo;re seeing consistent crashes and would like this implemented, please leave a note in the issue.</source>
          <target state="translated">현재로서는 자동 복구 방법을 구현하지 않았지만 실제로는 가능합니다. 렌더러 프로세스를 다시 시작하고 실행을 계속하기 위해 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/349&quot;&gt;수행&lt;/a&gt; 할 수 있는 단계를 설명 하는 공개 문제 가 있습니다. 일관된 충돌이 발생하고이를 구현하려는 경우 문제에 메모 해 두십시오.</target>
        </trans-unit>
        <trans-unit id="cefc6e99b66db543e27f5db576042d6f2531a8a2" translate="yes" xml:space="preserve">
          <source>At the very bottom of the Settings page click the &lt;strong&gt;Remove Project&lt;/strong&gt; button.</source>
          <target state="translated">설정 페이지 맨 아래에서 &lt;strong&gt;프로젝트 제거&lt;/strong&gt; 버튼을 클릭 &lt;strong&gt;하십시오&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="fbe13375780cbe384edfa4dd341dc92ba3540c5c" translate="yes" xml:space="preserve">
          <source>Attempting to &lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt; a select element will now throw an error. The error guides you to using the &lt;a href=&quot;../../api/commands/select&quot;&gt;&lt;code&gt;.select()&lt;/code&gt;&lt;/a&gt; command, as that is the command you should use to change a &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; value.</source>
          <target state="translated">select 요소 를 &lt;a href=&quot;../../api/commands/click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt; 하려고 시도 하면 이제 오류가 발생합니다. &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; 값 을 변경하는 데 사용해야하는 명령이므로 오류는 &lt;a href=&quot;../../api/commands/select&quot;&gt; &lt;code&gt;.select()&lt;/code&gt; &lt;/a&gt; 명령 을 사용하도록 안내합니다 .</target>
        </trans-unit>
        <trans-unit id="45848457ad7247c237422b4c68498d0720b37c3b" translate="yes" xml:space="preserve">
          <source>Attempting to &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; a non &lt;code&gt;text/html&lt;/code&gt; resource will now throw a specific error message instead of bombing on page injection with an &lt;code&gt;&amp;lt;iframe&lt;/code&gt;&amp;gt; origin error. You have to visit actual &lt;code&gt;html&lt;/code&gt;, you cannot visit something like a &lt;code&gt;.json&lt;/code&gt; or &lt;code&gt;.png&lt;/code&gt;. If you&amp;rsquo;re wanting to visit an API route on your back end that does something like set cookies (thus avoiding loading your UI) you can just use &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; for this since it will now automatically get and set cookies under the hood. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/211&quot;&gt;#211&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 시도하면 &lt;code&gt;text/html&lt;/code&gt; 이 아닌 리소스가 아닌 경우 &lt;code&gt;&amp;lt;iframe&lt;/code&gt; &amp;gt; origin 오류로 페이지 삽입시 폭격 대신 특정 오류 메시지 가 발생합니다. 실제 &lt;code&gt;html&lt;/code&gt; 을 방문해야 하며 &lt;code&gt;.json&lt;/code&gt; 또는 &lt;code&gt;.png&lt;/code&gt; 와 같은 것을 방문 할 수 없습니다 . 쿠키를 설정하지 않고 (따라서 UI로드를 피하는 등) 백엔드의 API 경로를 방문하려면 &lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt; 를 사용하면 자동으로 쿠키를 자동으로 가져오고 설정할 수 있습니다. . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/211&quot;&gt;# 211&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="7dfc2ad67907aaea89a872402b6a78fe213e2547" translate="yes" xml:space="preserve">
          <source>Attempting to run &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt;&lt;code&gt;cypress run&lt;/code&gt;&lt;/a&gt; on a project without a &lt;code&gt;cypress.json&lt;/code&gt; now errors instead of scaffolding and running the kitchen sink.</source>
          <target state="translated">&lt;code&gt;cypress.json&lt;/code&gt; 없이 프로젝트에서 &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt; &lt;code&gt;cypress run&lt;/code&gt; &lt;/a&gt; 을 실행하려고 하면 부엌 싱크대를 비계하고 실행하는 대신 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="77cb6dedbdce68f64d263282b100f5849ed1f45b" translate="yes" xml:space="preserve">
          <source>Aurelia CLI</source>
          <target state="translated">아우렐 리아 CLI</target>
        </trans-unit>
        <trans-unit id="ee1acfa55eb1476c86c5c4a68f256a67b25289ab" translate="yes" xml:space="preserve">
          <source>Authentication</source>
          <target state="translated">Authentication</target>
        </trans-unit>
        <trans-unit id="32e2d8cbbd74c3179b4f6b2ec3547f618f814d62" translate="yes" xml:space="preserve">
          <source>Author email: &lt;code&gt;COMMIT_INFO_EMAIL&lt;/code&gt;</source>
          <target state="translated">작성자 이메일 : &lt;code&gt;COMMIT_INFO_EMAIL&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9cfa5b79c63296cedbafae7bb9de1bf88cf445e4" translate="yes" xml:space="preserve">
          <source>Author: &lt;code&gt;COMMIT_INFO_AUTHOR&lt;/code&gt;</source>
          <target state="translated">저자 : &lt;code&gt;COMMIT_INFO_AUTHOR&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dd099a159d5cc312d300f7305c16e69a025920cc" translate="yes" xml:space="preserve">
          <source>Auto Scaling</source>
          <target state="translated">자동 스케일링</target>
        </trans-unit>
        <trans-unit id="69d84670ebb049ab9e66b74191cd2bdfc4f61b3c" translate="yes" xml:space="preserve">
          <source>Autocomplete while typing Cypress commands</source>
          <target state="translated">Cypress 명령을 입력하는 동안 자동 완성</target>
        </trans-unit>
        <trans-unit id="b7884505960ec27e21eebfbb0a1e667cbff977af" translate="yes" xml:space="preserve">
          <source>Autocomplete while typing assertion chains, including only showing DOM assertions if testing on a DOM element.</source>
          <target state="translated">DOM 요소를 테스트 할 때 DOM 어설 션 표시 만 포함하여 어설 션 체인을 입력하는 동안 자동 완성</target>
        </trans-unit>
        <trans-unit id="593dda079f1d76de3d8c3ef76b8d0402c0ec05e6" translate="yes" xml:space="preserve">
          <source>Automated File Validation</source>
          <target state="translated">자동화 된 파일 검증</target>
        </trans-unit>
        <trans-unit id="618689863915a7d869fe47db737f5bd3e83d82e4" translate="yes" xml:space="preserve">
          <source>Automatic command errors now properly show as errored commands.</source>
          <target state="translated">자동 명령 오류가 이제 오류가 발생한 명령으로 올바르게 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="618b0fd1eff770212e07637c277d859d9f5542f5" translate="yes" xml:space="preserve">
          <source>Automatic reset/restore between tests</source>
          <target state="translated">테스트 간 자동 재설정 / 복원</target>
        </trans-unit>
        <trans-unit id="fb090c03b6f2481b7bfca5ed0f848be0c8caa86f" translate="yes" xml:space="preserve">
          <source>Automatic retries</source>
          <target state="translated">자동 재시도</target>
        </trans-unit>
        <trans-unit id="ed51f87be15dfc89156f75642f3c404c2c41f4dd" translate="yes" xml:space="preserve">
          <source>Automatic screenshots on test failure</source>
          <target state="translated">테스트 실패시 자동 스크린 샷</target>
        </trans-unit>
        <trans-unit id="7ad9ea3d849ebee913c14efa89fb8281b9e96ec3" translate="yes" xml:space="preserve">
          <source>Automatically send &lt;code&gt;Accept: text/html,*/*&lt;/code&gt; request header</source>
          <target state="translated">&lt;code&gt;Accept: text/html,*/*&lt;/code&gt; 자동 전송 : text / html, * / * 요청 헤더</target>
        </trans-unit>
        <trans-unit id="d6de80e0d423a44071ee7a46055a292c21c3387b" translate="yes" xml:space="preserve">
          <source>Automatically send &lt;code&gt;User-Agent&lt;/code&gt; header</source>
          <target state="translated">&lt;code&gt;User-Agent&lt;/code&gt; 헤더 자동 전송</target>
        </trans-unit>
        <trans-unit id="c49f11abcde4cd837f26251fb9b7feae04894223" translate="yes" xml:space="preserve">
          <source>Automation restrictions</source>
          <target state="translated">자동화 제한</target>
        </trans-unit>
        <trans-unit id="0751b786ba4011660cb1fdd1b25298300b560a07" translate="yes" xml:space="preserve">
          <source>Available aliases are now logged in the console on &lt;a href=&quot;../../api/commands/debug&quot;&gt;&lt;code&gt;.debug()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">사용 가능한 별명이 이제 &lt;a href=&quot;../../api/commands/debug&quot;&gt; &lt;code&gt;.debug()&lt;/code&gt; &lt;/a&gt; 의 콘솔에 기록됩니다 .</target>
        </trans-unit>
        <trans-unit id="2d4ca335e321552a3046fa927e75ee78ae6a39b3" translate="yes" xml:space="preserve">
          <source>Avoid the server, invoke your JavaScript callbacks manually thereby simulating what happens when &amp;ldquo;notifications come in&amp;rdquo;, or &amp;ldquo;users leave the chat&amp;rdquo; purely in the browser.</source>
          <target state="translated">서버를 피하고 JavaScript 콜백을 수동으로 호출하여 &quot;알림이 올 때&quot;또는 &quot;사용자가 대화를 떠날 때&quot;브라우저에서 순수하게 발생하는 상황을 시뮬레이션하십시오.</target>
        </trans-unit>
        <trans-unit id="555ae8ff4a2358563b4f67ac3aab414a0ea0e94c" translate="yes" xml:space="preserve">
          <source>Avoiding the use of &lt;code&gt;this&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; 사용하지 않기</target>
        </trans-unit>
        <trans-unit id="276e2011444112663d40a612db506f9034b7fc8f" translate="yes" xml:space="preserve">
          <source>Azure DevOps / VSTS CI / TeamFoundation</source>
          <target state="translated">Azure DevOps / VSTS CI / TeamFoundation</target>
        </trans-unit>
        <trans-unit id="4a25a281198c16ce3576abaeed0649dc813bef99" translate="yes" xml:space="preserve">
          <source>BDD Assertions</source>
          <target state="translated">BDD 어설 션</target>
        </trans-unit>
        <trans-unit id="b422f8663cba8758a08c2ef06f072acfec0b040a" translate="yes" xml:space="preserve">
          <source>Backgrounding your server process means that your CI provider will continue to execute the next command after executing the signal to start your server.</source>
          <target state="translated">서버 프로세스를 백그라운드로 설정하면 서버를 시작하기 위해 신호를 실행 한 후에 CI 공급자가 다음 명령을 계속 실행합니다.</target>
        </trans-unit>
        <trans-unit id="314d6a4a216e41c18651ac1730ca4f3bf5b7661b" translate="yes" xml:space="preserve">
          <source>Bad. Coupled to styling. Highly subject to change.</source>
          <target state="translated">나쁜. 스타일링에 결합되었습니다. 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1d8fd1bba5d5d84cfd62db547c3d4298468986bc" translate="yes" xml:space="preserve">
          <source>Balance strategy</source>
          <target state="translated">균형 전략</target>
        </trans-unit>
        <trans-unit id="4dead9768cf3c4c30f6b08fbdb580877699d32a7" translate="yes" xml:space="preserve">
          <source>Bamboo</source>
          <target state="translated">Bamboo</target>
        </trans-unit>
        <trans-unit id="75d2adde8821b3ad8fa5a427e84a8b3cc02aa372" translate="yes" xml:space="preserve">
          <source>Bar Chart View</source>
          <target state="translated">막대 차트보기</target>
        </trans-unit>
        <trans-unit id="b6a4727a100aad9e8b44490e310f0cc28e10f5ba" translate="yes" xml:space="preserve">
          <source>Based on these estimations, Cypress distributes (&lt;a href=&quot;#Balance-strategy&quot;&gt;load-balances&lt;/a&gt;) spec files one-by-one to each available machine in a way that minimizes overall test run time.</source>
          <target state="translated">이러한 추정에 기초하여 Cypress 는 전체 테스트 실행 시간을 최소화하는 방식으로 사양 파일을 사용 가능한 각 머신에 하나씩 분배합니다 ( &lt;a href=&quot;#Balance-strategy&quot;&gt;로드 밸런스&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="afacb8d68c6ec38167c6c88ceadaac66a23c15fa" translate="yes" xml:space="preserve">
          <source>Based on those statements, you might be tempted to just throw a &lt;code&gt;debugger&lt;/code&gt; into your test, like so:</source>
          <target state="translated">이러한 문장을 바탕 으로 다음과 같이 &lt;code&gt;debugger&lt;/code&gt; 를 테스트에 던지려고 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="13f76e93cecc937a3e61252fc011f3ce143ffdce" translate="yes" xml:space="preserve">
          <source>Basic Promise</source>
          <target state="translated">기본 약속</target>
        </trans-unit>
        <trans-unit id="106c757df0b40beb9cd9c1e8f66ecfc7239a2282" translate="yes" xml:space="preserve">
          <source>Basic auth is working again in Chrome 63 and Chrome 64. We &amp;ldquo;for real&amp;rdquo; fixed it this time by adding auth headers automatically at the network proxy layer and bypassed the browser altogether. We automatically apply auth headers if you provide a username/password in the URL of a &lt;code&gt;cy.visit(url)&lt;/code&gt;. We also added a new &lt;code&gt;auth&lt;/code&gt; option to specify the &lt;code&gt;username/password&lt;/code&gt; using &lt;code&gt;cy.visit(url, options)&lt;/code&gt;. All of the requests that match the origin of the URL will have the &lt;code&gt;Authorization: Basic &amp;lt;...&amp;gt;&lt;/code&gt; headers added. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1288&quot;&gt;#1288&lt;/a&gt;.</source>
          <target state="translated">기본 인증은 Chrome 63 및 Chrome 64에서 다시 작동합니다. 이번에는 네트워크 프록시 계층에서 인증 헤더를 자동으로 추가하고 브라우저를 우회하여 &quot;실제&quot;로 수정했습니다. &lt;code&gt;cy.visit(url)&lt;/code&gt; 의 URL에 사용자 이름 / 암호를 제공하면 인증 헤더가 자동으로 적용됩니다 . 우리는 또한 새로운 추가 &lt;code&gt;auth&lt;/code&gt; 지정하는 옵션을 &lt;code&gt;username/password&lt;/code&gt; 사용하여 &lt;code&gt;cy.visit(url, options)&lt;/code&gt; . URL의 출처와 일치하는 모든 요청에는 &lt;code&gt;Authorization: Basic &amp;lt;...&amp;gt;&lt;/code&gt; 헤더가 추가됩니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1288&quot;&gt;# 1288&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d300fb6c70d1056b96c733cb65342a250a92f467" translate="yes" xml:space="preserve">
          <source>Basic auth now works &lt;em&gt;again&lt;/em&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/573&quot;&gt;#573&lt;/a&gt;.</source>
          <target state="translated">기본 인증이 &lt;em&gt;다시&lt;/em&gt; 작동 &lt;em&gt;합니다&lt;/em&gt; . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/573&quot;&gt;# 573&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="5fcebeefad3cdbbf8733aa928160dec7dc90c1a1" translate="yes" xml:space="preserve">
          <source>Basics</source>
          <target state="translated">Basics</target>
        </trans-unit>
        <trans-unit id="e00a11d2c77cb636d46322dc133ed17c39db78e2" translate="yes" xml:space="preserve">
          <source>Be cautious for URL&amp;rsquo;s which have no subdomain.</source>
          <target state="translated">하위 도메인이없는 URL에주의하십시오.</target>
        </trans-unit>
        <trans-unit id="180fcda779e6128c125e7ceb3e7caf984763f134" translate="yes" xml:space="preserve">
          <source>Be wary of chaining multiple contains</source>
          <target state="translated">다중 포함 체인 연결에주의하십시오</target>
        </trans-unit>
        <trans-unit id="a867d3850797346a03eecdd7b25d7156c9a25e96" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; automatically gets and sets cookies under the hood, we can actually use it to build up state without using your browser&amp;rsquo;s UI, yet still have it perform exactly as if it came from the browser!</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt; 자동으로 쿠키를 가져오고 설정 하기 때문에 실제로는 브라우저의 UI를 사용하지 않고도 쿠키를 사용하여 상태를 구축 할 수 있지만 여전히 브라우저에서 온 것처럼 정확하게 수행되도록 할 수 있습니다!</target>
        </trans-unit>
        <trans-unit id="ef305997e0c2dcc9486332a9f2cf0b79c0a97085" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;../../api/commands/should&quot;&gt;&lt;code&gt;.should('have.class')&lt;/code&gt;&lt;/a&gt; does not change the subject, &lt;a href=&quot;../../api/commands/and&quot;&gt;&lt;code&gt;.and('have.attr')&lt;/code&gt;&lt;/a&gt; is executed against the same element. This is handy when you need to assert multiple things against a single subject quickly.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/should&quot;&gt; &lt;code&gt;.should('have.class')&lt;/code&gt; &lt;/a&gt; 는 제목을 변경하지 않기 때문에 &lt;a href=&quot;../../api/commands/and&quot;&gt; &lt;code&gt;.and('have.attr')&lt;/code&gt; &lt;/a&gt; 는 동일한 요소에 대해 실행됩니다. 한 피사체에 대해 여러 가지를 신속하게 주장해야 할 때 편리합니다.</target>
        </trans-unit>
        <trans-unit id="618f376b7abd371581ab0ff5d621f693d4852221" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;cy.clearCookie()&lt;/code&gt; is asynchronous it is technically possible for there to be a timeout while talking to the internal Cypress automation APIs. But for practical purposes it should never happen.</source>
          <target state="translated">&lt;code&gt;cy.clearCookie()&lt;/code&gt; 는 비동기 이기 때문에 내부 Cypress 자동화 API와 통신하는 동안 기술적으로 시간 초과가있을 수 있습니다. 그러나 실제적인 목적으로는 결코 일어나지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="681c23ac5843644fef3e07c5332b251d5335a491" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;cy.clearCookies()&lt;/code&gt; is asynchronous it is technically possible for there to be a timeout while talking to the internal Cypress automation APIs. But for practical purposes it should never happen.</source>
          <target state="translated">때문에 &lt;code&gt;cy.clearCookies()&lt;/code&gt; 비동기 내부 사이프러스 자동화 API에 말하는 동안 타임 아웃이되는 것이 기술적으로 가능하다. 그러나 실제적인 목적으로는 결코 일어나지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="aa0514201ff7728220ff5a555f42a3d970099e95" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;cy.fixture()&lt;/code&gt; is asynchronous it is technically possible for there to be a timeout while talking to the internal Cypress automation APIs. But for practical purposes it should never happen.</source>
          <target state="translated">&lt;code&gt;cy.fixture()&lt;/code&gt; 는 비동기 적이기 때문에 내부 Cypress 자동화 API와 통신하는 동안 시간이 초과 될 수 있습니다. 그러나 실제적인 목적으로는 결코 일어나지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="e596d2416cc8d777c62c7344a99f1e7eec088cfb" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;cy.getCookie()&lt;/code&gt; is asynchronous it is technically possible for there to be a timeout while talking to the internal Cypress automation APIs. But for practical purposes it should never happen.</source>
          <target state="translated">&lt;code&gt;cy.getCookie()&lt;/code&gt; 는 비동기 이기 때문에 내부 Cypress 자동화 API와 통신하는 동안 기술적으로 시간이 초과 될 수 있습니다. 그러나 실제적인 목적으로는 결코 일어나지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="758e2bbb245fd0d545347b3b441aaaf92106372e" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;cy.getCookies()&lt;/code&gt; is asynchronous it is technically possible for there to be a timeout while talking to the internal Cypress automation APIs. But for practical purposes it should never happen.</source>
          <target state="translated">때문에 &lt;code&gt;cy.getCookies()&lt;/code&gt; 비동기 내부 사이프러스 자동화 API에 말하는 동안 타임 아웃이되는 것이 기술적으로 가능하다. 그러나 실제적인 목적으로는 결코 일어나지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="ba8785469ef3519290b9c09860898ae9a597cf6f" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;cy.screenshot()&lt;/code&gt; is asynchronous it is technically possible for there to be a timeout while talking to the internal Cypress automation APIs. But for practical purposes it should never happen.</source>
          <target state="translated">때문에 &lt;code&gt;cy.screenshot()&lt;/code&gt; 비동기 내부 사이프러스 자동화 API에 말하는 동안 타임 아웃이되는 것이 기술적으로 가능하다. 그러나 실제적인 목적으로는 결코 일어나지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="65bb9b4aa79fec768f6d269f9ede76f9c97651c5" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;cy.setCookie()&lt;/code&gt; is asynchronous it is technically possible for there to be a timeout while talking to the internal Cypress automation APIs. But for practical purposes it should never happen.</source>
          <target state="translated">&lt;code&gt;cy.setCookie()&lt;/code&gt; 는 비동기 이기 때문에 내부 Cypress 자동화 API와 통신하는 동안 시간이 초과 될 수 있습니다. 그러나 실제적인 목적으로는 결코 일어나지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="fb187a8b36b59d002eb33f5f2cec58799b12b6a7" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;cy.writeFile()&lt;/code&gt; is asynchronous it is technically possible for there to be a timeout while talking to the internal Cypress automation APIs. But for practical purposes it should never happen.</source>
          <target state="translated">때문에 &lt;code&gt;cy.writeFile()&lt;/code&gt; 비동기 내부 사이프러스 자동화 API에 말하는 동안 타임 아웃이되는 것이 기술적으로 가능하다. 그러나 실제적인 목적으로는 결코 일어나지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="9dfda6c78c664b975d65c6bae969be1bf0507384" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;cy&lt;/code&gt; commands are asynchronous and are queued to be run later, it doesn&amp;rsquo;t make sense to return anything else.</source>
          <target state="translated">때문에 &lt;code&gt;cy&lt;/code&gt; 명령은 비동기 나중에 실행하기 위해 대기하고 있습니다, 그것은 다른 반환 아무것도 이해가되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9b40f51d901b0dcd3a5a7ba883a6e8ab15a898be" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;localhost:1234&lt;/code&gt; uses a port other than &lt;code&gt;80&lt;/code&gt; and &lt;code&gt;443&lt;/code&gt; it &lt;strong&gt;must be included&lt;/strong&gt;.</source>
          <target state="translated">때문에 &lt;code&gt;localhost:1234&lt;/code&gt; 사용하는 이외의 포트 &lt;code&gt;80&lt;/code&gt; 과 &lt;code&gt;443&lt;/code&gt; 이 &lt;strong&gt;포함되어야합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="a25427a0f137dc193de4897970bfd25d7eea2bc5" translate="yes" xml:space="preserve">
          <source>Because Cypress changes its own host URL to match that of your applications, it requires that your application remain on the same superdomain for the entirety of a single test.</source>
          <target state="translated">Cypress는 자체 호스트 URL을 응용 프로그램의 호스트 URL과 일치하도록 변경하기 때문에 단일 테스트 전체에서 응용 프로그램이 동일한 수퍼 도메인에 남아 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="54cebe17e467d24c1c9275721f3a55543469f765" translate="yes" xml:space="preserve">
          <source>Because Cypress commands are already promise-like, you don&amp;rsquo;t need to wrap them or return your own promise.</source>
          <target state="translated">Cypress 명령은 이미 약속과 같으므로 명령을 줄 바꿈하거나 자신의 약속을 반환 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="cac4a5144bb63e3a4a04f31f181b5738580f0904" translate="yes" xml:space="preserve">
          <source>Because Cypress enforces commands to run &lt;em&gt;only&lt;/em&gt; serially, you do not need to be concerned with this in Cypress. We enqueue all commands onto a &lt;em&gt;global&lt;/em&gt; singleton. Because there is only ever a single command queue instance, it&amp;rsquo;s impossible for commands to ever be &lt;em&gt;&amp;lsquo;lost&amp;rsquo;&lt;/em&gt;.</source>
          <target state="translated">Cypress는 명령이 직렬 &lt;em&gt;로만&lt;/em&gt; 실행되도록 강제하기 때문에 Cypress에서는 이에 대해 걱정할 필요가 없습니다. 모든 명령을 &lt;em&gt;전역&lt;/em&gt; 싱글 톤 에 넣습니다 . 단일 명령 큐 인스턴스 만 있기 때문에 명령이 &lt;em&gt;'분실'&lt;/em&gt; 될 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="9908394f6391404c449f0d87c606dee754d62715" translate="yes" xml:space="preserve">
          <source>Because Cypress is &lt;a href=&quot;../getting-started/installing-cypress&quot;&gt;installed locally&lt;/a&gt; on your machine, it can additionally tap into the operating system for automation tasks. This makes performing tasks such as &lt;a href=&quot;../guides/screenshots-and-videos&quot;&gt;taking screenshots, recording videos&lt;/a&gt;, general &lt;a href=&quot;../../api/commands/exec&quot;&gt;file system operations&lt;/a&gt; and &lt;a href=&quot;../../api/commands/request&quot;&gt;network operations&lt;/a&gt; possible.</source>
          <target state="translated">Cypress는 &lt;a href=&quot;../getting-started/installing-cypress&quot;&gt;컴퓨터에 로컬로 설치&lt;/a&gt; 되므로 자동화 작업을 위해 운영 체제를 추가로 활용할 수 있습니다. 이를 통해 &lt;a href=&quot;../guides/screenshots-and-videos&quot;&gt;스크린 샷 찍기, 비디오 녹화&lt;/a&gt; , 일반 &lt;a href=&quot;../../api/commands/exec&quot;&gt;파일 시스템 작업&lt;/a&gt; 및 &lt;a href=&quot;../../api/commands/request&quot;&gt;네트워크&lt;/a&gt; 작업과 같은 작업을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3ad9fdfa85e7206cbf321f0da7721030e5f18f07" translate="yes" xml:space="preserve">
          <source>Because Cypress is built on top of Mocha, that means any reporter built for Mocha can be used with Cypress. Here is a list of built in Mocha reporters.</source>
          <target state="translated">Cypress는 Mocha 위에 구축되므로 Mocha 용으로 제작 된 모든 기자를 Cypress와 함께 사용할 수 있습니다. 다음은 내장 된 모카 리포터 목록입니다.</target>
        </trans-unit>
        <trans-unit id="bf5d605efcebac35cd8646f7b546edab2faad55d" translate="yes" xml:space="preserve">
          <source>Because Cypress isn&amp;rsquo;t Selenium, we can actually take a huge shortcut here and skip needing to use our UI by using &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Cypress는 Selenium이 아니기 때문에 실제로 여기서는 바로 가기를 사용하고 &lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt; 를 사용하여 UI를 사용하지 않아도 됩니다.</target>
        </trans-unit>
        <trans-unit id="e16326511907fd640816b8a9f78bb09a57017e9e" translate="yes" xml:space="preserve">
          <source>Because Cypress operates within your application, that means it has native access to every single object. Whether it is the &lt;code&gt;window&lt;/code&gt;, the &lt;code&gt;document&lt;/code&gt;, a DOM element, your application instance, a function, a timer, a service worker, or anything else - you have access to it in your Cypress tests. There is no object serialization, there is no over-the-wire protocol - you have access to everything. Your test code can access all the same objects that your application code can.</source>
          <target state="translated">Cypress는 애플리케이션 내에서 작동하므로 모든 단일 객체에 고유하게 액세스 할 수 있습니다. 그것은 여부 &lt;code&gt;window&lt;/code&gt; 의 &lt;code&gt;document&lt;/code&gt; , DOM 요소, 응용 프로그램 인스턴스, 함수, 타이머, 서비스 노동자, 또는 다른 어떤 - 당신이 당신의 싸이프레스 테스트에 액세스 할 수 있습니다. 객체 직렬화, 무선 프로토콜이 없으며 모든 것에 액세스 할 수 있습니다. 테스트 코드는 응용 프로그램 코드와 동일한 모든 개체에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="88f0173a5a7497dc42244f07e7dbe64099bc7a31" translate="yes" xml:space="preserve">
          <source>Because Cypress runs in the browser, it will never have multi-tabs support. We do have access to the browser automation APIs to actually switch tabs, but there is no reason for us to ever expose them.</source>
          <target state="translated">Cypress는 브라우저에서 실행되므로 다중 탭을 지원하지 않습니다. 실제로 탭을 전환하기 위해 브라우저 자동화 API에 액세스 할 수 있지만이를 공개 할 이유는 없습니다.</target>
        </trans-unit>
        <trans-unit id="7a1db8ecc46b9bbe286730e58f7a688fa77d4839" translate="yes" xml:space="preserve">
          <source>Because Cypress works from within the browser, Cypress must be able to directly communicate with your remote application at all times. Unfortunately, browsers naturally try to prevent Cypress from doing this.</source>
          <target state="translated">Cypress는 브라우저 내에서 작동하므로 Cypress는 항상 원격 응용 프로그램과 직접 통신 할 수 있어야합니다. 불행히도 브라우저는 자연스럽게 Cypress가이를 수행하지 못하게합니다.</target>
        </trans-unit>
        <trans-unit id="eb15937eead80d60bd28e93c2bfbde8c688f4b2d" translate="yes" xml:space="preserve">
          <source>Because Electron is the default browser - it is typically run in CI. If you are seeing failures in CI, to easily debug them you may want to run locally with the &lt;code&gt;--headed&lt;/code&gt; option.</source>
          <target state="translated">Electron이 기본 브라우저이기 때문에 일반적으로 CI에서 실행됩니다. CI에 장애가 발생하면 쉽게 디버깅하기 위해 &lt;code&gt;--headed&lt;/code&gt; 옵션을 사용하여 로컬로 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="04bb899695d2571e339f86ca53ae4ab1569b3b0b" translate="yes" xml:space="preserve">
          <source>Because cy commands are asynchronous and are queued to be run later, it doesn&amp;rsquo;t make sense to return anything else.</source>
          <target state="translated">cy 명령은 비동기식이며 나중에 실행되도록 대기하기 때문에 다른 것을 반환하는 것은 의미가 없습니다.</target>
        </trans-unit>
        <trans-unit id="9808d1b5e3eb0490eb53496cabbd8b2454b15db1" translate="yes" xml:space="preserve">
          <source>Because each operating system requires a specific build of Cypress - a new CLI tool has been created which abstracts away these differences and orchestrates the Desktop App regardless of which OS you are running.</source>
          <target state="translated">각 운영 체제에는 특정 Cypress 빌드가 필요하기 때문에 실행중인 OS에 관계없이 이러한 차이점을 제거하고 데스크탑 앱을 오케스트레이션하는 새로운 CLI 도구가 작성되었습니다.</target>
        </trans-unit>
        <trans-unit id="4c7383f109ba92a106fb9989f7c969aa51db5fed" translate="yes" xml:space="preserve">
          <source>Because error handling is a common idiom in most programming languages, and especially in Node, it seems reasonable to expect to do that in Cypress.</source>
          <target state="translated">오류 처리는 대부분의 프로그래밍 언어, 특히 노드에서 일반적인 관용구이기 때문에 Cypress에서 그렇게하는 것이 합리적입니다.</target>
        </trans-unit>
        <trans-unit id="6fb3d7f7f369bc1be251af676eb3eed95dfb4f0c" translate="yes" xml:space="preserve">
          <source>Because nothing is synchronous in modern web applications, Cypress can&amp;rsquo;t query all the DOM elements with the class &lt;code&gt;todo-list&lt;/code&gt; and check if there are only two of them. There are many examples of why this would not work well.</source>
          <target state="translated">최신 웹 애플리케이션에서는 동기식이 없기 때문에 Cypress는 클래스 &lt;code&gt;todo-list&lt;/code&gt; 를 사용하여 모든 DOM 요소를 쿼리 할 수없고 그 중 두 개만 있는지 확인할 수 없습니다. 이것이 제대로 작동하지 않는 이유는 많이 있습니다.</target>
        </trans-unit>
        <trans-unit id="a31d633c44229bc468f9470ced3ca874fbd119f8" translate="yes" xml:space="preserve">
          <source>Because of the additional complexities of how Cypress considers an element &lt;code&gt;visible&lt;/code&gt;, we now have added the &lt;strong&gt;exact&lt;/strong&gt; reason why an element is not visible when throwing an error. This means you&amp;rsquo;ll see errors detailing whether an element or its parents have &lt;code&gt;display: none&lt;/code&gt;, &lt;code&gt;visibility: hidden&lt;/code&gt;, or whether an element is considered hidden because its effective &lt;code&gt;width&lt;/code&gt; or &lt;code&gt;height&lt;/code&gt; is zero. Whatever the reason, Cypress will indicate why your element is considered hidden.</source>
          <target state="translated">Cypress가 요소를 &lt;code&gt;visible&lt;/code&gt; 하는 방식의 추가 복잡성으로 인해 이제 오류가 발생할 때 요소가 표시되지 않는 &lt;strong&gt;정확한&lt;/strong&gt; 이유를 추가했습니다 . 즉, 요소 ​​또는 부모가 &lt;code&gt;display: none&lt;/code&gt; , &lt;code&gt;visibility: hidden&lt;/code&gt; 하는지 또는 유효 &lt;code&gt;width&lt;/code&gt; 또는 &lt;code&gt;height&lt;/code&gt; 가 0 이므로 요소가 숨겨진 것으로 간주되는지 여부를 자세히 설명하는 오류가 표시 됩니다. 이유가 무엇이든 Cypress는 요소가 숨겨져있는 이유를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="700e8123d914042be5c7104b43228a254b67a4e7" translate="yes" xml:space="preserve">
          <source>Because of the way Cypress is designed, if you are testing an HTTPS site, Cypress will error anytime you attempt to navigate back to an HTTP site. This behavior helps highlight a &lt;em&gt;pretty serious security problem&lt;/em&gt; with your application.</source>
          <target state="translated">Cypress의 설계 방식으로 인해 HTTPS 사이트를 테스트하는 경우 HTTP 사이트로 다시 이동하려고 시도하면 Cypress가 오류를 발생시킵니다. 이 동작은 응용 프로그램 에서 &lt;em&gt;매우 심각한 보안 문제&lt;/em&gt; 를 강조하는 데 도움이됩니다 .</target>
        </trans-unit>
        <trans-unit id="0aa1d23ad3b33ffa5084b7df42bc9e3bd4b1aa95" translate="yes" xml:space="preserve">
          <source>Because of this you cannot &lt;em&gt;synchronously&lt;/em&gt; access anything you have aliased. You must use other asynchronous commands such as &lt;a href=&quot;then&quot;&gt;&lt;code&gt;.then()&lt;/code&gt;&lt;/a&gt; to access what you&amp;rsquo;ve aliased.</source>
          <target state="translated">이로 인해 별명을 지정한 항목에 &lt;em&gt;동 기적으로&lt;/em&gt; 액세스 할 수 없습니다 . 앨리어싱 한 항목에 액세스하려면 &lt;a href=&quot;then&quot;&gt; &lt;code&gt;.then()&lt;/code&gt; &lt;/a&gt; 과 같은 다른 비동기 명령을 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="41789a3ea8e4e537514bb7d8b06166f5e7e059a1" translate="yes" xml:space="preserve">
          <source>Because of this, this global context and the version of Node is controlled by Cypress.</source>
          <target state="translated">이 때문에이 글로벌 컨텍스트와 Node 버전은 Cypress에 의해 제어됩니다.</target>
        </trans-unit>
        <trans-unit id="3053394fa99847588c627c293d538a1dc29d9e2b" translate="yes" xml:space="preserve">
          <source>Because the second &lt;code&gt;.contains()&lt;/code&gt; is chained off of a command that yielded the &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;, Cypress will look inside of the &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; for the new content.</source>
          <target state="translated">두 번째 &lt;code&gt;.contains()&lt;/code&gt; 는 &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; 을 생성하는 명령과 연결되어 있으므로 Cypress는 &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; 내부 에서 새 내용을 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="e4dfb03af122ad00953225c9b97f911485c7d371" translate="yes" xml:space="preserve">
          <source>Because the second assertion &lt;code&gt;expect($li.get(0).textContent, 'first item').to.equal('todo a')&lt;/code&gt; fails, the third assertion is never reached. The command fails after timing out, and the Command Log correctly shows that the first encountered assertion &lt;code&gt;should('have.length', 2)&lt;/code&gt; passed, but the second assertion and the command itself failed.</source>
          <target state="translated">두 번째 어설 션 &lt;code&gt;expect($li.get(0).textContent, 'first item').to.equal('todo a')&lt;/code&gt; 가 실패하므로 세 번째 어설 션에 도달하지 않습니다. 시간이 초과 된 후 명령이 실패하고 명령 로그에 첫 번째로 발생한 어설 션 &lt;code&gt;should('have.length', 2)&lt;/code&gt; 전달되었지만 두 번째 어설 션 및 명령 자체가 실패했음을 올바르게 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="75833321ea4cffc6175de7a6a6ab8ebe1afd68d3" translate="yes" xml:space="preserve">
          <source>Because there are multiple &lt;code&gt;inputs&lt;/code&gt; and one &lt;code&gt;submit&lt;/code&gt; button, Cypress submits the form (and fires submit events) as well as a synthetic &lt;code&gt;click&lt;/code&gt; event to the &lt;code&gt;button&lt;/code&gt;.</source>
          <target state="translated">이 여러 때문에 &lt;code&gt;inputs&lt;/code&gt; 과 하나가 &lt;code&gt;submit&lt;/code&gt; 버튼을, 싸이프레스는 양식을 제출 (과 화재 이벤트 제출) 합성뿐만 아니라 &lt;code&gt;click&lt;/code&gt; 받는 이벤트 &lt;code&gt;button&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c2dcfe8ddba48026ec7700e7bbd13ae13aa2236d" translate="yes" xml:space="preserve">
          <source>Because there is no guarantee that code running in an &lt;code&gt;after&lt;/code&gt; will always run.</source>
          <target state="translated">&lt;code&gt;after&lt;/code&gt; 실행되는 코드 가 항상 실행 된다는 보장이 없기 때문입니다 .</target>
        </trans-unit>
        <trans-unit id="ef81b9522436686c096aeef87e822f78390835fc" translate="yes" xml:space="preserve">
          <source>Because we are using &lt;code&gt;chai&lt;/code&gt;, that means you can extend it however you&amp;rsquo;d like. Cypress will &amp;ldquo;just work&amp;rdquo; with new assertions added to &lt;code&gt;chai&lt;/code&gt;. You can:</source>
          <target state="translated">&lt;code&gt;chai&lt;/code&gt; 를 사용하고 있기 때문에 원하는대로 확장 할 수 있습니다. Cypress는 &lt;code&gt;chai&lt;/code&gt; 에 추가 된 새로운 주장과 함께 &quot;정상 작동&quot; 합니다. 당신은 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="1999436d6fdc7f9800045b8b7e99f3d2259db589" translate="yes" xml:space="preserve">
          <source>Because we previously tested the login system end-to-end without using any shortcuts, we already have 100% confidence it&amp;rsquo;s working correctly.</source>
          <target state="translated">이전에는 바로 가기를 사용하지 않고 로그인 시스템을 엔드 투 엔드로 테스트했기 때문에 이미 제대로 작동하고 있다고 100 % 확신합니다.</target>
        </trans-unit>
        <trans-unit id="609fa56fecd5c57777bea8263ad7e03d06fc0145" translate="yes" xml:space="preserve">
          <source>Because we&amp;rsquo;re now processing the spec files prior to handing them off to the browser, this means we will display problems like syntax errors when something in the processing goes wrong. Additionally, we print these out during &lt;code&gt;cypress run&lt;/code&gt;, so you&amp;rsquo;re not stuck wondering what went wrong.</source>
          <target state="translated">이제 스펙 파일을 브라우저로 전달하기 전에 스펙 파일을 처리 중이므로 처리 중 무언가 잘못되었을 때 구문 오류와 같은 문제점이 표시됩니다. 또한, 우리는 &lt;code&gt;cypress run&lt;/code&gt; 동안 이것을 출력 하므로, 무엇이 잘못되었는지 궁금하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="27bf7ae17989e109ad546656dc6f1d6a71355714" translate="yes" xml:space="preserve">
          <source>Because we&amp;rsquo;ve used the &lt;code&gt;@&lt;/code&gt; character in &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt;, instead of querying the DOM for elements, &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt; looks for an existing alias called &lt;code&gt;rows&lt;/code&gt; and returns the reference (if it finds it).</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt; 에서 &lt;code&gt;@&lt;/code&gt; 문자를 사용했기 때문에 요소에 대해 DOM을 쿼리하는 대신 &lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt; 은 &lt;code&gt;rows&lt;/code&gt; 이라는 기존 별칭 을 찾고 참조 (있는 경우)를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="940348446aa9c0b2deb9fd7ac2acfbba246c5f50" translate="yes" xml:space="preserve">
          <source>Before Cypress launches a browser, it gives you the ability to modify the arguments used to launch it.</source>
          <target state="translated">Cypress는 브라우저를 시작하기 전에 브라우저를 시작하는 데 사용되는 인수를 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7463604e937cdc2065dab9a3e8a5abd4405d5d05" translate="yes" xml:space="preserve">
          <source>Before interacting with an element, we will &lt;em&gt;always&lt;/em&gt; scroll it into view (including any of its parent containers). Even if the element was visible without scrolling, we perform the scrolling algorithm in order to reproduce the same behavior every time the command is run.</source>
          <target state="translated">요소와 상호 작용하기 전에 &lt;em&gt;항상&lt;/em&gt; 부모 컨테이너를 포함하여보기로 스크롤합니다. 스크롤없이 요소를 볼 수 있더라도 명령이 실행될 때마다 동일한 동작을 재현하기 위해 스크롤 알고리즘을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="8145776178a59d75ab95d80e533642f714fb34ac" translate="yes" xml:space="preserve">
          <source>Before sending the HTTP request, we automatically attach cookies that would have otherwise been attached had the request come from the browser. Additionally, if a response has a &lt;code&gt;Set-Cookie&lt;/code&gt; header, these are automatically set back on the browser cookies.</source>
          <target state="translated">HTTP 요청을 보내기 전에 요청이 브라우저에서 온 경우 첨부 된 쿠키를 자동으로 첨부합니다. 또한 응답에 &lt;code&gt;Set-Cookie&lt;/code&gt; 헤더가 있으면 브라우저 쿠키에 자동으로 다시 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="e2c4890fd60c462980127f61a99b5082f346fe71" translate="yes" xml:space="preserve">
          <source>Before we add another command - let&amp;rsquo;s get this test back to passing. Replace &lt;code&gt;hype&lt;/code&gt; with &lt;code&gt;type&lt;/code&gt;.</source>
          <target state="translated">다른 명령을 추가하기 전에이 테스트를 다시 통과시켜 보겠습니다. &lt;code&gt;hype&lt;/code&gt; 를 &lt;code&gt;type&lt;/code&gt; 교체하십시오 .</target>
        </trans-unit>
        <trans-unit id="b2ca1ccb9103ce68e7102b9d5a7ff5e2c5bd8113" translate="yes" xml:space="preserve">
          <source>Before writing &lt;code&gt;after()&lt;/code&gt; or &lt;code&gt;afterEach()&lt;/code&gt; hooks, please see our &lt;a href=&quot;../references/best-practices#Using-after-or-afterEach-hooks&quot;&gt;thoughts on the anti-pattern of cleaning up state with &lt;code&gt;after()&lt;/code&gt; or &lt;code&gt;afterEach()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">쓰기 전에 &lt;code&gt;after()&lt;/code&gt; 또는 &lt;code&gt;afterEach()&lt;/code&gt; 후크, 우리의 참조하시기 바랍니다 &lt;a href=&quot;../references/best-practices#Using-after-or-afterEach-hooks&quot;&gt;과 상태를 청소의 안티 패턴에 생각을 &lt;code&gt;after()&lt;/code&gt; 또는 &lt;code&gt;afterEach()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="eb687ba2a96af94981a76e75687a7387016e9451" translate="yes" xml:space="preserve">
          <source>Before you can enable GitHub integration for your Cypress projects, you must first install the Cypress GitHub App. You can start the GitHub App installation process via your organization&amp;rsquo;s settings page or a project&amp;rsquo;s settings page in the &lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;Cypress Dashboard&lt;/a&gt;.</source>
          <target state="translated">Cypress 프로젝트에 대해 GitHub 통합을 활성화하려면 먼저 Cypress GitHub 앱을 설치해야합니다. 조직 설정 페이지 또는 &lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;Cypress 대시 보드&lt;/a&gt; 의 프로젝트 설정 페이지를 통해 GitHub 앱 설치 프로세스를 시작할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6120e824b3e65ec383f6568264f7e464ec8abea2" translate="yes" xml:space="preserve">
          <source>Before, you&amp;rsquo;d be forced to write custom code to protect against any and all of these issues: a nasty mashup of arbitrary waits, conditional retries, and null checks littering your tests. Not in Cypress! With built-in retrying and &lt;a href=&quot;../references/configuration#Timeouts&quot;&gt;customizable timeouts&lt;/a&gt;, Cypress sidesteps all of these flaky issues.</source>
          <target state="translated">이전에는 다음과 같은 모든 문제로부터 보호하기 위해 사용자 지정 코드를 작성해야했습니다. 임의의 대기를 불쾌하게 매쉬업하고, 조건부 재 시도를 수행하며, 테스트를 무효화하는 null 검사입니다. 사이프러스가 아닙니다! 내장 된 재시도 및 &lt;a href=&quot;../references/configuration#Timeouts&quot;&gt;사용자 정의 가능한 시간 초과 기능을&lt;/a&gt; 통해 Cypress는 이러한 모든 문제를 회피합니다.</target>
        </trans-unit>
        <trans-unit id="b26e6825ca31d9e1ed045053a2a514f75cb9e6e1" translate="yes" xml:space="preserve">
          <source>Began implementation in preparation for &lt;strong&gt;cross browser testing&lt;/strong&gt; coming sometime relatively soon.</source>
          <target state="translated">&lt;strong&gt;크로스 브라우저 테스트&lt;/strong&gt; 를 준비하기 위해 구현이 시작되었습니다 .</target>
        </trans-unit>
        <trans-unit id="70cb647a88bd7c9c17d225eecdaf0f898261eb60" translate="yes" xml:space="preserve">
          <source>Behavior</source>
          <target state="translated">Behavior</target>
        </trans-unit>
        <trans-unit id="ab83472d39d7bcea2a8f0e57eec1111d8f4ee993" translate="yes" xml:space="preserve">
          <source>Behind Cypress is a Node server process. Cypress and the Node process constantly communicate, synchronize, and perform tasks on behalf of each other. Having access to both parts (front and back) gives us the ability to respond to your application&amp;rsquo;s events in real time, while at the same time work outside of the browser for tasks that require a higher privilege.</source>
          <target state="translated">Cypress 뒤에는 노드 서버 프로세스가 있습니다. Cypress와 노드 프로세스는 서로를 대신하여 지속적으로 통신하고 동기화하며 작업을 수행합니다. 두 부분 (전면 및 후면)에 액세스하면 응용 프로그램의 이벤트에 실시간으로 응답 할 수있는 동시에 더 높은 권한이 필요한 작업을 위해 브라우저 외부에서 작업 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="98642ec6449adeb6d25212e8c2be844f7ccce8fd" translate="yes" xml:space="preserve">
          <source>Below we freeze the operating system&amp;rsquo;s time to &lt;code&gt;Jan 1, 2018&lt;/code&gt; using &lt;a href=&quot;../../api/commands/clock&quot;&gt;&lt;code&gt;cy.clock()&lt;/code&gt;&lt;/a&gt; to ensure all images displaying dates and times match.</source>
          <target state="translated">아래에서는 &lt;a href=&quot;../../api/commands/clock&quot;&gt; &lt;code&gt;cy.clock()&lt;/code&gt; &lt;/a&gt; 을 사용하여 운영 체제 시간을 &lt;code&gt;Jan 1, 2018&lt;/code&gt; 일로 고정 하여 날짜와 시간을 표시하는 모든 이미지가 일치하도록합니다.</target>
        </trans-unit>
        <trans-unit id="f633c4c103ceb7313c15debec444600db876412f" translate="yes" xml:space="preserve">
          <source>Below we invoke jQuery&amp;rsquo;s &lt;code&gt;val()&lt;/code&gt; method to set the value, then trigger the &lt;code&gt;change&lt;/code&gt; event.</source>
          <target state="translated">아래에서 jQuery의 &lt;code&gt;val()&lt;/code&gt; 메소드를 호출 하여 값을 설정 한 다음 &lt;code&gt;change&lt;/code&gt; 이벤트 를 트리거합니다 .</target>
        </trans-unit>
        <trans-unit id="8acbdf2636085db1a07c0c5637168c5d2127690a" translate="yes" xml:space="preserve">
          <source>Below we simulate the server returning &lt;code&gt;503&lt;/code&gt; with a stubbed empty JSON response body.</source>
          <target state="translated">아래에서는 스텁 된 빈 JSON 응답 본문 으로 &lt;code&gt;503&lt;/code&gt; 을 반환하는 서버를 시뮬레이션합니다 .</target>
        </trans-unit>
        <trans-unit id="b6e04ae5a5319c3c5e46c06199bd727afb283894" translate="yes" xml:space="preserve">
          <source>Below we stub network calls using &lt;a href=&quot;../../api/commands/route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt; to return the same response data for each XHR request. This ensures that the data displayed in our application images does not change.</source>
          <target state="translated">아래에서는 &lt;a href=&quot;../../api/commands/route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt; 를 사용하여 네트워크 호출을 스텁하여 각 XHR 요청에 대해 동일한 응답 데이터를 반환합니다. 이를 통해 애플리케이션 이미지에 표시되는 데이터가 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="74e6060bf4f15a496a9a7cfb26e220af3208db59" translate="yes" xml:space="preserve">
          <source>Besides Commands being interactive, they also output additional debugging information to your console.</source>
          <target state="translated">대화식 명령 외에도 콘솔에 추가 디버깅 정보를 출력합니다.</target>
        </trans-unit>
        <trans-unit id="36de90e22d47f94d755a4b1bb70aaddc1bb47593" translate="yes" xml:space="preserve">
          <source>Best Practices</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99b99f280d5b4016435d9ffcb84d886c839437e1" translate="yes" xml:space="preserve">
          <source>Best Practices: Visiting external sites</source>
          <target state="translated">모범 사례 : 외부 사이트 방문</target>
        </trans-unit>
        <trans-unit id="eb8de9ce8757ee3c542141ac80ff3b33dc04edff" translate="yes" xml:space="preserve">
          <source>Best practices</source>
          <target state="translated">모범 사례</target>
        </trans-unit>
        <trans-unit id="8d2a4ae1970ea36dd845bf5e6a4a2f9c632a338f" translate="yes" xml:space="preserve">
          <source>Best. Insulated from all changes.</source>
          <target state="translated">베스트. 모든 변화로부터 격리 됨.</target>
        </trans-unit>
        <trans-unit id="4f292d925ec1c6710496ad9cc9cee7f2546e5f77" translate="yes" xml:space="preserve">
          <source>Better data reporting when recording builds in CI.</source>
          <target state="translated">CI로 빌드 할 때 더 나은 데이터보고.</target>
        </trans-unit>
        <trans-unit id="142e34d873ecd8cbe3c9c57ee587ddf5d9d47b0a" translate="yes" xml:space="preserve">
          <source>Better error handling + error messages when trying to read / write from &lt;code&gt;cypress.json&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cypress.json&lt;/code&gt; 에서 읽기 / 쓰기를 시도 할 때 더 나은 오류 처리 + 오류 메시지 .</target>
        </trans-unit>
        <trans-unit id="88098040b8b98d3e94c07b5439bf9889af97702d" translate="yes" xml:space="preserve">
          <source>Better error handling of rejected promises.</source>
          <target state="translated">거부 된 약속의 오류 처리 기능이 향상되었습니다.</target>
        </trans-unit>
        <trans-unit id="3d19862a9a1f3e1981935483db4b58ca55c172cb" translate="yes" xml:space="preserve">
          <source>Better error handling of unauthorized users attempting to login to Cypress with improved &lt;a href=&quot;../getting-started/installing-cypress&quot;&gt;Login documentation&lt;/a&gt;.</source>
          <target state="translated">향상된 &lt;a href=&quot;../getting-started/installing-cypress&quot;&gt;로그인 문서를 사용&lt;/a&gt; 하여 Cypress에 로그인하려는 권한이없는 사용자의 오류 처리 기능이 향상되었습니다 .</target>
        </trans-unit>
        <trans-unit id="79bf038e6b4cf05cad826370fe7601f2300f4db4" translate="yes" xml:space="preserve">
          <source>Better error handling when running commands outside of a test.</source>
          <target state="translated">테스트 외부에서 명령을 실행할 때 오류 처리 기능이 향상되었습니다.</target>
        </trans-unit>
        <trans-unit id="b9bf9b6b45d6ab172f17b41d9df0494b9c8335f6" translate="yes" xml:space="preserve">
          <source>Better error messages when a command times out waiting for a promise to resolve. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/108&quot;&gt;#108&lt;/a&gt;.</source>
          <target state="translated">명령이 해결되기를 기다리는 동안 시간이 초과되면 오류 메시지가 개선됩니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/108&quot;&gt;# 108&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d250c7302b80aa74cb78e84ed6d94702cd5ef3bd" translate="yes" xml:space="preserve">
          <source>Better error tracing.</source>
          <target state="translated">더 나은 오류 추적.</target>
        </trans-unit>
        <trans-unit id="8ac19fd2409a73b09ae219e78c6381cb16513aa8" translate="yes" xml:space="preserve">
          <source>Better. But still coupled to styling or JS event listeners.</source>
          <target state="translated">보다 나은. 그러나 여전히 스타일링 또는 JS 이벤트 리스너와 연결되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="b6e771325dcfb10791d67095ee5d713946b4523b" translate="yes" xml:space="preserve">
          <source>Beyond just integrating these tools together we have also extended and improved collaboration between these tools.</source>
          <target state="translated">이러한 도구를 통합하는 것 외에도 이러한 도구 간의 협업을 확장하고 개선했습니다.</target>
        </trans-unit>
        <trans-unit id="0ad9deba257241e631ca63d49de0fcbb86b9856a" translate="yes" xml:space="preserve">
          <source>Beyond parallelization, you now have the ability to group multiple runs with each other so that they show up together (grouped) in the Dashboard. This enables you to test different applications, groups of specs, or different environments (like development, staging, production) and see all of the results together. We know how important cross browser testing is to everyone, so we built this to lead directly into aggregating the results of multiple browsers into a single run.</source>
          <target state="translated">병렬화 외에도 이제 여러 실행을 서로 그룹화하여 대시 보드에 함께 표시되도록 그룹화 할 수 있습니다. 이를 통해 다양한 응용 프로그램, 사양 그룹 또는 다른 환경 (예 : 개발, 준비, 프로덕션)을 테스트하고 모든 결과를 함께 볼 수 있습니다. 우리는 교차 브라우저 테스트가 모든 사람에게 얼마나 중요한지 알고 있으므로 여러 브라우저의 결과를 단일 실행으로 직접 집계 할 수 있도록이를 구축했습니다.</target>
        </trans-unit>
        <trans-unit id="b9e4bf54406b80887d7d8811e9b699d4a4727c15" translate="yes" xml:space="preserve">
          <source>Big difference! In addition to reading much cleaner, Cypress does more than this, because &lt;strong&gt;Promises themselves have no concepts of retry-ability&lt;/strong&gt;.</source>
          <target state="translated">큰 차이! &lt;strong&gt;약속 자체에는 재 시도에 대한 개념이 없기&lt;/strong&gt; 때문에 훨씬 더 깔끔하게 읽는 것 외에도 Cypress는 그 이상을 수행합니다 .</target>
        </trans-unit>
        <trans-unit id="702a89732e86b85bfd2d2e0e24cb68f0493748ab" translate="yes" xml:space="preserve">
          <source>Billing &amp;amp; Usage</source>
          <target state="translated">청구 및 사용량</target>
        </trans-unit>
        <trans-unit id="0bb7fd224f01f10abaab80f5afc0f1961078d2cf" translate="yes" xml:space="preserve">
          <source>Binary cache</source>
          <target state="translated">이진 캐시</target>
        </trans-unit>
        <trans-unit id="0fe0a4865433ec6d267fc48730d09ef537eeb728" translate="yes" xml:space="preserve">
          <source>Binding to Events</source>
          <target state="translated">이벤트에 바인딩</target>
        </trans-unit>
        <trans-unit id="5c9e4f2957fe563e070ea774a5aa2421a76dc7c3" translate="yes" xml:space="preserve">
          <source>BitBucket</source>
          <target state="translated">BitBucket</target>
        </trans-unit>
        <trans-unit id="8994f5d6bf3dcbeb7a9828dd1a878dd6d3343db7" translate="yes" xml:space="preserve">
          <source>Blackout elements before screenshot</source>
          <target state="translated">스크린 샷 이전의 정전 요소</target>
        </trans-unit>
        <trans-unit id="c24315eb20cc1f5a565ec08f29abab31c0925f1a" translate="yes" xml:space="preserve">
          <source>Blob</source>
          <target state="translated">Blob</target>
        </trans-unit>
        <trans-unit id="0b9d2b2362bc33581ba11fddcb0cf0590ebd3a7a" translate="yes" xml:space="preserve">
          <source>Blog</source>
          <target state="translated">Blog</target>
        </trans-unit>
        <trans-unit id="174240b862077078fc648872149eb0be3661607e" translate="yes" xml:space="preserve">
          <source>Blog: Incredibly Powerful cy.task()</source>
          <target state="translated">블로그 : 믿을 수 없을만큼 강력한 cy.task ()</target>
        </trans-unit>
        <trans-unit id="b2201ad030cff5849c6875bd2afc155b773e5160" translate="yes" xml:space="preserve">
          <source>Blog: Record Test Artifacts from any Docker CI</source>
          <target state="translated">블로그 : 모든 Docker CI의 레코드 테스트 아티팩트</target>
        </trans-unit>
        <trans-unit id="4135c56801dc3257f80161d6e8c6d420ef1f3d7a" translate="yes" xml:space="preserve">
          <source>Blog: Rolling for a Test</source>
          <target state="translated">블로그 : 테스트를위한 롤링</target>
        </trans-unit>
        <trans-unit id="b0c6d757222bb9624ef49e0967067c9f82e5f881" translate="yes" xml:space="preserve">
          <source>Blog: Run Your End-to-end Tests 10 Times Faster with Automatic Test Parallelization</source>
          <target state="translated">블로그 : 자동 테스트 병렬화로 10 배 빠른 엔드 투 엔드 테스트 실행</target>
        </trans-unit>
        <trans-unit id="9f505a889dce33700e1f2edea046f02a4f0a855c" translate="yes" xml:space="preserve">
          <source>Blog: Run and group tests the way you want to</source>
          <target state="translated">블로그 : 원하는 방식으로 실행 및 그룹 테스트</target>
        </trans-unit>
        <trans-unit id="b9161465938ee98d394ff8b689d3bc7de0e4f8ba" translate="yes" xml:space="preserve">
          <source>Blog: Setting up Bitbucket Pipelines with proper caching of npm and Cypress</source>
          <target state="translated">블로그 : npm 및 Cypress의 적절한 캐싱을 사용하여 Bitbucket 파이프 라인 설정</target>
        </trans-unit>
        <trans-unit id="babf996afbd046b70260fb5398a25309198cc399" translate="yes" xml:space="preserve">
          <source>Blur Events</source>
          <target state="translated">블러 이벤트</target>
        </trans-unit>
        <trans-unit id="e9984b092f9c8e89779c7b75d6260b0b8acd26fc" translate="yes" xml:space="preserve">
          <source>Blur a focused element.</source>
          <target state="translated">초점을 맞춘 요소를 흐리게 처리합니다.</target>
        </trans-unit>
        <trans-unit id="0f8878f148aa77b4b50914c1cfd18aff3921a34b" translate="yes" xml:space="preserve">
          <source>Blur is not an action command</source>
          <target state="translated">블러는 동작 명령이 아닙니다</target>
        </trans-unit>
        <trans-unit id="954bc4f020d1d0055823d32707768e69309ae672" translate="yes" xml:space="preserve">
          <source>Blur the comment input</source>
          <target state="translated">코멘트 입력을 흐리게</target>
        </trans-unit>
        <trans-unit id="784f69ed60f75caf4eef500e1561348feca99a8f" translate="yes" xml:space="preserve">
          <source>Blur the element with focus</source>
          <target state="translated">초점을 맞춘 요소 흐림</target>
        </trans-unit>
        <trans-unit id="6054d990e79250b6ef9e595ce2d00d31e2d6e4e7" translate="yes" xml:space="preserve">
          <source>Blur the first input</source>
          <target state="translated">첫 번째 입력을 흐리게</target>
        </trans-unit>
        <trans-unit id="718a7e8a582e982e452dd5700addba4ffc1cf40d" translate="yes" xml:space="preserve">
          <source>Body</source>
          <target state="translated">Body</target>
        </trans-unit>
        <trans-unit id="e5b110fe0cef82164b46b3207a6d9f04f3fd6b72" translate="yes" xml:space="preserve">
          <source>Body to send along with the request</source>
          <target state="translated">요청과 함께 보낼 본문</target>
        </trans-unit>
        <trans-unit id="f6f8c1b5a3695fb6c20ada2216179d5622283dd9" translate="yes" xml:space="preserve">
          <source>Boot your server</source>
          <target state="translated">서버 부팅</target>
        </trans-unit>
        <trans-unit id="62c42529943c584f6abe31e6bf660ccb10070146" translate="yes" xml:space="preserve">
          <source>Bootstraping your App</source>
          <target state="translated">앱 부트 스트랩</target>
        </trans-unit>
        <trans-unit id="bca5350e1121028a5442fac4fa3c4898e5d1fcc1" translate="yes" xml:space="preserve">
          <source>Both &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt; will return immediately, having enqueued their work to be done later, and &lt;code&gt;debugger&lt;/code&gt; will be executed before any of the commands have actually run.</source>
          <target state="translated">두 &lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt; 즉시 반환은 자신의 일을 나중에 할 수 대기열에 한하고, &lt;code&gt;debugger&lt;/code&gt; 명령 중 하나가 실제로 실행하기 전에 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="86baed802abf9f372a6a033132f44f38a53d032c" translate="yes" xml:space="preserve">
          <source>Both options below are valid</source>
          <target state="translated">아래 두 옵션 모두 유효합니다</target>
        </trans-unit>
        <trans-unit id="6345ab1d255f896508f11217de1d30526abc5ab7" translate="yes" xml:space="preserve">
          <source>Both the global &lt;code&gt;Cypress&lt;/code&gt; and &lt;code&gt;cy&lt;/code&gt; objects are standard Node event emitters. That means you can use the following methods to bind and unbind from events.</source>
          <target state="translated">전역 &lt;code&gt;Cypress&lt;/code&gt; 및 &lt;code&gt;cy&lt;/code&gt; 객체는 모두 표준 노드 이벤트 이미 터입니다. 즉, 다음 방법을 사용하여 이벤트를 바인드 및 바인드 해제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0e2e620e876821556694069c99cbe4f3d63fc0cd" translate="yes" xml:space="preserve">
          <source>Both types commands will first verify element actionability, but only the &amp;ldquo;true&amp;rdquo; action commands will implement all of the default actions of the browser, and additionally perform low level actions to fulfill what&amp;rsquo;s defined in the spec.</source>
          <target state="translated">두 가지 유형의 명령은 먼저 요소 실행 가능성을 확인하지만 &quot;true&quot;작업 명령 만 브라우저의 모든 기본 작업을 구현하고 추가로 사양에 정의 된 내용을 이행하기 위해 낮은 수준의 작업을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="5aa62362cf073a7eb5da0e098a23a3640fe9d21f" translate="yes" xml:space="preserve">
          <source>Branch: &lt;code&gt;COMMIT_INFO_BRANCH&lt;/code&gt;</source>
          <target state="translated">지점 : &lt;code&gt;COMMIT_INFO_BRANCH&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="54a2cf5e634dbba0be2bf8a55f79252f5c790bdb" translate="yes" xml:space="preserve">
          <source>Browser</source>
          <target state="translated">Browser</target>
        </trans-unit>
        <trans-unit id="50ab9e031f64f1a7d0bf9ff86959133261113e83" translate="yes" xml:space="preserve">
          <source>Browser Environment</source>
          <target state="translated">브라우저 환경</target>
        </trans-unit>
        <trans-unit id="4fa354b80725e62cb99b25187ca84c519c8c972d" translate="yes" xml:space="preserve">
          <source>Browser Errors</source>
          <target state="translated">브라우저 오류</target>
        </trans-unit>
        <trans-unit id="55a0c48065323b882547c9316f0cf1c0f3c68727" translate="yes" xml:space="preserve">
          <source>Browser Icon</source>
          <target state="translated">브라우저 아이콘</target>
        </trans-unit>
        <trans-unit id="74a670900aa568c88f1545374b10e13b3c3a13aa" translate="yes" xml:space="preserve">
          <source>Browser Launch API</source>
          <target state="translated">브라우저 시작 API</target>
        </trans-unit>
        <trans-unit id="2c250f1237b19401cbb7ff0e746b6d41d2398dbd" translate="yes" xml:space="preserve">
          <source>Browser Launching</source>
          <target state="translated">브라우저 시작</target>
        </trans-unit>
        <trans-unit id="63fac1fb83ccf0b03f982fe1fa1a1b2cd86ed72c" translate="yes" xml:space="preserve">
          <source>Browser Name</source>
          <target state="translated">브라우저 이름</target>
        </trans-unit>
        <trans-unit id="fc3ca79709f5ec0c38baed99467dffe420456989" translate="yes" xml:space="preserve">
          <source>Browser name</source>
          <target state="translated">브라우저 이름</target>
        </trans-unit>
        <trans-unit id="c52b8a4904ac1112b997405a3d165bc7d48cc148" translate="yes" xml:space="preserve">
          <source>Browser sessions are spawned independently of your existing profiles and we&amp;rsquo;ve disabled things like password saving / prompting, JavaScript popup blocking, and other features which get in the way of testing. Read more &lt;a href=&quot;../guides/launching-browsers&quot;&gt;here&lt;/a&gt;</source>
          <target state="translated">브라우저 세션은 기존 프로필과 독립적으로 생성되며 비밀번호 저장 / 프롬프트, JavaScript 팝업 차단 및 기타 테스트 방법과 같은 기능을 비활성화했습니다. 자세한 내용은 &lt;a href=&quot;../guides/launching-browsers&quot;&gt;여기를&lt;/a&gt; 참조 하십시오</target>
        </trans-unit>
        <trans-unit id="ed81754147c265a661af47b5f96c56bae653c0d7" translate="yes" xml:space="preserve">
          <source>Browserify</source>
          <target state="translated">Browserify</target>
        </trans-unit>
        <trans-unit id="03ae704db614eb84c9776f2339d20fcfaea7257d" translate="yes" xml:space="preserve">
          <source>Browserify Preprocessor</source>
          <target state="translated">Browserify 전 처리기</target>
        </trans-unit>
        <trans-unit id="6e92074d83472981588f0279868b23097eb04660" translate="yes" xml:space="preserve">
          <source>Browsers</source>
          <target state="translated">Browsers</target>
        </trans-unit>
        <trans-unit id="f5e27c5f2bed8a5f56b25a649f1f13ca58de151d" translate="yes" xml:space="preserve">
          <source>Browsers adhere to a strict &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy&quot;&gt;&lt;code&gt;same-origin policy&lt;/code&gt;&lt;/a&gt;. This means that browsers restrict access between &lt;code&gt;&amp;lt;iframes&amp;gt;&lt;/code&gt; when their origin policies do not match.</source>
          <target state="translated">브라우저는 엄격한 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy&quot;&gt; &lt;code&gt;same-origin policy&lt;/code&gt; &lt;/a&gt; 준수합니다 . 이는 출처 정책이 일치하지 않을 때 브라우저가 &lt;code&gt;&amp;lt;iframes&amp;gt;&lt;/code&gt; 간의 액세스를 제한 함을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="34a6d2c8a6223597b42a63cf95aaff0c603f4829" translate="yes" xml:space="preserve">
          <source>Browsers are enormously complex pieces of software, and from time to time they will inconsistently crash &lt;em&gt;for no good reason&lt;/em&gt;. Crashes are just a part of running automated tests.</source>
          <target state="translated">브라우저는 엄청나게 복잡한 소프트웨어이며 때때로 &lt;em&gt;아무런 이유없이&lt;/em&gt; 일관성없이 충돌 &lt;em&gt;합니다&lt;/em&gt; . 충돌은 자동 테스트 실행의 일부일뿐입니다.</target>
        </trans-unit>
        <trans-unit id="75b6d1e692e292794a0170983a519ebc3816a1ea" translate="yes" xml:space="preserve">
          <source>Browsers are spawned in a Cypress specific profile so that we can maintain a clean state apart of your regular browsing usage. You will notice that your extensions are no longer installed. This is on purpose. 3rd party extensions can often get in the way of Cypress and cause failures. However, developer specific extensions for Angular, Ember, and React do not cause any issues but you&amp;rsquo;ll want to reinstall them. You only have to install them once and they will persist.</source>
          <target state="translated">브라우저는 Cypress 특정 프로필에 생성되므로 일반적인 브라우징 사용과 별도로 깨끗한 상태를 유지할 수 있습니다. 확장이 더 이상 설치되지 않은 것을 알 수 있습니다. 이것은 의도적 인 것입니다. 타사 확장 프로그램은 종종 Cypress를 방해하여 장애를 일으킬 수 있습니다. 그러나 Angular, Ember 및 React의 개발자 별 확장은 문제를 일으키지 않지만 다시 설치해야합니다. 한 번만 설치하면 지속됩니다.</target>
        </trans-unit>
        <trans-unit id="190c1423acb337535b6c2e3cbe3e3ad8f535ee80" translate="yes" xml:space="preserve">
          <source>Browsers in the browser dropdown now have colored icons, which help visually distinguish the variants of Chrome.</source>
          <target state="translated">브라우저 드롭 다운의 브라우저에 색상 아이콘이 표시되어 Chrome의 변형을 시각적으로 구분하는 데 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="3699d118633f19a1a990e7b4764264156987d7cc" translate="yes" xml:space="preserve">
          <source>Browsers refuse to display insecure content on a secure page. Because Cypress initially changed its URL to match &lt;code&gt;https://app.corp.com&lt;/code&gt; when the browser followed the &lt;code&gt;href&lt;/code&gt; to &lt;code&gt;http://app.corp.com/page2&lt;/code&gt;, the browser will refuse to display the contents.</source>
          <target state="translated">브라우저는 안전하지 않은 콘텐츠를 보안 페이지에 표시하지 않습니다. Cypress 가 브라우저에서 &lt;code&gt;href&lt;/code&gt; 를 &lt;code&gt;http://app.corp.com/page2&lt;/code&gt; 로 따라갈 때 &lt;code&gt;https://app.corp.com&lt;/code&gt; 과 일치하도록 URL을 처음 변경했기 때문에 브라우저는 내용 표시를 거부합니다.</target>
        </trans-unit>
        <trans-unit id="f111a08ebe017bfa651b150c380291561a95f314" translate="yes" xml:space="preserve">
          <source>BuildKite</source>
          <target state="translated">BuildKite</target>
        </trans-unit>
        <trans-unit id="66abb97e1a71792d6eed7271b23e39c61fd25939" translate="yes" xml:space="preserve">
          <source>Built-in assertions</source>
          <target state="translated">내장 된 주장</target>
        </trans-unit>
        <trans-unit id="15d9b4c1850cd2dffca0607f9583809bb00f5e69" translate="yes" xml:space="preserve">
          <source>Bumped Mocha to 2.2.1</source>
          <target state="translated">충돌 한 모카를 2.2.1로</target>
        </trans-unit>
        <trans-unit id="c56068c8da03fb72661803a6496b6dd28e53a6f6" translate="yes" xml:space="preserve">
          <source>Bumped deps that &lt;code&gt;npm audit&lt;/code&gt; was yelling about. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1701&quot;&gt;#1701&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;npm audit&lt;/code&gt; 에서 소리 친 울퉁불퉁 한 뎁 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1701&quot;&gt;# 1701&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="4767c02ecd83dfbbd2a6830004fcb9af882ea4f5" translate="yes" xml:space="preserve">
          <source>Bumped the internal version of &lt;code&gt;mocha&lt;/code&gt; from &lt;code&gt;2.2.1&lt;/code&gt; to &lt;code&gt;2.4.5&lt;/code&gt;.</source>
          <target state="translated">의 내부 버전 부딪혀 &lt;code&gt;mocha&lt;/code&gt; 에서 &lt;code&gt;2.2.1&lt;/code&gt; 로 &lt;code&gt;2.4.5&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="487ecca09545f8c03f30975fb5d129ec4578795a" translate="yes" xml:space="preserve">
          <source>Bumped the version in &lt;code&gt;junit&lt;/code&gt; reporter dep from &lt;code&gt;1.12.1&lt;/code&gt; to &lt;code&gt;1.17.0&lt;/code&gt; which adds a few new features. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2238&quot;&gt;#2238&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;junit&lt;/code&gt; reporter dep 버전이 &lt;code&gt;1.12.1&lt;/code&gt; 에서 &lt;code&gt;1.17.0&lt;/code&gt; 으로 충돌 하여 몇 가지 새로운 기능이 추가되었습니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2238&quot;&gt;# 2238&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="99f9a157d4c7ff23b6d56adeaf225b6993e3d26f" translate="yes" xml:space="preserve">
          <source>Bundled Tools</source>
          <target state="translated">번들 도구</target>
        </trans-unit>
        <trans-unit id="82a2ed0fb0a489635ad24705fb73690f3a563c56" translate="yes" xml:space="preserve">
          <source>But as we hover over the &lt;code&gt;CONTAINS&lt;/code&gt;, Cypress reverts back to the URL that was present when our snapshot was taken.</source>
          <target state="translated">그러나 &lt;code&gt;CONTAINS&lt;/code&gt; 위로 마우스를 가져 가면 Cypress는 스냅 샷을 만들 때 있던 URL로 되돌아갑니다.</target>
        </trans-unit>
        <trans-unit id="2b900bd7554aeee9fcd61f06518adffba2a37482" translate="yes" xml:space="preserve">
          <source>But do not fret - there are better workarounds to still achieve conditional testing &lt;strong&gt;without&lt;/strong&gt; relying on the DOM. You just have to &lt;em&gt;anchor&lt;/em&gt; yourself to another piece of truth that is not mutable.</source>
          <target state="translated">그러나 걱정하지 마십시오 . DOM에 의존 &lt;strong&gt;하지 않고&lt;/strong&gt; 조건부 테스트 &lt;strong&gt;를 수행&lt;/strong&gt; 하는 더 나은 해결 방법이 있습니다 . 변경 불가능한 또 다른 진실에 자신 을 &lt;em&gt;고정&lt;/em&gt; 시켜야합니다 .</target>
        </trans-unit>
        <trans-unit id="bd815cee4113e688a7df5133a0ecf811c2f33eb9" translate="yes" xml:space="preserve">
          <source>But if your app makes a request upon being initialized, &lt;em&gt;the above code will not work&lt;/em&gt;. &lt;code&gt;cy.visit()&lt;/code&gt; will resolve once its &lt;code&gt;load&lt;/code&gt; event fires. The &lt;a href=&quot;server&quot;&gt;&lt;code&gt;cy.server()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt; commands are not processed until &lt;em&gt;after&lt;/em&gt;&lt;code&gt;cy.visit()&lt;/code&gt; resolves.</source>
          <target state="translated">그러나 앱이 초기화 될 때 요청 &lt;em&gt;하면 위의 코드가 작동하지 않습니다&lt;/em&gt; . &lt;code&gt;cy.visit()&lt;/code&gt; 는 일단 &lt;code&gt;load&lt;/code&gt; 이벤트가 발생 하면 해결됩니다 . &lt;a href=&quot;server&quot;&gt; &lt;code&gt;cy.server()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt; 명령까지 처리되지 않은 &lt;em&gt;후 &lt;/em&gt; &lt;code&gt;cy.visit()&lt;/code&gt; 해결한다.</target>
        </trans-unit>
        <trans-unit id="92e073bae81b135a93e24b0e9ee261db4492bf0c" translate="yes" xml:space="preserve">
          <source>But in the &lt;strong&gt;worst&lt;/strong&gt; case scenario we have a situation where the &lt;code&gt;&amp;lt;#wizard&amp;gt;&lt;/code&gt;&lt;strong&gt;was&lt;/strong&gt; going to be rendered, but it didn&amp;rsquo;t render within our given timeout. Let&amp;rsquo;s assume this was due to a pending network request or WebSocket message or a queued timer, or anything else.</source>
          <target state="translated">그러나 &lt;strong&gt;최악의&lt;/strong&gt; 시나리오에서는 &lt;code&gt;&amp;lt;#wizard&amp;gt;&lt;/code&gt; &lt;strong&gt;가&lt;/strong&gt; 렌더링 되는 상황이 있지만 주어진 시간 초과 내에 렌더링되지 않았습니다. 이것이 보류중인 네트워크 요청이나 WebSocket 메시지 또는 대기 타이머 또는 기타로 인한 것이라고 가정 해 봅시다.</target>
        </trans-unit>
        <trans-unit id="9761bc768940e7d80f9261297a770d4320900e85" translate="yes" xml:space="preserve">
          <source>But sometimes the test fails - not usually locally, no - it almost always fails on our continuous integration server. When the test fails, the recorded video and screenshots are NOT showing any obvious problems! Here is the failing test video:</source>
          <target state="translated">그러나 때로는 테스트가 실패합니다 (일반적으로 로컬이 아님). 지속적인 통합 서버에서는 거의 항상 실패합니다. 테스트가 실패하면 녹화 된 비디오 및 스크린 샷에 명백한 문제가 표시되지 않습니다! 다음은 실패한 테스트 비디오입니다.</target>
        </trans-unit>
        <trans-unit id="3935888993bc17de354607d31bca1d177106eaf0" translate="yes" xml:space="preserve">
          <source>But what this also means is that your test code &lt;strong&gt;is being evaluated inside the browser&lt;/strong&gt;. Test code is not evaluated in Node, or any other server side language. The &lt;strong&gt;only&lt;/strong&gt; language we will ever support is the language of the web: JavaScript.</source>
          <target state="translated">그러나 이것이 의미하는 바는 테스트 코드 &lt;strong&gt;가 브라우저 내에서 평가되고&lt;/strong&gt; 있다는 것 입니다. 테스트 코드는 Node 또는 다른 서버 측 언어로 평가되지 않습니다. &lt;strong&gt;단지&lt;/strong&gt; 우리가 이제까지 지원하는 언어는 웹의 언어 : 자바 스크립트.</target>
        </trans-unit>
        <trans-unit id="c99194c72e09ef4a657734c01fca7894ea8c0b29" translate="yes" xml:space="preserve">
          <source>But when you&amp;rsquo;re testing &lt;em&gt;another area of the system&lt;/em&gt; that relies on a state from a previous feature: &lt;strong&gt;do not use your UI to set up this state&lt;/strong&gt;.</source>
          <target state="translated">그러나 이전 기능의 상태에 의존 &lt;em&gt;하는 시스템의 다른 영역을&lt;/em&gt; 테스트 할 때는 &lt;strong&gt;UI를 사용하여이 상태를 설정하지 마십시오&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="f501dba65bd4f79db81c1a22aa83586dd29110a5" translate="yes" xml:space="preserve">
          <source>But you may be wondering where the URL property comes from. Per the &lt;code&gt;window.location&lt;/code&gt; spec, there actually isn&amp;rsquo;t a URL property on the &lt;code&gt;location&lt;/code&gt; object.</source>
          <target state="translated">그러나 URL 속성의 출처가 궁금 할 것입니다. 당 &lt;code&gt;window.location&lt;/code&gt; 사양, 실제로의 URL 속성이없는 &lt;code&gt;location&lt;/code&gt; 객체입니다.</target>
        </trans-unit>
        <trans-unit id="6eb38eef7e0cb7c5285cb92d9f35cf079b5f511f" translate="yes" xml:space="preserve">
          <source>But&amp;hellip; for the sake of the argument, let&amp;rsquo;s imagine for a moment you did have error handling in Cypress.</source>
          <target state="translated">그러나&amp;hellip; 논쟁을 위해 Cypress에서 오류 처리를 한 순간 상상해 봅시다.</target>
        </trans-unit>
        <trans-unit id="fc647326b85e4411d8721bb8101b0f6ed1dcdaa8" translate="yes" xml:space="preserve">
          <source>By adding &lt;a href=&quot;../../api/commands/should&quot;&gt;&lt;code&gt;.should('not.exist')&lt;/code&gt;&lt;/a&gt; to any DOM command, Cypress will reverse its default assertion and automatically wait until the element does not exist.</source>
          <target state="translated">Cypress는 DOM 명령에 &lt;a href=&quot;../../api/commands/should&quot;&gt; &lt;code&gt;.should('not.exist')&lt;/code&gt; &lt;/a&gt; 를 추가 하여 기본 어설 션을 되돌리고 요소가 존재하지 않을 때까지 자동으로 기다립니다.</target>
        </trans-unit>
        <trans-unit id="16abc9c943d2007be0a9d0db0a052514c37ec69b" translate="yes" xml:space="preserve">
          <source>By clearing cookies before each test you are guaranteed to always start from a clean slate. Starting from a clean state prevents coupling your tests to one another and prevents situations where mutating something in your application in one test affects another one downstream.</source>
          <target state="translated">각 테스트 전에 쿠키를 지우면 항상 깨끗한 슬레이트에서 시작됩니다. 클린 상태에서 시작하면 테스트가 서로 연결되는 것을 방지하고 한 테스트에서 응용 프로그램의 변경 내용이 다른 다운 스트림에 영향을 미치는 상황을 방지 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dbff3eb7997676064537a457a8e17345ad463c2c" translate="yes" xml:space="preserve">
          <source>By default &lt;a href=&quot;route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt; inherits some of its options from &lt;code&gt;cy.server()&lt;/code&gt;.</source>
          <target state="translated">기본적으로 &lt;a href=&quot;route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt; 에서 해당 옵션의 일부 상속 &lt;code&gt;cy.server()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c128271a173c14c3d77a31827252e98871908fce" translate="yes" xml:space="preserve">
          <source>By default Cypress detects if an element you&amp;rsquo;re trying to interact with is animating. This check ensures that an element is not animating too quickly for a real user to interact with the element. This also prevents some edge cases where actions, such as &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt;, happened too fast during a transition.</source>
          <target state="translated">Cypress는 기본적으로 상호 작용하려는 요소가 애니메이션인지 감지합니다. 이 검사는 실제 사용자가 요소와 상호 작용하기에 요소가 너무 빨리 애니메이션되지 않도록합니다. 또한 전환 중에 &lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../../api/commands/click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt; 과 같은 작업 이 너무 빨리 발생하는 일부 경우를 방지 합니다.</target>
        </trans-unit>
        <trans-unit id="369b519ae221ff90a3a7ee1476cf295b6283f65a" translate="yes" xml:space="preserve">
          <source>By default Cypress seeds this file for new projects, but if you have an existing project just create this file yourself.</source>
          <target state="translated">기본적으로 Cypress는 새 프로젝트를 위해이 파일을 시드하지만 기존 프로젝트가있는 경우이 파일을 직접 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="1837fbd9a9ec8015fc66d28fdd8ea147a145faf2" translate="yes" xml:space="preserve">
          <source>By default Cypress uses &lt;code&gt;minimatch&lt;/code&gt; to test glob patterns against XHR URLs.</source>
          <target state="translated">기본적으로 Cypress는 &lt;code&gt;minimatch&lt;/code&gt; 를 사용 하여 XHR URL에 대한 glob 패턴을 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="8aea1a5e3fc50befb253f0d3c037201ab9a3e6fa" translate="yes" xml:space="preserve">
          <source>By default Cypress will automatically include the plugins file &lt;code&gt;cypress/plugins/index.js&lt;/code&gt;&lt;strong&gt;before&lt;/strong&gt; every single spec file it runs. We do this purely as a convenience mechanism so you don&amp;rsquo;t have to import this file in every single one of your spec files.</source>
          <target state="translated">기본 싸이프레스에 의해 자동으로 포함됩니다 플러그인 파일 &lt;code&gt;cypress/plugins/index.js&lt;/code&gt; &lt;strong&gt;전에&lt;/strong&gt; 그것을 실행하는 모든 단일 사양 파일. 우리는 이것을 편의 메커니즘으로 만 사용하므로 스펙 파일의 모든 단일 파일에서이 파일을 가져올 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="c8d14ff553bf96704ae7ab16bad50d6f91465cdb" translate="yes" xml:space="preserve">
          <source>By default Cypress will automatically include the support file &lt;code&gt;cypress/support/index.js&lt;/code&gt;. This file runs &lt;strong&gt;before&lt;/strong&gt; every single spec file . We do this purely as a convenience mechanism so you don&amp;rsquo;t have to import this file in every single one of your spec files.</source>
          <target state="translated">기본적으로 Cypress는 지원 파일 &lt;code&gt;cypress/support/index.js&lt;/code&gt; 를 자동으로 포함합니다 . 이 파일은 모든 단일 스펙 파일 &lt;strong&gt;보다 먼저&lt;/strong&gt; 실행 됩니다. 우리는 이것을 편의 메커니즘으로 만 사용하므로 스펙 파일의 모든 단일 파일에서이 파일을 가져올 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="fb5a748a6b8beb98293f050314028cf4ef3c1a6e" translate="yes" xml:space="preserve">
          <source>By default Cypress will favor:</source>
          <target state="translated">기본적으로 Cypress는 다음을 선호합니다.</target>
        </trans-unit>
        <trans-unit id="6f3b1d3fc29a286f5e1e567d6e4465194e66b494" translate="yes" xml:space="preserve">
          <source>By default Cypress will log out the cookie object which allows you to inspect all of its properties. However you may not need that level of detail and you can turn this off.</source>
          <target state="translated">Cypress는 기본적으로 쿠키 객체를 로그 아웃하여 모든 속성을 검사 할 수 있습니다. 그러나 해당 레벨의 세부 사항이 필요하지 않을 수 있으며이를 끌 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="64540a26c4f0445f282c3b4b176cd2403dcbff0a" translate="yes" xml:space="preserve">
          <source>By default each command that retries, does so for up to 4 seconds - the &lt;a href=&quot;../references/configuration#Timeouts&quot;&gt;&lt;code&gt;defaultCommandTimeout&lt;/code&gt;&lt;/a&gt; setting. You can change this timeout for &lt;em&gt;all commands&lt;/em&gt; using your configuration file, a CLI parameter, via an environment variable, or programmatically.</source>
          <target state="translated">기본적으로 재 시도하는 각 명령은 최대 4 초 동안 수행 &lt;a href=&quot;../references/configuration#Timeouts&quot;&gt; &lt;code&gt;defaultCommandTimeout&lt;/code&gt; &lt;/a&gt; 설정). 환경 변수를 통해 또는 프로그래밍 방식으로 구성 파일, CLI 매개 변수를 사용하여 &lt;em&gt;모든 명령에&lt;/em&gt; 대해이 제한 시간을 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="86e97fd31ec82fcd81884e526c7d5710272a3639" translate="yes" xml:space="preserve">
          <source>By default, &lt;a href=&quot;../commands/screenshot&quot;&gt;&lt;code&gt;cy.screenshot()&lt;/code&gt;&lt;/a&gt; only captures your application under test. You may want it to capture the entire Test Runner for debugging purposes.</source>
          <target state="translated">기본적으로 &lt;a href=&quot;../commands/screenshot&quot;&gt; &lt;code&gt;cy.screenshot()&lt;/code&gt; &lt;/a&gt; 은 테스트중인 응용 프로그램 만 캡처합니다. 디버깅 목적으로 전체 테스트 러너를 캡처 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9789f525daf318c4ed0a429d6c1578612f8d66ae" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;cy.readFile()&lt;/code&gt; asserts that the file exists and will fail if it does not exist. It will retry reading the file if it does not initially exist until the file exists or the command times out.</source>
          <target state="translated">기본적으로 &lt;code&gt;cy.readFile()&lt;/code&gt; 은 파일이 존재한다고 주장하고 존재하지 않으면 실패합니다. 파일이 존재하거나 명령이 시간 종료 될 때까지 파일이 처음에 존재하지 않으면 파일 읽기를 재 시도합니다.</target>
        </trans-unit>
        <trans-unit id="b7755cc76eb2927459baa2eaa0cbbb869ab2869c" translate="yes" xml:space="preserve">
          <source>By default, Cypress automatically takes a screenshot when there is a failure when running &lt;code&gt;cypress run&lt;/code&gt;, but you can disable this.</source>
          <target state="translated">기본적으로 Cypress &lt;code&gt;cypress run&lt;/code&gt; 시 오류가 발생하면 Cypress가 자동으로 스크린 샷을 찍지 만이 를 비활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3a930f944f69980722b7a7435e13cc75a19e0968" translate="yes" xml:space="preserve">
          <source>By default, Cypress comes packaged with the &lt;strong&gt;Browserify Preprocessor&lt;/strong&gt; already installed.</source>
          <target state="translated">기본적으로 Cypress는 &lt;strong&gt;Browserify Preprocessor가&lt;/strong&gt; 이미 설치되어 패키지로 제공 됩니다.</target>
        </trans-unit>
        <trans-unit id="51b1d4458722e54fdab38de0b4fdb208fbb4c446" translate="yes" xml:space="preserve">
          <source>By default, Cypress expects your &lt;code&gt;cypress.json&lt;/code&gt; to be found where your &lt;code&gt;package.json&lt;/code&gt; is. However, you can point Cypress to run in a different location.</source>
          <target state="translated">Cypress는 기본적으로 &lt;code&gt;cypress.json&lt;/code&gt; 이 &lt;code&gt;package.json&lt;/code&gt; 이 있는 곳에있을 것으로 예상합니다 . 그러나 Cypress가 다른 위치에서 실행되도록 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1ec58f30677842ba5abd7f2125050c19d588f884" translate="yes" xml:space="preserve">
          <source>By default, Cypress is configured to &lt;em&gt;ignore&lt;/em&gt; requests that are used to fetch static content like &lt;code&gt;.js&lt;/code&gt; or &lt;code&gt;.html&lt;/code&gt; files. This keeps the Command Log less noisy. This option can be changed by overriding the default whitelisting in the &lt;a href=&quot;../../api/commands/server#Options&quot;&gt;&lt;code&gt;cy.server()&lt;/code&gt; options&lt;/a&gt;.</source>
          <target state="translated">기본적으로 Cypress는 &lt;code&gt;.js&lt;/code&gt; 또는 &lt;code&gt;.html&lt;/code&gt; 파일 과 같은 정적 콘텐츠를 가져 오는 데 사용되는 요청 을 &lt;em&gt;무시&lt;/em&gt; 하도록 구성되어 있습니다. 이렇게하면 명령 로그의 소음이 줄어 듭니다. &lt;a href=&quot;../../api/commands/server#Options&quot;&gt; &lt;code&gt;cy.server()&lt;/code&gt; &lt;/a&gt; 옵션 의 기본 화이트리스트를 재정 의하여이 옵션을 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2b877c2943ec02100ea8a4e68830dc03ae75be17" translate="yes" xml:space="preserve">
          <source>By default, Cypress keeps 50 tests worth of snapshots and command data for time traveling. If you are seeing extremely high memory consumption in your browser, you may want to lower the &lt;code&gt;numTestsKeptInMemory&lt;/code&gt; in your &lt;a href=&quot;../references/configuration#Global&quot;&gt;configuration&lt;/a&gt;.</source>
          <target state="translated">기본적으로 Cypress는 시간 이동에 대한 50 개의 테스트 가치 스냅 샷과 명령 데이터를 유지합니다. 브라우저에서 매우 높은 메모리 소비를보고하는 경우에는 낮은 할 수 있습니다 &lt;code&gt;numTestsKeptInMemory&lt;/code&gt; 당신의 &lt;a href=&quot;../references/configuration#Global&quot;&gt;구성&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="73b4e4bdbe66c61a3929bda637ec81af86f094f9" translate="yes" xml:space="preserve">
          <source>By default, Cypress passes the Chrome command line switch to enable a fake video for a media stream. This is to better enable testing webcam functionality without having to have the necessary hardware to test.</source>
          <target state="translated">기본적으로 Cypress는 Chrome 명령 줄 스위치를 통과하여 미디어 스트림에 가짜 비디오를 활성화합니다. 이를 통해 테스트에 필요한 하드웨어가 없어도 웹캠 기능을보다 효과적으로 테스트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a3cda0a302f2c8de413fcebbb8f0b3b7c5200fbc" translate="yes" xml:space="preserve">
          <source>By default, Cypress will automatically find and allow you to use the browsers installed on your system.</source>
          <target state="translated">기본적으로 Cypress는 시스템에 설치된 브라우저를 자동으로 찾아서 사용할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="14576507b321bf953573432132aa0dce8f14ea0d" translate="yes" xml:space="preserve">
          <source>By default, Cypress will automatically set &lt;code&gt;Content-Type&lt;/code&gt; and &lt;code&gt;Content-Length&lt;/code&gt; based on what your &lt;code&gt;response body&lt;/code&gt; looks like.</source>
          <target state="translated">기본적으로 Cypress는 &lt;code&gt;response body&lt;/code&gt; 모양 에 따라 &lt;code&gt;Content-Type&lt;/code&gt; 및 &lt;code&gt;Content-Length&lt;/code&gt; 를 자동으로 설정 합니다 .</target>
        </trans-unit>
        <trans-unit id="60f36509279d4c17207d1dc348d8c1f5325d200b" translate="yes" xml:space="preserve">
          <source>By default, Cypress will error if you&amp;rsquo;re trying to click multiple elements. By passing &lt;code&gt;{ multiple: true }&lt;/code&gt; Cypress will iteratively apply the click to each element and will also log to the &lt;a href=&quot;../../guides/core-concepts/test-runner#Command-Log&quot;&gt;Command Log&lt;/a&gt; multiple times.</source>
          <target state="translated">여러 요소를 클릭하려고하면 기본적으로 Cypress에서 오류가 발생합니다. &lt;code&gt;{ multiple: true }&lt;/code&gt; 를 전달 하면 Cypress가 각 요소에 반복적으로 클릭을 적용하고 여러 번 &lt;a href=&quot;../../guides/core-concepts/test-runner#Command-Log&quot;&gt;명령 로그에&lt;/a&gt; 기록합니다 .</target>
        </trans-unit>
        <trans-unit id="2eaa1b50e36b4ca02fd70aa93843f9d4af125355" translate="yes" xml:space="preserve">
          <source>By default, Cypress will run tests in Electron headlessly.</source>
          <target state="translated">기본적으로 Cypress는 Electron에서 헤드리스 테스트를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="020c7aea8e7fcdb3f70f080fc34e32edac970fc2" translate="yes" xml:space="preserve">
          <source>By default, JavaScript timers and CSS animations are disabled to try to prevent changes to your application under test while the screenshot is taken, but you can turn off this behavior.</source>
          <target state="translated">스크린 샷을 찍는 동안 테스트중인 응용 프로그램이 변경되지 않도록 JavaScript 타이머 및 CSS 애니메이션은 기본적으로 비활성화되어 있지만이 동작을 해제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="31d239b236e06bd32e82356597cd3678076349da" translate="yes" xml:space="preserve">
          <source>By default, a screenshot is saved to a file with a path relative to the &lt;a href=&quot;../../guides/references/configuration#Folders-Files&quot;&gt;screenshots folder&lt;/a&gt;, appended by a path relating to where the spec file exists, with a name including the current test&amp;rsquo;s suites and test name: &lt;code&gt;{screenshotsFolder}/{specPath}/{testName}.png&lt;/code&gt;</source>
          <target state="translated">기본적으로 스크린 샷은 &lt;a href=&quot;../../guides/references/configuration#Folders-Files&quot;&gt;스크린 샷 폴더에&lt;/a&gt; 상대적인 경로와 함께 파일에 저장되며 스펙 파일이있는 위치와 관련된 경로가 추가되고 현재 테스트 스위트 및 테스트 이름을 포함한 이름이 &lt;code&gt;{screenshotsFolder}/{specPath}/{testName}.png&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="25b5c1248e79a26964e544280fa3ed4f30495142" translate="yes" xml:space="preserve">
          <source>By default, any environment variable that matches a corresponding configuration key will override the &lt;code&gt;cypress.json&lt;/code&gt; value.</source>
          <target state="translated">기본적으로 해당 구성 키와 일치하는 환경 변수는 &lt;code&gt;cypress.json&lt;/code&gt; 값 을 대체합니다 .</target>
        </trans-unit>
        <trans-unit id="e4d0e8b3b87d13429a6c8955ad16b7c84cbf40a8" translate="yes" xml:space="preserve">
          <source>By default, every user of Cypress is given a personal organization - named after you. You cannot delete or edit the name of this default organization.</source>
          <target state="translated">기본적으로 Cypress의 모든 사용자에게는 귀하의 이름을 따서 명명 된 개인 조직이 제공됩니다. 이 기본 조직의 이름을 삭제하거나 편집 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="5063fbb288f3f5b4a8dd3fb04c4aabced23161da" translate="yes" xml:space="preserve">
          <source>By default, if your screen is not large enough to display all of the current dimension&amp;rsquo;s pixels, Cypress will scale and center your application within the Cypress runner to accommodate.</source>
          <target state="translated">기본적으로 화면이 현재 치수의 모든 픽셀을 표시 할만큼 크지 않은 경우 Cypress는 Cypress 러너 내에서 응용 프로그램의 크기를 조정하고 가운데에 맞 춥니 다.</target>
        </trans-unit>
        <trans-unit id="56147af8f660e28c93278b32108de5247937fc54" translate="yes" xml:space="preserve">
          <source>By default, modifiers are released after each type command.</source>
          <target state="translated">기본적으로 수정자는 각 유형 명령 후에 해제됩니다.</target>
        </trans-unit>
        <trans-unit id="8f36f87fbe0c647d60dcf224cf359b9788daa6ff" translate="yes" xml:space="preserve">
          <source>By default, scaling the application under test is turned off during when the &lt;code&gt;capture&lt;/code&gt; option is &lt;code&gt;viewport&lt;/code&gt; to prevent differences between screenshots on screens with different resolutions. You can turn scaling on and have your app scaled like it is during normal use of Cypress. This is always coerced to &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;capture&lt;/code&gt; option is &lt;code&gt;runner&lt;/code&gt;.</source>
          <target state="translated">기본적으로 &lt;code&gt;capture&lt;/code&gt; 옵션이 &lt;code&gt;viewport&lt;/code&gt; 경우 테스트중인 응용 프로그램의 배율 조정이 해제 되어 해상도가 다른 화면의 스크린 샷 간 차이를 방지합니다. Cypress를 정상적으로 사용하는 동안 스케일링을 켜고 앱을 스케일링 할 수 있습니다. &lt;code&gt;capture&lt;/code&gt; 옵션이 &lt;code&gt;runner&lt;/code&gt; 경우 항상 &lt;code&gt;true&lt;/code&gt; 로 강제됩니다 .</target>
        </trans-unit>
        <trans-unit id="6f335479f6d588a3ec88fa2676dba6b4a72b2028" translate="yes" xml:space="preserve">
          <source>By default, the event will bubble up the DOM tree. This will prevent the event from bubbling.</source>
          <target state="translated">기본적으로 이벤트는 DOM 트리를 버블 링합니다. 이렇게하면 이벤트가 버블 링되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4ee8175e75416cebdf4f5f2b3834c5eeb169de38" translate="yes" xml:space="preserve">
          <source>By default, until you issue a &lt;code&gt;cy.viewport()&lt;/code&gt; command, Cypress sets the width to &lt;code&gt;1000px&lt;/code&gt; and the height to &lt;code&gt;660px&lt;/code&gt; by default.</source>
          <target state="translated">당신이 발행 될 때까지 기본적으로 &lt;code&gt;cy.viewport()&lt;/code&gt; 명령을, 싸이프레스의 폭을 설정 &lt;code&gt;1000px&lt;/code&gt; 과의 높이 &lt;code&gt;660px&lt;/code&gt; 기본적으로합니다.</target>
        </trans-unit>
        <trans-unit id="31da1ef1646d02bd7e3e61c167ce21d28b35ce7b" translate="yes" xml:space="preserve">
          <source>By default, when running &lt;a href=&quot;command-line#cypress-run&quot;&gt;&lt;code&gt;cypress run&lt;/code&gt;&lt;/a&gt; from the CLI, we will launch Electron headlessly.</source>
          <target state="translated">기본적으로 CLI에서 &lt;a href=&quot;command-line#cypress-run&quot;&gt; &lt;code&gt;cypress run&lt;/code&gt; &lt;/a&gt; 을 실행 하면 Electron이 헤드리스로 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="67d236dff9d0db2de50f277cfe461372f2b4cda7" translate="yes" xml:space="preserve">
          <source>By installing Cypress through &lt;code&gt;npm&lt;/code&gt; you also get access to many other CLI commands.</source>
          <target state="translated">&lt;code&gt;npm&lt;/code&gt; 을 통해 Cypress를 설치 하면 다른 많은 CLI 명령에도 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="80da3b5dbdcbfc5eb2338707d70f4635caeec1bb" translate="yes" xml:space="preserve">
          <source>By passing a string or array of strings you can block requests made to one or more hosts.</source>
          <target state="translated">문자열 또는 문자열 배열을 전달하면 하나 이상의 호스트에 대한 요청을 차단할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c215ae2b7035d4fc04619254745488563429289e" translate="yes" xml:space="preserve">
          <source>By setting the &lt;code&gt;baseUrl&lt;/code&gt;, you can avoid this reload altogether. Cypress will load the main window in the &lt;code&gt;baseUrl&lt;/code&gt; you specified as soon as your tests start.</source>
          <target state="translated">&lt;code&gt;baseUrl&lt;/code&gt; 을 설정하면 이 재로드를 완전히 피할 수 있습니다. Cypress는 테스트가 시작되는 즉시 지정한 &lt;code&gt;baseUrl&lt;/code&gt; 에 기본 창을로드합니다 .</target>
        </trans-unit>
        <trans-unit id="52184d3398336fbb0d43496bd9f09ab0e9d17269" translate="yes" xml:space="preserve">
          <source>By setting the &lt;code&gt;{ prevSubject: true }&lt;/code&gt;, our new &lt;code&gt;.console()&lt;/code&gt; command will require a subject.</source>
          <target state="translated">&lt;code&gt;{ prevSubject: true }&lt;/code&gt; 를 설정하면 새로운 &lt;code&gt;.console()&lt;/code&gt; 명령에 제목이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="316130fed5f133da590e50589a6237514343d251" translate="yes" xml:space="preserve">
          <source>By turning on debugging, Cypress will automatically log out to the console when it &lt;em&gt;sets&lt;/em&gt; or &lt;em&gt;clears&lt;/em&gt; cookie values. This is useful to help you understand how Cypress clears cookies before each test, and is useful to visualize how to handle preserving cookies in between tests.</source>
          <target state="translated">Cypress는 디버깅을 &lt;em&gt;설정&lt;/em&gt; 하여 쿠키 값을 &lt;em&gt;설정&lt;/em&gt; 하거나 &lt;em&gt;지울&lt;/em&gt; 때 콘솔에 자동으로 로그 아웃 합니다. 이는 Cypress가 각 테스트 전에 쿠키를 지우는 방법을 이해하는 데 도움이되며 테스트간에 쿠키를 보존하는 방법을 시각화하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="298fa88d04166bb6674ad4e0d3ccdf772b46c496" translate="yes" xml:space="preserve">
          <source>By using &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt; we avoid the use of &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="translated">사용하여 &lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt; 우리는 사용하지 않도록 &lt;code&gt;this&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="18078552f603c5c6fab2d90bca20e9322ebefd72" translate="yes" xml:space="preserve">
          <source>By using callback functions we&amp;rsquo;ve created a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures&quot;&gt;closure&lt;/a&gt;. Closures enable us to keep references around to refer to work done in previous commands.</source>
          <target state="translated">콜백 함수를 사용하여 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures&quot;&gt;클로저를&lt;/a&gt; 만들었습니다 . 클로저를 사용하면 이전 명령에서 수행 한 작업을 참조하기 위해 참조를 유지할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="489e37d7dbee8b74c057ee1d2d38019f4c513b59" translate="yes" xml:space="preserve">
          <source>Bypassing your UI</source>
          <target state="translated">UI 우회</target>
        </trans-unit>
        <trans-unit id="ff61c566a2ca6d712c906c28744ddcd1dba14009" translate="yes" xml:space="preserve">
          <source>CI Build ID environment variables by provider</source>
          <target state="translated">제공자 별 CI 빌드 ID 환경 변수</target>
        </trans-unit>
        <trans-unit id="fc69adcfecb8cb1dd5f155da62e87064402b4c2d" translate="yes" xml:space="preserve">
          <source>CI Configurations in Kitchen Sink Example</source>
          <target state="translated">주방 싱크의 CI 구성 예</target>
        </trans-unit>
        <trans-unit id="d01ac6617bafd8746500902dac96f7c5734ac2f0" translate="yes" xml:space="preserve">
          <source>CI Provider</source>
          <target state="translated">CI 제공자</target>
        </trans-unit>
        <trans-unit id="c662b79291f346f66148551da0ae0a7364ce29f5" translate="yes" xml:space="preserve">
          <source>CI machines contact the Cypress &lt;a href=&quot;../dashboard/introduction&quot;&gt;Dashboard Service&lt;/a&gt; to indicate which spec files to run in the project.</source>
          <target state="translated">CI 시스템은 Cypress &lt;a href=&quot;../dashboard/introduction&quot;&gt;Dashboard Service&lt;/a&gt; 에 연결하여 프로젝트에서 실행할 스펙 파일을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="2027f0b62c225f1fba06f13e84c73e654c595e88" translate="yes" xml:space="preserve">
          <source>CI parallelization interactions</source>
          <target state="translated">CI 병렬화 상호 작용</target>
        </trans-unit>
        <trans-unit id="434a666a92024e35fbc505bba0c2675be6990ff3" translate="yes" xml:space="preserve">
          <source>CLI Errors</source>
          <target state="translated">CLI 오류</target>
        </trans-unit>
        <trans-unit id="2b73128876956758fae01f88c425032451c06b72" translate="yes" xml:space="preserve">
          <source>CLI now displays the correct overridden &lt;code&gt;CYPRESS_BINARY_VERSION&lt;/code&gt; on first open. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/659&quot;&gt;#659&lt;/a&gt;.</source>
          <target state="translated">CLI는 이제 처음 열 때 올바른 재정의 된 &lt;code&gt;CYPRESS_BINARY_VERSION&lt;/code&gt; 을 표시합니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/659&quot;&gt;# 659&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="5964dd4adab7594f2e1a2e9d973bbe2f7d161bc1" translate="yes" xml:space="preserve">
          <source>CLI shows help message when it is invoked with an unknown command like &lt;code&gt;$(npm bin)/cypress foo&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/641&quot;&gt;#641&lt;/a&gt;.</source>
          <target state="translated">CLI는 &lt;code&gt;$(npm bin)/cypress foo&lt;/code&gt; 와 같은 알 수없는 명령으로 호출 될 때 도움말 메시지를 표시합니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/641&quot;&gt;# 641&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="03f5dac5f9ec51daa2d44c63bd74508ea187e09e" translate="yes" xml:space="preserve">
          <source>CLI tools</source>
          <target state="translated">CLI 도구</target>
        </trans-unit>
        <trans-unit id="2139aadec237bbecb581e62932f94bc3bce7a704" translate="yes" xml:space="preserve">
          <source>CORS</source>
          <target state="translated">CORS</target>
        </trans-unit>
        <trans-unit id="bc649576a4d3ad53cb4f5ae4e2787fadafe6b354" translate="yes" xml:space="preserve">
          <source>CORS Network Errors are now correctly caught.</source>
          <target state="translated">CORS 네트워크 오류가 올바르게 발견되었습니다.</target>
        </trans-unit>
        <trans-unit id="70f64583fc76685812e87c4faa1cb1b507ca4146" translate="yes" xml:space="preserve">
          <source>CORS is bypassed</source>
          <target state="translated">CORS가 무시 됨</target>
        </trans-unit>
        <trans-unit id="ac7e57b7980c52be07d41cc077fc6f543ecb0e7f" translate="yes" xml:space="preserve">
          <source>CPU Architecture</source>
          <target state="translated">CPU 아키텍처</target>
        </trans-unit>
        <trans-unit id="194e13da720a1f025685e5d677eba8a1aff3860a" translate="yes" xml:space="preserve">
          <source>CSS</source>
          <target state="translated">CSS</target>
        </trans-unit>
        <trans-unit id="7c73fb96fc873b0e54bb33b427402eb6dae05fa0" translate="yes" xml:space="preserve">
          <source>CSS Improvements</source>
          <target state="translated">CSS 개선</target>
        </trans-unit>
        <trans-unit id="d7d5905637755f2600a18d5aff7b8c939f054ab1" translate="yes" xml:space="preserve">
          <source>CSS changes.</source>
          <target state="translated">CSS 변경.</target>
        </trans-unit>
        <trans-unit id="1a0d5a83a082583528756c941afe7d7ac4c8fee8" translate="yes" xml:space="preserve">
          <source>Cache the &lt;code&gt;~/.cache&lt;/code&gt; folder after running &lt;code&gt;npm install&lt;/code&gt;, &lt;code&gt;yarn&lt;/code&gt;, &lt;a href=&quot;https://docs.npmjs.com/cli/ci&quot;&gt;&lt;code&gt;npm ci&lt;/code&gt;&lt;/a&gt; or equivalents as demonstrated in the configs below.</source>
          <target state="translated">아래 구성에서 설명한대로 &lt;code&gt;npm install&lt;/code&gt; , &lt;code&gt;yarn&lt;/code&gt; , &lt;a href=&quot;https://docs.npmjs.com/cli/ci&quot;&gt; &lt;code&gt;npm ci&lt;/code&gt; &lt;/a&gt; 또는 이와 동등한 항목을 실행 한 후 &lt;code&gt;~/.cache&lt;/code&gt; 폴더를 캐시하십시오 .</target>
        </trans-unit>
        <trans-unit id="60790f7c84170a8b87051d7e857118ffeb0465ee" translate="yes" xml:space="preserve">
          <source>Caching</source>
          <target state="translated">Caching</target>
        </trans-unit>
        <trans-unit id="552776a73910809012403d392d8679e0d673873d" translate="yes" xml:space="preserve">
          <source>Caching folders with npm modules saves a lot of time after the first build.</source>
          <target state="translated">npm 모듈로 폴더를 캐싱하면 첫 번째 빌드 후 많은 시간이 절약됩니다.</target>
        </trans-unit>
        <trans-unit id="1fa16ca9debb97f6986680d1936a0fc501a513a5" translate="yes" xml:space="preserve">
          <source>Call &lt;code&gt;cy.request()&lt;/code&gt; over and over again</source>
          <target state="translated">&lt;code&gt;cy.request()&lt;/code&gt; 반복해서 호출</target>
        </trans-unit>
        <trans-unit id="f93685d70a619e9e5640c0d9c00fcede507aa163" translate="yes" xml:space="preserve">
          <source>Callback function that whitelists requests from ever being logged or stubbed. By default this matches against asset-like requests such as for &lt;code&gt;.js&lt;/code&gt;, &lt;code&gt;.jsx&lt;/code&gt;, &lt;code&gt;.html&lt;/code&gt;, and &lt;code&gt;.css&lt;/code&gt; files.</source>
          <target state="translated">요청이 기록되거나 스텁되지 않도록 허용하는 콜백 함수입니다. 기본적으로 이는 &lt;code&gt;.js&lt;/code&gt; , &lt;code&gt;.jsx&lt;/code&gt; , &lt;code&gt;.html&lt;/code&gt; 및 &lt;code&gt;.css&lt;/code&gt; 파일 과 같은 자산 유사 요청과 일치 합니다.</target>
        </trans-unit>
        <trans-unit id="087dbaf08e0864a6ad0ad0adb86ee5ed58f3f116" translate="yes" xml:space="preserve">
          <source>Callback function when a request is sent</source>
          <target state="translated">요청이 전송 될 때 콜백 함수</target>
        </trans-unit>
        <trans-unit id="cf8d5c2978df66f3f394db8f6aab052e046024aa" translate="yes" xml:space="preserve">
          <source>Callback function when a response is returned</source>
          <target state="translated">응답이 반환 될 때의 콜백 함수</target>
        </trans-unit>
        <trans-unit id="61dc26e9c1fe08638550698294266bd9f36dd5bb" translate="yes" xml:space="preserve">
          <source>Callback function which fires anytime an XHR is aborted</source>
          <target state="translated">XHR이 중단 될 때마다 발생하는 콜백 기능</target>
        </trans-unit>
        <trans-unit id="46ba14f15f9aae955fad56969dc285a9cd868127" translate="yes" xml:space="preserve">
          <source>Called before your page has loaded all of its resources.</source>
          <target state="translated">페이지가 모든 리소스를로드하기 전에 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="6caed0da8cebe162cd765d1f7ebb277bdbcdff72" translate="yes" xml:space="preserve">
          <source>Called once your page has fired its load event.</source>
          <target state="translated">페이지가로드 이벤트를 시작하면 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="ef1a512a13b777a8aa598130fecc3d609c6fe0e3" translate="yes" xml:space="preserve">
          <source>Calling &lt;a href=&quot;../../api/commands/focus&quot;&gt;&lt;code&gt;.focus()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../api/commands/blur&quot;&gt;&lt;code&gt;.blur()&lt;/code&gt;&lt;/a&gt; on &lt;a href=&quot;../../api/commands/window&quot;&gt;&lt;code&gt;cy.window()&lt;/code&gt;&lt;/a&gt; no longer fires blur events on the &lt;code&gt;activeElement&lt;/code&gt; or causes it to become &lt;code&gt;body&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2234&quot;&gt;#2234&lt;/a&gt;.</source>
          <target state="translated">호출 &lt;a href=&quot;../../api/commands/focus&quot;&gt; &lt;code&gt;.focus()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../../api/commands/blur&quot;&gt; &lt;code&gt;.blur()&lt;/code&gt; &lt;/a&gt; 에 &lt;a href=&quot;../../api/commands/window&quot;&gt; &lt;code&gt;cy.window()&lt;/code&gt; &lt;/a&gt; 더 이상 화재는의 이벤트 흐리게하지 &lt;code&gt;activeElement&lt;/code&gt; 를 하거나하게됩니다 &lt;code&gt;body&lt;/code&gt; . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2234&quot;&gt;# 2234&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="dfb1b743dea5451ffee7e0b29e93e9c9e02d727f" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;Cypress.$('button')&lt;/code&gt; will automatically query for elements in your remote &lt;code&gt;window&lt;/code&gt;. In other words, Cypress automatically sets the &lt;code&gt;document&lt;/code&gt; to be whatever you&amp;rsquo;ve currently navigated to via &lt;a href=&quot;../commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Cypress.$('button')&lt;/code&gt; 을 호출 하면 원격 &lt;code&gt;window&lt;/code&gt; 요소를 자동으로 쿼리합니다 . 즉, Cypress는 자동으로 &lt;code&gt;document&lt;/code&gt; 를 &lt;a href=&quot;../commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 를 통해 현재 탐색 한 내용 으로 자동 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="d10e5029c1e28bc1a973ff19ea668605abce3fd8" translate="yes" xml:space="preserve">
          <source>Can I recover from failed Cypress commands like if a &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt; doesn&amp;rsquo;t find an element?</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt; 이 요소를 찾지 못하는 경우와 같이 실패한 Cypress 명령을 복구 할 수 있습니까 ?</target>
        </trans-unit>
        <trans-unit id="52f60c07118b2ea2839c1265c591e221479eb96f" translate="yes" xml:space="preserve">
          <source>Can a user click on the element?</source>
          <target state="translated">사용자가 요소를 클릭 할 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="221fba3c424e5fc33582db258cdee25eeb4676e1" translate="yes" xml:space="preserve">
          <source>Can be stored in your &lt;code&gt;bash_profile&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;bash_profile&lt;/code&gt; 에 저장할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1a3ada5d5fc85a9fb0a3b73f11e43f21f3bd7b67" translate="yes" xml:space="preserve">
          <source>Can call &lt;a href=&quot;focus&quot;&gt;&lt;code&gt;.focus()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;blur&quot;&gt;&lt;code&gt;.blur()&lt;/code&gt;&lt;/a&gt; on &lt;code&gt;cy.window()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cy.window()&lt;/code&gt; 에서 &lt;a href=&quot;focus&quot;&gt; &lt;code&gt;.focus()&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;blur&quot;&gt; &lt;code&gt;.blur()&lt;/code&gt; &lt;/a&gt; 를 호출 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="8b6610dd542aebfaabe19f83676053a2d9964417" translate="yes" xml:space="preserve">
          <source>Can force responses to take longer to simulate network delay</source>
          <target state="translated">네트워크 지연을 시뮬레이션하는 데 응답이 더 오래 걸리도록 할 수 있음</target>
        </trans-unit>
        <trans-unit id="ed8a1cb964cf3bae5d65002a7f9c02b0831945f9" translate="yes" xml:space="preserve">
          <source>Can only be called on a valid focusable element</source>
          <target state="translated">유효한 포커스 가능 요소에서만 호출 가능</target>
        </trans-unit>
        <trans-unit id="4fc2d9b2678b5da75f54eee51b90a74226366c17" translate="yes" xml:space="preserve">
          <source>Can this just be written as a simple function?</source>
          <target state="translated">이것을 간단한 함수로 작성할 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="a24787ac55453ccdeca09cc237538938881ad9fe" translate="yes" xml:space="preserve">
          <source>Can time out because your browser did not receive any focus events</source>
          <target state="translated">브라우저가 포커스 이벤트를받지 않아 시간이 초과 될 수 있음</target>
        </trans-unit>
        <trans-unit id="715dd339a0f190c96e4c5aefda2eec96e223e77b" translate="yes" xml:space="preserve">
          <source>Can you read this? If you did, it might sound something like this:</source>
          <target state="translated">이거 읽을 수있어? 그랬다면 다음과 같이 들릴 것입니다.</target>
        </trans-unit>
        <trans-unit id="beb27c8e29d0525dbd2a4408dc6d33153c8dbd36" translate="yes" xml:space="preserve">
          <source>Can you see what Cypress is doing under the hood? It&amp;rsquo;s automatically waiting and retrying because it expects the content to &lt;strong&gt;eventually&lt;/strong&gt; be found in the DOM. It doesn&amp;rsquo;t immediately fail!</source>
          <target state="translated">Cypress가 무엇을하고 있는지 알 수 있습니까? 자동으로 대기하고 내용이 기대 때문에 다시 시도하는 것 &lt;strong&gt;, 결국&lt;/strong&gt; 은 DOM에서 찾을 수. 즉시 실패하지 않습니다!</target>
        </trans-unit>
        <trans-unit id="711cd51206e2b20f7a7dcd2cc7ad8258724d1d0d" translate="yes" xml:space="preserve">
          <source>Can you think of any more?</source>
          <target state="translated">더 이상 생각할 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="dad882c9c3e0a7a06ab377ce15833cf98595a06c" translate="yes" xml:space="preserve">
          <source>Canary</source>
          <target state="translated">Canary</target>
        </trans-unit>
        <trans-unit id="e760613087c145d4d43705311ebd5342caa91cd3" translate="yes" xml:space="preserve">
          <source>Cancel project transfer</source>
          <target state="translated">프로젝트 전송 취소</target>
        </trans-unit>
        <trans-unit id="319aaae4dec46a75861fd10bcf8d182f4a77298d" translate="yes" xml:space="preserve">
          <source>Cancellation</source>
          <target state="translated">Cancellation</target>
        </trans-unit>
        <trans-unit id="64b9d5a9e917dda829740003e994a492074b15af" translate="yes" xml:space="preserve">
          <source>Cannot &lt;code&gt;cy.visit()&lt;/code&gt; two different super domains in a single test</source>
          <target state="translated">단일 테스트에서 서로 다른 두 개의 슈퍼 도메인을 &lt;code&gt;cy.visit()&lt;/code&gt; 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="abb5bfdc353c366a7efbee1fb7da8e11330c0b1a" translate="yes" xml:space="preserve">
          <source>Cannot connect to API server</source>
          <target state="translated">API 서버에 연결할 수 없습니다</target>
        </trans-unit>
        <trans-unit id="52f1a833377675f9699a778739ccffab115d51ce" translate="yes" xml:space="preserve">
          <source>Cannot parallelize tests across environments</source>
          <target state="translated">여러 환경에서 테스트를 병렬화 할 수 없음</target>
        </trans-unit>
        <trans-unit id="8bd1413beeb2490640f9bb664bd3ce493819d2f9" translate="yes" xml:space="preserve">
          <source>Cannot parallelize tests in this group</source>
          <target state="translated">이 그룹에서 테스트를 병렬화 할 수 없습니다</target>
        </trans-unit>
        <trans-unit id="f19b9a94a23e75f0746294f4067e3bcf318dbd3d" translate="yes" xml:space="preserve">
          <source>Cannot parallelize tests on a stale run</source>
          <target state="translated">오래된 실행에서 테스트를 병렬화 할 수 없음</target>
        </trans-unit>
        <trans-unit id="ca09c54bff74a82bae543ebe259f7452ee8c5293" translate="yes" xml:space="preserve">
          <source>Capabilities</source>
          <target state="translated">Capabilities</target>
        </trans-unit>
        <trans-unit id="bb0a25cc9790bc7fa5693c25569e769c8850a3b8" translate="yes" xml:space="preserve">
          <source>Captured remote page uncaught errors again which fail corresponding tests.</source>
          <target state="translated">캡처 된 원격 페이지 포착되지 않은 오류가 다시 발생하여 해당 테스트에 실패합니다.</target>
        </trans-unit>
        <trans-unit id="48f2c0aca6c3bf7c2ed5abd3d76cf6978acf1777" translate="yes" xml:space="preserve">
          <source>Captured spec iframe errors again and preserve their stack trace.</source>
          <target state="translated">스펙 iframe 오류를 다시 캡처하고 스택 추적을 보존하십시오.</target>
        </trans-unit>
        <trans-unit id="cc3c3e5a2cc3f39c50c5ba6661d886a70e3ca1c8" translate="yes" xml:space="preserve">
          <source>Catalog of Events</source>
          <target state="translated">이벤트 카탈로그</target>
        </trans-unit>
        <trans-unit id="20c19aaf20441fa384633652a8389a543aec7485" translate="yes" xml:space="preserve">
          <source>Catch visual regressions and compare image diffs locally and in Cypress Dashboard.</source>
          <target state="translated">시각적 회귀를 포착하고 로컬 및 Cypress Dashboard에서 이미지 차이를 비교하십시오.</target>
        </trans-unit>
        <trans-unit id="03dcea7f9dee894e28d9a8873cb17690d773516d" translate="yes" xml:space="preserve">
          <source>Catching Test Failures</source>
          <target state="translated">테스트 실패 잡기</target>
        </trans-unit>
        <trans-unit id="1533667b844aeabc61af79e6389d6109dd4c1603" translate="yes" xml:space="preserve">
          <source>Cause + Effect commands are now logged in the correct order. IE, clicking something which causes another command to insert will be inserted correctly in the order they arrived</source>
          <target state="translated">원인 + 효과 명령이 이제 올바른 순서로 기록됩니다. IE, 다른 명령을 삽입하는 원인을 클릭하면 도착한 순서대로 올바르게 삽입됩니다.</target>
        </trans-unit>
        <trans-unit id="d0d31283aa0e9299d14e7cac83e850d482500bb5" translate="yes" xml:space="preserve">
          <source>Centered the animating icon in the Test Runner when &amp;lsquo;running&amp;rsquo;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1695&quot;&gt;#1695&lt;/a&gt;.</source>
          <target state="translated">'실행'할 때 테스트 러너에서 애니메이션 아이콘을 중앙에 놓습니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1695&quot;&gt;# 1695&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9fae277dee0479d19a4d4174ea2185ae54a626b9" translate="yes" xml:space="preserve">
          <source>Certain commands may have a specific requirement that causes them to immediately fail without retrying: such as &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">특정 명령에는 &lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt; 와 같이 다시 시도하지 않고 즉시 실패하게하는 특정 요구 사항이있을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d10525a99b239e81e31412cc7b4c5dc1217f3627" translate="yes" xml:space="preserve">
          <source>Chai</source>
          <target state="translated">Chai</target>
        </trans-unit>
        <trans-unit id="20063bcb34e12094b0c2342fd9f9d64a0bd76ec4" translate="yes" xml:space="preserve">
          <source>Chai-jQuery</source>
          <target state="translated">Chai-jQuery</target>
        </trans-unit>
        <trans-unit id="b507de528ba917aa8f1aeb32108798635cce2a20" translate="yes" xml:space="preserve">
          <source>Chain assertions on the same subject</source>
          <target state="translated">같은 주제에 대한 체인 주장</target>
        </trans-unit>
        <trans-unit id="c5022ed468cf246ff38b41ca1c5260a12cfd999b" translate="yes" xml:space="preserve">
          <source>Chain assertions when yield changes</source>
          <target state="translated">수율 변경시 체인 어설 션</target>
        </trans-unit>
        <trans-unit id="a5d758b8fa875a66cbc9934c7ee9483ed6de99b9" translate="yes" xml:space="preserve">
          <source>Chain off the screenshot to click the element captured</source>
          <target state="translated">캡처 한 요소를 클릭하여 스크린 샷을 연결 해제</target>
        </trans-unit>
        <trans-unit id="657c40f2403784c009553c8544b91fc705a8214c" translate="yes" xml:space="preserve">
          <source>Chainable getters</source>
          <target state="translated">연결 가능한 게터</target>
        </trans-unit>
        <trans-unit id="273f575f4958f461d0f138115a61041b33e559e6" translate="yes" xml:space="preserve">
          <source>Chainer</source>
          <target state="translated">Chainer</target>
        </trans-unit>
        <trans-unit id="422de1722c9aa75f8bfed73fdcfb12bf76514cb5" translate="yes" xml:space="preserve">
          <source>Chainers</source>
          <target state="translated">Chainers</target>
        </trans-unit>
        <trans-unit id="04e698cea23e1b45cd3e12385b6d2ab527866116" translate="yes" xml:space="preserve">
          <source>Chaining more cy commands after using &lt;a href=&quot;../../api/commands/wrap&quot;&gt;&lt;code&gt;cy.wrap()&lt;/code&gt;&lt;/a&gt; now works. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/114&quot;&gt;#114&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/wrap&quot;&gt; &lt;code&gt;cy.wrap()&lt;/code&gt; &lt;/a&gt; 을 사용한 후 더 많은 cy 명령을 연결하면 이제 작동합니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/114&quot;&gt;# 114&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9fd28c1d5a7993ba1e76db394b3c497fda73bb41" translate="yes" xml:space="preserve">
          <source>Chaining multiple assertions</source>
          <target state="translated">여러 어설 션 연결</target>
        </trans-unit>
        <trans-unit id="2b6eea3213ea352f89364f5b731264b8ddbd83f1" translate="yes" xml:space="preserve">
          <source>Chains of Commands</source>
          <target state="translated">명령의 사슬</target>
        </trans-unit>
        <trans-unit id="ff38765fb13efaef738615a48a439f19a5cd83a9" translate="yes" xml:space="preserve">
          <source>Challenges</source>
          <target state="translated">Challenges</target>
        </trans-unit>
        <trans-unit id="e9d5957fd0828bce48abe3b5750dbacb90724b17" translate="yes" xml:space="preserve">
          <source>Change &lt;code&gt;headers&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;headers&lt;/code&gt; 변경</target>
        </trans-unit>
        <trans-unit id="b9702c122dfeba4337afc89a1f47864c80a57678" translate="yes" xml:space="preserve">
          <source>Change Event</source>
          <target state="translated">이벤트 변경</target>
        </trans-unit>
        <trans-unit id="cb7dc796807b9ab5022a33275f9ee3c8e69c1814" translate="yes" xml:space="preserve">
          <source>Change defaults for &lt;a href=&quot;route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt; 기본값 변경</target>
        </trans-unit>
        <trans-unit id="4e2c7472c7f118d13b6615c813ef5f3bb88bbfde" translate="yes" xml:space="preserve">
          <source>Change encoding of Image fixture</source>
          <target state="translated">이미지 조명기의 인코딩 변경</target>
        </trans-unit>
        <trans-unit id="fd1b85264fcbc4d17611b365be82d47f08fcd7f2" translate="yes" xml:space="preserve">
          <source>Change print media</source>
          <target state="translated">인쇄 매체 변경</target>
        </trans-unit>
        <trans-unit id="a19816936e7591f2ed567c405afffb827b72b2c2" translate="yes" xml:space="preserve">
          <source>Change project access</source>
          <target state="translated">프로젝트 액세스 변경</target>
        </trans-unit>
        <trans-unit id="4d8a452dd61108c4f9903188f2226e4895ac11ea" translate="yes" xml:space="preserve">
          <source>Change subject</source>
          <target state="translated">주제 변경</target>
        </trans-unit>
        <trans-unit id="a2264852d7b841eaadc2180f020ff98d66665845" translate="yes" xml:space="preserve">
          <source>Change the DOM using &lt;code&gt;onBeforeScreenshot&lt;/code&gt; and &lt;code&gt;onAfterScreenshot&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;onBeforeScreenshot&lt;/code&gt; 및 &lt;code&gt;onAfterScreenshot&lt;/code&gt; 을 사용하여 DOM 변경</target>
        </trans-unit>
        <trans-unit id="f2dbfe168f59b09cdd3726a94e135012a9e0f249" translate="yes" xml:space="preserve">
          <source>Change the default delay for all routes</source>
          <target state="translated">모든 경로에 대한 기본 지연 변경</target>
        </trans-unit>
        <trans-unit id="f38779ae91156a63e5e148af488114e5555ae1b9" translate="yes" xml:space="preserve">
          <source>Change the default response headers for all routes</source>
          <target state="translated">모든 경로에 대한 기본 응답 헤더 변경</target>
        </trans-unit>
        <trans-unit id="166c9a2aabc185e0327b5e474ad649f10cfff354" translate="yes" xml:space="preserve">
          <source>Change the default selector strategy</source>
          <target state="translated">기본 선택기 전략 변경</target>
        </trans-unit>
        <trans-unit id="56c70055acbcb99d1f993ba5b54f607850d23ecf" translate="yes" xml:space="preserve">
          <source>Change the default timeout</source>
          <target state="translated">기본 시간 초과 변경</target>
        </trans-unit>
        <trans-unit id="d91b15d72bf7b781f4f7f4eb99724ab2ed3f45f0" translate="yes" xml:space="preserve">
          <source>Change the default whitelisting</source>
          <target state="translated">기본 허용 목록 변경</target>
        </trans-unit>
        <trans-unit id="62ef1f9374437dfd6cc2b229251b2231dfd04e7b" translate="yes" xml:space="preserve">
          <source>Change the orientation to landscape</source>
          <target state="translated">방향을 가로로 변경</target>
        </trans-unit>
        <trans-unit id="23f98c58cc44051fdbfdcba5fd6ae2a5007e02a3" translate="yes" xml:space="preserve">
          <source>Change the timeout</source>
          <target state="translated">타임 아웃 변경</target>
        </trans-unit>
        <trans-unit id="a70a7add1eb506ed4604875dbced1b0852644b98" translate="yes" xml:space="preserve">
          <source>Change the values of your configuration options from within tests</source>
          <target state="translated">테스트 내에서 구성 옵션의 값을 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="760ddcbbe7326d7e60cf68e623be61a82b0e2e29" translate="yes" xml:space="preserve">
          <source>Change who can access your Cypress project</source>
          <target state="translated">Cypress 프로젝트에 액세스 할 수있는 사람 변경</target>
        </trans-unit>
        <trans-unit id="71db0d5459437ab8a73c7cb7fb2e9838aab1352f" translate="yes" xml:space="preserve">
          <source>Changed &lt;code&gt;Linux&lt;/code&gt; build strategy which fixes not saving the internal &lt;code&gt;.cy cache&lt;/code&gt;. Also fixes not being able to update from the GUI. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/66&quot;&gt;#66&lt;/a&gt;.</source>
          <target state="translated">내부 &lt;code&gt;.cy cache&lt;/code&gt; 저장하지 않는 문제를 해결하는 &lt;code&gt;Linux&lt;/code&gt; 빌드 전략이 변경되었습니다 . 또한 GUI에서 업데이트 할 수없는 수정 사항도 있습니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/66&quot;&gt;# 66&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="002b928ed5585ac0c9d0ff7adc244b789bb0beee" translate="yes" xml:space="preserve">
          <source>Changed default &lt;a href=&quot;configuration#Timeouts&quot;&gt;&lt;code&gt;pageLoadTimeout&lt;/code&gt;&lt;/a&gt; from &lt;code&gt;30000&lt;/code&gt; to &lt;code&gt;60000&lt;/code&gt;.</source>
          <target state="translated">기본 &lt;a href=&quot;configuration#Timeouts&quot;&gt; &lt;code&gt;pageLoadTimeout&lt;/code&gt; &lt;/a&gt; 을 &lt;code&gt;30000&lt;/code&gt; 에서 &lt;code&gt;60000&lt;/code&gt; 으로 변경했습니다 .</target>
        </trans-unit>
        <trans-unit id="96e3651e54fb00eae4cdfca3b79c948c8407ab99" translate="yes" xml:space="preserve">
          <source>Changed default &lt;a href=&quot;configuration#Timeouts&quot;&gt;&lt;code&gt;responseTimeout&lt;/code&gt;&lt;/a&gt; from &lt;code&gt;20000&lt;/code&gt; to &lt;code&gt;30000&lt;/code&gt;.</source>
          <target state="translated">기본 &lt;a href=&quot;configuration#Timeouts&quot;&gt; &lt;code&gt;responseTimeout&lt;/code&gt; &lt;/a&gt; 을 &lt;code&gt;20000&lt;/code&gt; 에서 &lt;code&gt;30000&lt;/code&gt; 으로 변경했습니다 .</target>
        </trans-unit>
        <trans-unit id="5980ecc2994212ae97d9590a418df179431f268c" translate="yes" xml:space="preserve">
          <source>Changed default port from &lt;code&gt;3000&lt;/code&gt; to &lt;code&gt;2020&lt;/code&gt; to avoid standard port conflicts with commonly used back ends. Afterall, using Cypress is testing with 2020 vision. ;-)</source>
          <target state="translated">일반적으로 사용되는 백엔드와 표준 포트 충돌을 피하기 위해 기본 포트를 &lt;code&gt;3000&lt;/code&gt; 에서 &lt;code&gt;2020&lt;/code&gt; 으로 변경했습니다 . 결국 Cypress를 사용하는 것은 2020 비전으로 테스트합니다. ;-)</target>
        </trans-unit>
        <trans-unit id="ffe9065d2640d272843465bb16ea3a38ef177621" translate="yes" xml:space="preserve">
          <source>Changed return of &lt;a href=&quot;../../api/commands/clearcookies&quot;&gt;&lt;code&gt;cy.clearCookies()&lt;/code&gt;&lt;/a&gt; to return null (previously was returning Cookie that was cleared).</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/clearcookies&quot;&gt; &lt;code&gt;cy.clearCookies()&lt;/code&gt; &lt;/a&gt; 반환 값이 null을 반환하도록 변경 되었습니다 (이전에는 쿠키를 반환했습니다).</target>
        </trans-unit>
        <trans-unit id="ed16957486bec94f03a359b34fe4fa8d84c626df" translate="yes" xml:space="preserve">
          <source>Changed return of &lt;a href=&quot;../../api/commands/getcookies&quot;&gt;&lt;code&gt;cy.getCookies()&lt;/code&gt;&lt;/a&gt; to return an array of cookies, each with properties include name, value, etc.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/getcookies&quot;&gt; &lt;code&gt;cy.getCookies()&lt;/code&gt; &lt;/a&gt; 반환 값이 쿠키 배열을 반환하도록 변경되었습니다 . 각 쿠키에는 이름, 값 등이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="b9d187a27f74ad153f456df89c8ffd6ae4842fc8" translate="yes" xml:space="preserve">
          <source>Changed scrolling elements into view to use top strategy instead of bottom which fixes times where the middle of an element was not yet in he viewport. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/42&quot;&gt;#42&lt;/a&gt;.</source>
          <target state="translated">요소 중간이 아직 뷰포트에 있지 않은 시간을 수정하는 하단 대신 상단 전략을 사용하도록 스크롤 요소를보기로 변경했습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/42&quot;&gt;# 42&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="56a626b11951be7360d0da6dc57085d8f803fa53" translate="yes" xml:space="preserve">
          <source>Changed the &lt;a href=&quot;https://github.com/cypress-io/cypress/tree/develop/packages/desktop-gui&quot;&gt;Test Runner&lt;/a&gt; to use &lt;code&gt;JWT&lt;/code&gt; for authorization. &lt;strong&gt;You will have to log in again&lt;/strong&gt;.</source>
          <target state="translated">&lt;code&gt;JWT&lt;/code&gt; 를 권한 부여 에 사용 하도록 &lt;a href=&quot;https://github.com/cypress-io/cypress/tree/develop/packages/desktop-gui&quot;&gt;테스트 러너&lt;/a&gt; 를 변경했습니다 . &lt;strong&gt;다시 로그인해야합니다&lt;/strong&gt; .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c07c367bdf8a3831c57704eca86fd8443094c7a0" translate="yes" xml:space="preserve">
          <source>Changed url strategy for sending down &lt;code&gt;spec&lt;/code&gt; files.</source>
          <target state="translated">&lt;code&gt;spec&lt;/code&gt; 파일 을 전송하기위한 URL 전략이 변경되었습니다 .</target>
        </trans-unit>
        <trans-unit id="164b3d4809f98d0458414f1bf9cf3c9dcba16bb5" translate="yes" xml:space="preserve">
          <source>Changelog</source>
          <target state="translated">Changelog</target>
        </trans-unit>
        <trans-unit id="8aa57de6dce6ee1c35c6aba7426503281876b258" translate="yes" xml:space="preserve">
          <source>Changes</source>
          <target state="translated">Changes</target>
        </trans-unit>
        <trans-unit id="47cf14fbbe4e51d10d131aad5d8ffaa121098222" translate="yes" xml:space="preserve">
          <source>Changes the Cypress binary cache location</source>
          <target state="translated">Cypress 바이너리 캐시 위치를 변경합니다</target>
        </trans-unit>
        <trans-unit id="c3627dab723119265222862e8a9135ba0363246c" translate="yes" xml:space="preserve">
          <source>Changes the hosted url to match that of the application under test.</source>
          <target state="translated">테스트중인 응용 프로그램의 URL과 일치하도록 호스팅 된 URL을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="1f068e5ae02669bb727f7da73d357bc2e22aa692" translate="yes" xml:space="preserve">
          <source>Changing the Browserify options lets you:</source>
          <target state="translated">Browserify 옵션을 변경하면 다음을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f448405e7e77b87d4af0899aad87267f2b9de4ea" translate="yes" xml:space="preserve">
          <source>Check a custom property</source>
          <target state="translated">맞춤 속성 확인</target>
        </trans-unit>
        <trans-unit id="e50fa5ae6d6d5bcdbff5e8ef413067e159d7fccc" translate="yes" xml:space="preserve">
          <source>Check all checkboxes</source>
          <target state="translated">모든 확인란을 선택하십시오</target>
        </trans-unit>
        <trans-unit id="d32e13a4dc0d0ff2ccb96d057fcab5edef3cfdc4" translate="yes" xml:space="preserve">
          <source>Check an invisible checkbox</source>
          <target state="translated">보이지 않는 확인란을 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="61f4e80ba9d1f4a5d58f0877fb993108dc025089" translate="yes" xml:space="preserve">
          <source>Check checkbox(es) or radio(s).</source>
          <target state="translated">확인란 또는 라디오를 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="4f3560bedeca72f288dc3b5f1567d03a628ac068" translate="yes" xml:space="preserve">
          <source>Check location for query params and pathname</source>
          <target state="translated">쿼리 매개 변수 및 경로 이름의 위치 확인</target>
        </trans-unit>
        <trans-unit id="4768131d00ff541288147c29afe6d12a0f388e57" translate="yes" xml:space="preserve">
          <source>Check other sources of truth (like your server or database).</source>
          <target state="translated">서버 나 데이터베이스와 같은 다른 출처를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="82ec9274688488306135ddaf48212b3e595053fb" translate="yes" xml:space="preserve">
          <source>Check out our &amp;lsquo;XHR Web Forms&amp;rsquo; example recipe using &lt;code&gt;cy.route()&lt;/code&gt; to simulate a &lt;code&gt;503&lt;/code&gt; on &lt;code&gt;POST&lt;/code&gt; to login</source>
          <target state="translated">우리의 사용 'XHR 웹 양식'예 조리법 확인 &lt;code&gt;cy.route()&lt;/code&gt; 시뮬레이션 &lt;code&gt;503&lt;/code&gt; 에 &lt;code&gt;POST&lt;/code&gt; 로그인에</target>
        </trans-unit>
        <trans-unit id="ae68238d2931f0991c3b6b6f22786eb45b69fa69" translate="yes" xml:space="preserve">
          <source>Check out our &lt;a href=&quot;../../api/plugins/after-screenshot-api&quot;&gt;After Screenshot API docs&lt;/a&gt; which describe how to use this event.</source>
          <target state="translated">이 이벤트를 사용하는 방법을 설명하는 &lt;a href=&quot;../../api/plugins/after-screenshot-api&quot;&gt;After Screenshot API 문서&lt;/a&gt; 를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="286570bd4a3d3cbc1beb60886c8c179abd17a319" translate="yes" xml:space="preserve">
          <source>Check out our &lt;a href=&quot;../../api/plugins/browser-launch-api&quot;&gt;Browser Launch API docs&lt;/a&gt; which describe how to use this event.</source>
          <target state="translated">이 이벤트를 사용하는 방법을 설명하는 &lt;a href=&quot;../../api/plugins/browser-launch-api&quot;&gt;브라우저 실행 API 문서&lt;/a&gt; 를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="c51d0d90ced866ef2875f4023c58a1fa429c5dcf" translate="yes" xml:space="preserve">
          <source>Check out our &lt;a href=&quot;../../api/plugins/configuration-api&quot;&gt;Configuration API docs&lt;/a&gt; which describe how to use this event.</source>
          <target state="translated">이 이벤트를 사용하는 방법을 설명하는 &lt;a href=&quot;../../api/plugins/configuration-api&quot;&gt;구성 API 문서&lt;/a&gt; 를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="bf5361a399e5c488a33498468764383ba37c9adb" translate="yes" xml:space="preserve">
          <source>Check out our &lt;a href=&quot;../../api/plugins/preprocessors-api&quot;&gt;File Preprocessor API docs&lt;/a&gt; which describe how to use this event.</source>
          <target state="translated">이 이벤트를 사용하는 방법을 설명하는 &lt;a href=&quot;../../api/plugins/preprocessors-api&quot;&gt;File Preprocessor API 문서&lt;/a&gt; 를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="b0bc22ca4006e68be0287faab8c505b2a983cac7" translate="yes" xml:space="preserve">
          <source>Check out our &lt;a href=&quot;../guides/parallelization&quot;&gt;guide on parallelizing runs&lt;/a&gt; and when to use the &lt;a href=&quot;../guides/command-line#cypress-run-ci-build-id-lt-id-gt&quot;&gt;&lt;code&gt;--ci-build-id&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">&lt;a href=&quot;../guides/parallelization&quot;&gt;병렬화 실행에&lt;/a&gt; 대한 안내서 와 &lt;a href=&quot;../guides/command-line#cypress-run-ci-build-id-lt-id-gt&quot;&gt; &lt;code&gt;--ci-build-id&lt;/code&gt; &lt;/a&gt; 옵션 사용시기를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="4372d5c1ff331c99e413a0c0158593500e7f4d08" translate="yes" xml:space="preserve">
          <source>Check out our &lt;a href=&quot;../guides/tooling/plugins-guide&quot;&gt;Plugins Guide&lt;/a&gt; or our &lt;a href=&quot;../api/plugins/writing-a-plugin&quot;&gt;API docs&lt;/a&gt; for writing a plugin.</source>
          <target state="translated">&lt;a href=&quot;../guides/tooling/plugins-guide&quot;&gt;플러그인&lt;/a&gt; 작성에 대한 플러그인 가이드 또는 &lt;a href=&quot;../api/plugins/writing-a-plugin&quot;&gt;API 문서&lt;/a&gt; 를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="c0777442410cab66b3f5e9f950dca694e91849fa" translate="yes" xml:space="preserve">
          <source>Check out our &lt;a href=&quot;https://github.com/cypress-io/eslint-plugin-cypress&quot;&gt;Cypress ESLint plugin&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/cypress-io/eslint-plugin-cypress&quot;&gt;Cypress ESLint 플러그인을&lt;/a&gt; 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="52ba348f92ec1a2bf83ba118a90e17c390a5fab7" translate="yes" xml:space="preserve">
          <source>Check out our example recipe extending chai with new assertions.</source>
          <target state="translated">새로운 주장으로 chai를 확장하는 예제 레시피를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="e9b767f3449382c93b6af483e67e9ea4f4103526" translate="yes" xml:space="preserve">
          <source>Check out our example recipe of logging in by typing username and password in HTML web forms</source>
          <target state="translated">HTML 웹 양식에 사용자 이름과 비밀번호를 입력하여 로그인 예제 레시피를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="b1d210aaba6af88f042bef8e02a138a36c9e3ba2" translate="yes" xml:space="preserve">
          <source>Check out our example recipe on testing &lt;code&gt;window.fetch&lt;/code&gt; using &lt;code&gt;.its()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.its()&lt;/code&gt; 사용하여 &lt;code&gt;window.fetch&lt;/code&gt; 테스트에서 예제 레시피를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="0070f68ee4c88cb3cac34493132a51937e6c55ad" translate="yes" xml:space="preserve">
          <source>Check out our example recipe on testing hover and working with hidden elements</source>
          <target state="translated">호버 테스트 및 숨겨진 요소 작업에 대한 예제 레시피를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="06702834e58a81747257fb0ff404f4646b17c53c" translate="yes" xml:space="preserve">
          <source>Check out our example recipe testing spying, stubbing and time</source>
          <target state="translated">스파이, 스터 빙 및 시간의 레시피 테스트 예제를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="7cb3ce610a9707b35468d1778ec5be6b8b67d2c3" translate="yes" xml:space="preserve">
          <source>Check out our example recipe testing spying, stubbing and time.</source>
          <target state="translated">스파이, 스터 빙 및 시간의 레시피 테스트 예제를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="5c934a22639debdd62befc7a82f85a5b57fc1fa6" translate="yes" xml:space="preserve">
          <source>Check out our example recipe triggering mouse and drag events to test drag and drop</source>
          <target state="translated">드래그 앤 드롭을 테스트하기 위해 마우스 및 드래그 이벤트를 트리거하는 예제 레시피를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="298273458e18e8e4608b67253b99d4e09c98258c" translate="yes" xml:space="preserve">
          <source>Check out our example recipe using &lt;code&gt;cy.fixture()&lt;/code&gt; to bootstrap data for our application.</source>
          <target state="translated">애플리케이션의 데이터를 부트 스트랩하기 위해 &lt;code&gt;cy.fixture()&lt;/code&gt; 를 사용하여 레시피 예제를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="a0b7d14f192ac95e2f293545c9c9da33dd7af366" translate="yes" xml:space="preserve">
          <source>Check out our example recipe using &lt;code&gt;cy.request()&lt;/code&gt; for HTML web forms</source>
          <target state="translated">HTML 웹 양식에 &lt;code&gt;cy.request()&lt;/code&gt; 를 사용하여 예제 레시피를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="8765838968fb1c10fc04109747e1b70375eb877a" translate="yes" xml:space="preserve">
          <source>Check out our example recipe using &lt;code&gt;cy.route()&lt;/code&gt; to POST for login in HTML web forms</source>
          <target state="translated">HTML 웹 양식으로 로그인하기 위해 &lt;code&gt;cy.route()&lt;/code&gt; 를 사용하여 POST하는 예제 레시피를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="b5faae065c8bab1b4694249567a38a6935110d0c" translate="yes" xml:space="preserve">
          <source>Check out our example recipe where we use &lt;code&gt;cy.invoke('removeAttr', 'target')&lt;/code&gt; to test clicking on a link without opening in a new tab</source>
          <target state="translated">&lt;code&gt;cy.invoke('removeAttr', 'target')&lt;/code&gt; 을 사용하여 새 탭에서 열지 않고 링크 클릭을 테스트 하는 레시피 예제를 확인 하십시오.</target>
        </trans-unit>
        <trans-unit id="16bb5114dd6875c392e5649e6af9c792cea778cd" translate="yes" xml:space="preserve">
          <source>Check out our example recipe where we use &lt;code&gt;cy.invoke('show')&lt;/code&gt; and &lt;code&gt;cy.invoke('trigger')&lt;/code&gt; to click an element that is only visible on hover</source>
          <target state="translated">&lt;code&gt;cy.invoke('show')&lt;/code&gt; 및 &lt;code&gt;cy.invoke('trigger')&lt;/code&gt; 를 사용하여 호버에서만 볼 수있는 요소를 클릭하는 레시피 예제를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="c6f3335e78ca0eeab36fff282ecf4f376fe5a662" translate="yes" xml:space="preserve">
          <source>Check out our example recipe where we use &lt;code&gt;cy.invoke('text')&lt;/code&gt; to test against HTML content in &amp;lsquo;Bootstrapping your App&amp;rsquo;</source>
          <target state="translated">&lt;code&gt;cy.invoke('text')&lt;/code&gt; 를 사용하여 '앱 부트 스트랩'에서 HTML 콘텐츠에 대해 테스트 하는 예제 레시피를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="cb040939bb0d48e5c9567dae081783d1f9b6b468" translate="yes" xml:space="preserve">
          <source>Check out our example recipes for &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html&quot;&gt;unit testing&lt;/a&gt; and &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Unit-Testing&quot;&gt;unit testing React components&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html&quot;&gt;단위 테스트&lt;/a&gt; 및 &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Unit-Testing&quot;&gt;단위 테스트 React 구성 요소에&lt;/a&gt; 대한 예제 레시피를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="bd3e75b3e26cef8f50ab48afe08c2033c68ea7db" translate="yes" xml:space="preserve">
          <source>Check out our example recipes using &lt;code&gt;cy.getCookie()&lt;/code&gt; to test &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Logging-In&quot;&gt;logging in using HTML web forms&lt;/a&gt;, &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Logging-In&quot;&gt;logging in using XHR web forms&lt;/a&gt; and &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Logging-In&quot;&gt;logging in with single sign on&lt;/a&gt;</source>
          <target state="translated">사용 예제 조리법 확인 &lt;code&gt;cy.getCookie()&lt;/code&gt; 테스트에 &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Logging-In&quot;&gt;HTML 웹 양식을 사용하여 로깅을&lt;/a&gt; , &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Logging-In&quot;&gt;XHR 웹 양식을 사용하여 로그인&lt;/a&gt; 및 &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Logging-In&quot;&gt;하나의 기호로 로그인을&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="144d8f82ec26f3470d0c20a09047cb7ce3b02584" translate="yes" xml:space="preserve">
          <source>Check out our example recipes using &lt;code&gt;cy.visit()&lt;/code&gt;&amp;lsquo;s &lt;code&gt;onBeforeLoad&lt;/code&gt; option to:</source>
          <target state="translated">&lt;code&gt;cy.visit()&lt;/code&gt; 의 &lt;code&gt;onBeforeLoad&lt;/code&gt; 옵션을 사용하여 레시피 예제를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="c65343a47883a3d046d980e83838ae5025ee993f" translate="yes" xml:space="preserve">
          <source>Check out our guide for working with spies, stubs, and clocks.</source>
          <target state="translated">스파이, 스터브 및 시계 작업에 대한 가이드를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="bbf99657b620f66bb8be3ff60e3326da8ce19528" translate="yes" xml:space="preserve">
          <source>Check out our guide to writing and organizing tests.</source>
          <target state="translated">테스트 작성 및 구성에 대한 안내서를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="76902887dbb29462ab50a1f72e3e4927bfa56b7f" translate="yes" xml:space="preserve">
          <source>Check out our recipe using &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Fundamentals&quot;&gt;ES2015 and CommonJS modules&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Fundamentals&quot;&gt;ES2015 및 CommonJS 모듈을&lt;/a&gt; 사용하여 레시피를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="8cfe59349c9cb95a325115251fac516351c1ca53" translate="yes" xml:space="preserve">
          <source>Check that Chrome specific styles are applied</source>
          <target state="translated">Chrome 특정 스타일이 적용되었는지 확인</target>
        </trans-unit>
        <trans-unit id="121b5622e02d6e75f99cc9af32ea26833a7911ad" translate="yes" xml:space="preserve">
          <source>Check the checkboxes with the values &amp;lsquo;ga&amp;rsquo; and &amp;lsquo;ca&amp;rsquo;</source>
          <target state="translated">'ga'및 'ca'값으로 확인란을 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="55921b8d3e5c24dfbea1f13d63a77430aaa43ba6" translate="yes" xml:space="preserve">
          <source>Check the element with id of &amp;lsquo;saveUserName&amp;rsquo;</source>
          <target state="translated">ID가 'saveUserName'인 요소를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="3a547dcb1fef8a5633745d0e1bfe1ce7cc91ffb8" translate="yes" xml:space="preserve">
          <source>Check them out in &lt;a href=&quot;../references/configuration&quot;&gt;Configuration&lt;/a&gt;!</source>
          <target state="translated">&lt;a href=&quot;../references/configuration&quot;&gt;구성&lt;/a&gt; 에서 확인하십시오 !</target>
        </trans-unit>
        <trans-unit id="def993bb4bf6ee1b395f22333500dd821db19f5e" translate="yes" xml:space="preserve">
          <source>Check your Developer Tools Console for the actual error - it should be printed there.</source>
          <target state="translated">개발자 도구 콘솔에서 실제 오류를 확인하십시오. 오류가 인쇄되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="0e541a2a7a257b0faf46be512c0eb02d487b617a" translate="yes" xml:space="preserve">
          <source>Checking your email to see if your server sent a &amp;ldquo;forgot password&amp;rdquo; email.</source>
          <target state="translated">이메일에서 서버가&amp;ldquo;비밀번호를 잊어 버렸습니다&amp;rdquo;라는 이메일을 보냈는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="d3e9cd47db0cd4d5d3988727ebbd002b5963bffe" translate="yes" xml:space="preserve">
          <source>Child Commands</source>
          <target state="translated">자식 명령</target>
        </trans-unit>
        <trans-unit id="a645ef9de2489c3237beef1a5012a7941d8fffec" translate="yes" xml:space="preserve">
          <source>Child commands are always chained off of a &lt;strong&gt;parent&lt;/strong&gt; command, or another &lt;strong&gt;child&lt;/strong&gt; command.</source>
          <target state="translated">자식 명령은 항상 &lt;strong&gt;부모&lt;/strong&gt; 명령 또는 다른 &lt;strong&gt;자식&lt;/strong&gt; 명령과 연결되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="21def181d7294faef1558f010f6a68c1edc82a8c" translate="yes" xml:space="preserve">
          <source>Choose to associate &lt;strong&gt;All repositories&lt;/strong&gt; or only select GitHub repositories with your Cypress GitHub App installation.</source>
          <target state="translated">&lt;strong&gt;모든 리포지토리&lt;/strong&gt; 를 연결하도록 선택 하거나 Cypress GitHub 앱 설치와 함께 GitHub 리포지토리 만 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="6d7d90f6786892c846565de2483085c6bcc3d6cb" translate="yes" xml:space="preserve">
          <source>Choose to not fail on non-zero exit and assert on code and stderr</source>
          <target state="translated">0이 아닌 종료시 실패하지 않도록 선택하고 코드 및 stderr에 대해 주장하십시오.</target>
        </trans-unit>
        <trans-unit id="cd582387a11c5e151923c7fd85abdb2884edf320" translate="yes" xml:space="preserve">
          <source>Choose whether this project is Public or Private.</source>
          <target state="translated">이 프로젝트가 공개인지 비공개인지 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="aa8351b817c778f9ed8a7afc280131e97fb365f6" translate="yes" xml:space="preserve">
          <source>Choose who owns the project. You can personally own it or select an organization you&amp;rsquo;ve created. If you do not have any organizations, click &lt;strong&gt;Create organization&lt;/strong&gt;. Organizations work just like they do in GitHub. They enable you to separate your personal and work projects. &lt;a href=&quot;organizations&quot;&gt;Read more about organizations&lt;/a&gt;.</source>
          <target state="translated">프로젝트를 소유 한 사람을 선택하십시오. 개인적으로 소유하거나 만든 조직을 선택할 수 있습니다. 조직이없는 경우 조직 &lt;strong&gt;만들기를&lt;/strong&gt; 클릭 &lt;strong&gt;하십시오&lt;/strong&gt; . 조직은 GitHub에서와 마찬가지로 작동합니다. 개인 프로젝트와 업무 프로젝트를 분리 할 수 ​​있습니다. &lt;a href=&quot;organizations&quot;&gt;조직에 대해 자세히 알아보십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="218e75c7a912404b048fff0747e40108873b6334" translate="yes" xml:space="preserve">
          <source>Chrome</source>
          <target state="translated">Chrome</target>
        </trans-unit>
        <trans-unit id="f4fa3ab76e5e90db09cca798babcdad498d4e5a5" translate="yes" xml:space="preserve">
          <source>Chrome Browsers</source>
          <target state="translated">크롬 브라우저</target>
        </trans-unit>
        <trans-unit id="ebacd7ba7696aa6ea2a56950abaffb0cdd6bb789" translate="yes" xml:space="preserve">
          <source>Chrome extension whitelisting</source>
          <target state="translated">Chrome 확장 프로그램 허용 목록</target>
        </trans-unit>
        <trans-unit id="259443eb4b18369de67344ac935d9792e6e16d38" translate="yes" xml:space="preserve">
          <source>Chrome, Chromium, or Canary</source>
          <target state="translated">크롬, 크롬 또는 카나리아</target>
        </trans-unit>
        <trans-unit id="32166e83eed3818d45d2cbecbe2e6cf85528e265" translate="yes" xml:space="preserve">
          <source>Chromium</source>
          <target state="translated">Chromium</target>
        </trans-unit>
        <trans-unit id="1cc7820a08e28aa22dd2e6db74a83b75abc240f5" translate="yes" xml:space="preserve">
          <source>Circle</source>
          <target state="translated">Circle</target>
        </trans-unit>
        <trans-unit id="743a2d5609a7296d3d734c6e0b1f6d37a8c23170" translate="yes" xml:space="preserve">
          <source>CircleCI</source>
          <target state="translated">CircleCI</target>
        </trans-unit>
        <trans-unit id="6d5178edf78ebc81db787a70d73b948726802a59" translate="yes" xml:space="preserve">
          <source>CircleCI Cypress Orb</source>
          <target state="translated">CircleCI 사이프러스 오브</target>
        </trans-unit>
        <trans-unit id="0bda454dd959b1a0bf2d16693184fd413629861a" translate="yes" xml:space="preserve">
          <source>Clarified on errors related to not being able to run in CI. Previously there was a &amp;ldquo;catch all&amp;rdquo; error indicating your Cypress API Key was invalid. This was oftentimes incorrect. More specific errors have been added.</source>
          <target state="translated">CI에서 실행할 수없는 오류가 명확 해졌습니다. 이전에는 Cypress API 키가 유효하지 않음을 나타내는&amp;ldquo;캐치 모두&amp;rdquo;오류가있었습니다. 이것은 종종 틀렸다. 더 구체적인 오류가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="f0d4ea6c62e18a1e68830b556b756bc25664729b" translate="yes" xml:space="preserve">
          <source>Clarified the &amp;ldquo;Default Message&amp;rdquo; page when you have not &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; your application yet.</source>
          <target state="translated">아직 어플리케이션을 &lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 하지 않았을 때&amp;ldquo;기본 메시지&amp;rdquo;페이지가 명확 해졌습니다 .</target>
        </trans-unit>
        <trans-unit id="41ff354b2b330bd1f8a0587675e43cb32a731f33" translate="yes" xml:space="preserve">
          <source>Class</source>
          <target state="translated">Class</target>
        </trans-unit>
        <trans-unit id="83d4ab2218e544353bc7c879f0f5971c5c7e5f33" translate="yes" xml:space="preserve">
          <source>Cleaned up the URL by removing some unused content.</source>
          <target state="translated">사용하지 않는 콘텐츠를 제거하여 URL을 정리했습니다.</target>
        </trans-unit>
        <trans-unit id="a6a8e81a4fc837ec2fc226c8ea0d75c7628811be" translate="yes" xml:space="preserve">
          <source>Clear App Data</source>
          <target state="translated">명확한 앱 데이터</target>
        </trans-unit>
        <trans-unit id="8138a3e59340c16a058710e4394584afda1a8a3e" translate="yes" xml:space="preserve">
          <source>Clear Cypress cache</source>
          <target state="translated">Cypress 캐시 지우기</target>
        </trans-unit>
        <trans-unit id="a6db0cada346552ec5eae029c9e1051d55fcf5e6" translate="yes" xml:space="preserve">
          <source>Clear a cookie after logging in</source>
          <target state="translated">로그인 후 쿠키 삭제</target>
        </trans-unit>
        <trans-unit id="c12d3b38c18c36e38c58610a06ad7d4f4f8db7e5" translate="yes" xml:space="preserve">
          <source>Clear a specific browser cookie.</source>
          <target state="translated">특정 브라우저 쿠키를 지우십시오.</target>
        </trans-unit>
        <trans-unit id="3ca258140fb71fc08b2e62d3d742fb818922dc81" translate="yes" xml:space="preserve">
          <source>Clear all browser cookies for current domain and subdomain.</source>
          <target state="translated">현재 도메인 및 하위 도메인에 대한 모든 브라우저 쿠키를 지우십시오.</target>
        </trans-unit>
        <trans-unit id="9ef0896259882d1abdaf804bdc64b7450bc968d9" translate="yes" xml:space="preserve">
          <source>Clear all cookies after logging in</source>
          <target state="translated">로그인 후 모든 쿠키를 지우십시오</target>
        </trans-unit>
        <trans-unit id="6a071e15fb440304023d8103523c431894ca230f" translate="yes" xml:space="preserve">
          <source>Clear all localStorage</source>
          <target state="translated">모든 로컬 저장소 지우기</target>
        </trans-unit>
        <trans-unit id="487f99802f33ae77928cf631445338abdeb3542b" translate="yes" xml:space="preserve">
          <source>Clear all localStorage matching &lt;code&gt;/app-/&lt;/code&gt; RegExp</source>
          <target state="translated">&lt;code&gt;/app-/&lt;/code&gt; RegExp와 일치하는 모든 localStorage를 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="87462777e65e17c8721efd27787a17e45f675eb3" translate="yes" xml:space="preserve">
          <source>Clear data in localStorage for current domain and subdomain.</source>
          <target state="translated">현재 도메인 및 하위 도메인에 대한 localStorage의 데이터를 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="b3b763845e3000c5d17c6b2c69eca72c64c397e8" translate="yes" xml:space="preserve">
          <source>Clear localStorage with the key &amp;lsquo;appName&amp;rsquo;</source>
          <target state="translated">'appName'키로 localStorage를 지우십시오.</target>
        </trans-unit>
        <trans-unit id="418791d7f5458588627ad5ef88fcbb506389e57a" translate="yes" xml:space="preserve">
          <source>Clear the contents of the Cypress cache. This is useful when you want Cypress to clear out all installed versions of Cypress that may be cached on your machine. After running this command, you will need to run &lt;code&gt;cypress install&lt;/code&gt; before running Cypress again.</source>
          <target state="translated">Cypress 캐시의 내용을 지우십시오. Cypress가 시스템에 캐시되어있을 수있는 설치된 모든 버전의 Cypress를 지우도록하려는 경우에 유용합니다. 이 명령을 실행 한 후 Cypress를 다시 실행하기 전에 &lt;code&gt;cypress install&lt;/code&gt; 을 실행해야 합니다.</target>
        </trans-unit>
        <trans-unit id="096b6f6e0e4881f86d8f079c46286c1b088fed27" translate="yes" xml:space="preserve">
          <source>Clear the input and type a new value</source>
          <target state="translated">입력을 지우고 새로운 값을 입력하십시오</target>
        </trans-unit>
        <trans-unit id="e705e46ce8ca0eeadd70b31d6169e90a8aa809ae" translate="yes" xml:space="preserve">
          <source>Clear the value of an &lt;code&gt;input&lt;/code&gt; or &lt;code&gt;textarea&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;input&lt;/code&gt; 또는 &lt;code&gt;textarea&lt;/code&gt; 의 값을 지우십시오 .</target>
        </trans-unit>
        <trans-unit id="9abd58c373f91bc8e076913f544b5f307d4214fc" translate="yes" xml:space="preserve">
          <source>Click &amp;ldquo;Next&amp;rdquo;</source>
          <target state="translated">&quot;다음&quot;을 클릭하십시오</target>
        </trans-unit>
        <trans-unit id="598d69e1e4c2af4e1dc4e74321c3ce6681b167df" translate="yes" xml:space="preserve">
          <source>Click &amp;ldquo;Next&amp;rdquo; again</source>
          <target state="translated">&quot;다음&quot;을 다시 클릭하십시오</target>
        </trans-unit>
        <trans-unit id="1b6215eab430a61828fd367ea9c12ef226542655" translate="yes" xml:space="preserve">
          <source>Click &amp;ldquo;Next&amp;rdquo; again, then &amp;lsquo;Resume&amp;rsquo;</source>
          <target state="translated">&quot;다음&quot;을 다시 클릭 한 다음 '다시 시작'</target>
        </trans-unit>
        <trans-unit id="52ab6f1b8c88370737f264d45b627b49475818c1" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Create New Key&lt;/strong&gt;. A new key will be automatically generated for your project.</source>
          <target state="translated">&lt;strong&gt;새 키 작성을&lt;/strong&gt; 클릭 &lt;strong&gt;하십시오&lt;/strong&gt; . 프로젝트에 대한 새 키가 자동으로 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="6061dade670fc2fa48f86af4e96c8d10313b7c09" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Delete&lt;/strong&gt; beside the record key you want to delete.</source>
          <target state="translated">&lt;strong&gt;삭제&lt;/strong&gt; 하려는 레코드 키 옆에있는 &lt;strong&gt;삭제를&lt;/strong&gt; 클릭하십시오 .</target>
        </trans-unit>
        <trans-unit id="e00e0bffead7622e972ea8ef3df7b0b3d975d274" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Set up Project to Record&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;녹화 할 프로젝트 설정을&lt;/strong&gt; 클릭 &lt;strong&gt;하십시오&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="c340e5a9ab9c7a60a37dd0f3e5716c3c3abcc2fc" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Setup Project&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;설정 프로젝트를&lt;/strong&gt; 클릭하십시오 .</target>
        </trans-unit>
        <trans-unit id="94298b3a9fbede230280ca097e6943ce959fa1bc" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Users&lt;/strong&gt;, then &lt;strong&gt;Invite User&lt;/strong&gt;. &lt;em&gt;Note: you must have the &lt;a href=&quot;#User-roles&quot;&gt;role of 'owner' or 'admin'&lt;/a&gt; to invite users.&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;사용자를&lt;/strong&gt; 클릭 한 다음 &lt;strong&gt;사용자 초대를&lt;/strong&gt; 클릭하십시오 . &lt;em&gt;참고 : 사용자를 초대하려면 &lt;a href=&quot;#User-roles&quot;&gt;'소유자'또는 '관리자'역할&lt;/a&gt; 이 있어야합니다 .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="92ef54400efe775b2ca14012b53ad3792e80d7da" translate="yes" xml:space="preserve">
          <source>Click a DOM element.</source>
          <target state="translated">DOM 요소를 클릭하십시오.</target>
        </trans-unit>
        <trans-unit id="5467898d66466265eb5e6b64ab4791eb71104d92" translate="yes" xml:space="preserve">
          <source>Click all buttons found on the page</source>
          <target state="translated">페이지에있는 모든 버튼을 클릭하십시오</target>
        </trans-unit>
        <trans-unit id="419965f25c82bbbe5092bb182e2f07a13ea2fec4" translate="yes" xml:space="preserve">
          <source>Click events are now issued in the exact center of an element (taking into account 2d transforms) and provide the coordinates in the command console and in the actual event</source>
          <target state="translated">클릭 이벤트는 이제 요소의 정확한 중심 (2d 변환을 고려하여)으로 발행되고 명령 콘솔과 실제 이벤트에서 좌표를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="3eefc209f30a5c33ca34d3dd8bc36144b5b8242b" translate="yes" xml:space="preserve">
          <source>Click events are now replicated &lt;em&gt;almost&lt;/em&gt; identically to the W3C click spec. They should behave for all intents and purposes, identically to real clicks in the browser.</source>
          <target state="translated">클릭 이벤트는 이제 W3C 클릭 사양과 &lt;em&gt;거의&lt;/em&gt; 동일하게 복제 됩니다. 브라우저의 실제 클릭과 동일하게 모든 의도와 목적으로 작동해야합니다.</target>
        </trans-unit>
        <trans-unit id="1e6b04f01e1f5a0bc6cfdffc3d40e6fcee740b2c" translate="yes" xml:space="preserve">
          <source>Click events now display event information about the &lt;code&gt;mousedown&lt;/code&gt; / &lt;code&gt;mouseup&lt;/code&gt; / &lt;code&gt;click&lt;/code&gt; default action + propagation in the command console.</source>
          <target state="translated">클릭 이벤트는 이제 명령 콘솔에서 &lt;code&gt;mousedown&lt;/code&gt; / &lt;code&gt;mouseup&lt;/code&gt; / &lt;code&gt;click&lt;/code&gt; 기본 동작 + 전파에 대한 이벤트 정보를 표시 합니다.</target>
        </trans-unit>
        <trans-unit id="bd422ee18fc1fb0b047f765afb20776ce449d5d5" translate="yes" xml:space="preserve">
          <source>Click events now take into account whether the associated element is being covered up by another element, and will retry or fail with an exact error message if the click was unable to be issued due to this reason.</source>
          <target state="translated">클릭 이벤트는 이제 연관된 요소가 다른 요소에 의해 커버되는지 여부를 고려하고이 이유로 클릭을 발행 할 수없는 경우 정확한 오류 메시지와 함께 재시도 또는 실패합니다.</target>
        </trans-unit>
        <trans-unit id="3f3c88fcab7f5f3f182a08f90706ede6e6268f80" translate="yes" xml:space="preserve">
          <source>Click events will issue the click to the topmost element based on the click coordinates and not necessarily to the element you requested to e clicked (which simulates exactly how a real click works). If this happens it is noted in the command console and provides the &lt;code&gt;Actual Element Clicked&lt;/code&gt;.</source>
          <target state="translated">클릭 이벤트는 클릭 좌표를 기반으로 클릭을 요청한 요소가 아니라 클릭 좌표를 기준으로 최상위 요소에 클릭을 발생시킵니다 (실제 클릭의 작동 방식을 정확하게 시뮬레이션 함). 이 경우 명령 콘솔에 표시되고 &lt;code&gt;Actual Element Clicked&lt;/code&gt; 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="36e220a74b271d8eb88adb9bf598b1f366ea7fbe" translate="yes" xml:space="preserve">
          <source>Click events will now intelligently provide &lt;code&gt;focus&lt;/code&gt; to the first focusable element on the stack at the click coordinates, or will give &lt;code&gt;focus&lt;/code&gt; to the window.</source>
          <target state="translated">클릭 이벤트는 이제 클릭 좌표에서 스택의 첫 번째 포커스 가능 요소에 지능적으로 &lt;code&gt;focus&lt;/code&gt; 를 제공 하거나 창에 &lt;code&gt;focus&lt;/code&gt; 를 둡니다 .</target>
        </trans-unit>
        <trans-unit id="4304df7b3622bb75a1caddfde8624611ee0cf5a4" translate="yes" xml:space="preserve">
          <source>Click it.</source>
          <target state="translated">클릭하세요.</target>
        </trans-unit>
        <trans-unit id="4d2ff8b106942392561b1a48333b5c5716140885" translate="yes" xml:space="preserve">
          <source>Click on it</source>
          <target state="translated">그것을 클릭하십시오</target>
        </trans-unit>
        <trans-unit id="b572ed50787e22e1a6e5dd0119b2848e714bc82a" translate="yes" xml:space="preserve">
          <source>Click on the &lt;strong&gt;Runs&lt;/strong&gt; tab of your project within the &lt;a href=&quot;../core-concepts/test-runner&quot;&gt;Test Runner&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../core-concepts/test-runner&quot;&gt;테스트 러너&lt;/a&gt; 내에서 프로젝트 의 &lt;strong&gt;실행&lt;/strong&gt; 탭을 클릭하십시오 .</target>
        </trans-unit>
        <trans-unit id="84160a3d588c297d3068218c5e5f6dfd8c536c64" translate="yes" xml:space="preserve">
          <source>Click on the element and its selector will appear at the top. From there, you can copy it to your clipboard () or print it to the console ().</source>
          <target state="translated">요소를 클릭하면 해당 선택기가 맨 위에 나타납니다. 여기에서 클립 보드 ()로 복사하거나 콘솔 ()로 인쇄 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e9e8aca9ba1b3e7eee41815434377173d1d45726" translate="yes" xml:space="preserve">
          <source>Click the &amp;ldquo;Proxy Settings&amp;rdquo; section to expand it and view the proxy settings that Cypress is currently using.</source>
          <target state="translated">&amp;ldquo;프록시 설정&amp;rdquo;섹션을 클릭하여 확장하고 Cypress가 현재 사용중인 프록시 설정을 봅니다.</target>
        </trans-unit>
        <trans-unit id="363442ac59194a543947af27cbec8013bc3db051" translate="yes" xml:space="preserve">
          <source>Click the &amp;ldquo;Settings&amp;rdquo; tab.</source>
          <target state="translated">&quot;설정&quot;탭을 클릭하십시오.</target>
        </trans-unit>
        <trans-unit id="3f3448b18fc56f113306514ebe1dd13d9d311959" translate="yes" xml:space="preserve">
          <source>Click the &lt;strong&gt;Install the Cypress GitHub App&lt;/strong&gt; button.</source>
          <target state="translated">(가)를 클릭 &lt;strong&gt;싸이프레스 GitHub의 앱 설치&lt;/strong&gt; 버튼을 클릭합니다.</target>
        </trans-unit>
        <trans-unit id="999575ef3960ae72d96b1dd0218e0e89fe9ccca9" translate="yes" xml:space="preserve">
          <source>Click the &lt;strong&gt;Install&lt;/strong&gt; button to complete the installation.</source>
          <target state="translated">&lt;strong&gt;설치&lt;/strong&gt; 버튼을 클릭하여 &lt;strong&gt;설치&lt;/strong&gt; 를 완료하십시오.</target>
        </trans-unit>
        <trans-unit id="41a0dcc2a8a2fb5131ec50b956f28a100a8d5891" translate="yes" xml:space="preserve">
          <source>Click the button</source>
          <target state="translated">버튼을 클릭</target>
        </trans-unit>
        <trans-unit id="e289e57aa6e4d147925d3aa745b5da18b71b1df9" translate="yes" xml:space="preserve">
          <source>Click the top right corner of the button.</source>
          <target state="translated">버튼의 오른쪽 상단을 클릭하십시오.</target>
        </trans-unit>
        <trans-unit id="6b474668db39e948b35628fa8f54182cfccc937b" translate="yes" xml:space="preserve">
          <source>Click with key combinations</source>
          <target state="translated">키 조합으로 클릭</target>
        </trans-unit>
        <trans-unit id="722eae337c872677d616cb3599cb3d2e61ab5f27" translate="yes" xml:space="preserve">
          <source>Clicking giant yellow CypressError now displays associated XHR error in the console.</source>
          <target state="translated">거대한 노란색 CypressError를 클릭하면 이제 콘솔에 관련 XHR 오류가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="1f313222e0d8617915fd06f50a62cb3435598878" translate="yes" xml:space="preserve">
          <source>Clicking on Commands</source>
          <target state="translated">명령을 클릭</target>
        </trans-unit>
        <trans-unit id="b4a49650736fe53e5b286ec6a87d5e1b71843164" translate="yes" xml:space="preserve">
          <source>Clicking on svg elements is now working. 3.0.2 introduced a bug that would throw an &amp;lsquo;illegal invocation&amp;rsquo; error. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2245&quot;&gt;#2245&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2252&quot;&gt;#2252&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2258&quot;&gt;#2258&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2277&quot;&gt;#2277&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2288&quot;&gt;#2288&lt;/a&gt;.</source>
          <target state="translated">svg 요소를 클릭하면 작동합니다. 3.0.2에는 '불법 호출'오류가 발생하는 버그가 도입되었습니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2245&quot;&gt;# 2245&lt;/a&gt; 과 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2252&quot;&gt;# 2252&lt;/a&gt; 과 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2258&quot;&gt;# 2258&lt;/a&gt; 과 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2277&quot;&gt;# 2277&lt;/a&gt; 과 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2288&quot;&gt;# 2288&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ec5c2961cc9b10e26a2ce96cf3dd58994278ba71" translate="yes" xml:space="preserve">
          <source>Clicking on tray twice will toggle hide/show of app.</source>
          <target state="translated">트레이를 두 번 클릭하면 앱 숨기기 / 표시가 전환됩니다.</target>
        </trans-unit>
        <trans-unit id="8a0f56afb4abdcba196fd871e341ac08ca369e94" translate="yes" xml:space="preserve">
          <source>Clicking the &amp;lsquo;reload&amp;rsquo; icon next to a test that does not have an ID will not work anymore. We&amp;rsquo;re reworking this feature to work without the presence of IDs.</source>
          <target state="translated">ID가없는 테스트 옆에있는 '재로드'아이콘을 클릭하면 더 이상 작동하지 않습니다. ID가 없어도 작동하도록이 기능을 수정하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="09c13b625e14ca6d25a024b6c1602df1f4121052" translate="yes" xml:space="preserve">
          <source>Clicking the URL in the header of the runner now opens that URL in a new tab.</source>
          <target state="translated">러너 헤더에서 URL을 클릭하면 해당 URL이 새 탭에서 열립니다.</target>
        </trans-unit>
        <trans-unit id="7c5ffc1d9e226110bbc9b5c62b76f69aba310ad3" translate="yes" xml:space="preserve">
          <source>Client side rendering</source>
          <target state="translated">클라이언트 측 렌더링</target>
        </trans-unit>
        <trans-unit id="1bd3bd675d34fadf02958dffd39505acd40fd25c" translate="yes" xml:space="preserve">
          <source>Clip</source>
          <target state="translated">Clip</target>
        </trans-unit>
        <trans-unit id="04f6b3ea183eb9d70981161c4424a6cf525afd9f" translate="yes" xml:space="preserve">
          <source>Clock</source>
          <target state="translated">Clock</target>
        </trans-unit>
        <trans-unit id="de3521c3c0054dffb3a82eaf024be86e11df70b9" translate="yes" xml:space="preserve">
          <source>Close Cypress and open it up again</source>
          <target state="translated">Cypress를 닫고 다시여십시오</target>
        </trans-unit>
        <trans-unit id="f0851c9573d3ae28dc894b75ca322c550d8b5d7c" translate="yes" xml:space="preserve">
          <source>Closing the &lt;code&gt;Electron&lt;/code&gt; browser and then opening &lt;code&gt;Chrome&lt;/code&gt; no longer causes &lt;code&gt;cy.screenshot()&lt;/code&gt; to fail. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1820&quot;&gt;#1820&lt;/a&gt;.</source>
          <target state="translated">폐문 &lt;code&gt;Electron&lt;/code&gt; 브라우저를 다음 열기 &lt;code&gt;Chrome&lt;/code&gt; 더 이상 발생하지 않습니다 &lt;code&gt;cy.screenshot()&lt;/code&gt; 실패합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1820&quot;&gt;# 1820&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="16b1546bfaf51b2730baa3cec8823ad69c6d520a" translate="yes" xml:space="preserve">
          <source>Closures</source>
          <target state="translated">Closures</target>
        </trans-unit>
        <trans-unit id="b614f87a591b0ca42f98c4c903babaaa97f1d6a4" translate="yes" xml:space="preserve">
          <source>Code Coverage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="040eeb16b23b04c8d2d3fee2350384b271b2b4cd" translate="yes" xml:space="preserve">
          <source>Code Coverage by Parcel Bundler</source>
          <target state="translated">소포 묶음 코드 적용</target>
        </trans-unit>
        <trans-unit id="2cb78b9322acceba6db0cc469d6079f0eed92e27" translate="yes" xml:space="preserve">
          <source>Code Coverage for End-to-end Tests</source>
          <target state="translated">종단 간 테스트를위한 코드 범위</target>
        </trans-unit>
        <trans-unit id="7023311626b913aa5afafda321dc14a64019dcd3" translate="yes" xml:space="preserve">
          <source>Code Signed Mac App to prevent &amp;ldquo;Unidentified Developer&amp;rdquo; message on open.</source>
          <target state="translated">Code Signed Mac App은 &quot;Unidentified Developer&quot;메시지가 열리지 않도록합니다.</target>
        </trans-unit>
        <trans-unit id="4978477ab3935b5b6e023524251fc7bb2e84ca25" translate="yes" xml:space="preserve">
          <source>Code coverage as a guide</source>
          <target state="translated">가이드로서의 코드 커버리지</target>
        </trans-unit>
        <trans-unit id="80e6b7863e159a80e05622e61fae964550d29e14" translate="yes" xml:space="preserve">
          <source>Code put in a &lt;code&gt;before&lt;/code&gt; or &lt;code&gt;beforeEach&lt;/code&gt; hook will &lt;strong&gt;always&lt;/strong&gt; run prior to the test - even if you refreshed Cypress in the middle of an existing one!</source>
          <target state="translated">기존 또는 중간에 Cypress를 새로 고치더라도 &lt;code&gt;before&lt;/code&gt; 또는 이전에 입력 된 코드 &lt;code&gt;beforeEach&lt;/code&gt; 후크는 &lt;strong&gt;항상&lt;/strong&gt; 테스트 전에 실행 됩니다 !</target>
        </trans-unit>
        <trans-unit id="18e638137f5e1a28e4d63b7a6426544f9e6a2f33" translate="yes" xml:space="preserve">
          <source>CodeShip Pro</source>
          <target state="translated">CodeShip Pro</target>
        </trans-unit>
        <trans-unit id="d785696bebfac569ce1b1f94fd6d1bc7a3f3a180" translate="yes" xml:space="preserve">
          <source>Codeship</source>
          <target state="translated">Codeship</target>
        </trans-unit>
        <trans-unit id="97c94f954eb9f58c1655ab090be6e49d7268049f" translate="yes" xml:space="preserve">
          <source>Codeship Basic</source>
          <target state="translated">코드 쉽 기본</target>
        </trans-unit>
        <trans-unit id="58f58d40db364e7e6b3ae2eec1caba3d10e21c88" translate="yes" xml:space="preserve">
          <source>Codeship Pro</source>
          <target state="translated">코드 쉽 프로</target>
        </trans-unit>
        <trans-unit id="fe887c11920bb16f1c28e209c31bd85615adc335" translate="yes" xml:space="preserve">
          <source>CoffeeScript 2 is supported via modifying the default options for the Browserify preprocessor. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/663&quot;&gt;#663&lt;/a&gt;.</source>
          <target state="translated">CoffeeScript 2는 Browserify 전 처리기의 기본 옵션을 수정하여 지원됩니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/663&quot;&gt;# 663&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="99793b40d2d5fff667bcfcaa8b962c9192ef1e9b" translate="yes" xml:space="preserve">
          <source>CoffeeScript &lt;code&gt;1.x.x&lt;/code&gt;</source>
          <target state="translated">CoffeeScript &lt;code&gt;1.x.x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6901a8efa68307d9e355cc6c7ca62e0d8af1e914" translate="yes" xml:space="preserve">
          <source>Combine multiple tests into one larger test.</source>
          <target state="translated">여러 테스트를 하나의 큰 테스트로 결합하십시오.</target>
        </trans-unit>
        <trans-unit id="e5b04e05c73af01968b4654d51eff2b8ba162905" translate="yes" xml:space="preserve">
          <source>Combined End-to-end and Unit Test Coverage</source>
          <target state="translated">종합적인 엔드 투 엔드 및 유닛 테스트 범위</target>
        </trans-unit>
        <trans-unit id="8901895fb1b1d4c4ea2fec368c25176bf73e2f7e" translate="yes" xml:space="preserve">
          <source>Command</source>
          <target state="translated">Command</target>
        </trans-unit>
        <trans-unit id="8ff8896b49f3d1c0e7ce0f971b1ef8365b84bae3" translate="yes" xml:space="preserve">
          <source>Command (that was issued)</source>
          <target state="translated">명령 (발급 된)</target>
        </trans-unit>
        <trans-unit id="e1c8f7963bdb6829fd956422fc053e3dbec7c2e4" translate="yes" xml:space="preserve">
          <source>Command &lt;a href=&quot;readfile&quot;&gt;&lt;code&gt;cy.readFile()&lt;/code&gt;&lt;/a&gt; assumes the file exists. If you need to read a file that might not exist, use &lt;code&gt;cy.task&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;readfile&quot;&gt; &lt;code&gt;cy.readFile()&lt;/code&gt; &lt;/a&gt; 명령 은 파일이 존재한다고 가정합니다. 존재하지 않는 파일을 읽어야 할 경우 &lt;code&gt;cy.task&lt;/code&gt; 를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="51c8e955d851be7f51e3a8d58bdc9d8a8f6386a5" translate="yes" xml:space="preserve">
          <source>Command Errors</source>
          <target state="translated">명령 오류</target>
        </trans-unit>
        <trans-unit id="59b0754344014d9d6347724f39bcacbaf47c2e7d" translate="yes" xml:space="preserve">
          <source>Command Line</source>
          <target state="translated">커맨드 라인</target>
        </trans-unit>
        <trans-unit id="3220e89e03807a3230e626ebb638ab3aee0cccfb" translate="yes" xml:space="preserve">
          <source>Command Log</source>
          <target state="translated">명령 로그</target>
        </trans-unit>
        <trans-unit id="4fd8fb2de4aa579d5f4841bef35957e560af05e1" translate="yes" xml:space="preserve">
          <source>Command Logging</source>
          <target state="translated">명령 로깅</target>
        </trans-unit>
        <trans-unit id="f6fe35e209171bf42b301a97ecb399ad5a56cfaf" translate="yes" xml:space="preserve">
          <source>Command line</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe07bd93ba143721c82060ee8fb91bb757ebc871" translate="yes" xml:space="preserve">
          <source>Command line:</source>
          <target state="translated">명령 줄 :</target>
        </trans-unit>
        <trans-unit id="03bddc3c9792f64cb2680dc74695a9d456f661d6" translate="yes" xml:space="preserve">
          <source>Command logging has been upgraded to support &amp;ldquo;page events&amp;rdquo;, which are different than commands. Now events which happen (XHR/page load/url change/spies/stubs/mocks) log out visually differently and do not use a command number. This should be easier to parse what was a real command and what was a page event.</source>
          <target state="translated">명령 로깅은 명령과 다른&amp;ldquo;페이지 이벤트&amp;rdquo;를 지원하도록 업그레이드되었습니다. 이제 발생하는 이벤트 (XHR / 페이지로드 / URL 변경 / 스파이 / 스텁 / 모의)는 시각적으로 다르게 로그 아웃되며 명령 번호를 사용하지 않습니다. 이것은 실제 명령과 페이지 이벤트를 구문 분석하기가 더 쉬워야합니다.</target>
        </trans-unit>
        <trans-unit id="6701ca218d2c0d22af562c6e7ae348de3902e333" translate="yes" xml:space="preserve">
          <source>Command logging now works even if no &lt;code&gt;cy&lt;/code&gt; commands have been issued. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/37&quot;&gt;#37&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cy&lt;/code&gt; 명령이 발행 되지 않은 경우에도 명령 로깅이 작동합니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/37&quot;&gt;# 37&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="e39d4db9ae516a060510157749e62f6a09582713" translate="yes" xml:space="preserve">
          <source>Command options &lt;code&gt;exist&lt;/code&gt; / &lt;code&gt;visible&lt;/code&gt; / &lt;code&gt;length&lt;/code&gt; have been deprecated, these were confusing and limiting, and the same result can now be achieved using normal assertions. The end result is much more robust and much easier to understand.</source>
          <target state="translated">명령 옵션 &lt;code&gt;exist&lt;/code&gt; / &lt;code&gt;visible&lt;/code&gt; / &lt;code&gt;length&lt;/code&gt; 가 더 이상 사용되지 않으며 혼동되고 제한적이며 이제 일반 어설 션을 사용하여 동일한 결과를 얻을 수 있습니다. 최종 결과는 훨씬 강력하고 이해하기 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="45e5f3f72e961cb70134ba35f7a27a9620e515f7" translate="yes" xml:space="preserve">
          <source>Commands</source>
          <target state="translated">Commands</target>
        </trans-unit>
        <trans-unit id="3aa4606c34c244cc001b55f89d15fdb8bb3d98b3" translate="yes" xml:space="preserve">
          <source>Commands Are Asynchronous</source>
          <target state="translated">명령이 비동기</target>
        </trans-unit>
        <trans-unit id="94f457c21cbe00fee4394ed6c39194ce49a8e54c" translate="yes" xml:space="preserve">
          <source>Commands Are Not Promises</source>
          <target state="translated">명령이 약속되지 않음</target>
        </trans-unit>
        <trans-unit id="2380e6fdbaf9a19875cebc9de5f197b951b60014" translate="yes" xml:space="preserve">
          <source>Commands Are Promises</source>
          <target state="translated">명령은 약속이다</target>
        </trans-unit>
        <trans-unit id="b55d85a43e8de9f15158eef6002a1e52e26191cd" translate="yes" xml:space="preserve">
          <source>Commands Must Exit</source>
          <target state="translated">명령을 종료해야합니다</target>
        </trans-unit>
        <trans-unit id="3642c607300c11d6c71ef8314ffec45c819ebb65" translate="yes" xml:space="preserve">
          <source>Commands Run Serially</source>
          <target state="translated">순차적으로 실행되는 명령</target>
        </trans-unit>
        <trans-unit id="f4dbd9d165d10424a15dcf3ef3c4eca57e21848a" translate="yes" xml:space="preserve">
          <source>Commands are also interactive. Go ahead and click on the &lt;code&gt;CLICK&lt;/code&gt; command.</source>
          <target state="translated">명령도 대화식입니다. 계속해서 &lt;code&gt;CLICK&lt;/code&gt; 명령을 클릭하십시오 .</target>
        </trans-unit>
        <trans-unit id="c72d0e0d77c7dec0a86b9dd2f9cc92d25237054c" translate="yes" xml:space="preserve">
          <source>Commands are not retried when they could potentially change the state of the application under test. For example, Cypress will not retry the &lt;a href=&quot;../../api/commands/click&quot;&gt;.click()&lt;/a&gt; command, because it could change something in the application.</source>
          <target state="translated">테스트중인 응용 프로그램의 상태를 잠재적으로 변경할 수있는 명령은 재 시도되지 않습니다. 예를 들어 Cypress는 &lt;a href=&quot;../../api/commands/click&quot;&gt;.click ()&lt;/a&gt; 명령을 다시 시도하지 않습니다 . 응용 프로그램에서 무언가를 변경할 수 있기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="632789d4c61e2634269b10182e55c1ebebdf9ca7" translate="yes" xml:space="preserve">
          <source>Commands for managing the global Cypress cache. The Cypress cache applies to all installs of Cypress across your machine, global or not.</source>
          <target state="translated">글로벌 Cypress 캐시 관리를위한 명령 Cypress 캐시는 전체 시스템에 관계없이 모든 Cypress의 모든 설치에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="67255d55e8f0db78ddd835195c20c3cbc884d544" translate="yes" xml:space="preserve">
          <source>Commands text will no long cut off into ellipses when the Command Log is set to a wider width. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/528&quot;&gt;#528&lt;/a&gt;.</source>
          <target state="translated">명령 로그가 더 넓은 너비로 설정되어 있으면 명령 텍스트가 더 이상 줄임표로 잘리지 않습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/528&quot;&gt;# 528&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="a98a7bd58a3000c66673bad7d7849f2404e52967" translate="yes" xml:space="preserve">
          <source>Commands that do not exit are not supported</source>
          <target state="translated">종료되지 않은 명령은 지원되지 않습니다</target>
        </trans-unit>
        <trans-unit id="21f1c0d12abd113cbd1f180c9c5aea4937b716c6" translate="yes" xml:space="preserve">
          <source>Commands vs assertions</source>
          <target state="translated">명령 대 어설 션</target>
        </trans-unit>
        <trans-unit id="7751acfe2fcfee66c6353229f87d58758935fdd9" translate="yes" xml:space="preserve">
          <source>Commands which precede assertions will now look downstream at those assertions and not resolve until their subject&amp;rsquo;s state passes all assertions. Previously this was &lt;strong&gt;sort of&lt;/strong&gt; implemented using &lt;em&gt;Command Options&lt;/em&gt; and the &lt;code&gt;eventually&lt;/code&gt; flag, but now this is the default behavior. &lt;em&gt;Command Options&lt;/em&gt; only worked on DOM-based subjects, and now the new assertion verification works on everything else (including RL-based commands, etc). What this means is that Cypress can predict what you are requesting and automatically modifies its behavior until this state is reached. This prevents test brittleness / random test flake. Additionally this removes ever having to use &lt;a href=&quot;../../api/commands/wait&quot;&gt;&lt;code&gt;cy.wait(Number)&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;cy.wait(Function)&lt;/code&gt; (though this is still a valid command). As a side effect, you will now see commands + their assertions in the spinning pending blue state. When assertions fail their associated command also fails at the same time. This visually represents the coupling between these two concepts. Another side effect is that &lt;code&gt;timeout&lt;/code&gt; options do not need to be provided on the succeeding assertions, and can instead just be provided on the proceeding command. All of the coupled assertions will automatically be retried to the maximum &lt;code&gt;timeout&lt;/code&gt; setting. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/43&quot;&gt;#43&lt;/a&gt;.</source>
          <target state="translated">어설 션 앞에 오는 명령은 이제 해당 어설 션을 다운 스트림으로보고 대상 상태가 모든 어설 션을 통과 할 때까지 해결되지 않습니다. 이전에이이었다 &lt;strong&gt;종류의&lt;/strong&gt; 사용하여 구현 &lt;em&gt;명령 옵션&lt;/em&gt; 과 &lt;code&gt;eventually&lt;/code&gt; 플래그를,하지만 지금은이 기본 동작입니다. &lt;em&gt;명령 옵션&lt;/em&gt; 은 DOM 기반 주제에서만 작동했으며 이제 새 어설 션 검증은 다른 모든 항목 (RL 기반 명령 등)에서 작동합니다. 이것이 의미하는 것은 Cypress가 요청한 내용을 예측하고이 상태에 도달 할 때까지 해당 동작을 자동으로 수정한다는 것입니다. 이것은 시험 취성 / 임의의 시험 플레이크를 방지합니다. 또한 &lt;a href=&quot;../../api/commands/wait&quot;&gt; &lt;code&gt;cy.wait(Number)&lt;/code&gt; &lt;/a&gt; 또는 &lt;code&gt;cy.wait(Function)&lt;/code&gt; 을 사용 하지 않아도됩니다.(이것은 여전히 ​​유효한 명령입니다). 부작용으로 이제 회전 대기중인 파란색 상태에서 명령과 해당 어설 션이 표시됩니다. 어설 션이 실패하면 관련 명령도 동시에 실패합니다. 이것은이 두 개념 사이의 연결을 시각적으로 나타냅니다. 또 다른 부작용 은 후속 어설 션에 &lt;code&gt;timeout&lt;/code&gt; 옵션을 제공 할 필요가없고 대신 진행 명령에 제공 할 수 있다는 것입니다. 연결된 어설 션이 모두 최대 &lt;code&gt;timeout&lt;/code&gt; 설정 으로 자동 재 시도됩니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/43&quot;&gt;# 43&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="1b67fe8756eb553f295fb28d7514aa1ba4e57eae" translate="yes" xml:space="preserve">
          <source>Commands which were silenced with &lt;code&gt;{log: false}&lt;/code&gt; will now always display in the Command Log if they were part of a replayed chain of commands due to an alias reference becoming stale. Previously they would not display which was very confusing.</source>
          <target state="translated">&lt;code&gt;{log: false}&lt;/code&gt; 로 침묵 된 명령은 별명 참조가 오래되어 재생 된 명령 체인의 일부인 경우 항상 명령 로그에 표시됩니다. 이전에는 매우 혼란스러운 내용이 표시되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="e46f1c8aefb13180c91a4f4e324020c72d59a17c" translate="yes" xml:space="preserve">
          <source>Commit SHA linking to the GitHub commit</source>
          <target state="translated">GitHub 커밋에 링크하는 커밋 SHA</target>
        </trans-unit>
        <trans-unit id="25865a272d6c4602de8da066e2d33da0e5341e0b" translate="yes" xml:space="preserve">
          <source>Common Assertions</source>
          <target state="translated">공통 주장</target>
        </trans-unit>
        <trans-unit id="a4fc17db82c672dbaa571a55e4d313945d530f14" translate="yes" xml:space="preserve">
          <source>Common Scenarios</source>
          <target state="translated">일반적인 시나리오</target>
        </trans-unit>
        <trans-unit id="f190d7b11dc66a51be8efb7071740c9fcf96d6f8" translate="yes" xml:space="preserve">
          <source>Common Workarounds</source>
          <target state="translated">일반적인 해결 방법</target>
        </trans-unit>
        <trans-unit id="ebb9ca9c15ab5b7e2560c86bd227cfc4d5329c32" translate="yes" xml:space="preserve">
          <source>Compare text values of two elements</source>
          <target state="translated">두 요소의 텍스트 값 비교</target>
        </trans-unit>
        <trans-unit id="976e8d41b2971241ac1e4d546b47b53758e78b1b" translate="yes" xml:space="preserve">
          <source>Compile the CoffeeScript into JavaScript &lt;code&gt;spec.js&lt;/code&gt;</source>
          <target state="translated">CoffeeScript를 JavaScript &lt;code&gt;spec.js&lt;/code&gt; 로 컴파일</target>
        </trans-unit>
        <trans-unit id="199262b85ab1cf1760553d29d5bb5a787f9cd66b" translate="yes" xml:space="preserve">
          <source>Complete WordPress Plugin Boilerplate including Cypress.io E2E tests.</source>
          <target state="translated">Cypress.io E2E 테스트를 포함한 완전한 WordPress 플러그인 보일러 플레이트.</target>
        </trans-unit>
        <trans-unit id="80bb2ea05fa48ef9fcf3abb3bc52f8beb680d0e3" translate="yes" xml:space="preserve">
          <source>Completely overhauled the URL and proxy system used to serve remote applications.</source>
          <target state="translated">원격 애플리케이션을 제공하는 데 사용되는 URL 및 프록시 시스템을 완전히 점검했습니다.</target>
        </trans-unit>
        <trans-unit id="a6280a8092ffd6b1ba45e5e944246c874afb1893" translate="yes" xml:space="preserve">
          <source>Complex Async Example</source>
          <target state="translated">복잡한 비동기 예</target>
        </trans-unit>
        <trans-unit id="998e6317b6fa148df91026296ec49dc9eade04a7" translate="yes" xml:space="preserve">
          <source>Complex Promise Example</source>
          <target state="translated">복잡한 약속의 예</target>
        </trans-unit>
        <trans-unit id="2dbce043918d35d9470549bbaa4939fb679a4bf3" translate="yes" xml:space="preserve">
          <source>Component Testing</source>
          <target state="translated">구성 요소 테스트</target>
        </trans-unit>
        <trans-unit id="b7159a32272ac35920d049fc30dc9f81832fe7b3" translate="yes" xml:space="preserve">
          <source>Component testing</source>
          <target state="translated">구성 요소 테스트</target>
        </trans-unit>
        <trans-unit id="3ab0fff92f04a237857d8954ccd4b2bbb77dd1a9" translate="yes" xml:space="preserve">
          <source>Computing the source code lines that were executed during the test is done through &lt;strong&gt;code coverage&lt;/strong&gt;. Code coverage requires inserting additional counters into your source code before running it. This step is called &lt;strong&gt;instrumentation&lt;/strong&gt;. Instrumentation takes code that looks likes this&amp;hellip;</source>
          <target state="translated">테스트 중에 실행 된 소스 코드 라인은 &lt;strong&gt;코드 적용 범위를&lt;/strong&gt; 통해 계산 됩니다. 코드 적용 범위를 실행하려면 소스 코드에 추가 카운터를 삽입해야합니다. 이 단계를 &lt;strong&gt;계측&lt;/strong&gt; 이라고 &lt;strong&gt;합니다&lt;/strong&gt; . 인스 트루먼 테이션은 이와 같은 코드를 사용합니다&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="f412de2bc0a3e649ebd0aa9b0c7daf0fb09876b0" translate="yes" xml:space="preserve">
          <source>Concourse</source>
          <target state="translated">Concourse</target>
        </trans-unit>
        <trans-unit id="0c2f5941357ea3957dbb70ba9f3995d297cefd71" translate="yes" xml:space="preserve">
          <source>Conditional Testing</source>
          <target state="translated">조건부 테스트</target>
        </trans-unit>
        <trans-unit id="f6eb40cf389683812a0b9500584c22e43c7338b9" translate="yes" xml:space="preserve">
          <source>Conditional testing refers to the common programming pattern:</source>
          <target state="translated">조건부 테스트는 일반적인 프로그래밍 패턴을 말합니다.</target>
        </trans-unit>
        <trans-unit id="9ba9ed1bbe699365fc32d73023c9b43a78c723c9" translate="yes" xml:space="preserve">
          <source>Conditionally check whether an element has certain text:</source>
          <target state="translated">요소에 특정 텍스트가 있는지 조건부로 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="4b7aee66483749043701d073392077b0d7e2cd0f" translate="yes" xml:space="preserve">
          <source>Conditionally wrap elements</source>
          <target state="translated">조건부 랩핑 요소</target>
        </trans-unit>
        <trans-unit id="d6a56385d0729f6ff4bf27671cc845cb6f2cfde5" translate="yes" xml:space="preserve">
          <source>Conditionals</source>
          <target state="translated">Conditionals</target>
        </trans-unit>
        <trans-unit id="0ceae88b4177bac1201240778027412fc5be44bb" translate="yes" xml:space="preserve">
          <source>Config overrides coming from the CLI or environment variables are now validated the same way as if they&amp;rsquo;ve been set in &lt;code&gt;cypress.json&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1783&quot;&gt;#1783&lt;/a&gt;.</source>
          <target state="translated">CLI 또는 환경 변수에서 오는 구성 대체는 이제 &lt;code&gt;cypress.json&lt;/code&gt; 에서 설정 한 것과 동일한 방식으로 유효성 검증 됩니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1783&quot;&gt;# 1783&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="754164850f38c1ecdaf6b8ed894cb192bc36c5f4" translate="yes" xml:space="preserve">
          <source>Configuration</source>
          <target state="translated">Configuration</target>
        </trans-unit>
        <trans-unit id="4afa86921bd437ba67c78363d6c2564ff21becdb" translate="yes" xml:space="preserve">
          <source>Configuration API</source>
          <target state="translated">구성 API</target>
        </trans-unit>
        <trans-unit id="4d02407d4cc8189b34948d45af1b280eeaabe123" translate="yes" xml:space="preserve">
          <source>Configuration Values</source>
          <target state="translated">구성 값</target>
        </trans-unit>
        <trans-unit id="c6f0e9dfe575fb25913b33c98a27840e0a99be95" translate="yes" xml:space="preserve">
          <source>Configuration set using &lt;code&gt;Cypress.config&lt;/code&gt;&lt;em&gt;is only in scope for the current spec file.&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;Cypress.config&lt;/code&gt; 를 사용하여 설정 한 구성 &lt;em&gt;은 현재 사양 파일에만 적용됩니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e23ad97b87cb183fd3eb0aaf079a00e736a0850a" translate="yes" xml:space="preserve">
          <source>Configuration to automatically force Cypress to wait for outstanding XHR&amp;rsquo;s (like it does for other Page Events). This would mean when testing more traditional apps without XHR stubbing, commands would automatically wait until all outstanding XHR&amp;rsquo;s complete. The internal retry loop needs to be rewritten to make this possible, but the XHR architecture is now there.</source>
          <target state="translated">Cypress가 자동으로 다른 XHR (다른 페이지 이벤트의 경우)을 기다리도록 구성합니다. 이는 XHR 스터 빙없이보다 전통적인 앱을 테스트 할 때 모든 미해결 XHR이 완료 될 때까지 명령이 자동으로 대기 함을 의미합니다. 이를 가능하게하려면 내부 재시도 루프를 다시 작성해야하지만 이제 XHR 아키텍처가 있습니다.</target>
        </trans-unit>
        <trans-unit id="4b97dd6bf2dd45e5ab65e5a1323a4643295ad398" translate="yes" xml:space="preserve">
          <source>Configure &lt;code&gt;baseUrl&lt;/code&gt; in the &lt;code&gt;cypress.json&lt;/code&gt; file to prevent repeating yourself in every single &lt;code&gt;cy.visit()&lt;/code&gt; command. Read more about &lt;a href=&quot;../../guides/references/configuration&quot;&gt;configuration&lt;/a&gt;.</source>
          <target state="translated">구성 &lt;code&gt;baseUrl&lt;/code&gt; 에서 &lt;code&gt;cypress.json&lt;/code&gt; 의 파일을 하나 하나에 자신을 반복 방지하기 위해 &lt;code&gt;cy.visit()&lt;/code&gt; 명령. &lt;a href=&quot;../../guides/references/configuration&quot;&gt;구성&lt;/a&gt; 에 대해 자세히 알아보십시오 .</target>
        </trans-unit>
        <trans-unit id="834b811351966050574089ced73dfbdb7ca6848a" translate="yes" xml:space="preserve">
          <source>Configure tsconfig.json</source>
          <target state="translated">tsconfig.json 구성</target>
        </trans-unit>
        <trans-unit id="26c9282bf4ad7fa68a504fae8e6c23d1c4572381" translate="yes" xml:space="preserve">
          <source>Confirm that you want to delete the project by clicking &lt;strong&gt;Yes, Remove Project&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;예, 프로젝트 제거&lt;/strong&gt; 를 클릭하여 프로젝트를 삭제할지 확인 &lt;strong&gt;하십시오&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="06ba8be139efac680979823005c3a8e473971b01" translate="yes" xml:space="preserve">
          <source>Conflicting values will override values from &lt;code&gt;cypress.json&lt;/code&gt; and &lt;code&gt;cypress.env.json&lt;/code&gt; files.</source>
          <target state="translated">충돌하는 값은 &lt;code&gt;cypress.json&lt;/code&gt; 및 &lt;code&gt;cypress.env.json&lt;/code&gt; 파일의 값보다 우선 합니다.</target>
        </trans-unit>
        <trans-unit id="01cd1b44c6d6673718a3a40a6be368681492da19" translate="yes" xml:space="preserve">
          <source>Connect with our community in &lt;a href=&quot;https://gitter.im/cypress-io/cypress&quot;&gt;Gitter&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://gitter.im/cypress-io/cypress&quot;&gt;Gitter&lt;/a&gt; 의 커뮤니티와 연결</target>
        </trans-unit>
        <trans-unit id="565e25b1be863570aa48357d4e37a3cb9b1014a4" translate="yes" xml:space="preserve">
          <source>Consider this example:</source>
          <target state="translated">이 예제를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="2dd9f4cc14ec1bf52b6278d055d1483dda369c44" translate="yes" xml:space="preserve">
          <source>Console output</source>
          <target state="translated">Console output</target>
        </trans-unit>
        <trans-unit id="7bf69cab90ca13888b120e7454484a178e4ef6c8" translate="yes" xml:space="preserve">
          <source>Console output from your apps is suppressed while running in the terminal.</source>
          <target state="translated">터미널에서 실행하는 동안 앱의 콘솔 출력이 억제됩니다.</target>
        </trans-unit>
        <trans-unit id="3cfbf8dc8f844f4d8d531e58d73ec57ab19a5b69" translate="yes" xml:space="preserve">
          <source>Console output of &lt;code&gt;.location()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.location()&lt;/code&gt; 의 콘솔 출력</target>
        </trans-unit>
        <trans-unit id="716bba1f6fa2b1817371939a28928af71947092c" translate="yes" xml:space="preserve">
          <source>Console output of &lt;code&gt;window.location&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;window.location&lt;/code&gt; 의 콘솔 출력</target>
        </trans-unit>
        <trans-unit id="4f9be057f0ea5d2ba72fd2c810e8d7b9aa98b469" translate="yes" xml:space="preserve">
          <source>Content</source>
          <target state="translated">Content</target>
        </trans-unit>
        <trans-unit id="2570a9f1f6766df091ea6a76ebb3b3d7bd48fed4" translate="yes" xml:space="preserve">
          <source>Continue to perform all default actions</source>
          <target state="translated">모든 기본 작업을 계속 수행</target>
        </trans-unit>
        <trans-unit id="7a302c3f9cf2b3cec42c41ee9b6ddfb04d9516a9" translate="yes" xml:space="preserve">
          <source>Continuous Integration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a95911fef9feab1279d57ccc20e090218e5b782" translate="yes" xml:space="preserve">
          <source>Continuous integration</source>
          <target state="translated">지속적인 통합</target>
        </trans-unit>
        <trans-unit id="18b017e5b4b89d6ff684844a26fb098545f160cf" translate="yes" xml:space="preserve">
          <source>Contribute</source>
          <target state="translated">Contribute</target>
        </trans-unit>
        <trans-unit id="99085ed780334aa12947f103a83792aa2d5509b8" translate="yes" xml:space="preserve">
          <source>Control the size and orientation of the screen for your application.</source>
          <target state="translated">응용 프로그램의 화면 크기와 방향을 제어하십시오.</target>
        </trans-unit>
        <trans-unit id="baec3ef4d924a374d8f163c63b1280f6568b9bd2" translate="yes" xml:space="preserve">
          <source>Control whether you accept or reject confirmations</source>
          <target state="translated">확인 수락 또는 거부 여부 제어</target>
        </trans-unit>
        <trans-unit id="8cb89ca43e98cfc3f9884ebd828302a5a51d3e80" translate="yes" xml:space="preserve">
          <source>Control which Chrome components are loaded</source>
          <target state="translated">로드 할 Chrome 구성 요소 제어</target>
        </trans-unit>
        <trans-unit id="54cc9832575c26ca63291217376ff51a496592d4" translate="yes" xml:space="preserve">
          <source>Converts WDIO automation tests to Cypress.</source>
          <target state="translated">WDIO 자동화 테스트를 Cypress로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="524cf50b5df5f29161c0600989922de48abede70" translate="yes" xml:space="preserve">
          <source>Cookies</source>
          <target state="translated">Cookies</target>
        </trans-unit>
        <trans-unit id="acf3516687f68b9d3be80e8368cd13855a295dec" translate="yes" xml:space="preserve">
          <source>Cookies are automatically cleared between page refreshes, during app startup, and leaving the test page.</source>
          <target state="translated">앱을 시작하는 동안 페이지를 새로 고치거나 테스트 페이지를 떠나는 동안 쿠키가 자동으로 지워집니다.</target>
        </trans-unit>
        <trans-unit id="e05873e1707d6581e6eee7e2a15fb0c0ecd9e055" translate="yes" xml:space="preserve">
          <source>Cookies are automatically sent and received</source>
          <target state="translated">쿠키가 자동으로 송수신됩니다</target>
        </trans-unit>
        <trans-unit id="8ebebca0195929f0e6604560db2d6f829dc20c86" translate="yes" xml:space="preserve">
          <source>Coordinates</source>
          <target state="translated">Coordinates</target>
        </trans-unit>
        <trans-unit id="e7b9657118fef7a1f45306c17d6e677df270e297" translate="yes" xml:space="preserve">
          <source>Coordinates and hitboxes are now logged and displayed on &lt;a href=&quot;../../api/commands/clear&quot;&gt;&lt;code&gt;.clear()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">좌표 및 히트 박스가 이제 &lt;a href=&quot;../../api/commands/clear&quot;&gt; &lt;code&gt;.clear()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 에 기록되고 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="6356d7205b142f7c7c7d20113c08b32b386e304f" translate="yes" xml:space="preserve">
          <source>Copy / Paste now works when logging in on OSX. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/145&quot;&gt;#145&lt;/a&gt;.</source>
          <target state="translated">OSX에 로그인 할 때 복사 / 붙여 넣기가 작동합니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/145&quot;&gt;# 145&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c872753511d558c4ce512746cf585786dd025a3c" translate="yes" xml:space="preserve">
          <source>Core Concepts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9276d073588593df3449f1f21b0c39e9033d4bf1" translate="yes" xml:space="preserve">
          <source>Corrected a typo in the CLI for a warning message. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2038&quot;&gt;#2038&lt;/a&gt;.</source>
          <target state="translated">CLI에서 경고 메시지의 오타가 수정되었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2038&quot;&gt;# 2038&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="8556152848968e44556c99c3fff98f2d6db69ebe" translate="yes" xml:space="preserve">
          <source>Correctly inject on &lt;code&gt;4xx&lt;/code&gt; and other bad http response codes when using Cypress as the file server. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/219&quot;&gt;#219&lt;/a&gt;.</source>
          <target state="translated">Cypress를 파일 서버로 사용할 때 &lt;code&gt;4xx&lt;/code&gt; 및 기타 잘못된 http 응답 코드를 올바르게 삽입 하십시오. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/219&quot;&gt;# 219&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b9adb71f1d237db0587278b4a1e23572d8e501b7" translate="yes" xml:space="preserve">
          <source>Correctly inject on &lt;code&gt;5xx&lt;/code&gt; http response codes. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/217&quot;&gt;#217&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;5xx&lt;/code&gt; http 응답 코드를 올바르게 삽입 하십시오. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/217&quot;&gt;# 217&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="abba92ebc6c6850ef892f769dc170ea8ef65f589" translate="yes" xml:space="preserve">
          <source>Correctly inject on &lt;code&gt;gzip&lt;/code&gt; errors from 3rd party servers doing unintended things. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/220&quot;&gt;#220&lt;/a&gt;.</source>
          <target state="translated">의도하지 않은 작업을 수행하는 타사 서버의 &lt;code&gt;gzip&lt;/code&gt; 오류를 올바르게 주입하십시오 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/220&quot;&gt;# 220&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bbc139f59ec256066c40a13acfb940f040262cc9" translate="yes" xml:space="preserve">
          <source>Correctly processes defaultButton click event, form submit event.</source>
          <target state="translated">defaultButton 클릭 이벤트, 양식 제출 이벤트를 올바르게 처리합니다.</target>
        </trans-unit>
        <trans-unit id="77ba49c73b30efdf7845be17dba3544bfac24889" translate="yes" xml:space="preserve">
          <source>Correctly take into account &lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; tag on XHR&amp;rsquo;s. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/89&quot;&gt;#89&lt;/a&gt;.</source>
          <target state="translated">XHR의 &lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; 태그를 올바르게 고려하십시오 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/89&quot;&gt;# 89&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7ae3f335e548522a72b31d6709bd85642b226144" translate="yes" xml:space="preserve">
          <source>Coupled to the &lt;code&gt;name&lt;/code&gt; attribute which has HTML semantics.</source>
          <target state="translated">HTML 의미가 있는 &lt;code&gt;name&lt;/code&gt; 속성에 연결되었습니다.</target>
        </trans-unit>
        <trans-unit id="8b25d68c0b07d3dbf4f390e283585ad91fdda1c1" translate="yes" xml:space="preserve">
          <source>Covering</source>
          <target state="translated">Covering</target>
        </trans-unit>
        <trans-unit id="31ff08bf16c35d590ae328896c11be9dbe0e6a29" translate="yes" xml:space="preserve">
          <source>Create Org</source>
          <target state="translated">조직 만들기</target>
        </trans-unit>
        <trans-unit id="0a76330fa7099993f77b270f5263237612c24f8e" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;sample_spec.js&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;sample_spec.js&lt;/code&gt; 파일을 작성 하십시오.</target>
        </trans-unit>
        <trans-unit id="54aaec0d8958e9a15d7aa90864024a05abda7504" translate="yes" xml:space="preserve">
          <source>Create a `cypress.env.json`</source>
          <target state="translated">`cypress.env.json`을 만듭니다</target>
        </trans-unit>
        <trans-unit id="530333cdf6ed80d16fb57efe75c7a81e75f361ef" translate="yes" xml:space="preserve">
          <source>Create a clean, pristine testing environment.</source>
          <target state="translated">깨끗하고 깨끗한 테스트 환경을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="b356d5c8892603555f802e6084774cb296edb2fa" translate="yes" xml:space="preserve">
          <source>Create a clock and move time to trigger a &lt;code&gt;setTimeout&lt;/code&gt;</source>
          <target state="translated">시계를 만들고 시간을 이동하여 &lt;code&gt;setTimeout&lt;/code&gt; 을 트리거하십시오.</target>
        </trans-unit>
        <trans-unit id="0215eed7a89da9a6d3896c5402ec4060b10638f6" translate="yes" xml:space="preserve">
          <source>Create a clock and use it to trigger a &lt;code&gt;setInterval&lt;/code&gt;</source>
          <target state="translated">시계를 만들고 &lt;code&gt;setInterval&lt;/code&gt; 을 트리거하는 데 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="c9f4d8a4cc6b4d876ee791006ddbfe6b56b72df3" translate="yes" xml:space="preserve">
          <source>Create a stub and manually replace a function</source>
          <target state="translated">스텁을 작성하고 함수를 수동으로 교체</target>
        </trans-unit>
        <trans-unit id="c4e02bbaa4e1006fb86887e071cb4da5a9670c70" translate="yes" xml:space="preserve">
          <source>Create an assertion. Assertions are automatically retried until they pass or time out.</source>
          <target state="translated">어설 션을 만듭니다. 어설 션은 시간이 지날 때까지 자동으로 재 시도됩니다.</target>
        </trans-unit>
        <trans-unit id="deb609dfe5aa29a17cf69b2b489923bcb4c0e2bd" translate="yes" xml:space="preserve">
          <source>Create custom commands using plain-old functions. Similar to `cy.then` but with retriability.</source>
          <target state="translated">일반 기능을 사용하여 사용자 정의 명령을 작성하십시오. `cy.then`과 유사하지만 재시도 가능합니다.</target>
        </trans-unit>
        <trans-unit id="db895a3da3bf5b0a271a63f2aa947d66bb9a036f" translate="yes" xml:space="preserve">
          <source>Create new record key</source>
          <target state="translated">새 레코드 키 만들기</target>
        </trans-unit>
        <trans-unit id="59daec0fad23e8f1c6fdaeceb786f17de953945e" translate="yes" xml:space="preserve">
          <source>Create projects</source>
          <target state="translated">프로젝트 만들기</target>
        </trans-unit>
        <trans-unit id="c419fdebbc74b72da21303a5c289d54c9963d7f0" translate="yes" xml:space="preserve">
          <source>Create, edit and delete organizations</source>
          <target state="translated">조직 생성, 편집 및 삭제</target>
        </trans-unit>
        <trans-unit id="4df1dedacc4030daf8f7117293a949c884449280" translate="yes" xml:space="preserve">
          <source>Created &amp;ldquo;Conditional Testing&amp;rdquo; core concept</source>
          <target state="translated">&quot;조건부 테스트&quot;핵심 개념 생성</target>
        </trans-unit>
        <trans-unit id="30f699233a45a35700337adb14a42c21811feea2" translate="yes" xml:space="preserve">
          <source>Created &amp;ldquo;Key Differences&amp;rdquo; core concept</source>
          <target state="translated">&amp;ldquo;핵심 차이&amp;rdquo;핵심 개념을 만들었습니다</target>
        </trans-unit>
        <trans-unit id="cb3ea91e52bf3a936bd6f5f890714b0db2b77614" translate="yes" xml:space="preserve">
          <source>Created &amp;ldquo;List of Plugins&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;플러그인 목록&amp;rdquo;생성</target>
        </trans-unit>
        <trans-unit id="ea247c70fd48be47fbe66d1fb7557f6ff79378eb" translate="yes" xml:space="preserve">
          <source>Created &amp;ldquo;Plugins&amp;rdquo; guide</source>
          <target state="translated">&quot;플러그인&quot;안내서 작성</target>
        </trans-unit>
        <trans-unit id="26bd6570b4b29017a17447f2b75ad172f67bba2e" translate="yes" xml:space="preserve">
          <source>Created &amp;ldquo;Preprocessors API&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;전 처리기 API&amp;rdquo;생성</target>
        </trans-unit>
        <trans-unit id="1d535ded95947d37850ceb6e1929c6d9722ece6c" translate="yes" xml:space="preserve">
          <source>Created &amp;ldquo;Testing React TodoMVC&amp;rdquo; tutorials</source>
          <target state="translated">&quot;React TodoMVC 테스트&quot;학습서 작성</target>
        </trans-unit>
        <trans-unit id="0968a2236d7936e5ebc1a74cbb3d145abafac7a2" translate="yes" xml:space="preserve">
          <source>Created &amp;ldquo;Variables and Aliases&amp;rdquo; core concept</source>
          <target state="translated">&quot;변수 및 별칭&quot;핵심 개념을 만들었습니다.</target>
        </trans-unit>
        <trans-unit id="7c7190e9e6b622065f70340f7b630b00e4474ea1" translate="yes" xml:space="preserve">
          <source>Created &amp;ldquo;Writing a Plugin&amp;rdquo; API</source>
          <target state="translated">&quot;플러그인 작성&quot;API 생성</target>
        </trans-unit>
        <trans-unit id="b14ba5e141fd4b8fbd4e1094e2425e3e9125f7e9" translate="yes" xml:space="preserve">
          <source>Created new &lt;code&gt;Cypress.Log&lt;/code&gt; interface for greater control over the display of commands.</source>
          <target state="translated">명령 표시를보다 &lt;code&gt;Cypress.Log&lt;/code&gt; 제어 할 수 있도록 새로운 Cypress.Log 인터페이스를 만들었습니다 .</target>
        </trans-unit>
        <trans-unit id="fffe2121a1559fa60200bf1454c0d748be25d246" translate="yes" xml:space="preserve">
          <source>Created new debugging command: &lt;a href=&quot;../../api/commands/pause&quot;&gt;&lt;code&gt;.pause()&lt;/code&gt;&lt;/a&gt; which will pause executing commands and allow you to resume or step into the next command one at a time.</source>
          <target state="translated">새로운 디버깅 명령 : &lt;a href=&quot;../../api/commands/pause&quot;&gt; &lt;code&gt;.pause()&lt;/code&gt; &lt;/a&gt; 되어 명령 실행을 일시 중지하고 한 번에 하나씩 다음 명령을 다시 시작하거나 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4ce48feaef42bf2c8b9b194bc8d2c155ebd58032" translate="yes" xml:space="preserve">
          <source>Creating &amp;ldquo;tiny&amp;rdquo; tests with a single assertion</source>
          <target state="translated">단일 어설 션으로 &quot;작은&quot;테스트 작성</target>
        </trans-unit>
        <trans-unit id="49b1c035b7d0b6b1c7e35c111e5686682b53438c" translate="yes" xml:space="preserve">
          <source>Crop a screenshot to a specific position and size</source>
          <target state="translated">특정 위치와 크기로 스크린 샷 자르기</target>
        </trans-unit>
        <trans-unit id="58cd1d73cdcaffc9483c858219c6fcb608902e6a" translate="yes" xml:space="preserve">
          <source>Cross-Origin requests are now proxied by Cypress. In other words their URL&amp;rsquo;s are transparently rewritten which bypasses CORS problems. This is a quick fix which should satisfy most of the problems users were having with CORS requests. However there is a much bigger change coming in &lt;code&gt;0.14.0&lt;/code&gt; where the entire proxy layer will be rewritten to accommodate CORS, &lt;code&gt;window.fetch&lt;/code&gt; and &lt;code&gt;domain cookies&lt;/code&gt; flawlessly. As it stands Cypress is prone to errors in complex setups.</source>
          <target state="translated">Cross-Origin 요청은 이제 Cypress에 의해 프록시됩니다. 즉, URL이 투명하게 다시 작성되어 CORS 문제를 우회합니다. 이것은 사용자가 CORS 요청으로 겪고있는 대부분의 문제를 충족시키는 빠른 수정입니다. 그러나 &lt;code&gt;0.14.0&lt;/code&gt; 에서는 CORS, &lt;code&gt;window.fetch&lt;/code&gt; 및 &lt;code&gt;domain cookies&lt;/code&gt; 완벽하게 수용하기 위해 전체 프록시 계층을 다시 작성 하는 훨씬 더 큰 변화 가 있습니다 . Cypress는 복잡한 설정에서 오류가 발생하기 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="fd97fba3d4697df4c06c84371d03fa2bb079269f" translate="yes" xml:space="preserve">
          <source>Cross-origin iframes</source>
          <target state="translated">교차 출처 iframe</target>
        </trans-unit>
        <trans-unit id="2270b4873eb9e505087d1cdb7abf8226ebfab5a4" translate="yes" xml:space="preserve">
          <source>Cucumber</source>
          <target state="translated">Cucumber</target>
        </trans-unit>
        <trans-unit id="45a6d5bcf4e2724053e60f8d27b3f1f435224fae" translate="yes" xml:space="preserve">
          <source>Currently running tests now displays a spinner to indicate they are currently running.</source>
          <target state="translated">현재 실행중인 테스트는 이제 현재 실행 중임을 나타내는 스피너를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="656c8a1b6a35438479cc20adce73c5c892061f49" translate="yes" xml:space="preserve">
          <source>Currently, only browsers in the Chrome family are supported.</source>
          <target state="translated">현재 Chrome 제품군의 브라우저 만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="d65215411d33fb1bb5d69ddda0d6b068f34bceeb" translate="yes" xml:space="preserve">
          <source>Custom &lt;code&gt;console&lt;/code&gt; command</source>
          <target state="translated">사용자 정의 &lt;code&gt;console&lt;/code&gt; 명령</target>
        </trans-unit>
        <trans-unit id="2416316065a37f271c32ddc7e7d94e55288b1523" translate="yes" xml:space="preserve">
          <source>Custom &lt;code&gt;login&lt;/code&gt; command</source>
          <target state="translated">사용자 정의 &lt;code&gt;login&lt;/code&gt; 명령</target>
        </trans-unit>
        <trans-unit id="c48e024e0cec2f563e6f2442f0eebafd432290c2" translate="yes" xml:space="preserve">
          <source>Custom Commands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb2ecfd0fee66ed3937499ef5f09ad6fcbe3f473" translate="yes" xml:space="preserve">
          <source>Custom Dual Command</source>
          <target state="translated">커스텀 듀얼 커맨드</target>
        </trans-unit>
        <trans-unit id="aa033ba591179178a4d4be85f52573a67add07ca" translate="yes" xml:space="preserve">
          <source>Custom Environment Variables</source>
          <target state="translated">커스텀 환경 변수</target>
        </trans-unit>
        <trans-unit id="ad94b13496fdf0b96efabeb86e685fdd89eada01" translate="yes" xml:space="preserve">
          <source>Custom Reporters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91441fc1bd3bf4b1866bc35b9ceca54fe1864e57" translate="yes" xml:space="preserve">
          <source>Custom commands are a great way to abstract away setup (specific to your app). When doing those kinds of tasks, skip as much of the UI as possible. Use &lt;a href=&quot;../commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; to login, set cookies or localStorage directly, stub and mock your applications functions, and / or trigger events programmatically.</source>
          <target state="translated">사용자 지정 명령은 설정을 추상화하는 좋은 방법입니다 (앱에 따라 다름). 이러한 종류의 작업을 수행 할 때는 가능한 한 많은 UI를 건너 뜁니다. &lt;a href=&quot;../commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt; 를 사용 하여 로그인하고 쿠키 또는 localStorage를 직접 설정하고 응용 프로그램 기능을 스텁 및 조롱하거나 프로그래밍 방식으로 이벤트를 트리거하십시오.</target>
        </trans-unit>
        <trans-unit id="9ff9cc201d8a668d6026bc86cd694c4c3f7a170d" translate="yes" xml:space="preserve">
          <source>Custom commands for Firebase including Authentication and Database communication (both Real Time Database and Firestore).</source>
          <target state="translated">인증 및 데이터베이스 통신 (실시간 데이터베이스 및 Firestore)을 포함한 Firebase 용 맞춤 명령</target>
        </trans-unit>
        <trans-unit id="16cb3173d8cac1013803372ff53995a522a0105b" translate="yes" xml:space="preserve">
          <source>Custom commands for shadow DOM support</source>
          <target state="translated">새도우 DOM 지원을위한 사용자 정의 명령</target>
        </trans-unit>
        <trans-unit id="2ad6f8e3320f0e1c4b72b21d7099db3bc9f97635" translate="yes" xml:space="preserve">
          <source>Custom commands no longer error out if they are the very first &lt;code&gt;cy&lt;/code&gt; command.</source>
          <target state="translated">사용자 정의 명령이 첫 번째 &lt;code&gt;cy&lt;/code&gt; 명령 인 경우 더 이상 오류가 발생하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="67ae38e49b14cdb33c666c82189ec654f4a10342" translate="yes" xml:space="preserve">
          <source>Custom commands work well when you&amp;rsquo;re needing to describe behavior that&amp;rsquo;s desirable across &lt;strong&gt;all of your tests&lt;/strong&gt;. Examples would be a &lt;code&gt;cy.setup()&lt;/code&gt; or &lt;code&gt;cy.login()&lt;/code&gt; or extending your application&amp;rsquo;s behavior like &lt;code&gt;cy.get('.dropdown').dropdown('Apples')&lt;/code&gt;. These are specific to your application and can be used everywhere.</source>
          <target state="translated">사용자 정의 명령은 &lt;strong&gt;모든 테스트&lt;/strong&gt; 에서 바람직한 동작을 설명해야 할 때 잘 작동 &lt;strong&gt;합니다&lt;/strong&gt; . 예를 들어 &lt;code&gt;cy.setup()&lt;/code&gt; 또는 &lt;code&gt;cy.login()&lt;/code&gt; 또는 &lt;code&gt;cy.get('.dropdown').dropdown('Apples')&lt;/code&gt; 과 같은 응용 프로그램 동작 확장 입니다. 이들은 애플리케이션에 따라 다르며 어디에서나 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b8708877030366a729d8be6d8ee1eff4b401e3a1" translate="yes" xml:space="preserve">
          <source>Custom headers and other headers &amp;ldquo;of interest&amp;rdquo; are rewritten for transparent compatibility.</source>
          <target state="translated">투명한 호환성을 위해 사용자 정의 헤더 및 기타 관심있는 헤더가 다시 작성되었습니다.</target>
        </trans-unit>
        <trans-unit id="37df32d62fc505273d2829f38d6b5d5d2b3adda3" translate="yes" xml:space="preserve">
          <source>Custom reporter for publishing Cypress results to a TestRail test run.</source>
          <target state="translated">Cypress 결과를 TestRail 테스트 실행에 게시하기위한 사용자 지정 기자.</target>
        </trans-unit>
        <trans-unit id="60273f665dee8f8e4c45bdb2d21bb86f108c4685" translate="yes" xml:space="preserve">
          <source>Customize the &lt;code&gt;babel&lt;/code&gt; settings to add your own plugins.</source>
          <target state="translated">자체 플러그인을 추가 하도록 &lt;code&gt;babel&lt;/code&gt; 설정을 사용자 정의하십시오 .</target>
        </trans-unit>
        <trans-unit id="3f16d98fa8492ee7147a5316bfeb5c7d3644bb3b" translate="yes" xml:space="preserve">
          <source>Cypress</source>
          <target state="translated">Cypress</target>
        </trans-unit>
        <trans-unit id="9d6d4c9f7411879c74391a52006e7dedc051c39a" translate="yes" xml:space="preserve">
          <source>Cypress &lt;code&gt;.js&lt;/code&gt; files are no longer minified to make them easier to debug.</source>
          <target state="translated">더 쉽게 디버깅 할 수 있도록 Cypress &lt;code&gt;.js&lt;/code&gt; 파일이 더 이상 축소되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="69bb979a44a573f92682a6ef967aa11acd1b71e0" translate="yes" xml:space="preserve">
          <source>Cypress &lt;code&gt;should&lt;/code&gt; callback</source>
          <target state="translated">Cypress &lt;code&gt;should&lt;/code&gt; 콜백 해야합니다</target>
        </trans-unit>
        <trans-unit id="dd834f87d55654636b544d559abbcd82fd34dc6e" translate="yes" xml:space="preserve">
          <source>Cypress API</source>
          <target state="translated">Cypress API</target>
        </trans-unit>
        <trans-unit id="e79886eaef25ee1a767b7bbd89725a0c4a901c04" translate="yes" xml:space="preserve">
          <source>Cypress Angular Schematic</source>
          <target state="translated">사이프러스 각 도식</target>
        </trans-unit>
        <trans-unit id="41077ca081d9da32474c23b44a47df79374161dd" translate="yes" xml:space="preserve">
          <source>Cypress Api</source>
          <target state="translated">사이프러스 API</target>
        </trans-unit>
        <trans-unit id="52eefa9ba6e0ab14078c1c7a45dd3034112ecb45" translate="yes" xml:space="preserve">
          <source>Cypress CLI no longer requires &lt;code&gt;git&lt;/code&gt; to install. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/124&quot;&gt;#124&lt;/a&gt;</source>
          <target state="translated">Cypress CLI는 더 이상 &lt;code&gt;git&lt;/code&gt; 을 설치 하지 않아도 됩니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/124&quot;&gt;# 124&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0aa0bdf7061e27bd73473d6ad095f5b4f6662e3d" translate="yes" xml:space="preserve">
          <source>Cypress Cookies API</source>
          <target state="translated">싸이프레스 쿠키 API</target>
        </trans-unit>
        <trans-unit id="9959819eed1eec586e5deb5e88bbcbd379c21bb5" translate="yes" xml:space="preserve">
          <source>Cypress Daywalker</source>
          <target state="translated">사이프러스 Daywalker</target>
        </trans-unit>
        <trans-unit id="35f838de597a062c7402e87c59292b2faf40dc9d" translate="yes" xml:space="preserve">
          <source>Cypress Errors in &lt;code&gt;hooks&lt;/code&gt; (&lt;code&gt;beforeEach&lt;/code&gt;, etc) will no longer cause Mocha to fire its &lt;code&gt;end&lt;/code&gt; event thus ending the entire run. In CI, this would cause the test suite to end early. Uncaught Mocha errors will however continue this behavior. Cypress does not yet have a &amp;ldquo;skipped&amp;rdquo; visual state for tests which were skipped, so at the moment it may look a little strange and unpredictable.</source>
          <target state="translated">&lt;code&gt;hooks&lt;/code&gt; Cypress 오류 ( &lt;code&gt;beforeEach&lt;/code&gt; 등)로 인해 더 이상 Mocha가 &lt;code&gt;end&lt;/code&gt; 이벤트 를 시작하지 않으므로 전체 실행이 종료됩니다. CI에서는 테스트 스위트가 일찍 종료됩니다. 잡히지 않은 Mocha 오류는이 동작을 계속합니다. Cypress는 아직 건너 뛴 테스트에 대해 &quot;건너 뛴&quot;시각적 상태를 갖지 않으므로 현재 조금 이상하고 예측할 수 없을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="88d186e76461bba8673c60f59e6c077762385c04" translate="yes" xml:space="preserve">
          <source>Cypress Events</source>
          <target state="translated">사이프러스 이벤트</target>
        </trans-unit>
        <trans-unit id="e2ab950a9aafc22fbd239b148d5700dae7d411c7" translate="yes" xml:space="preserve">
          <source>Cypress GitHub app installation process</source>
          <target state="translated">Cypress GitHub 앱 설치 프로세스</target>
        </trans-unit>
        <trans-unit id="1421f38b06ab7db60339dbf7bc0a26d648b10c8a" translate="yes" xml:space="preserve">
          <source>Cypress Image Snapshot</source>
          <target state="translated">사이프러스 이미지 스냅 샷</target>
        </trans-unit>
        <trans-unit id="a5c29edaa1a6568d26f4aa47714a618f2e21e08b" translate="yes" xml:space="preserve">
          <source>Cypress Is Simple</source>
          <target state="translated">사이프러스는 간단하다</target>
        </trans-unit>
        <trans-unit id="0b83e38e79f67bce5c1ce1c7ec8a6f4ecfea5015" translate="yes" xml:space="preserve">
          <source>Cypress Profile</source>
          <target state="translated">사이프러스 프로필</target>
        </trans-unit>
        <trans-unit id="b684aa809dec527ae9a9e296103b42a9ee59b092" translate="yes" xml:space="preserve">
          <source>Cypress Test Runner can wait for the property &lt;code&gt;window.appReady&lt;/code&gt; to be &lt;code&gt;true&lt;/code&gt; before every test</source>
          <target state="translated">Cypress Test Runner는 모든 테스트 전에 &lt;code&gt;window.appReady&lt;/code&gt; 속성 이 &lt;code&gt;true&lt;/code&gt; 가 될 때까지 기다릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d5d22d719324ad24c3524d119c1d8ff6f95d8b8a" translate="yes" xml:space="preserve">
          <source>Cypress Visual Regression</source>
          <target state="translated">사이프러스 시각 회귀</target>
        </trans-unit>
        <trans-unit id="bb4c1f9ea980a868e458efe31556ede34737e003" translate="yes" xml:space="preserve">
          <source>Cypress Watch Preprocessor</source>
          <target state="translated">Cypress Watch 프리 프로세서</target>
        </trans-unit>
        <trans-unit id="9cb0f68616a1ce91b2be26749d697804c1ae303f" translate="yes" xml:space="preserve">
          <source>Cypress additionally handles situations where a page load was not caused (such as hash routing) and will resolve immediately.</source>
          <target state="translated">Cypress는 페이지로드가 발생하지 않은 상황 (예 : 해시 라우팅)을 추가로 처리하여 즉시 해결됩니다.</target>
        </trans-unit>
        <trans-unit id="de149d69317b64471762f15fe066156d0ba4a998" translate="yes" xml:space="preserve">
          <source>Cypress aims not only to make it easier to write tests, but after you build a test harness, it will make it easier to dive into failed tests (hat run in CI). This release paves the way for providing after-run results and allowing you to dive into those failures.</source>
          <target state="translated">Cypress는 테스트를보다 쉽게 ​​작성하는 것을 목표로 할뿐만 아니라 테스트 하니스를 구축 한 후에는 실패한 테스트 (CI에서 실행)에 쉽게 뛰어들 수 있습니다. 이 릴리스는 실행 후 결과를 제공하고 이러한 실패에 대비할 수있는 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="27de11e0968111b28bb7427659b60e0f8f29cdce" translate="yes" xml:space="preserve">
          <source>Cypress allows you to control how a selector is determined.</source>
          <target state="translated">Cypress를 사용하면 선택기를 결정하는 방법을 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3800d9b000a1a2560d80b3707760dcf877eaed30" translate="yes" xml:space="preserve">
          <source>Cypress also bundles the following tools on the &lt;code&gt;Cypress&lt;/code&gt; object. These can be used anywhere inside of your tests.</source>
          <target state="translated">Cypress는 또한 &lt;code&gt;Cypress&lt;/code&gt; 객체 에 다음 도구를 번들로 제공 합니다. 테스트 내부 어디에서나 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b5c6824f5710b13d347fc599280c94c480c26953" translate="yes" xml:space="preserve">
          <source>Cypress also exposes a shortcut for debugging commands, &lt;a href=&quot;../../api/commands/debug&quot;&gt;&lt;code&gt;.debug()&lt;/code&gt;&lt;/a&gt;. Let&amp;rsquo;s rewrite the test above using this helper method:</source>
          <target state="translated">Cypress는 디버깅 명령 &lt;a href=&quot;../../api/commands/debug&quot;&gt; &lt;code&gt;.debug()&lt;/code&gt; &lt;/a&gt; 대한 바로 가기도 제공합니다 . 이 도우미 메서드를 사용하여 위의 테스트를 다시 작성해 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="7131ffb13e86e7e1beb68ebb5dca5c8e951fa339" translate="yes" xml:space="preserve">
          <source>Cypress also logs whether the XHR was stubbed or not to the console when you click on the command in the Command Log. It will indicate whether a request was stubbed, which url it matched or that it did not match any routes.</source>
          <target state="translated">Cypress는 명령 로그에서 명령을 클릭 할 때 XHR이 스텁되었는지 여부도 콘솔에 기록합니다. 요청이 스텁되었는지, 어떤 URL이 일치하는지 또는 어떤 경로와도 일치하지 않음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="c3039ff3ebae68304c6756b1cb2fcf0b0aec30cd" translate="yes" xml:space="preserve">
          <source>Cypress also operates at the network layer by reading and altering web traffic on the fly. This enables Cypress to not only modify everything coming in and out of the browser, but also to change code that may interfere with its ability to automate the browser.</source>
          <target state="translated">Cypress는 웹 트래픽을 즉시 읽고 변경하여 네트워크 계층에서 작동합니다. 이를 통해 Cypress는 브라우저로 들어오고 나가는 모든 것을 수정할 수있을뿐만 아니라 브라우저 자동화 기능을 방해 할 수있는 코드를 변경할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="205db03b575e9f29caf339ccf9dad818e09a328c" translate="yes" xml:space="preserve">
          <source>Cypress also provides hooks (borrowed from &lt;a href=&quot;../references/bundled-tools#Mocha&quot;&gt;Mocha&lt;/a&gt;).</source>
          <target state="translated">Cypress는 후크를 제공합니다 ( &lt;a href=&quot;../references/bundled-tools#Mocha&quot;&gt;Mocha&lt;/a&gt; 에서 빌림 ).</target>
        </trans-unit>
        <trans-unit id="cfdf94fdf7f006cca4ddbcad3ef0f56f8dbf81c1" translate="yes" xml:space="preserve">
          <source>Cypress also records videos when running tests.</source>
          <target state="translated">Cypress는 테스트를 실행할 때 비디오를 녹화합니다.</target>
        </trans-unit>
        <trans-unit id="8683b31eafef2362a9bd609d16533413a684d140" translate="yes" xml:space="preserve">
          <source>Cypress also ships other &lt;a href=&quot;../../plugins/index&quot;&gt;file-watching preprocessors&lt;/a&gt;; you&amp;rsquo;ll have to configure these explicitly if you want to use them.</source>
          <target state="translated">Cypress는 다른 &lt;a href=&quot;../../plugins/index&quot;&gt;파일 감시 프리 프로세서&lt;/a&gt; 도 제공 합니다 . 사용하려면 명시 적으로 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="63a1f2f000f0dedbe564c6836a62c5ac80c45bc2" translate="yes" xml:space="preserve">
          <source>Cypress also supports &lt;code&gt;ES2015&lt;/code&gt; out of the box. You can use either &lt;code&gt;ES2015 modules&lt;/code&gt; or &lt;code&gt;CommonJS modules&lt;/code&gt;. This means you can &lt;code&gt;import&lt;/code&gt; or &lt;code&gt;require&lt;/code&gt; both &lt;strong&gt;npm packages&lt;/strong&gt; and &lt;strong&gt;local relative modules&lt;/strong&gt;.</source>
          <target state="translated">Cypress는 기본적으로 &lt;code&gt;ES2015&lt;/code&gt; 를 지원합니다 . &lt;code&gt;ES2015 modules&lt;/code&gt; 또는 &lt;code&gt;CommonJS modules&lt;/code&gt; 사용할 수 있습니다 . 즉, &lt;strong&gt;npm 패키지&lt;/strong&gt; 와 &lt;strong&gt;로컬 상대 모듈을&lt;/strong&gt; 모두 &lt;code&gt;import&lt;/code&gt; 오거나 &lt;code&gt;require&lt;/code&gt; 수 있습니다 .&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ce8f3aa96584d41b8d64e9de6ad649d3d8ed5b72" translate="yes" xml:space="preserve">
          <source>Cypress attempts to &lt;a href=&quot;launching-browsers&quot;&gt;automatically find installed Chrome versions for you&lt;/a&gt;. However, probing for browsers across different environments can be error-prone. If Cypress cannot find a browser but you know you have it installed, there are ways to ensure that Cypress can &amp;ldquo;see&amp;rdquo; it.</source>
          <target state="translated">Cypress는 &lt;a href=&quot;launching-browsers&quot;&gt;설치된 Chrome 버전&lt;/a&gt; 을 자동으로 찾으려고 시도 합니다 . 그러나 서로 다른 환경에서 브라우저를 탐색하면 오류가 발생할 수 있습니다. Cypress가 브라우저를 찾을 수 없지만 브라우저를 설치했다는 것을 알고 있다면 Cypress가 브라우저를&amp;ldquo;볼&amp;rdquo;수있는 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="f462b9b54db2f04608eaf5243099335895e36206" translate="yes" xml:space="preserve">
          <source>Cypress authentication flows using social network providers</source>
          <target state="translated">소셜 네트워크 제공 업체를 사용한 Cypress 인증 흐름</target>
        </trans-unit>
        <trans-unit id="c60704aea584b8ff4de70f2d2fa6f676195e4834" translate="yes" xml:space="preserve">
          <source>Cypress automates the browser with its own unique architecture - different from any other testing tool. While this unlocks the power to do things you will not find anywhere else, there are specific trade-offs that are made. There is no free lunch!</source>
          <target state="translated">Cypress는 다른 테스트 도구와는 다른 고유 한 아키텍처로 브라우저를 자동화합니다. 이것은 당신이 다른 곳에서는 찾을 수없는 일을 할 수있는 힘을 열어 주지만, 특정한 절충안이 있습니다. 무료 점심은 없습니다!</target>
        </trans-unit>
        <trans-unit id="7faa7030aaa8dc43242e8b494135ff9c20a49f86" translate="yes" xml:space="preserve">
          <source>Cypress automatically accepts alerts but you can still assert on the text content.</source>
          <target state="translated">Cypress는 자동으로 경고를 수락하지만 텍스트 내용에 대해서는 여전히 주장 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="34020ac87c66d74769afe6f62ac732712505ff9e" translate="yes" xml:space="preserve">
          <source>Cypress automatically bundles and wraps these libraries:</source>
          <target state="translated">Cypress는 다음 라이브러리를 자동으로 묶고 랩핑합니다.</target>
        </trans-unit>
        <trans-unit id="4b9c8f425768b235449d1b7611cdef9610ff6beb" translate="yes" xml:space="preserve">
          <source>Cypress automatically clears all cookies &lt;em&gt;before&lt;/em&gt; each test to prevent state from being shared across tests. You shouldn&amp;rsquo;t need to use this command unless you&amp;rsquo;re using it to clear a specific cookie inside a single test.</source>
          <target state="translated">Cypress는 각 테스트 &lt;em&gt;전에&lt;/em&gt; 상태를 테스트간에 공유하지 못하도록 모든 쿠키 &lt;em&gt;를&lt;/em&gt; 자동으로 지 웁니다 . 단일 테스트 내에서 특정 쿠키를 지우는 데 사용하지 않는 한이 명령을 사용할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="8596d3363e8b48e4dde1dd500aa65bc2b5111190" translate="yes" xml:space="preserve">
          <source>Cypress automatically clears all cookies &lt;em&gt;before&lt;/em&gt; each test to prevent state from being shared across tests. You shouldn&amp;rsquo;t need to use this command unless you&amp;rsquo;re using it to clear all cookies inside a single test.</source>
          <target state="translated">Cypress는 각 테스트 &lt;em&gt;전에&lt;/em&gt; 상태를 테스트간에 공유하지 못하도록 모든 쿠키 &lt;em&gt;를&lt;/em&gt; 자동으로 지 웁니다 . 단일 테스트 내의 모든 쿠키를 지우는 데 사용하지 않는 한이 명령을 사용할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="952d12ab951895425a0272c9c486aab6d6f869cb" translate="yes" xml:space="preserve">
          <source>Cypress automatically clears all cookies &lt;strong&gt;before&lt;/strong&gt; each test to prevent state from building up.</source>
          <target state="translated">Cypress는 각 테스트 &lt;strong&gt;전에&lt;/strong&gt; 모든 쿠키 &lt;strong&gt;를&lt;/strong&gt; 자동으로 삭제 하여 상태가 쌓이지 않도록합니다.</target>
        </trans-unit>
        <trans-unit id="288419f1b4e6447098e10f904e22da5ba405beb9" translate="yes" xml:space="preserve">
          <source>Cypress automatically collects the request &lt;code&gt;headers&lt;/code&gt; and the request &lt;code&gt;body&lt;/code&gt; and will make this available to you.</source>
          <target state="translated">Cypress는 요청 &lt;code&gt;headers&lt;/code&gt; 와 요청 &lt;code&gt;body&lt;/code&gt; 자동으로 수집하여 사용자에게 제공합니다.</target>
        </trans-unit>
        <trans-unit id="a13213c6c4378cce77d1695a5a59a88c4f1b7c43" translate="yes" xml:space="preserve">
          <source>Cypress automatically continues to persist the server and routing configuration even after a test ends. This means you can continue to use your application and still benefit from stubbing or other server configuration.</source>
          <target state="translated">Cypress는 테스트가 끝난 후에도 서버와 라우팅 구성을 자동으로 계속 유지합니다. 즉, 응용 프로그램을 계속 사용할 수 있으며 스터 빙 또는 다른 서버 구성의 이점을 여전히 누릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="448e8a43ed6a0cdd95161a4d71ed4bf076e4e8eb" translate="yes" xml:space="preserve">
          <source>Cypress automatically detects available browsers on your OS. You can switch the browser in the Test Runner by using the drop down in the top right corner:</source>
          <target state="translated">Cypress는 OS에서 사용 가능한 브라우저를 자동으로 감지합니다. 오른쪽 상단의 드롭 다운을 사용하여 테스트 러너에서 브라우저를 전환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="195050812f55b35b744ecf4452211c1aab1e9622" translate="yes" xml:space="preserve">
          <source>Cypress automatically detects things like a &lt;code&gt;page transition event&lt;/code&gt; and will automatically &lt;strong&gt;halt&lt;/strong&gt; running commands until the next page has &lt;strong&gt;finished&lt;/strong&gt; loading.</source>
          <target state="translated">Cypress는 자동으로 &lt;code&gt;page transition event&lt;/code&gt; 감지 하고 다음 페이지 로드 가 &lt;strong&gt;완료&lt;/strong&gt; 될 때까지 실행중인 명령 을 자동으로 &lt;strong&gt;중지&lt;/strong&gt; 합니다 .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4d048d73b85c147a10d9165e637e967d8ea11293" translate="yes" xml:space="preserve">
          <source>Cypress automatically determines the encoding for the following file types:</source>
          <target state="translated">Cypress는 다음 파일 형식의 인코딩을 자동으로 결정합니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
