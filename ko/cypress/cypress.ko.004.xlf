<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="cypress">
    <body>
      <group id="cypress">
        <trans-unit id="f91e3ded351522df10339585b090b057e887db9d" translate="yes" xml:space="preserve">
          <source>Cypress automatically disables certain functionality in the Cypress launched browser that tend to get in the way of automated testing.</source>
          <target state="translated">Cypress는 자동 테스트를 방해하는 Cypress 브라우저에서 특정 기능을 자동으로 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="7c5ab06a36d25b1d990a6a9fcaa33ee49c405ccf" translate="yes" xml:space="preserve">
          <source>Cypress automatically includes &lt;a href=&quot;http://jquery.com/&quot;&gt;jQuery&lt;/a&gt; and exposes it as &lt;code&gt;Cypress.$&lt;/code&gt;.</source>
          <target state="translated">Cypress는 자동으로 &lt;a href=&quot;http://jquery.com/&quot;&gt;jQuery를&lt;/a&gt; 포함 하고이를 &lt;code&gt;Cypress.$&lt;/code&gt; 로 노출합니다 .</target>
        </trans-unit>
        <trans-unit id="3e4e794d0c17e362d2ad6d81b4671af0ca8eaece" translate="yes" xml:space="preserve">
          <source>Cypress automatically includes &lt;a href=&quot;http://momentjs.com/&quot;&gt;moment.js&lt;/a&gt; and exposes it as &lt;code&gt;Cypress.moment&lt;/code&gt;.</source>
          <target state="translated">싸이프레스는 자동으로 포함 &lt;a href=&quot;http://momentjs.com/&quot;&gt;moment.js&lt;/a&gt; 로하고 노출하는 그것을 &lt;code&gt;Cypress.moment&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="727141a325b329e459fc856f157377c20990812c" translate="yes" xml:space="preserve">
          <source>Cypress automatically includes &lt;a href=&quot;https://github.com/isaacs/minimatch&quot;&gt;minimatch&lt;/a&gt; and exposes it as &lt;code&gt;Cypress.minimatch&lt;/code&gt;.</source>
          <target state="translated">Cypress는 자동으로 &lt;a href=&quot;https://github.com/isaacs/minimatch&quot;&gt;미니 매치를&lt;/a&gt; 포함 하고이를 &lt;code&gt;Cypress.minimatch&lt;/code&gt; 로 표시 합니다.</target>
        </trans-unit>
        <trans-unit id="142e71e26e63b3f70f407e6ea5b30330f96b0e42" translate="yes" xml:space="preserve">
          <source>Cypress automatically includes &lt;a href=&quot;https://github.com/petkaantonov/bluebird&quot;&gt;Bluebird&lt;/a&gt; and exposes it as &lt;code&gt;Cypress.Promise&lt;/code&gt;.</source>
          <target state="translated">Cypress는 자동으로 &lt;a href=&quot;https://github.com/petkaantonov/bluebird&quot;&gt;Bluebird를&lt;/a&gt; 포함 하고이를 &lt;code&gt;Cypress.Promise&lt;/code&gt; 로 노출합니다 .</target>
        </trans-unit>
        <trans-unit id="7030562302ba8607ecbe737211e934ee0457002f" translate="yes" xml:space="preserve">
          <source>Cypress automatically includes &lt;a href=&quot;https://lodash.com/&quot;&gt;lodash&lt;/a&gt; and exposes it as &lt;code&gt;Cypress._&lt;/code&gt;. Call any valid Lodash method on &lt;code&gt;Cypress._&lt;/code&gt;</source>
          <target state="translated">싸이프레스는 자동으로 포함 &lt;a href=&quot;https://lodash.com/&quot;&gt;lodash&lt;/a&gt; 하고 노출하는 그것을 &lt;code&gt;Cypress._&lt;/code&gt; 을 . 에 유효한 Lodash 방법 전화 &lt;code&gt;Cypress._&lt;/code&gt; 을</target>
        </trans-unit>
        <trans-unit id="751194527fc0f1f6027a3dbadb474533e44aa86c" translate="yes" xml:space="preserve">
          <source>Cypress automatically includes a &lt;a href=&quot;https://github.com/nolanlawson/blob-util&quot;&gt;Blob&lt;/a&gt; library and exposes it as &lt;code&gt;Cypress.Blob&lt;/code&gt;.</source>
          <target state="translated">Cypress는 자동으로 &lt;a href=&quot;https://github.com/nolanlawson/blob-util&quot;&gt;Blob&lt;/a&gt; 라이브러리를 포함하고 이를 &lt;code&gt;Cypress.Blob&lt;/code&gt; 으로 노출합니다 .</target>
        </trans-unit>
        <trans-unit id="d7592108cf1b7d6d67b11f34d0f50eb01eb24858" translate="yes" xml:space="preserve">
          <source>Cypress automatically indicates when an XHR request happens in your application. These are always logged in the Command Log (regardless of whether it&amp;rsquo;s stubbed). Cypress indicates when a request has started and when it is finished. Additionally, Cypress takes a snapshot of the DOM at the moment the request is made and another snapshot at the moment the response returns.</source>
          <target state="translated">Cypress는 애플리케이션에서 XHR 요청이 발생하면 자동으로 표시합니다. 스텁 여부에 관계없이 항상 명령 로그에 기록됩니다. Cypress는 요청이 시작된시기와 완료된시기를 나타냅니다. 또한 Cypress는 요청이있을 때 DOM의 스냅 샷을 만들고 응답이 반환되는 순간에 다른 스냅 샷을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="089eedb4a06d8d7e3ea56740bc0c3c21e8a70dfa" translate="yes" xml:space="preserve">
          <source>Cypress automatically matches the spec and browser behavior for pressing the &lt;code&gt;{enter}&lt;/code&gt; key when the input belongs to a &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Cypress 는 입력이 &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 에 속하는 경우 &lt;code&gt;{enter}&lt;/code&gt; 키 를 누르기위한 스펙 및 브라우저 동작과 자동으로 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="7f145d0c0fa0ba06400026843839a67b825d3107" translate="yes" xml:space="preserve">
          <source>Cypress automatically normalizes the &lt;code&gt;cy.location()&lt;/code&gt; command and strips out extraneous values and properties found in &lt;code&gt;window.location&lt;/code&gt;. Also, the object literal yielded by &lt;code&gt;cy.location()&lt;/code&gt; is just a basic object literal, not the special &lt;code&gt;window.location&lt;/code&gt; object.</source>
          <target state="translated">Cypress는 &lt;code&gt;cy.location()&lt;/code&gt; 명령을 자동으로 정규화하고 &lt;code&gt;window.location&lt;/code&gt; 에있는 외부 값과 속성을 제거합니다 . 또한 &lt;code&gt;cy.location()&lt;/code&gt; 의해 생성 된 객체 리터럴은 특수한 &lt;code&gt;window.location&lt;/code&gt; 객체가 아닌 기본 객체 리터럴 일뿐 입니다.</target>
        </trans-unit>
        <trans-unit id="fe542103b183548d306ffcb355167f3b048a84f3" translate="yes" xml:space="preserve">
          <source>Cypress automatically prepends the &lt;code&gt;http://&lt;/code&gt; protocol to common hosts. If you&amp;rsquo;re not using one of these 3 hosts, then make sure to provide the protocol.</source>
          <target state="translated">Cypress는 &lt;code&gt;http://&lt;/code&gt; 프로토콜을 공통 호스트 앞에 자동으로 추가 합니다. 이 3 개의 호스트 중 하나를 사용하지 않는 경우 프로토콜을 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="babeb9d70f2af57eb60b9647c2cec2b5f4b05efc" translate="yes" xml:space="preserve">
          <source>Cypress automatically reads from your system&amp;rsquo;s &lt;code&gt;HTTP_PROXY&lt;/code&gt; environment variable and uses that proxy for all HTTP and HTTPS traffic. If an &lt;code&gt;HTTPS_PROXY&lt;/code&gt; environment variable is set, HTTPS traffic will use that proxy instead.</source>
          <target state="translated">Cypress는 시스템의 &lt;code&gt;HTTP_PROXY&lt;/code&gt; 환경 변수 에서 자동으로 읽고 모든 HTTP 및 HTTPS 트래픽에 해당 프록시를 사용합니다. 는 IF &lt;code&gt;HTTPS_PROXY&lt;/code&gt; 환경 변수가 설정되어, HTTPS 트래픽이 대신 프록시를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="f83a4b79b348fb55a78e735598e4af406e143324" translate="yes" xml:space="preserve">
          <source>Cypress automatically retries &lt;code&gt;cypress verify&lt;/code&gt; and &lt;code&gt;cypress run&lt;/code&gt; commands by starting its own Xvfb server on Linux if the first attempt fails due to possible &lt;code&gt;DISPLAY&lt;/code&gt; misconfiguration. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4034&quot;&gt;#4034&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;DISPLAY&lt;/code&gt; 구성 이 잘못되어 첫 번째 시도가 실패하면 Cypress 는 Linux에서 자체 Xvfb 서버를 시작하여 &lt;code&gt;cypress verify&lt;/code&gt; 및 &lt;code&gt;cypress run&lt;/code&gt; 명령을 자동으로 재 시도합니다 . 주소 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4034&quot;&gt;# 4034&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bea1daf076563864117140a361307480f75692cb" translate="yes" xml:space="preserve">
          <source>Cypress automatically runs this command &lt;em&gt;before&lt;/em&gt; each test to prevent state from being shared across tests. You shouldn&amp;rsquo;t need to use this command unless you&amp;rsquo;re using it to clear localStorage inside a single test.</source>
          <target state="translated">Cypress는 각 테스트 &lt;em&gt;전에이&lt;/em&gt; 명령을 자동으로 실행하여 여러 테스트에서 상태가 공유되지 않도록합니다. 단일 테스트에서 localStorage를 지우는 데 사용하지 않는 한이 명령을 사용할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="59ba96363233abebd8a8d6249e317b340963d2f6" translate="yes" xml:space="preserve">
          <source>Cypress automatically scaffolds out a suggested folder structure for organizing your fixtures on every new project. By default it will create an &lt;code&gt;example.json&lt;/code&gt; file when you add your project to Cypress.</source>
          <target state="translated">Cypress는 모든 새 프로젝트에서 조명기를 구성하기 위해 제안 된 폴더 구조를 자동으로 스캐 폴딩합니다. Cypress에 프로젝트를 추가 하면 기본적으로 &lt;code&gt;example.json&lt;/code&gt; 파일 이 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="17eeec7102c0df2fcb69a2d62603edbeb383c0dd" translate="yes" xml:space="preserve">
          <source>Cypress automatically sets &lt;code&gt;Content-Length&lt;/code&gt; and &lt;code&gt;Content-Type&lt;/code&gt; based on the response &lt;code&gt;body&lt;/code&gt; you stub.</source>
          <target state="translated">Cypress는 스텁 한 응답 &lt;code&gt;body&lt;/code&gt; 을 기반으로 &lt;code&gt;Content-Length&lt;/code&gt; 및 &lt;code&gt;Content-Type&lt;/code&gt; 을 자동으로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="8537b0319700a7c0b5584023688134eb9c4f8c3f" translate="yes" xml:space="preserve">
          <source>Cypress automatically traveled back in time to a snapshot of when that command resolved. Additionally, since &lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains()&lt;/code&gt;&lt;/a&gt; finds DOM elements on the page, Cypress also highlights the element and scrolls it into view (to the top of the page).</source>
          <target state="translated">Cypress는 시간이 지남에 따라 해당 명령이 해결 된 시점의 스냅 샷으로 자동 이동했습니다. 또한 &lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains()&lt;/code&gt; &lt;/a&gt; 는 페이지에서 DOM 요소를 찾아서 요소를 강조 표시하고 페이지 맨 위로 스크롤합니다.</target>
        </trans-unit>
        <trans-unit id="78dc4e0c2575d42f4d4738679fbf1995e0d60fd2" translate="yes" xml:space="preserve">
          <source>Cypress automatically validates your fixtures. If your &lt;code&gt;.json&lt;/code&gt;, &lt;code&gt;.js&lt;/code&gt;, or &lt;code&gt;.coffee&lt;/code&gt; files contain syntax errors, they will be shown in the Command Log.</source>
          <target state="translated">Cypress는 조명기를 자동으로 검증합니다. 귀하의 경우 &lt;code&gt;.json&lt;/code&gt; , &lt;code&gt;.js&lt;/code&gt; , 또는 &lt;code&gt;.coffee&lt;/code&gt; 파일을 구문 오류를 포함, 그들은 명령 로그에 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="72b4f83152eb81b3029883b9f05f1707ebae0c08" translate="yes" xml:space="preserve">
          <source>Cypress automatically waits for the network call to complete before proceeding to the next command.</source>
          <target state="translated">Cypress는 자동으로 네트워크 호출이 완료 될 때까지 기다렸다가 다음 명령을 진행합니다.</target>
        </trans-unit>
        <trans-unit id="1f239706295d2bc14c4317941e9e5548f210e527" translate="yes" xml:space="preserve">
          <source>Cypress binaries can now be pointed to a staging environment with &lt;code&gt;CYPRESS_ENV=staging&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/813&quot;&gt;#813&lt;/a&gt;.</source>
          <target state="translated">Cypress 바이너리는 이제 &lt;code&gt;CYPRESS_ENV=staging&lt;/code&gt; 으로 스테이징 환경을 가리킬 수 있습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/813&quot;&gt;# 813&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="898b813e518d7e021000e6b2dfe3532750575a81" translate="yes" xml:space="preserve">
          <source>Cypress blurs other focused elements first</source>
          <target state="translated">싸이프레스는 다른 집중된 요소를 먼저 흐리게합니다</target>
        </trans-unit>
        <trans-unit id="80b9d7b438082a441faad059e0d4791d0912a368" translate="yes" xml:space="preserve">
          <source>Cypress builds on these popular tools and frameworks that you &lt;em&gt;hopefully&lt;/em&gt; already have some familiarity and knowledge of. If not, that&amp;rsquo;s okay too.</source>
          <target state="translated">싸이프레스는 이러한 인기있는 도구와 그 프레임 워크에 기반 &lt;em&gt;희망&lt;/em&gt; 이미 일부 친숙과 지식을 가지고있다. 그렇지 않다면 괜찮습니다.</target>
        </trans-unit>
        <trans-unit id="9665b9dff61c3e494294b89d7bf8037283563ddb" translate="yes" xml:space="preserve">
          <source>Cypress bundles &lt;a href=&quot;../references/bundled-tools#Chai&quot;&gt;&lt;code&gt;Chai&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../references/bundled-tools#Chai-jQuery&quot;&gt;&lt;code&gt;Chai-jQuery&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../references/bundled-tools#Sinon-Chai&quot;&gt;&lt;code&gt;Sinon-Chai&lt;/code&gt;&lt;/a&gt; to provide built-in assertions. You can see a comprehensive list of them in &lt;a href=&quot;../references/assertions&quot;&gt;the list of assertions reference&lt;/a&gt;. You can also &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Fundamentals&quot;&gt;write your own assertions as Chai plugins&lt;/a&gt; and use them in Cypress.</source>
          <target state="translated">Cypress는 &lt;a href=&quot;../references/bundled-tools#Chai&quot;&gt; &lt;code&gt;Chai&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../references/bundled-tools#Chai-jQuery&quot;&gt; &lt;code&gt;Chai-jQuery&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../references/bundled-tools#Sinon-Chai&quot;&gt; &lt;code&gt;Sinon-Chai&lt;/code&gt; &lt;/a&gt; 를 번들 로 제공하여 기본 제공 어설 션을 제공합니다. &lt;a href=&quot;../references/assertions&quot;&gt;어설 션 참조 목록&lt;/a&gt; 에서 해당 목록을 포괄적으로 볼 수 있습니다 . 당신은 또한 수 &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Fundamentals&quot;&gt;차이 플러그인으로 자신의 주장을 쓰기&lt;/a&gt; 및 싸이프레스에서 사용할.</target>
        </trans-unit>
        <trans-unit id="8bb48c90410e6d5e56a8225e337f6bcdbca2e881" translate="yes" xml:space="preserve">
          <source>Cypress bundles the popular &lt;a href=&quot;assertions#Chai&quot;&gt;Chai&lt;/a&gt; assertion library, as well as helpful extensions for &lt;a href=&quot;assertions#Sinon-Chai&quot;&gt;Sinon&lt;/a&gt; and &lt;a href=&quot;assertions#Chai-jQuery&quot;&gt;jQuery&lt;/a&gt;, bringing you dozens of powerful assertions for free.</source>
          <target state="translated">Cypress는 인기있는 &lt;a href=&quot;assertions#Chai&quot;&gt;Chai&lt;/a&gt; 어설 션 라이브러리 와 &lt;a href=&quot;assertions#Sinon-Chai&quot;&gt;Sinon&lt;/a&gt; 및 &lt;a href=&quot;assertions#Chai-jQuery&quot;&gt;jQuery를&lt;/a&gt; 위한 유용한 확장 기능을 번들로 제공하여 수십 가지의 강력한 어설 션을 무료로 제공합니다.</target>
        </trans-unit>
        <trans-unit id="912b8a05d7641a5157a8ac62f883eb478cd4d4ac" translate="yes" xml:space="preserve">
          <source>Cypress can alternatively be downloaded / installed / managed through the CLI utility.</source>
          <target state="translated">Cypress는 CLI 유틸리티를 통해 다운로드 / 설치 / 관리 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="60d75cf98a5f411854c3f6e1877aa625ee49a1a2" translate="yes" xml:space="preserve">
          <source>Cypress can now be run through the terminal.</source>
          <target state="translated">이제 Cypress를 터미널을 통해 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e52e2dd568be1d72784cb2efddb9a6b58e7b0a3b" translate="yes" xml:space="preserve">
          <source>Cypress can now predict upcoming assertions and modifies its behavior until the intended state has been reached.</source>
          <target state="translated">Cypress는 이제 예정된 어설 션을 예측하고 의도 한 상태에 도달 할 때까지 동작을 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e2ad329d390b4141f10aee1a1a3819d515c27308" translate="yes" xml:space="preserve">
          <source>Cypress can now run tests in parallel across multiple virtual machines, or can be parallelized on a single machine. Cypress will automatically figure out, detect, and load balance all of your specs in the fastest and most efficient way possible. There is no configuration other than passing a &lt;code&gt;--parallel&lt;/code&gt; flag and spinning up multiple machines on your CI provider. From our experiments you can expect to see approximately 40% reduction in overall run time &lt;strong&gt;per machine&lt;/strong&gt; you add. However, attempting to run in parallel on a single machine requires server grade hardware with dozens (or even hundreds) of CPU&amp;rsquo;s and GB of RAM to run efficiently. A much better and simpler approach is to use a cluster of docker containers that are all isolated from each other. Any standard CI service (CircleCI, TravisCI, etc) comes with the ability to do this. We automatically tap into their environment variables to make parallelization possible without you having to configure anything.</source>
          <target state="translated">Cypress는 이제 여러 가상 머신에서 병렬로 테스트를 실행하거나 단일 머신에서 병렬화 할 수 있습니다. Cypress는 모든 사양을 가장 빠르고 효율적으로 자동으로 파악, 감지 및로드 밸런싱합니다. CI 공급자 에서 &lt;code&gt;--parallel&lt;/code&gt; 플래그를 전달하고 여러 시스템을 가동시키는 것 외에 다른 구성은 없습니다 . 실험 결과 &lt;strong&gt;머신 당&lt;/strong&gt; 전체 실행 시간이 약 40 % 단축 될 것으로 예상 할 수 있습니다.&lt;strong&gt;&lt;/strong&gt;당신은 추가합니다. 그러나 단일 시스템에서 병렬로 실행하려면 수십 개 (또는 수백 개)의 CPU와 GB의 RAM이있는 서버급 하드웨어가 효율적으로 실행되어야합니다. 훨씬 더 좋고 간단한 접근 방식은 서로 격리 된 도커 컨테이너 클러스터를 사용하는 것입니다. 모든 표준 CI 서비스 (CircleCI, TravisCI 등)에는이 기능이 제공됩니다. 우리는 환경 변수를 자동으로 활용하여 아무것도 구성하지 않고도 병렬화가 가능합니다.</target>
        </trans-unit>
        <trans-unit id="23a5ef31242deab64e195adfbe1a38ad88d51a91" translate="yes" xml:space="preserve">
          <source>Cypress can optionally act as your web server</source>
          <target state="translated">Cypress는 선택적으로 웹 서버로 작동 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="52a1e735505baab89a80b2a04906c502f6810599" translate="yes" xml:space="preserve">
          <source>Cypress can record your tests and make the results available in the &lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;Cypress Dashboard&lt;/a&gt;.</source>
          <target state="translated">Cypress는 테스트를 기록하고 &lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;Cypress 대시 보드&lt;/a&gt; 에서 결과를 제공 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3103ba5c9e66eaf766875de6213e0aa881db8c23" translate="yes" xml:space="preserve">
          <source>Cypress can run recorded tests in parallel across multiple machines since version &lt;a href=&quot;../references/changelog#3-1-0&quot;&gt;3.1.0&lt;/a&gt;. While parallel tests can also technically run on a single machine, we do not recommend it since this machine would require significant resources to run your tests efficiently.</source>
          <target state="translated">Cypress는 버전 &lt;a href=&quot;../references/changelog#3-1-0&quot;&gt;3.1.0&lt;/a&gt; 부터 여러 시스템에서 병렬로 기록 된 테스트를 실행할 수 있습니다 . 병렬 테스트는 단일 시스템에서 기술적으로 실행될 수도 있지만이 시스템은 테스트를 효율적으로 실행하기 위해 많은 리소스가 필요하므로 권장하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2173f81e07457a0732a40f22e5ee36f61611b691" translate="yes" xml:space="preserve">
          <source>Cypress can run tests in parallel across multiple machines.</source>
          <target state="translated">Cypress는 여러 컴퓨터에서 병렬로 테스트를 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aa678a497e7e8bf52054c3a0c74b4695275f8108" translate="yes" xml:space="preserve">
          <source>Cypress can test anything that runs in a browser.</source>
          <target state="translated">Cypress는 브라우저에서 실행되는 모든 것을 테스트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0d211cdcd1a5f322d6f4a14cc03cba0a9600ed4e" translate="yes" xml:space="preserve">
          <source>Cypress cannot execute commands outside a running test</source>
          <target state="translated">Cypress는 실행중인 테스트 외부에서 명령을 실행할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="16683bbf2f77a2ab0c323cab4d75ab4ebba826e1" translate="yes" xml:space="preserve">
          <source>Cypress cannot yield you primitive values isolated away from other commands. That is because Cypress commands act internally like an asynchronous stream of data that only resolve after being affected and modified &lt;strong&gt;by other commands&lt;/strong&gt;. This means we cannot yield you discrete values in chunks because we have to know everything about what you expect before handing off a value.</source>
          <target state="translated">Cypress는 다른 명령과 분리 된 기본 값을 생성 할 수 없습니다. Cypress 명령 &lt;strong&gt;은 다른 명령에 의해&lt;/strong&gt; 영향을 받고 수정 된 후에 만 ​​해결되는 비동기식 데이터 스트림처럼 내부적으로 작동하기 때문 입니다. 이는 값을 전달하기 전에 예상되는 모든 것에 대해 알아야하기 때문에 이산 값을 청크로 표시 할 수 없음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="929411f923ca9e9e94dd67b3031d641004ccbf97" translate="yes" xml:space="preserve">
          <source>Cypress checks a lot of things to determine an element&amp;rsquo;s visibility.</source>
          <target state="translated">Cypress는 많은 요소를 검사하여 요소의 가시성을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="6d5100aad92c1ad903368d629fc93a277a4bbeb6" translate="yes" xml:space="preserve">
          <source>Cypress checks whether an element&amp;rsquo;s &lt;code&gt;disabled&lt;/code&gt; property is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Cypress는 요소의 &lt;code&gt;disabled&lt;/code&gt; 속성이 &lt;code&gt;true&lt;/code&gt; 인지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="0383d22e8f7a1d254e65aabb4bc19e4542fe00c6" translate="yes" xml:space="preserve">
          <source>Cypress checks whether an element&amp;rsquo;s &lt;code&gt;readonly&lt;/code&gt; property is set during &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Cypress는 &lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 동안 요소의 &lt;code&gt;readonly&lt;/code&gt; 속성이 설정되어 있는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="9afb80f4962c57b5762a23322188807dbac49560" translate="yes" xml:space="preserve">
          <source>Cypress clears any existing screenshots before &lt;code&gt;cypress run&lt;/code&gt;. If you do not want to clear your screenshots folder before a run, you can set &lt;a href=&quot;../references/configuration#Screenshots&quot;&gt;&lt;code&gt;trashAssetsBeforeRuns&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Cypress는 &lt;code&gt;cypress run&lt;/code&gt; 하기 전에 기존 스크린 샷을 모두 지 웁니다 . 실행하기 전에 스크린 샷 폴더를 지우지 않으려면 &lt;a href=&quot;../references/configuration#Screenshots&quot;&gt; &lt;code&gt;trashAssetsBeforeRuns&lt;/code&gt; &lt;/a&gt; 를 &lt;code&gt;false&lt;/code&gt; 로 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a71a5e72a4079ddb8202c2fec6ea8dad1d8104b0" translate="yes" xml:space="preserve">
          <source>Cypress clears any existing videos before a &lt;code&gt;cypress run&lt;/code&gt;. If you do not want to clear your videos folder before a run, you can set &lt;a href=&quot;../references/configuration#Videos&quot;&gt;&lt;code&gt;trashAssetsBeforeRuns&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Cypress는 &lt;code&gt;cypress run&lt;/code&gt; 하기 전에 기존 비디오를 모두 지 웁니다 . 실행하기 전에 비디오 폴더를 지우지 않으려면 &lt;a href=&quot;../references/configuration#Videos&quot;&gt; &lt;code&gt;trashAssetsBeforeRuns&lt;/code&gt; &lt;/a&gt; 를 &lt;code&gt;false&lt;/code&gt; 로 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="931fce5e101a0a8e25b78524da1887402fccf4cf" translate="yes" xml:space="preserve">
          <source>Cypress comes built in with the ability to stub and spy with &lt;a href=&quot;../../api/commands/stub&quot;&gt;&lt;code&gt;cy.stub()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/spy&quot;&gt;&lt;code&gt;cy.spy()&lt;/code&gt;&lt;/a&gt; or modify your application&amp;rsquo;s time with &lt;a href=&quot;../../api/commands/clock&quot;&gt;&lt;code&gt;cy.clock()&lt;/code&gt;&lt;/a&gt; - which lets you manipulate &lt;code&gt;Date&lt;/code&gt;, &lt;code&gt;setTimeout&lt;/code&gt;, &lt;code&gt;setInterval&lt;/code&gt;, amongst others.</source>
          <target state="translated">싸이프레스는와 스텁 및 스파이의 능력에 내장되어 제공 &lt;a href=&quot;../../api/commands/stub&quot;&gt; &lt;code&gt;cy.stub()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../api/commands/spy&quot;&gt; &lt;code&gt;cy.spy()&lt;/code&gt; &lt;/a&gt; 또는 사용하여 응용 프로그램의 시간을 수정 &lt;a href=&quot;../../api/commands/clock&quot;&gt; &lt;code&gt;cy.clock()&lt;/code&gt; &lt;/a&gt; 사용자가 조작 할 수 있습니다 - &lt;code&gt;Date&lt;/code&gt; , &lt;code&gt;setTimeout&lt;/code&gt; , &lt;code&gt;setInterval&lt;/code&gt; 을 , 다른 사람의 사이에.</target>
        </trans-unit>
        <trans-unit id="7bf7fe5af15a1269e870d3c1c6ecf84ef8120899" translate="yes" xml:space="preserve">
          <source>Cypress comes fully baked, batteries included. Here is a list of things it can do that no other testing framework can:</source>
          <target state="translated">Cypress는 완전히 구운 상태이며 배터리가 포함되어 있습니다. 다른 테스트 프레임 워크로는 할 수없는 일의 목록은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ca3cc26261bd6489e55404d0b33fa67f81b9de37" translate="yes" xml:space="preserve">
          <source>Cypress comes with TypeScript &lt;a href=&quot;https://github.com/cypress-io/cypress/tree/develop/cli/types&quot;&gt;type declarations&lt;/a&gt; included. Modern text editors can use these type declarations to show IntelliSense inside spec files.</source>
          <target state="translated">Cypress에는 TypeScript &lt;a href=&quot;https://github.com/cypress-io/cypress/tree/develop/cli/types&quot;&gt;유형 선언이&lt;/a&gt; 포함되어 있습니다. 최신 텍스트 편집기는 이러한 형식 선언을 사용하여 사양 파일 내에 IntelliSense를 표시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3263deada359340d90252172c2459ae06008e43a" translate="yes" xml:space="preserve">
          <source>Cypress comes with a host of debugging tools to help you understand a test.</source>
          <target state="translated">Cypress는 테스트를 이해하는 데 도움이되는 다양한 디버깅 도구와 함께 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="6918efc1ebd09db151521ea9cdcdd52f82b3c772" translate="yes" xml:space="preserve">
          <source>Cypress comes with an npm CLI module that parses the arguments, starts the Xvfb server (if necessary), and then opens the Test Runner application built on top of &lt;a href=&quot;https://electronjs.org/&quot;&gt;Electron&lt;/a&gt;. Some common situations on why you would want to do this are:</source>
          <target state="translated">Cypress에는 인수를 구문 분석하고 Xvfb 서버를 시작한 다음 (필요한 경우) &lt;a href=&quot;https://electronjs.org/&quot;&gt;Electron&lt;/a&gt; 위에 구축 된 Test Runner 응용 프로그램을 여는 npm CLI 모듈이 제공됩니다 . 이 작업을 수행하려는 일반적인 상황은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="123d9e5825e33fa08bddda9f842051a34f825320" translate="yes" xml:space="preserve">
          <source>Cypress comes with its own API for creating custom commands and overwriting existing commands. The built in Cypress commands use the very same API that&amp;rsquo;s defined below.</source>
          <target state="translated">Cypress에는 사용자 지정 명령을 만들고 기존 명령을 덮어 쓸 수있는 자체 API가 있습니다. 내장 Cypress 명령은 아래 정의 된 것과 동일한 API를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="2bdfa9e9ef6ea9ad9dab228a342f18673f60c6f1" translate="yes" xml:space="preserve">
          <source>Cypress comes with the ability to take screenshots, whether you are running in interactive mode using &lt;code&gt;cypress open&lt;/code&gt; or run mode using &lt;code&gt;cypress run&lt;/code&gt;, even in CI.</source>
          <target state="translated">Cypress는 CI 에서조차 &lt;code&gt;cypress open&lt;/code&gt; 을 사용하여 대화식 모드로 실행하든 &lt;code&gt;cypress run&lt;/code&gt; 을 사용하여 실행 모드 로 실행하든 스크린 샷을 찍을 수있는 기능을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="822e1455e6de84e64fde2cd2d3ce65cecb59965c" translate="yes" xml:space="preserve">
          <source>Cypress commands do not &lt;strong&gt;return&lt;/strong&gt; their subjects, they &lt;strong&gt;yield&lt;/strong&gt; them. Remember: Cypress commands are asynchronous and get queued for execution at a later time. During execution, subjects are yielded from one command to the next, and a lot of helpful Cypress code runs between each command to ensure everything is in order.</source>
          <target state="translated">Cypress 명령은 주제를 &lt;strong&gt;반환&lt;/strong&gt; 하지 않고 &lt;strong&gt;산출&lt;/strong&gt; 합니다. 기억하십시오 : Cypress 명령은 비동기식이며 나중에 실행을 위해 대기합니다. 실행하는 동안 한 명령에서 다음 명령으로 주제가 생성되고 각 명령간에 많은 유용한 Cypress 코드가 실행되어 모든 것이 올바르게 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="729afd450f7bf2e2cd6448908d04783640ee1a6a" translate="yes" xml:space="preserve">
          <source>Cypress commands now correctly execute in &lt;code&gt;after&lt;/code&gt; and &lt;code&gt;afterEach&lt;/code&gt; hooks on a failed test. Previously they would only run on passing tests. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/203&quot;&gt;#203&lt;/a&gt;.</source>
          <target state="translated">싸이프레스 명령이 올바르게에서 실행 &lt;code&gt;after&lt;/code&gt; 및 &lt;code&gt;afterEach&lt;/code&gt; 은 실패한 테스트에 후크. 이전에는 테스트 통과시에만 실행되었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/203&quot;&gt;# 203&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="e14e3d04185457907a347598c85d9c0d5ab87aa2" translate="yes" xml:space="preserve">
          <source>Cypress commands run &lt;a href=&quot;#Inside-the-browser&quot;&gt;inside of a browser&lt;/a&gt;.</source>
          <target state="translated">Cypress 명령 &lt;a href=&quot;#Inside-the-browser&quot;&gt;은 브라우저 내에서&lt;/a&gt; 실행 됩니다 .</target>
        </trans-unit>
        <trans-unit id="4ab666a9f5afc5d30724737c6653f8db7ea4b824" translate="yes" xml:space="preserve">
          <source>Cypress consists of a free, &lt;a href=&quot;https://github.com/cypress-io/cypress&quot;&gt;open source&lt;/a&gt;, &lt;a href=&quot;../getting-started/installing-cypress&quot;&gt;locally installed&lt;/a&gt; Test Runner &lt;strong&gt;and&lt;/strong&gt; a Dashboard Service for &lt;a href=&quot;../dashboard/introduction&quot;&gt;recording your tests&lt;/a&gt;.</source>
          <target state="translated">싸이프레스는 무료로 구성되어 &lt;a href=&quot;https://github.com/cypress-io/cypress&quot;&gt;오픈 소스&lt;/a&gt; , &lt;a href=&quot;../getting-started/installing-cypress&quot;&gt;로컬에 설치된&lt;/a&gt; 테스트 러너 &lt;strong&gt;와&lt;/strong&gt; 의 대시 보드 서비스 &lt;a href=&quot;../dashboard/introduction&quot;&gt;테스트를 기록&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2ff4d303420678cfd6b7c0a4b073366dad8327c6" translate="yes" xml:space="preserve">
          <source>Cypress currently uses the following CI environment variables to determine a CI build ID for a test run:</source>
          <target state="translated">Cypress는 현재 다음 CI 환경 변수를 사용하여 테스트 실행을위한 CI 빌드 ID를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="515af59aed8f8db0f27fc6db95f51d17827972fc" translate="yes" xml:space="preserve">
          <source>Cypress deprecations and warnings are now prefixed with: &lt;code&gt;Cypress Warning:&lt;/code&gt; to indicate this message is coming from Cypress</source>
          <target state="translated">Cypress 지원 중단 및 경고에 이제 접두사가 붙습니다. &lt;code&gt;Cypress Warning:&lt;/code&gt; 이 메시지가 Cypress에서 전송되었음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="763e595fb34a1f3baf6fbdd1895303cd890c533d" translate="yes" xml:space="preserve">
          <source>Cypress detected a cross-origin error happened on page load</source>
          <target state="translated">Cypress에서 페이지로드시 교차 출처 오류가 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="e3f72a17b05bf4b133aa5c20a789480165bc6c04" translate="yes" xml:space="preserve">
          <source>Cypress detected policy settings on your computer that may cause issues</source>
          <target state="translated">Cypress에서 컴퓨터에서 정책 설정을 감지하여 문제가 발생할 수 있음</target>
        </trans-unit>
        <trans-unit id="325dd4b2bfdf772a77b7097ad721056b251aafb4" translate="yes" xml:space="preserve">
          <source>Cypress detected that an uncaught error was thrown from a cross-origin script.</source>
          <target state="translated">Cypress는 교차 출처 스크립트에서 포착되지 않은 오류가 발생했음을 감지했습니다.</target>
        </trans-unit>
        <trans-unit id="07a47945ef9b212ecfabd712f70225db3723ff6c" translate="yes" xml:space="preserve">
          <source>Cypress detected that you invoked one or more &lt;code&gt;cy&lt;/code&gt; commands but returned a different value.</source>
          <target state="translated">Cypress가 하나 이상의 &lt;code&gt;cy&lt;/code&gt; 명령 을 호출 했지만 다른 값을 리턴 했음을 감지했습니다 .</target>
        </trans-unit>
        <trans-unit id="a6e4d587eec2b6141ddce97b63ed14bf9f0d6415" translate="yes" xml:space="preserve">
          <source>Cypress detected that you invoked one or more &lt;code&gt;cy&lt;/code&gt; commands in a custom command but returned a different value.</source>
          <target state="translated">Cypress 가 사용자 정의 명령에서 하나 이상의 &lt;code&gt;cy&lt;/code&gt; 명령 을 호출 했지만 다른 값을 리턴 했음을 발견했습니다 .</target>
        </trans-unit>
        <trans-unit id="e1d84a5590d4062daf8fa058059f7def2b68fbe0" translate="yes" xml:space="preserve">
          <source>Cypress detected that you invoked one or more cy commands but returned a different value.</source>
          <target state="translated">Cypress가 하나 이상의 cy 명령을 호출했지만 다른 값을 리턴했음을 감지했습니다.</target>
        </trans-unit>
        <trans-unit id="7db96a42833e811427ab8d251534de0078a39f4f" translate="yes" xml:space="preserve">
          <source>Cypress detected that you invoked one or more cy commands in a custom command but returned a different value.</source>
          <target state="translated">Cypress가 사용자 정의 명령에서 하나 이상의 cy 명령을 호출했지만 다른 값을 리턴했음을 발견했습니다.</target>
        </trans-unit>
        <trans-unit id="2712424c6f7cb8f02f97a54bddb0ea5f22a2f689" translate="yes" xml:space="preserve">
          <source>Cypress detected that you returned a promise from a command while also invoking one or more cy commands in that promise.</source>
          <target state="translated">Cypress가 명령에서 약속을 반환하는 동시에 해당 약속에서 하나 이상의 cy 명령을 호출하는 것을 감지했습니다.</target>
        </trans-unit>
        <trans-unit id="f1a368b765b44c35b055793ab5286d6232416268" translate="yes" xml:space="preserve">
          <source>Cypress detected that you returned a promise in a test, but also invoked one or more &lt;code&gt;cy&lt;/code&gt; commands inside of that promise.</source>
          <target state="translated">Cypress가 테스트에서 약속을 반환했음을 발견했지만 해당 약속 내에서 하나 이상의 &lt;code&gt;cy&lt;/code&gt; 명령을 호출했습니다 .</target>
        </trans-unit>
        <trans-unit id="dcbe57fedcb0ec8156a1a6797eb83f82e9a698b9" translate="yes" xml:space="preserve">
          <source>Cypress detected that you returned a promise in a test, but also invoked one or more cy commands inside of that promise.</source>
          <target state="translated">Cypress가 테스트에서 약속을 반환했음을 발견했지만 해당 약속 내에서 하나 이상의 cy 명령을 호출했습니다.</target>
        </trans-unit>
        <trans-unit id="dc83e94e17aa9ccc64dc59ece4b256378a6e3907" translate="yes" xml:space="preserve">
          <source>Cypress does NOT see how the page actually looks though. For example, Cypress will not see if the CSS class &lt;code&gt;completed&lt;/code&gt; grays out the label element and adds a strike-through line.</source>
          <target state="translated">Cypress는 페이지가 실제로 어떻게 보이는지 알 수 없습니다. 예를 들어 Cypress는 CSS 클래스가 &lt;code&gt;completed&lt;/code&gt; 되었는지 레이블 요소를 흐리게 표시하고 취소 선을 추가 하는지 확인하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="14c95b94d0b8fd7690eedfb33cea9df265051859" translate="yes" xml:space="preserve">
          <source>Cypress does not &lt;em&gt;actually&lt;/em&gt; make an XHR request from the browser. We are actually making the HTTP request from the Cypress Test Runner (in Node). So, you won&amp;rsquo;t see the request inside of your Developer Tools.</source>
          <target state="translated">Cypress는 &lt;em&gt;실제로&lt;/em&gt; 브라우저에서 XHR 요청을 하지 않습니다 . 실제로 Cypress Test Runner (노드)에서 HTTP 요청을하고 있습니다. 따라서 개발자 도구 내부에 요청이 표시되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d610cec1557cd166d9654c64cd8c224fc1afb70e" translate="yes" xml:space="preserve">
          <source>Cypress does not currently factor in &lt;code&gt;pointer-events: none&lt;/code&gt; in its clicking algorithm. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;Open an issue&lt;/a&gt; if you need this to be fixed.</source>
          <target state="translated">Cypress는 현재 &lt;code&gt;pointer-events: none&lt;/code&gt; 고려하지 않습니다 . 클릭 알고리즘에는 없습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;이 문제를 해결하려면 문제를여십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3db74b0d98a1fbb4fd3339fa15414dfda2195948" translate="yes" xml:space="preserve">
          <source>Cypress does not have a &lt;strong&gt;cy.hover()&lt;/strong&gt; command. See &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/10&quot;&gt;Issue #10&lt;/a&gt;.</source>
          <target state="translated">Cypress에는 &lt;strong&gt;cy.hover ()&lt;/strong&gt; 명령 이 없습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/10&quot;&gt;Issue # 10을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="45075f56235c9a799b99f25b40f76f77e49428cc" translate="yes" xml:space="preserve">
          <source>Cypress does not instrument your code - you need to do it yourself. The golden standard for JavaScript code instrumentation is the battle-hardened &lt;a href=&quot;https://istanbul.js.org/&quot;&gt;Istanbul&lt;/a&gt; and, luckily, it plays very nicely with the Cypress Test Runner. You can instrument the code as a build step through one of two ways:</source>
          <target state="translated">Cypress는 코드를 계측하지 않으므로 직접해야합니다. JavaScript 코드 계측의 황금 표준은 전투가 강화 된 &lt;a href=&quot;https://istanbul.js.org/&quot;&gt;이스탄불&lt;/a&gt; 이며, 다행히 Cypress Test Runner와 매우 잘 어울립니다. 다음 두 가지 방법 중 하나를 통해 빌드 단계로 코드를 계측 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="27c33b9f4e03b79c3a7c63538042fedc9b0dafd8" translate="yes" xml:space="preserve">
          <source>Cypress does some pretty interesting things under the hood to make testing HTTPs sites work. Cypress enables you to control and stub at the network level. Therefore, Cypress must assign and manage browser certificates to be able to modify the traffic in real time. You&amp;rsquo;ll notice Chrome display a warning that the &amp;lsquo;SSL certificate does not match&amp;rsquo;. This is normal and correct. Under the hood we act as our own CA authority and issue certificates dynamically in order to intercept requests otherwise impossible to access. We only do this for the superdomain currently under test, and bypass other traffic. That&amp;rsquo;s why if you open a tab in Cypress to another host, the certificates match as expected.</source>
          <target state="translated">Cypress는 HTTP 사이트 테스트를 위해 매우 흥미로운 작업을 수행합니다. Cypress를 사용하면 네트워크 수준에서 제어하고 스텁 할 수 있습니다. 따라서 Cypress는 트래픽을 실시간으로 수정할 수 있도록 브라우저 인증서를 할당하고 관리해야합니다. Chrome에 'SSL 인증서가 일치하지 않습니다'라는 경고가 표시됩니다. 이것은 정상입니다. 우리는 자체적으로 CA 권한을 수행하고 액세스가 불가능한 요청을 가로 채기 위해 인증서를 동적으로 발행합니다. 현재 테스트중인 슈퍼 도메인에 대해서만이 작업을 수행하고 다른 트래픽은 우회합니다. 따라서 Cypress에서 다른 호스트로 탭을 열면 인증서가 예상대로 일치합니다.</target>
        </trans-unit>
        <trans-unit id="c7c377ae138a280a8ad38fce02a4ffbef0682666" translate="yes" xml:space="preserve">
          <source>Cypress does this by spawning an independent &lt;code&gt;child_process&lt;/code&gt; which then &lt;code&gt;requires&lt;/code&gt; in your &lt;code&gt;pluginsFile&lt;/code&gt;. This is similar to the way Visual Studio Code or Atom works.</source>
          <target state="translated">Cypress는 &lt;code&gt;child_process&lt;/code&gt; 에 &lt;code&gt;requires&lt;/code&gt; 독립적 인 child_process 를 생성 하여 &lt;code&gt;pluginsFile&lt;/code&gt; 합니다. 이것은 Visual Studio Code 또는 Atom의 작동 방식과 유사합니다.</target>
        </trans-unit>
        <trans-unit id="62cedf95982948885977cf1529c65d7d5f8dd2d2" translate="yes" xml:space="preserve">
          <source>Cypress doesn&amp;rsquo;t kick off the browser automation magic until the test function exits.</source>
          <target state="translated">Cypress는 테스트 기능이 종료 될 때까지 브라우저 자동화 마법을 시작하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c3b5602f5ef228d78219ad3c8d29551d39bd9977" translate="yes" xml:space="preserve">
          <source>Cypress ecosystem</source>
          <target state="translated">사이프러스 생태계</target>
        </trans-unit>
        <trans-unit id="52f1ef57db713a0be7dd35df852bfaaa169c649c" translate="yes" xml:space="preserve">
          <source>Cypress emits a series of events as it runs in your browser.</source>
          <target state="translated">Cypress는 브라우저에서 실행될 때 일련의 이벤트를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="7697b2c3b28fc1b582d60ba45931016a20083da5" translate="yes" xml:space="preserve">
          <source>Cypress enables you to dynamically modify configuration values and environment variables from your plugin file.</source>
          <target state="translated">Cypress를 사용하면 플러그인 파일에서 구성 값과 환경 변수를 동적으로 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e9bc2ea98be122daf4c0d8f6c98e09eb5775e016" translate="yes" xml:space="preserve">
          <source>Cypress enables you to write all types of tests:</source>
          <target state="translated">Cypress를 사용하면 모든 유형의 테스트를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="73ea9b80d973a18938bef296490ce112a6efdba0" translate="yes" xml:space="preserve">
          <source>Cypress errors because it can&amp;rsquo;t interact with &amp;ldquo;dead&amp;rdquo; elements - just like a real user could not do this either. Understanding how this happens is very important - and it is often easy to prevent.</source>
          <target state="translated">Cypress 오류는 &quot;죽은&quot;요소와 상호 작용할 수 없기 때문에 실제 사용자가 수행 할 수없는 것처럼 오류가 발생합니다. 이것이 어떻게 발생하는지 이해하는 것이 매우 중요하며 종종 예방하기가 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="da4777d0266a47cfa11f194481866badc420bbef" translate="yes" xml:space="preserve">
          <source>Cypress executes the vast majority of its commands inside the browser, so there is no network lag. Commands execute and drive your application as fast as it is capable of rendering. To deal with modern JavaScript frameworks with complex UI&amp;rsquo;s, you use assertions to tell Cypress what the desired state of your application should be. Cypress will automatically wait for your application to reach this state before moving on. You are completely insulated from fussing with manual waits or retries. Cypress automatically waits for elements to exist and will never yield you stale elements that have been detached from the DOM.</source>
          <target state="translated">Cypress는 브라우저 내에서 대부분의 명령을 실행하므로 네트워크 지연이 없습니다. 명령은 렌더링 할 수있는 한 빨리 응용 프로그램을 실행하고 구동합니다. 복잡한 UI가있는 최신 JavaScript 프레임 워크를 처리하기 위해 어설 션을 사용하여 Cypress에 원하는 애플리케이션 상태를 알려줍니다. Cypress는 계속 진행하기 전에 애플리케이션이이 상태에 도달 할 때까지 자동으로 기다립니다. 수동 대기 또는 재 시도를 통해 소란을 완전히 차단할 수 있습니다. Cypress는 자동으로 요소가 존재하기를 기다리며 DOM에서 분리 된 오래된 요소를 생성하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fe1b2870f950b3fde184e954b99191b6652e3367" translate="yes" xml:space="preserve">
          <source>Cypress generates its own isolated profile apart from your normal browser profile. This means things like &lt;code&gt;history&lt;/code&gt; entries, &lt;code&gt;cookies&lt;/code&gt;, and &lt;code&gt;3rd party extensions&lt;/code&gt; from your regular browsing session will not affect your tests in Cypress.</source>
          <target state="translated">Cypress는 일반 브라우저 프로필과 별도로 자체 격리 된 프로필을 생성합니다. 즉 , 일반 브라우징 세션의 &lt;code&gt;history&lt;/code&gt; 항목, &lt;code&gt;cookies&lt;/code&gt; 및 &lt;code&gt;3rd party extensions&lt;/code&gt; 과 같은 항목 은 Cypress의 테스트에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0a684e1df6a0cce82886d4de8be159f4fa97d4ce" translate="yes" xml:space="preserve">
          <source>Cypress gives you a simple interface to automatically preserve cookies for multiple tests. Cypress automatically clears all cookies before each new test starts by default.</source>
          <target state="translated">Cypress는 여러 테스트를 위해 쿠키를 자동으로 보존 할 수있는 간단한 인터페이스를 제공합니다. Cypress는 기본적으로 새 테스트가 시작되기 전에 모든 쿠키를 자동으로 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="a4e6f4e326ff6f2fa866e28e8f182966cbc8b898" translate="yes" xml:space="preserve">
          <source>Cypress gives you the option to dynamically alter configuration values. This is helpful when running Cypress in multiple environments and on multiple developer machines.</source>
          <target state="translated">Cypress는 구성 값을 동적으로 변경할 수있는 옵션을 제공합니다. 이것은 여러 환경과 여러 개발자 컴퓨터에서 Cypress를 실행할 때 유용합니다.</target>
        </trans-unit>
        <trans-unit id="b5f2480b96f177a8e0b12efa536ecae6c9c752ec" translate="yes" xml:space="preserve">
          <source>Cypress guarantees that it will execute all of its commands &lt;em&gt;deterministically&lt;/em&gt; and identically every time they are run.</source>
          <target state="translated">Cypress는 모든 명령 이 실행될 때마다 &lt;em&gt;결정&lt;/em&gt; 적이고 동일 하게 실행되도록 보장 합니다.</target>
        </trans-unit>
        <trans-unit id="1597eb500d51c17b6e174846d06a9b1da2669b52" translate="yes" xml:space="preserve">
          <source>Cypress has adopted Mocha&amp;rsquo;s &lt;code&gt;bdd&lt;/code&gt; syntax, which fits perfectly with both integration and unit testing. All of the tests you&amp;rsquo;ll be writing sit on the fundamental harness Mocha provides, namely:</source>
          <target state="translated">Cypress는 통합 및 단위 테스트에 모두 적합한 Mocha의 &lt;code&gt;bdd&lt;/code&gt; 구문 을 채택했습니다 . 여러분이 작성하게 될 모든 테스트는 Mocha가 제공하는 기본 하네스, 즉 :</target>
        </trans-unit>
        <trans-unit id="6660994651e3ce7098be26d760a8c7ebed6d298e" translate="yes" xml:space="preserve">
          <source>Cypress has also built-in &lt;a href=&quot;../../guides/references/bundled-tools#Sinon-Chai&quot;&gt;sinon-chai&lt;/a&gt; support, so any &lt;a href=&quot;../../guides/references/assertions#Sinon-Chai&quot;&gt;assertions supported by &lt;code&gt;sinon-chai&lt;/code&gt;&lt;/a&gt; can be used without any configuration.</source>
          <target state="translated">싸이프레스는 또한 내장 된 &lt;a href=&quot;../../guides/references/bundled-tools#Sinon-Chai&quot;&gt;sinon-차이 티&lt;/a&gt; 지원, 어떤 있도록 &lt;a href=&quot;../../guides/references/assertions#Sinon-Chai&quot;&gt;지원하는 주장 &lt;code&gt;sinon-chai&lt;/code&gt; &lt;/a&gt; 어떤 구성없이 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ab90686c4f8a5c947ec43bf80d8e641fef08c3e5" translate="yes" xml:space="preserve">
          <source>Cypress has many more configuration options you can use to customize its behavior. Things like where your tests live, default timeout periods, environment variables, which reporter to use, etc.</source>
          <target state="translated">Cypress에는 동작을 사용자 정의하는 데 사용할 수있는 더 많은 구성 옵션이 있습니다. 테스트가 진행되는 위치, 기본 시간 초과 기간, 환경 변수, 사용할 기자 등</target>
        </trans-unit>
        <trans-unit id="990f07860a55dfadc515ee3da5925e89501a8259" translate="yes" xml:space="preserve">
          <source>Cypress has some added functionality for quickly referring back to past subjects called &lt;a href=&quot;variables-and-aliases&quot;&gt;Aliases&lt;/a&gt;. It looks something like this:</source>
          <target state="translated">Cypress에는 &lt;a href=&quot;variables-and-aliases&quot;&gt;Aliases&lt;/a&gt; 라는 과거 주제를 빠르게 참조 할 수있는 기능이 추가되었습니다 . 다음과 같이 보입니다 :</target>
        </trans-unit>
        <trans-unit id="8fba472528c23f86cb4086b98f22460e9770d00f" translate="yes" xml:space="preserve">
          <source>Cypress indicates whether an XHR sent back a stubbed response or actually went out to a server in its Command Log</source>
          <target state="translated">Cypress는 XHR이 스텁 된 응답을 다시 보냈는지 또는 실제로 명령 로그에서 서버로 나 갔는지 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="9e449e9157a22090dbf2b4888a6b29849a9a5469" translate="yes" xml:space="preserve">
          <source>Cypress internally uses this method &lt;em&gt;everywhere&lt;/em&gt; to figure out whether an element can be scrolled, &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;mostly for actionability&lt;/a&gt;.</source>
          <target state="translated">싸이프레스는 내부적으로이 방법을 사용하는 &lt;em&gt;모든 곳에서&lt;/em&gt; 요소가 스크롤 할 수 있는지 여부를 알아 내기 위해 &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;주로 actionability을 위해&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="edb85086ca242ec681a6590baf4669b8e7c421de" translate="yes" xml:space="preserve">
          <source>Cypress internally uses this method &lt;em&gt;everywhere&lt;/em&gt; to figure out whether an element is hidden, &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;mostly for actionability&lt;/a&gt;.</source>
          <target state="translated">싸이프레스는 내부적으로이 방법을 사용하는 &lt;em&gt;모든 곳에서&lt;/em&gt; 요소가 숨겨져 있는지, 알아 내기 위해 &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;주로 actionability을 위해&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="aa2c81dd7d916fd7f1168707d93a4fc48cb0a18a" translate="yes" xml:space="preserve">
          <source>Cypress is &lt;em&gt;Not&lt;/em&gt; Like jQuery</source>
          <target state="translated">싸이프레스는 &lt;em&gt;안&lt;/em&gt; 처럼 jQuery를</target>
        </trans-unit>
        <trans-unit id="c1be48039075d67d805c9f9754271324d4667091" translate="yes" xml:space="preserve">
          <source>Cypress is Like jQuery</source>
          <target state="translated">Cypress는 jQuery와 같습니다</target>
        </trans-unit>
        <trans-unit id="95e77f2456bfaf1b5e3e4af59168800202848f51" translate="yes" xml:space="preserve">
          <source>Cypress is a &lt;em&gt;functional&lt;/em&gt; Test Runner. It drives the web application the way a user would, and checks if the app &lt;em&gt;functions&lt;/em&gt; as expected: if the expected message appears, an element is removed, or a CSS class is added after the appropriate user action. A typical Cypress test, for example, can check if a toggled &amp;ldquo;Todo&amp;rdquo; item gets a class of &amp;ldquo;completed&amp;rdquo; after the &lt;code&gt;.toggle&lt;/code&gt; is checked:</source>
          <target state="translated">Cypress는 &lt;em&gt;기능적인&lt;/em&gt; 테스트 러너입니다. 웹 애플리케이션을 사용자가 원하는 방식으로 구동하고 앱 이 예상대로 &lt;em&gt;작동&lt;/em&gt; 하는지 확인합니다. 예상 메시지가 나타나거나 요소가 제거되거나 적절한 사용자 조치 후에 CSS 클래스가 추가됩니다. 예를 들어 일반적인 Cypress 테스트는 &lt;code&gt;.toggle&lt;/code&gt; 을 확인한 후 토글 된 &quot;Todo&quot;항목이 &quot;completed&quot;클래스를 가져 오는지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="53c9f872511024718a8f82a94e79bff7a77d8892" translate="yes" xml:space="preserve">
          <source>Cypress is a desktop application that is installed on your computer. The desktop application supports these operating systems:</source>
          <target state="translated">Cypress는 컴퓨터에 설치된 데스크톱 응용 프로그램입니다. 데스크탑 응용 프로그램은 다음 운영 체제를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="6ff8be0e34d6ada96a6ab8cfbee1ade53884ea40" translate="yes" xml:space="preserve">
          <source>Cypress is a global object that persists for the entirety of all of your tests. Any events you bind to Cypress will apply to all tests, and will not be unbound unless you manually unbind them.</source>
          <target state="translated">Cypress는 모든 테스트에 대해 지속되는 전역 객체입니다. Cypress에 바인딩하는 모든 이벤트는 모든 테스트에 적용되며 수동으로 바인딩을 해제하지 않으면 바인딩되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="869d1c1fb28fbc8fb81e122dddb505e13fa8d5b1" translate="yes" xml:space="preserve">
          <source>Cypress is a next generation front end testing tool built for the modern web. We address the key pain points developers and QA engineers face when testing modern applications.</source>
          <target state="translated">Cypress는 최신 웹용으로 설계된 차세대 프런트 엔드 테스트 도구입니다. 우리는 현대적인 응용 프로그램을 테스트 할 때 개발자와 QA 엔지니어가 직면하는 주요 문제를 해결합니다.</target>
        </trans-unit>
        <trans-unit id="8e39beda401fbd4a89a2b2e926247dcba77a2870" translate="yes" xml:space="preserve">
          <source>Cypress is a rather large and complex project involving a dozen or more submodules, and the default output can be overwhelming.</source>
          <target state="translated">Cypress는 12 개 이상의 하위 모듈을 포함하는 다소 크고 복잡한 프로젝트이며 기본 출력이 압도적 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0dec926db8824334e668f9586c17b1871fdafe4a" translate="yes" xml:space="preserve">
          <source>Cypress is a specialized tool that does one thing really well: end-to-end testing web applications while they are under development. You should not use Cypress for things it is not designed for such as:</source>
          <target state="translated">Cypress는 개발중인 웹 애플리케이션을 엔드 투 엔드 테스트하는 것 중 하나를 실제로 잘 수행하는 특수 도구입니다. Cypress를 다음과 같이 설계되지 않은 용도로 사용해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="b5c264814ec44d1280406e94d0c1671c5b4b60a7" translate="yes" xml:space="preserve">
          <source>Cypress is built around creating &lt;strong&gt;reliable tests&lt;/strong&gt;. The secret to writing good tests is to provide as much &amp;ldquo;state&amp;rdquo; and &amp;ldquo;facts&amp;rdquo; to Cypress and to &amp;ldquo;guard it&amp;rdquo; from issuing new commands until your application has reached the desired state it needs to proceed.</source>
          <target state="translated">Cypress는 &lt;strong&gt;신뢰할 수있는 테스트를&lt;/strong&gt; 만들기 위해 구축되었습니다 . 좋은 테스트를 작성하는 비결은 Cypress에 많은&amp;ldquo;상태&amp;rdquo;및&amp;ldquo;사실&amp;rdquo;을 제공하고 애플리케이션이 원하는 상태에 도달 할 때까지 새 명령을 실행하지 못하도록&amp;ldquo;보호&amp;rdquo;하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="b92cdd5b24a245c1191fdc720a8b79e88ca80485" translate="yes" xml:space="preserve">
          <source>Cypress is built on top of &lt;a href=&quot;../references/bundled-tools#Mocha&quot;&gt;Mocha&lt;/a&gt; and &lt;a href=&quot;../references/bundled-tools#Chai&quot;&gt;Chai&lt;/a&gt;. We support both Chai&amp;rsquo;s &lt;code&gt;BDD&lt;/code&gt; and &lt;code&gt;TDD&lt;/code&gt; assertion styles. Tests you write in Cypress will mostly adhere to this style.</source>
          <target state="translated">Cypress는 &lt;a href=&quot;../references/bundled-tools#Mocha&quot;&gt;Mocha&lt;/a&gt; 와 &lt;a href=&quot;../references/bundled-tools#Chai&quot;&gt;Chai&lt;/a&gt; 위에 지어졌습니다 . Chai의 &lt;code&gt;BDD&lt;/code&gt; 및 &lt;code&gt;TDD&lt;/code&gt; 어설 션 스타일을 모두 지원 합니다. Cypress로 작성한 테스트는 대부분이 스타일을 따릅니다.</target>
        </trans-unit>
        <trans-unit id="4c57f41938cd9b0ac090b8bf45e2d2c936962329" translate="yes" xml:space="preserve">
          <source>Cypress is built using Promises that come from &lt;a href=&quot;http://bluebirdjs.com/&quot;&gt;Bluebird&lt;/a&gt;. However, Cypress commands do not return these typical Promise instances. Instead we return what&amp;rsquo;s called a &lt;code&gt;Chainer&lt;/code&gt; that acts like a layer sitting on top of the internal Promise instances.</source>
          <target state="translated">Cypress는 &lt;a href=&quot;http://bluebirdjs.com/&quot;&gt;Bluebird&lt;/a&gt; 에서 제공하는 Promises를 사용하여 구축되었습니다 . 그러나 Cypress 명령은 이러한 일반적인 Promise 인스턴스를 반환하지 않습니다. 대신 내부 Promise 인스턴스 위에있는 레이어처럼 작동 하는 &lt;code&gt;Chainer&lt;/code&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="4faf31a6757e1c4ae29431d3f8d489f1d20486fa" translate="yes" xml:space="preserve">
          <source>Cypress is built using the &lt;a href=&quot;https://github.com/visionmedia/debug&quot;&gt;debug&lt;/a&gt; module. That means you can receive helpful debugging output by running Cypress with this turned on prior to running &lt;code&gt;cypress open&lt;/code&gt; or &lt;code&gt;cypress run&lt;/code&gt;.</source>
          <target state="translated">Cypress는 &lt;a href=&quot;https://github.com/visionmedia/debug&quot;&gt;디버그&lt;/a&gt; 모듈을 사용하여 빌드됩니다 . 즉, &lt;code&gt;cypress open&lt;/code&gt; 또는 &lt;code&gt;cypress run&lt;/code&gt; 을 실행하기 전에이 기능을 켜고 Cypress를 실행하면 유용한 디버깅 출력을받을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e365f28a29f12706b59bc9f0e67855dcd44e09df" translate="yes" xml:space="preserve">
          <source>Cypress is built using the &lt;a href=&quot;https://github.com/visionmedia/debug&quot;&gt;debug&lt;/a&gt; module. That means you can receive helpful debugging output by running Cypress with this turned on. &lt;strong&gt;Note:&lt;/strong&gt; you will see a LOT of messages when running with &lt;code&gt;DEBUG=...&lt;/code&gt; setting.</source>
          <target state="translated">Cypress는 &lt;a href=&quot;https://github.com/visionmedia/debug&quot;&gt;디버그&lt;/a&gt; 모듈을 사용하여 빌드됩니다 . 즉,이 기능을 켜고 Cypress를 실행하면 유용한 디버깅 출력을받을 수 있습니다. &lt;strong&gt;참고 : &lt;/strong&gt; &lt;code&gt;DEBUG=...&lt;/code&gt; 설정으로 실행할 때 많은 메시지가 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="3b20921d7e731dea1322bc38fe6f6705c9fffcdf" translate="yes" xml:space="preserve">
          <source>Cypress is built, and optimized around being a tool for your daily local development. In fact, after you start using Cypress for awhile, we believe that you may find it useful to even do &lt;strong&gt;all of your development&lt;/strong&gt; in it.</source>
          <target state="translated">Cypress는 일상적인 지역 개발을위한 도구로 만들어졌으며 최적화되었습니다. 실제로 Cypress를 잠시 사용하기 시작한 후에는 &lt;strong&gt;모든 개발&lt;/strong&gt; 작업을 수행 &lt;strong&gt;하는&lt;/strong&gt; 것이 유용하다고 생각 합니다.</target>
        </trans-unit>
        <trans-unit id="ff357c77f2177aef35545ec53e59b68e24420ac0" translate="yes" xml:space="preserve">
          <source>Cypress is currently seeking to raise a Series A. This will enable us to grow the team and speed up development but seeking it has come at a ost for current development speed. If you have any VC connections &lt;a href=&quot;https://docs.cypress.io/cdn-cgi/l/email-protection#40333530302f323400233930322533336e292f&quot;&gt;please send them our way&lt;/a&gt;.</source>
          <target state="translated">Cypress는 현재 시리즈 A를 올리려고합니다.이를 통해 팀을 키우고 개발 속도를 높일 수 있지만 현재 개발 속도를 높이기 위해 노력하고 있습니다. VC 연결이있는 경우 &lt;a href=&quot;https://docs.cypress.io/cdn-cgi/l/email-protection#40333530302f323400233930322533336e292f&quot;&gt;보내주십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6167ff978a76f79dcb98c7b0221f19ee3f15c2c1" translate="yes" xml:space="preserve">
          <source>Cypress is most often compared to Selenium; however Cypress is both fundamentally and architecturally different. Cypress is not constrained by the same restrictions as Selenium.</source>
          <target state="translated">사이프러스는 대부분 셀레늄과 비교됩니다. 그러나 Cypress는 기본적으로나 구조적으로 다릅니다. Cypress는 Selenium과 동일한 제한 사항에 의해 제한되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="530766382e09d2dc10a8897366980430533ed9ac" translate="yes" xml:space="preserve">
          <source>Cypress is not a &lt;strong&gt;general purpose&lt;/strong&gt; web automation tool. It is poorly suited for scripting live, production websites not under your control.</source>
          <target state="translated">Cypress는 &lt;strong&gt;범용&lt;/strong&gt; 웹 자동화 도구 가 아닙니다 . 제어 할 수없는 라이브 프로덕션 웹 사이트 스크립팅에는 적합하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0e7f9f5cf0b1279f8cbe9aa37c8dc4bdb0444d3c" translate="yes" xml:space="preserve">
          <source>Cypress is not a general purpose &lt;a href=&quot;#Automation-restrictions&quot;&gt;automation tool&lt;/a&gt;.</source>
          <target state="translated">Cypress는 범용 &lt;a href=&quot;#Automation-restrictions&quot;&gt;자동화 도구&lt;/a&gt; 가 아닙니다 .</target>
        </trans-unit>
        <trans-unit id="526615ae0ec1acf1d4f4fba790ad50d392856af2" translate="yes" xml:space="preserve">
          <source>Cypress is now &lt;a href=&quot;https://github.com/cypress-io/cypress&quot;&gt;open source&lt;/a&gt;! This project is licensed under the terms of the &lt;a href=&quot;https://github.com/cypress-io/cypress/blob/develop/LICENSE.md&quot;&gt;MIT License&lt;/a&gt;.</source>
          <target state="translated">Cypress는 이제 &lt;a href=&quot;https://github.com/cypress-io/cypress&quot;&gt;오픈 소스입니다&lt;/a&gt; ! 이 프로젝트는 &lt;a href=&quot;https://github.com/cypress-io/cypress/blob/develop/LICENSE.md&quot;&gt;MIT 라이센스&lt;/a&gt; 조건에 따라 라이센스가 부여됩니다 .</target>
        </trans-unit>
        <trans-unit id="e6870288c0bf703d92da969f4e9cef789d7d207c" translate="yes" xml:space="preserve">
          <source>Cypress is now able to run all the tests, run in the terminal, and includes support for Linux and CI. Additionally, most of the functionality of he GUI Desktop App can now be accessed through command line arguments.</source>
          <target state="translated">Cypress는 이제 모든 테스트를 실행하고 터미널에서 실행할 수 있으며 Linux 및 CI에 대한 지원을 포함합니다. 또한 GUI Desktop App의 대부분의 기능은 이제 명령 줄 인수를 통해 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="01f66f8ecf2056a79949b16440d796098a547bcd" translate="yes" xml:space="preserve">
          <source>Cypress is versioned like any other dependency.</source>
          <target state="translated">Cypress는 다른 종속성과 마찬가지로 버전이 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="b2a743ccd2b0f3716c26a35f4d7f80691926a4c2" translate="yes" xml:space="preserve">
          <source>Cypress knows and understands everything that happens in your application synchronously. It is notified the moment the page loads and the moment the page unloads. It is impossible for Cypress to miss elements when it fires events. Cypress even knows how fast an element is animating and will &lt;a href=&quot;../core-concepts/interacting-with-elements#Animations&quot;&gt;wait for it to stop animating&lt;/a&gt; on specific network requests to finish.</source>
          <target state="translated">Cypress는 애플리케이션에서 발생하는 모든 사항을 동 기적으로 알고 이해합니다. 페이지가로드되는 순간과 페이지가 언로드되는 순간을 알립니다. Cypress가 이벤트를 발생시킬 때 요소를 놓치는 것은 불가능합니다. Cypress는 요소의 애니메이션 속도를 알고 있으며 특정 네트워크 요청에 &lt;a href=&quot;../core-concepts/interacting-with-elements#Animations&quot;&gt;대한&lt;/a&gt; 애니메이션이 끝나기를 기다릴 것 입니다.</target>
        </trans-unit>
        <trans-unit id="528ba75aed4f434c47560bef9d6da9f2c39b28c1" translate="yes" xml:space="preserve">
          <source>Cypress launches the browser in a way that&amp;rsquo;s different from a regular browser environment. But it launches in a way that we believe makes testing &lt;em&gt;more reliable&lt;/em&gt; and &lt;em&gt;accessible&lt;/em&gt;.</source>
          <target state="translated">Cypress는 일반 브라우저 환경과 다른 방식으로 브라우저를 시작합니다. 그러나 테스트를 &lt;em&gt;보다 안정적&lt;/em&gt; 이고 &lt;em&gt;접근하기 쉽게&lt;/em&gt; 만드는 방식으로 시작됩니다 .</target>
        </trans-unit>
        <trans-unit id="692a6e6fe5fbbcc9662d662e506defd16e9b5956" translate="yes" xml:space="preserve">
          <source>Cypress leverages jQuery&amp;rsquo;s powerful selector engine to help make tests familiar and readable for modern web developers.</source>
          <target state="translated">Cypress는 jQuery의 강력한 선택기 엔진을 활용하여 최신 웹 개발자에게 친숙하고 읽을 수있는 테스트를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="c67c67171ad18ef7700ef9747c888b650f8ac819" translate="yes" xml:space="preserve">
          <source>Cypress logo now displays in &lt;code&gt;About Page&lt;/code&gt;.</source>
          <target state="translated">Cypress 로고가 &lt;code&gt;About Page&lt;/code&gt; 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="be170162f705ad538e216bd722a36b248db5af6d" translate="yes" xml:space="preserve">
          <source>Cypress maintains an official list of plugins created by us and the community. You can &lt;code&gt;npm install&lt;/code&gt; any of the plugins listed below:</source>
          <target state="translated">Cypress는 당사와 커뮤니티에서 만든 플러그인의 공식 목록을 유지 관리합니다. 아래 나열된 플러그인 중 하나를 &lt;code&gt;npm install&lt;/code&gt; 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7eec7714886f23b4a245c4c60f1361922c90494d" translate="yes" xml:space="preserve">
          <source>Cypress maintains some local application data in order to save user preferences and more quickly start up. Sometimes this data can become corrupted. You may fix an issue you have by clearing this app data.</source>
          <target state="translated">Cypress는 사용자 기본 설정을 저장하고 더 빨리 시작하기 위해 일부 로컬 응용 프로그램 데이터를 유지 관리합니다. 때때로이 데이터는 손상 될 수 있습니다. 이 앱 데이터를 지우면 문제를 해결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ce3a3c87011aaa111efec7a11f19ccd24c096ac8" translate="yes" xml:space="preserve">
          <source>Cypress makes it easy to chain assertions together.</source>
          <target state="translated">Cypress를 사용하면 어설 션을 쉽게 연결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4f13d8b6e04fe58a58be07c9d684afc3015bccf7" translate="yes" xml:space="preserve">
          <source>Cypress makes it easy to stub a network requests and have it respond instantly with fixture data.</source>
          <target state="translated">Cypress를 사용하면 네트워크 요청을 쉽게 스텁하고 픽스처 데이터로 즉시 응답 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="95b57339a0ea56ef3c65e019fc3c19d02f176b6c" translate="yes" xml:space="preserve">
          <source>Cypress makes it easy to stub a response and control the &lt;code&gt;body&lt;/code&gt;, &lt;code&gt;status&lt;/code&gt;, &lt;code&gt;headers&lt;/code&gt;, or even delay.</source>
          <target state="translated">Cypress를 사용하면 응답을 쉽게 스텁하고 &lt;code&gt;body&lt;/code&gt; , &lt;code&gt;status&lt;/code&gt; , &lt;code&gt;headers&lt;/code&gt; 또는 지연을 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f38ca921828c241c4f255ac47fe69d10462a4f64" translate="yes" xml:space="preserve">
          <source>Cypress makes it easy to test the entire lifecycle of Ajax / XHR requests within your application. Cypress provides you direct access to the XHR objects, enabling you to make assertions about its properties. Additionally you can even stub and mock a request&amp;rsquo;s response.</source>
          <target state="translated">Cypress를 사용하면 애플리케이션 내에서 Ajax / XHR 요청의 전체 수명주기를 쉽게 테스트 할 수 있습니다. Cypress를 통해 XHR 개체에 직접 액세스 할 수 있으므로 해당 속성에 대한 어설 션을 만들 수 있습니다. 또한 요청의 응답을 스텁하고 조롱 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="0c93ad14bb0246449f98429e08b415399b34829b" translate="yes" xml:space="preserve">
          <source>Cypress modifies these scripts at the network level, and therefore there is a tiny performance cost to search the response streams for these patterns.</source>
          <target state="translated">Cypress는 네트워크 수준에서 이러한 스크립트를 수정하므로 이러한 패턴에 대한 응답 스트림을 검색하는 데 약간의 성능 비용이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="811fe4df65580b03d4eff943c841ead3135de3e1" translate="yes" xml:space="preserve">
          <source>Cypress needs Internet access to work. Many companies require the use of a corporate proxy to access the Internet. If your company does this, many functions of Cypress will not work until you&amp;rsquo;ve configured Cypress to use your proxy:</source>
          <target state="translated">Cypress가 작동하려면 인터넷에 연결되어 있어야합니다. 많은 회사에서 인터넷에 액세스하려면 회사 프록시를 사용해야합니다. 회사에서이를 수행하는 경우 프록시를 사용하도록 Cypress를 구성 할 때까지 Cypress의 여러 기능이 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="74d4eb6be970ea73f708382a54e311cdd6ea0869" translate="yes" xml:space="preserve">
          <source>Cypress no longer accidentally prints internal Electron logs when running &lt;code&gt;cypress run&lt;/code&gt;. This bug would exhibit itself when verifying and running Cypress the first time after installation. You may have seen these logs when running in CI. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4255&quot;&gt;#4255&lt;/a&gt;.</source>
          <target state="translated">Cypress &lt;code&gt;cypress run&lt;/code&gt; 때 Cypress가 더 이상 실수로 내부 전자 로그를 인쇄하지 않습니다 . 이 버그는 설치 후 처음으로 Cypress를 확인하고 실행할 때 나타납니다. CI에서 실행할 때 이러한 로그를 보았을 수 있습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4255&quot;&gt;# 4255&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="55cc51c2b2224b4f4a9daad94683dd639628d74b" translate="yes" xml:space="preserve">
          <source>Cypress no longer automatically takes screenshots of skipped tests. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2368&quot;&gt;#2368&lt;/a&gt;.</source>
          <target state="translated">Cypress는 더 이상 건너 뛴 테스트의 스크린 샷을 자동으로 생성하지 않습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2368&quot;&gt;# 2368&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="3156d4bb4f630fc7fa73151537b9412a8d784f96" translate="yes" xml:space="preserve">
          <source>Cypress no longer copies screenshots and videos to artifacts for CircleCI. Copying artifacts should be left up to the user to &lt;a href=&quot;https://circleci.com/docs/2.0/artifacts/&quot;&gt;handle themselves in their &lt;code&gt;circle.yml&lt;/code&gt; file&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1592&quot;&gt;#1592&lt;/a&gt;.</source>
          <target state="translated">Cypress는 더 이상 스크린 샷과 비디오를 CircleCI의 아티팩트로 복사하지 않습니다. &lt;a href=&quot;https://circleci.com/docs/2.0/artifacts/&quot;&gt;자신의 &lt;code&gt;circle.yml&lt;/code&gt; 파일 에서 자신&lt;/a&gt; 을 처리 하려면 복사 아티팩트를 사용자에게 맡겨야 합니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1592&quot;&gt;# 1592&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9a2ab12feaf129218f0f992204efb3d801ed5c29" translate="yes" xml:space="preserve">
          <source>Cypress no longer crashes on initial &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; when the 3rd party web server never ends the response. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/272&quot;&gt;#272&lt;/a&gt;.</source>
          <target state="translated">타사 웹 서버가 응답을 종료 하지 않으면 &lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 에서 Cypress가 더 이상 충돌하지 않습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/272&quot;&gt;# 272&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="b7b7f9d5a04383de07b5d3c1bd3a023d2e0ea9d1" translate="yes" xml:space="preserve">
          <source>Cypress no longer crashes when a 3rd party server sends invalid &lt;code&gt;gzip&lt;/code&gt; content. Also fixed issues with incorrectly gunzipping multibyte characters which would potentially lead to serving invalid HTML or JS. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1396&quot;&gt;#1396&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1756&quot;&gt;#1756&lt;/a&gt;.</source>
          <target state="translated">타사 서버가 잘못된 &lt;code&gt;gzip&lt;/code&gt; 컨텐츠를 보낼 때 더 이상 Cypress가 충돌하지 않습니다 . 멀티 바이트 문자를 잘못 압축하여 잘못된 HTML 또는 JS를 제공 할 수있는 문제도 수정되었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1396&quot;&gt;# 1396&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1756&quot;&gt;# 1756을&lt;/a&gt; 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="33a12afb076ef1e52aaca1bc10c8261a0f33b86c" translate="yes" xml:space="preserve">
          <source>Cypress no longer crashes when attempting to proxy a WebSocket connection that fails. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/556&quot;&gt;#556&lt;/a&gt;.</source>
          <target state="translated">실패한 WebSocket 연결 프록시 시도시 Cypress가 더 이상 충돌하지 않습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/556&quot;&gt;# 556&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="e33dea56f182ce0a958dfb8f69bd8cdad2615f6c" translate="yes" xml:space="preserve">
          <source>Cypress no longer crashes when you click links in the on-boarding screen called &amp;ldquo;To help you get started&amp;hellip;&amp;rdquo;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/227&quot;&gt;#227&lt;/a&gt;.</source>
          <target state="translated">온보드 화면에서 &quot;시작하는 데 도움이됩니다&quot;라는 링크를 클릭해도 Cypress가 더 이상 충돌하지 않습니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/227&quot;&gt;# 227&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5bf5e3314fe712144e121f79e85185a1edf085ad" translate="yes" xml:space="preserve">
          <source>Cypress no longer errors when you return a raw DOM element. It now correctly wraps this as the new subject.</source>
          <target state="translated">원시 DOM 요소를 반환 할 때 더 이상 Cypress 오류가 발생하지 않습니다. 이제 이것을 새로운 주제로 올바르게 포장합니다.</target>
        </trans-unit>
        <trans-unit id="662c993f158297753b787211ea7612cc9b9534aa" translate="yes" xml:space="preserve">
          <source>Cypress no longer incorrectly errors when calling &lt;code&gt;cy.window().screenshot()&lt;/code&gt;, &lt;code&gt;cy.window().scrollTo()&lt;/code&gt; or &lt;code&gt;cy.window().trigger()&lt;/code&gt; in an application with multiple iframes. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4396&quot;&gt;#4396&lt;/a&gt;.</source>
          <target state="translated">여러 iframe이있는 응용 프로그램에서 &lt;code&gt;cy.window().screenshot()&lt;/code&gt; , &lt;code&gt;cy.window().scrollTo()&lt;/code&gt; 또는 &lt;code&gt;cy.window().trigger()&lt;/code&gt; 를 호출 할 때 Cypress에서 더 이상 잘못 오류가 발생하지 않습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4396&quot;&gt;# 4396&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="2c9613de0a4beaefeee6631fab20cde459553391" translate="yes" xml:space="preserve">
          <source>Cypress no longer looks at your &lt;code&gt;tests&lt;/code&gt; directory for test files. Now, by default, it looks in the &lt;code&gt;cypress/integration&lt;/code&gt; directory.</source>
          <target state="translated">Cypress는 더 이상 테스트 파일 의 &lt;code&gt;tests&lt;/code&gt; 디렉토리를 찾지 않습니다 . 이제 기본적으로 &lt;code&gt;cypress/integration&lt;/code&gt; 디렉토리를 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="81e39cec9615eb3ba1fd855e11e20064f46c86a3" translate="yes" xml:space="preserve">
          <source>Cypress no longer reports &lt;code&gt;Electron&lt;/code&gt; as the browser that ran in the Dashboard Service when a different browser was run. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/854&quot;&gt;#854&lt;/a&gt;.</source>
          <target state="translated">Cypress는 더 이상 다른 브라우저를 실행할 때 대시 보드 서비스에서 실행 된 브라우저로 &lt;code&gt;Electron&lt;/code&gt; 을 보고하지 않습니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/854&quot;&gt;# 854&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8db1224dd2fc491a7132708262abf66a09cf8278" translate="yes" xml:space="preserve">
          <source>Cypress no longer watches files when run using &lt;code&gt;cypress run&lt;/code&gt;. This will fix some runs that were crashing with an &lt;code&gt;ENOSPC&lt;/code&gt; error. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4283&quot;&gt;#4283&lt;/a&gt;.</source>
          <target state="translated">Cypress run을 사용하여 &lt;code&gt;cypress run&lt;/code&gt; 때 Cypress는 더 이상 파일을 감시하지 않습니다 . 이것은 &lt;code&gt;ENOSPC&lt;/code&gt; 오류 로 충돌했던 일부 실행을 수정 합니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4283&quot;&gt;# 4283&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6fd6ee3f44c165770366cf8839fc21620035e902" translate="yes" xml:space="preserve">
          <source>Cypress now &amp;ldquo;remembers&amp;rdquo; the last browser you had open and will suggest opening that whenever a project is opened. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/193&quot;&gt;#193&lt;/a&gt;.</source>
          <target state="translated">Cypress는 이제 마지막으로 연 브라우저를 &quot;기억&quot;하고 프로젝트를 열 때마다 해당 브라우저를 여는 것이 좋습니다. 주소 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/193&quot;&gt;# 193&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5c129370f1a849563b825fbfa153c09b7124dffc" translate="yes" xml:space="preserve">
          <source>Cypress now always updates the remote URL whenever your application changes its URL through the vast variety of ways it can do this.</source>
          <target state="translated">Cypress는 이제 애플리케이션이이를 수행 할 수있는 다양한 방법을 통해 URL을 변경할 때마다 항상 원격 URL을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="3f120c7e6289fdd1715635ddb9c82ab8c8fdc496" translate="yes" xml:space="preserve">
          <source>Cypress now applies cookies to the browser which were cleared between redirects. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/224&quot;&gt;#224&lt;/a&gt;.</source>
          <target state="translated">Cypress는 이제 리디렉션간에 지워진 쿠키를 브라우저에 적용합니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/224&quot;&gt;# 224&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3603bc44f5cb1b55bb6efb44d02393248eb75beb" translate="yes" xml:space="preserve">
          <source>Cypress now auto reloads when spec files are modified in Windows. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/712&quot;&gt;#712&lt;/a&gt;.</source>
          <target state="translated">사양 파일을 Windows에서 수정하면 Cypress가 자동으로 다시로드됩니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/712&quot;&gt;# 712&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="ed403f7be7af1f52f83aba547f1245b4f1fae132" translate="yes" xml:space="preserve">
          <source>Cypress now automatically detects and waits for an element which is animating to stop animating. The threshold that Cypress considers &lt;em&gt;animating&lt;/em&gt; is set to a distance of &lt;code&gt;5px&lt;/code&gt; per &lt;code&gt;60fps&lt;/code&gt;. In other words, if your element is moving too fast for a user to interact with, then Cypress considers the element animating and will wait until it finishes before attempting to interact with it. When we say &amp;lsquo;interact&amp;rsquo; we mean apply command actions like &lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/select&quot;&gt;&lt;code&gt;.select()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/check&quot;&gt;&lt;code&gt;.check()&lt;/code&gt;&lt;/a&gt;, etc. Waiting for animations prevents a series of edge cases and weird bugs where Cypress was interacting with elements &lt;strong&gt;too&lt;/strong&gt; quickly which might cause undesired side effects in your application which are hard to track down. The downside to this implementation is that for every action Cypress must wait at least 2 run loops before applying actions. This slows down every action command by about &lt;code&gt;32ms&lt;/code&gt;. If your app does not use animations you may wish to turn off this behavior in your &lt;code&gt;cypress.json&lt;/code&gt; file.</source>
          <target state="translated">Cypress는 이제 애니메이션을 적용 할 애니메이션 요소를 자동으로 감지하고 기다립니다. Cypress가 &lt;em&gt;애니메이션을&lt;/em&gt; 고려하는 임계 값 은 &lt;code&gt;60fps&lt;/code&gt; 당 &lt;code&gt;5px&lt;/code&gt; 의 거리로 설정됩니다 . 다시 말해, 요소가 사용자와 상호 작용하기에 너무 빠르게 움직이면 Cypress는 요소를 애니메이션으로 간주하고 요소가 상호 작용을 시도하기 전에 완료 될 때까지 기다립니다. 우리가 '상호 작용'을 말할 때 우리는 명령과 같은 조치 적용을 의미 &lt;a href=&quot;../../api/commands/click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../api/commands/select&quot;&gt; &lt;code&gt;.select()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../api/commands/check&quot;&gt; &lt;code&gt;.check()&lt;/code&gt; &lt;/a&gt; 싸이프레스가 상호 작용 된 곳 애니메이션 방지를 위해 등, 엣지 케이스와 이상한 버그의 일련의 대기를 요소 &lt;strong&gt;도&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;추적하기 어려운 응용 프로그램에서 원하지 않는 부작용이 발생할 수 있습니다. 이 구현의 단점은 모든 조치에 대해 Cypress가 조치를 적용하기 전에 최소 2 개의 실행 루프를 기다려야한다는 것입니다. 이것은 모든 동작 명령을 약 &lt;code&gt;32ms&lt;/code&gt; 느리게합니다 . 앱에서 애니메이션을 사용하지 않는 경우 &lt;code&gt;cypress.json&lt;/code&gt; 파일 에서이 동작을 해제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2ba3a64733b69b3e91faaceacb6498168dbdf3a1" translate="yes" xml:space="preserve">
          <source>Cypress now automatically reads from your system&amp;rsquo;s &lt;code&gt;HTTP_PROXY&lt;/code&gt;, &lt;code&gt;HTTPS_PROXY&lt;/code&gt;, and &lt;code&gt;NO_PROXY&lt;/code&gt; environment variables and proxies traffic accordingly through Cypress based on these values. This includes network traffic within your application under test, when downloading Cypress, and when accessing &amp;lsquo;Runs&amp;rsquo; within the Test Runner. Please read our new &lt;a href=&quot;proxy-configuration&quot;&gt;Proxy Configuration&lt;/a&gt; doc to understand more about proxy configuration in Cypress. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/672&quot;&gt;#672&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/733&quot;&gt;#733&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/939&quot;&gt;#939&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1039&quot;&gt;#1039&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1459&quot;&gt;#1459&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1469&quot;&gt;#1469&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1470&quot;&gt;#1470&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1541&quot;&gt;#1541&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1608&quot;&gt;#1608&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2295&quot;&gt;#2295&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3855&quot;&gt;#3855&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3865&quot;&gt;#3865&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1401&quot;&gt;#1401&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3857&quot;&gt;#3857&lt;/a&gt;.</source>
          <target state="translated">싸이프레스는 자동으로 시스템의 읽 &lt;code&gt;HTTP_PROXY&lt;/code&gt; , &lt;code&gt;HTTPS_PROXY&lt;/code&gt; , 그리고 &lt;code&gt;NO_PROXY&lt;/code&gt; 이 값을 기준으로 싸이프레스을 통해 그에 따라 환경 변수와 프록시 트래픽. 여기에는 테스트중인 애플리케이션, Cypress를 다운로드 할 때 및 Test Runner 내에서 'Runs'에 액세스 할 때의 네트워크 트래픽이 포함됩니다. Cypress의 프록시 구성에 대한 자세한 내용을 보려면 새 &lt;a href=&quot;proxy-configuration&quot;&gt;프록시 구성&lt;/a&gt; 문서를 읽으십시오 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/672&quot;&gt;# 672&lt;/a&gt; , &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/733&quot;&gt;# 733&lt;/a&gt; , &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/939&quot;&gt;# 939&lt;/a&gt; , &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1039&quot;&gt;# 1039&lt;/a&gt; , &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1459&quot;&gt;# 1459&lt;/a&gt; , &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1469&quot;&gt;# 1469&lt;/a&gt; , &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1470&quot;&gt;# 1470&lt;/a&gt; , &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1541&quot;&gt;# 1541&lt;/a&gt; , &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1608&quot;&gt;# 1608&lt;/a&gt; , &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2295&quot;&gt;# 2295&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3855&quot;&gt;# 3855&lt;/a&gt; , &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3865&quot;&gt;# 3865&lt;/a&gt; , &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1401&quot;&gt;# 1401&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3857&quot;&gt;# 3857&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3b2e6c8b6dea030866308e7fcc6cb0e7cf582019" translate="yes" xml:space="preserve">
          <source>Cypress now caches globally per version which prevents it from being installed multiple times across projects.</source>
          <target state="translated">Cypress는 이제 버전마다 전역으로 캐시하므로 여러 프로젝트에 여러 번 설치되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5ac2d5f8ebc9158a6a452af1a788c5b60982a897" translate="yes" xml:space="preserve">
          <source>Cypress now correctly exits during &lt;code&gt;cypress run&lt;/code&gt; in &lt;code&gt;linux&lt;/code&gt; when the browser fails to connect. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/333&quot;&gt;#333&lt;/a&gt;.</source>
          <target state="translated">싸이프레스는 올바르게시 종료 &lt;code&gt;cypress run&lt;/code&gt; 에 &lt;code&gt;linux&lt;/code&gt; 브라우저가 연결에 실패 할 때. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/333&quot;&gt;# 333&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="cc910ea870f10321b946d125ca2c44f5bbf17ed6" translate="yes" xml:space="preserve">
          <source>Cypress now correctly exits during &lt;code&gt;cypress run&lt;/code&gt; in &lt;code&gt;linux&lt;/code&gt; when there is a spec bundle error. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/337&quot;&gt;#337&lt;/a&gt;.</source>
          <target state="translated">싸이프레스는 올바르게시 종료 &lt;code&gt;cypress run&lt;/code&gt; 에 &lt;code&gt;linux&lt;/code&gt; 스펙 번들 오류가있는 경우. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/337&quot;&gt;# 337&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="17dd40825f41486cd8bcceeacbf6bccef7d8a9d6" translate="yes" xml:space="preserve">
          <source>Cypress now correctly handles &lt;code&gt;blur&lt;/code&gt; and &lt;code&gt;focus&lt;/code&gt; events in situations where the browser has lost focus. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4039&quot;&gt;#4039&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1176&quot;&gt;#1176&lt;/a&gt;, and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1486&quot;&gt;#1486&lt;/a&gt;.</source>
          <target state="translated">Cypress는 이제 브라우저에서 포커스를 잃은 상황에서 &lt;code&gt;blur&lt;/code&gt; 및 &lt;code&gt;focus&lt;/code&gt; 이벤트를 올바르게 처리합니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4039&quot;&gt;# 4039&lt;/a&gt; , &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1176&quot;&gt;# 1176&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1486&quot;&gt;# 1486을&lt;/a&gt; 수정 합니다.</target>
        </trans-unit>
        <trans-unit id="de62baf1a6070a4d5f3a9edd4a54a31a88239cb7" translate="yes" xml:space="preserve">
          <source>Cypress now correctly injects and handles pages which are missing a &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;, a &lt;code&gt;&amp;lt;body&lt;/code&gt;&amp;gt;, or even an &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; tag. Previously it would bomb on pages missing these tags.</source>
          <target state="translated">Cypress는 이제 &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;body&lt;/code&gt; &amp;gt; 또는 &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; 태그 가없는 페이지를 올바르게 주입하고 처리합니다 . 이전에는이 ​​태그가없는 페이지에서 폭탄이 터졌습니다.</target>
        </trans-unit>
        <trans-unit id="a4710a8994af4c326324976203ed3aeaa6712062" translate="yes" xml:space="preserve">
          <source>Cypress now correctly proxies WebSockets that are pointed at the local Cypress server (typically &lt;code&gt;localhost:2020&lt;/code&gt;). Because most users use &lt;a href=&quot;http://socket.io/&quot;&gt;Socket.io&lt;/a&gt;, when Socket.io could not correctly connect over WebSockets it would fall back to XHR polling. You may notice many less XHR requests in your command log (which is the intended behavior).</source>
          <target state="translated">Cypress는 이제 로컬 Cypress 서버 (일반적으로 &lt;code&gt;localhost:2020&lt;/code&gt; )를 가리키는 WebSocket을 올바르게 프록시합니다 . 대부분의 사용자는 &lt;a href=&quot;http://socket.io/&quot;&gt;Socket.io를&lt;/a&gt; 사용하기 때문에 Socket.io가 WebSocket을 통해 올바르게 연결할 수없는 경우 XHR 폴링으로 대체됩니다. 명령 로그에 XHR 요청이 적을 수 있습니다 (예상 동작).</target>
        </trans-unit>
        <trans-unit id="1df56a88e64d6ea14f917641e8e78d9f267bd0e9" translate="yes" xml:space="preserve">
          <source>Cypress now correctly re-bundles files even when &lt;code&gt;watchForFileChanges&lt;/code&gt; is set to &lt;code&gt;false&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/446&quot;&gt;#446&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/347&quot;&gt;#347&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;watchForFileChanges&lt;/code&gt; 가 &lt;code&gt;false&lt;/code&gt; 로 설정되어 있어도 Cypress 는 파일을 올바르게 다시 번들링합니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/446&quot;&gt;# 446&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/347&quot;&gt;# 347을&lt;/a&gt; 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="91ae9e80a3f89597188fabb0e704a1964713f5da" translate="yes" xml:space="preserve">
          <source>Cypress now correctly sets cookies with &lt;code&gt;expirationDate&lt;/code&gt; in the past. Chrome did not handle these cookies as documented and our code did not take this into account. We also added a lot more &lt;code&gt;e2e&lt;/code&gt; tests around this behavior. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/266&quot;&gt;#266&lt;/a&gt;.</source>
          <target state="translated">Cypress는 이제 과거에 &lt;code&gt;expirationDate&lt;/code&gt; 가있는 쿠키를 올바르게 설정합니다 . Chrome은 이러한 쿠키를 문서화 된대로 처리하지 않았으며 Google 코드에서는이를 고려하지 않았습니다. 또한 이 동작에 대해 더 많은 &lt;code&gt;e2e&lt;/code&gt; 테스트를 추가했습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/266&quot;&gt;# 266&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="04ffe7bc1e7acc791633cbef90e171705686d984" translate="yes" xml:space="preserve">
          <source>Cypress now correctly works offline on Windows when visiting a localhost URL. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4763&quot;&gt;#4763&lt;/a&gt;.</source>
          <target state="translated">이제 로컬 호스트 URL을 방문 할 때 Cypress가 Windows에서 오프라인으로 올바르게 작동합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4763&quot;&gt;# 4763&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="1b4143f2f941aff81c8c1ad7e2e56426ab6acfc5" translate="yes" xml:space="preserve">
          <source>Cypress now detects more instances of &lt;code&gt;browser&lt;/code&gt; installations. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3183&quot;&gt;#3183&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3218&quot;&gt;#3218&lt;/a&gt;.</source>
          <target state="translated">Cypress는 이제 더 많은 &lt;code&gt;browser&lt;/code&gt; 설치 인스턴스를 감지 합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3183&quot;&gt;# 3183&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3218&quot;&gt;# 3218을&lt;/a&gt; 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="4727c0d09f1978f4104e9fcadc3eaba6f4d87811" translate="yes" xml:space="preserve">
          <source>Cypress now detects the difference between a forced async &lt;code&gt;done&lt;/code&gt; test timeout vs a regular command timeout, and will throw the appropriate message indicating whether the user forgot to invoke &lt;code&gt;done&lt;/code&gt; or whether the timeout happened due to a command.</source>
          <target state="translated">싸이프레스는 현재 비동기 강제 차이 감지 &lt;code&gt;done&lt;/code&gt; 일반 명령 제한 시간 대 시험 시간 제한, 사용자가 호출하는 것을 잊었다 여부를 나타내는 적절한 메시지를 던질 것이다 &lt;code&gt;done&lt;/code&gt; 또는 시간 제한 명령으로 인해 발생 여부를.</target>
        </trans-unit>
        <trans-unit id="a0cd94a433b93cba5bd34d281a5d67123524fdf7" translate="yes" xml:space="preserve">
          <source>Cypress now detects when an async test is passed and not all commands have finished running. It will throw an explicit error message in this situation.</source>
          <target state="translated">Cypress는 이제 비동기 테스트가 통과 된 시점을 감지하고 일부 명령의 실행이 완료되지 않았습니다. 이 상황에서는 명시적인 오류 메시지가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="744be5620fcce63aa0ae57f5536d83e6ae43f7cc" translate="yes" xml:space="preserve">
          <source>Cypress now displays a message when the Desktop App update is actually being applied instead of doing nothing and looking like it&amp;rsquo;s crashed.</source>
          <target state="translated">Cypress는 이제 데스크톱 앱 업데이트가 실제로 수행되고 충돌하는 것처럼 보이지 않고 실제로 적용되는 경우 메시지를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="b68bd8e8c63f9f2332a0feb1d4bf064ecdffde86" translate="yes" xml:space="preserve">
          <source>Cypress now errors when the &lt;code&gt;body&lt;/code&gt; paramater passed to &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; contains a circular reference. Fixed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4407&quot;&gt;#4407&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt; 전달 된 &lt;code&gt;body&lt;/code&gt; paramater 에 순환 참조가 포함 되면 Cypress에서 오류가 발생합니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4407&quot;&gt;# 4407&lt;/a&gt; 에서 수정되었습니다 .</target>
        </trans-unit>
        <trans-unit id="cf0cd2929ec215c5295db280668b3ec042888c7c" translate="yes" xml:space="preserve">
          <source>Cypress now forces the initial &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; not to be cached by the browser. This was incorrectly being cached which meant when you changed the &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; it would not actually go out and fetch the new contents. Previously you had to check &lt;code&gt;Disable Cache&lt;/code&gt; in the &lt;code&gt;Network Tab&lt;/code&gt; inside of Chrome to prevent this bug. Unfortunately this has a significant performance drawback. If you use a &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; before each test you will notice a degrade in performance because this request is no longer cached. This is a temporary problem until Cypress implements a more sophisticated caching strategy which optimizes these concerns. There is a lot to improve in this arena but it will take more time before it&amp;rsquo;s implemented.</source>
          <target state="translated">Cypress는 이제 브라우저 에서 초기 &lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 를 캐시하지 않도록합니다. 이것은 캐싱이 잘못되어 &lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 를 변경했을 때 실제로 나가서 새 내용을 가져 오지 않습니다. 이전에는 이 버그를 방지하기 위해 Chrome 내부의 &lt;code&gt;Network Tab&lt;/code&gt; 에서 &lt;code&gt;Disable Cache&lt;/code&gt; 를 확인해야했습니다 . 불행히도 이것은 상당한 성능 단점이 있습니다. 각 테스트 전에 &lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 를 사용하면 이 요청이 더 이상 캐시되지 않기 때문에 성능이 저하됩니다. Cypress가 이러한 문제를 최적화하는보다 정교한 캐싱 전략을 구현할 때까지 일시적인 문제입니다. 이 분야에서는 개선해야 할 것이 많지만 구현되기까지 시간이 더 걸릴 것입니다.</target>
        </trans-unit>
        <trans-unit id="93202e47e1b4931127ee097a03291dfe2008d575" translate="yes" xml:space="preserve">
          <source>Cypress now handles &lt;code&gt;length&lt;/code&gt; and &lt;code&gt;exist&lt;/code&gt; assertion chainers in a very specific way, providing a detailed message on failure, and utomatically slices out any stale element references.</source>
          <target state="translated">싸이프레스는 현재 핸들 &lt;code&gt;length&lt;/code&gt; 와 &lt;code&gt;exist&lt;/code&gt; 실패에 대한 자세한 메시지를 제공하는 매우 구체적인 방법으로 주장 chainers을하고 utomatically 어떤 오래된 요소 참조를 조각.</target>
        </trans-unit>
        <trans-unit id="704f19938a8e4d948d29770a5393e4746cb56a92" translate="yes" xml:space="preserve">
          <source>Cypress now handles events property when a DOM element is removed during a &lt;code&gt;.click()&lt;/code&gt; event. As per the spec, if &lt;code&gt;mousedown&lt;/code&gt; causes element removal then &lt;code&gt;mouseup&lt;/code&gt; and &lt;code&gt;click&lt;/code&gt; and &lt;code&gt;focus&lt;/code&gt; events will not be fired. Additionally if removal happens during &lt;code&gt;mouseup&lt;/code&gt; then &lt;code&gt;click&lt;/code&gt; event will not be fired. Also updated the &lt;code&gt;onConsole&lt;/code&gt; groups to only display and indicate the events which actually fired. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/109&quot;&gt;#109&lt;/a&gt;.</source>
          <target state="translated">Cypress는 이제 &lt;code&gt;.click()&lt;/code&gt; 이벤트 중에 DOM 요소가 제거 될 때 이벤트 속성을 처리합니다 . 사양에 따라 &lt;code&gt;mousedown&lt;/code&gt; 으로 인해 요소가 제거 &lt;code&gt;mouseup&lt;/code&gt; 및 &lt;code&gt;click&lt;/code&gt; 및 &lt;code&gt;focus&lt;/code&gt; 이벤트가 시작되지 않습니다. 제거시 발생하는 추가하면 &lt;code&gt;mouseup&lt;/code&gt; 에 다음 &lt;code&gt;click&lt;/code&gt; 이벤트가 발생되지 않습니다. 또한 실제로 발생한 이벤트 만 표시하고 표시 하도록 &lt;code&gt;onConsole&lt;/code&gt; 그룹을 업데이트했습니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/109&quot;&gt;# 109&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e9e766ccfbec7c10396d6d3727f724c0b970370c" translate="yes" xml:space="preserve">
          <source>Cypress now has first class support for &lt;code&gt;fixtures&lt;/code&gt; (official docs coming soon).</source>
          <target state="translated">Cypress는 이제 &lt;code&gt;fixtures&lt;/code&gt; 대한 일급 지원을 제공합니다 (공식 문서는 곧 제공 될 예정).</target>
        </trans-unit>
        <trans-unit id="4df17d172497053f90d37d5123e9f797232c685d" translate="yes" xml:space="preserve">
          <source>Cypress now logs out your project&amp;rsquo;s API key on a failed CI run.</source>
          <target state="translated">Cypress는 이제 실패한 CI 실행에서 프로젝트의 API 키를 로그 아웃합니다.</target>
        </trans-unit>
        <trans-unit id="8c99456315cf184735162f3a9cb2521c0d798d29" translate="yes" xml:space="preserve">
          <source>Cypress now looks for any npm proxy configuration values as a fallback when no other system proxy configuration is found. This brings this feature into parity with how npm reads off proxy configuration values during an &lt;code&gt;npm install&lt;/code&gt;. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4719&quot;&gt;#4719&lt;/a&gt;.</source>
          <target state="translated">Cypress는 이제 다른 시스템 프록시 구성이 없으면 npm 프록시 구성 값을 대체로 찾습니다. 이것은이 기능을 &lt;code&gt;npm install&lt;/code&gt; 중 npm이 프록시 구성 값을 읽는 방법과 동일합니다 . 주소 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4719&quot;&gt;# 4719&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="84f1b05b1d93c2600eed83e37778c98d2231e9a1" translate="yes" xml:space="preserve">
          <source>Cypress now only scans for spec changes when the watcher sees changes, rather than polling to scan. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3069&quot;&gt;#3069&lt;/a&gt;.</source>
          <target state="translated">Cypress는 이제 감시자가 스캔 폴링이 아닌 변경 사항을 볼 때 사양 변경 사항 만 검색합니다. 주소 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3069&quot;&gt;# 3069&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="42dd184af721037a9900e5add91157700bd646a5" translate="yes" xml:space="preserve">
          <source>Cypress now outputs its version when passed the &lt;code&gt;--version&lt;/code&gt; argument</source>
          <target state="translated">&lt;code&gt;--version&lt;/code&gt; 인수를 전달하면 Cypress에서 버전을 출력합니다.</target>
        </trans-unit>
        <trans-unit id="d7d4bec72af6de67265e487ea3f486ae4a571717" translate="yes" xml:space="preserve">
          <source>Cypress now overrides chai&amp;rsquo;s &lt;code&gt;match&lt;/code&gt; chainer and provides a specific error message when a non &lt;code&gt;regex&lt;/code&gt; value is provided. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/58&quot;&gt;#58&lt;/a&gt;.</source>
          <target state="translated">Cypress는 이제 차이의 &lt;code&gt;match&lt;/code&gt; 체인을 재정의 하고 &lt;code&gt;regex&lt;/code&gt; 이 아닌 값을 제공하면 특정 오류 메시지 를 제공합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/58&quot;&gt;# 58&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="24f4c6eaeb2cb8adabb7ab908bfbcd82e9477b99" translate="yes" xml:space="preserve">
          <source>Cypress now properly handles typing JavaScript object prototype methods (like &lt;code&gt;hasOwnProperty&lt;/code&gt;) into &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3423&quot;&gt;#3423&lt;/a&gt;.</source>
          <target state="translated">Cypress는 이제 JavaScript 객체 프로토 타입 메소드 (예 : &lt;code&gt;hasOwnProperty&lt;/code&gt; )를 &lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 입력하는 것을 올바르게 처리합니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3423&quot;&gt;# 3423&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="3168f20b1f0b45a27954dab14b95622ac9f6188e" translate="yes" xml:space="preserve">
          <source>Cypress now properly parses environment variables with empty values. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3742&quot;&gt;#3742&lt;/a&gt;.</source>
          <target state="translated">Cypress는 이제 환경 변수를 빈 값으로 올바르게 구문 분석합니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3742&quot;&gt;# 3742&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="72f538943ef99235ac80dd5a7be8cdffbee23823" translate="yes" xml:space="preserve">
          <source>Cypress now properly supports partial matching of string values for assertions &lt;code&gt;contain.text&lt;/code&gt;, &lt;code&gt;contain.html&lt;/code&gt;, and &lt;code&gt;contain.value&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1969&quot;&gt;#1969&lt;/a&gt;.</source>
          <target state="translated">Cypress는 이제 assertion &lt;code&gt;contain.text&lt;/code&gt; , &lt;code&gt;contain.html&lt;/code&gt; 및 &lt;code&gt;contain.value&lt;/code&gt; 대한 문자열 값의 부분 일치를 올바르게 지원합니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1969&quot;&gt;# 1969&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="52b5d0535dd1a71e0c59cedac1a5feb173e910fe" translate="yes" xml:space="preserve">
          <source>Cypress now requires a viewport to be issued at all times. By default it is &lt;code&gt;1000x660&lt;/code&gt; but can be changed in your &lt;code&gt;cypress.json&lt;/code&gt; file with he keys: &lt;code&gt;viewportWidth&lt;/code&gt; and &lt;code&gt;viewportHeight&lt;/code&gt;.</source>
          <target state="translated">Cypress는 이제 뷰포트를 항상 발행해야합니다. 기본적으로는 &lt;code&gt;1000x660&lt;/code&gt; 이지만 변경 될 수 &lt;code&gt;cypress.json&lt;/code&gt; 의 그는 키 파일 : &lt;code&gt;viewportWidth&lt;/code&gt; 및 &lt;code&gt;viewportHeight&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f673d187b620c670db4b9b3aea919fd9a780c308" translate="yes" xml:space="preserve">
          <source>Cypress now retries multiple times (with a backoff strategy) when communicating with our API fails while recording runs. This will provide better feedback in situations when the API is temporarily unavailable. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1590&quot;&gt;#1590&lt;/a&gt;.</source>
          <target state="translated">녹음이 실행되는 동안 API와의 통신이 실패하면 Cypress는 이제 백 오프 전략으로 여러 번 재 시도합니다. 이는 API를 일시적으로 사용할 수없는 상황에서 더 나은 피드백을 제공합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1590&quot;&gt;# 1590&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="1b1a9d74cfa3ac161a7aecfa151401c4c6e7cb8c" translate="yes" xml:space="preserve">
          <source>Cypress now retries up to 3 times for the browser to connect during &lt;code&gt;cypress run&lt;/code&gt;. The warning / error messages were also updated to be clearer. Partially addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/334&quot;&gt;#334&lt;/a&gt;.</source>
          <target state="translated">Cypress는 이제 &lt;code&gt;cypress run&lt;/code&gt; 중에 브라우저를 연결하기 위해 최대 3 번 재 시도합니다 . 경고 / 오류 메시지도보다 명확하게 업데이트되었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/334&quot;&gt;# 334&lt;/a&gt; 부분적으로 주소 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="e6d8726800d3f40efd84a65a018aab5ecc80b8d0" translate="yes" xml:space="preserve">
          <source>Cypress now scrolls all parent containers (not just &lt;code&gt;window&lt;/code&gt;) when attempting to &lt;a href=&quot;../core-concepts/interacting-with-elements#Actionability&quot;&gt;check an element&amp;rsquo;s actionability&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/569&quot;&gt;#569&lt;/a&gt;.</source>
          <target state="translated">Cypress는 이제 &lt;a href=&quot;../core-concepts/interacting-with-elements#Actionability&quot;&gt;요소의 실행 가능성&lt;/a&gt; 을 검사 하려고 할 때 &lt;code&gt;window&lt;/code&gt; 뿐만 아니라 모든 상위 컨테이너를 스크롤합니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/569&quot;&gt;# 569&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="75c3210e180ed5b888dbaac9f9f2b823ad8e541d" translate="yes" xml:space="preserve">
          <source>Cypress now silently restarts the server whenever it detects a change to &lt;code&gt;cypress.json&lt;/code&gt; - meaning you no longer have to manually reboot the server for changes to be picked up.</source>
          <target state="translated">Cypress는 이제 &lt;code&gt;cypress.json&lt;/code&gt; 에 대한 변경 사항을 감지 할 때마다 서버를 자동으로 다시 시작합니다. 즉, 변경 사항을 적용하기 위해 더 이상 서버를 수동으로 재부팅 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="aeebc8b2da7b9ccb9e2e7bd76b842654098f814d" translate="yes" xml:space="preserve">
          <source>Cypress now throws a specific error message (with a link to further explanation) if you attempt to run commands outside of a test. Usually this happens accidentally when you write &lt;code&gt;cy.commands&lt;/code&gt; inside of a &lt;code&gt;describe&lt;/code&gt; or &lt;code&gt;context&lt;/code&gt; block instead of the &lt;code&gt;it&lt;/code&gt;. I&amp;rsquo;ve wasted too much time and almost bombed entire presentations / demos so I&amp;rsquo;ve finally stopped this from ever happening again. If you ever see this error message, trust me, you will forever thank me.</source>
          <target state="translated">Cypress는 이제 테스트 외부에서 명령을 실행하려고하면 특정 오류 메시지 (추가 설명 링크와 함께)를 표시합니다. 당신이 쓸 때 보통이 실수로 발생 &lt;code&gt;cy.commands&lt;/code&gt; 내부의 &lt;code&gt;describe&lt;/code&gt; 또는 &lt;code&gt;context&lt;/code&gt; 대신 블록 &lt;code&gt;it&lt;/code&gt; . 나는 너무 많은 시간을 낭비하고 거의 모든 프리젠 테이션 / 데모를 폭격하여 결국 다시는 이런 일이 발생하는 것을 막았습니다. 이 오류 메시지가 표시되면 나를 믿어 주시면 영원히 감사하겠습니다.</target>
        </trans-unit>
        <trans-unit id="21ea85f8d7f19717172c574573373976dc8f7273" translate="yes" xml:space="preserve">
          <source>Cypress now throws on &lt;a href=&quot;../../api/commands/should&quot;&gt;&lt;code&gt;.should()&lt;/code&gt;&lt;/a&gt; if any DOM member isn&amp;rsquo;t in the DOM, except for &lt;code&gt;exist&lt;/code&gt; assertions.</source>
          <target state="translated">싸이프레스는 현재에 발생 &lt;a href=&quot;../../api/commands/should&quot;&gt; &lt;code&gt;.should()&lt;/code&gt; &lt;/a&gt; 어떤 DOM 구성원을 제외하고는 DOM에없는 경우 &lt;code&gt;exist&lt;/code&gt; 주장.</target>
        </trans-unit>
        <trans-unit id="f8d94ca29f1aa37e5db8fe5c3b257d9755394b81" translate="yes" xml:space="preserve">
          <source>Cypress now throws on &lt;code&gt;eventually.have.length&lt;/code&gt; assertions. Use implicit &lt;code&gt;{length: n}&lt;/code&gt; command options instead.</source>
          <target state="translated">싸이프레스는 현재에 발생 &lt;code&gt;eventually.have.length&lt;/code&gt; 주장. 대신 암시 적 &lt;code&gt;{length: n}&lt;/code&gt; 명령 옵션을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="d3c42c31ebf42b105f44851eeae9239942c944df" translate="yes" xml:space="preserve">
          <source>Cypress now uses the body instead of headers to send external requests. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/148&quot;&gt;#148&lt;/a&gt;.</source>
          <target state="translated">Cypress는 이제 헤더 대신 본문을 사용하여 외부 요청을 보냅니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/148&quot;&gt;# 148&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="56ec351e8d632a320060c36e80e1664a3d2bd1b5" translate="yes" xml:space="preserve">
          <source>Cypress now verifies it can run on your system prior to actually running. It&amp;rsquo;ll do this for each new version the first time you try to use it. Errors it receives from attempting to run will bubble up nicely, so you&amp;rsquo;ll get output for things like &lt;a href=&quot;../guides/continuous-integration#Dependencies&quot;&gt;missing linux dependencies&lt;/a&gt; instead of absolutely &lt;em&gt;nothing&lt;/em&gt; like before.</source>
          <target state="translated">Cypress는 이제 실제로 실행하기 전에 시스템에서 실행할 수 있는지 확인합니다. 처음 사용할 때마다 새 버전마다이 작업을 수행합니다. 당신 같은 것들에 대한 출력을 얻을 것이다, 그래서 잘 의지 거품을 실행하려고 시도 수신 오류 &lt;a href=&quot;../guides/continuous-integration#Dependencies&quot;&gt;리눅스 종속성이없는&lt;/a&gt; 대신에 절대적으로 &lt;em&gt;아무것도&lt;/em&gt; 전에있다.</target>
        </trans-unit>
        <trans-unit id="984f4ffa7852c85c3302af6478a0498d6343532e" translate="yes" xml:space="preserve">
          <source>Cypress now waits &lt;code&gt;20s&lt;/code&gt; (which matches &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt;) for the new page to load instead of &lt;code&gt;4s&lt;/code&gt; previously.</source>
          <target state="translated">Cypress는 이제 새 페이지가 &lt;code&gt;4s&lt;/code&gt; 대신로드 될 때까지 &lt;code&gt;20s&lt;/code&gt; ( &lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 와 일치 )를 기다립니다 .</target>
        </trans-unit>
        <trans-unit id="01b0426deef0061b526f8597fa02ab47947651a5" translate="yes" xml:space="preserve">
          <source>Cypress now watches all the &lt;code&gt;plugins file&lt;/code&gt;&amp;lsquo;s entire dependency tree to make iterating on plugins easier. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1407&quot;&gt;#1407&lt;/a&gt;.</source>
          <target state="translated">Cypress는 이제 플러그인을보다 쉽게 ​​반복 할 수 있도록 모든 &lt;code&gt;plugins file&lt;/code&gt; 의 전체 종속성 트리를 감시합니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1407&quot;&gt;# 1407&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0561a236371729207fe6da2edefa2ac1e0c7e672" translate="yes" xml:space="preserve">
          <source>Cypress now works with JS applications that use &lt;code&gt;pushState&lt;/code&gt; and &lt;code&gt;replaceState&lt;/code&gt; routing (commonly known as &lt;code&gt;HTML5 History&lt;/code&gt;) without having to change any application code.</source>
          <target state="translated">Cypress는 이제 애플리케이션 코드를 변경하지 않고 &lt;code&gt;pushState&lt;/code&gt; 및 &lt;code&gt;replaceState&lt;/code&gt; 라우팅 (일반적으로 &lt;code&gt;HTML5 History&lt;/code&gt; ) 을 사용하는 JS 애플리케이션과 함께 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="328f444bd6f0a4d4b9f5d672125e108992bf7bae" translate="yes" xml:space="preserve">
          <source>Cypress offers several different timeout values based on the type of command.</source>
          <target state="translated">Cypress는 명령 유형에 따라 여러 가지 시간 초과 값을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="75c41c9b5e30ed427d48d319c908836d109428aa" translate="yes" xml:space="preserve">
          <source>Cypress only retries commands that query the DOM: &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/find&quot;&gt;&lt;code&gt;.find()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;.contains()&lt;/code&gt;&lt;/a&gt;, etc. You can check if a particular command is retried by looking at the &amp;ldquo;Assertions&amp;rdquo; section in its API documentation. For example, &amp;ldquo;Assertions section&amp;rdquo; of &lt;a href=&quot;../../api/commands/first&quot;&gt;&lt;code&gt;.first()&lt;/code&gt;&lt;/a&gt; tells us that the command is retried until all assertions that follow it are passing.</source>
          <target state="translated">싸이프레스에만 재시도 명령이 쿼리 DOM : &lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../api/commands/find&quot;&gt; &lt;code&gt;.find()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;.contains()&lt;/code&gt; &lt;/a&gt; 등 특정 명령이 자사의 API 설명서의 &quot;어설&quot;섹션을보고 시도하는 경우 당신은 확인할 수 있습니다. 예를 들어, &lt;a href=&quot;../../api/commands/first&quot;&gt; &lt;code&gt;.first()&lt;/code&gt; &lt;/a&gt; 의 &quot;어설 션 섹션&quot;은 명령을 따르는 모든 어설 션이 전달 될 때까지 명령이 재 시도됨을 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="59e756cb2f95cf56d3bca3843c640a7f469ea40d" translate="yes" xml:space="preserve">
          <source>Cypress opens the test in a browser installed on your system. You can read more about how we do this in &lt;a href=&quot;../guides/launching-browsers&quot;&gt;Launching Browsers&lt;/a&gt;.</source>
          <target state="translated">Cypress는 시스템에 설치된 브라우저에서 테스트를 엽니 다. &lt;a href=&quot;../guides/launching-browsers&quot;&gt;브라우저 실행&lt;/a&gt; 에서이 작업을 수행하는 방법에 대해 자세히 알아볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f0173abbad11121f52075c8a906e19a118be30de" translate="yes" xml:space="preserve">
          <source>Cypress overrides chai &lt;code&gt;exist&lt;/code&gt; assertion to really mean: &amp;ldquo;does this subject exist in the document?&amp;rdquo;</source>
          <target state="translated">Cypress는 차이 &lt;code&gt;exist&lt;/code&gt; 한다는 단언을 실제로 재정의 합니다 . &quot;이 주제가 문서에 존재합니까?&quot;</target>
        </trans-unit>
        <trans-unit id="146ca552c9473ccc324088efa1279a8217bec4cc" translate="yes" xml:space="preserve">
          <source>Cypress overrides chai&amp;rsquo;s default inspection function for DOM elements meaning instead of seeing &lt;code&gt;{ Object (0, length, ...) }&lt;/code&gt; you will now ee the nicely formatted Cypress DOM element like: &lt;code&gt;&amp;lt;button#primary.btn-large&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Cypress는 &lt;code&gt;{ Object (0, length, ...) }&lt;/code&gt; 대신에 DOM 요소 의미에 대한 차이의 기본 검사 기능을 재정의합니다. 이제 &lt;code&gt;&amp;lt;button#primary.btn-large&amp;gt;&lt;/code&gt; 와 같이 멋지게 형식화 된 Cypress DOM 요소를 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="64d448eae4e8a6893333958b808048d2e7f256de" translate="yes" xml:space="preserve">
          <source>Cypress prevents you from being forced to always &amp;lsquo;act like a user&amp;rsquo; to generate the state of a given situation. With Cypress you can programmatically interact and control your application. You no longer have to use your UI to build up state.</source>
          <target state="translated">Cypress는 주어진 상황의 상태를 생성하기 위해 항상 '사용자처럼 행동'하도록 강요하지 않습니다. Cypress를 사용하면 응용 프로그램을 프로그래밍 방식으로 상호 작용하고 제어 할 수 있습니다. 더 이상 상태를 구축하기 위해 UI를 사용할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="0901f17f6a6bfd86ef0e8bdc9965616ef93b875d" translate="yes" xml:space="preserve">
          <source>Cypress prints out a table of key events that detail the keys that were pressed when clicking on type within the &lt;a href=&quot;#Command-Log&quot;&gt;Command Log&lt;/a&gt;. Each character will contain the &lt;code&gt;which&lt;/code&gt; character code and the events that happened as a result of that key press.</source>
          <target state="translated">Cypress는 &lt;a href=&quot;#Command-Log&quot;&gt;Command Log&lt;/a&gt; 내에서 유형을 클릭 할 때 누른 키를 자세히 설명하는 주요 이벤트 테이블을 인쇄합니다 . 각 문자가 포함 &lt;code&gt;which&lt;/code&gt; 문자 코드와 그 키 프레스의 결과로 일어난 사건.</target>
        </trans-unit>
        <trans-unit id="30c4ca1628d1f2fc135ce180acaedd95781e4ac5" translate="yes" xml:space="preserve">
          <source>Cypress provides a nice &lt;a href=&quot;../core-concepts/test-runner&quot;&gt;Test Runner&lt;/a&gt; that gives you a visual structure of suites, tests, and assertions. Soon you&amp;rsquo;ll also see commands, page events, network requests, and more.</source>
          <target state="translated">Cypress는 스위트, 테스트 및 어설 션의 시각적 구조를 제공하는 멋진 &lt;a href=&quot;../core-concepts/test-runner&quot;&gt;테스트 러너&lt;/a&gt; 를 제공합니다. 곧 명령, 페이지 이벤트, 네트워크 요청 등도 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5a5b7d9bd0b3cb9bb9f611633a4c8aae5b0ddab3" translate="yes" xml:space="preserve">
          <source>Cypress provides a simple but powerful algorithm when &lt;a href=&quot;interacting-with-elements&quot;&gt;interacting with elements.&lt;/a&gt;</source>
          <target state="translated">Cypress는 &lt;a href=&quot;interacting-with-elements&quot;&gt;요소와 상호 작용할&lt;/a&gt; 때 간단하지만 강력한 알고리즘을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="7119a7722e27be27408050d772ff83cb2fc37abe" translate="yes" xml:space="preserve">
          <source>Cypress relies on many best-of-breed open source testing libraries to lend stability and familiarity to the platform from the get-go. If you&amp;rsquo;ve been testing in JavaScript, you&amp;rsquo;ll recognize many old friends in this list. Understand how we exploit them and hit the ground running with Cypress!</source>
          <target state="translated">Cypress는 동급 최강의 다양한 오픈 소스 테스트 라이브러리를 사용하여 안정성과 플랫폼 친숙성을 제공합니다. JavaScript로 테스트 한 경우이 목록에서 많은 옛 친구를 알아볼 수 있습니다. 우리가 어떻게 그것들을 악용하는지 이해하고 Cypress로 뛰어 들어보십시오!</target>
        </trans-unit>
        <trans-unit id="94d62bad629e117914d487019b841c0cd760fd4c" translate="yes" xml:space="preserve">
          <source>Cypress respects all default browser behavior when events are canceled.</source>
          <target state="translated">Cypress는 이벤트가 취소 될 때 모든 기본 브라우저 동작을 존중합니다.</target>
        </trans-unit>
        <trans-unit id="1aca486d8a9674fc068dbb213faf1eb126b6bf8d" translate="yes" xml:space="preserve">
          <source>Cypress respects not firing subsequent events if previous ones were canceled.</source>
          <target state="translated">Cypress는 이전 이벤트가 취소 된 경우 후속 이벤트를 발생시키지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6b8f0d859d277d8becfc00ac96e5e1d797ba607d" translate="yes" xml:space="preserve">
          <source>Cypress runs a series of async lifecycle events that reset state between tests</source>
          <target state="translated">Cypress는 테스트 간 상태를 재설정하는 일련의 비동기 수명주기 이벤트를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="84eee613666e00d11cbbab69e67875033066feba" translate="yes" xml:space="preserve">
          <source>Cypress runs as fast as your browser can render content. You can watch tests run in real time as you develop your applications. TDD FTW!</source>
          <target state="translated">Cypress는 브라우저가 컨텐츠를 렌더링 할 수있는 속도로 실행됩니다. 응용 프로그램을 개발할 때 테스트가 실시간으로 실행되는 것을 볼 수 있습니다. TDD FTW!</target>
        </trans-unit>
        <trans-unit id="652b35d8cbe457fb4f8dea21ac2f6bee59ef38af" translate="yes" xml:space="preserve">
          <source>Cypress runs each spec file in isolation: the browser is exited between specs. Configuration changed in one spec won&amp;rsquo;t be visible in other specs.</source>
          <target state="translated">Cypress는 각 사양 파일을 개별적으로 실행합니다. 사양간에 브라우저가 종료됩니다. 한 사양에서 변경된 구성은 다른 사양에서 볼 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="993523b15d16a2320c718b9bd7eeab7048b6023f" translate="yes" xml:space="preserve">
          <source>Cypress runs each spec file in isolation: the browser is exited between specs. Environment variables added or changed in one spec won&amp;rsquo;t be visible in other specs.</source>
          <target state="translated">Cypress는 각 사양 파일을 개별적으로 실행합니다. 사양간에 브라우저가 종료됩니다. 한 스펙에서 추가되거나 변경된 환경 변수는 다른 스펙에서 보이지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1c2f59d18eff47414ce290463f65cbe49d47a359" translate="yes" xml:space="preserve">
          <source>Cypress runs several calculations to ensure an element can &lt;em&gt;actually&lt;/em&gt; be interacted with like a real user would. If you&amp;rsquo;re seeing this error, the solution is often obvious. You may need to &lt;em&gt;guard&lt;/em&gt; your commands (due to a timing or an animation issue).</source>
          <target state="translated">Cypress는 여러 가지 계산을 수행하여 요소 가 실제 사용자처럼 &lt;em&gt;실제로&lt;/em&gt; 상호 작용할 수 있도록합니다 . 이 오류가 표시되면 해결 방법이 분명합니다. 타이밍이나 애니메이션 문제로 인해 명령 을 &lt;em&gt;보호&lt;/em&gt; 해야 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a4f200198c8ba764235a6c2c637121db6109d4e7" translate="yes" xml:space="preserve">
          <source>Cypress runs tests in a unique interactive runner that allows you to see commands as they execute while also viewing the application under test.</source>
          <target state="translated">Cypress는 고유 한 대화식 러너에서 테스트를 실행하여 테스트중인 애플리케이션을 보면서 명령이 실행될 때 명령을 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4e332a0c5a468947f22565f93f6dc999aed977f7" translate="yes" xml:space="preserve">
          <source>Cypress ships with &lt;a href=&quot;https://github.com/cypress-io/cypress/tree/develop/cli/types&quot;&gt;official type declarations&lt;/a&gt; for &lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt;. This allows you to write your tests in TypeScript. All that is required is a little bit of configuration.</source>
          <target state="translated">Cypress 는 &lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript &lt;/a&gt;&lt;a href=&quot;https://github.com/cypress-io/cypress/tree/develop/cli/types&quot;&gt;공식 형식 선언&lt;/a&gt; 과 함께 제공됩니다 . 이를 통해 TypeScript에서 테스트를 작성할 수 있습니다. 필요한 것은 약간의 구성입니다.</target>
        </trans-unit>
        <trans-unit id="5c9a32a140f11895887c01b52c52843f2ff296c2" translate="yes" xml:space="preserve">
          <source>Cypress should run on &lt;strong&gt;all&lt;/strong&gt; CI providers. We have provided some example projects and configuration for some CI providers to help you get started.</source>
          <target state="translated">Cypress는 &lt;strong&gt;모든&lt;/strong&gt; CI 공급자 에서 실행해야합니다 . 시작하는 데 도움이되는 일부 CI 제공 업체를위한 일부 예제 프로젝트 및 구성을 제공했습니다.</target>
        </trans-unit>
        <trans-unit id="9f193d6f03ef2d0aa86e8bd9826847c232c8503a" translate="yes" xml:space="preserve">
          <source>Cypress should work with self signed SSL certificates now.</source>
          <target state="translated">Cypress는 이제 자체 서명 된 SSL 인증서와 함께 작동합니다.</target>
        </trans-unit>
        <trans-unit id="acc644f8041fb8424264f0835f0deccd81152ba2" translate="yes" xml:space="preserve">
          <source>Cypress spawns your &lt;code&gt;pluginsFile&lt;/code&gt; in its own child process so it is isolated away from the context that Cypress itself runs in. That means you cannot accidentally modify or change Cypress&amp;rsquo; own execution in any way.</source>
          <target state="translated">Cypress 는 자체 하위 프로세스에서 &lt;code&gt;pluginsFile&lt;/code&gt; 을 생성 하므로 Cypress 자체가 실행되는 컨텍스트와 분리됩니다. 즉, 실수로 Cypress 자체 실행을 수정하거나 변경할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="e5e547cc7614418821eb9d223a6953d496b64b40" translate="yes" xml:space="preserve">
          <source>Cypress supports both BDD (&lt;code&gt;expect&lt;/code&gt;/&lt;code&gt;should&lt;/code&gt;) and TDD (&lt;code&gt;assert&lt;/code&gt;) style assertions. &lt;a href=&quot;../references/assertions&quot;&gt;Read more about assertions.&lt;/a&gt;</source>
          <target state="translated">Cypress는 BDD ( &lt;code&gt;expect&lt;/code&gt; / &lt;code&gt;should&lt;/code&gt; ) 및 TDD ( &lt;code&gt;assert&lt;/code&gt; ) 스타일 어설 션을 모두 지원합니다 . &lt;a href=&quot;../references/assertions&quot;&gt;어설 션에 대해 자세히 알아보십시오.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ff507ca9cfd843fa195d0094c8b6d5053885bb9e" translate="yes" xml:space="preserve">
          <source>Cypress supports both ES2015 modules and CommonJS modules. You can import/require npm modules as well as local modules:</source>
          <target state="translated">Cypress는 ES2015 모듈과 CommonJS 모듈을 모두 지원합니다. npm 모듈과 로컬 모듈을 가져 오거나 요구할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="038e3f502d60c8beca841390c095d4561733318b" translate="yes" xml:space="preserve">
          <source>Cypress supports custom reporters, whether local to your project or installed through &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm&lt;/a&gt;.</source>
          <target state="translated">Cypress는 프로젝트에 로컬인지 또는 &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm을&lt;/a&gt; 통해 설치되었는지에 관계없이 사용자 지정 기자를 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="6fc9f13371034d720435a8eb69b7cd6ab176fb37" translate="yes" xml:space="preserve">
          <source>Cypress takes snapshots of your application and enables you to time travel back to the state it was in when commands ran.</source>
          <target state="translated">Cypress는 애플리케이션의 스냅 샷을 작성하여 명령 실행 당시의 상태로 시간 여행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fe5be4836516e1e2770a2da478822eed0a699871" translate="yes" xml:space="preserve">
          <source>Cypress taskbar icon now displays correctly in OS X dark theme. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/132&quot;&gt;#132&lt;/a&gt;.</source>
          <target state="translated">OS X 어두운 테마에서 Cypress 작업 표시 줄 아이콘이 올바르게 표시됩니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/132&quot;&gt;# 132&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d4972b25ec91ce75b0b59d3618328eb5e19b7cdd" translate="yes" xml:space="preserve">
          <source>Cypress tries to act like a human user would using the browser.</source>
          <target state="translated">Cypress는 사용자가 브라우저를 사용하는 것처럼 행동하려고합니다.</target>
        </trans-unit>
        <trans-unit id="479947688007d4c97106b916ae2f1db22b00a060" translate="yes" xml:space="preserve">
          <source>Cypress type definition now allow a &lt;code&gt;timeout&lt;/code&gt; option in &lt;a href=&quot;../../api/commands/hash&quot;&gt;&lt;code&gt;cy.hash()&lt;/code&gt;&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3844&quot;&gt;#3844&lt;/a&gt;.</source>
          <target state="translated">Cypress 유형 정의는 이제 &lt;a href=&quot;../../api/commands/hash&quot;&gt; &lt;code&gt;cy.hash()&lt;/code&gt; &lt;/a&gt; 에서 &lt;code&gt;timeout&lt;/code&gt; 옵션을 허용합니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3844&quot;&gt;# 3844&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f88b9ca448ccd87f8b6ec70c9370c6e14674014d" translate="yes" xml:space="preserve">
          <source>Cypress ultimately controls the entire automation process from top to bottom, which puts it in the unique position of being able to understand everything happening in and outside of the browser. This means Cypress is capable of delivering more consistent results than any other testing tool.</source>
          <target state="translated">Cypress는 궁극적으로 전체 자동화 프로세스를 위에서 아래로 제어하여 브라우저 안팎에서 발생하는 모든 것을 이해할 수있는 고유 한 위치에 배치합니다. 이는 Cypress가 다른 테스트 도구보다 더 일관된 결과를 제공 할 수 있음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="4fc8460227cb9de3a009bcbf7aaffc8c72982fcb" translate="yes" xml:space="preserve">
          <source>Cypress used to automatically include any scripts in the &lt;code&gt;supportFolder&lt;/code&gt; before your test files. However, automatically including all the files in a certain directory is somewhat magical and unintuitive, and requires creating globals for the purpose of utility functions.</source>
          <target state="translated">Cypress는 테스트 파일 전에 &lt;code&gt;supportFolder&lt;/code&gt; 에 스크립트를 자동으로 포함시키는 데 사용됩니다 . 그러나 특정 디렉토리에 모든 파일을 자동으로 포함시키는 것은 다소 마술적이고 직관적이지 않으며 유틸리티 기능을 위해 전역을 작성해야합니다.</target>
        </trans-unit>
        <trans-unit id="6853d537d62543dcc53050554902c96c0145fe4f" translate="yes" xml:space="preserve">
          <source>Cypress uses the &lt;a href=&quot;https://github.com/cypress-io/commit-info&quot;&gt;@cypress/commit-info&lt;/a&gt; package to extract git information to associate with the run (e.g. branch, commit message, author).</source>
          <target state="translated">Cypress는 &lt;a href=&quot;https://github.com/cypress-io/commit-info&quot;&gt;@ cypress / commit-info&lt;/a&gt; 패키지를 사용하여 실행과 연관시킬 git 정보를 추출합니다 (예 : 분기, 커밋 메시지, 작성자).</target>
        </trans-unit>
        <trans-unit id="bb017039428bd9695548918b11321d9646f00783" translate="yes" xml:space="preserve">
          <source>Cypress uses the &lt;a href=&quot;https://github.com/visionmedia/debug&quot;&gt;&lt;code&gt;debug&lt;/code&gt;&lt;/a&gt; node module for both the back end server process, and for everything running in the browser (called the driver).</source>
          <target state="translated">Cypress는 백엔드 서버 프로세스와 브라우저에서 실행중인 모든 항목 (드라이버라고 함)에 &lt;a href=&quot;https://github.com/visionmedia/debug&quot;&gt; &lt;code&gt;debug&lt;/code&gt; &lt;/a&gt; 노드 모듈을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="97e22057dbd51fd0e4767f5d9d5b6fe56128a778" translate="yes" xml:space="preserve">
          <source>Cypress uses your &lt;a href=&quot;#Project-ID&quot;&gt;`projectId`&lt;/a&gt; and &lt;a href=&quot;#Record-key&quot;&gt;Record Key&lt;/a&gt; together to uniquely identify projects.</source>
          <target state="translated">Cypress는 &lt;a href=&quot;#Project-ID&quot;&gt;`projectId`&lt;/a&gt; 와 &lt;a href=&quot;#Record-key&quot;&gt;Record Key를&lt;/a&gt; 함께 사용하여 프로젝트를 고유하게 식별합니다.</target>
        </trans-unit>
        <trans-unit id="d28e3238226e8e5bf814bfa4ea1724d3591929fa" translate="yes" xml:space="preserve">
          <source>Cypress utilizes a Chrome extension within the Test Runner in order to run properly. If you or your company whitelist specific Chrome extensions, this may cause problems with running Cypress. You will want to ask your administrator to whitelist the Cypress extension ID below:</source>
          <target state="translated">Cypress는 Test Runner 내에서 Chrome 확장 프로그램을 사용하여 제대로 실행됩니다. 귀하 또는 회사에서 특정 Chrome 확장 프로그램을 허용 목록에 추가하면 Cypress 실행에 문제가 발생할 수 있습니다. 관리자에게 아래의 Cypress 확장 ID를 허용하도록 요청하십시오.</target>
        </trans-unit>
        <trans-unit id="e675859d662a062a4c171a9f1d08c57a4ca629d7" translate="yes" xml:space="preserve">
          <source>Cypress waits for Promises to resolve before continuing</source>
          <target state="translated">Cypress는 약속이 해결되기를 기다렸다가 계속합니다.</target>
        </trans-unit>
        <trans-unit id="c8c00835f4dc24cefa4efa7561d09d2e10eaa482" translate="yes" xml:space="preserve">
          <source>Cypress webpack Preprocessor</source>
          <target state="translated">Cypress 웹팩 전 처리기</target>
        </trans-unit>
        <trans-unit id="54d4f75b63aca1715daf3b46c5b502c77d230338" translate="yes" xml:space="preserve">
          <source>Cypress will &lt;em&gt;not&lt;/em&gt; continue running any other commands until &lt;code&gt;cy.exec()&lt;/code&gt; has finished, so a long-running command will drastically slow down your test cycle.</source>
          <target state="translated">싸이프레스는 할 &lt;em&gt;수 없습니다&lt;/em&gt; 때까지 다른 명령을 계속 실행 &lt;code&gt;cy.exec()&lt;/code&gt; 장기 실행 명령을 대폭 테스트주기를 느리게 있도록, 완료되었습니다.</target>
        </trans-unit>
        <trans-unit id="0609de7c3cdae19760f6f992063e6008dfcf272f" translate="yes" xml:space="preserve">
          <source>Cypress will &lt;em&gt;not&lt;/em&gt; continue running any other commands until &lt;code&gt;cy.task()&lt;/code&gt; has finished, so a long-running command will drastically slow down your test runs.</source>
          <target state="translated">싸이프레스는 할 &lt;em&gt;수 없습니다&lt;/em&gt; 때까지 다른 명령을 계속 실행 &lt;code&gt;cy.task()&lt;/code&gt; 장기 실행 명령을 대폭 테스트 실행 속도를 느리게 있도록, 완료되었습니다.</target>
        </trans-unit>
        <trans-unit id="406c613e6876b8de52afdd2fa25e20b62f46f937" translate="yes" xml:space="preserve">
          <source>Cypress will &lt;em&gt;strip off&lt;/em&gt; the &lt;code&gt;CYPRESS_&lt;/code&gt; when adding your environment variables.</source>
          <target state="translated">싸이프레스는 것이다 &lt;em&gt;벗겨 &lt;/em&gt; &lt;code&gt;CYPRESS_&lt;/code&gt; 를 환경 변수를 추가 할 때.</target>
        </trans-unit>
        <trans-unit id="3b1e056fcee4b7be242d9b9374156e4ae810a750" translate="yes" xml:space="preserve">
          <source>Cypress will assign each spec file to an available machine based on our &lt;a href=&quot;#Balance-strategy&quot;&gt;balance strategy&lt;/a&gt;. Due to this balance strategy, the run order of the spec files is not guaranteed when parallelized.</source>
          <target state="translated">Cypress는 당사의 &lt;a href=&quot;#Balance-strategy&quot;&gt;균형 전략&lt;/a&gt; 에 따라 각 사양 파일을 사용 가능한 머신에 할당합니다 . 이 밸런스 전략으로 인해 스펙 파일의 실행 순서는 병렬화 될 때 보장되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e71366c925d9bca56f0b4179d4e45622fb21fad9" translate="yes" xml:space="preserve">
          <source>Cypress will automatically &lt;em&gt;wait&lt;/em&gt; for elements to pass their default assertions. Just like with explicit assertions you&amp;rsquo;ve added, all of these assertions share the &lt;em&gt;same&lt;/em&gt; timeout values.</source>
          <target state="translated">Cypress는 요소가 기본 어설 션을 전달할 &lt;em&gt;때까지&lt;/em&gt; 자동으로 &lt;em&gt;기다립니다&lt;/em&gt; . 추가 한 명시 적 어설 션과 마찬가지로 이러한 모든 어설 션은 &lt;em&gt;동일한&lt;/em&gt; 시간 초과 값을 공유 합니다.</target>
        </trans-unit>
        <trans-unit id="8fc70e89236c64d2239c242879042a3d4d1d96bb" translate="yes" xml:space="preserve">
          <source>Cypress will automatically apply the right authorization headers if you&amp;rsquo;re attempting to visit an application that requires &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication&quot;&gt;Basic Authentication&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication&quot;&gt;기본 인증&lt;/a&gt; 이 필요한 응용 프로그램을 방문하려는 경우 Cypress가 올바른 인증 헤더를 자동으로 적용합니다 .</target>
        </trans-unit>
        <trans-unit id="3f9bcdd8a00e9ea3873797d9d170893ab1ae4b55" translate="yes" xml:space="preserve">
          <source>Cypress will automatically apply the server and routes to the very next &lt;code&gt;cy.visit()&lt;/code&gt; and does so immediately before any of your application code runs.</source>
          <target state="translated">Cypress는 자동으로 서버를 적용하고 바로 다음 &lt;code&gt;cy.visit()&lt;/code&gt; 라우팅하며 응용 프로그램 코드가 실행되기 직전에 적용합니다.</target>
        </trans-unit>
        <trans-unit id="53fd4f3428ed96a217bfd6ea8fc4d1515e5cf2b8" translate="yes" xml:space="preserve">
          <source>Cypress will automatically attach this header at the network proxy level, outside of the browser. Therefore you &lt;strong&gt;will not&lt;/strong&gt; see this header in the Dev Tools.</source>
          <target state="translated">Cypress는이 헤더를 브라우저 외부의 네트워크 프록시 수준에서 자동으로 연결합니다. 따라서 개발자 도구에는이 헤더 &lt;strong&gt;가 표시되지 않습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="94c9314c2b4f0cc413e6e36af85e441eb6d5d3a6" translate="yes" xml:space="preserve">
          <source>Cypress will automatically attempt to serve your files if you don&amp;rsquo;t provide a host. The path should be relative to your project&amp;rsquo;s root folder (where &lt;code&gt;cypress.json&lt;/code&gt; is located).</source>
          <target state="translated">Cypress는 호스트를 제공하지 않으면 자동으로 파일 서비스를 시도합니다. 경로는 프로젝트의 루트 폴더 ( &lt;code&gt;cypress.json&lt;/code&gt; 이있는 위치)에 상대적이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="2d2f3c92bd2819310aa05480cbe7b24c2b403524" translate="yes" xml:space="preserve">
          <source>Cypress will automatically balance your spec files across the available machines in your CI provider. Cypress calculates which spec file to run based on the data collected from previous runs. This ensures that your spec files run as fast as possible, with no need for manual configuration.</source>
          <target state="translated">Cypress는 CI 공급자의 사용 가능한 시스템에서 사양 파일의 균형을 자동으로 조정합니다. Cypress는 이전 실행에서 수집 한 데이터를 기반으로 실행할 사양 파일을 계산합니다. 이를 통해 수동 구성없이 스펙 파일을 최대한 빠르게 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f5bc0f3740be999ed993daff018d09755f5d0c0d" translate="yes" xml:space="preserve">
          <source>Cypress will automatically calculate a &lt;strong&gt;unique selector&lt;/strong&gt; to use targeted element by running through a series of selector strategies.</source>
          <target state="translated">Cypress는 일련의 선택기 전략을 실행하여 대상 요소를 사용할 &lt;strong&gt;고유 선택기&lt;/strong&gt; 를 자동으로 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="1c09141d31ee454fa40ad3e12fb02c509ba19807" translate="yes" xml:space="preserve">
          <source>Cypress will automatically clear all cookies &lt;strong&gt;before&lt;/strong&gt; each test run.</source>
          <target state="translated">Cypress는 각 테스트 실행 &lt;strong&gt;전에&lt;/strong&gt; 모든 쿠키 &lt;strong&gt;를&lt;/strong&gt; 자동으로 지 웁니다 .</target>
        </trans-unit>
        <trans-unit id="e5585ef906a49c34abd99817fa602271f93287bb" translate="yes" xml:space="preserve">
          <source>Cypress will automatically detect the type of browser supplied and launch it for you.</source>
          <target state="translated">Cypress가 자동으로 제공된 브라우저 유형을 감지하고이를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="8b4fad3016d78365d8b99afdd0809a57b1a103ae" translate="yes" xml:space="preserve">
          <source>Cypress will automatically determine if an element is animating and wait until it stops.</source>
          <target state="translated">Cypress는 요소가 애니메이션 중인지 자동으로 확인하고 중지 될 때까지 기다립니다.</target>
        </trans-unit>
        <trans-unit id="23da5b17758d9e7d4f841343cbb8a6b0d4ff29bf" translate="yes" xml:space="preserve">
          <source>Cypress will continuously attempt to interact with the element until it eventually times out. If you&amp;rsquo;d like to force Cypress to interact with the element there are a few options:</source>
          <target state="translated">Cypress는 요소가 결국 시간 초과 될 때까지 지속적으로 요소와 상호 작용을 시도합니다. Cypress가 요소와 상호 작용하도록하려면 몇 가지 옵션이 있습니다.</target>
        </trans-unit>
        <trans-unit id="37b891f51aad5b809dd4cf0e5e34f297407b2fdf" translate="yes" xml:space="preserve">
          <source>Cypress will create a &lt;a href=&quot;../references/configuration#Screenshots&quot;&gt;&lt;code&gt;screenshotsFolder&lt;/code&gt;&lt;/a&gt; and a &lt;a href=&quot;../references/configuration#Videos&quot;&gt;&lt;code&gt;videosFolder&lt;/code&gt;&lt;/a&gt; to store the screenshots and videos taken during the testing of your application. Many users will opt to add these folders to their &lt;code&gt;.gitignore&lt;/code&gt; file. Additionally, if you are storing sensitive environment variables in your &lt;code&gt;cypress.json&lt;/code&gt; or &lt;a href=&quot;../guides/environment-variables#Option-2-cypress-env-json&quot;&gt;&lt;code&gt;cypress.env.json&lt;/code&gt;&lt;/a&gt;, these should also be ignored when you check into source control.</source>
          <target state="translated">싸이프레스는 만듭니다 &lt;a href=&quot;../references/configuration#Screenshots&quot;&gt; &lt;code&gt;screenshotsFolder&lt;/code&gt; &lt;/a&gt; 과 &lt;a href=&quot;../references/configuration#Videos&quot;&gt; &lt;code&gt;videosFolder&lt;/code&gt; &lt;/a&gt; 응용 프로그램의 테스트 기간 동안 촬영 한 스크린 샷과 동영상을 저장할 수 있습니다. 많은 사용자가이 폴더를 &lt;code&gt;.gitignore&lt;/code&gt; 파일 에 추가하도록 선택 합니다. 또한 &lt;code&gt;cypress.json&lt;/code&gt; 또는 &lt;a href=&quot;../guides/environment-variables#Option-2-cypress-env-json&quot;&gt; &lt;code&gt;cypress.env.json&lt;/code&gt; &lt;/a&gt; 에 민감한 환경 변수를 저장하는 경우 소스 제어를 체크인 할 때 이러한 환경 변수 도 무시해야합니다.</target>
        </trans-unit>
        <trans-unit id="b1cb8fd34ae7f83f958af119167b50e6cf003b49" translate="yes" xml:space="preserve">
          <source>Cypress will error and exit with status 1 if no specs were found during &lt;code&gt;cypress run&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1585&quot;&gt;#1585&lt;/a&gt;.</source>
          <target state="translated">Cypress를 &lt;code&gt;cypress run&lt;/code&gt; 하는 동안 사양을 찾지 못하면 Cypress가 오류가 발생하고 상태 1로 종료됩니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1585&quot;&gt;# 1585&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="373c9016054078fb9acea27857f55ea29665668f" translate="yes" xml:space="preserve">
          <source>Cypress will fire &lt;code&gt;input&lt;/code&gt;&lt;em&gt;only&lt;/em&gt; if typing that key modifies or changes the value of the element.</source>
          <target state="translated">싸이프레스는 발광합니다 &lt;code&gt;input&lt;/code&gt; &lt;em&gt;만&lt;/em&gt; 입력 키를 수정 또는 요소의 값을 변경하는 것이 경우입니다.</target>
        </trans-unit>
        <trans-unit id="627967f432d1ceb4757cb73a73a87d9091bc0d6f" translate="yes" xml:space="preserve">
          <source>Cypress will fire &lt;code&gt;keypress&lt;/code&gt;&lt;em&gt;only&lt;/em&gt; if that key is supposed to actually fire &lt;code&gt;keypress&lt;/code&gt;.</source>
          <target state="translated">싸이프레스는 발광합니다 &lt;code&gt;keypress&lt;/code&gt; &lt;em&gt;경우에만&lt;/em&gt; 해당 키가 실제로 화재로 가정하면 &lt;code&gt;keypress&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2c53d051fa8bc8d03d8f5d5133be0a37808127e2" translate="yes" xml:space="preserve">
          <source>Cypress will fire &lt;code&gt;textInput&lt;/code&gt;&lt;em&gt;only&lt;/em&gt; if typing that key would have inserted an actual character.</source>
          <target state="translated">Cypress는 해당 키를 입력하면 실제 문자가 삽입 된 경우 &lt;em&gt;에만 &lt;/em&gt; &lt;code&gt;textInput&lt;/code&gt; 을 실행&lt;em&gt;합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="7779f36036ddf9ea77e21c8f2ba5265d9196cc5e" translate="yes" xml:space="preserve">
          <source>Cypress will ignore this element preference order if you pass a selector argument to &lt;code&gt;.contains()&lt;/code&gt;.</source>
          <target state="translated">Cypress는 selector 인수를 &lt;code&gt;.contains()&lt;/code&gt; 전달하면이 요소 기본 설정 순서를 무시합니다 .</target>
        </trans-unit>
        <trans-unit id="49e77e0383d1aa1a1f3c782bd0489a86f9de8325" translate="yes" xml:space="preserve">
          <source>Cypress will immediately fail with the following test code:</source>
          <target state="translated">Cypress는 다음 테스트 코드와 함께 즉시 실패합니다.</target>
        </trans-unit>
        <trans-unit id="48623dd3ef33bf76508adf868a3a2bad8137d3d3" translate="yes" xml:space="preserve">
          <source>Cypress will no longer incorrectly revert to a previous test run&amp;rsquo;s snapshot when tests are re-run.</source>
          <target state="translated">테스트를 다시 실행할 때 Cypress가 더 이상 이전 테스트 실행의 스냅 샷으로 잘못 되돌아 가지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6fddad0e92489f19cbb4337c046170574053b9d4" translate="yes" xml:space="preserve">
          <source>Cypress will now &lt;a href=&quot;configuration#Resolved-Configuration&quot;&gt;display the &lt;strong&gt;resolved&lt;/strong&gt; configuration values when you open a project&lt;/a&gt;. This tells you the source of all config values.</source>
          <target state="translated">Cypress는 이제 &lt;a href=&quot;configuration#Resolved-Configuration&quot;&gt;프로젝트를 열 때 &lt;/a&gt;&lt;strong&gt;해결 된&lt;/strong&gt; 구성 값을 표시합니다&lt;strong&gt;&lt;/strong&gt; . 모든 구성 값의 소스를 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="89dc61f3be6f61640026475b2ed988ca8ce68844" translate="yes" xml:space="preserve">
          <source>Cypress will now automatically prompt you to add a project when using &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt;&lt;code&gt;cypress run&lt;/code&gt;&lt;/a&gt; on a project that has not yet been added.</source>
          <target state="translated">Cypress는 이제 아직 추가되지 않은 프로젝트에서 &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt; &lt;code&gt;cypress run&lt;/code&gt; &lt;/a&gt; 을 사용할 때 프로젝트를 추가하라는 메시지를 자동으로 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="2bcf240396967ced122d7e48b9c1d58eb2ccc9b8" translate="yes" xml:space="preserve">
          <source>Cypress will now display &lt;code&gt;cypress.json&lt;/code&gt; parse errors when attempting to boot a project when there is a syntax error in &lt;code&gt;cypress.json&lt;/code&gt;.</source>
          <target state="translated">싸이프레스는 이제 표시됩니다 &lt;code&gt;cypress.json&lt;/code&gt; 의 구문 오류가있는 경우 프로젝트를 부팅 할 때 구문 분석 오류를 &lt;code&gt;cypress.json&lt;/code&gt; 가 .</target>
        </trans-unit>
        <trans-unit id="6f179a61c65d86072e367f13cd1cb9d33746394f" translate="yes" xml:space="preserve">
          <source>Cypress will now output its internal logger directly to the console when &lt;code&gt;CYPRESS_DEBUG&lt;/code&gt; env var is set.</source>
          <target state="translated">&lt;code&gt;CYPRESS_DEBUG&lt;/code&gt; env var가 설정 되면 Cypress는 이제 내부 로거를 콘솔에 직접 출력합니다 .</target>
        </trans-unit>
        <trans-unit id="2d1ef6bc49f222fca87099bb1aa6579caa469a68" translate="yes" xml:space="preserve">
          <source>Cypress will now scroll past multiple elements that cover up an element to be interacted with. It also now factors in elements with &lt;code&gt;position: sticky&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/571&quot;&gt;#571&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/565&quot;&gt;#565&lt;/a&gt;.</source>
          <target state="translated">Cypress는 이제 상호 작용할 요소를 덮는 여러 요소를 스크롤합니다. 또한 이제 &lt;code&gt;position: sticky&lt;/code&gt; 요소를 고려 합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/571&quot;&gt;# 571&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/565&quot;&gt;# 565를&lt;/a&gt; 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="89757a0bd83b5d48651207fb2e50c0887e271566" translate="yes" xml:space="preserve">
          <source>Cypress will prefix the URL with the &lt;code&gt;baseUrl&lt;/code&gt; configured in your &lt;a href=&quot;../../guides/references/configuration#Global&quot;&gt;network options&lt;/a&gt; if you&amp;rsquo;ve set one.</source>
          <target state="translated">Cypress는 URL을 설정 한 경우 &lt;a href=&quot;../../guides/references/configuration#Global&quot;&gt;네트워크 옵션&lt;/a&gt; 에서 구성된 &lt;code&gt;baseUrl&lt;/code&gt; 을 URL 앞에 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="2923d48f818119211f8df485af9cb43493e40b06" translate="yes" xml:space="preserve">
          <source>Cypress will resolve your command with whatever the final Cypress command yields.</source>
          <target state="translated">Cypress는 최종 Cypress 명령으로 산출 된 명령으로 명령을 해결합니다.</target>
        </trans-unit>
        <trans-unit id="0b94a3e9f4bbac7f6edd3b8cd91bd0bd7542db67" translate="yes" xml:space="preserve">
          <source>Cypress will restore the viewport in the snapshot</source>
          <target state="translated">Cypress는 스냅 샷에서 뷰포트를 복원합니다</target>
        </trans-unit>
        <trans-unit id="5bc72c81e5b0dbdb649a52327f5ae530b6783eac" translate="yes" xml:space="preserve">
          <source>Cypress will retry for up to 10 seconds to find a visible element of class &lt;code&gt;mobile-nav&lt;/code&gt; with text containing &amp;ldquo;Home&amp;rdquo;. For more examples, read the &lt;a href=&quot;introduction-to-cypress#Timeouts&quot;&gt;Timeouts&lt;/a&gt; section in the &amp;ldquo;Introduction to Cypress&amp;rdquo; guide.</source>
          <target state="translated">Cypress는 최대 10 초 동안 재 시도하여 &quot;홈&quot;이 포함 된 텍스트가 포함 된 &lt;code&gt;mobile-nav&lt;/code&gt; 클래스 요소를 찾습니다 . 더 많은 예를 보려면 &quot;Cypress 소개&quot;안내서 의 &lt;a href=&quot;introduction-to-cypress#Timeouts&quot;&gt;시간 초과&lt;/a&gt; 섹션을 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="14e1cf97edb633b6cef84f1bec344f3e26c2f25b" translate="yes" xml:space="preserve">
          <source>Cypress will then attempt to download a binary with this format: &lt;code&gt;https://www.example.com/desktop/:version?platform=p&lt;/code&gt;</source>
          <target state="translated">Cypress는 &lt;code&gt;https://www.example.com/desktop/:version?platform=p&lt;/code&gt; 형식으로 바이너리 다운로드를 시도합니다.</target>
        </trans-unit>
        <trans-unit id="ef5b8355a287fe73ff99a7efb88b3722d96d5950" translate="yes" xml:space="preserve">
          <source>Cypress will wait for the element to pass all of these checks for the duration of the &lt;a href=&quot;../references/configuration#Timeouts&quot;&gt;&lt;code&gt;defaultCommandTimeout&lt;/code&gt;&lt;/a&gt; (described in depth in the &lt;a href=&quot;introduction-to-cypress#Default-Assertions&quot;&gt;Default Assertions&lt;/a&gt; core concept guide).</source>
          <target state="translated">Cypress는 요소가 &lt;a href=&quot;../references/configuration#Timeouts&quot;&gt; &lt;code&gt;defaultCommandTimeout&lt;/code&gt; &lt;/a&gt; 기간 동안 이러한 모든 검사를 통과 할 때까지 기다립니다 ( &lt;a href=&quot;introduction-to-cypress#Default-Assertions&quot;&gt;기본 어설 션&lt;/a&gt; 핵심 개념 안내서 에 자세히 설명되어 있음 ).</target>
        </trans-unit>
        <trans-unit id="febb6785a1443da09d12c14f6b4fc04880e72315" translate="yes" xml:space="preserve">
          <source>Cypress won&amp;rsquo;t be able to connect to the &lt;a href=&quot;../dashboard/introduction&quot;&gt;Dashboard Service&lt;/a&gt; to log in or record test runs.</source>
          <target state="translated">Cypress는 &lt;a href=&quot;../dashboard/introduction&quot;&gt;대시 보드 서비스&lt;/a&gt; 에 연결하여 테스트 실행에 로그인하거나 기록 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="031f5b422de01b60e0479e8e321945c6bf4e10ea" translate="yes" xml:space="preserve">
          <source>Cypress won&amp;rsquo;t be able to load web pages besides &lt;code&gt;localhost&lt;/code&gt;.</source>
          <target state="translated">Cypress는 &lt;code&gt;localhost&lt;/code&gt; 이외의 웹 페이지를로드 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="5ecc1917b985f6084f8df6dd1f46528c5b586781" translate="yes" xml:space="preserve">
          <source>Cypress won&amp;rsquo;t be able to warn you if your &lt;a href=&quot;configuration#Global&quot;&gt;&lt;code&gt;baseUrl&lt;/code&gt;&lt;/a&gt; isn&amp;rsquo;t available.</source>
          <target state="translated">&lt;a href=&quot;configuration#Global&quot;&gt; &lt;code&gt;baseUrl&lt;/code&gt; 을&lt;/a&gt; 사용할 수없는 경우 Cypress에서 경고를 표시 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="75c2d8e90c94c986618f0cc3be1cee17c5de3951" translate="yes" xml:space="preserve">
          <source>Cypress won&amp;rsquo;t resolve your commands until all of its assertions pass.</source>
          <target state="translated">Cypress는 모든 어설 션이 통과 될 때까지 명령을 해결하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4fe3fb25bc32272d746a39562d1491cf3cb3c322" translate="yes" xml:space="preserve">
          <source>Cypress wraps all DOM queries with robust retry-and-timeout logic that better suits how real web apps work. We trade a minor change in how we find DOM elements for a major stability upgrade to all of our tests. Banishing flake for good!</source>
          <target state="translated">Cypress는 실제 웹 앱의 작동 방식에 더 적합한 강력한 재시도 및 타임 아웃 로직으로 모든 DOM 쿼리를 래핑합니다. 우리는 모든 테스트에 대한 주요 안정성 업그레이드를 위해 DOM 요소를 찾는 방법에 약간의 변화가 있습니다. 좋은 플레이크 플레이크!</target>
        </trans-unit>
        <trans-unit id="4100350f85b3c001978fb5bd18e2b8283720ba94" translate="yes" xml:space="preserve">
          <source>Cypress&amp;rsquo; internal &lt;code&gt;babel&lt;/code&gt; will no longer attempt to load your project&amp;rsquo;s &lt;code&gt;.babelrc&lt;/code&gt;. This helps avoid potential version conflicts. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/312&quot;&gt;#312&lt;/a&gt;.</source>
          <target state="translated">Cypress의 내부 &lt;code&gt;babel&lt;/code&gt; 은 더 이상 프로젝트의 &lt;code&gt;.babelrc&lt;/code&gt; 로드를 시도하지 않습니다 . 이것은 잠재적 인 버전 충돌을 피하는데 도움이됩니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/312&quot;&gt;# 312&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8f2db94bca79e7029cf2807d70ac5b3241fdde73" translate="yes" xml:space="preserve">
          <source>Cypress&amp;rsquo; parallelization strategy is file-based, so in order to utilize parallelization, your tests will need to be split across separate files.</source>
          <target state="translated">Cypress의 병렬화 전략은 파일 기반이므로 병렬화를 활용하려면 테스트를 별도의 파일로 분할해야합니다.</target>
        </trans-unit>
        <trans-unit id="abc99c30c06bda705ceec845c46d4a4e18c68fe2" translate="yes" xml:space="preserve">
          <source>Cypress&amp;rsquo;s APIs are built very differently from what you&amp;rsquo;re likely used to: but these design patterns are incredibly intentional. We&amp;rsquo;ll go into more detail later in this guide.</source>
          <target state="translated">Cypress의 API는 익숙한 것과는 매우 다르게 구축되지만 이러한 디자인 패턴은 엄청나게 의도적입니다. 이 가이드의 뒷부분에서 자세히 설명하겠습니다.</target>
        </trans-unit>
        <trans-unit id="9a2cdd4f3bf1d8436b31a761930ca523a7747615" translate="yes" xml:space="preserve">
          <source>Cypress&amp;rsquo;s recognition of websites attempting framebusting has been updated to include framebusting code wrapped within &lt;code&gt;()&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3267&quot;&gt;#3267&lt;/a&gt;</source>
          <target state="translated">프레임 버스트를 시도하는 웹 사이트에 대한 Cypress의 인식이 &lt;code&gt;()&lt;/code&gt; 안에 래핑 된 프레임 버스트 코드를 포함하도록 업데이트되었습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3267&quot;&gt;# 3267&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="66b17926d61640ed32ee971542023387239ac913" translate="yes" xml:space="preserve">
          <source>Cypress.$</source>
          <target state="translated">Cypress.$</target>
        </trans-unit>
        <trans-unit id="189b5b340dd09a196c6d1da1bb40bed28e40e664" translate="yes" xml:space="preserve">
          <source>Cypress.Blob</source>
          <target state="translated">Cypress.Blob</target>
        </trans-unit>
        <trans-unit id="c1f7c100ebfa53ec89fd0852dc1ef6a6e5194998" translate="yes" xml:space="preserve">
          <source>Cypress.Cookies</source>
          <target state="translated">Cypress.Cookies</target>
        </trans-unit>
        <trans-unit id="bc363da76edadf66791aa9b232b5d879f34a7417" translate="yes" xml:space="preserve">
          <source>Cypress.Promise</source>
          <target state="translated">Cypress.Promise</target>
        </trans-unit>
        <trans-unit id="5ce7498b0244c0b2e293007e8df6457394962f77" translate="yes" xml:space="preserve">
          <source>Cypress.Screenshot</source>
          <target state="translated">Cypress.Screenshot</target>
        </trans-unit>
        <trans-unit id="e3f31cf625c64e519992fd9a557160bf7aacd536" translate="yes" xml:space="preserve">
          <source>Cypress.SelectorPlayground</source>
          <target state="translated">Cypress.SelectorPlayground</target>
        </trans-unit>
        <trans-unit id="34ae4903acad6585ae7e38b834b9236b5a51c37a" translate="yes" xml:space="preserve">
          <source>Cypress.Server</source>
          <target state="translated">Cypress.Server</target>
        </trans-unit>
        <trans-unit id="54d6f336939dfac4936db7a675545d1c454be51c" translate="yes" xml:space="preserve">
          <source>Cypress._</source>
          <target state="translated">Cypress._</target>
        </trans-unit>
        <trans-unit id="38aee7ce60c3cf0bfdbe493333480f2fc07f7dec" translate="yes" xml:space="preserve">
          <source>Cypress.addParentCommand() / Cypress.addDualCommand() / Cypress.addChildCommand() has been removed and replaced by Cypress.Commands.add()</source>
          <target state="translated">Cypress.addParentCommand () / Cypress.addDualCommand () / Cypress.addChildCommand ()가 제거되고 Cypress.Commands.add ()로 대체되었습니다.</target>
        </trans-unit>
        <trans-unit id="8962d721dd9c7ac73251a37f00707f0c4fb16fb3" translate="yes" xml:space="preserve">
          <source>Cypress.arch</source>
          <target state="translated">Cypress.arch</target>
        </trans-unit>
        <trans-unit id="3be6d8c117d53974fe7883c45665db273d8130af" translate="yes" xml:space="preserve">
          <source>Cypress.browser</source>
          <target state="translated">Cypress.browser</target>
        </trans-unit>
        <trans-unit id="ae2b6d33ccd03711ee320fd83db92c1e20b462e4" translate="yes" xml:space="preserve">
          <source>Cypress.config</source>
          <target state="translated">Cypress.config</target>
        </trans-unit>
        <trans-unit id="718c9831c14fdf0f554ae6c92dfd790738648c97" translate="yes" xml:space="preserve">
          <source>Cypress.dom</source>
          <target state="translated">Cypress.dom</target>
        </trans-unit>
        <trans-unit id="e78d83f61d20ce8db3d99c52f7373d855d7162e6" translate="yes" xml:space="preserve">
          <source>Cypress.env</source>
          <target state="translated">Cypress.env</target>
        </trans-unit>
        <trans-unit id="3f3a3836fb4094ee807d24662de168188d477d60" translate="yes" xml:space="preserve">
          <source>Cypress.isCy</source>
          <target state="translated">Cypress.isCy</target>
        </trans-unit>
        <trans-unit id="872e4ebcf7f8506b760930988f46ac8a5cfc904e" translate="yes" xml:space="preserve">
          <source>Cypress.log</source>
          <target state="translated">Cypress.log</target>
        </trans-unit>
        <trans-unit id="f9ed79a62532751aaf5257c1c6e3e389aa049fc8" translate="yes" xml:space="preserve">
          <source>Cypress.log()</source>
          <target state="translated">Cypress.log()</target>
        </trans-unit>
        <trans-unit id="13cbbc294769af7e07d4f4e358bab65f54aece6d" translate="yes" xml:space="preserve">
          <source>Cypress.minimatch</source>
          <target state="translated">Cypress.minimatch</target>
        </trans-unit>
        <trans-unit id="1378324e731b82bcc517e23f5825080965e600a0" translate="yes" xml:space="preserve">
          <source>Cypress.moment</source>
          <target state="translated">Cypress.moment</target>
        </trans-unit>
        <trans-unit id="efd21062160ac9c7215a8d85d8e0bf925f907e97" translate="yes" xml:space="preserve">
          <source>Cypress.platform</source>
          <target state="translated">Cypress.platform</target>
        </trans-unit>
        <trans-unit id="ea4b110b0b641df79aff5ef4583b701477ded5a5" translate="yes" xml:space="preserve">
          <source>Cypress.spec</source>
          <target state="translated">Cypress.spec</target>
        </trans-unit>
        <trans-unit id="8b78be8c41500c1cc7b574e782c821c439f2705b" translate="yes" xml:space="preserve">
          <source>Cypress.version</source>
          <target state="translated">Cypress.version</target>
        </trans-unit>
        <trans-unit id="9dbaf1b497f642fc5077a00743bd4c592254a2cf" translate="yes" xml:space="preserve">
          <source>CypressError: Timed out retrying: Expected to find element: &amp;lsquo;&amp;hellip;&amp;rsquo;, but never found it. Queried from element: &amp;lt;&amp;hellip;&amp;gt;</source>
          <target state="translated">CypressError : 재시도 시간 초과 : 요소 : '&amp;hellip;'을 (를) 찾을 것으로 예상했지만 찾지 못했습니다. 요소에서 쿼리 : &amp;lt;&amp;hellip;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="806b2ff53cd2bfa7527e0fceb87c041ecaccb1f3" translate="yes" xml:space="preserve">
          <source>DOM Elements</source>
          <target state="translated">DOM 요소</target>
        </trans-unit>
        <trans-unit id="46a30029edb9f134295b2bdef3e55f483f2e18a8" translate="yes" xml:space="preserve">
          <source>DOM commands which can retry now correctly support &lt;code&gt;{timeout: num}&lt;/code&gt; options which will raise the timeout beyond the standard &lt;code&gt;commandTimeout&lt;/code&gt; rom &lt;code&gt;cypress.json&lt;/code&gt;.</source>
          <target state="translated">재 시도 할 수있는 DOM 명령은 이제 &lt;code&gt;{timeout: num}&lt;/code&gt; 옵션을 지원 하여 표준 &lt;code&gt;commandTimeout&lt;/code&gt; rom &lt;code&gt;cypress.json&lt;/code&gt; 보다 시간 초과를 증가시킵니다 .</target>
        </trans-unit>
        <trans-unit id="0550ac43b754afc13499c39a83489992e4a0f17d" translate="yes" xml:space="preserve">
          <source>DOM element</source>
          <target state="translated">DOM 요소</target>
        </trans-unit>
        <trans-unit id="f873a1aac119c9afd1611e5c7de8d7ea8b257520" translate="yes" xml:space="preserve">
          <source>DOM state</source>
          <target state="translated">DOM 상태</target>
        </trans-unit>
        <trans-unit id="e897a6e6446020dfb7ef098df202bcc255e30e9c" translate="yes" xml:space="preserve">
          <source>Dangling state is your friend:</source>
          <target state="translated">매달려있는 상태는 당신의 친구입니다 :</target>
        </trans-unit>
        <trans-unit id="d87f47b47e4d5794d53fe0734c49417bd046cde0" translate="yes" xml:space="preserve">
          <source>Dashboard</source>
          <target state="translated">Dashboard</target>
        </trans-unit>
        <trans-unit id="d76039c62c0c0760db5d9e7f5e49044f82b0485b" translate="yes" xml:space="preserve">
          <source>Dashboard Service</source>
          <target state="translated">대시 보드 서비스</target>
        </trans-unit>
        <trans-unit id="170b64341d044d8b026478c6319fd302d29b2fdc" translate="yes" xml:space="preserve">
          <source>Dashboard redesign</source>
          <target state="translated">대시 보드 재 설계</target>
        </trans-unit>
        <trans-unit id="160d689ae355cbd067de0a3700069f34acfbb9f2" translate="yes" xml:space="preserve">
          <source>Date Inputs</source>
          <target state="translated">날짜 입력</target>
        </trans-unit>
        <trans-unit id="bd604d99e75e45d38bc7ac8fc714cde0097d901f" translate="yes" xml:space="preserve">
          <source>Debug</source>
          <target state="translated">Debug</target>
        </trans-unit>
        <trans-unit id="9a0e7dc97fa6276fd01e10ae6394c1eb8228de5e" translate="yes" xml:space="preserve">
          <source>Debug Tests</source>
          <target state="translated">디버그 테스트</target>
        </trans-unit>
        <trans-unit id="caff9ed2c3b1a608de7ce91dc511ac835a257f72" translate="yes" xml:space="preserve">
          <source>Debug just like you always do</source>
          <target state="translated">항상 그렇듯이 디버그</target>
        </trans-unit>
        <trans-unit id="8df5e0f04e3242a95995ef4f5f6b88cd9f8c115a" translate="yes" xml:space="preserve">
          <source>Debug logs in the browser</source>
          <target state="translated">브라우저의 디버그 로그</target>
        </trans-unit>
        <trans-unit id="d36ec7235f19d642416fab523affd33299a76f5b" translate="yes" xml:space="preserve">
          <source>Debug the moment a test fails</source>
          <target state="translated">테스트가 실패한 순간을 디버그</target>
        </trans-unit>
        <trans-unit id="2582a032b66fb5fa3c7ff1b5cdce14c54e2e45d1" translate="yes" xml:space="preserve">
          <source>Debuggability</source>
          <target state="translated">Debuggability</target>
        </trans-unit>
        <trans-unit id="895b27c88016513d278a0ce3dc0663fae3829d58" translate="yes" xml:space="preserve">
          <source>Debugging</source>
          <target state="translated">Debugging</target>
        </trans-unit>
        <trans-unit id="18d225a83f7cd5b7c354d6876e5542ec3fee2ac2" translate="yes" xml:space="preserve">
          <source>Debugging commands</source>
          <target state="translated">디버깅 명령</target>
        </trans-unit>
        <trans-unit id="359646351172857a2209695ce7e529c3651364e7" translate="yes" xml:space="preserve">
          <source>Debugging tests</source>
          <target state="translated">디버깅 테스트</target>
        </trans-unit>
        <trans-unit id="fdb2fb41843843a2f3f6412acbde67da5de89b98" translate="yes" xml:space="preserve">
          <source>Debugging will be turned on until you explicitly turn it off.</source>
          <target state="translated">디버깅은 명시 적으로 끌 때까지 켜집니다.</target>
        </trans-unit>
        <trans-unit id="ccba18044ef6b943060a02194e24763943b748cc" translate="yes" xml:space="preserve">
          <source>Dedicated file just for environment variables.</source>
          <target state="translated">환경 변수 전용 파일.</target>
        </trans-unit>
        <trans-unit id="808d7dca8a74d84af27a2d6602c3d786de45fe1e" translate="yes" xml:space="preserve">
          <source>Default</source>
          <target state="translated">Default</target>
        </trans-unit>
        <trans-unit id="002755c76d6ad9dbc7b8957cb1d21b29856bd9b1" translate="yes" xml:space="preserve">
          <source>Default Assertions</source>
          <target state="translated">기본 어설 션</target>
        </trans-unit>
        <trans-unit id="d2b8594d4d7d046a39912315ba4f5c50bb8654e6" translate="yes" xml:space="preserve">
          <source>Default Encoding</source>
          <target state="translated">기본 인코딩</target>
        </trans-unit>
        <trans-unit id="54e853e380fbb256af90f1b6701ddb337a923884" translate="yes" xml:space="preserve">
          <source>Default Values</source>
          <target state="translated">기본값</target>
        </trans-unit>
        <trans-unit id="816c6ed867c46778e2c5120dd4115f09bf0fcfa6" translate="yes" xml:space="preserve">
          <source>Default file existence assertion</source>
          <target state="translated">기본 파일 존재 선언</target>
        </trans-unit>
        <trans-unit id="f62121ead15cd30f91da94221ba3e0061cb6d766" translate="yes" xml:space="preserve">
          <source>Default height in pixels for the application under tests&amp;rsquo; viewport (Override with &lt;a href=&quot;../../api/commands/viewport&quot;&gt;&lt;code&gt;cy.viewport()&lt;/code&gt;&lt;/a&gt; command)</source>
          <target state="translated">테스트 뷰포트에서 응용 프로그램의 기본 높이 (픽셀 &lt;a href=&quot;../../api/commands/viewport&quot;&gt; &lt;code&gt;cy.viewport()&lt;/code&gt; &lt;/a&gt; 명령으로 재정의 )</target>
        </trans-unit>
        <trans-unit id="20d3505c9e34e3cf3574ca112bb4b9d4cabccb33" translate="yes" xml:space="preserve">
          <source>Default sizing</source>
          <target state="translated">기본 크기</target>
        </trans-unit>
        <trans-unit id="6c152d7b3d697c79123206cbb3b89719b8bc6948" translate="yes" xml:space="preserve">
          <source>Default width in pixels for the application under tests&amp;rsquo; viewport. (Override with &lt;a href=&quot;../../api/commands/viewport&quot;&gt;&lt;code&gt;cy.viewport()&lt;/code&gt;&lt;/a&gt; command)</source>
          <target state="translated">테스트 뷰포트에서 응용 프로그램의 기본 너비 (픽셀)입니다. ( &lt;a href=&quot;../../api/commands/viewport&quot;&gt; &lt;code&gt;cy.viewport()&lt;/code&gt; &lt;/a&gt; 명령으로 재정의 )</target>
        </trans-unit>
        <trans-unit id="428819bf9e83cebda50efafb08cd2534c1583949" translate="yes" xml:space="preserve">
          <source>Defaults</source>
          <target state="translated">Defaults</target>
        </trans-unit>
        <trans-unit id="bf1be2b7ad07bae2fe92475d10173eb638774def" translate="yes" xml:space="preserve">
          <source>Definition</source>
          <target state="translated">Definition</target>
        </trans-unit>
        <trans-unit id="0f6d2dd789e22cb155c7072913772227f42e5717" translate="yes" xml:space="preserve">
          <source>Delay after each keypress</source>
          <target state="translated">각 키를 누른 후 지연</target>
        </trans-unit>
        <trans-unit id="1494a9bc47eade4e713274d7308e8e61ac3da965" translate="yes" xml:space="preserve">
          <source>Delay for stubbed responses (in ms)</source>
          <target state="translated">스텁 된 응답 지연 (ms)</target>
        </trans-unit>
        <trans-unit id="6efc7502f2a86ff722fdd0112fb1115d4b074b07" translate="yes" xml:space="preserve">
          <source>Delaying a response</source>
          <target state="translated">응답 지연</target>
        </trans-unit>
        <trans-unit id="33be56c36fa5e38e5e688193ca7f6f702b826f70" translate="yes" xml:space="preserve">
          <source>Delete Org</source>
          <target state="translated">조직 삭제</target>
        </trans-unit>
        <trans-unit id="420e6c8542560092e7fc39bbeb23e047d89d5246" translate="yes" xml:space="preserve">
          <source>Delete Project</source>
          <target state="translated">프로젝트 삭제</target>
        </trans-unit>
        <trans-unit id="3b1305de44f5d95c0a738507026058e37778d4e9" translate="yes" xml:space="preserve">
          <source>Delete everything in the &lt;code&gt;cy&lt;/code&gt; folder</source>
          <target state="translated">&lt;code&gt;cy&lt;/code&gt; 폴더의 모든 것을 삭제하십시오</target>
        </trans-unit>
        <trans-unit id="2700d851334adc622290d4f549953756d2c513dc" translate="yes" xml:space="preserve">
          <source>Delete or rename any policy keys found. &lt;em&gt;Make sure to back up your registry before making any changes.&lt;/em&gt;</source>
          <target state="translated">찾은 정책 키를 삭제하거나 이름을 바꿉니다. &lt;em&gt;변경하기 전에 레지스트리를 백업하십시오.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c9746bd7b8996d19acab4816d5dec7e68b572f1a" translate="yes" xml:space="preserve">
          <source>Delete organization</source>
          <target state="translated">조직 삭제</target>
        </trans-unit>
        <trans-unit id="af1456f256eb207ff5bde5300956b6698a8691f3" translate="yes" xml:space="preserve">
          <source>Delete project</source>
          <target state="translated">프로젝트 삭제</target>
        </trans-unit>
        <trans-unit id="0af4affe8515cf0856411712afe2f0527747a5de" translate="yes" xml:space="preserve">
          <source>Delete projects</source>
          <target state="translated">프로젝트 삭제</target>
        </trans-unit>
        <trans-unit id="feb33acc4731ff34926d72c31d06392b91d753e7" translate="yes" xml:space="preserve">
          <source>Delete record key</source>
          <target state="translated">레코드 키 삭제</target>
        </trans-unit>
        <trans-unit id="fcbc0dabff7727d2a87aae3bdba3f6bf52d70cc0" translate="yes" xml:space="preserve">
          <source>Deletes character to the left of the cursor</source>
          <target state="translated">커서 왼쪽의 문자를 삭제합니다</target>
        </trans-unit>
        <trans-unit id="c34fdc5b502ecda0c1ed651ed848ae26646b39d6" translate="yes" xml:space="preserve">
          <source>Deletes character to the right of the cursor</source>
          <target state="translated">커서 오른쪽의 문자를 삭제합니다</target>
        </trans-unit>
        <trans-unit id="0562f32dc56f5c702810cbe010068ddd38dbd69a" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
          <target state="translated">Dependencies</target>
        </trans-unit>
        <trans-unit id="bb7f45f4c64879fbbc128a63557b3980aa0c08b7" translate="yes" xml:space="preserve">
          <source>Depending on how your application is built - it&amp;rsquo;s likely that your web application is going to be affected and controlled by the server.</source>
          <target state="translated">응용 프로그램의 구축 방법에 따라 웹 응용 프로그램이 서버에 의해 영향을 받고 제어 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="62b3e653f740f4c749bb60f9032135226fe2bca4" translate="yes" xml:space="preserve">
          <source>Depending on which CI provider you use, you may need a config file. You&amp;rsquo;ll want to refer to your CI provider&amp;rsquo;s documentation to know where to add the commands to install and run Cypress. For more configuration examples check out our &lt;a href=&quot;#Examples&quot;&gt;examples&lt;/a&gt;.</source>
          <target state="translated">사용하는 CI 공급자에 따라 구성 파일이 필요할 수 있습니다. Cypress를 설치하고 실행하기위한 명령을 추가 할 위치를 알려면 CI 제공 업체의 설명서를 참조하십시오. 더 구성 예를 들어 우리의 체크 아웃 &lt;a href=&quot;#Examples&quot;&gt;예&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2c2d93153fa250fddf0385d9f74ce9c2c826d8d1" translate="yes" xml:space="preserve">
          <source>Depends</source>
          <target state="translated">Depends</target>
        </trans-unit>
        <trans-unit id="50abff28ab37908b3cf44d9dd0633b6d4b22b266" translate="yes" xml:space="preserve">
          <source>Deprecated &lt;code&gt;Cypress.command&lt;/code&gt;, instead use &lt;code&gt;Cypress.Log.command&lt;/code&gt; to output a Command Log. Updated scaffolding on new projects to reflect this change.</source>
          <target state="translated">더 이상 사용되지 않는 &lt;code&gt;Cypress.command&lt;/code&gt; 대신 &lt;code&gt;Cypress.Log.command&lt;/code&gt; 를 사용 하여 명령 로그를 출력하십시오. 이 변경 사항을 반영하여 새 프로젝트에서 스캐 폴딩을 업데이트했습니다.</target>
        </trans-unit>
        <trans-unit id="ba54f6b3c94f4e85ea94aed4682b686d83030e3f" translate="yes" xml:space="preserve">
          <source>Deprecated &lt;code&gt;failOnStatus&lt;/code&gt; property for &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; and renamed to &lt;code&gt;failOnStatusCode&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/323&quot;&gt;#323&lt;/a&gt;.</source>
          <target state="translated">추천되고 있지 않습니다 &lt;code&gt;failOnStatus&lt;/code&gt; 에 대한 특성 &lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt; 과로 변경 &lt;code&gt;failOnStatusCode&lt;/code&gt; . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/323&quot;&gt;# 323&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="66770177d31590d18f83f5f18a84734f24f8f4e6" translate="yes" xml:space="preserve">
          <source>Deprecated all &lt;em&gt;Command Options&lt;/em&gt;. You will see a very nice and simple error message explaining how to convert these to assertions.</source>
          <target state="translated">모든 &lt;em&gt;명령 옵션은 더 이상&lt;/em&gt; 사용되지 않습니다 . 이를 어설 션으로 변환하는 방법을 설명하는 매우 훌륭하고 간단한 오류 메시지가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="cf0084835e26a00ac74a24b9e2202ccebf7aef5f" translate="yes" xml:space="preserve">
          <source>Deprecated the undocumented &lt;code&gt;cy.agents&lt;/code&gt; function, but it will continue to work and will be officially removed later.</source>
          <target state="translated">문서화되지 않은 &lt;code&gt;cy.agents&lt;/code&gt; 함수 는 더 이상 사용되지 않지만 계속 작동하며 나중에 공식적으로 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="4455c33618f7e8493a6b401536a49ec647474555" translate="yes" xml:space="preserve">
          <source>Desktop App debug logs no longer sort in the wrong direction.</source>
          <target state="translated">데스크톱 앱 디버그 로그가 더 이상 잘못된 방향으로 정렬되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="988933533a2710eb7a91fcde76623e318e7fbdb7" translate="yes" xml:space="preserve">
          <source>Desktop windows that are transparent no longer lose their box shadow.</source>
          <target state="translated">투명한 데스크탑 창은 더 이상 상자 그림자를 잃지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c524231967ba63ed27a4047efd69edcab3903bde" translate="yes" xml:space="preserve">
          <source>Despite the dozens of assertions Cypress makes available to you, sometimes the best test may make no assertions at all! How can this be? Aren&amp;rsquo;t assertions a basic part of testing?</source>
          <target state="translated">Cypress에서 제공하는 수십 개의 주장에도 불구하고 때로는 최고의 테스트로 주장 할 수없는 경우도 있습니다! 어떻게 이럴 수있어? 테스트의 기본 부분이 아닌가?</target>
        </trans-unit>
        <trans-unit id="43fd0711ccfe2275d37466226b0233e39e3bbc7f" translate="yes" xml:space="preserve">
          <source>Destination of Cypress binary that's downloaded and installed</source>
          <target state="translated">다운로드하여 설치 한 Cypress 바이너리 대상</target>
        </trans-unit>
        <trans-unit id="e07694df1980cebba49bc3ba950d5e71cf4c51ee" translate="yes" xml:space="preserve">
          <source>Detailed Logs</source>
          <target state="translated">자세한 로그</target>
        </trans-unit>
        <trans-unit id="dc3decbb93847518f1a049dcf49d0d7c6560bcc6" translate="yes" xml:space="preserve">
          <source>Details</source>
          <target state="translated">Details</target>
        </trans-unit>
        <trans-unit id="fb83fe74a2f1842353ec1873c1964e310a83b202" translate="yes" xml:space="preserve">
          <source>Details of each run are displayed including:</source>
          <target state="translated">다음을 포함하여 각 실행의 세부 사항이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="88d5d989139784b14dd3b3fa8b5147b2b7b5f797" translate="yes" xml:space="preserve">
          <source>Detection of installed browsers has been improved. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/511&quot;&gt;#511&lt;/a&gt;.</source>
          <target state="translated">설치된 브라우저 감지 기능이 향상되었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/511&quot;&gt;# 511&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="db851310f56d8f0ff1714344c6eb7c7fd6fb1d1b" translate="yes" xml:space="preserve">
          <source>Determine a unique selector for an element.</source>
          <target state="translated">요소의 고유 한 선택자를 결정하십시오.</target>
        </trans-unit>
        <trans-unit id="7bb199653d3610c7decb0d490dd2981c63993abc" translate="yes" xml:space="preserve">
          <source>Determines the order of preference for which selector is chosen for the element.</source>
          <target state="translated">요소에 대해 선택기가 선택된 우선 순위를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="c659a411024775bc5400ece139ed7c5058937b1d" translate="yes" xml:space="preserve">
          <source>Development Tools</source>
          <target state="translated">개발 도구</target>
        </trans-unit>
        <trans-unit id="880a74266b48446f72c4dd1688a1a3b42f91fdb9" translate="yes" xml:space="preserve">
          <source>Did you know that you can control how your custom commands appear in the Command Log? Read more about &lt;a href=&quot;#Command-Logging&quot;&gt;Command Logging&lt;/a&gt;.</source>
          <target state="translated">사용자 정의 명령이 명령 로그에 표시되는 방식을 제어 할 수 있다는 것을 알고 있습니까? &lt;a href=&quot;#Command-Logging&quot;&gt;명령 로깅&lt;/a&gt; 에 대해 자세히 알아보십시오 .</target>
        </trans-unit>
        <trans-unit id="29856a31b3d2a72b0f83ec3a5568909de02804cb" translate="yes" xml:space="preserve">
          <source>Did you know that you can use &lt;a href=&quot;#Multiple-Reporters&quot;&gt;multiple reporters&lt;/a&gt; with Mocha?</source>
          <target state="translated">모카와 함께 &lt;a href=&quot;#Multiple-Reporters&quot;&gt;여러 기자&lt;/a&gt; 를 사용할 수 있다는 것을 알고 있습니까?</target>
        </trans-unit>
        <trans-unit id="5103b3848b34841b08aca075bb9ffb66a229c5d2" translate="yes" xml:space="preserve">
          <source>Difference between cy.spy() and cy.stub()</source>
          <target state="translated">cy.spy ()와 cy.stub ()의 차이점</target>
        </trans-unit>
        <trans-unit id="af858e1241391fd569b50d644bb00507f74f4034" translate="yes" xml:space="preserve">
          <source>Differences</source>
          <target state="translated">Differences</target>
        </trans-unit>
        <trans-unit id="9f5371feae5752de4cf49862d8b24d4abe4ebb1c" translate="yes" xml:space="preserve">
          <source>Direct download</source>
          <target state="translated">직접 다운로드</target>
        </trans-unit>
        <trans-unit id="fd8e45bac7d354790ec0a82d8a61341bf8acd055" translate="yes" xml:space="preserve">
          <source>Direction</source>
          <target state="translated">Direction</target>
        </trans-unit>
        <trans-unit id="f36e1d9fb25e334cc42e35e16df46e7fa41007dc" translate="yes" xml:space="preserve">
          <source>Directories within specs whose names contain &lt;code&gt;.&lt;/code&gt; are now correctly read as directories instead of spec files within the Test Runner. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2423&quot;&gt;#2423&lt;/a&gt;.</source>
          <target state="translated">이름이 포함 된 사양 내의 디렉토리 &lt;code&gt;.&lt;/code&gt; 이제 테스트 러너 내에서 스펙 파일 대신 디렉토리로 올바르게 읽 힙니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2423&quot;&gt;# 2423&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="398dcecfd4c36348d8d1fb304911cd0747f9e0d4" translate="yes" xml:space="preserve">
          <source>Disability</source>
          <target state="translated">Disability</target>
        </trans-unit>
        <trans-unit id="ed8e3cd3ce02e4410e6e12ca08ee83ae07f21784" translate="yes" xml:space="preserve">
          <source>Disable PR comments</source>
          <target state="translated">PR 댓글 사용 안함</target>
        </trans-unit>
        <trans-unit id="1146eac3b93e81381a07b19dcc792dd0463a1126" translate="yes" xml:space="preserve">
          <source>Disable logging to Command Log</source>
          <target state="translated">명령 로그에 로깅 비활성화</target>
        </trans-unit>
        <trans-unit id="90f205a7a44758815d3eeeb446e126d244dd81bc" translate="yes" xml:space="preserve">
          <source>Disable screenshots on run failures</source>
          <target state="translated">실행 실패시 스크린 샷 비활성화</target>
        </trans-unit>
        <trans-unit id="5c8870696e9603555f5da0a578f2efe8889465bb" translate="yes" xml:space="preserve">
          <source>Disable status checks</source>
          <target state="translated">상태 확인 비활성화</target>
        </trans-unit>
        <trans-unit id="fd1c40c8e15a5906c64a3c1c5ea682eef54e14c7" translate="yes" xml:space="preserve">
          <source>Disabled Barriers</source>
          <target state="translated">장애인 장벽</target>
        </trans-unit>
        <trans-unit id="8101160ef461e1039c24259bf2164be36683138c" translate="yes" xml:space="preserve">
          <source>Disables &amp;lsquo;Autofill forms and passwords&amp;rsquo;.</source>
          <target state="translated">'양식 및 비밀번호 자동 완성'을 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="9b6a36172f19272186e514e359c9b8818b4e2b3c" translate="yes" xml:space="preserve">
          <source>Disables &amp;lsquo;Saving passwords&amp;rsquo;.</source>
          <target state="translated">'비밀번호 저장'을 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="742385a8d2de3fd9fd56746a5254ec1868941389" translate="yes" xml:space="preserve">
          <source>Disables asking to become your primary browser.</source>
          <target state="translated">기본 브라우저가되도록 요청하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8820d327186eb9d36380d618891e1b140c1206c6" translate="yes" xml:space="preserve">
          <source>Disables background and renderer throttling.</source>
          <target state="translated">백그라운드 및 렌더러 조절을 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="fdd97241499586fd718d26330dec9f95b9a31c0e" translate="yes" xml:space="preserve">
          <source>Disables background network traffic.</source>
          <target state="translated">백그라운드 네트워크 트래픽을 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="e78e3acd1f45b16a6377ece7fb25d3353f6d2137" translate="yes" xml:space="preserve">
          <source>Disables device discovery notifications.</source>
          <target state="translated">장치 검색 알림을 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="bc575ad94c2c5e877021630cd9e2523adb5baee0" translate="yes" xml:space="preserve">
          <source>Disables language translations.</source>
          <target state="translated">언어 번역을 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="b4a57f31533828350e954cee620711fac5c8534c" translate="yes" xml:space="preserve">
          <source>Disables prompts requesting permission to use devices like cameras or mics</source>
          <target state="translated">카메라 또는 마이크와 같은 장치를 사용할 권한을 요청하는 메시지를 표시하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="42c5847cb77a853d027e61065fb060f5e06690de" translate="yes" xml:space="preserve">
          <source>Disables restoring sessions.</source>
          <target state="translated">세션 복원을 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="89814cefec4768db1bc31f96b05c4c237b94cc5d" translate="yes" xml:space="preserve">
          <source>Disables user gesture requirements for autoplaying videos.</source>
          <target state="translated">비디오 자동 재생에 대한 사용자 제스처 요구 사항을 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="d5e790b8e1c07601668944e5511a4907e8441ef9" translate="yes" xml:space="preserve">
          <source>Disabling Highlights</source>
          <target state="translated">하이라이트 비활성화</target>
        </trans-unit>
        <trans-unit id="cc630477b97f37b5346d341b023abd94ebc8ee13" translate="yes" xml:space="preserve">
          <source>Disabling Web Security</source>
          <target state="translated">웹 보안 비활성화</target>
        </trans-unit>
        <trans-unit id="331f9316062110e44524709e54652398a146845a" translate="yes" xml:space="preserve">
          <source>Display an empty message when there is no commit information on recorded runs. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1809&quot;&gt;#1809&lt;/a&gt;.</source>
          <target state="translated">기록 된 실행에 대한 커밋 정보가 없으면 빈 메시지를 표시합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1809&quot;&gt;# 1809&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="02b9e351e3ff0d8e4c1c347bf7595c58700ffbfb" translate="yes" xml:space="preserve">
          <source>Display insecure content</source>
          <target state="translated">안전하지 않은 콘텐츠 표시</target>
        </trans-unit>
        <trans-unit id="840ffbdb7da30d2d58783c09ae67907da14db616" translate="yes" xml:space="preserve">
          <source>Display the Electron browser instead of running headlessly</source>
          <target state="translated">헤드리스없이 실행되는 Electron 브라우저 표시</target>
        </trans-unit>
        <trans-unit id="cbd09492de4e095dd361539936a9df005a6751c3" translate="yes" xml:space="preserve">
          <source>Displaying a credit card form from Stripe or Braintree.</source>
          <target state="translated">Stripe 또는 Braintree에서 신용 카드 양식을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="48a624a965703205f1185b4de304082897da096c" translate="yes" xml:space="preserve">
          <source>Displaying an embedded login form from Auth0.</source>
          <target state="translated">Auth0에서 임베드 된 로그인 양식을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="a111098f149be53fc23d11071083e7908b8b4f8c" translate="yes" xml:space="preserve">
          <source>Displays the command in the &lt;a href=&quot;../../guides/core-concepts/test-runner#Command-Log&quot;&gt;Command log&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../guides/core-concepts/test-runner#Command-Log&quot;&gt;명령 로그에&lt;/a&gt; 명령을 표시합니다</target>
        </trans-unit>
        <trans-unit id="15734e80c1b9ba09cae5e65347e5fe8e74b0dd80" translate="yes" xml:space="preserve">
          <source>Do &lt;strong&gt;NOT&lt;/strong&gt; include protocol: &lt;code&gt;http://&lt;/code&gt; or &lt;code&gt;https://&lt;/code&gt;</source>
          <target state="translated">프로토콜을 포함 하지 &lt;strong&gt;마십시오&lt;/strong&gt; : &lt;code&gt;http://&lt;/code&gt; 또는 &lt;code&gt;https://&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6f15f0f7d9eda009d36ae894bba131f289eb8ee8" translate="yes" xml:space="preserve">
          <source>Do It Yourself</source>
          <target state="translated">너 스스로해라</target>
        </trans-unit>
        <trans-unit id="1311dea644b9dfc4fba9ad13c38b9e662d415f4a" translate="yes" xml:space="preserve">
          <source>Do a shift + click</source>
          <target state="translated">교대 + 클릭</target>
        </trans-unit>
        <trans-unit id="d2da93e42ef992541100a9e65c6ecf631b9d82d9" translate="yes" xml:space="preserve">
          <source>Do not forget that &lt;strong&gt;Cypress commands are async&lt;/strong&gt;!</source>
          <target state="translated">&lt;strong&gt;Cypress 명령이 비동기&lt;/strong&gt; 임을 잊지 마십시오 !</target>
        </trans-unit>
        <trans-unit id="8b10ee7030fa005a21358e27e3bfe05066e85aa6" translate="yes" xml:space="preserve">
          <source>Do not use &lt;strong&gt;your UI&lt;/strong&gt; to login before each test.</source>
          <target state="translated">각 테스트 전에 &lt;strong&gt;UI&lt;/strong&gt; 를 사용 &lt;strong&gt;하여&lt;/strong&gt; 로그인 하지 마십시오 .</target>
        </trans-unit>
        <trans-unit id="bf2b432b6b037e09ea6c21f51f82ecc54cd52fc6" translate="yes" xml:space="preserve">
          <source>Do you see the difference? We were able to login without needing to actually use our UI. This saves an enormous amount of time visiting the login page, filling out the username, password, and waiting for the server to redirect us &lt;em&gt;before every test&lt;/em&gt;.</source>
          <target state="translated">차이점이 보입니까? 실제로 UI를 사용할 필요없이 로그인 할 수있었습니다. 이렇게하면 로그인 페이지를 방문하여 사용자 이름, 비밀번호를 채우고 &lt;em&gt;매 테스트 전에&lt;/em&gt; 서버가 우리를 리디렉션 할 때까지 기다리는 시간이 크게 줄어 듭니다 .</target>
        </trans-unit>
        <trans-unit id="f10bd5b89bb2c4162f229df774ba62b09745264e" translate="yes" xml:space="preserve">
          <source>Do you see the problem here? This test is non-deterministic. The &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; will sometimes have the class &lt;code&gt;active&lt;/code&gt; and sometimes not. In &lt;strong&gt;most&lt;/strong&gt; cases, you cannot rely on the state of the DOM to determine what you should conditionally do.</source>
          <target state="translated">여기서 문제가 보입니까? 이 테스트는 비 결정적입니다. &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; 때때로 클래스가됩니다 &lt;code&gt;active&lt;/code&gt; 때로는 없습니다. 에서는 &lt;strong&gt;대부분의&lt;/strong&gt; 경우, 당신은 당신이 조건부 무엇을해야하는지 결정하기 위해 DOM의 상태에 의존 할 수 없다.</target>
        </trans-unit>
        <trans-unit id="9d2998beff4e0d0f955bfa075992fe40291e784c" translate="yes" xml:space="preserve">
          <source>Do you see what happened?</source>
          <target state="translated">무슨 일이 있었는지 알아?</target>
        </trans-unit>
        <trans-unit id="9f1141549f7c054b71516937d3febc77d991d59b" translate="yes" xml:space="preserve">
          <source>Docker</source>
          <target state="translated">Docker</target>
        </trans-unit>
        <trans-unit id="53048861edcc441aef057cfdcf1945349c9c8194" translate="yes" xml:space="preserve">
          <source>Docker images &amp;amp; CI examples</source>
          <target state="translated">도커 이미지 및 CI 예제</target>
        </trans-unit>
        <trans-unit id="3ab45e6d7829b9766d6ff47e9b891e5f334be013" translate="yes" xml:space="preserve">
          <source>Docker images providing all the dependencies to run Cypress in CI including browsers.</source>
          <target state="translated">브라우저를 포함하여 CI에서 Cypress를 실행하기위한 모든 종속성을 제공하는 Docker 이미지</target>
        </trans-unit>
        <trans-unit id="010995167a9dd41a6de0709b079946d48321e082" translate="yes" xml:space="preserve">
          <source>Docs have been updated for &lt;a href=&quot;../../api/commands/wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/server&quot;&gt;&lt;code&gt;cy.server()&lt;/code&gt;&lt;/a&gt; to reflect these changes.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/wait&quot;&gt; &lt;code&gt;cy.wait()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../api/commands/route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../api/commands/server&quot;&gt; &lt;code&gt;cy.server()&lt;/code&gt; &lt;/a&gt; 에 대한 문서가 이러한 변경 사항을 반영 하도록 업데이트되었습니다 .</target>
        </trans-unit>
        <trans-unit id="005a47d2fb03a50731ae30b6c4044b3033fcb234" translate="yes" xml:space="preserve">
          <source>Document how to accept or reject project transfers &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/issues/1474&quot;&gt;#1474&lt;/a&gt;</source>
          <target state="translated">프로젝트 이전 승인 또는 거부 방법 문서 &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/issues/1474&quot;&gt;# 1474&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">Documentation</target>
        </trans-unit>
        <trans-unit id="fc0c182915c26250a85f0f9ed6247e647f87d451" translate="yes" xml:space="preserve">
          <source>Documentation Changes:</source>
          <target state="translated">설명서 변경 사항 :</target>
        </trans-unit>
        <trans-unit id="759ad5947a51fcfec123db9f79d9f3a1619fb67a" translate="yes" xml:space="preserve">
          <source>Documented new &lt;code&gt;CYPRESS_DOWNLOAD_MIRROR&lt;/code&gt; flag and rewrote advanced install instructions to be clearer in &lt;a href=&quot;../getting-started/installing-cypress#Advanced&quot;&gt;Installing Cypress doc&lt;/a&gt;.</source>
          <target state="translated">새로운 &lt;code&gt;CYPRESS_DOWNLOAD_MIRROR&lt;/code&gt; 플래그를 문서화 하고 &lt;a href=&quot;../getting-started/installing-cypress#Advanced&quot;&gt;Cypress doc 설치&lt;/a&gt; 에서 더 명확하게하기 위해 고급 설치 지시 사항을 다시 작성했습니다 .</target>
        </trans-unit>
        <trans-unit id="804124d142a9215ba3fe1c6d4f221b741dd75b1e" translate="yes" xml:space="preserve">
          <source>Does NOT match &lt;code&gt;*.google.com&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;*.google.com&lt;/code&gt; 과 일치하지 않습니다</target>
        </trans-unit>
        <trans-unit id="4933311284cb076566e3c8a210bb8b0e9c4cf5f7" translate="yes" xml:space="preserve">
          <source>Does not require any changes to files or configuration.</source>
          <target state="translated">파일이나 구성을 변경할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="41360c43377352d15fbf538e7feff1d8c8cb6950" translate="yes" xml:space="preserve">
          <source>Does not submit a form if the &lt;code&gt;submit&lt;/code&gt; button is disabled.</source>
          <target state="translated">&lt;code&gt;submit&lt;/code&gt; 버튼이 비활성화 된 경우 양식을 제출 하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f001f441c49973f9c075e2f6c0d84e1d9a67af81" translate="yes" xml:space="preserve">
          <source>Does not submit a form if there are multiple inputs and no &lt;code&gt;submit&lt;/code&gt; button.</source>
          <target state="translated">여러 개의 입력이 있고 &lt;code&gt;submit&lt;/code&gt; 단추가 없으면 양식을 제출하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="e76d1639df01aabfd04987b2f19edd4123d24766" translate="yes" xml:space="preserve">
          <source>Does the element have the &lt;code&gt;disabled&lt;/code&gt; attribute?</source>
          <target state="translated">요소에 &lt;code&gt;disabled&lt;/code&gt; 속성이 있습니까?</target>
        </trans-unit>
        <trans-unit id="4be96ac94609c064d42c764ea5a2fbc70050b26f" translate="yes" xml:space="preserve">
          <source>Doing conditional testing adds a huge problem - that the test writer themselves are unsure what the given state will be. In those situations, the only reliable way to have accurate tests is to embed this dynamic state in a reliable and consistent way.</source>
          <target state="translated">조건부 테스트를 수행하면 테스트 작성기 자체가 주어진 상태가 무엇인지 확실하지 않다는 큰 문제가 발생합니다. 이러한 상황에서 정확한 테스트를 수행 할 수있는 신뢰할 수있는 유일한 방법은이 동적 상태를 안정적이고 일관된 방식으로 포함시키는 것입니다.</target>
        </trans-unit>
        <trans-unit id="ff36de09bae56472140cf3d594198b57d33cd6f6" translate="yes" xml:space="preserve">
          <source>Doing it this way can be faster, more accurate, and more scalable.</source>
          <target state="translated">이 방법을 사용하면 더 빠르고 정확하며 확장 가능할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b05a117580caa2d7c9bdbddcffb9e0b8adaa3c84" translate="yes" xml:space="preserve">
          <source>Doing so enables you to &lt;strong&gt;block&lt;/strong&gt; and &lt;strong&gt;guard&lt;/strong&gt; Cypress by ensuring the state of descendants matches what you expect without needing to query them individually with regular Cypress DOM commands.</source>
          <target state="translated">그렇게하면 일반 Cypress DOM 명령을 사용하여 하위 항목의 상태를 개별적으로 쿼리 할 필요없이 하위 항목의 상태가 예상 한 것과 일치하도록하여 Cypress 를 &lt;strong&gt;차단&lt;/strong&gt; 하고 &lt;strong&gt;보호&lt;/strong&gt; 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9252a916f17f66e91f0c1ddeb683a3b645b64409" translate="yes" xml:space="preserve">
          <source>Domain cookies are now proxied better. There&amp;rsquo;s still more work to do before they are 100% fixed but now most typical domain cookie scenarios should &amp;lsquo;just work&amp;rsquo;.</source>
          <target state="translated">도메인 쿠키가 이제 더 잘 프록시되었습니다. 100 % 고정되기 전에해야 할 일이 더 있지만 지금은 가장 일반적인 도메인 쿠키 시나리오가 '작동'해야합니다.</target>
        </trans-unit>
        <trans-unit id="29326ddd74116cd0ed38dea8b81437470812e7e7" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t Stub Responses</source>
          <target state="translated">응답을 스텁하지 마십시오</target>
        </trans-unit>
        <trans-unit id="2440793f4d8df673a75dda05cd016806ceec833b" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t click &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; links in your tests that navigate outside of your application. Likely this isn&amp;rsquo;t worth testing anyway. You should ask yourself: &lt;em&gt;What&amp;rsquo;s the point of clicking and going to another app?&lt;/em&gt; Likely all you care about is that the &lt;code&gt;href&lt;/code&gt; attribute matches what you expect. So make an assertion about that. You can see more strategies on testing anchor links &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Testing-the-DOM&quot;&gt;in our &amp;ldquo;Tab Handling and Links&amp;rdquo; example recipe&lt;/a&gt;.</source>
          <target state="translated">테스트에서 애플리케이션 외부를 탐색하는 &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; 링크를 클릭하지 마십시오 . 어쨌든 이것은 테스트 할 가치가 없습니다. 스스로에게 물어보아야합니다. &lt;em&gt;클릭하여 다른 앱으로 이동하는 시점은 무엇입니까? &lt;/em&gt;아마 당신이 관심있는 것은 &lt;code&gt;href&lt;/code&gt; 속성이 당신이 기대하는 것과 일치 한다는 것입니다. 따라서 그것에 대해 주장하십시오. &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Testing-the-DOM&quot;&gt;&quot;탭 처리 및 링크&quot;예제 레시피에서&lt;/a&gt; 앵커 링크 테스트에 대한 추가 전략을 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f69247364224e2809c5dcd08d586bba0a61fc8ee" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t do things like:</source>
          <target state="translated">다음과 같은 일을하지 마십시오 :</target>
        </trans-unit>
        <trans-unit id="c7d6ca3f177805335da2804d73621c40575900f1" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t feel obligated to pick just one method. It is common to use one strategy for local development but another when running in &lt;a href=&quot;continuous-integration&quot;&gt;CI&lt;/a&gt;.</source>
          <target state="translated">한 가지 방법 만 선택해야 할 필요는 없습니다. &lt;a href=&quot;continuous-integration&quot;&gt;CI&lt;/a&gt; 에서 실행할 때는 한 가지 전략을 로컬 개발에 사용하고 다른 전략을 사용하는 것이 일반적 입니다.</target>
        </trans-unit>
        <trans-unit id="fd86068b6f186471e5286c2d8319748d9d3c7620" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t target elements based on CSS attributes such as: &lt;code&gt;id&lt;/code&gt;, &lt;code&gt;class&lt;/code&gt;, &lt;code&gt;tag&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt; , &lt;code&gt;class&lt;/code&gt; , &lt;code&gt;tag&lt;/code&gt; 와 같은 CSS 속성을 기반으로 요소를 타겟팅하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="4f73a89bbc9d1ed1248febd0f7e5feb866c8c4f5" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t target elements that may change their &lt;code&gt;textContent&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;textContent&lt;/code&gt; 변경할 수있는 요소를 타겟팅하지 마십시오</target>
        </trans-unit>
        <trans-unit id="9d84a04c4d5f60e53855b9d15ea8d64e9b6d294e" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t try to start a web server from &lt;code&gt;cy.exec()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cy.exec()&lt;/code&gt; 에서 웹 서버를 시작하지 마십시오 .</target>
        </trans-unit>
        <trans-unit id="c9f4dd2e19ba725998261c574c1138fbc781fc82" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t try to start a web server from within Cypress scripts. Read about &lt;a href=&quot;../references/best-practices#Web-Servers&quot;&gt;best practices&lt;/a&gt; here.</source>
          <target state="translated">Cypress 스크립트 내에서 웹 서버를 시작하지 마십시오. 읽기에 대한 &lt;a href=&quot;../references/best-practices#Web-Servers&quot;&gt;모범 사례를&lt;/a&gt; 여기에.</target>
        </trans-unit>
        <trans-unit id="7b86dfe1262cedb7f475d85819953d5d837183ad" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t use your UI to build up state! It&amp;rsquo;s enormously slow, cumbersome, and unnecessary.</source>
          <target state="translated">상태를 구축하기 위해 UI를 사용하지 마십시오! 엄청 느리고 번거롭고 불필요합니다.</target>
        </trans-unit>
        <trans-unit id="c88cbfe5f88b710f974a3548e61fa24cf8310085" translate="yes" xml:space="preserve">
          <source>Double click an anchor link</source>
          <target state="translated">앵커 링크를 두 번 클릭하십시오.</target>
        </trans-unit>
        <trans-unit id="2a748246d4c2e3297ee23c0ec852f041e00c6479" translate="yes" xml:space="preserve">
          <source>Double-click a DOM element.</source>
          <target state="translated">DOM 요소를 두 번 클릭하십시오.</target>
        </trans-unit>
        <trans-unit id="5c0285fa241de4bebad9da16f25ff89480e20ef5" translate="yes" xml:space="preserve">
          <source>Downgraded &lt;code&gt;parse-domain&lt;/code&gt; from 2.1.7 to 2.0.0 to avoid a regression released in &lt;code&gt;parse-domain&lt;/code&gt;. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3717&quot;&gt;#3717&lt;/a&gt;.</source>
          <target state="translated">다운 그레이드 &lt;code&gt;parse-domain&lt;/code&gt; 2.1.7에서 2.0.0로는 출시 회귀 방지하기 위해 &lt;code&gt;parse-domain&lt;/code&gt; . 주소 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3717&quot;&gt;# 3717&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2fdc046382f0bac99e80bf6003b655106ec0c9b7" translate="yes" xml:space="preserve">
          <source>Download Cypress at latest version (platform auto-detected)</source>
          <target state="translated">Cypress 최신 버전 다운로드 (플랫폼 자동 감지)</target>
        </trans-unit>
        <trans-unit id="b98524a2f0e7d53a662d72dce710b24cc0dcdf47" translate="yes" xml:space="preserve">
          <source>Download Cypress for a specific platform and/or architecture</source>
          <target state="translated">특정 플랫폼 및 / 또는 아키텍처를위한 Cypress 다운로드</target>
        </trans-unit>
        <trans-unit id="f2c8d0d2447b20ae7d8d9d08b342e860a278ad5a" translate="yes" xml:space="preserve">
          <source>Download Cypress with a specified version</source>
          <target state="translated">지정된 버전으로 Cypress 다운로드</target>
        </trans-unit>
        <trans-unit id="993c99b190aced0f3d6b471f5798820a143aa044" translate="yes" xml:space="preserve">
          <source>Download Cypress with a specified version and platform and/or architecture</source>
          <target state="translated">지정된 버전 및 플랫폼 및 / 또는 아키텍처로 Cypress 다운로드</target>
        </trans-unit>
        <trans-unit id="9c0282356e7a69a174a3186273098d4472cbbea9" translate="yes" xml:space="preserve">
          <source>Download URLs</source>
          <target state="translated">URL 다운로드</target>
        </trans-unit>
        <trans-unit id="2cce924335c43260c9cfe380ded635166e962e15" translate="yes" xml:space="preserve">
          <source>Download specific Chrome version</source>
          <target state="translated">특정 Chrome 버전 다운로드</target>
        </trans-unit>
        <trans-unit id="592191bc433379314714980c1eed899a4bb7877f" translate="yes" xml:space="preserve">
          <source>Downloads the Cypress binary though a mirror server</source>
          <target state="translated">미러 서버를 통해 Cypress 바이너리를 다운로드합니다</target>
        </trans-unit>
        <trans-unit id="c0ea9dbe7ad5c10534189f39f164e8c765c4d655" translate="yes" xml:space="preserve">
          <source>Drag and Drop</source>
          <target state="translated">끌어서 놓기</target>
        </trans-unit>
        <trans-unit id="b4d31820c40549826ef6dcceb8523192b3223ade" translate="yes" xml:space="preserve">
          <source>Drastically improved file watching on large projects with many tests. Instead of choking the CPU at nearly 100% indefinitely we now optimally watch the current working files for changes.</source>
          <target state="translated">많은 테스트로 대규모 프로젝트에서 파일 감시 기능이 대폭 향상되었습니다. CPU를 거의 100 % 무한정 질식시키는 대신 현재 작업 파일의 변경 사항을 최적으로 감시합니다.</target>
        </trans-unit>
        <trans-unit id="94be820e65bd3d316f5354bf4a4bcbc3169d6b52" translate="yes" xml:space="preserve">
          <source>Drastically simplified the architecture required for proxying.</source>
          <target state="translated">프록 싱에 필요한 아키텍처를 대폭 단순화했습니다.</target>
        </trans-unit>
        <trans-unit id="7816c4fc585f04f97450ce41299c72605c8c18bc" translate="yes" xml:space="preserve">
          <source>Drone</source>
          <target state="translated">Drone</target>
        </trans-unit>
        <trans-unit id="49569d6757d9473c3967128a5f81feb530b037cd" translate="yes" xml:space="preserve">
          <source>Dual Commands</source>
          <target state="translated">이중 명령</target>
        </trans-unit>
        <trans-unit id="99fbfd5e6265cea1e87f277219810a1bfefac857" translate="yes" xml:space="preserve">
          <source>Due to security upgrades, adding projects in previous versions will no longer work. Upgrade and everything should be okay.</source>
          <target state="translated">보안 업그레이드로 인해 이전 버전에서 프로젝트를 추가해도 더 이상 작동하지 않습니다. 업그레이드하면 모든 것이 정상입니다.</target>
        </trans-unit>
        <trans-unit id="480288621e2aefc91c805fcebc413ddf7c259e72" translate="yes" xml:space="preserve">
          <source>Duplicate, subsequent logs in the Command Log are now collapsed and can be expanded to view all logs. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1580&quot;&gt;#1580&lt;/a&gt;.</source>
          <target state="translated">명령 로그의 중복 된 후속 로그가 이제 축소되고 모든 로그를보기 위해 확장 할 수 있습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1580&quot;&gt;# 1580&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="5dbba9e67374d2a30a91b1d549d55513b36c3412" translate="yes" xml:space="preserve">
          <source>Duration estimation is done separately for every browser the spec file was tested against. This is helpful since performance characteristics vary by browser, and therefore it is perfectly acceptable to see different duration estimates for each browser a spec file was tested against.</source>
          <target state="translated">스펙 파일이 테스트 된 모든 브라우저에 대해 기간 추정이 별도로 수행됩니다. 이것은 성능 특성이 브라우저마다 다르기 때문에 유용하므로 스펙 파일을 테스트 한 각 브라우저에 대해 다른 지속 시간 추정값을 보는 것이 완벽하게 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="f657f89a392636e85ad17713e4c4933e5aff3a0b" translate="yes" xml:space="preserve">
          <source>During &lt;code&gt;cypress run&lt;/code&gt;, windows created with &lt;code&gt;window.open&lt;/code&gt; will no longer physically display. They are now correctly headless. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/123&quot;&gt;#123&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cypress run&lt;/code&gt; 동안 &lt;code&gt;window.open&lt;/code&gt; 으로 생성 된 창이 더 이상 물리적으로 표시되지 않습니다. 그들은 이제 제대로 머리가 없습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/123&quot;&gt;# 123&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="9dca6ae612201a13c0f26e35f4d8b02dc0f672d7" translate="yes" xml:space="preserve">
          <source>During an update Cypress will now display the updating message in the same coordinates as when the app was open by clicking the tray icon.</source>
          <target state="translated">업데이트 중에 Cypress는 트레이 아이콘을 클릭하여 앱을 열었을 때와 동일한 좌표로 업데이트 메시지를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="03c3424a49203624a3e5f0a2af756f5600c7fd3b" translate="yes" xml:space="preserve">
          <source>During install of cypress, the Cypress binary is now downloaded to a global cache. This prevents multiple projects from downloading the same Cypress version. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1300&quot;&gt;#1300&lt;/a&gt;.</source>
          <target state="translated">cypress를 설치하는 동안 Cypress 바이너리가 전역 캐시로 다운로드됩니다. 여러 프로젝트가 동일한 Cypress 버전을 다운로드하지 못하게합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1300&quot;&gt;# 1300&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="4635ca402b107dc777e57a14a22ddf4d81058452" translate="yes" xml:space="preserve">
          <source>During parallelization mode or when grouping runs, Cypress will wait for a specified amount of time before completing the test run in case any more relevant work remains. This is to compensate for various scenarios where CI machines could be backed-up in a queue.</source>
          <target state="translated">병렬화 모드 또는 그룹화 실행 중에 Cypress는 더 많은 관련 작업이 남아있는 경우 테스트 실행을 완료하기 전에 지정된 시간 동안 기다립니다. 이는 CI 머신이 대기열에 백업 될 수있는 다양한 시나리오를 보완하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="7bf0facb87eaef3dc2db4a6f8672cede399a3f6a" translate="yes" xml:space="preserve">
          <source>During parallelization mode, the Cypress &lt;a href=&quot;../dashboard/introduction&quot;&gt;Dashboard Service&lt;/a&gt; interacts with your CI machines to orchestrate the parallelization of a test run via &lt;a href=&quot;#Balance-strategy&quot;&gt;load-balancing&lt;/a&gt; of specs across available CI machines by the following process:</source>
          <target state="translated">병렬화 모드 동안 Cypress &lt;a href=&quot;../dashboard/introduction&quot;&gt;Dashboard 서비스는&lt;/a&gt; CI 시스템과 상호 작용 하여 다음 프로세스에 따라 사용 가능한 CI 시스템에서 사양의 &lt;a href=&quot;#Balance-strategy&quot;&gt;로드 밸런싱&lt;/a&gt; 을 통해 테스트 실행의 병렬화를 조정 합니다.</target>
        </trans-unit>
        <trans-unit id="38ea8471b6348617d0fe3b9854870b2c1045b2aa" translate="yes" xml:space="preserve">
          <source>During the test, the &lt;code&gt;cy.get('.todo-list li')&lt;/code&gt; command quickly found the rendered &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; item - and that item was the first and only &amp;ldquo;todo A&amp;rdquo; item. Our application was waiting 100ms before appending the second item &amp;ldquo;todo B&amp;rdquo; to the list. By the time the second item was added, Cypress had already &amp;ldquo;moved on&amp;rdquo;, working only with the first &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; element. It only searched for &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; inside the first &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; element, completely ignoring the newly created 2nd item.</source>
          <target state="translated">테스트 중에 &lt;code&gt;cy.get('.todo-list li')&lt;/code&gt; 명령은 렌더링 된 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 항목을 빠르게 찾았 으며 해당 항목은 최초이자 유일한 &quot;todo A&quot;항목이었습니다. 우리의 응용 프로그램은 목록에 두 번째 항목 &quot;todo B&quot;를 추가하기 전에 100ms를 기다리고있었습니다. 두 번째 항목이 추가 될 때 Cypress는 이미 첫 번째 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 요소 에서만 작동하는 &quot;이동&quot;했습니다 . 첫 번째 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 요소 내에서 &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; 만 검색 했으며 새로 작성된 두 번째 항목을 완전히 무시했습니다.</target>
        </trans-unit>
        <trans-unit id="136a0fb8d8e75eaec9777cdc1797bac23955292a" translate="yes" xml:space="preserve">
          <source>Dynamic tests split across parallel CI nodes with Knapsack Pro Queue Mode to get faster CI builds. Note - this is 3rd party implementation, different from the Cypress Dashboard parallelization.</source>
          <target state="translated">더 빠른 CI 빌드를 위해 동적 테스트가 Knapsack Pro Queue Mode를 사용하여 병렬 CI 노드로 분할됩니다. 참고-이는 Cypress Dashboard 병렬화와 다른 타사 구현입니다.</target>
        </trans-unit>
        <trans-unit id="5c898c36e7e7f0ca622b7e6a1f3fedf436b9bd87" translate="yes" xml:space="preserve">
          <source>Dynamic text</source>
          <target state="translated">동적 텍스트</target>
        </trans-unit>
        <trans-unit id="ae28e511e8bc706bd1f00b92fc4ad20be0013475" translate="yes" xml:space="preserve">
          <source>Dynamically Generate Tests</source>
          <target state="translated">동적으로 테스트 생성</target>
        </trans-unit>
        <trans-unit id="32632163c90f645f5e238e58d67159c13482ef76" translate="yes" xml:space="preserve">
          <source>Dynamically test multiple viewports</source>
          <target state="translated">여러 뷰포트를 동적으로 테스트</target>
        </trans-unit>
        <trans-unit id="763e51fd3356790e7032b1ff2b69409ac670bcde" translate="yes" xml:space="preserve">
          <source>E2E and unit code coverage</source>
          <target state="translated">E2E 및 단위 코드 범위</target>
        </trans-unit>
        <trans-unit id="48f9ca4e6a46e0c8336a615783b4683686e1e040" translate="yes" xml:space="preserve">
          <source>E2E code coverage</source>
          <target state="translated">E2E 코드 범위</target>
        </trans-unit>
        <trans-unit id="4d1b2ce02ae9d644a9a1ccd831bbd61bcd878146" translate="yes" xml:space="preserve">
          <source>ES2015 via Babel</source>
          <target state="translated">바벨을 통한 ES2015</target>
        </trans-unit>
        <trans-unit id="387485c3637a014fbaa964164d0526497139ac1e" translate="yes" xml:space="preserve">
          <source>ESLint</source>
          <target state="translated">ESLint</target>
        </trans-unit>
        <trans-unit id="1370400c46faebf95aef65bacd78290720372c1e" translate="yes" xml:space="preserve">
          <source>ESLint plugin that sets globals for writing tests in Cypress.</source>
          <target state="translated">Cypress에서 테스트를 작성하기위한 글로벌을 설정하는 ESLint 플러그인.</target>
        </trans-unit>
        <trans-unit id="1a667eaf2cb96d97a1d0e9a8d21804d12d391390" translate="yes" xml:space="preserve">
          <source>Each API Command documents its behavior with assertions - such as how it retries or waits for assertions to pass.</source>
          <target state="translated">각 API Command는 어설 션을 재 시도하거나 대기하는 방법과 같이 어설 션으로 동작을 문서화합니다.</target>
        </trans-unit>
        <trans-unit id="c377f25ad057c7000470b58b06a4cf4c4f9d9d55" translate="yes" xml:space="preserve">
          <source>Each Cypress command (and chain of commands) returns immediately, having only been appended to a queue of commands to be executed at a later time.</source>
          <target state="translated">각 Cypress 명령 (및 명령 체인)은 즉시 실행될 수 있도록 명령 대기열에 추가 된 후에 즉시 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="2d30182dccb6b31f8acf775660b9de4a71aa0512" translate="yes" xml:space="preserve">
          <source>Each command and assertion, when hovered over, restores the Application Under Test (righthand side) to the state it was in when that command executed. This allows you to &amp;lsquo;time-travel&amp;rsquo; back to previous states of your application when testing.</source>
          <target state="translated">각 명령과 어설 션은 마우스를 가리키면 테스트중인 응용 프로그램 (오른쪽)을 해당 명령이 실행될 때의 상태로 복원합니다. 이를 통해 테스트 할 때 애플리케이션의 이전 상태로 '시간 여행'할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1e1830c5ceb356707df5226b15717796e913493a" translate="yes" xml:space="preserve">
          <source>Each command will automatically restore the viewport to the dimensions at the time the command was issued. In other words, scrolling over each command will restore exactly what Cypress &amp;ldquo;saw&amp;rdquo; when it issued the command.</source>
          <target state="translated">각 명령은 명령이 실행될 때 뷰포트를 치수로 자동 복원합니다. 다시 말해, 각 명령을 스크롤하면 명령을 발행했을 때 Cypress가 &quot;본&quot;것을 정확하게 복원합니다.</target>
        </trans-unit>
        <trans-unit id="684c1fdc408df49cd48e5f43f063a2b481a255fe" translate="yes" xml:space="preserve">
          <source>Each command, assertion, or error, when clicked on, displays extra information in the dev tools console. Clicking also &amp;lsquo;pins&amp;rsquo; the Application Under Test (righthand side) to its previous state when the command executed.</source>
          <target state="translated">클릭하면 각 명령, 어설 션 또는 오류가 dev 도구 콘솔에 추가 정보를 표시합니다. 또한 클릭하면 명령이 실행될 때 테스트중인 응용 프로그램 (오른쪽)을 이전 상태로 '고정'됩니다.</target>
        </trans-unit>
        <trans-unit id="275993dbbd08f877b5a8ee165491e54db8467214" translate="yes" xml:space="preserve">
          <source>Each event documents its own argument signature. To understand how to use them, please &lt;a href=&quot;#List-of-events&quot;&gt;refer to the docs for each one&lt;/a&gt;.</source>
          <target state="translated">각 이벤트는 자체 인수 서명을 문서화합니다. 사용 방법을 이해하려면 &lt;a href=&quot;#List-of-events&quot;&gt;각 문서&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e88c2ebb6cbb35ba1087b3274ea4feb73d229795" translate="yes" xml:space="preserve">
          <source>Each failed test links back to the associated failure within the Cypress Dashboard.</source>
          <target state="translated">실패한 각 테스트는 Cypress 대시 보드 내의 관련 실패와 다시 연결됩니다.</target>
        </trans-unit>
        <trans-unit id="8b6f95f98b50c84456913db5f3adc7e79522a170" translate="yes" xml:space="preserve">
          <source>Each keypress is delayed 10ms by default in order to simulate how a very fast user types!</source>
          <target state="translated">매우 빠른 사용자 유형을 시뮬레이션하기 위해 각 키 누름은 기본적으로 10ms 지연됩니다!</target>
        </trans-unit>
        <trans-unit id="9e400bc814cb7a75a615fbd7190343f642f74521" translate="yes" xml:space="preserve">
          <source>Each nested command has access to the work done in previous commands. This ends up reading very nicely.</source>
          <target state="translated">중첩 된 각 명령은 이전 명령에서 수행 한 작업에 액세스 할 수 있습니다. 이것은 매우 잘 읽습니다.</target>
        </trans-unit>
        <trans-unit id="99024aa822581486d6de74268616aa65f2fe2aed" translate="yes" xml:space="preserve">
          <source>Each of these environments would read in the configuration at these files:</source>
          <target state="translated">이러한 각 환경은 다음 파일의 구성에서 읽습니다.</target>
        </trans-unit>
        <trans-unit id="520ea0c2aac8299f6c0b93e36d195747c0ff7dfa" translate="yes" xml:space="preserve">
          <source>Each of these likely requires a full blown e2e test.</source>
          <target state="translated">이들 각각은 완전한 블로운 e2e 테스트를 필요로합니다.</target>
        </trans-unit>
        <trans-unit id="9d63f8c829aa417fbfafcd489edaa4d0a4e615e3" translate="yes" xml:space="preserve">
          <source>Each status check will report the number of test failures or passes, and the associated &lt;strong&gt;Details&lt;/strong&gt; link will direct you to the test run&amp;rsquo;s page within the Cypress Dashboard to help you dig deeper into the problem via error messages, stack traces, screenshots, and video recordings:</source>
          <target state="translated">각 상태 확인에는 테스트 실패 또는 통과 횟수가보고되며 관련 &lt;strong&gt;세부 정보&lt;/strong&gt; 링크가 Cypress 대시 보드의 테스트 실행 페이지로 연결되어 오류 메시지, 스택 추적, 스크린 샷 및 비디오 녹화를 통해 문제를보다 심층적으로 분석 할 수 있습니다. :</target>
        </trans-unit>
        <trans-unit id="6f9e6d76d99d863b08efd5c2699c22f48570a76d" translate="yes" xml:space="preserve">
          <source>Each test is bound to a &lt;a href=&quot;#Same-origin&quot;&gt;single origin&lt;/a&gt;.</source>
          <target state="translated">각 테스트는 &lt;a href=&quot;#Same-origin&quot;&gt;단일 원점에&lt;/a&gt; 바인딩됩니다 .</target>
        </trans-unit>
        <trans-unit id="80c603e712f509c60c424c0b15022265d200d65d" translate="yes" xml:space="preserve">
          <source>Each test is limited to only visiting a single superdomain.</source>
          <target state="translated">각 테스트는 단일 수퍼 도메인 방문만으로 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="7be3eadfca500682a804c06ad342ec8f4d4f3e00" translate="yes" xml:space="preserve">
          <source>Each time an alias in used with a &lt;a href=&quot;../../api/commands/wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt;, Cypress will not resolve until the Nth request matching the outing alias responds. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4&quot;&gt;#4&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/wait&quot;&gt; &lt;code&gt;cy.wait()&lt;/code&gt; &lt;/a&gt; 와 함께 별칭을 사용할 때마다 Cypress는 나가는 별칭과 일치하는 N 번째 요청이 응답 할 때까지 확인되지 않습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4&quot;&gt;# 4&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="258b36b6173f6d83441d85265954566f57a760e8" translate="yes" xml:space="preserve">
          <source>Each time we use &lt;code&gt;cy.wait()&lt;/code&gt; for an alias, Cypress waits for the next nth matching request.</source>
          <target state="translated">별명으로 &lt;code&gt;cy.wait()&lt;/code&gt; 를 사용할 때마다 Cypress는 다음 n 번째 일치 요청을 기다립니다.</target>
        </trans-unit>
        <trans-unit id="a1b70f0ead660ad520a0fe4e108059f6483211c1" translate="yes" xml:space="preserve">
          <source>Easily: control which campaign gets sent, or provide a reliable means to know which one it is.</source>
          <target state="translated">쉽게 : 보낼 캠페인을 제어하거나 어떤 캠페인이 어떤 캠페인인지 알 수있는 신뢰할 수있는 수단을 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="4faac50fbaf395b598751258e10615250e7ad966" translate="yes" xml:space="preserve">
          <source>Easy control of response bodies, status, and headers</source>
          <target state="translated">응답 본문, 상태 및 헤더를 쉽게 제어</target>
        </trans-unit>
        <trans-unit id="143f10dc9c5ed39d716e4f2bd0ee7d24486a1820" translate="yes" xml:space="preserve">
          <source>Edge cases like locked / deleted accounts</source>
          <target state="translated">잠금 / 삭제 된 계정과 같은 엣지 사례</target>
        </trans-unit>
        <trans-unit id="21ad68daa12d13b4ec9639b5c9446a62b81abc7b" translate="yes" xml:space="preserve">
          <source>Edit &amp;lsquo;admin&amp;rsquo; in organization</source>
          <target state="translated">조직에서 '관리자'수정</target>
        </trans-unit>
        <trans-unit id="11d3c209993b025b25ba41f1164a7c6f9cae7bdc" translate="yes" xml:space="preserve">
          <source>Edit &amp;lsquo;member&amp;rsquo; in organization</source>
          <target state="translated">조직에서 '회원'수정</target>
        </trans-unit>
        <trans-unit id="ac33bdcdccb67cdac31155d9d7f435ee323dc7a4" translate="yes" xml:space="preserve">
          <source>Edit &amp;lsquo;owner&amp;rsquo; in organization</source>
          <target state="translated">조직에서 '소유자'수정</target>
        </trans-unit>
        <trans-unit id="c91ffb5f3ded95ed881a649db2def6919951d1e2" translate="yes" xml:space="preserve">
          <source>Edit billing information</source>
          <target state="translated">청구 정보 편집</target>
        </trans-unit>
        <trans-unit id="e2befb843434b3c0a45eb78377cb1c3a9fd932b7" translate="yes" xml:space="preserve">
          <source>Edit organization name</source>
          <target state="translated">조직 이름 편집</target>
        </trans-unit>
        <trans-unit id="7f9c8e468af664d71704e88d65af4cc78aa8b101" translate="yes" xml:space="preserve">
          <source>Edit project name</source>
          <target state="translated">프로젝트 이름 편집</target>
        </trans-unit>
        <trans-unit id="083a0a263e8bc798e23428cb98a349cb82c291a3" translate="yes" xml:space="preserve">
          <source>Edit project status (private/public}</source>
          <target state="translated">프로젝트 상태 수정 (비공개 / 공개}</target>
        </trans-unit>
        <trans-unit id="3b11ca85d872d994ddd774f033e3e4883c5374a4" translate="yes" xml:space="preserve">
          <source>Edit the installed Cypress code</source>
          <target state="translated">설치된 Cypress 코드 편집</target>
        </trans-unit>
        <trans-unit id="7ed50c7c9032a74ec0f4cb0dafc803eaa53c9af5" translate="yes" xml:space="preserve">
          <source>Editing a Selector</source>
          <target state="translated">선택기 편집</target>
        </trans-unit>
        <trans-unit id="3f25a6c9ba41e83696296e7c77e66e2444e64051" translate="yes" xml:space="preserve">
          <source>Effect on default DOM assertions</source>
          <target state="translated">기본 DOM 어설 션에 미치는 영향</target>
        </trans-unit>
        <trans-unit id="3e63a9b7b308aed39d946483a401f46e77a9d1e3" translate="yes" xml:space="preserve">
          <source>Effectively leveraging test data</source>
          <target state="translated">테스트 데이터를 효과적으로 활용</target>
        </trans-unit>
        <trans-unit id="32a90561af82abfa6e3aa54ef2f8e4b55202bd25" translate="yes" xml:space="preserve">
          <source>Electron</source>
          <target state="translated">Electron</target>
        </trans-unit>
        <trans-unit id="ab40dddcb86fc9f7d8f51cdd865f63924d21ba19" translate="yes" xml:space="preserve">
          <source>Electron Browser</source>
          <target state="translated">전자 브라우저</target>
        </trans-unit>
        <trans-unit id="3a76e577299fc3c204205f6ee683d8a672a99478" translate="yes" xml:space="preserve">
          <source>Electron no longer reports the browser as out of focus when running via &lt;code&gt;cypress run&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1939&quot;&gt;#1939&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cypress run&lt;/code&gt; 을 통해 실행할 때 Electron은 더 이상 브라우저의 초점이 맞지 않다고보고하지 않습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1939&quot;&gt;# 1939&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="628192e8fa718cca67ad9d3672c514fbb407a198" translate="yes" xml:space="preserve">
          <source>Electron rendering warnings are no longer printed to console output. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4288&quot;&gt;#4288&lt;/a&gt;.</source>
          <target state="translated">전자 렌더링 경고가 더 이상 콘솔 출력에 인쇄되지 않습니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4288&quot;&gt;# 4288&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ac1b516a5e7d2ec9129ab1809aa645c83ab99f4d" translate="yes" xml:space="preserve">
          <source>Element existence</source>
          <target state="translated">요소 존재</target>
        </trans-unit>
        <trans-unit id="67ac45c91d2984a846db24f392fd52e012b9fba1" translate="yes" xml:space="preserve">
          <source>Element preference order</source>
          <target state="translated">요소 기본 설정 순서</target>
        </trans-unit>
        <trans-unit id="8c1e32bf90c3fd5f9e28299e564c4b55b82a0acc" translate="yes" xml:space="preserve">
          <source>Element removal during &lt;code&gt;mousedown&lt;/code&gt; or &lt;code&gt;mouseup&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;mousedown&lt;/code&gt; 또는 &lt;code&gt;mouseup&lt;/code&gt; 중 요소 제거</target>
        </trans-unit>
        <trans-unit id="3d6147561440cd1b5919d02113d41dc053bfe9a4" translate="yes" xml:space="preserve">
          <source>Element to search for children in. If null, search begins from root-level DOM element</source>
          <target state="translated">하위를 검색 할 요소입니다. null 인 경우 루트 수준 DOM 요소에서 검색이 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="a563972e807d43617dfb0a4b0398984476c03544" translate="yes" xml:space="preserve">
          <source>Elements</source>
          <target state="translated">Elements</target>
        </trans-unit>
        <trans-unit id="ab8036ec3220e8f26cf947a385c7f8e8b88aa005" translate="yes" xml:space="preserve">
          <source>Elements (the number of elements found)</source>
          <target state="translated">요소 (발견 된 요소 수)</target>
        </trans-unit>
        <trans-unit id="c921f06f52212a4281e5cb1397527903ac026c45" translate="yes" xml:space="preserve">
          <source>Elements that are covering up an element you targeted for &lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt; are now logged out in the command console.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt; 을 대상으로하는 요소를 덮고있는 요소 가 이제 명령 콘솔에서 로그 아웃됩니다.</target>
        </trans-unit>
        <trans-unit id="2f5b8ce8549efb6806df82766f80e1a2920d20de" translate="yes" xml:space="preserve">
          <source>Elements that are inside a parent with CSS &lt;code&gt;position: absolute&lt;/code&gt; which is itself inside of a parent element with &lt;code&gt;overflow: hidden&lt;/code&gt; are now properly considered visible. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4395&quot;&gt;#4395&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/755&quot;&gt;#755&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;overflow: hidden&lt;/code&gt; 이 있는 부모 요소 내부에 CSS &lt;code&gt;position: absolute&lt;/code&gt; 가있는 부모 내부에있는 요소 가 이제 올바르게 표시됩니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4395&quot;&gt;# 4395&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/755&quot;&gt;# 755를&lt;/a&gt; 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="6998029fced720e07b4684bb075b294b44e30ee1" translate="yes" xml:space="preserve">
          <source>Elements that match the specified selectors will be blacked out from the screenshot, but only when the &lt;code&gt;capture&lt;/code&gt; option is &lt;code&gt;viewport&lt;/code&gt;. &lt;code&gt;blackout&lt;/code&gt; is ignored is &lt;code&gt;capture&lt;/code&gt; is &lt;code&gt;runner&lt;/code&gt;.</source>
          <target state="translated">지정된 선택기와 일치하는 요소는 &lt;code&gt;capture&lt;/code&gt; 옵션이 &lt;code&gt;viewport&lt;/code&gt; 인 경우에만 스크린 샷에서 검은 색으로 표시됩니다 . &lt;code&gt;blackout&lt;/code&gt; 무시는 &lt;code&gt;capture&lt;/code&gt; 입니다 &lt;code&gt;runner&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5e9ebbcc8c2d718bd1587c39876f43fd85937f84" translate="yes" xml:space="preserve">
          <source>Elements which are children of a container with &lt;code&gt;overflow&lt;/code&gt; are automatically scrolled prior to a click (which is an abstraction around real user behavior).</source>
          <target state="translated">&lt;code&gt;overflow&lt;/code&gt; 가 있는 컨테이너의 하위 요소 인 요소 는 클릭하기 전에 자동으로 스크롤됩니다 (실제 사용자 동작에 대한 추상화).</target>
        </trans-unit>
        <trans-unit id="4b356077ea501d4ebd48c4371f1a83dbcc1eb12f" translate="yes" xml:space="preserve">
          <source>Elements which are stringified during errors now indicate their text content (truncated to 10 characters) &lt;code&gt;&amp;lt;button&amp;gt;Save&amp;lt;/button&amp;gt;&lt;/code&gt; or whether they contain children elements by indicating an ellipsis &lt;code&gt;&amp;lt;div&amp;gt;...&amp;lt;/div&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">오류 중에 문자열로 표시된 요소는 이제 텍스트 내용 (10 자로 잘림) &lt;code&gt;&amp;lt;button&amp;gt;Save&amp;lt;/button&amp;gt;&lt;/code&gt; 을 나타내거나 줄임표 &lt;code&gt;&amp;lt;div&amp;gt;...&amp;lt;/div&amp;gt;&lt;/code&gt; 를 표시하여 자식 요소를 포함하는지 여부를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="26bf1b4484d000d8d5ae5549911ae978182472d5" translate="yes" xml:space="preserve">
          <source>Elements with a defined &lt;code&gt;contenteditable&lt;/code&gt; attribute.</source>
          <target state="translated">&lt;code&gt;contenteditable&lt;/code&gt; 속성 이 정의 된 요소</target>
        </trans-unit>
        <trans-unit id="44667429769bd42ab172b16d15a51c492c3b74cb" translate="yes" xml:space="preserve">
          <source>Elements with a defined &lt;code&gt;tabindex&lt;/code&gt; attribute.</source>
          <target state="translated">&lt;code&gt;tabindex&lt;/code&gt; 속성 이 정의 된 요소</target>
        </trans-unit>
        <trans-unit id="c5016f42510d5ee58a2fc21e1db91bd76faabaef" translate="yes" xml:space="preserve">
          <source>Elm Batteries Included</source>
          <target state="translated">느릅 나무 배터리 포함</target>
        </trans-unit>
        <trans-unit id="af9767897d93c4978863eb928201ebd647a87432" translate="yes" xml:space="preserve">
          <source>Embed data in DOM:</source>
          <target state="translated">DOM에 데이터 내장 :</target>
        </trans-unit>
        <trans-unit id="e39e9c84c2c2c0bee498ed6bf855df6becaa3631" translate="yes" xml:space="preserve">
          <source>Embed data in the DOM:</source>
          <target state="translated">DOM에 데이터를 임베드하십시오.</target>
        </trans-unit>
        <trans-unit id="e9b4c8862fdeedf485374f3150ae4c5a0e62da5b" translate="yes" xml:space="preserve">
          <source>Embed data into other places (cookies / local storage) you could read off.</source>
          <target state="translated">읽을 수있는 다른 장소 (쿠키 / 로컬 스토리지)에 데이터를 포함시킵니다.</target>
        </trans-unit>
        <trans-unit id="d919c765dfb166f5f96fd2b0f23f806e1d095b38" translate="yes" xml:space="preserve">
          <source>Embedding a Vimeo or YouTube video.</source>
          <target state="translated">Vimeo 또는 YouTube 비디오 포함</target>
        </trans-unit>
        <trans-unit id="c4d67b7147f77128c418841b4c976644e812ca6f" translate="yes" xml:space="preserve">
          <source>Enable &lt;a href=&quot;../../api/commands/fixture&quot;&gt;&lt;code&gt;cy.fixture()&lt;/code&gt;&lt;/a&gt; to send an encoding for images other than forcing the default encoding of &lt;code&gt;base64&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/373&quot;&gt;#373&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/fixture&quot;&gt; &lt;code&gt;cy.fixture()&lt;/code&gt; &lt;/a&gt; 를 활성화 하여 &lt;code&gt;base64&lt;/code&gt; 기본 인코딩을 강제하는 것 이외의 이미지에 대한 인코딩을 보내십시오 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/373&quot;&gt;# 373&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="2c8ec935e875b88d51e3d58428ad460f4eb430a7" translate="yes" xml:space="preserve">
          <source>Enable &lt;a href=&quot;../../api/commands/route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt; to pass an &lt;code&gt;encoding&lt;/code&gt; parameter when using &lt;code&gt;fx:fixture&lt;/code&gt; syntax. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/374&quot;&gt;#374&lt;/a&gt;.</source>
          <target state="translated">활성화 &lt;a href=&quot;../../api/commands/route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt; 통과 &lt;code&gt;encoding&lt;/code&gt; 사용시 파라미터 &lt;code&gt;fx:fixture&lt;/code&gt; 구. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/374&quot;&gt;# 374&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="f0426f197113f21bed6a16a638614e6219dd849a" translate="yes" xml:space="preserve">
          <source>Enable or disable experimental chrome features</source>
          <target state="translated">실험용 크롬 기능 사용 또는 사용 중지</target>
        </trans-unit>
        <trans-unit id="8e2313b580fa33d278483393ce7eea83abf0c5a6" translate="yes" xml:space="preserve">
          <source>Enable passing &lt;code&gt;CYPRESS_RECORD_KEY&lt;/code&gt; without using the CLI by invoking the binary directly. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/820&quot;&gt;#820&lt;/a&gt;.</source>
          <target state="translated">바이너리를 직접 호출하여 CLI를 사용하지 않고 &lt;code&gt;CYPRESS_RECORD_KEY&lt;/code&gt; 를 전달할 수 있습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/820&quot;&gt;# 820&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="aa2e83b0da6d422f1bdb880cdbb1d737c2ba9d85" translate="yes" xml:space="preserve">
          <source>Enables you to generate this file from other build processes.</source>
          <target state="translated">다른 빌드 프로세스에서이 파일을 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0b6c051defe74066ab292a333fa676fa369cdd20" translate="yes" xml:space="preserve">
          <source>Enables you to override the default user agent the browser sends in all request headers. User agent values are typically used by servers to help identify the operating system, browser, and browser version. See &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/User-Agent&quot;&gt;User-Agent MDN Documentation&lt;/a&gt; for example user agent values.</source>
          <target state="translated">브라우저가 모든 요청 헤더에서 보내는 기본 사용자 에이전트를 대체 할 수 있습니다. 사용자 에이전트 값은 일반적으로 서버에서 운영 체제, 브라우저 및 브라우저 버전을 식별하는 데 사용됩니다. 사용자 에이전트 값의 예는 사용자 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/User-Agent&quot;&gt;에이전트 MDN 설명서&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c5754b46c040515f05e7e2cf7cd1cd37419a34f9" translate="yes" xml:space="preserve">
          <source>Enables you to work with the subject yielded from the previous command.</source>
          <target state="translated">이전 명령에서 생성 된 주제로 작업 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="558ddd63962b514580bf35502e16351fdbe839ab" translate="yes" xml:space="preserve">
          <source>Enabling GitHub integration for a project</source>
          <target state="translated">프로젝트에 GitHub 통합 활성화</target>
        </trans-unit>
        <trans-unit id="919551597df30356944cafd212832256a8c0df11" translate="yes" xml:space="preserve">
          <source>Enabling this would mean that for every single command, it would recover from errors, but only after each applicable command timeout was reached. Since timeouts start at 4 seconds (and exceed from there), this means that it would only fail after a long, long time.</source>
          <target state="translated">이를 활성화하면 모든 단일 명령에 대해 오류가 복구되지만 적용 가능한 각 명령 시간 초과에 도달 한 후에 만 ​​복구됩니다. 시간 초과는 4 초에서 시작하여 그 시간을 초과하므로 오랜 시간이 지난 후에 만 ​​실패 함을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="7ea8c255859397cb43119394cba347868785c8a5" translate="yes" xml:space="preserve">
          <source>Encode a fixture with Protocol Buffers.</source>
          <target state="translated">프로토콜 버퍼로 조명기를 인코딩합니다.</target>
        </trans-unit>
        <trans-unit id="5821fec7ee87050117e2081a31b307f34868a8ad" translate="yes" xml:space="preserve">
          <source>Encoding</source>
          <target state="translated">Encoding</target>
        </trans-unit>
        <trans-unit id="b1adbe164ee63dd9c7f2a4593f50e7b7a78d2933" translate="yes" xml:space="preserve">
          <source>End a chain of commands.</source>
          <target state="translated">일련의 명령을 끝내십시오.</target>
        </trans-unit>
        <trans-unit id="e6f6463c153c032ec57c13a6815c6707e987c657" translate="yes" xml:space="preserve">
          <source>End-to-end tests</source>
          <target state="translated">엔드 투 엔드 테스트</target>
        </trans-unit>
        <trans-unit id="dc9c95c5e8bc53a4dcd048eabe4c357d20b5606d" translate="yes" xml:space="preserve">
          <source>Enhanced &lt;a href=&quot;../../api/commands/should&quot;&gt;&lt;code&gt;.should()&lt;/code&gt;&lt;/a&gt; to accept &lt;code&gt;eventually&lt;/code&gt; flag to automatically retry assertions until timeout is reached.</source>
          <target state="translated">시간 초과에 도달 할 때까지 어설 션을 자동으로 다시 시도 하도록 &lt;code&gt;eventually&lt;/code&gt; 플래그 를 허용하도록 &lt;a href=&quot;../../api/commands/should&quot;&gt; &lt;code&gt;.should()&lt;/code&gt; &lt;/a&gt; 가 향상되었습니다 .</target>
        </trans-unit>
        <trans-unit id="ca79022eedafdc9baaf95b2b49cce41fcc1e6eea" translate="yes" xml:space="preserve">
          <source>Ensure it is not animating</source>
          <target state="translated">애니메이션이 아닌지 확인</target>
        </trans-unit>
        <trans-unit id="6bd28c56432380e3f912525f6af0f9c44b907e9b" translate="yes" xml:space="preserve">
          <source>Ensure it is not covered</source>
          <target state="translated">커버되지 않았는지 확인하십시오</target>
        </trans-unit>
        <trans-unit id="b515507685300afd9564c5ff4e8053ea10beb757" translate="yes" xml:space="preserve">
          <source>Ensure it is not disabled</source>
          <target state="translated">비활성화되어 있지 않은지 확인하십시오</target>
        </trans-unit>
        <trans-unit id="22ec6995360904e0d3d9d4c55e765bcd0da7e133" translate="yes" xml:space="preserve">
          <source>Ensure it is not readonly</source>
          <target state="translated">읽기 전용이 아닌지 확인</target>
        </trans-unit>
        <trans-unit id="cfa8913f432e799e200d2a95b10e32335be7fa56" translate="yes" xml:space="preserve">
          <source>Ensure it is visible</source>
          <target state="translated">보이는지 확인하십시오</target>
        </trans-unit>
        <trans-unit id="4310731e72eabf26a3eb446e02ef8579a5237f5d" translate="yes" xml:space="preserve">
          <source>Ensure the element is not animating.</source>
          <target state="translated">요소가 애니메이션되지 않는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="b1007053ced6553c9fd1f6424bca2c3f220eca1e" translate="yes" xml:space="preserve">
          <source>Ensure the element is not covered.</source>
          <target state="translated">요소가 덮여 있지 않은지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="ccc1610572b26e8b08c6a4c34c737395f4333d8d" translate="yes" xml:space="preserve">
          <source>Ensure the element is not disabled.</source>
          <target state="translated">요소가 비활성화되어 있지 않은지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="0d19677ee6acc9d5c50e9b91a94c4ed5155f590d" translate="yes" xml:space="preserve">
          <source>Ensure the element is not hidden.</source>
          <target state="translated">요소가 숨겨져 있지 않은지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="368fc70a50a93ced761903d47a41db1f3a8d3a17" translate="yes" xml:space="preserve">
          <source>Ensure the element is not readonly.</source>
          <target state="translated">요소가 읽기 전용이 아닌지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="f6926f03c557954977ef6356cd9d7fe3652d0014" translate="yes" xml:space="preserve">
          <source>Ensure the element you are trying to call &lt;code&gt;.focus()&lt;/code&gt; on is a &lt;a href=&quot;https://www.w3.org/TR/html5/editing.html#focusable&quot;&gt;focusable element&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.focus()&lt;/code&gt; 를 호출하려는 &lt;a href=&quot;https://www.w3.org/TR/html5/editing.html#focusable&quot;&gt;요소&lt;/a&gt; 가 포커스 가능한 요소 인지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="384a6e9623ee89d57bf379a1678db79477e198f0" translate="yes" xml:space="preserve">
          <source>Environment Variable</source>
          <target state="translated">환경 변수</target>
        </trans-unit>
        <trans-unit id="ec072bba7befaa68af710fe3549eb0491d7badd1" translate="yes" xml:space="preserve">
          <source>Environment Variables</source>
          <target state="translated">환경 변수</target>
        </trans-unit>
        <trans-unit id="aa508e9bef3af1389a3020abd9c7793caae33c76" translate="yes" xml:space="preserve">
          <source>Environment Variables recipe</source>
          <target state="translated">환경 변수 레시피</target>
        </trans-unit>
        <trans-unit id="1173b2e11bd16e5dc36c119a4b84f02be11626b5" translate="yes" xml:space="preserve">
          <source>Environment variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc92a9c3a64a7543ce72d138611445527c755578" translate="yes" xml:space="preserve">
          <source>Environment variables are great at pointing to external services and servers, or storing password or other credentials.</source>
          <target state="translated">환경 변수는 외부 서비스 및 서버를 가리 키거나 암호 또는 기타 자격 증명을 저장하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="94f1956fc009fdce8d624d9e2835373ffa72501f" translate="yes" xml:space="preserve">
          <source>Environment variables are useful when:</source>
          <target state="translated">환경 변수는 다음과 같은 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="f4ce0155cb72d83c03781b384f78b9b2272a0a9e" translate="yes" xml:space="preserve">
          <source>Environment variables can be changed easily - especially when running in CI.</source>
          <target state="translated">환경 변수는 특히 CI에서 실행될 때 쉽게 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="30333666567894e35870601003c548b606d3b2c8" translate="yes" xml:space="preserve">
          <source>Environment variables for Semaphore 2.0 are now captured when recording tests to the Dashboard. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4671&quot;&gt;#4671&lt;/a&gt;.</source>
          <target state="translated">테스트를 대시 보드에 기록 할 때 Semaphore 2.0의 환경 변수가 캡처됩니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4671&quot;&gt;# 4671&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3634cf23ae7c404597c456674b568879629b5ba7" translate="yes" xml:space="preserve">
          <source>Environment variables set using &lt;code&gt;Cypress.env&lt;/code&gt;&lt;em&gt;are only in scope for the current spec file.&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;Cypress.env&lt;/code&gt; 를 사용하여 설정 한 환경 변수 &lt;em&gt;는 현재 사양 파일의 범위에만 있습니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cd6cbbb19e47188e0f4a16c137fc8b4d198da3be" translate="yes" xml:space="preserve">
          <source>Environment variables that do not match configuration keys will instead be set as regular environment variables for use in your tests with &lt;code&gt;Cypress.env()&lt;/code&gt;.</source>
          <target state="translated">구성 키와 일치하지 않는 환경 변수는 &lt;code&gt;Cypress.env()&lt;/code&gt; 테스트에서 사용할 일반 환경 변수로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="fa647c1ab7e45907989ea68b5acf3879755d28ca" translate="yes" xml:space="preserve">
          <source>Error Messages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a18f05e0a5a1ef739509b16e48dcb60c926009f" translate="yes" xml:space="preserve">
          <source>Error Recovery</source>
          <target state="translated">오류 복구</target>
        </trans-unit>
        <trans-unit id="73631d7f0356fdbdeaa36f8e5dbad89c6aa15dc4" translate="yes" xml:space="preserve">
          <source>Error handling</source>
          <target state="translated">오류 처리</target>
        </trans-unit>
        <trans-unit id="a7dadcb4736c27170931fdcf7841a1fb8de3a859" translate="yes" xml:space="preserve">
          <source>Error handling for invalid arguments passed to &lt;a href=&quot;../../api/commands/wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt; have been improved and will now suggest valid arguments that are acceptable.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/wait&quot;&gt; &lt;code&gt;cy.wait()&lt;/code&gt; &lt;/a&gt; 전달 된 유효하지 않은 인수에 대한 오류 처리 가 개선되었으며 이제 허용 가능한 유효한 인수를 제안합니다.</target>
        </trans-unit>
        <trans-unit id="982e82df0e80e302edc2f8a09a70d717466a86e7" translate="yes" xml:space="preserve">
          <source>Error messages and command messages for &lt;a href=&quot;../../api/commands/its&quot;&gt;&lt;code&gt;.its()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/invoke&quot;&gt;&lt;code&gt;.invoke()&lt;/code&gt;&lt;/a&gt; have been improved.</source>
          <target state="translated">오류 메시지 및 명령에 대한 메시지 &lt;a href=&quot;../../api/commands/its&quot;&gt; &lt;code&gt;.its()&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;../../api/commands/invoke&quot;&gt; &lt;code&gt;.invoke()&lt;/code&gt; &lt;/a&gt; 개선되었습니다.</target>
        </trans-unit>
        <trans-unit id="6109861390104b5df44cf97b43d8f8aa5eebfedf" translate="yes" xml:space="preserve">
          <source>Error messages no longer break within words.</source>
          <target state="translated">더 이상 오류 메시지가 단어 내에서 중단되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="76882bf98cee4086a1074b159fda3d1a5d2cd96c" translate="yes" xml:space="preserve">
          <source>Errors / crashes encountered when updating to newer versions through the app should be fixed now.</source>
          <target state="translated">앱을 통해 최신 버전으로 업데이트 할 때 발생하는 오류 / 충돌이 수정되었습니다.</target>
        </trans-unit>
        <trans-unit id="854f93a83e75f7d2544802812315f4ac785a5e0a" translate="yes" xml:space="preserve">
          <source>Errors coming from plugins now display correctly in the Test Runner. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/945&quot;&gt;#945&lt;/a&gt;.</source>
          <target state="translated">플러그인에서 발생하는 오류가 이제 테스트 러너에 올바르게 표시됩니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/945&quot;&gt;# 945&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="4c711fa24b5948b08ce83b5f001b7e2dc18357dd" translate="yes" xml:space="preserve">
          <source>Errors from your plugins &lt;em&gt;will not crash&lt;/em&gt; Cypress.</source>
          <target state="translated">플러그인의 오류는 Cypress와 &lt;em&gt;충돌하지 않습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="5add43a5bd5039885f5128e025a33fe0f420e4c4" translate="yes" xml:space="preserve">
          <source>Errors reading / writing &lt;code&gt;cypress.json&lt;/code&gt; on project add are now displayed inline.</source>
          <target state="translated">프로젝트 추가시 &lt;code&gt;cypress.json&lt;/code&gt; 읽기 / 쓰기 오류 가 인라인으로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="4d11088b337bf194afbbba34e3461bb6fd238912" translate="yes" xml:space="preserve">
          <source>Especially useful for CI environments.</source>
          <target state="translated">CI 환경에 특히 유용합니다.</target>
        </trans-unit>
        <trans-unit id="c2c87aeb3c9446cb9afda9709099fc6367e9171f" translate="yes" xml:space="preserve">
          <source>Even a single end-to-end test can cover a lot of the application code. For example, let&amp;rsquo;s run the following test that adds a few items, then marks one of them as completed.</source>
          <target state="translated">단일 종단 간 테스트조차도 많은 응용 프로그램 코드를 포괄 할 수 있습니다. 예를 들어 다음 테스트를 실행하여 몇 가지 항목을 추가 한 다음 그 중 하나를 완료된 것으로 표시합니다.</target>
        </trans-unit>
        <trans-unit id="070e5c4e1df907c99cad4f5f60301bb41273abf7" translate="yes" xml:space="preserve">
          <source>Even better, we can drill down into the individual source files to see what code we missed. In our example application, the main state logic is in the &lt;code&gt;src/reducers/todos.js&lt;/code&gt; file. Let&amp;rsquo;s see the code coverage in this file:</source>
          <target state="translated">또한 개별 소스 파일을 드릴 다운하여 누락 된 코드를 확인할 수 있습니다. 예제 애플리케이션에서 기본 상태 로직은 &lt;code&gt;src/reducers/todos.js&lt;/code&gt; 파일에 있습니다. 이 파일에서 코드 적용 범위를 보자.</target>
        </trans-unit>
        <trans-unit id="316c07239617168f09bbce549bb637e294cdddb8" translate="yes" xml:space="preserve">
          <source>Even if you decide to skip using a 3rd party image storage and comparison service, you can still perform visual testing. Follow the example &lt;a href=&quot;https://medium.com/norwich-node-user-group/visual-regression-testing-with-cypress-io-and-cypress-image-snapshot-99c520ccc595&quot;&gt;Visual Regression testing with Cypress and cypress-image-snapshot&lt;/a&gt; tutorial and do it all yourself.</source>
          <target state="translated">타사 이미지 저장 및 비교 서비스를 사용하지 않더라도 시각적 테스트를 수행 할 수 있습니다. &lt;a href=&quot;https://medium.com/norwich-node-user-group/visual-regression-testing-with-cypress-io-and-cypress-image-snapshot-99c520ccc595&quot;&gt;Cypress 및 cypress-image-snapshot&lt;/a&gt; tutorial을 사용한 Visual Regression 테스트 예제를 따르고 직접 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="e7ca4e8e12e18c02a22ac44bcb7517ef6ada4084" translate="yes" xml:space="preserve">
          <source>Even if your project is JavaScript only, the JavaScript specs can know about the new command by referencing the file using the special tripple slash &lt;code&gt;reference path&lt;/code&gt; comment.</source>
          <target state="translated">프로젝트가 JavaScript 전용 인 경우에도 JavaScript 스펙은 특수 삼중 슬래시 &lt;code&gt;reference path&lt;/code&gt; 주석을 사용하여 파일을 참조하여 새 명령에 대해 알 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="34febeff692095a91412c9c2164509300bda3cb0" translate="yes" xml:space="preserve">
          <source>Even more - action commands will automatically wait for their element to reach an &lt;a href=&quot;interacting-with-elements&quot;&gt;actionable state&lt;/a&gt; before failing.</source>
          <target state="translated">더욱이-액션 명령은 실패하기 전에 요소가 &lt;a href=&quot;interacting-with-elements&quot;&gt;실행 가능한 상태&lt;/a&gt; 에 도달 할 때까지 자동으로 기다립니다 .</target>
        </trans-unit>
        <trans-unit id="5e33674133df3ccb1942dae043fe37b25ee9bc2c" translate="yes" xml:space="preserve">
          <source>Even the &lt;code&gt;Initiator&lt;/code&gt; is included, which is a stack trace to what caused the XHR to be sent.</source>
          <target state="translated">심지어 &lt;code&gt;Initiator&lt;/code&gt; 전송 될 XHR 원인에 스택 추적 인에 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="b65e02a9c75ae05082f82517ba5d146b4be79ef3" translate="yes" xml:space="preserve">
          <source>Even then, it&amp;rsquo;s still possible a WebSocket message could come in&amp;hellip; so 5 minutes!</source>
          <target state="translated">그럼에도 불구하고 여전히 WebSocket 메시지가 나타날 수 있습니다&amp;hellip; 5 분!</target>
        </trans-unit>
        <trans-unit id="eb047f8f50813fbd685a9d55a025552dce04a4fe" translate="yes" xml:space="preserve">
          <source>Even then, not enough, it&amp;rsquo;s possible a &lt;code&gt;setTimeout&lt;/code&gt; could trigger&amp;hellip; 60 minutes.</source>
          <target state="translated">그럼에도 불구하고, 충분하지 않은 경우 &lt;code&gt;setTimeout&lt;/code&gt; 이 트리거 될 수 있습니다&amp;hellip; 60 분.</target>
        </trans-unit>
        <trans-unit id="6aaba616433654358f7d68d07e61e99aed209f2d" translate="yes" xml:space="preserve">
          <source>Even though Cypress runs in the browser, it automatically makes this property available for use in your tests.</source>
          <target state="translated">Cypress가 브라우저에서 실행 되더라도이 속성을 자동으로 테스트에 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="25bd6c11f0c963778ec1e7e1fc7222fe8ad6ee0e" translate="yes" xml:space="preserve">
          <source>Even though the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; is the deepest element that contains &amp;ldquo;Age&amp;rdquo;, Cypress yields &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; elements over &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">심지어 불구하고 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 가장 깊은 &quot;나이&quot;를 포함 요소, 싸이프레스 수익률이다 &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; 를 통해 요소 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="16a3ff57e8669d6ebb647842dac8efa08438293e" translate="yes" xml:space="preserve">
          <source>Even though the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; is the deepest element that contains &amp;ldquo;Search&amp;rdquo;, Cypress yields &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; elements over spans.</source>
          <target state="translated">에도 불구 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; &quot;검색&quot;을 포함하는 깊은 요소 사이프러스 수율 인 &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; 스팬 위에 소자.</target>
        </trans-unit>
        <trans-unit id="74d1d5127742b8f47d6030fa661dcfd34932aea1" translate="yes" xml:space="preserve">
          <source>Even though the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; is the deepest element that contains &amp;ldquo;Sign Out&amp;rdquo;, Cypress yields anchor elements over spans.</source>
          <target state="translated">에도 불구 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; &quot;에 기호&quot;를 포함하는 깊은 요소, 스팬 프러스 위에 앵커 요소를 산출한다.</target>
        </trans-unit>
        <trans-unit id="ec3f99a18cc580ff52b143719737d0bc996537af" translate="yes" xml:space="preserve">
          <source>Even though the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; is the deepest element that contains a &amp;ldquo;4&amp;rdquo;, Cypress automatically yields &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; elements over spans because of its &lt;a href=&quot;#Preferences&quot;&gt;preferred element order&lt;/a&gt;.</source>
          <target state="translated">에도 불구 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 는 &quot;4&quot;를 포함하는 깊은 요소, 사이프러스 자동 산출 &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; 때문에 소자의 스팬에 걸쳐 &lt;a href=&quot;#Preferences&quot;&gt;양호한 소자 순서&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0d5310bf2439662720de316fb2282fea56d8b3b7" translate="yes" xml:space="preserve">
          <source>Even though we haven&amp;rsquo;t written any tests yet - that&amp;rsquo;s okay - let&amp;rsquo;s click on &lt;code&gt;sample_spec.js&lt;/code&gt; and watch Cypress launch your browser.</source>
          <target state="translated">아직 테스트를 작성하지는 않았지만 괜찮습니다. &lt;code&gt;sample_spec.js&lt;/code&gt; 를 클릭 하고 Cypress가 브라우저를 시작하는 것을보십시오.</target>
        </trans-unit>
        <trans-unit id="d2e7b642f1543fd59199a0e516117870146d988d" translate="yes" xml:space="preserve">
          <source>Even though we return a string in our test, Cypress automatically figures out that you&amp;rsquo;ve queued commands above and does not end the test until all cy commands have finished.</source>
          <target state="translated">테스트에서 문자열을 반환하더라도 Cypress는 자동으로 사용자가 위의 명령을 대기했으며 모든 cy 명령이 완료 될 때까지 테스트를 종료하지 않는다는 것을 자동으로 알아냅니다.</target>
        </trans-unit>
        <trans-unit id="538a7cffc1912098499e098166d1acdfe6a5783e" translate="yes" xml:space="preserve">
          <source>Even when tests fail, the &lt;code&gt;Promise&lt;/code&gt; still resolves with the test results. The &lt;code&gt;Promise&lt;/code&gt; is only rejected if Cypress cannot run for some reason; for example if a binary has not been installed or it cannot find a module dependency. In that case, the &lt;code&gt;Promise&lt;/code&gt; will be rejected with a detailed error.</source>
          <target state="translated">테스트가 실패하더라도 &lt;code&gt;Promise&lt;/code&gt; 결과는 여전히 테스트 결과로 해결됩니다. &lt;code&gt;Promise&lt;/code&gt; 싸이프레스 어떤 이유로 실행할 수없는 경우에만 거부; 예를 들어 바이너리가 설치되지 않았거나 모듈 의존성을 찾을 수없는 경우. 이 경우 &lt;code&gt;Promise&lt;/code&gt; 은 자세한 오류와 함께 거부됩니다.</target>
        </trans-unit>
        <trans-unit id="83e58ad59937dd85431ce7edc11b58f8d769de48" translate="yes" xml:space="preserve">
          <source>Even without adding an assertion, we know that everything is okay! This is because many of Cypress&amp;rsquo; commands are built to fail if they don&amp;rsquo;t find what they&amp;rsquo;re expecting to find. This is known as a &lt;a href=&quot;../core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;Default Assertion&lt;/a&gt;.</source>
          <target state="translated">단언을 추가하지 않아도 모든 것이 괜찮다는 것을 알고 있습니다! 많은 Cypress 명령이 원하는 것을 찾지 못하면 실패하도록 만들어 졌기 때문입니다. 이것을 &lt;a href=&quot;../core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;기본 어설 션이라고&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="cba520496df229530fa8c523fecb833a3c475bcb" translate="yes" xml:space="preserve">
          <source>Even your non-technical collaborators can appreciate the way this reads!</source>
          <target state="translated">기술이 아닌 공동 작업자조차도 이것이 읽는 방식에 감사 할 수 있습니다!</target>
        </trans-unit>
        <trans-unit id="ad8919ace091b14011c6439cfd5e1707b58f5abd" translate="yes" xml:space="preserve">
          <source>Event</source>
          <target state="translated">Event</target>
        </trans-unit>
        <trans-unit id="d9a0263e8f89e8508419dc7101a0fe1b909f31d6" translate="yes" xml:space="preserve">
          <source>Event Cancellation</source>
          <target state="translated">이벤트 취소</target>
        </trans-unit>
        <trans-unit id="17ee02f7ce9b63351840d187299d0f76b5f9ece3" translate="yes" xml:space="preserve">
          <source>Event Firing</source>
          <target state="translated">이벤트 발생</target>
        </trans-unit>
        <trans-unit id="b21caf606a0e2496ef0f5a053cbe76bec439daaf" translate="yes" xml:space="preserve">
          <source>Event Types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5497bca58468ae64aed6c0fd921109217988db3" translate="yes" xml:space="preserve">
          <source>Events</source>
          <target state="translated">Events</target>
        </trans-unit>
        <trans-unit id="82c1c6b3f4b539d9a216b58656cd339328dddc4b" translate="yes" xml:space="preserve">
          <source>Events that are fired:</source>
          <target state="translated">해고 된 이벤트 :</target>
        </trans-unit>
        <trans-unit id="da52eba1bd92bb873eb55802ea0324199e38da3c" translate="yes" xml:space="preserve">
          <source>Events that fire</source>
          <target state="translated">발생하는 이벤트</target>
        </trans-unit>
        <trans-unit id="e9d48c3fa29cd1b85026a0bddc44e28912df51d7" translate="yes" xml:space="preserve">
          <source>Events that should not fire on non input types such as elements with &lt;code&gt;tabindex&lt;/code&gt; do not fire their &lt;code&gt;textInput&lt;/code&gt; or &lt;code&gt;input&lt;/code&gt; events. Only typing into elements which cause the actual value or text to change will fire those events.</source>
          <target state="translated">&lt;code&gt;tabindex&lt;/code&gt; 가있는 요소와 같이 비 입력 유형에서 발생해서는 안되는 이벤트는 &lt;code&gt;textInput&lt;/code&gt; 또는 &lt;code&gt;input&lt;/code&gt; 이벤트를 발생시키지 않습니다 . 실제 값이나 텍스트가 변경되도록하는 요소 만 입력하면 해당 이벤트가 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="d3c9763723437cb0418c9553bac2a22f39077299" translate="yes" xml:space="preserve">
          <source>Events that were &lt;code&gt;defaultPrevented&lt;/code&gt; may prevent other events from firing and those will show up as empty. For instance, canceling &lt;code&gt;keydown&lt;/code&gt; will not fire &lt;code&gt;keypress&lt;/code&gt; or &lt;code&gt;textInput&lt;/code&gt; or &lt;code&gt;input&lt;/code&gt;, but will fire &lt;code&gt;keyup&lt;/code&gt; (which matches the spec).</source>
          <target state="translated">이었다 이벤트 &lt;code&gt;defaultPrevented&lt;/code&gt; 이 발사에서 다른 이벤트를 방지 할 수 있으며, 그 빈으로 표시됩니다. 예를 들어 &lt;code&gt;keydown&lt;/code&gt; 을 취소 하면 &lt;code&gt;keypress&lt;/code&gt; 또는 &lt;code&gt;textInput&lt;/code&gt; 또는 &lt;code&gt;input&lt;/code&gt; 이 실행되지 않지만 &lt;code&gt;keyup&lt;/code&gt; (사양과 일치)이 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="2bb4bcadb624b3f1c5ccf23432f4522d0f284974" translate="yes" xml:space="preserve">
          <source>Every custom command you write is generally an abstraction over a series of internal commands. That means you and your team members exert much more mental effort to understand what your custom command does.</source>
          <target state="translated">작성하는 모든 사용자 정의 명령은 일반적으로 일련의 내부 명령에 대한 추상화입니다. 즉, 귀하와 귀하의 팀원은 귀하의 맞춤형 명령이 무엇인지 이해하기 위해 훨씬 더 정신적 인 노력을 기울입니다.</target>
        </trans-unit>
        <trans-unit id="6eee2af9481b18382f2ed15e769db1e4b28932dd" translate="yes" xml:space="preserve">
          <source>Every source file but 1 is covered at 100%. We can have great confidence in our application, and safely refactor the code knowing that we have a robust set of end-to-end tests.</source>
          <target state="translated">1을 제외한 모든 소스 파일은 100 %로 적용됩니다. 우리는 애플리케이션에 대해 큰 확신을 가질 수 있으며 강력한 엔드-투-엔드 테스트 세트를 가지고 있다는 사실을 알고 코드를 안전하게 리팩토링 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d130c3bba2c7cd2cc3eb07249e9d555f452fd6e3" translate="yes" xml:space="preserve">
          <source>Every test you write will include selectors for elements. To save yourself a lot of headaches, you should write selectors that are resilient to changes.</source>
          <target state="translated">작성하는 모든 테스트에는 요소 선택기가 포함됩니다. 많은 두통을 피하려면 변경 사항에 탄력적 인 선택기를 작성해야합니다.</target>
        </trans-unit>
        <trans-unit id="40fa7455656b959a33b81cf03ae0e5b3c00d8df5" translate="yes" xml:space="preserve">
          <source>Every time your tests run, you&amp;rsquo;d have to work out the complexity around starting an already running web server.</source>
          <target state="translated">테스트가 실행될 때마다 이미 실행중인 웹 서버를 시작하는 것과 관련된 복잡성을 해결해야합니다.</target>
        </trans-unit>
        <trans-unit id="f5e54e38fa222d3ef6e281ccb610ecd33efb6668" translate="yes" xml:space="preserve">
          <source>Everything else; this includes, but isn&amp;rsquo;t limited to, the following:</source>
          <target state="translated">다른 모든 것; 여기에는 다음이 포함되지만 이에 국한되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b1f2d5208c5c81ab49f2946d8ace5a2b336fa79c" translate="yes" xml:space="preserve">
          <source>Everything except for the &lt;code&gt;cypress driver&lt;/code&gt; is now minified.</source>
          <target state="translated">&lt;code&gt;cypress driver&lt;/code&gt; 제외한 모든 것이 이제 축소되었습니다.</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="cda106d93dbff058312ac5299adcb6cbbf071eb0" translate="yes" xml:space="preserve">
          <source>Example #1: Default Assertion</source>
          <target state="translated">예 # 1 : 기본 어설 션</target>
        </trans-unit>
        <trans-unit id="d3646043c0bbbc4ecbb7db5f6f77948b176d699b" translate="yes" xml:space="preserve">
          <source>Example #1: Existence and Actionability</source>
          <target state="translated">사례 # 1 : 존재와 실행 가능성</target>
        </trans-unit>
        <trans-unit id="7f2c071addd085d3b7fb47c324ea0c508644162d" translate="yes" xml:space="preserve">
          <source>Example #2: Additional Assertions</source>
          <target state="translated">예 # 2 : 추가 어설 션</target>
        </trans-unit>
        <trans-unit id="4cf4b889f372521e894a51bca1730c51da276fcc" translate="yes" xml:space="preserve">
          <source>Example #2: Reversing the Default Assertion</source>
          <target state="translated">예 # 2 : 기본 어설 션 취소</target>
        </trans-unit>
        <trans-unit id="75ce43a785a0bad5e977237a8ef35938986ac4a3" translate="yes" xml:space="preserve">
          <source>Example #3: Modifying Timeouts</source>
          <target state="translated">예 # 3 : 타임 아웃 수정</target>
        </trans-unit>
        <trans-unit id="cb0f113118ec1dd5f83253b2ddd81ed3dd43ce78" translate="yes" xml:space="preserve">
          <source>Example #3: Other Default Assertions</source>
          <target state="translated">사례 # 3 : 다른 기본 주장</target>
        </trans-unit>
        <trans-unit id="e20fe15406406c1193750bd9bd3a0aee71cb54ed" translate="yes" xml:space="preserve">
          <source>Example &lt;code&gt;.travis.yml&lt;/code&gt; config file</source>
          <target state="translated">&lt;code&gt;.travis.yml&lt;/code&gt; 구성 파일 예</target>
        </trans-unit>
        <trans-unit id="1871dd0e29111f57e365587213d50fd672171e1d" translate="yes" xml:space="preserve">
          <source>Example &lt;code&gt;circle.yml&lt;/code&gt; v2 config file</source>
          <target state="translated">&lt;code&gt;circle.yml&lt;/code&gt; v2 구성 파일 예</target>
        </trans-unit>
        <trans-unit id="95e4f7e6b45a07a97f456a3f2cf9f253a8e8ab02" translate="yes" xml:space="preserve">
          <source>Example &lt;code&gt;circle.yml&lt;/code&gt; v2 config file with &lt;code&gt;yarn&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;yarn&lt;/code&gt; &lt;code&gt;circle.yml&lt;/code&gt; v2 구성 파일 예</target>
        </trans-unit>
        <trans-unit id="bc1515e6fa46ada277f22dc81464579676446a91" translate="yes" xml:space="preserve">
          <source>Example Config</source>
          <target state="translated">구성 예</target>
        </trans-unit>
        <trans-unit id="4e8bfdee37016dc05dc3033eca4f4fa6aeac9298" translate="yes" xml:space="preserve">
          <source>Example Project</source>
          <target state="translated">프로젝트 예</target>
        </trans-unit>
        <trans-unit id="67013470cce4eefed122db16583e1484bfc70985" translate="yes" xml:space="preserve">
          <source>Example below first asserts that there are 3 elements, and then checks the text contents of each one.</source>
          <target state="translated">아래 예제는 먼저 3 개의 요소가 있다고 가정하고 각 요소의 텍스트 내용을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="6c1bc8d0049021fee3c658cec1a5f287f38659ad" translate="yes" xml:space="preserve">
          <source>Example fixture is automatically created with every project.</source>
          <target state="translated">모든 프로젝트에서 조명기 예제가 자동으로 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="c1c84102101b31e7895a904c1ecf62219bfb13a9" translate="yes" xml:space="preserve">
          <source>Example of accessing insecure content</source>
          <target state="translated">안전하지 않은 콘텐츠에 액세스하는 예</target>
        </trans-unit>
        <trans-unit id="687ea2dc8b338b1a173b77171b0ee6d2daa03308" translate="yes" xml:space="preserve">
          <source>Example of checking a hidden element</source>
          <target state="translated">숨겨진 요소를 확인하는 예</target>
        </trans-unit>
        <trans-unit id="879f79211906adc49a6382606e537e73631e018c" translate="yes" xml:space="preserve">
          <source>Example of clicking on a hidden element</source>
          <target state="translated">숨겨진 요소를 클릭하는 예</target>
        </trans-unit>
        <trans-unit id="a72d714d0391ae914eb6abd8df5e7d50eaa9c8a5" translate="yes" xml:space="preserve">
          <source>Example of showing an element in order to perform action</source>
          <target state="translated">조치를 수행하기 위해 요소를 표시하는 예</target>
        </trans-unit>
        <trans-unit id="3e4c9ab1c6a1a122f79375261c0c3e58b80fa3a4" translate="yes" xml:space="preserve">
          <source>Example project &lt;a href=&quot;https://github.com/cypress-io/cypress-example-todomvc#custom-commands&quot;&gt;cypress-example-todomvc custom commands&lt;/a&gt; uses custom commands to avoid boilerplate code.</source>
          <target state="translated">예제 프로젝트 &lt;a href=&quot;https://github.com/cypress-io/cypress-example-todomvc#custom-commands&quot;&gt;cypress-example-todomvc 사용자 정의 명령&lt;/a&gt; 은 사용자 정의 명령을 사용하여 상용구 코드를 피합니다.</target>
        </trans-unit>
        <trans-unit id="cc604bfa71e82620908be6522acdac0ccf013433" translate="yes" xml:space="preserve">
          <source>Example projects</source>
          <target state="translated">프로젝트 예</target>
        </trans-unit>
        <trans-unit id="c73d9ecb9b954f124575aed910e40cb5c40c69cb" translate="yes" xml:space="preserve">
          <source>Example support files are now automatically created with every project.</source>
          <target state="translated">이제 모든 프로젝트에서 지원 파일 예제가 자동으로 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="fbed259729114e24d3a96eb32f2bfe670fb1223b" translate="yes" xml:space="preserve">
          <source>Example using Q</source>
          <target state="translated">Q를 사용하는 예</target>
        </trans-unit>
        <trans-unit id="7634761bc3fbdbca12db3a4aa128da7bf12da86d" translate="yes" xml:space="preserve">
          <source>Example using bluebird</source>
          <target state="translated">블루 버드 사용 예</target>
        </trans-unit>
        <trans-unit id="c1aa442bf16eade0108fa19c3b02b6ed1bb1e93e" translate="yes" xml:space="preserve">
          <source>Example using jQuery deferred&amp;rsquo;s</source>
          <target state="translated">jQuery 지연을 사용하는 예</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="74ee3363c3af54336f30ee9bf21c6e43f2077a43" translate="yes" xml:space="preserve">
          <source>Examples of child commands:</source>
          <target state="translated">자식 명령의 예 :</target>
        </trans-unit>
        <trans-unit id="880599b2a0d02b71b09ce07a47b86cc30497c14f" translate="yes" xml:space="preserve">
          <source>Examples of dual commands:</source>
          <target state="translated">이중 명령의 예 :</target>
        </trans-unit>
        <trans-unit id="d204b0df57a68de79aef7f1fd315a2e7b2a9a438" translate="yes" xml:space="preserve">
          <source>Examples of parent commands:</source>
          <target state="translated">부모 명령의 예 :</target>
        </trans-unit>
        <trans-unit id="8c0d3ed4241015f9415aadcca1eb538de8674009" translate="yes" xml:space="preserve">
          <source>Examples of test cases that will error due to superdomain limitations</source>
          <target state="translated">수퍼 도메인 제한으로 인해 오류가 발생하는 테스트 사례의 예</target>
        </trans-unit>
        <trans-unit id="aff42aefbbc0310909afd6be7b156eb54bb540f2" translate="yes" xml:space="preserve">
          <source>Examples of uses for cross-origin iframes</source>
          <target state="translated">교차 출처 iframe 사용 예</target>
        </trans-unit>
        <trans-unit id="33e9034158a2364c3c5b98c0752190049b235fcf" translate="yes" xml:space="preserve">
          <source>Examples of what Cypress does under the hood:</source>
          <target state="translated">Cypress가 후드에서 수행하는 작업의 예 :</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="22245bf552f5d1e2a656f31f439a800f6c9f57de" translate="yes" xml:space="preserve">
          <source>Excluding and Including Tests</source>
          <target state="translated">테스트 제외 및 포함</target>
        </trans-unit>
        <trans-unit id="2205d33617d3487ee53d2f99d5ea8fab62b927bf" translate="yes" xml:space="preserve">
          <source>Execute a system command.</source>
          <target state="translated">시스템 명령을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="293192e5f7a60a5cbe28b76ed29b72afd3ab0c94" translate="yes" xml:space="preserve">
          <source>Execute code in &lt;a href=&quot;https://nodejs.org/&quot;&gt;Node&lt;/a&gt; via the &lt;code&gt;task&lt;/code&gt; plugin event.</source>
          <target state="translated">&lt;code&gt;task&lt;/code&gt; 플러그인 이벤트 를 통해 &lt;a href=&quot;https://nodejs.org/&quot;&gt;노드&lt;/a&gt; 에서 코드를 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="90e52bd11234a2f4997a4cb3136a71f017d930d1" translate="yes" xml:space="preserve">
          <source>Execution context</source>
          <target state="translated">실행 컨텍스트</target>
        </trans-unit>
        <trans-unit id="284fa58481d3e55b48c5f0000e3ff2086a2419ac" translate="yes" xml:space="preserve">
          <source>Existence</source>
          <target state="translated">Existence</target>
        </trans-unit>
        <trans-unit id="588d3efad476bd665ea1113c22f9fa826dddbdf5" translate="yes" xml:space="preserve">
          <source>Expand an array into multiple arguments.</source>
          <target state="translated">배열을 여러 인수로 확장하십시오.</target>
        </trans-unit>
        <trans-unit id="517e48c755df8c558e3a0004f395ad1b4a6a779a" translate="yes" xml:space="preserve">
          <source>Expand the array of aliased routes</source>
          <target state="translated">별칭 경로의 배열을 확장</target>
        </trans-unit>
        <trans-unit id="c2b75ea762de66715d0880a384408dc20c0b3c27" translate="yes" xml:space="preserve">
          <source>Expand the array of cookies</source>
          <target state="translated">쿠키 배열을 확장하십시오</target>
        </trans-unit>
        <trans-unit id="bafef844945eb3c16eb95dc63d90a555f95ac65d" translate="yes" xml:space="preserve">
          <source>Expected Binary Name(s)</source>
          <target state="translated">예상 이진 이름</target>
        </trans-unit>
        <trans-unit id="5ee30f777a419d0761dc9182ee6ecf7d6de239b9" translate="yes" xml:space="preserve">
          <source>Expected Bundle Identifier</source>
          <target state="translated">예상 번들 식별자</target>
        </trans-unit>
        <trans-unit id="a66c03cd448547b57e1fca30f9bcec2391bbb658" translate="yes" xml:space="preserve">
          <source>Expected Executable</source>
          <target state="translated">예상되는 실행 가능</target>
        </trans-unit>
        <trans-unit id="e26c182298228cb8abbe3f2ddd9eb69638d5d6ae" translate="yes" xml:space="preserve">
          <source>Expected Path</source>
          <target state="translated">예상 경로</target>
        </trans-unit>
        <trans-unit id="a23b41f77d0fb81d072c86413aa54d927a01952b" translate="yes" xml:space="preserve">
          <source>Explicit Subjects</source>
          <target state="translated">노골적인 주제</target>
        </trans-unit>
        <trans-unit id="3d69f6e534c93f0e5d5c0e0762b1a67f56a0e324" translate="yes" xml:space="preserve">
          <source>Explicit assertions are great when you want to:</source>
          <target state="translated">다음과 같은 경우 명시 적 어설 션이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="a6bc7ed5c90afc6a09277e9af44f3ba18a6f6940" translate="yes" xml:space="preserve">
          <source>Export as `CYPRESS_*`</source>
          <target state="translated">`CYPRESS_ *`로 내보내기</target>
        </trans-unit>
        <trans-unit id="0ee305a454b9b7fc3f84b4d3faf7ab6165973e05" translate="yes" xml:space="preserve">
          <source>Export cypress env variables from the command line</source>
          <target state="translated">명령 행에서 cypress env 변수 내보내기</target>
        </trans-unit>
        <trans-unit id="5aa226bf009dca3cc6b371340f08ea1acef8bbf8" translate="yes" xml:space="preserve">
          <source>Expose data stores (like in Redux) so you can programmatically alter the state of your application directly from your test code.</source>
          <target state="translated">테스트 코드에서 직접 응용 프로그램의 상태를 프로그래밍 방식으로 변경할 수 있도록 데이터 저장소 (Reux와 같은)를 노출하십시오.</target>
        </trans-unit>
        <trans-unit id="7f5899935f519c40597972d8a3546b6c97a34e4b" translate="yes" xml:space="preserve">
          <source>Exposed &lt;a href=&quot;../../api/cypress-api/iscy&quot;&gt;&lt;code&gt;Cypress.isCy()&lt;/code&gt;&lt;/a&gt; method to check if a value is a valid instance of &lt;code&gt;cy&lt;/code&gt; or a &lt;code&gt;cy&lt;/code&gt; chainable. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3822&quot;&gt;#3822&lt;/a&gt;.</source>
          <target state="translated">노출 &lt;a href=&quot;../../api/cypress-api/iscy&quot;&gt; &lt;code&gt;Cypress.isCy()&lt;/code&gt; &lt;/a&gt; 값의 유효 인스턴스의 경우에있어서 조사하는 &lt;code&gt;cy&lt;/code&gt; 또는 &lt;code&gt;cy&lt;/code&gt; 체인 방식이. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3822&quot;&gt;# 3822&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="97816fcca80f877e1dd8c8d4a9b6746975f3cd76" translate="yes" xml:space="preserve">
          <source>Exposed &lt;code&gt;Cypress.Dom.isHidden&lt;/code&gt; which holds the logic for determining an element&amp;rsquo;s visibility. Modify this to change the rules.</source>
          <target state="translated">노출 된 &lt;code&gt;Cypress.Dom.isHidden&lt;/code&gt; 은 요소의 가시성을 결정하는 논리를 보유합니다. 규칙을 변경하려면 이것을 수정하십시오.</target>
        </trans-unit>
        <trans-unit id="34f1aaf7cb56bdc17b80540dea6988478e8416f6" translate="yes" xml:space="preserve">
          <source>Exposed &lt;code&gt;visitTimeout&lt;/code&gt; and &lt;code&gt;requestTimeout&lt;/code&gt;&lt;a href=&quot;configuration&quot;&gt;configuration&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;visitTimeout&lt;/code&gt; 및 &lt;code&gt;requestTimeout&lt;/code&gt; &lt;a href=&quot;configuration&quot;&gt;구성이&lt;/a&gt; 노출 되었습니다 .</target>
        </trans-unit>
        <trans-unit id="8a6541ac0205de7e153f9bdde35833e5943314f3" translate="yes" xml:space="preserve">
          <source>Exposing Cypress Binary should no longer be necessary when cypress is locally installed. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/379&quot;&gt;#379&lt;/a&gt;.</source>
          <target state="translated">Cypress가 로컬에 설치된 경우 Cypress 바이너리를 더 이상 노출 할 필요가 없습니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/379&quot;&gt;# 379&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e718c76626048f58de044a2f8c12f3bab9df0749" translate="yes" xml:space="preserve">
          <source>Extending other testing frameworks</source>
          <target state="translated">다른 테스트 프레임 워크 확장</target>
        </trans-unit>
        <trans-unit id="aff31dec6da157357b783dcfac904369b48b36fc" translate="yes" xml:space="preserve">
          <source>Extension policies: &lt;code&gt;ExtensionInstallBlacklist, ExtensionInstallWhitelist, ExtensionInstallForcelist, ExtensionInstallSources, ExtensionAllowedTypes, ExtensionAllowInsecureUpdates, ExtensionSettings, UninstallBlacklistedExtensions&lt;/code&gt;</source>
          <target state="translated">확장 정책 : &lt;code&gt;ExtensionInstallBlacklist, ExtensionInstallWhitelist, ExtensionInstallForcelist, ExtensionInstallSources, ExtensionAllowedTypes, ExtensionAllowInsecureUpdates, ExtensionSettings, UninstallBlacklistedExtensions&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="494df28871f4062b348ebe4435b410b3dce90c80" translate="yes" xml:space="preserve">
          <source>Extensive memory profiling has been done and Cypress has implemented several strategies for aggressively causing garbage collection. The ebugging tools (which allow you to walk back in time through DOM snapshots, or access objects from previous tests) could exhaust all available emory in previous versions. This likely never affected most users, but if a user ran 1000&amp;rsquo;s of tests (which have been written in Cypress) it ould bomb. Now Cypress only stores data for up to 50 tests, and will begin purging data past that. When run in the terminal, Cypress doesn&amp;rsquo;t apply any of its debugging tools, so CI will be unaffected.</source>
          <target state="translated">광범위한 메모리 프로파일 링이 완료되었으며 Cypress는 가비지 수집을 적극적으로 유발하기위한 몇 가지 전략을 구현했습니다. 디버깅 도구 (DOM 스냅 샷을 통해 시간을 거슬러 올라가거나 이전 테스트의 오브젝트에 액세스 할 수 있도록 함)는 이전 버전에서 사용 가능한 모든에 모리를 소진 할 수 있습니다. 이는 대부분의 사용자에게 영향을 미치지 않았지만 사용자가 1000 번의 테스트 (Cypress로 작성)를 실행하면 폭발 할 수 있습니다. 이제 Cypress는 최대 50 개의 테스트에 대한 데이터 만 저장하고 그 이후의 데이터 제거를 시작합니다. 터미널에서 실행될 때 Cypress는 디버깅 도구를 적용하지 않으므로 CI는 영향을받지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d7470bcae7dc95c1672e3376b1d6f69778f458ce" translate="yes" xml:space="preserve">
          <source>External Navigation</source>
          <target state="translated">외부 탐색</target>
        </trans-unit>
        <trans-unit id="2af280979e642a405f24bf2e6b6503a218b35f10" translate="yes" xml:space="preserve">
          <source>Extra whitespace and quotations are now stripped from the &lt;code&gt;CYPRESS_INSTALL_BINARY&lt;/code&gt; environment variable to help prevent some unexpected results when set in Windows. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4506&quot;&gt;#4506&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;CYPRESS_INSTALL_BINARY&lt;/code&gt; 환경 변수 에서 추가 공백과 따옴표가 제거 되어 Windows에서 설정 될 때 예기치 않은 결과가 발생하지 않도록합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4506&quot;&gt;# 4506&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="89067fa664cb37a8a9e475b99e5cf190db554dca" translate="yes" xml:space="preserve">
          <source>Failing a hook will no longer continue to count the duration forever.</source>
          <target state="translated">갈고리 실패는 더 이상 지속 시간을 영원히 계산하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c940af38cb35879503e53721ac8014d87ca75a1d" translate="yes" xml:space="preserve">
          <source>Failing tests which become passing will automatically collapse again.</source>
          <target state="translated">실패한 테스트는 자동으로 다시 축소됩니다.</target>
        </trans-unit>
        <trans-unit id="e9c4bd1d829292dc8565f6007a335c96eb1f722c" translate="yes" xml:space="preserve">
          <source>Failure messages are much more precise.</source>
          <target state="translated">실패 메시지는 훨씬 더 정확합니다.</target>
        </trans-unit>
        <trans-unit id="3eec15825d37016fd28fda8986cbc917e7a33c68" translate="yes" xml:space="preserve">
          <source>Failures</source>
          <target state="translated">Failures</target>
        </trans-unit>
        <trans-unit id="79b1b853fcf18ff708b48a26d6bca547168086f2" translate="yes" xml:space="preserve">
          <source>Fast, &amp;lt; 20ms response times</source>
          <target state="translated">20ms 미만의 빠른 응답 시간</target>
        </trans-unit>
        <trans-unit id="8d8701b6c18329b6a2215e2ed7ea8428d157b3ee" translate="yes" xml:space="preserve">
          <source>Fast, easy and reliable visual UI testing with Cypress</source>
          <target state="translated">Cypress를 통한 빠르고 쉽고 안정적인 시각적 UI 테스트</target>
        </trans-unit>
        <trans-unit id="b8dd84b887712a47a223e7acb621659657045025" translate="yes" xml:space="preserve">
          <source>Favor of &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; over other deeper elements</source>
          <target state="translated">다른보다 깊은 요소보다 &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; 의 선호</target>
        </trans-unit>
        <trans-unit id="bf73c4da1a11de431287bb2178a27739b085cd2a" translate="yes" xml:space="preserve">
          <source>Favor of &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; over other deeper elements</source>
          <target state="translated">다른 요소보다 &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; 선호</target>
        </trans-unit>
        <trans-unit id="00bd3404c5abcb1cca7ae893772036a47f83d02b" translate="yes" xml:space="preserve">
          <source>Favor of &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; over other deeper elements</source>
          <target state="translated">다른 심층 요소보다 &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; 선호</target>
        </trans-unit>
        <trans-unit id="ad565d9d01d0e0bf91fd6a8532f6d81613338901" translate="yes" xml:space="preserve">
          <source>Feature</source>
          <target state="translated">Feature</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">Features</target>
        </trans-unit>
        <trans-unit id="5df81ffa82179b458e1d55e350db9d88805a69b2" translate="yes" xml:space="preserve">
          <source>Features:</source>
          <target state="translated">Features:</target>
        </trans-unit>
        <trans-unit id="b2da05997204759c0568480dcc216c1f835ad8c5" translate="yes" xml:space="preserve">
          <source>Feel free to &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html&quot;&gt;explore these additional logging in&lt;/a&gt; recipes.</source>
          <target state="translated">레시피 &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html&quot;&gt;에서 이러한 추가 로깅을&lt;/a&gt; 자유롭게 탐색하십시오 .</target>
        </trans-unit>
        <trans-unit id="66de98b66dd6c45b26036329406669348c695928" translate="yes" xml:space="preserve">
          <source>Feel free to submit your published plugins to our &lt;a href=&quot;../../plugins/index&quot;&gt;list of plugins&lt;/a&gt;.</source>
          <target state="translated">게시 된 플러그인을 플러그인 &lt;a href=&quot;../../plugins/index&quot;&gt;목록에&lt;/a&gt; 제출하십시오 .</target>
        </trans-unit>
        <trans-unit id="663da9347806aa189f920ceb8b6f5cd33e8f3793" translate="yes" xml:space="preserve">
          <source>File changes</source>
          <target state="translated">파일 변경</target>
        </trans-unit>
        <trans-unit id="7687744db8976c35166c825d15906dc94662741b" translate="yes" xml:space="preserve">
          <source>File events</source>
          <target state="translated">파일 이벤트</target>
        </trans-unit>
        <trans-unit id="35c5bd3a1f18fe1dd0f0628bb953a4183220028e" translate="yes" xml:space="preserve">
          <source>File object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feffac916d35a0e2a6b23d0031377f4f282551f9" translate="yes" xml:space="preserve">
          <source>File system flag as used with &lt;a href=&quot;https://nodejs.org/api/fs.html#fs_file_system_flags&quot;&gt;&lt;code&gt;fs.writeFile&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://nodejs.org/api/fs.html#fs_file_system_flags&quot;&gt; &lt;code&gt;fs.writeFile&lt;/code&gt; &lt;/a&gt; 과 함께 사용되는 파일 시스템 플래그</target>
        </trans-unit>
        <trans-unit id="e91f50eead81f93d83448a8f1b714b149e54d231" translate="yes" xml:space="preserve">
          <source>File watching is fixed (again) when changing between specs. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1018&quot;&gt;#1018&lt;/a&gt;.</source>
          <target state="translated">사양 변경시 파일 다시보기가 수정되었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1018&quot;&gt;# 1018&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="a3cbb98ddf5ee976bc1c3be5221d66ce3ca2e867" translate="yes" xml:space="preserve">
          <source>Filename</source>
          <target state="translated">Filename</target>
        </trans-unit>
        <trans-unit id="6ce6c512ea433a7fc5c8841628e7696cd0ff7f2b" translate="yes" xml:space="preserve">
          <source>Files</source>
          <target state="translated">Files</target>
        </trans-unit>
        <trans-unit id="e75c9effd39648002ee3fa4279bf21407b3ca86e" translate="yes" xml:space="preserve">
          <source>Fill in and submit the OSS plan request form.</source>
          <target state="translated">OSS 계획 요청 양식을 작성하여 제출하십시오.</target>
        </trans-unit>
        <trans-unit id="feb080a9f7cb2c3f7fe88c9ed4be9c41ef934c26" translate="yes" xml:space="preserve">
          <source>Fill in the name of your project (this is only for display purposes and can be changed later).</source>
          <target state="translated">프로젝트 이름을 입력하십시오 (표시 용으로 만 사용되며 나중에 변경할 수 있음).</target>
        </trans-unit>
        <trans-unit id="a865659c5e8630a023fa6bf42dbaabaf6c0c4f40" translate="yes" xml:space="preserve">
          <source>Fill in their email and select their &lt;a href=&quot;#User-roles&quot;&gt;role&lt;/a&gt; then click &lt;strong&gt;Invite User&lt;/strong&gt;&lt;em&gt;Note: only &amp;lsquo;owners can give other user&amp;rsquo;s &amp;lsquo;owner&amp;rsquo; access.&lt;/em&gt;</source>
          <target state="translated">이메일을 작성하고 &lt;a href=&quot;#User-roles&quot;&gt;역할을&lt;/a&gt; 선택한 다음 &lt;strong&gt;사용자 초대&lt;/strong&gt; 를 클릭 &lt;em&gt;하십시오. 참고 : '소유자 만 다른 사용자의'소유자 '액세스 권한을 부여 할 수 있습니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="098832ec24832f68e39ac3c1aa619064c4962e5c" translate="yes" xml:space="preserve">
          <source>Filter DOM element(s) from a set of DOM elements.</source>
          <target state="translated">DOM 요소 세트에서 DOM 요소를 필터링합니다.</target>
        </trans-unit>
        <trans-unit id="b50b864ca2457f8d6f9fc854473b9edbbd945cd2" translate="yes" xml:space="preserve">
          <source>Filter the current subject to the elements with the class &amp;lsquo;active&amp;rsquo;</source>
          <target state="translated">'active'클래스를 사용하여 현재 주제를 요소로 필터링하십시오.</target>
        </trans-unit>
        <trans-unit id="a27ab78e842f8d231922bc0a6c4ebfcbe7e1e1e2" translate="yes" xml:space="preserve">
          <source>Filtered out Ajax requests for &lt;code&gt;.js&lt;/code&gt;, &lt;code&gt;.html&lt;/code&gt;, &lt;code&gt;.css&lt;/code&gt; files by default.</source>
          <target state="translated">기본적으로 &lt;code&gt;.js&lt;/code&gt; , &lt;code&gt;.html&lt;/code&gt; , &lt;code&gt;.css&lt;/code&gt; 파일에 대한 Ajax 요청을 필터링했습니다 .</target>
        </trans-unit>
        <trans-unit id="ad2cf4e08bb232e200ef4bc511c6b34132810357" translate="yes" xml:space="preserve">
          <source>Final run status (passed, failed, etc)</source>
          <target state="translated">최종 실행 상태 (통과, 실패 등)</target>
        </trans-unit>
        <trans-unit id="688b6ff3fc931c6dd9c36d8b51fdc1ea3590d8a2" translate="yes" xml:space="preserve">
          <source>Finally tracked down and fixed edge case causing empty view to display when tests were not empty. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/13&quot;&gt;#13&lt;/a&gt;</source>
          <target state="translated">테스트가 비어 있지 않은 경우 빈 뷰가 표시되도록 추적하고 고정 된 대소 문자를 표시합니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/13&quot;&gt;# 13&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="37a5f5552afd89b23d9c52a20feccb3d490f76b6" translate="yes" xml:space="preserve">
          <source>Finally, we support creating your own custom reporters or using any kind of 3rd party reporter.</source>
          <target state="translated">마지막으로, 우리는 당신의 자신의 사용자 정의 기자를 만들거나 모든 종류의 타사 기자를 사용하는 것을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="f7e11838bb265e408c3b20a233e6d4ca384ba884" translate="yes" xml:space="preserve">
          <source>Find 5 elements with the given data attribute</source>
          <target state="translated">주어진 데이터 속성을 가진 5 개의 요소 찾기</target>
        </trans-unit>
        <trans-unit id="92368cf8c0b0b17d5bfdb96f8c843e1b7832f6ce" translate="yes" xml:space="preserve">
          <source>Find all of the &lt;code&gt;.active&lt;/code&gt; element&amp;rsquo;s ancestors until &lt;code&gt;.nav&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.nav&lt;/code&gt; 까지 &lt;code&gt;.active&lt;/code&gt; 요소의 모든 조상 찾기</target>
        </trans-unit>
        <trans-unit id="8c541c51d6a1a5c57200fc70b87a281be5d1da8d" translate="yes" xml:space="preserve">
          <source>Find all of the element&amp;rsquo;s siblings before &lt;code&gt;#nuts&lt;/code&gt; until &lt;code&gt;#veggies&lt;/code&gt;</source>
          <target state="translated">전에 요소의 형제 자매를 모두 찾을 수 &lt;code&gt;#nuts&lt;/code&gt; 까지 &lt;code&gt;#veggies&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9f61919f1581dec2bf2d5cf12c24826c0f271991" translate="yes" xml:space="preserve">
          <source>Find all of the element&amp;rsquo;s siblings before &lt;code&gt;.third&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.third&lt;/code&gt; 전에 요소의 형제를 모두 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="cf397003d132ad643c0e26fc7fbcf78ecc493ec5" translate="yes" xml:space="preserve">
          <source>Find all of the element&amp;rsquo;s siblings following &lt;code&gt;#veggies&lt;/code&gt; until &lt;code&gt;#nuts&lt;/code&gt;</source>
          <target state="translated">다음 요소의 형제 자매 모두 찾기 &lt;code&gt;#veggies&lt;/code&gt; 까지 &lt;code&gt;#nuts&lt;/code&gt; 을</target>
        </trans-unit>
        <trans-unit id="a4d29db1950969e3784a8c02e121a375d800fa05" translate="yes" xml:space="preserve">
          <source>Find all of the element&amp;rsquo;s siblings following &lt;code&gt;.second&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.second&lt;/code&gt; 다음에 나오는 요소의 형제를 모두 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="81b19f789476d7ab74f3c3a8ad986e98fa7c56fb" translate="yes" xml:space="preserve">
          <source>Find all of the following siblings of each li. Keep only the ones with a class &lt;code&gt;selected&lt;/code&gt;</source>
          <target state="translated">각 li의 다음 형제를 모두 찾으십시오. 수업이 &lt;code&gt;selected&lt;/code&gt; 사람 만 유지</target>
        </trans-unit>
        <trans-unit id="c992ea11a8cf058b4435966e028bb9f7a37ed95f" translate="yes" xml:space="preserve">
          <source>Find all of the previous siblings of each &lt;code&gt;li&lt;/code&gt;. Keep only the ones with a class &lt;code&gt;selected&lt;/code&gt;</source>
          <target state="translated">각 &lt;code&gt;li&lt;/code&gt; 의 이전 형제를 모두 찾으십시오 . 수업이 &lt;code&gt;selected&lt;/code&gt; 사람 만 유지</target>
        </trans-unit>
        <trans-unit id="80ac7d74405f965af6b5783c7d44735681a64289" translate="yes" xml:space="preserve">
          <source>Find an element by its selector</source>
          <target state="translated">선택기로 요소 찾기</target>
        </trans-unit>
        <trans-unit id="6104679c51c71ca5e3c4c8420302b383f5606442" translate="yes" xml:space="preserve">
          <source>Find an element by its selector.</source>
          <target state="translated">선택기로 요소를 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="adfac6dd422443d147406aa7dc4c9bde585b6026" translate="yes" xml:space="preserve">
          <source>Find the 2nd element within the elements</source>
          <target state="translated">요소 내에서 두 번째 요소 찾기</target>
        </trans-unit>
        <trans-unit id="4bd1d71d3c4462c2c514b8869c373720f113aefe" translate="yes" xml:space="preserve">
          <source>Find the 2nd from the last element within the elements</source>
          <target state="translated">요소 내의 마지막 요소에서 두 번째 요소 찾기</target>
        </trans-unit>
        <trans-unit id="66febaf0d0deb961859132d85eec19f706c7fd31" translate="yes" xml:space="preserve">
          <source>Find the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; with class &lt;code&gt;post-body&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;post-body&lt;/code&gt; 클래스가 있는 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 을 찾으십시오 .</target>
        </trans-unit>
        <trans-unit id="d10cbcf8128ccc542cc5f4d349272af73f1982d7" translate="yes" xml:space="preserve">
          <source>Find the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; with class &lt;code&gt;post-title&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;post-title&lt;/code&gt; 클래스가 있는 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 을 찾으십시오 .</target>
        </trans-unit>
        <trans-unit id="5aa7a7a24fec1dd97f14855f0347bdb63199299d" translate="yes" xml:space="preserve">
          <source>Find the &lt;code&gt;h1&lt;/code&gt; tag, ensure it contains the text &amp;ldquo;My First Post&amp;rdquo;.</source>
          <target state="translated">&lt;code&gt;h1&lt;/code&gt; 태그를 찾아서 &amp;ldquo;My First Post&amp;rdquo;라는 텍스트가 포함되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="0a629d480b77f87962de841533ac568613cca727" translate="yes" xml:space="preserve">
          <source>Find the &lt;code&gt;input[type='submit']&lt;/code&gt; by value</source>
          <target state="translated">값으로 &lt;code&gt;input[type='submit']&lt;/code&gt; 을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="b7c01ef4267a8207f2efc0f895e23cbf8c0c9dab" translate="yes" xml:space="preserve">
          <source>Find the TypeScript definition for the results object in the &lt;a href=&quot;https://github.com/cypress-io/cypress/tree/develop/cli/types&quot;&gt;&lt;code&gt;cypress/cli/types&lt;/code&gt; folder&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/cypress-io/cypress/tree/develop/cli/types&quot;&gt; &lt;code&gt;cypress/cli/types&lt;/code&gt; 폴더&lt;/a&gt; 에서 결과 객체에 대한 TypeScript 정의를 찾으십시오 .</target>
        </trans-unit>
        <trans-unit id="10df2b3516f7e33c34a15898a97d21e45db73ca2" translate="yes" xml:space="preserve">
          <source>Find the closest element of &lt;code&gt;li.active&lt;/code&gt; with the class &amp;lsquo;nav&amp;rsquo;</source>
          <target state="translated">클래스 'nav'를 사용하여 &lt;code&gt;li.active&lt;/code&gt; 의 가장 가까운 요소를 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="9903e70c221c495e32ab6ceb17ffcbc3dd4c75b2" translate="yes" xml:space="preserve">
          <source>Find the closest element of the &lt;code&gt;.error&lt;/code&gt; with the class &amp;lsquo;banner&amp;rsquo;</source>
          <target state="translated">'banner'클래스 에서 &lt;code&gt;.error&lt;/code&gt; 의 가장 가까운 요소를 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="075f836a43dce9616ea5659aa81eaa8ad295ba3f" translate="yes" xml:space="preserve">
          <source>Find the complete CircleCI v2 example with caching and artifact upload in the &lt;a href=&quot;https://github.com/cypress-io/cypress-example-docker-circle&quot;&gt;cypress-example-docker-circle&lt;/a&gt; repo.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/cypress-io/cypress-example-docker-circle&quot;&gt;cypress-example-docker-circle&lt;/a&gt; repo 에서 캐싱 및 아티팩트 업로드가 포함 된 완전한 CircleCI v2 예제를 찾으십시오 .</target>
        </trans-unit>
        <trans-unit id="d1cc283dc3702c8d3e6d222ab076e9bf3b77445a" translate="yes" xml:space="preserve">
          <source>Find the dropdown-menu and click it</source>
          <target state="translated">드롭 다운 메뉴를 찾아 클릭하십시오</target>
        </trans-unit>
        <trans-unit id="ebe6d0a917538cd5b8200bdc5503b9bfd7c54a8a" translate="yes" xml:space="preserve">
          <source>Find the element containing the text &lt;code&gt;Submit&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Submit&lt;/code&gt; 텍스트가 포함 된 요소를 찾으 십시오 .</target>
        </trans-unit>
        <trans-unit id="f45aaee6ddbabbbed5ee653102c34f6e299a862f" translate="yes" xml:space="preserve">
          <source>Find the element next to &lt;code&gt;.second&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.second&lt;/code&gt; 옆의 요소 찾기</target>
        </trans-unit>
        <trans-unit id="b4bab536a6c5451fa8c798585ff1ed23fc2d2733" translate="yes" xml:space="preserve">
          <source>Find the element with content: &lt;code&gt;type&lt;/code&gt;</source>
          <target state="translated">내용이있는 요소 찾기 : &lt;code&gt;type&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a9fbb7af5c1b67383d92e9b8b2376530e800a405" translate="yes" xml:space="preserve">
          <source>Find the first &lt;code&gt;li&lt;/code&gt; descendent within a &lt;code&gt;ul&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ul&lt;/code&gt; 에서 첫 번째 &lt;code&gt;li&lt;/code&gt; 자손을 찾으십시오</target>
        </trans-unit>
        <trans-unit id="9a5dc13574576534052754b465d51599a18744fe" translate="yes" xml:space="preserve">
          <source>Find the first element containing a number</source>
          <target state="translated">숫자가 포함 된 첫 번째 요소 찾기</target>
        </trans-unit>
        <trans-unit id="4ffee2601a6f1877a2e04498faf28aaf834aa5e2" translate="yes" xml:space="preserve">
          <source>Find the first element containing some text</source>
          <target state="translated">텍스트가 포함 된 첫 번째 요소 찾기</target>
        </trans-unit>
        <trans-unit id="303d529ce52ae406adef3293db17ef34a6013e64" translate="yes" xml:space="preserve">
          <source>Find the first element with text matching the regular expression</source>
          <target state="translated">정규식과 일치하는 텍스트가있는 첫 번째 요소 찾기</target>
        </trans-unit>
        <trans-unit id="7b9ad828e76201eaec43c5bd8b7495a6b5e9aa1b" translate="yes" xml:space="preserve">
          <source>Find the previous element of the element with class of &lt;code&gt;active&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;active&lt;/code&gt; 클래스가있는 요소의 이전 요소 찾기</target>
        </trans-unit>
        <trans-unit id="b050e5303f0aeff67972b597916c20cb954e472e" translate="yes" xml:space="preserve">
          <source>Find the previous element with a class of &lt;code&gt;active&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;active&lt;/code&gt; 클래스가있는 이전 요소 찾기</target>
        </trans-unit>
        <trans-unit id="f48ae5b1727499efa01b744170218b06cbf5a048" translate="yes" xml:space="preserve">
          <source>Find the very next sibling of each li. Keep only the ones with a class &lt;code&gt;selected&lt;/code&gt;</source>
          <target state="translated">각 li의 다음 형제를 찾으십시오. 수업이 &lt;code&gt;selected&lt;/code&gt; 사람 만 유지</target>
        </trans-unit>
        <trans-unit id="2d913fabe6d31a552f869448ec77af59ce7ab7ef" translate="yes" xml:space="preserve">
          <source>Finding Selectors</source>
          <target state="translated">선택기 찾기</target>
        </trans-unit>
        <trans-unit id="3716d23e9ad7315ba3e5e070513375357d405fce" translate="yes" xml:space="preserve">
          <source>Fire the event at a descendent</source>
          <target state="translated">자손에게 이벤트를 시작</target>
        </trans-unit>
        <trans-unit id="d0c8fbf533787f205ef74cb4ef685fa5336a95bd" translate="yes" xml:space="preserve">
          <source>Fire the event at the desired coordinates.</source>
          <target state="translated">원하는 좌표로 이벤트를 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="3297c2c690e3329a34b567de00181d54c48fdc24" translate="yes" xml:space="preserve">
          <source>Fires after all your resources have finished loading after a page transition. This fires at the exact same time as a &lt;code&gt;cy.visit()&lt;/code&gt;&lt;code&gt;onLoad&lt;/code&gt; callback.</source>
          <target state="translated">페이지 전환 후 모든 리소스로드가 완료되면 시작됩니다. 이것은 &lt;code&gt;cy.visit()&lt;/code&gt; &lt;code&gt;onLoad&lt;/code&gt; 콜백 과 정확히 동시에 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="65bcba53d3ddc0803f41e82a2e2197390e4654af" translate="yes" xml:space="preserve">
          <source>Fires after the test and all &lt;strong&gt;afterEach&lt;/strong&gt; and &lt;strong&gt;after&lt;/strong&gt; hooks run.</source>
          <target state="translated">테스트 및 결국 화재 &lt;strong&gt;afterEach&lt;/strong&gt; 및 &lt;strong&gt;후&lt;/strong&gt; 실행 후크.</target>
        </trans-unit>
        <trans-unit id="b3b542efbb04e9cc7735acf1c6261c28a91865b0" translate="yes" xml:space="preserve">
          <source>Fires as the page begins to load, but before any of your applications JavaScript has executed. This fires at the exact same time as &lt;code&gt;cy.visit()&lt;/code&gt;&lt;code&gt;onBeforeLoad&lt;/code&gt; callback. Useful to modify the window on a page transition.</source>
          <target state="translated">페이지가로드되기 시작하지만 애플리케이션이 실행되기 전에 시작됩니다. 이것은 &lt;code&gt;cy.visit()&lt;/code&gt; &lt;code&gt;onBeforeLoad&lt;/code&gt; 콜백 과 정확히 동시에 발생합니다 . 페이지 전환시 창을 수정하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="d9f9dd1b33251212c25a404143902e006ee99261" translate="yes" xml:space="preserve">
          <source>Fires before the test and all &lt;strong&gt;before&lt;/strong&gt; and &lt;strong&gt;beforeEach&lt;/strong&gt; hooks run.</source>
          <target state="translated">테스트 &lt;strong&gt;전&lt;/strong&gt; 및 &lt;strong&gt;각&lt;/strong&gt; 후크 &lt;strong&gt;전&lt;/strong&gt; / &lt;strong&gt;후에 발생&lt;/strong&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="e3a3efcfbcbc43c00380e65ca6e41d27711c6f1b" translate="yes" xml:space="preserve">
          <source>Fires when a cy command is first invoked and enqueued to be run later. Useful for debugging purposes if you&amp;rsquo;re confused about the order in which commands will execute.</source>
          <target state="translated">cy 명령이 처음 호출되고 나중에 실행되도록 대기열에 추가 될 때 발생합니다. 명령 실행 순서가 혼란 스러울 경우 디버깅 목적으로 유용합니다.</target>
        </trans-unit>
        <trans-unit id="2dec5789ec4fa855297114ba75e3f8339135c7a5" translate="yes" xml:space="preserve">
          <source>Fires when an uncaught exception occurs in your application. Cypress will fail the test when this fires. Return &lt;code&gt;false&lt;/code&gt; from this event and Cypress will not fail the test. Also useful for debugging purposes because the actual &lt;code&gt;error&lt;/code&gt; instance is provided to you.</source>
          <target state="translated">응용 프로그램에서 포착되지 않은 예외가 발생하면 발생합니다. 이것이 발생하면 Cypress가 테스트에 실패합니다. 이 이벤트에서 &lt;code&gt;false&lt;/code&gt; 를 반환 하면 Cypress가 테스트에 실패하지 않습니다. 실제 &lt;code&gt;error&lt;/code&gt; 인스턴스가 제공 되므로 디버깅 목적으로도 유용 합니다.</target>
        </trans-unit>
        <trans-unit id="8ca3ed7f57c3d04ed29b48a431210d5cfefd574d" translate="yes" xml:space="preserve">
          <source>Fires when cy begins actually running and executing your command. Useful for debugging and understanding how the command queue is async.</source>
          <target state="translated">cy가 실제로 명령을 실행하고 실행하기 시작할 때 발생합니다. 명령 대기열의 비동기 방식을 디버깅하고 이해하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="8cf570e78794600150280ae9f2447cadfed546db" translate="yes" xml:space="preserve">
          <source>Fires when cy finishes running and executing your command. Useful for debugging and understanding how commands are handled.</source>
          <target state="translated">cy가 명령 실행 및 실행을 마치면 발생합니다. 명령 처리 방법을 디버깅하고 이해하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="afd7817fa57e4ccf201566aefa2db46574c9786d" translate="yes" xml:space="preserve">
          <source>Fires when the test has failed. It is technically possible to prevent the test from actually failing by binding to this event and invoking an async &lt;code&gt;done&lt;/code&gt; callback. However this is &lt;strong&gt;strongly discouraged&lt;/strong&gt;. Tests should never legitimately fail. This event exists because it&amp;rsquo;s extremely useful for debugging purposes.</source>
          <target state="translated">테스트가 실패하면 발동됩니다. 이 이벤트에 바인딩하고 비동기 &lt;code&gt;done&lt;/code&gt; 콜백을 호출하여 테스트가 실제로 실패하지 않도록하는 것은 기술적으로 가능합니다 . 그러나 이것은 &lt;strong&gt;권장하지 않습니다&lt;/strong&gt; . 테스트는 합법적으로 실패해서는 안됩니다. 이 이벤트는 디버깅 목적으로 매우 유용하기 때문에 존재합니다.</target>
        </trans-unit>
        <trans-unit id="20fcf72a456dcba1707986a3154aceaea166e797" translate="yes" xml:space="preserve">
          <source>Fires when your app calls the global &lt;code&gt;window.alert()&lt;/code&gt; method. Cypress will auto accept alerts. You cannot change this behavior.</source>
          <target state="translated">앱이 전역 &lt;code&gt;window.alert()&lt;/code&gt; 메서드를 호출하면 시작 됩니다. Cypress는 경고를 자동 수락합니다. 이 동작은 변경할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="befd5f340a17860fcb8ef526396363696792b89c" translate="yes" xml:space="preserve">
          <source>Fires when your app calls the global &lt;code&gt;window.confirm()&lt;/code&gt; method. Cypress will auto accept confirmations. Return &lt;code&gt;false&lt;/code&gt; from this event and the confirmation will be canceled.</source>
          <target state="translated">앱이 전역 &lt;code&gt;window.confirm()&lt;/code&gt; 메서드를 호출하면 시작 됩니다. Cypress는 확인을 자동 수락합니다. 이 이벤트에서 &lt;code&gt;false&lt;/code&gt; 를 반환 하면 확인이 취소됩니다.</target>
        </trans-unit>
        <trans-unit id="20583e05027ccd1f90b17c009fed01d0cb0ba65a" translate="yes" xml:space="preserve">
          <source>Fires when your application is about to navigate away. The real event object is provided to you. Your app may have set a &lt;code&gt;returnValue&lt;/code&gt; on the event, which is useful to assert on.</source>
          <target state="translated">응용 프로그램이 멀리 이동하려고 할 때 발생합니다. 실제 이벤트 객체가 제공됩니다. 앱 에서 이벤트에 대해 &lt;code&gt;returnValue&lt;/code&gt; 를 설정했을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="63603917c7fb0ef19543583000876125715fc732" translate="yes" xml:space="preserve">
          <source>Fires when your application is has unloaded and is navigating away. The real event object is provided to you. This event is not cancelable.</source>
          <target state="translated">애플리케이션이 언로드되어 탐색 중일 때 발생합니다. 실제 이벤트 객체가 제공됩니다. 이 이벤트는 취소 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="395a5ae275d0ea21c36c59f721485c25305c611e" translate="yes" xml:space="preserve">
          <source>Fires whenever &lt;strong&gt;Cypress&lt;/strong&gt; is scrolling your application. This event is fired when Cypress is &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;waiting for and calculating actionability&lt;/a&gt;. It will scroll to &amp;lsquo;uncover&amp;rsquo; elements currently being covered. This event is extremely useful to debug why Cypress may think an element is not interactive.</source>
          <target state="translated">&lt;strong&gt;Cypress&lt;/strong&gt; 가 애플리케이션을 스크롤 할 때마다 실행됩니다. 이 이벤트는 Cypress가 &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;실행 가능성을 기다리고 계산할&lt;/a&gt; 때 시작됩니다 . 현재 커버되고있는 'uncover'요소로 스크롤됩니다. 이 이벤트는 Cypress가 요소가 대화 형이 아닌 것으로 생각하는 이유를 디버그하는 데 매우 유용합니다.</target>
        </trans-unit>
        <trans-unit id="dc6f542e38ecdc0178d0083539cb84e9e36f9f9e" translate="yes" xml:space="preserve">
          <source>Fires whenever Cypress detects that your application&amp;rsquo;s URL has changed.</source>
          <target state="translated">Cypress가 애플리케이션의 URL이 변경되었음을 감지 할 때마다 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="18fdf04e181c4d29f74c1cff8247a77392a18edf" translate="yes" xml:space="preserve">
          <source>Fires whenever a command begins its &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retrying routines&lt;/a&gt;. This is called on the trailing edge after Cypress has internally waited for the retry interval. Useful to understand &lt;strong&gt;why&lt;/strong&gt; a command is retrying, and generally includes the actual error causing the retry to happen. When commands fail the final error is the one that actually bubbles up to fail the test. This event is essentially to debug why Cypress is failing.</source>
          <target state="translated">명령이 &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;재시도 루틴을&lt;/a&gt; 시작할 때마다 발생 합니다 . Cypress가 내부적으로 재시도 간격을 기다린 후 후연에서 호출됩니다. 명령이 재 시도되는 &lt;strong&gt;이유&lt;/strong&gt; 를 이해하는 데 유용 하며 일반적으로 재 시도를 발생시키는 실제 오류가 포함됩니다. 명령이 실패하면 최종 오류는 실제로 테스트에 실패하기 위해 발생합니다. 이 이벤트는 본질적으로 Cypress가 실패한 이유를 디버그하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="6e1b9e40db73c50b362b03b85fe6cb8f78a91a6a" translate="yes" xml:space="preserve">
          <source>Fires whenever a command emits this event so it can be displayed in the Command Log. Useful to see how internal cypress commands utilize the &lt;a href=&quot;../cypress-api/cypress-log&quot;&gt;Cypress.log()&lt;/a&gt; API.</source>
          <target state="translated">명령이이 이벤트를 발생시킬 때마다 발생하여 명령 로그에 표시 될 수 있습니다. 내부 cypress 명령이 &lt;a href=&quot;../cypress-api/cypress-log&quot;&gt;Cypress.log ()&lt;/a&gt; API를 활용하는 방법을 보는 데 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="2a70e102286861560c039597e66d12a2e7a950a7" translate="yes" xml:space="preserve">
          <source>Fires whenever a command&amp;rsquo;s attributes changes. This event is debounced to prevent it from firing too quickly and too often. Useful to see how internal cypress commands utilize the &lt;a href=&quot;../cypress-api/cypress-log&quot;&gt;Cypress.log()&lt;/a&gt; API.</source>
          <target state="translated">명령의 속성이 변경 될 때마다 발생합니다. 이 이벤트는 너무 빨리 그리고 자주 발생하지 않도록 공개되었습니다. 내부 cypress 명령이 &lt;a href=&quot;../cypress-api/cypress-log&quot;&gt;Cypress.log ()&lt;/a&gt; API를 활용하는 방법을 보는 데 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="3fe5a40f60250d1365d6022a092e685ce47f4e8b" translate="yes" xml:space="preserve">
          <source>Fires whenever the viewport changes via a &lt;code&gt;cy.viewport()&lt;/code&gt; or naturally when Cypress resets the viewport to the default between tests. Useful for debugging purposes.</source>
          <target state="translated">&lt;code&gt;cy.viewport()&lt;/code&gt; 를 통해 뷰포트가 변경 될 때마다 또는 Cypress가 테스트간에 뷰포트를 기본값으로 재설정 할 때 자연스럽게 발생합니다. 디버깅 목적으로 유용합니다.</target>
        </trans-unit>
        <trans-unit id="216f7ec41381a4aea27403eb443a599bc0b9e418" translate="yes" xml:space="preserve">
          <source>First, let&amp;rsquo;s visit a web page. We will visit our &lt;a href=&quot;https://docs.cypress.io/examples/examples/applications.html#Kitchen-Sink&quot;&gt;Kitchen Sink&lt;/a&gt; application in this example so that you can try Cypress out without needing to worry about finding a page to test.</source>
          <target state="translated">먼저 웹 페이지를 방문하십시오. 이 예제에서는 &lt;a href=&quot;https://docs.cypress.io/examples/examples/applications.html#Kitchen-Sink&quot;&gt;Kitchen Sink&lt;/a&gt; 응용 프로그램을 방문 하여 테스트 할 페이지를 찾을 필요없이 Cypress를 시험해볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c51747a9109d9350312217267bedd3d22a3f73a4" translate="yes" xml:space="preserve">
          <source>First, print where the binary is installed using the &lt;a href=&quot;command-line#cypress-cache-path&quot;&gt;&lt;code&gt;cypress cache path&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">먼저 &lt;a href=&quot;command-line#cypress-cache-path&quot;&gt; &lt;code&gt;cypress cache path&lt;/code&gt; &lt;/a&gt; 명령을 사용하여 바이너리가 설치된 위치를 인쇄하십시오 .</target>
        </trans-unit>
        <trans-unit id="2328b7180d662b87895b228f6df298db17f851a3" translate="yes" xml:space="preserve">
          <source>Fix capitalization of &lt;code&gt;Xvfb&lt;/code&gt; in error messages. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4262&quot;&gt;#4262&lt;/a&gt;.</source>
          <target state="translated">오류 메시지에서 &lt;code&gt;Xvfb&lt;/code&gt; 의 대문자를 수정하십시오 . 에서 해결 &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4262&quot;&gt;# 4262&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="86af0c91e4d554a431841c4b48230d1e03a384e5" translate="yes" xml:space="preserve">
          <source>Fix edge case with forced focusing / blurring an element when document is not in focus and the element is no longer in the DOM.</source>
          <target state="translated">문서의 초점이 맞지 않고 요소가 더 이상 DOM에없는 경우 요소를 강제로 초점을 맞추거나 흐리게 처리하여 가장자리를 수정합니다.</target>
        </trans-unit>
        <trans-unit id="12bb69b63d17fe3ceb1c091b056c08de1d1091b6" translate="yes" xml:space="preserve">
          <source>Fix for &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; SSL issues when host certificates were self signed.</source>
          <target state="translated">에 대한 수정 &lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt; 호스트 인증서는 자체 SSL 문제에 서명했을 때.</target>
        </trans-unit>
        <trans-unit id="578717dae25898e735a633254852c0af1a4b25fb" translate="yes" xml:space="preserve">
          <source>Fix missing &lt;code&gt;__initial=true&lt;/code&gt; query param on initial redirects.</source>
          <target state="translated">초기 리디렉션에서 누락 된 &lt;code&gt;__initial=true&lt;/code&gt; 쿼리 매개 변수가 수정되었습니다 .</target>
        </trans-unit>
        <trans-unit id="3f4967afa344c3a7afc269d86cfd6e6d2855feee" translate="yes" xml:space="preserve">
          <source>Fix missing &lt;code&gt;moment.js&lt;/code&gt; from &lt;code&gt;bower.json&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;moment.js&lt;/code&gt; 에서 누락 된 moment.js 를 수정 &lt;code&gt;bower.json&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5473e1c9b6b37c4c0e900c359ce20540eae846ba" translate="yes" xml:space="preserve">
          <source>Fix missing trailing slash from initial &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; requests.</source>
          <target state="translated">초기 &lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 요청 에서 누락 된 슬래시를 수정 합니다.</target>
        </trans-unit>
        <trans-unit id="a01dce2ea309fbcd0cf6dc57ea3ce76e1385ec0f" translate="yes" xml:space="preserve">
          <source>Fix sourceMappingURL browser bug &lt;code&gt;http:/localhost:4200/app.css.map&lt;/code&gt;.</source>
          <target state="translated">sourceMappingURL 브라우저 버그 &lt;code&gt;http:/localhost:4200/app.css.map&lt;/code&gt; 을 수정하십시오 .</target>
        </trans-unit>
        <trans-unit id="11b0d124e84238ede72803d0137923b1e12efc87" translate="yes" xml:space="preserve">
          <source>Fix test titles not being escaped due to refactoring.</source>
          <target state="translated">리팩토링으로 인해 테스트 타이틀이 이스케이프되지 않도록 수정했습니다.</target>
        </trans-unit>
        <trans-unit id="aafd288aaf76025069d7a6bb6e7b941f1fb9698a" translate="yes" xml:space="preserve">
          <source>Fixed &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; breaking on chains when passing the same &lt;code&gt;options&lt;/code&gt; references. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/365&quot;&gt;#365&lt;/a&gt;.</source>
          <target state="translated">고정 &lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 같은 통과 할 때 체인에 침입 &lt;code&gt;options&lt;/code&gt; 참조. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/365&quot;&gt;# 365&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="a74b09d876152e4f811aefa8d06cec8d4ab086cb" translate="yes" xml:space="preserve">
          <source>Fixed &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; inserting a rogue &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt; tag after the first letter in &lt;code&gt;[contenteditable]&lt;/code&gt; elements. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1926&quot;&gt;#1926&lt;/a&gt;.</source>
          <target state="translated">고정 &lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 불량 삽입 &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt; 의 첫 번째 문자 뒤에 태그 &lt;code&gt;[contenteditable]&lt;/code&gt; 소자. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1926&quot;&gt;# 1926&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="52d62b10a280f839c5da56508e01deb48c1beb4e" translate="yes" xml:space="preserve">
          <source>Fixed &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; not firing &lt;code&gt;input&lt;/code&gt; event for &lt;a href=&quot;https://reactjs.org/&quot;&gt;React&lt;/a&gt; on versions 15.6.x. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/536&quot;&gt;#536&lt;/a&gt;.</source>
          <target state="translated">고정 &lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 발사하지 &lt;code&gt;input&lt;/code&gt; 에 대한 이벤트를 &lt;a href=&quot;https://reactjs.org/&quot;&gt;반작용&lt;/a&gt; 버전 15.6.x.에 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/536&quot;&gt;# 536&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="f662f8fac4741daea21d050277cd93e22c3d41e4" translate="yes" xml:space="preserve">
          <source>Fixed &lt;code&gt;opener of undefined&lt;/code&gt; errors due to &lt;code&gt;page load&lt;/code&gt; events causing snapshots prior to the &lt;code&gt;load&lt;/code&gt; event of the remote application. Thanks to everyone who helped pitched in on this one! Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/258&quot;&gt;#258&lt;/a&gt;.</source>
          <target state="translated">원격 애플리케이션 의 &lt;code&gt;load&lt;/code&gt; 이벤트 이전에 스냅 샷을 발생시키는 &lt;code&gt;page load&lt;/code&gt; 이벤트 로 인해 &lt;code&gt;opener of undefined&lt;/code&gt; 오류가 발생하지 않는 문제를 수정했습니다 . 이 일에 도움을 주신 모든 분들께 감사드립니다! 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/258&quot;&gt;# 258&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="235303e914ef7bbd134d04d6915d4bbb3dca43f8" translate="yes" xml:space="preserve">
          <source>Fixed &lt;code&gt;selectionStart&lt;/code&gt; and &lt;code&gt;selectionEnd&lt;/code&gt; with &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; when using &lt;code&gt;{leftarrow}&lt;/code&gt; or &lt;code&gt;{rightarrow}&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1234&quot;&gt;#1234&lt;/a&gt;.</source>
          <target state="translated">고정 &lt;code&gt;selectionStart&lt;/code&gt; 및 &lt;code&gt;selectionEnd&lt;/code&gt; 가진 &lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 사용시 &lt;code&gt;{leftarrow}&lt;/code&gt; 또는 &lt;code&gt;{rightarrow}&lt;/code&gt; . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1234&quot;&gt;# 1234&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="35d906e96dd65bcb3ff8c488e394665a96ee5e42" translate="yes" xml:space="preserve">
          <source>Fixed Cypress hanging in CI due to excessive and unnecessary globbing. We finally tracked down this issue which made it appear as if Cypress was &amp;ldquo;hanging&amp;rdquo; after closing a spec file and then attempting to open the next one. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2183&quot;&gt;#2183&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1905&quot;&gt;#1905&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1912&quot;&gt;#1912&lt;/a&gt;.</source>
          <target state="translated">과도하고 불필요한 글 로빙으로 CI에서 Cypress가 멈추는 문제를 해결했습니다. 우리는 마침내이 문제를 추적하여 스펙 파일을 닫은 후 다음 파일을 열려고 시도한 후 Cypress가 &quot;매달려&quot;있는 것처럼 보입니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2183&quot;&gt;# 2183&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1905&quot;&gt;# 1905&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1912&quot;&gt;# 1912를&lt;/a&gt; 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="ef17c202682eca1a169dad619332a8557814c664" translate="yes" xml:space="preserve">
          <source>Fixed Cypress not correctly aborting long running connections (such as server sent events) on proxied requests. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2612&quot;&gt;#2612&lt;/a&gt;.</source>
          <target state="translated">프록시 된 요청에서 Cypress가 장기 실행 연결 (예 : 서버 전송 이벤트)을 올바르게 중단하지 않던 문제를 수정했습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2612&quot;&gt;# 2612&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="f9669770f306f25a505189c057478c54515db829" translate="yes" xml:space="preserve">
          <source>Fixed Test Code</source>
          <target state="translated">고정 테스트 코드</target>
        </trans-unit>
        <trans-unit id="13a9fead295c05643d7ba8ee723e8713a1aa5903" translate="yes" xml:space="preserve">
          <source>Fixed Type error being thrown for users using TypeScript 3. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2363&quot;&gt;#2363&lt;/a&gt;.</source>
          <target state="translated">고정 유형의 오류가 타이프 라이터 3. 수정하여 사용자를위한 슬로우 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2363&quot;&gt;2363 #을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2dc28540a862ccbf3f051f0f0ef94a933350e1c0" translate="yes" xml:space="preserve">
          <source>Fixed TypeScript error caused by &lt;code&gt;dtslint&lt;/code&gt; dependency introduced in 3.1.4. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3024&quot;&gt;#3024&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3136&quot;&gt;#3136&lt;/a&gt;.</source>
          <target state="translated">3.1.4에서 소개 된 &lt;code&gt;dtslint&lt;/code&gt; 종속성으로 인한 TypeScript 오류를 수정했습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3024&quot;&gt;# 3024&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3136&quot;&gt;# 3136&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="dea00df4206deeacedda8d66d0f1517b23f5420c" translate="yes" xml:space="preserve">
          <source>Fixed URL proxy issue with subdomains. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/183&quot;&gt;#183&lt;/a&gt;.</source>
          <target state="translated">하위 도메인의 URL 프록시 문제가 해결되었습니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/183&quot;&gt;# 183&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5b9c7b352ca8a81eb3f730094b9d5febac64dfda" translate="yes" xml:space="preserve">
          <source>Fixed a bug causing screenshots saved via &lt;a href=&quot;../../api/commands/screenshot&quot;&gt;&lt;code&gt;cy.screenshot()&lt;/code&gt;&lt;/a&gt; to be in different folders when you ran using &lt;a href=&quot;../guides/command-line#cypress-open&quot;&gt;&lt;code&gt;cypress open&lt;/code&gt;&lt;/a&gt; vs &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt;&lt;code&gt;cypress run&lt;/code&gt;&lt;/a&gt; . Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2091&quot;&gt;#2091&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../guides/command-line#cypress-open&quot;&gt; &lt;code&gt;cypress open&lt;/code&gt; &lt;/a&gt; vs &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt; &lt;code&gt;cypress run&lt;/code&gt; 을&lt;/a&gt; 사용하여 실행했을 때 &lt;a href=&quot;../../api/commands/screenshot&quot;&gt; &lt;code&gt;cy.screenshot()&lt;/code&gt; &lt;/a&gt; 을 통해 저장된 스크린 샷 이 다른 폴더에 있는 버그를 수정했습니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2091&quot;&gt;# 2091&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2ea194ebc7a0241467b7bb6eeb910f0701101a6c" translate="yes" xml:space="preserve">
          <source>Fixed a bug for users running external network proxies that prevented requests from completing. Requests should now all work correctly. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4257&quot;&gt;#4257&lt;/a&gt;.</source>
          <target state="translated">요청을 완료하지 못하게하는 외부 네트워크 프록시를 실행하는 사용자의 버그가 수정되었습니다. 요청이 모두 올바르게 작동합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4257&quot;&gt;# 4257&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="84701a971c52fe0ef5b810aad2a8c5a06fdc37b7" translate="yes" xml:space="preserve">
          <source>Fixed a bug in node core where Cypress would not show up in &lt;code&gt;Windows&lt;/code&gt; for users on &lt;code&gt;node &amp;gt;= 11&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2667&quot;&gt;#2667&lt;/a&gt;.</source>
          <target state="translated">Cypress가 &lt;code&gt;Windows&lt;/code&gt; 에 &lt;code&gt;node &amp;gt;= 11&lt;/code&gt; 사용자에게 표시되지 않는 노드 코어의 버그가 수정되었습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2667&quot;&gt;# 2667&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="e35385a2c12d0f71f7a53c301b5b3d47658ae821" translate="yes" xml:space="preserve">
          <source>Fixed a bug swallowing plugin errors due to undefined &lt;code&gt;reject&lt;/code&gt; function. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/934&quot;&gt;#934&lt;/a&gt;.</source>
          <target state="translated">정의되지 않은 &lt;code&gt;reject&lt;/code&gt; 기능 으로 인한 플러그인 삼키는 플러그인 오류를 수정했습니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/934&quot;&gt;# 934&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="90b94e0824d2385a70f66519b1a2622224be5d05" translate="yes" xml:space="preserve">
          <source>Fixed a bug that caused commands to time out on subsequent tests whenever there was an uncaught error + an assertion conflict. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/238&quot;&gt;#238&lt;/a&gt;.</source>
          <target state="translated">잡히지 않은 오류 + 어설 션 충돌이있을 때마다 후속 테스트에서 명령이 시간 초과되는 버그를 수정했습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/238&quot;&gt;# 238&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="71d07b2b277c7a574b44ce7b49b691fb502615ec" translate="yes" xml:space="preserve">
          <source>Fixed a bug when dismissing pinned snapshots that would cause the page to be wiped with nothing rendered. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4864&quot;&gt;#4864&lt;/a&gt;.</source>
          <target state="translated">고정 된 스냅 샷을 닫을 때 아무 것도 렌더링되지 않고 페이지가 지워지는 버그를 수정했습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4864&quot;&gt;# 4864&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="16717acc2ae6358676798e3692b5d47326a62da8" translate="yes" xml:space="preserve">
          <source>Fixed a bug where Cypress could get into a weird state and continuously error due to the &lt;code&gt;before:log&lt;/code&gt; event not being properly disposed. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/173&quot;&gt;#173&lt;/a&gt;.</source>
          <target state="translated">Cypress가 이상한 상태가되어 &lt;code&gt;before:log&lt;/code&gt; 이벤트가 올바르게 처리되지 않아 계속 오류가 발생하는 버그를 수정했습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/173&quot;&gt;# 173&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="caa86e87c6a9a9f15bdd343f3f770a5b166471b9" translate="yes" xml:space="preserve">
          <source>Fixed a bug where Cypress would error when a secure cookie flag was set and then expired from an HTTPS url without the subsequent secure flag. Due to the way Cypress was constructing the url, this would fail to actually remove the cookie. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1264&quot;&gt;#1264&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1321&quot;&gt;#1321&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1799&quot;&gt;#1799&lt;/a&gt;.</source>
          <target state="translated">보안 쿠키 플래그를 설정 한 후 후속 보안 플래그없이 HTTPS URL에서 만료 될 때 Cypress에서 오류가 발생하는 버그를 수정했습니다. Cypress가 URL을 구성하는 방식으로 인해 쿠키를 실제로 제거하지 못합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1264&quot;&gt;# 1264&lt;/a&gt; , &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1321&quot;&gt;# 1321&lt;/a&gt; , &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1799&quot;&gt;# 1799를&lt;/a&gt; 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="1d50b3ebf539cc9de8a209eaf4f48b723bc843f9" translate="yes" xml:space="preserve">
          <source>Fixed a bug where changing the &lt;a href=&quot;configuration#Folders-Files&quot;&gt;&lt;code&gt;integrationFolder&lt;/code&gt;&lt;/a&gt; in Windows would lead to errors with plugins. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1704&quot;&gt;#1704&lt;/a&gt;.</source>
          <target state="translated">Windows 에서 &lt;a href=&quot;configuration#Folders-Files&quot;&gt; &lt;code&gt;integrationFolder&lt;/code&gt; &lt;/a&gt; 를 변경하면 플러그인 오류가 발생 하는 버그가 수정 되었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1704&quot;&gt;# 1704&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="46b9d234159f57e0c9b70792318f4c4aa09e9b06" translate="yes" xml:space="preserve">
          <source>Fixed a bug where invalid UTF-8 characters were being set in XHR headers which caused XHR&amp;rsquo;s to fail. We now properly encode and decode all values. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/168&quot;&gt;#168&lt;/a&gt;.</source>
          <target state="translated">XHR 헤더에 잘못된 UTF-8 문자가 설정되어 XHR이 실패하는 버그가 수정되었습니다. 이제 모든 값을 올바르게 인코딩하고 디코딩합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/168&quot;&gt;# 168&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="1745cac84918b4aa3fcecaa76b4fcbe6bf490e60" translate="yes" xml:space="preserve">
          <source>Fixed a bug where the content of pages using non-UTF-8 character encoding would become corrupted when opened in Cypress. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3479&quot;&gt;#3479&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1543&quot;&gt;#1543&lt;/a&gt;, and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3650&quot;&gt;#3650&lt;/a&gt;.</source>
          <target state="translated">UTF-8이 아닌 문자 인코딩을 사용하는 페이지의 내용이 Cypress에서 열 때 손상되는 버그를 수정했습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3479&quot;&gt;# 3479&lt;/a&gt; , &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1543&quot;&gt;# 1543&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3650&quot;&gt;# 3650을&lt;/a&gt; 수정 합니다.</target>
        </trans-unit>
        <trans-unit id="ded6e51b9b2958b84683311abf2544d7c477a842" translate="yes" xml:space="preserve">
          <source>Fixed a bug with Windows users seeing crashes with &lt;code&gt;tty.getWindowSize is not a function&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1815&quot;&gt;#1815&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1817&quot;&gt;#1817&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;tty.getWindowSize is not a function&lt;/code&gt; 충돌 이 기능이 아닌 Windows 사용자의 버그를 수정했습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1815&quot;&gt;# 1815&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1817&quot;&gt;# 1817을&lt;/a&gt; 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="eda5c8938aaac4d872e48df690c7dd43f41fdb20" translate="yes" xml:space="preserve">
          <source>Fixed a bug with issuing an additional &lt;code&gt;blur&lt;/code&gt; and &lt;code&gt;click&lt;/code&gt; event when chaining &lt;code&gt;.clear().type(...)&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/593&quot;&gt;#593&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.clear().type(...)&lt;/code&gt; 연쇄 할 때 추가 &lt;code&gt;blur&lt;/code&gt; 및 &lt;code&gt;click&lt;/code&gt; 이벤트 를 발생시키는 버그가 수정되었습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/593&quot;&gt;# 593&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="469c74a2070f33b117fa7dca5c32e8f5f00b8745" translate="yes" xml:space="preserve">
          <source>Fixed a bug with trashing assets in linux that caused recursive &lt;code&gt;.Trash&lt;/code&gt; files to show up. We now have opted to actually &lt;code&gt;rm -rf&lt;/code&gt; the files in linux because trashing is too inconsistent between linux distros. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2742&quot;&gt;#2742&lt;/a&gt;.</source>
          <target state="translated">재귀 &lt;code&gt;.Trash&lt;/code&gt; 파일이 표시 되는 Linux의 자산 휴지통 관련 버그가 수정 되었습니다. 우리는 이제 리눅스 배포판 사이에 휴지통이 너무 일치하지 않기 때문에 실제로 리눅스에서 파일을 &lt;code&gt;rm -rf&lt;/code&gt; 로 선택했습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2742&quot;&gt;# 2742&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="4c520262c89b3ac07c8baf1a654a558e6ed3db1b" translate="yes" xml:space="preserve">
          <source>Fixed a couple regressions in the Dashboard where timed out runs stayed &amp;ldquo;Pending&amp;rdquo; forever. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1891&quot;&gt;#1891&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1952&quot;&gt;#1952&lt;/a&gt;.</source>
          <target state="translated">시간 초과 실행이 &quot;대기 중&quot;으로 유지되는 대시 보드에서 몇 번의 회귀가 수정되었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1891&quot;&gt;# 1891&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1952&quot;&gt;# 1952를&lt;/a&gt; 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="00fcb4eea65108e89c9c6443dade9cb50ba551ca" translate="yes" xml:space="preserve">
          <source>Fixed a deployment bug in the &lt;code&gt;core-desktop-gui&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;core-desktop-gui&lt;/code&gt; 의 배포 버그를 수정했습니다 .</target>
        </trans-unit>
        <trans-unit id="f061b7f560d64349dba98a8aedb318738f61fbb4" translate="yes" xml:space="preserve">
          <source>Fixed a handful of scenarios and edge cases where cookies were not properly synchronized between external requests and the browser. This led to situations where cookies were either duplicated on requests, or were not sent. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/357&quot;&gt;#357&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/361&quot;&gt;#361&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/362&quot;&gt;#362&lt;/a&gt;.</source>
          <target state="translated">쿠키가 외부 요청과 브라우저간에 제대로 동기화되지 않는 몇 가지 시나리오 및 엣지 사례를 수정했습니다. 이로 인해 쿠키가 요청에 따라 복제되거나 전송되지 않은 상황이 발생했습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/357&quot;&gt;# 357&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/361&quot;&gt;# 361&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/362&quot;&gt;# 362를&lt;/a&gt; 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="188f048d711e6696c9c8df5820c6c238970fcef3" translate="yes" xml:space="preserve">
          <source>Fixed a longstanding issue in Cypress where logging in from another computer would kill the session on all other computers, and prevent you from accessing &lt;code&gt;cypress get:key&lt;/code&gt; (amongst other things). Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/400&quot;&gt;#400&lt;/a&gt;.</source>
          <target state="translated">Cypress에서 다른 컴퓨터에서 로그인하면 다른 모든 컴퓨터에서 세션이 종료되고 &lt;code&gt;cypress get:key&lt;/code&gt; (다른 것들 중에서도)에 액세스 할 수없는 오랜 문제가 해결되었습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/400&quot;&gt;# 400&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="125f3c706233139b5634955a5661ec6e1d443e79" translate="yes" xml:space="preserve">
          <source>Fixed a regression caused by &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; adhering to &lt;code&gt;maxlength&lt;/code&gt; incorrectly. Special character sequences were not respected. Now &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; works with special characters and implements a complete fix for &lt;code&gt;maxlength&lt;/code&gt;. In addition to it working, it now fires all applicable browser events without modifying the actual input value. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/955&quot;&gt;#955&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 이 &lt;code&gt;maxlength&lt;/code&gt; 를 잘못 준수하여 발생하는 회귀 문제를 해결했습니다 . 특수 문자 순서는 고려되지 않았습니다. 이제 &lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 은 특수 문자와 함께 작동하며 &lt;code&gt;maxlength&lt;/code&gt; 에 대한 완전한 수정을 구현합니다 . 작동하는 것 외에도 실제 입력 값을 수정하지 않고 적용 가능한 모든 브라우저 이벤트를 발생시킵니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/955&quot;&gt;# 955&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="58f207b226d195fcbac964a5875c845dac2c2b05" translate="yes" xml:space="preserve">
          <source>Fixed a regression caused in &lt;code&gt;3.1.1&lt;/code&gt; where we attempted to set a property on an invalid cookie sent from a server. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2724&quot;&gt;#2724&lt;/a&gt;.</source>
          <target state="translated">서버에서 보낸 잘못된 쿠키에 속성을 설정하려고 시도한 &lt;code&gt;3.1.1&lt;/code&gt; 에서 발생하는 회귀 문제를 해결했습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2724&quot;&gt;# 2724&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="79bc8296f43c8bf5bc550d085c1248af39a32c04" translate="yes" xml:space="preserve">
          <source>Fixed a regression in &lt;a href=&quot;changelog#3-3-0&quot;&gt;3.3.0&lt;/a&gt; causing large requests such as &lt;code&gt;multipart/form-data&lt;/code&gt; uploads to hang. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4240&quot;&gt;#4240&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4252&quot;&gt;#4252&lt;/a&gt;, and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4253&quot;&gt;#4253&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;multipart/form-data&lt;/code&gt; 업로드 와 같은 대규모 요청 이 중단 되는 &lt;a href=&quot;changelog#3-3-0&quot;&gt;3.3.0&lt;/a&gt; 의 회귀 문제를 해결했습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4240&quot;&gt;# 4240&lt;/a&gt; , &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4252&quot;&gt;# 4252&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4253&quot;&gt;# 4253을&lt;/a&gt; 수정 합니다.</target>
        </trans-unit>
        <trans-unit id="718a1ff91ed67f4a43b3e64705ec6af59b8cc17c" translate="yes" xml:space="preserve">
          <source>Fixed a regression in &lt;a href=&quot;changelog#3-3-0&quot;&gt;3.3.0&lt;/a&gt; causing some users using proxy to see the &amp;ldquo;Browser was not launched through Cypress&amp;rdquo; error during &lt;code&gt;cypress open&lt;/code&gt;. This was caused by incorrectly routing requests for Cypress&amp;rsquo;s internal server on &lt;code&gt;localhost&lt;/code&gt; through the user&amp;rsquo;s proxy. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4410&quot;&gt;#4410&lt;/a&gt;.</source>
          <target state="translated">프록시를 사용하는 일부 사용자가 &lt;code&gt;cypress open&lt;/code&gt; 동안 &quot;브라우저가 Cypress를 통해 시작되지 않았습니다&quot;오류를 표시하는 &lt;a href=&quot;changelog#3-3-0&quot;&gt;3.3.0&lt;/a&gt; 의 회귀 문제를 수정했습니다 . 이는 사용자 프록시를 통해 &lt;code&gt;localhost&lt;/code&gt; 에서 Cypress의 내부 서버에 대한 요청을 잘못 라우팅했기 때문입니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4410&quot;&gt;# 4410&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="92bf3f7a02bd774b4f45bba54e1708bbbec88a77" translate="yes" xml:space="preserve">
          <source>Fixed a regression in &lt;code&gt;0.17.1&lt;/code&gt; that was incorrectly setting &lt;code&gt;Cache&lt;/code&gt; headers. This &lt;em&gt;could&lt;/em&gt; cause a situation where you received an &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; origin error. Additionally we now set &lt;code&gt;No-Cache&lt;/code&gt; headers whenever we inject content, but otherwise respect the headers coming from web servers. When using Cypress as the file server, we set &lt;code&gt;etags&lt;/code&gt; but prevent caching.</source>
          <target state="translated">&lt;code&gt;Cache&lt;/code&gt; 헤더를 잘못 설정 했던 &lt;code&gt;0.17.1&lt;/code&gt; 의 회귀 문제를 해결했습니다 . 이로 인해 &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; 오리진 오류가 발생 했을 &lt;em&gt;수&lt;/em&gt; 있습니다 . 또한 콘텐츠를 삽입 할 때마다 &lt;code&gt;No-Cache&lt;/code&gt; 헤더를 설정 하지만 웹 서버에서 오는 헤더를 존중합니다. Cypress를 파일 서버로 사용하는 경우 &lt;code&gt;etags&lt;/code&gt; 를 설정 하지만 캐싱은 방지합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="797d082c75d18ab24086fb4a5aabff0a9d5357c0" translate="yes" xml:space="preserve">
          <source>Fixed a regression in &lt;code&gt;0.17.2&lt;/code&gt; which caused &lt;strong&gt;separate&lt;/strong&gt; tests that were visiting the same URL not to actually visit the new URL and eventually time out. We&amp;rsquo;ve updated some of our internal QA processes around this because we rarely have regressions and they are a pretty big deal. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/225&quot;&gt;#225&lt;/a&gt;.</source>
          <target state="translated">회귀 고정 &lt;code&gt;0.17.2&lt;/code&gt; 의한 &lt;strong&gt;별도&lt;/strong&gt; 실제로 새로운 URL 결국 시간 제한을 방문하지 동일한 URL을 방문했다 테스트를. 회귀 현상이 거의없고 상당히 큰 영향을 미치기 때문에이 문제에 대한 내부 QA 프로세스 중 일부를 업데이트했습니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/225&quot;&gt;# 225&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="40060b269c8fc30e6502dd8d290d1f068f602ced" translate="yes" xml:space="preserve">
          <source>Fixed a regression in &lt;code&gt;3.0.2&lt;/code&gt; that caused typing &lt;code&gt;{enter}&lt;/code&gt; not to submit a form when there were &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; elements other than &lt;code&gt;type='submit'&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2261&quot;&gt;#2261&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2326&quot;&gt;#2326&lt;/a&gt;.</source>
          <target state="translated">회귀 고정 &lt;code&gt;3.0.2&lt;/code&gt; 입력 야기 &lt;code&gt;{enter}&lt;/code&gt; 이 있었을 때 양식을 제출하지 &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; 이외의 원소 &lt;code&gt;type='submit'&lt;/code&gt; . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2261&quot;&gt;# 2261&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2326&quot;&gt;# 2326을&lt;/a&gt; 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="cda6d14158f1ca7ec8929275ab499aa9d41aac90" translate="yes" xml:space="preserve">
          <source>Fixed a regression introduced in &lt;a href=&quot;changelog#3-2-0&quot;&gt;3.2.0&lt;/a&gt; that caused &lt;a href=&quot;../../api/commands/fixture&quot;&gt;&lt;code&gt;cy.fixture()&lt;/code&gt;&lt;/a&gt; to throw a &lt;code&gt;EISDIR&lt;/code&gt; error if a directory had the same name as a file within that same directory. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3739&quot;&gt;#3739&lt;/a&gt;.</source>
          <target state="translated">디렉토리가 동일한 디렉토리에있는 파일과 이름이 같은 경우 &lt;a href=&quot;../../api/commands/fixture&quot;&gt; &lt;code&gt;cy.fixture()&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;EISDIR&lt;/code&gt; 오류 를 발생 시키는&lt;a href=&quot;changelog#3-2-0&quot;&gt; 3.2.0&lt;/a&gt; 의 회귀 문제를 수정했습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3739&quot;&gt;# 3739&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="02f5df8f3f31bad1f7203993fb1b2f8f4b232bde" translate="yes" xml:space="preserve">
          <source>Fixed a regression introduced in &lt;a href=&quot;changelog#3-2-0&quot;&gt;3.2.0&lt;/a&gt; that caused &lt;a href=&quot;../../api/commands/its&quot;&gt;&lt;code&gt;.its()&lt;/code&gt;&lt;/a&gt; to no longer retry when it yields &lt;code&gt;undefined&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3837&quot;&gt;#3837&lt;/a&gt;</source>
          <target state="translated">에 도입 된 회귀 고정 &lt;a href=&quot;changelog#3-2-0&quot;&gt;3.2.0&lt;/a&gt; 발생 &lt;a href=&quot;../../api/commands/its&quot;&gt; &lt;code&gt;.its()&lt;/code&gt; &lt;/a&gt; 가 산출되면 더 이상 재시도에 &lt;code&gt;undefined&lt;/code&gt; . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3837&quot;&gt;# 3837&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3e0de1cc648e5d061dd3d9554106a7e7e22e8624" translate="yes" xml:space="preserve">
          <source>Fixed a regression introduced in &lt;a href=&quot;changelog#3-2-0&quot;&gt;3.2.0&lt;/a&gt; that caused an error to throw when visiting domains with certain public suffixes. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3717&quot;&gt;#3717&lt;/a&gt;.</source>
          <target state="translated">특정 공개 접미사가있는 도메인을 방문 할 때 &lt;a href=&quot;changelog#3-2-0&quot;&gt;3.2.0&lt;/a&gt; 에서 소개 된 회귀 문제를 수정했습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3717&quot;&gt;# 3717&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="2e56f00230509efa8dac3e3c46581c3dcdda0b82" translate="yes" xml:space="preserve">
          <source>Fixed a regression introduced in &lt;a href=&quot;changelog#3-4-0&quot;&gt;3.4.0&lt;/a&gt; that caused an error to be thrown when chaining together multiple assertions using the &lt;code&gt;and&lt;/code&gt; chainable getter. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4833&quot;&gt;#4833&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;changelog#3-4-0&quot;&gt;3.4.0&lt;/a&gt; 에서 도입 된 회귀 가 &lt;code&gt;and&lt;/code&gt; 체인 가능 게터를 사용하여 여러 어설 션을 함께 연결할 때 오류가 발생하는 문제를 해결했습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4833&quot;&gt;# 4833&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="fd475981c3a413149ca03f811cd7aeb4ada6f22a" translate="yes" xml:space="preserve">
          <source>Fixed a regression introduced in &lt;code&gt;3.x.x&lt;/code&gt; where application code that used &lt;code&gt;setTimeout&lt;/code&gt; with a string argument would see the error &lt;code&gt;fn.apply is not a function&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1854&quot;&gt;#1854&lt;/a&gt;.</source>
          <target state="translated">문자열 인수와 함께 &lt;code&gt;setTimeout&lt;/code&gt; 을 사용한 응용 프로그램 코드 에서 오류 &lt;code&gt;fn.apply is not a function&lt;/code&gt; &lt;code&gt;3.x.x&lt;/code&gt; 에서 도입 된 회귀 문제를 해결했습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1854&quot;&gt;# 1854&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="af27ef3a8c5b1eb360f49945fa5020fda8149632" translate="yes" xml:space="preserve">
          <source>Fixed a regression where tests that failed outside of a hook would incorrectly indicate themselves as a &lt;code&gt;before each&lt;/code&gt; hook. In addition, in the default &lt;code&gt;spec&lt;/code&gt;, reporter will now display the test name when a hook was the source of failure. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/253&quot;&gt;#253&lt;/a&gt;.</source>
          <target state="translated">후크 외부에서 실패한 테스트가 &lt;code&gt;before each&lt;/code&gt; 후크 이전 으로 잘못 표시되는 회귀 문제를 해결했습니다 . 또한 기본 &lt;code&gt;spec&lt;/code&gt; 에서 리포터는 이제 후크가 실패의 원인 일 때 테스트 이름을 표시합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/253&quot;&gt;# 253&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="ad6a48c43848b909388100743330443ecff9d966" translate="yes" xml:space="preserve">
          <source>Fixed a runaway RegExp causing large &lt;code&gt;.js&lt;/code&gt; files to take dozens of seconds to process. This was a regression caused by &lt;code&gt;2.0.0&lt;/code&gt; with the new &lt;a href=&quot;configuration#Browser&quot;&gt;&lt;code&gt;modifyObstructiveCode&lt;/code&gt;&lt;/a&gt; option. We&amp;rsquo;ve optimized the RegExp and the performance is back to being almost identical to transparently passing responses through. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1330&quot;&gt;#1330&lt;/a&gt;.</source>
          <target state="translated">런 어웨이 RegExp가 큰 &lt;code&gt;.js&lt;/code&gt; 파일을 처리하는 데 수십 초가 걸리던 문제를 해결했습니다. 이것은 새로운 &lt;a href=&quot;configuration#Browser&quot;&gt; &lt;code&gt;modifyObstructiveCode&lt;/code&gt; &lt;/a&gt; 옵션 과 함께 &lt;code&gt;2.0.0&lt;/code&gt; 으로 인한 회귀 입니다. 우리는 RegExp을 최적화했으며 성능은 투명하게 응답을 전달하는 것과 거의 동일합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1330&quot;&gt;# 1330&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="ad28b2e2f139b4f56dd509edc39f63bc289fc0b8" translate="yes" xml:space="preserve">
          <source>Fixed a small visual bug where failed commands were not aligned to other commands. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2314&quot;&gt;#2314&lt;/a&gt;.</source>
          <target state="translated">실패한 명령이 다른 명령과 맞지 않는 작은 시각적 버그가 수정되었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2314&quot;&gt;# 2314&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="20b3da33f022c8918a8fee4cd409fa5b0fa5bc32" translate="yes" xml:space="preserve">
          <source>Fixed a very longstanding (!) issue where &lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt; would fail to click the center coordinates of elements with style &lt;code&gt;display: inline&lt;/code&gt;. Cypress would instead report that the element was being covered causing the error: &lt;code&gt;cy.click() failed because this element is being covered by another element&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/210&quot;&gt;#210&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt; 이 스타일 &lt;code&gt;display: inline&lt;/code&gt; 하여 요소의 중심 좌표를 클릭하지 못하는 매우 오랜 (!) 문제를 해결했습니다 . Cypress는 대신 요소를 덮고 있다고보고하여 오류를 일으켰습니다. &lt;code&gt;cy.click() failed because this element is being covered by another element&lt;/code&gt; . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/210&quot;&gt;# 210&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="8488e4ff3fa99d45f5aac3d43763fd3bd4dc1c31" translate="yes" xml:space="preserve">
          <source>Fixed a visual bug when aliasing a non-route subject multiple times that would cause the Test Runner to show &amp;lsquo;undefined&amp;rsquo; alias with empty counts. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4429&quot;&gt;#4429&lt;/a&gt;.</source>
          <target state="translated">루트가 아닌 대상을 여러 번 앨리어싱 할 때 테스트 러너가 빈 카운트로 '정의되지 않은'앨리어스를 표시하는 시각적 버그를 수정했습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4429&quot;&gt;# 4429&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="eb032515c85605b59f3782be31262996bff85914" translate="yes" xml:space="preserve">
          <source>Fixed alt tray icon so it shows up correctly on click.</source>
          <target state="translated">클릭시 올바르게 표시되도록 대체 트레이 아이콘을 수정했습니다.</target>
        </trans-unit>
        <trans-unit id="313a913671a903142640a3d934767834ab3ee524" translate="yes" xml:space="preserve">
          <source>Fixed an edge case in the &lt;code&gt;driver&lt;/code&gt; that could lead to memory leaks. This happened when Command Logs updated from previously run tests. Normally, in headless mode, we automatically remove references to purge memory after each test, but when logs were updated after this, their references were merged back in again and held onto forever. If you were seeing long Cypress runs die or eventually halt, this was likely the cause. We did extensive memory regression analysis on Cypress and could not find any more memory leaks. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/301&quot;&gt;#301&lt;/a&gt;.</source>
          <target state="translated">메모리 누수로 이어질 수 있는 &lt;code&gt;driver&lt;/code&gt; 의 에지 케이스를 수정했습니다 . 이전에 테스트를 실행 한 명령 로그가 업데이트되었을 때 발생했습니다. 일반적으로 헤드리스 모드에서는 각 테스트 후 메모리 제거에 대한 참조를 자동으로 제거하지만이 이후 로그가 업데이트되면 해당 참조가 다시 병합되어 영원히 유지됩니다. Cypress 실행이 오래 걸리거나 중단되는 것을보고 있다면 이것이 원인 일 수 있습니다. Cypress에서 광범위한 메모리 회귀 분석을 수행하여 더 이상 메모리 누수를 찾을 수 없습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/301&quot;&gt;# 301&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="eb080bbba9a5a85990fa91f1b178e3eb7cb2d0b4" translate="yes" xml:space="preserve">
          <source>Fixed an edge case when hooks such as &lt;code&gt;beforeEach&lt;/code&gt; or &lt;code&gt;afterEach&lt;/code&gt; threw an &lt;strong&gt;identical&lt;/strong&gt; error message, Cypress would hang indefinitely and never finish running the tests. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/674&quot;&gt;#674&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;beforeEach&lt;/code&gt; 또는 &lt;code&gt;afterEach&lt;/code&gt; 와 같은 후크 에서 &lt;strong&gt;동일한&lt;/strong&gt; 오류 메시지가 표시되면 Cypress가 무한정 중단되어 테스트 실행이 완료되지 않는 경우를 수정했습니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/674&quot;&gt;# 674&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2661a63af2ce07d2cc706e56312cdae37b3f6ed6" translate="yes" xml:space="preserve">
          <source>Fixed an edge case when writing a test with a &lt;code&gt;done&lt;/code&gt; callback alongside &lt;code&gt;cy&lt;/code&gt; commands. This situation would always cause a timeout after 30 seconds even though the test would pass.</source>
          <target state="translated">&lt;code&gt;cy&lt;/code&gt; 명령 과 함께 콜백을 &lt;code&gt;done&lt;/code&gt; 하여 테스트를 작성할 때 발생하는 문제를 해결했습니다 . 이 상황은 테스트가 통과 되더라도 항상 30 초 후에 시간 초과가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c257669938ad8d8588a5d98ce4bc6d698f7e89b4" translate="yes" xml:space="preserve">
          <source>Fixed an edge case where assertions would incorrectly associate to a previously run assertion. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/252&quot;&gt;#252&lt;/a&gt;.</source>
          <target state="translated">어설 션이 이전에 실행 된 어설 션과 잘못 연결되는 경우를 수정했습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/252&quot;&gt;# 252&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="99f6b62fc97458e6561cf3b928ec860cd9b1dc47" translate="yes" xml:space="preserve">
          <source>Fixed an issue causing &lt;code&gt;Chrome&lt;/code&gt; to timeout when attempted to be run through our docker containers. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1031&quot;&gt;#1031&lt;/a&gt;.</source>
          <target state="translated">Docker 컨테이너를 통해 &lt;code&gt;Chrome&lt;/code&gt; 을 실행하려고 할 때 Chrome 이 시간 초과 되는 문제를 수정했습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1031&quot;&gt;# 1031&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="0acea776ba5899e734dd14a6a1309901365ecaf8" translate="yes" xml:space="preserve">
          <source>Fixed an issue when testing applications using older versions of jQuery. They now no longer throw &lt;code&gt;item.first is not a function&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2927&quot;&gt;#2927&lt;/a&gt;.</source>
          <target state="translated">이전 버전의 jQuery를 사용하는 응용 프로그램을 테스트 할 때 발생하는 문제를 해결했습니다. 이제 더 이상 &lt;code&gt;item.first is not a function&lt;/code&gt; 던지지 않습니다 . first는 함수가 아닙니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2927&quot;&gt;# 2927&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="2df9794ea315081304a449996ce2c238d0a619fc" translate="yes" xml:space="preserve">
          <source>Fixed an issue where Cypress would inject content into the &lt;code&gt;&amp;lt;header&amp;gt;&lt;/code&gt; tag instead of the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; tag. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2026&quot;&gt;#2026&lt;/a&gt;.</source>
          <target state="translated">Cypress가 &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; 태그 대신 &lt;code&gt;&amp;lt;header&amp;gt;&lt;/code&gt; 태그에 컨텐츠를 삽입하는 문제를 수정했습니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2026&quot;&gt;# 2026&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="503a7789189e2cc3fea11c127b7ef29ccf854e25" translate="yes" xml:space="preserve">
          <source>Fixed an issue where Cypress&amp;rsquo;s &lt;code&gt;devDependencies&lt;/code&gt; were being included in the Windows binary. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2896&quot;&gt;#2896&lt;/a&gt;.</source>
          <target state="translated">Cypress의 &lt;code&gt;devDependencies&lt;/code&gt; 가 Windows 바이너리에 포함 되는 문제가 해결 되었습니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2896&quot;&gt;# 2896&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9b9a67d1e1a1a3d9f46755d7554324c5b006cbfa" translate="yes" xml:space="preserve">
          <source>Fixed an issue where highlighting a command&amp;rsquo;s snapshot would throw an error when no application was rendered in the AUT frame. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4177&quot;&gt;#4177&lt;/a&gt;.</source>
          <target state="translated">AUT 프레임에 응용 프로그램이 렌더링되지 않은 경우 명령의 스냅 샷을 강조 표시하면 오류가 발생하는 문제가 해결되었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4177&quot;&gt;# 4177&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="8634090de3bb23f05d8348be273ac80a2f06895b" translate="yes" xml:space="preserve">
          <source>Fixed an issue where returning/resolving &lt;code&gt;undefined&lt;/code&gt; from a &lt;a href=&quot;../../api/commands/task&quot;&gt;&lt;code&gt;cy.task()&lt;/code&gt;&lt;/a&gt; handler resulted in an incorrect runtime error. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2553&quot;&gt;#2553&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/task&quot;&gt; &lt;code&gt;cy.task()&lt;/code&gt; &lt;/a&gt; 핸들러 에서 &lt;code&gt;undefined&lt;/code&gt; 를 반환 / 해결 하면 런타임 오류가 잘못 되던 문제를 수정했습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2553&quot;&gt;# 2553&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="c620b3b816b83868106dcda7ca6573a168f7e4f2" translate="yes" xml:space="preserve">
          <source>Fixed an issue with &lt;a href=&quot;../../api/commands/clear&quot;&gt;&lt;code&gt;.clear()&lt;/code&gt;&lt;/a&gt; not behaving the same as &lt;code&gt;cy.type('{selectall}{backspace}')&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/420&quot;&gt;#420&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/clear&quot;&gt; &lt;code&gt;.clear()&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;cy.type('{selectall}{backspace}')&lt;/code&gt; 과 동일하게 작동하지 않는 문제를 해결했습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/420&quot;&gt;# 420&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="ba35f7f430bc3eb760682eeba295aa9b02318261" translate="yes" xml:space="preserve">
          <source>Fixed an oversight where a specific framebusting check was not being properly stripped and removed by the default config option &lt;a href=&quot;configuration#Browser&quot;&gt;&lt;code&gt;modifyObstructiveCode&lt;/code&gt;&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2030&quot;&gt;#2030&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2059&quot;&gt;#2059&lt;/a&gt;.</source>
          <target state="translated">기본 구성 옵션 &lt;a href=&quot;configuration#Browser&quot;&gt; &lt;code&gt;modifyObstructiveCode&lt;/code&gt; 로 특정 프레임 버스 팅&lt;/a&gt; 검사가 제대로 제거되지 않는 감독이 수정되었습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2030&quot;&gt;# 2030&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2059&quot;&gt;# 2059를&lt;/a&gt; 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="a3feeb11c878c0b1b6c2b42b4926ba57769c0a27" translate="yes" xml:space="preserve">
          <source>Fixed another Dashboard regression where an error would throw when recording tests and sending a large list of specs. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1901&quot;&gt;#1901&lt;/a&gt;.</source>
          <target state="translated">테스트를 기록하고 많은 사양 목록을 보낼 때 오류가 발생하는 또 다른 대시 보드 회귀 문제를 해결했습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1901&quot;&gt;# 1901&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="f95ba80c09d2573eaefec9828019f86ac7fc513f" translate="yes" xml:space="preserve">
          <source>Fixed another bug with Chrome that caused the &lt;code&gt;chromeWebSecurity: false&lt;/code&gt; option to not be respected. This was due to Chrome progressively rolling out trials of a new option that attempts to isolate sites (and iframes) in their own child process if their origins are different. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1951&quot;&gt;#1951&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2001&quot;&gt;#2001&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/715&quot;&gt;#715&lt;/a&gt;.</source>
          <target state="translated">Chrome의 다른 버그로 인해 &lt;code&gt;chromeWebSecurity: false&lt;/code&gt; 옵션이 적용되지 않던 문제를 수정했습니다 . 이는 출처가 다른 경우 자체 하위 프로세스에서 사이트 (및 iframe)를 격리하려는 새로운 옵션의 시험판이 Chrome에서 점진적으로 출시 되었기 때문입니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1951&quot;&gt;# 1951&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2001&quot;&gt;# 2001&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/715&quot;&gt;# 715&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="94853bb9ca7c86396cbd9c57c0364c019a3f65d1" translate="yes" xml:space="preserve">
          <source>Fixed another issue in Chrome* versions &amp;gt;= 72 where a scrollable command log would cause the entire application to be scrollable. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3253&quot;&gt;#3253&lt;/a&gt;.</source>
          <target state="translated">스크롤 가능한 명령 로그로 인해 전체 애플리케이션을 스크롤 할 수있는 Chrome * 버전&amp;gt; = 72의 다른 문제가 해결되었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3253&quot;&gt;# 3253&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="696f0ff4fbb232ea2e711589bbb9e959ff73ea3e" translate="yes" xml:space="preserve">
          <source>Fixed another regression in &lt;code&gt;3.1.1&lt;/code&gt; where passing &lt;code&gt;undefined&lt;/code&gt; to a &lt;code&gt;setTimeout&lt;/code&gt; caused Cypress to error. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2719&quot;&gt;#2719&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;setTimeout&lt;/code&gt; 에 &lt;code&gt;undefined&lt;/code&gt; 를 전달 하면 Cypress에 오류가 발생 하는 &lt;code&gt;3.1.1&lt;/code&gt; 의 또 다른 회귀 문제를 해결했습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2719&quot;&gt;# 2719&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="aebadebc5158757be71142267de0bf16766d036c" translate="yes" xml:space="preserve">
          <source>Fixed bug in Mocha where it incorrectly associates &lt;code&gt;hook.ctx.currentTest&lt;/code&gt; to the wrong &lt;code&gt;test&lt;/code&gt;. &lt;a href=&quot;https://github.com/mochajs/mocha/issues/1638&quot;&gt;Mocha Issue&lt;/a&gt;.</source>
          <target state="translated">Mocha에서 &lt;code&gt;hook.ctx.currentTest&lt;/code&gt; 를 잘못된 &lt;code&gt;test&lt;/code&gt; 잘못 연결 시키는 버그가 수정되었습니다 . &lt;a href=&quot;https://github.com/mochajs/mocha/issues/1638&quot;&gt;모카 문제&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="612dfb9e3b3cdc617ab91ece26ddc8558ce3af03" translate="yes" xml:space="preserve">
          <source>Fixed bug when &lt;code&gt;Errors&lt;/code&gt; that threw with no arguments: &lt;code&gt;throw new Error()&lt;/code&gt; and had their messages appended would duplicate the message over and over again. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1338&quot;&gt;#1338&lt;/a&gt;.</source>
          <target state="translated">인수없이 던진 &lt;code&gt;Errors&lt;/code&gt; : &lt;code&gt;throw new Error()&lt;/code&gt; 해당 메시지가 추가되어 메시지가 계속 반복되는 버그를 수정 했습니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1338&quot;&gt;# 1338&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="918a3cf4f69c121b36ee0b2424185525b6d9ad4b" translate="yes" xml:space="preserve">
          <source>Fixed bug where mocked Dates using &lt;a href=&quot;../../api/commands/clock&quot;&gt;&lt;code&gt;cy.clock()&lt;/code&gt;&lt;/a&gt; would not be an instance of &lt;code&gt;Date&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2570&quot;&gt;#2570&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/clock&quot;&gt; &lt;code&gt;cy.clock()&lt;/code&gt; &lt;/a&gt; 사용하여 조롱 한 날짜 가 &lt;code&gt;Date&lt;/code&gt; 인스턴스가 아닌 버그가 수정되었습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2570&quot;&gt;# 2570&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="4ee9efa7d8a12b518bf4119349b5f2d9f0cde469" translate="yes" xml:space="preserve">
          <source>Fixed bug where only the first DOM element of an array of DOM elements would be blacked out after being passed as argument to &lt;code&gt;blackout&lt;/code&gt; within &lt;a href=&quot;../../api/commands/screenshot&quot;&gt;&lt;code&gt;cy.screenshot()&lt;/code&gt;&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2508&quot;&gt;#2508&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/screenshot&quot;&gt; &lt;code&gt;cy.screenshot()&lt;/code&gt; &lt;/a&gt; 내 에서 &lt;code&gt;blackout&lt;/code&gt; 에 인수로 전달 된 후 DOM 요소 배열의 첫 번째 DOM 요소 만 꺼지는 버그를 수정했습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2508&quot;&gt;# 2508&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="f661fc4b9db21728381b6001a9e54604f162657d" translate="yes" xml:space="preserve">
          <source>Fixed bug where tests were failing due to assertions causing Cypress to accidentally iterate through cross-origin iframes. If you were seeing &amp;ldquo;random&amp;rdquo; cross-origin errors, this likely fixes those issues. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2784&quot;&gt;#2784&lt;/a&gt;.</source>
          <target state="translated">Cypress가 실수로 교차 출처 iframe을 반복하도록하는 주장으로 인해 테스트가 실패하는 버그를 수정했습니다. &quot;랜덤&quot;교차 출처 오류가 표시되면 이러한 문제가 해결 될 수 있습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2784&quot;&gt;# 2784&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="d9c19c5dbeb10fc37ea3887a8e9309cd3159aebf" translate="yes" xml:space="preserve">
          <source>Fixed bug with custom 3rd party Mocha reporters relying on &lt;code&gt;test.titlePath&lt;/code&gt; being a function. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1142&quot;&gt;#1142&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;test.titlePath&lt;/code&gt; 를 함수로 사용하는 커스텀 써드 파티 Mocha 기자의 버그를 수정했습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1142&quot;&gt;# 1142&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="6e77d2327f9187fbef2c0ab464f495a2f7e023ca" translate="yes" xml:space="preserve">
          <source>Fixed bugs with Electron losing focus when running headlessly via &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt;&lt;code&gt;cypress run&lt;/code&gt;&lt;/a&gt; after navigation. Now the browser will always act as if it is focused no matter what and in all situations when running headlessly. If you were seeing focus related problems when running headlessly, this should fix them. Fixes issue &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2190&quot;&gt;#2190&lt;/a&gt;.</source>
          <target state="translated">탐색 후 &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt; &lt;code&gt;cypress run&lt;/code&gt; &lt;/a&gt; 을 통해 헤드리스로 실행할 때 Electron에서 포커스를 잃는 버그를 수정했습니다 . 이제 브라우저는 헤드리스없이 실행될 때 모든 상황에서 어떤 방식 으로든 초점을 맞추는 것처럼 항상 작동합니다. 헤드리스로 실행할 때 포커스 관련 문제가 발생한 경우이 문제를 해결해야합니다. 이슈 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2190&quot;&gt;# 2190&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="7025ef6c77bddd2485fa875c1d5be6a4b45e734a" translate="yes" xml:space="preserve">
          <source>Fixed busted internal timers that caused random timeouts, proxy errors, incorrect delays, and long pauses when loading the GUI. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/572&quot;&gt;#572&lt;/a&gt;.</source>
          <target state="translated">GUI를로드 할 때 임의의 시간 초과, 프록시 오류, 잘못된 지연 및 장시간 일시 중지를 유발하는 버스트 내부 타이머를 수정했습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/572&quot;&gt;# 572&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="56be5cf5478837f13541225d0c7cd0fe3342d7ea" translate="yes" xml:space="preserve">
          <source>Fixed code example for google analytics stubbing &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/issues/1454&quot;&gt;#1454&lt;/a&gt;</source>
          <target state="translated">Google 웹 로그 분석 스터 빙 &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/issues/1454&quot;&gt;# 1454에&lt;/a&gt; 대한 고정 코드 예</target>
        </trans-unit>
        <trans-unit id="2742a044ddb90cd808739a321eebf8d6fcbc15bc" translate="yes" xml:space="preserve">
          <source>Fixed display of tooltips when selecting elements from the Selector Playground so that they display at the correct coordinates when scrolling. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1351&quot;&gt;#1351&lt;/a&gt;.</source>
          <target state="translated">선택기 놀이터에서 요소를 선택할 때 툴팁이 표시되어 스크롤 할 때 올바른 좌표로 표시됩니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1351&quot;&gt;# 1351&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="251641485084c6e1d7bc15a495074840c8bbd600" translate="yes" xml:space="preserve">
          <source>Fixed displaying &lt;code&gt;(null)&lt;/code&gt; contentType when a &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; returned a &lt;code&gt;404&lt;/code&gt; status code. We now only display &lt;code&gt;contentType&lt;/code&gt; when one exists.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;404&lt;/code&gt; 상태 코드를 반환 할 때 &lt;code&gt;(null)&lt;/code&gt; contentType 표시가 수정되었습니다 . &lt;code&gt;contentType&lt;/code&gt; 이 존재하는 경우 에만 표시 합니다.</target>
        </trans-unit>
        <trans-unit id="6e0af6a0db32674c472a21c20d182a7188e2555d" translate="yes" xml:space="preserve">
          <source>Fixed domain parsing failures when &lt;code&gt;local&lt;/code&gt; or &lt;code&gt;localhost&lt;/code&gt; was not used as a &lt;code&gt;tld&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1292&quot;&gt;#1292&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1278&quot;&gt;#1278&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;local&lt;/code&gt; 또는 &lt;code&gt;localhost&lt;/code&gt; 가 &lt;code&gt;tld&lt;/code&gt; 로 사용되지 않을 때 도메인 구문 분석 실패를 수정했습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1292&quot;&gt;# 1292&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1278&quot;&gt;# 1278을&lt;/a&gt; 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="d8a8afb7ba2a95345f8cb179792976f988c1c4a1" translate="yes" xml:space="preserve">
          <source>Fixed edge case where Cypress would not correctly handle &lt;code&gt;POST&lt;/code&gt; or &lt;code&gt;PUT&lt;/code&gt; requests with a JSON body. These requests would just hang and eventually time out.</source>
          <target state="translated">Cypress가 JSON 본문으로 &lt;code&gt;POST&lt;/code&gt; 또는 &lt;code&gt;PUT&lt;/code&gt; 요청을 올바르게 처리하지 못하는 고정 된 경우 입니다. 이러한 요청은 중단되고 결국 시간 초과됩니다.</target>
        </trans-unit>
        <trans-unit id="c2d7a413de44f197a54d70c4b3e138fc45ad09e8" translate="yes" xml:space="preserve">
          <source>Fixed edge case where XHR&amp;rsquo;s which were already aborted were aborted a 2nd time when tests end. Cypress now only aborts currently running XHR&amp;rsquo;s which have not already been aborted.</source>
          <target state="translated">테스트가 종료 될 때 이미 중단 된 XHR이 두 번째 중단 된 고정 엣지 케이스. Cypress는 현재 중단되지 않은 XHR을 현재 실행중인 경우에만 중단합니다.</target>
        </trans-unit>
        <trans-unit id="15db83a7134834b98a8112f0a9f994c44579c61c" translate="yes" xml:space="preserve">
          <source>Fixed edge case with &lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains()&lt;/code&gt;&lt;/a&gt; and command options &lt;code&gt;visible&lt;/code&gt; and &lt;code&gt;exist&lt;/code&gt; where it would always fail ven though the matched element was in the correct state.</source>
          <target state="translated">고정 가장자리와 케이스 &lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains()&lt;/code&gt; &lt;/a&gt; 및 명령 옵션 &lt;code&gt;visible&lt;/code&gt; 와 &lt;code&gt;exist&lt;/code&gt; 일치하는 요소가 올바른 상태에 비록 항상 VEN 실패합니다.</target>
        </trans-unit>
        <trans-unit id="736d2fd6d67eea3c666645e76df7818015a827a3" translate="yes" xml:space="preserve">
          <source>Fixed error message on &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/clear&quot;&gt;&lt;code&gt;.clear()&lt;/code&gt;&lt;/a&gt; when typing into non-typeable elements or clearing non-clearable elements to accurately list the elements allowed. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1650&quot;&gt;#1650&lt;/a&gt;.</source>
          <target state="translated">입력 할 수없는 요소를 입력하거나 지울 수없는 요소를 지우면 허용되는 요소를 정확하게 나열 할 때 &lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../api/commands/clear&quot;&gt; &lt;code&gt;.clear()&lt;/code&gt; &lt;/a&gt; 오류 메시지가 수정 되었습니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1650&quot;&gt;# 1650&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="02b2238de0c84627cddc80afe17c2ea623cb3c16" translate="yes" xml:space="preserve">
          <source>Fixed error when recording and failing to parse the git commit message. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/847&quot;&gt;#847&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/841&quot;&gt;#841&lt;/a&gt;.</source>
          <target state="translated">git commit 메시지를 기록하고 구문 분석하지 못하는 오류가 수정되었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/847&quot;&gt;# 847&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/841&quot;&gt;# 841을&lt;/a&gt; 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="3040a4458cc421fb2d22a8003bbe0b372f72da17" translate="yes" xml:space="preserve">
          <source>Fixed even more issues with &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; not inserting characters on &lt;code&gt;input[type=number]&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1381&quot;&gt;#1381&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;input[type=number]&lt;/code&gt; 에 &lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 이 문자를 삽입하지 않는 문제가 해결되었습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1381&quot;&gt;# 1381&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="ff4a60d5e898f49af55b20216c54316464791778" translate="yes" xml:space="preserve">
          <source>Fixed file watching when changing the &lt;code&gt;integrationFolder&lt;/code&gt; to something other than the default value. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/438&quot;&gt;#438&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;integrationFolder&lt;/code&gt; 를 기본값 이외의 것으로 변경할 때 파일 감시가 수정되었습니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/438&quot;&gt;# 438&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f71d3bd8125a553f32eb8e552ca0938dfda05a60" translate="yes" xml:space="preserve">
          <source>Fixed hook failure associated to wrong failed current test when &lt;code&gt;grep&lt;/code&gt; was set.</source>
          <target state="translated">&lt;code&gt;grep&lt;/code&gt; 을 설정할 때 잘못된 실패한 전류 테스트와 관련된 고정 후크 실패</target>
        </trans-unit>
        <trans-unit id="773347c43b2905ce0adc0b80483b6cedf1665d7a" translate="yes" xml:space="preserve">
          <source>Fixed icons visually shifting when tests were running in the Test Runner. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1983&quot;&gt;#1983&lt;/a&gt;.</source>
          <target state="translated">테스트 러너에서 테스트가 실행될 때 아이콘이 시각적으로 바뀌는 문제를 수정했습니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1983&quot;&gt;# 1983&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a639d3246f9660269f602500bc09f7512383b7c2" translate="yes" xml:space="preserve">
          <source>Fixed incomplete type definitions for &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request&lt;/code&gt;&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2305&quot;&gt;#2305&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request&lt;/code&gt; 에&lt;/a&gt; 대한 불완전한 유형 정의가 수정 되었습니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2305&quot;&gt;# 2305&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="55fe1fe1beaaad0ae95c08429f866661564ed878" translate="yes" xml:space="preserve">
          <source>Fixed incorrect JSDoc comments in type definition for &lt;a href=&quot;../../api/commands/focus&quot;&gt;.focus()&lt;/a&gt; and better formatted comments in type definitions. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2975&quot;&gt;#2975&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2954&quot;&gt;#2954&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/focus&quot;&gt;.focus ()에&lt;/a&gt; 대한 유형 정의에서 잘못된 JSDoc 주석 및 유형 정의에서 형식이 지정된 주석이 수정되었습니다. 주소 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2975&quot;&gt;# 2975&lt;/a&gt; 과 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2954&quot;&gt;# 2954&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="812109db35de49de7db730b131b54593ddd17605" translate="yes" xml:space="preserve">
          <source>Fixed incorrect error message on reverse visibility assertions. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/275&quot;&gt;#275&lt;/a&gt;.</source>
          <target state="translated">역 가시성 어설 션에서 잘못된 오류 메시지가 수정되었습니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/275&quot;&gt;# 275&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5c069db9105c52c4f356c338dd1d13ea2ca1306f" translate="yes" xml:space="preserve">
          <source>Fixed incorrect type definition for options usage for &lt;a href=&quot;../../api/commands/then&quot;&gt;.then()&lt;/a&gt;. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3075&quot;&gt;#3075&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/then&quot;&gt;.then ()의&lt;/a&gt; 옵션 사용법에 대한 잘못된 유형 정의를 수정했습니다 . 주소 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3075&quot;&gt;# 3075&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="86b030fdcb00b2f9bf3970fa4fbc426e90f71819" translate="yes" xml:space="preserve">
          <source>Fixed incorrectly setting &lt;code&gt;charCode&lt;/code&gt; and &lt;code&gt;keyCode&lt;/code&gt; when using &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; on a few different special characters such as &lt;code&gt;{&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2105&quot;&gt;#2105&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;{&lt;/code&gt; 와 같은 몇 가지 다른 특수 문자에서 &lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 을 사용할 때 &lt;code&gt;charCode&lt;/code&gt; 및 &lt;code&gt;keyCode&lt;/code&gt; 를 잘못 설정 하는 문제가 해결되었습니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2105&quot;&gt;# 2105&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="14d73fb5c06694aa48acf2fc44c2e17262c62426" translate="yes" xml:space="preserve">
          <source>Fixed inserting the string &lt;code&gt;null&lt;/code&gt; into &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; urls when providing a &lt;code&gt;baseUrl&lt;/code&gt; in &lt;code&gt;cypress.json&lt;/code&gt; while origin could not be determined. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/274&quot;&gt;#274&lt;/a&gt;.</source>
          <target state="translated">문자열 삽입 고정 &lt;code&gt;null&lt;/code&gt; 에 &lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt; 제공 할 때 URL을 &lt;code&gt;baseUrl&lt;/code&gt; 에 &lt;code&gt;cypress.json&lt;/code&gt; 원점이 결정되지 않을 수있다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/274&quot;&gt;# 274&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="afeb42766edda55645ad3cb0a7d8d0216d4eb01b" translate="yes" xml:space="preserve">
          <source>Fixed internal Cypress tests. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2606&quot;&gt;#2606&lt;/a&gt;.</source>
          <target state="translated">내부 Cypress 테스트를 수정했습니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2606&quot;&gt;# 2606&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1382c51c4ccba4ae45334849e71d4f3885625dc2" translate="yes" xml:space="preserve">
          <source>Fixed internal test error &lt;code&gt;beforeSpecRun is not a function&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2401&quot;&gt;#2401&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;beforeSpecRun is not a function&lt;/code&gt; 내부 테스트 오류가 수정되었습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2401&quot;&gt;# 2401&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="2017dd059d0898c9d6a5369d875f74f7a20a1f79" translate="yes" xml:space="preserve">
          <source>Fixed issue of Cypress being unable to play videos with &lt;code&gt;autoplay&lt;/code&gt;. We now pass the &lt;code&gt;--no-user-gesture-required&lt;/code&gt; command line switch to Chrome. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2376&quot;&gt;#2376&lt;/a&gt;.</source>
          <target state="translated">Cypress가 &lt;code&gt;autoplay&lt;/code&gt; 재생 기능으로 비디오를 재생할 수없는 문제가 해결되었습니다 . 이제 &lt;code&gt;--no-user-gesture-required&lt;/code&gt; 명령 줄 스위치를 Chrome에 전달합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2376&quot;&gt;# 2376&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="d1454c9f7e105098250079b6197e4fc0d616f586" translate="yes" xml:space="preserve">
          <source>Fixed issue when using &lt;a href=&quot;../../api/commands/writefile&quot;&gt;&lt;code&gt;cy.writeFile()&lt;/code&gt;&lt;/a&gt; and passing an object to a &lt;code&gt;.json&lt;/code&gt; file. The object is now correctly written to the JSON file instead of a string. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/2373&quot;&gt;#2373&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/writefile&quot;&gt; &lt;code&gt;cy.writeFile()&lt;/code&gt; &lt;/a&gt; 을 사용하고 &lt;code&gt;.json&lt;/code&gt; 파일로 객체를 전달할 때 발생하는 문제를 해결했습니다 . 이제 객체가 문자열 대신 JSON 파일에 올바르게 기록됩니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/2373&quot;&gt;# 2373&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="2c353974950c8f90d95bbad7cc4de3cde862a338" translate="yes" xml:space="preserve">
          <source>Fixed issue when using TypeScript that caused namespace errors to be thrown. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1627&quot;&gt;#1627&lt;/a&gt;.</source>
          <target state="translated">네임 스페이스 오류가 발생하는 TypeScript 사용시 문제가 해결되었습니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1627&quot;&gt;# 1627&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1229a64e09bfdf46d6b860f6c4fd4b0b0c37d277" translate="yes" xml:space="preserve">
          <source>Fixed issue where &lt;a href=&quot;../../api/commands/exec&quot;&gt;&lt;code&gt;cy.exec()&lt;/code&gt;&lt;/a&gt; was failing when running Cypress in docker. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/517&quot;&gt;#517&lt;/a&gt;.</source>
          <target state="translated">docker에서 Cypress를 실행할 때 &lt;a href=&quot;../../api/commands/exec&quot;&gt; &lt;code&gt;cy.exec()&lt;/code&gt; &lt;/a&gt; 가 실패하는 문제가 해결 되었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/517&quot;&gt;# 517&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="f3853b829c65b8667819b5bb5a82df44fa46e42b" translate="yes" xml:space="preserve">
          <source>Fixed issue where &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;type=&quot;email&quot;&lt;/code&gt; inputs were throwing an error. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/504&quot;&gt;#504&lt;/a&gt;.</source>
          <target state="translated">문제가 해결 어디 &lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 와 &lt;code&gt;type=&quot;email&quot;&lt;/code&gt; 입력 오류를 던지고 있었다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/504&quot;&gt;# 504&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="615a0b78351a76d8edfafb3a29f2bd3dbac0de0f" translate="yes" xml:space="preserve">
          <source>Fixed issue where &lt;code&gt;event&lt;/code&gt; was undefined when using an &lt;code&gt;onload&lt;/code&gt; event handler. Fixed &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2859&quot;&gt;#2859&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;onload&lt;/code&gt; 이벤트 핸들러를 사용할 때 &lt;code&gt;event&lt;/code&gt; 가 정의되지 않는 문제가 해결 되었습니다 . 고정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2859&quot;&gt;# 2859&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f19256491757bc321389a1dfb9fde2c16863ab68" translate="yes" xml:space="preserve">
          <source>Fixed issue where &lt;code&gt;stdout&lt;/code&gt; would not be displayed on a completed &lt;code&gt;cypress ci&lt;/code&gt; run. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/398&quot;&gt;#398&lt;/a&gt;.</source>
          <target state="translated">완료된 &lt;code&gt;cypress ci&lt;/code&gt; 실행 에서 &lt;code&gt;stdout&lt;/code&gt; 이 표시되지 않는 문제가 해결 되었습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/398&quot;&gt;# 398&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="d5537ac05b50b1d9d5162eb0be6a42dadc20efb9" translate="yes" xml:space="preserve">
          <source>Fixed issue where &lt;code&gt;window.performance.getEntriesByType&lt;/code&gt; would return &lt;code&gt;undefined&lt;/code&gt; instead of an array within application code when using &lt;a href=&quot;../../api/commands/clock&quot;&gt;&lt;code&gt;cy.clock()&lt;/code&gt;&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3625&quot;&gt;#3625&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/clock&quot;&gt; &lt;code&gt;cy.clock()&lt;/code&gt; &lt;/a&gt; 사용할 때 &lt;code&gt;window.performance.getEntriesByType&lt;/code&gt; 이 애플리케이션 코드 내의 배열 대신 &lt;code&gt;undefined&lt;/code&gt; 것을 반환하는 문제가 해결되었습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3625&quot;&gt;# 3625&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="55113d9d2801f6fddc9e5b2e5b21e5962d7abbdd" translate="yes" xml:space="preserve">
          <source>Fixed issue where Cypress hanged due to Xvfb permissions. More intuitive output is given during install failures. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/330&quot;&gt;#330&lt;/a&gt;.</source>
          <target state="translated">Xvfb 권한으로 인해 Cypress가 중단되는 문제가 해결되었습니다. 설치 실패시보다 직관적 인 출력이 제공됩니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/330&quot;&gt;# 330&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="af8382ebdd6683a30092c82e522e5fa69083d349" translate="yes" xml:space="preserve">
          <source>Fixed issue where Cypress would hang indefinitely when starting a new spec when in &lt;code&gt;cypress run&lt;/code&gt; mode. Additionally we have optimized the code path to not read in the local &lt;code&gt;state.json&lt;/code&gt; unnecessarily. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2013&quot;&gt;#2013&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1912&quot;&gt;#1912&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1905&quot;&gt;#1905&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1890&quot;&gt;#1890&lt;/a&gt;.</source>
          <target state="translated">Cypress &lt;code&gt;cypress run&lt;/code&gt; 모드 에서 새 사양을 시작할 때 Cypress가 무기한 중단되는 문제가 해결되었습니다 . 또한 로컬 &lt;code&gt;state.json&lt;/code&gt; 에서 불필요하게 읽지 않도록 코드 경로를 최적화했습니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2013&quot;&gt;# 2013&lt;/a&gt; 과 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1912&quot;&gt;# 1912&lt;/a&gt; 과 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1905&quot;&gt;# 1905&lt;/a&gt; 과 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1890&quot;&gt;# 1890&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c693ab41296c3860cbfeee8a1756daba46604250" translate="yes" xml:space="preserve">
          <source>Fixed issue where Cypress would inject a script tag before the &lt;code&gt;&amp;lt;!DOCTYPE&amp;gt;&lt;/code&gt; declaration when the document only contained the doctype declaration. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2617&quot;&gt;#2617&lt;/a&gt;.</source>
          <target state="translated">문서에 doctype 선언 만 포함 된 경우 Cypress가 &lt;code&gt;&amp;lt;!DOCTYPE&amp;gt;&lt;/code&gt; 선언 전에 스크립트 태그를 삽입하는 문제가 해결되었습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2617&quot;&gt;# 2617&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="3b27680405327ff681dcf5185a3a98aa323ece7e" translate="yes" xml:space="preserve">
          <source>Fixed issue where Cypress would unnecessarily scroll when attempting to locate elements with &lt;code&gt;position: sticky&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1475&quot;&gt;#1475&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;position: sticky&lt;/code&gt; 요소를 찾을 때 Cypress가 불필요하게 스크롤되는 문제가 해결되었습니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1475&quot;&gt;# 1475&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c2b7eb108e49697e592b89d9e9807fdf2cb5d8f9" translate="yes" xml:space="preserve">
          <source>Fixed issue where XHR&amp;rsquo;s &lt;code&gt;onreadystatechange&lt;/code&gt; was not receiving the proper event arguments. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2925&quot;&gt;#2925&lt;/a&gt;.</source>
          <target state="translated">XHR의 &lt;code&gt;onreadystatechange&lt;/code&gt; 가 적절한 이벤트 인수를받지 못하는 문제가 해결 되었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2925&quot;&gt;# 2925&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="c75325a7a749e1fc18b62df4e805e6f8f88e6325" translate="yes" xml:space="preserve">
          <source>Fixed issue where a fix included in &lt;a href=&quot;changelog#3.1.2&quot;&gt;3.1.2&lt;/a&gt; did not pass the &lt;code&gt;windowsHide&lt;/code&gt; argument to the proper options. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2667&quot;&gt;#2667&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2809&quot;&gt;#2809&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;changelog#3.1.2&quot;&gt;3.1.2에&lt;/a&gt; 포함 된 수정 프로그램 이 &lt;code&gt;windowsHide&lt;/code&gt; 인수를 적절한 옵션으로 전달하지 않는 문제가 해결되었습니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2667&quot;&gt;# 2667&lt;/a&gt; 과 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2809&quot;&gt;# 2809&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b14a57a15e2e6d2187b8c1897a452a081b129491" translate="yes" xml:space="preserve">
          <source>Fixed issue where all arguments passed to &lt;code&gt;setTimeout&lt;/code&gt; or &lt;code&gt;setInterval&lt;/code&gt; were not properly passed on to the target function. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3592&quot;&gt;#3592&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;setTimeout&lt;/code&gt; 또는 &lt;code&gt;setInterval&lt;/code&gt; 에 전달 된 모든 인수 가 대상 함수에 제대로 전달되지 않는 문제가 해결 되었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3592&quot;&gt;# 3592&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="ea4ef4f116dcb42f5a217dc3ebfbfc859b67eb15" translate="yes" xml:space="preserve">
          <source>Fixed issue where an internal &lt;code&gt;layout.html&lt;/code&gt; file would inadvertently get loaded instead of the spec file. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2891&quot;&gt;#2891&lt;/a&gt;.</source>
          <target state="translated">사양 파일 대신 내부 &lt;code&gt;layout.html&lt;/code&gt; 파일이 실수로로드 되는 문제가 해결되었습니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2891&quot;&gt;# 2891&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="61e2e78d63092fd0aaa0b59a93c82f55d29ec065" translate="yes" xml:space="preserve">
          <source>Fixed issue where applications programmatically stealing focus would lead to slow runs in Electron when running via &lt;code&gt;cypress run&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1909&quot;&gt;#1909&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1892&quot;&gt;#1892&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cypress run&lt;/code&gt; 통해 실행할 때 프로그램 방식으로 포커스를 훔치는 응용 프로그램이 Electron에서 느리게 실행되는 문제가 해결되었습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1909&quot;&gt;# 1909&lt;/a&gt; 와 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1892&quot;&gt;# 1892&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="78e6597c87a7313be05729a497c7bfd4b42fb202" translate="yes" xml:space="preserve">
          <source>Fixed issue where change events with &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; would not fire correctly for many more situations and edge cases. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/651&quot;&gt;#651&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 사용하여 변경 이벤트가 더 많은 상황 및 엣지 사례에서 올바르게 실행되지 않는 문제가 해결 되었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/651&quot;&gt;# 651&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="6082a19eab3879c28c8957cc98d4a27f61e03996" translate="yes" xml:space="preserve">
          <source>Fixed issue where changing any spec file (renaming, adding, deleting) would remove the highlighted styling of the currently active spec file in the Test Runner. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/547&quot;&gt;#547&lt;/a&gt;.</source>
          <target state="translated">스펙 파일을 변경 (이름 바꾸기, 추가, 삭제)하면 현재 실행중인 스펙 파일의 강조 표시된 스타일이 Test Runner에서 제거되는 문제가 해결되었습니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/547&quot;&gt;# 547&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="23469c7b5f76bbf207e4c3d7030fc6fc6c2a0936" translate="yes" xml:space="preserve">
          <source>Fixed issue where clipped elements with &lt;code&gt;overflow-y: hidden&lt;/code&gt; were falsely passing as &amp;ldquo;visible&amp;rdquo;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/563&quot;&gt;#563&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;overflow-y: hidden&lt;/code&gt; 이 있는 잘린 요소가 &quot;표시&quot;로 잘못 전달되는 문제가 해결 되었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/563&quot;&gt;# 563&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="6343d4371cb8f9c21357792d33c5d7f89a53124d" translate="yes" xml:space="preserve">
          <source>Fixed issue where commands would retry and potentially exceed their timeout values during page transitions. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/594&quot;&gt;#594&lt;/a&gt;</source>
          <target state="translated">페이지 전환 중에 명령이 재 시도되고 시간 초과 값을 초과 할 수있는 문제가 해결되었습니다. 픽스 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/594&quot;&gt;# 594&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="769e7ca2ba949f14f3ce789237c3e7e10b742074" translate="yes" xml:space="preserve">
          <source>Fixed issue where preprocessor errors were being swallowed. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1877&quot;&gt;#1877&lt;/a&gt;.</source>
          <target state="translated">전 처리기 오류가 삼키는 문제가 해결되었습니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1877&quot;&gt;# 1877&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3119210afd00c5c5dc51ca602238f3d34a0039e0" translate="yes" xml:space="preserve">
          <source>Fixed issue where server error&amp;rsquo;s stack traces were being truncated in the Desktop app rendering them impossible to debug. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/133&quot;&gt;#133&lt;/a&gt;.</source>
          <target state="translated">데스크탑 앱에서 서버 오류의 스택 추적이 잘려서 디버깅 할 수없는 문제가 해결되었습니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/133&quot;&gt;# 133&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e9e189fc50c663b6981fb1654c5697d44b263104" translate="yes" xml:space="preserve">
          <source>Fixed issue where server routes were lost after page load if not initiated by a &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; command. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/177&quot;&gt;#177&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 명령으로 시작하지 않으면 페이지로드 후 서버 경로가 손실되는 문제가 해결되었습니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/177&quot;&gt;# 177&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e69dc3681b067698e46ab13ea4db8ed44cdf0460" translate="yes" xml:space="preserve">
          <source>Fixed issue where setting &lt;code&gt;fixturesFolder&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; would throw an error. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/450&quot;&gt;#450&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;fixturesFolder&lt;/code&gt; 를 &lt;code&gt;false&lt;/code&gt; 로 설정 하면 오류가 발생하는 문제가 해결되었습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/450&quot;&gt;# 450&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="50f490aa3955787ecd6045dae96e18a4ca0fd962" translate="yes" xml:space="preserve">
          <source>Fixed issue where some TTY characters were not properly formatted in the terminal for Windows during &lt;code&gt;cypress run&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1143&quot;&gt;#1143&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1550&quot;&gt;#1550&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cypress run&lt;/code&gt; 하는 동안 Windows 용 터미널에서 일부 TTY 문자가 올바르게 포맷되지 않는 문제가 해결되었습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1143&quot;&gt;# 1143&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1550&quot;&gt;# 1550을&lt;/a&gt; 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="8fe62793640f8f0e386492283f323b52ec484dc1" translate="yes" xml:space="preserve">
          <source>Fixed issue where support for &lt;code&gt;have.focus&lt;/code&gt;, &lt;code&gt;not.have.focus&lt;/code&gt;, &lt;code&gt;be.focused&lt;/code&gt; and &lt;code&gt;not.be.focused&lt;/code&gt;&lt;a href=&quot;assertions&quot;&gt;assertions&lt;/a&gt; were not working. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4265&quot;&gt;#4265&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;have.focus&lt;/code&gt; , &lt;code&gt;not.have.focus&lt;/code&gt; , &lt;code&gt;be.focused&lt;/code&gt; 및 &lt;code&gt;not.be.focused&lt;/code&gt; &lt;a href=&quot;assertions&quot;&gt;어설 션에&lt;/a&gt; 대한 지원 이 작동하지 않는 문제가 해결 되었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4265&quot;&gt;# 4265&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="a7106ffbbd512163862ccb5d6274bfec4bb8c5d1" translate="yes" xml:space="preserve">
          <source>Fixed issue where the &lt;code&gt;onLoad&lt;/code&gt; event was never being called when calling &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; on the url Cypress is currently navigated to. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1311&quot;&gt;#1311&lt;/a&gt;.</source>
          <target state="translated">URL Cypress에서 현재 &lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 를 호출 할 때 &lt;code&gt;onLoad&lt;/code&gt; 이벤트가 호출되지 않는 문제가 해결 되었습니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1311&quot;&gt;# 1311&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7ab8e2b0380bae519febf7ace85d368f6eb6e2b7" translate="yes" xml:space="preserve">
          <source>Fixed issue where the Chromium browser was not detected in Linux due to Cypress not distinguishing between Chrome and Chromium browsers with the same version. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1400&quot;&gt;#1400&lt;/a&gt;.</source>
          <target state="translated">Cypress가 동일한 버전의 Chrome과 Chromium 브라우저를 구분하지 않아 Linux에서 Chromium 브라우저가 감지되지 않는 문제가 해결되었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1400&quot;&gt;# 1400&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="b230f3bd283ba447a34dcf6083f2a7c9400b8949" translate="yes" xml:space="preserve">
          <source>Fixed issue where the Cypress &lt;code&gt;window&lt;/code&gt; was being returned instead of AUT&amp;rsquo;s &lt;code&gt;window&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1436&quot;&gt;#1436&lt;/a&gt;.</source>
          <target state="translated">AUT의 &lt;code&gt;window&lt;/code&gt; 대신 Cypress &lt;code&gt;window&lt;/code&gt; 반환되는 문제가 해결 되었습니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1436&quot;&gt;# 1436&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="686a2f479eec0633cf642042cb9fe61613147511" translate="yes" xml:space="preserve">
          <source>Fixed issue where the contents of &lt;code&gt;state.json&lt;/code&gt; were emptied, which would cause a crash and loss of state information. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/473&quot;&gt;#473&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/474&quot;&gt;#474&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;state.json&lt;/code&gt; 의 내용이 비워져 충돌이 발생하고 상태 정보가 손실되는 문제가 해결 되었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/473&quot;&gt;# 473&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/474&quot;&gt;# 474를&lt;/a&gt; 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="c8025d1cc05af8c1db3cebb543fa817cdbc88f08" translate="yes" xml:space="preserve">
          <source>Fixed issue where using &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; on an input with a &lt;code&gt;type&lt;/code&gt; defined in uppercase (&lt;code&gt;input type=&quot;TEXT&quot;&lt;/code&gt;) would throw an error and not type. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/550&quot;&gt;#550&lt;/a&gt;.</source>
          <target state="translated">여기서 사용하는 문제를 해결 &lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; A의 입력에 &lt;code&gt;type&lt;/code&gt; 자로 정의 ( &lt;code&gt;input type=&quot;TEXT&quot;&lt;/code&gt; 오류가 발생하고 입력 할 것). &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/550&quot;&gt;# 550&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="0e4d146daf8133a0b16ea12603fb29188c6f270c" translate="yes" xml:space="preserve">
          <source>Fixed issue where videos would not be recorded when an object was returned from &lt;code&gt;before:browser:launch&lt;/code&gt; when in the Electron browser. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1992&quot;&gt;#1992&lt;/a&gt;.</source>
          <target state="translated">Electron 브라우저에있을 때 &lt;code&gt;before:browser:launch&lt;/code&gt; 에서 객체가 반환 될 때 비디오가 기록되지 않는 문제가 해결되었습니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1992&quot;&gt;# 1992&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ff7cd280bca9001a56c43a9624644de7feee27b4" translate="yes" xml:space="preserve">
          <source>Fixed issue with &lt;a href=&quot;../../api/commands/clear&quot;&gt;&lt;code&gt;.clear()&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;type=&quot;number&quot;&lt;/code&gt; inputs. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/490&quot;&gt;#490&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/clear&quot;&gt; &lt;code&gt;.clear()&lt;/code&gt; &lt;/a&gt; 및 &lt;code&gt;type=&quot;number&quot;&lt;/code&gt; 입력 문제가 해결되었습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/490&quot;&gt;# 490&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="1f47175651ab56ab638ece075424b7507180fbf1" translate="yes" xml:space="preserve">
          <source>Fixed issue with loading fixture files containing more than one &lt;code&gt;.&lt;/code&gt; in their filename while not specifying the file extension. We are also displaying a clearer warning when a fixture file cannot be found. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1402&quot;&gt;#1402&lt;/a&gt;.</source>
          <target state="translated">둘 이상의를 포함하는 조명기 파일을로드 할 때 발생하는 문제를 수정했습니다 &lt;code&gt;.&lt;/code&gt; 파일 확장자를 지정하지 않으면 서 파일 이름으로 또한 조명기 파일을 찾을 수 없을 때 더 명확한 경고가 표시됩니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1402&quot;&gt;# 1402&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="f1eafcab2c39c7bc18501c64d2171c4b3eb48ac0" translate="yes" xml:space="preserve">
          <source>Fixed issue with multiple &lt;code&gt;readyStateChanges&lt;/code&gt; with the same &lt;code&gt;readyState&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1150&quot;&gt;#1150&lt;/a&gt;.</source>
          <target state="translated">동일한 &lt;code&gt;readyState&lt;/code&gt; 로 여러 &lt;code&gt;readyStateChanges&lt;/code&gt; 문제가 해결되었습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1150&quot;&gt;# 1150&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="41c25c79688ff0690197673cdc2c4e9efaa4e51b" translate="yes" xml:space="preserve">
          <source>Fixed issues involving XHRs displaying as &amp;lsquo;aborted&amp;rsquo; in the Cypress Command Log when they were not actually aborted. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1652&quot;&gt;#1652&lt;/a&gt;.</source>
          <target state="translated">Cypress 명령 로그에서 XHR이 실제로 중단되지 않았을 때 '중지됨'으로 표시되는 문제를 수정했습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1652&quot;&gt;# 1652&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="f6119c94c4f2fd34d62c927a8b7e0d1b0b73dcec" translate="yes" xml:space="preserve">
          <source>Fixed issues where &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; was not appending text properly. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/503&quot;&gt;#503&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/568&quot;&gt;#568&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 이 텍스트를 제대로 추가하지 않는 문제가 해결 되었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/503&quot;&gt;# 503&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/568&quot;&gt;# 568을&lt;/a&gt; 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="b0e69a0ad1bef2e68406fab5ff999c0a0b85e190" translate="yes" xml:space="preserve">
          <source>Fixed issues with &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; not firing the &lt;code&gt;change&lt;/code&gt; event on &lt;code&gt;input[type=number]&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1171&quot;&gt;#1171&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;input[type=number]&lt;/code&gt; 에서 &lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 이 &lt;code&gt;change&lt;/code&gt; 이벤트를 발생시키지 않는 문제를 해결했습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1171&quot;&gt;# 1171&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="ec5062ddce1588be8e74acc91c85aa3ca70c8eb5" translate="yes" xml:space="preserve">
          <source>Fixed issues with typing into JS based text-mask plugins. Basically anything that would alter the &lt;code&gt;.value&lt;/code&gt; in response to certain events now works correctly. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/940&quot;&gt;#940&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1684&quot;&gt;#1684&lt;/a&gt;.</source>
          <target state="translated">JS 기반 텍스트 마스크 플러그인에 입력 할 때 발생하는 문제를 수정했습니다. 기본적으로 특정 이벤트에 대한 응답으로 &lt;code&gt;.value&lt;/code&gt; 를 변경하는 모든 것이 이제 올바르게 작동합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/940&quot;&gt;# 940&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1684&quot;&gt;# 1684&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="5328ad377c6cc0c950ce0f104153a1169a508e90" translate="yes" xml:space="preserve">
          <source>Fixed many issues with typing into &lt;code&gt;[contenteditable]&lt;/code&gt; elements. WYSIWYG, &lt;a href=&quot;https://draftjs.org/&quot;&gt;Draft.js&lt;/a&gt; based, and other HTML editors now work correctly. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/596&quot;&gt;#596&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1686&quot;&gt;#1686&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2096&quot;&gt;#2096&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;[contenteditable]&lt;/code&gt; 요소에 입력 할 때 발생하는 많은 문제를 해결했습니다 . WYSIWYG, &lt;a href=&quot;https://draftjs.org/&quot;&gt;Draft.js&lt;/a&gt; 기반 및 기타 HTML 편집기가 이제 올바르게 작동합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/596&quot;&gt;# 596&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1686&quot;&gt;# 1686&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2096&quot;&gt;# 2096을&lt;/a&gt; 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="9c9cc16289962ed52b63c65cfc10f5d7a7112ffa" translate="yes" xml:space="preserve">
          <source>Fixed missing &lt;code&gt;aliasType&lt;/code&gt; from primitives and some DOM aliases, which prevent the background color from displaying in the UI.</source>
          <target state="translated">프리미티브 및 일부 DOM 별칭에서 누락 된 &lt;code&gt;aliasType&lt;/code&gt; 이 수정 되어 UI에 배경색이 표시되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c2d6f09dd07845b621667382b48aa0fbfa00c07a" translate="yes" xml:space="preserve">
          <source>Fixed missing dependency for CI.</source>
          <target state="translated">CI에 대한 누락 된 종속성이 수정되었습니다.</target>
        </trans-unit>
        <trans-unit id="2338274d63db423cc9c9f3c87f5c93d5d86ba839" translate="yes" xml:space="preserve">
          <source>Fixed missing files from deployment. Added tests around this.</source>
          <target state="translated">배치에서 누락 된 파일을 수정했습니다. 이것에 대한 테스트를 추가했습니다.</target>
        </trans-unit>
        <trans-unit id="a7f782dd62aa8c332550fad64089662ab46e1e9d" translate="yes" xml:space="preserve">
          <source>Fixed more edge cases where legitimate JavaScript code was being modified unexpectedly by the &lt;a href=&quot;configuration#Browser&quot;&gt;&lt;code&gt;modifyObstructiveCode&lt;/code&gt;&lt;/a&gt; configuration. We&amp;rsquo;ve tightened up the RegExp even more and added 40 popular JS libraries to test against to ensure they are not modified. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1334&quot;&gt;#1334&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;configuration#Browser&quot;&gt; &lt;code&gt;modifyObstructiveCode&lt;/code&gt; &lt;/a&gt; 구성 으로 인해 합법적 인 JavaScript 코드가 예기치 않게 수정되는 더 많은 경우를 수정했습니다 . 우리는 RegExp를 더욱 강화하고 40 개의 인기있는 JS 라이브러리를 추가하여 수정되지 않았는지 테스트했습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1334&quot;&gt;# 1334&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="f0eb4a78d03cd66d4c95162944c3e65fc1ebb77c" translate="yes" xml:space="preserve">
          <source>Fixed not being able to type into a &lt;code&gt;datetime-local&lt;/code&gt; input. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1366&quot;&gt;#1366&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;datetime-local&lt;/code&gt; 입력을 입력 할 수 없었던 문제를 수정했습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1366&quot;&gt;# 1366&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="0343e78d24123f511becf5cb6a50acd615d5f5b7" translate="yes" xml:space="preserve">
          <source>Fixed not being able to type negative numbers into &lt;code&gt;input[type=number]&lt;/code&gt; elements. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2173&quot;&gt;#2173&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;input[type=number]&lt;/code&gt; 요소에 음수를 입력 할 수 없던 문제를 수정했습니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2173&quot;&gt;# 2173&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ce2ea5061ccbe451eaebd1b3886b9bdcfe937e20" translate="yes" xml:space="preserve">
          <source>Fixed not being able to visit URLs that used &lt;code&gt;*localhost&lt;/code&gt; such as &lt;code&gt;http://app.localhost:8080&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/451&quot;&gt;#451&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;http://app.localhost:8080&lt;/code&gt; 과 같이 &lt;code&gt;*localhost&lt;/code&gt; 를 사용한 URL을 방문 할 수 없었던 문제를 수정했습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/451&quot;&gt;# 451&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="bb85a7a8a915f26baefc92cd213832444d9dfb78" translate="yes" xml:space="preserve">
          <source>Fixed not being able to visit private TLD&amp;rsquo;s from the public suffix such as &lt;code&gt;github.io&lt;/code&gt;, &lt;code&gt;gitlab.io&lt;/code&gt; or &lt;code&gt;herokuapp.com&lt;/code&gt;. These now all work correctly. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/380&quot;&gt;#380&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/402&quot;&gt;#402&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/802&quot;&gt;#802&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/493&quot;&gt;#493&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1161&quot;&gt;#1161&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;github.io&lt;/code&gt; , &lt;code&gt;gitlab.io&lt;/code&gt; 또는 &lt;code&gt;herokuapp.com&lt;/code&gt; 과 같은 공개 접미사에서 개인 TLD를 방문 할 수 없었던 문제를 수정 했습니다 . 이것들은 이제 모두 올바르게 작동합니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/380&quot;&gt;# 380&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/402&quot;&gt;# 402&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/802&quot;&gt;# 802&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/493&quot;&gt;# 493&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1161&quot;&gt;# 1161&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="91faace71bc27b25103af821c4ed14338a407e27" translate="yes" xml:space="preserve">
          <source>Fixed not being able to visit subdomains when using 2nd level sub domains. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1175&quot;&gt;#1175&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/600&quot;&gt;#600&lt;/a&gt;.</source>
          <target state="translated">2 단계 하위 도메인을 사용할 때 하위 도메인을 방문 할 수 없었던 문제를 수정했습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1175&quot;&gt;# 1175&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/600&quot;&gt;# 600을&lt;/a&gt; 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="2fd5dc2da998e702c253abf33612dbfdee626943" translate="yes" xml:space="preserve">
          <source>Fixed not correctly passing the &lt;code&gt;timeout&lt;/code&gt; option for &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt;. This should fix some instances where large &lt;code&gt;timeout&lt;/code&gt; values would cause &lt;code&gt;ESOCKETTIMEDOUT&lt;/code&gt; errors. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2669&quot;&gt;#2669&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt; 대한 &lt;code&gt;timeout&lt;/code&gt; 옵션이 올바르게 전달되지 않던 것을 고쳤습니다 . &lt;code&gt;timeout&lt;/code&gt; 값이 &lt;code&gt;ESOCKETTIMEDOUT&lt;/code&gt; 오류 가 발생하는 일부 인스턴스를 수정해야 합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2669&quot;&gt;# 2669&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="c31591cd4d8d4ed564e72f3cb6296e78bb377c61" translate="yes" xml:space="preserve">
          <source>Fixed other event related issues with &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; that were not firing correctly. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1209&quot;&gt;#1209&lt;/a&gt;.</source>
          <target state="translated">올바르게 실행되지 않은 &lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 관련 이벤트 관련 문제를 해결했습니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1209&quot;&gt;# 1209&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="edefe93bf8f9c5871698c12af8e0696b38b68cad" translate="yes" xml:space="preserve">
          <source>Fixed problem with rewriting content on elements which contained &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt; elements.</source>
          <target state="translated">&lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt; 요소 가 포함 된 요소에서 컨텐츠를 다시 쓰는 문제가 해결되었습니다 .</target>
        </trans-unit>
        <trans-unit id="43ad4f25a3eed077befe9519dd732c427d562b46" translate="yes" xml:space="preserve">
          <source>Fixed putting an &lt;code&gt;.only&lt;/code&gt; on a large list of tests that would sometimes not clear the previous runnables in the UI.</source>
          <target state="translated">때때로 UI에서 이전 실행 파일을 지우지 않는 많은 테스트 목록에 &lt;code&gt;.only&lt;/code&gt; 만 배치하도록 수정했습니다 .</target>
        </trans-unit>
        <trans-unit id="a2caf8784be60677041b659dadea9400412e0693" translate="yes" xml:space="preserve">
          <source>Fixed regression caused by &lt;code&gt;0.16.2&lt;/code&gt; where a failed &lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains()&lt;/code&gt;&lt;/a&gt; would not be canceled and would continue to run and display failed assertions in between test runs (without a full page refresh). Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/174&quot;&gt;#174&lt;/a&gt;.</source>
          <target state="translated">실패한 &lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains()&lt;/code&gt; &lt;/a&gt; 가 취소되지 않고 테스트 실행 사이에 전체 페이지 새로 고침없이 실패한 어설 션이 계속 표시되고 표시 되는 &lt;code&gt;0.16.2&lt;/code&gt; 로 인한 고정 회귀 분석 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/174&quot;&gt;# 174&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4c9fbfe8fdbc7075beebaee40771e5a6e1c149db" translate="yes" xml:space="preserve">
          <source>Fixed regression causing invocations of &lt;a href=&quot;../../api/commands/clock&quot;&gt;&lt;code&gt;cy.clock()&lt;/code&gt;&lt;/a&gt; to error on subsequent tests. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2850&quot;&gt;#2850&lt;/a&gt;.</source>
          <target state="translated">후속 테스트에서 &lt;a href=&quot;../../api/commands/clock&quot;&gt; &lt;code&gt;cy.clock()&lt;/code&gt; &lt;/a&gt; 호출로 인해 오류가 발생하는 회귀 문제를 해결했습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2850&quot;&gt;# 2850&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="60f49a5a118e5920f657fbfe9b3154bb1fd56657" translate="yes" xml:space="preserve">
          <source>Fixed regression in &lt;code&gt;0.18.6&lt;/code&gt; that caused Cypress to fail when switching spec files when &lt;code&gt;baseUrl&lt;/code&gt; was set in &lt;code&gt;cypress.json&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/403&quot;&gt;#403&lt;/a&gt;.</source>
          <target state="translated">고정 회귀 &lt;code&gt;0.18.6&lt;/code&gt; 때 명세 파일을 전환 할 때 프러스 실패 원인 &lt;code&gt;baseUrl&lt;/code&gt; 설정 하였다 &lt;code&gt;cypress.json&lt;/code&gt; . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/403&quot;&gt;# 403&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="9add25a461f073babcc6b30c1b6633afbac49710" translate="yes" xml:space="preserve">
          <source>Fixed regression introduced in &lt;a href=&quot;changelog#3-2-0&quot;&gt;3.2.0&lt;/a&gt; where Cypress would error because it could not find a type definition file for &amp;lsquo;../sinon&amp;rsquo;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4272&quot;&gt;#4272&lt;/a&gt;.</source>
          <target state="translated">Cypress에서 '../sinon'에 대한 유형 정의 파일을 찾을 수 없으므로 오류가 발생하는 &lt;a href=&quot;changelog#3-2-0&quot;&gt;3.2.0&lt;/a&gt; 에서 회귀가 수정되었습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4272&quot;&gt;# 4272&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="ed748da281606e6ecf264dbc3e50b17da63ec753" translate="yes" xml:space="preserve">
          <source>Fixed regression introduced in &lt;a href=&quot;changelog#3.1.1&quot;&gt;3.1.1&lt;/a&gt; with &lt;code&gt;requestAnimationFrame&lt;/code&gt; that caused some animations not to run. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2725&quot;&gt;#2725&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;requestAnimationFrame&lt;/code&gt; 과 함께 &lt;a href=&quot;changelog#3.1.1&quot;&gt;3.1.1&lt;/a&gt; 에서 도입 된 회귀 가 일부 애니메이션이 실행되지 않던 문제를 수정했습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2725&quot;&gt;# 2725&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="3a8bf2ec79bf5b856e9d14b2d045c37061e87b42" translate="yes" xml:space="preserve">
          <source>Fixed regression introduced in &lt;a href=&quot;changelog#3.1.2&quot;&gt;3.1.2&lt;/a&gt; that caused DOM elements passed to &lt;a href=&quot;../../api/commands/wrap&quot;&gt;&lt;code&gt;cy.wrap()&lt;/code&gt;&lt;/a&gt; to no longer yield the proper jQuery array instance. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2820&quot;&gt;#2820&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/wrap&quot;&gt; &lt;code&gt;cy.wrap()&lt;/code&gt; &lt;/a&gt; 에 전달 된 DOM 요소 가 더 이상 적절한 jQuery 배열 인스턴스를 생성하지 못하게 하는 &lt;a href=&quot;changelog#3.1.2&quot;&gt;3.1.2에&lt;/a&gt; 도입 된 고정 회귀 분석 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2820&quot;&gt;# 2820&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="ef081df82fe02c1d21fbf3be3167db4dedd0a141" translate="yes" xml:space="preserve">
          <source>Fixed regression introduced in &lt;code&gt;3.1.4&lt;/code&gt; that caused an &lt;code&gt;InvalidStateError&lt;/code&gt; when visiting a page with an XHR request with a &lt;code&gt;responseType&lt;/code&gt; other than &lt;code&gt;text&lt;/code&gt; or &lt;code&gt;''&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3008&quot;&gt;#3008&lt;/a&gt;.</source>
          <target state="translated">고정 회귀 분석에 도입 &lt;code&gt;3.1.4&lt;/code&gt; 원인이 &lt;code&gt;InvalidStateError&lt;/code&gt; 을 과 XHR 요청이있는 페이지를 방문 할 때 &lt;code&gt;responseType&lt;/code&gt; 이외의 &lt;code&gt;text&lt;/code&gt; 나 &lt;code&gt;''&lt;/code&gt; . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3008&quot;&gt;# 3008&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9fbf7ab71d1ad8d196ebbf6d38453f6febbccb19" translate="yes" xml:space="preserve">
          <source>Fixed regression related to &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; not re-visiting when current match matches remote url.</source>
          <target state="translated">현재 일치 항목이 원격 URL과 일치 할 때 &lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 와 관련된 회귀가 다시 방문되지 않는 문제를 해결했습니다 .</target>
        </trans-unit>
        <trans-unit id="20bad64bdf088500e5c0af6e99c92b091e7e853d" translate="yes" xml:space="preserve">
          <source>Fixed regression where multiple uses of &lt;a href=&quot;../../api/commands/server&quot;&gt;&lt;code&gt;cy.server()&lt;/code&gt;&lt;/a&gt; in a &lt;code&gt;before&lt;/code&gt; hook was throwing an error. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/80&quot;&gt;#80&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/510&quot;&gt;#510&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/595&quot;&gt;#595&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;before&lt;/code&gt; 후크 에서 &lt;a href=&quot;../../api/commands/server&quot;&gt; &lt;code&gt;cy.server()&lt;/code&gt; &lt;/a&gt; 를 여러 번 사용할 때 오류가 발생하는 회귀 문제를 해결했습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/80&quot;&gt;# 80&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/510&quot;&gt;# 510&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/595&quot;&gt;# 595를&lt;/a&gt; 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="1ddb4c351234ffa2349168a921fdc72bc078ef5e" translate="yes" xml:space="preserve">
          <source>Fixed server crash on improperly handled proxy error.</source>
          <target state="translated">잘못 처리 된 프록시 오류에서 서버 충돌이 수정되었습니다.</target>
        </trans-unit>
        <trans-unit id="ecac16a391c930105a5e711ddaf722b02291363a" translate="yes" xml:space="preserve">
          <source>Fixed several issues in Chrome* versions &amp;gt;= 72 in the Cypress proxy that caused using &lt;code&gt;cy.visit()&lt;/code&gt; with &lt;code&gt;localhost&lt;/code&gt; to fail, or using &lt;code&gt;localhost&lt;/code&gt; inside of the &lt;code&gt;baseUrl&lt;/code&gt; configuration option. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1872&quot;&gt;#1872&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3252&quot;&gt;#3252&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1777&quot;&gt;#1777&lt;/a&gt;.</source>
          <target state="translated">크롬에 고정하여 여러 문제 * 야기&amp;gt; = 72 사이프러스 프록시의 버전 &lt;code&gt;cy.visit()&lt;/code&gt; 와 &lt;code&gt;localhost&lt;/code&gt; 실패하거나하여 &lt;code&gt;localhost&lt;/code&gt; 내부의 &lt;code&gt;baseUrl&lt;/code&gt; 구성 옵션. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1872&quot;&gt;# 1872&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3252&quot;&gt;# 3252&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1777&quot;&gt;# 1777을&lt;/a&gt; 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="5f42bd80d6e2ce3f8d06f2af19a9e6ae58e4c500" translate="yes" xml:space="preserve">
          <source>Fixed situation where &lt;a href=&quot;../../api/commands/viewport&quot;&gt;&lt;code&gt;cy.viewport()&lt;/code&gt;&lt;/a&gt; would not restore correctly between tests. Previously this would cause subsequent tests to be issued at the modified &lt;code&gt;cy.viewport()&lt;/code&gt;. Now viewport is automatically restored to the settings in your &lt;code&gt;cypress.json&lt;/code&gt; file.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/viewport&quot;&gt; &lt;code&gt;cy.viewport()&lt;/code&gt; &lt;/a&gt; 가 테스트간에 올바르게 복원되지 않는 상황을 수정했습니다 . 이전에는 수정 된 &lt;code&gt;cy.viewport()&lt;/code&gt; 에서 후속 테스트가 실행되었습니다 . 이제 뷰포트가 &lt;code&gt;cypress.json&lt;/code&gt; 파일 의 설정으로 자동 복원 됩니다.</target>
        </trans-unit>
        <trans-unit id="b02f4bc11e465b4861e78fa180aac2c8fae16746" translate="yes" xml:space="preserve">
          <source>Fixed situation where Cypress was not injected correctly when &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; tag had attributes</source>
          <target state="translated">&lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; 태그에 속성이 있을 때 Cypress가 올바르게 주입되지 않는 상황이 수정되었습니다.</target>
        </trans-unit>
        <trans-unit id="82fcae25d4eeaf0c24c4f8bd7ea1fdb7b64e82c8" translate="yes" xml:space="preserve">
          <source>Fixed situation where an &lt;code&gt;Uncaught Error&lt;/code&gt; was not being properly handled. Cypress would incorrectly continue to retry commands instead of canceling them, which lead to incorrect errors downstream in other tests.</source>
          <target state="translated">&lt;code&gt;Uncaught Error&lt;/code&gt; 가 제대로 처리되지 않는 상황이 수정 되었습니다. Cypress는 명령을 취소하는 대신 명령을 계속 다시 시도하여 다른 테스트에서 다운 스트림 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="1a805b2b9cd9f12618c568d08f8bfa058423cebd" translate="yes" xml:space="preserve">
          <source>Fixed situation where an error being thrown from an XHR was being improperly handled (in a slightly different way than the problem above).</source>
          <target state="translated">XHR에서 발생하는 오류가 부적절하게 처리되는 상황을 수정했습니다 (위의 문제와 약간 다른 방식으로).</target>
        </trans-unit>
        <trans-unit id="25f011fff74cccfe58470de3408473111e220183" translate="yes" xml:space="preserve">
          <source>Fixed situations where 3rd party libraries (such as &lt;a href=&quot;https://newrelic.com/&quot;&gt;New Relic&lt;/a&gt; were instrumenting XHR&amp;rsquo;s identical to Cypress&amp;rsquo; implementation. This caused an infinite loop which would crash the browser. We&amp;rsquo;ve updated how we instrument XHR&amp;rsquo;s to take this into account and deployed multiple fallbacks and strategies to prevent this kind of thing from happening in the future. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/166&quot;&gt;#166&lt;/a&gt;.</source>
          <target state="translated">타사 라이브러리 (예 : &lt;a href=&quot;https://newrelic.com/&quot;&gt;New Relic&lt;/a&gt; 과 같이 Cypress의 구현과 동일한 XHR을 계측 함)로 인해 무한 루프가 발생하여 브라우저가 중단 될 수 있음 XHR의 계측 방법을 업데이트하여 여러 폴백 및 전략을 배포했습니다. . 수정 미래에 일어나는 이런 일을 방지하기 위해 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/166&quot;&gt;# 166&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a90330d9d199513c3c1f697121f82d67ac9dcfbb" translate="yes" xml:space="preserve">
          <source>Fixed some areas of the Desktop GUI that did not display path names correctly in Windows. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1830&quot;&gt;#1830&lt;/a&gt;.</source>
          <target state="translated">Windows에서 경로 이름이 올바르게 표시되지 않는 데스크탑 GUI의 일부 영역을 수정했습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1830&quot;&gt;# 1830&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="7635003eb479c61bfa93d0fc555e7854d8689974" translate="yes" xml:space="preserve">
          <source>Fixed some edge cases in &lt;code&gt;cypress-core-extension&lt;/code&gt; where it threw errors when attempting to &lt;code&gt;executeScript&lt;/code&gt; on a tab with &lt;code&gt;about:blank&lt;/code&gt; or &lt;code&gt;chrome://&lt;/code&gt; urls.</source>
          <target state="translated">&lt;code&gt;about:blank&lt;/code&gt; 또는 &lt;code&gt;chrome://&lt;/code&gt; urls 로 탭 에서 &lt;code&gt;executeScript&lt;/code&gt; 를 실행할 때 오류가 발생하는 &lt;code&gt;cypress-core-extension&lt;/code&gt; 의 일부 엣지 사례를 수정 했습니다 .</target>
        </trans-unit>
        <trans-unit id="9bd64d1ad2c64718c1c35c5a6bc71306ca4b20b9" translate="yes" xml:space="preserve">
          <source>Fixed some incorrect typings with TypeScript. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1219&quot;&gt;#1219&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1186&quot;&gt;#1186&lt;/a&gt;.</source>
          <target state="translated">TypeScript로 잘못 입력하는 문제를 해결했습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1219&quot;&gt;# 1219&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1186&quot;&gt;# 1186을&lt;/a&gt; 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="55c6d5e91f27e4bc6b9cbc8398af21c15ac18f36" translate="yes" xml:space="preserve">
          <source>Fixed some problems serializing objects during domain change caused by circular references. In this case &lt;code&gt;zone.js&lt;/code&gt; was the culprit. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/741&quot;&gt;#741&lt;/a&gt;. Contributed by &lt;a href=&quot;https://github.com/MariMax&quot;&gt;@MariMax&lt;/a&gt;.</source>
          <target state="translated">순환 참조로 인한 도메인 변경 중 개체를 직렬화하는 문제를 해결했습니다. 이 경우 &lt;code&gt;zone.js&lt;/code&gt; 가 범인이었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/741&quot;&gt;# 741&lt;/a&gt; 수정 . 로 기여 &lt;a href=&quot;https://github.com/MariMax&quot;&gt;@MariMax&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ddf78fe9549f499bc7176b4a4219579e669fe7ba" translate="yes" xml:space="preserve">
          <source>Fixed some scenarios where assertions would not be logged as a child command.</source>
          <target state="translated">어설 션이 자식 명령으로 기록되지 않는 일부 시나리오를 수정했습니다.</target>
        </trans-unit>
        <trans-unit id="b9298b1875f43960fb08c18b6e1ce951e11833fc" translate="yes" xml:space="preserve">
          <source>Fixed switching between two different spec files from the desktop app causing &lt;code&gt;document.domain&lt;/code&gt; to be wrong. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/276&quot;&gt;#276&lt;/a&gt;.</source>
          <target state="translated">데스크톱 앱에서 두 개의 서로 다른 사양 파일 간 전환으로 인해 &lt;code&gt;document.domain&lt;/code&gt; 이 잘못되던 문제를 수정했습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/276&quot;&gt;# 276&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="f3bbfab42be47f224b21071ed8d933508ef837ed" translate="yes" xml:space="preserve">
          <source>Fixed the incorrectly spelled chainer &lt;code&gt;descendents&lt;/code&gt;. It is now correctly spelled as &lt;code&gt;descendants&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/642&quot;&gt;#642&lt;/a&gt;.</source>
          <target state="translated">잘못 철자 chainer의 고정 &lt;code&gt;descendents&lt;/code&gt; . 이제 &lt;code&gt;descendants&lt;/code&gt; 철자가 정확합니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/642&quot;&gt;# 642&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="4396b312ac9ada54640275a453c976e5b4b65689" translate="yes" xml:space="preserve">
          <source>Fixed the vast majority of known issues with &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1241&quot;&gt;#1241&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 관련 알려진 대부분의 문제를 해결했습니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1241&quot;&gt;# 1241&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cd89959daffe5325a72d86a78445ddd2f3665adf" translate="yes" xml:space="preserve">
          <source>Fixed type definition for &lt;code&gt;match&lt;/code&gt; assertion so that it now only accepts &lt;code&gt;RegExp&lt;/code&gt; type arguments. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2578&quot;&gt;#2578&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;match&lt;/code&gt; 어설 션에 대한 형식 정의가 이제 &lt;code&gt;RegExp&lt;/code&gt; 형식 인수 만 허용하도록 수정 했습니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2578&quot;&gt;# 2578&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="31a2d12cdee595f72dbb70479095a595262b2ef8" translate="yes" xml:space="preserve">
          <source>Fixed typo in &lt;code&gt;cypress.schema.json&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1167&quot;&gt;#1167&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cypress.schema.json&lt;/code&gt; 의 오타가 수정되었습니다 . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1167&quot;&gt;# 1167&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f13e96255f478cbf579d384640d76990bf989276" translate="yes" xml:space="preserve">
          <source>Fixed typo in CLI deps error about Docker. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1136&quot;&gt;#1136&lt;/a&gt;.</source>
          <target state="translated">Docker에 대한 CLI deps 오류의 오타가 수정되었습니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1136&quot;&gt;# 1136&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="123a406e131050d5c46783cac9db4faa4b1adf80" translate="yes" xml:space="preserve">
          <source>Fixed typo in typing for &lt;a href=&quot;../../api/commands/trigger&quot;&gt;&lt;code&gt;.trigger&lt;/code&gt;&lt;/a&gt; options. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3588&quot;&gt;#3588&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/trigger&quot;&gt; &lt;code&gt;.trigger&lt;/code&gt; &lt;/a&gt; 옵션 입력시 오타가 수정되었습니다 . 에서 해결 &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3588&quot;&gt;# 3588&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4c6862d12df0492a8d47eb9f800cc435dca34ba5" translate="yes" xml:space="preserve">
          <source>Fixed using when using &lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;cy.click()&lt;/code&gt;&lt;/a&gt; on an element that bound to the &lt;code&gt;focus&lt;/code&gt; event while the browser was currently &lt;em&gt;out of focus&lt;/em&gt;. We have now normalized &lt;strong&gt;all focus and blur events&lt;/strong&gt; to behave the same as if the browser is always in focus. This should fix the other batch of &lt;code&gt;blur&lt;/code&gt; and &lt;code&gt;focus&lt;/code&gt; issues that users have been experiencing. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/549&quot;&gt;#549&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2198&quot;&gt;#2198&lt;/a&gt;.</source>
          <target state="translated">브라우저가 현재 &lt;em&gt;초점을 벗어난&lt;/em&gt; 상태에서 &lt;code&gt;focus&lt;/code&gt; 이벤트에 바인딩 된 요소에서 &lt;a href=&quot;../../api/commands/click&quot;&gt; &lt;code&gt;cy.click()&lt;/code&gt; &lt;/a&gt; 을 사용할 때 사용되는 문제가 해결 되었습니다 . 이제 &lt;strong&gt;모든 초점 및 흐림 이벤트&lt;/strong&gt; 를 정규화 하여 브라우저가 항상 초점이있는 것처럼 동일하게 작동합니다. 이렇게하면 사용자가 겪었던 다른 &lt;code&gt;blur&lt;/code&gt; 및 &lt;code&gt;focus&lt;/code&gt; 문제가 해결됩니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/549&quot;&gt;# 549&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2198&quot;&gt;# 2198을&lt;/a&gt; 수정합니다 .&lt;em&gt;&lt;/em&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e266b628f293db1e722b0b04069227dc5bc1d508" translate="yes" xml:space="preserve">
          <source>Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/14&quot;&gt;#14&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/14&quot;&gt;# 14&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="c3e73107f01c45ba65469b717cdbdfd3673801c8" translate="yes" xml:space="preserve">
          <source>Fixes a race condition where async electron browser commands came in after the renderer had been destroyed, causing failures. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2321&quot;&gt;#2321&lt;/a&gt;.</source>
          <target state="translated">렌더러가 파괴 된 후 비동기 전자 브라우저 명령이 들어 와서 오류가 발생하는 경쟁 조건을 수정합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2321&quot;&gt;# 2321&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="b79957adcf9f3730b2dfc85a7ef0e7996d01b27b" translate="yes" xml:space="preserve">
          <source>Fixture</source>
          <target state="translated">Fixture</target>
        </trans-unit>
        <trans-unit id="31d84bd77e5cf1531a4306001f3e8c670196d59e" translate="yes" xml:space="preserve">
          <source>Fixture Files</source>
          <target state="translated">고정물 파일</target>
        </trans-unit>
        <trans-unit id="93a9d4b62c49df4936d5f701755ab05d3a9187a5" translate="yes" xml:space="preserve">
          <source>Fixtures</source>
          <target state="translated">Fixtures</target>
        </trans-unit>
        <trans-unit id="8b2b39b6f6f2024db961fda1285280a85334d5cf" translate="yes" xml:space="preserve">
          <source>Fixtures are automatically formatted / indented for easy debugging.</source>
          <target state="translated">고정물은 쉽게 디버깅을 위해 자동으로 포맷 / 들여 쓰기됩니다.</target>
        </trans-unit>
        <trans-unit id="966639036f094c23a89188baf7bf20ba4d6fd0e2" translate="yes" xml:space="preserve">
          <source>Fixtures are automatically validated, with error messages propagating up to the client.</source>
          <target state="translated">오류 메시지가 클라이언트에 전파되면서 픽스쳐가 자동으로 검증됩니다.</target>
        </trans-unit>
        <trans-unit id="1e0b0d59a94207af47ec8f5dccde6051018f845d" translate="yes" xml:space="preserve">
          <source>Fixtures are used as external pieces of static data that can be used by your tests. Fixture files are located in &lt;code&gt;cypress/fixtures&lt;/code&gt; by default, but can be &lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt;configured&lt;/a&gt; to another directory.</source>
          <target state="translated">고정구는 테스트에서 사용할 수있는 외부 정적 데이터 조각으로 사용됩니다. 픽스쳐 파일은 기본적으로 &lt;code&gt;cypress/fixtures&lt;/code&gt; 에 있지만 다른 디렉토리 로 &lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt;구성&lt;/a&gt; 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="57daed953824ba45abfcd5c87989fcded301dd2a" translate="yes" xml:space="preserve">
          <source>Fixtures can also be referenced directly without using the &lt;code&gt;.fixture()&lt;/code&gt; command by using the special keywords: &lt;code&gt;fixture:&lt;/code&gt; or &lt;code&gt;fx:&lt;/code&gt; within &lt;a href=&quot;route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">픽스처는 또한 특수 키워드 를 사용하여 &lt;code&gt;.fixture()&lt;/code&gt; 명령을 사용 하지 않고 직접 참조 할 수도 있습니다 : &lt;code&gt;fixture:&lt;/code&gt; 또는 &lt;code&gt;fx:&lt;/code&gt; within &lt;a href=&quot;route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="076842db32152f6390a1de20bb1fbc6e90ec7ca2" translate="yes" xml:space="preserve">
          <source>Fixtures support &lt;code&gt;json&lt;/code&gt;, &lt;code&gt;js&lt;/code&gt;, and &lt;code&gt;coffee&lt;/code&gt; files with image support coming soon.</source>
          <target state="translated">픽스처는 곧 이미지 지원을 통해 &lt;code&gt;json&lt;/code&gt; , &lt;code&gt;js&lt;/code&gt; 및 &lt;code&gt;coffee&lt;/code&gt; 파일을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="5d728758adcdd5154d3be55552c1c061ef1489b2" translate="yes" xml:space="preserve">
          <source>Flags</source>
          <target state="translated">Flags</target>
        </trans-unit>
        <trans-unit id="6ee2ec8b01f6a2d6ac9d639232c343a8f90182ba" translate="yes" xml:space="preserve">
          <source>Flake</source>
          <target state="translated">Flake</target>
        </trans-unit>
        <trans-unit id="d91efa73e5b91a88b6662bb37f8407309f3b7059" translate="yes" xml:space="preserve">
          <source>Flake resistant</source>
          <target state="translated">플레이크 방지</target>
        </trans-unit>
        <trans-unit id="fe7f55b8bf68fd47d248a271d541e7e183621010" translate="yes" xml:space="preserve">
          <source>Focus</source>
          <target state="translated">Focus</target>
        </trans-unit>
        <trans-unit id="504969e1329eefbbfdeeb59a6ddae1deec1b4aca" translate="yes" xml:space="preserve">
          <source>Focus is given to the first focusable element</source>
          <target state="translated">초점은 첫 번째 초점 요소에 부여됩니다</target>
        </trans-unit>
        <trans-unit id="2e297c61dbffb1cb797e7780c079b71f4d5b829d" translate="yes" xml:space="preserve">
          <source>Focus is not an action command</source>
          <target state="translated">초점은 행동 명령이 아닙니다</target>
        </trans-unit>
        <trans-unit id="05fe5fdddd29a27eba93a4eff2e3520554c5881d" translate="yes" xml:space="preserve">
          <source>Focus on a DOM element.</source>
          <target state="translated">DOM 요소에 중점을 둡니다.</target>
        </trans-unit>
        <trans-unit id="210b73a2419ab094c9f12e186fddae826317c4cb" translate="yes" xml:space="preserve">
          <source>Focus on an input</source>
          <target state="translated">입력에 집중</target>
        </trans-unit>
        <trans-unit id="81d320705a2ddd9e662402bee5f10442bd02b78b" translate="yes" xml:space="preserve">
          <source>Focus, type, and blur a textarea</source>
          <target state="translated">텍스트 영역의 초점을 맞추고 입력하고 흐리게</target>
        </trans-unit>
        <trans-unit id="b590cd6b1e83fa70fd0a3de3bc09fc6af804a5cb" translate="yes" xml:space="preserve">
          <source>Focusable</source>
          <target state="translated">Focusable</target>
        </trans-unit>
        <trans-unit id="19137a2bc8511e2902e61e074e829a5d7f79b9b2" translate="yes" xml:space="preserve">
          <source>Folder Structure</source>
          <target state="translated">폴더 구조</target>
        </trans-unit>
        <trans-unit id="19adc47be34bed86af37b8e8dc882af424402561" translate="yes" xml:space="preserve">
          <source>Folders</source>
          <target state="translated">Folders</target>
        </trans-unit>
        <trans-unit id="3778aa33bb0864f2f8fcc7c110b3e0e3cc013dfc" translate="yes" xml:space="preserve">
          <source>Folders / Files</source>
          <target state="translated">폴더 / 파일</target>
        </trans-unit>
        <trans-unit id="61370060bdb7d5e684f62aaa98a8a18eee47ce57" translate="yes" xml:space="preserve">
          <source>Follow the following process to request an OSS plan for your project:</source>
          <target state="translated">다음 프로세스에 따라 프로젝트의 OSS 계획을 요청하십시오.</target>
        </trans-unit>
        <trans-unit id="e977c306cc77cda1ecdfaf0ddef7d8d79c99ed98" translate="yes" xml:space="preserve">
          <source>For JSON, the contents yielded are parsed into JavaScript and returned.</source>
          <target state="translated">JSON의 경우 생성 된 컨텐츠가 JavaScript로 구문 분석되어 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="d3681f0b1f80d660f99494942d5d9f15e68f3c5c" translate="yes" xml:space="preserve">
          <source>For a comprehensive list of all configuration values look here.</source>
          <target state="translated">모든 구성 값의 전체 목록은 여기를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="6fde55b197d8bc9171398408dd11058266e6428a" translate="yes" xml:space="preserve">
          <source>For a detailed explanation of aliasing, &lt;a href=&quot;../../guides/core-concepts/variables-and-aliases#Aliases&quot;&gt;read more about aliasing here&lt;/a&gt;.</source>
          <target state="translated">앨리어싱에 대한 자세한 설명은 앨리어싱에 대한 자세한 내용은 &lt;a href=&quot;../../guides/core-concepts/variables-and-aliases#Aliases&quot;&gt;여기를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6b747e493d60035aa88d9e5488eaf0d99b0cf5fc" translate="yes" xml:space="preserve">
          <source>For a detailed explanation of aliasing, &lt;a href=&quot;../../guides/guides/network-requests#Waiting&quot;&gt;read more about waiting on routes here&lt;/a&gt;.</source>
          <target state="translated">앨리어싱에 대한 자세한 설명은 &lt;a href=&quot;../../guides/guides/network-requests#Waiting&quot;&gt;여기에서 경로 대기에 대한 자세한 내용을 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c112b29f653fa6da29b77c4076e2ef3e3a084105" translate="yes" xml:space="preserve">
          <source>For a failure screenshot, the default naming scheme is used and the name is appended with &lt;code&gt;(failed)&lt;/code&gt;: &lt;code&gt;{screenshotsFolder}/{specPath}/{testName} (failed).png&lt;/code&gt;</source>
          <target state="translated">실패 스크린 샷의 경우 기본 이름 지정 체계가 사용되고 이름에 &lt;code&gt;(failed)&lt;/code&gt; 가 추가됩니다 : &lt;code&gt;{screenshotsFolder}/{specPath}/{testName} (failed).png&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a665f1775461ab3d07e8409cfd0c265140d91e7f" translate="yes" xml:space="preserve">
          <source>For a more thorough explanation of Cypress&amp;rsquo;s Web Security model, &lt;a href=&quot;../guides/web-security&quot;&gt;please read our dedicated guide to it&lt;/a&gt;.</source>
          <target state="translated">Cypress의 웹 보안 모델에 대한 자세한 설명은 &lt;a href=&quot;../guides/web-security&quot;&gt;전용 가이드를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="81b646082a814f0faa4350f1e9fe72ba04d2d004" translate="yes" xml:space="preserve">
          <source>For a named screenshot, the name is used instead of the suites and test name: &lt;code&gt;{screenshotsFolder}/{specPath}/{name}.png&lt;/code&gt;</source>
          <target state="translated">명명 된 스크린 샷의 경우 스위트 및 테스트 이름 대신 이름이 사용됩니다 : &lt;code&gt;{screenshotsFolder}/{specPath}/{name}.png&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1875e2e03dcd0d2fa376d7793b62e8918bbb3dbf" translate="yes" xml:space="preserve">
          <source>For a variety of implementation reasons, Cypress commands &lt;strong&gt;only&lt;/strong&gt; retry the &lt;strong&gt;last command&lt;/strong&gt; before the assertion. In our test:</source>
          <target state="translated">다양한 구현 이유 때문에 Cypress 명령 은 어설 션 이전의 &lt;strong&gt;마지막 명령 &lt;/strong&gt;&lt;strong&gt;만&lt;/strong&gt; 다시 시도합니다 . 우리의 테스트에서 :&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d43c859b9e7c1c86f68c1d7527404d0b8d12f85a" translate="yes" xml:space="preserve">
          <source>For any duplicate screenshots (named or not), they will be appended with a number: &lt;code&gt;{screenshotsFolder}/{specPath}/{testName} (1).png&lt;/code&gt;</source>
          <target state="translated">이름이 지정되거나 지정되지 않은 중복 스크린 샷의 경우 &lt;code&gt;{screenshotsFolder}/{specPath}/{testName} (1).png&lt;/code&gt; 번호가 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="580371d64b28a421d6f70048a5b3551ae4f827cc" translate="yes" xml:space="preserve">
          <source>For any file other than JSON, the contents of the file are returned.</source>
          <target state="translated">JSON 이외의 파일의 경우 파일 내용이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="91b613f768c593855e85ce87451fd66e1155cdb4" translate="yes" xml:space="preserve">
          <source>For any other server type, define a &lt;code&gt;GET /__coverage__&lt;/code&gt; endpoint and return the &lt;code&gt;global.__coverage__&lt;/code&gt; object.</source>
          <target state="translated">다른 서버 유형의 경우 &lt;code&gt;GET /__coverage__&lt;/code&gt; 엔드 포인트를 정의 하고 &lt;code&gt;global.__coverage__&lt;/code&gt; 오브젝트를 리턴하십시오 .</target>
        </trans-unit>
        <trans-unit id="ff6639c39228ded6347d1f488c7234eea10e2fb6" translate="yes" xml:space="preserve">
          <source>For brevity we&amp;rsquo;ve omitted the full path to the cypress executable in each command&amp;rsquo;s documentation.</source>
          <target state="translated">간결하게하기 위해 각 명령 설명서에서 cypress 실행 파일의 전체 경로를 생략했습니다.</target>
        </trans-unit>
        <trans-unit id="201ee05c918022669060bbba7c946dd7db53a43e" translate="yes" xml:space="preserve">
          <source>For certain commands like &lt;a href=&quot;../../api/commands/route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/stub&quot;&gt;&lt;code&gt;cy.stub()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../../api/commands/spy&quot;&gt;&lt;code&gt;cy.spy()&lt;/code&gt;&lt;/a&gt;, an extra instrument panel is displayed above the test to give more information about the state of your tests.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../api/commands/stub&quot;&gt; &lt;code&gt;cy.stub()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../api/commands/spy&quot;&gt; &lt;code&gt;cy.spy()&lt;/code&gt; &lt;/a&gt; 와 같은 특정 명령의 경우 테스트 상태에 대한 자세한 정보를 제공하기 위해 테스트 위에 추가 계기판이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="cae9b803221129b647d814f9c377a224266b68b3" translate="yes" xml:space="preserve">
          <source>For clarity you can pass a string message as a second argument to any &lt;code&gt;expect&lt;/code&gt; assertion, see &lt;a href=&quot;https://www.chaijs.com/guide/styles/#expect&quot;&gt;Chai#expect&lt;/a&gt;.</source>
          <target state="translated">명확성을 위해 문자열 메시지를 &lt;code&gt;expect&lt;/code&gt; 어설 션에 대한 두 번째 인수로 전달할 수 있습니다 ( &lt;a href=&quot;https://www.chaijs.com/guide/styles/#expect&quot;&gt;Chai # expect&lt;/a&gt; 참조) .</target>
        </trans-unit>
        <trans-unit id="7df63eb79e11a90822227f06bac5c3df82d15fa8" translate="yes" xml:space="preserve">
          <source>For convenience, you can also omit any return value or return &lt;code&gt;undefined&lt;/code&gt; and Cypress will not error.</source>
          <target state="translated">편의상 반환 값을 생략하거나 &lt;code&gt;undefined&lt;/code&gt; 값을 반환 해도 Cypress는 오류가 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f9c0ce52609e0b7f8cfe8d5f39cd21cde114fb46" translate="yes" xml:space="preserve">
          <source>For example - say a command we wrote timed out: &lt;a href=&quot;get&quot;&gt;&lt;code&gt;cy.get('#element')&lt;/code&gt;&lt;/a&gt;. This causes your test to fail. Cypress then automatically takes a screenshot when the test fails, but it is possible something in your application changed within this &lt;code&gt;100ms&lt;/code&gt; timeframe. Hypothetically, your app could render the element you were originally expecting to be present. When this happens, the screenshot may provide confusing results. It is unlikely, but theoretically possible.</source>
          <target state="translated">예를 들어, 우리가 쓴 명령이 시간 초과되었습니다 : &lt;a href=&quot;get&quot;&gt; &lt;code&gt;cy.get('#element')&lt;/code&gt; &lt;/a&gt; . 이로 인해 테스트가 실패합니다. 그런 다음 Cypress는 테스트가 실패하면 자동으로 스크린 샷을 &lt;code&gt;100ms&lt;/code&gt; 기간 내에 응용 프로그램의 내용이 변경되었을 수 있습니다 . 가설 적으로, 앱은 원래 예상했던 요소를 렌더링 할 수 있습니다. 이 경우 스크린 샷이 혼란 스러울 수 있습니다. 가능하지는 않지만 이론적으로는 가능합니다.</target>
        </trans-unit>
        <trans-unit id="263146ee5d217d189aa21d8fbdb6bfe0fbec8237" translate="yes" xml:space="preserve">
          <source>For example if you add the command &lt;code&gt;cy.dataCy&lt;/code&gt; into your &lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt;&lt;code&gt;supportFile&lt;/code&gt;&lt;/a&gt; like this:</source>
          <target state="translated">예를 들어 &lt;code&gt;cy.dataCy&lt;/code&gt; 명령 을 다음 과 같이 &lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt; &lt;code&gt;supportFile&lt;/code&gt; 에&lt;/a&gt; 추가하는 경우 :</target>
        </trans-unit>
        <trans-unit id="2758c38b95307263ee836b320324f26239fd0efb" translate="yes" xml:space="preserve">
          <source>For example, clicking a &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; inside of a &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; gives the focus to the button, since that&amp;rsquo;s what would happen in a real user scenario.</source>
          <target state="translated">예를 들어 &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 내부의 &amp;lt;span&amp;gt;을 클릭하면 실제 사용자 시나리오에서 발생하므로 버튼에 포커스를 둡니다.</target>
        </trans-unit>
        <trans-unit id="6f4fdb15c7328482d20e6ea99d6570ca3c31f0aa" translate="yes" xml:space="preserve">
          <source>For example, consider this HTML fragment.</source>
          <target state="translated">예를 들어,이 HTML 조각을 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="764b75327a33cf0119b6f91796ffb927e6300398" translate="yes" xml:space="preserve">
          <source>For example, given a spec file located at &lt;code&gt;cypress/integration/users/login_spec.js&lt;/code&gt;:</source>
          <target state="translated">예를 들어 &lt;code&gt;cypress/integration/users/login_spec.js&lt;/code&gt; 에있는 스펙 파일이 제공된 경우 :</target>
        </trans-unit>
        <trans-unit id="aaa1105999961ee6003bd962c1a65b040bd5496f" translate="yes" xml:space="preserve">
          <source>For example, if the snapshot command is &lt;code&gt;cy.mySnapshotCommand&lt;/code&gt;:</source>
          <target state="translated">예를 들어, 스냅 샷 명령이 &lt;code&gt;cy.mySnapshotCommand&lt;/code&gt; 인 경우 :</target>
        </trans-unit>
        <trans-unit id="ab571a4f91aef38ebfa5eecac23a46306dfafc38" translate="yes" xml:space="preserve">
          <source>For example, if your distribution packages Google Chrome as &lt;code&gt;chrome&lt;/code&gt;, you could add a symlink to &lt;code&gt;google-chrome&lt;/code&gt; like this:</source>
          <target state="translated">예를 들어 배포판에서 Chrome을 &lt;code&gt;chrome&lt;/code&gt; 으로 패키지하면 다음 과 같이 &lt;code&gt;google-chrome&lt;/code&gt; 에 심볼릭 링크를 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="644fe93693b828db3515767856da1bd3a29e87ab" translate="yes" xml:space="preserve">
          <source>For example, on a Linux machine:</source>
          <target state="translated">예를 들어, Linux 시스템에서 :</target>
        </trans-unit>
        <trans-unit id="e2158d33b661e52ec20e4eadf6ce104d3345fbd7" translate="yes" xml:space="preserve">
          <source>For example, on a Mac:</source>
          <target state="translated">예를 들어, Mac에서 :</target>
        </trans-unit>
        <trans-unit id="374258cadc421fc853522a47d379c7f40972c75a" translate="yes" xml:space="preserve">
          <source>For example, one can use the &lt;a href=&quot;https://github.com/meinaart/cypress-plugin-snapshots&quot;&gt;cypress-plugin-snapshots&lt;/a&gt; plugin and catch the following visual regression:</source>
          <target state="translated">예를 들어 &lt;a href=&quot;https://github.com/meinaart/cypress-plugin-snapshots&quot;&gt;cypress-plugin-snapshots&lt;/a&gt; 플러그인을 사용하여 다음과 같은 시각적 회귀를 포착 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="52bff469061738de305a5c214d6bb7f6c8ad7f03" translate="yes" xml:space="preserve">
          <source>For example, the following test has &lt;a href=&quot;../../api/commands/should&quot;&gt;&lt;code&gt;.should()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/and&quot;&gt;&lt;code&gt;.and()&lt;/code&gt;&lt;/a&gt; assertions. &lt;code&gt;.and()&lt;/code&gt; is an alias of the &lt;code&gt;.should()&lt;/code&gt; command, so the second assertion is really a custom callback assertion in the form of the &lt;a href=&quot;../../api/commands/should#Function&quot;&gt;&lt;code&gt;.should(cb)&lt;/code&gt;&lt;/a&gt; function with 2 &lt;a href=&quot;../references/assertions#BDD-Assertions&quot;&gt;&lt;code&gt;expect&lt;/code&gt;&lt;/a&gt; assertions inside of it.</source>
          <target state="translated">예를 들어 다음 테스트에는 &lt;a href=&quot;../../api/commands/should&quot;&gt; &lt;code&gt;.should()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../api/commands/and&quot;&gt; &lt;code&gt;.and()&lt;/code&gt; &lt;/a&gt; 어설 션이 있습니다. &lt;code&gt;.and()&lt;/code&gt; 의 별칭 &lt;code&gt;.should()&lt;/code&gt; 두 번째 주장 맞춤 콜백의 형태 어서 정말 있도록 명령은 &lt;a href=&quot;../../api/commands/should#Function&quot;&gt; &lt;code&gt;.should(cb)&lt;/code&gt; &lt;/a&gt; 2 기능 &lt;a href=&quot;../references/assertions#BDD-Assertions&quot;&gt; &lt;code&gt;expect&lt;/code&gt; &lt;/a&gt; 그 안에 단언.</target>
        </trans-unit>
        <trans-unit id="7f0d7592cbf7bfa92426baaef777c8467fdf810d" translate="yes" xml:space="preserve">
          <source>For example, to set the default command timeout to 10 seconds via command line:</source>
          <target state="translated">예를 들어, 명령 행을 통해 기본 명령 제한 시간을 10 초로 설정하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="24e8f3f5bf287ec2abda1e46dac7e765408a08a9" translate="yes" xml:space="preserve">
          <source>For example, when writing a &lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt; command, Cypress ensures that the element is able to be interacted with (like a real user would). It will automatically wait until the element reaches an &amp;ldquo;actionable&amp;rdquo; state by:</source>
          <target state="translated">예를 들어 &lt;a href=&quot;../../api/commands/click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt; 명령을 작성할 때 Cypress는 요소가 실제 사용자처럼 상호 작용할 수 있는지 확인합니다. 다음과 같이 요소가 &quot;작동 가능&quot;상태가 될 때까지 자동으로 대기합니다.</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2de5b291ad79324bcf505dc77ce99f3c250b6a66" translate="yes" xml:space="preserve">
          <source>For instance given a URL: &lt;code&gt;https://google.com/search?q=cypress&lt;/code&gt;</source>
          <target state="translated">예를 들어 &lt;code&gt;https://google.com/search?q=cypress&lt;/code&gt; URL이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="af939d9ec5be005fdcff9cc5bafa9bc567dcc0c0" translate="yes" xml:space="preserve">
          <source>For instance the following will submit the form.</source>
          <target state="translated">예를 들어 다음은 양식을 제출합니다.</target>
        </trans-unit>
        <trans-unit id="b5517d0b0ff724878ebb60576914cb82e4c4d83b" translate="yes" xml:space="preserve">
          <source>For instance there is:</source>
          <target state="translated">예를 들어</target>
        </trans-unit>
        <trans-unit id="69f7252ea2666904183520e01c4a6a37f7de72b6" translate="yes" xml:space="preserve">
          <source>For instance you may want to do this:</source>
          <target state="translated">예를 들어 다음과 같이 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="252964127344b906890088ac3b58c00fbc7996d8" translate="yes" xml:space="preserve">
          <source>For instance, &lt;a href=&quot;../../api/commands/its&quot;&gt;&lt;code&gt;.its()&lt;/code&gt;&lt;/a&gt; requires that the property you&amp;rsquo;re asking about exists on the object.</source>
          <target state="translated">예를 들어 &lt;a href=&quot;../../api/commands/its&quot;&gt; &lt;code&gt;.its()&lt;/code&gt; &lt;/a&gt; 하려면 요청하는 속성이 객체에 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="9f2d3f0dc7271d3653fea606fcd0bdc4bb155b6d" translate="yes" xml:space="preserve">
          <source>For instance, an element could pass all of the previous checks, but a giant dialog could be covering the entire screen making interacting with the element impossible for any real user.</source>
          <target state="translated">예를 들어, 요소가 이전의 모든 검사를 통과 할 수 있지만 거대한 대화 상자가 전체 화면을 덮으면 실제 사용자가 요소와 상호 작용할 수 없게 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="abc897209b2f98b7966665fa36a5eddbbc44f66d" translate="yes" xml:space="preserve">
          <source>For instance:</source>
          <target state="translated">예를 들어 :</target>
        </trans-unit>
        <trans-unit id="f82e17eccd0cd5b897a68561a0dfcf4a5a0d4cc8" translate="yes" xml:space="preserve">
          <source>For more complex use cases feel free to overwrite existing commands.</source>
          <target state="translated">보다 복잡한 사용 사례의 경우 기존 명령을 자유롭게 덮어 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9e02635601388e7c946b921e1e450b5a9dc0dde5" translate="yes" xml:space="preserve">
          <source>For more details on these options and to set some as defaults across all uses of &lt;code&gt;.screenshot()&lt;/code&gt;, see the &lt;a href=&quot;../cypress-api/screenshot-api&quot;&gt;Cypress.Screenshot API doc&lt;/a&gt;.</source>
          <target state="translated">이러한 옵션에 대한 자세한 내용과 &lt;code&gt;.screenshot()&lt;/code&gt; 의 모든 사용에서 일부를 기본값으로 설정 하려면 &lt;a href=&quot;../cypress-api/screenshot-api&quot;&gt;Cypress.Screenshot API doc을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="54d3a0513cfccad9eb5d6e0e78581670489941f0" translate="yes" xml:space="preserve">
          <source>For more information on writing plugins, please &lt;a href=&quot;../../api/plugins/writing-a-plugin&quot;&gt;check out our API docs here&lt;/a&gt;.</source>
          <target state="translated">플러그인 작성에 대한 자세한 내용은 &lt;a href=&quot;../../api/plugins/writing-a-plugin&quot;&gt;여기에서 API 문서&lt;/a&gt; 를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="3d3310b65fdf0f0ced0b2000f01f790efbf2e93c" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;http://antontelesh.github.io/testing/2019/02/04/mochawesome-merge.html&quot;&gt;Integrating Mochawesome reporter with Cypresss&lt;/a&gt;</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;http://antontelesh.github.io/testing/2019/02/04/mochawesome-merge.html&quot;&gt;Mochawesome 기자와 Cypresss 통합을&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a938ddb8b260b7907e6de8105877506b068906fa" translate="yes" xml:space="preserve">
          <source>For more options regarding screenshots, view the &lt;a href=&quot;../../api/cypress-api/screenshot-api&quot;&gt;Cypress.Screenshot API&lt;/a&gt;.</source>
          <target state="translated">스크린 샷과 관련된 추가 옵션을 보려면 &lt;a href=&quot;../../api/cypress-api/screenshot-api&quot;&gt;Cypress.Screenshot API를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="09f377bc687a64f445d344af854cd956a6165063" translate="yes" xml:space="preserve">
          <source>For multiple runs to be grouped into a single run, it is required for CI machines to share a common CI build ID environment variable. Typically these CI machines will run in parallel or within the same build workflow or pipeline, but &lt;strong&gt;it is not required to use Cypress parallelization to group runs&lt;/strong&gt;. Grouping of runs can be utilized independently of Cypress parallelization.</source>
          <target state="translated">여러 실행을 단일 실행으로 그룹화하려면 CI 시스템이 공통 CI 빌드 ID 환경 변수를 공유해야합니다. 일반적으로 이러한 CI 시스템은 병렬로 또는 동일한 빌드 워크 플로우 또는 파이프 라인 내에서 실행되지만 &lt;strong&gt;Cypress 병렬화를 사용하여 실행을 그룹화 할 필요는 없습니다&lt;/strong&gt; . 실행 그룹화는 Cypress 병렬화와 독립적으로 활용 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="33169c378a8f3e8f01e7fbd26b9ee56ff477e933" translate="yes" xml:space="preserve">
          <source>For now, please visit the &lt;a href=&quot;../../api/events/catalog-of-events#Uncaught-Exceptions&quot;&gt;Catalog of Events&lt;/a&gt; page for examples how to turn off catching uncaught exceptions.</source>
          <target state="translated">지금의 경우, 방문 &lt;a href=&quot;../../api/events/catalog-of-events#Uncaught-Exceptions&quot;&gt;이벤트의 카탈로그&lt;/a&gt; 캐치되지 않는 예외를 잡기 해제하는 방법을 예제 페이지를.</target>
        </trans-unit>
        <trans-unit id="88158d5e9dc8f8941bd54f6e40953f96ad40d693" translate="yes" xml:space="preserve">
          <source>For other types of files, they will be read as &lt;code&gt;utf8&lt;/code&gt; by default, unless specified in the second argument of &lt;code&gt;cy.fixture()&lt;/code&gt;.</source>
          <target state="translated">다른 유형의 파일 의 경우 &lt;code&gt;cy.fixture()&lt;/code&gt; 의 두 번째 인수에 지정되어 있지 않으면 기본적 으로 &lt;code&gt;utf8&lt;/code&gt; 로 읽습니다 .</target>
        </trans-unit>
        <trans-unit id="d91ebd354dbfba00dacd289ac1a90f3e80f3b246" translate="yes" xml:space="preserve">
          <source>For reference, the &lt;code&gt;.babelrc&lt;/code&gt; file is shared between the example application and the spec files, thus Cypress tests are transpiled the same way the application code is transpiled.</source>
          <target state="translated">참고로 &lt;code&gt;.babelrc&lt;/code&gt; 파일은 예제 응용 프로그램과 사양 파일간에 공유되므로 Cypress 테스트는 응용 프로그램 코드를 변환하는 것과 같은 방식으로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="a0f76861650d658435d862cebc0bc974dfdbebf1" translate="yes" xml:space="preserve">
          <source>For the moment, let&amp;rsquo;s assume that for some reason your application desperately &lt;strong&gt;needs&lt;/strong&gt; that last bit of &lt;code&gt;after&lt;/code&gt; or &lt;code&gt;afterEach&lt;/code&gt; code to run. Let&amp;rsquo;s assume that if that code is not run - all is lost.</source>
          <target state="translated">현재 어떤 이유로 애플리케이션 이 마지막 또는 &lt;code&gt;after&lt;/code&gt; &lt;code&gt;afterEach&lt;/code&gt; 코드 실행을 절실히 &lt;strong&gt;필요로&lt;/strong&gt; 한다고 가정 해 봅시다 . 해당 코드가 실행되지 않으면 모든 것이 손실된다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="01260984a70b15e582d02ecbb77eb53567003e8b" translate="yes" xml:space="preserve">
          <source>For the remainder of this guide, we&amp;rsquo;ll explore the basics of Cypress that make this example work. We&amp;rsquo;ll demystify the rules Cypress follows so you can productively test your application to act as much like a user as possible, as well as discuss how to take shortcuts when it&amp;rsquo;s useful.</source>
          <target state="translated">이 가이드의 나머지 부분에서는이 예제가 작동하도록하는 Cypress의 기본 사항을 살펴 보겠습니다. Cypress가 따르는 규칙을 이해하지 못하도록하여 가능한 한 사용자처럼 행동하도록 응용 프로그램을 생산적으로 테스트하고 유용 할 때 바로 가기를 취하는 방법에 대해 논의 할 것입니다.</target>
        </trans-unit>
        <trans-unit id="728229716acc9fc14a9907d5acafe87f6cdd5c23" translate="yes" xml:space="preserve">
          <source>For this reason we recommend &lt;a href=&quot;https://www.chromium.org/Home&quot;&gt;downloading Chromium&lt;/a&gt; or &lt;a href=&quot;https://www.google.com/chrome/browser/canary.html&quot;&gt;downloading Canary&lt;/a&gt;. These browsers both have different icons from the standard Chrome browser and it&amp;rsquo;ll be much easier to tell the difference. You can also use the bundled &lt;a href=&quot;#Electron-Browser&quot;&gt;Electron browser&lt;/a&gt;, which does not have a Dock icon.</source>
          <target state="translated">이러한 이유로 &lt;a href=&quot;https://www.chromium.org/Home&quot;&gt;Chromium을 &lt;/a&gt;&lt;a href=&quot;https://www.google.com/chrome/browser/canary.html&quot;&gt;다운로드&lt;/a&gt; 하거나 Canary를 다운로드하는 것이 좋습니다 . 이 브라우저는 표준 Chrome 브라우저와 다른 아이콘을 가지고 있으며 그 차이를 훨씬 쉽게 알 수 있습니다. Dock 아이콘이없는 번들로 제공되는 &lt;a href=&quot;#Electron-Browser&quot;&gt;Electron 브라우저를&lt;/a&gt; 사용할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="205e71a20ed6c001f2d67335fcd4f33135185375" translate="yes" xml:space="preserve">
          <source>For this reason you cannot &lt;strong&gt;ever&lt;/strong&gt; return or assign anything useful from Cypress commands.</source>
          <target state="translated">이러한 이유로 당신은 할 수없는 &lt;strong&gt;적&lt;/strong&gt; 반환하거나 싸이프레스 명령에서 할당 것도 유용합니다.</target>
        </trans-unit>
        <trans-unit id="d0b8219d8ed6c1e8024344c044ecea764b1dc5cf" translate="yes" xml:space="preserve">
          <source>For working with either of these patterns, please read our &lt;a href=&quot;../core-concepts/variables-and-aliases&quot;&gt;Variables and Aliases guide&lt;/a&gt;.</source>
          <target state="translated">이러한 패턴 중 하나를 사용하려면 &lt;a href=&quot;../core-concepts/variables-and-aliases&quot;&gt;변수 및 별칭 안내서&lt;/a&gt; 를 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="58df072b14e502083ab5c85ba4c8f1d20ae6ccd5" translate="yes" xml:space="preserve">
          <source>Force Reload</source>
          <target state="translated">재 장전</target>
        </trans-unit>
        <trans-unit id="6009b160ba75d2e52bc0d8169e251b1536e4aa89" translate="yes" xml:space="preserve">
          <source>Force a click regardless of its actionable state</source>
          <target state="translated">실행 가능한 상태에 관계없이 강제로 클릭</target>
        </trans-unit>
        <trans-unit id="501ae9dd8f1715a7ea40942df61d140bc1a7fd7e" translate="yes" xml:space="preserve">
          <source>Force a click with position argument</source>
          <target state="translated">위치 인수를 사용하여 강제 클릭</target>
        </trans-unit>
        <trans-unit id="f0f17bcdc15ad6b57ab2c842701861471bd496bc" translate="yes" xml:space="preserve">
          <source>Force a click with relative coordinates</source>
          <target state="translated">상대 좌표로 강제 클릭</target>
        </trans-unit>
        <trans-unit id="778a8734a9c3b42f5a7d9afcc008f81e492a3a8b" translate="yes" xml:space="preserve">
          <source>Force click</source>
          <target state="translated">강제 클릭</target>
        </trans-unit>
        <trans-unit id="41e37a1f78aef985b21cad73b3082506a86c715b" translate="yes" xml:space="preserve">
          <source>Force exit codes that are &lt;code&gt;null&lt;/code&gt; to &lt;code&gt;0&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/184&quot;&gt;#184&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; 종료 코드 를 &lt;code&gt;0&lt;/code&gt; 으로 설정하십시오 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/184&quot;&gt;# 184&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="3675b055af415697257a68145761329b09a120af" translate="yes" xml:space="preserve">
          <source>Force trailing slash on all &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; to fix relative links &lt;code&gt;href=&quot;assets/app.js&quot;&lt;/code&gt;.</source>
          <target state="translated">상대 링크 &lt;code&gt;href=&quot;assets/app.js&quot;&lt;/code&gt; 를 수정하려면 모든 &lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 에 후행 슬래시를 강제 하십시오 .</target>
        </trans-unit>
        <trans-unit id="212605644c0b6c1945c9a3e7254761cd558173c5" translate="yes" xml:space="preserve">
          <source>Force typing regardless of its actionable state</source>
          <target state="translated">실행 가능한 상태에 관계없이 강제 입력</target>
        </trans-unit>
        <trans-unit id="9133a83c2831ad21e3aa26f7912ae9117d231e31" translate="yes" xml:space="preserve">
          <source>Force your application to behave deterministically.</source>
          <target state="translated">응용 프로그램이 결정적으로 동작하도록합니다.</target>
        </trans-unit>
        <trans-unit id="c22784e9b0a4a78c005e9a85b243521624424e2e" translate="yes" xml:space="preserve">
          <source>Forces the action, disables &lt;a href=&quot;#Assertions&quot;&gt;waiting for actionability&lt;/a&gt;</source>
          <target state="translated">조치를 강제 실행하고 조치 가능성 &lt;a href=&quot;#Assertions&quot;&gt;대기를&lt;/a&gt; 사용 불가능하게합니다.</target>
        </trans-unit>
        <trans-unit id="d8e12d23ec3290a534ebbcf584e8eb235083c99c" translate="yes" xml:space="preserve">
          <source>Forces the action, disables checking if &lt;a href=&quot;#Requirements&quot;&gt;element is focused&lt;/a&gt;</source>
          <target state="translated">동작을 강제하고 &lt;a href=&quot;#Requirements&quot;&gt;요소가 초점을 맞추고&lt;/a&gt; 있는지 확인하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c6aeb53d6057d030d1940ca8e7fb9f7eac6f7fb4" translate="yes" xml:space="preserve">
          <source>Forcibly fire the event at the element</source>
          <target state="translated">요소에서 이벤트를 강제로 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="22c717b7cf52642cd4402c97663c40e584fd7918" translate="yes" xml:space="preserve">
          <source>Forcibly send XHR&amp;rsquo;s a 404 status when the XHR&amp;rsquo;s do not match any existing &lt;a href=&quot;route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">XHR이 기존 &lt;a href=&quot;route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt; 와 일치하지 않으면 XHR을 404 상태로 강제 전송 합니다.</target>
        </trans-unit>
        <trans-unit id="8e9b90f09f342388fa794ee597459cdfabb7b581" translate="yes" xml:space="preserve">
          <source>Forcing</source>
          <target state="translated">Forcing</target>
        </trans-unit>
        <trans-unit id="f8c2349f25011f3fb852e55a8b44e642923f7d87" translate="yes" xml:space="preserve">
          <source>Forcing a click overrides the &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements#Forcing&quot;&gt;actionable checks&lt;/a&gt; Cypress applies and will automatically fire the events.</source>
          <target state="translated">클릭하면 Cypress가 적용 &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements#Forcing&quot;&gt;가능한 실행 가능한 검사가&lt;/a&gt; 재정의 되고 이벤트가 자동으로 실행 됩니다.</target>
        </trans-unit>
        <trans-unit id="ce50bed2898545dff3bd82a789b80bd08baf4e2f" translate="yes" xml:space="preserve">
          <source>Forcing typing overrides the &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements#Forcing&quot;&gt;actionable checks&lt;/a&gt; Cypress applies and will automatically fire the events.</source>
          <target state="translated">입력을 강제하면 Cypress가 적용하고 이벤트를 자동으로 &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements#Forcing&quot;&gt;실행&lt;/a&gt; 하는 실행 가능한 검사 보다 우선 합니다.</target>
        </trans-unit>
        <trans-unit id="42440f0025c87af99f06a479298706346f7339fa" translate="yes" xml:space="preserve">
          <source>Form Submission</source>
          <target state="translated">양식 제출</target>
        </trans-unit>
        <trans-unit id="53a11923bf4b30c2695146358bf573a9a81ef986" translate="yes" xml:space="preserve">
          <source>Form Submission Redirects</source>
          <target state="translated">양식 제출 리디렉션</target>
        </trans-unit>
        <trans-unit id="c29b61ca75f1c226b23fdb85ea8267be1b5f57ad" translate="yes" xml:space="preserve">
          <source>Form Submissions</source>
          <target state="translated">양식 제출</target>
        </trans-unit>
        <trans-unit id="9dfc42ed63ca85b554caa7e220fd03b0c592b3d8" translate="yes" xml:space="preserve">
          <source>Form submission could result in a non-success status code.</source>
          <target state="translated">양식을 제출하면 성공하지 못한 상태 코드가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8d016fe426ee3087e96153f2d1d6e6ebf0fc6765" translate="yes" xml:space="preserve">
          <source>Form with 1 input, no defaultButton.</source>
          <target state="translated">1 개의 입력을 가진 폼, defaultButton은 없습니다.</target>
        </trans-unit>
        <trans-unit id="8e9fba7056e53e85ae44895a33b9e115c05d0bb1" translate="yes" xml:space="preserve">
          <source>Form with 2 inputs, no defaultButton.</source>
          <target state="translated">입력이 2 개인 양식, defaultButton은 없습니다.</target>
        </trans-unit>
        <trans-unit id="cf3f48103538a5822498e4ce69d4cd1cd1cbd15b" translate="yes" xml:space="preserve">
          <source>Form with disabled defaultButton.</source>
          <target state="translated">defaultButton이 비활성화 된 양식</target>
        </trans-unit>
        <trans-unit id="fa6120162c6ff741a97b6f9f45021516e88399ea" translate="yes" xml:space="preserve">
          <source>Form with multiple defaultButtons.</source>
          <target state="translated">여러 개의 기본 버튼이있는 양식.</target>
        </trans-unit>
        <trans-unit id="4bec9575721b2739ed1e7c56eb6c8471084fcbcf" translate="yes" xml:space="preserve">
          <source>Forms</source>
          <target state="translated">Forms</target>
        </trans-unit>
        <trans-unit id="f123768a0be7e3519d5400f6ace516a3d22ef601" translate="yes" xml:space="preserve">
          <source>Fortunately, you don&amp;rsquo;t have to make your code do backflips. Cypress makes it easy to handle these situations.</source>
          <target state="translated">운 좋게도 코드를 백 플립으로 만들 필요는 없습니다. Cypress를 사용하면 이러한 상황을 쉽게 처리 할 수 ​​있습니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
