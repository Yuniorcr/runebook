<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="cypress">
    <body>
      <group id="cypress">
        <trans-unit id="e2abffbb468884487fdb15726806f6e9266400c3" translate="yes" xml:space="preserve">
          <source>&quot;, &quot;I should see an</source>
          <target state="translated">&quot;,&quot;</target>
        </trans-unit>
        <trans-unit id="a02d02e2b4d46e9afe74c0ee3915d22bf74e140d" translate="yes" xml:space="preserve">
          <source>#CI parallelisation#continuous-integration</source>
          <target state="translated">#CI 병렬화 # 연속 통합</target>
        </trans-unit>
        <trans-unit id="72dd8c617e02a12e1734f06efff53a5baf69c4f8" translate="yes" xml:space="preserve">
          <source>#Polymer#lit-html#ShadowDom</source>
          <target state="translated">#Polymer#lit-html#ShadowDom</target>
        </trans-unit>
        <trans-unit id="1cabc53a619ea8869319d868f405291ca523b252" translate="yes" xml:space="preserve">
          <source>#accessibility#a11y</source>
          <target state="translated">#accessibility#a11y</target>
        </trans-unit>
        <trans-unit id="d3731313d3cd563cce3d1473e395f615454cb91e" translate="yes" xml:space="preserve">
          <source>#angular#cli</source>
          <target state="translated">#angular#cli</target>
        </trans-unit>
        <trans-unit id="06ef7c18e78df143d9eb776eac1186c25242f469" translate="yes" xml:space="preserve">
          <source>#aurelia#cli</source>
          <target state="translated">#aurelia#cli</target>
        </trans-unit>
        <trans-unit id="a66645b47299408407eee89e3b14eadc8c40d58a" translate="yes" xml:space="preserve">
          <source>#authentication#login#social profiles#github#google</source>
          <target state="translated"># authentication # login # social profiles # github # google</target>
        </trans-unit>
        <trans-unit id="3f10f3bb114e2fba10f19b04edaac4f298c04b2c" translate="yes" xml:space="preserve">
          <source>#authentication#ntlm</source>
          <target state="translated">#authentication#ntlm</target>
        </trans-unit>
        <trans-unit id="9fdd499e8af3b3538e8866aaefe72ff58c631c7a" translate="yes" xml:space="preserve">
          <source>#authentication#otp#2fa#mfa</source>
          <target state="translated">#authentication#otp#2fa#mfa</target>
        </trans-unit>
        <trans-unit id="e9e91325c3d09b58cf0b5c9e4fdd337ee21affcf" translate="yes" xml:space="preserve">
          <source>#browserify</source>
          <target state="translated">#browserify</target>
        </trans-unit>
        <trans-unit id="d80ac66840cbd54734cb3015f6fde54060ab7782" translate="yes" xml:space="preserve">
          <source>#commands</source>
          <target state="translated">#commands</target>
        </trans-unit>
        <trans-unit id="81987be590d822f3291703cac77de473a2cda5d3" translate="yes" xml:space="preserve">
          <source>#commands#downloading</source>
          <target state="translated">#commands#downloading</target>
        </trans-unit>
        <trans-unit id="48c7b05686f21be3baa7615e68ce389c44600981" translate="yes" xml:space="preserve">
          <source>#commands#routing#networking</source>
          <target state="translated">#commands#routing#networking</target>
        </trans-unit>
        <trans-unit id="98604d10301b441006ca0c88238cc26f646da1c6" translate="yes" xml:space="preserve">
          <source>#commands#wait#wait-until#recursive-promise#check-async-value#check-value#open-source-saturday</source>
          <target state="translated">#commands#wait#wait-until#recursive-promise#check-async-value#check-value#open-source-saturday</target>
        </trans-unit>
        <trans-unit id="6c6eb81cc50c9333a7d0201c39553812a5aeb207" translate="yes" xml:space="preserve">
          <source>#component#angular</source>
          <target state="translated">#component#angular</target>
        </trans-unit>
        <trans-unit id="5e8c6fddcc564736e20a41f281b1e534f776d585" translate="yes" xml:space="preserve">
          <source>#component#angular.js</source>
          <target state="translated">#component#angular.js</target>
        </trans-unit>
        <trans-unit id="43bb8709f062ed9ca6cec65305dad2af5bce03a4" translate="yes" xml:space="preserve">
          <source>#component#cycle.js</source>
          <target state="translated">#component#cycle.js</target>
        </trans-unit>
        <trans-unit id="236ba4164536407ab4e783e5b4a2155c1dd7366a" translate="yes" xml:space="preserve">
          <source>#component#hyperapp</source>
          <target state="translated">#component#hyperapp</target>
        </trans-unit>
        <trans-unit id="7c7b3d1bb37c01ceab4464d5d864de4c540f0f12" translate="yes" xml:space="preserve">
          <source>#component#react</source>
          <target state="translated">#component#react</target>
        </trans-unit>
        <trans-unit id="1591412f15377ef80ade12e6288eb57621a0d724" translate="yes" xml:space="preserve">
          <source>#component#svelte</source>
          <target state="translated">#component#svelte</target>
        </trans-unit>
        <trans-unit id="77e591d86433606394778b0b1edac2bf0714118f" translate="yes" xml:space="preserve">
          <source>#component#vue#vue.js</source>
          <target state="translated">#component#vue#vue.js</target>
        </trans-unit>
        <trans-unit id="ce77b42a6e54eed4f96eefb94b74834094e8d3f9" translate="yes" xml:space="preserve">
          <source>#continuous-integration</source>
          <target state="translated">#continuous-integration</target>
        </trans-unit>
        <trans-unit id="e82a08d6aeea890f2888e3331f87c78e445260ff" translate="yes" xml:space="preserve">
          <source>#coverage</source>
          <target state="translated">#coverage</target>
        </trans-unit>
        <trans-unit id="c48ddf4c9273f397ac9543122cd262b4c539663e" translate="yes" xml:space="preserve">
          <source>#cucumber#collection#actions#commands</source>
          <target state="translated">#cucumber#collection#actions#commands</target>
        </trans-unit>
        <trans-unit id="bb8624c5be957cdb4456f32697efadff25e141f5" translate="yes" xml:space="preserve">
          <source>#cypress cli#prototype#CLI#scaffolding</source>
          <target state="translated">#cypress cli # prototype # CLI # 스캐 폴딩</target>
        </trans-unit>
        <trans-unit id="d6b29abb75c78eeed7b3f8c19271e4028b12c0b1" translate="yes" xml:space="preserve">
          <source>#cypress-plugin-retries</source>
          <target state="translated">#cypress-plugin-retries</target>
        </trans-unit>
        <trans-unit id="c6ffc94cfcefda2297e5ea785054bd0a5f3254dc" translate="yes" xml:space="preserve">
          <source>#docker#continuous-integration</source>
          <target state="translated">#docker#continuous-integration</target>
        </trans-unit>
        <trans-unit id="d64b4a4e6e49f57edf2a635c575f21582a3b44fd" translate="yes" xml:space="preserve">
          <source>#dragndrop#drag#drop#commands</source>
          <target state="translated">#dragndrop#drag#drop#commands</target>
        </trans-unit>
        <trans-unit id="8d4dd1b59464b603685bcdef5db8f40c30100e3c" translate="yes" xml:space="preserve">
          <source>#elm#parcel#netlify</source>
          <target state="translated">#elm#parcel#netlify</target>
        </trans-unit>
        <trans-unit id="425999f48ec38019c9e22c7d68daa89ade072aba" translate="yes" xml:space="preserve">
          <source>#encoding#protobuf</source>
          <target state="translated">#encoding#protobuf</target>
        </trans-unit>
        <trans-unit id="eb116ca98cd6b18d7aeb76fb04574325265ede95" translate="yes" xml:space="preserve">
          <source>#eslint</source>
          <target state="translated">#eslint</target>
        </trans-unit>
        <trans-unit id="031522cc845250748df55443a93b476e1ac00578" translate="yes" xml:space="preserve">
          <source>#file-watcher</source>
          <target state="translated">#file-watcher</target>
        </trans-unit>
        <trans-unit id="13cb993dd7c7ca40e91b5d78d23e69fa879cf6dc" translate="yes" xml:space="preserve">
          <source>#file-watcher#cucumber</source>
          <target state="translated">#file-watcher#cucumber</target>
        </trans-unit>
        <trans-unit id="dbda8825f967c3aea1a6169dae0d8724837e6478" translate="yes" xml:space="preserve">
          <source>#fileupload#file#upload#commands</source>
          <target state="translated">#fileupload#file#upload#commands</target>
        </trans-unit>
        <trans-unit id="3874f7a9bdff7ecec27a7e89fa26fc0b45ec9844" translate="yes" xml:space="preserve">
          <source>#firebase#database#commands</source>
          <target state="translated">#firebase#database#commands</target>
        </trans-unit>
        <trans-unit id="8a0cce78bc328422f9046586db851acdbb8714b2" translate="yes" xml:space="preserve">
          <source>#github#actions#npm</source>
          <target state="translated">#github#actions#npm</target>
        </trans-unit>
        <trans-unit id="9b94ebf6a379a453ba7c7cd5e86061f96ef95d87" translate="yes" xml:space="preserve">
          <source>#graphql</source>
          <target state="translated">#graphql</target>
        </trans-unit>
        <trans-unit id="13ee59bce1bd8eae8ccde855b0cce4323dbf2f7a" translate="yes" xml:space="preserve">
          <source>#image-diff#snapshot</source>
          <target state="translated">#image-diff#snapshot</target>
        </trans-unit>
        <trans-unit id="4ea545b5576a641e0eea65c13c7a1f4e8e742741" translate="yes" xml:space="preserve">
          <source>#jest</source>
          <target state="translated">#jest</target>
        </trans-unit>
        <trans-unit id="c9f6634ff4b231a1f86c237ddc17018f9c72af78" translate="yes" xml:space="preserve">
          <source>#logging</source>
          <target state="translated">#logging</target>
        </trans-unit>
        <trans-unit id="f5e1e94ae57f99f6095710aa9846890d88ca9856" translate="yes" xml:space="preserve">
          <source>#mock#recording#http#integration test</source>
          <target state="translated"># mock # recording # http # 통합 테스트</target>
        </trans-unit>
        <trans-unit id="4aeece75b7ca9dcb01f0880488440a1ec8784837" translate="yes" xml:space="preserve">
          <source>#reporter</source>
          <target state="translated">#reporter</target>
        </trans-unit>
        <trans-unit id="a786d0de61b3206df06794c2929f43c5a5729ceb" translate="yes" xml:space="preserve">
          <source>#reporter#mochawesome</source>
          <target state="translated">#reporter#mochawesome</target>
        </trans-unit>
        <trans-unit id="07e52797809a14d19cf596376445acb374908d58" translate="yes" xml:space="preserve">
          <source>#reporter#mochawesome#slack</source>
          <target state="translated">#reporter#mochawesome#slack</target>
        </trans-unit>
        <trans-unit id="78b6f3bfd460d44e41c31e32f5982386c758a94d" translate="yes" xml:space="preserve">
          <source>#reporter#slack#healthcheck</source>
          <target state="translated">#reporter#slack#healthcheck</target>
        </trans-unit>
        <trans-unit id="f875840b7a13f3f11db2cecdb39cf8a26a9964de" translate="yes" xml:space="preserve">
          <source>#routing#mock</source>
          <target state="translated">#routing#mock</target>
        </trans-unit>
        <trans-unit id="7c13bd7f773a3f3bd2f6048d3e7230d7aa5d3117" translate="yes" xml:space="preserve">
          <source>#ruby-rack#ruby-on-rails</source>
          <target state="translated">#ruby-rack#ruby-on-rails</target>
        </trans-unit>
        <trans-unit id="8c13249e18614c4175099ff80ebd832ea3f4dc92" translate="yes" xml:space="preserve">
          <source>#screenshots#visual regression</source>
          <target state="translated"># 스크린 샷 # 시각적 회귀</target>
        </trans-unit>
        <trans-unit id="90cd86512e4eb73c4ca538f1e947c3bb7c89e78b" translate="yes" xml:space="preserve">
          <source>#shadow#shadow-dom#polymer#lit-html#commands</source>
          <target state="translated">#shadow#shadow-dom#polymer#lit-html#commands</target>
        </trans-unit>
        <trans-unit id="08cd514c0148d4407deda2bcf03e4797185376f9" translate="yes" xml:space="preserve">
          <source>#snapshot</source>
          <target state="translated">#snapshot</target>
        </trans-unit>
        <trans-unit id="4134099e77a4626373b4c1a87ada42ade08b61bd" translate="yes" xml:space="preserve">
          <source>#testing-library#capybara</source>
          <target state="translated">#testing-library#capybara</target>
        </trans-unit>
        <trans-unit id="5542301e6d2c175b142ca1309a9d96f889900734" translate="yes" xml:space="preserve">
          <source>#testing-library#dom-testing-library#react-testing-library</source>
          <target state="translated">#testing-library#dom-testing-library#react-testing-library</target>
        </trans-unit>
        <trans-unit id="f456b789c330c7d4eeee4e1df1424e7c1d33cf80" translate="yes" xml:space="preserve">
          <source>#testrail#reporter</source>
          <target state="translated">#testrail#reporter</target>
        </trans-unit>
        <trans-unit id="be2e17b9982b40f09a9b30ab5ff06c43619dccba" translate="yes" xml:space="preserve">
          <source>#theme</source>
          <target state="translated">#theme</target>
        </trans-unit>
        <trans-unit id="5a4d7179645c71127cd8d8282ca5b70219b00c5b" translate="yes" xml:space="preserve">
          <source>#typescript</source>
          <target state="translated">#typescript</target>
        </trans-unit>
        <trans-unit id="d8ff4ca82443d2063dca9e4eccff65e429a0f848" translate="yes" xml:space="preserve">
          <source>#viewports</source>
          <target state="translated">#viewports</target>
        </trans-unit>
        <trans-unit id="fc66d55d0d2a26083f7dc516a7308fde002b0a84" translate="yes" xml:space="preserve">
          <source>#vue.js#vue#cli</source>
          <target state="translated">#vue.js#vue#cli</target>
        </trans-unit>
        <trans-unit id="69b3cfd55413ce140d59de160079d29438cecbd7" translate="yes" xml:space="preserve">
          <source>#wdio</source>
          <target state="translated">#wdio</target>
        </trans-unit>
        <trans-unit id="554f312579d558feaa0ace5fd568c3ec991bd2fb" translate="yes" xml:space="preserve">
          <source>#webpack</source>
          <target state="translated">#webpack</target>
        </trans-unit>
        <trans-unit id="5ac4e168a0e015f1faaa4d7e959cd81975ce9fe3" translate="yes" xml:space="preserve">
          <source>#wp#wordpress</source>
          <target state="translated">#wp#wordpress</target>
        </trans-unit>
        <trans-unit id="0cb3be05b9236227cbe09a3f3036896efc88a1cd" translate="yes" xml:space="preserve">
          <source>#xpath#commands</source>
          <target state="translated">#xpath#commands</target>
        </trans-unit>
        <trans-unit id="012cb28654fa98c5e4a6b5d3a2d6e0ef1c0d4819" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2017 Cypress.io</source>
          <target state="translated">&amp;copy; 2017 Cypress.io</target>
        </trans-unit>
        <trans-unit id="063c782f3f7fd5e3c2f74fbc1cdb937d2fa4d9a2" translate="yes" xml:space="preserve">
          <source>&amp;hellip;and Cypress will open right up for you.</source>
          <target state="translated">&amp;hellip; 그리고 Cypress가 바로 열릴 것입니다.</target>
        </trans-unit>
        <trans-unit id="abfac6171c10765a65a44827f5960aa59913c91b" translate="yes" xml:space="preserve">
          <source>&amp;hellip;and parses it to find all functions, statements, and branches and then inserts a &lt;strong&gt;counters&lt;/strong&gt; into the code. For the above code it might look likes this:</source>
          <target state="translated">&amp;hellip;이 함수를 구문 분석하여 모든 함수, 명령문 및 분기를 찾은 다음 코드에 &lt;strong&gt;카운터&lt;/strong&gt; 를 삽입합니다 . 위 코드의 경우 다음과 같이 보일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bd3c3b7a6656f7aa86712cc059d522c5c9631831" translate="yes" xml:space="preserve">
          <source>&amp;hellip;and want to run tests from a single spec file and record the results on the Dashboard, the command should be:</source>
          <target state="translated">&amp;hellip; 단일 스펙 파일에서 테스트를 실행하고 결과를 대시 보드에 기록하려면 명령은 다음과 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="9e41ea8473f5b0aafbe75b9066146286def69842" translate="yes" xml:space="preserve">
          <source>&amp;hellip;and wraps each statement with additional counters that keep track of how many times each source line has been executed by the JavaScript runtime.</source>
          <target state="translated">&amp;hellip; 그리고 각 소스 라인이 JavaScript 런타임에 의해 실행 된 횟수를 추적하는 추가 카운터로 각 명령문을 래핑합니다.</target>
        </trans-unit>
        <trans-unit id="4beffac492b08534caa0add4e77a0be0447d3cd4" translate="yes" xml:space="preserve">
          <source>&amp;hellip;or even a 3rd level deep submodule</source>
          <target state="translated">&amp;hellip; 또는 심지어 3 단계 딥 서브 모듈</target>
        </trans-unit>
        <trans-unit id="9f3de7afaf2d922d5c52b6e000e827866d4d3fe1" translate="yes" xml:space="preserve">
          <source>&amp;hellip;or&amp;hellip;</source>
          <target state="translated">&amp;hellip;or&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="b923054415bedcb8dbcb6f80bb47ba4d95bf8284" translate="yes" xml:space="preserve">
          <source>&amp;hellip;or&amp;hellip; (requires &lt;a href=&quot;https://docs.cypress.io/cdn-cgi/l/email-protection#701e001d30455e425e40&quot;&gt;npm@5.2.0&lt;/a&gt; or greater)</source>
          <target state="translated">&amp;hellip; 또는&amp;hellip; ( &lt;a href=&quot;https://docs.cypress.io/cdn-cgi/l/email-protection#701e001d30455e425e40&quot;&gt;npm@5.2.0&lt;/a&gt; 이상 필요 )</target>
        </trans-unit>
        <trans-unit id="5f3bab43eced7cf490bea67f5d9d03421fc4e435" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;&amp;hellip;okay great! Let&amp;rsquo;s repeat this login process before every single test!&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;&amp;hellip; 좋아요! 매번 테스트하기 전에이 로그인 과정을 반복합시다!&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="7b888d69aef845e66fea5821968c3947c0c933e7" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="253505e5c4c779378d19ba265b6e118219bd57c6" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Cannot revert DOM while tests are running&amp;rdquo; now removes itself correctly.</source>
          <target state="translated">&quot;테스트가 실행되는 동안 DOM을 되돌릴 수 없습니다&quot;는 이제 스스로 제거합니다.</target>
        </trans-unit>
        <trans-unit id="661b4bd136b7ba8100c603977426593ff5d2fec7" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Hidden&amp;rdquo; elements which actually displace height or width are now highlighted when restoring the DOM when a command is hovered.</source>
          <target state="translated">명령을 가리킬 때 DOM을 복원 할 때 실제로 높이 또는 너비를 대체하는 &quot;숨겨진&quot;요소가 강조 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="616d0e95fee158f58579382b096640f0fd8ad12c" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Shrink the Untestable Code With App Actions And Effects&amp;rdquo;</source>
          <target state="translated">&quot;앱 작업 및 효과로 테스트 할 수없는 코드 축소&quot;</target>
        </trans-unit>
        <trans-unit id="a58e13e658471b83e198aa461d951df03a8f4b90" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Stub navigator API in end-to-end tests&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;종단 테스트에서 스텁 네비게이터 API&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="597e5c436fdd57dfa3310112d7bd4f9fbbed2cb8" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;outer assertions&amp;rdquo; now are correctly retried by previous commands. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/543&quot;&gt;#543&lt;/a&gt;.</source>
          <target state="translated">이전 명령으로 &quot;외부 어설 션&quot;이 올바르게 재 시도됩니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/543&quot;&gt;# 543&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="874bb5356bb7b5afba0a0e33a7b082fc256f872a" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;Add Project&amp;rsquo; dialog is no longer lost on blur. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/115&quot;&gt;#115&lt;/a&gt;.</source>
          <target state="translated">'프로젝트 추가'대화 상자가 더 이상 흐리게 표시되지 않습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/115&quot;&gt;# 115&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="bd98eac6fcae35daa6dd337049e545f1d07912a2" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;withinSubject&amp;rsquo;</source>
          <target state="translated">&amp;lsquo;withinSubject&amp;rsquo;</target>
        </trans-unit>
        <trans-unit id="3931b8b6f8067185aa547cc1ec72172e8694bacd" translate="yes" xml:space="preserve">
          <source>&amp;lt; 0.3.3</source>
          <target state="translated">&amp;lt;0.3.3</target>
        </trans-unit>
        <trans-unit id="3d8260817ccb059122d2e739a86aa57f288bb67d" translate="yes" xml:space="preserve">
          <source>* The promise should resolve only after the file has completed writing to disk. The promise resolving is a signal that the file is ready to be served to the browser.</source>
          <target state="translated">* 약속은 파일 쓰기가 디스크에 완료된 후에 만 ​​해결되어야합니다. 약속 해결은 파일을 브라우저에 제공 할 준비가되었다는 신호입니다.</target>
        </trans-unit>
        <trans-unit id="47f600131f146f4a13c0063de88c057e1fee0bd1" translate="yes" xml:space="preserve">
          <source>** The built file is the file that is created by the preprocessor that will eventually be served to the browser.</source>
          <target state="translated">** 빌드 된 파일은 전처리기에 의해 생성되어 결국 브라우저에 제공되는 파일입니다.</target>
        </trans-unit>
        <trans-unit id="018061bec2a4ed40406b95dcf9e9788d93ec5a34" translate="yes" xml:space="preserve">
          <source>*&lt;strong&gt;hides overflow&lt;/strong&gt; means it has &lt;code&gt;overflow: hidden&lt;/code&gt;, &lt;code&gt;overflow-x: hidden&lt;/code&gt;, &lt;code&gt;overflow-y : hidden&lt;/code&gt;, &lt;code&gt;overflow: scroll&lt;/code&gt;, or &lt;code&gt;overflow: auto&lt;/code&gt;</source>
          <target state="translated">* &lt;strong&gt;hides overflow&lt;/strong&gt; 는 &lt;code&gt;overflow: hidden&lt;/code&gt; , &lt;code&gt;overflow-x: hidden&lt;/code&gt; , &lt;code&gt;overflow-y : hidden&lt;/code&gt; , &lt;code&gt;overflow: scroll&lt;/code&gt; 또는 &lt;code&gt;overflow: auto&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="52eda39a2e65723b2c7c0dd0dcbab9e55ef6d8e6" translate="yes" xml:space="preserve">
          <source>.buildkite/pipeline.yml</source>
          <target state="translated">.buildkite/pipeline.yml</target>
        </trans-unit>
        <trans-unit id="d28d862e7d3b7a4efe26187a35fb8cc8560b6112" translate="yes" xml:space="preserve">
          <source>.deepEqual(&lt;em&gt;actual&lt;/em&gt;, &lt;em&gt;expected&lt;/em&gt;, &lt;em&gt;[message]&lt;/em&gt;)</source>
          <target state="translated">.deepEqual ( &lt;em&gt;실제&lt;/em&gt; , &lt;em&gt;예상&lt;/em&gt; , &lt;em&gt;[메시지]&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="6ffb5191281de988d6e6af31bc0f273920133d6b" translate="yes" xml:space="preserve">
          <source>.equal(&lt;em&gt;actual&lt;/em&gt;, &lt;em&gt;expected&lt;/em&gt;, &lt;em&gt;[message]&lt;/em&gt;)</source>
          <target state="translated">.equal ( &lt;em&gt;actual&lt;/em&gt; , &lt;em&gt;expected&lt;/em&gt; , &lt;em&gt;[message]&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="9c0986f47fa2cd6adef72f98b18f4400eebc5167" translate="yes" xml:space="preserve">
          <source>.exists(&lt;em&gt;value&lt;/em&gt;, &lt;em&gt;[message]&lt;/em&gt;)</source>
          <target state="translated">.exists ( &lt;em&gt;value&lt;/em&gt; , &lt;em&gt;[message]&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="587d266bb27a4dc3022bbed44dfa19849df3044c" translate="yes" xml:space="preserve">
          <source>.gitlab-ci.yml</source>
          <target state="translated">.gitlab-ci.yml</target>
        </trans-unit>
        <trans-unit id="341d99c42684c91259cc19cdf7fbd6d696245665" translate="yes" xml:space="preserve">
          <source>.isAbove(&lt;em&gt;valueToCheck&lt;/em&gt;, &lt;em&gt;valueToBeAbove&lt;/em&gt;, &lt;em&gt;[message]&lt;/em&gt;)</source>
          <target state="translated">.isAbove ( &lt;em&gt;valueToCheck&lt;/em&gt; , &lt;em&gt;valueToBeAbove&lt;/em&gt; , &lt;em&gt;[message]&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="217b1d0affba648f237bbc2c10d55c3bd6553510" translate="yes" xml:space="preserve">
          <source>.isArray(&lt;em&gt;value&lt;/em&gt;, &lt;em&gt;[message]&lt;/em&gt;)</source>
          <target state="translated">.isArray ( &lt;em&gt;value&lt;/em&gt; , &lt;em&gt;[message]&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="e72718c721424b8db07a71d378f6047af58fdbfc" translate="yes" xml:space="preserve">
          <source>.isAtLeast(&lt;em&gt;valueToCheck&lt;/em&gt;, &lt;em&gt;valueToBeAtLeast&lt;/em&gt;, &lt;em&gt;[message]&lt;/em&gt;)</source>
          <target state="translated">.isAtLeast ( &lt;em&gt;valueToCheck&lt;/em&gt; , &lt;em&gt;valueToBeAtLeast&lt;/em&gt; , &lt;em&gt;[message]&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="834ec677f2c25c5c62dafa5ce230c651dcae7d4d" translate="yes" xml:space="preserve">
          <source>.isAtMost(&lt;em&gt;valueToCheck&lt;/em&gt;, &lt;em&gt;valueToBeAtMost&lt;/em&gt;, &lt;em&gt;[message]&lt;/em&gt;)</source>
          <target state="translated">.isAtMost ( &lt;em&gt;valueToCheck&lt;/em&gt; , &lt;em&gt;valueToBeAtMost&lt;/em&gt; , &lt;em&gt;[message]&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="24a0f0dd131d20a168e47dba2572ef2941e3d059" translate="yes" xml:space="preserve">
          <source>.isBelow(&lt;em&gt;valueToCheck&lt;/em&gt;, &lt;em&gt;valueToBeBelow&lt;/em&gt;, &lt;em&gt;[message]&lt;/em&gt;)</source>
          <target state="translated">.isBelow ( &lt;em&gt;valueToCheck&lt;/em&gt; , &lt;em&gt;valueToBeBelow&lt;/em&gt; , &lt;em&gt;[메시지]&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="9a07f96b18ecfeb64e58893e274f33a9d4ca8173" translate="yes" xml:space="preserve">
          <source>.isBoolean(&lt;em&gt;value&lt;/em&gt;, &lt;em&gt;[message]&lt;/em&gt;)</source>
          <target state="translated">.isBoolean ( &lt;em&gt;value&lt;/em&gt; , &lt;em&gt;[message]&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="a4383184c00d2458f52453426d3714d36330172c" translate="yes" xml:space="preserve">
          <source>.isDefined(&lt;em&gt;value&lt;/em&gt;, &lt;em&gt;[message]&lt;/em&gt;)</source>
          <target state="translated">.isDefined ( &lt;em&gt;value&lt;/em&gt; , &lt;em&gt;[message]&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="0969858acee3c9934319ff0c62106b1e43255fc0" translate="yes" xml:space="preserve">
          <source>.isFalse(&lt;em&gt;value&lt;/em&gt;, &lt;em&gt;[message]&lt;/em&gt;)</source>
          <target state="translated">.isFalse ( &lt;em&gt;value&lt;/em&gt; , &lt;em&gt;[메시지]&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="1a3aff01d833eb317a7861fe7d528f8edba7040e" translate="yes" xml:space="preserve">
          <source>.isFinite(&lt;em&gt;value&lt;/em&gt;, &lt;em&gt;[message]&lt;/em&gt;)</source>
          <target state="translated">.isFinite ( &lt;em&gt;value&lt;/em&gt; , &lt;em&gt;[메시지]&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="6d07feaf7ff75d092ff36b493edc6b8c8fcbc301" translate="yes" xml:space="preserve">
          <source>.isFunction(&lt;em&gt;value&lt;/em&gt;, &lt;em&gt;[message]&lt;/em&gt;)</source>
          <target state="translated">.isFunction ( &lt;em&gt;value&lt;/em&gt; , &lt;em&gt;[메시지]&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="57b3f2ea197e998d47f0b7ac5203a818842e6677" translate="yes" xml:space="preserve">
          <source>.isNaN(&lt;em&gt;value&lt;/em&gt;, &lt;em&gt;[message]&lt;/em&gt;)</source>
          <target state="translated">.isNaN ( &lt;em&gt;value&lt;/em&gt; , &lt;em&gt;[message]&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="7cbd20b720874aac2d1dc55e438a2fa6a4133562" translate="yes" xml:space="preserve">
          <source>.isNotArray(&lt;em&gt;value&lt;/em&gt;, &lt;em&gt;[message]&lt;/em&gt;)</source>
          <target state="translated">.isNotArray ( &lt;em&gt;value&lt;/em&gt; , &lt;em&gt;[message]&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="b5d34e308284fe1074f92a0eb25d328df26b4ba2" translate="yes" xml:space="preserve">
          <source>.isNotBoolean(&lt;em&gt;value&lt;/em&gt;, &lt;em&gt;[message]&lt;/em&gt;)</source>
          <target state="translated">.isNotBoolean ( &lt;em&gt;value&lt;/em&gt; , &lt;em&gt;[message]&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="4c929f6748a9d11538a9d32dff1375e2c7d32037" translate="yes" xml:space="preserve">
          <source>.isNotFalse(&lt;em&gt;value&lt;/em&gt;, &lt;em&gt;[message]&lt;/em&gt;)</source>
          <target state="translated">.isNotFalse ( &lt;em&gt;value&lt;/em&gt; , &lt;em&gt;[message]&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="1ee843841000120a967c0d5bc2186256a70ef7c0" translate="yes" xml:space="preserve">
          <source>.isNotFunction(&lt;em&gt;value&lt;/em&gt;, &lt;em&gt;[message]&lt;/em&gt;)</source>
          <target state="translated">.isNotFunction ( &lt;em&gt;value&lt;/em&gt; , &lt;em&gt;[message]&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="f440b13bccf5bfa8c6d1b17f2e859b78d6fb39a3" translate="yes" xml:space="preserve">
          <source>.isNotNaN(&lt;em&gt;value&lt;/em&gt;, &lt;em&gt;[message]&lt;/em&gt;)</source>
          <target state="translated">.isNotNaN ( &lt;em&gt;value&lt;/em&gt; , &lt;em&gt;[message]&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="ac3e524c401f7be11a3cf3bf6ccb76d1d16d503a" translate="yes" xml:space="preserve">
          <source>.isNotNull(&lt;em&gt;value&lt;/em&gt;, &lt;em&gt;[message]&lt;/em&gt;)</source>
          <target state="translated">.isNotNull ( &lt;em&gt;value&lt;/em&gt; , &lt;em&gt;[message]&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="6d221c2b2296f0f0434a4dbd2b8c4304f04dd659" translate="yes" xml:space="preserve">
          <source>.isNotNumber(&lt;em&gt;value&lt;/em&gt;, &lt;em&gt;[message]&lt;/em&gt;)</source>
          <target state="translated">.isNotNumber ( &lt;em&gt;value&lt;/em&gt; , &lt;em&gt;[message]&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="4de9a933102bf571029731b5e49c5464aa0147a8" translate="yes" xml:space="preserve">
          <source>.isNotObject(&lt;em&gt;value&lt;/em&gt;, &lt;em&gt;[message]&lt;/em&gt;)</source>
          <target state="translated">.isNotObject ( &lt;em&gt;value&lt;/em&gt; , &lt;em&gt;[message]&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="0471264c4e19946b594dea17030b741e730fd1d8" translate="yes" xml:space="preserve">
          <source>.isNotOk(&lt;em&gt;object&lt;/em&gt;, &lt;em&gt;[message]&lt;/em&gt;)</source>
          <target state="translated">.isNotOk ( &lt;em&gt;object&lt;/em&gt; , &lt;em&gt;[message]&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="f46312b98d22e433b424d791c7e4b5f2eca7374f" translate="yes" xml:space="preserve">
          <source>.isNotString(&lt;em&gt;value&lt;/em&gt;, &lt;em&gt;[message]&lt;/em&gt;)</source>
          <target state="translated">.isNotString ( &lt;em&gt;value&lt;/em&gt; , &lt;em&gt;[message]&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="ecfa9b577970b2bd5b0f217bbfb7b23e84c61494" translate="yes" xml:space="preserve">
          <source>.isNotTrue(&lt;em&gt;value&lt;/em&gt;, &lt;em&gt;[message]&lt;/em&gt;)</source>
          <target state="translated">.isNotTrue ( &lt;em&gt;value&lt;/em&gt; , &lt;em&gt;[message]&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="3db8a47905ef91ba24ed3a9be6d076959a50630d" translate="yes" xml:space="preserve">
          <source>.isNull(&lt;em&gt;value&lt;/em&gt;, &lt;em&gt;[message]&lt;/em&gt;)</source>
          <target state="translated">.isNull ( &lt;em&gt;value&lt;/em&gt; , &lt;em&gt;[message]&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="7b42982baab8f1d1878bdc9466efdfe1815b412b" translate="yes" xml:space="preserve">
          <source>.isNumber(&lt;em&gt;value&lt;/em&gt;, &lt;em&gt;[message]&lt;/em&gt;)</source>
          <target state="translated">.isNumber ( &lt;em&gt;value&lt;/em&gt; , &lt;em&gt;[message]&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="def5a1aab7f1da23e842995adf0e99be39ad2d43" translate="yes" xml:space="preserve">
          <source>.isObject(&lt;em&gt;value&lt;/em&gt;, &lt;em&gt;[message]&lt;/em&gt;)</source>
          <target state="translated">.isObject ( &lt;em&gt;value&lt;/em&gt; , &lt;em&gt;[message]&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="ad6235afaafb198ccaa1df8321f9cff97a791f1d" translate="yes" xml:space="preserve">
          <source>.isOk(&lt;em&gt;object&lt;/em&gt;, &lt;em&gt;[message]&lt;/em&gt;)</source>
          <target state="translated">.isOk ( &lt;em&gt;객체&lt;/em&gt; , &lt;em&gt;[메시지]&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="f78c6ee02d19d39bf7279c32e98ca3f28538d4e6" translate="yes" xml:space="preserve">
          <source>.isString(&lt;em&gt;value&lt;/em&gt;, &lt;em&gt;[message]&lt;/em&gt;)</source>
          <target state="translated">.isString ( &lt;em&gt;value&lt;/em&gt; , &lt;em&gt;[message]&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="d36421a793b041d4045f9a75573af456af8c02d9" translate="yes" xml:space="preserve">
          <source>.isTrue(&lt;em&gt;value&lt;/em&gt;, &lt;em&gt;[message]&lt;/em&gt;)</source>
          <target state="translated">.isTrue ( &lt;em&gt;value&lt;/em&gt; , &lt;em&gt;[message]&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="dbac3bf4e862f50c6a6698560512e8282b851a30" translate="yes" xml:space="preserve">
          <source>.isUndefined(&lt;em&gt;value&lt;/em&gt;, &lt;em&gt;[message]&lt;/em&gt;)</source>
          <target state="translated">.isUndefined ( &lt;em&gt;value&lt;/em&gt; , &lt;em&gt;[message]&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="cd5297125feb55cc39702a93fdaf48460c9d9a2b" translate="yes" xml:space="preserve">
          <source>.notDeepEqual(&lt;em&gt;actual&lt;/em&gt;, &lt;em&gt;expected&lt;/em&gt;, &lt;em&gt;[message]&lt;/em&gt;)</source>
          <target state="translated">.notDeepEqual ( &lt;em&gt;actual&lt;/em&gt; , &lt;em&gt;expected&lt;/em&gt; , &lt;em&gt;[message]&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="c2359dfa923e8d12d1eec0f741a027dd42a9c6a4" translate="yes" xml:space="preserve">
          <source>.notEqual(&lt;em&gt;actual&lt;/em&gt;, &lt;em&gt;expected&lt;/em&gt;, &lt;em&gt;[message]&lt;/em&gt;)</source>
          <target state="translated">.notEqual ( &lt;em&gt;actual&lt;/em&gt; , &lt;em&gt;expected&lt;/em&gt; , &lt;em&gt;[message]&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="284dcf4d6e62b886ce297afc6d1ba10461a9f104" translate="yes" xml:space="preserve">
          <source>.notExists(&lt;em&gt;value&lt;/em&gt;, &lt;em&gt;[message]&lt;/em&gt;)</source>
          <target state="translated">.notExists ( &lt;em&gt;value&lt;/em&gt; , &lt;em&gt;[message]&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="bb8050a1851ec763792edaa1a9ee019f954975c9" translate="yes" xml:space="preserve">
          <source>.notStrictEqual(&lt;em&gt;actual&lt;/em&gt;, &lt;em&gt;expected&lt;/em&gt;, &lt;em&gt;[message]&lt;/em&gt;)</source>
          <target state="translated">.notStrictEqual ( &lt;em&gt;actual&lt;/em&gt; , &lt;em&gt;expected&lt;/em&gt; , &lt;em&gt;[message]&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="33e502586fbaffeea555e25710c64dffebc29943" translate="yes" xml:space="preserve">
          <source>.notTypeOf(&lt;em&gt;value&lt;/em&gt;, &lt;em&gt;name&lt;/em&gt;, &lt;em&gt;[message]&lt;/em&gt;)</source>
          <target state="translated">.notTypeOf ( &lt;em&gt;value&lt;/em&gt; , &lt;em&gt;name&lt;/em&gt; , &lt;em&gt;[메시지]&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="741672e390a3cebddfd14397e4efee9316cb0ec2" translate="yes" xml:space="preserve">
          <source>.strictEqual(&lt;em&gt;actual&lt;/em&gt;, &lt;em&gt;expected&lt;/em&gt;, &lt;em&gt;[message]&lt;/em&gt;)</source>
          <target state="translated">.strictEqual ( &lt;em&gt;actual&lt;/em&gt; , &lt;em&gt;expected&lt;/em&gt; , &lt;em&gt;[message]&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="dea01dd89a3b602828e630677fde5d77c06441c8" translate="yes" xml:space="preserve">
          <source>.travis.yml</source>
          <target state="translated">.travis.yml</target>
        </trans-unit>
        <trans-unit id="5d20c840f87da7a7ed450adc164575e905634e31" translate="yes" xml:space="preserve">
          <source>.typeOf(&lt;em&gt;value&lt;/em&gt;, &lt;em&gt;name&lt;/em&gt;, &lt;em&gt;[message]&lt;/em&gt;)</source>
          <target state="translated">.typeOf ( &lt;em&gt;value&lt;/em&gt; , &lt;em&gt;name&lt;/em&gt; , &lt;em&gt;[메시지]&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="0f3026597370c2b82f1a05e1ef9ac976d4741e6e" translate="yes" xml:space="preserve">
          <source>0.10.0</source>
          <target state="translated">0.10.0</target>
        </trans-unit>
        <trans-unit id="1db9570ff37bf9ec4c47e28087b57b7682f25d69" translate="yes" xml:space="preserve">
          <source>0.10.1</source>
          <target state="translated">0.10.1</target>
        </trans-unit>
        <trans-unit id="8619762bdfe46cc64510362699406a929ecac5c7" translate="yes" xml:space="preserve">
          <source>0.10.2</source>
          <target state="translated">0.10.2</target>
        </trans-unit>
        <trans-unit id="9b43d0ee00cc2778ee8b7142a34c6b1426264560" translate="yes" xml:space="preserve">
          <source>0.10.3</source>
          <target state="translated">0.10.3</target>
        </trans-unit>
        <trans-unit id="f4a7a0d5b414fd6d65bb831f630a1afa26771369" translate="yes" xml:space="preserve">
          <source>0.10.4</source>
          <target state="translated">0.10.4</target>
        </trans-unit>
        <trans-unit id="17db7013c56c65350bb5d4e33b55bba28864db39" translate="yes" xml:space="preserve">
          <source>0.10.5</source>
          <target state="translated">0.10.5</target>
        </trans-unit>
        <trans-unit id="9018d393e635ffeaa2ddf6c7276c170796f233e8" translate="yes" xml:space="preserve">
          <source>0.10.6</source>
          <target state="translated">0.10.6</target>
        </trans-unit>
        <trans-unit id="ab236aac83dcf0e2755be383217fe1ce3939e93d" translate="yes" xml:space="preserve">
          <source>0.10.7</source>
          <target state="translated">0.10.7</target>
        </trans-unit>
        <trans-unit id="a8777d9595d71a4051bc5d4be670d3291e166654" translate="yes" xml:space="preserve">
          <source>0.10.8</source>
          <target state="translated">0.10.8</target>
        </trans-unit>
        <trans-unit id="8c36ee26a465f28629e4dfc02d120f7fec74d016" translate="yes" xml:space="preserve">
          <source>0.11.0</source>
          <target state="translated">0.11.0</target>
        </trans-unit>
        <trans-unit id="c3623b0bf32efda578b94afaa9349248f6324065" translate="yes" xml:space="preserve">
          <source>0.11.1</source>
          <target state="translated">0.11.1</target>
        </trans-unit>
        <trans-unit id="5f4b341371d188c1db5d96e4a733c78a28c687b5" translate="yes" xml:space="preserve">
          <source>0.11.10</source>
          <target state="translated">0.11.10</target>
        </trans-unit>
        <trans-unit id="e8e82ac8f7f2bbb3d03c1f1b8705928662eba114" translate="yes" xml:space="preserve">
          <source>0.11.11</source>
          <target state="translated">0.11.11</target>
        </trans-unit>
        <trans-unit id="2debcf72553b829916a07a36003b911a89f332f8" translate="yes" xml:space="preserve">
          <source>0.11.12</source>
          <target state="translated">0.11.12</target>
        </trans-unit>
        <trans-unit id="bd0b8df124cd64dba7084cbcb36c2ab0346dc0ea" translate="yes" xml:space="preserve">
          <source>0.11.13</source>
          <target state="translated">0.11.13</target>
        </trans-unit>
        <trans-unit id="0437378f2f3b830538cb7fc447ab3fa4809e9db0" translate="yes" xml:space="preserve">
          <source>0.11.2</source>
          <target state="translated">0.11.2</target>
        </trans-unit>
        <trans-unit id="eca6f4ca4d872d60f8fa0a6bf50604b861caaaa2" translate="yes" xml:space="preserve">
          <source>0.11.3</source>
          <target state="translated">0.11.3</target>
        </trans-unit>
        <trans-unit id="103a7310ac2aed7da236e698c0532d9291c9e0e3" translate="yes" xml:space="preserve">
          <source>0.11.4</source>
          <target state="translated">0.11.4</target>
        </trans-unit>
        <trans-unit id="128413e4de9959847807fc51217f5f26c5831cc6" translate="yes" xml:space="preserve">
          <source>0.11.5</source>
          <target state="translated">0.11.5</target>
        </trans-unit>
        <trans-unit id="6da291e229992e1b510145a44270cc0ee7913992" translate="yes" xml:space="preserve">
          <source>0.11.6</source>
          <target state="translated">0.11.6</target>
        </trans-unit>
        <trans-unit id="d9cf0fb8795fdfe1c24a9299a9e0a42170b80a8c" translate="yes" xml:space="preserve">
          <source>0.11.7</source>
          <target state="translated">0.11.7</target>
        </trans-unit>
        <trans-unit id="a75dba16d78ce0f8b469c3045dd044d3f3743380" translate="yes" xml:space="preserve">
          <source>0.11.8</source>
          <target state="translated">0.11.8</target>
        </trans-unit>
        <trans-unit id="21ede413c9d6b21a373e7367bfe50a2ae4db6cb3" translate="yes" xml:space="preserve">
          <source>0.11.9</source>
          <target state="translated">0.11.9</target>
        </trans-unit>
        <trans-unit id="abe363b536f0a2111dbd44ae85882bb2152bc353" translate="yes" xml:space="preserve">
          <source>0.12.0</source>
          <target state="translated">0.12.0</target>
        </trans-unit>
        <trans-unit id="fb8b4e7684a04e412b996dbf920f3fda609f2b7a" translate="yes" xml:space="preserve">
          <source>0.12.1</source>
          <target state="translated">0.12.1</target>
        </trans-unit>
        <trans-unit id="45d108ca50a9d4a9292e102e306efd4ba653ba98" translate="yes" xml:space="preserve">
          <source>0.12.2</source>
          <target state="translated">0.12.2</target>
        </trans-unit>
        <trans-unit id="cebe4803b29786bad750ebba732b0c22b78dc77e" translate="yes" xml:space="preserve">
          <source>0.12.3</source>
          <target state="translated">0.12.3</target>
        </trans-unit>
        <trans-unit id="588afeb18cc61b70adc457ab3f5e84fa21ae510b" translate="yes" xml:space="preserve">
          <source>0.12.4</source>
          <target state="translated">0.12.4</target>
        </trans-unit>
        <trans-unit id="fa25d619a6b60a3f18ba1345f20d0668b9fb0af6" translate="yes" xml:space="preserve">
          <source>0.12.5</source>
          <target state="translated">0.12.5</target>
        </trans-unit>
        <trans-unit id="027368339d835ace9d94ed303e182d97afd2d061" translate="yes" xml:space="preserve">
          <source>0.12.6</source>
          <target state="translated">0.12.6</target>
        </trans-unit>
        <trans-unit id="65e96b43817c04b3fae59d127f9d608c6984c70b" translate="yes" xml:space="preserve">
          <source>0.12.7</source>
          <target state="translated">0.12.7</target>
        </trans-unit>
        <trans-unit id="0727cdb0ea59d2ad10eb6bfe661ca86296d06b0a" translate="yes" xml:space="preserve">
          <source>0.12.8</source>
          <target state="translated">0.12.8</target>
        </trans-unit>
        <trans-unit id="ecae1744c3c167c818b74667e41862bba21b619e" translate="yes" xml:space="preserve">
          <source>0.13.0</source>
          <target state="translated">0.13.0</target>
        </trans-unit>
        <trans-unit id="8a33e454a6dbf784972f199dd3c886c4d5c55c4e" translate="yes" xml:space="preserve">
          <source>0.13.1</source>
          <target state="translated">0.13.1</target>
        </trans-unit>
        <trans-unit id="a411197daffd644aefbed282a4b0b6e17727b30b" translate="yes" xml:space="preserve">
          <source>0.13.2</source>
          <target state="translated">0.13.2</target>
        </trans-unit>
        <trans-unit id="90137019ef012addaa38d08df718c45c85ba6fec" translate="yes" xml:space="preserve">
          <source>0.13.3</source>
          <target state="translated">0.13.3</target>
        </trans-unit>
        <trans-unit id="85f2eb56a5baf5efa2bfe13419c74193a6c12a14" translate="yes" xml:space="preserve">
          <source>0.13.4</source>
          <target state="translated">0.13.4</target>
        </trans-unit>
        <trans-unit id="4125e35c197ea05181877af9a1fea0bfa49aefa9" translate="yes" xml:space="preserve">
          <source>0.13.5</source>
          <target state="translated">0.13.5</target>
        </trans-unit>
        <trans-unit id="41e73cfb7c1cbc0043c0c47b793aaf86a63850f5" translate="yes" xml:space="preserve">
          <source>0.13.6</source>
          <target state="translated">0.13.6</target>
        </trans-unit>
        <trans-unit id="a1ae0fe86f29f1d82c761ebe7f2dd103027193c3" translate="yes" xml:space="preserve">
          <source>0.13.7</source>
          <target state="translated">0.13.7</target>
        </trans-unit>
        <trans-unit id="9222e52a57a9b70b7b295cd084e2b1985394f9f5" translate="yes" xml:space="preserve">
          <source>0.13.8</source>
          <target state="translated">0.13.8</target>
        </trans-unit>
        <trans-unit id="a9db496bcaa1e4fee5871ab28c46005c95502b9c" translate="yes" xml:space="preserve">
          <source>0.13.9</source>
          <target state="translated">0.13.9</target>
        </trans-unit>
        <trans-unit id="ccff6a664d6172cba1d1c442c8862450dc887f8b" translate="yes" xml:space="preserve">
          <source>0.14.0</source>
          <target state="translated">0.14.0</target>
        </trans-unit>
        <trans-unit id="e2e893125e1ed69c26572caa5b7c1f786469f936" translate="yes" xml:space="preserve">
          <source>0.14.1</source>
          <target state="translated">0.14.1</target>
        </trans-unit>
        <trans-unit id="9fbd38d31743d60fc947b1e35a4f76d5c18c49ae" translate="yes" xml:space="preserve">
          <source>0.14.2</source>
          <target state="translated">0.14.2</target>
        </trans-unit>
        <trans-unit id="1564d2750cd03f4b9f4d097df16e8cfaa6604967" translate="yes" xml:space="preserve">
          <source>0.14.3</source>
          <target state="translated">0.14.3</target>
        </trans-unit>
        <trans-unit id="7020bea472fdf032b6583930b295761f2ee74176" translate="yes" xml:space="preserve">
          <source>0.15.0</source>
          <target state="translated">0.15.0</target>
        </trans-unit>
        <trans-unit id="189111df5619dc00070e213ceca978a031355b7e" translate="yes" xml:space="preserve">
          <source>0.15.1</source>
          <target state="translated">0.15.1</target>
        </trans-unit>
        <trans-unit id="ab97e588edcc62c1d4c043de8ddeb0dbdf15691e" translate="yes" xml:space="preserve">
          <source>0.15.2</source>
          <target state="translated">0.15.2</target>
        </trans-unit>
        <trans-unit id="1b65193d04ab09f0d7c4786e91f2a90518064b05" translate="yes" xml:space="preserve">
          <source>0.15.3</source>
          <target state="translated">0.15.3</target>
        </trans-unit>
        <trans-unit id="30c8f9cebf7d26a3895a10154a7ca95a03fbf61b" translate="yes" xml:space="preserve">
          <source>0.15.4</source>
          <target state="translated">0.15.4</target>
        </trans-unit>
        <trans-unit id="2840438c0365b0f8645ffa5461ae4ce55e0feed8" translate="yes" xml:space="preserve">
          <source>0.16.0</source>
          <target state="translated">0.16.0</target>
        </trans-unit>
        <trans-unit id="ebaa94239a31f79f456d9bf862a0597b7a8454c1" translate="yes" xml:space="preserve">
          <source>0.16.1</source>
          <target state="translated">0.16.1</target>
        </trans-unit>
        <trans-unit id="cde77da80774dd0073e61566438420d4fc78e540" translate="yes" xml:space="preserve">
          <source>0.16.2</source>
          <target state="translated">0.16.2</target>
        </trans-unit>
        <trans-unit id="0dca0c7b3df3faaa56e9af70a83a7c0836598e80" translate="yes" xml:space="preserve">
          <source>0.16.3</source>
          <target state="translated">0.16.3</target>
        </trans-unit>
        <trans-unit id="359218b22faa6db01c56cda713c946b81a3450f9" translate="yes" xml:space="preserve">
          <source>0.16.4</source>
          <target state="translated">0.16.4</target>
        </trans-unit>
        <trans-unit id="3f7d61d0510dd257b208491d9894417a1007bb74" translate="yes" xml:space="preserve">
          <source>0.16.5</source>
          <target state="translated">0.16.5</target>
        </trans-unit>
        <trans-unit id="2b9c205794a419c426854f4b9d0bbb4f49887a26" translate="yes" xml:space="preserve">
          <source>0.17.0</source>
          <target state="translated">0.17.0</target>
        </trans-unit>
        <trans-unit id="72327881d81b5ffcb6ae69b914452dd1de07eb7f" translate="yes" xml:space="preserve">
          <source>0.17.1</source>
          <target state="translated">0.17.1</target>
        </trans-unit>
        <trans-unit id="1bdd99dc441bdccc34e1f73300c99916d5ca9c31" translate="yes" xml:space="preserve">
          <source>0.17.10</source>
          <target state="translated">0.17.10</target>
        </trans-unit>
        <trans-unit id="e712ee6d5aee3f3763944933bddc3dce0e456192" translate="yes" xml:space="preserve">
          <source>0.17.11</source>
          <target state="translated">0.17.11</target>
        </trans-unit>
        <trans-unit id="3a671e337b45d658138ffebd27c0fb01fc80e6da" translate="yes" xml:space="preserve">
          <source>0.17.12</source>
          <target state="translated">0.17.12</target>
        </trans-unit>
        <trans-unit id="775c9324e3b82acffb9c936768e64a4ae7cfc439" translate="yes" xml:space="preserve">
          <source>0.17.2</source>
          <target state="translated">0.17.2</target>
        </trans-unit>
        <trans-unit id="965cca743e78964d8c139f9b1c028921973fb5fb" translate="yes" xml:space="preserve">
          <source>0.17.3</source>
          <target state="translated">0.17.3</target>
        </trans-unit>
        <trans-unit id="460f5d35d6c6f929364649e1709932608a32eecf" translate="yes" xml:space="preserve">
          <source>0.17.4</source>
          <target state="translated">0.17.4</target>
        </trans-unit>
        <trans-unit id="b264e9e41ba1881eba428e065f29ae53492b0300" translate="yes" xml:space="preserve">
          <source>0.17.5</source>
          <target state="translated">0.17.5</target>
        </trans-unit>
        <trans-unit id="290182ad52a2184c5d90cb117f7a46e43cd61d85" translate="yes" xml:space="preserve">
          <source>0.17.6</source>
          <target state="translated">0.17.6</target>
        </trans-unit>
        <trans-unit id="d6b691ac735f45ff77d03ef82fe2bd98009cb6c6" translate="yes" xml:space="preserve">
          <source>0.17.7</source>
          <target state="translated">0.17.7</target>
        </trans-unit>
        <trans-unit id="7ea5e7276bcf115c391e047a93c9f84d81c4e573" translate="yes" xml:space="preserve">
          <source>0.17.8</source>
          <target state="translated">0.17.8</target>
        </trans-unit>
        <trans-unit id="13248e8cfcc908c25d8e7930d921c516b55658ee" translate="yes" xml:space="preserve">
          <source>0.17.9</source>
          <target state="translated">0.17.9</target>
        </trans-unit>
        <trans-unit id="f7905a2b4c96a6076146b21b49326c277f9d9c5c" translate="yes" xml:space="preserve">
          <source>0.18.0</source>
          <target state="translated">0.18.0</target>
        </trans-unit>
        <trans-unit id="7b1bc562724bb7c9f86008d3e400175e7e04f245" translate="yes" xml:space="preserve">
          <source>0.18.1</source>
          <target state="translated">0.18.1</target>
        </trans-unit>
        <trans-unit id="37a5f0d0d0ca8bbf1fb08f5f760961d11352900e" translate="yes" xml:space="preserve">
          <source>0.18.2</source>
          <target state="translated">0.18.2</target>
        </trans-unit>
        <trans-unit id="98c585d710bab0b14307093c88c67464e1bb06dc" translate="yes" xml:space="preserve">
          <source>0.18.3</source>
          <target state="translated">0.18.3</target>
        </trans-unit>
        <trans-unit id="6e2a2be7c7f49d4db233aed7329fab3ecef77f16" translate="yes" xml:space="preserve">
          <source>0.18.4</source>
          <target state="translated">0.18.4</target>
        </trans-unit>
        <trans-unit id="936b197ec7c5d9f10bad21a20da5bd743ce2bd33" translate="yes" xml:space="preserve">
          <source>0.18.5</source>
          <target state="translated">0.18.5</target>
        </trans-unit>
        <trans-unit id="0b1e7fbd3765d5b0ea657dbbd57c7f78b31c5b08" translate="yes" xml:space="preserve">
          <source>0.18.6</source>
          <target state="translated">0.18.6</target>
        </trans-unit>
        <trans-unit id="7bbd0b3e059e4f532f0f1465bcfcb69c7a11d203" translate="yes" xml:space="preserve">
          <source>0.18.7</source>
          <target state="translated">0.18.7</target>
        </trans-unit>
        <trans-unit id="6eca67a9b2499e9671cb2e01301eacf20caeed67" translate="yes" xml:space="preserve">
          <source>0.18.8</source>
          <target state="translated">0.18.8</target>
        </trans-unit>
        <trans-unit id="044cc4702bc2596cfc375e430c52fefec031a94e" translate="yes" xml:space="preserve">
          <source>0.19.0</source>
          <target state="translated">0.19.0</target>
        </trans-unit>
        <trans-unit id="4d974a710b390d89cbab556f9a13e503c5536e15" translate="yes" xml:space="preserve">
          <source>0.19.1</source>
          <target state="translated">0.19.1</target>
        </trans-unit>
        <trans-unit id="717a2f236f571ae953891f51e4df650cbf576536" translate="yes" xml:space="preserve">
          <source>0.19.2</source>
          <target state="translated">0.19.2</target>
        </trans-unit>
        <trans-unit id="d71730b0deb2f39b495cb0994d7664cb563ec649" translate="yes" xml:space="preserve">
          <source>0.19.3</source>
          <target state="translated">0.19.3</target>
        </trans-unit>
        <trans-unit id="73fbd15744e167ebaa46d128f9f990f20b8c04c9" translate="yes" xml:space="preserve">
          <source>0.19.4</source>
          <target state="translated">0.19.4</target>
        </trans-unit>
        <trans-unit id="86e21c289b91dc4144775014d4161629752b4d1a" translate="yes" xml:space="preserve">
          <source>0.20.0</source>
          <target state="translated">0.20.0</target>
        </trans-unit>
        <trans-unit id="a00b96cf7f7c4085549949441000f6c28db0c4c9" translate="yes" xml:space="preserve">
          <source>0.20.1</source>
          <target state="translated">0.20.1</target>
        </trans-unit>
        <trans-unit id="f74509d744114c3716da0f556e2e5ee762617fe3" translate="yes" xml:space="preserve">
          <source>0.20.2</source>
          <target state="translated">0.20.2</target>
        </trans-unit>
        <trans-unit id="47eea4e3cfe3e446b03546f94bc6c78d6a639fd6" translate="yes" xml:space="preserve">
          <source>0.20.3</source>
          <target state="translated">0.20.3</target>
        </trans-unit>
        <trans-unit id="236b7df55a6fd7db69d63354c8925dc92073a514" translate="yes" xml:space="preserve">
          <source>0.3.10</source>
          <target state="translated">0.3.10</target>
        </trans-unit>
        <trans-unit id="8893e096232754a04ea0a2a4292870b7f509b92d" translate="yes" xml:space="preserve">
          <source>0.3.11</source>
          <target state="translated">0.3.11</target>
        </trans-unit>
        <trans-unit id="9baf02b7bbac1ef0efdea870f230197fa9effc6b" translate="yes" xml:space="preserve">
          <source>0.3.12</source>
          <target state="translated">0.3.12</target>
        </trans-unit>
        <trans-unit id="e0bd600d9df4fd09b1af9d6a034096949471615c" translate="yes" xml:space="preserve">
          <source>0.3.13</source>
          <target state="translated">0.3.13</target>
        </trans-unit>
        <trans-unit id="9da62e25c84c9f14cb01a85484788fc7eb2eba98" translate="yes" xml:space="preserve">
          <source>0.3.14</source>
          <target state="translated">0.3.14</target>
        </trans-unit>
        <trans-unit id="10fe7994e536222340c7b1fecd2f9f3107061333" translate="yes" xml:space="preserve">
          <source>0.3.15</source>
          <target state="translated">0.3.15</target>
        </trans-unit>
        <trans-unit id="aac185741f7435560e21a6cb73c57d7d40a9d199" translate="yes" xml:space="preserve">
          <source>0.3.3</source>
          <target state="translated">0.3.3</target>
        </trans-unit>
        <trans-unit id="ff3c592bc2c933578753b70a8f10139c7481c324" translate="yes" xml:space="preserve">
          <source>0.3.4</source>
          <target state="translated">0.3.4</target>
        </trans-unit>
        <trans-unit id="dc557f0d9525e7dbf05023dbac42b143dcb061f3" translate="yes" xml:space="preserve">
          <source>0.3.5</source>
          <target state="translated">0.3.5</target>
        </trans-unit>
        <trans-unit id="55810ec678679db1917428260a53681388b496a8" translate="yes" xml:space="preserve">
          <source>0.3.6</source>
          <target state="translated">0.3.6</target>
        </trans-unit>
        <trans-unit id="6f3e67fb31968a961a2d270411b745bc1f244303" translate="yes" xml:space="preserve">
          <source>0.3.7</source>
          <target state="translated">0.3.7</target>
        </trans-unit>
        <trans-unit id="af4b246a7a8479a1359e554f14b3acde13371bcd" translate="yes" xml:space="preserve">
          <source>0.3.8</source>
          <target state="translated">0.3.8</target>
        </trans-unit>
        <trans-unit id="a24f95fdef8ae2a03466f42490e3d4aa508c820b" translate="yes" xml:space="preserve">
          <source>0.3.9</source>
          <target state="translated">0.3.9</target>
        </trans-unit>
        <trans-unit id="70dd5065c786e69a182fe18744e5f5b223b17302" translate="yes" xml:space="preserve">
          <source>0.4.0</source>
          <target state="translated">0.4.0</target>
        </trans-unit>
        <trans-unit id="dc8d3041b5bf21d5d2cc91ba4e51e1722001471c" translate="yes" xml:space="preserve">
          <source>0.4.1</source>
          <target state="translated">0.4.1</target>
        </trans-unit>
        <trans-unit id="0b44b3b5a9ff79d7abe5fa55b287f043cb791801" translate="yes" xml:space="preserve">
          <source>0.4.2</source>
          <target state="translated">0.4.2</target>
        </trans-unit>
        <trans-unit id="34bd011bbebff5fb833fca323a37297cb6cd06c9" translate="yes" xml:space="preserve">
          <source>0.4.3</source>
          <target state="translated">0.4.3</target>
        </trans-unit>
        <trans-unit id="79394d35226423e6556d0c67c5352c3aeeb781fb" translate="yes" xml:space="preserve">
          <source>0.4.4</source>
          <target state="translated">0.4.4</target>
        </trans-unit>
        <trans-unit id="8c1ebe4acc699a40ff578c55614ba208381329ce" translate="yes" xml:space="preserve">
          <source>0.4.5</source>
          <target state="translated">0.4.5</target>
        </trans-unit>
        <trans-unit id="79ca45f8339c1ddaa81585a9264bc2bdeaed6882" translate="yes" xml:space="preserve">
          <source>0.4.6</source>
          <target state="translated">0.4.6</target>
        </trans-unit>
        <trans-unit id="bf47572ab4a204f4ade8adea8bfd1fc9e4696494" translate="yes" xml:space="preserve">
          <source>0.4.7</source>
          <target state="translated">0.4.7</target>
        </trans-unit>
        <trans-unit id="9be2afa3ca10f3f69adc5aefe934532749362fa5" translate="yes" xml:space="preserve">
          <source>0.5.0</source>
          <target state="translated">0.5.0</target>
        </trans-unit>
        <trans-unit id="1361792d0236721ca6d5bdad1d7fc23db2f09ffe" translate="yes" xml:space="preserve">
          <source>0.5.1</source>
          <target state="translated">0.5.1</target>
        </trans-unit>
        <trans-unit id="0dbe77ba1681d7890d689d56c486eb63fefc2955" translate="yes" xml:space="preserve">
          <source>0.5.10</source>
          <target state="translated">0.5.10</target>
        </trans-unit>
        <trans-unit id="0a3a0f36acfd7926ea1c80d4096ace5cdb2c54cf" translate="yes" xml:space="preserve">
          <source>0.5.11</source>
          <target state="translated">0.5.11</target>
        </trans-unit>
        <trans-unit id="600284255156d91f84212d34149497e77062026b" translate="yes" xml:space="preserve">
          <source>0.5.12</source>
          <target state="translated">0.5.12</target>
        </trans-unit>
        <trans-unit id="bd546889ec28e25805a2b5e5d480dfa5beea7223" translate="yes" xml:space="preserve">
          <source>0.5.13</source>
          <target state="translated">0.5.13</target>
        </trans-unit>
        <trans-unit id="19d0633cca613513a654efa861b3028b5108e8c4" translate="yes" xml:space="preserve">
          <source>0.5.14</source>
          <target state="translated">0.5.14</target>
        </trans-unit>
        <trans-unit id="a3aebdc3cb021a4842e9f788842a72f3f5fc54f6" translate="yes" xml:space="preserve">
          <source>0.5.15</source>
          <target state="translated">0.5.15</target>
        </trans-unit>
        <trans-unit id="ee15d1501535719a4016f4495ce8a6cc65bcbacc" translate="yes" xml:space="preserve">
          <source>0.5.2</source>
          <target state="translated">0.5.2</target>
        </trans-unit>
        <trans-unit id="bdf63b361197657e8f457f99017154f69ca63e61" translate="yes" xml:space="preserve">
          <source>0.5.3</source>
          <target state="translated">0.5.3</target>
        </trans-unit>
        <trans-unit id="2782e77bb2044939e38641c9d8e1e9d5e5ea3ec6" translate="yes" xml:space="preserve">
          <source>0.5.4</source>
          <target state="translated">0.5.4</target>
        </trans-unit>
        <trans-unit id="2e0fbc67952c1ee60b5b3b8605880e212f40d9e8" translate="yes" xml:space="preserve">
          <source>0.5.5</source>
          <target state="translated">0.5.5</target>
        </trans-unit>
        <trans-unit id="32eab11cf2685a8fc4e11706e3b5d6a80e9db422" translate="yes" xml:space="preserve">
          <source>0.5.6</source>
          <target state="translated">0.5.6</target>
        </trans-unit>
        <trans-unit id="4347654b6ee7f45faec00d96d5f86fc50492c5cd" translate="yes" xml:space="preserve">
          <source>0.5.7</source>
          <target state="translated">0.5.7</target>
        </trans-unit>
        <trans-unit id="8e44abcbb9043396b1212828e83dedee9ca507bd" translate="yes" xml:space="preserve">
          <source>0.5.8</source>
          <target state="translated">0.5.8</target>
        </trans-unit>
        <trans-unit id="c4373e4de0a67d4130bfd4b63bb1138f9705917d" translate="yes" xml:space="preserve">
          <source>0.5.9</source>
          <target state="translated">0.5.9</target>
        </trans-unit>
        <trans-unit id="1935752234088401da4832311af118955a1ccd85" translate="yes" xml:space="preserve">
          <source>0.6.0</source>
          <target state="translated">0.6.0</target>
        </trans-unit>
        <trans-unit id="65155e82afbde49b936af2dde0d9b893f5b79a8c" translate="yes" xml:space="preserve">
          <source>0.6.1</source>
          <target state="translated">0.6.1</target>
        </trans-unit>
        <trans-unit id="d55f6a7a3602cce1fb532a9b0d7c2a1c52bb2537" translate="yes" xml:space="preserve">
          <source>0.6.10</source>
          <target state="translated">0.6.10</target>
        </trans-unit>
        <trans-unit id="b038b34433a72f3dd4ff39a1fa31b77c909b9c50" translate="yes" xml:space="preserve">
          <source>0.6.11</source>
          <target state="translated">0.6.11</target>
        </trans-unit>
        <trans-unit id="004d322a67fc8f3e27d570cd113ec307b86d62e7" translate="yes" xml:space="preserve">
          <source>0.6.12</source>
          <target state="translated">0.6.12</target>
        </trans-unit>
        <trans-unit id="501e611aaaea7ae23e87c4c313a45572facba42a" translate="yes" xml:space="preserve">
          <source>0.6.13</source>
          <target state="translated">0.6.13</target>
        </trans-unit>
        <trans-unit id="b91a182cd827cabe02da9e250c22775d8de9a5bc" translate="yes" xml:space="preserve">
          <source>0.6.14</source>
          <target state="translated">0.6.14</target>
        </trans-unit>
        <trans-unit id="30b6e460acbc4fa902ccb8d5ceb03a22e5fdb034" translate="yes" xml:space="preserve">
          <source>0.6.2</source>
          <target state="translated">0.6.2</target>
        </trans-unit>
        <trans-unit id="f6efffb891d223f2eddb29b3b149f4a2f0c3f6a3" translate="yes" xml:space="preserve">
          <source>0.6.3</source>
          <target state="translated">0.6.3</target>
        </trans-unit>
        <trans-unit id="b08cf29608e292db35e5073335ff092a9b26aad1" translate="yes" xml:space="preserve">
          <source>0.6.4</source>
          <target state="translated">0.6.4</target>
        </trans-unit>
        <trans-unit id="6f885fb2d16ab1ca565573b3e22e5da54cf50987" translate="yes" xml:space="preserve">
          <source>0.6.5</source>
          <target state="translated">0.6.5</target>
        </trans-unit>
        <trans-unit id="f8e783785031fcd0936f17992385627c5d147d2d" translate="yes" xml:space="preserve">
          <source>0.6.6</source>
          <target state="translated">0.6.6</target>
        </trans-unit>
        <trans-unit id="5188200f239b7470c145c3a8af11f31ac796489c" translate="yes" xml:space="preserve">
          <source>0.6.7</source>
          <target state="translated">0.6.7</target>
        </trans-unit>
        <trans-unit id="5402899b401c44f849fb255917d8072a816c589a" translate="yes" xml:space="preserve">
          <source>0.6.8</source>
          <target state="translated">0.6.8</target>
        </trans-unit>
        <trans-unit id="390816da980c92d2d90216ca80ec2f6cafe5128a" translate="yes" xml:space="preserve">
          <source>0.6.9</source>
          <target state="translated">0.6.9</target>
        </trans-unit>
        <trans-unit id="991993469cf0c38e1edcd59d3e4306bee2f382b3" translate="yes" xml:space="preserve">
          <source>0.7.0</source>
          <target state="translated">0.7.0</target>
        </trans-unit>
        <trans-unit id="7fc24409b1339e6e2bc5f5aa96a9cce44e15d38e" translate="yes" xml:space="preserve">
          <source>0.7.1</source>
          <target state="translated">0.7.1</target>
        </trans-unit>
        <trans-unit id="a344db33343ca54248fe10ba692be106afc3fe48" translate="yes" xml:space="preserve">
          <source>0.7.2</source>
          <target state="translated">0.7.2</target>
        </trans-unit>
        <trans-unit id="fd40af6ee67766ed1911fa9c1ce3481e03c3291a" translate="yes" xml:space="preserve">
          <source>0.7.3</source>
          <target state="translated">0.7.3</target>
        </trans-unit>
        <trans-unit id="7771293654e4d4ab07ee544931e8d5ccb7ed9a75" translate="yes" xml:space="preserve">
          <source>0.7.4</source>
          <target state="translated">0.7.4</target>
        </trans-unit>
        <trans-unit id="24c4afc19ef5c4ff13c4a6c4ab6ebd0402f5e40d" translate="yes" xml:space="preserve">
          <source>0.7.5</source>
          <target state="translated">0.7.5</target>
        </trans-unit>
        <trans-unit id="62a409c97d140dcaa1e25b456dd92701b0c28151" translate="yes" xml:space="preserve">
          <source>0.7.6</source>
          <target state="translated">0.7.6</target>
        </trans-unit>
        <trans-unit id="51107ddecc7bfbd8a25f3dab635256931c712ff4" translate="yes" xml:space="preserve">
          <source>0.8.0</source>
          <target state="translated">0.8.0</target>
        </trans-unit>
        <trans-unit id="08208ac734b4811a00c6728e5ae1c066d2e06cc8" translate="yes" xml:space="preserve">
          <source>0.8.1</source>
          <target state="translated">0.8.1</target>
        </trans-unit>
        <trans-unit id="314969396f3558b3371be0891cb87ca709b0394c" translate="yes" xml:space="preserve">
          <source>0.9.0</source>
          <target state="translated">0.9.0</target>
        </trans-unit>
        <trans-unit id="c406f19f0eb098d033695c8db82e49d7cee023df" translate="yes" xml:space="preserve">
          <source>0.9.1</source>
          <target state="translated">0.9.1</target>
        </trans-unit>
        <trans-unit id="b0e537aba9da1bffa7c7a424318f9f455a15d1cf" translate="yes" xml:space="preserve">
          <source>0.9.2</source>
          <target state="translated">0.9.2</target>
        </trans-unit>
        <trans-unit id="0c4dfa57395d94003bdd764e48730b9d65d9a964" translate="yes" xml:space="preserve">
          <source>0.9.3</source>
          <target state="translated">0.9.3</target>
        </trans-unit>
        <trans-unit id="057e21819bc15bd02dbaca53bbb653a58138631d" translate="yes" xml:space="preserve">
          <source>0.9.4</source>
          <target state="translated">0.9.4</target>
        </trans-unit>
        <trans-unit id="4ff04489b37fcc13a6d48729ccd049da85a5d44a" translate="yes" xml:space="preserve">
          <source>0.9.5</source>
          <target state="translated">0.9.5</target>
        </trans-unit>
        <trans-unit id="4b434dd8a527a4f07dadcd2a33b6c12a20e48408" translate="yes" xml:space="preserve">
          <source>0.9.6</source>
          <target state="translated">0.9.6</target>
        </trans-unit>
        <trans-unit id="7af35687092dbcb426f767ac88d2e8c011182632" translate="yes" xml:space="preserve">
          <source>1. Combine into one test</source>
          <target state="translated">1. 하나의 테스트로 결합</target>
        </trans-unit>
        <trans-unit id="8c2aeecbb16e50a2c886a0cd23c45c83ff1b44cf" translate="yes" xml:space="preserve">
          <source>1. Don&amp;rsquo;t make everything a custom command</source>
          <target state="translated">1. 모든 것을 사용자 정의 명령으로 만들지 마십시오</target>
        </trans-unit>
        <trans-unit id="c423786c3a355bb0bba8c13585227393c5f86758" translate="yes" xml:space="preserve">
          <source>1. Pinned snapshots</source>
          <target state="translated">1. 고정 된 스냅 샷</target>
        </trans-unit>
        <trans-unit id="10c77f2f9d5e4c9f695d14c974d8c1249227b03b" translate="yes" xml:space="preserve">
          <source>1. The element is found</source>
          <target state="translated">1. 요소가 발견되었습니다</target>
        </trans-unit>
        <trans-unit id="6432bf40b704d389b94d6f71b1ce7056211fc3eb" translate="yes" xml:space="preserve">
          <source>1. Use only the browser:</source>
          <target state="translated">1. 브라우저 만 사용하십시오 :</target>
        </trans-unit>
        <trans-unit id="91e95be6b6634e3c21072dfcd661146728694326" translate="yes" xml:space="preserve">
          <source>1.0.0</source>
          <target state="translated">1.0.0</target>
        </trans-unit>
        <trans-unit id="d1b76f3800b4ffa88b1062b60da950bacf4f54b0" translate="yes" xml:space="preserve">
          <source>1.0.1</source>
          <target state="translated">1.0.1</target>
        </trans-unit>
        <trans-unit id="687727ca1c53eb49315429745a677f5c47fb77d2" translate="yes" xml:space="preserve">
          <source>1.0.2</source>
          <target state="translated">1.0.2</target>
        </trans-unit>
        <trans-unit id="e5906c31c05c50ae1bcfde5f3a47eee483bc23c9" translate="yes" xml:space="preserve">
          <source>1.0.3</source>
          <target state="translated">1.0.3</target>
        </trans-unit>
        <trans-unit id="528cf42af97409ff91db4e7793a81bc5f447d215" translate="yes" xml:space="preserve">
          <source>1.1.0</source>
          <target state="translated">1.1.0</target>
        </trans-unit>
        <trans-unit id="bd952513ae9dce3e914b4918eae08e1eddd37faa" translate="yes" xml:space="preserve">
          <source>1.1.1</source>
          <target state="translated">1.1.1</target>
        </trans-unit>
        <trans-unit id="e3429934f4f3ac1c68dc8b2eef6c7df0aa7a7f9c" translate="yes" xml:space="preserve">
          <source>1.1.2</source>
          <target state="translated">1.1.2</target>
        </trans-unit>
        <trans-unit id="270ab9fbc267c8db129c34d079aeb2a92f7b9f42" translate="yes" xml:space="preserve">
          <source>1.1.3</source>
          <target state="translated">1.1.3</target>
        </trans-unit>
        <trans-unit id="1d081306e5641dc8f7dae6c01bd4b9c0b99a8996" translate="yes" xml:space="preserve">
          <source>1.1.4</source>
          <target state="translated">1.1.4</target>
        </trans-unit>
        <trans-unit id="4acc7d8ff2a07c5724b61e524ae1a2782dc80e96" translate="yes" xml:space="preserve">
          <source>1.2.0</source>
          <target state="translated">1.2.0</target>
        </trans-unit>
        <trans-unit id="5e0ad8390d778d86a4a369e5ad6950036a8ebb86" translate="yes" xml:space="preserve">
          <source>1.3.0</source>
          <target state="translated">1.3.0</target>
        </trans-unit>
        <trans-unit id="e2060004dffbdc6873d309c73a458221a047212b" translate="yes" xml:space="preserve">
          <source>1.4.0</source>
          <target state="translated">1.4.0</target>
        </trans-unit>
        <trans-unit id="a9ec402f06cdb367cb4ecd9d221265dbc42431cf" translate="yes" xml:space="preserve">
          <source>1.4.1</source>
          <target state="translated">1.4.1</target>
        </trans-unit>
        <trans-unit id="da5050803b5fbae2a5b953f06c1944b75a63c2a2" translate="yes" xml:space="preserve">
          <source>1.4.2</source>
          <target state="translated">1.4.2</target>
        </trans-unit>
        <trans-unit id="39745e32788a48a36572356cd5620703ea9df5ce" translate="yes" xml:space="preserve">
          <source>2. A set timeout is reached</source>
          <target state="translated">2. 설정 시간이 초과되었습니다</target>
        </trans-unit>
        <trans-unit id="8e4bf750b1cf8c157f6451632e6c79f799805b06" translate="yes" xml:space="preserve">
          <source>2. Don&amp;rsquo;t overcomplicate things</source>
          <target state="translated">2. 지나치게 복잡하게하지 마십시오</target>
        </trans-unit>
        <trans-unit id="8495914352ea7999fc260ff1c1d9d8a08ed3afbb" translate="yes" xml:space="preserve">
          <source>2. Event hitbox</source>
          <target state="translated">2. 이벤트 히트 박스</target>
        </trans-unit>
        <trans-unit id="e3600c6f6c21536e0a0e227cabe853151e5fcea6" translate="yes" xml:space="preserve">
          <source>2. Run shared code before each test</source>
          <target state="translated">2. 각 테스트 전에 공유 코드를 실행</target>
        </trans-unit>
        <trans-unit id="e2311aeffaf932d8bf2c766da2963d11275bf024" translate="yes" xml:space="preserve">
          <source>2. Stub the other connection:</source>
          <target state="translated">2. 다른 연결부 스텁 :</target>
        </trans-unit>
        <trans-unit id="f7ca6a21d278eb5ce64611aadbdb77ef1511d3dd" translate="yes" xml:space="preserve">
          <source>2.0.0</source>
          <target state="translated">2.0.0</target>
        </trans-unit>
        <trans-unit id="9ff4120c2315a5db674958e00529bc95c08b0e76" translate="yes" xml:space="preserve">
          <source>2.0.1</source>
          <target state="translated">2.0.1</target>
        </trans-unit>
        <trans-unit id="d03f659256ae48f1c9a26c5aaec38d4360485288" translate="yes" xml:space="preserve">
          <source>2.0.2</source>
          <target state="translated">2.0.2</target>
        </trans-unit>
        <trans-unit id="d20e6b799a7bc47bbdd80029ea94c45fd2d40b68" translate="yes" xml:space="preserve">
          <source>2.0.3</source>
          <target state="translated">2.0.3</target>
        </trans-unit>
        <trans-unit id="775bbc46d0bc85e121db86ae12b2993ffedbb0ae" translate="yes" xml:space="preserve">
          <source>2.0.4</source>
          <target state="translated">2.0.4</target>
        </trans-unit>
        <trans-unit id="d1325bb186bd83303245e504f7c6eceae7f19e44" translate="yes" xml:space="preserve">
          <source>2.1.0</source>
          <target state="translated">2.1.0</target>
        </trans-unit>
        <trans-unit id="5ee3f7ccd07297cbc27ba48b1da5f5ad208149d2" translate="yes" xml:space="preserve">
          <source>20 years into the future</source>
          <target state="translated">미래로 20 년</target>
        </trans-unit>
        <trans-unit id="e80ed4f74c3d1fc3df087dc56d2580686fad1d64" translate="yes" xml:space="preserve">
          <source>3. Don&amp;rsquo;t do too much in a single command</source>
          <target state="translated">3. 하나의 명령으로 너무 많이하지 마십시오</target>
        </trans-unit>
        <trans-unit id="355b9487b2118c8ffba2d05c359fbb08dfe7392e" translate="yes" xml:space="preserve">
          <source>3. Snapshot menu panel</source>
          <target state="translated">3. 스냅 샷 메뉴 패널</target>
        </trans-unit>
        <trans-unit id="5515ad546a48c1ee47dda370ad728977e1e31518" translate="yes" xml:space="preserve">
          <source>3.0.0</source>
          <target state="translated">3.0.0</target>
        </trans-unit>
        <trans-unit id="6dd1f25f2a4f5c9c73793bed06929318969169c0" translate="yes" xml:space="preserve">
          <source>3.0.1</source>
          <target state="translated">3.0.1</target>
        </trans-unit>
        <trans-unit id="2eb538e42b910c397ab801353b059c51f265f092" translate="yes" xml:space="preserve">
          <source>3.0.2</source>
          <target state="translated">3.0.2</target>
        </trans-unit>
        <trans-unit id="02aeb4dd00e9c0bb1104a19a9856dc679709da62" translate="yes" xml:space="preserve">
          <source>3.0.3</source>
          <target state="translated">3.0.3</target>
        </trans-unit>
        <trans-unit id="c6212c846c6e95fc013ab95065fc2982e4f963ce" translate="yes" xml:space="preserve">
          <source>3.1.0</source>
          <target state="translated">3.1.0</target>
        </trans-unit>
        <trans-unit id="8b06ddb10d32fd00c6f396f4696592af976b2118" translate="yes" xml:space="preserve">
          <source>3.1.1</source>
          <target state="translated">3.1.1</target>
        </trans-unit>
        <trans-unit id="7c49f6117c3f09ee90548ad70960b7a9b716deb8" translate="yes" xml:space="preserve">
          <source>3.1.2</source>
          <target state="translated">3.1.2</target>
        </trans-unit>
        <trans-unit id="049a35ad82b9c914dc50f602563d1e37e06ef9a6" translate="yes" xml:space="preserve">
          <source>3.1.3</source>
          <target state="translated">3.1.3</target>
        </trans-unit>
        <trans-unit id="67de27fd6cf8d4bc1ad0b22499ec7f87a1acf6c4" translate="yes" xml:space="preserve">
          <source>3.1.4</source>
          <target state="translated">3.1.4</target>
        </trans-unit>
        <trans-unit id="d1fd48333115227b181b4b132e5511e91d95bea5" translate="yes" xml:space="preserve">
          <source>3.1.5</source>
          <target state="translated">3.1.5</target>
        </trans-unit>
        <trans-unit id="b981b5efd3a591e7a7cda1a4740574ce3b34b19a" translate="yes" xml:space="preserve">
          <source>3.2.0</source>
          <target state="translated">3.2.0</target>
        </trans-unit>
        <trans-unit id="3a8e01bbd716628be7b89f1ec085442592846654" translate="yes" xml:space="preserve">
          <source>3.3.0</source>
          <target state="translated">3.3.0</target>
        </trans-unit>
        <trans-unit id="054dae9d64c38d76a066c981fbdab975b1abbf53" translate="yes" xml:space="preserve">
          <source>3.3.1</source>
          <target state="translated">3.3.1</target>
        </trans-unit>
        <trans-unit id="f85383fcd7c211714084d7fca897998d7d759c5d" translate="yes" xml:space="preserve">
          <source>3.3.2</source>
          <target state="translated">3.3.2</target>
        </trans-unit>
        <trans-unit id="1ee09476b338ca8261ad83be6aefa18693436588" translate="yes" xml:space="preserve">
          <source>3.4.0</source>
          <target state="translated">3.4.0</target>
        </trans-unit>
        <trans-unit id="42aae5955584904bc2d13eabc3cf07107b276398" translate="yes" xml:space="preserve">
          <source>3.4.1</source>
          <target state="translated">3.4.1</target>
        </trans-unit>
        <trans-unit id="5ce43ebcede475f3d2004932a8d72ef899712e3b" translate="yes" xml:space="preserve">
          <source>3: Introduce another connection:</source>
          <target state="translated">3 : 다른 연결을 소개하십시오.</target>
        </trans-unit>
        <trans-unit id="8b4b77b088be9d40771f9d3bb64ed966ec6a476c" translate="yes" xml:space="preserve">
          <source>3rd Party cookies are now additionally cleared. All cookies are now accessible to the client in preparation for &lt;a href=&quot;../../api/commands/clearcookies&quot;&gt;&lt;code&gt;cy.clearCookies()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">타사 쿠키가 추가로 지워집니다. &lt;a href=&quot;../../api/commands/clearcookies&quot;&gt; &lt;code&gt;cy.clearCookies()&lt;/code&gt; &lt;/a&gt; 를 준비하면서 클라이언트가 모든 쿠키에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3787799846f0171ec1f6fa46bd42e9d47260c163" translate="yes" xml:space="preserve">
          <source>3rd party &lt;code&gt;headers&lt;/code&gt; are now properly proxied onto all responses.</source>
          <target state="translated">타사 &lt;code&gt;headers&lt;/code&gt; 가 이제 모든 응답에 올바르게 프록시됩니다.</target>
        </trans-unit>
        <trans-unit id="12c4c524bb0d97b1e1964abb293fd38aaae0b121" translate="yes" xml:space="preserve">
          <source>3rd party servers:</source>
          <target state="translated">타사 서버 :</target>
        </trans-unit>
        <trans-unit id="bc5249abb5729d574936571fb9934477b45d37fb" translate="yes" xml:space="preserve">
          <source>4. Skip your UI as much as possible</source>
          <target state="translated">4. UI를 최대한 많이 건너 뛰십시오</target>
        </trans-unit>
        <trans-unit id="52c38fd4738862127925178b8b84de4e7b36994d" translate="yes" xml:space="preserve">
          <source>5. Write TypeScript definitions</source>
          <target state="translated">5. TypeScript 정의 작성</target>
        </trans-unit>
        <trans-unit id="a38de8fee93c441da499e9fe704092fd395764c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/as&quot;&gt;&lt;code&gt;.as()&lt;/code&gt;&lt;/a&gt; automatically assigns this alias to &lt;code&gt;runnable.ctx&lt;/code&gt; which makes it available synchronously.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/as&quot;&gt; &lt;code&gt;.as()&lt;/code&gt; &lt;/a&gt; 이 별명을 &lt;code&gt;runnable.ctx&lt;/code&gt; 에 자동으로 지정하여동 기적으로 사용 가능하게합니다.</target>
        </trans-unit>
        <trans-unit id="d214ab170acb3ad06e71e0b32a9553105ab8e753" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/as&quot;&gt;&lt;code&gt;.as()&lt;/code&gt;&lt;/a&gt; blacklists several reserved words and will throw if you attempt to alias as one of them.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/as&quot;&gt; &lt;code&gt;.as()&lt;/code&gt; &lt;/a&gt; 여러 개의 예약어를 블랙리스트에 추가하고 그 중 하나로 별칭을 지정하려고하면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c078b84ef860e9d4714e0b2940c81e49e614a8db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/as&quot;&gt;&lt;code&gt;.as()&lt;/code&gt;&lt;/a&gt; can now alias primitives and objects other than routes or DOM.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/as&quot;&gt; &lt;code&gt;.as()&lt;/code&gt; &lt;/a&gt; 는 이제 라우트 또는 DOM 이외의 기본 요소 및 오브젝트의 별명을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e3978c7eaed30ece5e19824d7dff6ca28d4fba3b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/as&quot;&gt;&lt;code&gt;.as()&lt;/code&gt;&lt;/a&gt; now throws on empty strings or non string arguments.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/as&quot;&gt; &lt;code&gt;.as()&lt;/code&gt; &lt;/a&gt; 이제 빈 문자열이나 문자열이 아닌 인수를 던집니다.</target>
        </trans-unit>
        <trans-unit id="1b85acc33c08a8b7789b4ae6fd5b72abfb5cd810" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/blur&quot;&gt;&lt;code&gt;.blur()&lt;/code&gt;&lt;/a&gt; - Make a focused DOM element blur.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/blur&quot;&gt; &lt;code&gt;.blur()&lt;/code&gt; &lt;/a&gt; -집중된 DOM 요소를 흐리게 만듭니다.</target>
        </trans-unit>
        <trans-unit id="0f29749755906b40528e0087009e3142abe3ba7f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/blur&quot;&gt;&lt;code&gt;.blur()&lt;/code&gt;&lt;/a&gt; now accepts &lt;code&gt;{force: true}&lt;/code&gt; which removes error checking such as validating the element is urrently in focus.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/blur&quot;&gt; &lt;code&gt;.blur()&lt;/code&gt; &lt;/a&gt; 이제 &lt;code&gt;{force: true}&lt;/code&gt; 를수락하여 요소의 유효성을 확인하는 등의 오류 검사를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="a99321c4f0927120238d19bdfd228a4bb2293650" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/check&quot;&gt;&lt;code&gt;.check()&lt;/code&gt;&lt;/a&gt; - Check checkbox(es) or radio(s).</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/check&quot;&gt; &lt;code&gt;.check()&lt;/code&gt; &lt;/a&gt; -확인란 또는 라디오를 확인합니다.</target>
        </trans-unit>
        <trans-unit id="6e555e6c4a47f2456ae4fb7c86d013fe639cd10e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/check&quot;&gt;&lt;code&gt;.check()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/uncheck&quot;&gt;&lt;code&gt;.uncheck()&lt;/code&gt;&lt;/a&gt; commands will now correctly &amp;ldquo;end&amp;rdquo; even if they were &lt;code&gt;noop&lt;/code&gt; due to the element already being in a checked or unchecked state.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/check&quot;&gt; &lt;code&gt;.check()&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;../../api/commands/uncheck&quot;&gt; &lt;code&gt;.uncheck()&lt;/code&gt; &lt;/a&gt; 명령은요소가 이미 검사 또는 검사되지 않은 상태이기 때문에 &lt;code&gt;noop&lt;/code&gt; 인 경우에도 올바르게&amp;ldquo;종료&amp;rdquo;됩니다.</target>
        </trans-unit>
        <trans-unit id="b75aead4cbf2138c4105d0b5721eeb2b649cd50a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/check&quot;&gt;&lt;code&gt;.check()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/uncheck&quot;&gt;&lt;code&gt;.uncheck()&lt;/code&gt;&lt;/a&gt; now correctly filter down the subject when a value is passed as an option. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/94&quot;&gt;#94&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/check&quot;&gt; &lt;code&gt;.check()&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;../../api/commands/uncheck&quot;&gt; &lt;code&gt;.uncheck()&lt;/code&gt; &lt;/a&gt; 이제 값이 옵션으로 전달 될 때 제목을 올바르게 필터링합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/94&quot;&gt;# 94&lt;/a&gt; 수정.</target>
        </trans-unit>
        <trans-unit id="39b8bceba1882f1d6b384cee0dad68fb49fe8dcf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/check&quot;&gt;&lt;code&gt;.check()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/uncheck&quot;&gt;&lt;code&gt;.uncheck()&lt;/code&gt;&lt;/a&gt; will no longer output additional error&amp;rsquo;d commands when their associated &lt;code&gt;click&lt;/code&gt; fails.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/check&quot;&gt; &lt;code&gt;.check()&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;../../api/commands/uncheck&quot;&gt; &lt;code&gt;.uncheck()&lt;/code&gt; &lt;/a&gt; 는 연관된 &lt;code&gt;click&lt;/code&gt; 이 실패할 때 더 이상오류가발생한 추가 명령을 출력하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f545afae5a9b5e66af84d251f83d384d23358a66" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/clear&quot;&gt;&lt;code&gt;.clear()&lt;/code&gt;&lt;/a&gt; - Clear the value of an input or textarea.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/clear&quot;&gt; &lt;code&gt;.clear()&lt;/code&gt; &lt;/a&gt; -입력 또는 텍스트 영역의 값을 지 웁니다 .</target>
        </trans-unit>
        <trans-unit id="76560670307b33c5e207a40389670ab81f38e3c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/clear&quot;&gt;&lt;code&gt;.clear()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; no longer output additional error&amp;rsquo;d commands hen their associated &lt;code&gt;click&lt;/code&gt; fails.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/clear&quot;&gt; &lt;code&gt;.clear()&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 은 관련 &lt;code&gt;click&lt;/code&gt; 이 실패할 때 더 이상오류가발생한 추가 명령을 출력하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b06f4a240ef744a030623e21cda945388f9dc690" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/clear&quot;&gt;&lt;code&gt;.clear()&lt;/code&gt;&lt;/a&gt; now logs a command.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/clear&quot;&gt; &lt;code&gt;.clear()&lt;/code&gt; &lt;/a&gt; 이제 명령을 기록합니다.</target>
        </trans-unit>
        <trans-unit id="2d7f57519c404c8832c425fc8f13a47a7cd7703d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/clear&quot;&gt;&lt;code&gt;.clear()&lt;/code&gt;&lt;/a&gt; now returns a promise.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/clear&quot;&gt; &lt;code&gt;.clear()&lt;/code&gt; &lt;/a&gt; 이제 약속을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="da554c9324fbda45d805a1fad1d47fec67cc9bc5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/clearcookie&quot;&gt;&lt;code&gt;cy.clearCookie()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/clearcookies&quot;&gt;&lt;code&gt;cy.clearCookies()&lt;/code&gt;&lt;/a&gt; have been added as new commands.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/clearcookie&quot;&gt; &lt;code&gt;cy.clearCookie()&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;../../api/commands/clearcookies&quot;&gt; &lt;code&gt;cy.clearCookies()&lt;/code&gt; &lt;/a&gt; 가 새로운 명령으로 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="98ab5852ec98e20cde0d5b8e451abdde1da4a296" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/clearcookies&quot;&gt;&lt;code&gt;cy.clearCookies()&lt;/code&gt;&lt;/a&gt; clears all of the browser cookies.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/clearcookies&quot;&gt; &lt;code&gt;cy.clearCookies()&lt;/code&gt; &lt;/a&gt; 모든 브라우저 쿠키를 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="990f0c3e003924df5686a512241db4d49b930929" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt; accepts &lt;code&gt;{force: true}&lt;/code&gt; which will force it to issue the click event and bypass checking to ensure element is physically clickable.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt; 은 &lt;code&gt;{force: true}&lt;/code&gt; 를허용하므로 요소가 실제로 클릭 가능한지 확인하기 위해 클릭 이벤트를 발행하고 검사를 무시합니다.</target>
        </trans-unit>
        <trans-unit id="6c543fccfd7b4631b11206edcbfe27e09ce8c3fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt; an &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; with an &lt;code&gt;href&lt;/code&gt; to a different superdomain.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; 와 &lt;code&gt;href&lt;/code&gt; 다른 수퍼 도메인이다.</target>
        </trans-unit>
        <trans-unit id="249bf57fe345f97484b2f429a2653eaa4f74a9eb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt; causes your application to react to click events.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt; 은 응용 프로그램이 클릭 이벤트에 반응하게합니다.</target>
        </trans-unit>
        <trans-unit id="11aee30509da220746e0b651dfc16634696b88b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt; expects the element to eventually be in an &lt;em&gt;actionable&lt;/em&gt; state.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt; 은 요소가 결국&lt;em&gt; 실행 가능한&lt;/em&gt; 상태가될 것으로 예상합니다.</target>
        </trans-unit>
        <trans-unit id="113c1bcb8beb03612f7e8f86c4b32ea4f47d1f79" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt; has been upgraded to be more intelligent about firing &lt;code&gt;focus&lt;/code&gt; events, and now takes into account the previously focused element.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt; 은 &lt;code&gt;focus&lt;/code&gt; 이벤트 발생에 대해보다 지능적으로 업그레이드되었으며이제 이전에 초점을 맞춘 요소를 고려합니다.</target>
        </trans-unit>
        <trans-unit id="83f7cd6e0477266d82ca3d6d6dd0c521769f7ada" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt; now accepts an optional &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; coordinate argument, which is relative to the top left corner of the element. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/50&quot;&gt;#50&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt; 이제 선택적 &lt;code&gt;x&lt;/code&gt; 및 &lt;code&gt;y&lt;/code&gt; 좌표 인수를허용합니다.이인수는 요소의 왼쪽 상단을 기준으로합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/50&quot;&gt;# 50&lt;/a&gt; 수정.</target>
        </trans-unit>
        <trans-unit id="e2a56616f709dca9e057fd6066e3c9ed9475f95c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt; now accepts an optional: &lt;code&gt;position&lt;/code&gt; argument (&lt;code&gt;center&lt;/code&gt;, &lt;code&gt;topLeft&lt;/code&gt;, &lt;code&gt;topRight&lt;/code&gt;, &lt;code&gt;bottomLeft&lt;/code&gt;, &lt;code&gt;bottomRight&lt;/code&gt;). Center is still the default.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt; 이제 선택적 옵션 인 &lt;code&gt;position&lt;/code&gt; 인수 ( &lt;code&gt;center&lt;/code&gt; , &lt;code&gt;topLeft&lt;/code&gt; , &lt;code&gt;topRight&lt;/code&gt; , &lt;code&gt;bottomLeft&lt;/code&gt; , &lt;code&gt;bottomRight&lt;/code&gt; )를 허용합니다. 가운데는 여전히 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="d8255330049716ef8bdd58f19a1ced1116b1c272" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt; now takes into account being covered by a fixed positioned element and will increase the window&amp;rsquo;s scroll offset to account for this. There are still more improvements to be made before this is bulletproof though.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt; 이제 고정 된 위치 지정된 요소에 의해 포함되는 것을 고려하고이를 위해 창 스크롤 오프셋을 증가시킵니다. 그러나 이것이 방탄되기 전에 더 많은 개선 사항이 있습니다.</target>
        </trans-unit>
        <trans-unit id="d0aef3bdcd51d599b2d65406d85fd2499e4509b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt; will now properly click within an element&amp;rsquo;s bounding box when a &lt;code&gt;position&lt;/code&gt; option is passed and the calculated coordinates are a fraction. This previously forced the click to happen outside of the element. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/99&quot;&gt;#99&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt; &lt;code&gt;position&lt;/code&gt; 옵션이 전달되고 계산 된 좌표가 분수 인경우 .click () 은 요소의 경계 상자 내에서 올바르게 클릭됩니다. 이전에는 요소 외부에서 클릭이 발생했습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/99&quot;&gt;# 99&lt;/a&gt; 수정.</target>
        </trans-unit>
        <trans-unit id="4f03c3a22b74f348468648454d65cc2d738cccc0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt; will now throw if you are attempting to click more than 1 element. Pass &lt;code&gt;{multiple: true}&lt;/code&gt; to enable this behavior again. Each element will be clicked serially and inserted into the Command Log.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt;둘 이상의 요소를 클릭하려고하면 .click () 이 발생합니다. 패스 &lt;code&gt;{multiple: true}&lt;/code&gt; 다시이 동작을 활성화합니다. 각 요소는 순차적으로 클릭되어 명령 로그에 삽입됩니다.</target>
        </trans-unit>
        <trans-unit id="25d55e74482807ba8b87f68dc21fb3bfcbf2ee70" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/clear&quot;&gt;&lt;code&gt;.clear()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/select&quot;&gt;&lt;code&gt;.select()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/check&quot;&gt;&lt;code&gt;.check()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/uncheck&quot;&gt;&lt;code&gt;.uncheck()&lt;/code&gt;&lt;/a&gt; now will wait for the subject to automatically become visible instead of throwing immediately if the element is not in a visible state.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;../../api/commands/clear&quot;&gt; &lt;code&gt;.clear()&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;../../api/commands/select&quot;&gt; &lt;code&gt;.select()&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;../../api/commands/check&quot;&gt; &lt;code&gt;.check()&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;../../api/commands/uncheck&quot;&gt; &lt;code&gt;.uncheck()&lt;/code&gt; &lt;/a&gt; 이제 요소가 없으면 보이는 상태.</target>
        </trans-unit>
        <trans-unit id="c893c052f5da0d6dfccd59ede1c48daeeac25c73" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/click&quot;&gt;Click docs have been updated&lt;/a&gt; to reflect these changes.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/click&quot;&gt;클릭 문서는&lt;/a&gt; 이러한 변경 사항을 반영 하도록 업데이트되었습니다 .</target>
        </trans-unit>
        <trans-unit id="9e53f6e22583cbce1af64846004e8ba709e944ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/clock&quot;&gt;&lt;code&gt;cy.clock()&lt;/code&gt;&lt;/a&gt; gives you the ability to control:</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/clock&quot;&gt; &lt;code&gt;cy.clock()&lt;/code&gt; &lt;/a&gt; 은 다음을 제어 할 수있는 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="738c5efe487f5d70f1735ce3540a5de10278f6c8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/clock&quot;&gt;&lt;code&gt;cy.clock()&lt;/code&gt;&lt;/a&gt; is special in that it can be called &lt;strong&gt;prior&lt;/strong&gt; to visiting your application, and we will automatically bind it to the application on the next &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt;. We bind &lt;strong&gt;before&lt;/strong&gt; any timers from your application can be invoked. This works identically to &lt;a href=&quot;../../api/commands/server&quot;&gt;&lt;code&gt;cy.server()&lt;/code&gt;&lt;/a&gt; + &lt;a href=&quot;../../api/commands/route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/clock&quot;&gt; &lt;code&gt;cy.clock()&lt;/code&gt; &lt;/a&gt; 은응용 프로그램을 방문하기&lt;strong&gt; 전에&lt;/strong&gt; 호출 할 수 있다는 점에서 특별하며 다음&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 의 응용 프로그램에 자동으로 바인딩됩니다. 애플리케이션의 타이머를 호출&lt;strong&gt; 하기 전에&lt;/strong&gt; 바인딩합니다. 이것은&lt;a href=&quot;../../api/commands/server&quot;&gt; &lt;code&gt;cy.server()&lt;/code&gt; &lt;/a&gt; +&lt;a href=&quot;../../api/commands/route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt; 동일하게 작동합니다.</target>
        </trans-unit>
        <trans-unit id="d1a6e1cc65758ef28a90ff36431c1f3772c0c28d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains()&lt;/code&gt;&lt;/a&gt; can no longer be chained on subjects which aren&amp;rsquo;t &lt;code&gt;window&lt;/code&gt;, &lt;code&gt;document&lt;/code&gt; or &lt;code&gt;element&lt;/code&gt;. This brings it into parity with the new custom command rules and makes it much less &amp;ldquo;magical&amp;rdquo;. It enforces you to use it in a much clearer way when querying the entire document.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains()&lt;/code&gt; &lt;/a&gt; 는 더 이상 &lt;code&gt;window&lt;/code&gt; , &lt;code&gt;document&lt;/code&gt; 또는 &lt;code&gt;element&lt;/code&gt; 가 아닌 주제에 연결될 수 없습니다. 이를 통해 새로운 사용자 지정 명령 규칙과 동일하게 적용되고 &quot;매직&quot;수준이 훨씬 떨어집니다. 전체 문서를 쿼리 할 때 훨씬 명확하게 사용하도록합니다.</target>
        </trans-unit>
        <trans-unit id="0e508126869d2de8347037c3f266abd2aa7b78af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains()&lt;/code&gt;&lt;/a&gt; could potentially resolve to a null subject if the matching content was split across multiple nested children elements. This has been fixed and contains will now return the first, deepest element which contains text potentially spread over multiple text nodes and/or children elements.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains()&lt;/code&gt; &lt;/a&gt;일치하는 컨텐츠가 여러 개의 중첩 된 하위 요소로 분할 된 경우 cy.contains () 는 잠재적으로 널 주제로 해석 될 수 있습니다. 이 문제는 수정되어 포함되어 이제 여러 텍스트 노드 및 / 또는 자식 요소에 잠재적으로 퍼진 텍스트를 포함하는 가장 깊은 첫 번째 요소를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="03973d1a773ede26475643f467a4e37573c50275" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains()&lt;/code&gt;&lt;/a&gt; expects the element with content to eventually exist in the DOM.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains()&lt;/code&gt; &lt;/a&gt; 는 컨텐츠를 가진 요소가 결국 DOM에 존재할 것으로 예상합니다.</target>
        </trans-unit>
        <trans-unit id="caae6a6308aacc957eba5886076cdbd55c191a68" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains()&lt;/code&gt;&lt;/a&gt; is now scoped by default to the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; instead of &lt;code&gt;document&lt;/code&gt; which prevents it from returning elements in the &lt;code&gt;head&lt;/code&gt; like &lt;code&gt;title&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains()&lt;/code&gt; &lt;/a&gt; 는 이제 기본적으로 &lt;code&gt;document&lt;/code&gt; 대신 &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; 로 범위가 지정되어 &lt;code&gt;title&lt;/code&gt; 과 같은 &lt;code&gt;head&lt;/code&gt; 요소를 반환하지 못합니다 .</target>
        </trans-unit>
        <trans-unit id="bfd29a4a6c0d4c088d71ed72c17fa8cfbeb4fa20" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains()&lt;/code&gt;&lt;/a&gt; no longer returns the last element found when siblings both contain the same content. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/158&quot;&gt;#158&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains()&lt;/code&gt; &lt;/a&gt; 는 더 이상 형제가 모두 동일한 내용을 포함 할 때 발견 된 마지막 요소를 반환하지 않습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/158&quot;&gt;# 158&lt;/a&gt; 수정.</target>
        </trans-unit>
        <trans-unit id="6b5d1ce60ff19c015e1ce80634725e1e41614ba7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains()&lt;/code&gt;&lt;/a&gt; now accepts a regular expression. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/158&quot;&gt;#158&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains()&lt;/code&gt; &lt;/a&gt; 이제 정규 표현식을 받아들입니다. 주소&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/158&quot;&gt; # 158&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5a36b4d91f7e44527ee6cdede22027a459fb001f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains()&lt;/code&gt;&lt;/a&gt; now correctly handles comma delimited arguments passed to the selector argument. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2407&quot;&gt;#2407&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains()&lt;/code&gt; &lt;/a&gt; 이제 선택자 인수에 전달 된 쉼표로 구분 된 인수를 올바르게 처리합니다. 수정&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2407&quot;&gt; # 2407&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="980ac319042db7990a94697a9c2ce633463e0abf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains()&lt;/code&gt;&lt;/a&gt; now outputs much more explicit error messages when given command options. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/49&quot;&gt;#49&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains()&lt;/code&gt; &lt;/a&gt; 이제 명령 옵션이 주어지면 훨씬 더 명백한 오류 메시지를 출력합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/49&quot;&gt;# 49&lt;/a&gt; 수정.</target>
        </trans-unit>
        <trans-unit id="f0a18c2c408e2c168c18c69c3d5ba2510752dcd1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains()&lt;/code&gt;&lt;/a&gt; now properly escape quotes in the text.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains()&lt;/code&gt; &lt;/a&gt; 이제 텍스트에서 따옴표를 올바르게 이스케이프합니다.</target>
        </trans-unit>
        <trans-unit id="9cba43492f9a059186d47e51c0d43fb69e3ccb4e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains()&lt;/code&gt;&lt;/a&gt; now provides an even more specific error message when it was scoped to a particular DOM element and contained a selector. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/160&quot;&gt;#160&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains()&lt;/code&gt; &lt;/a&gt; 이제 특정 DOM 요소로 범위가 지정되고 선택기가 포함 된 경우 더욱 구체적인 오류 메시지를 제공합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/160&quot;&gt;# 160&lt;/a&gt; 수정.</target>
        </trans-unit>
        <trans-unit id="345923f60485a905d800359b128b5dc7ec54f410" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains()&lt;/code&gt;&lt;/a&gt; now throws when provided the command option: &lt;code&gt;length&lt;/code&gt; because it will only ever return 1 element.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains()&lt;/code&gt; &lt;/a&gt; 이제 명령 옵션 : &lt;code&gt;length&lt;/code&gt; 를 제공하면1 개의 요소 만 반환하므로throw됩니다.</target>
        </trans-unit>
        <trans-unit id="2d4b0198319a2718fc38f94cc731ddb559ac657c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt;, and &lt;code&gt;traversal commands&lt;/code&gt; will now all log out heir last known &lt;code&gt;$el&lt;/code&gt; on failure. This means the &lt;code&gt;$el&lt;/code&gt; will be highlight during Command Log hovering, and will display in the console on click. his should make debugging failed DOM based commands much easier. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/52&quot;&gt;#52&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains()&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt; 및 &lt;code&gt;traversal commands&lt;/code&gt; 은 이제실패시마지막으로 알려진 &lt;code&gt;$el&lt;/code&gt; 모든 상속자를 로그 아웃합니다. 즉,명령 로그 호버링 중에 &lt;code&gt;$el&lt;/code&gt; 이 강조 표시되고 클릭하면 콘솔에 표시됩니다. 실패한 DOM 기반 명령을 디버깅하기가 훨씬 쉬워졌습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/52&quot;&gt;# 52&lt;/a&gt; 수정.</target>
        </trans-unit>
        <trans-unit id="f22f566e590a97c9f6207f6cc3e98bbde7dbf54e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains(selector, regexp)&lt;/code&gt;&lt;/a&gt; now works as intended. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/801&quot;&gt;#801&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains(selector, regexp)&lt;/code&gt; &lt;/a&gt; 가 의도 한대로 작동합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/801&quot;&gt;# 801&lt;/a&gt; 수정.</target>
        </trans-unit>
        <trans-unit id="805a50d66f9a14cc078e42b916ef4141677bdc0e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/dblclick&quot;&gt;&lt;code&gt;.dblclick()&lt;/code&gt;&lt;/a&gt; - Double-click a DOM element.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/dblclick&quot;&gt; &lt;code&gt;.dblclick()&lt;/code&gt; &lt;/a&gt; 요소를 두 번 클릭하십시오.</target>
        </trans-unit>
        <trans-unit id="d7779cdb89117d2a3b36e6c4794eac5b3ea7a5e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/debug&quot;&gt;&lt;code&gt;.debug()&lt;/code&gt;&lt;/a&gt; has been zipped up - it no longer logs confusing debugging information and now logs information about the previously run command.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/debug&quot;&gt; &lt;code&gt;.debug()&lt;/code&gt; &lt;/a&gt; 가 압축되었습니다. 더 이상 혼란스러운 디버깅 정보를 기록하지 않으며 이제 이전에 실행 된 명령에 대한 정보를 기록합니다.</target>
        </trans-unit>
        <trans-unit id="163b2cb29630619c29b41cacbb26c6eb85f2e3fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/debug&quot;&gt;&lt;code&gt;.debug()&lt;/code&gt;&lt;/a&gt; now displays pending requests and completed requests.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/debug&quot;&gt; &lt;code&gt;.debug()&lt;/code&gt; &lt;/a&gt; 는 보류중인 요청과 완료된 요청을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="03bc66245989a910e0cd6a89a70de7b3388ad8fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/debug&quot;&gt;&lt;code&gt;.debug()&lt;/code&gt;&lt;/a&gt; output has been improved, and you can now easily inspect the current command&amp;rsquo;s subject.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/debug&quot;&gt; &lt;code&gt;.debug()&lt;/code&gt; &lt;/a&gt; 출력이 향상되었으며 이제 현재 명령의 주제를 쉽게 검사 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="087b6eda820b052e9d930d428cf3b8a003dc878e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/debug&quot;&gt;&lt;code&gt;.debug()&lt;/code&gt;&lt;/a&gt; returns the current subject now.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/debug&quot;&gt; &lt;code&gt;.debug()&lt;/code&gt; &lt;/a&gt; 는 현재 주제를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2dba843896ec96dfed52d58026dadaaa6ad7ebde" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/document&quot;&gt;&lt;code&gt;cy.document()&lt;/code&gt;&lt;/a&gt; now logs out to the &lt;code&gt;Command Log&lt;/code&gt; and additionally verifies upcoming assertions.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/document&quot;&gt; &lt;code&gt;cy.document()&lt;/code&gt; &lt;/a&gt; 이제 &lt;code&gt;Command Log&lt;/code&gt; 로그 아웃하고다음 어설 션을 추가로 확인합니다.</target>
        </trans-unit>
        <trans-unit id="97ba8ae5f1372260cd458abbff79bfa55737d1c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/document&quot;&gt;&lt;code&gt;cy.document()&lt;/code&gt;&lt;/a&gt; now returns the raw document object instead of a jQuery wrapped document object.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/document&quot;&gt; &lt;code&gt;cy.document()&lt;/code&gt; &lt;/a&gt; 이제 jQuery 래핑 된 문서 객체 대신 원시 문서 객체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e38932b00a934ddc600a7e65102e6510da8c2bf3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/exec&quot;&gt;&lt;code&gt;cy.exec()&lt;/code&gt;&lt;/a&gt; - to run system commands</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/exec&quot;&gt; &lt;code&gt;cy.exec()&lt;/code&gt; &lt;/a&gt; -시스템 명령을 실행합니다</target>
        </trans-unit>
        <trans-unit id="f0507d07b1bdb1000929038749904fd8d3e694f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/exec&quot;&gt;&lt;code&gt;cy.exec()&lt;/code&gt;&lt;/a&gt; now outputs additional &lt;code&gt;stderr&lt;/code&gt; and &lt;code&gt;stdout&lt;/code&gt; information. It additionally will automatically &lt;code&gt;source&lt;/code&gt; your &lt;code&gt;$SHELL&lt;/code&gt; which makes GUI apps behave as if they&amp;rsquo;ve been launched from your terminal. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/153&quot;&gt;#153&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/154&quot;&gt;#154&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/exec&quot;&gt; &lt;code&gt;cy.exec()&lt;/code&gt; &lt;/a&gt; 추가 &lt;code&gt;stderr&lt;/code&gt; 및 &lt;code&gt;stdout&lt;/code&gt; 정보를출력합니다. 그것은 또한 자동으로됩니다 &lt;code&gt;source&lt;/code&gt; 당신의 &lt;code&gt;$SHELL&lt;/code&gt; 가 터미널에서 실행 된 것처럼 GUI 행동을 애플 리케이션 있습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/153&quot;&gt;# 153&lt;/a&gt; 및&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/154&quot;&gt; # 154를&lt;/a&gt; 수정합니다.</target>
        </trans-unit>
        <trans-unit id="a8054109aff3402f4cd803312885d951a4ee2121" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/exec&quot;&gt;&lt;code&gt;cy.exec()&lt;/code&gt;&lt;/a&gt; now properly sources each time it is invoked instead of only once. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/694&quot;&gt;#694&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/exec&quot;&gt; &lt;code&gt;cy.exec()&lt;/code&gt; &lt;/a&gt; 이제 한 번만 호출 될 때마다 올바르게 소스됩니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/694&quot;&gt;# 694&lt;/a&gt; 수정.</target>
        </trans-unit>
        <trans-unit id="7ea3672fa95c838f56cadf8e939675aefa6a7c5a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/exec&quot;&gt;&lt;code&gt;cy.exec()&lt;/code&gt;&lt;/a&gt; now trims output by default. That means if you were using an &lt;code&gt;eq&lt;/code&gt; assertion the output will no longer have a trailing newline character &lt;code&gt;\n&lt;/code&gt;. It&amp;rsquo;s unlikely you are doing this, but it is possible you may need to update your assertions to remove this character. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/697&quot;&gt;#697&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/exec&quot;&gt; &lt;code&gt;cy.exec()&lt;/code&gt; &lt;/a&gt; 는 기본적으로 출력을 다듬습니다 . 즉, &lt;code&gt;eq&lt;/code&gt; 어설 션을 사용하는경우 출력에 더 이상 줄 바꿈 문자 &lt;code&gt;\n&lt;/code&gt; 이 없게됩니다. 이 작업을 수행하고 있지는 않지만이 문자를 제거하려면 어설 션을 업데이트해야 할 수도 있습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/697&quot;&gt;# 697&lt;/a&gt; 수정.</target>
        </trans-unit>
        <trans-unit id="18ca810709b58db6b7941d3494518e68f4a14aa1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/exec&quot;&gt;&lt;code&gt;cy.exec()&lt;/code&gt;&lt;/a&gt; runs a system command such as &lt;em&gt;seeding a database&lt;/em&gt;. We expect this to potentially take a long time, and its default timeout is set to &lt;code&gt;60000ms&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/exec&quot;&gt; &lt;code&gt;cy.exec()&lt;/code&gt; &lt;/a&gt; 는&lt;em&gt; 데이터베이스 시드&lt;/em&gt; 와 같은 시스템 명령을 실행&lt;em&gt; 합니다&lt;/em&gt; . 이 과정은 시간이 오래 걸리고 기본 시간 제한은 &lt;code&gt;60000ms&lt;/code&gt; 로 설정 됩니다 .</target>
        </trans-unit>
        <trans-unit id="9334bd82aa9761091021a70d61a948fad9ff0b60" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/filter&quot;&gt;&lt;code&gt;.filter()&lt;/code&gt;&lt;/a&gt; has been updated so that when called with a function, the options are now properly read. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3315&quot;&gt;#3315&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/filter&quot;&gt; &lt;code&gt;.filter()&lt;/code&gt; &lt;/a&gt; 가 업데이트되어 함수와 함께 호출 될 때 옵션이 올바르게 읽 힙니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3315&quot;&gt;# 3315&lt;/a&gt; 수정.</target>
        </trans-unit>
        <trans-unit id="a376a4f4b62c0d5507205af5b91c2736bc23c04e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/find&quot;&gt;&lt;code&gt;.find()&lt;/code&gt;&lt;/a&gt; also expects the element to eventually exist in the DOM.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/find&quot;&gt; &lt;code&gt;.find()&lt;/code&gt; &lt;/a&gt; 는 또한 요소가 결국 DOM에 존재할 것으로 예상합니다.</target>
        </trans-unit>
        <trans-unit id="b260242687896b070bbe3ebd2d81ab979e310a56" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/fixture&quot;&gt;&lt;code&gt;cy.fixture()&lt;/code&gt;&lt;/a&gt; can now properly time out and accepts an &lt;code&gt;options&lt;/code&gt; argument that can override its default timeout.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/fixture&quot;&gt; &lt;code&gt;cy.fixture()&lt;/code&gt; &lt;/a&gt; 는 이제 올바르게 시간 초과될 수 있으며 기본 시간 초과를 무시할 수있는 &lt;code&gt;options&lt;/code&gt; 인수를허용합니다.</target>
        </trans-unit>
        <trans-unit id="e91a162c0bc273c3a7fe3e3436fca9cdf1a6e987" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/fixture&quot;&gt;&lt;code&gt;cy.fixture()&lt;/code&gt;&lt;/a&gt; now accepts &lt;code&gt;encoding&lt;/code&gt; as a 2nd optional argument.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/fixture&quot;&gt; &lt;code&gt;cy.fixture()&lt;/code&gt; &lt;/a&gt; 이제두 번째 선택적 인수로 &lt;code&gt;encoding&lt;/code&gt; 을허용합니다.</target>
        </trans-unit>
        <trans-unit id="7f08c3a5e8049daa31e71f6095817c1bd36d8cee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/fixture&quot;&gt;&lt;code&gt;cy.fixture()&lt;/code&gt;&lt;/a&gt; now has a default timeout of &lt;code&gt;responseTimeout&lt;/code&gt; which is &lt;code&gt;20s&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/fixture&quot;&gt; &lt;code&gt;cy.fixture()&lt;/code&gt; &lt;/a&gt; 이제 &lt;code&gt;responseTimeout&lt;/code&gt; 의 기본 제한 시간이 &lt;code&gt;20s&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c429f82349a92fe0c22f37fa25a1ccec2f375769" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/fixture&quot;&gt;&lt;code&gt;cy.fixture()&lt;/code&gt;&lt;/a&gt; now supports these additional extensions: &lt;code&gt;.html&lt;/code&gt;, &lt;code&gt;.txt&lt;/code&gt;, &lt;code&gt;.png&lt;/code&gt;, &lt;code&gt;.jpg&lt;/code&gt;, &lt;code&gt;.jpeg&lt;/code&gt;, &lt;code&gt;.gif&lt;/code&gt;, &lt;code&gt;.tif&lt;/code&gt;, &lt;code&gt;.tiff&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/fixture&quot;&gt; &lt;code&gt;cy.fixture()&lt;/code&gt; &lt;/a&gt; 이제 &lt;code&gt;.html&lt;/code&gt; , &lt;code&gt;.txt&lt;/code&gt; , &lt;code&gt;.png&lt;/code&gt; , &lt;code&gt;.jpg&lt;/code&gt; , &lt;code&gt;.jpeg&lt;/code&gt; , &lt;code&gt;.gif&lt;/code&gt; , &lt;code&gt;.tif&lt;/code&gt; , &lt;code&gt;.tiff&lt;/code&gt; 와 같은 추가 확장명을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="b85525872834f822a69198c29d639903fd78a745" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/focus&quot;&gt;&lt;code&gt;.focus()&lt;/code&gt;&lt;/a&gt; - Focus on a DOM element.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/focus&quot;&gt; &lt;code&gt;.focus()&lt;/code&gt; &lt;/a&gt; 요소에 중점을 둡니다.</target>
        </trans-unit>
        <trans-unit id="2762261230f4f0d53bbe9dd21e2741c576cd5d0f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/focused&quot;&gt;&lt;code&gt;cy.focused()&lt;/code&gt;&lt;/a&gt; is now a parent command.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/focused&quot;&gt; &lt;code&gt;cy.focused()&lt;/code&gt; &lt;/a&gt; 는 이제 부모 명령입니다.</target>
        </trans-unit>
        <trans-unit id="35d4eed89326ea41bdac9d301b461f71713db17c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/focused&quot;&gt;&lt;code&gt;cy.focused()&lt;/code&gt;&lt;/a&gt; now automatically retries until the element exists in the DOM. This makes it behave the same as &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt; Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/564&quot;&gt;#564&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/409&quot;&gt;#409&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/focused&quot;&gt; &lt;code&gt;cy.focused()&lt;/code&gt; &lt;/a&gt; 이제 요소가 DOM에 존재할 때까지 자동으로 재 시도합니다. 이것은&lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt; Fixes&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/564&quot;&gt; # 564&lt;/a&gt; 및&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/409&quot;&gt; # 409&lt;/a&gt; 와동일하게 동작합니다.</target>
        </trans-unit>
        <trans-unit id="12f17f98a2023b3ac7367d8fa69cd26e51908ab4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt; can now accept all alias types and will display the labels in the UI differently based on the alias type.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt; 은 이제 모든 별칭 유형을 허용하고 별칭 유형에 따라 UI에 레이블을 다르게 표시합니다.</target>
        </trans-unit>
        <trans-unit id="db038b264aa7077e4ac082b659e62770ecb97229" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt; expects the element to eventually exist in the DOM.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt; 은 엘리먼트가 결국 DOM에 존재할 것으로 예상합니다.</target>
        </trans-unit>
        <trans-unit id="8c3e38907b607244a273456529edecf01d3ce95c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt; has been upgraded to accept a routing alias. By default it will yield the last matched request, but also supports special alias properties which return a different request or potentially an array of requests.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt; 이 라우팅 별명을 허용하도록 업그레이드되었습니다. 기본적으로 마지막 일치 요청을 생성하지만 다른 요청 또는 잠재적으로 요청 배열을 리턴하는 특수 별명 특성도 지원합니다.</target>
        </trans-unit>
        <trans-unit id="d871e8cd75645a3df7095adc04796f8b7d5d8fe2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/go&quot;&gt;&lt;code&gt;cy.go()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/reload&quot;&gt;&lt;code&gt;cy.reload()&lt;/code&gt;&lt;/a&gt; now accept a timeout option. Also, these commands would previously time out after the default &lt;code&gt;commandTimeout&lt;/code&gt; of &lt;code&gt;4000ms&lt;/code&gt;, but now they will timeout after &lt;code&gt;pageLoadTimeout&lt;/code&gt; of &lt;code&gt;30000ms&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/go&quot;&gt; &lt;code&gt;cy.go()&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;../../api/commands/reload&quot;&gt; &lt;code&gt;cy.reload()&lt;/code&gt; &lt;/a&gt; 이제 시간 종료 옵션을 승인합니다. 또한,이 명령은 기본 아웃 후 시간 이전 것 &lt;code&gt;commandTimeout&lt;/code&gt; 의 &lt;code&gt;4000ms&lt;/code&gt; ,하지만 지금은 후에 시간 초과됩니다 &lt;code&gt;pageLoadTimeout&lt;/code&gt; 의 &lt;code&gt;30000ms&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9f6a7f69f95eb08c383c7d629b5941c3def30c25" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/go&quot;&gt;&lt;code&gt;cy.go()&lt;/code&gt;&lt;/a&gt; enables you to navigate back or forward in your history. Cypress intelligently handles situations where moving forward or back causing a full page refresh, and will wait for the new page to load before resolving and moving onto new commands. It additionally handles situations where a page load was not caused (such as hash routing) and will resolve immediately.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/go&quot;&gt; &lt;code&gt;cy.go()&lt;/code&gt; &lt;/a&gt; 사용하면 기록에서 앞뒤로 이동할 수 있습니다. Cypress는 전진 또는 후진으로 전체 페이지를 새로 고치는 상황을 지능적으로 처리하고 새 명령이 해결되고 새 명령으로 이동하기 전에 새 페이지가로드 될 때까지 기다립니다. 또한 페이지로드가 발생하지 않은 상황 (예 : 해시 라우팅)을 처리하고 즉시 해결됩니다.</target>
        </trans-unit>
        <trans-unit id="4163df3d4cb1ab785af111dedbf135b94b6e136d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/go&quot;&gt;&lt;code&gt;cy.go()&lt;/code&gt;&lt;/a&gt; now snapshots before and after the navigation event.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/go&quot;&gt; &lt;code&gt;cy.go()&lt;/code&gt; &lt;/a&gt; 이제 탐색 이벤트 전후에 스냅 샷을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="1fc1dc62607a98eed7b71b01a0252be900180b8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/hash&quot;&gt;&lt;code&gt;cy.hash()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/url&quot;&gt;&lt;code&gt;cy.url()&lt;/code&gt;&lt;/a&gt; no longer pass the return value as the command log&amp;rsquo;s &lt;code&gt;message&lt;/code&gt;, which made no sense and was unlike every other command.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/hash&quot;&gt; &lt;code&gt;cy.hash()&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;../../api/commands/url&quot;&gt; &lt;code&gt;cy.url()&lt;/code&gt; &lt;/a&gt; 더 이상 반환 값을 명령 로그의 &lt;code&gt;message&lt;/code&gt; 로 전달하지 않습니다. 이는 의미가 없으며 다른 모든 명령과 다릅니다.</target>
        </trans-unit>
        <trans-unit id="ee2b4cc611f9c39de48b25c3aec1dd9141b6a602" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/invoke&quot;&gt;&lt;code&gt;.invoke()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/its&quot;&gt;&lt;code&gt;.its()&lt;/code&gt;&lt;/a&gt; will now log out the $el if it&amp;rsquo;s a DOM object, which will now correctly highlight the $el during a command revert. Additionally if these commands have been called on a DOM object, their &lt;code&gt;onConsole&lt;/code&gt; message will include the DOM objects.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/invoke&quot;&gt; &lt;code&gt;.invoke()&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;../../api/commands/its&quot;&gt; &lt;code&gt;.its()&lt;/code&gt; &lt;/a&gt; 가 올바르게 명령 되돌리기 동안 $ 엘을 강조하는 DOM 객체의 경우 현재 $ 엘을 기록합니다. 또한 이러한 명령이 DOM 객체에서 호출 된 경우 해당 &lt;code&gt;onConsole&lt;/code&gt; 메시지에 DOM 객체가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="3025e201060a407e7ca0f69601c03f7e5ec43063" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/invoke&quot;&gt;&lt;code&gt;.invoke()&lt;/code&gt;&lt;/a&gt; now correctly checks for a subject before running.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/invoke&quot;&gt; &lt;code&gt;.invoke()&lt;/code&gt; &lt;/a&gt; 이제 실행하기 전에 주제를 올바르게 확인합니다.</target>
        </trans-unit>
        <trans-unit id="878abc4960c5c46137460b75601526b5bd402746" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/its&quot;&gt;&lt;code&gt;.its()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/invoke&quot;&gt;&lt;code&gt;.invoke()&lt;/code&gt;&lt;/a&gt; now support &lt;strong&gt;dot separated&lt;/strong&gt; nested properties.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/its&quot;&gt; &lt;code&gt;.its()&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;../../api/commands/invoke&quot;&gt; &lt;code&gt;.invoke()&lt;/code&gt; &lt;/a&gt;() 및 .invoke ()는 이제&lt;strong&gt; 점으로 구분&lt;/strong&gt; 된 중첩 속성을지원합니다.</target>
        </trans-unit>
        <trans-unit id="030ac86d517db137852e4aec364685a4e88ba1dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/its&quot;&gt;&lt;code&gt;.its()&lt;/code&gt;&lt;/a&gt; expects to eventually find a property on the current subject.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/its&quot;&gt; &lt;code&gt;.its()&lt;/code&gt; &lt;/a&gt; 는 결국 현재 주제에서 속성을 찾을 것으로 예상합니다.</target>
        </trans-unit>
        <trans-unit id="20781762af81998254e3bc254505d1fe6734dfac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/pause&quot;&gt;&lt;code&gt;.pause()&lt;/code&gt;&lt;/a&gt; is now noop during &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt;&lt;code&gt;cypress run&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;cypress ci&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/pause&quot;&gt; &lt;code&gt;.pause()&lt;/code&gt; &lt;/a&gt; 는 이제&lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt; &lt;code&gt;cypress run&lt;/code&gt; &lt;/a&gt; 또는 &lt;code&gt;cypress ci&lt;/code&gt; 동안 noop입니다.</target>
        </trans-unit>
        <trans-unit id="b2d66b2848763035e895cebd41bc262d6e345a19" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/reload&quot;&gt;&lt;code&gt;cy.reload()&lt;/code&gt;&lt;/a&gt; now returns the window object of the newly reloaded page. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/105&quot;&gt;#105&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/reload&quot;&gt; &lt;code&gt;cy.reload()&lt;/code&gt; &lt;/a&gt; 는 새로 새로로드 된 페이지의 윈도우 객체를 반환합니다. 수정&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/105&quot;&gt; # 105&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1d5f96d05989d6b6cfc99e50c82041704fed150d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; - to make HTTP requests</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt; -HTTP 요청</target>
        </trans-unit>
        <trans-unit id="1a302596ae702a6fd9ae422dbe20713aa2ec1b11" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; now correctly send &lt;code&gt;User-Agent&lt;/code&gt; headers based on the current open browsing session. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/230&quot;&gt;#230&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 는 현재 열린 브라우징 세션을 기반으로 &lt;code&gt;User-Agent&lt;/code&gt; 헤더를올바르게 보냅니다. 수정&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/230&quot;&gt; # 230&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3f1c2ba77230a9d36d7c864ce797c7c3286af485" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; automatically gets + sets cookies to and from the remote server.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt; 자동으로 원격 서버와 쿠키를주고받습니다.</target>
        </trans-unit>
        <trans-unit id="0e01142ef0d27c74032b9447a08329dd88e9aa58" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; can now have its automatic redirect following turned off by passing &lt;code&gt;{followRedirect: false}&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/308&quot;&gt;#308&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt; 는 이제 &lt;code&gt;{followRedirect: false}&lt;/code&gt; 전달하여 자동 리디렉션 추적 기능을 끌 수 있습니다. 수정&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/308&quot;&gt; # 308&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="010d16bacca4bd59d589743f81a4067d6781b6f8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; expects the remote server to exist and provide a response.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt; 는 원격 서버가 존재할 것으로 예상하고 응답을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="5f973303c3ced274745aa29d660088ae5876eb8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; now accepts the &lt;code&gt;form&lt;/code&gt; option which will convert the &lt;code&gt;body&lt;/code&gt; values to urlencoded content and automatically set the &lt;code&gt;x-www-form-urlencoded&lt;/code&gt; header. This means you can now use &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; to bypass your UI and login with standard form values. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/319&quot;&gt;#319&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt; 이제 &lt;code&gt;body&lt;/code&gt; 옵션을 urlencoded 컨텐츠로 변환하고 &lt;code&gt;x-www-form-urlencoded&lt;/code&gt; 헤더를자동으로 설정하는 &lt;code&gt;form&lt;/code&gt; 옵션을허용합니다. 즉,&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt; 를사용하여 UI를 무시하고 표준 양식 값으로 로그인 할 수 있습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/319&quot;&gt;# 319&lt;/a&gt; 수정.</target>
        </trans-unit>
        <trans-unit id="f852e8575fa3171a8f67d773035f94dd617fc3d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; now allows any valid HTTP &lt;code&gt;method&lt;/code&gt; to be used including &lt;code&gt;TRACE&lt;/code&gt;, &lt;code&gt;COPY&lt;/code&gt;, &lt;code&gt;LOCK&lt;/code&gt;, &lt;code&gt;MKCOL&lt;/code&gt;, &lt;code&gt;MOVE&lt;/code&gt;, &lt;code&gt;PURGE&lt;/code&gt;, &lt;code&gt;PROPFIND&lt;/code&gt;, &lt;code&gt;PROPPATCH&lt;/code&gt;, &lt;code&gt;UNLOCK&lt;/code&gt;, &lt;code&gt;REPORT&lt;/code&gt;, &lt;code&gt;MKACTIVITY&lt;/code&gt;, &lt;code&gt;CHECKOUT&lt;/code&gt;, &lt;code&gt;MERGE&lt;/code&gt;, &lt;code&gt;M-SEARCH&lt;/code&gt;, &lt;code&gt;NOTIFY&lt;/code&gt;, &lt;code&gt;SUBSCRIBE&lt;/code&gt;, &lt;code&gt;UNSUBSCRIBE&lt;/code&gt;, &lt;code&gt;SEARCH&lt;/code&gt;, and &lt;code&gt;CONNECT&lt;/code&gt;. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1302&quot;&gt;#1302&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt; 현재 어떤 유효한 HTTP 수 있습니다 &lt;code&gt;method&lt;/code&gt; 을 포함하여 사용할 수 &lt;code&gt;TRACE&lt;/code&gt; 가 , &lt;code&gt;COPY&lt;/code&gt; , &lt;code&gt;LOCK&lt;/code&gt; , &lt;code&gt;MKCOL&lt;/code&gt; 는 , &lt;code&gt;MOVE&lt;/code&gt; , &lt;code&gt;PURGE&lt;/code&gt; , &lt;code&gt;PROPFIND&lt;/code&gt; 는 , &lt;code&gt;PROPPATCH&lt;/code&gt; 는 , &lt;code&gt;UNLOCK&lt;/code&gt; , &lt;code&gt;REPORT&lt;/code&gt; , &lt;code&gt;MKACTIVITY&lt;/code&gt; , &lt;code&gt;CHECKOUT&lt;/code&gt; , &lt;code&gt;MERGE&lt;/code&gt; , &lt;code&gt;M-SEARCH&lt;/code&gt; , &lt;code&gt;NOTIFY&lt;/code&gt; , &lt;code&gt;SUBSCRIBE&lt;/code&gt; , &lt;code&gt;UNSUBSCRIBE&lt;/code&gt; , &lt;code&gt;SEARCH&lt;/code&gt; 및 &lt;code&gt;CONNECT&lt;/code&gt; . 주소&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1302&quot;&gt; # 1302&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="35d4d34eeccf262354c9b43e0c5c34bced5f65fb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; now attaches and sets cookies transparently on the browser. Even though the browser will not physically make the request, we automatically apply outgoing cookies &lt;em&gt;as if&lt;/em&gt; the browser had made the request. Additionally we will automatically &lt;em&gt;set&lt;/em&gt; cookies on the browser based on the response. This means you can use &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; to bypass not just CORS but handle things like automatically logging in without having to manually perform these actions in the UI.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt; 이제 브라우저에서 쿠키를 투명하게 연결하고 설정합니다. 브라우저가 실제로 요청을하지 않더라도 브라우저가 요청한 것처럼 자동으로 발신 쿠키&lt;em&gt; 를&lt;/em&gt; 적용합니다. 또한응답에 따라 브라우저에서 쿠키를자동으로&lt;em&gt; 설정&lt;/em&gt; 합니다. 즉,&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt; 를사용하여 CORS를 우회할 수있지만 UI에서 이러한 작업을 수동으로 수행하지 않고도 자동 로그인과 같은 작업을 처리할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d44a35771f676b004cc467af5d6f28c1cb1151ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; now favors &lt;code&gt;baseUrl&lt;/code&gt; config over remote origin when you do not pass a fully qualified URL. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/360&quot;&gt;#360&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt;완전한 URL을 전달하지 않으면 cy.request () 는 원격 원점보다 &lt;code&gt;baseUrl&lt;/code&gt; 구성을선호합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/360&quot;&gt;# 360&lt;/a&gt; 수정.</target>
        </trans-unit>
        <trans-unit id="3dc0d66f91136d56506fd67eb4efe467b8895e55" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; now follows redirects exactly like a real browser. Previously if you &lt;code&gt;POST&lt;/code&gt;ed to an endpoint and it redirected to a &lt;code&gt;GET&lt;/code&gt; then &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; would not follow it due to the &lt;code&gt;method&lt;/code&gt; changing. It now follows method changing redirects by default. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/322&quot;&gt;#322&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt; 이제 실제 브라우저와 같은 리디렉션을 따릅니다. 이전에 엔드 포인트에 &lt;code&gt;POST&lt;/code&gt; 하고 &lt;code&gt;GET&lt;/code&gt; 으로 리디렉션한경우, &lt;code&gt;method&lt;/code&gt; 변경으로 인해&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt; 따르지 않습니다. 이제 기본적으로 방법 변경 리디렉션을 따릅니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/322&quot;&gt;# 322&lt;/a&gt; 수정.</target>
        </trans-unit>
        <trans-unit id="cf7a61343db410811445a6840e8c557a536d9039" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; now has a &lt;code&gt;qs&lt;/code&gt; option that automatically appends query params to the &lt;code&gt;url&lt;/code&gt; property. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/321&quot;&gt;#321&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt; 에는 &lt;code&gt;url&lt;/code&gt; 속성에 쿼리 매개 변수를 자동으로 추가하는 &lt;code&gt;qs&lt;/code&gt; 옵션이있습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/321&quot;&gt;# 321&lt;/a&gt; 수정.</target>
        </trans-unit>
        <trans-unit id="f66212059166b694bad78d6e609b2396757c7f68" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; now includes more debugging information (related to headers) in the error output. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/341&quot;&gt;#341&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt; 이제 오류 출력에 더 많은 디버깅 정보 (헤더 관련)를 포함합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/341&quot;&gt;# 341&lt;/a&gt; 수정.</target>
        </trans-unit>
        <trans-unit id="b73d2dd44126bf23764000a570c2c1969b09c1c3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; now prints &lt;strong&gt;all&lt;/strong&gt; of the underlying HTTP request / response information into the Dev Tools&amp;rsquo; console (when clicking on the Command Log). This means that you will see everything you would normally see from the &lt;code&gt;Network&lt;/code&gt; tab as if the request were made from the browser. We even print redirect information. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/325&quot;&gt;#325&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt; 이제&lt;strong&gt; 모든&lt;/strong&gt; 기본 HTTP 요청 / 응답 정보를 Dev Tools 콘솔에 인쇄합니다 (명령 로그를 클릭 할 때). 즉, 요청이 브라우저에서 이루어진 것처럼 &lt;code&gt;Network&lt;/code&gt; 탭에서 일반적으로 볼 수있는 모든 것을 볼 수 있습니다. 우리는 심지어 리디렉션 정보를 인쇄합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/325&quot;&gt;# 325&lt;/a&gt; 수정.</target>
        </trans-unit>
        <trans-unit id="fa51551b42c00a166172ba3203626302b5f84818" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; now sends an &lt;code&gt;Accept: */*&lt;/code&gt; request header by default too. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/338&quot;&gt;#338&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt; 이제기본적으로 &lt;code&gt;Accept: */*&lt;/code&gt; 요청 헤더도보냅니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/338&quot;&gt;# 338&lt;/a&gt; 수정.</target>
        </trans-unit>
        <trans-unit id="43745edf75c8311458ece4bfb2f5a5d7da8eeafa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/root&quot;&gt;&lt;code&gt;.root()&lt;/code&gt;&lt;/a&gt; now outputs its subject when clicking on its command log. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/55&quot;&gt;#55&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/root&quot;&gt; &lt;code&gt;.root()&lt;/code&gt; &lt;/a&gt; 이제 명령 로그를 클릭 할 때 제목을 출력합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/55&quot;&gt;# 55&lt;/a&gt; 수정.</target>
        </trans-unit>
        <trans-unit id="a0daca89d30b5f64a68b50afa7da33d32f254bf2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt; - &lt;code&gt;onRequest&lt;/code&gt; and &lt;code&gt;onResponse&lt;/code&gt; callbacks are now called with &lt;code&gt;cy&lt;/code&gt; as the context.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt; - &lt;code&gt;onRequest&lt;/code&gt; 및 &lt;code&gt;onResponse&lt;/code&gt; 콜백 이제 호출하는 &lt;code&gt;cy&lt;/code&gt; 맥락으로.</target>
        </trans-unit>
        <trans-unit id="6cced6cdeba9aaa70d461ff3fb3fee7347b3e822" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt; additionally accepts a special &lt;code&gt;fixture:&lt;/code&gt; or &lt;code&gt;fx:&lt;/code&gt; keyword which automatically loads the fixture as the response.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt; 추가적으로조명기를 응답으로 자동로드하는 특별한 &lt;code&gt;fixture:&lt;/code&gt; 또는 &lt;code&gt;fx:&lt;/code&gt; 키워드를받아들입니다.</target>
        </trans-unit>
        <trans-unit id="fed1550d8c7d6b84a7867083b70fe3899f0dc858" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt; can now accept a single function and/or you can pass a function to the &lt;code&gt;response&lt;/code&gt; property. This allows you to lazily evaluate routing responses. Great for referencing fixtures. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/152&quot;&gt;#152&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt; 는 이제 단일 함수를 허용하거나 함수를 &lt;code&gt;response&lt;/code&gt; 속성에전달할 수 있습니다. 이를 통해 라우팅 응답을 느리게 평가할 수 있습니다. 비품 참조에 좋습니다. 주소&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/152&quot;&gt; # 152&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="efb6e7138b36e09abd2df80f30b619f3c93bf342" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt; no longer validates &lt;code&gt;response&lt;/code&gt; value when &lt;code&gt;{respond: false}&lt;/code&gt; is passed in as options. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/48&quot;&gt;#48&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt; &lt;code&gt;{respond: false}&lt;/code&gt; 가 옵션으로 전달될 때 cy.route () 는 더 이상 &lt;code&gt;response&lt;/code&gt; 값의유효성을 검사하지 않습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/48&quot;&gt;# 48&lt;/a&gt; 수정.</target>
        </trans-unit>
        <trans-unit id="23577b3b46dbad001a85fec05efe2e9d9bb52406" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt; now accepts a &lt;code&gt;delay&lt;/code&gt; option which overrides the delay option set in &lt;a href=&quot;../../api/commands/server&quot;&gt;&lt;code&gt;cy.server()&lt;/code&gt;&lt;/a&gt; to just matched requests.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt; 지금 받아들이는 &lt;code&gt;delay&lt;/code&gt; 의 지연 옵션 세트 무시 옵션&lt;a href=&quot;../../api/commands/server&quot;&gt; &lt;code&gt;cy.server()&lt;/code&gt; &lt;/a&gt; 단지 일치 요청합니다.</target>
        </trans-unit>
        <trans-unit id="4cd2d0aab87bb2b1b458d54be54017e24593041d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt; now accepts a &lt;code&gt;respond&lt;/code&gt; option which will turn off automatic responding to just matched requests.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt; 이제일치하는 요청에 대한 자동 응답을 끄는 &lt;code&gt;respond&lt;/code&gt; 옵션을허용합니다.</target>
        </trans-unit>
        <trans-unit id="78b17b7be0f7eea3cda2589cec50145d4e222dfa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt; now accepts an &lt;strong&gt;alias&lt;/strong&gt; as its response.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt; 이제&lt;strong&gt; 별명&lt;/strong&gt; 을 응답으로받아들입니다.</target>
        </trans-unit>
        <trans-unit id="a87a8554781186c768804b7bcd7828a62263f47a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt; now accepts string glob patterns using &lt;a href=&quot;https://github.com/isaacs/minimatch&quot;&gt;minimatch&lt;/a&gt; under the hood. This means you can more easily route dynamic urls without using &lt;code&gt;regex&lt;/code&gt;. Example: &lt;code&gt;cy.route('POST', '/users/*/comments', {})&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt; 이제후드 아래에서&lt;a href=&quot;https://github.com/isaacs/minimatch&quot;&gt; 미니 매치&lt;/a&gt; 를사용하여 문자열 glob 패턴을 허용합니다. 즉, &lt;code&gt;regex&lt;/code&gt; 를 사용하지 않고도 동적 URL을보다 쉽게 ​​라우팅 할 수 있습니다. 예 : &lt;code&gt;cy.route('POST', '/users/*/comments', {})&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="91bd1ac5abc3fff2d767a237d86081758e8edf3c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt; now matches requests opened with lowercase methods. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/607&quot;&gt;#607&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt; 이제 소문자 메소드로 열린 요청과 일치합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/607&quot;&gt;# 607&lt;/a&gt; 수정.</target>
        </trans-unit>
        <trans-unit id="c747416b0e65be46b34eb6adcffe8c04ce7fc2e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt; responses are now validated. If responses are &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt; Cypress will throw a very specific error message.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt; 응답이 이제 검증되었습니다. 응답이 &lt;code&gt;null&lt;/code&gt; 이거나 &lt;code&gt;undefined&lt;/code&gt; Cypress는 매우 특정한 오류 메시지를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="0637884ed9f82ad2bebd91760a069401900f3a2e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt; will no longer throw that a response is needed when using &lt;a href=&quot;../../api/commands/server&quot;&gt;&lt;code&gt;cy.server({stub: false})&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt; 는 더 이상&lt;a href=&quot;../../api/commands/server&quot;&gt; &lt;code&gt;cy.server({stub: false})&lt;/code&gt; &lt;/a&gt; 사용할 때 응답이 필요하다는 것을 던지지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d5710fa63f20a426d3961136a655a9b38e01d7ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/screenshot&quot;&gt;&lt;code&gt;cy.screenshot()&lt;/code&gt;&lt;/a&gt; can now be chained off of commands that yield a DOM element and will only take a screenshot that element.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/screenshot&quot;&gt; &lt;code&gt;cy.screenshot()&lt;/code&gt; &lt;/a&gt; 을 DOM 요소를 생성하는 명령과 연결하여 해당 요소의 스크린 샷 만 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2728a881a6c8985e1bd1b2bd346640cd34eb654a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/screenshot&quot;&gt;&lt;code&gt;cy.screenshot()&lt;/code&gt;&lt;/a&gt; has been rewritten from the ground up. It now takes a screenshot of &lt;strong&gt;only&lt;/strong&gt; the application under test by default. It also can take full page screenshots or element only screenshots. This is the first step of Cypress Dashboard support for screenshot diffing.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/screenshot&quot;&gt; &lt;code&gt;cy.screenshot()&lt;/code&gt; &lt;/a&gt; 이 처음부터 다시 작성되었습니다. 지금의 스크린 샷 걸립니다&lt;strong&gt; 만&lt;/strong&gt; 기본적으로 테스트중인 응용 프로그램을. 또한 전체 페이지 스크린 샷 또는 요소 전용 스크린 샷을 찍을 수 있습니다. 스크린 샷 디핑에 대한 Cypress Dashboard 지원의 첫 번째 단계입니다.</target>
        </trans-unit>
        <trans-unit id="7f6b201c49f8efcfeb96afed50100e71806c4de6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/screenshot&quot;&gt;&lt;code&gt;cy.screenshot()&lt;/code&gt;&lt;/a&gt; no longer takes a screenshot of the runner by default. Instead it will hide the runner, remove application scaling and then scroll to take a full page picture of your application.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/screenshot&quot;&gt; &lt;code&gt;cy.screenshot()&lt;/code&gt; &lt;/a&gt; 더 이상 기본적으로 러너의 스크린 샷을 만들지 않습니다. 대신 러너를 숨기고 응용 프로그램 크기 조정을 제거한 다음 스크롤하여 응용 프로그램의 전체 페이지 사진을 찍습니다.</target>
        </trans-unit>
        <trans-unit id="1c64e8bbf9339727111fbb2a007f2a0d6883a619" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/screenshot&quot;&gt;&lt;code&gt;cy.screenshot()&lt;/code&gt;&lt;/a&gt; now synchronizes its state with the reporter. This means you should see error messages (on the left side) on automatic screenshot errors.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/screenshot&quot;&gt; &lt;code&gt;cy.screenshot()&lt;/code&gt; &lt;/a&gt; 이제 상태를 기자와 동기화합니다. 즉, 자동 스크린 샷 오류에 오류 메시지 (왼쪽)가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="cadf270112573b7a34056db3e180abaffea65d69" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/select&quot;&gt;&lt;code&gt;.select()&lt;/code&gt;&lt;/a&gt; - Select an &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; within a &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/select&quot;&gt; &lt;code&gt;.select()&lt;/code&gt; &lt;/a&gt; - &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; 내에서 &amp;lt; &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; 선택하십시오 .</target>
        </trans-unit>
        <trans-unit id="4b6e08adc2ea6487df5f151108d0f9cf67ae3b33" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/select&quot;&gt;&lt;code&gt;.select()&lt;/code&gt;&lt;/a&gt; is now inline with the other &lt;code&gt;Action&lt;/code&gt; commands and will retry until the element naturally becomes selectable.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/select&quot;&gt; &lt;code&gt;.select()&lt;/code&gt; &lt;/a&gt; 는 이제 다른 &lt;code&gt;Action&lt;/code&gt; 명령과인라인되며요소를 자연스럽게 선택할 수있을 때까지 재 시도합니다.</target>
        </trans-unit>
        <trans-unit id="5eaeffb6000a79a9b03d5a37e7ca7ba1aa114a3a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/select&quot;&gt;&lt;code&gt;.select()&lt;/code&gt;&lt;/a&gt; now works on options that have the same value. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/441&quot;&gt;#441&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/select&quot;&gt; &lt;code&gt;.select()&lt;/code&gt; &lt;/a&gt; 이제 동일한 값을 가진 옵션에서 작동합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/441&quot;&gt;# 441&lt;/a&gt; 수정.</target>
        </trans-unit>
        <trans-unit id="7be58427ea439bb1cc34fa2d6a60e477fc57a039" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/select&quot;&gt;&lt;code&gt;.select()&lt;/code&gt;&lt;/a&gt; should now look for the trimmed value inside of an &lt;code&gt;&amp;lt;option&amp;gt;&amp;lt;/option&amp;gt;&lt;/code&gt;. This may change the content argument required to select the option you intended in your &lt;a href=&quot;../../api/commands/select&quot;&gt;&lt;code&gt;.select()&lt;/code&gt;&lt;/a&gt; command. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/175&quot;&gt;#175&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/select&quot;&gt; &lt;code&gt;.select()&lt;/code&gt; &lt;/a&gt; 는 이제 &lt;code&gt;&amp;lt;option&amp;gt;&amp;lt;/option&amp;gt;&lt;/code&gt; 내부에서 잘린 값을 찾아야합니다. &lt;a href=&quot;../../api/commands/select&quot;&gt; &lt;code&gt;.select()&lt;/code&gt; &lt;/a&gt; 명령에서 의도 한 옵션을 선택하는 데 필요한 컨텐츠 인수가 변경 될 수 있습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/175&quot;&gt;# 175&lt;/a&gt; 수정.</target>
        </trans-unit>
        <trans-unit id="baf8e4f4f080cd2dbbb60d886e7171c5e34936b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/select&quot;&gt;&lt;code&gt;.select()&lt;/code&gt;&lt;/a&gt; will now fire a &lt;code&gt;focus&lt;/code&gt; event on the &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; even if the window isn&amp;rsquo;t in focus.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/select&quot;&gt; &lt;code&gt;.select()&lt;/code&gt; &lt;/a&gt; 는 이제창의 초점이 맞지 않더라도 &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; 에서 &lt;code&gt;focus&lt;/code&gt; 이벤트를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="7980c3b159e09a5f56fe5c83b0c94c7a765f1e01" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/select&quot;&gt;&lt;code&gt;.select()&lt;/code&gt;&lt;/a&gt; will now have &lt;code&gt;click&lt;/code&gt; / &lt;code&gt;focus&lt;/code&gt; events fired on itself and the selected options (as per the pec).</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/select&quot;&gt; &lt;code&gt;.select()&lt;/code&gt; &lt;/a&gt; 는 이제 &lt;code&gt;click&lt;/code&gt; / &lt;code&gt;focus&lt;/code&gt; 이벤트가 발생하고 선택한 옵션 (특정 기능에 따라)이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f8534fd60a062994d18b3f856c34fc76494c43d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/select&quot;&gt;&lt;code&gt;.select()&lt;/code&gt;&lt;/a&gt; will now output a command log.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/select&quot;&gt; &lt;code&gt;.select()&lt;/code&gt; &lt;/a&gt; 는 이제 명령 로그를 출력합니다.</target>
        </trans-unit>
        <trans-unit id="871f2dc400467635d0d5cb17933fa1c82d5367ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/server&quot;&gt;&lt;code&gt;cy.server()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt; now take an optional &lt;code&gt;onAbort&lt;/code&gt; callback which fires anytime an XHR is aborted.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/server&quot;&gt; &lt;code&gt;cy.server()&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;../../api/commands/route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt; 이제XHR이 중단 될 때마다 발생하는 선택적 &lt;code&gt;onAbort&lt;/code&gt; 콜백을가져 옵니다 .</target>
        </trans-unit>
        <trans-unit id="b10f724c5c7eecc14d2ca5326a393cffd10ed034" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/server&quot;&gt;&lt;code&gt;cy.server()&lt;/code&gt;&lt;/a&gt; can configure whether this is turned on or off.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/server&quot;&gt; &lt;code&gt;cy.server()&lt;/code&gt; &lt;/a&gt; 는 이것이 설정되어 있는지 해제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1acfe199a1301cd3a54adf992bc21d3c5d8a2fd1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/server&quot;&gt;&lt;code&gt;cy.server()&lt;/code&gt;&lt;/a&gt; now accepts a &lt;code&gt;delay&lt;/code&gt; option which will delay all responses to requests (including 404) based on the value in ms</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/server&quot;&gt; &lt;code&gt;cy.server()&lt;/code&gt; &lt;/a&gt; 이제ms의 값을 기준으로 요청에 대한 모든 응답 (404 포함)을 지연시키는 &lt;code&gt;delay&lt;/code&gt; 옵션을허용합니다.</target>
        </trans-unit>
        <trans-unit id="b635d4fbc06d2a0f0701af5d068c1f7baf6eea97" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/server&quot;&gt;&lt;code&gt;cy.server()&lt;/code&gt;&lt;/a&gt; now accepts a &lt;code&gt;respond&lt;/code&gt; option which can turn off automatic responding to requests.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/server&quot;&gt; &lt;code&gt;cy.server()&lt;/code&gt; &lt;/a&gt; 이제자동 응답 요청을 끌 수있는 &lt;code&gt;respond&lt;/code&gt; 옵션을허용합니다.</target>
        </trans-unit>
        <trans-unit id="27137cca3bdc8cc5facc8dac4c1624548f1779c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/should&quot;&gt;&lt;code&gt;.should()&lt;/code&gt;&lt;/a&gt; now accepts a callback function which will be retried until it does not throw. The callback function will be retried in the exact same way as passing regular string-based chainers to &lt;a href=&quot;../../api/commands/should&quot;&gt;&lt;code&gt;.should()&lt;/code&gt;&lt;/a&gt;. Having a callback function gives you an opportunity to &lt;em&gt;massage&lt;/em&gt; the expected subject such as comparing multiple elements, creating an array of text or classes, etc.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/should&quot;&gt; &lt;code&gt;.should()&lt;/code&gt; &lt;/a&gt; 이제 콜백 함수를 허용합니다. 콜백 함수는 throw되지 않을 때까지 재 시도됩니다. 콜백 함수는 일반 문자열 기반 체인을 .should&lt;a href=&quot;../../api/commands/should&quot;&gt; &lt;code&gt;.should()&lt;/code&gt; &lt;/a&gt; 로 전달하는 것과 동일한 방식으로 재 시도됩니다. 콜백 기능을 사용하면여러 요소를 비교하거나 텍스트 또는 클래스 배열을 만드는 등 예상되는 주제를&lt;em&gt; 마사지&lt;/em&gt; 할 수있습니다.</target>
        </trans-unit>
        <trans-unit id="070a3412fcb917e6264ebca5936269bea0e4517b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/should&quot;&gt;&lt;code&gt;.should()&lt;/code&gt;&lt;/a&gt; will no longer throw an error when it is used as a &lt;code&gt;parent command&lt;/code&gt; and has a callback function signature, and that callback function throws outside of an assertion. Instead now it logs correctly, handles the error, and displays this error for you.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/should&quot;&gt; &lt;code&gt;.should()&lt;/code&gt; &lt;/a&gt; 는 &lt;code&gt;parent command&lt;/code&gt; 으로 사용되고콜백 함수 서명이 있고 해당 콜백 함수가 어설 션 외부에서 throw될 때 더 이상 오류를 발생시키지 않습니다. 대신 이제 올바르게 기록하고 오류를 처리하며이 오류를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="5a9fb34d7a0c4176103f3652e1698233c169e5be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/should&quot;&gt;&lt;code&gt;cy.should('contain', '&amp;hellip;')&lt;/code&gt;&lt;/a&gt; now correctly escapes quotes and single quotes.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/should&quot;&gt; &lt;code&gt;cy.should('contain', '&amp;hellip;')&lt;/code&gt; &lt;/a&gt; 이제 따옴표와 작은 따옴표를 올바르게 이스케이프합니다.</target>
        </trans-unit>
        <trans-unit id="44bade7eed2773d7911f9bddb3ca14a5ca54ec7e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/spy&quot;&gt;&lt;code&gt;cy.spy()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/stub&quot;&gt;&lt;code&gt;cy.stub()&lt;/code&gt;&lt;/a&gt; now have a &lt;code&gt;.log(bool)&lt;/code&gt; method to disable their calls from generating a Command Log. Useful when your spies or stubs are called an excessive number of times.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/spy&quot;&gt; &lt;code&gt;cy.spy()&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;../../api/commands/stub&quot;&gt; &lt;code&gt;cy.stub()&lt;/code&gt; &lt;/a&gt; 에는 &lt;code&gt;.log(bool)&lt;/code&gt; 메소드가있어 호출이 명령 로그를 생성하지 못하게합니다. 스파이 또는 스터브를 과도한 횟수로 호출 할 때 유용합니다.</target>
        </trans-unit>
        <trans-unit id="e0e11619f783059c4454e3518edf799acc27e1f7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/stub&quot;&gt;&lt;code&gt;cy.stub()&lt;/code&gt;&lt;/a&gt; no longer errors in TypeScript files when evaluating returns. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4302&quot;&gt;#4302&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/stub&quot;&gt; &lt;code&gt;cy.stub()&lt;/code&gt; &lt;/a&gt;반환 값을 평가할 때 typeScript 파일에서 cy.stub () 오류가 더 이상 발생하지 않습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4302&quot;&gt;# 4302&lt;/a&gt; 수정.</target>
        </trans-unit>
        <trans-unit id="10b7059779eb40b49fc2e3eb1e719af363b0c4f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/stub&quot;&gt;Stub&lt;/a&gt; out the OAuth provider and bypass using their UI altogether. You could just trick your application into believing the OAuth provider has passed its token to your application.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/stub&quot;&gt;&lt;/a&gt;OAuth 제공자를 스텁 아웃하고 UI를 사용하여 우회하십시오. OAuth 공급자가 토큰을 응용 프로그램에 전달했다고 믿도록 응용 프로그램을 속일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bfb7c1d05d92e3c15856e4ba09cc1d198cda41bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/stub&quot;&gt;Stub&lt;/a&gt; the browser or your application&amp;rsquo;s functions and force them to behave as needed in your test case.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/stub&quot;&gt;&lt;/a&gt;브라우저 또는 응용 프로그램 기능을 스터브 하고 테스트 사례에서 필요에 따라 작동하도록합니다.</target>
        </trans-unit>
        <trans-unit id="ca975f4741ad87ffcf897df361b9b3df4cc20978" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/submit&quot;&gt;&lt;code&gt;.submit()&lt;/code&gt;&lt;/a&gt; a &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; that causes your web server to redirect to you a different superdomain.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/submit&quot;&gt; &lt;code&gt;.submit()&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 웹 서버가 당신에게 다른 상위 도메인을 리디렉션됩니다.</target>
        </trans-unit>
        <trans-unit id="f0711d9ea63c4c2da1a88292099e78725cc25607" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/submit&quot;&gt;&lt;code&gt;.submit()&lt;/code&gt;&lt;/a&gt; now errors if it&amp;rsquo;s been called on &amp;gt;1 form element. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/41&quot;&gt;#41&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/submit&quot;&gt; &lt;code&gt;.submit()&lt;/code&gt; &lt;/a&gt; &amp;gt; 1 양식 요소에서 호출되면 오류가 발생합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/41&quot;&gt;# 41&lt;/a&gt; 수정.</target>
        </trans-unit>
        <trans-unit id="4ea6b06e9c23089ef97c415685323cf86eb19fd4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/submit&quot;&gt;&lt;code&gt;.submit()&lt;/code&gt;&lt;/a&gt; will actually submit the form for real now, instead of just firing the submit event. Now it&amp;rsquo;s been upgraded to be able to be canceled or have its returnValue set to false and will not submit the form. Don&amp;rsquo;t ask how I missed this one. I as once a young naive programmer who trusted the DOM not to be the abomination it actually is.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/submit&quot;&gt; &lt;code&gt;.submit()&lt;/code&gt; &lt;/a&gt; 은 실제로 제출 이벤트를 발생시키는 대신 실제 양식을 제출합니다. 이제 취소하거나 returnValue를 false로 설정할 수 있도록 업그레이드되었으며 양식을 제출하지 않습니다. 내가 이것을 어떻게 그리워했는지 묻지 마십시오. 나는 DOM을 실제로 가증하지 않는 것을 신뢰 한 젊은 순진한 프로그래머였습니다.</target>
        </trans-unit>
        <trans-unit id="46d8d289d6efb199af55e6efa70b7781907a5564" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/task&quot;&gt;&lt;code&gt;cy.task()&lt;/code&gt;&lt;/a&gt; - to run code in Node via the &lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt;&lt;code&gt;pluginsFile&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/task&quot;&gt; &lt;code&gt;cy.task()&lt;/code&gt; &lt;/a&gt; - 비아 노드에서 코드를 실행하는&lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt; &lt;code&gt;pluginsFile&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1c049f24bf3c8952dac92fbcaa8716ccbe0ac733" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/then&quot;&gt;&lt;code&gt;.then()&lt;/code&gt;&lt;/a&gt; now supports a &lt;code&gt;timeout&lt;/code&gt; option. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/110&quot;&gt;#110&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/then&quot;&gt; &lt;code&gt;.then()&lt;/code&gt; &lt;/a&gt; 이제 &lt;code&gt;timeout&lt;/code&gt; 옵션을지원합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/110&quot;&gt;# 110&lt;/a&gt; 수정.</target>
        </trans-unit>
        <trans-unit id="fd3583de141a2fef705102fdc9f86af9ce0448bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/then&quot;&gt;&lt;code&gt;.then()&lt;/code&gt;&lt;/a&gt; yielding nested subjects.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/then&quot;&gt; &lt;code&gt;.then()&lt;/code&gt; &lt;/a&gt; 중첩 된 주제를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="96093efb2eda38b728d25f9254bad6da042bd3fb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/then&quot;&gt;&lt;code&gt;cy.then()&lt;/code&gt;&lt;/a&gt; will now only pass its subject through when its callback function returns &lt;code&gt;undefined&lt;/code&gt;. Previous it would pass the subject on &lt;code&gt;null&lt;/code&gt; values as well.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/then&quot;&gt; &lt;code&gt;cy.then()&lt;/code&gt; &lt;/a&gt; 은 이제 콜백 함수가 &lt;code&gt;undefined&lt;/code&gt; 를 반환 할 때만 주제를 전달합니다. 이전에는 주제를 &lt;code&gt;null&lt;/code&gt; 값으로전달했습니다.</target>
        </trans-unit>
        <trans-unit id="8b754dce856b65d2225d80f09dc01c66d39cc4cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/title&quot;&gt;&lt;code&gt;cy.title()&lt;/code&gt;&lt;/a&gt; no longer logs twice on a failure.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/title&quot;&gt; &lt;code&gt;cy.title()&lt;/code&gt; &lt;/a&gt; 더 이상 실패에 두 번 기록하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="dc655396fdff3fd479020756fbbaa4ef9a3b4bc9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/title&quot;&gt;&lt;code&gt;cy.title()&lt;/code&gt;&lt;/a&gt; now uses the &lt;code&gt;document.title&lt;/code&gt; property as opposed to querying for &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; elements in the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/351&quot;&gt;#351&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/331&quot;&gt;#331&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/title&quot;&gt; &lt;code&gt;cy.title()&lt;/code&gt; &lt;/a&gt; 은 &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; 에서 &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; 요소를 쿼리하는 대신 &lt;code&gt;document.title&lt;/code&gt; 속성을사용합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/351&quot;&gt;# 351&lt;/a&gt; 및&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/331&quot;&gt; # 331을&lt;/a&gt; 수정합니다.</target>
        </trans-unit>
        <trans-unit id="712f8553b00248710c6c3e381350991c9314fbbd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; accepts remaining &lt;code&gt;input[type=*]&lt;/code&gt; that users can type into.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 은사용자가 입력 할 수있는 나머지 &lt;code&gt;input[type=*]&lt;/code&gt; 을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="c49b522f8544267d83645ebba3ce6c9cb89879ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/clear&quot;&gt;&lt;code&gt;.clear()&lt;/code&gt;&lt;/a&gt; will not issue &lt;code&gt;change&lt;/code&gt; events or &lt;code&gt;focus&lt;/code&gt; events unnecessary when chaining together multiple actions which do not change the element or cause it to lose focus. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/47&quot;&gt;#47&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;../../api/commands/clear&quot;&gt; &lt;code&gt;.clear()&lt;/code&gt; &lt;/a&gt; 는요소를 변경하지 않거나 포커스를 잃게하는 여러 동작을 함께 연결할 때 &lt;code&gt;change&lt;/code&gt; 이벤트 또는 &lt;code&gt;focus&lt;/code&gt; 이벤트를 발생시키지 않습니다. 수정&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/47&quot;&gt; # 47&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="86a3318c51d46e4c1a4c6b92d0aec3fd001e24a0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; can now be used on non-input elements that have a &lt;code&gt;tabindex&lt;/code&gt; attribute. Key events will fire but no text content will change and no input based events fire. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/172&quot;&gt;#172&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 은 이제 &lt;code&gt;tabindex&lt;/code&gt; 속성을 가진 비 입력 요소에서 사용될 수 있습니다. 주요 이벤트는 발생하지만 텍스트 내용은 변경되지 않으며 입력 기반 이벤트는 발생하지 않습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/172&quot;&gt;# 172&lt;/a&gt; 수정.</target>
        </trans-unit>
        <trans-unit id="a6fda2471a5b9fb81c5fe2f373644d7e46d38ddd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; events should be &lt;code&gt;100%&lt;/code&gt; identical to real browser &lt;code&gt;KeyboardEvents&lt;/code&gt; including &lt;code&gt;charCode&lt;/code&gt;, &lt;code&gt;which&lt;/code&gt;, &lt;code&gt;keyCode&lt;/code&gt;, &lt;code&gt;data&lt;/code&gt;, etc.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 이벤트되어야 &lt;code&gt;100%&lt;/code&gt; 실제 브라우저 동일 &lt;code&gt;KeyboardEvents&lt;/code&gt; 포함 &lt;code&gt;charCode&lt;/code&gt; 값 ,, &lt;code&gt;keyCode&lt;/code&gt; 에 , &lt;code&gt;data&lt;/code&gt; 등 &lt;code&gt;which&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a6a0c885c5d77630d4ac28307d1c7e579ac1de44" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; expects the element to eventually be in a &lt;em&gt;typeable&lt;/em&gt; state.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 은 요소가 궁극적으로 입력&lt;em&gt; 가능한&lt;/em&gt; 상태가될 것으로 예상합니다.</target>
        </trans-unit>
        <trans-unit id="cb3bdf59f33b88e6c97010ff76f0b6b883bcf160" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; has been upgraded to handle current selection ranges. Previously if an &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; had a selection range as Cypress began to type, this would be ignored. Cypress now takes this into account and will type over any selected text (as native typing would do).</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 이 현재 선택 범위를 처리하도록 업그레이드되었습니다. 이전에Cypress가 입력을 시작할때 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 에 선택 범위가 있으면 무시됩니다. Cypress는 이제이를 고려하여 기본 입력과 같이 선택한 텍스트 위에 입력합니다.</target>
        </trans-unit>
        <trans-unit id="ac894bfd3ece2f8b6823f129b253b9b79993fbdb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; has been upgraded to handle situations where as it&amp;rsquo;s typing, 3rd party code mutates the value either synchronously or asynchronously. The caret is automatically moved to the end position matching browser behavior.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 은 입력하는 동안 타사 코드가 값을 동기식 또는 비동기식으로 변경하는 상황을 처리하도록 업그레이드되었습니다. 캐럿은 자동으로 종료 위치 일치 브라우저 동작으로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="227f1be3d67772c7155220a8cbce916b01aafd40" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; implements &lt;code&gt;cursor&lt;/code&gt; and &lt;code&gt;selection&lt;/code&gt; and &lt;code&gt;range&lt;/code&gt; accurately like a real keyboard.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 은 실제 키보드처럼 &lt;code&gt;cursor&lt;/code&gt; 와 &lt;code&gt;selection&lt;/code&gt; 및 &lt;code&gt;range&lt;/code&gt; 정확하게구현합니다.</target>
        </trans-unit>
        <trans-unit id="6d7900b73f2665aeb7f9f2dcd043fb16a49ba2e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; now accepts &lt;code&gt;{downarrow}&lt;/code&gt; and &lt;code&gt;{uparrow}&lt;/code&gt;. We do not move the caret but do fire all the proper events. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/157&quot;&gt;#157&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 이제 &lt;code&gt;{downarrow}&lt;/code&gt; 및 &lt;code&gt;{uparrow}&lt;/code&gt; 를 허용 합니다. 우리는 캐럿을 옮기지 않고 모든 적절한 사건을 발사합니다. 주소&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/157&quot;&gt; # 157&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c4263d44d4340f30c4d79f0b3530d7642d7a797e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; now accepts the following special character sequences: &lt;code&gt;{selectall}&lt;/code&gt;, &lt;code&gt;{del}&lt;/code&gt;, &lt;code&gt;{backspace}&lt;/code&gt;, &lt;code&gt;{esc}&lt;/code&gt;, &lt;code&gt;{{}&lt;/code&gt;, &lt;code&gt;{enter}&lt;/code&gt;, &lt;code&gt;{leftarrow}&lt;/code&gt;, &lt;code&gt;{rightarrow}&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 이제 &lt;code&gt;{selectall}&lt;/code&gt; , &lt;code&gt;{del}&lt;/code&gt; , &lt;code&gt;{backspace}&lt;/code&gt; , &lt;code&gt;{esc}&lt;/code&gt; , &lt;code&gt;{{}&lt;/code&gt; , &lt;code&gt;{enter}&lt;/code&gt; , &lt;code&gt;{leftarrow}&lt;/code&gt; , &lt;code&gt;{rightarrow}&lt;/code&gt; 특수 문자 시퀀스를 허용합니다.</target>
        </trans-unit>
        <trans-unit id="88fac521723a01b2cb66ebb261f2f2433d35d11c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; now causes previously &lt;code&gt;focused&lt;/code&gt; elements to receive &lt;code&gt;blur&lt;/code&gt; event/</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 은 이전에 &lt;code&gt;focused&lt;/code&gt; 요소가 &lt;code&gt;blur&lt;/code&gt; 이벤트 /</target>
        </trans-unit>
        <trans-unit id="9e74f8067db6c63ec5ca4e81a9af871dfae6afe0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; now causes the subject to receive &lt;code&gt;focus&lt;/code&gt; event.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 이제 피사체가 &lt;code&gt;focus&lt;/code&gt; 이벤트를 받도록합니다.</target>
        </trans-unit>
        <trans-unit id="82265bc4c0a727c163b18cf799630fe929f4227e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; now correctly logs its message to the Command Log when provided options.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 은 옵션이 제공 될 때 메시지를 명령 로그에 올바르게 기록합니다.</target>
        </trans-unit>
        <trans-unit id="2570513330259007efc0a65911715d9471c43192" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; now fires change events exactly like real browsers when &lt;code&gt;{enter}&lt;/code&gt; is used.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; &lt;code&gt;{enter}&lt;/code&gt; 를 사용하면 .type () 은 실제 브라우저와 똑같이 변경 이벤트를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="ccc64c23bd035e413fe7669d3624372a379a2c4b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; now follows all of the spec in regards to &lt;code&gt;preventingDefault&lt;/code&gt; on any event that would insert a character such as &lt;code&gt;keydown&lt;/code&gt;, &lt;code&gt;keypress&lt;/code&gt;, &lt;code&gt;textInput&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 이제 &lt;code&gt;keydown&lt;/code&gt; , &lt;code&gt;keypress&lt;/code&gt; , &lt;code&gt;textInput&lt;/code&gt; 과 같은 문자를 삽입하는 모든 이벤트에서 preventDefault를 &lt;code&gt;preventingDefault&lt;/code&gt; 하기 위해 모든 사양을 따릅니다.</target>
        </trans-unit>
        <trans-unit id="4465eec83b732117308e2432a39abdf4a46c4afd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; now implements all DOM events to simulate every aspect of typing on a real keyboard.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 이제 모든 DOM 이벤트를 구현하여 실제 키보드 입력의 모든 측면을 시뮬레이션합니다.</target>
        </trans-unit>
        <trans-unit id="2149b112905af41d2621b46d23429db5172a3edc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; now inserts a small delay &lt;code&gt;10ms&lt;/code&gt; between each keystroke to simulate a real user typing.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 은 각 키 입력 사이에 &lt;code&gt;10ms&lt;/code&gt; 의 작은 지연 시간을 삽입하여 실제 사용자 입력을 시뮬레이션합니다.</target>
        </trans-unit>
        <trans-unit id="3b173bf260e31e77f73d55871ac67e66107b6176" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; now outputs &amp;ldquo;Key Events Table&amp;rdquo; which is a &lt;code&gt;console.table&lt;/code&gt; of every key typed, the &lt;code&gt;charCode&lt;/code&gt;, all vents that fired, and whether any were &lt;code&gt;preventedDefault&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 이제 &quot;Key Events Table&quot;을 출력하는데, 이것은모든 키 타입, &lt;code&gt;charCode&lt;/code&gt; , 실행 된 모든 통풍구, 그리고 &lt;code&gt;preventedDefault&lt;/code&gt; 것이 없는지 여부의 &lt;code&gt;console.table&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7af2eff10d36271faeb35fe770cf6269d0cbbd97" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; now respects the &lt;code&gt;maxlength&lt;/code&gt; attribute and will not type beyond it. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/928&quot;&gt;#928&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 이제 &lt;code&gt;maxlength&lt;/code&gt; 속성을존중하며 그이상으로 입력하지 않습니다. 수정&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/928&quot;&gt; # 928&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="68edfd2a8265c76346c747236f179cc79a7dece5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; now supports the special character sequences &lt;code&gt;{insert}&lt;/code&gt;, &lt;code&gt;{pageup}&lt;/code&gt;, and &lt;code&gt;{pagedown}&lt;/code&gt;. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3845&quot;&gt;#3845&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 이제 특수 문자 시퀀스 &lt;code&gt;{insert}&lt;/code&gt; , &lt;code&gt;{pageup}&lt;/code&gt; 및 &lt;code&gt;{pagedown}&lt;/code&gt; 을 지원 합니다. 주소&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3845&quot;&gt; # 3845&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="445fffd9d180ec0ac4c45ac6b8536507340a9f57" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; now throws on empty strings.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 이제 빈 문자열을 던집니다.</target>
        </trans-unit>
        <trans-unit id="ef22172ede5150eb4afb7578bcd1c657fc74ea61" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; now validates the chars and will throw on anything other than a string or finite number.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 이제 문자의 유효성을 검사하고 문자열 또는 유한 숫자 이외의 것을 던질 것입니다.</target>
        </trans-unit>
        <trans-unit id="8b8f15ba251f625c7b5ed53327aa5fe4da4866a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; now works with &lt;code&gt;contenteditable&lt;/code&gt; attributes.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 은 &lt;code&gt;contenteditable&lt;/code&gt; 속성과 함께 작동합니다.</target>
        </trans-unit>
        <trans-unit id="f5529467261209f7ea55300bd5ddf25a5e5e0cfd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; should now work on inputs regardless of capitalization of &lt;code&gt;type&lt;/code&gt; attribute. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/550&quot;&gt;#550&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 은 이제 &lt;code&gt;type&lt;/code&gt; 속성의 대문자와 상관없이 입력에서 작동합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/550&quot;&gt;# 550&lt;/a&gt; 수정.</target>
        </trans-unit>
        <trans-unit id="b0b20ca50f30daec1301d07fd85495f7bdfb741d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; will fire &lt;code&gt;textInput&lt;/code&gt; and &lt;code&gt;input&lt;/code&gt; events exactly like a real browser. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/7&quot;&gt;#7&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; 은실제 브라우저와 똑같이 &lt;code&gt;textInput&lt;/code&gt; 및 &lt;code&gt;input&lt;/code&gt; 이벤트를 발생시킵니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/7&quot;&gt;# 7&lt;/a&gt; 수정.</target>
        </trans-unit>
        <trans-unit id="184de6295c90a27d5553918bb47f0fd4b4acab45" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/clear&quot;&gt;&lt;code&gt;.clear()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/check&quot;&gt;&lt;code&gt;.check()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/uncheck&quot;&gt;&lt;code&gt;.uncheck()&lt;/code&gt;&lt;/a&gt; now all take &lt;code&gt;{force: true}&lt;/code&gt; options to force the click to happen and skip additional clickable checks.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;../../api/commands/clear&quot;&gt; &lt;code&gt;.clear()&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;../../api/commands/check&quot;&gt; &lt;code&gt;.check()&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;../../api/commands/uncheck&quot;&gt; &lt;code&gt;.uncheck()&lt;/code&gt; &lt;/a&gt; 모두 이제 &lt;code&gt;{force: true}&lt;/code&gt; 옵션을 사용하여 클릭이 발생하고 추가 클릭 가능 검사를 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="e56dfc36da14dbc6e1dcd7359bf26f312a060916" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;cy.type()&lt;/code&gt;&lt;/a&gt; now accepts &lt;code&gt;{home}&lt;/code&gt; and &lt;code&gt;{end}&lt;/code&gt; special character sequences to move the cursor to the start or end of a line. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2033&quot;&gt;#2033&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;cy.type()&lt;/code&gt; &lt;/a&gt; 이제 &lt;code&gt;{home}&lt;/code&gt; 및 &lt;code&gt;{end}&lt;/code&gt; 특수 문자 시퀀스를 허용하여 커서를 행의 시작 또는 끝으로 이동합니다. 주소&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2033&quot;&gt; # 2033&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7e38290925ed6a9f47441359a31e91c7d9a66824" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;cy.type()&lt;/code&gt;&lt;/a&gt; now factors in the &lt;code&gt;readonly&lt;/code&gt; property of &lt;code&gt;&amp;lt;input /&amp;gt;&lt;/code&gt; elements, and will wait for this property to be &lt;code&gt;false&lt;/code&gt; before attempting to type. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1246&quot;&gt;#1246&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;cy.type()&lt;/code&gt; &lt;/a&gt; 이제 &lt;code&gt;&amp;lt;input /&amp;gt;&lt;/code&gt; 요소의 &lt;code&gt;readonly&lt;/code&gt; 속성을고려하여 입력 을 시도하기 전에이속성이 &lt;code&gt;false&lt;/code&gt; 가 될 때까지 기다립니다. 수정&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1246&quot;&gt; # 1246&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c86375a00a396bd563e2eaa4d9137f39fd57b613" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/uncheck&quot;&gt;&lt;code&gt;.uncheck()&lt;/code&gt;&lt;/a&gt; - Uncheck checkbox(es).</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/uncheck&quot;&gt; &lt;code&gt;.uncheck()&lt;/code&gt; &lt;/a&gt; -확인란을 선택 취소합니다.</target>
        </trans-unit>
        <trans-unit id="8fd20a8011444e17d76dd6970a71befb2b6e4ee3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/viewport&quot;&gt;&lt;code&gt;cy.viewport()&lt;/code&gt;&lt;/a&gt; can now accept an &lt;code&gt;orientation&lt;/code&gt; when providing a &lt;code&gt;preset&lt;/code&gt;. Valid orientations are &lt;code&gt;landscape&lt;/code&gt; and &lt;code&gt;portrait&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/viewport&quot;&gt; &lt;code&gt;cy.viewport()&lt;/code&gt; &lt;/a&gt; 는 이제 &lt;code&gt;preset&lt;/code&gt; 제공 할 때 &lt;code&gt;orientation&lt;/code&gt; 받아 들일 수 있습니다. 올바른 방향은 &lt;code&gt;landscape&lt;/code&gt; 및 &lt;code&gt;portrait&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c9b7b9b8af9e4fd882cb65b888600dd6a42a5d21" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/viewport&quot;&gt;&lt;code&gt;cy.viewport()&lt;/code&gt;&lt;/a&gt; is a new command which will resize the viewport to a specified width and height. There is ow a default &lt;code&gt;viewport&lt;/code&gt; size of &lt;code&gt;1000x660&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/viewport&quot;&gt; &lt;code&gt;cy.viewport()&lt;/code&gt; &lt;/a&gt; 는 뷰포트의 크기를 지정된 너비와 높이로 조정하는 새로운 명령입니다. 기본 &lt;code&gt;viewport&lt;/code&gt; 크기는 &lt;code&gt;1000x660&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="62894d281bcbe7821fef4169c40dbd072a32dc9a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/viewport&quot;&gt;&lt;code&gt;cy.viewport()&lt;/code&gt;&lt;/a&gt; is now synchronized with the UI so that it does not resolve until the DOM has re-rendered using the dimensions.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/viewport&quot;&gt; &lt;code&gt;cy.viewport()&lt;/code&gt; &lt;/a&gt; 는 이제 UI와 동기화되어 DOM이 차원을 사용하여 다시 렌더링 할 때까지 해결되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9809ee7adddbd487350a584f872821aba6207114" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/viewport&quot;&gt;&lt;code&gt;cy.viewport()&lt;/code&gt;&lt;/a&gt; resolves if only width or only height changes. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/873&quot;&gt;#873&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/viewport&quot;&gt; &lt;code&gt;cy.viewport()&lt;/code&gt; &lt;/a&gt;너비 만 또는 높이 만 변경되면 cy.viewport ()가 해결됩니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/873&quot;&gt;# 873&lt;/a&gt; 수정.</target>
        </trans-unit>
        <trans-unit id="e649452869b949109d0d7f159eac3be861777e8e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/viewport&quot;&gt;&lt;code&gt;cy.viewport(ipad-2)&lt;/code&gt;&lt;/a&gt; now displays by default in portrait. Landscape orientation is now properly landscape. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/100&quot;&gt;#100&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/viewport&quot;&gt; &lt;code&gt;cy.viewport(ipad-2)&lt;/code&gt; &lt;/a&gt; 는 기본적으로 세로로 표시됩니다. 가로 방향이 이제 올바르게 가로입니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/100&quot;&gt;# 100&lt;/a&gt; 수정.</target>
        </trans-unit>
        <trans-unit id="0dde3a1598f64f40c3d870b6502c69cc43757679" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; are automatically prefixed with this value - avoiding the need to specify them.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt; 는이 값을 자동으로 접두어로 지정하므로 지정할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="237d6205053980b8048b4b76d479e7458b2ecb0c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; now support new options &lt;code&gt;retryOnStatusCodeFailure&lt;/code&gt; and &lt;code&gt;retryOnNetworkFailure&lt;/code&gt; to allow changing Cypress&amp;rsquo;s automatic request retry on status codes and network errors. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4013&quot;&gt;#4013&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/898&quot;&gt;#898&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1013&quot;&gt;#1013&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 및&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt; 이제 새로운 옵션 &lt;code&gt;retryOnStatusCodeFailure&lt;/code&gt; 및 &lt;code&gt;retryOnNetworkFailure&lt;/code&gt; 를지원하여 상태 코드 및 네트워크 오류에 대한 Cypress의 자동 요청 재 시도를 변경할 수 있습니다. 주소&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4013&quot;&gt; # 4013&lt;/a&gt; ,&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/898&quot;&gt; # 898&lt;/a&gt; 및&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1013&quot;&gt; # 1013&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="55fcd42c83b0aa18a53dae29a4c6d2452d9d91e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; expects the page to send &lt;code&gt;text/html&lt;/code&gt; content with a &lt;code&gt;200&lt;/code&gt; status code.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 는 페이지가 &lt;code&gt;200&lt;/code&gt; 상태 코드로 &lt;code&gt;text/html&lt;/code&gt; 컨텐츠를 보낼 것으로 예상합니다.</target>
        </trans-unit>
        <trans-unit id="a7073b70c80aab06a15cbe4d37ab35495d18bd9e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; has been expanded to allow options &lt;code&gt;url&lt;/code&gt;, &lt;code&gt;method&lt;/code&gt;, &lt;code&gt;body&lt;/code&gt;, and &lt;code&gt;headers&lt;/code&gt;. This allows &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; to be called with a &lt;code&gt;POST&lt;/code&gt; method or with headers like &lt;code&gt;Accept-Language&lt;/code&gt; or &lt;code&gt;Authorization&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1500&quot;&gt;#1500&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1904&quot;&gt;#1904&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/908&quot;&gt;#908&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 는 &lt;code&gt;url&lt;/code&gt; , &lt;code&gt;method&lt;/code&gt; , &lt;code&gt;body&lt;/code&gt; 및 &lt;code&gt;headers&lt;/code&gt; 옵션을 허용하도록 확장되었습니다. 이를 통해 &lt;code&gt;POST&lt;/code&gt; 메소드 또는 &lt;code&gt;Accept-Language&lt;/code&gt; 또는 &lt;code&gt;Authorization&lt;/code&gt; 과 같은 헤더로&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 를 호출 할 수 있습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1500&quot;&gt;# 1500&lt;/a&gt; ,&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1904&quot;&gt; # 1904&lt;/a&gt; 및&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/908&quot;&gt; # 908을&lt;/a&gt; 수정합니다.</target>
        </trans-unit>
        <trans-unit id="ce3d12972880b7664bafeb80bff56c6fb93add25" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; has better error messages. Cypress now programmatically determines why a &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; failed and gives you a ridiculously accurate error message. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/138&quot;&gt;#138&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 에는 더 나은 오류 메시지가 있습니다. Cypress는 이제 프로그래밍 방식으로&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 실패한이유를 결정하고 엄청나게 정확한 오류 메시지를 제공합니다. 주소&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/138&quot;&gt; # 138&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7c85374050268a809f3128df4c87787c392b7c41" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; loads a remote page and does not resolve &lt;em&gt;until all of the external resources complete their loading phase&lt;/em&gt;. This may take awhile, so its default timeout is set to &lt;code&gt;60000ms&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 는 원격 페이지를로드하고&lt;em&gt; 모든 외부 자원이로드 단계를 완료 할 때까지&lt;/em&gt; 해결되지 않습니다. 시간이 &lt;code&gt;60000ms&lt;/code&gt; 걸릴 수 있으므로 기본 시간 제한은 60000ms 로 설정되어있습니다.</target>
        </trans-unit>
        <trans-unit id="7da706e7a646b0df1d7ef91658baa307ca2794c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; now accepts &lt;code&gt;{ failOnStatusCode: false }&lt;/code&gt; which enables you to visit pages that respond with a non &lt;code&gt;2xx&lt;/code&gt; status code. This brings it into parity with &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/421&quot;&gt;#421&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/574&quot;&gt;#574&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 이제 &lt;code&gt;{ failOnStatusCode: false }&lt;/code&gt; 를허용하여 &lt;code&gt;2xx&lt;/code&gt; 가 아닌상태 코드로응답하는 페이지를 방문 할 수 있습니다. 이를 통해&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt; 와 패리티가됩니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/421&quot;&gt;# 421&lt;/a&gt; 및&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/574&quot;&gt; # 574를&lt;/a&gt; 수정합니다.</target>
        </trans-unit>
        <trans-unit id="590f356145d26dafd26cac3d66f26d1ae8971dbb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; now accepts &lt;code&gt;{log: false}&lt;/code&gt; to prevent logging out (useful in custom commands).</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 이제로그 아웃을 방지하기 위해 &lt;code&gt;{log: false}&lt;/code&gt; 를허용합니다 (사용자 정의 명령에 유용).</target>
        </trans-unit>
        <trans-unit id="9a7e7834af316c6eeebc754cf36168c1d8cb09a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; now detects a local url. &lt;code&gt;localhost&lt;/code&gt;, &lt;code&gt;0.0.0.0&lt;/code&gt;, &lt;code&gt;127.0.0.1&lt;/code&gt; can omit the &lt;code&gt;http://&lt;/code&gt; protocol.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 이제 로컬 URL을 감지합니다. &lt;code&gt;localhost&lt;/code&gt; , &lt;code&gt;0.0.0.0&lt;/code&gt; , &lt;code&gt;127.0.0.1&lt;/code&gt; 은 &lt;code&gt;http://&lt;/code&gt; 프로토콜을생략 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="10bbb5ad9ebc9198116d3bb63e2618f103adbaff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; now displays redirects and any cookies set.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 이제 리디렉션 및 쿠키 세트를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="f94dead4f46a83a50c91afc1ae201addf296f9cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; now inserts a trailing slash intelligently into the correct &lt;code&gt;path&lt;/code&gt; position (not after query params or hashes).</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 이제쿼리 매개 변수 나 해시 이후가 아니라올바른 &lt;code&gt;path&lt;/code&gt; 위치에지능적으로 후행 슬래시를 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="1e73bee91203c55c83cefad596597b0efe98d8b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; now properly times out when the &lt;code&gt;load&lt;/code&gt; event does not occur within the time out window.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;시간 초과 창에서 &lt;code&gt;load&lt;/code&gt; 이벤트가 발생하지 않으면 cy.visit ()가 이제 올바르게 시간 초과됩니다.</target>
        </trans-unit>
        <trans-unit id="c36ed484dbfba2c476a5a50be161b6254af43825" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; now takes an optional &lt;code&gt;onBeforeLoad&lt;/code&gt; callback option which is invoked when your page begins to ender but prior to its load event.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 이제 선택적인 &lt;code&gt;onBeforeLoad&lt;/code&gt; 콜백 옵션을 사용합니다.이 옵션은 페이지가 끝나기 시작하지만로드 이벤트 이전에 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="a6cd9c6533e915a9f6855ec53098ac0f6bdd65e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; now throws a custom error message when it times out (instead of an incorrect / confusing default Mocha timeout message).</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 는 시간이 초과 될 때 (정확하지 않거나 혼란스러운 기본 Mocha 시간 초과 메시지 대신) 사용자 지정 오류 메시지를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="e8d6b42e16fb02096e4e1ca7651ab819974003df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; now throws when url argument isn&amp;rsquo;t a string.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;URL 인수가 문자열이 아닌 경우 cy.visit () 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="5c35ef9ae3b6d55fc385193aee423bfe37c51b3a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; urls with domain-like segments (which weren&amp;rsquo;t actually the domain) no longer cause Cypress to think you&amp;rsquo;re trying to navigate to a different superdomain. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/255&quot;&gt;#255&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;도메인과 유사한 세그먼트 (실제로는 도메인이 아님 )를 가진 cy.visit () URL로 인해 더 이상 Cypress가 다른 수퍼 도메인으로 이동한다고 생각하지 않습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/255&quot;&gt;# 255&lt;/a&gt; 수정.</target>
        </trans-unit>
        <trans-unit id="c28a2474eb68a8f6de3be86ff26351790776af4c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; will no longer log 2 failed commands on error.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; 는 더 이상 오류가 발생한 2 개의 실패한 명령을 기록하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="30a5aaf7ea5f92aad4796c10b306416e833482a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt; actually uses 2 different timeouts. When waiting for a &lt;a href=&quot;variables-and-aliases#Routes&quot;&gt;routing alias&lt;/a&gt;, we wait for a matching request for &lt;code&gt;5000ms&lt;/code&gt;, and then additionally for the server&amp;rsquo;s response for &lt;code&gt;30000ms&lt;/code&gt;. We expect your application to make a matching request quickly, but we expect the server&amp;rsquo;s response to potentially take much longer.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/wait&quot;&gt; &lt;code&gt;cy.wait()&lt;/code&gt; &lt;/a&gt; 실제로 2 개의 다른 타임 아웃을 사용합니다. A에 대한 대기 때&lt;a href=&quot;variables-and-aliases#Routes&quot;&gt; 라우팅 별칭&lt;/a&gt; , 우리에 대한 일치하는 요청을 기다리는 &lt;code&gt;5000ms&lt;/code&gt; 에 대한 서버의 응답을 다음 추가 및 &lt;code&gt;30000ms&lt;/code&gt; . 귀하의 응용 프로그램이 신속하게 일치하는 요청을 할 것으로 예상하지만 서버의 응답 시간이 훨씬 오래 걸릴 것으로 예상합니다.</target>
        </trans-unit>
        <trans-unit id="a34371a23ed40ccf455322f033ced846d988293f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt; can now accept an array of route aliases which will wait until all have completed. This array of resolved XHRs will become the next subject.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/wait&quot;&gt; &lt;code&gt;cy.wait()&lt;/code&gt; &lt;/a&gt; 는 이제 모든 경로가 완료 될 때까지 기다리는 라우트 별명 배열을 승인 할 수 있습니다. 이 해결 된 XHR 배열은 다음 주제가 될 것입니다.</target>
        </trans-unit>
        <trans-unit id="f8dba14e12ff7bb4adfa13226055e35e303d3194" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt; has been upgraded to now use two separate &lt;code&gt;timeout&lt;/code&gt; values. In previous versions &lt;a href=&quot;../../api/commands/wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt; used the &lt;code&gt;commandTimeout&lt;/code&gt; and would automatically time out if the XHR did not achieve a response in that time frame. Now &lt;a href=&quot;../../api/commands/wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt; will go through two independent timeout phases. At first &lt;a href=&quot;../../api/commands/wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt; will wait for an XHR to be requested which matches its route. It will wait up to the value configured with &lt;code&gt;requestTimeout&lt;/code&gt; (default 5000ms). After it sees a matching request it will then go into &lt;code&gt;response&lt;/code&gt; waiting mode. It will wait up to the value configured with &lt;code&gt;responseTimeout&lt;/code&gt; (default 20000ms). When &lt;a href=&quot;../../api/commands/wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt; fails you now receive a much better error message indicating exactly which phase failed. Whether a request was never sent out, or whether it timed out waiting for a response. This gives you the best of both worlds and prevents situations where Cypress was timing out on slow servers. By creating new configuration values: &lt;code&gt;requestTimeout&lt;/code&gt; and &lt;code&gt;responseTimeout&lt;/code&gt; you can now directly control this behavior without affecting other regular commands.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/wait&quot;&gt; &lt;code&gt;cy.wait()&lt;/code&gt; &lt;/a&gt; 는 이제 두 개의 별도의 &lt;code&gt;timeout&lt;/code&gt; 값을사용하도록 업그레이드되었습니다. 이전 버전에서&lt;a href=&quot;../../api/commands/wait&quot;&gt; &lt;code&gt;cy.wait()&lt;/code&gt; &lt;/a&gt; 는 &lt;code&gt;commandTimeout&lt;/code&gt; 을 사용했으며 XHR이 해당 시간 프레임에서 응답을 얻지 못하면 자동으로 시간 초과됩니다. 이제&lt;a href=&quot;../../api/commands/wait&quot;&gt; &lt;code&gt;cy.wait()&lt;/code&gt; &lt;/a&gt; 는 두 개의 독립적 인 타임 아웃 단계를 거 칩니다 . 우선&lt;a href=&quot;../../api/commands/wait&quot;&gt; &lt;code&gt;cy.wait()&lt;/code&gt; &lt;/a&gt; 는 XHR이 요청 될 때까지 기다립니다. &lt;code&gt;requestTimeout&lt;/code&gt; 으로 구성된 값(기본값 5000ms)까지 대기합니다. 일치하는 요청을 확인한 후 &lt;code&gt;response&lt;/code&gt; 대기 모드로 전환됩니다. &lt;code&gt;responseTimeout&lt;/code&gt; 으로 구성된 값(기본값 20000ms)까지 대기합니다.&lt;a href=&quot;../../api/commands/wait&quot;&gt; &lt;code&gt;cy.wait()&lt;/code&gt; &lt;/a&gt; 때이제 실패한 단계를 정확하게 나타내는 훨씬 더 나은 오류 메시지가 나타납니다. 요청이 전송되지 않았는지 또는 응답 대기 시간이 초과되었는지 여부 이는 두 가지 이점을 모두 제공하며 서버 속도가 느린 서버에서 Cypress가 시간 초과되는 상황을 방지합니다. 새로운 구성 값 &lt;code&gt;requestTimeout&lt;/code&gt; 및 &lt;code&gt;responseTimeout&lt;/code&gt; 을 작성 하면 다른 일반 명령에 영향을주지 않고이 동작을 직접 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6857223101da6105ec70a6fd77366f903241ca08" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt; now accepts a separate timeout option for &lt;code&gt;requestTimeout&lt;/code&gt; and &lt;code&gt;responseTimeout&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2446&quot;&gt;#2446&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/wait&quot;&gt; &lt;code&gt;cy.wait()&lt;/code&gt; &lt;/a&gt; 이제 &lt;code&gt;requestTimeout&lt;/code&gt; 및 &lt;code&gt;responseTimeout&lt;/code&gt; 에 대해 별도의 시간 초과 옵션을 허용합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2446&quot;&gt;# 2446&lt;/a&gt; 수정.</target>
        </trans-unit>
        <trans-unit id="2c8309f86915b33bea84e03fa9c07131241aae31" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt; now accepts an alias property called &lt;code&gt;request&lt;/code&gt;. Example: &lt;code&gt;cy.wait('@getUsers.request')&lt;/code&gt; which ill resolve once the XHR is initially requested, before it is responded to. This allows you to test things when a request is in flight.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/wait&quot;&gt; &lt;code&gt;cy.wait()&lt;/code&gt; &lt;/a&gt; 이제 &lt;code&gt;request&lt;/code&gt; 라는 별명 특성을 승인합니다. 예 : &lt;code&gt;cy.wait('@getUsers.request')&lt;/code&gt; XHR이 처음 요청되면 응답하기 전에 해결되지 않습니다. 이를 통해 요청이 비행 중일 때 테스트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b2dbbeef1aafee19a98d278df8b6cf177d6b66bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt; now logs out when its referenced aliases, and its &lt;code&gt;onConsole&lt;/code&gt; output displays the XHR return values.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/wait&quot;&gt; &lt;code&gt;cy.wait()&lt;/code&gt; &lt;/a&gt; 이제 참조 된 별명이되면 로그 아웃되고 &lt;code&gt;onConsole&lt;/code&gt; 출력에 XHR 리턴 값이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="101fd569a6c56b1285751dcdb530f7dfc95e9ca3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/window&quot;&gt;&lt;code&gt;cy.window()&lt;/code&gt;&lt;/a&gt; now logs out to the &lt;code&gt;Command Log&lt;/code&gt; and additionally verifies upcoming assertions.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/window&quot;&gt; &lt;code&gt;cy.window()&lt;/code&gt; &lt;/a&gt; 이제 &lt;code&gt;Command Log&lt;/code&gt; 로그 아웃하고다음 어설 션을 추가로 확인합니다.</target>
        </trans-unit>
        <trans-unit id="c3d2ed44b43be5859724e50c7b178cbcc75f62d8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/within&quot;&gt;&lt;code&gt;.within()&lt;/code&gt;&lt;/a&gt; can now be silenced with &lt;code&gt;{log: false}&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/within&quot;&gt; &lt;code&gt;.within()&lt;/code&gt; &lt;/a&gt; 은 이제 &lt;code&gt;{log: false}&lt;/code&gt; 로 침묵 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b3cad734ce833c8accce807b0032853318a5de44" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/wrap&quot;&gt;&lt;code&gt;cy.wrap()&lt;/code&gt;&lt;/a&gt; no longer throws an error when a non-jQuery wrapped DOM element is passed in as an argument. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3549&quot;&gt;#3549&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/wrap&quot;&gt; &lt;code&gt;cy.wrap()&lt;/code&gt; &lt;/a&gt;비 jQuery 랩핑 DOM 요소가 인수로 전달 될 때 cy.wrap ()에서 더 이상 오류가 발생하지 않습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3549&quot;&gt;# 3549&lt;/a&gt; 수정.</target>
        </trans-unit>
        <trans-unit id="2b88cccf0332d4c2a2e0ba84288c1327af3f19bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/writefile&quot;&gt;&lt;code&gt;cy.writeFile()&lt;/code&gt;&lt;/a&gt; can now accept an empty string. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/206&quot;&gt;#206&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/writefile&quot;&gt; &lt;code&gt;cy.writeFile()&lt;/code&gt; &lt;/a&gt; 은 이제 빈 문자열을 받아 들일 수 있습니다. 수정&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/206&quot;&gt; # 206&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1bef9fe0cd2d605aaf49d8fa84647c9b43d57b28" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/commands/writefile&quot;&gt;&lt;code&gt;cy.writeFile()&lt;/code&gt;&lt;/a&gt; no longer errors in TypeScript files when passing an &lt;code&gt;options&lt;/code&gt; object as its third argument. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4461&quot;&gt;#4461&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/writefile&quot;&gt; &lt;code&gt;cy.writeFile()&lt;/code&gt; &lt;/a&gt; &lt;code&gt;options&lt;/code&gt; 객체를 세 번째 인수로전달할 때 TypeScript 파일에서 cy.writeFile () 오류가 더 이상 발생하지 않습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4461&quot;&gt;# 4461&lt;/a&gt; 수정.</target>
        </trans-unit>
        <trans-unit id="4b73aae70b0874f9266f4cc17024546819b796b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/cypress-api/cookies#Debug&quot;&gt;&lt;code&gt;Cypress.Cookies.debug()&lt;/code&gt;&lt;/a&gt; has been temporarily disabled and will be re-enabled later.</source>
          <target state="translated">&lt;a href=&quot;../../api/cypress-api/cookies#Debug&quot;&gt; &lt;code&gt;Cypress.Cookies.debug()&lt;/code&gt; &lt;/a&gt; 가 일시적으로 비활성화되었으며 나중에 다시 활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="97f9e14b3127213aea20c7ea30fbda2674c4d810" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/cypress-api/cookies#Debug&quot;&gt;&lt;code&gt;Cypress.Cookies.debug()&lt;/code&gt;&lt;/a&gt; now works again. Additionally it provides much more feedback than it used to.</source>
          <target state="translated">&lt;a href=&quot;../../api/cypress-api/cookies#Debug&quot;&gt; &lt;code&gt;Cypress.Cookies.debug()&lt;/code&gt; &lt;/a&gt; 가 다시 작동합니다. 또한 이전보다 훨씬 더 많은 피드백을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="20e0c054b3929eb7748d646334a937b78591fd78" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/cypress-api/cookies#Debug&quot;&gt;&lt;code&gt;Cypress.Cookies.debug(true, {verbose: false})&lt;/code&gt;&lt;/a&gt; option has been added to remove verbose cookie object logging.</source>
          <target state="translated">&lt;a href=&quot;../../api/cypress-api/cookies#Debug&quot;&gt; &lt;code&gt;Cypress.Cookies.debug(true, {verbose: false})&lt;/code&gt; &lt;/a&gt;상세 쿠키 개체 로깅을 제거하기 위해 Cypress.Cookies.debug (true, {verbose : false}) 옵션이 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="e5232542b12f5bc9ce584c06083dde942b9bdfc7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/cypress-api/cypress-log&quot;&gt;&lt;code&gt;Cypress.log()&lt;/code&gt;&lt;/a&gt; no longer throws when called before any other Cypress commands. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3658&quot;&gt;#3658&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/cypress-api/cypress-log&quot;&gt; &lt;code&gt;Cypress.log()&lt;/code&gt; &lt;/a&gt; 는 다른 Cypress 명령 전에 호출 될 때 더 이상 발생하지 않습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3658&quot;&gt;# 3658&lt;/a&gt; 수정.</target>
        </trans-unit>
        <trans-unit id="67daa5ca72e2314227002be4f6082a30a197ee87" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/cypress-api/cypress-log&quot;&gt;&lt;code&gt;Cypress.log()&lt;/code&gt;&lt;/a&gt; now throws an error when not properly passed an object as its argument. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3658&quot;&gt;#3658&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/cypress-api/cypress-log&quot;&gt; &lt;code&gt;Cypress.log()&lt;/code&gt; &lt;/a&gt; 이제 객체를 인수로 올바르게 전달하지 않으면 오류를 발생시킵니다. 주소&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3658&quot;&gt; # 3658&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0a99e90050f1391e100f219ea83e6ca2b886eb8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/cypress-api/cypress-server&quot;&gt;&lt;code&gt;Cypress.Server.defaults()&lt;/code&gt;&lt;/a&gt; now accepts a &lt;code&gt;urlMatchingOptions&lt;/code&gt; option for passing options to &lt;a href=&quot;https://github.com/isaacs/minimatch&quot;&gt;minimatch&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/cypress-api/cypress-server&quot;&gt; &lt;code&gt;Cypress.Server.defaults()&lt;/code&gt; &lt;/a&gt; 이제옵션을&lt;a href=&quot;https://github.com/isaacs/minimatch&quot;&gt; minimatch&lt;/a&gt; 에 전달하기위한 &lt;code&gt;urlMatchingOptions&lt;/code&gt; 옵션을허용합니다.</target>
        </trans-unit>
        <trans-unit id="99e2027a69c884d8a60e16b07994e1dd420fb798" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/utilities/%24&quot;&gt;&lt;code&gt;Cypress.$&lt;/code&gt;&lt;/a&gt; (jQuery)</source>
          <target state="translated">&lt;a href=&quot;../../api/utilities/%24&quot;&gt; &lt;code&gt;Cypress.$&lt;/code&gt; &lt;/a&gt; (jQuery)</target>
        </trans-unit>
        <trans-unit id="3e1a97c09b50c6c444b431d429f5e124f12458f9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/utilities/_&quot;&gt;&lt;code&gt;Cypress._&lt;/code&gt;&lt;/a&gt; (lodash)</source>
          <target state="translated">&lt;a href=&quot;../../api/utilities/_&quot;&gt; &lt;code&gt;Cypress._&lt;/code&gt; &lt;/a&gt; (lodash)</target>
        </trans-unit>
        <trans-unit id="ac75f8bea5f1d8e50daf1b7fb2c7c18daab541f4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/utilities/_&quot;&gt;&lt;code&gt;Cypress._&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/utilities/%24&quot;&gt;&lt;code&gt;Cypress.$&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/utilities/promise&quot;&gt;&lt;code&gt;Cypress.Promise&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/utilities/blob&quot;&gt;&lt;code&gt;Cypress.Blob&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/utilities/moment&quot;&gt;&lt;code&gt;Cypress.moment&lt;/code&gt;&lt;/a&gt; utilities have been moved off of &lt;code&gt;cy&lt;/code&gt; and are now attached to &lt;code&gt;Cypress&lt;/code&gt;. This is much more consistent with how the &lt;code&gt;cy&lt;/code&gt; and &lt;code&gt;Cypress&lt;/code&gt; APIs work. You can continue to use these objects off of &lt;code&gt;cy&lt;/code&gt; but this has been deprecated and you will see a warning message.</source>
          <target state="translated">&lt;a href=&quot;../../api/utilities/_&quot;&gt; &lt;code&gt;Cypress._&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;../../api/utilities/%24&quot;&gt; &lt;code&gt;Cypress.$&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;../../api/utilities/promise&quot;&gt; &lt;code&gt;Cypress.Promise&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;../../api/utilities/blob&quot;&gt; &lt;code&gt;Cypress.Blob&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;../../api/utilities/moment&quot;&gt; &lt;code&gt;Cypress.moment&lt;/code&gt; &lt;/a&gt; 유틸리티가 &lt;code&gt;cy&lt;/code&gt; 에서 제외 되었으며 이제 &lt;code&gt;Cypress&lt;/code&gt; 에 연결되었습니다. 이는 &lt;code&gt;cy&lt;/code&gt; 및 &lt;code&gt;Cypress&lt;/code&gt; API 작동방식과 훨씬 일치합니다. &lt;code&gt;cy&lt;/code&gt; 에서이 객체를 계속 사용할 수있지만 더 이상 사용되지 않으며 경고 메시지가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="88e6668a047ba5af90fe50025205786bb89ecdc4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/utilities/blob&quot;&gt;&lt;code&gt;Cypress.Blob&lt;/code&gt;&lt;/a&gt; (Blob utils)</source>
          <target state="translated">&lt;a href=&quot;../../api/utilities/blob&quot;&gt; &lt;code&gt;Cypress.Blob&lt;/code&gt; &lt;/a&gt; (Blob 유틸리티)</target>
        </trans-unit>
        <trans-unit id="8bc73df702f072c027488809118ac08ab61a406b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/utilities/minimatch&quot;&gt;&lt;code&gt;Cypress.minimatch&lt;/code&gt;&lt;/a&gt; (minimatch.js)</source>
          <target state="translated">&lt;a href=&quot;../../api/utilities/minimatch&quot;&gt; &lt;code&gt;Cypress.minimatch&lt;/code&gt; &lt;/a&gt; (minimatch.js)</target>
        </trans-unit>
        <trans-unit id="c79f41c69c8c518a603619e6c478eb66ed1aa042" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/utilities/minimatch&quot;&gt;&lt;code&gt;Cypress.minimatch&lt;/code&gt;&lt;/a&gt; is now exposed so you can easily test globbing patterns.</source>
          <target state="translated">&lt;a href=&quot;../../api/utilities/minimatch&quot;&gt; &lt;code&gt;Cypress.minimatch&lt;/code&gt; &lt;/a&gt; 가 노출되어 글 로빙 패턴을 쉽게 테스트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9189f82f7cfe81130ca1b642dfb8ece7c601eb99" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/utilities/moment&quot;&gt;&lt;code&gt;Cypress.moment&lt;/code&gt;&lt;/a&gt; (moment.js)</source>
          <target state="translated">&lt;a href=&quot;../../api/utilities/moment&quot;&gt; &lt;code&gt;Cypress.moment&lt;/code&gt; &lt;/a&gt; (moment.js)</target>
        </trans-unit>
        <trans-unit id="78504fcade245f305c6059739e6910d9f01b796a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../api/utilities/promise&quot;&gt;&lt;code&gt;Cypress.Promise&lt;/code&gt;&lt;/a&gt; (Bluebird)</source>
          <target state="translated">&lt;a href=&quot;../../api/utilities/promise&quot;&gt; &lt;code&gt;Cypress.Promise&lt;/code&gt; &lt;/a&gt; (블루 버드)</target>
        </trans-unit>
        <trans-unit id="bc9006f10735d7ede92ba31e83d5bf53b9f9358a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../guides/core-concepts/variables-and-aliases#Aliases&quot;&gt;You can read more about aliasing objects and elements in our Core Concept Guide&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../guides/core-concepts/variables-and-aliases#Aliases&quot;&gt;핵심 개념 안내서에서 객체 및 요소 앨리어싱에 대한 자세한 내용을 확인할 수 있습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0100c106ef346f32c24c888e207080c2676ebc42" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../guides/guides/network-requests#Waiting&quot;&gt;You can read more about aliasing routes in our Core Concept Guide&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../guides/guides/network-requests#Waiting&quot;&gt;핵심 개념 안내서에서 앨리어싱 경로에 대한 자세한 내용을 확인할 수 있습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="76c61943625e3a522ca5a717bc7b6507af19fce1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../guides/references/configuration#Timeouts&quot;&gt;&lt;code&gt;requestTimeout&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../guides/references/configuration#Timeouts&quot;&gt;&lt;code&gt;responseTimeout&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../guides/references/configuration#Timeouts&quot;&gt; &lt;code&gt;requestTimeout&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;../../guides/references/configuration#Timeouts&quot;&gt; &lt;code&gt;responseTimeout&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="40407d03c6b051ad316546a85c96e58e3da1eb26" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../core-concepts/interacting-with-elements#Actionability&quot;&gt;The checks used to determine an element&amp;rsquo;s actionability&lt;/a&gt; are now run synchronously. This solves some circumstances where the element could have moved or otherwise change between the checks. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/570&quot;&gt;#570&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../core-concepts/interacting-with-elements#Actionability&quot;&gt;요소의 실행 가능성을 결정하는 데 사용되는 검사&lt;/a&gt; 가 이제 동 기적으로 실행됩니다. 이것은 요소가 이동하거나 수표간에 변경 될 수있는 일부 상황을 해결합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/570&quot;&gt;# 570&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="2e255a80c40814bae4d4d19dd3eaa5513134590b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../core-concepts/introduction-to-cypress&quot;&gt;Introduction to Cypress&lt;/a&gt; explains how Cypress &lt;em&gt;really&lt;/em&gt; works</source>
          <target state="translated">&lt;a href=&quot;../core-concepts/introduction-to-cypress&quot;&gt;Cypress 소개&lt;/a&gt; 는 Cypress의 &lt;em&gt;실제&lt;/em&gt; 작동 방식을 설명 합니다</target>
        </trans-unit>
        <trans-unit id="6fba2558acde534b7821972bf7382a3f96bb6c3e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../core-concepts/introduction-to-cypress#Timeouts&quot;&gt;Timeouts are a core concept&lt;/a&gt; you should understand well. The default values listed here are meaningful.</source>
          <target state="translated">&lt;a href=&quot;../core-concepts/introduction-to-cypress#Timeouts&quot;&gt;타임 아웃은&lt;/a&gt; 잘 이해해야 할 핵심 개념 입니다. 여기에 나열된 기본값은 의미가 있습니다.</target>
        </trans-unit>
        <trans-unit id="a5c7df520faa00701fc3ca8bfece54fecee7ca17" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../guides/command-line&quot;&gt;&lt;code&gt;cypress install&lt;/code&gt;&lt;/a&gt;&lt;code&gt;-d&lt;/code&gt; option. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/389&quot;&gt;#389&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../guides/command-line&quot;&gt; &lt;code&gt;cypress install&lt;/code&gt; &lt;/a&gt; &lt;code&gt;-d&lt;/code&gt; 옵션. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/389&quot;&gt;# 389&lt;/a&gt; 수정.</target>
        </trans-unit>
        <trans-unit id="c39a33a0168693d6661836bff53e944d22d6bc15" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../guides/command-line&quot;&gt;Command Line&lt;/a&gt; for running all your tests outside of interactive mode</source>
          <target state="translated">&lt;a href=&quot;../guides/command-line&quot;&gt;&lt;/a&gt;대화식 모드 외부에서 모든 테스트를 실행하기위한 명령 줄</target>
        </trans-unit>
        <trans-unit id="89e2405bbac3348f8019e6730e75bd35da95c233" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../guides/command-line&quot;&gt;Documentation to CLI&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../guides/command-line&quot;&gt;CLI에 대한 설명서&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="75a948551022a2d5a14a6b15cc6ce923fdfe1b0d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../guides/command-line#cypress-open&quot;&gt;&lt;code&gt;cypress open&lt;/code&gt;&lt;/a&gt; no longer opens a detached process by default. Instead &lt;code&gt;cypress open&lt;/code&gt; now accepts a new flag &lt;code&gt;--detached&lt;/code&gt;, which replicates this behavior. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/531&quot;&gt;#531&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../guides/command-line#cypress-open&quot;&gt; &lt;code&gt;cypress open&lt;/code&gt; 은&lt;/a&gt; 더 이상 기본적으로 분리 된 프로세스를 열지 않습니다. 대신 &lt;code&gt;cypress open&lt;/code&gt; 은 &lt;code&gt;--detached&lt;/code&gt; 동작을 복제하는 새로운 플래그 --detached를 허용합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/531&quot;&gt;# 531&lt;/a&gt; 수정.</target>
        </trans-unit>
        <trans-unit id="be79056c9e37549c323f05adccdb35173f2821b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt;&lt;code&gt;cypress run&lt;/code&gt;&lt;/a&gt; no longer prompts the user for any kind of interaction, thus enabling you to use this in CI if you choose to do so. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/294&quot;&gt;#294&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt; &lt;code&gt;cypress run&lt;/code&gt; 은&lt;/a&gt; 더 이상 사용자에게 모든 종류의 상호 작용을 요구하지 않으므로 원하는 경우 CI에서이를 사용할 수 있습니다. 수정&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/294&quot;&gt; # 294&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4d69a4375757313b0baafefe9e523416be17dae9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt;&lt;code&gt;cypress run&lt;/code&gt;&lt;/a&gt; no longer requires being logged in.</source>
          <target state="translated">&lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt; &lt;code&gt;cypress run&lt;/code&gt; 은&lt;/a&gt; 더 이상 로그인 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="c427ee9ec54b3b8c971086675351f46cb1d59031" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt;&lt;code&gt;cypress run&lt;/code&gt;&lt;/a&gt; now behaves likes &lt;code&gt;cypress ci&lt;/code&gt; previously did and downloads + installs Cypress if it&amp;rsquo;s not already installed.</source>
          <target state="translated">&lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt; &lt;code&gt;cypress run&lt;/code&gt; 은&lt;/a&gt; 이제 &lt;code&gt;cypress ci&lt;/code&gt; 가 이전에했던 것처럼작동하며Cypress가 아직 설치되지 않은 경우 다운로드하고 설치합니다.</target>
        </trans-unit>
        <trans-unit id="9be7bf4066dee82c979929058078837af349dd34" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt;&lt;code&gt;cypress run&lt;/code&gt;&lt;/a&gt; now creates a new browser profile per run per browser, but keeps the same browser profile for interactive mode with &lt;a href=&quot;../guides/command-line#cypress-open&quot;&gt;&lt;code&gt;cypress open&lt;/code&gt;&lt;/a&gt;. This means you can run Cypress locally over multiple processes and the browser profiles will not conflict with each other. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1566&quot;&gt;#1566&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt; &lt;code&gt;cypress run&lt;/code&gt; 은&lt;/a&gt; 이제 브라우저 당 실행마다 새 브라우저 프로파일을 작성하지만&lt;a href=&quot;../guides/command-line#cypress-open&quot;&gt; &lt;code&gt;cypress open&lt;/code&gt; 을 사용&lt;/a&gt; 하여 대화식 모드에 대해 동일한 브라우저 프로파일을 유지합니다. 즉, 여러 프로세스에서 로컬로 Cypress를 실행할 수 있으며 브라우저 프로파일이 서로 충돌하지 않습니다. 수정&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1566&quot;&gt; # 1566&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3e59c72517549196e084587ec9a4191cc059cdcf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt;&lt;code&gt;cypress run&lt;/code&gt;&lt;/a&gt; now exits with the number of test failures instead of always exiting with 0. This matches the same way &lt;code&gt;cypress ci&lt;/code&gt; works. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/167&quot;&gt;#167&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt; &lt;code&gt;cypress run&lt;/code&gt; 은&lt;/a&gt; 이제 항상 0으로 종료하는 대신 여러 테스트 실패로 종료됩니다. 이는 &lt;code&gt;cypress ci&lt;/code&gt; 가 작동하는방식과 동일합니다. 수정&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/167&quot;&gt; # 167&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="35c5d6763317ad3508cf0af322ce474644839167" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt;&lt;code&gt;cypress run&lt;/code&gt;&lt;/a&gt; will now download and install Cypress if it is not already installed.</source>
          <target state="translated">&lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt; &lt;code&gt;cypress run&lt;/code&gt; &lt;/a&gt; 은 Cypress가 아직 설치되지 않은 경우 다운로드하여 설치합니다.</target>
        </trans-unit>
        <trans-unit id="5d342e1f19288aaa5c25adeeffe1aff737692187" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../guides/continuous-integration&quot;&gt;Continuous Integration&lt;/a&gt; for running Cypress in CI</source>
          <target state="translated">&lt;a href=&quot;../guides/continuous-integration&quot;&gt;&lt;/a&gt;CI에서 Cypress를 실행하기위한 지속적인 통합</target>
        </trans-unit>
        <trans-unit id="7507dae31858d11a8c5354a7318349506cb2d8f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../guides/environment-variables&quot;&gt;Environment Variables&lt;/a&gt; that match any configuration keys (such as &lt;code&gt;pageLoadTimeout&lt;/code&gt; or &lt;code&gt;watchForFileChanges&lt;/code&gt;) now override their values. So, if you &lt;code&gt;export CYPRESS_WATCH_FOR_FILE_CHANGES=false&lt;/code&gt; it will turn off this configuration option. Also note that we&amp;rsquo;ll automatically normalize environment keys so: &lt;code&gt;CYPRESS_pageLoadTimeout=100000&lt;/code&gt; and &lt;code&gt;CYPRESS_PAGE_LOAD_TIMEOUT=100000&lt;/code&gt; will both be correctly handled. We&amp;rsquo;ll also coerce values into &lt;code&gt;Boolean&lt;/code&gt; or &lt;code&gt;Number&lt;/code&gt; correctly.</source>
          <target state="translated">&lt;a href=&quot;../guides/environment-variables&quot;&gt;&lt;/a&gt;구성 키 (예 : &lt;code&gt;pageLoadTimeout&lt;/code&gt; 또는 &lt;code&gt;watchForFileChanges&lt;/code&gt; ) 와 일치하는 환경 변수 는 이제 해당 값을 대체합니다. 따라서 &lt;code&gt;export CYPRESS_WATCH_FOR_FILE_CHANGES=false&lt;/code&gt; 를 내 보내면 이 구성 옵션이 해제됩니다. 또한 환경 키를 자동으로 정규화하므로 &lt;code&gt;CYPRESS_pageLoadTimeout=100000&lt;/code&gt; 및 &lt;code&gt;CYPRESS_PAGE_LOAD_TIMEOUT=100000&lt;/code&gt; 이 모두 올바르게 처리됩니다. 또한 값을 &lt;code&gt;Boolean&lt;/code&gt; 또는 &lt;code&gt;Number&lt;/code&gt; 올바르게 강제 합니다.</target>
        </trans-unit>
        <trans-unit id="f5f4cee41b2973763d39781401de28e946551d42" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;assertions#Chai-jQuery&quot;&gt;&lt;code&gt;chai-jQuery&lt;/code&gt; assertions&lt;/a&gt; have improved error messaging, and have had their internal double assertions removed, and can now be made on raw DOM objects. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/605&quot;&gt;#605&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;assertions#Chai-jQuery&quot;&gt; &lt;code&gt;chai-jQuery&lt;/code&gt; 어설 션&lt;/a&gt; 은 오류 메시지를 개선했으며 내부 이중 어설 션을 제거했으며 이제 원시 DOM 오브젝트에서 작성할 수 있습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/605&quot;&gt;# 605&lt;/a&gt; 수정.</target>
        </trans-unit>
        <trans-unit id="04af85999a4167740ce3ad12d381ca3eb2c94234" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;assertions#Chai-jQuery&quot;&gt;&lt;code&gt;chai-jQuery&lt;/code&gt; assertions&lt;/a&gt; no longer change the subject when using &lt;code&gt;prop&lt;/code&gt;, &lt;code&gt;attr&lt;/code&gt;, and &lt;code&gt;css&lt;/code&gt; with the &lt;strong&gt;3rd&lt;/strong&gt; argument (which acts as equality check). Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/605&quot;&gt;#605&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;assertions#Chai-jQuery&quot;&gt; &lt;code&gt;chai-jQuery&lt;/code&gt; 어설 션 &lt;/a&gt; &lt;code&gt;prop&lt;/code&gt; , &lt;code&gt;attr&lt;/code&gt; 및 &lt;code&gt;css&lt;/code&gt; 를&lt;strong&gt; 세 번째&lt;/strong&gt; 인수 (균등 검사로 작동)와 함께사용할 때 더 이상 주제를 변경하지 않습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/605&quot;&gt;# 605&lt;/a&gt; 수정.</target>
        </trans-unit>
        <trans-unit id="71ebf32555b27736cfe68678c10d717e9127b6ed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;assertions#Chai-jQuery&quot;&gt;&lt;code&gt;chai-jQuery&lt;/code&gt; assertions&lt;/a&gt; now throw a nice error message when you&amp;rsquo;re asserting on a non DOM object. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/604&quot;&gt;#604&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;assertions#Chai-jQuery&quot;&gt; &lt;code&gt;chai-jQuery&lt;/code&gt; 어설 션은&lt;/a&gt; 이제 DOM이 아닌 오브젝트를 어설 션 할 때 멋진 오류 메시지를 표시합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/604&quot;&gt;# 604&lt;/a&gt; 수정.</target>
        </trans-unit>
        <trans-unit id="21d813add034b5795eb78237c775e448e82839ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;clock&quot;&gt;&lt;code&gt;cy.clock()&lt;/code&gt;&lt;/a&gt; must be called before &lt;code&gt;cy.tick()&lt;/code&gt; in order to override native time functions first.</source>
          <target state="translated">&lt;a href=&quot;clock&quot;&gt; &lt;code&gt;cy.clock()&lt;/code&gt; &lt;/a&gt; 전에 호출해야합니다 &lt;code&gt;cy.tick()&lt;/code&gt; 첫 번째 기본 시간 함수를 오버라이드 (override)하기 위해서이다.</target>
        </trans-unit>
        <trans-unit id="10249ce78473ea85beb60760d2995d197755d3b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;command-line#cypress-run&quot;&gt;Pass the &lt;code&gt;--record&lt;/code&gt; flag to &lt;code&gt;cypress run&lt;/code&gt;&lt;/a&gt; within CI.</source>
          <target state="translated">&lt;a href=&quot;command-line#cypress-run&quot;&gt;패스 &lt;code&gt;--record&lt;/code&gt; 에 플래그를 &lt;code&gt;cypress run&lt;/code&gt; &lt;/a&gt; CI 내.</target>
        </trans-unit>
        <trans-unit id="d92b24fc4758aa81bf519b2c51f0ea5e67fe05ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;configuration#Browser&quot;&gt;&lt;code&gt;blacklistHosts&lt;/code&gt;&lt;/a&gt; is now correctly accepted via the &lt;code&gt;--config&lt;/code&gt; CLI flag.</source>
          <target state="translated">&lt;a href=&quot;configuration#Browser&quot;&gt; &lt;code&gt;blacklistHosts&lt;/code&gt; &lt;/a&gt; &lt;code&gt;--config&lt;/code&gt; CLI 플래그를 통해 blacklistHosts 가 올바르게 승인됩니다.</target>
        </trans-unit>
        <trans-unit id="9e0c8135c61089c1f9b7393e8e1e8533617fb7bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;configuration#Browser&quot;&gt;&lt;code&gt;blacklistHosts&lt;/code&gt;&lt;/a&gt; would occasionally not work if you were blacklisting a host that had previously cached a file. In this case, the browser would serve it from disk and not make an actual HTTP request. This issue has been solved by clearing the cache when the browser opens. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1154&quot;&gt;#1154&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;configuration#Browser&quot;&gt; &lt;code&gt;blacklistHosts&lt;/code&gt; 은&lt;/a&gt; 이전에 파일을 캐시했다 호스트를 블랙리스트 있다면 가끔 작동하지 않을 것입니다. 이 경우 브라우저는 디스크에서이를 제공하며 실제 HTTP 요청은하지 않습니다. 이 문제는 브라우저가 열릴 때 캐시를 지우면 해결되었습니다. 수정&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1154&quot;&gt; # 1154&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0099b2b4366c8e2d2159d8478d010e972e047ff4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;configuration#Cypress-config&quot;&gt;&lt;code&gt;Cypress.config()&lt;/code&gt;&lt;/a&gt; now returns a complete set of configuration values. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/509&quot;&gt;#509&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;configuration#Cypress-config&quot;&gt; &lt;code&gt;Cypress.config()&lt;/code&gt; &lt;/a&gt; 이제 전체 구성 값 세트를 리턴합니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/509&quot;&gt;# 509&lt;/a&gt; 수정.</target>
        </trans-unit>
        <trans-unit id="2189a054ce16cfbbcc724ec9181fab382ffd1ee3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;configuration#Timeouts&quot;&gt;&lt;code&gt;defaultCommandTimeout&lt;/code&gt;&lt;/a&gt; now works correctly. The driver was still referencing the old &lt;code&gt;commandTimeout&lt;/code&gt; value.</source>
          <target state="translated">&lt;a href=&quot;configuration#Timeouts&quot;&gt; &lt;code&gt;defaultCommandTimeout&lt;/code&gt; 이&lt;/a&gt; 이제 올바르게 작동합니다. 드라이버가 여전히 이전 &lt;code&gt;commandTimeout&lt;/code&gt; 값을참조하고있었습니다.</target>
        </trans-unit>
        <trans-unit id="a2f6eb82de3fdccc335e15194d8057ea790747d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.cypress.io&quot;&gt;www.cypress.io&lt;/a&gt; has an all new design to help new visitors get started quickly and understand our future pricing more clearly.</source>
          <target state="translated">&lt;a href=&quot;http://www.cypress.io&quot;&gt;www.cypress.io&lt;/a&gt; 는 새로운 방문자가 빠르게 시작하고 향후 가격을보다 명확하게 이해할 수 있도록 완전히 새로운 디자인을 갖추고 있습니다.</target>
        </trans-unit>
        <trans-unit id="e3af13c965f3fcb6c2c9669d4f59529730dc57a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://codeship.com/features/basic&quot;&gt;CodeShip Basic&lt;/a&gt; (has &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/328&quot;&gt;cy.exec() issue&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;https://codeship.com/features/basic&quot;&gt;CodeShip Basic&lt;/a&gt; ( &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/328&quot;&gt;cy.exec () 문제가 있음&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="14815cc5e05de551328b840774b1439cb87c7ea2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.cypress.io/api/api/table-of-contents.html&quot;&gt;Cypress API&lt;/a&gt; to learn what commands are available as you work</source>
          <target state="translated">&lt;a href=&quot;https://docs.cypress.io/api/api/table-of-contents.html&quot;&gt;&lt;/a&gt;작업하면서 어떤 명령을 사용할 수 있는지 알아 보는 Cypress API</target>
        </trans-unit>
        <trans-unit id="f8d0ae4c30f3cac51d84a4eb3bb132496d555c22" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.cypress.io/examples/examples/applications.html#Realworld&quot;&gt;Real World&lt;/a&gt; example tests were added to Example Applications doc. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/pull/1836&quot;&gt;#1567&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.cypress.io/examples/examples/applications.html#Realworld&quot;&gt;실제&lt;/a&gt; 예제 테스트가 예제 애플리케이션 문서에 추가되었습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/pull/1836&quot;&gt;# 1567&lt;/a&gt; 에서 다룬다 .</target>
        </trans-unit>
        <trans-unit id="62642e47f435dd94747b351a1f4cd044397d4f0c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Logging-In&quot;&gt;Logging in using application code&lt;/a&gt; recipe</source>
          <target state="translated">&lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Logging-In&quot;&gt;애플리케이션 코드&lt;/a&gt; 레시피 를 사용하여 로그인</target>
        </trans-unit>
        <trans-unit id="1bca156211079c045b23a6f0fb3a2460bd446a7d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.cypress.io/examples/examples/tutorials.html&quot;&gt;Tutorial Videos&lt;/a&gt; to watch step-by-step tutorial videos</source>
          <target state="translated">&lt;a href=&quot;https://docs.cypress.io/examples/examples/tutorials.html&quot;&gt;&lt;/a&gt;단계별 튜토리얼 비디오 를 볼 수있는 튜토리얼 비디오</target>
        </trans-unit>
        <trans-unit id="dbc7924814c74e2e049dab06c9821c7bd3dd3091" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.cypress.io/faq/questions/dashboard-faq.html&quot;&gt;We have answered some common questions about the Dashboard Service in our FAQ.&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.cypress.io/faq/questions/dashboard-faq.html&quot;&gt;FAQ에서 대시 보드 서비스에 대한 몇 가지 일반적인 질문에 답변했습니다. &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="66a6e24dbf55565bb6ea02f336b3130bc0bdc9c6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/bahmutov/code-coverage-vue-example&quot;&gt;bahmutov/code-coverage-vue-example&lt;/a&gt; collects code coverage for Vue.js single file components.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/bahmutov/code-coverage-vue-example&quot;&gt;bahmutov / code-coverage-vue-example&lt;/a&gt; 은 Vue.js 단일 파일 구성 요소에 대한 코드 적용 범위를 수집합니다.</target>
        </trans-unit>
        <trans-unit id="d10009a868b5e53a52bc7d6536d6a7efe27545f2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/bahmutov/code-coverage-webpack-dev-server&quot;&gt;bahmutov/code-coverage-webpack-dev-server&lt;/a&gt; shows how to collect code coverage from an application that uses webpack-dev-server.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/bahmutov/code-coverage-webpack-dev-server&quot;&gt;bahmutov / code-coverage-webpack-dev-server&lt;/a&gt; 는 webpack-dev-server 를 사용하는 응용 프로그램에서 코드 적용 범위를 수집하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="bf3668fce79bfb82afec78455be48072b909b51f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/bahmutov/cypress-and-jest&quot;&gt;bahmutov/cypress-and-jest&lt;/a&gt; shows how to run Jest unit tests and Cypress unit tests, collecting code coverage from both test runners, and then produce merged report.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/bahmutov/cypress-and-jest&quot;&gt;bahmutov / cypress-and-jest&lt;/a&gt; 는 Jest 단위 테스트 및 Cypress 단위 테스트를 실행하여 두 테스트 러너에서 코드 적용 범위를 수집 한 다음 병합 된 보고서를 생성하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="56d344bf18c710984c4ed5453b31048fa4e8fd06" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/cypress-io/cypress-example-kitchensink#ci-status&quot;&gt;cypress-example-kitchensink&lt;/a&gt; is set up to run on multiple CI providers.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/cypress-io/cypress-example-kitchensink#ci-status&quot;&gt;cypress-example-kitchensink&lt;/a&gt; 는 여러 CI 공급자에서 실행되도록 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="ea83ef12a9eab30f683838442834493a9f434352" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/cypress-io/cypress-example-realworld&quot;&gt;cypress-io/cypress-example-realworld&lt;/a&gt; shows how to collect the coverage information from both back and front end code and merge it into a single report.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/cypress-io/cypress-example-realworld&quot;&gt;cypress-io / cypress-example-realworld&lt;/a&gt; 는 백엔드 코드와 프런트 엔드 코드 모두에서 적용 범위 정보를 수집하여 단일 보고서로 병합하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="c3b8b9e18418ebf0e6c4573da27a151e0a01dd32" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/cypress-io/cypress-example-todomvc-redux&quot;&gt;cypress-io/cypress-example-todomvc-redux&lt;/a&gt; is the example code used in this guide.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/cypress-io/cypress-example-todomvc-redux&quot;&gt;cypress-io / cypress-example-todomvc-redux&lt;/a&gt; 는이 안내서에 사용 된 예제 코드입니다.</target>
        </trans-unit>
        <trans-unit id="d4dce803406584b3ab5b7c0b06babd2680d84daa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/cypress-io/cypress-xpath&quot;&gt;&lt;code&gt;cypress-xpath&lt;/code&gt;&lt;/a&gt; adds a &lt;code&gt;cy.xpath()&lt;/code&gt; command and shows best practices for writing custom commands: retries, logging, and TypeScript definition.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/cypress-io/cypress-xpath&quot;&gt; &lt;code&gt;cypress-xpath&lt;/code&gt; &lt;/a&gt; 는 &lt;code&gt;cy.xpath()&lt;/code&gt; 명령을추가하고재시도, 로깅 및 TypeScript 정의와 같은 사용자 지정 명령을 작성하는 모범 사례를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="f46b644debda5cccc7aaeb37031d026ace3f1ffb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/144&quot;&gt;There is no shadow DOM support, but there are workarounds.&lt;/a&gt; See &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/830#issuecomment-449411701&quot;&gt;this comment.&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/144&quot;&gt;섀도 DOM 지원은 없지만 해결 방법이 있습니다. &lt;/a&gt;&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/830#issuecomment-449411701&quot;&gt;이 의견을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="58fc27eecc5bd451d5c4619be36dfbc9c8ff05b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/95#issuecomment-281273126&quot;&gt;You cannot use &lt;code&gt;cy.route()&lt;/code&gt; on &lt;code&gt;window.fetch&lt;/code&gt; but there is a workaround.&lt;/a&gt; See the implementation in &lt;a href=&quot;https://github.com/cypress-io/cypress-example-recipes/tree/master/examples/stubbing-spying__window-fetch/cypress/integration&quot;&gt;this recipe.&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/95#issuecomment-281273126&quot;&gt; &lt;code&gt;window.fetch&lt;/code&gt; 에는 &lt;code&gt;cy.route()&lt;/code&gt; 를 사용할 수 없지만 해결 방법이 있습니다. &lt;/a&gt;&lt;a href=&quot;https://github.com/cypress-io/cypress-example-recipes/tree/master/examples/stubbing-spying__window-fetch/cypress/integration&quot;&gt;이 레시피&lt;/a&gt; 의 구현을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="844b8a130a9e9480e9c129cab52ca9aeb3b9b963" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/cypress-io/testing-workshop-cypress#fixtures&quot;&gt;Fixtures&lt;/a&gt; section of the Cypress Testing Workshop</source>
          <target state="translated">&lt;a href=&quot;https://github.com/cypress-io/testing-workshop-cypress#fixtures&quot;&gt;&lt;/a&gt;Cypress 테스트 워크샵의 비품 섹션</target>
        </trans-unit>
        <trans-unit id="7912c8588bd793ae115899997c6010e8e5e108f9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/lluia/cypress-typescript-coverage-example&quot;&gt;lluia/cypress-typescript-coverage-example&lt;/a&gt; shows coverage for React App that uses TypeScript.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/lluia/cypress-typescript-coverage-example&quot;&gt;lluia / cypress-typescript-coverage-example&lt;/a&gt; 은 TypeScript를 사용하는 React App의 적용 범위를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="59de3e3a00d310fa25d1728c1b2d0e241b2be9ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gitter.im/cypress-io/cypress&quot;&gt;Come into the chat&lt;/a&gt; if you have any problems or need help.</source>
          <target state="translated">&lt;a href=&quot;https://gitter.im/cypress-io/cypress&quot;&gt;&lt;/a&gt;문제가 있거나 도움이 필요하면 채팅에 참여 하십시오.</target>
        </trans-unit>
        <trans-unit id="31338b20d97544e89885c0ef9c3946cbb96d634d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://glebbahmutov.com/blog/cypress-should-callback/&quot;&gt;Cypress should callback&lt;/a&gt; blog post</source>
          <target state="translated">&lt;a href=&quot;https://glebbahmutov.com/blog/cypress-should-callback/&quot;&gt;Cypress는&lt;/a&gt; 블로그 게시물을 콜백해야합니다</target>
        </trans-unit>
        <trans-unit id="23899f407694ff88f3ae692a7f881f8c905edaf9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;Login&lt;/a&gt; to the Cypress Dashboard, or &lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;create an account&lt;/a&gt; if you are a new user.</source>
          <target state="translated">&lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;&lt;/a&gt;Cypress 대시 보드에 로그인 하거나 새 사용자 인 경우 &lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;계정을 만드십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2d336a6a55b85499384a9a1c6f869b97a3bd927a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.cypress.io/blog/2018/02/05/when-can-the-test-start/&quot;&gt;This blog post&lt;/a&gt; explains how to use &lt;code&gt;cy.window()&lt;/code&gt; to spy on the DOM &lt;code&gt;prototype&lt;/code&gt; to detect when the application starts adding event listeners to the DOM elements. When this happens for the first time, the Test Runner knows that the application has started and the tests can begin.</source>
          <target state="translated">&lt;a href=&quot;https://www.cypress.io/blog/2018/02/05/when-can-the-test-start/&quot;&gt;이 블로그 게시물&lt;/a&gt; 에서는 &lt;code&gt;cy.window()&lt;/code&gt; 를 사용 하여 애플리케이션이 DOM 요소에 이벤트 리스너를 추가하기 시작하는시기를 감지하기 위해 DOM &lt;code&gt;prototype&lt;/code&gt; 을 감시 하는 방법에 대해 설명합니다 . 처음으로 이런 일이 발생하면 테스트 러너는 응용 프로그램이 시작되었고 테스트를 시작할 수 있음을 알고 있습니다.</target>
        </trans-unit>
        <trans-unit id="516cfc94fdad27dad6ece46d496d58ed4d4fa303" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parallelization#Grouping-test-runs&quot;&gt;Group recorded tests together&lt;/a&gt; under a single run.</source>
          <target state="translated">&lt;a href=&quot;parallelization#Grouping-test-runs&quot;&gt;&lt;/a&gt;한 번의 실행으로 기록 된 테스트를 함께 그룹화 합니다.</target>
        </trans-unit>
        <trans-unit id="337a03c534c6bec3dcf64e77f58c634084e97d96" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;parallelization#Grouping-test-runs&quot;&gt;Group&lt;/a&gt; recorded tests together under a single run</source>
          <target state="translated">&lt;a href=&quot;parallelization#Grouping-test-runs&quot;&gt;그룹&lt;/a&gt; 함께 하나의 실행에서 기록 테스트</target>
        </trans-unit>
        <trans-unit id="f3e75ecaf5caf46e53f0e7409d129c024b163b36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; elements are now properly always considered visible. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4475&quot;&gt;#4475&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; 및 &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; 요소는 이제 항상 표시되는 것으로 간주됩니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4475&quot;&gt;# 4475&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="eb1a827fa9d180ba303c3c9b5a1b796b2c704c69" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;optgroup&amp;gt;&lt;/code&gt; elements are now properly considered visible if it is contained within a visible &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4473&quot;&gt;#4473&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; 및 &lt;code&gt;&amp;lt;optgroup&amp;gt;&lt;/code&gt; 요소가 보이는 &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; 내에 포함 된 경우 이제 올바르게 표시되는 것으로 간주됩니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4473&quot;&gt;# 4473&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="1c73fda4fd3c75cf6d21497f5ff0480099502b3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; commands or any other element which supports &lt;code&gt;crossorigin&lt;/code&gt; attribute now are proxied correctly. The &lt;code&gt;crossorigin&lt;/code&gt; attribute removes sending cookies with the HTTP request and now there is a fallback to figure out the &lt;code&gt;remoteHost&lt;/code&gt; even in this situation.</source>
          <target state="translated">&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; 명령 또는 &lt;code&gt;crossorigin&lt;/code&gt; 속성 을 지원하는 다른 요소가 이제 올바르게 프록시됩니다. &lt;code&gt;crossorigin&lt;/code&gt; 의 속성 제거합니다는 HTTP 요청과 함께 쿠키를 보내고 이제 알아 내기 위해 대체가 &lt;code&gt;remoteHost&lt;/code&gt; 도이 상황에서이.</target>
        </trans-unit>
        <trans-unit id="c069e09dd58ba21b2b06291dc0fcb90e02402adb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;tr&amp;gt;&lt;/code&gt; elements with CSS &lt;code&gt;visibility: collapse&lt;/code&gt; are now properly considered hidden. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4476&quot;&gt;#4476&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt; CSS &lt;code&gt;visibility: collapse&lt;/code&gt; &amp;lt;td&amp;gt; 및 &lt;code&gt;&amp;lt;tr&amp;gt;&lt;/code&gt; 요소 : 접기 는 이제 숨겨진 것으로 간주됩니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4476&quot;&gt;# 4476&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="8f71bef87074e36e81e6bd13e0e228cb13c0a7df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--browser&lt;/code&gt;, &lt;code&gt;-b&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--browser&lt;/code&gt; , &lt;code&gt;-b&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b7d56faeea137c4f6187bd536cc10499171180de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--config&lt;/code&gt;, &lt;code&gt;-c&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--config&lt;/code&gt; , &lt;code&gt;-c&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="86e40d8bb0b9ef95fa71b609a0b22eea9069fc96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--detached&lt;/code&gt;, &lt;code&gt;-d&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--detached&lt;/code&gt; , &lt;code&gt;-d&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ee1e1edd4a5bb4ed657965d10f54c428730b49dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--env&lt;/code&gt;, &lt;code&gt;-e&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--env&lt;/code&gt; , &lt;code&gt;-e&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4eecac383ee4e0b4fd8e4cfd744e634fa8203de6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--help&lt;/code&gt;, &lt;code&gt;-h&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--help&lt;/code&gt; , &lt;code&gt;-h&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1cad189fa019b50efdd694ce2c59785a68addf6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--key&lt;/code&gt;, &lt;code&gt;-k&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--key&lt;/code&gt; , &lt;code&gt;-k&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c34aaf217afc715b9b7247f312ee4ad52708b7c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--port&lt;/code&gt;, &lt;code&gt;-p&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--port&lt;/code&gt; , &lt;code&gt;-p&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b86a0e06d3c0d9dca6f43156ce94f79213372cfa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--port&lt;/code&gt;,&lt;code&gt;-p&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--port&lt;/code&gt;,&lt;code&gt;-p&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f6da68e40198478c9a1355fa6d4e158c3468fad7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--project&lt;/code&gt;, &lt;code&gt;-P&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--project&lt;/code&gt; , &lt;code&gt;-P&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3905a50e26a230870eb44fa4adc688abe39f7b87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--reporter-options&lt;/code&gt;, &lt;code&gt;-o&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--reporter-options&lt;/code&gt; , &lt;code&gt;-o&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b8074d0586b8f89e6b2865a0002da3285af81ee5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--reporter&lt;/code&gt;, &lt;code&gt;-r&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--reporter&lt;/code&gt; , &lt;code&gt;-r&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0aae0f69f3919d4a147fd3e908350a9707fd9a6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--spec&lt;/code&gt;, &lt;code&gt;-s&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--spec&lt;/code&gt; , &lt;code&gt;-s&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="48def89525cae4911012ddd0c1eb86b0405cdb27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.and()&lt;/code&gt; reproduces this same assertion behavior.</source>
          <target state="translated">&lt;code&gt;.and()&lt;/code&gt; 는 이와 동일한 어설 션 동작을 재현합니다.</target>
        </trans-unit>
        <trans-unit id="20553d22c1fe3459333e6189f7cdf67454e83dc2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.and()&lt;/code&gt; requires being chained off a previous command.</source>
          <target state="translated">&lt;code&gt;.and()&lt;/code&gt; 는 이전 명령과 연결되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="e11136475f213d9db4b4c1887bfe486d17e886b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.and()&lt;/code&gt; will continue to &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; its specified assertions until it times out.</source>
          <target state="translated">&lt;code&gt;.and()&lt;/code&gt; 는 시간이 초과 될 때까지 지정된 어설 션을 계속 &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;재 시도&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="f348a20f570d8369f9c06504642a541f8969c9da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.as()&lt;/code&gt; cannot time out.</source>
          <target state="translated">&lt;code&gt;.as()&lt;/code&gt; 가 시간 초과 될 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="5b26153e359f7833a76706559231ee658fef9129" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.as()&lt;/code&gt; is a utility command.</source>
          <target state="translated">&lt;code&gt;.as()&lt;/code&gt; 는 유틸리티 명령입니다.</target>
        </trans-unit>
        <trans-unit id="a6c7e6314b7a489281b49bc748642a8d4c2e6e47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.as()&lt;/code&gt; requires being chained off a previous command.</source>
          <target state="translated">&lt;code&gt;.as()&lt;/code&gt; 는 이전 명령과 연결되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="61ac365017f4d00361d58cd71fd9674cc6f6d173" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.as()&lt;/code&gt; will not run assertions. Assertions will pass through as if this command did not exist.</source>
          <target state="translated">&lt;code&gt;.as()&lt;/code&gt; 는 어설 션을 실행하지 않습니다. 이 명령이없는 것처럼 어설 션이 통과합니다.</target>
        </trans-unit>
        <trans-unit id="642b91f3272712fc4bc89ceab7a3b7cf0ee5b6fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.as()&lt;/code&gt; yields the same subject it was given from the previous command.</source>
          <target state="translated">&lt;code&gt;.as()&lt;/code&gt; 는 이전 명령에서와 동일한 주제를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="df87ea762038e98cb376d11639ee83281c687172" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.blur()&lt;/code&gt; can time out because your browser did not receive any blur events</source>
          <target state="translated">&lt;code&gt;.blur()&lt;/code&gt; 브라우저에 블러 이벤트가 없으므로 .blur () 시간이 초과 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="832af18cf0e9bc8cab760e19500fe3ffe0d86369" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.blur()&lt;/code&gt; can time out waiting for assertions you've added to pass.</source>
          <target state="translated">&lt;code&gt;.blur()&lt;/code&gt; 은 추가 한 어설 션이 전달 될 때까지 시간이 초과 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5b8ec0e551b2f4fbb401685db0d4bc4de805aded" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.blur()&lt;/code&gt; is just a helpful command which is a simple shortcut. Normally there&amp;rsquo;s no way for a user to &amp;ldquo;blur&amp;rdquo; an element. Typically the user would have to perform &lt;strong&gt;another&lt;/strong&gt; action like clicking or tabbing to a different element. Needing to perform a separate action like this is very indirect.</source>
          <target state="translated">&lt;code&gt;.blur()&lt;/code&gt; 은 간단한 단축키 인 유용한 명령입니다. 일반적으로 사용자가 요소를 &quot;흐리게&quot;할 수있는 방법이 없습니다. 일반적으로 사용자는 다른 요소를 클릭하거나 탭하는 것과 같은 &lt;strong&gt;다른&lt;/strong&gt; 작업 을 수행해야합니다 . 이와 같은 별도의 조치를 수행해야하는 것은 매우 간접적입니다.</target>
        </trans-unit>
        <trans-unit id="0af5ed2e0258219386f94e17a4676016222ea067" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.blur()&lt;/code&gt; is not implemented like other action commands, and does not follow the same rules of &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;waiting for actionability&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.blur()&lt;/code&gt; 은 다른 조치 명령과 같이 구현되지 않으며 조치 가능성을 &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;기다리는&lt;/a&gt; 동일한 규칙을 따르지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="142973a0903df4a57d3698f3a83ea7855dcfe629" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.blur()&lt;/code&gt; requires being chained off a command that yields DOM element(s).</source>
          <target state="translated">&lt;code&gt;.blur()&lt;/code&gt; 는 DOM 요소를 생성하는 명령과 연결되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="41a9a2eb9e1345d06fc68c08b479c1c38c85e4af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.blur()&lt;/code&gt; requires the element to be able to receive focus.</source>
          <target state="translated">&lt;code&gt;.blur()&lt;/code&gt; 에는 요소가 포커스를받을 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="d31fdd3d9a57860f7b187d7e70f10be3b02e8c6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.blur()&lt;/code&gt; requires the element to currently have focus.</source>
          <target state="translated">&lt;code&gt;.blur()&lt;/code&gt; 에는 요소에 현재 포커스가 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="8720d147773f9dbb044b0fc15415cef7a660cdc6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.blur()&lt;/code&gt; will automatically wait for assertions you've chained to pass.</source>
          <target state="translated">&lt;code&gt;.blur()&lt;/code&gt; 은 연결 한 어설 션이 전달 될 때까지 자동으로 기다립니다.</target>
        </trans-unit>
        <trans-unit id="0a5dbb116d4bc0950607a68b6a81298a7c756bd9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.blur()&lt;/code&gt; yields the same subject it was given from the previous command.</source>
          <target state="translated">&lt;code&gt;.blur()&lt;/code&gt; 은 이전 명령에서 제공된 것과 동일한 주제를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="18cea421e20058893fed92ce20992317e12ed163" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.check()&lt;/code&gt; can time out waiting for assertions you've added to pass.</source>
          <target state="translated">&lt;code&gt;.check()&lt;/code&gt; 는 추가 한 어설 션이 전달되기를 기다리는 시간을 초과 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0207a0f471c820f7956fe90012bc62fb839852ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.check()&lt;/code&gt; can time out waiting for the element to reach an &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;actionable state&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.check()&lt;/code&gt; 는 요소가 &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;실행 가능한 상태&lt;/a&gt; 에 도달하기를 기다리는 시간을 초과 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="485f78c896c254375db3aed58ab330551e6df455" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.check()&lt;/code&gt; is an &amp;ldquo;action command&amp;rdquo; that follows all the rules &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;defined here&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.check()&lt;/code&gt; 는 &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;여기에 정의 된&lt;/a&gt; 모든 규칙을 따르는&amp;ldquo;작업 명령&amp;rdquo;입니다 .</target>
        </trans-unit>
        <trans-unit id="ad5bfa2a3aa8374bc6f9ca692d21feffd0c806ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.check()&lt;/code&gt; requires being chained off a command that yields DOM element(s).</source>
          <target state="translated">&lt;code&gt;.check()&lt;/code&gt; 는 DOM 요소를 생성하는 명령과 연결되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="e0d0d938e6708bc3a72826bb17141ed3c3616395" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.check()&lt;/code&gt; requires the element to have type &lt;code&gt;checkbox&lt;/code&gt; or &lt;code&gt;radio&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.check()&lt;/code&gt; 에는 요소에 &lt;code&gt;checkbox&lt;/code&gt; 또는 &lt;code&gt;radio&lt;/code&gt; 유형이 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="f2a994e5604bcca84e3e9c04f7f15f344841e023" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.check()&lt;/code&gt; will automatically wait for assertions you've chained to pass.</source>
          <target state="translated">&lt;code&gt;.check()&lt;/code&gt; 는 연결 한 어설 션이 전달 될 때까지 자동으로 기다립니다.</target>
        </trans-unit>
        <trans-unit id="930c355364b51a12609c1aa467bba2554da0abe9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.check()&lt;/code&gt; will automatically wait for the element to reach an &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;actionable state&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.check()&lt;/code&gt; 는 요소가 &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;실행 가능한 상태&lt;/a&gt; 가 될 때까지 자동으로 기다립니다 .</target>
        </trans-unit>
        <trans-unit id="b193f1b2ddc55e32131f773f431379e9de3a8017" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.check()&lt;/code&gt; yields the same subject it was given from the previous command.</source>
          <target state="translated">&lt;code&gt;.check()&lt;/code&gt; 는 이전 명령에서 제공된 것과 동일한 주제를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="166087467df6f2ef0f2464fca7a34832afab1dcb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.children()&lt;/code&gt; can time out waiting for assertions you've added to pass.</source>
          <target state="translated">&lt;code&gt;.children()&lt;/code&gt; 은 추가 한 어설 션이 전달되기를 기다리는 시간을 초과 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1909c9f1f9dae3d05560f3d92acf549300357465" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.children()&lt;/code&gt; can time out waiting for the element(s) to &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;exist in the DOM&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.children()&lt;/code&gt; 은 요소 &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;가 DOM&lt;/a&gt; 에 존재 하기를 기다리는 시간을 초과 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c8561a4c81343c2c05390aaf2cb05d0416af4fcb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.children()&lt;/code&gt; requires being chained off a command that yields DOM element(s).</source>
          <target state="translated">&lt;code&gt;.children()&lt;/code&gt; 은 DOM 요소를 생성하는 명령과 연결되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="cb2c0c2899db92daf4334fcdc3abf4337826e988" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.children()&lt;/code&gt; will automatically &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; until assertions you've chained all pass.</source>
          <target state="translated">&lt;code&gt;.children()&lt;/code&gt; 은 모든 체인을 연결 한 어설 션이 전달 될 때까지 자동으로 &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;재 시도&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="a26ed8357fc569d6f9ac09950e9ebfdd6340cf42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.children()&lt;/code&gt; will automatically &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; until the element(s) &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;exist in the DOM&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.children()&lt;/code&gt; 은 요소 &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;가 DOM에 존재할&lt;/a&gt; 때까지 자동으로 &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;재 시도 &lt;/a&gt;합니다 .</target>
        </trans-unit>
        <trans-unit id="20144e6221392bb86f716bb065aad950c2294900" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.children()&lt;/code&gt; yields the new DOM element(s) it found.</source>
          <target state="translated">&lt;code&gt;.children()&lt;/code&gt; 은 찾은 새로운 DOM 요소를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="7b8c1a84c55f3a3fee5a5e2ac1d65428302cd53d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.clear()&lt;/code&gt; can time out waiting for assertions you've added to pass.</source>
          <target state="translated">&lt;code&gt;.clear()&lt;/code&gt; 는 추가 한 어설 션을 기다리는 동안 시간이 초과 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f9448e13a6de869f2c334e31a25744fce9d1880c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.clear()&lt;/code&gt; can time out waiting for the element to reach an &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;actionable state&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.clear()&lt;/code&gt; 는 요소가 &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;실행 가능한 상태&lt;/a&gt; 에 도달하기를 기다리는 시간을 초과 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="146377295e6833ec64bd0869f41d30042b28e22e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.clear()&lt;/code&gt; is an &amp;ldquo;action command&amp;rdquo; that follows all the rules &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;defined here&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.clear()&lt;/code&gt; 는 &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;여기에 정의 된&lt;/a&gt; 모든 규칙을 따르는&amp;ldquo;작업 명령&amp;rdquo;입니다 .</target>
        </trans-unit>
        <trans-unit id="1e3d0f20369351c5e85b2514a247774b1a83e076" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.clear()&lt;/code&gt; is just an alias for &lt;a href=&quot;type&quot;&gt;&lt;code&gt;.type({selectall}{backspace})&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.clear()&lt;/code&gt; 는 &lt;a href=&quot;type&quot;&gt; &lt;code&gt;.type({selectall}{backspace})&lt;/code&gt; &lt;/a&gt; 의 별칭 일뿐 입니다.</target>
        </trans-unit>
        <trans-unit id="9518f2a69af3b4d65a303c0af73b754ccb315244" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.clear()&lt;/code&gt; requires being chained off a command that yields DOM element(s).</source>
          <target state="translated">&lt;code&gt;.clear()&lt;/code&gt; 는 DOM 요소를 생성하는 명령과 연결되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="6b541e10957c07326f49370ed20a5ae4ab9d39b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.clear()&lt;/code&gt; requires the element to be an &lt;code&gt;input&lt;/code&gt; or &lt;code&gt;textarea&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.clear()&lt;/code&gt; 에는 요소가 &lt;code&gt;input&lt;/code&gt; 또는 &lt;code&gt;textarea&lt;/code&gt; 이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="765d9857744587f83d6c3e48796180a980218dbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.clear()&lt;/code&gt; will automatically wait for assertions you've chained to pass.</source>
          <target state="translated">&lt;code&gt;.clear()&lt;/code&gt; 는 연결 한 어설 션이 전달 될 때까지 자동으로 기다립니다.</target>
        </trans-unit>
        <trans-unit id="be389a2513b98e51625956be0fac01b8ead4a9ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.clear()&lt;/code&gt; will automatically wait for the element to reach an &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;actionable state&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.clear()&lt;/code&gt; 는 요소가 &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;실행 가능한 상태&lt;/a&gt; 가 될 때까지 자동으로 기다립니다 .</target>
        </trans-unit>
        <trans-unit id="14147e6e9fbe08625732f4d1ce0e21c9f7345b4d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.clear()&lt;/code&gt; yields the same subject it was given from the previous command.</source>
          <target state="translated">&lt;code&gt;.clear()&lt;/code&gt; 는 이전 명령에서와 동일한 주제를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="10f0490e6441e869a136504c09616f021db1c12c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.click()&lt;/code&gt; can time out waiting for assertions you've added to pass.</source>
          <target state="translated">&lt;code&gt;.click()&lt;/code&gt; 은 추가 한 어설 션이 전달되기를 기다리는 시간을 초과 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="921371323ec0c568a4fa2fc4eb472ca1b4ba0549" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.click()&lt;/code&gt; can time out waiting for the element to reach an &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;actionable state&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.click()&lt;/code&gt; 은 요소가 &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;실행 가능한 상태&lt;/a&gt; 에 도달하기를 기다리는 시간을 초과 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9e3919de79739de9ca9432a3d943c01a65eb65d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.click()&lt;/code&gt; is an &amp;ldquo;action command&amp;rdquo; that follows all the rules &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;defined here&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.click()&lt;/code&gt; 은 &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;여기에 정의 된&lt;/a&gt; 모든 규칙을 따르는&amp;ldquo;작업 명령&amp;rdquo;입니다 .</target>
        </trans-unit>
        <trans-unit id="0a0d858fd2f42f9d3d01699badf7c17b75b5b469" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.click()&lt;/code&gt; requires being chained off a command that yields DOM element(s).</source>
          <target state="translated">&lt;code&gt;.click()&lt;/code&gt; 은 DOM 요소를 생성하는 명령과 연결되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="a26552ae39b455b3690ecda0b4408273bf242e0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.click()&lt;/code&gt; will automatically wait for assertions you've chained to pass.</source>
          <target state="translated">&lt;code&gt;.click()&lt;/code&gt; 은 연결 한 어설 션이 전달 될 때까지 자동으로 기다립니다.</target>
        </trans-unit>
        <trans-unit id="674caf7e790960979d7140d07a1e50a3999b0a56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.click()&lt;/code&gt; will automatically wait for the element to reach an &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;actionable state&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.click()&lt;/code&gt; 은 요소가 &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;실행 가능한 상태&lt;/a&gt; 가 될 때까지 자동으로 기다립니다 .</target>
        </trans-unit>
        <trans-unit id="02cc55603cec5fba66a927fb9c7d39790feade26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.click()&lt;/code&gt; yields the same subject it was given from the previous command.</source>
          <target state="translated">&lt;code&gt;.click()&lt;/code&gt; 은 이전 명령에서 제공된 것과 동일한 주제를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="0a8daa219c037633338eec63d6fde91981f903ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.closest()&lt;/code&gt; can time out waiting for assertions you've added to pass.</source>
          <target state="translated">&lt;code&gt;.closest()&lt;/code&gt; 는 추가 한 어설 션이 전달되기를 기다리는 시간을 초과 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="812e4bb08550eaec895985f66b5281a238c56f03" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.closest()&lt;/code&gt; can time out waiting for the element(s) to &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;exist in the DOM&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.closest()&lt;/code&gt; 는 요소 &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;가 DOM&lt;/a&gt; 에 존재 하기를 기다리는 시간을 초과 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1f289fd3044e230f4db3e53963e7dae22f9f71d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.closest()&lt;/code&gt; requires being chained off a command that yields DOM element(s).</source>
          <target state="translated">&lt;code&gt;.closest()&lt;/code&gt; 는 DOM 요소를 생성하는 명령과 연결되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="978bc5da7bde2dfaf2d8980bcca1240d977432cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.closest()&lt;/code&gt; will automatically &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; until assertions you've chained all pass.</source>
          <target state="translated">&lt;code&gt;.closest()&lt;/code&gt; 는 모든 체인을 연결 한 어설 션이 나올 때까지 자동으로 &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;재 시도&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="819fe5d7f6c7ef52fc65be36ba3229a51c38399a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.closest()&lt;/code&gt; will automatically &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; until the element(s) &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;exist in the DOM&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.closest()&lt;/code&gt; 는 요소 &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;가 DOM에 존재할&lt;/a&gt; 때까지 자동으로 &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;재 시도 &lt;/a&gt;합니다 .</target>
        </trans-unit>
        <trans-unit id="40b818c3f9f86298ef9a4f4235bef6d6616865c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.closest()&lt;/code&gt; yields the new DOM element(s) it found.</source>
          <target state="translated">&lt;code&gt;.closest()&lt;/code&gt; 는 찾은 새로운 DOM 요소를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="d318c7ddf71d8b4c6136dfa73eba13083a737af5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.contains()&lt;/code&gt; acts differently whether it&amp;rsquo;s starting a series of commands or being chained off an existing series.</source>
          <target state="translated">&lt;code&gt;.contains()&lt;/code&gt; 는 일련의 명령을 시작하거나 기존 계열과 연결되어 있는지에 따라 다르게 작동합니다.</target>
        </trans-unit>
        <trans-unit id="59dc3363cedfed21b5f2561613488699542683f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.contains()&lt;/code&gt; can be chained off of &lt;code&gt;cy&lt;/code&gt; or off a command that yields DOM element(s).</source>
          <target state="translated">&lt;code&gt;.contains()&lt;/code&gt; 는 &lt;code&gt;cy&lt;/code&gt; 또는 DOM 요소를 생성하는 명령에서 연결될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="81af0a75978f43ff7742cd3ffa7828cf188bebe1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.contains()&lt;/code&gt; can time out waiting for assertions you've added to pass.</source>
          <target state="translated">&lt;code&gt;.contains()&lt;/code&gt; 는 추가 한 어설 션이 전달되기를 기다리는 시간을 초과 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b18c50b7f485ea474d68b2c53a9421ab0f41d884" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.contains()&lt;/code&gt; can time out waiting for the element(s) to &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;exist in the DOM&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.contains()&lt;/code&gt; 는 요소 &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;가 DOM&lt;/a&gt; 에 존재 하기를 기다리는 시간을 초과 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1dbb2b7c46d5b8636e62d73b4fb617c426a4deb7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.contains()&lt;/code&gt; defaults to preferring elements higher in the tree when they are:</source>
          <target state="translated">&lt;code&gt;.contains()&lt;/code&gt; 기본적으로 트리에서 더 높은 요소를 선호합니다.</target>
        </trans-unit>
        <trans-unit id="f5b272e881cf399c197eab174e0414d58925f2a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.contains()&lt;/code&gt; will automatically &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; until assertions you've chained all pass.</source>
          <target state="translated">&lt;code&gt;.contains()&lt;/code&gt; 는 모든 체인을 연결 한 어설 션이 나올 때까지 자동으로 &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;재 시도&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="9fb558074fb916eb4ea99537f1be9aa5b389f146" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.contains()&lt;/code&gt; will automatically &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; until the element(s) &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;exist in the DOM&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.contains()&lt;/code&gt; 는 요소 &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;가 DOM에 존재할&lt;/a&gt; 때까지 자동으로 &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;재 시도 &lt;/a&gt;합니다 .</target>
        </trans-unit>
        <trans-unit id="f9c313a3d8037eb8116f2040a479d3f056afee5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.contains()&lt;/code&gt; yields the new DOM element it found.</source>
          <target state="translated">&lt;code&gt;.contains()&lt;/code&gt; 는 찾은 새로운 DOM 요소를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="127c7d8217072085bacc73837c1cfb2fcba07d25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.dblclick()&lt;/code&gt; can time out waiting for assertions you've added to pass.</source>
          <target state="translated">&lt;code&gt;.dblclick()&lt;/code&gt; 은 추가 한 어설 션이 전달되기를 기다리는 시간을 초과 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b46d9d05005c3faa74d3c88d6527f9e6c66a2b5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.dblclick()&lt;/code&gt; can time out waiting for the element to reach an &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;actionable state&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.dblclick()&lt;/code&gt; 은 요소가 &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;실행 가능한 상태&lt;/a&gt; 에 도달하기를 기다리는 시간을 초과 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2363455872a43b186d04ffec90908e7dfc3daf33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.dblclick()&lt;/code&gt; is an &amp;ldquo;action command&amp;rdquo; that follows all the rules &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;defined here&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.dblclick()&lt;/code&gt; 은 &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;여기에 정의 된&lt;/a&gt; 모든 규칙을 따르는&amp;ldquo;작업 명령&amp;rdquo;입니다 .</target>
        </trans-unit>
        <trans-unit id="539ec9b1bf9d06ffff3f33a07ad1483d2affc20c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.dblclick()&lt;/code&gt; requires being chained off a command that yields DOM element(s).</source>
          <target state="translated">&lt;code&gt;.dblclick()&lt;/code&gt; 은 DOM 요소를 생성하는 명령과 연결되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="6457b13912d837d76ce5ab8bbf4d4d1601e7396c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.dblclick()&lt;/code&gt; will automatically wait for assertions you've chained to pass.</source>
          <target state="translated">&lt;code&gt;.dblclick()&lt;/code&gt; 은 연결 한 어설 션이 전달 될 때까지 자동으로 기다립니다.</target>
        </trans-unit>
        <trans-unit id="a4c73e747b7641d60af94852d6fece3166472ac7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.dblclick()&lt;/code&gt; will automatically wait for the element to reach an &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;actionable state&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.dblclick()&lt;/code&gt; 은 요소가 &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;실행 가능한 상태&lt;/a&gt; 가 될 때까지 자동으로 기다립니다 .</target>
        </trans-unit>
        <trans-unit id="0689eef72de6d77b0f2d8b0829a239acb1c6fb42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.dblclick()&lt;/code&gt; yields the same subject it was given from the previous command.</source>
          <target state="translated">&lt;code&gt;.dblclick()&lt;/code&gt; 은 이전 명령에서 제공 한 것과 동일한 주제를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="1ab547fa0da2f2469bd4341afc04ba273677682f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.debug()&lt;/code&gt; cannot time out.</source>
          <target state="translated">&lt;code&gt;.debug()&lt;/code&gt; 가 시간 초과 될 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="e91ce5c993ae24105a2b9c0e14581da68c4eae81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.debug()&lt;/code&gt; is a utility command.</source>
          <target state="translated">&lt;code&gt;.debug()&lt;/code&gt; 는 유틸리티 명령입니다.</target>
        </trans-unit>
        <trans-unit id="8048e930638bcc55a4ce08949f27d623bd476ac4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.debug()&lt;/code&gt; will not run assertions. Assertions will pass through as if this command did not exist.</source>
          <target state="translated">&lt;code&gt;.debug()&lt;/code&gt; 는 어설 션을 실행하지 않습니다. 이 명령이없는 것처럼 어설 션이 통과합니다.</target>
        </trans-unit>
        <trans-unit id="c2fb1db7a3f4bb538fccd4d432a0bf174d9409ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.debug()&lt;/code&gt; yields the same subject it was given from the previous command.</source>
          <target state="translated">&lt;code&gt;.debug()&lt;/code&gt; 는 이전 명령에서와 동일한 주제를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="99e98762b93e8579b86cc7c823dbaa0d3a5f8e84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.debug()&lt;/code&gt;&lt;code&gt;.debug()&lt;/code&gt; can be chained off of &lt;code&gt;cy&lt;/code&gt; or off another command</source>
          <target state="translated">&lt;code&gt;.debug()&lt;/code&gt; &lt;code&gt;.debug()&lt;/code&gt; 는 &lt;code&gt;cy&lt;/code&gt; 또는 다른 명령에서 연결될 수 있습니다</target>
        </trans-unit>
        <trans-unit id="93ac245b4a2eb8fc3a6207eee30ded545d288b88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.each()&lt;/code&gt; can time out waiting for a promise you've returned to resolve.</source>
          <target state="translated">&lt;code&gt;.each()&lt;/code&gt; 는 해결하기로 약속 한 약속을 기다리는 시간을 초과 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8975e6b0c64c97ac34b3ebfe7473d2083c0308a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.each()&lt;/code&gt; requires being chained off a previous command.</source>
          <target state="translated">&lt;code&gt;.each()&lt;/code&gt; 는 이전 명령과 연결되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="6be667dee8784396d080b7e698cd06c42810b66d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.each()&lt;/code&gt; will only run assertions you've chained once, and will not &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.each()&lt;/code&gt; 는 한 번 연결 한 어설 션 만 실행하며 &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;다시 시도&lt;/a&gt; 하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="c3827d1ccb934730cb3c90b68eb5c86cf95d098e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.each()&lt;/code&gt; yields the same subject it was given from the previous command.</source>
          <target state="translated">&lt;code&gt;.each()&lt;/code&gt; 는 이전 명령에서와 동일한 주제를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="8567aed218da470134fcc2d21154798f6196d39c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.end()&lt;/code&gt; cannot be chained further.</source>
          <target state="translated">&lt;code&gt;.end()&lt;/code&gt; 는 더 이상 연결할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="074766cdb1ca574294bf0409a8e6b58ef8154243" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.end()&lt;/code&gt; cannot have any assertions chained.</source>
          <target state="translated">&lt;code&gt;.end()&lt;/code&gt; 는 어설 션을 연결할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="087e1fc7141f62f05b2f90a06b8722e773cb1dcd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.end()&lt;/code&gt; cannot time out.</source>
          <target state="translated">&lt;code&gt;.end()&lt;/code&gt; 가 시간 초과 될 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="4f9eaeb5740f55b46e86f26d9ef4239af3235dec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.end()&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; log in the Command Log</source>
          <target state="translated">&lt;code&gt;.end()&lt;/code&gt; 가 명령 로그에 기록 되지 &lt;em&gt;않습니다&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b538aa217809dcc2a71ce1063f25a3c632299c9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.end()&lt;/code&gt; is useful when you want to end a chain of commands and force the next command to not receive what was yielded in the previous command.</source>
          <target state="translated">&lt;code&gt;.end()&lt;/code&gt; 는 일련의 명령을 끝내고 다음 명령이 이전 명령에서 생성 된 내용을받지 못하도록하려는 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="6c176c25ccd916a6876aa7590ae6a79587e11f23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.end()&lt;/code&gt; requires being chained off a previous command.</source>
          <target state="translated">&lt;code&gt;.end()&lt;/code&gt; 는 이전 명령과 연결되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="45ee2fd75706d5344594029c7848973d6b36fe7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.end()&lt;/code&gt; yields &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.end()&lt;/code&gt; &lt;code&gt;null&lt;/code&gt; 을 생성 합니다.</target>
        </trans-unit>
        <trans-unit id="a85525b969b2833be1c2bcdc1f562f9c99d4c730" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.eq()&lt;/code&gt; can time out waiting for assertions you've added to pass.</source>
          <target state="translated">&lt;code&gt;.eq()&lt;/code&gt; 는 추가 한 어설 션을 기다리는 동안 시간이 초과 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="976ab1324490d568ba5d887d3e2f02578dd3feb2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.eq()&lt;/code&gt; can time out waiting for the element(s) to &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;exist in the DOM&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.eq()&lt;/code&gt; 는 요소 &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;가 DOM&lt;/a&gt; 에 존재 하기를 기다리는 시간을 초과 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3a3586775a54f64895c932f72ef8255303126a04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.eq()&lt;/code&gt; requires being chained off a command that yields DOM element(s).</source>
          <target state="translated">&lt;code&gt;.eq()&lt;/code&gt; 는 DOM 요소를 생성하는 명령과 연결되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="958381ec50a9bcdfb1ebb59278fa51fe8267258e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.eq()&lt;/code&gt; will automatically &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; until assertions you've chained all pass.</source>
          <target state="translated">&lt;code&gt;.eq()&lt;/code&gt; 는 모든 체인을 연결 한 어설 션이 나올 때까지 자동으로 &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;재 시도&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="2f9f2541cecf56204ed471b8f44cdbaee42d44dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.eq()&lt;/code&gt; will automatically &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; until the element(s) &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;exist in the DOM&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.eq()&lt;/code&gt; 는 요소 &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;가 DOM에 존재할&lt;/a&gt; 때까지 자동으로 &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;재 시도 &lt;/a&gt;합니다 .</target>
        </trans-unit>
        <trans-unit id="774d19c431fb5338dc00ec2f03e9f35c90f37f14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.eq()&lt;/code&gt; yields the new DOM element(s) it found.</source>
          <target state="translated">&lt;code&gt;.eq()&lt;/code&gt; 는 찾은 새로운 DOM 요소를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="df8fc69ee442c5fd4e0810ed239b8d18245fb45e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.filter()&lt;/code&gt; can time out waiting for assertions you've added to pass.</source>
          <target state="translated">&lt;code&gt;.filter()&lt;/code&gt; 는 추가 한 어설 션이 전달되기를 기다리는 시간을 초과 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5554353829c29c93a314c4420decde0286d047e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.filter()&lt;/code&gt; can time out waiting for the element(s) to &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;exist in the DOM&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.filter()&lt;/code&gt; 는 요소 &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;가 DOM&lt;/a&gt; 에 존재 하기를 기다리는 시간을 초과 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="97ca8fee879f3445616cce38244797dc0b4f8a85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.filter()&lt;/code&gt; requires being chained off a command that yields DOM element(s).</source>
          <target state="translated">&lt;code&gt;.filter()&lt;/code&gt; 는 DOM 요소를 생성하는 명령과 연결되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="36eec9cbb759c334533243da17dbaf953f5fcd68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.filter()&lt;/code&gt; will automatically &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; until assertions you've chained all pass.</source>
          <target state="translated">&lt;code&gt;.filter()&lt;/code&gt; 는 모든 체인을 연결 한 어설 션이 전달 될 때까지 자동으로 &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;다시 시도&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="a6cb275b5a79cd8f0d7a7aff1fcdd800a0d1cad6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.filter()&lt;/code&gt; will automatically &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; until the element(s) &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;exist in the DOM&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.filter()&lt;/code&gt; 는 요소 &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;가 DOM에 존재할&lt;/a&gt; 때까지 자동으로 &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;재 시도 &lt;/a&gt;합니다 .</target>
        </trans-unit>
        <trans-unit id="f44da04092c80990d02d537c7cbb9c385b06445b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.filter()&lt;/code&gt; yields the new DOM element(s) it found.</source>
          <target state="translated">&lt;code&gt;.filter()&lt;/code&gt; 는 찾은 새로운 DOM 요소를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="ad4eab170a02ea868bed3d2a2c559c6e8d97e6c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.find()&lt;/code&gt; can time out waiting for assertions you've added to pass.</source>
          <target state="translated">&lt;code&gt;.find()&lt;/code&gt; 는 추가 한 어설 션이 전달되기를 기다리는 시간을 초과 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="486ff1c2d0de2034b3b446e6e09ef71386b17633" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.find()&lt;/code&gt; can time out waiting for the element(s) to &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;exist in the DOM&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.find()&lt;/code&gt; 는 요소 &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;가 DOM&lt;/a&gt; 에 존재 하기를 기다리는 시간을 초과 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="92e4bdd7fce3000abad7e69f6f92d55bfd0b413f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.find()&lt;/code&gt; requires being chained off a command that yields DOM element(s).</source>
          <target state="translated">&lt;code&gt;.find()&lt;/code&gt; 는 DOM 요소를 생성하는 명령과 연결되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="b7864db83919ccd06562dd20e6737cb851b97fbe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.find()&lt;/code&gt; will automatically &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; until assertions you've chained all pass.</source>
          <target state="translated">&lt;code&gt;.find()&lt;/code&gt; 는 모든 체인을 연결 한 어설 션이 나올 때까지 자동으로 &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;다시 시도&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="8716a598b62b37eb073ef9473fc78feb451c7ae2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.find()&lt;/code&gt; will automatically &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; until the element(s) &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;exist in the DOM&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.find()&lt;/code&gt; 는 요소 &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;가 DOM에 존재할&lt;/a&gt; 때까지 자동으로 &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;재 시도 &lt;/a&gt;합니다 .</target>
        </trans-unit>
        <trans-unit id="9a0485c4fd27a486eaaeb43dd0210cdbb47b3a2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.find()&lt;/code&gt; yields the new DOM element(s) it found.</source>
          <target state="translated">&lt;code&gt;.find()&lt;/code&gt; 는 찾은 새로운 DOM 요소를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="03a5036bdc015335e79c1a57a233bfd15c5fed9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.first()&lt;/code&gt; can time out waiting for assertions you've added to pass.</source>
          <target state="translated">&lt;code&gt;.first()&lt;/code&gt; 는 추가 한 어설 션이 전달되기를 기다리는 시간을 초과 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="77790a7f957b6f75b94778d2f9a3d9fc79586554" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.first()&lt;/code&gt; can time out waiting for the element(s) to &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;exist in the DOM&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.first()&lt;/code&gt; 는 요소 &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;가 DOM&lt;/a&gt; 에 존재 하기를 기다리는 시간을 초과 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6ce6e886667f3215080399d23564cb2a1ec10288" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.first()&lt;/code&gt; requires being chained off a command that yields DOM element(s).</source>
          <target state="translated">&lt;code&gt;.first()&lt;/code&gt; 는 DOM 요소를 생성하는 명령과 연결되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="13aff5cefdc3b8b555dfc918a91f61d6d2920bea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.first()&lt;/code&gt; will automatically &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; until assertions you've chained all pass.</source>
          <target state="translated">&lt;code&gt;.first()&lt;/code&gt; 는 모든 체인을 연결 한 어설 션이 나올 때까지 자동으로 &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;재 시도&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="768cdfbb22eeecf9a675b94deb7a68da5e6b6ff6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.first()&lt;/code&gt; will automatically &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; until the element(s) &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;exist in the DOM&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.first()&lt;/code&gt; 는 요소 &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;가 DOM에 존재할&lt;/a&gt; 때까지 자동으로 &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;재 시도 &lt;/a&gt;합니다 .</target>
        </trans-unit>
        <trans-unit id="5f0064027935e62102b7c2ed5bbde9ab66ab70d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.first()&lt;/code&gt; will automatically &lt;a href=&quot;retry-ability&quot;&gt;retry&lt;/a&gt; until assertions you've chained all pass.</source>
          <target state="translated">&lt;code&gt;.first()&lt;/code&gt; 는 모든 체인을 연결 한 어설 션이 나올 때까지 자동으로 &lt;a href=&quot;retry-ability&quot;&gt;재 시도&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="f0ab327ffdb19d04d9e58198d756e59ebe7b795e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.first()&lt;/code&gt; will automatically &lt;a href=&quot;retry-ability&quot;&gt;retry&lt;/a&gt; until the element(s) &lt;a href=&quot;introduction-to-cypress#Default-Assertions&quot;&gt;exist in the DOM&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.first()&lt;/code&gt; 는 요소 &lt;a href=&quot;introduction-to-cypress#Default-Assertions&quot;&gt;가 DOM에 존재할&lt;/a&gt; 때까지 자동으로 &lt;a href=&quot;retry-ability&quot;&gt;재 시도 &lt;/a&gt;합니다 .</target>
        </trans-unit>
        <trans-unit id="b1ca6327946f3ae5934eabef3e36f960580280c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.first()&lt;/code&gt; yields the new DOM element(s) it found.</source>
          <target state="translated">&lt;code&gt;.first()&lt;/code&gt; 는 찾은 새로운 DOM 요소를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="5b8296e4a2cf4fa594f6ba72012c0ab32863a1c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.focus()&lt;/code&gt; can time out waiting for assertions you've added to pass.</source>
          <target state="translated">&lt;code&gt;.focus()&lt;/code&gt; 는 추가 한 어설 션이 전달되기를 기다리는 시간을 초과 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a167f13238fceff8991af40d7866105d67e0ca8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.focus()&lt;/code&gt; is just a helpful command which is a simple shortcut. Normally there&amp;rsquo;s no way for a user to &amp;ldquo;focus&amp;rdquo; an element without causing another action or side effect. Typically the user would have to click or tab to this element.</source>
          <target state="translated">&lt;code&gt;.focus()&lt;/code&gt; 는 간단한 단축키 인 유용한 명령입니다. 일반적으로 사용자가 다른 동작이나 부작용을 일으키지 않고 요소에 &quot;초점을 맞출&quot;방법이 없습니다. 일반적으로 사용자는이 요소를 클릭하거나 탭해야합니다.</target>
        </trans-unit>
        <trans-unit id="00c37d3bf3806f6d42b01ad67fa15f65a963192d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.focus()&lt;/code&gt; is not implemented like other action commands, and does not follow the same rules of &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;waiting for actionability&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.focus()&lt;/code&gt; 는 다른 작업 명령처럼 구현되지 않으며 작업 가능성을 &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;기다리는&lt;/a&gt; 동일한 규칙을 따르지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="97a4c4cd5bc1e30cbf0cb18fea72219c131777c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.focus()&lt;/code&gt; requires being chained off a command that yields DOM element(s).</source>
          <target state="translated">&lt;code&gt;.focus()&lt;/code&gt; 는 DOM 요소를 생성하는 명령과 연결되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="16d5c753a823c68b481a90cb0525917709d35dde" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.focus()&lt;/code&gt; requires the element to be able to receive focus.</source>
          <target state="translated">&lt;code&gt;.focus()&lt;/code&gt; 는 요소가 포커스를받을 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="9095ff1610f63cbf6e728e06097171f8c24d91d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.focus()&lt;/code&gt; will automatically wait for assertions you've chained to pass.</source>
          <target state="translated">&lt;code&gt;.focus()&lt;/code&gt; 는 연결 한 어설 션이 전달 될 때까지 자동으로 기다립니다.</target>
        </trans-unit>
        <trans-unit id="25c646926440391e4f65165e9654553f96145b68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.focus()&lt;/code&gt; yields the same subject it was given from the previous command.</source>
          <target state="translated">&lt;code&gt;.focus()&lt;/code&gt; 는 이전 명령에서와 동일한 주제를 산출합니다.</target>
        </trans-unit>
        <trans-unit id="b82e8572eaaf391f1e30ad2fd353c1d84654212a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.invoke()&lt;/code&gt; can time out waiting for assertions you've added to pass.</source>
          <target state="translated">&lt;code&gt;.invoke()&lt;/code&gt; 는 추가 한 어설 션이 전달되기를 기다리는 시간을 초과 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9a51ed33de099cd6e346a8bd8ccbd8b60422b8c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.invoke()&lt;/code&gt; requires being chained off a previous command.</source>
          <target state="translated">&lt;code&gt;.invoke()&lt;/code&gt; 는 이전 명령과 연결되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="1113cf4494eb1998bef431f656afa573b90c465a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.invoke()&lt;/code&gt; will automatically &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; until assertions you've chained all pass.</source>
          <target state="translated">&lt;code&gt;.invoke()&lt;/code&gt; 는 모든 체인을 연결 한 어설 션이 나올 때까지 자동으로 &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;재 시도&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="953778ec0cbe63ab93da110e4e4d34f8f0bbcb36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.invoke()&lt;/code&gt; will wait for the &lt;code&gt;function&lt;/code&gt; to exist on the subject before running.</source>
          <target state="translated">&lt;code&gt;.invoke()&lt;/code&gt; 는 실행하기 전에 주제에 &lt;code&gt;function&lt;/code&gt; 가 존재하기를 기다립니다 .</target>
        </trans-unit>
        <trans-unit id="c93b96ecd3f6cc1ab7ab066a7700b210176cf235" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.its()&lt;/code&gt; can time out waiting for assertions you've added to pass.</source>
          <target state="translated">&lt;code&gt;.its()&lt;/code&gt; 는 추가 한 어설 션을 기다리는 동안 시간이 초과 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ea796291660ea4ded4fae50c3533cdad42627fbe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.its()&lt;/code&gt; can time out waiting for the property to exist.</source>
          <target state="translated">&lt;code&gt;.its()&lt;/code&gt; 는 속성이 존재하기를 기다리는 시간을 초과 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ad0ab1dcb37054e04aa2ca28686a68fc769cf5b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.its()&lt;/code&gt; requires being chained off a previous command.</source>
          <target state="translated">&lt;code&gt;.its()&lt;/code&gt; 는 이전 명령과 연결되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="d21a91c98cfb24ca0c52c958e66f9d969917ae1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.its()&lt;/code&gt; will automatically &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; until assertions you've chained all pass.</source>
          <target state="translated">&lt;code&gt;.its()&lt;/code&gt; 는 모든 체인을 연결 한 어설 션이 나올 때까지 자동으로 &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;재 시도&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="e2da3ad26c96a509319088665aa81fccf85bafe2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.its()&lt;/code&gt; will automatically &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; until the subject's property is not &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.its()&lt;/code&gt; 는 주제의 속성이 &lt;code&gt;null&lt;/code&gt; 또는 &lt;code&gt;undefined&lt;/code&gt; 가 아닐 때까지 자동으로 &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;재 시도&lt;/a&gt; 합니다 .</target>
        </trans-unit>
        <trans-unit id="a40bb43cd3b787f35f9337fe0b59a4328ac0b422" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.its()&lt;/code&gt; yields the value of the property.</source>
          <target state="translated">&lt;code&gt;.its()&lt;/code&gt; 는 속성 값을 산출합니다.</target>
        </trans-unit>
        <trans-unit id="3ce77e25acf3fb02e460c199bd6092cfd24c240c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.last()&lt;/code&gt; can time out waiting for assertions you've added to pass.</source>
          <target state="translated">&lt;code&gt;.last()&lt;/code&gt; 는 추가 한 어설 션이 전달되기를 기다리는 시간을 초과 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b61ff93cc52f5a9608480c14d27107c6a69a5709" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.last()&lt;/code&gt; can time out waiting for the element(s) to &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;exist in the DOM&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.last()&lt;/code&gt; 는 요소 &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;가 DOM&lt;/a&gt; 에 존재 하기를 기다리는 시간을 초과 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cf6def6cf7a1bb3dac3b9bae3c16606a9498b151" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.last()&lt;/code&gt; requires being chained off a command that yields DOM element(s).</source>
          <target state="translated">&lt;code&gt;.last()&lt;/code&gt; 는 DOM 요소를 생성하는 명령과 연결되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="0dd6b4a7ae4fe80a1bb6062d84d875fc45f172a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.last()&lt;/code&gt; will automatically &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; until assertions you've chained all pass.</source>
          <target state="translated">&lt;code&gt;.last()&lt;/code&gt; 는 모든 체인을 연결 한 어설 션이 전달 될 때까지 자동으로 &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;재 시도&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="f5a7b5864be06ee3fdc0de218e644001359635d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.last()&lt;/code&gt; will automatically &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; until the element(s) &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;exist in the DOM&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.last()&lt;/code&gt; 는 요소 &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;가 DOM에 존재할&lt;/a&gt; 때까지 자동으로 &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;재 시도 &lt;/a&gt;합니다 .</target>
        </trans-unit>
        <trans-unit id="97de978c0942b03d27505e141b14de5e0b7d30e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.last()&lt;/code&gt; yields the new DOM element(s) it found.</source>
          <target state="translated">&lt;code&gt;.last()&lt;/code&gt; 는 찾은 새로운 DOM 요소를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="445c3832bf78063cc0f451a97346f0571f366aab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.next()&lt;/code&gt; can time out waiting for assertions you've added to pass.</source>
          <target state="translated">&lt;code&gt;.next()&lt;/code&gt; 는 추가 한 어설 션이 전달되기를 기다리는 시간을 초과 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="37a68562444c7de79f10cccbc25dbb5b439a5424" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.next()&lt;/code&gt; can time out waiting for the element(s) to &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;exist in the DOM&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.next()&lt;/code&gt; 는 요소 &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;가 DOM&lt;/a&gt; 에 존재 하기를 기다리는 시간을 초과 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7191796d570de5e7b056c7505429fe2a6dfa694d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.next()&lt;/code&gt; requires being chained off a command that yields DOM element(s).</source>
          <target state="translated">&lt;code&gt;.next()&lt;/code&gt; 는 DOM 요소를 생성하는 명령과 연결되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="384ba34328cf86a2245a4b6cd39303c41bb7c611" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.next()&lt;/code&gt; will automatically &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; until assertions you've chained all pass.</source>
          <target state="translated">&lt;code&gt;.next()&lt;/code&gt; 는 모든 체인을 연결 한 어설 션이 나올 때까지 자동으로 &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;다시 시도&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="9077d544d4797920382d74c8195046277791ce03" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.next()&lt;/code&gt; will automatically &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; until the element(s) &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;exist in the DOM&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.next()&lt;/code&gt; 는 요소 &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;가 DOM에 존재할&lt;/a&gt; 때까지 자동으로 &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;재 시도 &lt;/a&gt;합니다 .</target>
        </trans-unit>
        <trans-unit id="dea800cdd3cde56a008fb33e9d2ad00714bda685" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.next()&lt;/code&gt; yields the new DOM element(s) it found.</source>
          <target state="translated">&lt;code&gt;.next()&lt;/code&gt; 는 찾은 새로운 DOM 요소를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="9531b5919820e2242188ba4f2012bb7ca8ff24e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.nextAll()&lt;/code&gt; can time out waiting for assertions you've added to pass.</source>
          <target state="translated">&lt;code&gt;.nextAll()&lt;/code&gt; 은 추가 한 어설 션이 전달되기를 기다리는 시간을 초과 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a77700784b04c71cf337b9b49566695b9095fcc0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.nextAll()&lt;/code&gt; can time out waiting for the element(s) to &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;exist in the DOM&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.nextAll()&lt;/code&gt; 은 요소 &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;가 DOM&lt;/a&gt; 에 존재 하기를 기다리는 시간을 초과 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3f26d9bb7235fd2241673cfbfe2032ce575a30d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.nextAll()&lt;/code&gt; requires being chained off a command that yields DOM element(s).</source>
          <target state="translated">&lt;code&gt;.nextAll()&lt;/code&gt; 은 DOM 요소를 생성하는 명령과 연결되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="863c8a12c2e3ac7e983c9f1490094425175eba29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.nextAll()&lt;/code&gt; will automatically &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; until assertions you've chained all pass.</source>
          <target state="translated">&lt;code&gt;.nextAll()&lt;/code&gt; 은 모든 패스를 연결 한 어설 션이있을 때까지 자동으로 &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;다시 시도&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="afad93babc7a5219cfe1d8cf2df8fc0eaf4f7b0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.nextAll()&lt;/code&gt; will automatically &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; until the element(s) &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;exist in the DOM&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.nextAll()&lt;/code&gt; 은 요소 &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;가 DOM에 존재할&lt;/a&gt; 때까지 자동으로 &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;재 시도 &lt;/a&gt;합니다 .</target>
        </trans-unit>
        <trans-unit id="fc7ec9a154b61c97e00cf41729083522c9d8afb0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.nextAll()&lt;/code&gt; yields the new DOM element(s) it found.</source>
          <target state="translated">&lt;code&gt;.nextAll()&lt;/code&gt; 은 찾은 새로운 DOM 요소를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="c0b6be987a77f6807d673dcae40abde2e78f7c9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.nextUntil()&lt;/code&gt; can time out waiting for assertions you've added to pass.</source>
          <target state="translated">&lt;code&gt;.nextUntil()&lt;/code&gt; 은 추가 한 어설 션이 전달되기를 기다리는 시간을 초과 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4875a811a8bfb15c6d7afd12e9cdc24311466763" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.nextUntil()&lt;/code&gt; can time out waiting for the element(s) to &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;exist in the DOM&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.nextUntil()&lt;/code&gt; 은 요소 &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;가 DOM&lt;/a&gt; 에 존재 하기를 기다리는 시간을 초과 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="56fe18f93453a70e66544f6283501659e038d08d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.nextUntil()&lt;/code&gt; requires being chained off a command that yields DOM element(s).</source>
          <target state="translated">&lt;code&gt;.nextUntil()&lt;/code&gt; 에는 DOM 요소를 생성하는 명령이 연결되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="8298bc06027b11d15584131c5b10a7e89a8cc011" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.nextUntil()&lt;/code&gt; will automatically &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; until assertions you've chained all pass.</source>
          <target state="translated">&lt;code&gt;.nextUntil()&lt;/code&gt; 은 모든 체인을 연결 한 어설 션이 나올 때까지 자동으로 &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;재 시도&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="d509851f7e8dddfa133fa8080caec7b9e0fe522a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.nextUntil()&lt;/code&gt; will automatically &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; until the element(s) &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;exist in the DOM&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.nextUntil()&lt;/code&gt; 은 요소 &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;가 DOM에 존재할&lt;/a&gt; 때까지 자동으로 &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;재 시도 &lt;/a&gt;합니다 .</target>
        </trans-unit>
        <trans-unit id="b520c584c06151f8d64ac46f3faed48844aab2a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.nextUntil()&lt;/code&gt; yields the new DOM element(s) it found.</source>
          <target state="translated">&lt;code&gt;.nextUntil()&lt;/code&gt; 은 찾은 새로운 DOM 요소를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="c603cb307c0fe5a2252f571c26cecb3ace010aa3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.not()&lt;/code&gt; can time out waiting for assertions you've added to pass.</source>
          <target state="translated">&lt;code&gt;.not()&lt;/code&gt; 은 추가 한 어설 션을 기다리는 동안 시간이 초과 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c5921879caaa58957d1739c071177dfd6a3f5d18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.not()&lt;/code&gt; can time out waiting for the element(s) to &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;exist in the DOM&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.not()&lt;/code&gt; 은 요소 &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;가 DOM&lt;/a&gt; 에 존재 하기를 기다리는 시간을 초과 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="46a173a7dea245aaba028a309116098ee133a674" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.not()&lt;/code&gt; requires being chained off a command that yields DOM element(s).</source>
          <target state="translated">&lt;code&gt;.not()&lt;/code&gt; 은 DOM 요소를 생성하는 명령과 연결되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="34b25c87149af02a2596ea7af67f75c4e36eb91b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.not()&lt;/code&gt; will automatically &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; until assertions you've chained all pass.</source>
          <target state="translated">&lt;code&gt;.not()&lt;/code&gt; 은 모든 체인을 연결 한 어설 션이 나올 때까지 자동으로 &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;재 시도&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="dd5429ad41c3cc5d98c1fd0289e8f23f3453d4c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.not()&lt;/code&gt; will automatically &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; until the element(s) &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;exist in the DOM&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.not()&lt;/code&gt; 은 요소 &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;가 DOM에 존재할&lt;/a&gt; 때까지 자동으로 &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;재 시도 &lt;/a&gt;합니다 .</target>
        </trans-unit>
        <trans-unit id="eb09e4e3c19aa90805901a54eeb4aaf781058d29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.not()&lt;/code&gt; yields the new DOM element(s) it found.</source>
          <target state="translated">&lt;code&gt;.not()&lt;/code&gt; 은 발견 한 새로운 DOM 요소를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="832dcb360191e9bdfb08497d0fc85171a86af1f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.parent()&lt;/code&gt; can time out waiting for assertions you've added to pass.</source>
          <target state="translated">&lt;code&gt;.parent()&lt;/code&gt; 는 추가 한 어설 션이 전달되기를 기다리는 시간을 초과 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="19ef2e82d0830bde9b2399aae4c22145f39e629f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.parent()&lt;/code&gt; can time out waiting for the element(s) to &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;exist in the DOM&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.parent()&lt;/code&gt; 는 요소 &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;가 DOM&lt;/a&gt; 에 존재 하기를 기다리는 시간을 초과 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a8b1f9339651026cdf4eec8f7ba3bca7773b9384" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.parent()&lt;/code&gt; requires being chained off a command that yields DOM element(s).</source>
          <target state="translated">&lt;code&gt;.parent()&lt;/code&gt; 는 DOM 요소를 생성하는 명령과 연결되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="5bf3e7cac77f00a3498faee9f47e9664bec148bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.parent()&lt;/code&gt; will automatically &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; until assertions you've chained all pass.</source>
          <target state="translated">&lt;code&gt;.parent()&lt;/code&gt; 는 모든 체인을 연결 한 어설 션이 전달 될 때까지 자동으로 &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;재 시도&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="2e10176f980b8100ff3eb813100fa6b3899186bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.parent()&lt;/code&gt; will automatically &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; until the element(s) &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;exist in the DOM&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.parent()&lt;/code&gt; 는 요소 &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;가 DOM에 존재할&lt;/a&gt; 때까지 자동으로 &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;재 시도 &lt;/a&gt;합니다 .</target>
        </trans-unit>
        <trans-unit id="3dd9b89f0b2890b29be317d8770191c73fe3eb5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.parent()&lt;/code&gt; yields the new DOM element(s) it found.</source>
          <target state="translated">&lt;code&gt;.parent()&lt;/code&gt; 는 찾은 새로운 DOM 요소를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="3d8363f40aecf6d3d959f460898592e66d59617a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.parents()&lt;/code&gt; can time out waiting for assertions you've added to pass.</source>
          <target state="translated">&lt;code&gt;.parents()&lt;/code&gt; 는 추가 한 어설 션이 전달되기를 기다리는 시간을 초과 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3560b361f004398bd452df2243049ee9cd2a6ed1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.parents()&lt;/code&gt; can time out waiting for the element(s) to &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;exist in the DOM&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.parents()&lt;/code&gt; 는 요소 &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;가 DOM&lt;/a&gt; 에 존재 하기를 기다리는 시간을 초과 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cb895281349c03aae63fbd094a7e2e1abb5b4997" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.parents()&lt;/code&gt; requires being chained off a command that yields DOM element(s).</source>
          <target state="translated">&lt;code&gt;.parents()&lt;/code&gt; 는 DOM 요소를 생성하는 명령과 연결되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="63386d318e4548f35484f614313aab81c739f5d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.parents()&lt;/code&gt; will automatically &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; until assertions you've chained all pass.</source>
          <target state="translated">&lt;code&gt;.parents()&lt;/code&gt; 는 모든 체인을 연결 한 어설 션이 전달 될 때까지 자동으로 &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;다시 시도&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="83e061daf7098c1fb1ec3e173526d01844a04b70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.parents()&lt;/code&gt; will automatically &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; until the element(s) &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;exist in the DOM&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.parents()&lt;/code&gt; 는 요소 &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;가 DOM에 존재할&lt;/a&gt; 때까지 자동으로 &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;재 시도 &lt;/a&gt;합니다 .</target>
        </trans-unit>
        <trans-unit id="a39130e1666aa31fa959f28fc067f23d81cb5fdc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.parents()&lt;/code&gt; yields the new DOM element(s) it found.</source>
          <target state="translated">&lt;code&gt;.parents()&lt;/code&gt; 는 찾은 새로운 DOM 요소를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="481bd271ba585fc2cb9796c6a2a22d047c3ac186" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.parentsUntil()&lt;/code&gt; can time out waiting for assertions you've added to pass.</source>
          <target state="translated">&lt;code&gt;.parentsUntil()&lt;/code&gt; 은 추가 한 어설 션이 전달되기를 기다리는 시간을 초과 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4c381e3e65355e50401bb9911c7a1e09e65fc060" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.parentsUntil()&lt;/code&gt; can time out waiting for the element(s) to &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;exist in the DOM&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.parentsUntil()&lt;/code&gt; 은 요소 &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;가 DOM&lt;/a&gt; 에 존재 하기를 기다리는 시간을 초과 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5c143109e6a8c7d2c18c0b17fbff655ed0770b5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.parentsUntil()&lt;/code&gt; requires being chained off a command that yields DOM element(s).</source>
          <target state="translated">&lt;code&gt;.parentsUntil()&lt;/code&gt; 에는 DOM 요소를 생성하는 명령이 연결되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="3da5093235d914aab650be9ebccc3d239b75b186" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.parentsUntil()&lt;/code&gt; will automatically &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; until assertions you've chained all pass.</source>
          <target state="translated">&lt;code&gt;.parentsUntil()&lt;/code&gt; 은 모든 체인을 연결 한 어설 션이 나올 때까지 자동으로 &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;재 시도&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="b162206aa39aad167f2f59914fe19bdeb26aad5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.parentsUntil()&lt;/code&gt; will automatically &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; until the element(s) &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;exist in the DOM&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.parentsUntil()&lt;/code&gt; 은 &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;DOM에&lt;/a&gt; 요소 가 존재할 때까지 자동으로 &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;재 시도 &lt;/a&gt;합니다 .</target>
        </trans-unit>
        <trans-unit id="d2948c903d7ddca5c60a0719294ec797893af32b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.parentsUntil()&lt;/code&gt; yields the new DOM element(s) it found.</source>
          <target state="translated">&lt;code&gt;.parentsUntil()&lt;/code&gt; 은 찾은 새로운 DOM 요소를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="12d943698433dc12f3b655235d58740eae0348f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.pause()&lt;/code&gt; cannot time out.</source>
          <target state="translated">&lt;code&gt;.pause()&lt;/code&gt; 가 시간 초과 될 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="ae0f20470e5a4e532fea02181b0b9ef9f486ab41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.pause()&lt;/code&gt; is a utility command.</source>
          <target state="translated">&lt;code&gt;.pause()&lt;/code&gt; 는 유틸리티 명령입니다.</target>
        </trans-unit>
        <trans-unit id="19008ed797e3c4833c71ca521354583c53d8a9a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.pause()&lt;/code&gt; will not run assertions. Assertions will pass through as if this command did not exist.</source>
          <target state="translated">&lt;code&gt;.pause()&lt;/code&gt; 는 어설 션을 실행하지 않습니다. 이 명령이없는 것처럼 어설 션이 통과합니다.</target>
        </trans-unit>
        <trans-unit id="b64a9b9c62d63d113407a5c47c8e8085b8b7c18f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.pause()&lt;/code&gt; yields the same subject it was given from the previous command.</source>
          <target state="translated">&lt;code&gt;.pause()&lt;/code&gt; 는 이전 명령에서 제공된 것과 동일한 주제를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="97c702a405f155958ad84b6bb69ce396ed6638f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.pause()&lt;/code&gt;&lt;code&gt;.pause()&lt;/code&gt; can be chained off of &lt;code&gt;cy&lt;/code&gt; or off another command</source>
          <target state="translated">&lt;code&gt;.pause()&lt;/code&gt; &lt;code&gt;.pause()&lt;/code&gt; 는 &lt;code&gt;cy&lt;/code&gt; 또는 다른 명령 과 연결될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ebcdfc60276cb46e1313396e7cbe1a8a843b372d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.prev()&lt;/code&gt; can time out waiting for assertions you've added to pass.</source>
          <target state="translated">&lt;code&gt;.prev()&lt;/code&gt; 는 추가 한 어설 션이 전달되기를 기다리는 시간을 초과 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="744d176d5a0530dffbc89a3ee1de9d08a226e8de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.prev()&lt;/code&gt; can time out waiting for the element(s) to &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;exist in the DOM&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.prev()&lt;/code&gt; 는 요소 &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;가 DOM&lt;/a&gt; 에 존재 하기를 기다리는 시간을 초과 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3b58ff8162177455b1214ac39c31b13fe2badb5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.prev()&lt;/code&gt; requires being chained off a command that yields DOM element(s).</source>
          <target state="translated">&lt;code&gt;.prev()&lt;/code&gt; 는 DOM 요소를 생성하는 명령과 연결되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="38be00cd5873b6add756bce896e136f6f7070935" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.prev()&lt;/code&gt; will automatically &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; until assertions you've chained all pass.</source>
          <target state="translated">&lt;code&gt;.prev()&lt;/code&gt; 는 모든 체인을 연결 한 어설 션이 나올 때까지 자동으로 &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;재 시도&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="9500acafc26ae637cf95048f284bede93734c83c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.prev()&lt;/code&gt; will automatically &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; until the element(s) &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;exist in the DOM&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.prev()&lt;/code&gt; 는 요소 &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;가 DOM에 존재할&lt;/a&gt; 때까지 자동으로 &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;재 시도 &lt;/a&gt;합니다 .</target>
        </trans-unit>
        <trans-unit id="cedee88f28e25f00e57f4fb0fb81e68415ec62fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.prev()&lt;/code&gt; yields the new DOM element(s) it found.</source>
          <target state="translated">&lt;code&gt;.prev()&lt;/code&gt; 는 발견 한 새로운 DOM 요소를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="35fd4b8778cfe40d7e6df8a8f7ad8507b00b070b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.prevAll()&lt;/code&gt; can time out waiting for assertions you've added to pass.</source>
          <target state="translated">&lt;code&gt;.prevAll()&lt;/code&gt; 은 추가 한 어설 션이 전달되기를 기다리는 시간을 초과 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ee6e20a6ac17b9e44f025dd8a9f4c4b420fcf5be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.prevAll()&lt;/code&gt; can time out waiting for the element(s) to &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;exist in the DOM&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.prevAll()&lt;/code&gt; 은 요소 &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;가 DOM&lt;/a&gt; 에 존재 하기를 기다리는 시간을 초과 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="499958111658dbb788be7e09fd148ef521a6f2c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.prevAll()&lt;/code&gt; requires being chained off a command that yields DOM element(s).</source>
          <target state="translated">&lt;code&gt;.prevAll()&lt;/code&gt; 은 DOM 요소를 생성하는 명령과 연결되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="3bf75d0e910a9eee067a1c622dbeb47ddd5d58a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.prevAll()&lt;/code&gt; will automatically &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; until assertions you've chained all pass.</source>
          <target state="translated">&lt;code&gt;.prevAll()&lt;/code&gt; 은 모든 패스를 연결 한 어설 션이있을 때까지 자동으로 &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;재 시도&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="79c9a2d586c5b039b63d610a5ade6f0761f8aa8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.prevAll()&lt;/code&gt; will automatically &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; until the element(s) &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;exist in the DOM&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.prevAll()&lt;/code&gt; 은 요소 &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;가 DOM에 존재할&lt;/a&gt; 때까지 자동으로 &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;재 시도 &lt;/a&gt;합니다 .</target>
        </trans-unit>
        <trans-unit id="22335b74afe6402c6a5d607f6ba30b156db6e785" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.prevAll()&lt;/code&gt; yields the new DOM element(s) it found.</source>
          <target state="translated">&lt;code&gt;.prevAll()&lt;/code&gt; 은 찾은 새로운 DOM 요소를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="a15d0500cc4f78c7ea6f1dac8f32037cfb21d3e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.prevUntil()&lt;/code&gt; can time out waiting for assertions you've added to pass.</source>
          <target state="translated">&lt;code&gt;.prevUntil()&lt;/code&gt; 은 추가 한 어설 션이 전달되기를 기다리는 시간을 초과 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d84b403895c08928de8a45e776950120655a88c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.prevUntil()&lt;/code&gt; can time out waiting for the element(s) to &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;exist in the DOM&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.prevUntil()&lt;/code&gt; 은 요소 &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;가 DOM&lt;/a&gt; 에 존재 하기를 기다리는 시간을 초과 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="85a8e6ca3f3d5a25375b2f272fd5668ca0505aa0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.prevUntil()&lt;/code&gt; requires being chained off a command that yields DOM element(s).</source>
          <target state="translated">&lt;code&gt;.prevUntil()&lt;/code&gt; 에는 DOM 요소를 생성하는 명령이 연결되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="37332c06e6641e64a308fce9db28733b4a33c8bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.prevUntil()&lt;/code&gt; will automatically &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; until assertions you've chained all pass.</source>
          <target state="translated">&lt;code&gt;.prevUntil()&lt;/code&gt; 은 모든 체인을 연결 한 어설 션이 나올 때까지 자동으로 &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;재 시도&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="e7db8b2cb5ceb408648a1242429713b63e1f0298" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.prevUntil()&lt;/code&gt; will automatically &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; until the element(s) &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;exist in the DOM&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.prevUntil()&lt;/code&gt; 은 &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;DOM에&lt;/a&gt; 요소 가 존재할 때까지 자동으로 &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;재 시도 &lt;/a&gt;합니다 .</target>
        </trans-unit>
        <trans-unit id="009d296907d9fffd8a315327f889893fdb58a689" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.prevUntil()&lt;/code&gt; yields the new DOM element(s) it found.</source>
          <target state="translated">&lt;code&gt;.prevUntil()&lt;/code&gt; 은 발견 한 새로운 DOM 요소를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="3e97b4229b6d2ef8d541fbcbe6d3c7b7b2cf20f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.root()&lt;/code&gt; yields the root DOM element.</source>
          <target state="translated">&lt;code&gt;.root()&lt;/code&gt; 는 루트 DOM 요소를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="739b8d644dded97b23cf0de704a44e56f58f3c96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.screenshot()&lt;/code&gt; yields the same subject it was given from the previous command.</source>
          <target state="translated">&lt;code&gt;.screenshot()&lt;/code&gt; 은 이전 명령에서 제공된 것과 동일한 주제를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="112f1553397d0ea52031882438bd8fb0a52c60ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.scrollIntoView()&lt;/code&gt; can time out waiting for assertions you've added to pass.</source>
          <target state="translated">&lt;code&gt;.scrollIntoView()&lt;/code&gt; 는 추가 한 어설 션이 전달되기를 기다리는 시간을 초과 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2d6abc38135b5c96ca56843a69235089b4cf4fee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.scrollIntoView()&lt;/code&gt; requires being chained off a command that yields DOM element(s).</source>
          <target state="translated">&lt;code&gt;.scrollIntoView()&lt;/code&gt; 는 DOM 요소를 생성하는 명령과 연결되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="26044a48321274c2f8fc030b14f4aa8c80fdd341" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.scrollIntoView()&lt;/code&gt; will automatically wait for assertions you've chained to pass.</source>
          <target state="translated">&lt;code&gt;.scrollIntoView()&lt;/code&gt; 는 연결 한 어설 션이 전달 될 때까지 자동으로 기다립니다.</target>
        </trans-unit>
        <trans-unit id="496cc351f1c9d843ff7a31517b60b715ef8c5cfb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.scrollIntoView()&lt;/code&gt; yields the same subject it was given from the previous command.</source>
          <target state="translated">&lt;code&gt;.scrollIntoView()&lt;/code&gt; 는 이전 명령에서와 동일한 주제를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="100bccce180cdcbf7e6317200c6eda6491410a23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.scrollTo()&lt;/code&gt; can time out waiting for assertions you've added to pass.</source>
          <target state="translated">&lt;code&gt;.scrollTo()&lt;/code&gt; 는 추가 한 어설 션이 전달되기를 기다리는 시간을 초과 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="72de19ddd51400ab1e7da827a0c03992ce9ff89c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.scrollTo()&lt;/code&gt; requires being chained off a command that yields DOM element(s).</source>
          <target state="translated">&lt;code&gt;.scrollTo()&lt;/code&gt; 는 DOM 요소를 생성하는 명령과 연결되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="547c9b96f2192a86e07e3fc322f016f9d2ca2cd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.scrollTo()&lt;/code&gt; requires the element to be scrollable.</source>
          <target state="translated">&lt;code&gt;.scrollTo()&lt;/code&gt; 에는 요소를 스크롤 할 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="54031143448666eeee2202167cdbe773f280f698" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.select()&lt;/code&gt; can time out waiting for assertions you've added to pass.</source>
          <target state="translated">&lt;code&gt;.select()&lt;/code&gt; 는 추가 한 어설 션이 전달되기를 기다리는 시간을 초과 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7b272eb7a34fc2874b9d3aba49ff451574576d09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.select()&lt;/code&gt; can time out waiting for the element to reach an &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;actionable state&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.select()&lt;/code&gt; 는 요소가 &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;실행 가능한 상태&lt;/a&gt; 에 도달하기를 기다리는 시간을 초과 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8a9d8eb7a3294584b216a5a096d4aad450e34c7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.select()&lt;/code&gt; is an &amp;ldquo;action command&amp;rdquo; that follows all the rules &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;defined here&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.select()&lt;/code&gt; 는 &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;여기에 정의 된&lt;/a&gt; 모든 규칙을 따르는&amp;ldquo;작업 명령&amp;rdquo;입니다 .</target>
        </trans-unit>
        <trans-unit id="654b19f824605c4dfb080605ef3b3c82595eda3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.select()&lt;/code&gt; requires being chained off a command that yields DOM element(s).</source>
          <target state="translated">&lt;code&gt;.select()&lt;/code&gt; 는 DOM 요소를 생성하는 명령과 연결되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="cd09754c89e245eff488393022dbc6777bd9ef6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.select()&lt;/code&gt; requires the element to be a &lt;code&gt;select&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.select()&lt;/code&gt; 는 요소가 &lt;code&gt;select&lt;/code&gt; 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="e86812fb0eec2b2935e6197c635ea1dfc30f72ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.select()&lt;/code&gt; will automatically wait for assertions you've chained to pass.</source>
          <target state="translated">&lt;code&gt;.select()&lt;/code&gt; 는 연결 한 어설 션이 전달 될 때까지 자동으로 기다립니다.</target>
        </trans-unit>
        <trans-unit id="30bc7bf3df2b10b4fbdba9cdcac4bc04cbbad219" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.select()&lt;/code&gt; will automatically wait for the element to reach an &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;actionable state&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.select()&lt;/code&gt; 는 요소가 &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;실행 가능한 상태&lt;/a&gt; 가 될 때까지 자동으로 기다립니다 .</target>
        </trans-unit>
        <trans-unit id="e204ad95d3b9e75a7dfe57b10ae0413c4c50ad55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.select()&lt;/code&gt; yields the same subject it was given from the previous command.</source>
          <target state="translated">&lt;code&gt;.select()&lt;/code&gt; 는 이전 명령에서 제공된 것과 동일한 주제를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="bbe76ae5227594b0f7aff431c1a45ee523960604" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.should()&lt;/code&gt; command added</source>
          <target state="translated">&lt;code&gt;.should()&lt;/code&gt; 명령 추가</target>
        </trans-unit>
        <trans-unit id="535cff25c4551fc7390831756ddfe8ee12da94a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.should()&lt;/code&gt; requires being chained off a previous command.</source>
          <target state="translated">&lt;code&gt;.should()&lt;/code&gt; 는 이전 명령과 연결되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="0211b44ab3b3ff3914efcc7d17019fa501ffc4c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.should()&lt;/code&gt; will continue to &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; its specified assertions until it times out.</source>
          <target state="translated">&lt;code&gt;.should()&lt;/code&gt; 는 시간이 초과 될 때까지 지정된 어설 션을 계속 &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;재 시도&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="d94e59cf43403d9e12d34761b0a4a32df147cdf4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.siblings()&lt;/code&gt; can time out waiting for assertions you've added to pass.</source>
          <target state="translated">&lt;code&gt;.siblings()&lt;/code&gt; 는 추가 한 어설 션이 전달되기를 기다리는 시간을 초과 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a27701e535b3b301e8a0591b1a1d3e1db1191a6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.siblings()&lt;/code&gt; can time out waiting for the element(s) to &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;exist in the DOM&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.siblings()&lt;/code&gt; 는 요소 &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;가 DOM&lt;/a&gt; 에 존재 하기를 기다리는 시간을 초과 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="60469cb31636885fc9d8ea59cc31089cc0452ae5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.siblings()&lt;/code&gt; command added</source>
          <target state="translated">&lt;code&gt;.siblings()&lt;/code&gt; 명령 추가</target>
        </trans-unit>
        <trans-unit id="4bf57f04e4b54e1635cd22a6c9c152ed603fd9a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.siblings()&lt;/code&gt; requires being chained off a command that yields DOM element(s).</source>
          <target state="translated">&lt;code&gt;.siblings()&lt;/code&gt; 는 DOM 요소를 생성하는 명령과 연결되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="68367f8b0309b00d68643e14dfa93353987e8f52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.siblings()&lt;/code&gt; will automatically &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; until assertions you've chained all pass.</source>
          <target state="translated">&lt;code&gt;.siblings()&lt;/code&gt; 는 모든 체인을 연결 한 어설 션이 나올 때까지 자동으로 &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;재 시도&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="a469f997f43aa3b7fc63e7d7aec15fc415505d14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.siblings()&lt;/code&gt; will automatically &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; until the element(s) &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;exist in the DOM&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.siblings()&lt;/code&gt; 는 요소 &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;가 DOM에 존재할&lt;/a&gt; 때까지 자동으로 &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;재 시도 &lt;/a&gt;합니다 .</target>
        </trans-unit>
        <trans-unit id="2a28bd9824079ba12fc56a55269bacbba20514a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.siblings()&lt;/code&gt; yields the new DOM element(s) it found.</source>
          <target state="translated">&lt;code&gt;.siblings()&lt;/code&gt; 는 찾은 새로운 DOM 요소를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="7a815315f895890c0364ca0ab5ab2bf4a716c283" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.spread()&lt;/code&gt; can time out waiting for a promise you've returned to resolve.</source>
          <target state="translated">&lt;code&gt;.spread()&lt;/code&gt; 는 해결하기로 약속 한 약속을 기다리는 시간을 초과 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e0298c49ad8232d79769c6aeeb8e0306201eee74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.spread()&lt;/code&gt; command added</source>
          <target state="translated">&lt;code&gt;.spread()&lt;/code&gt; 명령 추가</target>
        </trans-unit>
        <trans-unit id="efffa99d9df97cf830c7c0da8380767ce016ac82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.spread()&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; log in the Command Log</source>
          <target state="translated">&lt;code&gt;.spread()&lt;/code&gt; 가 명령 로그에 기록 되지 &lt;em&gt;않습니다&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="071b9918a956bb0ccc8a7e9bd90ab5717623c701" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.spread()&lt;/code&gt; requires being chained off a previous command.</source>
          <target state="translated">&lt;code&gt;.spread()&lt;/code&gt; 는 이전 명령과 연결되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="5bada43e4710a70f3f618664898b0ad35f99f773" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.spread()&lt;/code&gt; requires being chained off of a command that yields an array-like structure.</source>
          <target state="translated">&lt;code&gt;.spread()&lt;/code&gt; 는 배열과 유사한 구조를 생성하는 명령과 연결되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="b73a9a0431d9413948b41c430ed5599f39bea9e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.spread()&lt;/code&gt; will not change the subject if &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;.spread()&lt;/code&gt; &lt;code&gt;null&lt;/code&gt; 또는 &lt;code&gt;undefined&lt;/code&gt; 가 반환 되면 .spread () 는 제목을 변경하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="e72436fa0cf9d8aa1b59b03e809c12a7a6729b23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.spread()&lt;/code&gt; will only run assertions you've chained once, and will not &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.spread()&lt;/code&gt; 는 한 번 연결 한 어설 션 만 실행하며 &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;다시 시도&lt;/a&gt; 하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="b94be85abbcfb193be5d484b87e2b25be53fabe0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.spread()&lt;/code&gt; yields the return value of your callback function.</source>
          <target state="translated">&lt;code&gt;.spread()&lt;/code&gt; 는 콜백 함수의 반환 값을 산출합니다.</target>
        </trans-unit>
        <trans-unit id="b74e7d222f0f6139321584b10c36ce160214eb5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.submit()&lt;/code&gt; can time out waiting for assertions you've added to pass.</source>
          <target state="translated">&lt;code&gt;.submit()&lt;/code&gt; 은 추가 한 어설 션이 전달되기를 기다리는 시간을 초과 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5da761e42b476a54291557ced79c29b91a4fab23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.submit()&lt;/code&gt; command added</source>
          <target state="translated">&lt;code&gt;.submit()&lt;/code&gt; 명령 추가</target>
        </trans-unit>
        <trans-unit id="2a69940cb53d3a0d67dd0caa030a25e4ead5553b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.submit()&lt;/code&gt; is just a helpful command which is a simple shortcut. Normally a user has to perform a different &amp;ldquo;action&amp;rdquo; to submit a form. It could be clicking a submit &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;, or pressing &lt;code&gt;enter&lt;/code&gt; on a keyboard.</source>
          <target state="translated">&lt;code&gt;.submit()&lt;/code&gt; 은 간단한 단축키 인 유용한 명령입니다. 일반적으로 사용자는 양식을 제출하기 위해 다른 &quot;작업&quot;을 수행해야합니다. 제출 &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; 을 클릭 하거나 키보드에서 &lt;code&gt;enter&lt;/code&gt; 를 누르십시오.</target>
        </trans-unit>
        <trans-unit id="f18ef503f12a5f04b6deafb9a2cc7073355975cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.submit()&lt;/code&gt; is not implemented like other action commands, and does not follow the same rules of &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;waiting for actionability&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.submit()&lt;/code&gt; 은 다른 조치 명령과 같이 구현되지 않으며 조치 가능성을 &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;기다리는&lt;/a&gt; 동일한 규칙을 따르지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="9e1b3721a6947b1ed82ec9e90b164fde2d94aaa1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.submit()&lt;/code&gt; requires being chained off a command that yields DOM element(s).</source>
          <target state="translated">&lt;code&gt;.submit()&lt;/code&gt; 은 DOM 요소를 생성하는 명령과 연결되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="5dd0cb4869919c1202dae7dd2788e58c00674460" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.submit()&lt;/code&gt; requires the element to be a &lt;code&gt;form&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.submit()&lt;/code&gt; 은 요소가 &lt;code&gt;form&lt;/code&gt; 이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="7e3dc493f3e12769d5551c34ab1163a1e928c8c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.submit()&lt;/code&gt; will automatically wait for assertions you've chained to pass.</source>
          <target state="translated">&lt;code&gt;.submit()&lt;/code&gt; 은 연결 한 어설 션이 전달 될 때까지 자동으로 기다립니다.</target>
        </trans-unit>
        <trans-unit id="e8168ee73771f34e16aaed7fb50db2411440da3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.submit()&lt;/code&gt; yields the same subject it was given from the previous command.</source>
          <target state="translated">&lt;code&gt;.submit()&lt;/code&gt; 은 이전 명령에서 제공된 것과 동일한 주제를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="4f9ba328d8aa7e1f1b4c39086ec6bebb979ed3e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.then()&lt;/code&gt; can time out waiting for a promise you've returned to resolve.</source>
          <target state="translated">&lt;code&gt;.then()&lt;/code&gt; 은 해결하기로 약속 한 약속을 기다리는 시간을 초과 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="56cea6da1b62be38a7a51668ba2fdce33c99a6cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.then()&lt;/code&gt; command added</source>
          <target state="translated">&lt;code&gt;.then()&lt;/code&gt; 명령 추가</target>
        </trans-unit>
        <trans-unit id="3cdbf6de9112b9ad59dbf3ca74527a6ce238d32d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.then()&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; log in the Command Log</source>
          <target state="translated">&lt;code&gt;.then()&lt;/code&gt; 이 명령 로그에 기록 되지 &lt;em&gt;않습니다&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0d341edf134587bea2762651373520d778c99c63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.then()&lt;/code&gt; is modeled identically to the way Promises work in JavaScript. Whatever is returned from the callback function becomes the new subject and will flow into the next command (with the exception of &lt;code&gt;undefined&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;.then()&lt;/code&gt; 은 Promises가 JavaScript에서 작동하는 방식과 동일하게 모델링됩니다. 콜백 함수에서 반환되는 것은 새로운 주제가되며 다음 명령으로 전달됩니다 ( &lt;code&gt;undefined&lt;/code&gt; 제외 ).</target>
        </trans-unit>
        <trans-unit id="62d0537d4376e6d821d9ebc531904b5c7cae64c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.then()&lt;/code&gt; requires being chained off a previous command.</source>
          <target state="translated">&lt;code&gt;.then()&lt;/code&gt; 은 이전 명령과 연결되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="cbd8433eb5bfef34e8e299975cd18cb3cfbdf9f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.then()&lt;/code&gt; will only run assertions you've chained once, and will not &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.then()&lt;/code&gt; 은 한 번 연결 한 어설 션 만 실행하며 &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;다시 시도&lt;/a&gt; 하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="81d8256c16ea54f90794e7f4fced560759e4fb44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.trigger()&lt;/code&gt; can time out waiting for assertions you've added to pass.</source>
          <target state="translated">&lt;code&gt;.trigger()&lt;/code&gt; 는 추가 한 어설 션이 전달되기를 기다리는 시간을 초과 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b73d7868896293c204e394813e4df8f6cb47a3c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.trigger()&lt;/code&gt; can time out waiting for the element to reach an &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;actionable state&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.trigger()&lt;/code&gt; 는 요소가 &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;실행 가능한 상태&lt;/a&gt; 에 도달하기를 기다리는 시간을 초과 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ba3cd153c58788c16eaca3eeb881b6f957e0f21f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.trigger()&lt;/code&gt; command added</source>
          <target state="translated">&lt;code&gt;.trigger()&lt;/code&gt; 명령 추가</target>
        </trans-unit>
        <trans-unit id="efbf6caeb902913f5b4d5dda35c1e58f9d64c368" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.trigger()&lt;/code&gt; is an &amp;ldquo;action command&amp;rdquo; that follows all the rules &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;defined here&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.trigger()&lt;/code&gt; 는 &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;여기에 정의 된&lt;/a&gt; 모든 규칙을 따르는&amp;ldquo;작업 명령&amp;rdquo;입니다 .</target>
        </trans-unit>
        <trans-unit id="9f248dd1159170c42abb2605ee8d895f430522b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.trigger()&lt;/code&gt; requires being chained off a command that yields DOM element(s).</source>
          <target state="translated">&lt;code&gt;.trigger()&lt;/code&gt; 는 DOM 요소를 생성하는 명령과 연결되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="5d0682b8edb7db50d7525c1590c1c4229ec87062" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.trigger()&lt;/code&gt; will &lt;em&gt;only&lt;/em&gt; fire the corresponding event and do nothing else.</source>
          <target state="translated">&lt;code&gt;.trigger()&lt;/code&gt; 는 해당 이벤트 &lt;em&gt;만&lt;/em&gt; 발생시키고 다른 작업은 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5e224d9b1a916a0567376f3ec4b77eb1e866b99d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.trigger()&lt;/code&gt; will automatically wait for assertions you've chained to pass.</source>
          <target state="translated">&lt;code&gt;.trigger()&lt;/code&gt; 는 연결 한 어설 션이 전달 될 때까지 자동으로 기다립니다.</target>
        </trans-unit>
        <trans-unit id="bfed4501a4f6e85aa27a3b82e5896a281d8401e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.trigger()&lt;/code&gt; will automatically wait for the element to reach an &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;actionable state&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.trigger()&lt;/code&gt; 는 요소가 &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;실행 가능한 상태&lt;/a&gt; 가 될 때까지 자동으로 기다립니다 .</target>
        </trans-unit>
        <trans-unit id="7a54dc94dd5a821fb2bdbf689b02f26e7400a33e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.trigger()&lt;/code&gt; yields the same subject it was given from the previous command.</source>
          <target state="translated">&lt;code&gt;.trigger()&lt;/code&gt; 는 이전 명령에서 제공된 것과 동일한 주제를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="a56c42de78081b3f808a0b504fc477f73c6b6062" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.type()&lt;/code&gt; can time out waiting for assertions you've added to pass.</source>
          <target state="translated">&lt;code&gt;.type()&lt;/code&gt; 은 추가 한 어설 션이 전달되기를 기다리는 시간을 초과 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9b06e4b8d6bacdc96864dbb3ca5d7ccbd154f593" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.type()&lt;/code&gt; can time out waiting for the element to reach an &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;actionable state&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.type()&lt;/code&gt; 은 요소가 &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;실행 가능한 상태&lt;/a&gt; 에 도달하기를 기다리는 시간을 초과 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9e52c7782a670ec12893663a31e153d87150bbb7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.type()&lt;/code&gt; is an &amp;ldquo;action command&amp;rdquo; that follows all the rules &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;defined here&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.type()&lt;/code&gt; 은 &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;여기에 정의 된&lt;/a&gt; 모든 규칙을 따르는&amp;ldquo;작업 명령&amp;rdquo;입니다 .</target>
        </trans-unit>
        <trans-unit id="9ff41005df03222b715124d4af24f20079a1734d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.type()&lt;/code&gt; requires a focusable element as the subject, since it&amp;rsquo;s usually intended to type into something that&amp;rsquo;s an input or textarea. Although there &lt;em&gt;are&lt;/em&gt; a few cases where it&amp;rsquo;s valid to &amp;ldquo;type&amp;rdquo; into something other than an input or textarea:</source>
          <target state="translated">&lt;code&gt;.type()&lt;/code&gt; 은 일반적으로 입력 또는 텍스트 영역에 입력하려고하기 때문에 주제로 포커스 가능한 요소가 필요합니다. 가 있지만 &lt;em&gt;있다&lt;/em&gt; 가 입력 또는 텍스트 영역이 아닌 다른 무언가로 &quot;유형&quot;에 대한 유효한의 몇 가지 경우는 :</target>
        </trans-unit>
        <trans-unit id="00fe48de8fca37d3f31007bd321f0a9ade25e69c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.type()&lt;/code&gt; requires being chained off a command that yields DOM element(s).</source>
          <target state="translated">&lt;code&gt;.type()&lt;/code&gt; 은 DOM 요소를 생성하는 명령과 연결되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="71b422b0f241e5c5ae7bdaafb4df8b45b2d3840f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.type()&lt;/code&gt; will automatically wait for assertions you've chained to pass.</source>
          <target state="translated">&lt;code&gt;.type()&lt;/code&gt; 은 연결 한 어설 션이 전달 될 때까지 자동으로 기다립니다.</target>
        </trans-unit>
        <trans-unit id="444aa3e2ff9b49159923572ad8c6adde0ddb640e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.type()&lt;/code&gt; will automatically wait for the element to reach an &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;actionable state&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.type()&lt;/code&gt; 은 요소가 &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;실행 가능한 상태&lt;/a&gt; 가 될 때까지 자동으로 기다립니다 .</target>
        </trans-unit>
        <trans-unit id="fcf38c71df55ad009e10e9ea58f712fb524d1bb0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.type()&lt;/code&gt; yields the same subject it was given from the previous command.</source>
          <target state="translated">&lt;code&gt;.type()&lt;/code&gt; 은 이전 명령에서 제공된 것과 동일한 주제를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="7a5ceca3e0584695e18f12621977b226647fd6cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.uncheck()&lt;/code&gt; can time out waiting for assertions you've added to pass.</source>
          <target state="translated">&lt;code&gt;.uncheck()&lt;/code&gt; 는 추가 한 어설 션이 전달되기를 기다리는 시간을 초과 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0031a367228a5b211f9c2a9cdbdf022540958c85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.uncheck()&lt;/code&gt; can time out waiting for the element to reach an &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;actionable state&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.uncheck()&lt;/code&gt; 는 요소가 &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;실행 가능한 상태&lt;/a&gt; 에 도달하기를 기다리는 시간을 초과 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8d5ad4e74c275dcdbc5daf05bf34cc0bd9c0831c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.uncheck()&lt;/code&gt; command added</source>
          <target state="translated">&lt;code&gt;.uncheck()&lt;/code&gt; 명령 추가</target>
        </trans-unit>
        <trans-unit id="aa4af5f5036f03f653888b3a1e86a02259efb829" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.uncheck()&lt;/code&gt; is an &amp;ldquo;action command&amp;rdquo; that follows all the rules &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;defined here&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.uncheck()&lt;/code&gt; 는 &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;여기에 정의 된&lt;/a&gt; 모든 규칙을 따르는&amp;ldquo;작업 명령&amp;rdquo;입니다 .</target>
        </trans-unit>
        <trans-unit id="8afb2d6115f3642008c10e45161aedc73edc7f97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.uncheck()&lt;/code&gt; requires being chained off a command that yields DOM element(s).</source>
          <target state="translated">&lt;code&gt;.uncheck()&lt;/code&gt; 는 DOM 요소를 생성하는 명령과 연결되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="fc19dba0b979cc3324fe8b30635b4ff150d53fee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.uncheck()&lt;/code&gt; requires the element to have type &lt;code&gt;checkbox&lt;/code&gt; or &lt;code&gt;radio&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.uncheck()&lt;/code&gt; 에는 요소에 &lt;code&gt;checkbox&lt;/code&gt; 또는 &lt;code&gt;radio&lt;/code&gt; 유형이 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="7ca597e2d67ce0c06651ad68599ca67a64aac38d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.uncheck()&lt;/code&gt; will automatically wait for assertions you've chained to pass.</source>
          <target state="translated">&lt;code&gt;.uncheck()&lt;/code&gt; 는 연결 한 어설 션이 전달 될 때까지 자동으로 기다립니다.</target>
        </trans-unit>
        <trans-unit id="436823f41153e53174ee7c260ef5ac388e1e817c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.uncheck()&lt;/code&gt; will automatically wait for the element to reach an &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;actionable state&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.uncheck()&lt;/code&gt; 는 요소가 &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;실행 가능한 상태&lt;/a&gt; 가 될 때까지 자동으로 기다립니다 .</target>
        </trans-unit>
        <trans-unit id="c368d5c6318ec775fe265bc5c453c8ba3cfa06c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.uncheck()&lt;/code&gt; yields the same subject it was given from the previous command.</source>
          <target state="translated">&lt;code&gt;.uncheck()&lt;/code&gt; 는 이전 명령에서 주어진 것과 동일한 주제를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="9f1d9a0d854447f4f05e5dbccf4b249ef07867b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.within()&lt;/code&gt; cannot time out.</source>
          <target state="translated">&lt;code&gt;.within()&lt;/code&gt; 이 시간 초과 될 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="ffe8fc077cefa75d474cc386aed791eba6d45728" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.within()&lt;/code&gt; command added</source>
          <target state="translated">&lt;code&gt;.within()&lt;/code&gt; 명령 추가</target>
        </trans-unit>
        <trans-unit id="4dbcf21b5f8684a73020fa5b7c981811303f2bdf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.within()&lt;/code&gt; requires being chained off a previous command.</source>
          <target state="translated">&lt;code&gt;.within()&lt;/code&gt; 은 이전 명령과 연결되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="c35a1d12e7242609c9df963c4bc4a5b4afa500f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.within()&lt;/code&gt; will only run assertions you've chained once, and will not &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.within()&lt;/code&gt; 은 한 번 연결 한 어설 션 만 실행하며 &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;다시 시도&lt;/a&gt; 하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="c589dbba4b113033236c2b16f7cb7f28624b0114" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.within()&lt;/code&gt; yields the same subject it was given from the previous command.</source>
          <target state="translated">&lt;code&gt;.within()&lt;/code&gt; 은 이전 명령에서 제공된 것과 동일한 주제를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="53c7430a598c2260f5d2dd410ea20f4319d1375b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0.16.0&lt;/code&gt; marks a significant change for Cypress. Before this we only issued commands using regular JavaScript and coordinated these with the back end server which is running. As of &lt;code&gt;0.16.0&lt;/code&gt; we are now tapping into the underlying browser automation libraries which enable us to exceed the limitations of the JavaScript sandbox. This means we have total control over the browser for more powerful automation tooling. The downside is that we have only implemented these APIs for Chrome, and therefore running on multiple browsers will no longer work. This is a temporary setback as we&amp;rsquo;ll be adding driver support for all of the other browsers over a period of time. You can read more about our browser management &lt;a href=&quot;../guides/launching-browsers&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;0.16.0&lt;/code&gt; 은 Cypress의 중요한 변화입니다. 이 전에는 일반 JavaScript 만 사용하여 명령을 실행하고 실행중인 백엔드 서버와 조정했습니다. 현재 &lt;code&gt;0.16.0&lt;/code&gt; 우리는 지금 자바 스크립트 샌드 박스의 한계를 초과 할 수있게 기본 브라우저 자동화 라이브러리을 활용하고 있습니다. 이는보다 강력한 자동화 툴링을 위해 브라우저를 완전히 제어 할 수 있음을 의미합니다. 단점은 이러한 Chrome 용 API 만 구현했기 때문에 여러 브라우저에서 실행하면 더 이상 작동하지 않는다는 것입니다. 일정 기간 동안 다른 모든 브라우저에 대한 드라이버 지원을 추가 할 예정이므로 일시적인 문제입니다. 브라우저 관리에 대한 자세한 내용은 &lt;a href=&quot;../guides/launching-browsers&quot;&gt;여기를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9621f086999dfb66852104c3b1eed6891cdd4a8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0.20.0&lt;/code&gt; is our biggest technical release ever. It accounts for more than 2,000 commits. It&amp;rsquo;s full of breaking changes we wanted to land prior to having our public &lt;code&gt;1.0.0&lt;/code&gt; release.</source>
          <target state="translated">&lt;code&gt;0.20.0&lt;/code&gt; 은 가장 큰 기술 릴리스입니다. 커밋은 2,000 개가 넘습니다. 공개 &lt;code&gt;1.0.0&lt;/code&gt; 릴리스 전에 착륙하려는 변경 사항이 가득 합니다.</target>
        </trans-unit>
        <trans-unit id="2ea04737d303b74cc4bd80837c533dfffcd4eee7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1.0.0&lt;/code&gt; marks our transition out of a &lt;strong&gt;private&lt;/strong&gt; beta and into a &lt;strong&gt;public&lt;/strong&gt; beta. We&amp;rsquo;ve lifted all the restrictions for using Cypress. It is now accessible to everyone. Until we are out of beta, the &lt;a href=&quot;../dashboard/introduction&quot;&gt;Dashboard Service&lt;/a&gt; will continue to be free.</source>
          <target state="translated">&lt;code&gt;1.0.0&lt;/code&gt; 은 &lt;strong&gt;비공개&lt;/strong&gt; 베타 버전과 &lt;strong&gt;공개&lt;/strong&gt; 베타 버전 으로 의 전환을 나타냅니다 . Cypress 사용에 대한 모든 제한을 해제했습니다. 이제 모든 사람이 액세스 할 수 있습니다. 베타 버전이 나올 때까지 &lt;a href=&quot;../dashboard/introduction&quot;&gt;대시 보드 서비스&lt;/a&gt; 는 계속 무료입니다.</target>
        </trans-unit>
        <trans-unit id="52d9574b7fa28ad958e61485d13b35440bf5463f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Action&lt;/code&gt; command options are now properly formatted, instead of saying &lt;code&gt;Object{4}&lt;/code&gt; they will display the overridden default options - ie: &lt;code&gt;force&lt;/code&gt;, &lt;code&gt;timeout&lt;/code&gt;, &lt;code&gt;interval&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Action&lt;/code&gt; 명령 옵션의 형식이 이제 &lt;code&gt;Object{4}&lt;/code&gt; 라고하는 대신 재정의 된 기본 옵션 (예 : &lt;code&gt;force&lt;/code&gt; , &lt;code&gt;timeout&lt;/code&gt; , &lt;code&gt;interval&lt;/code&gt; )이 표시 됩니다.</target>
        </trans-unit>
        <trans-unit id="f54506c2e80ef2ed68dee51dc7a9a2892b0f80ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CIRCLE_WORKFLOW_ID&lt;/code&gt;, &lt;code&gt;CIRCLE_BUILD_NUMBER&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;CIRCLE_WORKFLOW_ID&lt;/code&gt; , &lt;code&gt;CIRCLE_BUILD_NUMBER&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4e8cafd8feefcb911825ccd6c47de7cd9011e502" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CI_PIPELINE_ID&lt;/code&gt;, &lt;code&gt;CI_JOB_ID&lt;/code&gt;, &lt;code&gt;CI_BUILD_ID&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;CI_PIPELINE_ID&lt;/code&gt; , &lt;code&gt;CI_JOB_ID&lt;/code&gt; , &lt;code&gt;CI_BUILD_ID&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="95ca0c3b5558250c99e79bb4890876a79f5c668c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CYPRESS_CACHE_FOLDER&lt;/code&gt; will need to exist every time cypress is launched. To ensure this, consider exporting this environment variable. For example, in a &lt;code&gt;.bash_profile&lt;/code&gt; (MacOS, Linux), or using &lt;code&gt;RegEdit&lt;/code&gt; (Windows).</source>
          <target state="translated">&lt;code&gt;CYPRESS_CACHE_FOLDER&lt;/code&gt; 는 cypress가 시작될 때마다 존재해야합니다. 이를 보장하려면이 환경 변수를 내보내는 것이 좋습니다. 예를 들어 &lt;code&gt;.bash_profile&lt;/code&gt; (MacOS, Linux) 또는 &lt;code&gt;RegEdit&lt;/code&gt; (Windows)을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="af9cce8312900ffa591ab34516d7c85323a5184b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CYPRESS_RUN_BINARY&lt;/code&gt; should be a path to an already unzipped binary executable. The Cypress commands &lt;code&gt;open&lt;/code&gt;, &lt;code&gt;run&lt;/code&gt;, and &lt;code&gt;verify&lt;/code&gt; will then launch the provided binary.</source>
          <target state="translated">&lt;code&gt;CYPRESS_RUN_BINARY&lt;/code&gt; 는 이미 압축이 풀린 바이너리 실행 파일의 경로 여야합니다. Cypress 명령 &lt;code&gt;open&lt;/code&gt; , &lt;code&gt;run&lt;/code&gt; 및 &lt;code&gt;verify&lt;/code&gt; 는 제공된 바이너리를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="8d0ccb39133aeb7bae86102c9bb3f2b6d8a39cde" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Cookies.debug()&lt;/code&gt; enables you to log out whenever any cookies are modified.</source>
          <target state="translated">&lt;code&gt;Cookies.debug()&lt;/code&gt; 사용하면 쿠키가 수정 될 때마다 로그 아웃 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="557c30e3582a57c617576a10930e1822c1f9e274" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Cookies.preserveOnce()&lt;/code&gt; and &lt;code&gt;Cookies.defaults()&lt;/code&gt; enable you to control Cypress&amp;rsquo; cookie behavior.</source>
          <target state="translated">&lt;code&gt;Cookies.preserveOnce()&lt;/code&gt; 및 &lt;code&gt;Cookies.defaults()&lt;/code&gt; 사용하면 Cypress의 쿠키 동작을 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4e5f1af2e6a598b8fa89db5c580740110439647d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Cypress.Commands&lt;/code&gt; API added</source>
          <target state="translated">&lt;code&gt;Cypress.Commands&lt;/code&gt; API 추가</target>
        </trans-unit>
        <trans-unit id="62b8036b9638e832be0ae31e8408a568592a7786" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Cypress.Cookies&lt;/code&gt; API added</source>
          <target state="translated">&lt;code&gt;Cypress.Cookies&lt;/code&gt; API 추가</target>
        </trans-unit>
        <trans-unit id="dc05ea5f77aedb6fab264c8309fac92af48462d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Cypress.Dom.isHidden()&lt;/code&gt; will now throw error when it isn&amp;rsquo;t passed a DOM element.</source>
          <target state="translated">&lt;code&gt;Cypress.Dom.isHidden()&lt;/code&gt; 은 이제 DOM 요소를 전달하지 않으면 오류를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="6fcea3350db23b046683014ed78004d84ac4c86e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Cypress.Dom&lt;/code&gt; has been renamed to &lt;code&gt;Cypress.dom&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Cypress.Dom&lt;/code&gt; 의 이름이 &lt;code&gt;Cypress.dom&lt;/code&gt; 으로 변경되었습니다 .</target>
        </trans-unit>
        <trans-unit id="30b1a4730978d8028cdabee4c3d460d50d12f971" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Cypress.Log.command&lt;/code&gt; has been renamed to &lt;a href=&quot;../../api/cypress-api/cypress-log&quot;&gt;&lt;code&gt;Cypress.log&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Cypress.Log.command&lt;/code&gt; . &lt;a href=&quot;../../api/cypress-api/cypress-log&quot;&gt; &lt;code&gt;Cypress.log&lt;/code&gt; &lt;/a&gt; 이름이 Cypress.log 로 바뀌 었 습니다 .</target>
        </trans-unit>
        <trans-unit id="44a1ae68b39b0be335559fb31ac8cde041f78234" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Cypress.Log&lt;/code&gt; instances now fire &lt;code&gt;attrs:changed&lt;/code&gt; event. Removed &lt;code&gt;state:change&lt;/code&gt; event.</source>
          <target state="translated">&lt;code&gt;Cypress.Log&lt;/code&gt; 인스턴스가 &lt;code&gt;attrs:changed&lt;/code&gt; 이벤트를 시작합니다. &lt;code&gt;state:change&lt;/code&gt; 이벤트를 제거 했습니다.</target>
        </trans-unit>
        <trans-unit id="5d77a57ed01d08c8d343f849dc06b1ca17ab3635" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Cypress.addParentCommand()&lt;/code&gt; / &lt;code&gt;Cypress.addDualCommand()&lt;/code&gt; / &lt;code&gt;Cypress.addChildCommand()&lt;/code&gt; has been removed and replaced by &lt;code&gt;Cypress.Commands.add()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Cypress.addParentCommand()&lt;/code&gt; / &lt;code&gt;Cypress.addDualCommand()&lt;/code&gt; / &lt;code&gt;Cypress.addChildCommand()&lt;/code&gt; 가 제거되고 &lt;code&gt;Cypress.Commands.add()&lt;/code&gt; 로 대체되었습니다.</target>
        </trans-unit>
        <trans-unit id="9046273fe5a9a829929633fe45ad20c334e80a5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Cypress.arch&lt;/code&gt; added</source>
          <target state="translated">&lt;code&gt;Cypress.arch&lt;/code&gt; 추가</target>
        </trans-unit>
        <trans-unit id="5077d91bcc371c888ad54cfbdf4e60ab9dafcf10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Cypress.arch&lt;/code&gt; returns you the CPU architecture name of the underlying OS, as returned from Node&amp;rsquo;s &lt;a href=&quot;https://nodejs.org/api/os.html#os_os_arch&quot;&gt;&lt;code&gt;os.arch()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Cypress.arch&lt;/code&gt; 는 Node의 &lt;a href=&quot;https://nodejs.org/api/os.html#os_os_arch&quot;&gt; &lt;code&gt;os.arch()&lt;/code&gt; &lt;/a&gt; 에서 반환 된 기본 OS의 CPU 아키텍처 이름을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="521b147f64350cc29afcb30dc03d7d6514bdd8eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Cypress.browser&lt;/code&gt; introduced</source>
          <target state="translated">&lt;code&gt;Cypress.browser&lt;/code&gt; 소개</target>
        </trans-unit>
        <trans-unit id="2b8030f54ed2ad0692b1966cd73f3f8144d04a49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Cypress.browser&lt;/code&gt; returns browser object</source>
          <target state="translated">&lt;code&gt;Cypress.browser&lt;/code&gt; 는 브라우저 객체를 반환합니다</target>
        </trans-unit>
        <trans-unit id="7098e7b8e4061ab6acdd5cc10dc98c4a0e761887" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Cypress.browser&lt;/code&gt; returns you properties of the browser.</source>
          <target state="translated">&lt;code&gt;Cypress.browser&lt;/code&gt; 는 브라우저의 속성을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="fb3577b7865518e3c20c818929f378b9cbde6e8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Cypress.config('baseUrl')&lt;/code&gt; has been updated to no longer strip singular &lt;code&gt;/&lt;/code&gt; at the end of urls and instead only strip instances of multiple &lt;code&gt;/&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3540&quot;&gt;#3540&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Cypress.config('baseUrl')&lt;/code&gt; 은 더 이상 URL 끝에서 단수 &lt;code&gt;/&lt;/code&gt; 를 제거하지 않고 대신 &lt;code&gt;/&lt;/code&gt; 의 인스턴스 만 제거 하도록 업데이트되었습니다 . &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3540&quot;&gt;# 3540&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="3b0b971fea582cd7f56bb54b08abc49f1accc8ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Cypress.config&lt;/code&gt; added</source>
          <target state="translated">&lt;code&gt;Cypress.config&lt;/code&gt; 추가</target>
        </trans-unit>
        <trans-unit id="21ccda5a59bed7e1a32cdd10b7f9f8d52229c980" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Cypress.dom.method()&lt;/code&gt; is a collection of DOM related helper methods.</source>
          <target state="translated">&lt;code&gt;Cypress.dom.method()&lt;/code&gt; 는 DOM 관련 도우미 메서드의 모음입니다.</target>
        </trans-unit>
        <trans-unit id="488c05f83976a2f694e8c332271b804f686872fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Cypress.isCy()&lt;/code&gt; checks if a variable is a valid instance of &lt;code&gt;cy&lt;/code&gt; or a &lt;code&gt;cy&lt;/code&gt; chainable.</source>
          <target state="translated">&lt;code&gt;Cypress.isCy()&lt;/code&gt; 검사 변수가 유효한 경우이면 &lt;code&gt;cy&lt;/code&gt; 또는 &lt;code&gt;cy&lt;/code&gt; 체인 가능.</target>
        </trans-unit>
        <trans-unit id="57e51e40f0222a564b2ce23f793f46416b1e24ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Cypress.platform&lt;/code&gt; returns the underlying OS name, as returned from Node&amp;rsquo;s &lt;a href=&quot;https://nodejs.org/api/os.html#os_os_platform&quot;&gt;&lt;code&gt;os.platform()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Cypress.platform&lt;/code&gt; 은 Node의 &lt;a href=&quot;https://nodejs.org/api/os.html#os_os_platform&quot;&gt; &lt;code&gt;os.platform()&lt;/code&gt; &lt;/a&gt; 에서 리턴 된 기본 OS 이름을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="47f020d6023471a9ff35d5f649617125c5b99326" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Cypress.spec&lt;/code&gt; returns an object</source>
          <target state="translated">&lt;code&gt;Cypress.spec&lt;/code&gt; 은 객체를 반환</target>
        </trans-unit>
        <trans-unit id="3793c6db0e634e0677bfb5b830e106b2ad438470" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Cypress.spec&lt;/code&gt; returns you the properties of the spec under test.</source>
          <target state="translated">&lt;code&gt;Cypress.spec&lt;/code&gt; 은 테스트중인 사양의 속성을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="42f0eaa6127db942b54f551b093d24bb9ffb2fac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Cypress.version&lt;/code&gt; returns you the current version of Cypress you are running.</source>
          <target state="translated">&lt;code&gt;Cypress.version&lt;/code&gt; 은 실행중인 Cypress의 현재 버전을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c3cf060f934e9b244d2e1c9c90859a17f714d476" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Date&lt;/code&gt; Objects</source>
          <target state="translated">&lt;code&gt;Date&lt;/code&gt; 개체</target>
        </trans-unit>
        <trans-unit id="a668c2b717d4191150f640ccfbce3d6c852ae70a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EMFILE&lt;/code&gt; errors have been fixed. These were being caused due to &lt;code&gt;ulimit&lt;/code&gt; being too low on your OS. This should fix the file watching problems people were having. Essentially we just replaced &lt;code&gt;fs&lt;/code&gt; with &lt;code&gt;graceful-fs&lt;/code&gt; and crossed our fingers this works. (It did on our machines). Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/369&quot;&gt;#369&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;EMFILE&lt;/code&gt; 오류가 수정되었습니다. 이들은 인해 발생되고 있었다 &lt;code&gt;ulimit&lt;/code&gt; 를이 당신의 OS에 너무 낮은 것. 이것은 사람들이 겪고있는 문제를보고있는 파일을 수정해야합니다. 본질적으로 우리는 &lt;code&gt;fs&lt;/code&gt; 를 &lt;code&gt;graceful-fs&lt;/code&gt; 로 바꾸었고 손가락을 넘었습니다. (그것은 우리의 기계에서했다). &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/369&quot;&gt;# 369&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="26719daa0e4dd0b633b507b3920d3061c0af077d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Environment Variable&lt;/code&gt; support has been added and can be accessed in your tests with &lt;a href=&quot;../../api/cypress-api/env&quot;&gt;&lt;code&gt;Cypress.env&lt;/code&gt;&lt;/a&gt;. The docs have been written &lt;a href=&quot;../guides/environment-variables&quot;&gt;Environment Variable&lt;/a&gt; and &lt;a href=&quot;../../api/cypress-api/env&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Environment Variable&lt;/code&gt; &lt;a href=&quot;../../api/cypress-api/env&quot;&gt; &lt;code&gt;Cypress.env&lt;/code&gt; &lt;/a&gt; 를 통해 테스트에서 환경 변수 지원이 추가되었으며 액세스 할 수 있습니다 . 문서는 &lt;a href=&quot;../guides/environment-variables&quot;&gt;환경 변수&lt;/a&gt; 및 &lt;a href=&quot;../../api/cypress-api/env&quot;&gt;여기&lt;/a&gt; 에 작성되었습니다 .</target>
        </trans-unit>
        <trans-unit id="898e15c2cb4d6d4ce4dce109e91ab2f004220122" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GET&lt;/code&gt; is the default HTTP method used to match routes. If you want to stub a route with another HTTP method such as &lt;code&gt;POST&lt;/code&gt; then you &lt;a href=&quot;#Arguments&quot;&gt;must be explicit about the method&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;GET&lt;/code&gt; 은 경로를 일치시키는 데 사용되는 기본 HTTP 방법입니다. 당신과 같은 다른 HTTP 방식과 경로 스텁하려면 &lt;code&gt;POST&lt;/code&gt; 를 당신은 &lt;a href=&quot;#Arguments&quot;&gt;방법에 대해 명시해야합니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9370014731a31e5aa5a8b1fede6dfbfbf38d83b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HH:mm:ss.SSS&lt;/code&gt; (e.g. &lt;code&gt;12:00:00.384&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;HH:mm:ss.SSS&lt;/code&gt; (예 : &lt;code&gt;12:00:00.384&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="2167c3280fa8ef719b7a23e63e919ac2e04aac41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HH:mm:ss&lt;/code&gt; (e.g. &lt;code&gt;10:00:30&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;HH:mm:ss&lt;/code&gt; (예 : &lt;code&gt;10:00:30&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="c0eedd054c08762fc80f1ca69f791b284eed77fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HH:mm&lt;/code&gt; (e.g. &lt;code&gt;01:30&lt;/code&gt; or &lt;code&gt;23:15&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;HH:mm&lt;/code&gt; (예 : &lt;code&gt;01:30&lt;/code&gt; 또는 &lt;code&gt;23:15&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="f5491d5902558d3709ea65b361eac39eacf8ba5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NODE_OPTIONS&lt;/code&gt; environment variables now print within the &lt;code&gt;cypress:cli&lt;/code&gt; logs when running in &lt;code&gt;DEBUG&lt;/code&gt; mode. Although using &lt;code&gt;NODE_OPTIONS&lt;/code&gt; themselves should not be used due to &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1676&quot;&gt;#1676&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1673&quot;&gt;#1673&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;NODE_OPTIONS&lt;/code&gt; 환경 변수가 이제 &lt;code&gt;DEBUG&lt;/code&gt; 모드 에서 실행될 때 &lt;code&gt;cypress:cli&lt;/code&gt; 로그 내에 인쇄 됩니다. 사용하지만 &lt;code&gt;NODE_OPTIONS&lt;/code&gt; 자체로 인해 사용할 수 없습니다 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1676&quot;&gt;# 1676&lt;/a&gt; . 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1673&quot;&gt;# 1673&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="becc24aa2c6edde0309b8ad61453f5a06a3073a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Promise.reduce&lt;/code&gt; bugs are now fixed, causing events on a collection of elements in the synchronous wrong order.</source>
          <target state="translated">&lt;code&gt;Promise.reduce&lt;/code&gt; 버그가 수정되어 동기식 순서가 잘못된 요소 컬렉션에 이벤트가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="2f6436f8a9415f49269cc82a18260856791acad4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Sinon's&lt;/code&gt; formatting of failed &lt;code&gt;spy&lt;/code&gt; or &lt;code&gt;stub&lt;/code&gt; calls is horrendously non-performant and would sometimes choke the CPU for several seconds. This formatting has been completely removed and will be replaced by something less outrageous later on. At the moment you can still use the built in Cypress debugging (clicking on a command log, etc) to see what the actual values were. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/18&quot;&gt;#18&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Sinon's&lt;/code&gt; 실패한 &lt;code&gt;spy&lt;/code&gt; 또는 &lt;code&gt;stub&lt;/code&gt; 호출 형식의 Sinon 형식 은 끔찍하게 성능이 떨어지며 때로는 몇 초 동안 CPU를 질식시킵니다. 이 형식은 완전히 제거되었으며 나중에 덜 터무니없는 것으로 대체됩니다. 현재 내장 Cypress 디버깅 (명령 로그 클릭 등)을 사용하여 실제 값을 확인할 수 있습니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/18&quot;&gt;# 18&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="20c06402804e6f38528789f17ae4306e3ec3ccb7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Socket.io&lt;/code&gt; and &lt;code&gt;chokidar&lt;/code&gt; are now being cleaned up when a project is closed. Previously &lt;code&gt;chokidar&lt;/code&gt; file watchers would stick around indefinitely causing a memory leak each time any project is closed and reopened.</source>
          <target state="translated">&lt;code&gt;Socket.io&lt;/code&gt; 이제 프로젝트가 닫힐 때 Socket.io 및 &lt;code&gt;chokidar&lt;/code&gt; 가 정리됩니다. 이전에는 &lt;code&gt;chokidar&lt;/code&gt; 파일 감시자가 프로젝트를 닫았다가 다시 열 때마다 무기한으로 메모리 누수가 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="0f5e847c871315739027c713c3ec145386111003" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;String&lt;/code&gt; or &lt;code&gt;Array&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 또는 &lt;code&gt;Array&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="61eca5b5e34cdb75cd5138ff3ec00f1ead395e29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TTY&lt;/code&gt; is now handled correctly for Linux and OSX. This means that CI providers which turned off colors due to &lt;code&gt;TTY&lt;/code&gt; being false will now display colors again such as TravisCI. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1126&quot;&gt;#1126&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;TTY&lt;/code&gt; 는 이제 Linux 및 OSX에서 올바르게 처리됩니다. 즉, &lt;code&gt;TTY&lt;/code&gt; 가 거짓 으로 인해 색상을 끈 CI 공급자 는 TravisCI와 같은 색상을 다시 표시합니다. 수정 &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1126&quot;&gt;# 1126&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dd5464e8f9c54e570bbc6b50a7fef3408cc8fa27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Using cy.clock()&lt;/code&gt; with &lt;code&gt;cy.tick()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Using cy.clock()&lt;/code&gt; 와 함께 &lt;code&gt;cy.tick()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="64138ac4f25f85b8a4e7db77330344411b365082" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[contenteditable]&lt;/code&gt; elements can now be focused and blurred.</source>
          <target state="translated">&lt;code&gt;[contenteditable]&lt;/code&gt; 요소의 초점을 맞추고 흐리게 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0e65e14a6b3b61dc488e74aa6b8eb84fc26e3bab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aborting&lt;/code&gt; during &lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt; / &lt;a href=&quot;../../api/commands/dblclick&quot;&gt;&lt;code&gt;.dblclick()&lt;/code&gt;&lt;/a&gt; now correctly cancels remaining queued click/dblclick events.</source>
          <target state="translated">&lt;code&gt;aborting&lt;/code&gt; &lt;a href=&quot;../../api/commands/click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;../../api/commands/dblclick&quot;&gt; &lt;code&gt;.dblclick()&lt;/code&gt; &lt;/a&gt; 중 중단 하면 대기중인 클릭 / dblclick 이벤트가 모두 올바르게 취소됩니다.</target>
        </trans-unit>
        <trans-unit id="d631233ef808a9c4e4bd17774329cbb3893e799d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;after:screenshot&lt;/code&gt; plugin event</source>
          <target state="translated">&lt;code&gt;after:screenshot&lt;/code&gt; 플러그인 이벤트</target>
        </trans-unit>
        <trans-unit id="37554f08337919720fa61f0251cca83de5ef269f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;alerts&lt;/code&gt; are automatically accepted now and a message logs to the console.</source>
          <target state="translated">&lt;code&gt;alerts&lt;/code&gt; 이제 경고 가 자동으로 수락되고 메시지가 콘솔에 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="d0d60cb7543bed4e4a062a07f008182ea453132c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;args&lt;/code&gt; may be an array or an object (based on the type of browser we&amp;rsquo;re launching). Whatever you return from this event will become the new args for launching the browser.</source>
          <target state="translated">&lt;code&gt;args&lt;/code&gt; 는 배열 또는 객체 일 수 있습니다 (시작하는 브라우저 유형에 따라). 이 이벤트에서 돌아온 것이 무엇이든 브라우저를 시작하기위한 새로운 인수가됩니다.</target>
        </trans-unit>
        <trans-unit id="26615f775b8c277087a8f2d1086b906e8270c39e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;as&lt;/code&gt; is asynchronous</source>
          <target state="translated">&lt;code&gt;as&lt;/code&gt; 비동기</target>
        </trans-unit>
        <trans-unit id="19fdb18e87a011044ea685066bd4c94c5d8bfd3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;baseUrl&lt;/code&gt; can be set in your &lt;code&gt;cypress.json&lt;/code&gt; - and then you can use an environment variable to override it.</source>
          <target state="translated">&lt;code&gt;baseUrl&lt;/code&gt; 당신 설정할 수 있습니다 &lt;code&gt;cypress.json&lt;/code&gt; - 그리고 당신은 그것을 대체 할 환경 변수를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="191add2bc654a1e38bba3df8395a58a847e6b286" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt; hooks within a &lt;a href=&quot;../core-concepts/writing-and-organizing-tests#Support-file&quot;&gt;support file&lt;/a&gt; now run before/after every spec file, instead of only once before/after the entire run. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/681&quot;&gt;#681&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;before&lt;/code&gt; &lt;a href=&quot;../core-concepts/writing-and-organizing-tests#Support-file&quot;&gt;지원 파일&lt;/a&gt; 내 이전 및 &lt;code&gt;after&lt;/code&gt; 후크는 이제 전체 실행 전후 한 번이 아니라 모든 스펙 파일 전후에 실행됩니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/681&quot;&gt;# 681&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="589279eeb5336ad87886979c62e9c7c911f3836d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;beforeinput&lt;/code&gt; is &lt;em&gt;not&lt;/em&gt; fired even though it is in the spec because no browser has adopted it.</source>
          <target state="translated">&lt;code&gt;beforeinput&lt;/code&gt; 브라우저가이를 채택하지 않았기 때문에 beforeinput 은 스펙에 있어도 실행 &lt;em&gt;되지 않습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="df40edd924057a79b5e852b9e3fe288234b45ee7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;change&lt;/code&gt; events are now fired exactly how a browser does (when an input loses focus and its value has changed since its last focus event). You&amp;rsquo;ll see these fire after you use &lt;a href=&quot;../../api/commands/blur&quot;&gt;&lt;code&gt;.blur()&lt;/code&gt;&lt;/a&gt; directly, or use another &lt;code&gt;action command&lt;/code&gt; on another element.</source>
          <target state="translated">&lt;code&gt;change&lt;/code&gt; 이벤트는 이제 브라우저가하는 방식과 정확히 일치합니다 (입력이 포커스를 잃고 마지막 포커스 이벤트 이후 값이 변경된 경우). &lt;a href=&quot;../../api/commands/blur&quot;&gt; &lt;code&gt;.blur()&lt;/code&gt; &lt;/a&gt; 직접 사용하거나 다른 요소에서 다른 &lt;code&gt;action command&lt;/code&gt; 을 사용 하면 이러한 화재가 나타납니다 .</target>
        </trans-unit>
        <trans-unit id="d56b6a65e1be73f8326ae2ea37a223551c9a22cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;chromium-browser&lt;/code&gt; or &lt;code&gt;chromium&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;chromium-browser&lt;/code&gt; 또는 &lt;code&gt;chromium&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fbb2f644d1897a273348df735d44ec911b097143" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;clientX&lt;/code&gt; and &lt;code&gt;clientY&lt;/code&gt; event properties are now correctly calculated for elements when the page is scrolled. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/98&quot;&gt;#98&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;clientX&lt;/code&gt; 페이지가 스크롤 될 때 요소에 대해 clientX 및 &lt;code&gt;clientY&lt;/code&gt; 이벤트 특성이 올바르게 계산됩니다. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/98&quot;&gt;# 98&lt;/a&gt; 수정 .</target>
        </trans-unit>
        <trans-unit id="655740d83d408175d89749e8e733b0a1dc02c131" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config&lt;/code&gt; is the resolved &lt;a href=&quot;../../guides/references/configuration&quot;&gt;Cypress configuration&lt;/a&gt; of the opened project.</source>
          <target state="translated">&lt;code&gt;config&lt;/code&gt; 는 열린 프로젝트 의 해결 된 &lt;a href=&quot;../../guides/references/configuration&quot;&gt;Cypress 구성&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="672d202a71a2e12f54f6204efc644f7d1b044a98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;console.groups&lt;/code&gt; are now collapsed by default.</source>
          <target state="translated">&lt;code&gt;console.groups&lt;/code&gt; 는 기본적으로 축소되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="15d92b15fdde7b132150295950662b3370b52146" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;context()&lt;/code&gt; is identical to &lt;code&gt;describe()&lt;/code&gt; and &lt;code&gt;specify()&lt;/code&gt; is identical to &lt;code&gt;it()&lt;/code&gt;, so choose whatever terminology works best for you.</source>
          <target state="translated">&lt;code&gt;context()&lt;/code&gt; 는 &lt;code&gt;describe()&lt;/code&gt; 와 동일 하고 &lt;code&gt;specify()&lt;/code&gt; 은 &lt;code&gt;it()&lt;/code&gt; 과 동일 하므로 가장 적합한 용어를 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="e4c72879eb5ed219bee95732d980146012fbc272" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cookies&lt;/code&gt; that do not have their &lt;code&gt;secure&lt;/code&gt; flag set to &lt;code&gt;true&lt;/code&gt; will be sent as clear text to the insecure URL. This leaves your application vulnerable to session hijacking.</source>
          <target state="translated">&lt;code&gt;cookies&lt;/code&gt; &lt;code&gt;secure&lt;/code&gt; 플래그가 &lt;code&gt;true&lt;/code&gt; 로 설정 되지 않은 쿠키 는 안전하지 않은 URL에 일반 텍스트로 전송됩니다. 이로 인해 애플리케이션이 세션 하이재킹에 취약 해집니다.</target>
        </trans-unit>
        <trans-unit id="f9411227cc5e8759e8b330f21a7d35bbc2988126" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy...()&lt;/code&gt; failed because the element you are chaining off of has become detached or removed from the dom</source>
          <target state="translated">&lt;code&gt;cy...()&lt;/code&gt; 연결하려는 요소가 돔에서 분리되거나 제거되어 cy ... ()가 실패했습니다.</target>
        </trans-unit>
        <trans-unit id="75a5c3c0889cdc39d4194bd1cb827404869bdc63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy....()&lt;/code&gt; failed because the element cannot be interacted with</source>
          <target state="translated">&lt;code&gt;cy....()&lt;/code&gt; 요소와 상호 작용할 수 없으므로 cy .... ()가 실패했습니다 .</target>
        </trans-unit>
        <trans-unit id="1f8be056a37beb17907f987ccc26365953c6be30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy....()&lt;/code&gt; failed because the element is currently animating</source>
          <target state="translated">&lt;code&gt;cy....()&lt;/code&gt; 요소가 현재 애니메이션이기 때문에 cy .... () 실패</target>
        </trans-unit>
        <trans-unit id="35cb91da4e583e7e5ee30b1535a159d7008bbfee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.Promise&lt;/code&gt; (Bluebird) is now publicly available.</source>
          <target state="translated">&lt;code&gt;cy.Promise&lt;/code&gt; (Bluebird)가 공개되었습니다.</target>
        </trans-unit>
        <trans-unit id="3d4b37becc85fa1cef91b384f7690e3e4e94f3ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.chain&lt;/code&gt; is now coercively returned instead of &lt;code&gt;cy&lt;/code&gt; which prevents losing access to the subject in custom commands.</source>
          <target state="translated">&lt;code&gt;cy.chain&lt;/code&gt; &lt;code&gt;cy&lt;/code&gt; 대신에 cy.chain 이 cy 대신 강제로 반환 되어 사용자 지정 명령으로 주제에 대한 액세스 권한을 잃지 않습니다.</target>
        </trans-unit>
        <trans-unit id="60c915c0556a8dd974a06e39ac15208d02c29788" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.clearCookie()&lt;/code&gt; cannot be chained further.</source>
          <target state="translated">&lt;code&gt;cy.clearCookie()&lt;/code&gt; 는 더 이상 연결할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="8cf932147e167e64f6e2294fa8303a13c36e6475" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.clearCookie()&lt;/code&gt; cannot have any assertions chained.</source>
          <target state="translated">&lt;code&gt;cy.clearCookie()&lt;/code&gt; 는 어설 션을 연결할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="7650320d9133d7b30389705831c6276e675f1ca3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.clearCookie()&lt;/code&gt; requires being chained off of &lt;code&gt;cy&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cy.clearCookie()&lt;/code&gt; 는 &lt;code&gt;cy&lt;/code&gt; 와 연결되어 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="7fe81dbc34024ac0e8a6e644f0e17420dfb18f0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.clearCookie()&lt;/code&gt; should never time out.</source>
          <target state="translated">&lt;code&gt;cy.clearCookie()&lt;/code&gt; 가 시간 초과되지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="1214df3516efd34d8df5a06b9498789ca9f35c97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.clearCookie()&lt;/code&gt; yields &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cy.clearCookie()&lt;/code&gt; &lt;code&gt;null&lt;/code&gt; 을 생성 합니다.</target>
        </trans-unit>
        <trans-unit id="075063f9ae625f9ae32b307513ab36849dcd7838" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.clearCookies()&lt;/code&gt; cannot be chained further.</source>
          <target state="translated">&lt;code&gt;cy.clearCookies()&lt;/code&gt; 는 더 이상 연결할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="f8888901efb92cc3eb47ececd0cdee0885f725bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.clearCookies()&lt;/code&gt; cannot have any assertions chained.</source>
          <target state="translated">&lt;code&gt;cy.clearCookies()&lt;/code&gt; 는 어설 션을 연결할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="f67166e94351553f97f8f0588e4945182d40a849" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.clearCookies()&lt;/code&gt; requires being chained off of &lt;code&gt;cy&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cy.clearCookies()&lt;/code&gt; 는 &lt;code&gt;cy&lt;/code&gt; 와 연결되어 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="1808c81174086b803613450bfb29e235d2eb11a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.clearCookies()&lt;/code&gt; should never time out.</source>
          <target state="translated">&lt;code&gt;cy.clearCookies()&lt;/code&gt; 가 시간 초과되지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="a5e413bad331b2875fbc78bcf52c35d4e098a5d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.clearCookies()&lt;/code&gt; yields &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cy.clearCookies()&lt;/code&gt; &lt;code&gt;null&lt;/code&gt; 을 생성 합니다.</target>
        </trans-unit>
        <trans-unit id="278828719746bf7df0cb107bed23ccf2ca30b959" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.clearLocalStorage()&lt;/code&gt; cannot be chained further.</source>
          <target state="translated">&lt;code&gt;cy.clearLocalStorage()&lt;/code&gt; 는 더 이상 연결할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="6e39e2baab0aea5436132b893b6164346e3666d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.clearLocalStorage()&lt;/code&gt; cannot have any assertions chained.</source>
          <target state="translated">&lt;code&gt;cy.clearLocalStorage()&lt;/code&gt; 는 어설 션을 연결할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="657a786a7cfb338e40c3fd7f4478b7736eb333ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.clearLocalStorage()&lt;/code&gt; cannot time out.</source>
          <target state="translated">&lt;code&gt;cy.clearLocalStorage()&lt;/code&gt; 가 시간 초과 될 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="06ee230a7b2d9b206308381f95056519cc903ee6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.clearLocalStorage()&lt;/code&gt; requires being chained off of &lt;code&gt;cy&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cy.clearLocalStorage()&lt;/code&gt; 는 &lt;code&gt;cy&lt;/code&gt; 에서 체인으로 연결되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="63d1877ed15c8b97669ded11e3099b57bc332e71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.clearLocalStorage()&lt;/code&gt; yields &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cy.clearLocalStorage()&lt;/code&gt; &lt;code&gt;null&lt;/code&gt; 을 생성 합니다.</target>
        </trans-unit>
        <trans-unit id="e69898f60e6fd86f6ce8053573e4dd87d24d0bc9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.clock()&lt;/code&gt; cannot time out.</source>
          <target state="translated">&lt;code&gt;cy.clock()&lt;/code&gt; 이 시간 초과 될 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="d38adc94a27a35addb0888f35d5d93c2acc8177f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.clock()&lt;/code&gt; is a utility command.</source>
          <target state="translated">&lt;code&gt;cy.clock()&lt;/code&gt; 은 유틸리티 명령입니다.</target>
        </trans-unit>
        <trans-unit id="5f90170c86141b9ae600ce52f502b0f2cf46f65d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.clock()&lt;/code&gt; overrides native global functions related to time allowing them to be controlled synchronously via &lt;a href=&quot;tick&quot;&gt;&lt;code&gt;cy.tick()&lt;/code&gt;&lt;/a&gt; or the yielded &lt;code&gt;clock&lt;/code&gt; object. This includes controlling:</source>
          <target state="translated">&lt;code&gt;cy.clock()&lt;/code&gt; 은 시간과 관련된 기본 전역 함수를 재정 의하여 &lt;a href=&quot;tick&quot;&gt; &lt;code&gt;cy.tick()&lt;/code&gt; &lt;/a&gt; 또는 생성 된 &lt;code&gt;clock&lt;/code&gt; 객체 를 통해 동 기적으로 제어 할 수 있도록 합니다. 여기에는 제어가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="37ce651d30becfc0044151e26836704bfacaeb0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.clock()&lt;/code&gt; requires being chained off of &lt;code&gt;cy&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cy.clock()&lt;/code&gt; 은 &lt;code&gt;cy&lt;/code&gt; 에서 체인으로 연결해야합니다 .</target>
        </trans-unit>
        <trans-unit id="fc1fde4fd4770597b6f4cfd3c7420cb31ab7209e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.clock()&lt;/code&gt; will not run assertions. Assertions will pass through as if this command did not exist.</source>
          <target state="translated">&lt;code&gt;cy.clock()&lt;/code&gt; 은 어설 션을 실행하지 않습니다. 이 명령이없는 것처럼 어설 션이 통과합니다.</target>
        </trans-unit>
        <trans-unit id="dec2d1c4f311c5c8f867099e96f922442fd3235e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.clock()&lt;/code&gt; yields a &lt;code&gt;clock&lt;/code&gt; object with the following methods:</source>
          <target state="translated">&lt;code&gt;cy.clock()&lt;/code&gt; 은 다음 메소드를 사용하여 &lt;code&gt;clock&lt;/code&gt; 객체를 생성 합니다.</target>
        </trans-unit>
        <trans-unit id="818e27306c34bc7b9b0b83c1bd40ac700f42b8d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.document()&lt;/code&gt; can time out waiting for assertions you've added to pass.</source>
          <target state="translated">&lt;code&gt;cy.document()&lt;/code&gt; 는 추가 한 어설 션이 전달되기를 기다리는 시간을 초과 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e1a9fded7e4650e8703bc0320b0771b1adda09b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.document()&lt;/code&gt; requires being chained off of &lt;code&gt;cy&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cy.document()&lt;/code&gt; 는 &lt;code&gt;cy&lt;/code&gt; 와 연결되어 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="c4c93a0b3cc835bf5d5476271c4a7dc573c2123e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.document()&lt;/code&gt; will automatically &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; until assertions you've chained all pass.</source>
          <target state="translated">&lt;code&gt;cy.document()&lt;/code&gt; 는 모든 체인을 연결 한 어설 션이 전달 될 때까지 자동으로 &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;재 시도&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="ccf7c334d3a4c9f8ed10fb2063a766858e65f9a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.document()&lt;/code&gt; yields the &lt;code&gt;window.document&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;cy.document()&lt;/code&gt; 는 &lt;code&gt;window.document&lt;/code&gt; 객체를 생성 합니다.</target>
        </trans-unit>
        <trans-unit id="d97f5df5a29590f0853b1835c1ea5365837bda2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.each()&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; log in the Command Log</source>
          <target state="translated">&lt;code&gt;cy.each()&lt;/code&gt; 가 명령 로그에 기록 되지 &lt;em&gt;않습니다&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="82bfdd391b61a37da640684a26e49dac636942c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.exec()&lt;/code&gt; can time out waiting for the system command to exit.</source>
          <target state="translated">&lt;code&gt;cy.exec()&lt;/code&gt; 는 시스템 명령이 종료되기를 기다리는 시간을 초과 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4a111f4333d755fb9be1706e07aa3deae30c8e48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.exec()&lt;/code&gt; does not support commands that don&amp;rsquo;t exit, such as:</source>
          <target state="translated">&lt;code&gt;cy.exec()&lt;/code&gt; 는 다음과 같이 종료되지 않는 명령을 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3b233f4665b2dab722d325ae0c332e0e76c35199" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.exec()&lt;/code&gt; provides an escape hatch for running arbitrary system commands, so you can take actions necessary for your test outside the scope of Cypress. This is great for:</source>
          <target state="translated">&lt;code&gt;cy.exec()&lt;/code&gt; 는 임의의 시스템 명령을 실행하기위한 이스케이프 해치를 제공하므로 Cypress 범위 밖에서 테스트에 필요한 조치를 취할 수 있습니다. 이것은 다음에 좋습니다 :</target>
        </trans-unit>
        <trans-unit id="f55e40f7311bd2b9f6af270d4bc7c5406af6562a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.exec()&lt;/code&gt; requires being chained off of &lt;code&gt;cy&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cy.exec()&lt;/code&gt; 는 &lt;code&gt;cy&lt;/code&gt; 와 연결되어 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="d0cb1922d9a2d0fcd69948bfff484f4b529c3eb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.exec()&lt;/code&gt; requires that the exit code be &lt;code&gt;0&lt;/code&gt; when &lt;code&gt;failOnNonZeroExit&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cy.exec()&lt;/code&gt; 는 &lt;code&gt;failOnNonZeroExit&lt;/code&gt; 가 &lt;code&gt;true&lt;/code&gt; 일 때 종료 코드가 &lt;code&gt;0&lt;/code&gt; 이어야 합니다 .</target>
        </trans-unit>
        <trans-unit id="2ff13e040957f3cb335aef5991b5ddc3d82be0e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.exec()&lt;/code&gt; requires the executed system command to eventually exit.</source>
          <target state="translated">&lt;code&gt;cy.exec()&lt;/code&gt; 실행하려면 실행 된 시스템 명령이 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="70e6c3606d2248400ff7f5fe1788317dd722da45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.exec()&lt;/code&gt; will only run assertions you've chained once, and will not &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cy.exec()&lt;/code&gt; 는 한 번 연결 한 어설 션 만 실행하며 &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;다시 시도&lt;/a&gt; 하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="ffcaab542fb8826f243fccb2281baa75d7447f5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.exec()&lt;/code&gt; yields an object with the following properties:</source>
          <target state="translated">&lt;code&gt;cy.exec()&lt;/code&gt; 는 다음 속성을 가진 객체를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="532f8957e7146873200e2e9c094381df55a778fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.fixture()&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; log in the Command Log</source>
          <target state="translated">&lt;code&gt;cy.fixture()&lt;/code&gt; 가 명령 로그에 기록 되지 &lt;em&gt;않습니다&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="603ebf8543543cb4a779e73ed2da7f5a37862df4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.fixture()&lt;/code&gt; requires being chained off of &lt;code&gt;cy&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cy.fixture()&lt;/code&gt; 는 &lt;code&gt;cy&lt;/code&gt; 와 연결되어 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="d1195880a205aa52cda8c969810af369ef2090a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.fixture()&lt;/code&gt; should never time out.</source>
          <target state="translated">&lt;code&gt;cy.fixture()&lt;/code&gt; 가 시간 초과되지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="7f1be2ec04d83a2fee878d85c9a3ca1ea88a2a7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.fixture()&lt;/code&gt; will only run assertions you've chained once, and will not &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cy.fixture()&lt;/code&gt; 는 한 번 연결 한 어설 션 만 실행하며 &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;다시 시도&lt;/a&gt; 하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="b2e1d6fddfb1cad26e4fe8bf250eb34ce19b4490" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.fixture()&lt;/code&gt; yields the contents of the file. Formatting is determined by its file extension.</source>
          <target state="translated">&lt;code&gt;cy.fixture()&lt;/code&gt; 는 파일의 내용을 산출합니다. 형식은 파일 확장자에 의해 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="9aa4511007ed8e499e54ee0406ec5799d9b5c3b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.focused()&lt;/code&gt; can time out waiting for assertions you've added to pass.</source>
          <target state="translated">&lt;code&gt;cy.focused()&lt;/code&gt; 는 추가 한 어설 션이 전달 될 때까지 시간이 초과 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fa732504441151336cac8179f2f08b00c6d929f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.focused()&lt;/code&gt; can time out waiting for the element(s) to &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;exist in the DOM&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cy.focused()&lt;/code&gt; 는 요소 &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;가 DOM&lt;/a&gt; 에 존재 하기를 기다리는 시간을 초과 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="856c9fceab7a188c3378f83e686e91d548200e14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.focused()&lt;/code&gt; requires being chained off of &lt;code&gt;cy&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cy.focused()&lt;/code&gt; 는 &lt;code&gt;cy&lt;/code&gt; 에서 체인으로 연결되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="58ab63204350a1e71db253bef2982d4d802945d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.focused()&lt;/code&gt; will automatically &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; until assertions you've chained all pass.</source>
          <target state="translated">&lt;code&gt;cy.focused()&lt;/code&gt; 는 모든 체인이 연결된 주장이 전달 될 때까지 자동으로 &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;재 시도&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="43f60d81d6284ca09d1a81768563c02f3a078cf8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.focused()&lt;/code&gt; will automatically &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; until the element(s) &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;exist in the DOM&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cy.focused()&lt;/code&gt; 는 요소 &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;가 DOM에 존재할&lt;/a&gt; 때까지 자동으로 &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;재 시도 &lt;/a&gt;합니다 .</target>
        </trans-unit>
        <trans-unit id="5db267587b0fc9a28b45ccf0ea4927ac362180b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.focused()&lt;/code&gt; yields the DOM element(s) it found.</source>
          <target state="translated">&lt;code&gt;cy.focused()&lt;/code&gt; 는 찾은 DOM 요소를 생성합니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
