<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="cypress">
    <body>
      <group id="cypress">
        <trans-unit id="d630cf744979e503767ffaf45290230f181423c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.get('#nav header .user').as('user')&lt;/code&gt;  (good)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="450a209d21fefc6109eb77fc1ca52b0aa932b283" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.get('#nav').find('header').find('.user').as('user')&lt;/code&gt;  (bad)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e04696ae6f5e72504f8e0fef3e3489ff0b16cde5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.get()&lt;/code&gt; can time out waiting for assertions you've added to pass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e6883ba7dc04c1e5b96ac139678cbd0cff638d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.get()&lt;/code&gt; can time out waiting for the element(s) to &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;exist in the DOM&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cf48bc378e937f8432f836ebdac4b1f69f78e74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.get()&lt;/code&gt; in the &lt;a href=&quot;within&quot;&gt;&lt;code&gt;.within()&lt;/code&gt;&lt;/a&gt; command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73f69a463da1ba86fc89ab52d44a18df910092e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.get()&lt;/code&gt; requires being chained off of &lt;code&gt;cy&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3069b6e32dce74ed06366fd365a24db3d99e59a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.get()&lt;/code&gt; will automatically &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; until assertions you've chained all pass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e7545b0ed3d7146c970dc54e6f8414e7e8b0017" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.get()&lt;/code&gt; will automatically &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; until the element(s) &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;exist in the DOM&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f8e9cd79bcecfe8b9c8ddd1071b74bb91122159" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.get()&lt;/code&gt; yields the DOM element(s) it found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abaa7779bb70775f9979689bdb590e0506079957" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.getCookie()&lt;/code&gt; requires being chained off of &lt;code&gt;cy&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72da6166472aaf3435eac7e93fd996069f362c1c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.getCookie()&lt;/code&gt; should never time out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fac7cbb43fa3616b81cfe9b002a47448d37fc6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.getCookie()&lt;/code&gt; will only run assertions you've chained once, and will not &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdb2e2f0feac5ab98ce394028c255c3bbaee9bad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.getCookie()&lt;/code&gt; yields &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fb5cbce096b5b936474a47cecc0596fad8ac269" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.getCookie()&lt;/code&gt; yields a cookie object with the following properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26a16174ba9eaa9988d53b95fd98b147a97a4288" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.getCookies()&lt;/code&gt; requires being chained off of &lt;code&gt;cy&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab4db6582fc0e2d1206647894ac8e4b2f7bd5a9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.getCookies()&lt;/code&gt; should never time out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98f168121e7a38436b5f8853103857b47fae41aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.getCookies()&lt;/code&gt; will only run assertions you've chained once, and will not &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fbae4d348f9c522ddf8f86914839fd442effde3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.getCookies()&lt;/code&gt; yields an array of cookie objects. Each cookie object has the following properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7002c8b5008fc12a36e3267a51fa9875aab768bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.go()&lt;/code&gt; can time out waiting for assertions you've added to pass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="211bd36e33a85b5b91624fd99f6194f4e238b417" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.go()&lt;/code&gt; can time out waiting for the page to fire its &lt;code&gt;load&lt;/code&gt; event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f61aedbab7f2568ec8e452a6f079246b92b99f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.go()&lt;/code&gt; requires being chained off of &lt;code&gt;cy&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26081c0e5e3a48179451cd69179f2252d5153fbe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.go()&lt;/code&gt; requires the load &lt;code&gt;load&lt;/code&gt; event to eventually fire.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42c050d81a59fd3ba2c79470944e2cb5d61c93e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.go()&lt;/code&gt; requires the response code to be &lt;code&gt;2xx&lt;/code&gt; after following redirects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaa73e6ca2cdceecbb7886f1398100b4499692f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.go()&lt;/code&gt; requires the response to be &lt;code&gt;content-type: text/html&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14b12d7bf7916781360cfa0aecc9e54c232afa65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.go()&lt;/code&gt; will automatically wait for assertions you've chained to pass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acf8f27fa8de93b4677aea2770b5cce51b0f0ffc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.go()&lt;/code&gt; yields the &lt;code&gt;window&lt;/code&gt; object after the page finishes loading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="229f563f09f7a9f84a5e224ac7fc71991b01de6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.hash()&lt;/code&gt; can time out waiting for assertions you've added to pass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8713aed2822288230be4de59c8442bc08abb891a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.hash()&lt;/code&gt; requires being chained off of &lt;code&gt;cy&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2e35e11276de13ee415abc55d88dc687fd791e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.hash()&lt;/code&gt; will automatically &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; until assertions you've chained all pass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6a21f5019452b699053d3721e453f47dac0a830" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.hash()&lt;/code&gt; yields an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c94360f723911d8cd316afa9724b74639e4648d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.hash()&lt;/code&gt; yields the current URL&amp;rsquo;s hash (including the &lt;code&gt;#&lt;/code&gt; character).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71485bd7121c4edfbf0bce1b09c0359c5d44d085" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.location()&lt;/code&gt; can time out waiting for assertions you've added to pass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab814028c0003e084b6868000c744b83cd3cc7b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.location()&lt;/code&gt; requires being chained off of &lt;code&gt;cy&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ad074310d653e5e11a72cefbb0dd81fa05708b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.location()&lt;/code&gt; will automatically &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; until assertions you've chained all pass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c1ac757650cf1737fddf00064563e5721817363" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.location()&lt;/code&gt; yields the location object with the following properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1918cabe1fce226a5b08d1f2504f17cab0677ada" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.location()&lt;/code&gt; yields the value of the location property as a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31fe432a01d9c15dfe105619e7d4351342ea14e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.log()&lt;/code&gt; cannot be chained further.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46d850cf215ad0b63ba55e79deac6dfb941c0476" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.log()&lt;/code&gt; cannot have any assertions chained.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d805cc9d2d89d6bc9dc3b2136d329fdf0800c8ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.log()&lt;/code&gt; cannot time out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfd53d239ff4e80956cc33d3b991efc09640982d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.log()&lt;/code&gt; requires being chained off of &lt;code&gt;cy&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eca0572068f6c27bd47f30648c514cc29e39b7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.log()&lt;/code&gt; yields &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc348ffc87b9105314975228890bcb247cddee14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.readFile()&lt;/code&gt; can time out waiting for assertions you've added to pass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eff4b329f5c107e5a04b8b3010ed7d567c01ede5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.readFile()&lt;/code&gt; requires being chained off of &lt;code&gt;cy&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="100fd0cbfa421ce312ac6206c51e18a2e73b9ee0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.readFile()&lt;/code&gt; requires the file be successfully read from disk. Anything preventing this such as OS permission issues will cause it to fail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b6453430645f9cf2db34256e40a82a9a74975ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.readFile()&lt;/code&gt; requires the file must exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c9d893d81e2d1d1ef7edaf8c3e74f93ed164ffc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.readFile()&lt;/code&gt; will automatically &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; until assertions you've chained all pass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82801bae288ff0303a1422e47c02762605771d60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.readFile()&lt;/code&gt; will continue to read the file until it passes all of its assertions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="811b424600c061dd898a630145a5bba688eb7976" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.readFile()&lt;/code&gt; yields the contents of the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="169c39984ebeb9ac5bf29c4a27c14e5a8d39231a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.reload()&lt;/code&gt; can time out waiting for assertions you've added to pass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df13e4db10c64a6b23fe32b7f91f5416dc43947a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.reload()&lt;/code&gt; can time out waiting for the page to fire its &lt;code&gt;load&lt;/code&gt; event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fd05e77060cf09132c67237fcfb15835590b8be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.reload()&lt;/code&gt; requires being chained off of &lt;code&gt;cy&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3a4bd76679e01d9f5d496f4583267e0b4c0b3f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.reload()&lt;/code&gt; requires the load &lt;code&gt;load&lt;/code&gt; event to eventually fire.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34a63ea5ca220bca812a82160aa641f3b41b3bd9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.reload()&lt;/code&gt; requires the response code to be &lt;code&gt;2xx&lt;/code&gt; after following redirects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d1d4b883ccbaa3e8c955d78d3393ce24fcc4b2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.reload()&lt;/code&gt; requires the response to be &lt;code&gt;content-type: text/html&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="744c1793fa39d2957e89e7bf64482baad6e01651" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.reload()&lt;/code&gt; will automatically wait for assertions you've chained to pass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6b5c1e668033990b56e5ee383db20aa4c2b2f7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.reload()&lt;/code&gt; yields the &lt;code&gt;window&lt;/code&gt; object after the page finishes loading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ceb914d09ef33b2d888cfb331c7909a8a01e277" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.request()&lt;/code&gt; can time out waiting for the server to respond.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16f79e2da0148f3675ce9365fca04bdf5b0f0f3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.request()&lt;/code&gt; cannot be used to debug &lt;a href=&quot;server&quot;&gt;&lt;code&gt;cy.server()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16b74b331d69432fa4838aaea85900693f1fe55a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.request()&lt;/code&gt; is great for talking to an external endpoint before your tests to seed a database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a231ad27bdcd1a4f2c5589ec3e12e2815b2dc406" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.request()&lt;/code&gt; requires being chained off of &lt;code&gt;cy&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="721e2f0e2a76a2a420385d77da4993ec1fbce8a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.request()&lt;/code&gt; requires that the response status code be &lt;code&gt;2xx&lt;/code&gt; or &lt;code&gt;3xx&lt;/code&gt; when &lt;code&gt;failOnStatusCode&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b8b406fd2726c869433e5523819b888132133a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.request()&lt;/code&gt; requires that the server send a response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8f26ec9f9078833507b3bbc8460c65546a7b99a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.request()&lt;/code&gt; sends requests to actual endpoints, bypassing those defined using &lt;code&gt;cy.route()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2650c67dccadc43ebf18f959aa1db78e881b80fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.request()&lt;/code&gt; will only run assertions you've chained once, and will not &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b3597e0d67d90bd35b477e93d5f024f4e5d1b1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.request()&lt;/code&gt; yields the &lt;code&gt;response&lt;/code&gt; as an object literal containing properties such as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce98b8a085bca7894e034e1a382fc793fd968d17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.respond&lt;/code&gt; is &lt;em&gt;temporarily&lt;/em&gt; deprecated because the semantics of how this works is completely different and will require more work (mentioned later on) before this can be re-enabled again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88987ba199f8fcddc42b7a67f9227f88c321697f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.respond&lt;/code&gt; will not resolve until all of the queue&amp;rsquo;d XHR&amp;rsquo;s have resolved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aeaf5f161fa3d1ad62a349ff87d538b036f4441" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.root()&lt;/code&gt; can time out waiting for assertions you've added to pass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81e81c9ab3dc25b665250f031c4bf600f33b5511" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.root()&lt;/code&gt; requires being chained off of &lt;code&gt;cy&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c297da292420a2bf3ca111dc437c1f8e1e26e3e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.root()&lt;/code&gt; will automatically &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; until assertions you've chained all pass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd750e8f5e97b6c6e996cffb6fa3840fb2cd4d0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.route()&lt;/code&gt; can be aliased, but otherwise cannot be chained further.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="036d7c380f37b464de14b26897c37bcbde006072" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.route()&lt;/code&gt; cannot be debugged using &lt;a href=&quot;request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45cebe22ce7f241442dfb8cfcde52ee969a9dab3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.route()&lt;/code&gt; cannot have any assertions chained.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae8e925ad7c338fee77ffb2793b5076b74e2c4f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.route()&lt;/code&gt; cannot time out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeb0872807b82cb43d2ac0b8fb085302a0657d2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.route()&lt;/code&gt; requires being chained off of &lt;code&gt;cy&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27f3d132600ffbf98c82929675c2237a5e00af51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.route()&lt;/code&gt; yields &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="305ee7a5ee9775fc1677aa23e4c10139f276627f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.screenshot()&lt;/code&gt; can be chained off of &lt;code&gt;cy&lt;/code&gt; or off a command that yields a single DOM element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="961448460efc13104e84d50b09fa787d03a815c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.screenshot()&lt;/code&gt; should never time out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f29154f506cfdf5614ee7c031c771d073acc700" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.screenshot()&lt;/code&gt; will only run assertions you've chained once, and will not &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aa3d72dcd90f2aa3f778eca25824285d54b696a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.scrollTo()&lt;/code&gt; acts differently whether it&amp;rsquo;s starting a series of commands or being chained off of an existing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7178290af11aa88e300bffa14aca6a8c47741be6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.scrollTo()&lt;/code&gt; is an &amp;ldquo;action command&amp;rdquo; that follows all the rules &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;defined here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca1f9af786d54283bbd94234209d3818e741ac78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.scrollTo()&lt;/code&gt; yields the same subject it was given from the previous command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3243403899df375c8e0954c8e8a1802c6b61adb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.scrollTo&lt;/code&gt; now logs its coordinates when options are used. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/725&quot;&gt;#725&lt;/a&gt;. Contributed by &lt;a href=&quot;https://github.com/sirugh&quot;&gt;@sirugh&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6610f8f45d8fff41ff5ed8fa9d7c97846d91d5ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.server()&lt;/code&gt; cannot be chained further.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aed2420d318860325fffa2e6d3b8619a1efa04ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.server()&lt;/code&gt; cannot have any assertions chained.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fac3a3196869b4c1582843998e55db686d354bb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.server()&lt;/code&gt; cannot time out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80fa5ad6786e413d9ef03dafa8bec9c8ca18dbe5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.server()&lt;/code&gt; comes with a &lt;code&gt;whitelist&lt;/code&gt; function that by default filters out any requests that are for static assets like &lt;code&gt;.html&lt;/code&gt;, &lt;code&gt;.js&lt;/code&gt;, &lt;code&gt;.jsx&lt;/code&gt;, and &lt;code&gt;.css&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05eef3da20b70d53d3d0a57d5b9fba46891b12e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.server()&lt;/code&gt; command added</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9da5704f33cb1927ede6c3539942c0a1fbe8b44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.server()&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; log in the Command Log</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19f367133a354e8280468bd8ca685168bfaefd0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.server()&lt;/code&gt; requires being chained off of &lt;code&gt;cy&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5b91c923b9ee24ace3ac71bdab9c4b3d8748396" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.server()&lt;/code&gt; yields &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93b52dd2c912d9e3d2e79c13e0d62728c36f3bf2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.setCookie()&lt;/code&gt; command added</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bb55ed431bc3ca0ec5e76799820262aa72aa0c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.setCookie()&lt;/code&gt; requires being chained off of &lt;code&gt;cy&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9ff9d5118bbec5a69b15b66af79fde0178a8786" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.setCookie()&lt;/code&gt; should never time out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eeb9947546c4e0487421ceb7d6734312925352a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.setCookie()&lt;/code&gt; will only run assertions you've chained once, and will not &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3354734ac972475e0037b26d4fef9430bd0e7ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.setCookie()&lt;/code&gt; yields a cookie object literal with the following properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c14e54b050617918b2e2024b210f915ac75d12f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.spread()&lt;/code&gt; can now be used on a collection of DOM elements. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/735&quot;&gt;#735&lt;/a&gt;. Contributed by &lt;a href=&quot;https://github.com/verheyenkoen&quot;&gt;@verheyenkoen&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b80b2e55f92afac1923d0ad1d26aec55fa5da2e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.spy()&lt;/code&gt; cannot have any assertions chained.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fc5fe4397d3a45dc3b8cbefe3b1c7ffa98a8a19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.spy()&lt;/code&gt; cannot time out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64ead56ed8968e547973313ec81aaaf9546a5082" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.spy()&lt;/code&gt; command added</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="563b83a1e7f96c97f17c1e2ab9b9a9a13d9deb10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.spy()&lt;/code&gt; creates spies in a &lt;a href=&quot;https://sinonjs.org/releases/v6.1.5/sandbox/&quot;&gt;sandbox&lt;/a&gt;, so all spies created are automatically reset/restored between tests without you having to explicitly reset/restore them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb5f8d3e1e7e359d751799e397b8d0d0c40ab642" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.spy()&lt;/code&gt; requires being chained off of &lt;code&gt;cy&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77a03e5c3a3010eb6509922d22c74cb922654974" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.spy()&lt;/code&gt; returns a &lt;a href=&quot;https://sinonjs.org/releases/v6.1.5/spies/&quot;&gt;Sinon.js spy&lt;/a&gt;. All methods found on Sinon.JS spies are supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8914b3bb706884843d19acb76303f0d2898f1053" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.stub()&lt;/code&gt; cannot have any assertions chained.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36667447305e1cf45c1a954aec12a1c45d249429" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.stub()&lt;/code&gt; cannot time out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c96071831b790d4e795bbfc20c4bdcd1eba586e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.stub()&lt;/code&gt; command added</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e087837fb0de670f7418fa92035a49be6d57b1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.stub()&lt;/code&gt; creates stubs in a &lt;a href=&quot;http://sinonjs.org/releases/v2.0.0/sandbox/&quot;&gt;sandbox&lt;/a&gt;, so all stubs created are automatically reset/restored between tests without you having to explicitly reset/restore them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa6b058fff9c1a9fbd1a0ba2671efa8034aca7e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.stub()&lt;/code&gt; requires being chained off of &lt;code&gt;cy&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eae02f80b4b6e1aa297c6d245369a1815c162595" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.stub()&lt;/code&gt; returns a &lt;a href=&quot;http://sinonjs.org/&quot;&gt;Sinon.js stub&lt;/a&gt;. All methods found on &lt;a href=&quot;http://sinonjs.org/&quot;&gt;Sinon.js&lt;/a&gt; spies and stubs are supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dfc6972f690ddf44dca53a4c708d5eabe4812a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.task()&lt;/code&gt; can time out waiting for the task to end.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbb4f5c85e55748fabfaf3ee1e17c8a58d0e3b93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.task()&lt;/code&gt; command added</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9de99e462e9b664648f7add9e9cab417dbf98bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.task()&lt;/code&gt; does not support tasks that do not end, such as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a699901327905044f944dd2f5145054c5302bd6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.task()&lt;/code&gt; provides an escape hatch for running arbitrary Node code, so you can take actions necessary for your tests outside of the scope of Cypress. This is great for:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aae7023efaed1755fd58fac64fd45ec55acdd0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.task()&lt;/code&gt; requires being chained off of &lt;code&gt;cy&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="722129e79119776d70cb209b3f967087bb443637" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.task()&lt;/code&gt; requires the task to eventually end.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9252da227e2161ff8d4ec1b9d7a2ee9497808b06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.task()&lt;/code&gt; will only run assertions you've chained once, and will not &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d159e3af3daeeab4dbfc5576681b6045ebacfd2f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.task()&lt;/code&gt; yields the value returned or resolved by the &lt;code&gt;task&lt;/code&gt; event in the &lt;a href=&quot;../../guides/references/configuration#Folders-Files&quot;&gt;&lt;code&gt;pluginsFile&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31813f3e78a04850d62b6c9f13e55a495eac4f8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.tick()&lt;/code&gt; cannot time out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8187daa7305b2bb04e20f22ac2724359ee0410cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.tick()&lt;/code&gt; command added</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e798e499eb8011010e463128187df03356449aef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.tick()&lt;/code&gt; is a utility command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a61fe30d82a1be8e62dc5db433d0b4d5395d18f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.tick()&lt;/code&gt; requires being chained off of &lt;code&gt;cy&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4df22f2b8f1b58f8c28fa23343acfb60e02278b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.tick()&lt;/code&gt; requires that &lt;code&gt;cy.clock()&lt;/code&gt; be called before it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60eb5a10aa2c50e7f2c16e003bf1debfac01d282" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.tick()&lt;/code&gt; will not run assertions. Assertions will pass through as if this command did not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f799e16b3c894222c08755dc4300461f7c14d318" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.tick()&lt;/code&gt; yields a &lt;code&gt;clock&lt;/code&gt; object with the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1043e7bc99b9519c694b81325050042382562c39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.title()&lt;/code&gt; can time out waiting for assertions you've added to pass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cc4cf70dd14d65442d1cdf9175088aa89a55f1c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.title()&lt;/code&gt; command added</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="152f34dfd344cde91d2fe14acda9dc2780a8e1a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.title()&lt;/code&gt; requires being chained off of &lt;code&gt;cy&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07de266b60883a4003c545fdc43d6ce9a05179f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.title()&lt;/code&gt; will automatically &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; until assertions you've chained all pass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb259915fe93f1e56563deafa88dcdd8f476fcc2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.title()&lt;/code&gt; yields the &lt;code&gt;document.title&lt;/code&gt; property of the current page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0250d6f751f04f7165e593b671204e9c0a96d94f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.trigger()&lt;/code&gt; is meant to be a low-level utility that makes triggering events easier than manually constructing and dispatching them. Since any arbitrary event can be triggered, Cypress tries not to make any assumptions about how it should be triggered. This means you&amp;rsquo;ll need to know the implementation details (which may be in a 3rd party library) of the event handler(s) receiving the event and provide the necessary properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d94c2868fc60c3e409314ed8952a995b688c9cb7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.type&lt;/code&gt; now correctly fires change events on React 16. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/647&quot;&gt;#647&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4fd8af786ecdc0315407330d962c3e7126484dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.url()&lt;/code&gt; can time out waiting for assertions you've added to pass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b407be609ca332a5765611f34ef7e7e56e204f23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.url()&lt;/code&gt; command added</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a72c287076bca6274192266cdc692484fd6ab953" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.url()&lt;/code&gt; exists because it&amp;rsquo;s what most developers naturally assume would return them the full current URL. We almost never refer to the URL as an &lt;code&gt;href&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e31aa6c3f4535e5c4c67dc8e35a39ff8142ce768" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.url()&lt;/code&gt; requires being chained off of &lt;code&gt;cy&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9cbbdbc89334f4cb0c436d20b42aa7b2ea0e3fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.url()&lt;/code&gt; uses &lt;code&gt;href&lt;/code&gt; under the hood.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26b5e8c8f848038ded22b8694ae647e3f6d16d50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.url()&lt;/code&gt; will automatically &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; until assertions you've chained all pass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a541a082b32d418b331f26826fa2f448b4a41372" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.url()&lt;/code&gt; yields the current URL as a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="070055fe2083ed16b301a96c5c5fe4bdfb3d8faf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.viewport()&lt;/code&gt; cannot be chained further.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca428054b4f5dfddca37ba462c36273c265b74aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.viewport()&lt;/code&gt; cannot have any assertions chained.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bcec00442e03688d0aba39eaae5eade0d7e68ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.viewport()&lt;/code&gt; cannot time out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeb3d26a2984c28dab9e09378248a4cb51f07453" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.viewport()&lt;/code&gt; command added</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aba9d34296e56433538f8298ffbd395e6dd2d401" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.viewport()&lt;/code&gt; requires being chained off of &lt;code&gt;cy&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ceaa8a25f88a7294392c6617393a3cc65176f50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.viewport()&lt;/code&gt; yields &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d580bd54b096815ee04159e6cb7767fbbf4fc3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.visit()&lt;/code&gt; callback functions: &lt;code&gt;onBeforeLoad&lt;/code&gt; and &lt;code&gt;onLoad&lt;/code&gt; are now invoked with the current runnables context instead of with &lt;code&gt;cy&lt;/code&gt;. This makes accessing properties in your tests much easier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfc952904ce741bf54dcd09c6d0adb5bdd5f9c5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.visit()&lt;/code&gt; can time out waiting for assertions you've added to pass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49e5e15ae504d7ac25c44bdfec63596d8bde6518" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.visit()&lt;/code&gt; can time out waiting for the page to fire its &lt;code&gt;load&lt;/code&gt; event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="666c0e5af9c1271b878d91c3d61ad7c07a5669ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.visit()&lt;/code&gt; command added</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a49141a163373608e7c365a6fb9d162f5d77e91f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.visit()&lt;/code&gt; failed because you are attempting to visit a second unique domain</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f0472a4cf9b8251bccc0dd10bab44f725949b67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.visit()&lt;/code&gt; requires being chained off of &lt;code&gt;cy&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="810af5c81f370b4ab5fa29d32aa90be5b105fce6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.visit()&lt;/code&gt; requires the load &lt;code&gt;load&lt;/code&gt; event to eventually fire.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fa5903e2e5317d4fbdc9d7fb07547fea9981cb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.visit()&lt;/code&gt; requires the response code to be &lt;code&gt;2xx&lt;/code&gt; after following redirects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57dcc11991ce584c45fa3834b932c99705f05442" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.visit()&lt;/code&gt; requires the response to be &lt;code&gt;content-type: text/html&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0f5dfec43744dffae1c4d88dfa4f973d11631fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.visit()&lt;/code&gt; resolves when the remote page fires its &lt;code&gt;load&lt;/code&gt; event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3fb6b391d8a5714826358c78b89240b089ec07b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.visit()&lt;/code&gt; will automatically wait for assertions you've chained to pass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="466947ba374b281d3c558ea6582dc91c9e76212f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.visit()&lt;/code&gt; yields the &lt;code&gt;window&lt;/code&gt; object after the page finishes loading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99026bd451dd02da1e2befc6bdf2b3b3f24fe872" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.wait()&lt;/code&gt; can time out waiting for request to go out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ab8d9b6509b577757a01e22afaefb3b6666a9cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.wait()&lt;/code&gt; can time out waiting for response to return.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b05d749542b0841890a4731b3ce459c635b9ab7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.wait()&lt;/code&gt; command added</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afc30aa54bcfad8cd9418bad2251c8df52b3d302" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.wait()&lt;/code&gt; will only run assertions you've chained once, and will not &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da25e49c4a058288f821cea9dd76329075b5efca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.wait()&lt;/code&gt; yields an object containing the HTTP request and response properties of the XHR.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceee006e547065a9742d1dafce4f2c6f5e592e89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.wait()&lt;/code&gt; yields the same subject it was given from the previous command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b214978a1bc80f6e6a18c706ab98392044b44d0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.wait(function)&lt;/code&gt; has been deprecated and you can safely rename this command to &lt;a href=&quot;../../api/commands/should&quot;&gt;&lt;code&gt;.should()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9241ef599e4808c50e3e64767cefcee5fb8e3314" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.window()&lt;/code&gt; can time out waiting for assertions you've added to pass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b5a416b06512dcc163df382adf619a6367aca3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.window()&lt;/code&gt; logs to Command Log</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e6aed2f386a973fc197688e3bfbf5512d831852" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.window()&lt;/code&gt; requires being chained off of &lt;code&gt;cy&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="806ffa86ee84de16a6418d3a1ab13053065fc324" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.window()&lt;/code&gt; will automatically &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; until assertions you've chained all pass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fae74a428898d788151533a6268832cda703cb45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.window()&lt;/code&gt; yields the &lt;code&gt;window&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8e9ec5a7dcd30773c2ff12cbaeb09c58b2e82a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.wrap()&lt;/code&gt; can time out waiting for assertions you've added to pass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b7e123875c429439972dd86345ed5ceef2a73f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.wrap()&lt;/code&gt; command added</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0646df719664fbc0feaa6a501b4ddf64f1f90e32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.wrap()&lt;/code&gt; requires being chained off of &lt;code&gt;cy&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7576e26232f87026629580862d666594bc5a3f5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.wrap()&lt;/code&gt; will automatically &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; until assertions you've chained all pass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7725e6d51a11946571fee625450c0839989d656d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.wrap()&lt;/code&gt; yields the object it was called with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="809382d40849453792324ab11d85f2665a0f3e71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.writeFile()&lt;/code&gt; cannot be chained further.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="162a7704c4c581353265c5f8441380db4af4a775" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.writeFile()&lt;/code&gt; command added</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96615e3cc9921994b9325715f1cd5326d6632561" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.writeFile()&lt;/code&gt; requires being chained off of &lt;code&gt;cy&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceb233d16cf023abb6253c34a4e3d141dee42745" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.writeFile()&lt;/code&gt; requires the file be successfully written to disk. Anything preventing this such as OS permission issues will cause it to fail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="501651e0f1cbd19578243ba242b0b4edc3912e41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.writeFile()&lt;/code&gt; should never time out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4902d2184625ad2aaf392f383d1e5a8a21132b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.writeFile()&lt;/code&gt; will only run assertions you've chained once, and will not &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0f4f2cfb0f8e43192cae20a11dd04b3bbcc40f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy.writeFile()&lt;/code&gt; yields &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7a9d90eacd9a47b9076ce9a10e1fa0fc69c8744" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cy&lt;/code&gt; commands themselves are already promise like, and you can likely avoid the use of the separate Promise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="448a038bb1d0ab45b8fee6f21242beeed6f1c1f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cypress ci&lt;/code&gt; has been deprecated. You now use &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt;&lt;code&gt;cypress run &amp;ndash;record &amp;ndash;key &amp;lt;record_key&amp;gt;&lt;/code&gt;&lt;/a&gt;. The key you used to pass to &lt;code&gt;cypress ci&lt;/code&gt; is the same key. We&amp;rsquo;ve consolidated these commands into just &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt;&lt;code&gt;cypress run&lt;/code&gt;&lt;/a&gt; which makes it simpler and clearer. Their only difference is that passing &lt;code&gt;--record&lt;/code&gt; to &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt;&lt;code&gt;cypress run&lt;/code&gt;&lt;/a&gt; will &lt;strong&gt;record&lt;/strong&gt; the build to our Dashboard. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/417&quot;&gt;#417&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87359b04c020d925a480f9c5cf64468f6d696279" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cypress ci&lt;/code&gt; now uploads build assets to our servers after a test run completes. Additionally, it tracks the &lt;code&gt;config&lt;/code&gt; settings used during the build and tracks each individual test failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5772450e2b93d9cb46089aec0afe6748b82486a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cypress ci&lt;/code&gt; now works in OSX, and also works in Linux in Desktop flavors (like Ubuntu).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6a5760202e80d0c16381c97d9d36cf14699f790" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cypress open&lt;/code&gt; now accepts the &lt;code&gt;--project&lt;/code&gt; flag which enables you to use a root level Cypress installation and point to multiple sub projects. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/661&quot;&gt;#661&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83499d0cd5859002c35fe96d384fbc78ca3ffa83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cypress run&lt;/code&gt; accepts a new &lt;a href=&quot;../guides/command-line#cypress-run-ci-build-id-lt-id-gt&quot;&gt;&lt;code&gt;&amp;ndash;ci-build-id&lt;/code&gt;&lt;/a&gt; flag. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2153&quot;&gt;#2153&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b977aa16f4e3d7441f6cb420ec66ac722e47e57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cypress run&lt;/code&gt; accepts a new &lt;a href=&quot;../guides/command-line#cypress-run-group-lt-name-gt&quot;&gt;&lt;code&gt;&amp;ndash;group&lt;/code&gt;&lt;/a&gt; flag to group multiple spec files within a single run. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2169&quot;&gt;#2169&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f4ec2e3de0273ae8e0baf7c27c89704bddff8f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cypress run&lt;/code&gt; accepts a new &lt;a href=&quot;../guides/command-line#cypress-run-parallel&quot;&gt;&lt;code&gt;&amp;ndash;parallel&lt;/code&gt;&lt;/a&gt; flag to run specs in parallel. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1690&quot;&gt;#1690&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/64&quot;&gt;#64&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2297&quot;&gt;#2297&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3016c0b4843fb1ca17d15d0f7d4d65d8bdcbc9db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cypress run&lt;/code&gt; now supports a &lt;code&gt;--headed&lt;/code&gt; option so the Electron browser will display instead of running headlessly. This matches what you can already do in the GUI. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/657&quot;&gt;#657&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad194033f4c94aba0dadfe7d6f9cc27ae0bf7e1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cypress.env.json&lt;/code&gt; is now being watched for changes. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1464&quot;&gt;#1464&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07f19ce4f3b192dbf5ca1c5054f70e1ea69db2b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cypress.run()&lt;/code&gt; returns a &lt;code&gt;Promise&lt;/code&gt; that resolves with an object containing the tests results. A typical run could return something like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a42c49d6b5967615390ea08616fe8290a3d03e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;describe&lt;/code&gt; and &lt;code&gt;it&lt;/code&gt; come from &lt;a href=&quot;https://mochajs.org/&quot;&gt;Mocha&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c69dd6ccfec240bb00b3ac487ca4bdb1dd872181" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;devicePixelRatio&lt;/code&gt; is not simulated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9df82a55b60262560167554b99fe3f76220151f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;document&lt;/code&gt;: requires the previous subject be the document</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b58d4f1db6ceb92b5e11d78f53fb39cfaac49280" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;echo&lt;/code&gt; will print nothing after &lt;code&gt;unset&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="661ebe065ff464758a5af31c64243303003f7b9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;element&lt;/code&gt;: requires the previous subject be a DOM element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f62e64a34d279187b3ce25321042dee41d3b6ac1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;expect&lt;/code&gt; comes from &lt;a href=&quot;http://www.chaijs.com/&quot;&gt;Chai&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="092bdb726bbe8ac404d207d3f496fc5899dc1cb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt;: ignore any previous subjects: &lt;strong&gt;&lt;em&gt;(parent command)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85e783a96b3d9510ad3fd25c4aa0d2eb637a778c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt; configuration options &lt;em&gt;in your tests&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c672d372c6606a9161ba24f13c2015f92e038383" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt; environment variables &lt;em&gt;in your tests&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f291396c4c30459e5f54f0119f8ba6d9b8e7b36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;google-chrome&lt;/code&gt;, &lt;code&gt;chrome&lt;/code&gt;, or &lt;code&gt;google-chrome-stable&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="150e15d827d67b3ce0542854c57fec1d630df767" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gzip&lt;/code&gt; compression now handled and proxied correctly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db8396c1838e5a35c3d8fda843e0f7ce5cd3388e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;href&lt;/code&gt; and &lt;code&gt;toString&lt;/code&gt; come from the &lt;code&gt;window.location&lt;/code&gt; spec.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d496f8462e81a2de33dd2db57025e4961157799f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;input&lt;/code&gt; events are now correctly fired when &lt;a href=&quot;../../api/commands/select&quot;&gt;&lt;code&gt;.select()&lt;/code&gt;&lt;/a&gt; chooses an &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4210cf738647c47be2c9b598be60129c433f4d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;javascripts&lt;/code&gt; files can now utilize &lt;code&gt;snockets&lt;/code&gt;, &lt;code&gt;browserify&lt;/code&gt;, or &lt;code&gt;requirejs&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fabbafd6f202c1db1328d493fad01c9b63fc31c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;npm install cypress&lt;/code&gt; may fail while downloading the Cypress binary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b48cf4aee172429979379f1a51f3eceaccc06b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;null&lt;/code&gt;, meaning no command can be chained after the command: &lt;a href=&quot;../../api/commands/clearcookie&quot;&gt;&lt;code&gt;cy.clearCookie()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2693b583eecbd2fc074b20a0390260a77ec87fdc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;numRetries&lt;/code&gt; is no longer shown in commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f268b001e0bd0cd5a00a5d87bc42d183a7daba48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;on&lt;/code&gt; is a function that you will use to register listeners on various &lt;strong&gt;events&lt;/strong&gt; that Cypress exposes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99bb11295ef041d8b62d91fb7a0b914dbf65ac03" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;onBeforeLoad&lt;/code&gt; and &lt;code&gt;onLoad&lt;/code&gt; callbacks to &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; are now invoked with &lt;code&gt;cy&lt;/code&gt; as the context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1f1365efa151f688929f89f4afb4e7b9c6e369f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;onBeforeLoad&lt;/code&gt; is called as soon as possible, before your page has loaded all of its resources. Your scripts will not be ready at this point, but it&amp;rsquo;s a great hook to potentially manipulate the page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b11a03745a2b50668e4b1a8f4c29ddfcb17b1c66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;onBeforeLoad&lt;/code&gt; now gets invoked when overriding &lt;code&gt;cy.visit&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/656&quot;&gt;#656&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/640&quot;&gt;#640&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b60945d773a6ddc2f739cb79be400d4c89d5daec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;onLoad&lt;/code&gt; is called once your page has fired its &lt;code&gt;load&lt;/code&gt; event. All of the scripts, stylesheets, html and other resources are guaranteed to be available at this point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bd092bb8a26283b1ce8f245342e79323374eee4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;onRequest&lt;/code&gt; and &lt;code&gt;onResponse&lt;/code&gt; can now be correctly set as permanent server defaults.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88953a5d525f8ea5065e9cabbf0f2764414e923b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;optional&lt;/code&gt;: may start a chain, or use an existing chain: &lt;strong&gt;&lt;em&gt;(dual command)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ded79fe9b40af59205d478b86f6b2dee3effce9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;port&lt;/code&gt; can now be specified as a CLI argument and will override any values stored in &lt;code&gt;cypress.json&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53ae203f97c4788ecafcfc8083d158664296ecf0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;requestTimeout&lt;/code&gt; and &lt;code&gt;responseTimeout&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95b415a9b3f9494a6dd253f97f70f4378c662db6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;screenshotOnHeadlessFailure&lt;/code&gt; has been removed as an option in &lt;code&gt;cypress.json&lt;/code&gt;. Instead you can now control this behavior directly with code by setting &lt;code&gt;screenshotOnRunFailure&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; within the new &lt;a href=&quot;../../api/cypress-api/screenshot-api&quot;&gt;Screenshot API&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1140&quot;&gt;#1140&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1754&quot;&gt;#1754&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25a4140f0b3669424ca78e17364b3496217a8bf2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sinon-as-promised&lt;/code&gt; is automatically applied under the hood which extends Sinon and provides the &lt;code&gt;.resolves(...)&lt;/code&gt; and &lt;code&gt;.rejects(...)&lt;/code&gt; APIs which makes it easy to stub promise returning functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8800cb5b8652c9c05e7adb0ae28a5ee242469e70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sinon-as-promised&lt;/code&gt; is now a bundled extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ddc4782d4d2354f799b323e805e47f44c2c0976" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;stdout&lt;/code&gt; is now captured correctly in Windows when recording to the Dashboard. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/977&quot;&gt;#977&lt;/a&gt; and issue &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/711&quot;&gt;#711&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65227e10f0f602219dc3ebdc0624d02e4bce3c5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;this&lt;/code&gt; context</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a03ff373727ab1374b4e92f475df00e79de34ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to&lt;/code&gt;, &lt;code&gt;be&lt;/code&gt;, &lt;code&gt;been&lt;/code&gt;, &lt;code&gt;is&lt;/code&gt;, &lt;code&gt;that&lt;/code&gt;, &lt;code&gt;which&lt;/code&gt;, &lt;code&gt;and&lt;/code&gt;, &lt;code&gt;has&lt;/code&gt;, &lt;code&gt;have&lt;/code&gt;, &lt;code&gt;with&lt;/code&gt;, &lt;code&gt;at&lt;/code&gt;, &lt;code&gt;of&lt;/code&gt;, &lt;code&gt;same&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d19adc260bb740cea7925162fc0152ee9b0efb6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;trashAssetsBeforeHeadlessRuns&lt;/code&gt; has been renamed to &lt;code&gt;trashAssetsBeforeRuns&lt;/code&gt; in our configuration. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1754&quot;&gt;#1754&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d15be7f2441ba4112b9bab0f739eaaacca70162" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt;: receives the previous subject: &lt;strong&gt;&lt;em&gt;(child command)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="969707cedda7f28671de1c99a77cae6b9724dbfa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;url&lt;/code&gt; as a RegExp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99e82107bc73ad7082a03e9e3551e5ef20529b0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;url&lt;/code&gt; as a string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="459a9d55b0f054dcbe80d0dc3ba8e81fabd4e760" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;user-agent&lt;/code&gt; headers sent as arguments to &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; are now properly sent. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3873&quot;&gt;#3873&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3719&quot;&gt;#3719&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc10ea28a9c1e85a0737887fb498736b6759c963" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;videoRecording&lt;/code&gt; has been renamed to &lt;code&gt;video&lt;/code&gt; in our configuration to be clearer and prevent confusion about recording to our Dashboard. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/562&quot;&gt;#562&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06ea3f51d673215d4bec0c5af53f040e2e4b8413" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;watchForFileChanges&lt;/code&gt; is now correctly respected in regards to watching all files, including the &lt;code&gt;supportFile&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/336&quot;&gt;#336&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73beacc308677da57e2ab49e45a19a5741fe9d53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;window.alert()&lt;/code&gt; and &lt;code&gt;window.confirm()&lt;/code&gt; now generate a page event in the Command Log (including the message).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab8d12704097b758fe8fc2e0a715e17a49134d00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;window.fetch&lt;/code&gt; now works correctly. Stubbing these does not yet work but it is now possible for us to implement stubbing in a future version. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/95&quot;&gt;#95&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="469361d3d626ed8b43aa00ea1c15d17fed2b7511" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;window&lt;/code&gt;: requires the previous subject be the window</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16fa72666e36ad44c705a2b9d2d0abfa7fa33b62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yyyy-MM-dd&lt;/code&gt; (e.g. &lt;code&gt;1999-12-31&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ea3daa82b57f31f9b1dbc382f1e1891eef08703" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yyyy-MM&lt;/code&gt; (e.g. &lt;code&gt;1999-12&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fed08188cf010d1ea6f7494162c85304d9ae5102" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yyyy-Www&lt;/code&gt; (e.g. &lt;code&gt;1999-W23&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="985d91f54e89f7edac953675fe0ec37b608ce109" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{projectRoot}/path/to/data.json&lt;/code&gt; will be created with the following contents:</source>
          <target state="translated">&lt;code&gt;{projectRoot}/path/to/data.json&lt;/code&gt; will be created with the following contents:</target>
        </trans-unit>
        <trans-unit id="316551242657173701a8cceae42bb45b24e40e09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{projectRoot}/path/to/message.txt&lt;/code&gt; will be created with the following contents:</source>
          <target state="translated">&lt;code&gt;{projectRoot}/path/to/message.txt&lt;/code&gt; will be created with the following contents:</target>
        </trans-unit>
        <trans-unit id="0e6f518e17cff2d0d20b50d84142e420797ca1c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{verbose: false}&lt;/code&gt; option added</source>
          <target state="translated">&lt;code&gt;{verbose: false}&lt;/code&gt; option added</target>
        </trans-unit>
        <trans-unit id="cdd6db1824ca4e8df19dcead2ea7afbaf7c8cdce" translate="yes" xml:space="preserve">
          <source>&lt;del&gt;Accessing &lt;code&gt;window.history.go()&lt;/code&gt;, &lt;code&gt;window.history.back()&lt;/code&gt;, &lt;code&gt;window.history.forward()&lt;/code&gt; will throw an error during &lt;code&gt;cypress run&lt;/code&gt; / CI. This is a regression that will be fixed - hopefully very soon.&lt;/del&gt; This is fixed in &lt;a href=&quot;#0-13-3&quot;&gt;&lt;code&gt;0.13.3&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84cecbc01a65f10909eabdf1bcda4b0a597025c6" translate="yes" xml:space="preserve">
          <source>&lt;del&gt;CYPRESS_BINARY_VERSION&lt;/del&gt;</source>
          <target state="translated">&lt;del&gt;CYPRESS_BINARY_VERSION&lt;/del&gt;</target>
        </trans-unit>
        <trans-unit id="9a0d03dfe4e2c6c9f10d6a887de151efce9608aa" translate="yes" xml:space="preserve">
          <source>&lt;del&gt;CYPRESS_SKIP_BINARY_INSTALL&lt;/del&gt;</source>
          <target state="translated">&lt;del&gt;CYPRESS_SKIP_BINARY_INSTALL&lt;/del&gt;</target>
        </trans-unit>
        <trans-unit id="8da9a32504153355627ef4ebe05bb037ddd645f2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;All CORS related issues should finally be fixed now.&lt;/em&gt; Cypress now internally switches to the domain that you used in your &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt;. This means that the correct domain will display in the URL based on the application currently under test. Your application&amp;rsquo;s code will run under the current domain at all times. Previously we implemented an endless amount of hacks and internal translations to figure out the domain you were &lt;em&gt;supposed&lt;/em&gt; to be on without actually being on the domain. This caused code to behave different and caused subtle issues. Those issues should now be resolved. The entire proxy layer has been rewritten to handle all HTTPS certificates flawlessly, continue to inject (even on HTTPS pages), and still know when to automatically bypass injection so you can open other tabs while testing in Cypress. These new proxy changes also unlock the ability to do things like whitelisting or blacklisting specific 3rd party domains, or even be able to stub not just XHR&amp;rsquo;s but any kind of HTTP request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0bb9cfefa974ffa7d61f8bd6cdf3a6146961a0c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Be careful with this option. It&amp;rsquo;s possible to force your tests to pass when the element is actually not interactable in your application.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f87a26102b12dfc6255c06d95b0c64bdffc36c1e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Boolean&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Boolean&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2c71c17c3df7a6b6720e32d190f0b4fcec1e35b0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Command prompt:&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45588d21a89e6e768b28765bf50ceef1f99abb3c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Creating a Flawless User Experience, End-to-End, Functional to Visual &amp;ndash; Practical Hands-on Session&lt;/em&gt;, a webinar recorded together with Cypress and Applitools</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6eb183de1cc4986fd140131c27aaaebcd8c62dc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Cypress + Percy = End-to-end functional and visual testing for the web&lt;/em&gt;, a webinar recorded together with Cypress and Percy.io</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4682f21f72b61cc1f7fd42164bf9966a17359df5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Cypress does not reflect the accurate scroll positions of any elements within snapshots.&lt;/em&gt; If you want to see the actual scrolling behavior in action, we recommend using &lt;a href=&quot;pause&quot;&gt;&lt;code&gt;.pause()&lt;/code&gt;&lt;/a&gt; to walk through each command or &lt;a href=&quot;../../guides/guides/screenshots-and-videos#Videos&quot;&gt;watching the video of the test run&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ebd068a6dc5f1851a201d77a704200aae7862db" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Gotchas&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Gotchas&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fbbc4f77fed6983606634cd173241a59497b3640" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Guard&lt;/em&gt; Cypress from running commands until a specific condition is met</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5937dc7bdc70aa908cebe1955de5ee3fed3c0b91" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;In beta&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13b8f4f59cfe06358395f8d74567b09eafdf88f3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;In progress&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0a6d9f44e1a8c6529628b83fd415654867aaf87" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Needs review&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10bb196cd075638fd411d2575c87dc81afab6041" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note: The righthand side may also be used to display syntax errors in your test file that prevent the tests from running.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88c6c240cb20333d76dad274e6203d37f187d2e7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Number&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Number&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b59de060719e5aa4eb7958ac45a0268ccbd7d3d8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Object&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Object&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f84ef45f783b4cb604d54da1bdb82d51a45fed81" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Options&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="39f70348257262f89e1dc9efe9e0bb908d9d26e9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Powershell:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Powershell:&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e91db5c4f8868eae556f115aa6f35832870dab4f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Proposal complete&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd8ed32566dd46cc7105073a8e70882481da9c95" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 01/03/2016&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d18117f900fee7524748a8193810f144e146420" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 01/08/2017&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d02353ddd952245ed9b6f2d8599db9a9ebbfde1b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 01/09/2016&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48169300e46e88a36f185ea409feeae3713e2cb4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 01/17/2016&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a336410b31dac0042862b22b9ec81cb3ce00ac37" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 01/24/2016&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd2dadacc0055e841aeba4e4f7db2392b4fccfd3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 01/28/2016&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6afd61d06a621f1c91b7fbdbf6dc47ded1f92f8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 01/29/2017&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="217eeb43da9685ea92c4dae513347b1ea0466ecb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 01/30/2017&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8b8f804671d4ee972b30e371e71423a5cf38f27" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 02/05/2017&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11e9023fad11f3430ef8e233598169f96060876d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 02/11/2017&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b07f0965965b0b7616ea0e263c2ad282f8c800da" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 03/08/2016&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79eb2d4b5963c3025f1b6fe62eb377296443419a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 03/09/2017&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a498e2f1e42466044130855efe739b23e2b346da" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 03/13/2016&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37057a918a4548cbd337e0264fded6e0024a7ad7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 03/14/2016&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40aa3df90759d49585aae168821bcecd72a6df62" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 03/18/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ac224e6826ad7968749a44df742c265206dbc7b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 03/19/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4c01e27d0e132432c296f74b139c9936aeafb42" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 03/20/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30b850e53090bcd4ce147a476b33fcec040bee2d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 03/20/2016&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e3b6d307b41a5357bd2b6e0356ec9202e0e54c5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 03/21/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b10d85136ab6ed3de74775fa2dcecbe8f7c003fb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 03/22/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25709f5ffc35954d9bd4b7f240266eee01eda183" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 03/24/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0717bb867258067e0579576980c5ccc33241540" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 03/25/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a19c54a323bb0d7743e1d9ad5a0e94aa655559e4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 03/26/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b1d430dc8b975c54c0e9cc3a922046059ff2606" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 03/27/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94f4a6a994405e1a71e4de898f3d4e4281c24850" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 03/28/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="532b34223e8b59814cc0f06287b8f9644b01a54c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 03/28/2016&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f79c8f1f691d9fdcda19c6cad55b3ca143a61d6d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 04/01/2016&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4e94bf8d89062d09e6addf4cd2af721c6ee4b74" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 04/02/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="223d5b556e28a85f0c07bb6e99fbf4a2be796cca" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 04/03/2016&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79625b306a2e95ea25cf517cf62278dc987f2205" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 04/08/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bed62aa49af2b651b1672cfbef4a2c359b02006c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 04/09/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0282e1abd0c47ff8a5f089ca7df593f5bb640177" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 04/10/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cd57957e95ac9be867cd0a2c33aa2ab621d30fd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 04/10/2016&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93af91af0758739a2616169fa6a099472d3cf834" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 04/11/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9919dc11a1e0f0e77174cee806c18b92a48c2691" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 04/15/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23a93eb09f08e1f4e586bbf2bfd8f03fdb91a676" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 04/16/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dff7d5b9a5f9a35b86b87b105595378073b82fb2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 04/16/2017&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94cf76722e7c01303905130e39f6d32473a9007d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 04/17/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="623ccc56563e50b559d9eb87d9056f27ad5e801f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 04/19/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97c3a2c508904858c60a0be4c9d71d5e104eb61e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 04/20/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25db12c47366b578d99fd0a2b035c5f1230043eb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 04/22/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3379390822c93ac2b72a870d32b4fa9e90f92b1e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 04/22/2016&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4c74ecdeb3b884353fb92915b933ebcf5611a29" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 04/23/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23791f6ea54d7cece8cd889fed4d466f4def2133" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 04/24/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c69cc89b4da6caf4119be7bdb1e68288177b5d68" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 04/26/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f223050ff273b54d4f6daba2159fa4142fb6725" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 04/28/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c27cc738c34653c38b8c41c4cf1401d54719a66a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 04/29/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6f1abf9622ef78039e5ea3a1d12e093cf869d36" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 04/30/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19d9be228537015e795a14a1a538f62928cb593a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 05/04/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93178cd8b1ca4807191da6c11d8043487eccc0c9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 05/06/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fa19053d6d8b890f9cc0b53c5aa0b9912313f87" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 05/07/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a259fd646c8b9ffa0ac4d5980a4f3b770bb21720" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 05/14/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64511ed4620cc3a7baf9a616313ee10dc82cfba5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 05/15/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b72083a048f735c2ebbe96b1204ddd4e9257fa7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 05/17/2016&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f57fe9f89211f761fbda797ae0b0d74de3f44adf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 05/20/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ae5a7c2015c221cb785348ed7299a81fc97ecb5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 05/21/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ae4bc59031b09a058bddf2b1630454ee305a441" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 05/22/2016&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be1b7336c7aa22f6f876e701a22588d00e5d922a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 05/23/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2054cc27b4f5033c92564606661014384ca8261" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 05/31/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aec28018adf4b6d55258645e2e4018a64b896c66" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 06/04/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97abf25bca964e60365c00bcba50b75574d04ac7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 06/05/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dff1ad8be3fc2629bbbb0ed6bd18149a46da273" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 06/06/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aaee86d44462afd6cd312edf7c718774b46d48b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 06/08/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23700229d534e6a84a494b9f41d61ebcb5352a88" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 06/09/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f98f5e6cdf2d99c54dd3695e0629a20a0b5bc50d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 06/11/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6099fe9f60e41abdf744f56b64ce689ca94c489" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 06/11/2016&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1030f71d6c976fab2df1f8ba09a616807b415f33" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 06/14/2017&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="425370438c6f27a5f18ec3ef9cd7bb5dabbcf620" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 06/15/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf12a361008b1125c1b45ca98ae52ac4290b7049" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 06/16/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6251c77bf6feee142c12345326bf5f6b8594d642" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 06/17/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c04c9a93a4cddba49bfe4cb8470ffe9f0a84debb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 06/17/2016&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cec96ec3375938251cadd6a4faefdb34f69df0e5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 06/18/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2abc514c0a57f72668e37067f8dd6795719bc4db" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 06/18/2017&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eb2336fe7c19a63a02cb96122b3978723958523" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 06/19/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca797fa3670e7e2793112bf8db111347f53585c7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 06/23/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff702564d94e401c3976dbcd1dbc632dd041fd31" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 06/26/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e51b29d4954df97b81c872b81875d5e25a53456d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 06/30/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34bfc598c1b0d3fa0f102207cf23345660c0ec36" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 07/02/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0e5c7578291eb084305ae1af5d5d8d0d63e5132" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 07/03/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05683e434d0a987d4f993aee8d92a4781e83c998" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 07/04/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85001de4a82b6c8b84056cfe63a22d5196db6335" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 07/06/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c7fe5e342f5f686d5ad9fed7ca6ad0d1dc6b9d6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 07/14/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e037c73205f1733467ffbf0cb1998aefa2e12bc7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 07/27/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afcf2bd2d2ed3866a5f617eec883bbd4a5eedac4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 07/31/2016&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6da9b08f2da7fcc6f6ad075347b8d7e2462e3a16" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 08/06/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4abea2f1c9a02e53a052242fa96cc60310593844" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 08/07/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9523730ce3ff825facb474506867690b052ee97a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 08/10/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e44bf420c4aee124badae1b55b61d60937effb71" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 08/11/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94809ad604f38847e9441667ac0cb246a0784cec" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 08/13/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07cfcd8040c72bbbb2f9938641adabcf087a7f2e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 08/15/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1c5c87c72b757abdcac9ee15ad024fba3ad6e37" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 08/16/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7810ba09804d75c63bbeccbbbb3603f5e567fb59" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 08/21/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8988a8b59bff821690cf082dd0e7e9ab08cbb90" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 08/30/2016&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8310e3c6bc39d94c8b03e7db3e17aabe4518068e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 08/31/2016&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8ec754dc095a01a2a174671896d1218e1377051" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 09/06/2016&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e66256d99bcbea3024a91c81022862ef246e2c03" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 09/10/2017&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="016a65c96bdf7bef05da97ce77fd9098ddaee995" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 09/11/2016&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aec0767b9ffb45fde24247f17aa4c99d1523b2bf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 09/12/2016&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="649826b2ecbd9b122da2da0247319a89d31c5245" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 09/13/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15e118d0e4a719abd9c6d1f306bdf92bacc9a806" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 09/14/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07972a93338ec28456dcf573291e39bfc209c705" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 09/16/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="644e611a6302edcd569b8a013a9de01a51b5ea67" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 09/17/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c2a52e8abeb168950932b1ae8f693353280d0d7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 09/17/2017&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d08da3c50b301ffed656914df335639e336a486" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 09/20/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="315a3f63cef4d56dfd783a7d969120630aac6ab0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 09/25/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3da0af6e1c373466838be40c228a29a154fe903b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 1/30/2019&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4542a9003873d9df5367e1b5e9ee3003186985a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 10/02/2016&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dd98bc8276b217a5a93f7b6dcf4fdc9b3d11f28" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 10/03/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a156b34804fa22c081312cf0e4a821a5acc19ca1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 10/04/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d007ec3fce69cfc648c9c56d678d9da47c42d8f4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 10/04/2016&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbdc6ff9c5f4fa0003fd362d57326e07b6482f70" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 10/06/2017&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5d70ff0f31dd6e4439b12614c40986e0a993c9a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 10/07/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="542ea563b3c0e9c4096e36a60eebabe5b82e6429" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 10/08/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25f3c6f81598b4909399987566c6048bfbd295c3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 10/09/2017&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec1c5b034d7bb322ac56806720c7f2c153718a31" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 10/10/2017&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec30684e321b97edeb8ee2e12a64913a0ed101d3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 10/12/2016&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c74f9d24334614c8f7bed8a8534bf50c07ff5aa3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 10/13/2016&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="230a6a04113fb04bdd99498c7c1c82be1d39c992" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 10/13/2017&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2493bd894cc1e7bfb143ccda5fcc3b896df86dee" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 10/22/2016&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ad332d849e611bdb32af2066808dd333f247030" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 10/23/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b230f5a5c57322acd406320f07e59d2ed2e115c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 10/28/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84ac52443daefdab80554380697afed36abc1a21" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 10/29/2017&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66c9f14ccfc7aa2a86e0bf81d0c26fdfa85f7e9c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 11/01/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54bf9e5abadfd36be84eb6b9ec4cad0c107953cb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 11/04/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="519c10bf1efa070aa67662ae3491baba79f16495" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 11/07/2016&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="838e01215d5476048aed5c411b769abe1b3abf90" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 11/16/2016&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="669f80643d23f1e4ddb771a2c11ff34c06174a11" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 11/18/2018&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb0c6fe875028a3471f47bed3ecfbf4af28add3d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 11/19/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83f0b8361694ddfa67510da3da312e79b93e6303" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 11/19/2017&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88f67a97eaf59e5e95af690bf9cce5854cd962e9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 11/2/2018&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ced8ed21ee109d9daf65df348b52d1dc51af3c5d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 11/20/2017&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77d7fc6b1f75372847f468dacdb8afca0dfaa3af" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 11/21/2016&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b703994c699b8b78bf93fbefbb548b68dbe2484e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 11/22/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe191dfa5361b55be015df643af5984a8a07cba8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 11/26/2017&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="030866f53b5246fbcdb968ee2c7cebc89ea8e44a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 11/27/2016&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d6f533fff2f599eb7af12a97cedb76f41494a63" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 11/29/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fc4247145944ff43121c82d817b97fe69fb4d27" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 11/30/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe10ac16cc1a3fc160306fcd0def7469eeb34888" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 12/03/2018&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3853a7e97263b40e6bda2bc066e52d90573dfbfd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 12/11/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57e9ba76237d45a5b06b02bd2b03b22e6a0e01ea" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 12/11/2016&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c997dc984540f18cd7948478f77e655bb2a31276" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 12/14/2017&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35dd6eda8ee24f3ae54f6138c9822aa6b7ae1084" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 12/15/2016&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01f22bb079a99c118ed61496062ea0313e75cd2c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 12/17/2017&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80248a6561576b84a90976c4ab70e0f6895849ad" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 12/18/2016&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d63bfa4382016d9b7764df9fd27c2d135ad96c6f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 12/19/2017&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e39c6f1ad809e7794834c68e99dd3cc0c65db539" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 12/2/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5f888747717ad583b31f4d8db7d6b0a13d38e0b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 12/20/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dd48c817fe9872f898e71d436a30bd8684d46d6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 12/25/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d09e4d0ccdfdf497bbec15f8c27ae0a705ae7509" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 12/25/2018&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8d5435b715166619b9820fdd0cb6f73ec5fc94f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 12/26/2017&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb689a292a124f5bb1988abaaaf52b9dd291cc61" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 12/28/2016&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23d8f98c66f451c278d34bbbc6d43f811965f77e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 12/3/2017&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e18e202a7d4492fce5b8d5d41c232f1e21a3550" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 12/31/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3954be543fb0c7883abfbe84af644c5b62f45d5d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 12/6/2017&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07f0744e9f75ab409f0be03013e35e401e7a3341" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 12/9/2015&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aa45a296bc81430ca26c749add5c6c4b934dcbc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 2/15/2018&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13135fb7b26b2843100053383d00e9ad419daece" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 2/16/2018&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5afbe79d0e0e77c80e502f203ff9a9fb90774217" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 2/17/2018&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efd1e1fd69dcfdc58db2827f002dee5887484540" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 2/21/2018&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="419e6cf451127b784a1064c57387ad7051ce64d6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 2/25/2018&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1427159c9d648cc46d75b25e3e4800d38fe21901" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 2/4/2018&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4855067731bc8024e3912f340860871523cb8908" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 3/1/2018&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11476c5e88ae8c354eb816a2584873cad5f16c97" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 3/15/2019&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f3aa5e496c92489a85b862b45fcdaa9eb3eaa8d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 5/17/2019&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2136c7e50632ee993789ab638040e466a27cdb2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 5/23/2019&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b45c0651a69df0c080f3ae476b78fec73f93e40" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 5/29/2018&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdd19e6c7792b9ef91132f2f92ef40eddb79dc0d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 5/30/2018&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afe2ddfbd4cc0fe59dd285a0d6a285466c8b6868" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 6/27/2019&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08c891323f0e9d8cd1c76be0912747bec0960d5f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 6/28/2018&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d087c8218fc5c4de837cf6ade7923b9562f84483" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 7/29/2019&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e09418fade688ad081c235b2da82566f0d5c8ec" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 7/30/2018&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e47df1610303c5767f00d600b81e584f9bcdd49" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 7/9/2019&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aaba18a83119de1d094067d8c07c54318414e33" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Released 8/13/2018&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f6cec2cdab10bb148fa815ce71eb32d429e65bb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Research &amp;amp; design&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67b9a47970f079958986832467a6e9f8a5b261ea" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;String&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;String&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9c7b710748a1985c2a4f4cb9bf3be8a6c5ac9ffd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Usually&lt;/em&gt;, replaying previous commands will return what you expect, but not always. It is recommended that you &lt;strong&gt;alias elements as soon as possible&lt;/strong&gt; instead of further down a chain of commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83e110f1701fb1161109fc3815abffbe09207c6a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Work in progress&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09bb1d99106aeaf62eeefa66d146f990d63931bd" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;&lt;strong&gt;Aliases: &lt;/strong&gt;Arguments&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14434e4815cec6149cd865ed440fd06c7bc32a49" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;&lt;strong&gt;Aliases: &lt;/strong&gt;an&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92ecfc544a3beae6064a6c8e6dfd4944203d8f1e" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;&lt;strong&gt;Aliases: &lt;/strong&gt;approximately&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b381434858978bbfd3c88f7807d8b3a0046c7a3a" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;&lt;strong&gt;Aliases: &lt;/strong&gt;changes&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5307f4aa71b53452cf6f6cb2c545723af8b6c3f1" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;&lt;strong&gt;Aliases: &lt;/strong&gt;contain, includes, contains&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="537a1c355725d1e3c42d09e8d27fe8face9ada8a" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;&lt;strong&gt;Aliases: &lt;/strong&gt;decreases&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ace606513aa9a8af11f47094fbb48e293d597f8c" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;&lt;strong&gt;Aliases: &lt;/strong&gt;eqls&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ece6db223ed48bb7ff209f04d23dacf51fb4377f" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;&lt;strong&gt;Aliases: &lt;/strong&gt;equals, eq&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13b0b2bc0dcd59893b9a7134f324dc00e1371be2" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;&lt;strong&gt;Aliases: &lt;/strong&gt;gt, above&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07aeb1099deacb02ebab297d382f479378eeba68" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;&lt;strong&gt;Aliases: &lt;/strong&gt;gte&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daa71d8690150f100a5e7edd5f573b5a2efbe74c" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;&lt;strong&gt;Aliases: &lt;/strong&gt;haveOwnProperty, own.property&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d99c6becf4d8071de2e7e19097c61b1cb1595347" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;&lt;strong&gt;Aliases: &lt;/strong&gt;haveOwnPropertyDescriptor&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="328b85a19824c81f1aadab4283c26ecb5602d3fe" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;&lt;strong&gt;Aliases: &lt;/strong&gt;increases&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04dcfddbcf1e805c612a237c3f08cf944b2e807c" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;&lt;strong&gt;Aliases: &lt;/strong&gt;instanceof&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55209024bb94adc1fcd703ec45cd39faa7f07b1b" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;&lt;strong&gt;Aliases: &lt;/strong&gt;keys&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d078c9b430298bc7d8a872c0a9fb506b105b2497" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;&lt;strong&gt;Aliases: &lt;/strong&gt;lt, below&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b181feb6fdc5b9d24e66290531a8dd75c84cd3d" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;&lt;strong&gt;Aliases: &lt;/strong&gt;lte&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4828fac988f16ee70b64f6b22ed89a4bc9547a21" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;&lt;strong&gt;Aliases: &lt;/strong&gt;matches&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11a995da6021ef9ba271c8b5e48f3322e8b366a4" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;&lt;strong&gt;Aliases: &lt;/strong&gt;respondsTo&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d105661f81a2ee5350494d908c384d84fcae79d" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;&lt;strong&gt;Aliases: &lt;/strong&gt;satisfies&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e534e6c4c443a7ac632d7c1100c9ae05c8f96c62" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;&lt;strong&gt;Aliases: &lt;/strong&gt;throws, Throw&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c02c8df7a80a9747516c7e80e81dcafbfef12b60" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  Anti-Pattern &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;  Anti-Pattern &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d8818510eb1dd83a2962aa44230f89fc42579233" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  Arrow Functions &lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6a0112e01f38b8a4bd18e4604db7462293dad4c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  Authentication Recipes &lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8f927a03e275e4c2ed9ea808b544570df00e8a0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  Benefits &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;  Benefits &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1db96c3394497e533fb3c05a1c87b7dd7707efe1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  Best Practice &lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e998b6a11ec4f9bbf6d77ba7fb49d3402fa243d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  Best Practices &lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e798708c3705446483f04674f41a298114daec94" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  Command Log &lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1223080d44dd6bf35ff5f4387efbffd13690f27a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  Complex Assertions &lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6a5ebe367868c71a67f0b63b217dae157cb4e11" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  Configuration Options &lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7173d7107deffa6f456c94de957358675155552" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  Core Concept &lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf5ff3fa5555336e2c66e26dcf9aa4ab58b7768d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  Did you know you can write Unit Tests in Cypress? &lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="688fa0178f0812bc04268f594025dfa9716d23eb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  Did you know? &lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46c3bcee77873c036507aafdd34a1dbeab6c0b0c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  Do not do this &lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7a802dd6101aa7fbb489c5cde65dace45014c0b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  Do not worry! &lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b35c28f328c20622ad1c55a36ad82964072ec88" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  Downsides &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;  Downsides &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="27015eb490def36455b982e8e3081e7196aa8118" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  Duplicate task keys &lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d40dad70b69171e456d03d6964378df4e07d4b60" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  Error Messages &lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b62298a5db72ac61b09dce924f75a3b1f047a92" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  Example Recipe &lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1377e1fd778f55cb7158f04e58f065d4d3512192" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  Example test! &lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70b98cc0d44d2130c7e7c3dcf088b85284c52473" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  Flaky tests below! &lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75580054cc52d20f529befd4650af1e3e8dbf89b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  Guide: Network Requests &lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32bf0e49c42365f18412d79ecae272b49bf17af2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  Have a question you don&amp;rsquo;t see answered here? &lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3da5eae91d1f00674e8bcf602ae4fb1f2dfeac0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  How is HTTPS supported? &lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eda488339fe5975a4733588b40496b037ff73e4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  Important! &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;  Important! &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e9013ee0d483245e3bbc9dc3df5daf123246febf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  Internationalization &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;  Internationalization &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c661624640d6e8de0b77e1fcbc7c12761cbe8458" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  Introducing Aliases &lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2866c025bd07fa8a74227b5d7844a108050521d5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  Looking for the API docs? &lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3699734241805c9f50327e6f4931339c5c741d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  Make sure &lt;code&gt;.should()&lt;/code&gt; is safe &lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51355053673bb37f80f5128f1fff97cecda35787" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  More Coming Soon &lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cd5435f97de12393678b529072ac79db80afd5f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  Negative DOM assertions &lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15892657f9b90481d30438497e4c9f3179d60bbf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  New to Cypress? &lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3cc6f8eef28c7d6dc35430eef0b06120224457c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  No! Please don&amp;rsquo;t. &lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e89524a9d1afcec99a57de4d4ac1f1dac55ba6d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  Node version &lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="105396f7c196b34b74dfd16f43eda672d13436b0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  Note &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;  Note &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8356adf6e77b8eaa5db56ad244235b40bef26522" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  Only Test Apps You Control &lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b93c06287273540c8339d3de9d7390300cfdadac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  Page Transitions &lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c26bcb35e1cf03e03ff88941bcb8fd588539f65" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  Recipes &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;  Recipes &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b824d1240aee0745e6088242bcff572c3e18afba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  Return Values &lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="732dfe65674814229d26319c7ceaa8844667c838" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  Scope &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;  Scope &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f622435d53465cd6173149932fa64d7f789d4a01" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  Subdomains &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;  Subdomains &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e450d85f9309fcc6b56709ef0c6de548d510fed8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  Suggested Use &lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15e0bb63d2fc0e440a1cc40941bfefbb0acf8c00" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  This is a brief overview &lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2595e836a366468b28b4f0e07b884bd82aaf6c80" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  This is configurable &lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94403ca7434235f737e95a624924777a8a598884" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  Timeouts and Performance &lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7d888995697af5db85ceb4d80f768c5e76b0e1a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  Using &amp;lsquo;baseUrl&amp;rsquo; &lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a978f5e3152169c3cdd37b9d66dd2ad552ba8763" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  Using ESlint? &lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="684138f0311325ac17317fa082b31bc507ccb330" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  Using the &lt;code&gt;--browser&lt;/code&gt; command line argument &lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1628b0c254d1b2dbc4a588d2d26e65cb638e1e7e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  WIP &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;  WIP &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b4cfd4fea986270767802a18d11eac346c3c1a5e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  Wait, I need my developer extensions! &lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="466746bd172f38e32f275020fcc1e9a27a1fbe90" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  Watch out for async commands &lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31f3e181076a0293496b9084ce04f3ecec5c223e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  What are describe, it, and expect? &lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c6476145ee6ece9114a05dc30341587b023358d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  What files should I add to my &amp;lsquo;.gitignore file&amp;rsquo; ? &lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bdbb8073928008e44f0e3020aff694eb00289a8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  What&amp;rsquo;s the difference? &lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c8216de2c4412a1a339187ac994cb2b236df3e2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  When Can The Test Start? &lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95c6b16fa1d1a50aee206666378c2fe882bf8090" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  Why can&amp;rsquo;t I use async / await? &lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="606ecb354527d68ee9242014e56f87373fb53be5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  Why start a local development server? &lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8338e18c7089606927241378d18bcea568b0046" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  cy.spy() &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;  cy.spy() &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ab3681d578f7b6cd59f1ecda40f69e5fa1c1659c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;  cy.stub() &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;  cy.stub() &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="933a0b0466e9319b401d8dba7affa045df70c2d0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; $el&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(Object)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; $el&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(Object)&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2df5e5d26e81d6a265291a4f4547d3e5e0c74f3a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; Correct Usage&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12f4006977743f996c08efd8ebb3416b31c178da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; Incorrect Usage&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c17ef8df7ebdcf7f2780e12de52071963dae6590" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; Invalid Usage&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eaaeb50af3182f94f85ec2093bbb03bb8070779" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; Valid Usage&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="105185e14e83f13709e0c718fae4b299948b84e2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; alias&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(String)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; alias&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(String)&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a3bdf2689e4d34e64f599c1a401ef70d5e2d145b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; aliasName&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(String)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; aliasName&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(String)&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7d93c256c06777dc4dd5ec25bbf2431453dc934f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; aliases&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(Array)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; aliases&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(Array)&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="71ab6fb67ba30a4fa3c8a68a2bb3141c2743adb3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; arg&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(Object)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; arg&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(Object)&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2b73bbe30173b8350cc00d3e3239c8da22da0683" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; args&amp;hellip;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; args&amp;hellip;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f7216f55b70c3d4618f471522145ebc96273bc43" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; assertions that verify style properties&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fde9b3c15d4626393ef17432e4736c3cbb985e7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; body&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(String, Object)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aad39d9bc8c61007644f809f5702e73bf1b7ca18" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; callbackFn&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(Function)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; callbackFn&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(Function)&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="062586ae6a9f5438df5f8a3d61e171b0ca331ee5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; chainers&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(String)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; chainers&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(String)&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="74b5e74349a8454ed5683233a0c90c850ace9688" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; command&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(String)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; command&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(String)&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2a035456961d027bdd5b20f77dd49a2042fdbe67" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; content&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(String, Number, RegExp)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5aaf7958a061922b7725e486e3d39efc9ceff62" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; contents&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(String, Array, or Object)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5296ce7055f281365b25ef2a6441d816172e3914" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; direction&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(String, Number)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80b1daf90d3f48bf7a3551451dad6222e652a787" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; element&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(DOM node, jQuery Object)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35f00eb2204d2154a27af718fd54d7f072336051" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; enable&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(Boolean)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; enable&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(Boolean)&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8931f0762e40864bd4738592cfff8ae7f8d67089" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; encoding&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(String)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; encoding&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(String)&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="83a9f25d0cf1874038d518741e9e821b89d65dff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; event&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(String)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; event&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(String)&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="787a460642c7ef3a5a7924404aa25c3f30188a2d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; eventName&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(String)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; eventName&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(String)&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2ff7b09789e3bec52b0b7971b1a42a0efe599a3f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; fileName&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(String)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; fileName&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(String)&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f89b7bdc335c30a1bd2fe1587055eba50aeb19ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; filePath&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(String)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; filePath&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(String)&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="39b061e56f21827d6068b513d7cb7eb42f9bd630" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; filter&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(String selector)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6acf68fa0746aa18984d60c6fd2020ec2e2413f8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; fn&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(Function)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; fn&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(Function)&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e0af764c593840c05f73e78a1ebdad25356a86ae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; forceReload&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(Boolean)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; forceReload&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(Boolean)&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d718054a5c15b1528ba30528a0fabcc4cc902e06" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; functionName&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(String)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; functionName&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(String)&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5fd5af4a090e88af5825bb682b5bb4ca4881ae14" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; functionNames&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(Array)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; functionNames&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(Array)&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d01433bd49fdd6ffeed2836fb788f3765505603e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; height&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(Number)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; height&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(Number)&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0a08c7eae1a259d4fc10cb95b14fa9cfe4b7e24c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; index&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(Number)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; index&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(Number)&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="19a65f87dee488f7c6288db1cba359cb7f30c739" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; indexFromEnd&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(Number)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; indexFromEnd&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(Number)&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7e9ea853b8d30b781f8d007e3e20d9f077b3f4cb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; key&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(String)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; key&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(String)&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="21657d0c40591b33a0ed9546a7f8ea8f9f180dda" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; keys&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(String, RegExp)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9e3b51c42ba94bdc912452494176196a360e43f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; message&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(String)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; message&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(String)&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9430b9e74eafbe726101e7726a99be7933cd42a5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; method&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(String)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; method&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(String)&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ba0c6af7187310204ea6db2bf12885b6bd9a046e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; milliseconds&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(Number)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; milliseconds&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(Number)&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="76d530616b1898a244be592202782408a3d2a4fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; name&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(String)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; name&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(String)&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3862c6784e204d367d16ca1d8fc5c621a0789a4a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; names&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; names&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="aef85f6f1b031cc7325feeaaf31d6f424abf3c88" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; now&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(number)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; now&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(number)&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ff6c3e466dc4cd468bda6444614c891e4f584f1b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; obj&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(any)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; obj&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(any)&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fd5175016268e6d98e48a10ff2ef6309d9cb5e6d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; object&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(Object)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; object&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(Object)&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="be2ac737b8e5c4143cdc250cfb92bdbb89c46164" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; options&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(Object)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; options&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(Object)&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d5a20df41c0ab172c3f852ff3190de757fdb5dc9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; orientation&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(String)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; orientation&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(String)&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="df9137846e83c18147d5c5d0086fd2ccf837de77" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; position&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(String)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; position&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(String)&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6836afb6f699513a1003a7d03407d223fb02f790" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; preset&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(String)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; preset&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(String)&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="efaa92ba1d86942dec5f378f377b7b5153be7564" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; propertyName&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(String)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; propertyName&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(String)&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d03df7aa408a2bf9192d9367602c5fe884499a36" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; replacerFn&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(Function)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; replacerFn&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(Function)&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f6d43bc46f71c5ab95fd58ba51f01b4566fad83f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; response&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(String, Object, Array)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b7237f83d79499714cdf143c808cb6b2f1c4974" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; selector&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(String selector)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfb545c6bac502c953fa159f1f6d216caa9be1ff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; subject&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(Object)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; subject&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(Object)&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="49c5b8248d901eff856500c79ef40c11f7b7cff3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; text&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(String)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; text&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(String)&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="017f1acebb0b3f13068d1531cef20d63711aed92" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; time&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(Number)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; time&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(Number)&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b2da7cb240b5fa1206d4d847cbadff80e59a2f2d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; url&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(String)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; url&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(String)&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a48d1348eb5005c53430baad3e0153abd84fd1ee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; url&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(String, Glob, RegExp)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45145a2c39c45b3d3d65a967ab8709759d1cdfef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; value&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(String)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; value&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(String)&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="15497aa3d1f864764e5b05475868d9fb506c1ffa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; values&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(Array)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; values&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(Array)&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f12c7d4fc4faf31f411c3b171366859e8b72799e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; width&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(Number)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; width&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(Number)&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a5ca5438478dddc73f2d3ddcf8b22458b54fa7c5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; x&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(Number)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; x&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(Number)&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="aef39556647a7ea1138e9afa1dbe11b876b91fe5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; x&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(Number, String)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61e979d7af2703cc8ddde2185ead617827bcc3fe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; y&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(Number)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; y&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(Number)&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="00675bb1ee780677ed9d48267495ef3033670988" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; y&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;(Number, String)&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="656e91dc960320fb5f01a597ad0dcc44515bbe6c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;clock.restore()&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;clock.restore()&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4cba3779f4ebd520e8f0559ca29e1148f24d14ee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;clock.tick(milliseconds)&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;clock.tick(milliseconds)&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f3fcb0bad9c5ef31344a687e7e4cf0fb4ef5ae4c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;&amp;lsquo;foo&amp;rsquo; does not match config / sets env var in &lt;code&gt;Cypress.env()&lt;/code&gt;&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;&amp;lsquo;foo&amp;rsquo; does not match config / sets env var in &lt;code&gt;Cypress.env()&lt;/code&gt;&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b1885a39c792c13f876b367080cbed2f247bc7dc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;&lt;code&gt;start-server-and-test&lt;/code&gt; module&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6df5e9b00431631f0c0b52971b06e00e91ad20f9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;&lt;code&gt;wait-on&lt;/code&gt; module&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="715009f0310e3d8867c4c5618956092a4db33895" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Alias several routes&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5a2288a9e9eae4acf947f61c61bb0991cf4e9e5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Assert on the location&amp;rsquo;s href&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeee011f89ce00e05bb0d81dfc5eaa283bdc54a8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Assert on the parent of the active li&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66202ba0123336a927b4b4118166630e521480d3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Assert that the document&amp;rsquo;s title includes &amp;lsquo;New User&amp;rsquo;&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f778229d25b1a65490e0bdc6c46f2c02b7769a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Assert that the hash matches &lt;code&gt;#users/new&lt;/code&gt;&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c7d4e679ff1205948833707484212366f2c01e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Assert that there should be 8 children elements in a nav&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="304a8fb6b6b56b613a70e974c2dc9e16db48a2c4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Assert that there should be 8 children in a nav&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d6af784babd53f0abbff19f1161f0e2690912eb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Auto-complete Example:&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71473c644ddb0d65b539fc7739bba14ab5093f4a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Blur a textarea after typing.&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71faffb24adfa6f74b655c3aa4501249a5194a70" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Change the &lt;code&gt;baseUrl&lt;/code&gt; configuration value / not set env var in &lt;code&gt;Cypress.env()&lt;/code&gt;&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b8c8af7091c8a9838038c421003301ead701527" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Change viewport size to test responsive nav&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbf0eaa8655ead5ca3477447b05dc9e52bc8277d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Checks and Actions Performed&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b7d47ff32090ae2fbf60c1612a21d7ad72ae601" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;CircleCI Environment Variable&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbdc04b871b898f76b6687da94788dde0af61d3d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Clear cookies after getting cookies&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56475e5afd25220bb772e61e67bc2958f1483ca5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Clear the input and type a new value&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="114e1651678f6db0c2b1b01592604832d078cab4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Clearing a cookie after setting a cookie&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8eaf9a73b2a3dd5bbc685f6bd452ee82d5098a7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Click the button in the form that has text &amp;ldquo;Create User&amp;rdquo;&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6876fa6fd6b845f9518bfd8b7dd83f47fe938a1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Command line&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a24b8985d5bdfff1e9c880df5f2079c4f57620b7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Common Scenarios:&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26d3cf2fbe44548644e2a1bfe69df4bc94e5ddb0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Common Scenarios&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10590641e4c873ea3349beb2d682677431e411a2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Common testing scenarios:&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f27e296c7d8532c1645cb2169f4790f7da7ac71c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Configuring Folder Structure&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a8a1f826cba95fe62dff9a7eb35094b391672b4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Create a clock and tick it 1 second&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8fc406631898da5ebdec3f906baded48b0f688f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Create a spy, alias it, and call it&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1610eb1ad11e225022b33729e219d05393eab867" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Create a stub, alias it, and call it&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85a7873759c7b82207ffdbfc876ccb24a4c9ac47" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Default Selector Priority:&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b4e9df7a975aefe296701ad8b8c277ee08465f5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Double click on a calendar schedule&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ab25ac34be7d2e66f4429a1440d54ca0d2e0925" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Element contains text &amp;ldquo;New User&amp;rdquo;&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d76da1dd567e1667ed11e281719790cb84bf3a6a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Filter the li&amp;rsquo;s to the li with the class &amp;lsquo;active&amp;rsquo;.&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="607b8445e5cb172312185cace94d941b01f1f7fe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Find all buttons that are not of type submit&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ebd20088503c390efbb83ad592a27dcb4078c31" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Find all elements before the &lt;code&gt;.active&lt;/code&gt; li&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f19e10ca07d3935c9da13d457730353f2ee7afe8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Find all elements following the &lt;code&gt;.active&lt;/code&gt; li&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c85b97f5de7f164bd8979e1fed3db5710a1b94a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Find all of the &lt;code&gt;active&lt;/code&gt; element&amp;rsquo;s ancestors until &lt;code&gt;.nav&lt;/code&gt;&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="199e23e49b384f351afc7a49bd8531e496a0f9e9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Find all of the element&amp;rsquo;s siblings before &lt;code&gt;#nuts&lt;/code&gt; until &lt;code&gt;#veggies&lt;/code&gt;&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="849130ee105124abeb6dd2c072d046bf0b75b2bd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Find all of the element&amp;rsquo;s siblings following &lt;code&gt;#veggies&lt;/code&gt; until &lt;code&gt;#nuts&lt;/code&gt;&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ed6cd02fec2f7dc9147ad4e09c6f430cfdf4e3b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Find the 4th &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; in the navigation&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fc0e712e9f3f989f8feab07fb1393188813c4c6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Find the element next to the &lt;code&gt;.active&lt;/code&gt; li&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deb74edfca1178dcabef95e390fcc2a927257545" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Find the first input in the form&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10ab88850c1ca68ea1db2c6813bd4a26b53f620a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Find the last button in the form&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3db98c084ab53f2828928336b05ff2f49e0b32f4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Find the li&amp;rsquo;s within the nav&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3c84116912fefeee6977869cfb98401cbd346f5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Find the previous element of the active &lt;code&gt;li&lt;/code&gt;&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1e793d33992619cd3859e46a32eae9e182bad70" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;First:&lt;/em&gt;&lt;/strong&gt; Cypress makes it easy to set up and start writing tests every day while you build your application locally. &lt;em&gt;TDD at its best!&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="505c67d7615864604098145142da5440a9efe716" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Focus the textarea&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cb5a6ed21f5c45f65ca85aa9840bd9cba876f53" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;For instance we automatically display:&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db99fbe49f922f3b79d8362586a75d9ea1e0d541" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Get &lt;code&gt;responseBody&lt;/code&gt; of aliased route&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b3c02eb55cbbdc476dcffec864ebd418b292c2f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Get an input and assert on the value&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1613cdd2ae007b0821e773d1f80deb860db9b2e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Get the document&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6bbafe9fb58429f74faa1921fccc9d832e67057" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Get the input within the form&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb84c3ea900ec93d0c2e4811fb17e17c1295a2c7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Get the parents of the active &lt;code&gt;li&lt;/code&gt;&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e542a1394b0ab4e3cf5512dc775b60a4db8554b0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Get the siblings of element with class &lt;code&gt;active&lt;/code&gt;&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0257d971d49a9e33cb1860b0df6201a0c608b5dc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Get the window&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf45e3e9623d38e5c639342a37355a47020b8a4f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Go back in browser&amp;rsquo;s history&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eedddc91076ae17c25dea3bd972c892dbb52844" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Invoke jQuery show method on element&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c06295e47aa6c00de547ff381f4b9a4cdc2e8bfe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Iterate over an array of DOM elements&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="297a3006e063e58085994c0315c4663f6975933e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Later:&lt;/em&gt;&lt;/strong&gt; After building up a suite of tests and &lt;a href=&quot;../guides/continuous-integration&quot;&gt;integrating Cypress&lt;/a&gt; with your CI Provider, our &lt;a href=&quot;../dashboard/introduction&quot;&gt;Dashboard Service&lt;/a&gt; can record your test runs. You&amp;rsquo;ll never have to wonder: &lt;em&gt;Why did this fail?&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7162af859fcbafc17474691e5c7b49132dfb35b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;List the contents of &lt;code&gt;cypress.json&lt;/code&gt;&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa0f02de7fcdaf1e20a1fe6a5d848de7de35d6e2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;List the contents of cypress.json&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b546e15641371b47fc56b83a40e99ff248e1368f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Log out the current subject for debugging&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3d367e1bba98e0dedb2c9a6329f95f984de29c4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Make an assertion on the focused element&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48d1de588bb82e370b574273195504bf06fcca8d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Outstanding requests are automatically aborted between tests&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86ab611c89f39eb3fd6a67faf4a283f4478bed1d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Promises are awaited&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26827ae95ea514a716ccb539e3c040dff4549097" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Record Key&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d44069a0f2ef984cbc78c96e5ae343899cbc7233" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Reload the page&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0812d8f035969da8893168d2761d3f63afd4d63" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Request comments endpoint and test response&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c0437600d90d943de807dbdf92c5ec086fb9cb0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Scroll 25% down the element&amp;rsquo;s height&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d184a61d81e07cbf68ecb5d3e36759a1795e46cb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Scroll 500px down the list&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bfe41611a45b7943688b15968e0153f9c2becb5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Scroll the window 500px to the right&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="204d011b5764991c33d7f6b36f48cb242af2c7df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Scroll to the bottom of the window then scroll the element to the &amp;ldquo;right&amp;rdquo;&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83f1e8a65f3526a7a25f807b63df9f5592c5cf10" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Scroll to the bottom of the window&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39fa1ea40541f5b9fca7b302b6a52c86ee0c61ad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Scroll to the center of the list&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48a1fc8af4d516fce313d6b799392057c3bd80c0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Scroll to the right over 2000ms&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95eb2c4952d2ab25df32171b7f93b7a34255a477" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Select the option with the text &amp;ldquo;Homer Simpson&amp;rdquo;&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee2908d72ecbc3d9d5f731ff49db7d2244a4f108" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Server can be started before you &lt;a href=&quot;visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62fe1849edb75f080a4e7e3cbba8d63c6b7a0bf5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Server persists until the next test runs&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81b559d2f60b31c85b097a5c723e6c23cadc8962" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Set &lt;code&gt;chromeWebSecurity&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; in &lt;code&gt;cypress.json&lt;/code&gt; and we&amp;rsquo;ll take care of the rest.&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95f3cb2daee29b8f93daffc2b6e2b641db3172f5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Snapshots do not reflect scroll behavior&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6632b674634cefe130b699ea2ab594f7f208d0c9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Some examples:&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5abb9d4422a65c9146a56e48f6f532b60e643510" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Stop &lt;code&gt;each&lt;/code&gt; prematurely&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1dcb6012ab06d4bbbf0a167db49a370a3942c7f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Submit a form&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7531df7ccf19c70a2aecac7718b9a5db74bd896b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;The XHR object that &lt;a href=&quot;../../api/commands/wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt; yields you has everything you need to make assertions including:&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dab85b563d7238505e13c5599b564eaa18cce6b5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;The following events are available:&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c4e9d13f0f630b5d11ae65433da0de876f8a49c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;The original array is always yielded&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d9c67b1ea55ea003281380b4d09513cfebe8b32" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;The search results working are coupled to a few things in our application:&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea2807664c150142454615734fe404cc708ccb1d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;There are downsides to not stubbing responses you should be aware of:&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc03959bce2392168a56d131be05a474f6b5a81e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;To begin stubbing responses you need to do two things.&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f18014c316d880b807d4ae24c46ace01bc5afbe7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;To summarize you can:&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4806f193bf6257e1d726d907dd719caf174a4d68" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;TravisCI Environment Variable&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3dd29663fcec53e6b3acce8a5f23fca5fd83443" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Trigger a &lt;code&gt;change&lt;/code&gt; event on input type=&amp;rsquo;range&amp;rsquo;&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="362eda3cf05d699432803c68e48955674e10b656" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Typical use cases would be modifying things like:&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a408ef2e8b03769e340efdd846b4018e48da293e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Uncheck the first checkbox&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55535922486e4da69e96c9d171e899c1afb69899" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Use linear easing animation to scroll&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="153951f1caf99369adc764b72112c56e95abafc4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Visit example application in a &lt;code&gt;beforeEach&lt;/code&gt;&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15b7213c46d86f2f8a4b521689eefdf62ae5d80a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Wait for the PUT to users to resolve.&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8baed4e473781808d423aaef986ac91d7fd2f418" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;We visually indicate when:&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce7bb97396b92cd9d20ceebb62b34fecab2d6fc1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;When chained to an existing series of commands:&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40b8c0a7dcc706411eb0d440f182411773ff75e2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;When starting a series of commands:&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bff9a85cef3823f90fa57a774b4cf8bf77604566" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Write an array to a file&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="991ad1cb8276c24affb062ea48f342f2452adedf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;check the element with name of &amp;lsquo;emailUser&amp;rsquo;&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f00b8343d85033806a221baf823be10c1454218d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;cypress.json&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;cypress.json&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8d4682ec292332de23aac610d64df0ead1f7db9f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;A private project&lt;/strong&gt; restricts its access to &lt;em&gt;&lt;a href=&quot;users&quot;&gt;only users you invite&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94467959881d428cb71408c5736149d9dc7e67db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;A public project&lt;/strong&gt; can have its recordings and runs seen by &lt;em&gt;anyone&lt;/em&gt;. Typically these are open source projects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fc90554e52b47aadc4ceb50a68833e304c85a96" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;A solid test generally covers 3 phases:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="247aba4c3a4bfede14bc7b18108f675d76fd2cdf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Admin:&lt;/strong&gt; Can also invite, edit and delete users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d615a362640d4d5b670ed7e1d51c2a4d9a00c0f4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Almost there:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a67a090cb740229b26a06503e429c55b9e11ce6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Answer:&lt;/strong&gt;&lt;em&gt;No big deal!&lt;/em&gt; Cypress automatically retries the query until either:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dddb223a31cb72ae06f5202a41a6dc77cfc35ab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Answer:&lt;/strong&gt;&lt;em&gt;Oops!&lt;/em&gt; It returns an empty jQuery collection. We&amp;rsquo;ve got a real object to work with, but it doesn&amp;rsquo;t contain the element we wanted. So we start adding conditional checks and retrying our queries manually.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa93f71e913baabfed41561abbdeb9906f4663e5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Anti-Pattern:&lt;/strong&gt; Acting like you&amp;rsquo;re writing unit tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="281807469909096abebca7540a68aec4264da638" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Anti-Pattern:&lt;/strong&gt; Coupling multiple tests together.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc9f1d485b9f211fd38d37bcbeedd58c14668884" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Anti-Pattern:&lt;/strong&gt; Sharing page objects, using your UI to log in, and not taking shortcuts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31decfb94cb0b6d70da5b7bf549c4d31ebf66c4f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Anti-Pattern:&lt;/strong&gt; Trying to a start a web server from within Cypress scripts with &lt;a href=&quot;../../api/commands/exec&quot;&gt;&lt;code&gt;cy.exec()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../api/commands/task&quot;&gt;&lt;code&gt;cy.task()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af9c13716ec9bfdaac2b8cfeb5a4acef83a64830" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Anti-Pattern:&lt;/strong&gt; Trying to assign the return value of Commands with &lt;code&gt;const&lt;/code&gt;, &lt;code&gt;let&lt;/code&gt;, or &lt;code&gt;var&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="156fcd2a640e3f2b985020c58964a260a817551c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Anti-Pattern:&lt;/strong&gt; Trying to visit or interact with sites or servers you do not control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="197caa34e3a098421ae8cedc6b02389e2e33b942" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Anti-Pattern:&lt;/strong&gt; Using &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; without setting a &lt;code&gt;baseUrl&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74b4ae95e6063ab9721ce5c6582f9fe9492e3a76" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Anti-Pattern:&lt;/strong&gt; Using &lt;code&gt;after&lt;/code&gt; or &lt;code&gt;afterEach&lt;/code&gt; hooks to clean up state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da18b839cfa2b95e55a898f1351567d9ffd6aa45" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Anti-Pattern:&lt;/strong&gt; Using highly brittle selectors that are subject to change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0a40ec71a10e85d88c29c1a1c0803792a496558" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Anti-Pattern:&lt;/strong&gt; Waiting for arbitrary time periods using &lt;a href=&quot;../../api/commands/wait#Time&quot;&gt;&lt;code&gt;cy.wait(Number)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa3e356aa3075d2eb3bacc10f4700e77d0ba1e5e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Automatic Waiting:&lt;/strong&gt; Never add waits or sleeps to your tests. Cypress &lt;a href=&quot;../core-concepts/introduction-to-cypress#Cypress-is-Not-Like-jQuery&quot;&gt;automatically waits&lt;/a&gt; for commands and assertions before moving on. No more async hell.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e59d33607bb9c3f9ac6668841e4dbf942d998723" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Best Practice:&lt;/strong&gt; Add multiple assertions and don&amp;rsquo;t worry about it</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d697d492717f4c6e58e1fec3e088dcefe2729ac9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Best Practice:&lt;/strong&gt; Clean up state &lt;strong&gt;before&lt;/strong&gt; tests run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="145f980497b400346e661ee46fb40882f437970c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Best Practice:&lt;/strong&gt; Control the timestamp inside the application under test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a9377f599ea14c1f42dc24358d0872645c42117" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Best Practice:&lt;/strong&gt; Only test what you control. Try to avoid requiring a 3rd party server. When necessary, always use &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; to talk to 3rd party servers via their APIs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31228a3b6e3a2546d6e008e290ffdfc7ef4e01ee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Best Practice:&lt;/strong&gt; Set a &lt;code&gt;baseUrl&lt;/code&gt; in your &lt;code&gt;cypress.json&lt;/code&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="020dde770bff8742b9aa042ede19cea9f5ebcff7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Best Practice:&lt;/strong&gt; Start a web server prior to running Cypress in the Test Runner or headless mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74ed8a22479a251c3698abd9ed93416c99eab4c8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Best Practice:&lt;/strong&gt; Take a snapshot after you confirm the page is done changing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="942cd9ca92d737a922979bf5718df6fd81d5f842" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Best Practice:&lt;/strong&gt; Test specs in isolation, programmatically log into your application, and take control of your application&amp;rsquo;s state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7172e416c9c01e0897e4bb8fbb1419b75e2d22d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Best Practice:&lt;/strong&gt; Tests should always be able to be run independently from one another &lt;strong&gt;and still pass&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf028371bbd0a687d0e16463048c194f8346cf99" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Best Practice:&lt;/strong&gt; Use &lt;a href=&quot;../../api/commands/fixture&quot;&gt;&lt;code&gt;cy.fixture()&lt;/code&gt;&lt;/a&gt; and network mocking to set the application state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acbb65d68c04b23853865719f2450dec8a1c0218" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Best Practice:&lt;/strong&gt; Use &lt;a href=&quot;../../plugins/index&quot;&gt;Component Testing plugins&lt;/a&gt; to test the individual components functionality in addition to end-to-end and visual tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4f95067e0d1b09f8655f78db76a603153395c05" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Best Practice:&lt;/strong&gt; Use &lt;a href=&quot;../core-concepts/variables-and-aliases&quot;&gt;closures to access and store&lt;/a&gt; what Commands yield you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbb109fe15b5eae076d3760c118cb640b06b1eff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Best Practice:&lt;/strong&gt; Use &lt;code&gt;data-*&lt;/code&gt; attributes to provide context to your selectors and insulate them from CSS or JS changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b7b3aeaab5014744627ae4b9066b3f8a89c443f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Best Practice:&lt;/strong&gt; Use route aliases or assertions to guard Cypress from proceeding until an explicit condition is met.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff3b5b5085f3276100695aecac8470b62266b6cb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Best Practice:&lt;/strong&gt; Use visual diffing to check individual DOM elements rather than the entire page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c318bce2dbb899596108e6a726f7eee2272caa29" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Breaking Changes:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60ef2a3dc2baedf7ce0c1f939f167a98b0b3cf0b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Bugfixes:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Bugfixes:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="58030dac7c28f18e7a9d879fac0d18cdb97e748a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Bugfixes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Bugfixes&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b784f65380fd2aec13c32e724159e6d7c481666b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CLI Changes:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca3bd8f8d9ef24c5ef72738f352dcd8a39badfdf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Can I pass in environment variables from the command line?&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce3af5bbbf30aae67d23f988c98cca2259831000" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Chain assertions on the same subject&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d6c231b20fc19b35c2c8848cabfafb12ea77424" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Consistent Results:&lt;/strong&gt; Our architecture doesn&amp;rsquo;t use Selenium or WebDriver. Say hello to fast, consistent and reliable tests that are flake-free.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28ea059ea761391f7c29e04dfc222270321c2909" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Create an &lt;code&gt;img&lt;/code&gt; element and set its &lt;code&gt;src&lt;/code&gt; to the &lt;code&gt;dataUrl&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73964ca71d945a4a71e240c43f9e12f226e475b8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Cross browser support&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8282ebc16850edbe338941d8a6d22f5b3f494b73" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Cypress allows you to change the values of your environment variables from within your tests.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5937ceb83f69ad2ca56ade30b5e9de5997414c83" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Cypress logs out page events for:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fc9b486225265a93e58ad363b37ff5179d1fed7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Dashboard Features:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b78bed8447546d7ee2fffa2ac6efbb5310d2ccb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Debuggability:&lt;/strong&gt; Stop guessing why your tests are failing. &lt;a href=&quot;../guides/debugging&quot;&gt;Debug directly&lt;/a&gt; from familiar tools like Developer Tools. Our readable errors and stack traces make debugging lightning fast.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9d1d2fa290b1b9004f924a05d2a0e90e9093845" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Dependencies:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Dependencies:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="37c5d91f5c25743fa25900263e13f27ab2c01bfe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Dependency Updates&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6baa4bce9f8c82a13a5c4ddfba7e2f00af03558" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecations:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Deprecations:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3b250598fb82d4e8bb74bfd742c7b203fc5ef4fc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Description:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f5a2297f75fb10bb635e959602bdd9b343069ca3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Disable compression&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e471848bac207409182af9bdeb74eecf80bc87dc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do not&lt;/strong&gt; cache &lt;code&gt;node_modules&lt;/code&gt; across builds. This bypasses more intelligent caching packaged with &lt;code&gt;npm&lt;/code&gt; or &lt;code&gt;yarn&lt;/code&gt;, and can cause issues with Cypress not downloading the Cypress binary on &lt;code&gt;npm install&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8be41e02c0b24f8255b1c315e1dffd4f3883d62e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Documentation Changes:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5228b2b865cc8cbceac457919d450df91c38206" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Electron upgrade&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9363ec3f400159f4ce0b7e08f880e638df79a54f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example of downloading Cypress &lt;code&gt;3.0.0&lt;/code&gt; for Windows 64-bit:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4168878b06eaa6917a0f012585506612f5054ea6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1bc0a5d67820f61786ae04d054caabfe5bd3f6ff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Examples:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Examples:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c64864b9fc0b10acb011e61f69fbe1cf4fd97358" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Explicit Subjects:&lt;/strong&gt; Using &lt;code&gt;expect&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10169cc224b2866bc2c469ad08c8148129b53568" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Expose more events&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2ffd2acb2c3a4b5d498c1d8319f770c3626d978" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Features:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Features:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8dbaeffed04acac0ec01ac150bbb51c370d62037" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;For example, if your &lt;code&gt;package.json&lt;/code&gt; looked like this:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcffb251562f3d36d269e37b86fe50c025d02e43" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;For instance, you could compose several requests together to tell your server exactly the state you want to create.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="366079c711115925f4c6e5f7049bdc5eb1ff4174" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Full network layer stubbing&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f83a4cf8a168f2c21382829c1324b257a184618f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Get all environment variables.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eba1974df34b4f001cca5c80d392655d1d99aef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Here are potential solutions to alleviate these problems:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9b7e36508b12b8dc64f87d0e50786b602a21aad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Here are some of our own public projects you can view:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd2c0825a254cd492b86f7dfff3d8bf457977e96" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Hint:&lt;/strong&gt; you can use &lt;a href=&quot;https://github.com/npm/node-semver#readme&quot;&gt;semver&lt;/a&gt; library to work with semantic versions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0edc199774b31cbebb54b6615a700b98f7952184" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Hooks you add to the root will always run on all suites!&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5480c6a3959ce016479913b74cc6106c8a34d5c3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Implicit Subjects:&lt;/strong&gt; Using &lt;a href=&quot;../../api/commands/should&quot;&gt;&lt;code&gt;.should()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../api/commands/and&quot;&gt;&lt;code&gt;.and()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bf877d0889e12f679acf690b6b15eb689385f7e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Improve Test Runner errors&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e86908b0f719c95a491abaf86f7e55288a79d7be" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Install Cypress&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d570ed1db41bd95dce4ccd7942c5179631960f30" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Lifecycle events&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0f562fe10ae9578a714a2a89f415a18de11f475" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Linux&lt;/strong&gt; Ubuntu 12.04 and above, Fedora 21 and Debian 8 &lt;em&gt;(64-bit only)&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edca64da7a7f446873d21365499be8d2a3beb062" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Linux&lt;/strong&gt;: &lt;code&gt;~/.cache/Cypress&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78c1908ec03baeedccc16045b50a1cb7f4a045c1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Long story short: yes.&lt;/strong&gt; You can collect the code coverage from the back end, and let the &lt;code&gt;@cypress/code-coverage&lt;/code&gt; plugin merge it with the front end coverage, creating a single full stack report.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4a31efd9748e920711ed11a63be1ddce3cac1c0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;MacOS&lt;/strong&gt;: &lt;code&gt;~/Library/Caches/Cypress&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4b8c1f5648925b7935dcbc9258bde65639f43d7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Make assertions about object&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7866c6b9bef8c022a7bb058ae0287de4801ef23" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Match:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Match:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d33037b89636ef53ac7ca560d381fc9ac8fcd80a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Member:&lt;/strong&gt; Can see the projects, runs, and keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4608726b892ccc51451528f983fbf0890cf81020" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Misc:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Misc:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f125b81b84542cc62ae42c4a0db26da7ae5d68eb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Misc&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Misc&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bfed24986a504d889fec6e814f8683fbfa1652bb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Mocha, Chai, Sinon upgrade&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1578bcead7ae3ffc764c944baab44e43e6cfe39b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Name:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Name:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="396aa6b3755a8f363e49662d602276bc50117710" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Native events&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b962fbaa4502bf2baa2b3709a1727c18caac2ec1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Network Traffic Control:&lt;/strong&gt; Easily &lt;a href=&quot;../guides/network-requests&quot;&gt;control, stub, and test edge cases&lt;/a&gt; without involving your server. You can stub network traffic however you like.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebf6989efeceef0764d97be29cd2e5ac0e9d96fe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;News:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;News:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2355e3ff08150e5eb3bfb41c56b5bfb8c7a035f2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Not Match:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc3104de9eb4eb7266b49b2deb7aa9941926684b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Cypress commands are asynchronous, so you cannot check a property value before the Cypress commands ran.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e20e488fd75d1fe06fbde8a1572dd17a77de39cf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Prefer &lt;a href=&quot;should#Function&quot;&gt;&lt;code&gt;.should()&lt;/code&gt; with callback&lt;/a&gt; over &lt;code&gt;.then()&lt;/code&gt; for assertions as they are automatically rerun until no assertions throw within it but be aware of &lt;a href=&quot;should#Differences&quot;&gt;differences&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6e6ae506af62e03bae2401e5600d7100190cc64" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This document assumes you have read the &lt;a href=&quot;../../guides/tooling/plugins-guide&quot;&gt;Plugins Guide&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="573b07e30e41e2f3db06a65138d76677214b4509" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This example assumes you are already familiar with Mocha &lt;a href=&quot;writing-and-organizing-tests#Hooks&quot;&gt;hooks&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a79784434f01bc44568f9d6c64f58ef6a1f2301b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; verbose Electron logging might show warnings that still allow Cypress to work normally. For example, the Cypress Test Runner opens normally despite the scary output below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f019e300be06e92e2235640f1a113bcc7ce9e39" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;code&gt;.and()&lt;/code&gt; assumes you are already familiar with core concepts such as &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Assertions&quot;&gt;assertions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ac58350570119010088d07aee78b37f05f5102b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;code&gt;.as()&lt;/code&gt; assumes you are already familiar with core concepts such as &lt;a href=&quot;../../guides/core-concepts/variables-and-aliases&quot;&gt;aliases&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="790be6414bb37f5942ba070e29e5595506bf62eb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;code&gt;.should()&lt;/code&gt; assumes you are already familiar with core concepts such as &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Assertions&quot;&gt;assertions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86f75870ad3aa7d26d8d8202ee7505850ab4f67c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;code&gt;.spy()&lt;/code&gt; assumes you are already familiar with our guide: &lt;a href=&quot;../../guides/guides/stubs-spies-and-clocks&quot;&gt;Stubs, Spies, and Clocks&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc4511db9ad590f60e84c06b4537c0228af497fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;code&gt;.stub()&lt;/code&gt; assumes you are already familiar with our guide: &lt;a href=&quot;../../guides/guides/stubs-spies-and-clocks&quot;&gt;Stubs, Spies, and Clocks&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f4ba0366d0ab7f810ab7efe8cf52c3a3028db0e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;code&gt;.then()&lt;/code&gt; assumes you are already familiar with core concepts such as &lt;a href=&quot;../../guides/core-concepts/variables-and-aliases#Closures&quot;&gt;closures&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9845f88a7866cdc73050fb7885854ebd5121684e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;code&gt;cy.route()&lt;/code&gt; assumes you are already familiar with core concepts such as &lt;a href=&quot;../../guides/guides/network-requests&quot;&gt;network requests&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="184689b162523783c718233dbe0c1fa35d24f816" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;code&gt;cy.server()&lt;/code&gt; assumes you are already familiar with core concepts such as &lt;a href=&quot;../../guides/guides/network-requests&quot;&gt;network requests&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6466766d6eac9bbe0a87d06f21ddbc819143eaad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Personal organizations cannot be used with an OSS plan.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef937726101d6bbf1ea792d981c362dd127505c0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Notes:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Notes:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="80671bfb085da4b9ff2097fe2c46f68b903419e9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Nothing&lt;/strong&gt; is watched during &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt;&lt;code&gt;cypress run&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44fd25414df2636bfdee773553892bedcc89f319" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;On Mac or Linux:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7d903ff61cf662cca7e2a58b34b44c10763bdf6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;On Windows:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Windows에서 :&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b2def577dd4e3e2e0f85c0ad6d134a3f93ec232c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Or by using &lt;code&gt;npx&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="423213c63e5a4a975db6b364a8f21451eafb0377" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Or by using &lt;code&gt;yarn&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17fe01366813120142cb512bdb9333e4f8f3c68e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Or with the shortcut using &lt;code&gt;npm bin&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5881a7f4d3f10d999958a74faebdd90df5a2de63" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Other News:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4ea0f0bd373be543d4e17a919d386fce858a97e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Overview:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Overview:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="94047b304c83cdc2a37aeb56a0a5b05dbc3b4a4d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Owner:&lt;/strong&gt; Can also transfer or delete projects. Can delete and edit the organization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa12f67282e1a01a14526f44a234ea64fd14c22d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Performance Improvements:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee89a237ab6d93f856d1f8d7a2db28a721642940" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Possibly Breaking Changes:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d40522d6a318eb9845254df284c1f64f16af2533" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Private&lt;/strong&gt; means that only &lt;a href=&quot;users&quot;&gt;users&lt;/a&gt; you invite to your &lt;a href=&quot;organizations&quot;&gt;organization&lt;/a&gt; can see its recorded runs. Even if someone knows your &lt;code&gt;projectId&lt;/code&gt;, they will not have access to your runs unless you have invited them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60f9a992db51510a678e226bc5e792e540ea2522" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Public&lt;/strong&gt; means that anyone can see the recorded test runs for the project. It is similar to how public projects on GitHub, Travis CI, or CircleCI are handled. Anyone who knows your &lt;code&gt;projectId&lt;/code&gt; will be able to see the recorded runs for public projects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="874b82b347a47a5504b89c7f13e0af6f7c88caa6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Question:&lt;/strong&gt; What happens when Cypress can&amp;rsquo;t find any matching DOM elements from its selector?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6046313579fe225b938d0fd77ab24dea9e3356a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Question:&lt;/strong&gt; What happens when jQuery can&amp;rsquo;t find any matching DOM elements from its selector?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b77eb92e9e573c194d4934df015c506facaaad3d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return a single environment variable value.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25664e9c46ff444d9591ce28cf355854d5573d70" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Returns a boolean indicating whether an element can receive focus.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d73e1d7dd5afb02c0d6432fd298318828320f15" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Returns a boolean indicating whether an element is detached from the DOM.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc56af4c6efd23b265c424fde5b9057ac7fa8097" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Returns a boolean indicating whether an element is hidden.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e91f35201db9c8bafea39a20424d731ca4f6ea8c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Returns a boolean indicating whether an element is scrollable.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5da3113413038f7a11ad098896bb14bb20c2c29" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Returns a boolean indicating whether an element is visible.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f1c17f0009aaf21c68c7f373a0edadcd2111d33" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Roadmap:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Roadmap:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eb8cfb68d7a3c77426b9d948d37b9d805db0e426" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Run Cypress&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e82e7531e5ef43496da19566c687a1680589037c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Screenshots and Videos:&lt;/strong&gt; View screenshots taken automatically on failure, or videos of your entire test suite when run from the CLI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4c888b26ac457c0deb6b13f3eaeeb0f0cfddfb5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Setting &lt;code&gt;chromeWebSecurity&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; allows you to do the following:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="743b7fc9d7285833ca6c81fece09a484c7adc8e5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Spies, Stubs, and Clocks:&lt;/strong&gt; Verify and &lt;a href=&quot;../guides/stubs-spies-and-clocks&quot;&gt;control the behavior&lt;/a&gt; of functions, server responses, or timers. The same functionality you love from unit testing is right at your fingertips.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2fb070431451825a43dbcb68523c4e1049f4a93" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Summary:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Summary:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="05cbf9507f70cbc3d59ba35fa8e7278de3c7d79c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Test retries&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fad49fd159237446694cfd3602eda8a2cda054a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Test that the span contains formatted text for today&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d3c9a19d836f51dbf3e3364327cadf7a3e22b6a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The default whitelist function in Cypress is:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f934c5cff272ded482e7e39b933c714148993a15" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The following code is not valid, you cannot add error handling to Cypress commands. The code is just for demonstration purposes.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65e6a6719aebf82e2f332af41d88bad98edcac51" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The idea goes like this:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7d57ff62b619761568685944c7915b6ab8cc3d1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The long way with the full path&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b28abd403fb444e9e90081ecdd4c1ab75457314" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Then you could do any of the following in your &lt;code&gt;pluginsFile&lt;/code&gt;:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db5248b3acc1f0d66e4dd173a8f8aadc78772594" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;These options will be the new defaults.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b6cb3f9dc09e5d04fbaa84312cb587716c94b4a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This is helpful if you want to:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1baf6025464ac3235156dc8738eb8638a7572927" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This is the single most important guide&lt;/strong&gt; for understanding how to test with Cypress. Read it. Understand it. Ask questions about it so that we can improve it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab40ba2a60c935b94f3e454c9fe433dd7fb43f9d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time Travel:&lt;/strong&gt; Cypress takes snapshots as your tests run. Hover over commands in the &lt;a href=&quot;../core-concepts/test-runner#Command-Log&quot;&gt;Command Log&lt;/a&gt; to see exactly what happened at each step.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f54038f0fca4d8bbe91d63d558f7b26cef270d7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip:&lt;/strong&gt; store the &lt;code&gt;coverage&lt;/code&gt; folder as a build artifact on your continuous integration server. Because the report is a static HTML page, some CIs can show it right from their web applications. The screenshot below shows the coverage report stored on CircleCI. Clicking on &lt;code&gt;index.html&lt;/code&gt; shows the report right in the browser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7702485cd386ba50ceb41146705e80d83211a346" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip:&lt;/strong&gt; use &lt;a href=&quot;https://docs.cypress.io/examples/examples/docker.html&quot;&gt;Cypress Docker image&lt;/a&gt; or install dependencies by copying them from one of our official Docker images.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="369da1cb75b7f107f6b8df9834631bcb97177e69" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip:&lt;/strong&gt; you can conditionally register the endpoint only if there is a global code coverage object, and you can &lt;a href=&quot;https://github.com/gotwarlost/istanbul/blob/master/ignoring-code-for-coverage.md&quot;&gt;exclude the middleware code from the coverage numbers&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ba4ba41b73ec7b06d85c377f8cc01b6e5da1c5f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To filter debug output to a specific module&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="281bb91f69927d0b062a5cca5e369e1ca013c2a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type into the input&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57ea5730c294794a793024b163e39e698822a0e7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use minimal compression&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c208b516db15918f44b50fabb4918ef907bc3c2e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Using an image fixture&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="424ac9c257f09a000c7fa72339a8948f11745325" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;We can see Cypress output additional information in the console:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f36886548d12c58074717d676c4106cfcb24a4ac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;We give you the ability to:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="798beb3a00d4a7e23e0069448ccc2e1865497ff3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;What should I do then?&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67d0795706dab7712a2500b334944e74c3fee79b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;What to test, where the edge cases and seams are, what regressions you&amp;rsquo;re likely to run into, etc. are entirely up to you, your application, and your team.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c202a1259c1189e4ddd57b9691f26a46d5d2eabb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;What you need to do&lt;/strong&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7de8c1d818e61b3650466257a313e25a3d55203" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Where to put server configuration&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6528c7d8c70da6573fb9d6635e03a0675aa1266a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;While there is a lot more to this strategy, you generally have three ways to facilitate this with Cypress:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68aa9f79b6f7b7ad49b8aa5cbdd7be78b5244d92" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why can&amp;rsquo;t I shut down the process in an &lt;code&gt;after&lt;/code&gt; hook?&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff775e2b11ad357f0fcff52fe06cb2bf3764623a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why is it &lt;code&gt;Cypress.env&lt;/code&gt; and not &lt;code&gt;cy.env&lt;/code&gt;?&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac90200990ecaf6e0a2fd96c92e96e6b7cc2ea30" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why would I ever need to use environment variables?&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46163ab08c71b998c1a5d14683a304c21bdcf3b5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Windows&lt;/strong&gt; 7 and above</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f79745d7409bfd65ca0c19dd23ba1c0f243eb2f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Windows&lt;/strong&gt;: &lt;code&gt;/AppData/Local/Cypress/Cache&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bfcc0fbe717bc2a51c058599453ce06713a01c3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;With Cypress, there are several other approaches that can offer an arguably better and faster experience.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a7763a66ba0b4d87e2e5874146a8ec4c79bd3bb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;With that in mind you write something like this:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62d589b0fc799bbafb25d11790449a4f70259d2f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yields:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Yields:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5534cc508317abc7ada9d2047869addf94c8a1d9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;You can override this function with your own specific logic:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c2164af6596e4c2a5811a634d1b0ffc2d5aafd1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;You can set multiple values by passing an object literal.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40b3e803816d4d5cd89e2ef51829ed1835b8d579" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;You cannot assign or work with the return values&lt;/strong&gt; of any Cypress command. Commands are enqueued and run asynchronously.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed3e89be5ac819809cf723419af75446f18ca9b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;You could:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceb44fcbb9c594461969ff8fef035d02b7e5d9b8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;cy.hash( &lt;em&gt;options&lt;/em&gt; )&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c84950d78fa9b6a807f3fcbe1cd8aec05e60ef21" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;cy.url( &lt;em&gt;options&lt;/em&gt; )&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="975043740fd95ad291178907fc942624c725f967" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;dimensions&lt;/strong&gt;: width and height of the image in pixels (as an object with the shape &lt;code&gt;{ width: 100, height: 50 }&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8676563283d125549928ff0e23d6a27d8903cd5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;macOS&lt;/strong&gt; 10.9 and above &lt;em&gt;(64-bit only)&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70d03518c488634196d73b93c664a6d6c21ef1d7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;note&lt;/strong&gt;: &lt;a href=&quot;https://www.npmjs.com/package/npx&quot;&gt;npx&lt;/a&gt; is included with &lt;code&gt;npm &amp;gt; v5.2&lt;/code&gt; or can be installed separately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4640993154ea985257d6c0c7fe5c0ad44ac75a0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;path&lt;/strong&gt;: absolute path to the image</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e576c74e5564d421347875dae0c54c35a3aab3fe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;size&lt;/strong&gt;: size of the image file in bytes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="346c676cb634e7eae5499e964c5c2bff278286ab" translate="yes" xml:space="preserve">
          <source>@cypress/code-coverage</source>
          <target state="translated">@cypress/code-coverage</target>
        </trans-unit>
        <trans-unit id="f308e57c0c36d03381e43d4600e0816369c836e5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;clock&lt;/code&gt; is ticked</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38686722de4ee3f77d099fca2096288c60bc2b29" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;spy&lt;/code&gt; is called</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb4b83320f66033d22636f820492fad35a815f0e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;stub&lt;/code&gt; is called</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29d524972dec26376a5ee1cb415c310a601c8f1a" translate="yes" xml:space="preserve">
          <source>A CI build ID is used to associate multiple CI machines to one test run. This identifier is based on environment variables that are unique to each CI build, and vary based on CI provider. Cypress has out-of-the-box support for most of the commonly-used CI providers, so you would typically not need to directly set the CI build ID via the &lt;a href=&quot;command-line#cypress-run-ci-build-id-lt-id-gt&quot;&gt;&lt;code&gt;--ci-build-id&lt;/code&gt; flag&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d45698db31a94f60b844bf5937c008ff8f8daf11" translate="yes" xml:space="preserve">
          <source>A Cached Cypress Binary Could not be found</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="316d03452e2511d11ded85b4f5e58af53f88461d" translate="yes" xml:space="preserve">
          <source>A Cypress plugin to add a tab command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8fdf4e6c579fe5cd12aae10336bf1895e593fff" translate="yes" xml:space="preserve">
          <source>A Cypress plugin to retry failed tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f68a91db10a79a3b9db45d18cca8c73bad3ef63" translate="yes" xml:space="preserve">
          <source>A String glob pattern of the test files to load</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db692772b60c4eedfd6cd0ab705d7cfbe9d5b57b" translate="yes" xml:space="preserve">
          <source>A String or Array of glob patterns used to ignore test files that would otherwise be shown in your list of tests. Cypress uses &lt;code&gt;minimatch&lt;/code&gt; with the options: &lt;code&gt;{dot: true, matchBase: true}&lt;/code&gt;. We suggest using &lt;a href=&quot;http://globtester.com/&quot;&gt;http://globtester.com&lt;/a&gt; to test what files would match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57678df55eb9946e8e31d82f77e4557f6f4e6e62" translate="yes" xml:space="preserve">
          <source>A String or Array of hosts that you wish to block traffic for. &lt;a href=&quot;#blacklistHosts&quot;&gt;Please read the notes for examples on using this.&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45452212114cacc8b53a0be331c10b306ba18cf9" translate="yes" xml:space="preserve">
          <source>A boolean indicating whether the preprocessor should watch for file changes or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6f28b92de746b1c132ac54cf4aea94939556185" translate="yes" xml:space="preserve">
          <source>A callback after a (non-failure) screenshot is taken. For an element capture, the first argument is the element being captured. For other screenshots, the first argument is the &lt;code&gt;$el&lt;/code&gt;. The second argument is properties concerning the screenshot, including the path it was saved to and the dimensions of the saved screenshot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81b5e5349e9d75f58420231d3e678366bf850bc8" translate="yes" xml:space="preserve">
          <source>A callback after a non-failure screenshot is taken. When capturing screenshots of an element, the first argument is the element being captured. For other screenshots, the first argument is the &lt;code&gt;document&lt;/code&gt;. The second argument is properties concerning the screenshot, including the &lt;code&gt;path&lt;/code&gt; it was saved to and the &lt;code&gt;dimensions&lt;/code&gt; of the saved screenshot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45d9d32e6a567a7595467407c2ea822917bc6d9e" translate="yes" xml:space="preserve">
          <source>A callback before a (non-failure) screenshot is taken. For an element capture, the argument is the element being captured. For other screenshots, the argument is the &lt;code&gt;$el&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0993066092679a984fe74138b91fead86930b40d" translate="yes" xml:space="preserve">
          <source>A callback before a non-failure screenshot is taken. When capturing screenshots of an element, the argument is the element being captured. For other screenshots, the argument is the &lt;code&gt;document&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d761b44f8fbf4c2b33aee8ae8caa2300d8c74a84" translate="yes" xml:space="preserve">
          <source>A collection of Cypress commands to extend and complement the defaults</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c70293f167a2670f0b085fa36a77ce7a0c72f327" translate="yes" xml:space="preserve">
          <source>A command must exit within the &lt;code&gt;execTimeout&lt;/code&gt; or Cypress will kill the command&amp;rsquo;s process and fail the current test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d881faf42fc05d9f9b74c98977a3fc342c51f8e" translate="yes" xml:space="preserve">
          <source>A common use case for this is Single sign-on (SSO). In that situation you may &lt;code&gt;POST&lt;/code&gt; to a different server and are redirected elsewhere (typically with the session token in the URL).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="991d8dcb7086872e8db231578c0d08b73d8fbcb6" translate="yes" xml:space="preserve">
          <source>A complex application might have a Node back end with its own complex logic. From the front end web application, the calls to the API go through layers of code. It would be nice to track what back end code has been exercised during Cypress end-to-end tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="891dba2f6478723dc5216c614097f7351999ba3e" translate="yes" xml:space="preserve">
          <source>A core feature of Cypress that assists with testing dynamic web applications is retry-ability. Like a good transmission in a car, it usually works without you noticing it. But understanding how it works will help you write faster tests with fewer run-time surprises.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5c9d93ddeaa8e12f0cac27c95fadf93b3e17ec2" translate="yes" xml:space="preserve">
          <source>A custom command to download different kinds of files and store them on your local machine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="053cad2cdd8c7d10e4922abe1447d2984b1d32f4" translate="yes" xml:space="preserve">
          <source>A dual command can either start a chain of commands or be chained off of an existing one. It is basically the hybrid between both a parent and a child command. You will likely rarely use this, and only a handful of our internal commands use this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="809d72437839eaabfc368ae38fb9fd2e3f7ae941" translate="yes" xml:space="preserve">
          <source>A fixture is a fixed set of data located in a file that is used in your tests. The purpose of a test fixture is to ensure that there is a well known and fixed environment in which tests are run so that results are repeatable. Fixtures are accessed within tests by calling the &lt;a href=&quot;../../api/commands/fixture&quot;&gt;&lt;code&gt;cy.fixture()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4523b1fd6ed6edd2c3e198d9592c07a8170eefe5" translate="yes" xml:space="preserve">
          <source>A form is now properly submitted when using &lt;code&gt;.type('{enter}')&lt;/code&gt; on a form containing no buttons and only one input that allows implicit submission. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4495&quot;&gt;#4495&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f68612ab1d9a23070be5701f11fdc7f6620e83b2" translate="yes" xml:space="preserve">
          <source>A function called with the element that should return a unique selector string for the element. If a falsey value is returned, the default selector function is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63ccacaf163b18d02028c89eee7cf5a76006c597" translate="yes" xml:space="preserve">
          <source>A great place to define or overwrite commands is in your &lt;code&gt;cypress/support/commands.js&lt;/code&gt; file, since it is loaded before any test files are evaluated via an import statement in cypress/support/index.js.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76e04c92ee7102f5caa5658177747a78273f1b27" translate="yes" xml:space="preserve">
          <source>A great place to put this configuration is in your &lt;a href=&quot;../../guides/core-concepts/writing-and-organizing-tests#Support-file&quot;&gt;&lt;code&gt;cypress/support/index.js&lt;/code&gt; file&lt;/a&gt;, since it is loaded before any test files are evaluated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b29a65e5b9bec3cdae0d0ece9c1df4d301d81bc" translate="yes" xml:space="preserve">
          <source>A great place to put this configuration is in your &lt;code&gt;cypress/support/index.js&lt;/code&gt; file, since it is loaded before any test files are evaluated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96a26903ea468cb050f3aad13816e4ecc363c711" translate="yes" xml:space="preserve">
          <source>A human also has intuition. If you click a button and see a loading spinner, you will assume the state is in flux and will automatically wait for it to finish.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8fa17da0e55fc50dc431d6d3734a40b4afa920f" translate="yes" xml:space="preserve">
          <source>A key on the location object. Returns this value instead of the full location object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="704014e56e097c4694c52917a092dc1018aa2fcb" translate="yes" xml:space="preserve">
          <source>A lot of Cypress commands &lt;em&gt;mutate&lt;/em&gt; the state of the browser in some way.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f255136f85a27a7c4e11aa50959da42147335106" translate="yes" xml:space="preserve">
          <source>A machine opts in to receiving a spec file to run by contacting Cypress.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a1412dd32930e79e1db734a1c94397fcdd4ede5" translate="yes" xml:space="preserve">
          <source>A method to be called on the chainer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4777e5b4e86c8923361cde52ce48422eb50d81f" translate="yes" xml:space="preserve">
          <source>A missing dependency</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4564ca411cf4d8c15383e197a90ccfa4490110a4" translate="yes" xml:space="preserve">
          <source>A more complex project that needs to install dependencies, build an application and run tests across 4 CI machines &lt;a href=&quot;parallelization&quot;&gt;in parallel&lt;/a&gt; may have:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="934c986f66843c43961669762cc89f5fc0f86f29" translate="yes" xml:space="preserve">
          <source>A name for the image file. Will be relative to the &lt;a href=&quot;../../guides/references/configuration#Folders-Files&quot;&gt;screenshots folder&lt;/a&gt; and the path to the spec file. When passed a path, the folder structure will be created. See the &lt;a href=&quot;screenshot#Naming-conventions&quot;&gt;Naming conventions&lt;/a&gt; below for more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a85a60b296051df1db251b331d572a5dbdc08ae3" translate="yes" xml:space="preserve">
          <source>A negative number indicating the index position from the end to find the element at within an array of elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2945277627e916405247f5f5fb277a53a2564fce" translate="yes" xml:space="preserve">
          <source>A new Cypress chain always starts with &lt;code&gt;cy.[command]&lt;/code&gt;, where what is yielded by the &lt;code&gt;command&lt;/code&gt; establishes what other commands can be called next (chained).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e0c9cdd825bdaca6b08e9aa86252180b3ee0eca" translate="yes" xml:space="preserve">
          <source>A new subject, as appropriate for the command &lt;a href=&quot;../../api/commands/wait&quot;&gt;&lt;code&gt;.wait()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67e825a637083cd8d809cc63fae1f3e2e598b348" translate="yes" xml:space="preserve">
          <source>A nice detailed JSDoc comment above the method type will be really appreciated by any users of your custom command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6130e7944c5a87d18ec9e5d32f61c40d6a37004c" translate="yes" xml:space="preserve">
          <source>A number indicating the index to find the element at within an array of elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="844257a6e9a755bfde670853d42ad04fe589e32a" translate="yes" xml:space="preserve">
          <source>A path to a file within the &lt;a href=&quot;../../guides/references/configuration#Folders-Files&quot;&gt;&lt;code&gt;fixturesFolder&lt;/code&gt;&lt;/a&gt; , which defaults to &lt;code&gt;cypress/fixtures&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61c65404ae20e3e147da26cfc7007a2279b81fe2" translate="yes" xml:space="preserve">
          <source>A path to a file within the project root (the directory that contains &lt;code&gt;cypress.json&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11d5dce62a5bc52355d9801ddb0e79f152a905be" translate="yes" xml:space="preserve">
          <source>A preprocessor also typically watches the source files for changes, processes them again, and then notifies Cypress to re-run the tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91b47db928ff39766c826d59f71115aae05662ec" translate="yes" xml:space="preserve">
          <source>A preprocessor could transpile your file from another language (CoffeeScript or ClojureScript) or from a newer version of JavaScript (ES2017).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28a06538e0247321650a7bab014b82da18465afd" translate="yes" xml:space="preserve">
          <source>A preprocessor is the plugin responsible for preparing a &lt;a href=&quot;../../guides/core-concepts/writing-and-organizing-tests#Support-file&quot;&gt;support file&lt;/a&gt; or a &lt;a href=&quot;../../guides/core-concepts/writing-and-organizing-tests#Test-files&quot;&gt;test file&lt;/a&gt; for the browser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e47656a8c0c6e69b471122082edff68020042cc9" translate="yes" xml:space="preserve">
          <source>A preset dimension to set the viewport. Preset supports the following options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a60699a66cacbbf62f1b622ab02aa5e080cf163" translate="yes" xml:space="preserve">
          <source>A project template to learn how Elm, Parcel, Cypress and Netlify work together.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce2e5459ecd5176879374cd2d11bb54b5b117291" translate="yes" xml:space="preserve">
          <source>A promise* that eventually rejects with an error that occurred during processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="486d177f25132146db90eff722b4bb736b857ad2" translate="yes" xml:space="preserve">
          <source>A promise* that eventually resolves the path to the &lt;strong&gt;built file&lt;/strong&gt;**.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="860cf66a50da2ba4f865dd62abaeceb879cbf2a5" translate="yes" xml:space="preserve">
          <source>A prototype of generating quicker project scaffolding for Cypress.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca63461f431923074968d469f55aec305f807e4d" translate="yes" xml:space="preserve">
          <source>A really nice feature of both &lt;a href=&quot;https://github.com/istanbuljs/nyc&quot;&gt;nyc&lt;/a&gt; and &lt;a href=&quot;https://github.com/istanbuljs/babel-plugin-istanbul&quot;&gt;&lt;code&gt;babel-plugin-istanbul&lt;/code&gt;&lt;/a&gt; is that the source maps are generated automatically, allowing us to collect code coverage information, but also interact with the original, non-instrumented code in the Developer Tools. In the screenshot above the bundle (green arrow) has coverage counters, but the source mapped files in the green rectangle show the original code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1f09973cd2ba633de2058190d4e95d674871336" translate="yes" xml:space="preserve">
          <source>A record key is a GUID that looks like this</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5b453377e96b3d36f7c1bfd1f06d6cf25b45717" translate="yes" xml:space="preserve">
          <source>A request &lt;code&gt;body&lt;/code&gt; to be sent in the request. Cypress sets the &lt;code&gt;Accepts&lt;/code&gt; request header and serializes the response body by its &lt;code&gt;Content-Type&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a51f4bb148389c44a9b8b73e8f3149e6d0383650" translate="yes" xml:space="preserve">
          <source>A robot has no intuition - it will do exactly as it is programmed to do.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbc4170ff19fd1f09db024c5627234653110d013" translate="yes" xml:space="preserve">
          <source>A selector used to filter matching DOM elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d9fd5971b151e4d24cf72e6fed12daed28028dc" translate="yes" xml:space="preserve">
          <source>A selector used to filter matching descendent DOM elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed63f564930211dca26e1987ad70112a1d5fb505" translate="yes" xml:space="preserve">
          <source>A selector used to remove matching DOM elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba05e7487afacf9ef35bce8c1acad4e718d13274" translate="yes" xml:space="preserve">
          <source>A simple rule of thumb is to ask yourself this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddf1fbffa7fada75b4a1a1aa4b6389ff403b8b0d" translate="yes" xml:space="preserve">
          <source>A simple tool which integrates Cypress with Slack to report failing tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ce102fa94b615a9abf1e7d68507265982eca576" translate="yes" xml:space="preserve">
          <source>A single command followed by multiple assertions retries each one of them &amp;ndash; in order. Thus when the first assertion passes, the command will be retried with first and second assertion. When the first and second assertion pass, then the command will be retried with the first, second, and third assertion, and so on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62e47b994564daa1d04e981888244c4cfd356c87" translate="yes" xml:space="preserve">
          <source>A specified position to scroll the window or element to. Valid positions are &lt;code&gt;topLeft&lt;/code&gt;, &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;topRight&lt;/code&gt;, &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;center&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, &lt;code&gt;bottomLeft&lt;/code&gt;, &lt;code&gt;bottom&lt;/code&gt;, and &lt;code&gt;bottomRight&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50fb524ff59fd183f7512ea9049b2844a30bb34f" translate="yes" xml:space="preserve">
          <source>A spy does &lt;strong&gt;not&lt;/strong&gt; modify the behavior of the function - it is left perfectly intact. A spy is most useful when you are testing the contract between multiple functions and you don&amp;rsquo;t care about the side effects the real function may create (if any).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb4277046305d3d4ca1fcd487e5b2bfc2279b22c" translate="yes" xml:space="preserve">
          <source>A spy gives you the ability to &amp;ldquo;spy&amp;rdquo; on a function, by letting you capture and then assert that the function was called with the right arguments, or that the function was called a certain number of times, or even what the return value was or what context the function was called with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="971471cac737ef80d520e7d844fe90f6f2f2672d" translate="yes" xml:space="preserve">
          <source>A stub is a way to modify a function and delegate control overs its behavior to you (the programmer).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c47eba6ef607420597c653e9744732a520b9bfb" translate="yes" xml:space="preserve">
          <source>A stub is most commonly used in a unit test but is still useful during some integration/e2e tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0850f594650c7c2cdef3945dadca8f8b98068616" translate="yes" xml:space="preserve">
          <source>A syntax error in the file or one of its dependencies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b51019c536d3c088bae78539e387d5063587a3f4" translate="yes" xml:space="preserve">
          <source>A task must end within the &lt;code&gt;taskTimeout&lt;/code&gt; or Cypress will fail the current test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8721b87a6dd578e6cd4d51bbcf5b0f17e1e239d4" translate="yes" xml:space="preserve">
          <source>A task that runs a watch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4b5cc87adb0476524f34d949ce983b96a49ae26" translate="yes" xml:space="preserve">
          <source>A task that watches for file changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb6cd1bb91e55deb3596f757c2ce10a812585b64" translate="yes" xml:space="preserve">
          <source>A timestamp specifying where the clock should start.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98357acccb62c32bab8d7f3629662692b3fb1a0a" translate="yes" xml:space="preserve">
          <source>A typical project can have:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47c2d3709f393b2f85ce66c5de28220be81bff3f" translate="yes" xml:space="preserve">
          <source>A user is anyone who logs in to the Dashboard Service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3066752ed96d7ab82532ae0fcb89655acd36884c" translate="yes" xml:space="preserve">
          <source>A warning message now displays if you attempt to run the Cypress binary directly instead of going through the cypress &lt;code&gt;npm&lt;/code&gt; package. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1573&quot;&gt;#1573&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01f34861fe99b073d912bfb0b6ea824270ea5697" translate="yes" xml:space="preserve">
          <source>A warning now displays for Windows&amp;rsquo; users who have Group Policy settings that may interfere with usage of Cypress. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4391&quot;&gt;#4391&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="290018fc2a099c3e8b64d9f43cba38531bf6d419" translate="yes" xml:space="preserve">
          <source>A/B campaign</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24d63ea465507d59c76d019931b52efbbf9df394" translate="yes" xml:space="preserve">
          <source>AND an element between that ancestor and the element is &lt;code&gt;position: absolute&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ecafa832cc1855d7bcd4f8a778fb0b028fcb38b" translate="yes" xml:space="preserve">
          <source>AND it is positioned outside that ancestor&amp;rsquo;s bounds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a73d34b7b9d695d431b6723695626d92d0b1b333" translate="yes" xml:space="preserve">
          <source>AND that ancestor has &lt;code&gt;width&lt;/code&gt; or &lt;code&gt;height&lt;/code&gt; of &lt;code&gt;0&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="317c5ffb7fe808a6e1be6b4b76b6eb8f8179a73d" translate="yes" xml:space="preserve">
          <source>AND that ancestor or an ancestor between it and that ancestor is its offset parent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30f26fae58e91da47204f8d279687210eab29352" translate="yes" xml:space="preserve">
          <source>AND the element is &lt;code&gt;position: relative&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d93d10ff0fbef1b4aa0ddc24e10e907746d3c85a" translate="yes" xml:space="preserve">
          <source>API</source>
          <target state="translated">API</target>
        </trans-unit>
        <trans-unit id="a1d427a5e0d80558585e25176d4f92a7fed02a6c" translate="yes" xml:space="preserve">
          <source>Aborting currently running tests performance improvement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7ef135b946ea78679a2165fe90a2ae330982b52" translate="yes" xml:space="preserve">
          <source>Above all else Cypress has been built for usability.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64c8e6b86f54b35a29fcbda3925cad68c0989a44" translate="yes" xml:space="preserve">
          <source>Accept or reject requests to join your organization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ee644ff2b908d423c2045ace980ff33c26085e1" translate="yes" xml:space="preserve">
          <source>Accept or reject transferred project</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9b35d7a3356e6e177e58f9b22e1ab424a76b63b" translate="yes" xml:space="preserve">
          <source>Accept user requests to join organization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30de51af8df6b6a7f6b6d26a113fa5e2eea54415" translate="yes" xml:space="preserve">
          <source>Accepts</source>
          <target state="translated">Accepts</target>
        </trans-unit>
        <trans-unit id="25f18d004afe6b9356cff1665c0cf326ea84f194" translate="yes" xml:space="preserve">
          <source>Access cross-origin iframes that are embedded in your application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a42c6d16acfae06e97f971139a4454dfdb21cc9" translate="yes" xml:space="preserve">
          <source>Access function properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c20383b57d885fe6c43ae52d409416356f1f6198" translate="yes" xml:space="preserve">
          <source>Access the clock object to restore native functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c9d63176947d6af1db78afd91d3e90c663db857" translate="yes" xml:space="preserve">
          <source>Access the clock object to synchronously move time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac914d8dce3a0cfc8761ecbcbc0113f68c908c56" translate="yes" xml:space="preserve">
          <source>Access the privileged browser APIs for automation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b82c078d0fe2b5b78cc199a9c3a8aa3e3ac0e81" translate="yes" xml:space="preserve">
          <source>Access to Runs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce1541d69e26a1cf454829e26e1010975d98e648" translate="yes" xml:space="preserve">
          <source>Accessing &lt;code&gt;requestJSON&lt;/code&gt; or &lt;code&gt;responseJSON&lt;/code&gt; on XHR objects is deprecated, and will be removed in the next version. Accessing those properties will throw a warning which explains how to rewrite these.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23670cac5d8ae3d7207121295d029e40d439c1a8" translate="yes" xml:space="preserve">
          <source>Accessing Fixture Data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47b70ad8919bc3a4b731e1035c22042fb570b139" translate="yes" xml:space="preserve">
          <source>Accessing Fixtures:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46951a534a3aa4c9e947b6849c02a1851f26da71" translate="yes" xml:space="preserve">
          <source>Accessing aliases as properties with &lt;code&gt;this.*&lt;/code&gt; will not work if you use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions&quot;&gt;arrow functions&lt;/a&gt; for your tests or hooks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef23a294abc9df259d292631109aa42ac8026740" translate="yes" xml:space="preserve">
          <source>Accessing the DOM elements returned from the query works differently, however:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75899d8776d0fa66e659c9588760b131f2ed3750" translate="yes" xml:space="preserve">
          <source>Action commands will now insert an artificial delay after resolving to enable modern JavaScript frameworks time to &lt;em&gt;flush&lt;/em&gt; their run loops. snapshots are delayed until after the action, resulting in more accurate snapshots because JavaScript frameworks would not process these DOM events until &lt;code&gt;N&lt;/code&gt; milliseconds after they occurred. This has the unfortunate side effect of &lt;em&gt;decreasing&lt;/em&gt; performance by about &lt;em&gt;5-10%&lt;/em&gt; but the end result is that it is much easier to debug and Cypress is less prone to flake caused by modern JavaScript frameworks. This change comes after collecting many data points and this was one of the easiest changes that help reduce flake. For users that don&amp;rsquo;t use the latest and greatest JavaScript frameworks, this action delay can be reduced through &lt;code&gt;cypress.json&lt;/code&gt; which may speed up large test suites.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89afb24edd48b193270ea8e56dd8a358c4d6c656" translate="yes" xml:space="preserve">
          <source>Actionability</source>
          <target state="translated">Actionability</target>
        </trans-unit>
        <trans-unit id="4e05e171b00b9dca3cc512b7860a360dbb746328" translate="yes" xml:space="preserve">
          <source>Activates the &lt;code&gt;altKey&lt;/code&gt; modifier. Aliases: &lt;code&gt;{option}&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4886522b2418a115a77bdcb1b74028da966bc7d" translate="yes" xml:space="preserve">
          <source>Activates the &lt;code&gt;ctrlKey&lt;/code&gt; modifier. Aliases: &lt;code&gt;{control}&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41021c4f97b7b140083047ebbdb57cf2c771b279" translate="yes" xml:space="preserve">
          <source>Activates the &lt;code&gt;metaKey&lt;/code&gt; modifier. Aliases: &lt;code&gt;{command}&lt;/code&gt;, &lt;code&gt;{cmd}&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d24b318781acca1c2f32e4dfea8155db0dcbd5e5" translate="yes" xml:space="preserve">
          <source>Activates the &lt;code&gt;shiftKey&lt;/code&gt; modifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b0b8fda9597a4e3911603d8dfc0ff00e2ed009a" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;data-*&lt;/code&gt; attributes to make it easy to target elements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="813f96f2b9fcbf65e6eab3dc4904a5edc588b225" translate="yes" xml:space="preserve">
          <source>Add TypeScript support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12b2adc8afc8dde51f6cbbc730cd18bfc98e5085" translate="yes" xml:space="preserve">
          <source>Add a test file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9e956dccfaaf09425b66f1385ddc55b513d4513" translate="yes" xml:space="preserve">
          <source>Add basic auth headers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="675fbfb96b9ca59e30b7ea5130a52ce8aa6c0d77" translate="yes" xml:space="preserve">
          <source>Add data to the DOM that you can read off to know how to proceed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc2b026c34bc01653cb4af58193864b99363417f" translate="yes" xml:space="preserve">
          <source>Add jest assertion style to Cypress expect command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="762bbceb33cb667931de16146905fd85dbbb5e2e" translate="yes" xml:space="preserve">
          <source>Add new section to &lt;a href=&quot;../guides/debugging#Chrome-extension-whitelisting&quot;&gt;Debugging&lt;/a&gt; doc explaining whitelisting the Cypress Chrome extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99fe9505d3b48a2078785dabeda278be97dd9a09" translate="yes" xml:space="preserve">
          <source>Add or delete record keys</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b352d12b4a8f09762accb00635681ce881bb5450" translate="yes" xml:space="preserve">
          <source>Add support for CoffeeScript &lt;code&gt;2.x.x&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c16f7cd8bba9fce88ffeb46cec912de3f2665b22" translate="yes" xml:space="preserve">
          <source>Add support for TypeScript</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88beb178e10ea2c4ec490173c33d5e67221061a9" translate="yes" xml:space="preserve">
          <source>Add the Cypress waiting power to virtually everything 🎉</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d923b00dc3f5004189b8a9db7b5cbb1b5abbe89" translate="yes" xml:space="preserve">
          <source>Add the latest ES* support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="232372d917ec8db7a818cfb4e2c0826410ae2e01" translate="yes" xml:space="preserve">
          <source>Add your own Babel plugins</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dcaf7e80e94c488fe9f9114143d7bce1bc8ff8c" translate="yes" xml:space="preserve">
          <source>Add your own event listeners to respond to your application. You could update your application code to behave differently when under tests in Cypress. You can control WebSocket messages from within Cypress, conditionally load 3rd party scripts, or call functions directly on your application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7238e98cb13917b76ac57214c717ad767fb21206" translate="yes" xml:space="preserve">
          <source>Add, edit, remove user in default organization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="306b0e1724308da443e32244049011a5661d39a6" translate="yes" xml:space="preserve">
          <source>Added &amp;ldquo;invisible&amp;rdquo; icon to a command when its matched element(s) are invisible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4462bebad3e4d3b652571b918f6d190d13a24bfa" translate="yes" xml:space="preserve">
          <source>Added &amp;lsquo;Alias&amp;rsquo; for assertions that are aliases of each other to &lt;a href=&quot;assertions&quot;&gt;&lt;code&gt;Assertions&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c8a6ad9ec2c3e5652ab00101107c94818bb647b" translate="yes" xml:space="preserve">
          <source>Added &amp;lsquo;History&amp;rsquo; table to &lt;a href=&quot;../../api/commands/wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e47abe5880b453ebcdc3038f29771a5c64551d8" translate="yes" xml:space="preserve">
          <source>Added / Updated FAQ for &amp;ldquo;Using Cypress&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29e24f67976bf03d0d9cbbdff8bba7280b7c251c" translate="yes" xml:space="preserve">
          <source>Added 100+ new tests surrounding serving remote content and processing requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="217cb9d19d88244e09dcce484ba60897c97de369" translate="yes" xml:space="preserve">
          <source>Added 100+ tests covering Runner + Reporter behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5884ab37dca79bbcf8bbde422df29d71131cfb57" translate="yes" xml:space="preserve">
          <source>Added &lt;a href=&quot;../../api/commands/getcookies&quot;&gt;&lt;code&gt;cy.getCookies()&lt;/code&gt;&lt;/a&gt; command for easy chain-ability. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/103&quot;&gt;#103&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="260dddf6aa170eb3db693317117f43beb5cb7a6b" translate="yes" xml:space="preserve">
          <source>Added &lt;a href=&quot;../../api/commands/not&quot;&gt;&lt;code&gt;.not()&lt;/code&gt;&lt;/a&gt; traversal filtering method. Suggested in &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/16&quot;&gt;#16&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77a47a776ae7e39759941332075f0f02966572fc" translate="yes" xml:space="preserve">
          <source>Added &lt;a href=&quot;../../api/commands/reload&quot;&gt;&lt;code&gt;cy.reload()&lt;/code&gt;&lt;/a&gt; command which does a full page refresh. This is the same as the user hitting the &amp;lsquo;Reload&amp;rsquo; button. Additionally it matches the same argument signature as &lt;code&gt;window.location.reload&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="653ef9e473f177eab5b21fa4d4048f9e6dc172b9" translate="yes" xml:space="preserve">
          <source>Added &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; command which can issue XHR requests. The request is generated outside of the browser, and bypasses all CORS restrictions. Great for talking to an API for seeding, querying, building, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38e8077397a9c5bdd2dc2e8e71adcfd98149ddb3" translate="yes" xml:space="preserve">
          <source>Added &lt;a href=&quot;../../api/commands/spread&quot;&gt;&lt;code&gt;.spread()&lt;/code&gt;&lt;/a&gt; method which spreads an array as individual arguments to a callback function,like &lt;a href=&quot;../../api/commands/then&quot;&gt;&lt;code&gt;.then()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1464e6afdab5381909f6bee87cfececae844ead" translate="yes" xml:space="preserve">
          <source>Added &lt;a href=&quot;../../api/commands/wrap&quot;&gt;&lt;code&gt;cy.wrap()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b08d619f6ed3067cfcef575cabce1a1a5cb4ea2c" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;.log(bool)&lt;/code&gt; method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2e5f28a3136c1f4e0bc7af9d12f7467565d7b42" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;.zip&lt;/code&gt; as acceptable fixture extension. Content is sent back as &lt;code&gt;base64&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7066a95fe0bd9ccddc54db3de4b967536509d8bc" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;About&lt;/code&gt; page in desktop application annotating the current version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a46866af385ffafdc013982d06bc15bc219e72af" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;Browser Launch API&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="983c6076017cec112d960792b3a6d94bc82eaa66" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;Configuration API&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5e1ed6043e0e630cb1c3029551dfcf0aa46c336" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;Cypress.arch&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8136fda7db1d7916a01489971ca0efd1b7d3a8f2" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;Cypress.browser&lt;/code&gt; doc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="556ef628d03920c0621e25e617096ff22129c4c8" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;Cypress.browser&lt;/code&gt; object which contains information about the currently running browser. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1919&quot;&gt;#1919&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1961&quot;&gt;#1961&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc72b868a2c7be11acaeca8dac0e12d6efa7baa0" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;Cypress.platform&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8f2ff12b123c212486be50d715b050db0a13c70" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;Cypress.spec&lt;/code&gt; doc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ba842dc1986030cbf989d78d79ea9a4f069ebea" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;Cypress.spec&lt;/code&gt; object which contains information about the currently running spec. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1918&quot;&gt;#1918&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
