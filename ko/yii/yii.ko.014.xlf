<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="yii">
    <body>
      <group id="yii">
        <trans-unit id="05e6432034ef916c839ed453942007df9bbc7e35" translate="yes" xml:space="preserve">
          <source>If a relation name corresponds to multiple links, use an array to represent them.</source>
          <target state="translated">관계 이름이 여러 링크에 해당하는 경우 배열을 사용하여이를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="07fc1fbe30461163a4d7edb3d7b9c41f2deb4130" translate="yes" xml:space="preserve">
          <source>If a relation query does not need modification, you may use the relation name as the array value.</source>
          <target state="translated">관계 쿼리를 수정할 필요가없는 경우 관계 이름을 배열 값으로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2893ac46b4db20dcedcb8dbcb59c152f70a87929" translate="yes" xml:space="preserve">
          <source>If a table name is given as &lt;code&gt;{{%TableName}}&lt;/code&gt;, then the percentage character &lt;code&gt;%&lt;/code&gt; will be replaced with the table prefix. For example, &lt;code&gt;{{%post}}&lt;/code&gt; becomes &lt;code&gt;{{tbl_post}}&lt;/code&gt;. The brackets around the table name are used for &lt;a href=&quot;guide-db-dao#quoting-table-and-column-names&quot;&gt;quoting in an SQL query&lt;/a&gt;.</source>
          <target state="translated">테이블 이름이 &lt;code&gt;{{%TableName}}&lt;/code&gt; 이면 백분율 문자 &lt;code&gt;%&lt;/code&gt; 가 테이블 접두어로 바뀝니다. 예를 들어 &lt;code&gt;{{%post}}&lt;/code&gt; 는 &lt;code&gt;{{tbl_post}}&lt;/code&gt; 가 됩니다. 테이블 이름 주위의 괄호 &lt;a href=&quot;guide-db-dao#quoting-table-and-column-names&quot;&gt;는 SQL 쿼리에서 인용&lt;/a&gt; 하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="223600ba55b08146154a14f8154fbb1bbc5531c7" translate="yes" xml:space="preserve">
          <source>If a translation is not found, a &lt;a href=&quot;yii-i18n-messagesource#EVENT_MISSING_TRANSLATION-detail&quot;&gt;missingTranslation&lt;/a&gt; event will be triggered.</source>
          <target state="translated">번역을 찾을 수 &lt;a href=&quot;yii-i18n-messagesource#EVENT_MISSING_TRANSLATION-detail&quot;&gt;없으면 missingTranslation&lt;/a&gt; 이벤트가 트리거됩니다.</target>
        </trans-unit>
        <trans-unit id="38ce3549db44a118e6b64c9cfe24960da7174370" translate="yes" xml:space="preserve">
          <source>If a type cannot be found in &lt;a href=&quot;yii-db-querybuilder#%24typeMap-detail&quot;&gt;$typeMap&lt;/a&gt;, it will be returned without any change.</source>
          <target state="translated">&lt;a href=&quot;yii-db-querybuilder#%24typeMap-detail&quot;&gt;$ typeMap&lt;/a&gt; 에서 유형을 찾을 수 없으면 변경없이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="95b2951225cd70cf76423e2a351e9210a631d915" translate="yes" xml:space="preserve">
          <source>If a value is &lt;code&gt;null&lt;/code&gt;, the corresponding attribute will not be rendered.</source>
          <target state="translated">값이 &lt;code&gt;null&lt;/code&gt; 인 경우 해당 속성이 렌더링되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3c08e7ad31eb045621b72a7b1ab5f79522b335b2" translate="yes" xml:space="preserve">
          <source>If a view is rendered within another view, the directory containing the other view file will be prefixed to the new view name to form the actual view file path. For example, &lt;code&gt;item&lt;/code&gt; will be resolved into &lt;code&gt;@app/views/post/item.php&lt;/code&gt; if it is being rendered in the view &lt;code&gt;@app/views/post/index.php&lt;/code&gt;.</source>
          <target state="translated">뷰가 다른 뷰 내에서 렌더링되면 다른 뷰 파일을 포함하는 디렉토리 앞에 새 뷰 이름이 접두어가되어 실제 뷰 파일 경로가 형성됩니다. 예를 들어 &lt;code&gt;item&lt;/code&gt; 이 &lt;code&gt;@app/views/post/index.php&lt;/code&gt; 에서 렌더링되는 경우 &lt;code&gt;@app/views/post/item.php&lt;/code&gt; 됩니다 .</target>
        </trans-unit>
        <trans-unit id="a742dbe317b1b848b9f3c6ded469a88e7aa150e3" translate="yes" xml:space="preserve">
          <source>If access is granted</source>
          <target state="translated">액세스 권한이 부여 된 경우</target>
        </trans-unit>
        <trans-unit id="42e7d85c50bf4c4991b2a8033db2a13ae6a18d3e" translate="yes" xml:space="preserve">
          <source>If additional transformations are required or the way of getting value is complex, second argument could be specified as an anonymous function:</source>
          <target state="translated">추가 변환이 필요하거나 가치를 얻는 방법이 복잡한 경우 두 번째 인수를 익명 함수로 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b9ceff565c106def18cbb9d250587250aa578794" translate="yes" xml:space="preserve">
          <source>If address is already in use</source>
          <target state="translated">주소가 이미 사용중인 경우</target>
        </trans-unit>
        <trans-unit id="6ce5090ec8349b3b513dc3d84a59303a02cb6be7" translate="yes" xml:space="preserve">
          <source>If all the CRUD operations are managed together then it's a good idea to use a single permission, like &lt;code&gt;managePost&lt;/code&gt;, and check it in &lt;a href=&quot;yii-web-controller#beforeAction()-detail&quot;&gt;yii\web\Controller::beforeAction()&lt;/a&gt;.</source>
          <target state="translated">모든 CRUD 작업이 함께 관리되는 경우 &lt;code&gt;managePost&lt;/code&gt; 와 같은 단일 권한을 사용하고 yii &lt;a href=&quot;yii-web-controller#beforeAction()-detail&quot;&gt;\ web \ Controller :: beforeAction ()&lt;/a&gt; 에서 확인 하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="6b2e25615ef256ccccfd5d502967e33985ff1a0d" translate="yes" xml:space="preserve">
          <source>If all you need is plain text then escaping is as easy as the following:</source>
          <target state="translated">일반 텍스트 만 있으면 다음과 같이 쉽게 이스케이프 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2c3dee110b5c42fa6eb43d86ddbcfcf0a649fcf2" translate="yes" xml:space="preserve">
          <source>If an attribute fails the validation, the method/function should call &lt;a href=&quot;yii-base-model#addError()-detail&quot;&gt;yii\base\Model::addError()&lt;/a&gt; to save the error message in the model so that it can be retrieved back later to present to end users.</source>
          <target state="translated">속성이 유효성 검사에 실패하면 메서드 / 함수는 &lt;a href=&quot;yii-base-model#addError()-detail&quot;&gt;yii \ base \ Model :: addError ()&lt;/a&gt; 를 호출 하여 오류 메시지를 모델에 저장하여 나중에 다시 검색하여 최종 사용자에게 제공 할 수 있도록해야합니다.</target>
        </trans-unit>
        <trans-unit id="997fe1e2325ed5be0a8af05fc54f08dc290b7b4a" translate="yes" xml:space="preserve">
          <source>If an attribute value is an instance of &lt;a href=&quot;yii-db-activerecordinterface&quot;&gt;yii\db\ActiveRecordInterface&lt;/a&gt; or an array of such instances, the primary value(s) of the AR instance(s) will be returned instead.</source>
          <target state="translated">속성 값이 &lt;a href=&quot;yii-db-activerecordinterface&quot;&gt;yii \ db \ ActiveRecordInterface&lt;/a&gt; 의 인스턴스 이거나 이러한 인스턴스의 배열 인 경우 AR 인스턴스의 기본 값이 대신 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="7d137b7f63db74e30d1896ed425bcda906a256fd" translate="yes" xml:space="preserve">
          <source>If an extension does not have a class autoloader but follows the &lt;a href=&quot;http://www.php-fig.org/psr/psr-4/&quot;&gt;PSR-4 standard&lt;/a&gt;, you may use the class autoloader provided by Yii to autoload the extension classes. All you need to do is just to declare a &lt;a href=&quot;guide-concept-aliases#defining-aliases&quot;&gt;root alias&lt;/a&gt; for the extension root directory. For example, assuming you have installed an extension in the directory &lt;code&gt;vendor/mycompany/myext&lt;/code&gt;, and the extension classes are under the &lt;code&gt;myext&lt;/code&gt; namespace, then you can include the following code in your application configuration:</source>
          <target state="translated">확장에 클래스 자동 로더가 없지만 &lt;a href=&quot;http://www.php-fig.org/psr/psr-4/&quot;&gt;PSR-4 표준을&lt;/a&gt; 따르는 경우 Yii에서 제공하는 클래스 자동 로더를 사용하여 확장 클래스를 자동로드 할 수 있습니다. 확장 루트 디렉토리에 대한 &lt;a href=&quot;guide-concept-aliases#defining-aliases&quot;&gt;루트 별명&lt;/a&gt; 을 선언하기 만하면됩니다 . 예를 들어, &lt;code&gt;vendor/mycompany/myext&lt;/code&gt; 디렉토리에 확장을 설치 하고 확장 클래스가 &lt;code&gt;myext&lt;/code&gt; 네임 스페이스 아래에 있다고 가정하면 애플리케이션 구성에 다음 코드를 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c25ebc5293d0e152bf2e20dfb7ff919b2c15aa1a" translate="yes" xml:space="preserve">
          <source>If any of the above steps resolves into a controller, it is returned together with the rest part of the route which will be treated as the action ID. Otherwise, &lt;code&gt;false&lt;/code&gt; will be returned.</source>
          <target state="translated">위의 단계 중 하나라도 컨트롤러로 해결되면 라우트의 나머지 부분과 함께 리턴되어 조치 ID로 처리됩니다. 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="3ec5aa866b1b32b89aad2e953478986516e2daf4" translate="yes" xml:space="preserve">
          <source>If any of the filters cancel the action execution, the filters (both pre-filters and post-filters) after it will not be applied.</source>
          <target state="translated">필터 중 하나가 작업 실행을 취소하면 필터 (사전 필터 및 사후 필터 모두)는 적용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a7a45bbff22367b061c745ed6d5e7b26e6210ab0" translate="yes" xml:space="preserve">
          <source>If array - request data, otherwise - request content.</source>
          <target state="translated">배열이 데이터를 요청하면 그렇지 않으면 컨텐츠를 요청합니다.</target>
        </trans-unit>
        <trans-unit id="f62c088ec033fbb93dcb286068f7ebdb02e96cf9" translate="yes" xml:space="preserve">
          <source>If array given, each element of it will be processed.</source>
          <target state="translated">배열이 주어지면 각 요소가 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="f11e980ab02eb3b139dff315ba27380bfafd2c82" translate="yes" xml:space="preserve">
          <source>If authentication fails, a response with HTTP status 401 will be sent back together with other appropriate headers (such as a &lt;code&gt;WWW-Authenticate&lt;/code&gt; header for HTTP Basic Auth).</source>
          <target state="translated">인증이 실패하면 HTTP 상태가 401 인 응답이 다른 적절한 헤더 (예 : HTTP 기본 인증 의 &lt;code&gt;WWW-Authenticate&lt;/code&gt; 헤더) 와 함께 다시 전송됩니다 .</target>
        </trans-unit>
        <trans-unit id="a559c001a5940e739fca0014d88e55097e606bdc" translate="yes" xml:space="preserve">
          <source>If authentication succeeds, the controller will perform other checks (such as rate limiting, authorization) and then run the action. The authenticated user identity information can be retrieved via &lt;code&gt;Yii::$app-&amp;gt;user-&amp;gt;identity&lt;/code&gt;.</source>
          <target state="translated">인증에 성공하면 컨트롤러는 다른 검사 (예 : 속도 제한, 권한 부여)를 수행 한 다음 작업을 실행합니다. 인증 된 사용자 신원 정보는 &lt;code&gt;Yii::$app-&amp;gt;user-&amp;gt;identity&lt;/code&gt; 를 통해 검색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7812529036e081ea6133baea3187ec5f297cd136" translate="yes" xml:space="preserve">
          <source>If base value is set</source>
          <target state="translated">기본 값이 설정된 경우</target>
        </trans-unit>
        <trans-unit id="b6b4e127b6d8e4bcf8dd852f2b2a2081b7d3c9ea" translate="yes" xml:space="preserve">
          <source>If body is already set and its content type matches given one, it will be overridden, if content type miss match the multipart message will be composed.</source>
          <target state="translated">본문이 이미 설정되어 있고 컨텐츠 유형이 일치하면 컨텐츠 유형이 일치하지 않으면 멀티 파트 메시지가 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="099aa1cd3808f580f4372e95a7c4d749a4dd6082" translate="yes" xml:space="preserve">
          <source>If both Last-Modified and ETag are null, returns false.</source>
          <target state="translated">Last-Modified와 ETag가 모두 null이면 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b250fde6ec6530eee061bbc13257eb5eb95a76a7" translate="yes" xml:space="preserve">
          <source>If bundle should be published</source>
          <target state="translated">번들을 공개해야하는 경우</target>
        </trans-unit>
        <trans-unit id="0517f838ae9ee8f77b88300f42a2b3f09eae86fa" translate="yes" xml:space="preserve">
          <source>If data is used to specify column names or table names the best thing to do is to allow only predefined set of values:</source>
          <target state="translated">데이터가 열 이름 또는 테이블 이름을 지정하는 데 사용되는 경우 사전 정의 된 값 세트 만 허용하는 것이 가장 좋습니다.</target>
        </trans-unit>
        <trans-unit id="031596c967f1eed4d6c72b62b771db2ff232f37d" translate="yes" xml:space="preserve">
          <source>If each array has an element with the same string key value, the latter will overwrite the former (different from array_merge_recursive). Recursive merging will be conducted if both arrays have an element of array type and are having the same key. For integer-keyed elements, the elements from the latter array will be appended to the former array. You can use &lt;a href=&quot;yii-helpers-unsetarrayvalue&quot;&gt;yii\helpers\UnsetArrayValue&lt;/a&gt; object to unset value from previous array or &lt;a href=&quot;yii-helpers-replacearrayvalue&quot;&gt;yii\helpers\ReplaceArrayValue&lt;/a&gt; to force replace former value instead of recursive merging.</source>
          <target state="translated">각 배열에 동일한 문자열 키 값을 가진 요소가 있으면 후자가 전자를 덮어 씁니다 (array_merge_recursive와 다름). 두 배열 모두 배열 유형의 요소를 가지고 동일한 키를 가지고있는 경우 재귀 병합이 수행됩니다. 정수 키 요소의 경우 후자 배열의 요소가 이전 배열에 추가됩니다. 당신은 사용할 수 있습니다 &lt;a href=&quot;yii-helpers-unsetarrayvalue&quot;&gt;YII \ 도우미 \ UnsetArrayValue&lt;/a&gt; 이전 배열 또는에서 해제 값으로 객체를 &lt;a href=&quot;yii-helpers-replacearrayvalue&quot;&gt;YII \ 도우미 \ ReplaceArrayValue&lt;/a&gt; 대신 재귀 합병 전 값을 바꿀 힘.</target>
        </trans-unit>
        <trans-unit id="a30c1dbc1ae9c5879108573ac9579e937826a5e4" translate="yes" xml:space="preserve">
          <source>If error is one of fatal type</source>
          <target state="translated">오류가 치명적인 유형 중 하나 인 경우</target>
        </trans-unit>
        <trans-unit id="7aa6da69fd6b2a24ac80f07abc11630fe37a3dc4" translate="yes" xml:space="preserve">
          <source>If existing file should be overwritten without backup</source>
          <target state="translated">기존 파일을 백업하지 않고 덮어 써야하는 경우</target>
        </trans-unit>
        <trans-unit id="a594b4be4fca8e7c5b2346783e67846f1d48aef4" translate="yes" xml:space="preserve">
          <source>If false carousel indicators (</source>
          <target state="translated">잘못된 캐 러셀 표시기 (</target>
        </trans-unit>
        <trans-unit id="afa90e727a43a2ed8bd10b9879eba1564cb612ef" translate="yes" xml:space="preserve">
          <source>If intl extension is loaded</source>
          <target state="translated">국제선 확장 프로그램이로드 된 경우</target>
        </trans-unit>
        <trans-unit id="78ade4d7e982d95934c57c2a009b333e29b4a3c1" translate="yes" xml:space="preserve">
          <source>If intl extension isn't available uses fallback that converts latin characters only and removes the rest. You may customize characters map via $transliteration property of the helper.</source>
          <target state="translated">intl 확장명을 사용할 수없는 경우 라틴 문자 만 변환하고 나머지는 제거하는 대체를 사용합니다. 도우미의 $ transliteration 속성을 통해 문자표를 사용자 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2474b60b32e60e2e083dde1c95d1593a697cdc0a" translate="yes" xml:space="preserve">
          <source>If it is the first time you are releasing an extension, you should register it on a Composer repository, such as &lt;a href=&quot;https://packagist.org/&quot;&gt;Packagist&lt;/a&gt;. After that, all you need to do is simply create a release tag (e.g. &lt;code&gt;v1.0.1&lt;/code&gt;) on the VCS repository of your extension and notify the Composer repository about the new release. People will then be able to find the new release, and install or update the extension through the Composer repository.</source>
          <target state="translated">확장을 처음 릴리스하는 경우 &lt;a href=&quot;https://packagist.org/&quot;&gt;Packagist&lt;/a&gt; 와 같은 Composer 저장소에 등록해야합니다 . 그런 다음 확장의 VCS 저장소에 릴리스 태그 (예 : &lt;code&gt;v1.0.1&lt;/code&gt; )를 작성 하고 새 릴리스에 대해 Composer 저장소에 알리기 만하면 됩니다. 그러면 사람들은 새 릴리스를 찾고 Composer 저장소를 통해 확장을 설치하거나 업데이트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bdce04541a3e084a3c66dc7fd4de0a0f84a1805c" translate="yes" xml:space="preserve">
          <source>If it should be HTML we could get some help from HtmlPurifier:</source>
          <target state="translated">HTML이어야한다면 HtmlPurifier로부터 도움을 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ecb86142fffc322bbba2009336aba359bb8dd102" translate="yes" xml:space="preserve">
          <source>If it's the case don't forget to deny access to everything except &lt;code&gt;web&lt;/code&gt;. If it can't be done consider hosting your application elsewhere.</source>
          <target state="translated">이 경우 &lt;code&gt;web&lt;/code&gt; 제외한 모든 것에 대한 액세스를 거부하는 것을 잊지 마십시오 . 완료 할 수 없으면 다른 곳에서 응용 프로그램을 호스팅하십시오.</target>
        </trans-unit>
        <trans-unit id="8507a4cf09db708e4fbf14ec0335fbe6f901f5a0" translate="yes" xml:space="preserve">
          <source>If message was sent successfully.</source>
          <target state="translated">메시지가 성공적으로 전송되었습니다.</target>
        </trans-unit>
        <trans-unit id="5f92506f19def9069d6a88ef5be3bcb4d1bf0df2" translate="yes" xml:space="preserve">
          <source>If most of your DB tables names share a common prefix, you may use the table prefix feature provided by Yii DAO.</source>
          <target state="translated">대부분의 DB 테이블 이름이 공통 접두사를 공유하는 경우 Yii DAO에서 제공하는 테이블 접두사 기능을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="73e3fd63985d864c72e16bb65657fa000e1864fb" translate="yes" xml:space="preserve">
          <source>If need to build models from log messages and refresh them.</source>
          <target state="translated">로그 메시지에서 모델을 빌드하고 새로 고쳐야하는 경우</target>
        </trans-unit>
        <trans-unit id="1bb5f9bd79229e1bf9ddf5f5527086670488a827" translate="yes" xml:space="preserve">
          <source>If needed you can pass transaction isolation level as a second parameter:</source>
          <target state="translated">필요한 경우 트랜잭션 격리 수준을 두 번째 매개 변수로 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="24f76137c3d1ac0a7da27dfd4aae8dc782056714" translate="yes" xml:space="preserve">
          <source>If no error happens during deletion</source>
          <target state="translated">삭제 중에 오류가 발생하지 않으면</target>
        </trans-unit>
        <trans-unit id="179b61a5213f3bcea415d706500dd7f533cc6a41" translate="yes" xml:space="preserve">
          <source>If no parameter is passed, the generated URL is relative. You can either pass &lt;code&gt;true&lt;/code&gt; to get an absolute URL for the current schema or specify a schema explicitly (&lt;code&gt;https&lt;/code&gt;, &lt;code&gt;http&lt;/code&gt;).</source>
          <target state="translated">매개 변수가 전달되지 않으면 생성 된 URL이 상대적입니다. &lt;code&gt;true&lt;/code&gt; 를 전달 하여 현재 스키마의 절대 URL을 얻거나 스키마를 명시 적으로 지정하십시오 ( &lt;code&gt;https&lt;/code&gt; , &lt;code&gt;http&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="f9d379a49170ee8cca999f33f9b2c03d2170a703" translate="yes" xml:space="preserve">
          <source>If no renderer is available for the given view file, the view file will be treated as a normal PHP and rendered via &lt;a href=&quot;yii-base-view#renderPhpFile()-detail&quot;&gt;renderPhpFile()&lt;/a&gt;.</source>
          <target state="translated">주어진 뷰 파일에 사용할 수있는 렌더러가 없으면 뷰 파일은 일반 PHP로 처리되고 &lt;a href=&quot;yii-base-view#renderPhpFile()-detail&quot;&gt;renderPhpFile ()을&lt;/a&gt; 통해 렌더링됩니다 .</target>
        </trans-unit>
        <trans-unit id="e18ed81a57461e23b23fb56496f6f86cd9732a5a" translate="yes" xml:space="preserve">
          <source>If none of the above operators is detected, the &lt;code&gt;$defaultOperator&lt;/code&gt; will be used.</source>
          <target state="translated">위의 연산자 중 어느 것도 감지되지 않으면 &lt;code&gt;$defaultOperator&lt;/code&gt; 가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="4c47821db582b0de51f4d0ce64e727247b64ab77" translate="yes" xml:space="preserve">
          <source>If not listed by this method, attributes retrieved through &lt;a href=&quot;yii-elasticsearch-query#fields()-detail&quot;&gt;yii\elasticsearch\ActiveQuery::fields()&lt;/a&gt; will converted to a scalar value when the result array contains only one value.</source>
          <target state="translated">이 메소드로 나열되지 않은 경우 결과 배열에 하나의 값만 포함되어 있으면 &lt;a href=&quot;yii-elasticsearch-query#fields()-detail&quot;&gt;yii \ elasticsearch \ ActiveQuery :: fields ()&lt;/a&gt; 를 통해 검색된 속성이 스칼라 값으로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="9b2b751adffebf8c2af7b0a71526c135c0fdfa67" translate="yes" xml:space="preserve">
          <source>If not set - &lt;a href=&quot;yii-db-queryinterface#one()-detail&quot;&gt;yii\db\QueryInterface::one()&lt;/a&gt; will be used.</source>
          <target state="translated">설정하지 않으면 &lt;a href=&quot;yii-db-queryinterface#one()-detail&quot;&gt;yii \ db \ QueryInterface :: one ()&lt;/a&gt; 이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="3e0ffcd889630e8aed7165b8c3be21bb87924e9a" translate="yes" xml:space="preserve">
          <source>If not set - application 'session' component will be used, but only, if it is available (e.g. in web application), otherwise - no session will be used and no data saving will be performed.</source>
          <target state="translated">설정되지 않은 경우-애플리케이션 '세션'컴포넌트가 사용되지만 사용 가능한 경우에만 (예 : 웹 애플리케이션) 그렇지 않으면-세션이 사용되지 않고 데이터 저장이 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fb62da5c6478461f9eac123c021de7dab78d8b3f" translate="yes" xml:space="preserve">
          <source>If not set explicitly in the application config, this property will be populated with the contents of &lt;code&gt;@vendor/yiisoft/extensions.php&lt;/code&gt;.</source>
          <target state="translated">응용 프로그램 구성에서 명시 적으로 설정하지 않으면이 속성은 &lt;code&gt;@vendor/yiisoft/extensions.php&lt;/code&gt; 의 내용으로 채워집니다 .</target>
        </trans-unit>
        <trans-unit id="9b6cb2dfb8e9531ebd9fe6253f3e645ad7009c7c" translate="yes" xml:space="preserve">
          <source>If not set or empty, it means this rule applies to all controllers.</source>
          <target state="translated">설정하지 않거나 비워두면이 규칙이 모든 컨트롤러에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="604e8c580e47b4ca19f15f2f42df59e2a727a9d9" translate="yes" xml:space="preserve">
          <source>If not set the default value will be taken from &lt;code&gt;Yii::$app-&amp;gt;formatter-&amp;gt;dateFormat&lt;/code&gt;.</source>
          <target state="translated">설정하지 않으면 기본값은 &lt;code&gt;Yii::$app-&amp;gt;formatter-&amp;gt;dateFormat&lt;/code&gt; 에서 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="c979fcf344412c1700f08cf7587f16467c67969a" translate="yes" xml:space="preserve">
          <source>If not set unique slug will be generated adding incrementing suffix to the base slug.</source>
          <target state="translated">설정하지 않으면 고유 슬러그가 생성되어 기본 슬러그에 증분 접미사가 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="18f471cd3cabad13614fb92598ccdaa08ec91d8a" translate="yes" xml:space="preserve">
          <source>If not set, &lt;a href=&quot;yii-baseyii#getLogger()-detail&quot;&gt;Yii::getLogger()&lt;/a&gt; will be used.</source>
          <target state="translated">설정하지 않으면 &lt;a href=&quot;yii-baseyii#getLogger()-detail&quot;&gt;Yii :: getLogger ()&lt;/a&gt; 가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d8652222a10e264a872f3456e5e838e863270f75" translate="yes" xml:space="preserve">
          <source>If not set, &lt;a href=&quot;yii-log-target#getMessagePrefix()-detail&quot;&gt;getMessagePrefix()&lt;/a&gt; will be used, which prefixes the message with context information such as user IP, user ID and session ID.</source>
          <target state="translated">설정하지 않으면 &lt;a href=&quot;yii-log-target#getMessagePrefix()-detail&quot;&gt;getMessagePrefix ()&lt;/a&gt; 가 사용되는데, 이는 메시지 앞에 사용자 IP, 사용자 ID 및 세션 ID와 같은 컨텍스트 정보가 붙습니다.</target>
        </trans-unit>
        <trans-unit id="598244aad0b8b5a3d25dc3ad366072c313b162ad" translate="yes" xml:space="preserve">
          <source>If not set, &lt;a href=&quot;yii-validators-datevalidator#%24timestampAttribute-detail&quot;&gt;$timestampAttribute&lt;/a&gt; will receive a UNIX timestamp. If &lt;a href=&quot;yii-validators-datevalidator#%24timestampAttribute-detail&quot;&gt;$timestampAttribute&lt;/a&gt; is not set, this property will be ignored.</source>
          <target state="translated">설정하지 않으면 &lt;a href=&quot;yii-validators-datevalidator#%24timestampAttribute-detail&quot;&gt;$ timestampAttribute&lt;/a&gt; 는 UNIX 타임 스탬프 를받습니다. 경우 &lt;a href=&quot;yii-validators-datevalidator#%24timestampAttribute-detail&quot;&gt;$ timestampAttribute가&lt;/a&gt; 설정되어 있지,이 속성은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="6f0159300f503950ad0cafa083a6a5451887329c" translate="yes" xml:space="preserve">
          <source>If not set, attribute type map will be composed automatically from the owner validation rules.</source>
          <target state="translated">설정하지 않으면 속성 유형 맵이 소유자 유효성 검사 규칙에서 자동으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="c7ba6cf13dbde30bbf876ef13767afa18e0f6f50" translate="yes" xml:space="preserve">
          <source>If not set, it will use the &lt;code&gt;controllers&lt;/code&gt; sub-namespace under the namespace of this module. For example, if the namespace of this module is &lt;code&gt;foo\bar&lt;/code&gt;, then the default controller namespace would be &lt;code&gt;foo\bar\controllers&lt;/code&gt;.</source>
          <target state="translated">설정하지 않으면 이 모듈의 네임 스페이스 아래에 &lt;code&gt;controllers&lt;/code&gt; 하위 네임 스페이스 가 사용됩니다 . 예를 &lt;code&gt;foo\bar&lt;/code&gt; 모듈의 네임 스페이스가 foo \ bar 인 경우 기본 컨트롤러 네임 스페이스는 &lt;code&gt;foo\bar\controllers&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6cb28085c35f61ff67f1625031bdec1323c891ac" translate="yes" xml:space="preserve">
          <source>If not, use radio list:</source>
          <target state="translated">그렇지 않은 경우 라디오 목록을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="79d598537e0ab26c10557e14982c6ecf0e1efced" translate="yes" xml:space="preserve">
          <source>If object tags should be added</source>
          <target state="translated">객체 태그를 추가해야하는 경우</target>
        </trans-unit>
        <trans-unit id="3cc4368a6f2e22b506c6355d54bb9b8354d29db8" translate="yes" xml:space="preserve">
          <source>If obsolete translations should be marked</source>
          <target state="translated">더 이상 사용되지 않는 번역을 표시해야하는 경우</target>
        </trans-unit>
        <trans-unit id="ce2587abda112e3f1ab3670ea7fefe36f3c59a94" translate="yes" xml:space="preserve">
          <source>If obsolete translations should be removed</source>
          <target state="translated">더 이상 사용되지 않는 번역을 제거해야하는 경우</target>
        </trans-unit>
        <trans-unit id="927aca9111385a996b928446d5d0bd9c92ba6744" translate="yes" xml:space="preserve">
          <source>If one of the calls returns &lt;code&gt;false&lt;/code&gt;, the rest of the uncalled &lt;code&gt;beforeAction()&lt;/code&gt; methods will be skipped and the action execution will be cancelled.</source>
          <target state="translated">호출 중 하나가 &lt;code&gt;false&lt;/code&gt; 를 반환하면 호출되지 않은 &lt;code&gt;beforeAction()&lt;/code&gt; 메서드 의 나머지 부분은 건너 뛰고 작업 실행이 취소됩니다.</target>
        </trans-unit>
        <trans-unit id="4e2ffb22a05cead6ff0620f77d289bb40e0357e5" translate="yes" xml:space="preserve">
          <source>If partial match should be used</source>
          <target state="translated">부분 일치를 사용해야하는 경우</target>
        </trans-unit>
        <trans-unit id="075825610310b5c6cb6078260fc13ca717495d28" translate="yes" xml:space="preserve">
          <source>If partial match should be used.</source>
          <target state="translated">부분 일치를 사용해야하는 경우</target>
        </trans-unit>
        <trans-unit id="91dd0765a1c03f17ceb419a01dcf89142fa16a49" translate="yes" xml:space="preserve">
          <source>If request failed</source>
          <target state="translated">요청이 실패한 경우</target>
        </trans-unit>
        <trans-unit id="08a10fa4be221ceef987c0f17fc663e01d397fb0" translate="yes" xml:space="preserve">
          <source>If resolved to an abstract class or an interface (since 2.0.9)</source>
          <target state="translated">추상 클래스 또는 인터페이스로 해석되는 경우 (2.0.9부터)</target>
        </trans-unit>
        <trans-unit id="cd9e4f2310e3dae8708c94347dc9c241334cde3a" translate="yes" xml:space="preserve">
          <source>If response body contains JSON and should be decoded</source>
          <target state="translated">응답 본문에 JSON이 포함되어 있고 디코딩해야하는 경우</target>
        </trans-unit>
        <trans-unit id="fc99290efe0a7a2f4ade2f8d14a22f2dbee5af4c" translate="yes" xml:space="preserve">
          <source>If screen size could not be detected, or the indentation is greater than the screen size, the text will not be wrapped.</source>
          <target state="translated">화면 크기를 감지 할 수 없거나 들여 쓰기가 화면 크기보다 크면 텍스트가 줄 바꿈되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6b9028d582601ca15d2ae87a68345097e5b21da8" translate="yes" xml:space="preserve">
          <source>If set to true, returns the raw string without trimming</source>
          <target state="translated">true로 설정하면 자르지 않고 원시 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5c8947b0d73bad0c2e5251344a1b78b894714e6c" translate="yes" xml:space="preserve">
          <source>If set, this forces a minimum position for javascript files. This will adjust depending assets javascript file position or fail if requirement can not be met. If this is null, asset bundles position settings will not be changed. See &lt;a href=&quot;yii-web-view#registerJsFile()-detail&quot;&gt;registerJsFile()&lt;/a&gt; for more details on javascript position.</source>
          <target state="translated">설정하면 자바 스크립트 파일의 최소 위치를 강제로 설정합니다. 자산 자바 스크립트 파일 위치에 따라 조정되거나 요구 사항을 충족 할 수없는 경우 실패합니다. 이 값이 null이면 자산 번들 위치 설정이 변경되지 않습니다. 자바 스크립트 위치에 대한 자세한 내용 은 &lt;a href=&quot;yii-web-view#registerJsFile()-detail&quot;&gt;registerJsFile ()&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="738fd291d476f5f498d53a1de0155485cd11e05c" translate="yes" xml:space="preserve">
          <source>If simple HTML should be rendered</source>
          <target state="translated">간단한 HTML을 렌더링해야하는 경우</target>
        </trans-unit>
        <trans-unit id="b07125ba6075068db374f5180cb5266ac762a261" translate="yes" xml:space="preserve">
          <source>If some URL rules share the same prefix in their patterns or routes, you may consider using &lt;a href=&quot;yii-web-groupurlrule&quot;&gt;yii\web\GroupUrlRule&lt;/a&gt; so that they can be more efficiently examined by &lt;a href=&quot;yii-web-urlmanager&quot;&gt;URL manager&lt;/a&gt; as a group. This is often the case when your application is composed by modules, each having its own set of URL rules with module ID as their common prefixes.</source>
          <target state="translated">일부 URL 규칙이 패턴이나 경로에서 동일한 접두사를 공유하는 경우 &lt;a href=&quot;yii-web-urlmanager&quot;&gt;URL 관리자&lt;/a&gt; 가 그룹 으로보다 효율적으로 검사 할 수 있도록 &lt;a href=&quot;yii-web-groupurlrule&quot;&gt;yii \ web \ GroupUrlRule&lt;/a&gt; 을 사용하는 것이 좋습니다 . 응용 프로그램이 모듈로 구성되어 있고 모듈 ID가 공통 접두사 인 고유 한 URL 규칙 집합을 갖는 경우가 종종 있습니다.</target>
        </trans-unit>
        <trans-unit id="cce8dee872e81ca0756c094c1fac1e7f5426e5b7" translate="yes" xml:space="preserve">
          <source>If specified as a string an own query method with such name will be invoked, passing &lt;a href=&quot;yii-caching-dbquerydependency#%24db-detail&quot;&gt;$db&lt;/a&gt; value as its first argument. For example: &lt;code&gt;exists&lt;/code&gt;, &lt;code&gt;all&lt;/code&gt;.</source>
          <target state="translated">문자열로 지정된 경우 &lt;a href=&quot;yii-caching-dbquerydependency#%24db-detail&quot;&gt;$ db&lt;/a&gt; 값을 첫 번째 인수로 전달 하여 해당 이름을 가진 고유 한 쿼리 메소드가 호출됩니다 . 예를 들면 다음과 같습니다. &lt;code&gt;exists&lt;/code&gt; , &lt;code&gt;all&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="27208a4ad10ef5cbc8c2fb53fb3aa650f99cd1d1" translate="yes" xml:space="preserve">
          <source>If specified the value is used as a reference time instead of &lt;code&gt;now&lt;/code&gt; when &lt;code&gt;$value&lt;/code&gt; is not a &lt;code&gt;DateInterval&lt;/code&gt; object.</source>
          <target state="translated">지정된 경우 &lt;code&gt;$value&lt;/code&gt; 가 &lt;code&gt;DateInterval&lt;/code&gt; 오브젝트 가 아닌 경우 값 이 &lt;code&gt;now&lt;/code&gt; 대신 참조 시간으로 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="80b76f8a6ebb8192019ecd47793c4e15a130b06a" translate="yes" xml:space="preserve">
          <source>If specified, this variable will be set to &lt;code&gt;true&lt;/code&gt; if $pathInfo was changed during normalization</source>
          <target state="translated">지정하면이 변수는 정규화 중에 $ pathInfo가 변경된 경우 &lt;code&gt;true&lt;/code&gt; 로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="ff1b7d6a0ddb8123caa86dd780a874c42e9cb6e3" translate="yes" xml:space="preserve">
          <source>If such a key exists, the corresponding value will be used to replace the corresponding part in the view file path;</source>
          <target state="translated">이러한 키가 존재하면 해당 값이 뷰 파일 경로의 해당 부분을 대체하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="797d82aedf8008681fcc25e29412ef0ca6c8c64e" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;http://php.net/manual/en/book.intl.php&quot;&gt;PHP intl extension&lt;/a&gt; is not available, setting this property will have no effect.</source>
          <target state="translated">경우 &lt;a href=&quot;http://php.net/manual/en/book.intl.php&quot;&gt;PHP의 국제 확장&lt;/a&gt; 을 사용할 수 없습니다,이 속성을 설정하면 아무런 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="0b63857e685d3fab747cd3889c9245f048f5dbcc" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;yii-base-controller#%24layout-detail&quot;&gt;yii\base\Controller::$layout&lt;/a&gt; property of the controller is &lt;code&gt;null&lt;/code&gt;, search through all ancestor modules (including the application itself) of the controller and find the first module whose &lt;a href=&quot;yii-base-module#%24layout-detail&quot;&gt;layout&lt;/a&gt; property is not &lt;code&gt;null&lt;/code&gt;. Use that module and its &lt;a href=&quot;yii-base-module#%24layout-detail&quot;&gt;layout&lt;/a&gt; value as the context module and the chosen layout value. If such a module cannot be found, it means no layout will be applied.</source>
          <target state="translated">&lt;a href=&quot;yii-base-controller#%24layout-detail&quot;&gt;컨트롤러&lt;/a&gt; 의 yii \ base \ Controller :: $ layout 속성이 &lt;code&gt;null&lt;/code&gt; 인 경우 컨트롤러의 모든 상위 모듈 (응용 프로그램 자체 포함)을 검색하고 &lt;a href=&quot;yii-base-module#%24layout-detail&quot;&gt;레이아웃&lt;/a&gt; 속성이 &lt;code&gt;null&lt;/code&gt; 이 아닌 첫 번째 모듈을 찾으십시오 . 해당 모듈과 해당 &lt;a href=&quot;yii-base-module#%24layout-detail&quot;&gt;레이아웃&lt;/a&gt; 값을 컨텍스트 모듈과 선택한 레이아웃 값으로 사용하십시오. 이러한 모듈을 찾을 수 없으면 레이아웃이 적용되지 않음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="3c9cba2b12960d3694209b568c8e5b827f1dd561" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;yii-base-controller#%24layout-detail&quot;&gt;yii\base\Controller::$layout&lt;/a&gt; property of the controller is not &lt;code&gt;null&lt;/code&gt;, use it as the layout value and the &lt;a href=&quot;yii-base-controller#%24module-detail&quot;&gt;module&lt;/a&gt; of the controller as the context module.</source>
          <target state="translated">&lt;a href=&quot;yii-base-controller#%24layout-detail&quot;&gt;컨트롤러&lt;/a&gt; 의 yii \ base \ Controller :: $ layout 속성이 &lt;code&gt;null&lt;/code&gt; 이 아닌 경우 레이아웃 값으로 사용 하고 컨트롤러 &lt;a href=&quot;yii-base-controller#%24module-detail&quot;&gt;모듈&lt;/a&gt; 을 컨텍스트 모듈로 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="15e659462542fcd8ac528aac9d835aacc6e70a24" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;yii-elasticsearch-activerecord#primaryKey()-detail&quot;&gt;primary key&lt;/a&gt; is not set (null) during insertion, it will be populated with a &lt;a href=&quot;http://www.elastic.co/guide/en/elasticsearch/reference/current/docs-index_.html#_automatic_id_generation&quot;&gt;randomly generated value&lt;/a&gt; after insertion.</source>
          <target state="translated">는 IF &lt;a href=&quot;yii-elasticsearch-activerecord#primaryKey()-detail&quot;&gt;기본 키&lt;/a&gt; 삽입시 (NULL)로 설정되지 않으며, 그것은 채워한다 &lt;a href=&quot;http://www.elastic.co/guide/en/elasticsearch/reference/current/docs-index_.html#_automatic_id_generation&quot;&gt;임의로 생성 된 값을&lt;/a&gt; 삽입 후.</target>
        </trans-unit>
        <trans-unit id="60c3e09752f4cccf4e25e0bc8b62b7ef3900924e" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;yii-validators-regularexpressionvalidator#%24not-detail&quot;&gt;$not&lt;/a&gt; property is set true, the validator will ensure the attribute value do NOT match the &lt;a href=&quot;yii-validators-regularexpressionvalidator#%24pattern-detail&quot;&gt;$pattern&lt;/a&gt;.</source>
          <target state="translated">는 IF &lt;a href=&quot;yii-validators-regularexpressionvalidator#%24not-detail&quot;&gt;$없는&lt;/a&gt; 속성이 true로 설정, 유효성 검사기는 일치하지 않는 속성 값 보장합니다 &lt;a href=&quot;yii-validators-regularexpressionvalidator#%24pattern-detail&quot;&gt;$ 패턴을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b726822910d28d332236ad4e701764ee8dab2771" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;$eagerLoading&lt;/code&gt; parameter is true, the method will also perform eager loading for the specified relations, which is equivalent to calling &lt;a href=&quot;yii-db-activequerytrait#with()-detail&quot;&gt;with()&lt;/a&gt; using the specified relations.</source>
          <target state="translated">경우] &lt;code&gt;$eagerLoading&lt;/code&gt; 파라미터에 해당하는, 상기 방법은 호출하는 것과 특정 관계 열망 로딩 수행 &lt;a href=&quot;yii-db-activequerytrait#with()-detail&quot;&gt;()과&lt;/a&gt; 지정된 관계를 사용한다.</target>
        </trans-unit>
        <trans-unit id="4b3e451a466028d2dddaffb05f79610042b56865" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;$key&lt;/code&gt; attribute or its value for the particular element is &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;$groups&lt;/code&gt; is not defined, the array element will be discarded. Otherwise, if &lt;code&gt;$groups&lt;/code&gt; is specified, array element will be added to the result array without any key.</source>
          <target state="translated">경우] &lt;code&gt;$key&lt;/code&gt; 특정 요소 또는 속성 값이 &lt;code&gt;null&lt;/code&gt; 과 &lt;code&gt;$groups&lt;/code&gt; 정의되어 있지 않은 경우, 배열 요소 값은 손실된다. 그렇지 않으면 &lt;code&gt;$groups&lt;/code&gt; 를 지정하면 배열 요소가 키없이 결과 배열에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="f833d8e783f409cda178c69f0e5fc2ce24108bdf" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;$key&lt;/code&gt; is specified as &lt;code&gt;null&lt;/code&gt; or a value of an element corresponding to the key is &lt;code&gt;null&lt;/code&gt; in addition to &lt;code&gt;$groups&lt;/code&gt; not specified then the element is discarded.</source>
          <target state="translated">경우] &lt;code&gt;$key&lt;/code&gt; 로서 지정되는 &lt;code&gt;null&lt;/code&gt; 또는 키에 대응하는 요소의 값은 &lt;code&gt;null&lt;/code&gt; 이외에 &lt;code&gt;$groups&lt;/code&gt; 하지 후 지정된 요소가 폐기된다.</target>
        </trans-unit>
        <trans-unit id="92f05b9592fa5b6440250467f8b030637944b9f9" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;extends&lt;/code&gt; option is specified, it will also check if the class is a child class of the class represented by the &lt;code&gt;extends&lt;/code&gt; option.</source>
          <target state="translated">(가) 경우 &lt;code&gt;extends&lt;/code&gt; 옵션이 지정된 클래스가 나타내는 클래스의 하위 클래스 인 경우, 그것은 또한 확인합니다 &lt;code&gt;extends&lt;/code&gt; 옵션.</target>
        </trans-unit>
        <trans-unit id="fb860477def6ff786d16a900f8897215f952839b" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;init()&lt;/code&gt; method contains a lot of code initializing the module's properties, you may also save them in terms of a &lt;a href=&quot;guide-concept-configurations&quot;&gt;configuration&lt;/a&gt; and load it with the following code in &lt;code&gt;init()&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;init()&lt;/code&gt; 메소드에 모듈의 속성을 초기화하는 많은 코드가 포함되어 있으면 &lt;a href=&quot;guide-concept-configurations&quot;&gt;구성&lt;/a&gt; 측면에서 저장하고 &lt;code&gt;init()&lt;/code&gt; 에 다음 코드와 함께로드 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4ccc9c9de135774c682ee962ad83a69c75ff0165" translate="yes" xml:space="preserve">
          <source>If the CSS class is already in the options, it will not be added again. If class specification at given options is an array, and some class placed there with the named (string) key, overriding of such key will have no effect. For example:</source>
          <target state="translated">CSS 클래스가 이미 옵션에 있으면 다시 추가되지 않습니다. 주어진 옵션에서 클래스 스펙이 배열이고 일부 클래스가 명명 된 (문자열) 키로 배치 된 경우 해당 키를 대체해도 아무런 영향을 미치지 않습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="319699e7d35150aed7560472fd2a4efd71efb896" translate="yes" xml:space="preserve">
          <source>If the CSS class option is specified using the array style, you may use a named key to mark the logical purpose of the class. In this case, a class with the same key in the array style will be ignored in &lt;code&gt;Html::addCssClass()&lt;/code&gt;:</source>
          <target state="translated">CSS 클래스 옵션이 배열 스타일을 사용하여 지정된 경우 명명 된 키를 사용하여 클래스의 논리적 목적을 표시 할 수 있습니다. 이 경우 배열 스타일에서 동일한 키를 가진 클래스는 &lt;code&gt;Html::addCssClass()&lt;/code&gt; 에서 무시됩니다 .</target>
        </trans-unit>
        <trans-unit id="fe435042db98105dfeb61298abc6cb52667537ce" translate="yes" xml:space="preserve">
          <source>If the DB table does not declare any primary key, you should override this method to return the attributes that you want to use as primary keys for this AR class.</source>
          <target state="translated">DB 테이블이 기본 키를 선언하지 않으면이 AR 클래스의 기본 키로 사용할 속성을 리턴하려면이 메소드를 대체해야합니다.</target>
        </trans-unit>
        <trans-unit id="7e7904588bfd946f23764cda2151317184f585d5" translate="yes" xml:space="preserve">
          <source>If the GET parameter does not exist, the second parameter passed to this method will be returned.</source>
          <target state="translated">GET 매개 변수가 없으면이 메소드에 전달 된 두 번째 매개 변수가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="831d7a47f15e87ddeb56c28687b69570124aca33" translate="yes" xml:space="preserve">
          <source>If the abstract type contains two or more parts separated by spaces (e.g. &quot;string NOT NULL&quot;), then only the first part will be converted, and the rest of the parts will be appended to the converted result. For example, 'string NOT NULL' is converted to 'varchar(255) NOT NULL'.</source>
          <target state="translated">추상 형식에 공백으로 구분 된 둘 이상의 부분이 포함 된 경우 (예 : &quot;string NOT NULL&quot;) 첫 번째 부분 만 변환되고 나머지 부분은 변환 된 결과에 추가됩니다. 예를 들어 'string NOT NULL'은 'varchar (255) NOT NULL'로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="34509f6ce379bc4a2ec1f4e2efa95f17d40bb35e" translate="yes" xml:space="preserve">
          <source>If the action ID is empty, the method will use &lt;a href=&quot;yii-base-controller#%24defaultAction-detail&quot;&gt;$defaultAction&lt;/a&gt;.</source>
          <target state="translated">활동 ID가 비어 있으면 메소드는 &lt;a href=&quot;yii-base-controller#%24defaultAction-detail&quot;&gt;$ defaultAction&lt;/a&gt; 을 사용 합니다 .</target>
        </trans-unit>
        <trans-unit id="46b7fb124fee260f3f8c361111dd42e02cc9788f" translate="yes" xml:space="preserve">
          <source>If the action ID is found in the &lt;a href=&quot;yii-base-controller#actions()-detail&quot;&gt;action map&lt;/a&gt;, a standalone action will be created;</source>
          <target state="translated">&lt;a href=&quot;yii-base-controller#actions()-detail&quot;&gt;조치 맵&lt;/a&gt; 에서 조치 ID를 찾으면 독립형 조치가 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="0795366db3f4de44ba4856acc0a941ce474a80d9" translate="yes" xml:space="preserve">
          <source>If the action ID is found to match an action method, an inline action will be created;</source>
          <target state="translated">조치 ID가 조치 메소드와 일치하면 인라인 조치가 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="6caa330420e94f90c46774207afa96fbca0e9d4e" translate="yes" xml:space="preserve">
          <source>If the action ID is not specified, the &lt;a href=&quot;yii-base-controller#%24defaultAction-detail&quot;&gt;default action ID&lt;/a&gt; will be used.</source>
          <target state="translated">조치 ID를 지정하지 않으면 &lt;a href=&quot;yii-base-controller#%24defaultAction-detail&quot;&gt;기본 조치 ID&lt;/a&gt; 가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e86c07d7c07aa69f441f7c0d2ac335abde6a1764" translate="yes" xml:space="preserve">
          <source>If the anonymous function requires some data from the outer scope, you can pass it with the &lt;code&gt;use&lt;/code&gt; statement. For example:</source>
          <target state="translated">익명 함수에 외부 범위의 일부 데이터가 필요한 경우 &lt;code&gt;use&lt;/code&gt; 문과 함께 전달할 수 있습니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4d37b040e8c9d874ff5a34d05cde58a8b9cf80ab" translate="yes" xml:space="preserve">
          <source>If the asset is a directory, all files and subdirectories under it will be published recursively. Note, in case $forceCopy is false the method only checks the existence of the target directory to avoid repetitive copying (which is very expensive).</source>
          <target state="translated">자산이 디렉토리 인 경우 자산 아래의 모든 파일과 하위 디렉토리가 재귀 적으로 게시됩니다. $ forceCopy가 false 인 경우, 메소드는 반복 복사를 피하기 위해 대상 디렉토리의 존재 만 검사합니다 (매우 비쌉니다).</target>
        </trans-unit>
        <trans-unit id="7a9beab4c907cdc1337c3b83420284e62f0d48d3" translate="yes" xml:space="preserve">
          <source>If the asset is a file, its file modification time will be checked to avoid unnecessary file copying.</source>
          <target state="translated">자산이 파일 인 경우 불필요한 파일 복사를 피하기 위해 파일 수정 시간을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="43a15ff763a3efa8200fece736f8781e56a9022b" translate="yes" xml:space="preserve">
          <source>If the attribute is NOT a data attribute, the value will be JSON-encoded. For example, &lt;code&gt;['params' =&amp;gt; ['id' =&amp;gt; 1, 'name' =&amp;gt; 'yii']&lt;/code&gt; generates &lt;code&gt;params='{&quot;id&quot;:1,&quot;name&quot;:&quot;yii&quot;}'&lt;/code&gt;.</source>
          <target state="translated">속성이 데이터 속성이 아닌 경우 값은 JSON으로 인코딩됩니다. 예를 들어, &lt;code&gt;['params' =&amp;gt; ['id' =&amp;gt; 1, 'name' =&amp;gt; 'yii']&lt;/code&gt; 는 &lt;code&gt;params='{&quot;id&quot;:1,&quot;name&quot;:&quot;yii&quot;}'&lt;/code&gt; 을 생성 합니다.</target>
        </trans-unit>
        <trans-unit id="c21572ff46d266cfa6f711b9ed2f6e413847c270" translate="yes" xml:space="preserve">
          <source>If the attribute is a data attribute as listed in &lt;a href=&quot;yii-helpers-basehtml#%24dataAttributes-detail&quot;&gt;yii\helpers\Html::$dataAttributes&lt;/a&gt;, such as &lt;code&gt;data&lt;/code&gt; or &lt;code&gt;ng&lt;/code&gt;, a list of attributes will be rendered, one for each element in the value array. For example, &lt;code&gt;'data' =&amp;gt; ['id' =&amp;gt; 1, 'name' =&amp;gt; 'yii']&lt;/code&gt; generates &lt;code&gt;data-id=&quot;1&quot; data-name=&quot;yii&quot;&lt;/code&gt;; and &lt;code&gt;'data' =&amp;gt; ['params' =&amp;gt; ['id' =&amp;gt; 1, 'name' =&amp;gt; 'yii'], 'status' =&amp;gt; 'ok']&lt;/code&gt; generates &lt;code&gt;data-params='{&quot;id&quot;:1,&quot;name&quot;:&quot;yii&quot;}' data-status=&quot;ok&quot;&lt;/code&gt;. Note that in the latter example JSON format is used to render a sub-array.</source>
          <target state="translated">속성이 &lt;a href=&quot;yii-helpers-basehtml#%24dataAttributes-detail&quot;&gt;yii \ helpers \ Html :: $ dataAttributes&lt;/a&gt; (예 : &lt;code&gt;data&lt;/code&gt; 또는 &lt;code&gt;ng&lt;/code&gt; )에 나열된 데이터 속성 인 경우 값 배열의 각 요소마다 하나씩 속성 목록이 렌더링됩니다. 예를 들어, &lt;code&gt;'data' =&amp;gt; ['id' =&amp;gt; 1, 'name' =&amp;gt; 'yii']&lt;/code&gt; 은 &lt;code&gt;data-id=&quot;1&quot; data-name=&quot;yii&quot;&lt;/code&gt; . 및 &lt;code&gt;'data' =&amp;gt; ['params' =&amp;gt; ['id' =&amp;gt; 1, 'name' =&amp;gt; 'yii'], 'status' =&amp;gt; 'ok']&lt;/code&gt; 생성 &lt;code&gt;data-params='{&quot;id&quot;:1,&quot;name&quot;:&quot;yii&quot;}' data-status=&quot;ok&quot;&lt;/code&gt; 입니다. 후자의 예에서 JSON 형식은 하위 배열을 렌더링하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f7eb995867a2b5c0f548cc0689286ae195f21536" translate="yes" xml:space="preserve">
          <source>If the attribute looks like &lt;code&gt;relatedModel.attribute&lt;/code&gt;, then the attribute will be received from the related model.</source>
          <target state="translated">속성이 &lt;code&gt;relatedModel.attribute&lt;/code&gt; 처럼 보이는 경우 속성은 관련 모델에서 수신됩니다.</target>
        </trans-unit>
        <trans-unit id="991357ecb7a52cf2c1b0a8fcc6b21099023f377b" translate="yes" xml:space="preserve">
          <source>If the cache already contains such a key, the existing value and expiration time will be preserved.</source>
          <target state="translated">캐시에 이미 이러한 키가 포함되어 있으면 기존 값과 만료 시간이 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="f5328dbd14665e4d191562a915b68e87d3f63e77" translate="yes" xml:space="preserve">
          <source>If the cache already contains such a key, the existing value and expiration time will be replaced with the new ones, respectively.</source>
          <target state="translated">캐시에 이미 이러한 키가 포함되어 있으면 기존 값과 만료 시간이 각각 새 키로 바뀝니다.</target>
        </trans-unit>
        <trans-unit id="d4d29c734e6c7ab6e36766949e5193d4328bded3" translate="yes" xml:space="preserve">
          <source>If the cache already contains such a key, the existing value will be replaced with the new ones. To add expiration and dependencies, use the &lt;a href=&quot;yii-caching-cache#set()-detail&quot;&gt;set()&lt;/a&gt; method. This method is required by the interface &lt;a href=&quot;http://www.php.net/class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt;.</source>
          <target state="translated">캐시에 이미 이러한 키가 포함되어 있으면 기존 값이 새 값으로 대체됩니다. 만료 및 종속성을 추가하려면 &lt;a href=&quot;yii-caching-cache#set()-detail&quot;&gt;set ()&lt;/a&gt; 메소드를 사용하십시오 . 이 메소드는 &lt;a href=&quot;http://www.php.net/class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt; 인터페이스에 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="71c6ecd8fecfd5bf5b80a4e9fa08aab627852f4c" translate="yes" xml:space="preserve">
          <source>If the class implements &lt;a href=&quot;yii-base-configurable&quot;&gt;yii\base\Configurable&lt;/a&gt;, the &lt;code&gt;$config&lt;/code&gt; parameter will be passed as the last parameter to the class constructor; Otherwise, the configuration will be applied &lt;em&gt;after&lt;/em&gt; the object is instantiated.</source>
          <target state="translated">클래스가 &lt;a href=&quot;yii-base-configurable&quot;&gt;yii \ base \ Configurable을&lt;/a&gt; 구현 하면 &lt;code&gt;$config&lt;/code&gt; 매개 변수가 마지막 매개 변수로 클래스 생성자에 전달됩니다. 그렇지 않으면 개체가 인스턴스화 된 &lt;em&gt;후&lt;/em&gt; 구성이 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="ffb0e8dd94449e34cb4791fce13eb2f285ccd815" translate="yes" xml:space="preserve">
          <source>If the class is namespaced (e.g. &lt;code&gt;yii\base\Component&lt;/code&gt;), it will attempt to include the file associated with the corresponding path alias (e.g. &lt;code&gt;@yii/base/Component.php&lt;/code&gt;);</source>
          <target state="translated">클래스가 네임 스페이스 인 경우 (예 : &lt;code&gt;yii\base\Component&lt;/code&gt; ) 해당 경로 별명 (예 : &lt;code&gt;@yii/base/Component.php&lt;/code&gt; ) 과 관련된 파일을 포함 시키려고 시도합니다 .</target>
        </trans-unit>
        <trans-unit id="46a49bf5074f1e23d2e11e0c2533c509d2543bd4" translate="yes" xml:space="preserve">
          <source>If the client is already authenticated and is simply not allowed to perform the action, consider using a 403 &lt;a href=&quot;yii-web-forbiddenhttpexception&quot;&gt;yii\web\ForbiddenHttpException&lt;/a&gt; or 404 &lt;a href=&quot;yii-web-notfoundhttpexception&quot;&gt;yii\web\NotFoundHttpException&lt;/a&gt; instead.</source>
          <target state="translated">클라이언트가 이미 인증되었고 단순히 작업을 수행 할 수없는 경우 403 &lt;a href=&quot;yii-web-forbiddenhttpexception&quot;&gt;yii \ web \ ForbiddenHttpException&lt;/a&gt; 또는 404 &lt;a href=&quot;yii-web-notfoundhttpexception&quot;&gt;yii \ web \ NotFoundHttpException을&lt;/a&gt; 대신 사용해보십시오.</target>
        </trans-unit>
        <trans-unit id="a4afb3ae4826775361cb53807e80ec0513aba0e3" translate="yes" xml:space="preserve">
          <source>If the column name contains prefix, the prefix will also be properly quoted. If the column name is already quoted or contains '(', '[[' or '{{', then this method will do nothing.</source>
          <target state="translated">열 이름에 접두사가 포함되어 있으면 접두사도 올바르게 인용됩니다. 열 이름이 이미 인용되었거나 '(', '[['또는 '{{')을 포함하는 경우이 메소드는 아무 작업도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="111ea23a815468b8542654d9ba8e50b3b2db6c86" translate="yes" xml:space="preserve">
          <source>If the column name contains prefix, the prefix will also be properly quoted. If the column name is already quoted or contains special characters including '(', '[[' and '{{', then this method will do nothing.</source>
          <target state="translated">열 이름에 접두사가 포함되어 있으면 접두사도 올바르게 인용됩니다. 열 이름이 이미 인용되었거나 '(', '[['및 '{{')을 포함한 특수 문자가 포함 된 경우이 방법은 아무 작업도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="78ed0e45182c28a5a62d90af60d34815bfcb9387" translate="yes" xml:space="preserve">
          <source>If the controller is created successfully, it will be returned together with the requested action ID. Otherwise &lt;code&gt;false&lt;/code&gt; will be returned.</source>
          <target state="translated">컨트롤러가 성공적으로 생성되면 요청 된 작업 ID와 함께 반환됩니다. 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="8df51f10a10aa23c96c3fbba561e221c7a96ad1e" translate="yes" xml:space="preserve">
          <source>If the current user is Jane with &lt;code&gt;ID=1&lt;/code&gt; we are starting at &lt;code&gt;createPost&lt;/code&gt; and trying to get to &lt;code&gt;Jane&lt;/code&gt;:</source>
          <target state="translated">현재 사용자가 &lt;code&gt;ID=1&lt;/code&gt; Jane 인 경우 &lt;code&gt;createPost&lt;/code&gt; 에서 시작 하여 &lt;code&gt;Jane&lt;/code&gt; 으로 이동 하려고합니다 .</target>
        </trans-unit>
        <trans-unit id="f671841eb513a2d78326da7dc330c2d4543ccb40" translate="yes" xml:space="preserve">
          <source>If the cursor is already at the edge of the screen, this has no effect.</source>
          <target state="translated">커서가 이미 화면 가장자리에 있으면 아무런 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="4f536e333a3f9ab34a0f84bbeffbce31a916292f" translate="yes" xml:space="preserve">
          <source>If the data file does not exist, an empty array will be returned.</source>
          <target state="translated">데이터 파일이 없으면 빈 배열이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="9e07282e7c4fe55930d9abaedca212205f5be171" translate="yes" xml:space="preserve">
          <source>If the data model is not found, a 404 HTTP exception will be raised.</source>
          <target state="translated">데이터 모델을 찾을 수 없으면 404 HTTP 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="1089463ec3410a7e5667dfdf26e0d44cbaa1c8e9" translate="yes" xml:space="preserve">
          <source>If the database supports transactions, you may also override &lt;a href=&quot;yii-db-migration#safeUp()-detail&quot;&gt;safeUp()&lt;/a&gt; and &lt;a href=&quot;yii-db-migration#safeDown()-detail&quot;&gt;safeDown()&lt;/a&gt; so that if anything wrong happens during the upgrading or downgrading, the whole migration can be reverted in a whole.</source>
          <target state="translated">데이터베이스가 트랜잭션을 지원하면 &lt;a href=&quot;yii-db-migration#safeUp()-detail&quot;&gt;safeUp ()&lt;/a&gt; 및 &lt;a href=&quot;yii-db-migration#safeDown()-detail&quot;&gt;safeDown ()을&lt;/a&gt; 재정 의하여 업그레이드 또는 다운 그레이드 중에 문제가 발생할 경우 전체 마이그레이션을 전체적으로 되돌릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="965be86d15b1c168d72ddc33107636b6de7a8c0d" translate="yes" xml:space="preserve">
          <source>If the default value of an option is of an array type and you set this option while running the command, the option value will be converted into an array by splitting the input string on any commas.</source>
          <target state="translated">옵션의 기본값이 배열 유형 인 경우 명령을 실행하는 동안이 옵션을 설정하면 입력 문자열을 쉼표로 분할하여 옵션 값을 배열로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="18852f402d118c92ad33505eee22e5c4e36dac5e" translate="yes" xml:space="preserve">
          <source>If the exception that you want to throw is not among the above list, you may create one by extending from &lt;a href=&quot;yii-web-httpexception&quot;&gt;yii\web\HttpException&lt;/a&gt;, or directly throw it with a status code, for example,</source>
          <target state="translated">던지려는 예외가 위의 목록에없는 경우 &lt;a href=&quot;yii-web-httpexception&quot;&gt;yii \ web \ HttpException&lt;/a&gt; 에서 확장하여 만들 거나 상태 코드와 함께 직접 던질 수 있습니다 (예 :</target>
        </trans-unit>
        <trans-unit id="a167e3b831b3c5c7691a7a82b3b2435dccb0cf2c" translate="yes" xml:space="preserve">
          <source>If the extension displays messages intended for end users, the messages should be wrapped into &lt;code&gt;Yii::t()&lt;/code&gt; so that they can be translated. Messages meant for developers (such as internal exception messages) do not need to be translated.</source>
          <target state="translated">확장에 최종 사용자를위한 메시지가 표시되면 메시지를 번역 할 수 있도록 &lt;code&gt;Yii::t()&lt;/code&gt; 로 래핑해야합니다 . 개발자를위한 메시지 (예 : 내부 예외 메시지)는 번역 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="7268ec4ffbf2e0f2000f9e900ab403b03f3ecbea" translate="yes" xml:space="preserve">
          <source>If the extension displays numbers, dates, etc., they should be formatted using &lt;a href=&quot;yii-i18n-formatter&quot;&gt;yii\i18n\Formatter&lt;/a&gt; with appropriate formatting rules.</source>
          <target state="translated">확장자가 숫자, 날짜 등을 표시하는 경우 적절한 형식 지정 규칙과 함께 &lt;a href=&quot;yii-i18n-formatter&quot;&gt;yii \ i18n \ Formatter&lt;/a&gt; 를 사용하여 형식을 지정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="9ee396891cae37eb2190c50fe42731292e994321" translate="yes" xml:space="preserve">
          <source>If the extension is installed, the bootstrap information will be saved in &lt;a href=&quot;yii-base-application#%24extensions-detail&quot;&gt;yii\base\Application::$extensions&lt;/a&gt;.</source>
          <target state="translated">확장이 설치되면 부트 스트랩 정보는 &lt;a href=&quot;yii-base-application#%24extensions-detail&quot;&gt;yii \ base \ Application :: $ extensions에 저장&lt;/a&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="c95b6ef1844724f6f2cef65a0c30130d32d60871" translate="yes" xml:space="preserve">
          <source>If the first segment of the route is a valid module ID as declared in &lt;a href=&quot;yii-base-module#%24modules-detail&quot;&gt;$modules&lt;/a&gt;, call the module's &lt;code&gt;createController()&lt;/code&gt; with the rest part of the route;</source>
          <target state="translated">라우트의 첫 번째 세그먼트가 &lt;a href=&quot;yii-base-module#%24modules-detail&quot;&gt;$ modules에&lt;/a&gt; 선언 된 유효한 모듈 ID 인 경우 라우트의 나머지 부분과 함께 모듈의 &lt;code&gt;createController()&lt;/code&gt; 를 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="5682a6ad10f54d1ab8de6e8e26878747ecf83b26" translate="yes" xml:space="preserve">
          <source>If the first segment of the route is found in &lt;a href=&quot;yii-base-module#%24controllerMap-detail&quot;&gt;$controllerMap&lt;/a&gt;, create a controller based on the corresponding configuration found in &lt;a href=&quot;yii-base-module#%24controllerMap-detail&quot;&gt;$controllerMap&lt;/a&gt;;</source>
          <target state="translated">경로의 첫 번째 세그먼트에서 발견되면 &lt;a href=&quot;yii-base-module#%24controllerMap-detail&quot;&gt;$ controllerMap&lt;/a&gt; , 검색된 대응하는 구성에 기초하여 생성 제어부 &lt;a href=&quot;yii-base-module#%24controllerMap-detail&quot;&gt;$ controllerMap을&lt;/a&gt; ;</target>
        </trans-unit>
        <trans-unit id="67c5b4daf81f8105e3129be53ee97325c66c6d89" translate="yes" xml:space="preserve">
          <source>If the given alias does not start with '@', it is returned back without change;</source>
          <target state="translated">지정된 별명이 '@'로 시작하지 않으면 변경없이 다시 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="e6299b014135cdc2ea19d847471fe7cf0a177496" translate="yes" xml:space="preserve">
          <source>If the given key is a string containing alphanumeric characters only and no more than 32 characters, then the key will be returned back prefixed with &lt;a href=&quot;yii-caching-cache#%24keyPrefix-detail&quot;&gt;$keyPrefix&lt;/a&gt;. Otherwise, a normalized key is generated by serializing the given key, applying MD5 hashing, and prefixing with &lt;a href=&quot;yii-caching-cache#%24keyPrefix-detail&quot;&gt;$keyPrefix&lt;/a&gt;.</source>
          <target state="translated">주어진 키가 영숫자 만 포함하고 32자를 초과하지 않는 문자열 인 경우, 키 앞에 &lt;a href=&quot;yii-caching-cache#%24keyPrefix-detail&quot;&gt;$ keyPrefix&lt;/a&gt; 가 반환됩니다 . 그렇지 않으면, 주어진 키를 직렬화하고 MD5 해싱을 적용하고 &lt;a href=&quot;yii-caching-cache#%24keyPrefix-detail&quot;&gt;$ keyPrefix&lt;/a&gt; 접두어를 사용하여 정규화 된 키가 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="d0725036f254f8eb438ca8c976d7d67fa9628356" translate="yes" xml:space="preserve">
          <source>If the given key is a string containing alphanumeric characters only and no more than 32 characters, then the key will be returned back prefixed with \yii\caching\keyPrefix. Otherwise, a normalized key is generated by serializing the given key, applying MD5 hashing, and prefixing with \yii\caching\keyPrefix.</source>
          <target state="translated">주어진 키가 영숫자 만 포함하고 32자를 초과하지 않는 문자열 인 경우 \ yii \ caching \ keyPrefix가 앞에 붙은 키가 다시 반환됩니다. 그렇지 않으면, 주어진 키를 직렬화하고 MD5 해싱을 적용하고 \ yii \ caching \ keyPrefix 접두사를 사용하여 정규화 된 키가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="63a25578aee6a19c0bbc1e83352adb9b15a44c4d" translate="yes" xml:space="preserve">
          <source>If the index name contains schema prefix, the prefix will also be properly quoted. If the index name is already quoted or contains '(' or '{{', then this method will do nothing.</source>
          <target state="translated">인덱스 이름에 스키마 접두사가 포함 된 경우 접두사도 올바르게 인용됩니다. 색인 이름이 이미 인용되었거나 '('또는 '{{'을 포함하는 경우이 메소드는 아무 것도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7b15c4cb7241e973ebeffe74ebed5ab0b57b9271" translate="yes" xml:space="preserve">
          <source>If the index name contains schema prefix, the prefix will also be properly quoted. If the index name is already quoted or contains special characters including '(', '[[' and '{{', then this method will do nothing.</source>
          <target state="translated">인덱스 이름에 스키마 접두사가 포함 된 경우 접두사도 올바르게 인용됩니다. 색인 이름이 이미 인용되었거나 '(', '[['및 '{{')을 포함한 특수 문자를 포함하는 경우이 메소드는 아무 작업도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cb65208309929f0205b374bd46d3b2d18e00ca4a" translate="yes" xml:space="preserve">
          <source>If the intl extension is not installed, the data will not be localized.</source>
          <target state="translated">intl 확장이 설치되지 않은 경우 데이터가 현지화되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="eb04bced2b762b5611e2073ca497d3a3cec5aba0" translate="yes" xml:space="preserve">
          <source>If the item does not specify a rule, this method will return true. Otherwise, it will return the value of &lt;a href=&quot;yii-rbac-rule#execute()-detail&quot;&gt;yii\rbac\Rule::execute()&lt;/a&gt;.</source>
          <target state="translated">항목이 규칙을 지정하지 않으면이 메소드는 true를 리턴합니다. 그렇지 않으면 &lt;a href=&quot;yii-rbac-rule#execute()-detail&quot;&gt;yii \ rbac \ Rule :: execute ()&lt;/a&gt; 값을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="464d5c7723263a6e210a472995e8a1ef86cb868c" translate="yes" xml:space="preserve">
          <source>If the key does not exist in the array or object, the default value will be returned instead.</source>
          <target state="translated">키가 배열이나 객체에 존재하지 않으면 기본값이 대신 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="28abaad2dab1c192a41509dcaa3373d20cbb10ff" translate="yes" xml:space="preserve">
          <source>If the last modification time of the file specified via &lt;a href=&quot;yii-caching-filedependency#%24fileName-detail&quot;&gt;$fileName&lt;/a&gt; is changed, the dependency is considered as changed.</source>
          <target state="translated">&lt;a href=&quot;yii-caching-filedependency#%24fileName-detail&quot;&gt;$ fileName을&lt;/a&gt; 통해 지정된 파일의 마지막 수정 시간 이 변경되면 종속성이 변경된 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="f10872e3d505c91361fc20a27e2e7c9f26a0e4ed" translate="yes" xml:space="preserve">
          <source>If the layout name does not contain a file extension, it will use the default one &lt;code&gt;.php&lt;/code&gt;.</source>
          <target state="translated">레이아웃 이름에 파일 확장자가 없으면 기본 이름 인 &lt;code&gt;.php&lt;/code&gt; 가 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="1adfaa28635e75391026a3fab1af3f10b8633727" translate="yes" xml:space="preserve">
          <source>If the layout value does not contain a file extension, it will use the default one &lt;code&gt;.php&lt;/code&gt;.</source>
          <target state="translated">레이아웃 값에 파일 확장자가 없으면 기본 &lt;code&gt;.php&lt;/code&gt; 파일이 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="f99bbb69debee97ab3722854804d80e833c99f6d" translate="yes" xml:space="preserve">
          <source>If the message is not found, a &lt;a href=&quot;yii-i18n-messagesource#EVENT_MISSING_TRANSLATION-detail&quot;&gt;missingTranslation&lt;/a&gt; event will be triggered. If there is an event handler, it may provide a &lt;a href=&quot;yii-i18n-missingtranslationevent#%24translatedMessage-detail&quot;&gt;fallback translation&lt;/a&gt;. If no fallback translation is provided this method will return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">메시지를 찾을 수 &lt;a href=&quot;yii-i18n-messagesource#EVENT_MISSING_TRANSLATION-detail&quot;&gt;없으면 missingTranslation&lt;/a&gt; 이벤트가 트리거됩니다. 이벤트 핸들러가있는 경우 &lt;a href=&quot;yii-i18n-missingtranslationevent#%24translatedMessage-detail&quot;&gt;대체 변환을&lt;/a&gt; 제공 할 수 있습니다 . 폴백 변환이 제공되지 않으면이 메소드는 &lt;code&gt;false&lt;/code&gt; 를 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="3e53480c37a69c20f9e07010c9df1433b41f36e9" translate="yes" xml:space="preserve">
          <source>If the migration name is of a special form, for example &lt;code&gt;create_xxx_table&lt;/code&gt; or &lt;code&gt;drop_xxx_table&lt;/code&gt; then the generated migration file will contain extra code, in this case for creating/dropping tables. In the following all variants of this feature are described.</source>
          <target state="translated">마이그레이션 이름이 &lt;code&gt;create_xxx_table&lt;/code&gt; 또는 &lt;code&gt;drop_xxx_table&lt;/code&gt; 과 같은 특수한 형식 인 경우 생성 된 마이그레이션 파일에는 추가 코드 (이 경우 테이블 작성 / 삭제)가 포함됩니다. 다음에는이 기능의 모든 변형이 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="37737e37d6c6ba206e741a4a589339ee4135543e" translate="yes" xml:space="preserve">
          <source>If the migration name is of the form &lt;code&gt;add_xxx_column_to_yyy_table&lt;/code&gt; then the file content would contain &lt;code&gt;addColumn&lt;/code&gt; and &lt;code&gt;dropColumn&lt;/code&gt; statements necessary.</source>
          <target state="translated">마이그레이션 이름이 &lt;code&gt;add_xxx_column_to_yyy_table&lt;/code&gt; 형식 이면 파일 내용에 &lt;code&gt;addColumn&lt;/code&gt; 및 &lt;code&gt;dropColumn&lt;/code&gt; 문 이 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="83f6ba1dabb2953813fc6afa2504fa618fa75641" translate="yes" xml:space="preserve">
          <source>If the migration name is of the form &lt;code&gt;create_junction_table_for_xxx_and_yyy_tables&lt;/code&gt; or &lt;code&gt;create_junction_xxx_and_yyy_tables&lt;/code&gt; then code necessary to create junction table will be generated.</source>
          <target state="translated">마이그레이션 이름이 &lt;code&gt;create_junction_table_for_xxx_and_yyy_tables&lt;/code&gt; 또는 &lt;code&gt;create_junction_xxx_and_yyy_tables&lt;/code&gt; 형식 이면 접합 테이블을 작성하는 데 필요한 코드가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="f2b52716cb6e3c3f42e5862aabb33951cbe297c4" translate="yes" xml:space="preserve">
          <source>If the migration name is of the form &lt;code&gt;drop_xxx_column_from_yyy_table&lt;/code&gt; then the file content would contain &lt;code&gt;addColumn&lt;/code&gt; and &lt;code&gt;dropColumn&lt;/code&gt; statements necessary.</source>
          <target state="translated">마이그레이션 이름이 &lt;code&gt;drop_xxx_column_from_yyy_table&lt;/code&gt; 형식 이면 파일 내용에 &lt;code&gt;addColumn&lt;/code&gt; 및 &lt;code&gt;dropColumn&lt;/code&gt; 문 이 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="9e25c9ac5a967181c247af86ad7118df11aa6fcf" translate="yes" xml:space="preserve">
          <source>If the model implements the &lt;a href=&quot;yii-web-linkable&quot;&gt;yii\web\Linkable&lt;/a&gt; interface, the resulting array will also have a &lt;code&gt;_link&lt;/code&gt; element which refers to a list of links as specified by the interface.</source>
          <target state="translated">모델이 &lt;a href=&quot;yii-web-linkable&quot;&gt;yii \ web \ Linkable&lt;/a&gt; 인터페이스를 구현하는 경우 결과 배열 에는 인터페이스에서 지정한 링크 목록을 참조 하는 &lt;code&gt;_link&lt;/code&gt; 요소 도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fc6fb379798cff43ff0d7eeb05a7a08c5f067acc" translate="yes" xml:space="preserve">
          <source>If the model implements the \yii\mongodb\Linkable interface, the resulting array will also have a &lt;code&gt;_link&lt;/code&gt; element which refers to a list of links as specified by the interface.</source>
          <target state="translated">모델이 \ yii \ mongodb \ Linkable 인터페이스를 구현하면 결과 배열에도 인터페이스에 지정된 링크 목록을 참조 하는 &lt;code&gt;_link&lt;/code&gt; 요소가 있습니다.</target>
        </trans-unit>
        <trans-unit id="864c4315179c19afa9cbdfca598bd45ccabe9c46" translate="yes" xml:space="preserve">
          <source>If the module class is not currently requested, &lt;code&gt;null&lt;/code&gt; will be returned. This method is provided so that you access the module instance from anywhere within the module.</source>
          <target state="translated">현재 모듈 클래스가 요청되지 않은 경우 &lt;code&gt;null&lt;/code&gt; 이 반환됩니다. 이 방법은 모듈 내 어디에서나 모듈 인스턴스에 액세스 할 수 있도록 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="314f89ffb5629d58a0d8dd7cda2b215711d540f2" translate="yes" xml:space="preserve">
          <source>If the name component ends in suffix this will also be cut off.</source>
          <target state="translated">이름 구성 요소가 접미사로 끝나는 경우 잘립니다.</target>
        </trans-unit>
        <trans-unit id="b4f840a232a2bae8526e8bdc26da6fb04cecddde" translate="yes" xml:space="preserve">
          <source>If the name of such a property is the same as a class member variable, the latter will take precedence. For example, if the above &lt;code&gt;Foo&lt;/code&gt; class has a member variable &lt;code&gt;label&lt;/code&gt;, then the assignment &lt;code&gt;$object-&amp;gt;label = 'abc'&lt;/code&gt; will affect the &lt;em&gt;member variable&lt;/em&gt;&lt;code&gt;label&lt;/code&gt;; that line would not call the &lt;code&gt;setLabel()&lt;/code&gt; setter method.</source>
          <target state="translated">그러한 속성의 이름이 클래스 멤버 변수와 동일하면 후자가 우선합니다. 예를 들어, 위의 경우 &lt;code&gt;Foo&lt;/code&gt; 클래스는 멤버 변수가 &lt;code&gt;label&lt;/code&gt; , 다음 할당 &lt;code&gt;$object-&amp;gt;label = 'abc'&lt;/code&gt; 에 영향을 &lt;em&gt;멤버 변수의 &lt;/em&gt; &lt;code&gt;label&lt;/code&gt; ; 그 라인은 &lt;code&gt;setLabel()&lt;/code&gt; setter 메소드를 호출하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="33b6177337aa1d78aed63ca0d334a34c3f7b86f6" translate="yes" xml:space="preserve">
          <source>If the named section is not supported, false will be returned.</source>
          <target state="translated">명명 된 섹션이 지원되지 않으면 false가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="c7ffd99a2666ace78a222547697eec2dbd191df2" translate="yes" xml:space="preserve">
          <source>If the option is not set, it will take the default value 60, which means the cached content will expire in 60 seconds.</source>
          <target state="translated">이 옵션을 설정하지 않으면 기본값 60이 사용됩니다. 즉, 캐시 된 내용이 60 초 후에 만료됩니다.</target>
        </trans-unit>
        <trans-unit id="991632dc9c80b91464d6917b5b70313af5d5a278" translate="yes" xml:space="preserve">
          <source>If the options already contain a &lt;code&gt;style&lt;/code&gt; element, the new style will be merged with the existing one. If a CSS property exists in both the new and the old styles, the old one may be overwritten if &lt;code&gt;$overwrite&lt;/code&gt; is true.</source>
          <target state="translated">옵션에 이미 &lt;code&gt;style&lt;/code&gt; 요소가 포함되어 있으면 새 스타일이 기존 스타일과 병합됩니다. CSS 속성이 새 스타일과 이전 스타일 모두에 존재하는 경우 &lt;code&gt;$overwrite&lt;/code&gt; 가 true이면 이전 스타일을 덮어 쓸 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bd38a58c74fc2e4fd0a9fb5cf2cdd1b5b9148919" translate="yes" xml:space="preserve">
          <source>If the parameter does not exist, the second parameter passed to this method will be returned.</source>
          <target state="translated">매개 변수가 없으면이 메소드에 전달 된 두 번째 매개 변수가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="1bad09223aa6043f0b902569689ce7f36cf25067" translate="yes" xml:space="preserve">
          <source>If the primary key is null during insertion, it will be populated with the actual value after insertion.</source>
          <target state="translated">삽입하는 동안 기본 키가 null이면 삽입 후 실제 값으로 채워집니다.</target>
        </trans-unit>
        <trans-unit id="f93039cbd82996308b8ae0155db98d81f47dc18a" translate="yes" xml:space="preserve">
          <source>If the query result changes, the dependency is considered as changed. The query is specified via the &lt;a href=&quot;yii-caching-dbdependency#%24sql-detail&quot;&gt;$sql&lt;/a&gt; property.</source>
          <target state="translated">쿼리 결과가 변경되면 종속성이 변경된 것으로 간주됩니다. 쿼리는 &lt;a href=&quot;yii-caching-dbdependency#%24sql-detail&quot;&gt;$ sql&lt;/a&gt; 속성을 통해 지정됩니다 .</target>
        </trans-unit>
        <trans-unit id="d9edfc64ae3639222067d216475f59e26ba12a8e" translate="yes" xml:space="preserve">
          <source>If the query result changes, the dependency is considered as changed. The query is specified via the &lt;a href=&quot;yii-caching-dbquerydependency#%24query-detail&quot;&gt;$query&lt;/a&gt; property.</source>
          <target state="translated">쿼리 결과가 변경되면 종속성이 변경된 것으로 간주됩니다. 쿼리는 &lt;a href=&quot;yii-caching-dbquerydependency#%24query-detail&quot;&gt;$ query&lt;/a&gt; 속성을 통해 지정됩니다 .</target>
        </trans-unit>
        <trans-unit id="c8d80c07f2b1c4a22cf81655e5e4686316013a15" translate="yes" xml:space="preserve">
          <source>If the refresh is successful, an &lt;a href=&quot;yii-db-baseactiverecord#EVENT_AFTER_REFRESH-detail&quot;&gt;EVENT_AFTER_REFRESH&lt;/a&gt; event will be triggered. This event is available since version 2.0.8.</source>
          <target state="translated">새로 고침에 성공하면 &lt;a href=&quot;yii-db-baseactiverecord#EVENT_AFTER_REFRESH-detail&quot;&gt;EVENT_AFTER_REFRESH&lt;/a&gt; 이벤트가 트리거됩니다. 이 이벤트는 버전 2.0.8부터 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="77c3cf84bd28206a063a2d48b84454e1d467a717" translate="yes" xml:space="preserve">
          <source>If the relationship involves a junction table, a new row will be inserted into the junction table which contains the primary key values from both models.</source>
          <target state="translated">관계에 정션 테이블이 포함 된 경우 두 모델의 기본 키 값이 포함 된 정션 테이블에 새 행이 삽입됩니다.</target>
        </trans-unit>
        <trans-unit id="0dfea4c4a20add74a144d414bb7319306468f13b" translate="yes" xml:space="preserve">
          <source>If the relationship involves a junction table, a new row will be inserted into the junction table which contains the primary key values from both records.</source>
          <target state="translated">관계에 정션 테이블이 포함 된 경우 두 레코드의 기본 키 값이 포함 된 정션 테이블에 새 행이 삽입됩니다.</target>
        </trans-unit>
        <trans-unit id="528b86f65ddcbc43111bc59039f52bef4d29816e" translate="yes" xml:space="preserve">
          <source>If the request is sent via secure channel (https)</source>
          <target state="translated">요청이 보안 채널 (https)을 통해 전송 된 경우</target>
        </trans-unit>
        <trans-unit id="77171108b842023023b62901521e12fa2b85b6e6" translate="yes" xml:space="preserve">
          <source>If the route contains no slashes at all (e.g. &lt;code&gt;index&lt;/code&gt;), it is considered to be an action ID of the current controller and will be prepended with &lt;a href=&quot;yii-base-controller#%24uniqueId-detail&quot;&gt;yii\web\Controller::$uniqueId&lt;/a&gt;;</source>
          <target state="translated">라우트에 슬래시가 전혀없는 경우 (예 : &lt;code&gt;index&lt;/code&gt; ), 현재 제어기의 조치 ID로 간주되며 &lt;a href=&quot;yii-base-controller#%24uniqueId-detail&quot;&gt;yii \ web \ Controller :: $ uniqueId&lt;/a&gt; 가 앞에 붙습니다 .</target>
        </trans-unit>
        <trans-unit id="0e4c11e702fe6ea152d353f6e5e8b5d29fc39bae" translate="yes" xml:space="preserve">
          <source>If the route contains no slashes at all, it is considered to be an action ID of the current controller and will be prepended with &lt;a href=&quot;yii-base-controller#%24uniqueId-detail&quot;&gt;yii\web\Controller::$uniqueId&lt;/a&gt;;</source>
          <target state="translated">경로에 슬래시가 전혀 없으면 현재 컨트롤러의 작업 ID로 간주되며 &lt;a href=&quot;yii-base-controller#%24uniqueId-detail&quot;&gt;yii \ web \ Controller :: $ uniqueId&lt;/a&gt; 앞에 추가됩니다 .</target>
        </trans-unit>
        <trans-unit id="8f199c5dc9161b654aab2fa62e45c8429d419620" translate="yes" xml:space="preserve">
          <source>If the route contains no slashes at all, it is considered to be an action ID of the current controller and will be prepended with the &lt;a href=&quot;yii-base-controller#%24uniqueId-detail&quot;&gt;uniqueId&lt;/a&gt; value of the current controller;</source>
          <target state="translated">경로에 슬래시가 전혀 없으면 현재 컨트롤러의 작업 ID로 간주되며 현재 컨트롤러의 &lt;a href=&quot;yii-base-controller#%24uniqueId-detail&quot;&gt;uniqueId&lt;/a&gt; 값이 앞에 붙습니다 .</target>
        </trans-unit>
        <trans-unit id="3838e013d15124b57ec37a951bf2edf7f0f06c01" translate="yes" xml:space="preserve">
          <source>If the route has no leading slash (e.g. &lt;code&gt;site/index&lt;/code&gt;), it is considered to be a route relative to the current module and will be prepended with the module's &lt;a href=&quot;yii-base-module#%24uniqueId-detail&quot;&gt;uniqueId&lt;/a&gt;.</source>
          <target state="translated">경로에 선행 슬래시 (예 : &lt;code&gt;site/index&lt;/code&gt; ) 가없는 경우 현재 모듈을 기준으로 한 경로로 간주되며 모듈의 &lt;a href=&quot;yii-base-module#%24uniqueId-detail&quot;&gt;uniqueId&lt;/a&gt; 가 앞에 붙습니다 .</target>
        </trans-unit>
        <trans-unit id="c0f7f945f90ddfa6b8e8aac1248995518474c2d3" translate="yes" xml:space="preserve">
          <source>If the route has no leading slash, it is considered to be a route relative to the current module and will be prepended with the &lt;a href=&quot;yii-base-module#%24uniqueId-detail&quot;&gt;uniqueId&lt;/a&gt; value of the current module.</source>
          <target state="translated">경로에 슬래시가 없으면 현재 모듈을 기준으로 한 경로로 간주되며 현재 모듈의 &lt;a href=&quot;yii-base-module#%24uniqueId-detail&quot;&gt;uniqueId&lt;/a&gt; 값이 앞에 붙습니다 .</target>
        </trans-unit>
        <trans-unit id="dba2ca08b788d93a668b0cf04bccd5bc4bf84f9b" translate="yes" xml:space="preserve">
          <source>If the route has no leading slash, it is considered to be a route relative to the current module and will be prepended with the module's uniqueId.</source>
          <target state="translated">경로에 선행 슬래시가 없으면 현재 모듈을 기준으로 한 경로로 간주되며 모듈의 uniqueId가 앞에 붙습니다.</target>
        </trans-unit>
        <trans-unit id="f9b0655708e7c7bc84f9755131ce868541ec8827" translate="yes" xml:space="preserve">
          <source>If the route is an empty string, the current &lt;a href=&quot;yii-base-controller#%24route-detail&quot;&gt;route&lt;/a&gt; will be used;</source>
          <target state="translated">경로가 빈 문자열이면 현재 &lt;a href=&quot;yii-base-controller#%24route-detail&quot;&gt;경로&lt;/a&gt; 가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="10fc382bcadef53e08e5b0075bb47c5977816c0b" translate="yes" xml:space="preserve">
          <source>If the route is an empty string, the currently requested &lt;a href=&quot;yii-base-controller#%24route-detail&quot;&gt;route&lt;/a&gt; will be used;</source>
          <target state="translated">경로가 빈 문자열이면 현재 요청 된 &lt;a href=&quot;yii-base-controller#%24route-detail&quot;&gt;경로&lt;/a&gt; 가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6d390401d5a2f0927e56256fc5350845e3e02c05" translate="yes" xml:space="preserve">
          <source>If the route is empty, use &lt;a href=&quot;yii-base-module#%24defaultRoute-detail&quot;&gt;$defaultRoute&lt;/a&gt;;</source>
          <target state="translated">경로가 비어 있으면 &lt;a href=&quot;yii-base-module#%24defaultRoute-detail&quot;&gt;$ defaultRoute를&lt;/a&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="acf331fe50a8d9665060ecced5e6ae0ff505ab28" translate="yes" xml:space="preserve">
          <source>If the schema is not cached, or it is necessary to run other queries while the batch query is being processed, you can create a separate unbuffered connection to the database:</source>
          <target state="translated">스키마가 캐시되지 않거나 배치 조회가 처리되는 동안 다른 조회를 실행해야하는 경우 데이터베이스에 대한 별도의 버퍼되지 않은 연결을 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4c1b85fdce45cf1b0309ee0e1142afc27a62e326" translate="yes" xml:space="preserve">
          <source>If the server should be flagged as online upon a failure.</source>
          <target state="translated">장애시 서버가 온라인으로 플래그 지정되어야하는 경우</target>
        </trans-unit>
        <trans-unit id="a2c301f0800ad79885ea318453a7929c4d6f23bb" translate="yes" xml:space="preserve">
          <source>If the server should be flagged as online upon a failure. This is used by memcache only.</source>
          <target state="translated">장애시 서버가 온라인으로 플래그 지정되어야하는 경우 이것은 memcache에서만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="cd09912a220042ec76431b08939b461985d7292a" translate="yes" xml:space="preserve">
          <source>If the session variable does not exist, the &lt;code&gt;$defaultValue&lt;/code&gt; will be returned.</source>
          <target state="translated">세션 변수가 존재하지 않으면 &lt;code&gt;$defaultValue&lt;/code&gt; 가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="b8af8fd9bf5ece008cfde6d5a5ff5e5ec4cd2c9d" translate="yes" xml:space="preserve">
          <source>If the specified migration has already been applied before, any later applied migrations will be reverted.</source>
          <target state="translated">지정된 마이그레이션이 이전에 이미 적용된 경우 나중에 적용된 마이그레이션이 되돌려집니다.</target>
        </trans-unit>
        <trans-unit id="5c3984832c3d7b5cae3b14747a16e7d495d9306d" translate="yes" xml:space="preserve">
          <source>If the specified name already exists, the old value will be overwritten.</source>
          <target state="translated">지정된 이름이 이미 존재하면 이전 값을 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="6dcf7e963583b93cd66a4735b0e5fa1a0a89d01f" translate="yes" xml:space="preserve">
          <source>If the table name contains schema prefix, the prefix will also be properly quoted. If the table name is already quoted or contains '(' or '{{', then this method will do nothing.</source>
          <target state="translated">테이블 이름에 스키마 접두사가 포함 된 경우 접두사도 올바르게 인용됩니다. 테이블 이름이 이미 인용되었거나 '('또는 '{{'을 포함하는 경우이 메소드는 아무 작업도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a4b06fb2e4d3186151060a68c1c913150f1d75af" translate="yes" xml:space="preserve">
          <source>If the table name contains schema prefix, the prefix will also be properly quoted. If the table name is already quoted or contains special characters including '(', '[[' and '{{', then this method will do nothing.</source>
          <target state="translated">테이블 이름에 스키마 접두사가 포함 된 경우 접두사도 올바르게 인용됩니다. 테이블 이름이 이미 인용되었거나 '(', '[['및 '{{')을 포함한 특수 문자가 포함 된 경우이 메소드는 아무 작업도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f91dae3e2c4249b13e68f7a97f7d516a7e97fd9b" translate="yes" xml:space="preserve">
          <source>If the table's primary key is auto-incremental and is &lt;code&gt;null&lt;/code&gt; during insertion, it will be populated with the actual value after insertion.</source>
          <target state="translated">테이블의 기본 키가 자동 증분이고 삽입 중에 &lt;code&gt;null&lt;/code&gt; 인 경우 삽입 후 실제 값으로 채워집니다.</target>
        </trans-unit>
        <trans-unit id="6c7b978da51a4ba24ea582ab630c0078fb0250b0" translate="yes" xml:space="preserve">
          <source>If the target and the source language codes are the same, the original file will be returned.</source>
          <target state="translated">대상과 소스 언어 코드가 동일하면 원본 파일이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="8125400e5c5d70ac31f1d8f0d996fd9ffa3353f4" translate="yes" xml:space="preserve">
          <source>If the underlying DBMS supports transactions, you can perform transactional SQL queries like the following:</source>
          <target state="translated">기본 DBMS가 트랜잭션을 지원하는 경우 다음과 같은 트랜잭션 SQL 쿼리를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="615abde542964e67dddd6c3082eddfd5364b4d99" translate="yes" xml:space="preserve">
          <source>If the user identity cannot be determined by session, this method will try to &lt;a href=&quot;yii-web-user#loginByCookie()-detail&quot;&gt;login by cookie&lt;/a&gt; if &lt;a href=&quot;yii-web-user#%24enableAutoLogin-detail&quot;&gt;$enableAutoLogin&lt;/a&gt; is true.</source>
          <target state="translated">세션별로 사용자 ID를 확인할 수없는 경우 &lt;a href=&quot;yii-web-user#%24enableAutoLogin-detail&quot;&gt;$ enableAutoLogin&lt;/a&gt; 이 true 인 경우이 메소드는 &lt;a href=&quot;yii-web-user#loginByCookie()-detail&quot;&gt;쿠키&lt;/a&gt; 로 로그인을 시도 합니다.</target>
        </trans-unit>
        <trans-unit id="705592b8c2383f219608117cc81ad438abd7d266" translate="yes" xml:space="preserve">
          <source>If the user is a guest, it will call &lt;a href=&quot;yii-web-user#loginRequired()-detail&quot;&gt;yii\web\User::loginRequired()&lt;/a&gt; to redirect the user browser to the login page.</source>
          <target state="translated">사용자가 게스트 인 경우 &lt;a href=&quot;yii-web-user#loginRequired()-detail&quot;&gt;yii \ web \ User :: loginRequired ()&lt;/a&gt; 를 호출 하여 사용자 브라우저를 로그인 페이지로 리디렉션합니다.</target>
        </trans-unit>
        <trans-unit id="6af13fa95d246847d3bc07a440ae9cd0789781bb" translate="yes" xml:space="preserve">
          <source>If the user is already authenticated, it will throw a &lt;a href=&quot;yii-web-forbiddenhttpexception&quot;&gt;yii\web\ForbiddenHttpException&lt;/a&gt;.</source>
          <target state="translated">사용자가 이미 인증 된 경우 &lt;a href=&quot;yii-web-forbiddenhttpexception&quot;&gt;yii \ web \ ForbiddenHttpException이 발생&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="2e10aa866d4fbdb8c9c091aa3afb0a9ff74dd6f8" translate="yes" xml:space="preserve">
          <source>If the value is empty</source>
          <target state="translated">값이 비어있는 경우</target>
        </trans-unit>
        <trans-unit id="e3aebffcd1da079cb9b912016de5c6f7b6f93f05" translate="yes" xml:space="preserve">
          <source>If the value is null or an &lt;a href=&quot;yii-db-expression&quot;&gt;yii\db\Expression&lt;/a&gt;, it will not be converted.</source>
          <target state="translated">값이 null 또는 &lt;a href=&quot;yii-db-expression&quot;&gt;yii \ db \ Expression&lt;/a&gt; 인 경우 변환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3d9dc1b09b963e65cfad2ba6083954b4fd87f8ea" translate="yes" xml:space="preserve">
          <source>If the value of an attribute is an array, it will be handled as follows:</source>
          <target state="translated">속성 값이 배열이면 다음과 같이 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="9f91e357d1a5b97858654c415b39e699c66e7aa7" translate="yes" xml:space="preserve">
          <source>If the variable does not exist, the &lt;code&gt;$defaultValue&lt;/code&gt; will be returned.</source>
          <target state="translated">변수가 존재하지 않으면 &lt;code&gt;$defaultValue&lt;/code&gt; 가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="b4e0283136edc7546152648f82c7fe8973f97484" translate="yes" xml:space="preserve">
          <source>If the view is rendered with a &lt;a href=&quot;yii-base-view#%24context-detail&quot;&gt;context&lt;/a&gt; and the context implements &lt;a href=&quot;yii-base-viewcontextinterface&quot;&gt;yii\base\ViewContextInterface&lt;/a&gt;, the view file path is formed by prefixing the &lt;a href=&quot;yii-base-viewcontextinterface#getViewPath()-detail&quot;&gt;view path&lt;/a&gt; of the context to the view name. This mainly applies to the views rendered within controllers and widgets. For example, &lt;code&gt;about&lt;/code&gt; will be resolved into &lt;code&gt;@app/views/site/about.php&lt;/code&gt; if the context is the controller &lt;code&gt;SiteController&lt;/code&gt;.</source>
          <target state="translated">뷰가 &lt;a href=&quot;yii-base-view#%24context-detail&quot;&gt;컨텍스트&lt;/a&gt; 로 렌더링되고 컨텍스트가 &lt;a href=&quot;yii-base-viewcontextinterface&quot;&gt;yii \ base \ ViewContextInterface를&lt;/a&gt; 구현하는 경우 컨텍스트 의 &lt;a href=&quot;yii-base-viewcontextinterface#getViewPath()-detail&quot;&gt;보기 경로&lt;/a&gt; 앞에 보기 이름을 접두어로 붙여서보기 파일 경로가 형성됩니다 . 이것은 주로 컨트롤러 및 위젯 내에서 렌더링 된 뷰에 적용됩니다. 예를 들어 컨텍스트가 컨트롤러 &lt;code&gt;SiteController&lt;/code&gt; 인 경우 &lt;code&gt;about&lt;/code&gt; 은 &lt;code&gt;@app/views/site/about.php&lt;/code&gt; 확인됩니다 .</target>
        </trans-unit>
        <trans-unit id="b07718384b1a789030f1bbc8e8c74be97baa6e2a" translate="yes" xml:space="preserve">
          <source>If the view name does not contain a file extension, it will use the default one &lt;code&gt;.php&lt;/code&gt;.</source>
          <target state="translated">뷰 이름에 파일 확장자가 없으면 기본 &lt;code&gt;.php&lt;/code&gt; 가 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="143675328ee1511cec615714266cf85228a771f7" translate="yes" xml:space="preserve">
          <source>If the view name starts with a single slash &lt;code&gt;/&lt;/code&gt;, the view file path is formed by prefixing the view name with the &lt;a href=&quot;yii-base-module#%24viewPath-detail&quot;&gt;view path&lt;/a&gt; of the currently active &lt;a href=&quot;guide-structure-modules&quot;&gt;module&lt;/a&gt;. If there is no active module, &lt;code&gt;@app/views/ViewName&lt;/code&gt; will be used. For example, &lt;code&gt;/user/create&lt;/code&gt; will be resolved into &lt;code&gt;@app/modules/user/views/user/create.php&lt;/code&gt;, if the currently active module is &lt;code&gt;user&lt;/code&gt;. If there is no active module, the view file path would be &lt;code&gt;@app/views/user/create.php&lt;/code&gt;.</source>
          <target state="translated">보기 이름이 단일 슬래시 &lt;code&gt;/&lt;/code&gt; 로 시작하는 경우보기 파일 경로는보기 이름 앞에 현재 활성화 된 &lt;a href=&quot;guide-structure-modules&quot;&gt;모듈&lt;/a&gt; 의 &lt;a href=&quot;yii-base-module#%24viewPath-detail&quot;&gt;보기 경로&lt;/a&gt; 를 추가하여 구성 됩니다. 활성 모듈이 없으면 &lt;code&gt;@app/views/ViewName&lt;/code&gt; 이 사용됩니다. 예를 들어, 현재 활성화 된 모듈이 &lt;code&gt;user&lt;/code&gt; 인 경우 &lt;code&gt;/user/create&lt;/code&gt; 는 &lt;code&gt;@app/modules/user/views/user/create.php&lt;/code&gt; 로 분석됩니다 . 활성 모듈이 없으면보기 파일 경로는 &lt;code&gt;@app/views/user/create.php&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="35abd4ea596b4641d909b8e80a5f564e1ff92982" translate="yes" xml:space="preserve">
          <source>If the view name starts with double slashes &lt;code&gt;//&lt;/code&gt;, the corresponding view file path would be &lt;code&gt;@app/views/ViewName&lt;/code&gt;. That is, the view is looked for under the &lt;a href=&quot;yii-base-module#%24viewPath-detail&quot;&gt;application's view path&lt;/a&gt;. For example, &lt;code&gt;//site/about&lt;/code&gt; will be resolved into &lt;code&gt;@app/views/site/about.php&lt;/code&gt;.</source>
          <target state="translated">뷰 이름이 이중 슬래시 &lt;code&gt;//&lt;/code&gt; 로 시작 하면 해당 뷰 파일 경로는 &lt;code&gt;@app/views/ViewName&lt;/code&gt; 입니다. 즉,보기는 &lt;a href=&quot;yii-base-module#%24viewPath-detail&quot;&gt;애플리케이션의보기 경로&lt;/a&gt; 아래에서 찾습니다 . 예를 들어 &lt;code&gt;//site/about&lt;/code&gt; 은 &lt;code&gt;@app/views/site/about.php&lt;/code&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="170fa172f5ef290babcc98d20f22052ffd6efeb1" translate="yes" xml:space="preserve">
          <source>If there are any unapplied migrations earlier than the specified one, they will all be applied before the specified migration is applied.</source>
          <target state="translated">지정된 마이그레이션 이전에 적용되지 않은 마이그레이션이 있으면 지정된 마이그레이션이 적용되기 전에 모두 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="3d6269efdd87d35e81a6e30b44c8c4d25feaf266" translate="yes" xml:space="preserve">
          <source>If there are existing flash messages with the same key, the new one will be appended to the existing message array.</source>
          <target state="translated">동일한 키를 가진 기존 플래시 메시지가있는 경우 새 플래시 메시지가 기존 메시지 배열에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="675bacb81959d8deb64b51bb88241ea7a951784d" translate="yes" xml:space="preserve">
          <source>If there are less than count bytes available, return as many as are available. If no more data is available, return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">사용 가능한 개수보다 적은 바이트가 있으면 사용 가능한만큼 반환하십시오. 더 이상 사용할 수있는 데이터가 없으면 &lt;code&gt;false&lt;/code&gt; 를 반환하십시오 .</target>
        </trans-unit>
        <trans-unit id="f507778199bb49929c2f181eacac367bbb5b8865" translate="yes" xml:space="preserve">
          <source>If there is a match</source>
          <target state="translated">일치하는 경우</target>
        </trans-unit>
        <trans-unit id="b7395b370d45629b7dc70fa54628e41910a9ce57" translate="yes" xml:space="preserve">
          <source>If there is already a cookie with the same name in the collection, it will be removed first.</source>
          <target state="translated">컬렉션에 동일한 이름을 가진 쿠키가 이미 있으면 먼저 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="37c9451c80c6201c31b145498ab546069975fb11" translate="yes" xml:space="preserve">
          <source>If there is already a header with the same name, it will be replaced.</source>
          <target state="translated">이름이 같은 헤더가 이미 있으면 교체됩니다.</target>
        </trans-unit>
        <trans-unit id="56742f49bb631ba105a20e59ff25c692c57251d4" translate="yes" xml:space="preserve">
          <source>If there is already a header with the same name, the new one will be appended to it instead of replacing it.</source>
          <target state="translated">이름이 같은 헤더가 이미있는 경우 새 헤더가 교체되지 않고 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="a77342df47cc04f34e01b7fc3f1a0ebbf922cef6" translate="yes" xml:space="preserve">
          <source>If there is already a header with the same name, the new one will be ignored.</source>
          <target state="translated">이름이 같은 헤더가 이미 있으면 새 헤더는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="3fb1daa693c715a7f944d8ae3cf782d4929b4458" translate="yes" xml:space="preserve">
          <source>If there is no corresponding themed file, the original file will be returned.</source>
          <target state="translated">해당 테마 파일이 없으면 원본 파일이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="8e4ad10c5e73f8be318acbc44cbef562d5fb588f" translate="yes" xml:space="preserve">
          <source>If there is no validation error, an empty error summary markup will still be generated, but it will be hidden.</source>
          <target state="translated">유효성 검사 오류가없는 경우 빈 오류 요약 마크 업이 계속 생성되지만 숨겨집니다.</target>
        </trans-unit>
        <trans-unit id="5fe82a202e7d5bdd734ae4113e13e67b775c3c26" translate="yes" xml:space="preserve">
          <source>If there's active tab defined</source>
          <target state="translated">활성 탭이 정의 된 경우</target>
        </trans-unit>
        <trans-unit id="3283b3c2e482ab68171dc0341bb5983f400daef0" translate="yes" xml:space="preserve">
          <source>If this callback returns &lt;a href=&quot;yii-web-response&quot;&gt;yii\web\Response&lt;/a&gt; instance, it will be used as action response, otherwise redirection to &lt;a href=&quot;yii-authclient-authaction#%24successUrl-detail&quot;&gt;$successUrl&lt;/a&gt; will be performed.</source>
          <target state="translated">이 콜백이 &lt;a href=&quot;yii-web-response&quot;&gt;yii \ web \ Response&lt;/a&gt; 인스턴스를 반환 하면 작업 응답으로 사용되며, 그렇지 않으면 &lt;a href=&quot;yii-authclient-authaction#%24successUrl-detail&quot;&gt;$ successUrl로&lt;/a&gt; 리디렉션됩니다 .</target>
        </trans-unit>
        <trans-unit id="b8fc3244a33ca746e6b9ed2492e56036d2ddd8b6" translate="yes" xml:space="preserve">
          <source>If this field is not set - no host name check will be performed.</source>
          <target state="translated">이 필드를 설정하지 않으면 호스트 이름 확인이 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0e866213638741762a83c4f351d7b8b96a6ec683" translate="yes" xml:space="preserve">
          <source>If this is an anonymous function, it will be called for each row and the return value will be used as the value to display for every data model. The signature of this function should be: &lt;code&gt;function ($model, $key, $index, $column)&lt;/code&gt;. Where &lt;code&gt;$model&lt;/code&gt;, &lt;code&gt;$key&lt;/code&gt;, and &lt;code&gt;$index&lt;/code&gt; refer to the model, key and index of the row currently being rendered and &lt;code&gt;$column&lt;/code&gt; is a reference to the &lt;a href=&quot;yii-grid-datacolumn&quot;&gt;yii\grid\DataColumn&lt;/a&gt; object.</source>
          <target state="translated">이것이 익명 함수 인 경우 각 행에 대해 호출되며 리턴 값은 모든 데이터 모델에 표시 할 값으로 사용됩니다. 이 함수의 서명은 &lt;code&gt;function ($model, $key, $index, $column)&lt;/code&gt; 이어야합니다 . 여기서 &lt;code&gt;$model&lt;/code&gt; , &lt;code&gt;$key&lt;/code&gt; 및 &lt;code&gt;$index&lt;/code&gt; 는 현재 렌더링중인 행의 모델, 키 및 색인을 나타내고 &lt;code&gt;$column&lt;/code&gt; 은 &lt;a href=&quot;yii-grid-datacolumn&quot;&gt;yii \ grid \ DataColumn&lt;/a&gt; 객체에 대한 참조 입니다.</target>
        </trans-unit>
        <trans-unit id="fbf6722cdafe67c212a5ddf61cafab63f5cb1cb2" translate="yes" xml:space="preserve">
          <source>If this is an array, it will be passed directly to &lt;a href=&quot;yii-web-user#can()-detail&quot;&gt;yii\web\User::can()&lt;/a&gt;. For example for passing an ID from the current request, you may use the following:</source>
          <target state="translated">이것이 배열이면 &lt;a href=&quot;yii-web-user#can()-detail&quot;&gt;yii \ web \ User :: can ()으로&lt;/a&gt; 직접 전달됩니다 . 예를 들어 현재 요청에서 ID를 전달하기 위해 다음을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="761eb1705ad22831150a87cc36264273756425bf" translate="yes" xml:space="preserve">
          <source>If this is not set, &lt;code&gt;$model[$attribute]&lt;/code&gt; will be used to obtain the value, where &lt;code&gt;$attribute&lt;/code&gt; is the value of &lt;a href=&quot;yii-grid-datacolumn#%24attribute-detail&quot;&gt;$attribute&lt;/a&gt;.</source>
          <target state="translated">이것이 설정되지 않은 경우, &lt;code&gt;$model[$attribute]&lt;/code&gt; 값을 얻기 위해 사용될 것이다 &lt;code&gt;$attribute&lt;/code&gt; 의 값 &lt;a href=&quot;yii-grid-datacolumn#%24attribute-detail&quot;&gt;$ 속성&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="794189c37f43f22f9917f60650b2dfcecb055bfd" translate="yes" xml:space="preserve">
          <source>If this is not set, the asset manager will use the default CRC32 and filemtime in the &lt;code&gt;hash&lt;/code&gt; method.</source>
          <target state="translated">이것이 설정되지 않으면 자산 관리자는 &lt;code&gt;hash&lt;/code&gt; 방법 에서 기본 CRC32 및 filemtime을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="c83721f74f2afcc718a014333d39fecdc6b37065" translate="yes" xml:space="preserve">
          <source>If this is not set, the following rules will be used to determine the keys of the data models:</source>
          <target state="translated">이를 설정하지 않으면 다음 규칙을 사용하여 데이터 모델의 키를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="bf414659f003b83c3edf7f1c703c1d5b71419781" translate="yes" xml:space="preserve">
          <source>If this is not set, the keys of the &lt;a href=&quot;yii-data-basedataprovider#%24models-detail&quot;&gt;$models&lt;/a&gt; array will be used.</source>
          <target state="translated">설정하지 않으면 &lt;a href=&quot;yii-data-basedataprovider#%24models-detail&quot;&gt;$ models&lt;/a&gt; 배열 의 키 가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="92a4fa48092d8c3b5d7bfd67fbd44b3aa340a186" translate="yes" xml:space="preserve">
          <source>If this method is called for the first time, it will try to open a master connection.</source>
          <target state="translated">이 메소드를 처음으로 호출하면 마스터 연결을 열려고 시도합니다.</target>
        </trans-unit>
        <trans-unit id="e01642b6d332ec2ef8cf5bdc44df748cdf249d18" translate="yes" xml:space="preserve">
          <source>If this method is called for the first time, it will try to open a slave connection when &lt;a href=&quot;yii-db-connection#%24enableSlaves-detail&quot;&gt;$enableSlaves&lt;/a&gt; is true.</source>
          <target state="translated">이 메소드를 처음 호출하면 &lt;a href=&quot;yii-db-connection#%24enableSlaves-detail&quot;&gt;$ enableSlaves&lt;/a&gt; 가 true 일 때 슬레이브 연결을 열려고 시도 합니다.</target>
        </trans-unit>
        <trans-unit id="4b7817e9aab2d820377ca6bbbbf78628c37fdfe5" translate="yes" xml:space="preserve">
          <source>If this method is overridden in a child class, it is recommended that</source>
          <target state="translated">이 메서드가 자식 클래스에서 재정의되는 경우 다음을 수행하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="c5725d8902bb45ae2616fbe9c182021cab28ca93" translate="yes" xml:space="preserve">
          <source>If this option is disabled by the web server, when this method is called a download configuration dialog will open but the downloaded file will have 0 bytes.</source>
          <target state="translated">웹 서버에서이 옵션을 비활성화하면이 방법을 호출 할 때 다운로드 구성 대화 상자가 열리지 만 다운로드 된 파일의 크기는 0 바이트입니다.</target>
        </trans-unit>
        <trans-unit id="5ec8809778f160f65925278e47ba02f9f4c26b6b" translate="yes" xml:space="preserve">
          <source>If this property is &lt;code&gt;null&lt;/code&gt;, a 403 HTTP exception will be raised when &lt;a href=&quot;yii-web-user#loginRequired()-detail&quot;&gt;loginRequired()&lt;/a&gt; is called.</source>
          <target state="translated">이 속성이 &lt;code&gt;null&lt;/code&gt; 인 경우 &lt;a href=&quot;yii-web-user#loginRequired()-detail&quot;&gt;loginRequired ()&lt;/a&gt; 가 호출 될 때 403 HTTP 예외가 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="d3eb3feb60ffc05455aedb0bb8723cfe18b1b43a" translate="yes" xml:space="preserve">
          <source>If this property is &lt;code&gt;null&lt;/code&gt;, then &lt;code&gt;session_cache_limiter()&lt;/code&gt; will not be called. As a result, PHP will send headers according to the &lt;code&gt;session.cache_limiter&lt;/code&gt; PHP ini setting.</source>
          <target state="translated">이 프로퍼티이 &lt;code&gt;null&lt;/code&gt; 의 경우 , &lt;code&gt;session_cache_limiter()&lt;/code&gt; 는 호출되지 않습니다. 결과적으로 PHP는 &lt;code&gt;session.cache_limiter&lt;/code&gt; PHP ini 설정 에 따라 헤더를 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="d8f6ebb990cfb2c3d2bed9d15e01ef3ff1669c27" translate="yes" xml:space="preserve">
          <source>If this property is an array, a dropdown list will be generated that uses this property value as the list options.</source>
          <target state="translated">이 속성이 배열 인 경우이 속성 값을 목록 옵션으로 사용하는 드롭 다운 목록이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="8e67c42d2d158b7329818fac60a3394a4f446e33" translate="yes" xml:space="preserve">
          <source>If this property is empty or not set, language negotiation will be skipped.</source>
          <target state="translated">이 속성이 비어 있거나 설정되어 있지 않으면 언어 협상을 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="ddb881d35c0a9793c4530636b14e5dc121a4bf66" translate="yes" xml:space="preserve">
          <source>If this property is empty or not set, response format negotiation will be skipped.</source>
          <target state="translated">이 속성이 비어 있거나 설정되어 있지 않으면 응답 형식 협상을 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="405afefe29b13f7aef198bc023c70a501085c899" translate="yes" xml:space="preserve">
          <source>If this property is empty, no authentication will be performed.</source>
          <target state="translated">이 속성이 비어 있으면 인증이 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6c328ce57a50b4e54b6d098d9573758322fbc020" translate="yes" xml:space="preserve">
          <source>If this property is false, it means the whole asset bundle feature is disabled and &lt;a href=&quot;yii-web-assetmanager#getBundle()-detail&quot;&gt;getBundle()&lt;/a&gt; will always return null.</source>
          <target state="translated">이 특성이 false 인 경우 전체 자산 번들 기능이 사용 불가능하고 &lt;a href=&quot;yii-web-assetmanager#getBundle()-detail&quot;&gt;getBundle ()&lt;/a&gt; 이 항상 널을 리턴 함을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="aef0a3538f3df323434f2c81123afd00592192b5" translate="yes" xml:space="preserve">
          <source>If this property is not set or empty, it means this rule applies to all roles.</source>
          <target state="translated">이 특성이 설정되지 않거나 비어 있지 않으면이 규칙이 모든 역할에 적용됨을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="6c3529cc5dd62162c7cfc46f76acb9eecc8c5a0c" translate="yes" xml:space="preserve">
          <source>If this property is not set, a text field will be generated as the filter input;</source>
          <target state="translated">이 특성을 설정하지 않으면 텍스트 필드가 필터 입력으로 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="d2aa03b44febc64b0a26b4c7ef2415cc3db737a0" translate="yes" xml:space="preserve">
          <source>If this property is not set, button URLs will be created using &lt;a href=&quot;yii-grid-actioncolumn#createUrl()-detail&quot;&gt;createUrl()&lt;/a&gt;.</source>
          <target state="translated">이 속성을 설정하지 않으면 &lt;a href=&quot;yii-grid-actioncolumn#createUrl()-detail&quot;&gt;createUrl ()을&lt;/a&gt; 사용하여 버튼 URL이 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="3e69efef20b9de65aaf0a9d9599496343fb846f0" translate="yes" xml:space="preserve">
          <source>If this property is not set, the default value will be obtained from &lt;code&gt;Yii::$app-&amp;gt;formatter-&amp;gt;dateFormat&lt;/code&gt;, see &lt;a href=&quot;yii-i18n-formatter#%24dateFormat-detail&quot;&gt;yii\i18n\Formatter::$dateFormat&lt;/a&gt; for details. Since version 2.0.8 the default value will be determined from different formats of the formatter class, dependent on the value of &lt;a href=&quot;yii-validators-datevalidator#%24type-detail&quot;&gt;$type&lt;/a&gt;:</source>
          <target state="translated">이 속성을 설정하지 않으면 기본값은 &lt;code&gt;Yii::$app-&amp;gt;formatter-&amp;gt;dateFormat&lt;/code&gt; 에서 가져옵니다 . 자세한 내용 은 &lt;a href=&quot;yii-i18n-formatter#%24dateFormat-detail&quot;&gt;yii \ i18n \ Formatter :: $ dateFormat&lt;/a&gt; 을 참조하십시오. 버전 2.0.8부터 기본값은 &lt;a href=&quot;yii-validators-datevalidator#%24type-detail&quot;&gt;$ type&lt;/a&gt; 값에 따라 형식 기 클래스의 다른 형식에서 결정됩니다 .</target>
        </trans-unit>
        <trans-unit id="98d105681c9d81a0809894b0464b26c0a4dd813a" translate="yes" xml:space="preserve">
          <source>If this property is not set, the resource arrays will be directly returned without using envelope. The pagination information as shown in &lt;code&gt;_links&lt;/code&gt; and &lt;code&gt;_meta&lt;/code&gt; can be accessed from the response HTTP headers.</source>
          <target state="translated">이 속성을 설정하지 않으면 봉투를 사용하지 않고 리소스 배열이 직접 반환됩니다. &lt;code&gt;_links&lt;/code&gt; 및 &lt;code&gt;_meta&lt;/code&gt; 에 표시된 페이지 매김 정보 는 응답 HTTP 헤더에서 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f59858c6ae5ce0a9a0f7dd8716effab2652e820f" translate="yes" xml:space="preserve">
          <source>If this property is not set, the username information will be considered as an access token while the password information will be ignored. The &lt;a href=&quot;yii-web-user#loginByAccessToken()-detail&quot;&gt;yii\web\User::loginByAccessToken()&lt;/a&gt; method will be called to authenticate and login the user.</source>
          <target state="translated">이 특성을 설정하지 않으면 사용자 이름 정보는 액세스 토큰으로 간주되지만 비밀번호 정보는 무시됩니다. &lt;a href=&quot;yii-web-user#loginByAccessToken()-detail&quot;&gt;YII \ 웹 \ 사용자 : loginByAccessToken ()&lt;/a&gt; 메소드는 인증하고 사용자가 로그인 할 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="1b11585caec536adf53c89c8d43d6fd0e82f525e" translate="yes" xml:space="preserve">
          <source>If this property is specified as a callback, it should have the following signature:</source>
          <target state="translated">이 속성이 콜백으로 지정되면 다음 서명이 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="e58b23b2569be835f78c6402f0301eef9b4d3346" translate="yes" xml:space="preserve">
          <source>If this property is specified as an anonymous function, it should have the following signature:</source>
          <target state="translated">이 특성이 익명 함수로 지정되면 다음 서명이 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="a86cc1af09da5de44b3ddd37d7899250d535585a" translate="yes" xml:space="preserve">
          <source>If this record is the result of a query and the attribute is not loaded, &lt;code&gt;null&lt;/code&gt; will be returned.</source>
          <target state="translated">이 레코드가 쿼리의 결과이고 속성이로드되지 않으면 &lt;code&gt;null&lt;/code&gt; 이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="595d230f5bfe79f8070489d0205e83a77b43797f" translate="yes" xml:space="preserve">
          <source>If translation for specific locale code such as &lt;code&gt;en-US&lt;/code&gt; isn't found it tries more generic &lt;code&gt;en&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;en-US&lt;/code&gt; 와 같은 특정 로캘 코드에 대한 번역을 찾지 못하면보다 일반적인 &lt;code&gt;en&lt;/code&gt; 을 시도합니다 .</target>
        </trans-unit>
        <trans-unit id="2a4191dd0e6f33b444f0dc7b6e1f2840830e59ac" translate="yes" xml:space="preserve">
          <source>If translation for specific locale code such as &lt;code&gt;en-US&lt;/code&gt; isn't found it tries more generic &lt;code&gt;en&lt;/code&gt;. When both are present, the &lt;code&gt;en-US&lt;/code&gt; messages will be merged over &lt;code&gt;en&lt;/code&gt;. See &lt;a href=&quot;yii-i18n-gettextmessagesource#loadFallbackMessages()-detail&quot;&gt;loadFallbackMessages()&lt;/a&gt; for details. If the $language is less specific than &lt;a href=&quot;yii-i18n-messagesource#%24sourceLanguage-detail&quot;&gt;$sourceLanguage&lt;/a&gt;, the method will try to load the messages for &lt;a href=&quot;yii-i18n-messagesource#%24sourceLanguage-detail&quot;&gt;$sourceLanguage&lt;/a&gt;. For example: &lt;a href=&quot;yii-i18n-messagesource#%24sourceLanguage-detail&quot;&gt;$sourceLanguage&lt;/a&gt; is &lt;code&gt;en-GB&lt;/code&gt;, $language is &lt;code&gt;en&lt;/code&gt;. The method will load the messages for &lt;code&gt;en&lt;/code&gt; and merge them over &lt;code&gt;en-GB&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;en-US&lt;/code&gt; 와 같은 특정 로캘 코드에 대한 번역을 찾지 못하면보다 일반적인 &lt;code&gt;en&lt;/code&gt; 을 시도합니다 . 둘 다 존재하면 &lt;code&gt;en-US&lt;/code&gt; 메시지가 &lt;code&gt;en&lt;/code&gt; 위로 병합됩니다 . 자세한 내용은 &lt;a href=&quot;yii-i18n-gettextmessagesource#loadFallbackMessages()-detail&quot;&gt;loadFallbackMessages ()&lt;/a&gt; 를 참조하십시오. $ language가 &lt;a href=&quot;yii-i18n-messagesource#%24sourceLanguage-detail&quot;&gt;$ sourceLanguage&lt;/a&gt; 보다 덜 구체적이면 이 메소드는 &lt;a href=&quot;yii-i18n-messagesource#%24sourceLanguage-detail&quot;&gt;$ sourceLanguage에&lt;/a&gt; 대한 메시지를로드하려고 시도합니다 . 예를 들어 &lt;a href=&quot;yii-i18n-messagesource#%24sourceLanguage-detail&quot;&gt;$ sourceLanguage&lt;/a&gt; 는 &lt;code&gt;en-GB&lt;/code&gt; 이고 $ language는 &lt;code&gt;en&lt;/code&gt; 입니다. 이 메소드는 &lt;code&gt;en&lt;/code&gt; 에 대한 메시지를로드하고 &lt;code&gt;en-GB&lt;/code&gt; 를 통해 병합합니다 .</target>
        </trans-unit>
        <trans-unit id="bdaf153b5c170ff45ca76308bff663eff053e8ad" translate="yes" xml:space="preserve">
          <source>If translation for specific locale code such as &lt;code&gt;en-US&lt;/code&gt; isn't found it tries more generic &lt;code&gt;en&lt;/code&gt;. When both are present, the &lt;code&gt;en-US&lt;/code&gt; messages will be merged over &lt;code&gt;en&lt;/code&gt;. See &lt;a href=&quot;yii-i18n-phpmessagesource#loadFallbackMessages()-detail&quot;&gt;loadFallbackMessages()&lt;/a&gt; for details. If the $language is less specific than &lt;a href=&quot;yii-i18n-messagesource#%24sourceLanguage-detail&quot;&gt;$sourceLanguage&lt;/a&gt;, the method will try to load the messages for &lt;a href=&quot;yii-i18n-messagesource#%24sourceLanguage-detail&quot;&gt;$sourceLanguage&lt;/a&gt;. For example: &lt;a href=&quot;yii-i18n-messagesource#%24sourceLanguage-detail&quot;&gt;$sourceLanguage&lt;/a&gt; is &lt;code&gt;en-GB&lt;/code&gt;, $language is &lt;code&gt;en&lt;/code&gt;. The method will load the messages for &lt;code&gt;en&lt;/code&gt; and merge them over &lt;code&gt;en-GB&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;en-US&lt;/code&gt; 와 같은 특정 로캘 코드에 대한 번역을 찾지 못하면보다 일반적인 &lt;code&gt;en&lt;/code&gt; 을 시도합니다 . 둘 다 존재하면 &lt;code&gt;en-US&lt;/code&gt; 메시지가 &lt;code&gt;en&lt;/code&gt; 위로 병합됩니다 . 자세한 내용은 &lt;a href=&quot;yii-i18n-phpmessagesource#loadFallbackMessages()-detail&quot;&gt;loadFallbackMessages ()&lt;/a&gt; 를 참조하십시오. $ language가 &lt;a href=&quot;yii-i18n-messagesource#%24sourceLanguage-detail&quot;&gt;$ sourceLanguage&lt;/a&gt; 보다 덜 구체적이면 이 메소드는 &lt;a href=&quot;yii-i18n-messagesource#%24sourceLanguage-detail&quot;&gt;$ sourceLanguage에&lt;/a&gt; 대한 메시지를로드하려고 시도합니다 . 예를 들어 &lt;a href=&quot;yii-i18n-messagesource#%24sourceLanguage-detail&quot;&gt;$ sourceLanguage&lt;/a&gt; 는 &lt;code&gt;en-GB&lt;/code&gt; 이고 $ language는 &lt;code&gt;en&lt;/code&gt; 입니다. 이 메소드는 &lt;code&gt;en&lt;/code&gt; 에 대한 메시지를로드하고 &lt;code&gt;en-GB&lt;/code&gt; 를 통해 병합합니다 .</target>
        </trans-unit>
        <trans-unit id="0851fde4b410d1ade4416c888f897ac84ba83813" translate="yes" xml:space="preserve">
          <source>If translations should be sorted</source>
          <target state="translated">번역을 정렬해야하는 경우</target>
        </trans-unit>
        <trans-unit id="863ea3e36d5d2bad422712c1e74f66f72cd13c87" translate="yes" xml:space="preserve">
          <source>If true, context message will cached once it's been created.</source>
          <target state="translated">true 인 경우 컨텍스트 메시지가 작성된 후 캐시됩니다.</target>
        </trans-unit>
        <trans-unit id="5942f3ab0aead82e8a4880596207dee1d0abae22" translate="yes" xml:space="preserve">
          <source>If true, context message will cached once it's been created. Makes sense to use with &lt;a href=&quot;yii-elasticsearch-elasticsearchtarget#%24includeContext-detail&quot;&gt;$includeContext&lt;/a&gt;.</source>
          <target state="translated">true 인 경우 컨텍스트 메시지가 작성된 후 캐시됩니다. &lt;a href=&quot;yii-elasticsearch-elasticsearchtarget#%24includeContext-detail&quot;&gt;$ includeContext&lt;/a&gt; 와 함께 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="2bc2f4eec112d8e1ca6337f23ea84dfde92d2572" translate="yes" xml:space="preserve">
          <source>If true, context will be included in every message.</source>
          <target state="translated">true 인 경우 모든 메시지에 컨텍스트가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="d4f7d62a318fe9b61eb15a99b13fe92e8af72527" translate="yes" xml:space="preserve">
          <source>If true, context will be included in every message. This is convenient if you log application errors and analyze them with tools like Kibana.</source>
          <target state="translated">true 인 경우 모든 메시지에 컨텍스트가 포함됩니다. 응용 프로그램 오류를 기록하고 Kibana와 같은 도구로 오류를 분석 할 때 편리합니다.</target>
        </trans-unit>
        <trans-unit id="8588e71490d2b8f7b9be0e55dfd8e7a7e5aad9a4" translate="yes" xml:space="preserve">
          <source>If true, context will be logged as a separate message after all other messages.</source>
          <target state="translated">true 인 경우 컨텍스트는 다른 모든 메시지 다음에 별도의 메시지로 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="48be22f667695315030c677c2aea101404ac6c6a" translate="yes" xml:space="preserve">
          <source>If true, shows the widget as an inline calendar and the input as a hidden field.</source>
          <target state="translated">true 인 경우 위젯을 인라인 캘린더로 표시하고 입력을 숨겨진 필드로 표시합니다.</target>
        </trans-unit>
        <trans-unit id="415f678f3922bf74cfc39f8b5a24ecb578df6a13" translate="yes" xml:space="preserve">
          <source>If two behaviors define the same property or method and they are both attached to the same component, the behavior that is attached to the component &lt;em&gt;first&lt;/em&gt; will take precedence when the property or method is accessed.</source>
          <target state="translated">두 동작이 동일한 속성 또는 메서드를 정의하고 둘 다 동일한 구성 요소에 연결된 경우 속성 또는 메서드에 액세스 할 때 구성 요소에 &lt;em&gt;먼저&lt;/em&gt; 연결된 동작 이 우선합니다.</target>
        </trans-unit>
        <trans-unit id="50f3e45b0f74d8f2394ec529276f40a2d3782bd7" translate="yes" xml:space="preserve">
          <source>If version is not explicitly set, &lt;a href=&quot;yii-base-module#defaultVersion()-detail&quot;&gt;defaultVersion()&lt;/a&gt; method will be used to determine its value.</source>
          <target state="translated">version이 명시 적으로 설정되지 않은 경우 &lt;a href=&quot;yii-base-module#defaultVersion()-detail&quot;&gt;defaultVersion ()&lt;/a&gt; 메소드가 값을 판별하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e619fb3201f37a533d9bc1619294228a4621a868" translate="yes" xml:space="preserve">
          <source>If we are using fixture that loads data into database then these rows will be applied to &lt;code&gt;users&lt;/code&gt; table. If we are using nosql fixtures, for example &lt;code&gt;mongodb&lt;/code&gt; fixture, then this data will be applied to &lt;code&gt;users&lt;/code&gt; mongodb collection. In order to learn about implementing various loading strategies and more, refer to official &lt;a href=&quot;https://github.com/yiisoft/yii2/blob/master/docs/guide/test-fixtures.md&quot;&gt;documentation&lt;/a&gt;. Above fixture example was auto-generated by &lt;code&gt;yii2-faker&lt;/code&gt; extension, read more about it in these &lt;a href=&quot;#auto-generating-fixtures&quot;&gt;section&lt;/a&gt;. Fixture classes name should not be plural.</source>
          <target state="translated">데이터를 데이터베이스에로드하는 조명기를 사용하는 경우이 행이 &lt;code&gt;users&lt;/code&gt; 테이블에 적용됩니다 . &lt;code&gt;mongodb&lt;/code&gt; 조명기와 같은 nosql 조명기를 사용하는 경우이 데이터는 mongodb 컬렉션 &lt;code&gt;users&lt;/code&gt; 적용됩니다 . 다양한 로딩 전략 구현에 대한 자세한 내용은 공식 &lt;a href=&quot;https://github.com/yiisoft/yii2/blob/master/docs/guide/test-fixtures.md&quot;&gt;문서를&lt;/a&gt; 참조하십시오 . 위의 조명기 예제는 &lt;code&gt;yii2-faker&lt;/code&gt; 확장에 의해 자동 생성되었습니다 . 이 &lt;a href=&quot;#auto-generating-fixtures&quot;&gt;섹션&lt;/a&gt; 에서 자세히 읽어보십시오 . 픽스쳐 클래스 이름은 복수가 아니어야합니다.</target>
        </trans-unit>
        <trans-unit id="94b47be848c0711aef8f85ca6431d684f03c677a" translate="yes" xml:space="preserve">
          <source>If you access this controller from browser, you will see an error complaining the &lt;code&gt;BookingInterface&lt;/code&gt; cannot be instantiated. This is because you need to tell the DI container how to deal with this dependency:</source>
          <target state="translated">브라우저에서이 컨트롤러에 액세스하면 &lt;code&gt;BookingInterface&lt;/code&gt; 를 인스턴스화 할 수 없다는 오류가 표시됩니다 . DI 컨테이너에이 종속성을 처리하는 방법을 알려줘야하기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="b65c7c3bf9c3c8458864283b217efb447132a6d3" translate="yes" xml:space="preserve">
          <source>If you already have a formatted body string, you may assign it to the &lt;a href=&quot;yii-web-response#%24content-detail&quot;&gt;yii\web\Response::$content&lt;/a&gt; property of the response. For example,</source>
          <target state="translated">이미 형식화 된 본문 문자열이있는 경우 &lt;a href=&quot;yii-web-response#%24content-detail&quot;&gt;응답&lt;/a&gt; 의 yii \ web \ Response :: $ content 속성에 지정할 수 있습니다 . 예를 들어</target>
        </trans-unit>
        <trans-unit id="0fb4988697011a42f159bad2641e0d77b8761b7a" translate="yes" xml:space="preserve">
          <source>If you already have an object, you may use &lt;a href=&quot;yii-baseyii#configure()-detail&quot;&gt;Yii::configure()&lt;/a&gt; to initialize the object's properties with a configuration array:</source>
          <target state="translated">객체가 이미있는 경우 &lt;a href=&quot;yii-baseyii#configure()-detail&quot;&gt;Yii :: configure ()&lt;/a&gt; 를 사용하여 구성 배열로 객체의 속성을 초기화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b5bc44656c8b621ae37e089b46f97b3fe69216b4" translate="yes" xml:space="preserve">
          <source>If you also need to support client-side conditional validation, you should configure the &lt;a href=&quot;yii-validators-validator#%24whenClient-detail&quot;&gt;whenClient&lt;/a&gt; property which takes a string representing a JavaScript function whose return value determines whether to apply the rule or not. For example,</source>
          <target state="translated">클라이언트 측 조건부 유효성 검사도 지원해야하는 경우 반환 값이 규칙 적용 여부를 결정하는 JavaScript 함수를 나타내는 문자열을 &lt;a href=&quot;yii-validators-validator#%24whenClient-detail&quot;&gt;받는 whenClient&lt;/a&gt; 속성을 구성해야합니다 . 예를 들어</target>
        </trans-unit>
        <trans-unit id="015c2306247e95ea889ed473e6fce52b12b81385" translate="yes" xml:space="preserve">
          <source>If you are calling the file sending method in places other than an action method, you should also call the &lt;a href=&quot;yii-web-response#send()-detail&quot;&gt;yii\web\Response::send()&lt;/a&gt; method afterwards to ensure no extra content will be appended to the response.</source>
          <target state="translated">조치 메소드 이외의 장소에서 파일 전송 메소드를 호출하는 경우 나중에 추가 컨텐츠가 응답에 추가되지 않도록 &lt;a href=&quot;yii-web-response#send()-detail&quot;&gt;yii \ web \ Response :: send ()&lt;/a&gt; 메소드를 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="2b8119693bac426cf5390310731d2dd4315e59fb" translate="yes" xml:space="preserve">
          <source>If you are interested in the attribute values prior to their most recent modification, you may call &lt;a href=&quot;yii-db-baseactiverecord#getOldAttributes()-detail&quot;&gt;getOldAttributes()&lt;/a&gt; or &lt;a href=&quot;yii-db-baseactiverecord#getOldAttribute()-detail&quot;&gt;getOldAttribute()&lt;/a&gt;.</source>
          <target state="translated">최근 수정 전에 속성 값에 관심이있는 경우 &lt;a href=&quot;yii-db-baseactiverecord#getOldAttributes()-detail&quot;&gt;getOldAttributes ()&lt;/a&gt; 또는 &lt;a href=&quot;yii-db-baseactiverecord#getOldAttribute()-detail&quot;&gt;getOldAttribute ()를&lt;/a&gt; 호출 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1576c65845d56e383650720054efede4cd92f6ad" translate="yes" xml:space="preserve">
          <source>If you are registering an asset bundle in other places, you should provide the needed view object. For example, to register an asset bundle in a &lt;a href=&quot;guide-structure-widgets&quot;&gt;widget&lt;/a&gt; class, you can get the view object by &lt;code&gt;$this-&amp;gt;view&lt;/code&gt;.</source>
          <target state="translated">다른 위치에 자산 번들을 등록하는 경우 필요한보기 오브젝트를 제공해야합니다. 예를 들어, &lt;a href=&quot;guide-structure-widgets&quot;&gt;위젯&lt;/a&gt; 클래스 에 자산 번들을 등록하기 위해 &lt;code&gt;$this-&amp;gt;view&lt;/code&gt; 뷰 오브젝트를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e66182a77eb78e65351400c3acc25a8757dced18" translate="yes" xml:space="preserve">
          <source>If you are the developer of a redistributable &lt;a href=&quot;guide-structure-extensions&quot;&gt;extension&lt;/a&gt;, you can register dependencies in the bootstrapping class of the extension.</source>
          <target state="translated">재배포 가능 &lt;a href=&quot;guide-structure-extensions&quot;&gt;확장&lt;/a&gt; 의 개발자 인 경우 확장 의 부트 스트랩 클래스에 종속성을 등록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="88a0770ee0f1566f7b66faeaa988abce546693b8" translate="yes" xml:space="preserve">
          <source>If you are the developer of an application, you can register your dependencies using application configuration. Please, read the &lt;a href=&quot;guide-concept-configurations#application-configurations&quot;&gt;Application Configurations&lt;/a&gt; subsection of the &lt;a href=&quot;guide-concept-configurations&quot;&gt;Configurations&lt;/a&gt; guide article.</source>
          <target state="translated">애플리케이션 개발자 인 경우 애플리케이션 구성을 사용하여 종속성을 등록 할 수 있습니다. &lt;a href=&quot;guide-concept-configurations&quot;&gt;구성&lt;/a&gt; 안내서 기사 의 &lt;a href=&quot;guide-concept-configurations#application-configurations&quot;&gt;응용 프로그램 구성&lt;/a&gt; 하위 섹션을 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="06902672b81cadfce97d71b07442604af26c59fb" translate="yes" xml:space="preserve">
          <source>If you are using &lt;a href=&quot;http://codeception.com/&quot;&gt;Codeception&lt;/a&gt; to test your code, you should consider using the &lt;code&gt;yii2-codeception&lt;/code&gt; extension which has built-in support for loading and accessing fixtures. If you are using other testing frameworks, you may use &lt;a href=&quot;yii-test-fixturetrait&quot;&gt;yii\test\FixtureTrait&lt;/a&gt; in your test cases to achieve the same goal.</source>
          <target state="translated">당신이 사용하는 경우 &lt;a href=&quot;http://codeception.com/&quot;&gt;Codeception를&lt;/a&gt; 코드를 테스트하기 위해, 당신은 사용을 고려해야합니다 &lt;code&gt;yii2-codeception&lt;/code&gt; 의 지원을 내장하고있다 로딩과 접근 설비에 대한 확장. 다른 테스트 프레임 워크를 사용하는 경우 테스트 케이스에서 &lt;a href=&quot;yii-test-fixturetrait&quot;&gt;yii \ test \ FixtureTrait&lt;/a&gt; 를 사용하여 동일한 목표를 달성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d09c3d1a47aec1e68c234972666fda76e27c788e" translate="yes" xml:space="preserve">
          <source>If you are using RBAC (Role-Based Access Control), you may also specify role or permission names. In this case, &lt;a href=&quot;yii-web-user#can()-detail&quot;&gt;yii\web\User::can()&lt;/a&gt; will be called to check access.</source>
          <target state="translated">RBAC (역할 기반 액세스 제어)를 사용하는 경우 역할 또는 권한 이름을 지정할 수도 있습니다. 이 경우 액세스를 확인하기 위해 &lt;a href=&quot;yii-web-user#can()-detail&quot;&gt;yii \ web \ User :: can ()&lt;/a&gt; 이 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="ad1c6d719e6dccd6b9958b5720f3b6a3500673c6" translate="yes" xml:space="preserve">
          <source>If you are using the array format to specify columns, you can also use the array keys to specify the column aliases. For example, the above code can be rewritten as follows,</source>
          <target state="translated">배열 형식을 사용하여 열을 지정하는 경우 배열 키를 사용하여 열 별칭을 지정할 수도 있습니다. 예를 들어 위 코드는 다음과 같이 다시 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cca6006b06430b370aef7e215d362f4f853ce00b" translate="yes" xml:space="preserve">
          <source>If you are using the array format, you can also use the array keys to specify the table aliases, like the following:</source>
          <target state="translated">배열 형식을 사용하는 경우 배열 키를 사용하여 다음과 같이 테이블 별칭을 지정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="cf272a02eda59adafb9739848242520368c3b760" translate="yes" xml:space="preserve">
          <source>If you can write to the root level directory i.e. where &lt;code&gt;config&lt;/code&gt;, &lt;code&gt;logs&lt;/code&gt; and &lt;code&gt;www&lt;/code&gt; are, then upload &lt;code&gt;assets&lt;/code&gt;, &lt;code&gt;commands&lt;/code&gt; etc. as is to the root level directory.</source>
          <target state="translated">루트 레벨 디렉토리 (예 : &lt;code&gt;config&lt;/code&gt; , &lt;code&gt;logs&lt;/code&gt; 및 &lt;code&gt;www&lt;/code&gt; )에 쓸 수 있으면 &lt;code&gt;assets&lt;/code&gt; , &lt;code&gt;commands&lt;/code&gt; 등을 루트 레벨 디렉토리에 업로드 하십시오.</target>
        </trans-unit>
        <trans-unit id="df8767bc6311f37d43cc764bb148cd0b46cfb3c4" translate="yes" xml:space="preserve">
          <source>If you check the &lt;a href=&quot;guide-structure-entry-scripts&quot;&gt;entry script&lt;/a&gt;&lt;code&gt;web/index.php&lt;/code&gt; of your application, you will find the following line, which essentially makes &lt;code&gt;YII_ENV_DEV&lt;/code&gt; to be &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">응용 프로그램 의 &lt;a href=&quot;guide-structure-entry-scripts&quot;&gt;입력 스크립트 &lt;/a&gt; &lt;code&gt;web/index.php&lt;/code&gt; 를 확인 하면 &lt;code&gt;YII_ENV_DEV&lt;/code&gt; 가 &lt;code&gt;true&lt;/code&gt; 인 다음 줄을 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0e2b8995bac820139370c7025dec71f9ddc12641" translate="yes" xml:space="preserve">
          <source>If you do not already have Composer installed, you may do so by following the instructions at &lt;a href=&quot;https://getcomposer.org/download/&quot;&gt;getcomposer.org&lt;/a&gt;. On Linux and Mac OS X, you'll run the following commands:</source>
          <target state="translated">Composer를 아직 설치하지 않은 경우 &lt;a href=&quot;https://getcomposer.org/download/&quot;&gt;getcomposer.org&lt;/a&gt; 의 지시 사항에 따라 설치하십시오 . Linux 및 Mac OS X에서는 다음 명령을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="34e02e29d3b917fae8bc5e506145f3a5d872502e" translate="yes" xml:space="preserve">
          <source>If you do not call the &lt;a href=&quot;yii-db-query#select()-detail&quot;&gt;select()&lt;/a&gt; method when building a query, &lt;code&gt;*&lt;/code&gt; will be selected, which means selecting &lt;em&gt;all&lt;/em&gt; columns.</source>
          <target state="translated">쿼리를 작성할 때 &lt;a href=&quot;yii-db-query#select()-detail&quot;&gt;select ()&lt;/a&gt; 메서드를 호출하지 않으면 &lt;code&gt;*&lt;/code&gt; 가 선택되어 &lt;em&gt;모든&lt;/em&gt; 열을 선택 &lt;em&gt;합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="9bbd9756599724c118670f73c6822737993caac2" translate="yes" xml:space="preserve">
          <source>If you do not set this property, it means the source asset files are located under &lt;a href=&quot;yii-web-assetbundle#%24basePath-detail&quot;&gt;$basePath&lt;/a&gt;.</source>
          <target state="translated">이 특성을 설정하지 않으면 소스 자산 파일이 &lt;a href=&quot;yii-web-assetbundle#%24basePath-detail&quot;&gt;$ basePath&lt;/a&gt; 아래에 있음을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="15df1e1bf52515ef5c414fda35e0f81dc0c5cf8b" translate="yes" xml:space="preserve">
          <source>If you do not specify a container, the method will first try &lt;code&gt;Yii::$app&lt;/code&gt; followed by &lt;code&gt;Yii::$container&lt;/code&gt;.</source>
          <target state="translated">컨테이너를 지정하지 않으면이 메소드는 먼저 &lt;code&gt;Yii::$app&lt;/code&gt; 다음에 &lt;code&gt;Yii::$container&lt;/code&gt; 시도 합니다.</target>
        </trans-unit>
        <trans-unit id="bbfbd8d8baef3ed91f59f15a458d0e79092210a1" translate="yes" xml:space="preserve">
          <source>If you do not specify the &lt;a href=&quot;yii-log-target#%24categories-detail&quot;&gt;categories&lt;/a&gt; property, it means the target will process messages of &lt;em&gt;any&lt;/em&gt; category.</source>
          <target state="translated">&lt;a href=&quot;yii-log-target#%24categories-detail&quot;&gt;categories&lt;/a&gt; 속성을 지정하지 않으면 대상이 &lt;em&gt;모든&lt;/em&gt; 범주의 메시지를 처리한다는 의미 입니다.</target>
        </trans-unit>
        <trans-unit id="c83976f53814a5c6e157693af42cd201c01528fa" translate="yes" xml:space="preserve">
          <source>If you do not specify the &lt;a href=&quot;yii-log-target#%24levels-detail&quot;&gt;levels&lt;/a&gt; property, it means the target will process messages of &lt;em&gt;any&lt;/em&gt; severity level.</source>
          <target state="translated">당신은 지정하지 않으면 &lt;a href=&quot;yii-log-target#%24levels-detail&quot;&gt;수준의&lt;/a&gt; 속성을, 그것은 대상의 메시지를 처리하는 것을 의미합니다 &lt;em&gt;어느&lt;/em&gt; 정도 수준.</target>
        </trans-unit>
        <trans-unit id="a0dc687b3f47759a70f2551c6991ad2949f4ffe4" translate="yes" xml:space="preserve">
          <source>If you do not specify the &lt;code&gt;on&lt;/code&gt; property, the rule would be applied in all scenarios. A rule is called an &lt;em&gt;active rule&lt;/em&gt; if it can be applied in the current &lt;a href=&quot;yii-base-model#%24scenario-detail&quot;&gt;scenario&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;on&lt;/code&gt; 속성을 지정하지 않으면 모든 시나리오에서 규칙이 적용됩니다. 현재 &lt;a href=&quot;yii-base-model#%24scenario-detail&quot;&gt;시나리오&lt;/a&gt; 에서 적용 할 수 있으면 &lt;em&gt;규칙을 활성 규칙&lt;/em&gt; 이라고합니다 .</target>
        </trans-unit>
        <trans-unit id="02e99cf5bbefbfce55e712a3a93d5a3e326a4e7e" translate="yes" xml:space="preserve">
          <source>If you do not want to use automatically generated labels, you may override &lt;a href=&quot;yii-base-model#attributeLabels()-detail&quot;&gt;yii\base\Model::attributeLabels()&lt;/a&gt; to explicitly declare attribute labels. For example,</source>
          <target state="translated">자동으로 생성 된 레이블을 사용하지 않으려면 &lt;a href=&quot;yii-base-model#attributeLabels()-detail&quot;&gt;yii \ base \ Model :: attributeLabels ()&lt;/a&gt; 를 재정 의하여 속성 레이블을 명시 적으로 선언 할 수 있습니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="2233096be3004f1317ef8ce2d620d5044d2276ed" translate="yes" xml:space="preserve">
          <source>If you don't have access to the server configuration, you can setup &lt;a href=&quot;yii-filters-hostcontrol&quot;&gt;yii\filters\HostControl&lt;/a&gt; filter at application level in order to protect against such kind of attack:</source>
          <target state="translated">서버 구성에 액세스 할 수없는 경우 이러한 종류의 공격으로부터 보호하기 위해 응용 프로그램 수준에서 &lt;a href=&quot;yii-filters-hostcontrol&quot;&gt;yii \ filters \ HostControl&lt;/a&gt; 필터를 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="297fdf89d1ba18aa001365c462a967490eb1353d" translate="yes" xml:space="preserve">
          <source>If you don't want a filter for this data column, set this value to be false.</source>
          <target state="translated">이 데이터 열에 대한 필터를 원하지 않으면이 값을 false로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="8f16ee7856b24b7e128f183542176ba6c98a7896" translate="yes" xml:space="preserve">
          <source>If you don't want to hardcode what users have certain roles, don't put &lt;code&gt;-&amp;gt;assign()&lt;/code&gt; calls into the command. Instead, create either UI or console command to manage assignments.</source>
          <target state="translated">사용자에게 특정 역할이있는 것을 하드 코딩하지 않으려면 명령 에 &lt;code&gt;-&amp;gt;assign()&lt;/code&gt; 호출을 넣지 마십시오 . 대신 UI 또는 콘솔 명령을 만들어 할당을 관리하십시오.</target>
        </trans-unit>
        <trans-unit id="10dd3b49a623e880cab614b0f3f3f9cb137d0787" translate="yes" xml:space="preserve">
          <source>If you don't want to hardcode which users have certain roles, don't put &lt;code&gt;-&amp;gt;assign()&lt;/code&gt; calls in migrations. Instead, create either UI or console command to manage assignments.</source>
          <target state="translated">특정 역할을 가진 사용자를 하드 코딩하지 않으려면 마이그레이션 에 &lt;code&gt;-&amp;gt;assign()&lt;/code&gt; 호출을 넣지 마십시오 . 대신 UI 또는 콘솔 명령을 만들어 할당을 관리하십시오.</target>
        </trans-unit>
        <trans-unit id="75c1aeab64a68a337bfda4419659b6450aa83471" translate="yes" xml:space="preserve">
          <source>If you don't want to use migration and need SQL instead, files for all databases are in migrations directory.</source>
          <target state="translated">마이그레이션을 사용하지 않고 대신 SQL이 필요한 경우 모든 데이터베이스의 파일이 마이그레이션 디렉토리에 있습니다.</target>
        </trans-unit>
        <trans-unit id="81567f29f5cd049f5d932ed4b5a9c26bb0d3983c" translate="yes" xml:space="preserve">
          <source>If you had Composer already installed before, make sure you use an up to date version. You can update Composer by running &lt;code&gt;composer self-update&lt;/code&gt;.</source>
          <target state="translated">Composer를 이미 설치 한 경우 최신 버전을 사용해야합니다. &lt;code&gt;composer self-update&lt;/code&gt; 를 실행하여 Composer를 업데이트 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="226c85b94e088f58e757c44ac9999f77253a0581" translate="yes" xml:space="preserve">
          <source>If you have multiple migrations that use the same database, it is recommended that you create a base migration class with the above &lt;code&gt;init()&lt;/code&gt; code. Then each migration class can extend from this base class.</source>
          <target state="translated">동일한 데이터베이스를 사용하는 마이그레이션이 여러 개인 경우 위의 &lt;code&gt;init()&lt;/code&gt; 코드 를 사용하여 기본 마이그레이션 클래스를 만드는 것이 좋습니다 . 그런 다음 각 마이그레이션 클래스는이 기본 클래스에서 확장 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3ca820c6a3f148bcdc5cc2897e2506bd35c89231" translate="yes" xml:space="preserve">
          <source>If you have registered two aliases '@foo' and '@foo/bar'. Then translating '@foo/bar/config' would replace the part '@foo/bar' (instead of '@foo') with the corresponding registered path. This is because the longest alias takes precedence.</source>
          <target state="translated">두 개의 별칭 '@foo'및 '@ foo / bar'를 등록한 경우 그런 다음 '@ foo / bar / config'를 번역하면 '@foo'대신 '@ foo / bar'부분이 해당 등록 경로로 바뀝니다. 가장 긴 별칭이 우선하기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="074a0067623a940403724020352ca9fff63461f7" translate="yes" xml:space="preserve">
          <source>If you have set up &lt;a href=&quot;yii-console-controllers-basemigratecontroller#%24migrationNamespaces-detail&quot;&gt;$migrationNamespaces&lt;/a&gt;, you may set this field to &lt;code&gt;null&lt;/code&gt; in order to disable usage of migrations that are not namespaced.</source>
          <target state="translated">&lt;a href=&quot;yii-console-controllers-basemigratecontroller#%24migrationNamespaces-detail&quot;&gt;$ migrationNamespaces를&lt;/a&gt; 설정 한 경우 네임 스페이스가 아닌 마이그레이션의 사용을 비활성화하기 위해이 필드를 &lt;code&gt;null&lt;/code&gt; 로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bf461844ffbd3c10d5abbe039431781f607e5f46" translate="yes" xml:space="preserve">
          <source>If you just want to use query caching for a single query, you can call &lt;a href=&quot;yii-db-command#cache()-detail&quot;&gt;yii\db\Command::cache()&lt;/a&gt; when building the command. For example,</source>
          <target state="translated">단일 쿼리에 대해 쿼리 캐싱을 사용하려는 경우 명령을 빌드 할 때 &lt;a href=&quot;yii-db-command#cache()-detail&quot;&gt;yii \ db \ Command :: cache ()를&lt;/a&gt; 호출 할 수 있습니다 . 예를 들어</target>
        </trans-unit>
        <trans-unit id="c5064b4e1cd50b3f1237adabca0cffd7e52dc8a2" translate="yes" xml:space="preserve">
          <source>If you know the input type in advance, it's more convenient to use the shortcut methods:</source>
          <target state="translated">입력 유형을 미리 알고 있다면 바로 가기 방법을 사용하는 것이 더 편리합니다.</target>
        </trans-unit>
        <trans-unit id="20205f9420f300877ed35da67fba58c90dbbbc0d" translate="yes" xml:space="preserve">
          <source>If you miss &lt;code&gt;\Yii::endProfile('block1')&lt;/code&gt; or switch the order of &lt;code&gt;\Yii::endProfile('block1')&lt;/code&gt; and &lt;code&gt;\Yii::endProfile('block2')&lt;/code&gt;, the performance profiling will not work.</source>
          <target state="translated">&lt;code&gt;\Yii::endProfile('block1')&lt;/code&gt; 을 놓치 거나 &lt;code&gt;\Yii::endProfile('block1')&lt;/code&gt; 및 &lt;code&gt;\Yii::endProfile('block2')&lt;/code&gt; 를 전환하면 성능 프로파일 링이 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="17e6d86332962c0e1a0a19ec8415cad80fa6504b" translate="yes" xml:space="preserve">
          <source>If you need to build string dynamically combining multiple styles it's better to use &lt;a href=&quot;yii-helpers-baseconsole#ansiFormat()-detail&quot;&gt;ansiFormat()&lt;/a&gt;:</source>
          <target state="translated">여러 스타일을 동적으로 결합하여 문자열을 작성 해야하는 경우 &lt;a href=&quot;yii-helpers-baseconsole#ansiFormat()-detail&quot;&gt;ansiFormat ()&lt;/a&gt; 을 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="d50f41ee67e8569f928d2157e8866cbe9e336b7c" translate="yes" xml:space="preserve">
          <source>If you need to generate &lt;code&gt;mailto&lt;/code&gt; links, you can use the following code:</source>
          <target state="translated">&lt;code&gt;mailto&lt;/code&gt; 링크 를 생성해야하는 경우 다음 코드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9b2f9aa5737990c5740d2b149e2d7b6b607e62f6" translate="yes" xml:space="preserve">
          <source>If you need to pass additional data to each view, you can use the &lt;a href=&quot;yii-widgets-listview#%24viewParams-detail&quot;&gt;$viewParams&lt;/a&gt; property to pass key value pairs like the following:</source>
          <target state="translated">각 뷰에 추가 데이터를 전달해야하는 경우 &lt;a href=&quot;yii-widgets-listview#%24viewParams-detail&quot;&gt;$ viewParams&lt;/a&gt; 속성을 사용 하여 다음과 같은 키 값 쌍을 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="792f7deec5e7c3ac4cfae0908b2093492aab2f2e" translate="yes" xml:space="preserve">
          <source>If you need to perform asynchronous client-side validation, you can create &lt;a href=&quot;http://api.jquery.com/category/deferred-object/&quot;&gt;Deferred objects&lt;/a&gt;. For example, to perform a custom AJAX validation, you can use the following code:</source>
          <target state="translated">비동기 클라이언트 측 유효성 검증을 수행해야하는 경우 &lt;a href=&quot;http://api.jquery.com/category/deferred-object/&quot;&gt;지연된 오브젝트를&lt;/a&gt; 작성할 수 있습니다 . 예를 들어, 사용자 정의 AJAX 유효성 검증을 수행하려면 다음 코드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d8a69e74f2142a7da431174b057d7c7fab686eff" translate="yes" xml:space="preserve">
          <source>If you need to perform multiple validations against several values, you can use &lt;a href=&quot;yii-base-dynamicmodel&quot;&gt;yii\base\DynamicModel&lt;/a&gt; which supports declaring both attributes and rules on the fly. Its usage is like the following:</source>
          <target state="translated">여러 값에 대해 여러 가지 유효성 검사를 수행해야하는 경우 속성 및 규칙 선언을 즉시 지원 하는 &lt;a href=&quot;yii-base-dynamicmodel&quot;&gt;yii \ base \ DynamicModel&lt;/a&gt; 을 사용할 수 있습니다 . 사용법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f08e17867db1f3d19412df39187a07c792cfbd39" translate="yes" xml:space="preserve">
          <source>If you only need to perform one type of validation (e.g. validating email addresses), you may call the &lt;a href=&quot;yii-validators-validator#validate()-detail&quot;&gt;validate()&lt;/a&gt; method of the desired validator, like the following:</source>
          <target state="translated">한 가지 유형의 유효성 검사 (예 : 전자 메일 주소 유효성 검사) 만 수행해야하는 경우 다음과 같이 원하는 유효성 검사기 의 &lt;a href=&quot;yii-validators-validator#validate()-detail&quot;&gt;validate ()&lt;/a&gt; 메서드를 호출 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="92fe42db235098b77ea17bda7aa92d3f4609001d" translate="yes" xml:space="preserve">
          <source>If you only want to install the core framework and would like to build an entire application from scratch, you may follow the instructions as explained in &lt;a href=&quot;guide-tutorial-start-from-scratch&quot;&gt;Building Application from Scratch&lt;/a&gt;.</source>
          <target state="translated">당신은 단지 코어 프레임 워크를 설치하려면 처음부터 전체 응용 프로그램을 빌드하려는 경우에 설명 된대로, 당신의 지시를 따를 수 &lt;a href=&quot;guide-tutorial-start-from-scratch&quot;&gt;처음부터 건물 응용 프로그램&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5132167b73f3206327b1551caa7d3bd82c21435d" translate="yes" xml:space="preserve">
          <source>If you override the &lt;a href=&quot;yii-base-object#init()-detail&quot;&gt;yii\base\Object::init()&lt;/a&gt; method, make sure you call the parent implementation of &lt;code&gt;init()&lt;/code&gt;&lt;em&gt;at the beginning&lt;/em&gt; of your &lt;code&gt;init()&lt;/code&gt; method.</source>
          <target state="translated">당신이 오버라이드 (override)하는 경우 &lt;a href=&quot;yii-base-object#init()-detail&quot;&gt;YII \ 기본 \ 객체 : 초기화 ()&lt;/a&gt; 메소드를, 당신이의 부모 구현을 호출 할 수 있도록 &lt;code&gt;init()&lt;/code&gt; &lt;em&gt;처음에&lt;/em&gt; 당신의 &lt;code&gt;init()&lt;/code&gt; 메소드를.</target>
        </trans-unit>
        <trans-unit id="f5ff7ba9e299b08518cab5f6fc7a7b51d30603d9" translate="yes" xml:space="preserve">
          <source>If you override the constructor, specify a &lt;code&gt;$config&lt;/code&gt; parameter as the constructor's &lt;em&gt;last&lt;/em&gt; parameter, and then pass this parameter to the parent constructor.</source>
          <target state="translated">생성자를 재정의하는 경우 &lt;code&gt;$config&lt;/code&gt; 매개 변수를 생성자의 &lt;em&gt;마지막&lt;/em&gt; 매개 변수로 지정한 다음이 매개 변수를 부모 생성자에 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="cda60d790c37655ba5e4268ca2f7190265c10c83" translate="yes" xml:space="preserve">
          <source>If you override this method, make sure you call the parent implementation first.</source>
          <target state="translated">이 메소드를 대체하는 경우 먼저 상위 구현을 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="eef6866dec6da3b2206202cc146d4c98d8a132d8" translate="yes" xml:space="preserve">
          <source>If you override this method, make sure you call the parent implementation in the last.</source>
          <target state="translated">이 메소드를 대체하는 경우 마지막에 상위 구현을 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="789a89c920137236a0377112c245ee793f9f0db7" translate="yes" xml:space="preserve">
          <source>If you override this method, please make sure you call the parent implementation.</source>
          <target state="translated">이 메서드를 재정의하는 경우 부모 구현을 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="00ca879ed9c67ca95fe8e219c8f8ea6b15834a0a" translate="yes" xml:space="preserve">
          <source>If you override this method, you should consider calling the parent implementation so that the data returned by &lt;a href=&quot;yii-elasticsearch-activefixture#getData()-detail&quot;&gt;getData()&lt;/a&gt; can be populated into the index.</source>
          <target state="translated">이 메소드를 대체하는 경우 &lt;a href=&quot;yii-elasticsearch-activefixture#getData()-detail&quot;&gt;getData ()에&lt;/a&gt; 의해 리턴 된 데이터를 색인에 채울 수 있도록 상위 구현 호출을 고려해야 합니다.</target>
        </trans-unit>
        <trans-unit id="5d394008a8d1ec16ea61030a724ae789587aec39" translate="yes" xml:space="preserve">
          <source>If you override this method, you should consider calling the parent implementation so that the data returned by &lt;a href=&quot;yii-sphinx-activefixture#getData()-detail&quot;&gt;getData()&lt;/a&gt; can be populated into the index.</source>
          <target state="translated">이 메소드를 대체하는 경우 &lt;a href=&quot;yii-sphinx-activefixture#getData()-detail&quot;&gt;getData ()에&lt;/a&gt; 의해 리턴 된 데이터를 색인에 채울 수 있도록 상위 구현 호출을 고려해야 합니다.</target>
        </trans-unit>
        <trans-unit id="fb5638ac19004d386e25e4df5ee6752ad149ab1d" translate="yes" xml:space="preserve">
          <source>If you override this method, you should consider calling the parent implementation so that the data returned by &lt;a href=&quot;yii-test-activefixture#getData()-detail&quot;&gt;getData()&lt;/a&gt; can be populated into the table.</source>
          <target state="translated">이 메소드를 대체하는 경우 &lt;a href=&quot;yii-test-activefixture#getData()-detail&quot;&gt;getData ()에&lt;/a&gt; 의해 리턴 된 데이터를 테이블에 채울 수 있도록 상위 구현 호출을 고려해야 합니다.</target>
        </trans-unit>
        <trans-unit id="3524d4f731d1186bff33d0f612c1a67ae12da79a" translate="yes" xml:space="preserve">
          <source>If you override this method, your code should look like the following:</source>
          <target state="translated">이 방법을 재정의하면 코드가 다음과 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="41bdba2faa8095bf8604ac901078b7a369d4754b" translate="yes" xml:space="preserve">
          <source>If you previously created the &lt;code&gt;controllers/CountryController.php&lt;/code&gt; and &lt;code&gt;views/country/index.php&lt;/code&gt; files (in the databases section of the guide), check the &quot;overwrite&quot; box to replace them. (The previous versions did not have full CRUD support.)</source>
          <target state="translated">이전에 &lt;code&gt;controllers/CountryController.php&lt;/code&gt; 및 &lt;code&gt;views/country/index.php&lt;/code&gt; 파일 (가이드의 데이터베이스 섹션에 있음)을 작성한 경우 &quot;덮어 쓰기&quot;상자를 선택하여 파일을 바꾸십시오. (이전 버전은 완전한 CRUD를 지원하지 않았습니다.)</target>
        </trans-unit>
        <trans-unit id="4db19082b234b0490ce30c7c7c6df9fd6697790d" translate="yes" xml:space="preserve">
          <source>If you set a custom &lt;code&gt;id&lt;/code&gt; for the container element, you may need to adjust the &lt;a href=&quot;yii-widgets-activefield#%24selectors-detail&quot;&gt;$selectors&lt;/a&gt; accordingly.</source>
          <target state="translated">컨테이너 요소에 대한 사용자 정의 &lt;code&gt;id&lt;/code&gt; 를 설정 한 경우 그에 따라 &lt;a href=&quot;yii-widgets-activefield#%24selectors-detail&quot;&gt;$ selector&lt;/a&gt; 를 조정해야 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d635d4b83c6c1478ebc67e883a1fdc20f440e21b" translate="yes" xml:space="preserve">
          <source>If you set a custom &lt;code&gt;id&lt;/code&gt; for the error element, you may need to adjust the &lt;a href=&quot;yii-widgets-activefield#%24selectors-detail&quot;&gt;$selectors&lt;/a&gt; accordingly.</source>
          <target state="translated">error 요소에 대한 사용자 정의 &lt;code&gt;id&lt;/code&gt; 를 설정 한 경우 &lt;a href=&quot;yii-widgets-activefield#%24selectors-detail&quot;&gt;$ selector를&lt;/a&gt; 적절히 조정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="af94c050f74ecdf042ac85674c3bdcad83c69f7d" translate="yes" xml:space="preserve">
          <source>If you set a custom &lt;code&gt;id&lt;/code&gt; for the input element, you may need to adjust the &lt;a href=&quot;yii-widgets-activefield#%24selectors-detail&quot;&gt;$selectors&lt;/a&gt; accordingly.</source>
          <target state="translated">입력 요소에 대한 사용자 정의 &lt;code&gt;id&lt;/code&gt; 를 설정 한 경우 &lt;a href=&quot;yii-widgets-activefield#%24selectors-detail&quot;&gt;$ selector를&lt;/a&gt; 적절히 조정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="75d36be3956961e96969f915a0b15f3fa2b95cbd" translate="yes" xml:space="preserve">
          <source>If you set a custom &lt;code&gt;id&lt;/code&gt; for the textarea element, you may need to adjust the &lt;a href=&quot;yii-widgets-activefield#%24selectors-detail&quot;&gt;$selectors&lt;/a&gt; accordingly.</source>
          <target state="translated">textarea 요소 의 사용자 정의 &lt;code&gt;id&lt;/code&gt; 를 설정 한 경우 &lt;a href=&quot;yii-widgets-activefield#%24selectors-detail&quot;&gt;$ selector를&lt;/a&gt; 적절히 조정해야 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="81d5471e4053253eb9f42280d7521cb6afd7d948" translate="yes" xml:space="preserve">
          <source>If you specify an invalid limit or offset (e.g. a negative value), it will be ignored.</source>
          <target state="translated">유효하지 않은 한계 또는 오프셋 (예 : 음수 값)을 지정하면 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="a34fe2f0885048bb9fe4db8cb3e69dd8b5091175" translate="yes" xml:space="preserve">
          <source>If you specify the query result to be indexed by some column via &lt;a href=&quot;yii-db-querytrait#indexBy()-detail&quot;&gt;yii\db\Query::indexBy()&lt;/a&gt;, the batch query will still keep the proper index.</source>
          <target state="translated">&lt;a href=&quot;yii-db-querytrait#indexBy()-detail&quot;&gt;yii \ db \ Query :: indexBy ()&lt;/a&gt; 를 통해 일부 열이 쿼리 결과를 색인화하도록 지정하면 배치 쿼리는 여전히 올바른 색인을 유지합니다.</target>
        </trans-unit>
        <trans-unit id="7ac4b149f8d3d808c930cc0b94116aa25c9764ca" translate="yes" xml:space="preserve">
          <source>If you specify view name as a scalar string, its rendering result will be used as HTML body, while plain text body will be composed by removing all HTML entities from HTML one.</source>
          <target state="translated">뷰 이름을 스칼라 문자열로 지정하면 렌더링 결과가 HTML 본문으로 사용되는 반면 일반 텍스트 본문은 HTML에서 모든 HTML 엔터티를 제거하여 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="eb19bfefe929b6c29848d7e1776c6d00c34d3cc5" translate="yes" xml:space="preserve">
          <source>If you use callback as an attribute value it will be called with the following three parameters:</source>
          <target state="translated">콜백을 속성 값으로 사용하는 경우 다음 세 가지 매개 변수를 사용하여 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="6543e55b509c45e792379a58952614f592b38291" translate="yes" xml:space="preserve">
          <source>If you use the &quot;yii&quot; JavaScript module, it will handle the AJAX redirection as described above. Otherwise, you should write the following JavaScript code to handle the redirection:</source>
          <target state="translated">&quot;yii&quot;JavaScript 모듈을 사용하면 위에서 설명한대로 AJAX 리디렉션을 처리합니다. 그렇지 않으면 리디렉션을 처리하기 위해 다음 JavaScript 코드를 작성해야합니다.</target>
        </trans-unit>
        <trans-unit id="d48e18a9ccf2ddbe904498f6864ad878a0ea4b3a" translate="yes" xml:space="preserve">
          <source>If you want an action parameter to accept array values, you should type-hint it with &lt;code&gt;array&lt;/code&gt;, like the following:</source>
          <target state="translated">action 매개 변수가 배열 값을 승인하도록 하려면 다음과 같이 &lt;code&gt;array&lt;/code&gt; 로 입력 힌트를 작성해야합니다 .</target>
        </trans-unit>
        <trans-unit id="9744fe362c811352b1b65a34f3e252ff2d358a3a" translate="yes" xml:space="preserve">
          <source>If you want multiple choices to be selectable, you can use a checkbox list:</source>
          <target state="translated">여러 선택 항목을 선택할 수있게하려면 확인란 목록을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="caa73650d998bff5569c491747f3a175e8cd1f1e" translate="yes" xml:space="preserve">
          <source>If you want several migrations to be applied and tracked down completely separated from each other, you can configure multiple migration commands which will use different namespaces and migration history tables:</source>
          <target state="translated">여러 마이그레이션을 적용하고 서로 완전히 분리하여 추적하려면 다른 네임 스페이스와 마이그레이션 기록 테이블을 사용하는 여러 마이그레이션 명령을 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3d46b091dc01e90d1a3c337e76eb07f5e2dbf441" translate="yes" xml:space="preserve">
          <source>If you want to access other data in layouts, you have to use the pull method as described in the &lt;a href=&quot;#accessing-data-in-views&quot;&gt;Accessing Data in Views&lt;/a&gt; subsection. If you want to pass data from a content view to a layout, you may use the method described in the &lt;a href=&quot;#sharing-data-among-views&quot;&gt;Sharing Data among Views&lt;/a&gt; subsection.</source>
          <target state="translated">레이아웃의 다른 데이터에 &lt;a href=&quot;#accessing-data-in-views&quot;&gt;액세스&lt;/a&gt; 하려면 뷰의 데이터 액세스 하위 섹션 에 설명 된대로 pull 메소드를 사용해야합니다 . 컨텐츠보기에서 레이아웃으로 데이터를 전달하려면 &lt;a href=&quot;#sharing-data-among-views&quot;&gt;보기간에 데이터 공유&lt;/a&gt; 하위 섹션에 설명 된 방법을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="96c97c9d156f964d584377c0f7dc4b51df7486ab" translate="yes" xml:space="preserve">
          <source>If you want to authenticate users using username and password, you should provide the &lt;a href=&quot;yii-filters-auth-httpbasicauth#%24auth-detail&quot;&gt;$auth&lt;/a&gt; function for example like the following:</source>
          <target state="translated">사용자 이름과 비밀번호를 사용하여 사용자를 인증 하려면 다음과 같이 &lt;a href=&quot;yii-filters-auth-httpbasicauth#%24auth-detail&quot;&gt;$ auth&lt;/a&gt; 기능을 제공해야합니다 .</target>
        </trans-unit>
        <trans-unit id="973062f3d1c199266c4bb56840280c6f05a20624" translate="yes" xml:space="preserve">
          <source>If you want to build UI element manually, you may use &lt;a href=&quot;yii-data-pagination#createUrl()-detail&quot;&gt;yii\data\Pagination::createUrl()&lt;/a&gt; to create URLs that would lead to different pages. The method requires a page parameter and will create a properly formatted URL containing the page parameter. For example,</source>
          <target state="translated">UI 요소를 수동으로 빌드하려는 경우 &lt;a href=&quot;yii-data-pagination#createUrl()-detail&quot;&gt;yii \ data \ Pagination :: createUrl ()&lt;/a&gt; 을 사용하여 다른 페이지로 연결되는 URL을 작성할 수 있습니다. 이 메소드에는 페이지 매개 변수가 필요하며 페이지 매개 변수를 포함하는 올바른 형식의 URL을 작성합니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="cfdac1c47758b755ae4fc2575033927454706401" translate="yes" xml:space="preserve">
          <source>If you want to configure it:</source>
          <target state="translated">구성하려는 경우 :</target>
        </trans-unit>
        <trans-unit id="8784c117ab38842c5a718d041de7d5d60cdf83f5" translate="yes" xml:space="preserve">
          <source>If you want to create a URL with an anchor, you can use the array format with a &lt;code&gt;#&lt;/code&gt; parameter. For example,</source>
          <target state="translated">앵커가있는 URL을 만들려면 &lt;code&gt;#&lt;/code&gt; 매개 변수 와 함께 배열 형식을 사용할 수 있습니다 . 예를 들어</target>
        </trans-unit>
        <trans-unit id="4930d393b0bf6975b94b5fdf61801cb1fcd6e99a" translate="yes" xml:space="preserve">
          <source>If you want to ensure that the &lt;code&gt;$unbufferedDb&lt;/code&gt; has exactly the same PDO attributes like the original buffered &lt;code&gt;$db&lt;/code&gt; but the &lt;code&gt;PDO::MYSQL_ATTR_USE_BUFFERED_QUERY&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, &lt;a href=&quot;https://github.com/yiisoft/yii2/issues/8420#issuecomment-301423833&quot;&gt;consider a deep copy of &lt;code&gt;$db&lt;/code&gt;&lt;/a&gt;, set it to false manually.</source>
          <target state="translated">당신이 있는지 확인하려면 &lt;code&gt;$unbufferedDb&lt;/code&gt; 가지고있는 원래의 버퍼링처럼 정확히 같은 PDO 속성 &lt;code&gt;$db&lt;/code&gt; 하지만 &lt;code&gt;PDO::MYSQL_ATTR_USE_BUFFERED_QUERY&lt;/code&gt; 있다 &lt;code&gt;false&lt;/code&gt; , &lt;a href=&quot;https://github.com/yiisoft/yii2/issues/8420#issuecomment-301423833&quot;&gt;의 딥 카피 고려 &lt;code&gt;$db&lt;/code&gt; &lt;/a&gt; 거짓 수동으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="ff5cf31e060bb3ae5d605ca84033c8473ea9f53c" translate="yes" xml:space="preserve">
          <source>If you want to show an error page telling the user that his request is invalid or unexpected, you may simply throw an &lt;a href=&quot;yii-web-httpexception&quot;&gt;HTTP exception&lt;/a&gt;, such as &lt;a href=&quot;yii-web-notfoundhttpexception&quot;&gt;yii\web\NotFoundHttpException&lt;/a&gt;. The error handler will correctly set the HTTP status code of the response and use an appropriate error view to display the error message.</source>
          <target state="translated">요청이 유효하지 않거나 예상치 못한 오류 메시지를 사용자에게 표시하려면 &lt;a href=&quot;yii-web-notfoundhttpexception&quot;&gt;yii \ web \ NotFoundHttpException&lt;/a&gt; 과 같은 &lt;a href=&quot;yii-web-httpexception&quot;&gt;HTTP 예외&lt;/a&gt; 를 던질 수 있습니다 . 오류 처리기는 응답의 HTTP 상태 코드를 올바르게 설정하고 적절한 오류보기를 사용하여 오류 메시지를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="d04941355e3e0b34ca78d75fc75e90af4a129166" translate="yes" xml:space="preserve">
          <source>If you want to specify additional properties of the style tag, pass an array of name-values to the second argument. The last argument is a unique ID that is used to identify the style block and make sure it is only added once in case the same style is registered from different places in the code.</source>
          <target state="translated">스타일 태그의 추가 속성을 지정하려면 이름-값 배열을 두 번째 인수에 전달하십시오. 마지막 인수는 스타일 블록을 식별하고 동일한 스타일이 코드의 다른 위치에서 등록 된 경우 한 번만 추가되는지 확인하는 데 사용되는 고유 ID입니다.</target>
        </trans-unit>
        <trans-unit id="181efa07bdef332fb8a67bc20224485544c2983e" translate="yes" xml:space="preserve">
          <source>If you want to specify what meta tags to generate in content views, you can call &lt;a href=&quot;yii-web-view#registerMetaTag()-detail&quot;&gt;yii\web\View::registerMetaTag()&lt;/a&gt; in a content view, like the following:</source>
          <target state="translated">컨텐츠 뷰에서 생성 할 메타 태그를 지정하려는 경우 컨텐츠 뷰에서 다음과 같이 &lt;a href=&quot;yii-web-view#registerMetaTag()-detail&quot;&gt;yii \ web \ View :: registerMetaTag ()&lt;/a&gt; 를 호출 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0df30b48387d57bac7fe29b7f26676c4821e6997" translate="yes" xml:space="preserve">
          <source>If you want to start a transaction with the slave connection, you should explicitly do so, like the following:</source>
          <target state="translated">슬레이브 연결로 트랜잭션을 시작하려면 다음과 같이 명시 적으로 시작해야합니다.</target>
        </trans-unit>
        <trans-unit id="5ca04f49460e5df3ea9089fdbecfc9801486620f" translate="yes" xml:space="preserve">
          <source>If you want to start with a more sophisticated application, better suited to team development environments, you may consider installing the &lt;a href=&quot;https://github.com/yiisoft/yii2-app-advanced/blob/master/docs/guide/README.md&quot;&gt;Advanced Project Template&lt;/a&gt;.</source>
          <target state="translated">팀 개발 환경에 더 적합한보다 복잡한 응용 프로그램으로 시작하려면 &lt;a href=&quot;https://github.com/yiisoft/yii2-app-advanced/blob/master/docs/guide/README.md&quot;&gt;고급 프로젝트 템플릿&lt;/a&gt; 설치를 고려할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a4fbaac18f251bdf4e9cb8186739748bfd2b2b0c" translate="yes" xml:space="preserve">
          <source>If you want to support all three authentication methods explained above, you can use &lt;code&gt;CompositeAuth&lt;/code&gt; like the following,</source>
          <target state="translated">위에서 설명한 세 가지 인증 방법을 모두 지원 하려면 다음과 같이 &lt;code&gt;CompositeAuth&lt;/code&gt; 를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a16ee12993c92cce650c40593db10383ad12ebe3" translate="yes" xml:space="preserve">
          <source>If you want to translate the messages for a module and avoid using a single translation file for all the messages, you can do it like the following:</source>
          <target state="translated">모듈의 메시지를 번역하고 모든 메시지에 단일 변환 파일을 사용하지 않으려면 다음과 같이 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="fc549bc1078d0feb282c28a7ae4502ae7a3a403c" translate="yes" xml:space="preserve">
          <source>If you want to turn off client-side validation completely, you may configure the &lt;a href=&quot;yii-widgets-activeform#%24enableClientValidation-detail&quot;&gt;yii\widgets\ActiveForm::$enableClientValidation&lt;/a&gt; property to be &lt;code&gt;false&lt;/code&gt;. You may also turn off client-side validation of individual input fields by configuring their &lt;a href=&quot;yii-widgets-activefield#%24enableClientValidation-detail&quot;&gt;yii\widgets\ActiveField::$enableClientValidation&lt;/a&gt; property to be false. When &lt;code&gt;enableClientValidation&lt;/code&gt; is configured at both the input field level and the form level, the former will take precedence.</source>
          <target state="translated">클라이언트 측 유효성 검증을 완전히 끄려면 &lt;a href=&quot;yii-widgets-activeform#%24enableClientValidation-detail&quot;&gt;yii \ widgets \ ActiveForm :: $ enableClientValidation&lt;/a&gt; 특성을 &lt;code&gt;false&lt;/code&gt; 로 구성 할 수 있습니다 . &lt;a href=&quot;yii-widgets-activefield#%24enableClientValidation-detail&quot;&gt;yii \ widgets \ ActiveField :: $ enableClientValidation&lt;/a&gt; 특성을 false 로 구성하여 개별 입력 필드의 클라이언트 측 유효성 검증을 끌 수도 있습니다 . &lt;code&gt;enableClientValidation&lt;/code&gt; 이 입력 필드 레벨과 양식 레벨 모두에서 구성 되면 전자가 우선합니다.</target>
        </trans-unit>
        <trans-unit id="4d5d579ce05e6854d9f90531c98c9e2a9306c487" translate="yes" xml:space="preserve">
          <source>If you want to use a different database connection other than the &lt;code&gt;db&lt;/code&gt; component, you should override the &lt;a href=&quot;yii-db-activerecord#getDb()-detail&quot;&gt;getDb()&lt;/a&gt; method:</source>
          <target state="translated">&lt;code&gt;db&lt;/code&gt; 구성 요소 이외의 다른 데이터베이스 연결을 사용 하려면 &lt;a href=&quot;yii-db-activerecord#getDb()-detail&quot;&gt;getDb ()&lt;/a&gt; 메소드를 대체해야합니다 .</target>
        </trans-unit>
        <trans-unit id="52f55d3c04e1f5c45cc778dbf626fbdf705ac5a9" translate="yes" xml:space="preserve">
          <source>If you want to use a widget that does not have &lt;code&gt;model&lt;/code&gt; and &lt;code&gt;attribute&lt;/code&gt; properties, please use &lt;a href=&quot;yii-widgets-activefield#render()-detail&quot;&gt;render()&lt;/a&gt; instead.</source>
          <target state="translated">&lt;code&gt;model&lt;/code&gt; 및 &lt;code&gt;attribute&lt;/code&gt; 속성 이없는 위젯을 사용하려면 &lt;a href=&quot;yii-widgets-activefield#render()-detail&quot;&gt;render ()를&lt;/a&gt; 대신 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="4232e534d47ba4fe2443dc263ccd877595f5005a" translate="yes" xml:space="preserve">
          <source>If you want to use an absolute url you can call &lt;a href=&quot;yii-helpers-baseurl#to()-detail&quot;&gt;yii\helpers\Url::to()&lt;/a&gt; yourself, before passing the URL to this method, like this:</source>
          <target state="translated">절대 URL을 사용하려면 다음과 &lt;a href=&quot;yii-helpers-baseurl#to()-detail&quot;&gt;같이이&lt;/a&gt; 메소드에 URL을 전달하기 전에 yii \ helpers \ Url :: to ()를 직접 호출 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9c00554841920360df5b674312015f71e11043fa" translate="yes" xml:space="preserve">
          <source>If you want to use an external style in a CSS file:</source>
          <target state="translated">CSS 파일에서 외부 스타일을 사용하려는 경우 :</target>
        </trans-unit>
        <trans-unit id="b3c0dd1714d3e1f73614955b786e10ad9946b51d" translate="yes" xml:space="preserve">
          <source>If you want your validator to support validating a value without a model, you should also override &lt;a href=&quot;yii-validators-validator#validate()-detail&quot;&gt;yii\validators\Validator::validate()&lt;/a&gt;. You may also override &lt;a href=&quot;yii-validators-validator#validateValue()-detail&quot;&gt;yii\validators\Validator::validateValue()&lt;/a&gt; instead of &lt;code&gt;validateAttribute()&lt;/code&gt; and &lt;code&gt;validate()&lt;/code&gt; because by default the latter two methods are implemented by calling &lt;code&gt;validateValue()&lt;/code&gt;.</source>
          <target state="translated">유효성 검사기가 모델없이 값의 유효성 검사를 지원하도록하려면 &lt;a href=&quot;yii-validators-validator#validate()-detail&quot;&gt;yii \ validators \ Validator :: validate ()를&lt;/a&gt; 재정의해야합니다 . &lt;code&gt;validateAttribute()&lt;/code&gt; 및 &lt;code&gt;validate()&lt;/code&gt; 대신 &lt;a href=&quot;yii-validators-validator#validateValue()-detail&quot;&gt;yii \ validators \ Validator :: validateValue ()&lt;/a&gt; 를 재정의 할 수도 있습니다. 기본적으로 후자의 두 메소드는 &lt;code&gt;validateValue()&lt;/code&gt; 를 호출하여 구현되기 때문 입니다.</target>
        </trans-unit>
        <trans-unit id="75f25d4428efca03d2fa5ec005ba3811fa93de25" translate="yes" xml:space="preserve">
          <source>If you wish to render the report with your own representation, use &lt;a href=&quot;yiirequirementchecker#getResult()-detail&quot;&gt;getResult()&lt;/a&gt; instead of &lt;a href=&quot;yiirequirementchecker#render()-detail&quot;&gt;render()&lt;/a&gt;</source>
          <target state="translated">당신이 당신의 자신의 표현으로 보고서를 렌더링 할 경우, 사용 &lt;a href=&quot;yiirequirementchecker#getResult()-detail&quot;&gt;getResult를 ()를&lt;/a&gt; 대신 &lt;a href=&quot;yiirequirementchecker#render()-detail&quot;&gt;) (렌더링&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aecdccc20549210b9767f57636f6f477e22ea4f8" translate="yes" xml:space="preserve">
          <source>If your DBMS supports Savepoint, you may nest multiple transactions like the following:</source>
          <target state="translated">DBMS가 Savepoint를 지원하는 경우 다음과 같은 여러 트랜잭션을 중첩시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dc1b68aacc536f7e825ed1e2f72965abafe596d3" translate="yes" xml:space="preserve">
          <source>If your application allows user signup you need to assign roles to these new users once. For example, in order for all signed up users to become authors in your advanced project template you need to modify &lt;code&gt;frontend\models\SignupForm::signup()&lt;/code&gt; as follows:</source>
          <target state="translated">애플리케이션에서 사용자 가입을 허용하는 경우 이러한 새 사용자에게 역할을 한 번 할당해야합니다. 예를 들어, 모든 등록 된 사용자가 고급 프로젝트 템플릿에서 작성자가 되려면 다음과 같이 &lt;code&gt;frontend\models\SignupForm::signup()&lt;/code&gt; 을 수정해야 합니다.</target>
        </trans-unit>
        <trans-unit id="9c5f333f02e07ebac084592c1d7ddcf8419143df" translate="yes" xml:space="preserve">
          <source>If your application enables &lt;a href=&quot;yii-web-urlmanager#%24enablePrettyUrl-detail&quot;&gt;pretty URLs&lt;/a&gt;, you can then access Gii via URL: &lt;code&gt;http://localhost/path/to/index.php/gii&lt;/code&gt;</source>
          <target state="translated">애플리케이션이 &lt;a href=&quot;yii-web-urlmanager#%24enablePrettyUrl-detail&quot;&gt;pretty URL을&lt;/a&gt; 활성화하면 URL을 통해 Gii에 액세스 할 수 있습니다. &lt;code&gt;http://localhost/path/to/index.php/gii&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fe801a3b4f552be6a8d316446a768ffa0b9b757d" translate="yes" xml:space="preserve">
          <source>If your application supports multiple languages and you want to display pages in the language that is the most preferred by the end user, you may use the language negotiation method &lt;a href=&quot;yii-web-request#getPreferredLanguage()-detail&quot;&gt;yii\web\Request::getPreferredLanguage()&lt;/a&gt;. This method takes a list of languages supported by your application, compares them with &lt;a href=&quot;yii-web-request#%24acceptableLanguages-detail&quot;&gt;acceptableLanguages&lt;/a&gt;, and returns the most appropriate language.</source>
          <target state="translated">애플리케이션이 여러 언어를 지원하고 최종 사용자가 가장 선호하는 언어로 페이지를 표시하려는 경우 언어 협상 방법 &lt;a href=&quot;yii-web-request#getPreferredLanguage()-detail&quot;&gt;yii \ web \ Request :: getPreferredLanguage ()를 사용할 수&lt;/a&gt; 있습니다. 이 메소드는 응용 프로그램에서 지원하는 언어 목록을 가져와 &lt;a href=&quot;yii-web-request#%24acceptableLanguages-detail&quot;&gt;허용되는&lt;/a&gt; 언어와 비교 한 후 가장 적합한 언어를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="30540e5536bbc5532e4ac632d4b4fbe84251097e" translate="yes" xml:space="preserve">
          <source>If your attribute name is different, you may configure the &lt;a href=&quot;yii-behaviors-sluggablebehavior#%24slugAttribute-detail&quot;&gt;$slugAttribute&lt;/a&gt; property like the following:</source>
          <target state="translated">속성 이름이 다른 경우 다음과 같이 &lt;a href=&quot;yii-behaviors-sluggablebehavior#%24slugAttribute-detail&quot;&gt;$ slugAttribute&lt;/a&gt; 속성을 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d12f53fc7cc057edf533cc2d5d0b58fb6435d569" translate="yes" xml:space="preserve">
          <source>If your attribute names are different or you want to use a different way of calculating the timestamp, you may configure the &lt;a href=&quot;yii-behaviors-timestampbehavior#%24createdAtAttribute-detail&quot;&gt;$createdAtAttribute&lt;/a&gt;, &lt;a href=&quot;yii-behaviors-timestampbehavior#%24updatedAtAttribute-detail&quot;&gt;$updatedAtAttribute&lt;/a&gt; and &lt;a href=&quot;yii-behaviors-timestampbehavior#%24value-detail&quot;&gt;$value&lt;/a&gt; properties like the following:</source>
          <target state="translated">속성 이름이 다르거 나 타임 스탬프를 계산하는 다른 방법을 사용하려는 경우 다음과 같이 &lt;a href=&quot;yii-behaviors-timestampbehavior#%24createdAtAttribute-detail&quot;&gt;$ createdAtAttribute&lt;/a&gt; , &lt;a href=&quot;yii-behaviors-timestampbehavior#%24updatedAtAttribute-detail&quot;&gt;$ updatedAtAttribute&lt;/a&gt; 및 &lt;a href=&quot;yii-behaviors-timestampbehavior#%24value-detail&quot;&gt;$ value&lt;/a&gt; 속성을 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="655f56fb704f928de2fb1d3f2cf3423caa814d2e" translate="yes" xml:space="preserve">
          <source>If your attribute names are different, you may configure the &lt;a href=&quot;yii-behaviors-blameablebehavior#%24createdByAttribute-detail&quot;&gt;$createdByAttribute&lt;/a&gt; and &lt;a href=&quot;yii-behaviors-blameablebehavior#%24updatedByAttribute-detail&quot;&gt;$updatedByAttribute&lt;/a&gt; properties like the following:</source>
          <target state="translated">속성 이름이 다른 경우 다음과 같이 &lt;a href=&quot;yii-behaviors-blameablebehavior#%24createdByAttribute-detail&quot;&gt;$ createdByAttribute&lt;/a&gt; 및 &lt;a href=&quot;yii-behaviors-blameablebehavior#%24updatedByAttribute-detail&quot;&gt;$ updatedByAttribute&lt;/a&gt; 속성을 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="04e1fd7301c8b0a8c2eb130213b405fc33de7f48" translate="yes" xml:space="preserve">
          <source>If your code depends on jQuery, jQuery UI or Bootstrap, you should use these predefined asset bundles rather than creating your own versions. If the default setting of these bundles do not satisfy your needs, you may customize them as described in the &lt;a href=&quot;#customizing-asset-bundles&quot;&gt;Customizing Asset Bundle&lt;/a&gt; subsection.</source>
          <target state="translated">코드가 jQuery, jQuery UI 또는 Bootstrap에 의존하는 경우 고유 한 버전을 생성하는 대신 사전 정의 된 자산 번들을 사용해야합니다. 이러한 번들의 기본 설정이 요구 사항을 충족하지 않으면 &lt;a href=&quot;#customizing-asset-bundles&quot;&gt;자산 번들 사용자 정의&lt;/a&gt; 하위 섹션에 설명 된대로 사용자 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4f2a41d12081f71e67635e96eb2364dde97bd614" translate="yes" xml:space="preserve">
          <source>If your controller class extends from &lt;a href=&quot;yii-rest-activecontroller&quot;&gt;yii\rest\ActiveController&lt;/a&gt;, you should set its &lt;a href=&quot;yii-rest-activecontroller#%24modelClass-detail&quot;&gt;modelClass&lt;/a&gt; property to be the name of the resource class that you plan to serve through this controller. The class must extend from &lt;a href=&quot;yii-db-activerecord&quot;&gt;yii\db\ActiveRecord&lt;/a&gt;.</source>
          <target state="translated">컨트롤러 클래스 가 &lt;a href=&quot;yii-rest-activecontroller#%24modelClass-detail&quot;&gt;yii &lt;/a&gt;&lt;a href=&quot;yii-rest-activecontroller&quot;&gt;\ rest \ ActiveController&lt;/a&gt; 에서 확장되는 경우 modelClass 속성을이 컨트롤러를 통해 제공 할 리소스 클래스의 이름으로 설정해야합니다 . 클래스는 &lt;a href=&quot;yii-db-activerecord&quot;&gt;yii \ db \ ActiveRecord&lt;/a&gt; 에서 확장해야합니다 .</target>
        </trans-unit>
        <trans-unit id="a0a95f72d004584eaac38eaddc0002f08046ec4b" translate="yes" xml:space="preserve">
          <source>If your controllers extend from &lt;a href=&quot;yii-rest-activecontroller&quot;&gt;yii\rest\ActiveController&lt;/a&gt;, you may override the &lt;a href=&quot;yii-rest-activecontroller#checkAccess()-detail&quot;&gt;checkAccess()&lt;/a&gt; method to perform authorization check. The method will be called by the built-in actions provided by &lt;a href=&quot;yii-rest-activecontroller&quot;&gt;yii\rest\ActiveController&lt;/a&gt;.</source>
          <target state="translated">컨트롤러가 &lt;a href=&quot;yii-rest-activecontroller&quot;&gt;yii \ rest \ ActiveController&lt;/a&gt; 에서 확장 된 경우 &lt;a href=&quot;yii-rest-activecontroller#checkAccess()-detail&quot;&gt;checkAccess ()&lt;/a&gt; 메서드를 재정 의하여 권한 부여 검사를 수행 할 수 있습니다. 이 메소드는 &lt;a href=&quot;yii-rest-activecontroller&quot;&gt;yii \ rest \ ActiveController&lt;/a&gt; 에서 제공하는 내장 조치에 의해 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="0e64627496264d0eb09507e6456eacd2317502a7" translate="yes" xml:space="preserve">
          <source>If your data needs to be formatted before sending it to end users, you should set both of the &lt;a href=&quot;yii-web-response#%24format-detail&quot;&gt;format&lt;/a&gt; and &lt;a href=&quot;yii-web-response#%24data-detail&quot;&gt;data&lt;/a&gt; properties. The &lt;a href=&quot;yii-web-response#%24format-detail&quot;&gt;format&lt;/a&gt; property specifies in which format the &lt;a href=&quot;yii-web-response#%24data-detail&quot;&gt;data&lt;/a&gt; should be formatted. For example,</source>
          <target state="translated">최종 사용자에게 데이터를 보내기 전에 데이터를 형식화해야하는 경우 &lt;a href=&quot;yii-web-response#%24format-detail&quot;&gt;형식&lt;/a&gt; 및 &lt;a href=&quot;yii-web-response#%24data-detail&quot;&gt;데이터&lt;/a&gt; 속성을 모두 설정해야 합니다. &lt;a href=&quot;yii-web-response#%24format-detail&quot;&gt;format&lt;/a&gt; 속성은 &lt;a href=&quot;yii-web-response#%24data-detail&quot;&gt;데이터&lt;/a&gt; 의 형식 을 지정합니다 . 예를 들어</target>
        </trans-unit>
        <trans-unit id="57555b93a460402573dd29a7d141b6b53f3f5666" translate="yes" xml:space="preserve">
          <source>If your extension is a widget or a module, chances are that it may require some &lt;a href=&quot;guide-structure-assets&quot;&gt;assets&lt;/a&gt; to work. For example, a module may display some pages which contain images, JavaScript, and CSS. Because the files of an extension are all under the same directory which is not Web accessible when installed in an application, you have two choices to make the asset files directly accessible via Web:</source>
          <target state="translated">확장 프로그램이 위젯 또는 모듈 인 경우 일부 &lt;a href=&quot;guide-structure-assets&quot;&gt;자산&lt;/a&gt; 이 작동 해야 할 수 있습니다. 예를 들어, 모듈에는 이미지, JavaScript 및 CSS가 포함 된 일부 페이지가 표시 될 수 있습니다. 확장 파일은 모두 응용 프로그램에 설치할 때 웹에 액세스 할 수없는 동일한 디렉토리에 있기 때문에 웹을 통해 자산 파일에 직접 액세스 할 수있는 두 가지 선택 사항이 있습니다.</target>
        </trans-unit>
        <trans-unit id="11dd86967cbdc21c7aa0e26aad43324a07db00ad" translate="yes" xml:space="preserve">
          <source>If your extension needs to create specific DB tables or make changes to DB schema, you should</source>
          <target state="translated">확장에서 특정 DB 테이블을 생성하거나 DB 스키마를 변경해야하는 경우</target>
        </trans-unit>
        <trans-unit id="2e89acf6ec364549e6dca3fd852fd80d97fad5ae" translate="yes" xml:space="preserve">
          <source>If your permissions hierarchy doesn't change at all and you have a fixed number of users you can create a -&lt;a href=&quot;guide-tutorial-console#create-command&quot;&gt;console command&lt;/a&gt; that will initialize authorization data once via APIs offered by &lt;code&gt;authManager&lt;/code&gt;:</source>
          <target state="translated">권한 계층 구조가 전혀 변경되지 않고 고정 된 수의 사용자 가있는 경우 &lt;code&gt;authManager&lt;/code&gt; 에서 제공하는 API를 통해 인증 데이터를 한 번 초기화하는 &lt;a href=&quot;guide-tutorial-console#create-command&quot;&gt;콘솔 명령&lt;/a&gt; 을 작성할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4b4c4ad4371c9bf3bf03e546c4781230762f2e6b" translate="yes" xml:space="preserve">
          <source>If your web application and console application share a lot of configuration parameters and values, you may consider moving the common parts into a separate file, and including this file in both of the application configurations (web and console). You can see an example of this in the advanced project template.</source>
          <target state="translated">웹 애플리케이션과 콘솔 애플리케이션이 많은 구성 매개 변수 및 값을 공유하는 경우 공통 파트를 별도의 파일로 이동하고이 파일을 애플리케이션 구성 (웹 및 콘솔) 모두에 포함시키는 것을 고려할 수 있습니다. 고급 프로젝트 템플릿에서 이에 대한 예를 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3a536ec1a08142297386e172ddffda41d5e2e56a" translate="yes" xml:space="preserve">
          <source>If your webserver is Apache you'll need to add an &lt;code&gt;.htaccess&lt;/code&gt; file with the following content to &lt;code&gt;web&lt;/code&gt; (or &lt;code&gt;public_html&lt;/code&gt; or whatever) (where the &lt;code&gt;index.php&lt;/code&gt; file is located):</source>
          <target state="translated">웹 서버가 Apache 인 경우 &lt;code&gt;web&lt;/code&gt; (또는 &lt;code&gt;public_html&lt;/code&gt; 또는 기타) ( &lt;code&gt;index.php&lt;/code&gt; 파일이있는 위치)에 다음 내용이 포함 된 &lt;code&gt;.htaccess&lt;/code&gt; 파일 을 추가해야합니다 .</target>
        </trans-unit>
        <trans-unit id="ce6c30e230e10dcde1716030700b4f9b0a9510a5" translate="yes" xml:space="preserve">
          <source>Image contents</source>
          <target state="translated">이미지 내용</target>
        </trans-unit>
        <trans-unit id="9afbc432fdf4f4f29ea724144e64d868ea432467" translate="yes" xml:space="preserve">
          <source>Image contents in PNG format.</source>
          <target state="translated">PNG 형식의 이미지 내용.</target>
        </trans-unit>
        <trans-unit id="764dba28eb0f45ff3dd6549b0ba060aa2f9bdc8e" translate="yes" xml:space="preserve">
          <source>ImageValidator verifies if an attribute is receiving a valid image.</source>
          <target state="translated">ImageValidator는 속성이 유효한 이미지를 받고 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="09e871c98fef3b901a775def173e4126aaf73b42" translate="yes" xml:space="preserve">
          <source>Images</source>
          <target state="translated">Images</target>
        </trans-unit>
        <trans-unit id="83c9906a6ba1c6eebe2d4c7b54d399618204b9c7" translate="yes" xml:space="preserve">
          <source>Implement &lt;a href=&quot;yii-web-identityinterface#findIdentityByAccessToken()-detail&quot;&gt;yii\web\IdentityInterface::findIdentityByAccessToken()&lt;/a&gt; in your &lt;a href=&quot;yii-web-user#%24identityClass-detail&quot;&gt;user identity class&lt;/a&gt;.</source>
          <target state="translated">구현 &lt;a href=&quot;yii-web-identityinterface#findIdentityByAccessToken()-detail&quot;&gt;YII를 \ 웹 \ IdentityInterface을 :: findIdentityByAccessToken를 ()&lt;/a&gt; 당신의 &lt;a href=&quot;yii-web-user#%24identityClass-detail&quot;&gt;사용자 ID 클래스&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="99ac8896f0b8e4fb226d431e9d558d4b8b692dbe" translate="yes" xml:space="preserve">
          <source>Implementation in the &lt;code&gt;User&lt;/code&gt; model could look like the following:</source>
          <target state="translated">&lt;code&gt;User&lt;/code&gt; 모델의 구현 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="eef447a098b65c07343d0573ed93bad4b771eec6" translate="yes" xml:space="preserve">
          <source>Implementation of &lt;code&gt;findIdentityByAccessToken()&lt;/code&gt; is application specific. For example, in simple scenarios when each user can only have one access token, you may store the access token in an &lt;code&gt;access_token&lt;/code&gt; column in the user table. The method can then be readily implemented in the &lt;code&gt;User&lt;/code&gt; class as follows,</source>
          <target state="translated">&lt;code&gt;findIdentityByAccessToken()&lt;/code&gt; 구현 은 응용 프로그램에 따라 다릅니다. 예를 들어 각 사용자가 하나의 액세스 토큰 만 가질 수있는 간단한 시나리오 에서는 사용자 테이블 의 &lt;code&gt;access_token&lt;/code&gt; 열에 액세스 토큰을 저장할 수 있습니다 . 이 메소드는 다음 과 같이 &lt;code&gt;User&lt;/code&gt; 클래스 에서 쉽게 구현할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="18fc5be5203380c325a1f096ff8242d1b6df5755" translate="yes" xml:space="preserve">
          <source>Implementation of &lt;code&gt;validateChildrenFunds&lt;/code&gt; can be like this:</source>
          <target state="translated">&lt;code&gt;validateChildrenFunds&lt;/code&gt; 의 구현은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="75ac4ae1dbbdf0e323f5a3d365241165b3d30df4" translate="yes" xml:space="preserve">
          <source>Implementation of IdentityInterface</source>
          <target state="translated">IdentityInterface의 구현</target>
        </trans-unit>
        <trans-unit id="eb88c33bd464bfa9f39365c0015e38ae930937f8" translate="yes" xml:space="preserve">
          <source>Implemented by</source>
          <target state="translated">에 의해 구현</target>
        </trans-unit>
        <trans-unit id="a15dbec766115594c5c0793a66731e33650eda71" translate="yes" xml:space="preserve">
          <source>Implementing &lt;a href=&quot;yii-web-identityinterface&quot;&gt;yii\web\IdentityInterface&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;yii-web-identityinterface&quot;&gt;yii \ web \ IdentityInterface&lt;/a&gt; 구현</target>
        </trans-unit>
        <trans-unit id="5147dd8f9a2656c00a2bad55fbcf10f095123217" translate="yes" xml:space="preserve">
          <source>Implementing Client-Side Validation</source>
          <target state="translated">클라이언트 측 검증 구현</target>
        </trans-unit>
        <trans-unit id="9082f008cd6f06e66b87644eb0d48acef966f656" translate="yes" xml:space="preserve">
          <source>Implementing yii\web\IdentityInterface</source>
          <target state="translated">yii \ web \ IdentityInterface 구현</target>
        </trans-unit>
        <trans-unit id="8011cb5556f43ad7310267c2a3929ab7da14c6f2" translate="yes" xml:space="preserve">
          <source>Implements</source>
          <target state="translated">Implements</target>
        </trans-unit>
        <trans-unit id="7aeceabf8ce0c5bc87ccf00b716a69809e03e3eb" translate="yes" xml:space="preserve">
          <source>Implements HKDF specified in &lt;a href=&quot;https://tools.ietf.org/html/rfc5869&quot;&gt;RFC 5869&lt;/a&gt;. Recommend use one of the SHA-2 hash algorithms: sha224, sha256, sha384 or sha512.</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc5869&quot;&gt;RFC 5869에&lt;/a&gt; 지정된 HKDF를 구현합니다 . SHA-2 해시 알고리즘 중 하나 인 sha224, sha256, sha384 또는 sha512를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="4d38d0a1528b9d39c1ac239f1457a17b936d53d8" translate="yes" xml:space="preserve">
          <source>Implements HKDF2 specified in &lt;a href=&quot;http://tools.ietf.org/html/rfc2898#section-5.2&quot;&gt;RFC 2898&lt;/a&gt; Recommend use one of the SHA-2 hash algorithms: sha224, sha256, sha384 or sha512.</source>
          <target state="translated">&lt;a href=&quot;http://tools.ietf.org/html/rfc2898#section-5.2&quot;&gt;RFC 2898에&lt;/a&gt; 지정된 HKDF2를 구현 합니다. SHA-2 해시 알고리즘 중 하나 인 sha224, sha256, sha384 또는 sha512를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="133507769129b57cd7e00743e5d80044b6d57f9f" translate="yes" xml:space="preserve">
          <source>Implements of User model with search method.</source>
          <target state="translated">검색 방법으로 사용자 모델을 구현합니다.</target>
        </trans-unit>
        <trans-unit id="484ddd6d1a627d12739d48ff1825511be4a327a1" translate="yes" xml:space="preserve">
          <source>Important Properties</source>
          <target state="translated">중요한 속성</target>
        </trans-unit>
        <trans-unit id="5b4287989d3a3b5906b72557b9cc98ebc73d0c1e" translate="yes" xml:space="preserve">
          <source>Improve code and make sure tests are still OK.</source>
          <target state="translated">코드를 개선하고 테스트가 여전히 올바른지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="df5792a70749c5238d889147e6729926aac96a68" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;#accessing-relational-data&quot;&gt;Accessing Relational Data&lt;/a&gt;, we explained that you can access a relation property of an Active Record instance like accessing a normal object property. A SQL statement will be executed only when you access the relation property the first time. We call such relational data accessing method &lt;em&gt;lazy loading&lt;/em&gt;. For example,</source>
          <target state="translated">에 &lt;a href=&quot;#accessing-relational-data&quot;&gt;액세스 관계형 데이터&lt;/a&gt; , 우리는 당신이 정상적인 개체 속성에 액세스와 같은 액티브 레코드 인스턴스의 관계의 속성에 액세스 할 수 있습니다 설명했다. SQL 문은 관계 속성에 처음 액세스 할 때만 실행됩니다. 이러한 관계형 데이터 액세스 방법을 &lt;em&gt;게으른 로딩이라고&lt;/em&gt; 합니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="637cef6e1625741ad246d70ea515a0955b16dc62" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;guide-db-query-builder&quot;&gt;Query Builder&lt;/a&gt;, we have explained that you may use &lt;em&gt;batch query&lt;/em&gt; to minimize your memory usage when querying a large amount of data from the database. You may use the same technique in Active Record. For example,</source>
          <target state="translated">에서 &lt;a href=&quot;guide-db-query-builder&quot;&gt;쿼리 작성기&lt;/a&gt; , 우리는 당신이 사용할 수 있다고 설명했다 &lt;em&gt;배치 쿼리를&lt;/em&gt; 데이터베이스에서 많은 양의 데이터를 쿼리 할 때 메모리 사용을 최소화 할 수 있습니다. Active Record에서도 동일한 기술을 사용할 수 있습니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="207c9814e0b88206738f05e6de5079954856b9d0" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;yii-web-application&quot;&gt;Web applications&lt;/a&gt;, controllers should extend from &lt;a href=&quot;yii-web-controller&quot;&gt;yii\web\Controller&lt;/a&gt; or its child classes. Similarly in &lt;a href=&quot;yii-console-application&quot;&gt;console applications&lt;/a&gt;, controllers should extend from &lt;a href=&quot;yii-console-controller&quot;&gt;yii\console\Controller&lt;/a&gt; or its child classes. The following code defines a &lt;code&gt;site&lt;/code&gt; controller:</source>
          <target state="translated">에서 &lt;a href=&quot;yii-web-application&quot;&gt;웹 응용 프로그램&lt;/a&gt; , 컨트롤러에서 확장해야 &lt;a href=&quot;yii-web-controller&quot;&gt;컨트롤러 \ YII \ 웹&lt;/a&gt; 또는 하위 클래스. &lt;a href=&quot;yii-console-application&quot;&gt;콘솔 응용 프로그램&lt;/a&gt; 에서 마찬가지로 컨트롤러는 &lt;a href=&quot;yii-console-controller&quot;&gt;yii \ console \ Controller&lt;/a&gt; 또는 해당 자식 클래스 에서 확장해야합니다 . 다음 코드는 &lt;code&gt;site&lt;/code&gt; 컨트롤러를 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="fe8e8664f862bd61570b2f16619d402eecb37bd1" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;search()&lt;/code&gt; you then just add another filter condition with:</source>
          <target state="translated">&lt;code&gt;search()&lt;/code&gt; 다음을 사용 하여 다른 필터 조건을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="c8af23a07546714ca95ff73b5f3ab92ee0fb3ca9" translate="yes" xml:space="preserve">
          <source>In AJAX mode, this normally will not work as expected unless there are some client-side JavaScript code handling the redirection. To help achieve this goal, this method will send out a &quot;X-Redirect&quot; header instead of &quot;Location&quot;.</source>
          <target state="translated">AJAX 모드에서는 리디렉션을 처리하는 클라이언트 측 JavaScript 코드가 없으면 일반적으로 예상대로 작동하지 않습니다. 이 목표를 달성하기 위해이 방법은 &quot;위치&quot;대신 &quot;X- 리디렉션&quot;헤더를 보냅니다.</target>
        </trans-unit>
        <trans-unit id="c1f723e70c53be0cfc36d8849f10bdd614bba60f" translate="yes" xml:space="preserve">
          <source>In JavaScript, you may get the values of &lt;a href=&quot;yii-web-request#%24csrfParam-detail&quot;&gt;$csrfParam&lt;/a&gt; and &lt;a href=&quot;yii-web-request#%24csrfToken-detail&quot;&gt;$csrfToken&lt;/a&gt; via &lt;code&gt;yii.getCsrfParam()&lt;/code&gt; and &lt;code&gt;yii.getCsrfToken()&lt;/code&gt;, respectively. The &lt;a href=&quot;yii-web-yiiasset&quot;&gt;yii\web\YiiAsset&lt;/a&gt; asset must be registered. You also need to include CSRF meta tags in your pages by using &lt;a href=&quot;yii-helpers-basehtml#csrfMetaTags()-detail&quot;&gt;yii\helpers\Html::csrfMetaTags()&lt;/a&gt;.</source>
          <target state="translated">JavaScript에서는 &lt;code&gt;yii.getCsrfParam()&lt;/code&gt; 및 &lt;code&gt;yii.getCsrfToken()&lt;/code&gt; 통해 &lt;a href=&quot;yii-web-request#%24csrfParam-detail&quot;&gt;$ csrfParam&lt;/a&gt; 및 &lt;a href=&quot;yii-web-request#%24csrfToken-detail&quot;&gt;$ csrfToken&lt;/a&gt; 값을 각각 얻을 수 있습니다. &lt;a href=&quot;yii-web-yiiasset&quot;&gt;YII \ 웹 \ YiiAsset의&lt;/a&gt; 자산 등록해야합니다. &lt;a href=&quot;yii-helpers-basehtml#csrfMetaTags()-detail&quot;&gt;yii \ helpers \ Html :: csrfMetaTags ()&lt;/a&gt; 를 사용하여 페이지에 CSRF 메타 태그도 포함해야합니다 .</target>
        </trans-unit>
        <trans-unit id="927e174e4106b452b588459c497c27e588b306a5" translate="yes" xml:space="preserve">
          <source>In PHP, class member variables are also called &lt;em&gt;properties&lt;/em&gt;. These variables are part of the class definition, and are used to represent the state of a class instance (i.e., to differentiate one instance of the class from another). In practice, you may often want to handle the reading or writing of properties in special ways. For example, you may want to always trim a string when it is being assigned to a &lt;code&gt;label&lt;/code&gt; property. You &lt;em&gt;could&lt;/em&gt; use the following code to achieve this task:</source>
          <target state="translated">PHP에서 클래스 멤버 변수는 &lt;em&gt;properties&lt;/em&gt; 라고도 &lt;em&gt;합니다&lt;/em&gt; . 이러한 변수는 클래스 정의의 일부이며 클래스 인스턴스의 상태를 나타내는 데 사용됩니다 (예 : 클래스의 인스턴스를 다른 인스턴스와 구별하기 위해). 실제로는 속성을 읽거나 쓰는 것을 특별한 방식으로 처리하려고 할 수도 있습니다. 예를 들어, &lt;code&gt;label&lt;/code&gt; 특성에 문자열을 지정할 때 항상 문자열을자를 수 있습니다. 당신은 &lt;em&gt;수있는&lt;/em&gt; 이 작업을 달성하기 위해 다음 코드를 사용 :</target>
        </trans-unit>
        <trans-unit id="672788c73a675b474b222103e325a67052f82755" translate="yes" xml:space="preserve">
          <source>In Yii most of database querying happens via &lt;a href=&quot;guide-db-active-record&quot;&gt;Active Record&lt;/a&gt; which properly uses PDO prepared statements internally. In case of prepared statements it's not possible to manipulate query as was demonstrated above.</source>
          <target state="translated">Yii에서 대부분의 데이터베이스 쿼리 는 PDO 준비된 명령문을 내부적으로 올바르게 사용하는 &lt;a href=&quot;guide-db-active-record&quot;&gt;Active Record&lt;/a&gt; 를 통해 발생합니다 . 준비된 명령문의 경우 위에서 설명한대로 쿼리를 조작 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="bcef10dfa50886d5445e85ea30866f411cef3e02" translate="yes" xml:space="preserve">
          <source>In Yii, a service locator is simply an instance of &lt;a href=&quot;yii-di-servicelocator&quot;&gt;yii\di\ServiceLocator&lt;/a&gt; or a child class.</source>
          <target state="translated">Yii에서 서비스 로케이터는 단순히 &lt;a href=&quot;yii-di-servicelocator&quot;&gt;yii \ di \ ServiceLocator&lt;/a&gt; 또는 하위 클래스 의 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="4d3b35ae790e3f70c92e6de5dd1c5ac31d086006" translate="yes" xml:space="preserve">
          <source>In Yii, most probably you'll use &lt;a href=&quot;guide-input-validation&quot;&gt;form validation&lt;/a&gt; to do alike checks.</source>
          <target state="translated">Yii에서는 대부분 &lt;a href=&quot;guide-input-validation&quot;&gt;양식 검사&lt;/a&gt; 를 사용하여 동일한 검사 를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="8c8da1bb8dd752422ec6ddd77eea7e4d47261ff7" translate="yes" xml:space="preserve">
          <source>In Yii, we often use the term &quot;language&quot; to refer to a locale.</source>
          <target state="translated">Yii에서는 로케일을 지칭하기 위해 종종 &quot;언어&quot;라는 용어를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="12182fac915d3de68bdb4b7a44aa8181229eca83" translate="yes" xml:space="preserve">
          <source>In a controller action you may use this method like this:</source>
          <target state="translated">컨트롤러 작업에서이 방법을 다음과 같이 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="71be5b4661cbd45d7c73edf23249028eaad9aaad" translate="yes" xml:space="preserve">
          <source>In a message to be translated, you can embed one or multiple parameters (also called placeholders) so that they can be replaced by the given values. By giving different sets of values, you can variate the translated message dynamically. In the following example, the placeholder &lt;code&gt;{username}&lt;/code&gt; in the message &lt;code&gt;'Hello, {username}!'&lt;/code&gt; will be replaced by &lt;code&gt;'Alexander'&lt;/code&gt; and &lt;code&gt;'Qiang'&lt;/code&gt;, respectively.</source>
          <target state="translated">번역 할 메시지에서 하나 또는 여러 개의 매개 변수 (자리 표시 자라고도 함)를 포함시켜 주어진 값으로 대체 할 수 있습니다. 다른 값 세트를 제공하면 번역 된 메시지를 동적으로 변형 할 수 있습니다. 다음 예에서 &lt;code&gt;'Hello, {username}!'&lt;/code&gt; 메시지 의 자리 표시 자 &lt;code&gt;{username}&lt;/code&gt; &lt;code&gt;'Alexander'&lt;/code&gt; 및 &lt;code&gt;'Qiang'&lt;/code&gt; 로 각각 대체됩니다 .</target>
        </trans-unit>
        <trans-unit id="8186cbab42cf501b8e19d36cbdb7970f39f6e830" translate="yes" xml:space="preserve">
          <source>In a well-designed application, controllers are often very thin, with each action containing only a few lines of code. If your controller is rather complicated, it usually indicates that you should refactor it and move some code to other classes.</source>
          <target state="translated">잘 설계된 응용 프로그램에서 컨트롤러는 종종 매우 얇으며 각 작업에는 몇 줄의 코드 만 포함됩니다. 컨트롤러가 다소 복잡한 경우 일반적으로 리팩터링하고 일부 코드를 다른 클래스로 이동해야 함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="361806aa4dc4e336a54c75c305ea2b35f0ea29fc" translate="yes" xml:space="preserve">
          <source>In addition to column classes provided by Yii that we'll review below, you can create your own column classes.</source>
          <target state="translated">아래에서 검토 할 Yii에서 제공하는 열 클래스 외에도 고유 한 열 클래스를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="20146be38ec2d61dd7e5e5c3a117346dcc16a50e" translate="yes" xml:space="preserve">
          <source>In any application, you should at least configure two properties: &lt;a href=&quot;yii-base-module#%24id-detail&quot;&gt;id&lt;/a&gt; and &lt;a href=&quot;yii-base-module#%24basePath-detail&quot;&gt;basePath&lt;/a&gt;.</source>
          <target state="translated">모든 애플리케이션에서 최소한 두 개의 특성 &lt;a href=&quot;yii-base-module#%24id-detail&quot;&gt;id&lt;/a&gt; 및 &lt;a href=&quot;yii-base-module#%24basePath-detail&quot;&gt;basePath를&lt;/a&gt; 구성해야합니다 .</target>
        </trans-unit>
        <trans-unit id="43c112b5f30a2205f4501ab1dd5da1007abdddde" translate="yes" xml:space="preserve">
          <source>In any place, you can get access to the &lt;a href=&quot;yii-base-view&quot;&gt;view&lt;/a&gt; application component by the expression &lt;code&gt;Yii::$app-&amp;gt;view&lt;/code&gt; and then call its aforementioned methods to render a view. For example,</source>
          <target state="translated">어느 곳에서나 &lt;code&gt;Yii::$app-&amp;gt;view&lt;/code&gt; 표현식으로 &lt;a href=&quot;yii-base-view&quot;&gt;뷰&lt;/a&gt; 애플리케이션 컴포넌트에 액세스 한 다음 위에서 언급 한 메소드를 호출하여 뷰를 렌더링 할 수 있습니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="a03fbf90e5ee72f1d1b77e3333c2919a3335a850" translate="yes" xml:space="preserve">
          <source>In case &lt;a href=&quot;yii-console-controllers-basemigratecontroller#%24migrationPath-detail&quot;&gt;$migrationPath&lt;/a&gt; is not set and no namespace is provided, the first entry of &lt;a href=&quot;yii-console-controllers-basemigratecontroller#%24migrationNamespaces-detail&quot;&gt;$migrationNamespaces&lt;/a&gt; will be used.</source>
          <target state="translated">경우 &lt;a href=&quot;yii-console-controllers-basemigratecontroller#%24migrationPath-detail&quot;&gt;$ migrationPath가&lt;/a&gt; 설정되어 있지 않고 더 네임 스페이스의 첫 번째 항목이 제공되지 &lt;a href=&quot;yii-console-controllers-basemigratecontroller#%24migrationNamespaces-detail&quot;&gt;$ migrationNamespaces가&lt;/a&gt; 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="bbaeab39a9473a0d389ee5d972c286be4e2a1175" translate="yes" xml:space="preserve">
          <source>In case &lt;a href=&quot;yii-sphinx-query#showMeta()-detail&quot;&gt;yii\sphinx\Query::showMeta()&lt;/a&gt; is set ActiveDataProvider will fetch total count value from the query meta information, avoiding extra counting query:</source>
          <target state="translated">경우 &lt;a href=&quot;yii-sphinx-query#showMeta()-detail&quot;&gt;YII \ 스핑크스 \ 검색어 : showMeta ()&lt;/a&gt; 추가 계산 쿼리를 피하고, 쿼리 메타 정보에서 총 카운트 값을 가져옵니다 세트 ActiveDataProvider은 다음과 같습니다</target>
        </trans-unit>
        <trans-unit id="9257125a23fc2102e9c66cb31081137bf8a1bb9d" translate="yes" xml:space="preserve">
          <source>In case it's not possible, table and column names should be escaped. Yii has special syntax for such escaping which allows doing it the same way for all databases it supports:</source>
          <target state="translated">가능하지 않은 경우 테이블 및 열 이름을 이스케이프해야합니다. Yii는 이러한 이스케이프를위한 특별한 구문을 가지고 있으며,이를 지원하는 모든 데이터베이스에 대해 동일한 방식으로 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6a24af6493e84ccab50c34b1ea726f95b8e7ff43" translate="yes" xml:space="preserve">
          <source>In case of Jane it is a bit simpler since she is an admin:</source>
          <target state="translated">Jane의 경우 관리자이기 때문에 조금 더 간단합니다.</target>
        </trans-unit>
        <trans-unit id="78bf3afc6473cb67f16ebf2f2e28f02700f18047" translate="yes" xml:space="preserve">
          <source>In case of a single positional parameter its value could be specified without wrapping it into array:</source>
          <target state="translated">단일 위치 매개 변수의 경우 값을 배열로 래핑하지 않고 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2fe94a70a859a5f3af709c1d0d193919bdf947ae" translate="yes" xml:space="preserve">
          <source>In case of nginx you should not need any extra config files.</source>
          <target state="translated">nginx의 경우 추가 설정 파일이 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="33ef5f5724a7f5d8ef33fc5c217e59be44e29506" translate="yes" xml:space="preserve">
          <source>In case the action should not run, the request should be handled inside of the &lt;code&gt;beforeAction&lt;/code&gt; code by either providing the necessary output or redirecting the request. Otherwise the response will be empty.</source>
          <target state="translated">조치가 실행되지 않아야 하는 경우, 필요한 출력을 제공하거나 요청을 경로 재지 정하여 요청 이 &lt;code&gt;beforeAction&lt;/code&gt; 코드 내에서 처리되어야합니다 . 그렇지 않으면 응답이 비어 있습니다.</target>
        </trans-unit>
        <trans-unit id="a92175de985d4aa65a968ba18cec6b69b9d7a504" translate="yes" xml:space="preserve">
          <source>In case the input is optional you may also want to add a &lt;a href=&quot;#default&quot;&gt;default value filter&lt;/a&gt; in addition to the date validator to ensure empty input is stored as &lt;code&gt;null&lt;/code&gt;. Otherwise you may end up with dates like &lt;code&gt;0000-00-00&lt;/code&gt; in your database or &lt;code&gt;1970-01-01&lt;/code&gt; in the input field of a date picker.</source>
          <target state="translated">입력이 선택 사항 인 경우 빈 입력이 &lt;code&gt;null&lt;/code&gt; 로 저장되도록 날짜 검사기 외에 &lt;a href=&quot;#default&quot;&gt;기본 값 필터&lt;/a&gt; 를 추가 할 수도 있습니다 . 그렇지 않으면 데이터베이스에서 &lt;code&gt;0000-00-00&lt;/code&gt; 또는 날짜 선택기의 입력 필드에서 &lt;code&gt;1970-01-01&lt;/code&gt; 과 같은 날짜로 끝날 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7a62b57857fce24824ce67d2d705d7a4638c4b59" translate="yes" xml:space="preserve">
          <source>In case there is no exception in the component, treat as the action has been invoked not from error handler, but by direct route, so '404 Not Found' error will be displayed.</source>
          <target state="translated">컴포넌트에 예외가없는 경우, 조치가 오류 핸들러가 아니라 직접 경로에 의해 호출 된 것으로 간주하여 '404 Not Found'오류가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="eaabad93cc875ed73d4db3fe7213a9ced27c48d2" translate="yes" xml:space="preserve">
          <source>In case when the automatic pluralization does not meet your requirement, you may also configure the &lt;a href=&quot;yii-rest-urlrule#%24controller-detail&quot;&gt;yii\rest\UrlRule::$controller&lt;/a&gt; property to explicitly specify how to map a name used in endpoint URLs to a controller ID. For example, the following code maps the name &lt;code&gt;u&lt;/code&gt; to the controller ID &lt;code&gt;user&lt;/code&gt;.</source>
          <target state="translated">자동 복수형이 요구 사항을 충족하지 않는 경우 엔드 포인트 URL에 사용 된 이름을 컨트롤러 ID에 매핑하는 방법을 명시 적으로 지정하도록 &lt;a href=&quot;yii-rest-urlrule#%24controller-detail&quot;&gt;yii \ rest \ UrlRule :: $ controller&lt;/a&gt; 속성을 구성 할 수도 있습니다 . 예를 들어, 다음 코드는 이름 &lt;code&gt;u&lt;/code&gt; 를 컨트롤러 ID &lt;code&gt;user&lt;/code&gt; 에 매핑합니다 .</target>
        </trans-unit>
        <trans-unit id="48bf1ba46f667eb9a012fda9dc211446b54a6b72" translate="yes" xml:space="preserve">
          <source>In case you do not use the Yii autoloader, the Composer autoloader can still autoload extension classes for you.</source>
          <target state="translated">Yii 오토로더를 사용하지 않는 경우에도 Composer 오토로더는 여전히 확장 클래스를 자동로드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c6d00d465c4acbcf00323e2f2c63667612e6d0e3" translate="yes" xml:space="preserve">
          <source>In case you need just an opening or closing tag, you can use the &lt;code&gt;Html::beginTag()&lt;/code&gt; and &lt;code&gt;Html::endTag()&lt;/code&gt; methods.</source>
          <target state="translated">여는 태그 나 닫는 태그 만 필요한 경우 &lt;code&gt;Html::beginTag()&lt;/code&gt; 및 &lt;code&gt;Html::endTag()&lt;/code&gt; 메서드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="00f830d0b7596fcb1c0cd6d3e1fc337869d97177" translate="yes" xml:space="preserve">
          <source>In case you need permissions hierarchy to be formed dynamically you need a UI or a console command. API used to build the hierarchy itself won't be different.</source>
          <target state="translated">동적으로 형성되는 권한 계층이 필요한 경우 UI 또는 콘솔 명령이 필요합니다. 계층 자체를 빌드하는 데 사용되는 API는 다르지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6d5db19d05fdac2d3a12405b342322a54c0c4d8b" translate="yes" xml:space="preserve">
          <source>In case you use an &lt;a href=&quot;yii-db-expression&quot;&gt;yii\db\Expression&lt;/a&gt; object as in the example above, the attribute will not hold the timestamp value, but the Expression object itself after the record has been saved. If you need the value from DB afterwards you should call the &lt;a href=&quot;yii-db-baseactiverecord#refresh()-detail&quot;&gt;refresh()&lt;/a&gt; method of the record.</source>
          <target state="translated">위의 예에서와 같이 &lt;a href=&quot;yii-db-expression&quot;&gt;yii \ db \ Expression&lt;/a&gt; 객체 를 사용하는 경우 속성은 타임 스탬프 값을 보유하지 않지만 레코드가 저장된 후 Expression 객체 자체를 보유합니다. 나중에 DB의 값이 필요한 경우 레코드 의 &lt;a href=&quot;yii-db-baseactiverecord#refresh()-detail&quot;&gt;refresh ()&lt;/a&gt; 메소드를 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="2977971cc385b42b9e37d10b995aac7cc37c6fcf" translate="yes" xml:space="preserve">
          <source>In case you want to break the convention as described above, you may configure the &lt;a href=&quot;#controllerMap&quot;&gt;controllerMap&lt;/a&gt; property.</source>
          <target state="translated">위에서 설명한대로 규칙을 위반하려는 경우 &lt;a href=&quot;#controllerMap&quot;&gt;controllerMap&lt;/a&gt; 속성을 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5f7b7ba1b4cc2d45f36a4e78bddc7b63ad9e1add" translate="yes" xml:space="preserve">
          <source>In case you want to get the value and then immediately remove it from array you can use &lt;code&gt;remove&lt;/code&gt; method:</source>
          <target state="translated">값을 얻은 다음 배열에서 즉시 제거하려면 &lt;code&gt;remove&lt;/code&gt; 메소드를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d07a26e9cdda2d886061e951566fd2d2d3d86319" translate="yes" xml:space="preserve">
          <source>In case, when the &lt;a href=&quot;yii-behaviors-blameablebehavior#%24value-detail&quot;&gt;$value&lt;/a&gt; property is &lt;code&gt;null&lt;/code&gt;, the value of &lt;code&gt;Yii::$app-&amp;gt;user-&amp;gt;id&lt;/code&gt; will be used as the value.</source>
          <target state="translated">때 경우, &lt;a href=&quot;yii-behaviors-blameablebehavior#%24value-detail&quot;&gt;$ 값&lt;/a&gt; 특성은 &lt;code&gt;null&lt;/code&gt; 의 값 &lt;code&gt;Yii::$app-&amp;gt;user-&amp;gt;id&lt;/code&gt; 값으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d14a4bb43947d1b412fc5b1bd50ff4c675cf554d" translate="yes" xml:space="preserve">
          <source>In case, when the &lt;a href=&quot;yii-behaviors-timestampbehavior#%24value-detail&quot;&gt;$value&lt;/a&gt; is &lt;code&gt;null&lt;/code&gt;, the result of the PHP function &lt;a href=&quot;http://php.net/manual/en/function.time.php&quot;&gt;time()&lt;/a&gt; will be used as value.</source>
          <target state="translated">때 경우 &lt;a href=&quot;yii-behaviors-timestampbehavior#%24value-detail&quot;&gt;$ 값&lt;/a&gt; 이다 &lt;code&gt;null&lt;/code&gt; 은 PHP 함수의 결과 &lt;a href=&quot;http://php.net/manual/en/function.time.php&quot;&gt;시간 ()&lt;/a&gt; 값으로 사용한다.</target>
        </trans-unit>
        <trans-unit id="526054892fd32fe87d7f7de2e41a85c0aa4be415" translate="yes" xml:space="preserve">
          <source>In case, when the property is &lt;code&gt;null&lt;/code&gt;, the value of &lt;code&gt;Yii::$app-&amp;gt;user-&amp;gt;id&lt;/code&gt; will be used as the value.</source>
          <target state="translated">이 속성이 &lt;code&gt;null&lt;/code&gt; 인 경우 &lt;code&gt;Yii::$app-&amp;gt;user-&amp;gt;id&lt;/code&gt; 값이 값으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9564171aca75e76624dc565ca06192455459af18" translate="yes" xml:space="preserve">
          <source>In case, when the value is &lt;code&gt;null&lt;/code&gt;, the result of the PHP function &lt;a href=&quot;http://php.net/manual/en/function.time.php&quot;&gt;time()&lt;/a&gt; will be used as value.</source>
          <target state="translated">값이 &lt;code&gt;null&lt;/code&gt; 인 경우 PHP 함수 &lt;a href=&quot;http://php.net/manual/en/function.time.php&quot;&gt;time ()&lt;/a&gt; 의 결과가 값으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9749a54364ea6fe5c6022ef4bd789bcf6fb12750" translate="yes" xml:space="preserve">
          <source>In classes which use service locator to obtain dependent objects.</source>
          <target state="translated">서비스 로케이터를 사용하여 종속 객체를 얻는 클래스</target>
        </trans-unit>
        <trans-unit id="a28f37f1c5783111edd24e61758b73478c8a9e4e" translate="yes" xml:space="preserve">
          <source>In conjunction with &lt;a href=&quot;yii-sphinx-matchbuilder&quot;&gt;yii\sphinx\MatchBuilder&lt;/a&gt; this class provides ability to build sophisticated MATCH expressions. Instance of this class can be passed to &lt;a href=&quot;yii-sphinx-query#match()-detail&quot;&gt;yii\sphinx\Query::match()&lt;/a&gt;. For example:</source>
          <target state="translated">와 함께 &lt;a href=&quot;yii-sphinx-matchbuilder&quot;&gt;YII \ 스핑크스 \ MatchBuilder&lt;/a&gt; 이 클래스는 정교한 일치 식을 구축 할 수있는 기능을 제공합니다. 이 클래스의 인스턴스는 &lt;a href=&quot;yii-sphinx-query#match()-detail&quot;&gt;yii \ sphinx \ Query :: match ()&lt;/a&gt; 로 전달 될 수 있습니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4e6a44c798c65c94fe27655e06212cb6fd0197bb" translate="yes" xml:space="preserve">
          <source>In contrast to the single model forms explained before, we are working with an array of models now. This array is passed to the view to display the input fields for each model in a table like style and we will use helper methods of &lt;a href=&quot;yii-base-model&quot;&gt;yii\base\Model&lt;/a&gt; that allow loading and validating multiple models at once:</source>
          <target state="translated">앞에서 설명한 단일 모델 형식과 달리 지금은 여러 모델로 작업하고 있습니다. 이 배열은 스타일과 같은 테이블에 각 모델의 입력 필드를 표시하기 위해 뷰로 전달되며 여러 모델을 한 번에로드하고 유효성을 검사 할 수있는 &lt;a href=&quot;yii-base-model&quot;&gt;yii \ base \ Model&lt;/a&gt; 도우미 메서드를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="21c81d733976c0e859768c7761a3a5754aabe5c1" translate="yes" xml:space="preserve">
          <source>In database modelling, when the multiplicity between two related tables is many-to-many, a &lt;a href=&quot;https://en.wikipedia.org/wiki/Junction_table&quot;&gt;junction table&lt;/a&gt; is usually introduced. For example, the &lt;code&gt;order&lt;/code&gt; table and the &lt;code&gt;item&lt;/code&gt; table may be related via a junction table named &lt;code&gt;order_item&lt;/code&gt;. One order will then correspond to multiple order items, while one product item will also correspond to multiple order items.</source>
          <target state="translated">데이터베이스 모델링에서 두 관련 테이블 간의 다중성이 다대 &lt;a href=&quot;https://en.wikipedia.org/wiki/Junction_table&quot;&gt;일인&lt;/a&gt; 경우 일반적으로 접합 테이블 이 도입됩니다. 예를 들어 &lt;code&gt;order&lt;/code&gt; 테이블과 &lt;code&gt;item&lt;/code&gt; 테이블은 &lt;code&gt;order_item&lt;/code&gt; 이라는 접합 테이블을 통해 관련 될 수 있습니다 . 하나의 주문은 여러 주문 항목에 해당하는 반면, 하나의 제품 항목은 여러 주문 항목에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="f2c03dffbf661b3707cfb1ab25115b89be06fc51" translate="yes" xml:space="preserve">
          <source>In debug mode Yii shows quite verbose errors which are certainly helpful for development. The thing is that these verbose errors are handy for attacker as well since these could reveal database structure, configuration values and parts of your code. Never run production applications with &lt;code&gt;YII_DEBUG&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt; in your &lt;code&gt;index.php&lt;/code&gt;.</source>
          <target state="translated">디버그 모드에서 Yii는 개발에 확실히 도움이되는 매우 자세한 오류를 보여줍니다. 문제는 이러한 자세한 오류가 데이터베이스 구조, 구성 값 및 코드 부분을 드러 낼 수 있기 때문에 공격자에게도 유용하다는 것입니다. &lt;code&gt;index.php&lt;/code&gt; 에서 &lt;code&gt;YII_DEBUG&lt;/code&gt; 가 &lt;code&gt;true&lt;/code&gt; 로 설정된 프로덕션 응용 프로그램을 실행하지 마십시오 .</target>
        </trans-unit>
        <trans-unit id="f6476bed2efb8416e1f88656caa94a2df20ce1e5" translate="yes" xml:space="preserve">
          <source>In each &lt;a href=&quot;guide-structure-applications&quot;&gt;application&lt;/a&gt; or &lt;a href=&quot;guide-structure-modules&quot;&gt;module&lt;/a&gt; that uses a model, define a concrete model class by extending from the corresponding base model class. The concrete model classes should contain rules and logic that are specific for that application or module.</source>
          <target state="translated">모델을 사용하는 각 &lt;a href=&quot;guide-structure-applications&quot;&gt;애플리케이션&lt;/a&gt; 또는 &lt;a href=&quot;guide-structure-modules&quot;&gt;모듈&lt;/a&gt; 에서 해당 기본 모델 클래스에서 확장하여 구체적 모델 클래스를 정의하십시오. 구체적 모델 클래스에는 해당 응용 프로그램이나 모듈에 특정한 규칙과 논리가 포함되어야합니다.</target>
        </trans-unit>
        <trans-unit id="9191020487ad3c1c36bba5781eeaa2c2ea995540" translate="yes" xml:space="preserve">
          <source>In each element, the key is one of the ciphers supported by OpenSSL (@see openssl_get_cipher_methods()). The value is an array of two integers, the first is the cipher's block size in bytes and the second is the key size in bytes.</source>
          <target state="translated">각 요소에서 키는 OpenSSL에서 지원하는 암호 중 하나입니다 (@openssl_get_cipher_methods () 참조). 값은 두 정수의 배열이며, 첫 번째는 바이트 단위의 암호 블록 크기이고 두 번째는 바이트 단위의 키 크기입니다.</target>
        </trans-unit>
        <trans-unit id="943aa28d921b00f4501d3a1aefac536b80c7cc7c" translate="yes" xml:space="preserve">
          <source>In general, to load migrations from different locations, &lt;a href=&quot;yii-console-controllers-basemigratecontroller#%24migrationNamespaces-detail&quot;&gt;$migrationNamespaces&lt;/a&gt; is the preferable solution as the migration name contains the origin of the migration in the history, which is not the case when using multiple migration paths.</source>
          <target state="translated">일반적으로 다른 위치에서 마이그레이션을로드 하려면 마이그레이션 이름에 히스토리의 마이그레이션 원본이 포함되어 있으므로 &lt;a href=&quot;yii-console-controllers-basemigratecontroller#%24migrationNamespaces-detail&quot;&gt;$ migrationNamespaces&lt;/a&gt; 가 선호되는 솔루션입니다. 여러 마이그레이션 경로를 사용하는 경우에는 그렇지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6dd2878d7d38e6005c4b2ddbc596fb6d9bf2e492" translate="yes" xml:space="preserve">
          <source>In most cases you should mainly deal with the &lt;code&gt;response&lt;/code&gt;&lt;a href=&quot;guide-structure-application-components&quot;&gt;application component&lt;/a&gt; which is an instance of &lt;a href=&quot;yii-web-response&quot;&gt;yii\web\Response&lt;/a&gt;, by default. However, Yii also allows you to create your own response objects and send them to end users as we will explain in the following.</source>
          <target state="translated">대부분의 경우 기본적 으로 &lt;a href=&quot;yii-web-response&quot;&gt;yii \ web \ Response&lt;/a&gt; 의 인스턴스 인 &lt;code&gt;response&lt;/code&gt; &lt;a href=&quot;guide-structure-application-components&quot;&gt;응용 프로그램 구성 요소&lt;/a&gt; 를 주로 처리해야합니다 . 그러나 Yii를 사용하면 다음에서 설명하는 것처럼 고유 한 응답 객체를 만들어 최종 사용자에게 보낼 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="7c39c0e0a62be9ff367056f057942d4b243801d6" translate="yes" xml:space="preserve">
          <source>In oder to acquire access token perform following sequence:</source>
          <target state="translated">액세스 토큰을 얻기 위해 다음 순서를 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="7dfbc915ac708c96111ef4645795b450aeba23f1" translate="yes" xml:space="preserve">
          <source>In order for content to be displayed properly and securely in HTML, special characters in the content should be encoded. In PHP this is done with &lt;a href=&quot;http://www.php.net/manual/en/function.htmlspecialchars.php&quot;&gt;htmlspecialchars&lt;/a&gt; and &lt;a href=&quot;http://www.php.net/manual/en/function.htmlspecialchars-decode.php&quot;&gt;htmlspecialchars_decode&lt;/a&gt;. The issue with using these methods directly is that you have to specify encoding and extra flags all the time. Since these flags are the same all the time and the encoding should match the one of the application in order to prevent security issues, Yii provides two compact and simple-to-use methods:</source>
          <target state="translated">컨텐트를 HTML로 올 바르고 안전하게 표시하려면 컨텐트의 특수 문자를 인코딩해야합니다. PHP에서는 &lt;a href=&quot;http://www.php.net/manual/en/function.htmlspecialchars.php&quot;&gt;htmlspecialchars&lt;/a&gt; 및 &lt;a href=&quot;http://www.php.net/manual/en/function.htmlspecialchars-decode.php&quot;&gt;htmlspecialchars_decode로&lt;/a&gt; 수행됩니다 . 이러한 메소드를 직접 사용하는 문제는 항상 인코딩 및 추가 플래그를 지정해야한다는 것입니다. 이러한 플래그는 항상 동일하며 인코딩은 보안 문제를 방지하기 위해 응용 프로그램 중 하나와 일치해야하므로 Yii는 두 가지 컴팩트하고 사용하기 쉬운 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="de775412071f9c20514e596d5ac2742225c85839" translate="yes" xml:space="preserve">
          <source>In order for the command line utility to see your commands, you will need to change the &lt;a href=&quot;yii-base-module#%24controllerNamespace-detail&quot;&gt;yii\base\Module::$controllerNamespace&lt;/a&gt; property, when Yii is executed in the console mode, and point it to your commands namespace.</source>
          <target state="translated">명령 행 유틸리티가 명령을 보려면 Yii가 콘솔 모드에서 실행될 때 &lt;a href=&quot;yii-base-module#%24controllerNamespace-detail&quot;&gt;yii \ base \ Module :: $ controllerNamespace&lt;/a&gt; 특성 을 변경하고 명령 네임 스페이스를 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="223a733e50855645d206d75e30009ecec04a494a" translate="yes" xml:space="preserve">
          <source>In order for your classes to be autoloaded by the Yii class autoloader or the Composer class autoloader, you should specify the &lt;code&gt;autoload&lt;/code&gt; entry in the &lt;code&gt;composer.json&lt;/code&gt; file, like shown below:</source>
          <target state="translated">Yii 클래스 오토로더 또는 Composer 클래스 오토로더로 클래스를 자동로드하려면 다음과 같이 &lt;code&gt;composer.json&lt;/code&gt; 파일 에 &lt;code&gt;autoload&lt;/code&gt; 항목을 지정해야 합니다.</target>
        </trans-unit>
        <trans-unit id="7b9a72656a0c3e94933c931a20d4250ae3b56ab9" translate="yes" xml:space="preserve">
          <source>In order to access server from remote machines use 0.0.0.0:8000. That is especially useful when running server in a virtual machine.</source>
          <target state="translated">원격 시스템에서 서버에 액세스하려면 0.0.0.0:8000을 사용하십시오. 가상 머신에서 서버를 실행할 때 특히 유용합니다.</target>
        </trans-unit>
        <trans-unit id="237b10302060d386286ebb41982352399dc836c5" translate="yes" xml:space="preserve">
          <source>In order to acquire access token perform following sequence:</source>
          <target state="translated">액세스 토큰을 얻으려면 다음 순서를 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="eb0ef91de056ce90c7a709745fbc53b0cb04ead3" translate="yes" xml:space="preserve">
          <source>In order to add hash to all links use &lt;code&gt;array_merge($_GET, ['#' =&amp;gt; 'my-hash'])&lt;/code&gt;.</source>
          <target state="translated">모든 링크에 해시를 추가하려면 &lt;code&gt;array_merge($_GET, ['#' =&amp;gt; 'my-hash'])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e8bb3b39b17a730be5838452811e8932c7e28363" translate="yes" xml:space="preserve">
          <source>In order to avoid CSRF you should always:</source>
          <target state="translated">CSRF를 피하려면 항상 다음을 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="9f7fe63f8a92b1bbe95650e847e93f1f6f78f73e" translate="yes" xml:space="preserve">
          <source>In order to build a map (key-value pairs) from a multidimensional array or an array of objects you can use &lt;code&gt;map&lt;/code&gt; method. The &lt;code&gt;$from&lt;/code&gt; and &lt;code&gt;$to&lt;/code&gt; parameters specify the key names or property names to set up the map. Optionally, one can further group the map according to a grouping field &lt;code&gt;$group&lt;/code&gt;. For example,</source>
          <target state="translated">다차원 배열 또는 객체 배열에서 맵 (키-값 쌍)을 만들려면 &lt;code&gt;map&lt;/code&gt; 메소드를 사용할 수 있습니다 . &lt;code&gt;$from&lt;/code&gt; 및 &lt;code&gt;$to&lt;/code&gt; 매개 변수는지도를 설정하는 키 이름이나 속성 이름을 지정합니다. 선택적으로 그룹화 필드 &lt;code&gt;$group&lt;/code&gt; 에 따라 맵을 추가로 그룹화 할 수 있습니다 . 예를 들어</target>
        </trans-unit>
        <trans-unit id="5c6f8f27a6760964e4cd9f17ee909090deef18ab" translate="yes" xml:space="preserve">
          <source>In order to catch logs written by this class, you need to setup a log route for 'yii\swiftmailer\Logger::add' category. For example:</source>
          <target state="translated">이 클래스가 작성한 로그를 잡으려면 'yii \ swiftmailer \ Logger :: add'범주에 대한 로그 경로를 설정해야합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="532468d261862f09dde4c5f58f7aebedd1786f90" translate="yes" xml:space="preserve">
          <source>In order to check if a user can update a post, we need to pass an extra parameter that is required by &lt;code&gt;AuthorRule&lt;/code&gt; described before:</source>
          <target state="translated">사용자가 게시물을 업데이트 할 수 있는지 확인하려면 &lt;code&gt;AuthorRule&lt;/code&gt; 설명한 AuthorRule에 필요한 추가 매개 변수를 전달해야합니다 .</target>
        </trans-unit>
        <trans-unit id="9478d992d55e8b2e3148a336d2f884dcb660089f" translate="yes" xml:space="preserve">
          <source>In order to compose message content via view file simply pass view name to the &lt;code&gt;compose()&lt;/code&gt; method:</source>
          <target state="translated">보기 파일을 통해 메시지 내용을 작성하려면보기 이름을 &lt;code&gt;compose()&lt;/code&gt; 메소드에 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="1943811e5349383b3acc9d54937cd8ffdbfd5747" translate="yes" xml:space="preserve">
          <source>In order to create a URL to a given route use the &lt;code&gt;Url::toRoute()&lt;/code&gt; method. The method uses &lt;a href=&quot;yii-web-urlmanager&quot;&gt;yii\web\UrlManager&lt;/a&gt; to create a URL:</source>
          <target state="translated">지정된 경로에 대한 URL을 작성하려면 &lt;code&gt;Url::toRoute()&lt;/code&gt; 메소드를 사용하십시오. 이 방법은 &lt;a href=&quot;yii-web-urlmanager&quot;&gt;yii \ web \ UrlManager&lt;/a&gt; 를 사용하여 URL을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="205bf34fb5e393be1b1a52ddab72aab973b52595" translate="yes" xml:space="preserve">
          <source>In order to create a form element in the form, along with the element's label, and any applicable JavaScript validation, the &lt;a href=&quot;yii-widgets-activeform#field()-detail&quot;&gt;ActiveForm::field()&lt;/a&gt; method is called, which returns an instance of &lt;a href=&quot;yii-widgets-activefield&quot;&gt;yii\widgets\ActiveField&lt;/a&gt;. When the result of this method is echoed directly, the result is a regular (text) input. To customize the output, you can chain additional methods of &lt;a href=&quot;yii-widgets-activefield&quot;&gt;ActiveField&lt;/a&gt; to this call:</source>
          <target state="translated">요소의 레이블 및 적용 가능한 JavaScript 유효성 검증과 함께 양식의 양식 요소를 작성하기 위해 &lt;a href=&quot;yii-widgets-activeform#field()-detail&quot;&gt;ActiveForm :: field ()&lt;/a&gt; 메소드가 호출되어 &lt;a href=&quot;yii-widgets-activefield&quot;&gt;yii \ widgets \ ActiveField&lt;/a&gt; 의 인스턴스를 리턴합니다 . 이 메소드의 결과가 직접 반향되면 결과는 일반 (텍스트) 입력입니다. 출력을 사용자 정의하기 위해 &lt;a href=&quot;yii-widgets-activefield&quot;&gt;ActiveField의&lt;/a&gt; 추가 메소드 를이 호출에 연결할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="59a7f8340a18d3106127ee372ea417327d5ecb11" translate="yes" xml:space="preserve">
          <source>In order to create your own custom mail solution, you need to create 2 classes: one for the &lt;code&gt;Mailer&lt;/code&gt; and another one for the &lt;code&gt;Message&lt;/code&gt;. You can use &lt;code&gt;yii\mail\BaseMailer&lt;/code&gt; and &lt;code&gt;yii\mail\BaseMessage&lt;/code&gt; as the base classes for your solution. These classes already contain the basic logic, which is described in this guide. However, their usage is not mandatory, it is enough to implement &lt;code&gt;yii\mail\MailerInterface&lt;/code&gt; and &lt;code&gt;yii\mail\MessageInterface&lt;/code&gt; interfaces. Then you need to implement all the abstract methods to build your solution.</source>
          <target state="translated">사용자 정의 메일 솔루션을 작성하려면 &lt;code&gt;Mailer&lt;/code&gt; 용 클래스 와 &lt;code&gt;Message&lt;/code&gt; 용 클래스 두 개를 작성해야합니다 . 당신은 사용할 수 있습니다 &lt;code&gt;yii\mail\BaseMailer&lt;/code&gt; 및 &lt;code&gt;yii\mail\BaseMessage&lt;/code&gt; 솔루션에 대한 기본 클래스로. 이러한 클래스에는이 가이드에 설명 된 기본 논리가 이미 포함되어 있습니다. 그러나 사용법은 필수가 아니며 &lt;code&gt;yii\mail\MailerInterface&lt;/code&gt; 및 yii &lt;code&gt;yii\mail\MessageInterface&lt;/code&gt; 인터페이스 를 구현하기에 충분합니다 . 그런 다음 솔루션을 빌드하기 위해 모든 추상 메소드를 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="9ba710a4251d38c946f9e6b5cfc456507763dab7" translate="yes" xml:space="preserve">
          <source>In order to display form errors from a model or models as a summary, you could use:</source>
          <target state="translated">모델의 양식 오류를 요약으로 표시하려면 다음을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a76c921f704b6e4916193f4009429fc0fc00bc72" translate="yes" xml:space="preserve">
          <source>In order to enable cookie-based login, you need to configure &lt;a href=&quot;yii-web-user#%24enableAutoLogin-detail&quot;&gt;yii\web\User::$enableAutoLogin&lt;/a&gt; to be &lt;code&gt;true&lt;/code&gt; in the application configuration. You also need to provide a duration time parameter when calling the &lt;a href=&quot;yii-web-user#login()-detail&quot;&gt;yii\web\User::login()&lt;/a&gt; method.</source>
          <target state="translated">쿠키 기반 로그인을 활성화 하려면 응용 프로그램 구성에서 &lt;a href=&quot;yii-web-user#%24enableAutoLogin-detail&quot;&gt;yii \ web \ User :: $ enableAutoLogin&lt;/a&gt; 을 &lt;code&gt;true&lt;/code&gt; 로 구성해야합니다. &lt;a href=&quot;yii-web-user#login()-detail&quot;&gt;yii \ web \ User :: login ()&lt;/a&gt; 메소드를 호출 할 때 지속 시간 매개 변수도 제공해야합니다 .</target>
        </trans-unit>
        <trans-unit id="a3d3196e1aa838b941845ee2fe6c315bdb0acfac" translate="yes" xml:space="preserve">
          <source>In order to enable this command you should adjust the configuration of your console application:</source>
          <target state="translated">이 명령을 활성화하려면 콘솔 응용 프로그램의 구성을 조정해야합니다.</target>
        </trans-unit>
        <trans-unit id="0f567bfe6a52c32cfdda3ce9e688431db0552980" translate="yes" xml:space="preserve">
          <source>In order to enable this parser you should configure &lt;a href=&quot;yii-web-request#%24parsers-detail&quot;&gt;yii\web\Request::$parsers&lt;/a&gt; in the following way:</source>
          <target state="translated">이 파서를 사용 하려면 다음과 같은 방법으로 &lt;a href=&quot;yii-web-request#%24parsers-detail&quot;&gt;yii \ web \ Request :: $ parsers&lt;/a&gt; 를 구성해야합니다 .</target>
        </trans-unit>
        <trans-unit id="75e77e1f49c52febe0442d63e1b6ac0342bb11a6" translate="yes" xml:space="preserve">
          <source>In order to encode or decode special characters in an array of strings into HTML entities you can use the following:</source>
          <target state="translated">문자열 배열의 특수 문자를 HTML 엔터티로 인코딩하거나 디코딩하려면 다음을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="95c509395307e548e7fb57fa34c4904374080b8a" translate="yes" xml:space="preserve">
          <source>In order to ensure the above life cycles, if a child class of Object needs to override the constructor, it should be done like the following:</source>
          <target state="translated">위의 수명주기를 보장하기 위해 Object의 하위 클래스가 생성자를 재정의해야하는 경우 다음과 같이 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="a99e8065744f9d2153d11083e290e5b89090d120" translate="yes" xml:space="preserve">
          <source>In order to generate a namespaced migration, you should specify a namespace before the migration's name. Note that backslash (&lt;code&gt;\&lt;/code&gt;) is usually considered a special character in the shell, so you need to escape it properly to avoid shell errors or incorrect behavior. For example:</source>
          <target state="translated">네임 스페이스 마이그레이션을 생성하려면 마이그레이션 이름 앞에 네임 스페이스를 지정해야합니다. 백 슬래시 ( &lt;code&gt;\&lt;/code&gt; )는 일반적으로 쉘에서 특수 문자로 간주되므로 쉘 오류 또는 올바르지 않은 동작을 피하려면 올바르게 이스케이프해야합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="40714802db4ad8dd55fad1e51be288ae9f84940a" translate="yes" xml:space="preserve">
          <source>In order to generate an image tag, use the following:</source>
          <target state="translated">이미지 태그를 생성하려면 다음을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="51028e7f8369a624bd567b83f02efaefb9f0b169" translate="yes" xml:space="preserve">
          <source>In order to generate buttons, you can use the following code:</source>
          <target state="translated">버튼을 생성하기 위해 다음 코드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="429db4c04ca41454c5225407eba386dba119684d" translate="yes" xml:space="preserve">
          <source>In order to get ordered list, use &lt;code&gt;Html::ol()&lt;/code&gt; instead.</source>
          <target state="translated">순서 목록을 얻으려면 대신 &lt;code&gt;Html::ol()&lt;/code&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="aebe343be8ed8922ba43fdbc487945fdaf835974" translate="yes" xml:space="preserve">
          <source>In order to get the attribute name without suffixes or prefixes, one can use the following:</source>
          <target state="translated">접미사 또는 접두사없이 속성 이름을 가져 오려면 다음을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="48e24505352b3b8e1745343538d99deacc73164f" translate="yes" xml:space="preserve">
          <source>In order to index an array according to a specified key, the &lt;code&gt;index&lt;/code&gt; method can be used. The input should be either multidimensional array or an array of objects. The &lt;code&gt;$key&lt;/code&gt; can be either a key name of the sub-array, a property name of object, or an anonymous function that must return the value that will be used as a key.</source>
          <target state="translated">색인을 위해 지정된 키에 따른 배열에서, &lt;code&gt;index&lt;/code&gt; 방법이 사용될 수있다. 입력은 다차원 배열 또는 객체 배열이어야합니다. &lt;code&gt;$key&lt;/code&gt; 서브 어레이의 키 이름, 객체의 속성 이름 또는 키로서 사용되는 값을 반환해야 익명 함수가 될 수있다.</target>
        </trans-unit>
        <trans-unit id="8b4ec312165f3e9a304f2ff73d3818ed2e5992ac" translate="yes" xml:space="preserve">
          <source>In order to perform &quot;find&quot; queries use &lt;a href=&quot;yii-mongodb-file-query&quot;&gt;yii\mongodb\file\Query&lt;/a&gt; class.</source>
          <target state="translated">&quot;찾기&quot;쿼리를 수행하려면 &lt;a href=&quot;yii-mongodb-file-query&quot;&gt;yii \ mongodb \ file \ Query&lt;/a&gt; 클래스를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="59c8918b05350f0ee10ab16169e9539098c71a16" translate="yes" xml:space="preserve">
          <source>In order to perform &quot;find&quot; queries use &lt;a href=&quot;yii-mongodb-query&quot;&gt;yii\mongodb\Query&lt;/a&gt; class.</source>
          <target state="translated">&quot;찾기&quot;쿼리를 수행하려면 &lt;a href=&quot;yii-mongodb-query&quot;&gt;yii \ mongodb \ Query&lt;/a&gt; 클래스를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="bcfca2d3f7f9e1584749a3e58ee0618f650287e5" translate="yes" xml:space="preserve">
          <source>In order to provide increased security for user passwords, even in the worst case scenario (your application is breached), you need to use a hashing algorithm that is resilient against brute force attacks. The best current choice is &lt;code&gt;bcrypt&lt;/code&gt;. In PHP, you can create a &lt;code&gt;bcrypt&lt;/code&gt; hash using the &lt;a href=&quot;http://php.net/manual/en/function.crypt.php&quot;&gt;crypt function&lt;/a&gt;. Yii provides two helper functions which make using &lt;code&gt;crypt&lt;/code&gt; to securely generate and verify hashes easier.</source>
          <target state="translated">최악의 시나리오 (응용 프로그램이 위반 된 경우)에서도 사용자 암호에 대한 보안을 강화하려면 무차별 대입 공격에 대해 탄력적 인 해싱 알고리즘을 사용해야합니다. 현재 가장 좋은 선택은 &lt;code&gt;bcrypt&lt;/code&gt; 입니다. PHP에서는 &lt;a href=&quot;http://php.net/manual/en/function.crypt.php&quot;&gt;crypt 함수를&lt;/a&gt; 사용하여 &lt;code&gt;bcrypt&lt;/code&gt; 해시를 만들 수 있습니다 . Yii는 &lt;code&gt;crypt&lt;/code&gt; 를 사용하여 해시를 안전하게 생성하고 확인 하는 두 가지 도우미 기능을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="551eb9be6a321036a10f20511e3a53e143c556b6" translate="yes" xml:space="preserve">
          <source>In order to run Yii, your webserver must meet its requirements. The very minimum requirement is PHP 5.4. In order to check the requirements copy &lt;code&gt;requirements.php&lt;/code&gt; from your root directory into the webroot directory and run it via browser using &lt;code&gt;http://example.com/requirements.php&lt;/code&gt; URL. Don't forget to delete the file afterwards.</source>
          <target state="translated">Yii를 실행하려면 웹 서버가 요구 사항을 충족해야합니다. 최소 요구 사항은 PHP 5.4입니다. 요구 사항을 확인하려면 루트 디렉토리에서 &lt;code&gt;requirements.php&lt;/code&gt; 를 웹 루트 디렉토리로 복사 하고 &lt;code&gt;http://example.com/requirements.php&lt;/code&gt; URL을 사용하여 브라우저를 통해 실행하십시오 . 나중에 파일을 삭제하는 것을 잊지 마십시오.</target>
        </trans-unit>
        <trans-unit id="b00cce8aef0e2c6851c7189dd5989555ddf4021b" translate="yes" xml:space="preserve">
          <source>In order to setup Sphinx &quot;searchd&quot; to support MySQL protocol following configuration should be added:</source>
          <target state="translated">MySQL 프로토콜을 지원하도록 Sphinx &quot;검색&quot;을 설정하려면 다음 구성을 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="f6133ca192354c0e131ed1c794a686c48ed7e0dd" translate="yes" xml:space="preserve">
          <source>In order to theme modules, &lt;a href=&quot;yii-base-theme#%24pathMap-detail&quot;&gt;yii\base\Theme::$pathMap&lt;/a&gt; can be configured like the following:</source>
          <target state="translated">테마 모듈을 위해 &lt;a href=&quot;yii-base-theme#%24pathMap-detail&quot;&gt;yii \ base \ Theme :: $ pathMap&lt;/a&gt; 을 다음과 같이 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a710788aa13f189276cb2a9a7f5410a30b5ca017" translate="yes" xml:space="preserve">
          <source>In order to theme widgets, you can configure &lt;a href=&quot;yii-base-theme#%24pathMap-detail&quot;&gt;yii\base\Theme::$pathMap&lt;/a&gt; in the following way:</source>
          <target state="translated">테마 위젯 을 위해 다음과 같은 방법으로 &lt;a href=&quot;yii-base-theme#%24pathMap-detail&quot;&gt;yii \ base \ Theme :: $ pathMap&lt;/a&gt; 을 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8ce27104e11d931a6691a80c425ae98e20fe3ffa" translate="yes" xml:space="preserve">
          <source>In order to use Facebook OAuth you must register your application at &lt;a href=&quot;https://developers.facebook.com/apps&quot;&gt;https://developers.facebook.com/apps&lt;/a&gt;.</source>
          <target state="translated">Facebook OAuth를 사용하려면 &lt;a href=&quot;https://developers.facebook.com/apps&quot;&gt;https://developers.facebook.com/apps&lt;/a&gt; 에서 애플리케이션을 등록해야합니다 .</target>
        </trans-unit>
        <trans-unit id="37aee35b502e65c15cd467eec8f3af7e8d304237" translate="yes" xml:space="preserve">
          <source>In order to use GitHub OAuth you must register your application at &lt;a href=&quot;https://github.com/settings/applications/new&quot;&gt;https://github.com/settings/applications/new&lt;/a&gt;.</source>
          <target state="translated">GitHub OAuth를 사용하려면 &lt;a href=&quot;https://github.com/settings/applications/new&quot;&gt;https://github.com/settings/applications/new&lt;/a&gt; 에서 애플리케이션을 등록해야합니다 .</target>
        </trans-unit>
        <trans-unit id="8b9dfb8de106378a14ebc735283dc1490d42850d" translate="yes" xml:space="preserve">
          <source>In order to use Google OAuth you must create a project at &lt;a href=&quot;https://console.developers.google.com/project&quot;&gt;https://console.developers.google.com/project&lt;/a&gt; and setup its credentials at https://console.developers.google.com/project/[yourProjectId]/apiui/credential. In order to enable using scopes for retrieving user attributes, you should also enable Google+ API at https://console.developers.google.com/project/[yourProjectId]/apiui/api/plus</source>
          <target state="translated">Google OAuth를 사용하려면 &lt;a href=&quot;https://console.developers.google.com/project&quot;&gt;https://console.developers.google.com/project&lt;/a&gt; 에서 프로젝트를 만들고 https://console.developers.google.com/project/[yourProjectId]/apiui/ 에서 자격 증명을 설정 해야합니다. 신임장. 사용자 속성을 검색하기 위해 범위를 사용하려면 https://console.developers.google.com/project/[yourProjectId]/apiui/api/plus에서 Google+ API를 사용하도록 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="6a0c5470f29449b1d799f1f989a2750c53e9170f" translate="yes" xml:space="preserve">
          <source>In order to use Microsoft Live OAuth you must register your application at &lt;a href=&quot;https://account.live.com/developers/applications&quot;&gt;https://account.live.com/developers/applications&lt;/a&gt;</source>
          <target state="translated">Microsoft Live OAuth를 사용하려면 &lt;a href=&quot;https://account.live.com/developers/applications&quot;&gt;https://account.live.com/developers/applications&lt;/a&gt; 에서 응용 프로그램을 등록해야합니다.</target>
        </trans-unit>
        <trans-unit id="7b4a065e9f223269d86e3e030a91c75d11657c2a" translate="yes" xml:space="preserve">
          <source>In order to use Twitter OAuth you must register your application at &lt;a href=&quot;https://dev.twitter.com/apps/new&quot;&gt;https://dev.twitter.com/apps/new&lt;/a&gt;.</source>
          <target state="translated">Twitter OAuth를 사용하려면 &lt;a href=&quot;https://dev.twitter.com/apps/new&quot;&gt;https://dev.twitter.com/apps/new&lt;/a&gt; 에서 애플리케이션을 등록해야합니다 .</target>
        </trans-unit>
        <trans-unit id="19214c5bb0b0f85974868e73873ffa04d35f752c" translate="yes" xml:space="preserve">
          <source>In order to use VKontakte OAuth you must register your application at &lt;a href=&quot;http://vk.com/editapp?act=create&quot;&gt;http://vk.com/editapp?act=create&lt;/a&gt;.</source>
          <target state="translated">VKontakte OAuth를 사용하려면 &lt;a href=&quot;http://vk.com/editapp?act=create&quot;&gt;http://vk.com/editapp?act=create&lt;/a&gt; 에서 애플리케이션을 등록해야합니다 .</target>
        </trans-unit>
        <trans-unit id="d5a88e41c598b6680378cd0d6034da6c8b43c482" translate="yes" xml:space="preserve">
          <source>In order to use Yandex OAuth you must register your application at &lt;a href=&quot;https://oauth.yandex.ru/client/new&quot;&gt;https://oauth.yandex.ru/client/new&lt;/a&gt;.</source>
          <target state="translated">Yandex OAuth를 사용하려면 &lt;a href=&quot;https://oauth.yandex.ru/client/new&quot;&gt;https://oauth.yandex.ru/client/new&lt;/a&gt; 에서 애플리케이션을 등록해야합니다 .</target>
        </trans-unit>
        <trans-unit id="0c82ae15a36d8819e26fe9ee26b31e6fe1622bb0" translate="yes" xml:space="preserve">
          <source>In order to use linkedIn OAuth you must register your application at &lt;a href=&quot;https://www.linkedin.com/secure/developer&quot;&gt;https://www.linkedin.com/secure/developer&lt;/a&gt;.</source>
          <target state="translated">linkedIn OAuth를 사용하려면 &lt;a href=&quot;https://www.linkedin.com/secure/developer&quot;&gt;https://www.linkedin.com/secure/developer&lt;/a&gt; 에서 응용 프로그램을 등록해야합니다 .</target>
        </trans-unit>
        <trans-unit id="de37b0661b2941b5f47798772a08d71eedec623f" translate="yes" xml:space="preserve">
          <source>In other places, if you want to send out the &quot;Location&quot; header immediately, you should use the following code:</source>
          <target state="translated">다른 위치에서 &quot;Location&quot;헤더를 즉시 보내려면 다음 코드를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="fb537221d2c1614f92fb897d078fe4c7c6b3c556" translate="yes" xml:space="preserve">
          <source>In particular, Security supports the following features:</source>
          <target state="translated">특히 보안은 다음 기능을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="2bbde8db494df90be702d5b5d346c75616dab39f" translate="yes" xml:space="preserve">
          <source>In places other than an action method, you should call &lt;a href=&quot;yii-web-response#redirect()-detail&quot;&gt;yii\web\Response::redirect()&lt;/a&gt; directly followed by a chained call to the &lt;a href=&quot;yii-web-response#send()-detail&quot;&gt;yii\web\Response::send()&lt;/a&gt; method to ensure no extra content will be appended to the response.</source>
          <target state="translated">액션 메소드 이외의 장소에서는 &lt;a href=&quot;yii-web-response#redirect()-detail&quot;&gt;yii \ web \ Response :: redirect ()를&lt;/a&gt; 직접 호출 한 다음 &lt;a href=&quot;yii-web-response#send()-detail&quot;&gt;yii \ web \ Response :: send ()&lt;/a&gt; 메소드를 체인 호출하여 추가 컨텐츠가 추가되지 않도록해야합니다. 응답.</target>
        </trans-unit>
        <trans-unit id="1fbdc15fb21ded0a3a54bf98d1312a1f30e24c1e" translate="yes" xml:space="preserve">
          <source>In practice, you usually want to enable pretty URLs and take advantage of HTTP verbs. For example, a request &lt;code&gt;POST /users&lt;/code&gt; would mean accessing the &lt;code&gt;user/create&lt;/code&gt; action. This can be done easily by configuring the &lt;code&gt;urlManager&lt;/code&gt;&lt;a href=&quot;guide-structure-application-components&quot;&gt;application component&lt;/a&gt; in the application configuration like the following:</source>
          <target state="translated">실제로는 일반적으로 예쁜 URL을 활성화하고 HTTP 동사를 활용하려고합니다. 예를 들어 &lt;code&gt;POST /users&lt;/code&gt; 요청 은 &lt;code&gt;user/create&lt;/code&gt; 작업에 액세스하는 것을 의미 합니다. 다음과 같이 응용 &lt;a href=&quot;guide-structure-application-components&quot;&gt;프로그램 구성&lt;/a&gt; 에서 &lt;code&gt;urlManager&lt;/code&gt; 응용 프로그램 구성 요소 를 구성하면 쉽게 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a610654095da50b607045621c707cae0689602d0" translate="yes" xml:space="preserve">
          <source>In production mode, enable a bytecode cache, such as &lt;a href=&quot;http://php.net/manual/en/intro.opcache.php&quot;&gt;PHP OPcache&lt;/a&gt; or &lt;a href=&quot;http://php.net/manual/en/book.apc.php&quot;&gt;APC&lt;/a&gt;, to minimize the time needed for including and parsing PHP files.</source>
          <target state="translated">프로덕션 모드에서는 &lt;a href=&quot;http://php.net/manual/en/intro.opcache.php&quot;&gt;PHP OPcache&lt;/a&gt; 또는 &lt;a href=&quot;http://php.net/manual/en/book.apc.php&quot;&gt;APC&lt;/a&gt; 와 같은 바이트 코드 캐시를 활성화하여 PHP 파일을 포함하고 구문 분석하는 데 필요한 시간을 최소화하십시오.</target>
        </trans-unit>
        <trans-unit id="ef9067f0e8276f31c8e8537f005de545bcc6ff0c" translate="yes" xml:space="preserve">
          <source>In relational context ActiveQuery represents a relation between two Active Record classes.</source>
          <target state="translated">관계형 컨텍스트에서 ActiveQuery는 두 개의 Active Record 클래스 간의 관계를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="91fba3216272f1517910651b76fc3094fe4c7e95" translate="yes" xml:space="preserve">
          <source>In some cases any form of automated testing could be overkill:</source>
          <target state="translated">어떤 경우에는 모든 형태의 자동 테스트가 과도 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="09ec95920ff23b38ff29ba5af603a969840f9a11" translate="yes" xml:space="preserve">
          <source>In some rare occasions, you may want to install some or all extensions manually, rather than relying on Composer. To do so, you should:</source>
          <target state="translated">드문 경우지만 Composer를 사용하지 않고 일부 또는 모든 확장을 수동으로 설치하려고 할 수 있습니다. 그렇게하려면 다음을 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="3ea81eac69c47ebc18ea5dc5ebea45220554b17b" translate="yes" xml:space="preserve">
          <source>In some scenarios, to ensure data consistency, you may want to enclose some or all of them in transactions. You can do so by overriding this method and returning the operations that need to be transactional. For example,</source>
          <target state="translated">일부 시나리오에서는 데이터 일관성을 보장하기 위해 일부 또는 전부를 트랜잭션으로 묶을 수 있습니다. 이 메소드를 대체하고 트랜잭션이 필요한 조작을 리턴하여이를 수행 할 수 있습니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="3ed8a59a56249cf24f13e7ffcf67fc4dcffea023" translate="yes" xml:space="preserve">
          <source>In summary, models</source>
          <target state="translated">요약하면, 모델</target>
        </trans-unit>
        <trans-unit id="61a2e894a6164c1560b05ee22a2faf1053a05402" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;guide-output-pagination&quot;&gt;Pagination&lt;/a&gt; and &lt;a href=&quot;guide-output-sorting&quot;&gt;Sorting&lt;/a&gt; sections, we have described how to allow end users to choose a particular page of data to display and sort them by some columns. Because the task of paginating and sorting data is very common, Yii provides a set of &lt;em&gt;data provider&lt;/em&gt; classes to encapsulate it.</source>
          <target state="translated">에서 &lt;a href=&quot;guide-output-pagination&quot;&gt;페이지 매김&lt;/a&gt; 및 &lt;a href=&quot;guide-output-sorting&quot;&gt;정렬&lt;/a&gt; 섹션, 우리는 최종 사용자가 일부 열하여 특정 디스플레이 데이터의 페이지와 종류를 선택할 수 있도록하는 방법을 설명했다. 데이터 페이지 매김 및 정렬 작업이 매우 일반적이므로 Yii는 &lt;em&gt;데이터&lt;/em&gt; 를 캡슐화하기위한 &lt;em&gt;데이터 공급자&lt;/em&gt; 클래스 세트를 &lt;em&gt;제공&lt;/em&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="48ee1e4e346026fc9e757bff8e6e6cdaa606fd0e" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;guide-structure-entry-scripts&quot;&gt;entry script&lt;/a&gt;, class autoloaders for different libraries are registered. This includes the Composer autoloader through its &lt;code&gt;autoload.php&lt;/code&gt; file and the Yii autoloader through its &lt;code&gt;Yii&lt;/code&gt; class file. The entry script then loads the application &lt;a href=&quot;guide-concept-configurations&quot;&gt;configuration&lt;/a&gt; and creates an &lt;a href=&quot;guide-structure-applications&quot;&gt;application&lt;/a&gt; instance.</source>
          <target state="translated">에서 &lt;a href=&quot;guide-structure-entry-scripts&quot;&gt;항목 스크립트&lt;/a&gt; , 다른 라이브러리 클래스 오토로더가 등록되어 있습니다. 여기에는 &lt;code&gt;autoload.php&lt;/code&gt; 파일을 통한 Composer 오토로더 와 &lt;code&gt;Yii&lt;/code&gt; 클래스 파일을 통한 Yii 오토로더가 포함 됩니다. 그런 다음 입력 스크립트는 응용 프로그램 &lt;a href=&quot;guide-concept-configurations&quot;&gt;구성&lt;/a&gt; 을로드하고 응용 &lt;a href=&quot;guide-structure-applications&quot;&gt;프로그램&lt;/a&gt; 인스턴스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="77e3595c24ae1d4de4f6354d101786dd64c6a0fd" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;https://github.com/yiisoft/yii2-app-advanced/blob/master/docs/guide/README.md&quot;&gt;Advanced Project Template&lt;/a&gt;, each tier has its own root alias. For example, the front-end tier has a root alias &lt;code&gt;@frontend&lt;/code&gt;, while the back-end tier root alias is &lt;code&gt;@backend&lt;/code&gt;. As a result, you may put the front-end classes under the namespace &lt;code&gt;frontend&lt;/code&gt; while the back-end classes are under &lt;code&gt;backend&lt;/code&gt;. This will allow these classes to be autoloaded by the Yii autoloader.</source>
          <target state="translated">에서 &lt;a href=&quot;https://github.com/yiisoft/yii2-app-advanced/blob/master/docs/guide/README.md&quot;&gt;고급 프로젝트 템플릿&lt;/a&gt; , 각 계층은 자신의 루트 별명을 가지고있다. 예를 들어, 프론트 엔드 티어에는 루트 별명이 &lt;code&gt;@frontend&lt;/code&gt; 이고 백엔드 티어 루트 별명은 &lt;code&gt;@backend&lt;/code&gt; 입니다. 결과적으로, &lt;code&gt;backend&lt;/code&gt; 클래스가 백엔드 아래에있는 동안 &lt;code&gt;frontend&lt;/code&gt; 엔드 클래스를 네임 스페이스 프론트 엔드 아래에 둘 수 있습니다 . 이를 통해 Yii 오토로더가이 클래스를 자동로드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cccdafc371d04e0912238d3b7289c362d079b412" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;composer.json&lt;/code&gt; of your project, add the following lines:</source>
          <target state="translated">프로젝트 의 &lt;code&gt;composer.json&lt;/code&gt; 에서 다음 행을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="c9d3dd633c3452ece02051a45be5a07698138947" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;create&lt;/code&gt; action (defined by the &lt;code&gt;actionCreate()&lt;/code&gt; method), the code is similar. It first tries to populate a new instance of the &lt;a href=&quot;guide-structure-models&quot;&gt;model&lt;/a&gt; using the request data and save the model. If both succeed it will redirect the browser to the &lt;code&gt;view&lt;/code&gt; action with the ID of the newly created model. Otherwise it will display the &lt;code&gt;create&lt;/code&gt; view through which users can provide the needed input.</source>
          <target state="translated">에서 &lt;code&gt;create&lt;/code&gt; (의해 정의 된 동작 &lt;code&gt;actionCreate()&lt;/code&gt; 메소드), 코드는 유사하다. 먼저 요청 데이터를 사용하여 &lt;a href=&quot;guide-structure-models&quot;&gt;모델&lt;/a&gt; 의 새 인스턴스를 채우고 모델 을 저장 하려고합니다 . 둘 다 성공 하면 새로 생성 된 모델의 ID를 사용하여 브라우저를 &lt;code&gt;view&lt;/code&gt; 작업으로 리디렉션합니다 . 그렇지 않으면 사용자가 필요한 입력을 제공 할 수 있는 &lt;code&gt;create&lt;/code&gt; 보기 가 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="d937606db7a455e2bb87dcde4e18035a444b3d63" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;update&lt;/code&gt; action, we first load the &lt;code&gt;$user&lt;/code&gt; and &lt;code&gt;$profile&lt;/code&gt; models to be updated from the database. We then call &lt;a href=&quot;yii-base-model#load()-detail&quot;&gt;yii\base\Model::load()&lt;/a&gt; to populate these two models with the user input. If loading is successful, we will validate the two models and then save them &amp;mdash; please note that we use &lt;code&gt;save(false)&lt;/code&gt; to skip over validations inside the models as the user input data have already been validated. If loading is not successful, we will render the &lt;code&gt;update&lt;/code&gt; view which has the following content:</source>
          <target state="translated">에서 &lt;code&gt;update&lt;/code&gt; 액션, 우리가 처음로드 &lt;code&gt;$user&lt;/code&gt; 및 &lt;code&gt;$profile&lt;/code&gt; 모델은 데이터베이스에서 업데이트 할 수 있습니다. 그런 다음 &lt;a href=&quot;yii-base-model#load()-detail&quot;&gt;yii \ base \ Model :: load ()&lt;/a&gt; 를 호출 하여이 두 모델을 사용자 입력으로 채 웁니다. 로드가 성공하면 두 모델의 유효성을 검사 한 다음 저장합니다 . 사용자 입력 데이터가 이미 검증되었으므로 &lt;code&gt;save(false)&lt;/code&gt; 를 사용 하여 모델 내부의 유효성 검사를 건너 뜁니다. 로드에 실패 하면 다음 내용이 포함 된 &lt;code&gt;update&lt;/code&gt; 보기를 렌더링합니다 .</target>
        </trans-unit>
        <trans-unit id="abb70b6b8810a76c79b24275d41e814fa1614c65" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;view&lt;/code&gt; action (defined by the &lt;code&gt;actionView()&lt;/code&gt; method), the code first loads the &lt;a href=&quot;guide-structure-models&quot;&gt;model&lt;/a&gt; according to the requested model ID; If the model is loaded successfully, it will display it using a &lt;a href=&quot;guide-structure-views&quot;&gt;view&lt;/a&gt; named &lt;code&gt;view&lt;/code&gt;. Otherwise, it will throw an exception.</source>
          <target state="translated">에서 &lt;code&gt;view&lt;/code&gt; 작업 (의해 정의 &lt;code&gt;actionView()&lt;/code&gt; 코드 먼저로드, 메소드) &lt;a href=&quot;guide-structure-models&quot;&gt;모델이&lt;/a&gt; 요구 된 모델에 따른 ID; 모델이 성공적으로로드되면 &lt;a href=&quot;guide-structure-views&quot;&gt;view&lt;/a&gt; 라는 &lt;code&gt;view&lt;/code&gt; 사용하여 표시됩니다 . 그렇지 않으면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="38741ea73b0ac314976a3a1c53ba3a0b26fa8acf" translate="yes" xml:space="preserve">
          <source>In the SQL statement, you can embed one or multiple parameter placeholders (e.g. &lt;code&gt;:id&lt;/code&gt; in the above example). A parameter placeholder should be a string starting with a colon. You may then call one of the following parameter binding methods to bind the parameter values:</source>
          <target state="translated">SQL 문에서 하나 이상의 매개 변수 자리 표시자를 포함 할 수 있습니다 (예 &lt;code&gt;:id&lt;/code&gt; 위의 예에서 : id ). 매개 변수 자리 표시자는 콜론으로 시작하는 문자열이어야합니다. 그런 다음 다음 매개 변수 바인딩 메소드 중 하나를 호출하여 매개 변수 값을 바인드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9b817ffd564bb4dc6ff99c9eff425cc1b63e04f7" translate="yes" xml:space="preserve">
          <source>In the Web form that collects the user input, add a hidden field that stores the lock version of the recording being updated.</source>
          <target state="translated">사용자 입력을 수집하는 웹 양식에서 업데이트중인 레코딩의 잠금 버전을 저장하는 숨겨진 필드를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="a6e413a8811435732fdc1f5d13e97397205f6e39" translate="yes" xml:space="preserve">
          <source>In the Web form that takes user inputs, add a hidden field to store the current version number of the row being updated. Be sure your version attribute has input validation rules and validates successfully.</source>
          <target state="translated">사용자 입력을받는 웹 양식에서 숨겨진 필드를 추가하여 업데이트중인 행의 현재 버전 번호를 저장하십시오. 버전 속성에 입력 유효성 검사 규칙이 있고 성공적으로 유효성을 검사해야합니다.</target>
        </trans-unit>
        <trans-unit id="92a0f38a4d2046996a85f125b92cd25b82aaa4fa" translate="yes" xml:space="preserve">
          <source>In the above &lt;code&gt;$attribute&lt;/code&gt; refers to the attribute currently being validated while &lt;code&gt;$params&lt;/code&gt; contains an array of validator configuration options such as &lt;code&gt;max&lt;/code&gt; in case of &lt;code&gt;string&lt;/code&gt; validator. The value of the attribute currently being validated can be accessed as &lt;code&gt;$this-&amp;gt;$attribute&lt;/code&gt;. Note the &lt;code&gt;$&lt;/code&gt; before &lt;code&gt;attribute&lt;/code&gt;; this is taking the value of the variable &lt;code&gt;$attribute&lt;/code&gt; and using it as the name of the property to access.</source>
          <target state="translated">위의 &lt;code&gt;$attribute&lt;/code&gt; 는 현재 유효성이 검사되는 속성을 나타내며 &lt;code&gt;$params&lt;/code&gt; 는 &lt;code&gt;string&lt;/code&gt; 유효성 검사기의 경우 &lt;code&gt;max&lt;/code&gt; 와 같은 유효성 검사기 구성 옵션 배열을 포함합니다 . 현재 검증되고있는 속성 값은 &lt;code&gt;$this-&amp;gt;$attribute&lt;/code&gt; 로 액세스 할 수 있습니다 . &lt;code&gt;$&lt;/code&gt; before &lt;code&gt;attribute&lt;/code&gt; 주목하십시오 . 변수 &lt;code&gt;$attribute&lt;/code&gt; 의 값을 가져 와서 액세스 할 속성의 이름으로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="ee29e244aa41f83a1f032e5e3ffd0a11ce8e58bd" translate="yes" xml:space="preserve">
          <source>In the above &lt;code&gt;mailer&lt;/code&gt; is ID of the component that sends email and should be already configured.</source>
          <target state="translated">위의 &lt;code&gt;mailer&lt;/code&gt; 는 이메일을 보내는 구성 요소의 ID이며 이미 구성되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="468a966a350a2c46623415d1c74ea08b02a9c077" translate="yes" xml:space="preserve">
          <source>In the above code, &lt;a href=&quot;yii-base-widget#begin()-detail&quot;&gt;ActiveForm::begin()&lt;/a&gt; not only creates a form instance, but also marks the beginning of the form. All of the content placed between &lt;a href=&quot;yii-base-widget#begin()-detail&quot;&gt;ActiveForm::begin()&lt;/a&gt; and &lt;a href=&quot;yii-base-widget#end()-detail&quot;&gt;ActiveForm::end()&lt;/a&gt; will be wrapped within the HTML &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; tag. As with any widget, you can specify some options as to how the widget should be configured by passing an array to the &lt;code&gt;begin&lt;/code&gt; method. In this case, an extra CSS class and identifying ID are passed to be used in the opening &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; tag. For all available options, please refer to the API documentation of &lt;a href=&quot;yii-widgets-activeform&quot;&gt;yii\widgets\ActiveForm&lt;/a&gt;.</source>
          <target state="translated">위 코드에서 &lt;a href=&quot;yii-base-widget#begin()-detail&quot;&gt;ActiveForm :: begin ()&lt;/a&gt; 은 폼 인스턴스를 생성 할뿐만 아니라 폼의 시작을 표시합니다. &lt;a href=&quot;yii-base-widget#begin()-detail&quot;&gt;ActiveForm :: begin ()&lt;/a&gt; 과 &lt;a href=&quot;yii-base-widget#end()-detail&quot;&gt;ActiveForm :: end ()&lt;/a&gt; 사이에 배치 된 모든 내용 은 HTML &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 태그 내에 래핑됩니다 . 위젯과 마찬가지로 배열을 &lt;code&gt;begin&lt;/code&gt; 메소드 에 전달하여 위젯을 구성하는 방법에 대한 몇 가지 옵션을 지정할 수 있습니다 . 이 경우 추가 CSS 클래스와 식별 ID가 여는 &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 태그에 사용되도록 전달됩니다 . 사용 가능한 모든 옵션에 대해서는 &lt;a href=&quot;yii-widgets-activeform&quot;&gt;yii \ widgets \ ActiveForm&lt;/a&gt; 의 API 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="aecd6b07c362c37a4a41f804d85cc593aa548092" translate="yes" xml:space="preserve">
          <source>In the above code, a message source supported by &lt;a href=&quot;yii-i18n-phpmessagesource&quot;&gt;yii\i18n\PhpMessageSource&lt;/a&gt; is being configured.</source>
          <target state="translated">위 코드에서 &lt;a href=&quot;yii-i18n-phpmessagesource&quot;&gt;yii \ i18n \ PhpMessageSource&lt;/a&gt; 가 지원하는 메시지 소스 를 구성 중입니다.</target>
        </trans-unit>
        <trans-unit id="06c11d2674ddaa447071f06b82909700160d299e" translate="yes" xml:space="preserve">
          <source>In the above code, in the context of a view file, the &lt;code&gt;AppAsset&lt;/code&gt; bundle is registered on the current view (represented by &lt;code&gt;$this&lt;/code&gt;). When registering asset bundles from within a widget, you would pass the &lt;a href=&quot;yii-base-widget#%24view-detail&quot;&gt;$view&lt;/a&gt; of the widget instead (&lt;code&gt;$this-&amp;gt;view&lt;/code&gt;).</source>
          <target state="translated">위의 코드에서보기 파일의 컨텍스트에서 &lt;code&gt;AppAsset&lt;/code&gt; 번들은 현재보기 ( &lt;code&gt;$this&lt;/code&gt; 표시)에 등록됩니다 . 위젯 내에서 자산 번들을 등록 할 때 대신 위젯 의 &lt;a href=&quot;yii-base-widget#%24view-detail&quot;&gt;$ view&lt;/a&gt; 를 전달합니다 ( &lt;code&gt;$this-&amp;gt;view&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="47980e038a276420642b24d2763eecc4cb20ef1e" translate="yes" xml:space="preserve">
          <source>In the above code, the action method returns the result of the &lt;code&gt;redirect()&lt;/code&gt; method. As explained before, the response object returned by an action method will be used as the response sending to end users.</source>
          <target state="translated">위 코드에서 action 메소드는 &lt;code&gt;redirect()&lt;/code&gt; 메소드 의 결과를 반환합니다 . 앞에서 설명한 것처럼 액션 메서드에서 반환 한 응답 개체는 최종 사용자에게 보내는 응답으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d5e58f85f4445c478e50307b833ef852f842dc29" translate="yes" xml:space="preserve">
          <source>In the above code, the array keys are column names while the array values are the corresponding order by directions. The PHP constant &lt;code&gt;SORT_ASC&lt;/code&gt; specifies ascending sort and &lt;code&gt;SORT_DESC&lt;/code&gt; descending sort.</source>
          <target state="translated">위의 코드에서 배열 키는 열 이름이고 배열 값은 방향에 따라 해당 순서입니다. PHP 상수 &lt;code&gt;SORT_ASC&lt;/code&gt; 는 오름차순 정렬 및 &lt;code&gt;SORT_DESC&lt;/code&gt; 내림차순 정렬을 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="6465f501e9a43adc22b5ea2a23b8faee05dfcaa2" translate="yes" xml:space="preserve">
          <source>In the above code, two log targets are registered in the &lt;a href=&quot;yii-log-dispatcher#%24targets-detail&quot;&gt;yii\log\Dispatcher::$targets&lt;/a&gt; property:</source>
          <target state="translated">위 코드에서 두 개의 로그 대상이 &lt;a href=&quot;yii-log-dispatcher#%24targets-detail&quot;&gt;yii \ log \ Dispatcher :: $ targets&lt;/a&gt; 특성에 등록되었습니다.</target>
        </trans-unit>
        <trans-unit id="1177a53bf1566d73d8297f0378bbb0c3a2f7fd89" translate="yes" xml:space="preserve">
          <source>In the above code, we have declared an &lt;code&gt;orders&lt;/code&gt; relation for the &lt;code&gt;Customer&lt;/code&gt; class, and a &lt;code&gt;customer&lt;/code&gt; relation for the &lt;code&gt;Order&lt;/code&gt; class.</source>
          <target state="translated">위의 코드에서 우리는 &lt;code&gt;Customer&lt;/code&gt; 클래스에 대한 &lt;code&gt;orders&lt;/code&gt; 관계 와 &lt;code&gt;Order&lt;/code&gt; 클래스에 대한 &lt;code&gt;customer&lt;/code&gt; 관계를 선언했습니다 .</target>
        </trans-unit>
        <trans-unit id="7a5ebc97c6876660b07545f44b5d99da277f6373" translate="yes" xml:space="preserve">
          <source>In the above code, when the form is submitted, the &lt;a href=&quot;yii-web-uploadedfile#getInstance()-detail&quot;&gt;yii\web\UploadedFile::getInstance()&lt;/a&gt; method is called to represent the uploaded file as an &lt;code&gt;UploadedFile&lt;/code&gt; instance. We then rely on the model validation to make sure the uploaded file is valid and save the file on the server.</source>
          <target state="translated">위 코드에서 양식을 제출 하면 업로드 된 파일을 &lt;code&gt;UploadedFile&lt;/code&gt; 인스턴스 로 나타 내기 위해 &lt;a href=&quot;yii-web-uploadedfile#getInstance()-detail&quot;&gt;yii \ web \ UploadedFile :: getInstance ()&lt;/a&gt; 메소드가 호출됩니다 . 그런 다음 업로드 된 파일이 올바른지 확인하고 파일을 서버에 저장하기 위해 모델 유효성 검증에 의존합니다.</target>
        </trans-unit>
        <trans-unit id="817ab8597a650262634bfec9b1d2bd4b35e7ce3f" translate="yes" xml:space="preserve">
          <source>In the above example the method &lt;code&gt;compose()&lt;/code&gt; creates an instance of the mail message, which then is populated and sent. You may put more complex logic in this process if needed:</source>
          <target state="translated">위의 예제에서 &lt;code&gt;compose()&lt;/code&gt; 메소드 는 메일 메시지의 인스턴스를 작성하여 채워지고 전송됩니다. 필요한 경우이 프로세스에 더 복잡한 논리를 넣을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="60c490d6ea2de69fb4645106ce917af1ed70c92a" translate="yes" xml:space="preserve">
          <source>In the above example, &lt;a href=&quot;yii-filters-accessrule#%24roleParams-detail&quot;&gt;roleParams&lt;/a&gt; is a Closure that will be evaluated when the access rule is checked, so the model will only be loaded when needed. If the creation of role parameters is a simple operation, you may just specify an array, like so:</source>
          <target state="translated">위의 예에서 &lt;a href=&quot;yii-filters-accessrule#%24roleParams-detail&quot;&gt;roleParams&lt;/a&gt; 는 액세스 규칙을 확인할 때 평가되는 폐쇄이므로 모델은 필요할 때만로드됩니다. 역할 매개 변수 작성이 간단한 조작 인 경우 다음과 같이 배열을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9c07ebedbca92612df62e48e0250c344a54260b7" translate="yes" xml:space="preserve">
          <source>In the above example, because you provide to &lt;a href=&quot;yii-data-activedataprovider&quot;&gt;yii\data\ActiveDataProvider&lt;/a&gt; an &lt;a href=&quot;yii-db-activequery&quot;&gt;yii\db\ActiveQuery&lt;/a&gt; object, it is intelligent enough to return primary key values as the keys. You may also explicitly specify how the key values should be calculated by configuring &lt;a href=&quot;yii-data-activedataprovider#%24key-detail&quot;&gt;yii\data\ActiveDataProvider::$key&lt;/a&gt; with a column name or a callable calculating key values. For example,</source>
          <target state="translated">위의 예에서 &lt;a href=&quot;yii-db-activequery&quot;&gt;yii &lt;/a&gt;&lt;a href=&quot;yii-data-activedataprovider&quot;&gt;\ data \ ActiveDataProvider&lt;/a&gt; 에 yii \ db \ ActiveQuery 개체 를 제공하기 때문에 기본 키 값을 키로 반환 할만큼 지능적입니다. 열 이름 또는 호출 가능한 계산 키 값으로 &lt;a href=&quot;yii-data-activedataprovider#%24key-detail&quot;&gt;yii \ data \ ActiveDataProvider :: $ key&lt;/a&gt; 를 구성하여 키 값을 계산하는 방법을 명시 적으로 지정할 수도 있습니다 . 예를 들어</target>
        </trans-unit>
        <trans-unit id="72086c9910dd67f6c856d8e8f1850e851d969ab7" translate="yes" xml:space="preserve">
          <source>In the above example, no parameters are passed with the roles specified for accessing an action, but in case of the &lt;code&gt;updatePost&lt;/code&gt; permission, we need to pass a &lt;code&gt;post&lt;/code&gt; parameter for it to work properly. You can pass parameters to &lt;a href=&quot;yii-web-user#can()-detail&quot;&gt;yii\web\User::can()&lt;/a&gt; by specifying &lt;a href=&quot;yii-filters-accessrule#%24roleParams-detail&quot;&gt;roleParams&lt;/a&gt; on the access rule:</source>
          <target state="translated">위의 예에서는 작업에 액세스하기 위해 지정된 역할과 함께 매개 변수가 전달되지 않지만 &lt;code&gt;updatePost&lt;/code&gt; 권한의 경우 제대로 작동하려면 &lt;code&gt;post&lt;/code&gt; 매개 변수 를 전달해야합니다 . 액세스 규칙에 &lt;a href=&quot;yii-filters-accessrule#%24roleParams-detail&quot;&gt;roleParams&lt;/a&gt; 를 지정하여 매개 변수를 &lt;a href=&quot;yii-web-user#can()-detail&quot;&gt;yii \ web \ User :: can ()&lt;/a&gt; 에 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6c78c95f5b923119ce871df7a517ee3991bbcd40" translate="yes" xml:space="preserve">
          <source>In the above example, the category &lt;code&gt;app/error&lt;/code&gt; is mapped to the PHP file &lt;code&gt;@app/messages/ru-RU/error.php&lt;/code&gt; (assuming &lt;code&gt;ru-RU&lt;/code&gt; is the target language). However, without this configuration the category would be mapped to &lt;code&gt;@app/messages/ru-RU/app/error.php&lt;/code&gt; instead.</source>
          <target state="translated">위 예제에서 &lt;code&gt;app/error&lt;/code&gt; 범주 는 PHP 파일 &lt;code&gt;@app/messages/ru-RU/error.php&lt;/code&gt; ( &lt;code&gt;ru-RU&lt;/code&gt; 가 대상 언어 라고 가정 ). 그러나이 구성이 없으면 카테고리는 &lt;code&gt;@app/messages/ru-RU/app/error.php&lt;/code&gt; 대신 매핑 됩니다.</target>
        </trans-unit>
        <trans-unit id="f26e007eacc84b914e412c472dc2c19f2d4e6b88" translate="yes" xml:space="preserve">
          <source>In the above example, two attributes are declared for the &lt;a href=&quot;yii-data-sort&quot;&gt;Sort&lt;/a&gt; object: &lt;code&gt;age&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">위의 예에서 &lt;a href=&quot;yii-data-sort&quot;&gt;Sort&lt;/a&gt; 객체에 대해 &lt;code&gt;age&lt;/code&gt; 및 &lt;code&gt;name&lt;/code&gt; 의 두 가지 속성이 선언되었습니다 .</target>
        </trans-unit>
        <trans-unit id="177e373efcb93ee3d29013397019cccb45a864b0" translate="yes" xml:space="preserve">
          <source>In the above step 1 and 3, events named &lt;a href=&quot;yii-db-baseactiverecord#EVENT_BEFORE_DELETE-detail&quot;&gt;EVENT_BEFORE_DELETE&lt;/a&gt; and &lt;a href=&quot;yii-db-baseactiverecord#EVENT_AFTER_DELETE-detail&quot;&gt;EVENT_AFTER_DELETE&lt;/a&gt; will be raised by the corresponding methods.</source>
          <target state="translated">위의 1 단계와 3 단계에서 이름이 &lt;a href=&quot;yii-db-baseactiverecord#EVENT_BEFORE_DELETE-detail&quot;&gt;EVENT_BEFORE_DELETE&lt;/a&gt; 및 &lt;a href=&quot;yii-db-baseactiverecord#EVENT_AFTER_DELETE-detail&quot;&gt;EVENT_AFTER_DELETE&lt;/a&gt; 인 이벤트 는 해당 방법으로 발생합니다.</target>
        </trans-unit>
        <trans-unit id="28a44c7ea3ef235cbcd6d073a45e7541ff9d79f8" translate="yes" xml:space="preserve">
          <source>In the above step 1, 2, 3 and 5, events &lt;a href=&quot;yii-base-model#EVENT_BEFORE_VALIDATE-detail&quot;&gt;EVENT_BEFORE_VALIDATE&lt;/a&gt;, &lt;a href=&quot;yii-base-model#EVENT_AFTER_VALIDATE-detail&quot;&gt;EVENT_AFTER_VALIDATE&lt;/a&gt;, &lt;a href=&quot;yii-db-baseactiverecord#EVENT_BEFORE_INSERT-detail&quot;&gt;EVENT_BEFORE_INSERT&lt;/a&gt;, and &lt;a href=&quot;yii-db-baseactiverecord#EVENT_AFTER_INSERT-detail&quot;&gt;EVENT_AFTER_INSERT&lt;/a&gt; will be raised by the corresponding methods.</source>
          <target state="translated">위의 1, 2, 3 및 5 단계에서 &lt;a href=&quot;yii-base-model#EVENT_BEFORE_VALIDATE-detail&quot;&gt;EVENT_BEFORE_VALIDATE&lt;/a&gt; , &lt;a href=&quot;yii-base-model#EVENT_AFTER_VALIDATE-detail&quot;&gt;EVENT_AFTER_VALIDATE&lt;/a&gt; , &lt;a href=&quot;yii-db-baseactiverecord#EVENT_BEFORE_INSERT-detail&quot;&gt;EVENT_BEFORE_INSERT&lt;/a&gt; 및 &lt;a href=&quot;yii-db-baseactiverecord#EVENT_AFTER_INSERT-detail&quot;&gt;EVENT_AFTER_INSERT&lt;/a&gt; 이벤트 는 해당 방법으로 발생합니다.</target>
        </trans-unit>
        <trans-unit id="4a0c5e3b1be87b1c782054438d67f072025ad539" translate="yes" xml:space="preserve">
          <source>In the above step 1, 2, 3 and 5, events &lt;a href=&quot;yii-base-model#EVENT_BEFORE_VALIDATE-detail&quot;&gt;EVENT_BEFORE_VALIDATE&lt;/a&gt;, &lt;a href=&quot;yii-base-model#EVENT_AFTER_VALIDATE-detail&quot;&gt;EVENT_AFTER_VALIDATE&lt;/a&gt;, &lt;a href=&quot;yii-db-baseactiverecord#EVENT_BEFORE_UPDATE-detail&quot;&gt;EVENT_BEFORE_UPDATE&lt;/a&gt;, and &lt;a href=&quot;yii-db-baseactiverecord#EVENT_AFTER_UPDATE-detail&quot;&gt;EVENT_AFTER_UPDATE&lt;/a&gt; will be raised by the corresponding methods.</source>
          <target state="translated">위의 1, 2, 3 및 5 단계에서 &lt;a href=&quot;yii-base-model#EVENT_BEFORE_VALIDATE-detail&quot;&gt;EVENT_BEFORE_VALIDATE&lt;/a&gt; , &lt;a href=&quot;yii-base-model#EVENT_AFTER_VALIDATE-detail&quot;&gt;EVENT_AFTER_VALIDATE&lt;/a&gt; , &lt;a href=&quot;yii-db-baseactiverecord#EVENT_BEFORE_UPDATE-detail&quot;&gt;EVENT_BEFORE_UPDATE&lt;/a&gt; 및 &lt;a href=&quot;yii-db-baseactiverecord#EVENT_AFTER_UPDATE-detail&quot;&gt;EVENT_AFTER_UPDATE&lt;/a&gt; 이벤트 는 해당 방법으로 발생합니다.</target>
        </trans-unit>
        <trans-unit id="12e9a59d333bfe2b6a9e9f4df5571be4f4b28fa1" translate="yes" xml:space="preserve">
          <source>In the above step 1, 2, 3 and 5, events &lt;a href=&quot;yii-base-model#EVENT_BEFORE_VALIDATE-detail&quot;&gt;EVENT_BEFORE_VALIDATE&lt;/a&gt;, &lt;a href=&quot;yii-db-baseactiverecord#EVENT_BEFORE_INSERT-detail&quot;&gt;EVENT_BEFORE_INSERT&lt;/a&gt;, &lt;a href=&quot;yii-db-baseactiverecord#EVENT_AFTER_INSERT-detail&quot;&gt;EVENT_AFTER_INSERT&lt;/a&gt; and &lt;a href=&quot;yii-base-model#EVENT_AFTER_VALIDATE-detail&quot;&gt;EVENT_AFTER_VALIDATE&lt;/a&gt; will be raised by the corresponding methods.</source>
          <target state="translated">위의 1, 2, 3 및 5 단계에서 &lt;a href=&quot;yii-base-model#EVENT_BEFORE_VALIDATE-detail&quot;&gt;EVENT_BEFORE_VALIDATE&lt;/a&gt; , &lt;a href=&quot;yii-db-baseactiverecord#EVENT_BEFORE_INSERT-detail&quot;&gt;EVENT_BEFORE_INSERT&lt;/a&gt; , &lt;a href=&quot;yii-db-baseactiverecord#EVENT_AFTER_INSERT-detail&quot;&gt;EVENT_AFTER_INSERT&lt;/a&gt; 및 &lt;a href=&quot;yii-base-model#EVENT_AFTER_VALIDATE-detail&quot;&gt;EVENT_AFTER_VALIDATE&lt;/a&gt; 이벤트 는 해당 방법으로 발생합니다.</target>
        </trans-unit>
        <trans-unit id="6d19d8d8dd4d6d48e978523e03bb1023a3bee9c5" translate="yes" xml:space="preserve">
          <source>In the above step 1, 2, 3 and 5, events &lt;a href=&quot;yii-base-model#EVENT_BEFORE_VALIDATE-detail&quot;&gt;EVENT_BEFORE_VALIDATE&lt;/a&gt;, &lt;a href=&quot;yii-db-baseactiverecord#EVENT_BEFORE_UPDATE-detail&quot;&gt;EVENT_BEFORE_UPDATE&lt;/a&gt;, &lt;a href=&quot;yii-db-baseactiverecord#EVENT_AFTER_UPDATE-detail&quot;&gt;EVENT_AFTER_UPDATE&lt;/a&gt; and &lt;a href=&quot;yii-base-model#EVENT_AFTER_VALIDATE-detail&quot;&gt;EVENT_AFTER_VALIDATE&lt;/a&gt; will be raised by the corresponding methods.</source>
          <target state="translated">위의 1, 2, 3 및 5 단계에서 &lt;a href=&quot;yii-base-model#EVENT_BEFORE_VALIDATE-detail&quot;&gt;EVENT_BEFORE_VALIDATE&lt;/a&gt; , &lt;a href=&quot;yii-db-baseactiverecord#EVENT_BEFORE_UPDATE-detail&quot;&gt;EVENT_BEFORE_UPDATE&lt;/a&gt; , &lt;a href=&quot;yii-db-baseactiverecord#EVENT_AFTER_UPDATE-detail&quot;&gt;EVENT_AFTER_UPDATE&lt;/a&gt; 및 &lt;a href=&quot;yii-base-model#EVENT_AFTER_VALIDATE-detail&quot;&gt;EVENT_AFTER_VALIDATE&lt;/a&gt; 이벤트 는 해당 방법으로 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f847f6d8632888c1c5ff2d0944391dbaf1a9939f" translate="yes" xml:space="preserve">
          <source>In the above, &lt;code&gt;$customer&lt;/code&gt; is a &lt;code&gt;Customer&lt;/code&gt; object while &lt;code&gt;$customers&lt;/code&gt; is an array of &lt;code&gt;Customer&lt;/code&gt; objects. They are all populated with the data retrieved from the &lt;code&gt;customer&lt;/code&gt; table.</source>
          <target state="translated">위의 &lt;code&gt;$customer&lt;/code&gt; 는 &lt;code&gt;Customer&lt;/code&gt; 객체이고 &lt;code&gt;$customers&lt;/code&gt; 는 &lt;code&gt;Customer&lt;/code&gt; 객체 의 배열입니다 . 이들은 모두 &lt;code&gt;customer&lt;/code&gt; 테이블 에서 검색된 데이터로 채워집니다 .</target>
        </trans-unit>
        <trans-unit id="f74bb67034e86890a2d422c3c96fe8fa856db298" translate="yes" xml:space="preserve">
          <source>In the above, &lt;code&gt;&amp;lt;route&amp;gt;&lt;/code&gt; refers to the route to the controller action. The options will populate the class properties and arguments are the parameters of the action method.</source>
          <target state="translated">위의 &lt;code&gt;&amp;lt;route&amp;gt;&lt;/code&gt; 는 컨트롤러 작업에 대한 경로를 나타냅니다. 옵션은 클래스 특성을 채우고 인수는 조치 메소드의 매개 변수입니다.</target>
        </trans-unit>
        <trans-unit id="1a7628f6d0a0c48d3ea61a8a3d25fdde1730a198" translate="yes" xml:space="preserve">
          <source>In the above, &lt;code&gt;text&lt;/code&gt; corresponds to &lt;a href=&quot;yii-i18n-formatter#asText()-detail&quot;&gt;yii\i18n\Formatter::asText()&lt;/a&gt;. The value of the column is passed as the first argument. In the second column definition, &lt;code&gt;date&lt;/code&gt; corresponds to &lt;a href=&quot;yii-i18n-formatter#asDate()-detail&quot;&gt;yii\i18n\Formatter::asDate()&lt;/a&gt;. The value of the column is, again, passed as the first argument while 'php:Y-m-d' is used as the second argument value.</source>
          <target state="translated">위,에서 &lt;code&gt;text&lt;/code&gt; 대응에 &lt;a href=&quot;yii-i18n-formatter#asText()-detail&quot;&gt;YII \ 국제화 \ 포맷터 :: asText ()&lt;/a&gt; . 열의 값이 첫 번째 인수로 전달됩니다. 두 번째 열 정의에서, &lt;code&gt;date&lt;/code&gt; 에 대응하는 &lt;a href=&quot;yii-i18n-formatter#asDate()-detail&quot;&gt;YII \ I18N \ 포맷터 :: asDate ()&lt;/a&gt; . 열의 값은 다시 첫 번째 인수로 전달되고 'php : Ymd'는 두 번째 인수 값으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="1cec26f1484115686c1c006e4ac6624ae20e5ade" translate="yes" xml:space="preserve">
          <source>In the above, &lt;code&gt;www&lt;/code&gt; is your webserver webroot directory. It could be named differently. Common names are: &lt;code&gt;www&lt;/code&gt;, &lt;code&gt;htdocs&lt;/code&gt;, and &lt;code&gt;public_html&lt;/code&gt;.</source>
          <target state="translated">위의 &lt;code&gt;www&lt;/code&gt; 는 웹 서버 웹 루트 디렉토리입니다. 다르게 명명 될 수 있습니다. 일반적인 이름은 &lt;code&gt;www&lt;/code&gt; , &lt;code&gt;htdocs&lt;/code&gt; 및 &lt;code&gt;public_html&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ef0b4ec31ea4811be604363ebf134034263baf6d" translate="yes" xml:space="preserve">
          <source>In the above, an anonymous function is attached to the &quot;update&quot; event of the post. You may attach the following types of event handlers:</source>
          <target state="translated">위의 경우 익명 기능이 게시물의 &quot;업데이트&quot;이벤트에 첨부됩니다. 다음 유형의 이벤트 핸들러를 첨부 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9f81b5924ae8633ba936771163879bac06e1c572" translate="yes" xml:space="preserve">
          <source>In the above, both Step 2 and 3 occur at the end of the class constructor. It is recommended that you perform object initialization in the &lt;code&gt;init()&lt;/code&gt; method because at that stage, the object configuration is already applied.</source>
          <target state="translated">위의 2 단계와 3 단계는 클래스 생성자 끝에서 발생합니다. 해당 단계에서는 객체 구성이 이미 적용 되어 있으므로 &lt;code&gt;init()&lt;/code&gt; 메서드 에서 객체 초기화를 수행하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="3a865e97e29e600f5fb600a24b2e029e48fe4080" translate="yes" xml:space="preserve">
          <source>In the above, if the command name is not provided, all available commands will be displayed.</source>
          <target state="translated">위의 명령 이름을 제공하지 않으면 사용 가능한 모든 명령이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="3c3e7963a7dd4d40b6df5a3b76080a9721df058b" translate="yes" xml:space="preserve">
          <source>In the above, the &lt;code&gt;deferred&lt;/code&gt; variable is provided by Yii, which is an array of Deferred objects. The &lt;code&gt;$.get()&lt;/code&gt; jQuery method creates a Deferred object which is pushed to the &lt;code&gt;deferred&lt;/code&gt; array.</source>
          <target state="translated">위에서 &lt;code&gt;deferred&lt;/code&gt; 변수는 지연된 객체의 배열 인 Yii에 의해 제공됩니다. &lt;code&gt;$.get()&lt;/code&gt; 의 jQuery 방법은 푸시 된 객체 생성 지연된 &lt;code&gt;deferred&lt;/code&gt; 어레이.</target>
        </trans-unit>
        <trans-unit id="41d890539b4bc592bd83034ef7d007fb18aed747" translate="yes" xml:space="preserve">
          <source>In the above, the first argument is the model, while the second one is the attribute expression. In its simplest form the expression is just an attribute name, but it can be an attribute name prefixed and/or suffixed with array indexes, which is mainly used for tabular input:</source>
          <target state="translated">위의 첫 번째 인수는 모델이고 두 번째 인수는 속성 표현식입니다. 가장 간단한 형태의 표현은 속성 이름 일 뿐이지 만, 배열 인덱스가 접두사로 붙거나 접미사로 붙는 속성 이름 일 수 있습니다. 주로 테이블 형식의 입력에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="18c50d5918e7e82b04c55c829b22ffe4502a7861" translate="yes" xml:space="preserve">
          <source>In the above, there is an alternative way to configure the &lt;code&gt;search&lt;/code&gt; component. Instead of directly writing a PHP callback which builds a &lt;code&gt;SolrService&lt;/code&gt; instance, you can use a static class method to return such a callback, like shown as below:</source>
          <target state="translated">위에서 &lt;code&gt;search&lt;/code&gt; 구성 요소 를 구성하는 다른 방법이 있습니다 . &lt;code&gt;SolrService&lt;/code&gt; 인스턴스 를 빌드하는 PHP 콜백을 직접 작성하는 대신 정적 클래스 메소드를 사용하여 다음과 같이 콜백을 리턴 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="81a6020d8ad894793a9f072d8598bc5cf6cec1a7" translate="yes" xml:space="preserve">
          <source>In the above, two attributes are declared: &lt;code&gt;age&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt;. The &lt;code&gt;age&lt;/code&gt; attribute is a simple attribute which is equivalent to the following:</source>
          <target state="translated">위에서는 &lt;code&gt;age&lt;/code&gt; 와 &lt;code&gt;name&lt;/code&gt; 의 두 가지 속성이 선언되었습니다 . &lt;code&gt;age&lt;/code&gt; 속성은 다음에 해당하는 단순 속성입니다 :</target>
        </trans-unit>
        <trans-unit id="ed25307523e215dbfeb3bdb2d82f57dbf6ee70a7" translate="yes" xml:space="preserve">
          <source>In the above, two memcache servers are used: server1 and server2. You can configure more properties of each server, such as &lt;code&gt;persistent&lt;/code&gt;, &lt;code&gt;weight&lt;/code&gt;, &lt;code&gt;timeout&lt;/code&gt;. Please see &lt;a href=&quot;yii-caching-memcacheserver&quot;&gt;yii\caching\MemCacheServer&lt;/a&gt; for available options.</source>
          <target state="translated">위의 두 서버 인 server1과 server2가 사용됩니다. &lt;code&gt;persistent&lt;/code&gt; , &lt;code&gt;weight&lt;/code&gt; , &lt;code&gt;timeout&lt;/code&gt; 과 같은 각 서버의 추가 속성을 구성 할 수 있습니다 . 사용 가능한 옵션 은 &lt;a href=&quot;yii-caching-memcacheserver&quot;&gt;yii \ caching \ MemCacheServer&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a56fa7a3535171f417cfb3fc8c7dd673c7076fd7" translate="yes" xml:space="preserve">
          <source>In the above, we declare two &lt;a href=&quot;yii-data-sort#%24attributes-detail&quot;&gt;$attributes&lt;/a&gt; that support sorting: &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;age&lt;/code&gt;. We pass the sort information to the Article query so that the query results are sorted by the orders specified by the Sort object. In the view, we show two hyperlinks that can lead to pages with the data sorted by the corresponding attributes.</source>
          <target state="translated">위에서 우리 는 정렬을 지원하는 두 개의 &lt;a href=&quot;yii-data-sort#%24attributes-detail&quot;&gt;$ attributes&lt;/a&gt; : &lt;code&gt;name&lt;/code&gt; 과 &lt;code&gt;age&lt;/code&gt; 를 선언 합니다. 정렬 정보를 Article 쿼리에 전달하여 쿼리 결과가 Sort 개체에 지정된 순서대로 정렬되도록합니다. 보기에는 해당 속성별로 데이터가 정렬 된 페이지로 연결될 수있는 두 개의 하이퍼 링크가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="2cacbaf14d669acabadd0db9aece91da9e0ce9c4" translate="yes" xml:space="preserve">
          <source>In the above, we have described how to define and use fixtures. Below we summarize the typical workflow of running unit tests related with DB:</source>
          <target state="translated">위에서는 조명기를 정의하고 사용하는 방법을 설명했습니다. 아래는 DB와 관련된 단위 테스트 실행의 일반적인 워크 플로를 요약 한 것입니다.</target>
        </trans-unit>
        <trans-unit id="81ced116e0947fe97060e14e70a25c32de0343f8" translate="yes" xml:space="preserve">
          <source>In the above, we have shown how to define a fixture about a DB table. To define a fixture not related with DB (e.g. a fixture about certain files and directories), you may extend from the more general base class &lt;a href=&quot;yii-test-fixture&quot;&gt;yii\test\Fixture&lt;/a&gt; and override the &lt;a href=&quot;yii-test-fixture#load()-detail&quot;&gt;load()&lt;/a&gt; and &lt;a href=&quot;yii-test-fixture#unload()-detail&quot;&gt;unload()&lt;/a&gt; methods.</source>
          <target state="translated">위에서 우리는 DB 테이블에 대한 조명기를 정의하는 방법을 보여주었습니다. DB와 관련이없는 조명기 (예 : 특정 파일 및 디렉토리에 대한 조명기)를 정의하기 위해보다 일반적인 기본 클래스 &lt;a href=&quot;yii-test-fixture&quot;&gt;yii \ test \ Fixture&lt;/a&gt; 에서 확장 하여 &lt;a href=&quot;yii-test-fixture#load()-detail&quot;&gt;load ()&lt;/a&gt; 및 &lt;a href=&quot;yii-test-fixture#unload()-detail&quot;&gt;unload ()&lt;/a&gt; 메서드를 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ddc41b8472e6c983809c0ebc64666cbc5076f64a" translate="yes" xml:space="preserve">
          <source>In the above, we specify the supported extended syntax via the &lt;a href=&quot;yii-web-assetconverter#%24commands-detail&quot;&gt;yii\web\AssetConverter::$commands&lt;/a&gt; property. The array keys are the file extension names (without leading dot), and the array values are the resulting asset file extension names and the commands for performing the asset conversion. The tokens &lt;code&gt;{from}&lt;/code&gt; and &lt;code&gt;{to}&lt;/code&gt; in the commands will be replaced with the source asset file paths and the target asset file paths.</source>
          <target state="translated">위에서 &lt;a href=&quot;yii-web-assetconverter#%24commands-detail&quot;&gt;yii \ web \ AssetConverter :: $ commands&lt;/a&gt; 속성을 통해 지원되는 확장 구문을 지정 했습니다. 배열 키는 파일 확장자 이름 (앞의 점 없음)이며 배열 값은 결과 자산 파일 확장자 이름과 자산 변환을 수행하기위한 명령입니다. 명령의 &lt;code&gt;{from}&lt;/code&gt; 및 &lt;code&gt;{to}&lt;/code&gt; 토큰 은 소스 자산 파일 경로 및 대상 자산 파일 경로로 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="26ebeb4f72567e250bbe931dc04eafce66c1cb0c" translate="yes" xml:space="preserve">
          <source>In the code above &quot;users&quot; is template name, after this command run, new file named same as template will be created under the &lt;code&gt;$fixtureDataPath&lt;/code&gt; folder. You can generate fixtures for all templates, for example:</source>
          <target state="translated">위의 코드에서 &quot;users&quot;는 템플릿 이름이며,이 명령이 실행 된 후 &lt;code&gt;$fixtureDataPath&lt;/code&gt; 폴더 아래에 template과 동일한 이름의 새 파일이 생성됩니다 . 예를 들어 다음과 같이 모든 템플릿에 대한 조명기 생성</target>
        </trans-unit>
        <trans-unit id="897bd332a9b46e74287f3d96b9c20447a13f4284" translate="yes" xml:space="preserve">
          <source>In the code above ACF is attached to the &lt;code&gt;site&lt;/code&gt; controller as a behavior. This is the typical way of using an action filter. The &lt;code&gt;only&lt;/code&gt; option specifies that the ACF should only be applied to the &lt;code&gt;login&lt;/code&gt;, &lt;code&gt;logout&lt;/code&gt; and &lt;code&gt;signup&lt;/code&gt; actions. All other actions in the &lt;code&gt;site&lt;/code&gt; controller are not subject to the access control. The &lt;code&gt;rules&lt;/code&gt; option lists the &lt;a href=&quot;yii-filters-accessrule&quot;&gt;access rules&lt;/a&gt;, which reads as follows:</source>
          <target state="translated">위 코드에서 ACF는 동작으로 &lt;code&gt;site&lt;/code&gt; 컨트롤러에 연결되어 있습니다. 이것이 동작 필터를 사용하는 일반적인 방법입니다. &lt;code&gt;only&lt;/code&gt; ACF를에만 적용해야한다는 옵션 지정 &lt;code&gt;login&lt;/code&gt; , &lt;code&gt;logout&lt;/code&gt; 및 &lt;code&gt;signup&lt;/code&gt; 활동. &lt;code&gt;site&lt;/code&gt; 컨트롤러의 다른 모든 작업 에는 액세스 제어가 적용되지 않습니다. 는 &lt;code&gt;rules&lt;/code&gt; 옵션을 나열 &lt;a href=&quot;yii-filters-accessrule&quot;&gt;액세스 규칙&lt;/a&gt; 은 다음과 같이 읽습니다 :</target>
        </trans-unit>
        <trans-unit id="8f79771a19a5d1563ceed68426976905ea509d12" translate="yes" xml:space="preserve">
          <source>In the code above we're using &lt;a href=&quot;yii-db-querytrait#indexBy()-detail&quot;&gt;indexBy()&lt;/a&gt; when retrieving models from the database to populate an array indexed by models primary keys. These will be later used to identify form fields. &lt;a href=&quot;yii-base-model#loadMultiple()-detail&quot;&gt;Model::loadMultiple()&lt;/a&gt; fills multiple models with the form data coming from POST and &lt;a href=&quot;yii-base-model#validateMultiple()-detail&quot;&gt;Model::validateMultiple()&lt;/a&gt; validates all models at once. As we have validated our models before, using &lt;code&gt;validateMultiple()&lt;/code&gt;, we're now passing &lt;code&gt;false&lt;/code&gt; as a parameter to &lt;a href=&quot;yii-db-baseactiverecord#save()-detail&quot;&gt;save()&lt;/a&gt; to not run validation twice.</source>
          <target state="translated">위의 코드에서 우리는 데이터베이스에서 모델을 검색 할 때 &lt;a href=&quot;yii-db-querytrait#indexBy()-detail&quot;&gt;indexBy ()를&lt;/a&gt; 사용하여 모델 기본 키로 인덱스 된 배열을 채 웁니다. 이들은 나중에 양식 필드를 식별하는 데 사용됩니다. &lt;a href=&quot;yii-base-model#loadMultiple()-detail&quot;&gt;Model :: loadMultiple ()&lt;/a&gt; 은 POST에서 오는 양식 데이터로 여러 모델을 채우고 &lt;a href=&quot;yii-base-model#validateMultiple()-detail&quot;&gt;Model :: validateMultiple ()은&lt;/a&gt; 모든 모델을 한 번에 확인합니다. 이전에 &lt;code&gt;validateMultiple()&lt;/code&gt; 사용하여 모델의 유효성을 검사 했으므로 유효성 검사를 두 번 실행하지 않도록 &lt;a href=&quot;yii-db-baseactiverecord#save()-detail&quot;&gt;save ()&lt;/a&gt; 의 매개 변수로 &lt;code&gt;false&lt;/code&gt; 를 전달 합니다.</target>
        </trans-unit>
        <trans-unit id="bd3f74ef35a1905aee6c542c505734e8c77c325c" translate="yes" xml:space="preserve">
          <source>In the code above, &lt;code&gt;$url&lt;/code&gt; is the URL that the column creates for the button, &lt;code&gt;$model&lt;/code&gt; is the model object being rendered for the current row, and &lt;code&gt;$key&lt;/code&gt; is the key of the model in the data provider array.</source>
          <target state="translated">위의 코드에서 &lt;code&gt;$url&lt;/code&gt; 은 열이 버튼에 대해 생성하는 URL이고 &lt;code&gt;$model&lt;/code&gt; 은 현재 행에 대해 렌더링되는 모델 객체이며 &lt;code&gt;$key&lt;/code&gt; 는 데이터 공급자 배열의 모델 키입니다.</target>
        </trans-unit>
        <trans-unit id="32475e2479879768004e96a9e331fb94d0c500fd" translate="yes" xml:space="preserve">
          <source>In the code above, both Smarty and Twig are configured to be useable by the view files. But in order to get these extensions into your project, you need to also modify your &lt;code&gt;composer.json&lt;/code&gt; file to include them, too:</source>
          <target state="translated">위의 코드에서 Smarty와 Twig는 모두보기 파일에서 사용할 수 있도록 구성되었습니다. 그러나 이러한 확장을 프로젝트에 가져 오려면 &lt;code&gt;composer.json&lt;/code&gt; 파일 도 수정하여 포함시켜야합니다.</target>
        </trans-unit>
        <trans-unit id="f877d21ab84581197677deed46e76a38d0cac6c5" translate="yes" xml:space="preserve">
          <source>In the code above, the &lt;code&gt;imageFile&lt;/code&gt; attribute is used to keep the uploaded file instance. It is associated with a &lt;code&gt;file&lt;/code&gt; validation rule which uses &lt;a href=&quot;yii-validators-filevalidator&quot;&gt;yii\validators\FileValidator&lt;/a&gt; to ensure a file with extension name &lt;code&gt;png&lt;/code&gt; or &lt;code&gt;jpg&lt;/code&gt; is uploaded. The &lt;code&gt;upload()&lt;/code&gt; method will perform the validation and save the uploaded file on the server.</source>
          <target state="translated">위 코드에서 &lt;code&gt;imageFile&lt;/code&gt; 속성은 업로드 된 파일 인스턴스를 유지하는 데 사용됩니다. 확장자가 &lt;code&gt;png&lt;/code&gt; 또는 &lt;code&gt;jpg&lt;/code&gt; 인 파일 이 업로드 되도록 &lt;a href=&quot;yii-validators-filevalidator&quot;&gt;yii \ validators \ FileValidator&lt;/a&gt; 를 사용 하는 &lt;code&gt;file&lt;/code&gt; 유효성 검사 규칙 과 연결됩니다 . &lt;code&gt;upload()&lt;/code&gt; 메소드는 유효성 검사를 수행하고 서버에 업로드 된 파일을 저장합니다.</target>
        </trans-unit>
        <trans-unit id="f97d55983c247932583fb30aad343970e4e9b6a1" translate="yes" xml:space="preserve">
          <source>In the constructor of the application, the following bootstrapping work is done:</source>
          <target state="translated">응용 프로그램 생성자에서 다음 부트 스트랩 작업이 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="b1d0a045d632aa6fcc67d9e062e210d8b30ef29b" translate="yes" xml:space="preserve">
          <source>In the controller action that does the data updating, try to catch the &lt;a href=&quot;yii-db-staleobjectexception&quot;&gt;yii\db\StaleObjectException&lt;/a&gt; and implement necessary business logic (e.g. merging the changes, prompting stated data) to resolve the conflict.</source>
          <target state="translated">데이터 업데이트를 수행하는 컨트롤러 작업에서 &lt;a href=&quot;yii-db-staleobjectexception&quot;&gt;yii \ db \ StaleObjectException&lt;/a&gt; 을 포착 하고 충돌을 해결하기 위해 필요한 비즈니스 로직 (예 : 변경 사항 병합, 명시된 데이터 프롬프트)을 구현하십시오.</target>
        </trans-unit>
        <trans-unit id="19aacb613a6bf0af3193525b4f5693e4dbad7203" translate="yes" xml:space="preserve">
          <source>In the controller action that updates the row using Active Record, try and catch the &lt;a href=&quot;yii-db-staleobjectexception&quot;&gt;yii\db\StaleObjectException&lt;/a&gt; exception. Implement necessary business logic (e.g. merging the changes, prompting staled data) to resolve the conflict.</source>
          <target state="translated">Active Record를 사용하여 행을 갱신하는 제어기 조치에서 &lt;a href=&quot;yii-db-staleobjectexception&quot;&gt;yii \ db \ StaleObjectException&lt;/a&gt; 예외를 시도하십시오 . 충돌을 해결하기 위해 필요한 비즈니스 로직을 구현하십시오 (예 : 변경 사항 병합, 데이터가 지연됨).</target>
        </trans-unit>
        <trans-unit id="83d499730cd38291506c9394c86f71f6247d0881" translate="yes" xml:space="preserve">
          <source>In the controller view, insert a &lt;a href=&quot;yii-captcha-captcha&quot;&gt;yii\captcha\Captcha&lt;/a&gt; widget in the form.</source>
          <target state="translated">컨트롤러보기에서 &lt;a href=&quot;yii-captcha-captcha&quot;&gt;yii \ captcha \ Captcha&lt;/a&gt; 위젯을 양식에 삽입하십시오 .</target>
        </trans-unit>
        <trans-unit id="1c44ac8125ea9f2a96b51a8beee2a5ab3b37fc1c" translate="yes" xml:space="preserve">
          <source>In the controller, we will pass an instance of that model to the view, wherein the &lt;a href=&quot;yii-widgets-activeform&quot;&gt;ActiveForm&lt;/a&gt; widget is used to display the form:</source>
          <target state="translated">컨트롤러에서 해당 모델의 인스턴스를 뷰로 전달합니다. 여기서 &lt;a href=&quot;yii-widgets-activeform&quot;&gt;ActiveForm&lt;/a&gt; 위젯을 사용하여 양식을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="5c4414f85b4c33fd8923cfd169f0e323c9cc1dbd" translate="yes" xml:space="preserve">
          <source>In the example above &lt;code&gt;author_id:integer:notNull:foreignKey(user)&lt;/code&gt; will generate a column named &lt;code&gt;author_id&lt;/code&gt; with a foreign key to the &lt;code&gt;user&lt;/code&gt; table while &lt;code&gt;category_id:integer:defaultValue(1):foreignKey&lt;/code&gt; will generate a column &lt;code&gt;category_id&lt;/code&gt; with a foreign key to the &lt;code&gt;category&lt;/code&gt; table.</source>
          <target state="translated">위의 예에서 &lt;code&gt;author_id:integer:notNull:foreignKey(user)&lt;/code&gt; 는 &lt;code&gt;user&lt;/code&gt; 테이블에 대한 외래 키를 가진 &lt;code&gt;author_id&lt;/code&gt; 라는 열을 생성하고 &lt;code&gt;category_id:integer:defaultValue(1):foreignKey&lt;/code&gt; 는 에 대한 외래 키를 가진 &lt;code&gt;category_id&lt;/code&gt; 열을 생성 합니다. &lt;code&gt;category&lt;/code&gt; 테이블.</target>
        </trans-unit>
        <trans-unit id="b67e7f4075f261551e9dd87400a1e59bc66b8939" translate="yes" xml:space="preserve">
          <source>In the example above we are using wildcard for matching and then filtering each category per needed file. Instead of using &lt;code&gt;fileMap&lt;/code&gt;, you can simply use the convention of the category mapping to the same named file. Now you can use &lt;code&gt;Module::t('validation', 'your custom validation message')&lt;/code&gt; or &lt;code&gt;Module::t('form', 'some form label')&lt;/code&gt; directly.</source>
          <target state="translated">위의 예에서는 와일드 카드를 사용하여 필요한 파일마다 각 범주를 일치시킨 다음 필터링합니다. &lt;code&gt;fileMap&lt;/code&gt; 을 사용하는 대신 동일한 명명 된 파일에 대한 범주 매핑 규칙을 사용할 수 있습니다. 이제 &lt;code&gt;Module::t('validation', 'your custom validation message')&lt;/code&gt; 또는 &lt;code&gt;Module::t('form', 'some form label')&lt;/code&gt; 직접 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0550ac988e107e5bdb246c879ed2d54a95bc1d83" translate="yes" xml:space="preserve">
          <source>In the examples shown above, the action results are all strings which will be treated as the response body to be sent to end users. The following example shows how an action can redirect the user browser to a new URL by returning a response object (because the &lt;a href=&quot;yii-web-controller#redirect()-detail&quot;&gt;redirect()&lt;/a&gt; method returns a response object):</source>
          <target state="translated">위에 표시된 예에서 작업 결과는 최종 사용자에게 보낼 응답 본문으로 취급되는 모든 문자열입니다. 다음 예제는 &lt;a href=&quot;yii-web-controller#redirect()-detail&quot;&gt;redirect ()&lt;/a&gt; 메서드가 응답 객체를 반환 하기 때문에 액션이 응답 객체를 반환하여 사용자 브라우저를 새 URL로 리디렉션 하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="8f31d382030614295df897cf04c919e7fba1b667" translate="yes" xml:space="preserve">
          <source>In the expression above, both &lt;code&gt;female&lt;/code&gt; and &lt;code&gt;male&lt;/code&gt; are possible parameter values, while &lt;code&gt;other&lt;/code&gt; handles values that do not match either one of them. Following each possible parameter value, you should specify a phrase and enclose it in a pair of curly brackets.</source>
          <target state="translated">위의 표현식에서 &lt;code&gt;female&lt;/code&gt; 및 &lt;code&gt;male&lt;/code&gt; 모두 가능한 매개 변수 값이며 &lt;code&gt;other&lt;/code&gt; 핸들은 둘 중 하나와 일치하지 않는 값을 처리합니다. 각각의 가능한 매개 변수 값 다음에 구를 지정하고 한 쌍의 중괄호로 묶어야합니다.</target>
        </trans-unit>
        <trans-unit id="f7b82950ca3eb74c085ec39aa5d76079eb2a26c7" translate="yes" xml:space="preserve">
          <source>In the first step, it determines the layout name and the context module:</source>
          <target state="translated">첫 번째 단계에서는 레이아웃 이름과 컨텍스트 모듈을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="c4c20ec84413f9f817b768847f82c4c4c222f04b" translate="yes" xml:space="preserve">
          <source>In the first step, it determines the layout value and the context module:</source>
          <target state="translated">첫 번째 단계에서는 레이아웃 값과 컨텍스트 모듈을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="0d03a44a8f83b3126ab36a60c6635d351ceeb16a" translate="yes" xml:space="preserve">
          <source>In the following example, &lt;code&gt;HelloWidget&lt;/code&gt; HTML-encodes and displays the content assigned to its &lt;code&gt;message&lt;/code&gt; property. If the property is not set, it will display &quot;Hello World&quot; by default.</source>
          <target state="translated">다음 예에서 &lt;code&gt;HelloWidget&lt;/code&gt; 은 &lt;code&gt;message&lt;/code&gt; 속성에 할당 된 내용을 HTML로 인코딩하고 표시합니다 . 이 속성을 설정하지 않으면 기본적으로 &quot;Hello World&quot;가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="a647d4fa1c2d60d6e11de96eee8f2fc97c1d5384" translate="yes" xml:space="preserve">
          <source>In the following example, ContentNegotiator is configured to support JSON and XML response formats, and English (United States) and German languages.</source>
          <target state="translated">다음 예제에서 ContentNegotiator는 JSON 및 XML 응답 형식과 영어 (미국) 및 독일어를 지원하도록 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="bf725dd452115361d74ea9e8fcc7de10d135c8e7" translate="yes" xml:space="preserve">
          <source>In the following example, an &lt;a href=&quot;yii-web-user#%24identityClass-detail&quot;&gt;identity class&lt;/a&gt; is implemented as an &lt;a href=&quot;guide-db-active-record&quot;&gt;Active Record&lt;/a&gt; class associated with the &lt;code&gt;user&lt;/code&gt; database table.</source>
          <target state="translated">다음 예에서 &lt;a href=&quot;yii-web-user#%24identityClass-detail&quot;&gt;ID 클래스&lt;/a&gt; 는 &lt;code&gt;user&lt;/code&gt; 데이터베이스 테이블 과 연관된 &lt;a href=&quot;guide-db-active-record&quot;&gt;Active Record&lt;/a&gt; 클래스 로 구현됩니다 .</target>
        </trans-unit>
        <trans-unit id="f45b7737e0f3b93eb2ce5e2c4a22789b33f27fe1" translate="yes" xml:space="preserve">
          <source>In the following example, any assets ending with &lt;code&gt;jquery.min.js&lt;/code&gt; will be replaced with &lt;code&gt;jquery/dist/jquery.js&lt;/code&gt; which is relative to &lt;a href=&quot;yii-web-assetmanager#%24baseUrl-detail&quot;&gt;$baseUrl&lt;/a&gt; and &lt;a href=&quot;yii-web-assetmanager#%24basePath-detail&quot;&gt;$basePath&lt;/a&gt;.</source>
          <target state="translated">다음 예제에서 &lt;code&gt;jquery.min.js&lt;/code&gt; 로 끝나는 모든 자산 은 &lt;a href=&quot;yii-web-assetmanager#%24baseUrl-detail&quot;&gt;$ baseUrl&lt;/a&gt; 및 &lt;a href=&quot;yii-web-assetmanager#%24basePath-detail&quot;&gt;$ basePath에&lt;/a&gt; 상대적인 &lt;code&gt;jquery/dist/jquery.js&lt;/code&gt; 로 대체됩니다 .</target>
        </trans-unit>
        <trans-unit id="26544fda077baba51d34d725ee9e838ad7c7dce2" translate="yes" xml:space="preserve">
          <source>In the following example, besides creating the &lt;code&gt;news&lt;/code&gt; table we also insert an initial row into this table.</source>
          <target state="translated">다음 예에서는 &lt;code&gt;news&lt;/code&gt; 테이블을 만드는 것 외에도이 테이블에 초기 행을 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="cca725f3af415949b4f3338963fc58a1ed58dd03" translate="yes" xml:space="preserve">
          <source>In the following example, the &lt;code&gt;view&lt;/code&gt; action (an inline action) has declared two parameters: &lt;code&gt;$id&lt;/code&gt; and &lt;code&gt;$version&lt;/code&gt;.</source>
          <target state="translated">다음 예에서 &lt;code&gt;view&lt;/code&gt; 조치 (인라인 조치)는 &lt;code&gt;$id&lt;/code&gt; 및 &lt;code&gt;$version&lt;/code&gt; 두 매개 변수를 선언했습니다 .</target>
        </trans-unit>
        <trans-unit id="a01213e67d94863f63c6439ee835d7c80581123f" translate="yes" xml:space="preserve">
          <source>In the following example, we create a &lt;code&gt;StatusValidator&lt;/code&gt; which validates if an input is a valid status input against the existing status data. The validator supports both server-side and client-side validation.</source>
          <target state="translated">다음 예에서는 입력이 기존 상태 데이터에 대해 유효한 상태 입력인지 확인 하는 &lt;code&gt;StatusValidator&lt;/code&gt; 를 만듭니다 . 유효성 검사기는 서버 쪽 및 클라이언트 쪽 유효성 검사를 모두 지원합니다.</target>
        </trans-unit>
        <trans-unit id="bd2a966019903cdd109b89075a74858a08235878" translate="yes" xml:space="preserve">
          <source>In the following example, we declare an Active Record class named &lt;code&gt;Customer&lt;/code&gt; for the &lt;code&gt;customer&lt;/code&gt; database table.</source>
          <target state="translated">다음 예에서는 &lt;code&gt;customer&lt;/code&gt; 데이터베이스 테이블에 대해 &lt;code&gt;Customer&lt;/code&gt; 라는 Active Record 클래스를 선언 합니다.</target>
        </trans-unit>
        <trans-unit id="3d9adffb2c4b59d542dca0f3a2f98e46672747d9" translate="yes" xml:space="preserve">
          <source>In the following example, we show how a generic model can be used for a login form:</source>
          <target state="translated">다음 예에서는 로그인 모델에 일반 모델을 사용하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="e94f6172c80c1ed223ed5c2e9252a5b74d834432" translate="yes" xml:space="preserve">
          <source>In the following examples, we assume the target &lt;a href=&quot;yii-i18n-formatter#%24timeZone-detail&quot;&gt;time zone&lt;/a&gt; is set as &lt;code&gt;Europe/Berlin&lt;/code&gt;.</source>
          <target state="translated">다음 예에서는 대상 &lt;a href=&quot;yii-i18n-formatter#%24timeZone-detail&quot;&gt;시간대&lt;/a&gt; 가 &lt;code&gt;Europe/Berlin&lt;/code&gt; 으로 설정되어 있다고 가정합니다 .</target>
        </trans-unit>
        <trans-unit id="63dff8635262222c8d1db6e4b2a14e6b3412d3df" translate="yes" xml:space="preserve">
          <source>In the following rule declaration, the &lt;code&gt;page&lt;/code&gt; and &lt;code&gt;tag&lt;/code&gt; parameters are both optional and will take the value of 1 and empty string, respectively, when they are not provided.</source>
          <target state="translated">다음 규칙 선언에서 &lt;code&gt;page&lt;/code&gt; 및 &lt;code&gt;tag&lt;/code&gt; 매개 변수는 모두 선택 사항이며 제공되지 않은 경우 각각 1 및 빈 문자열 값을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="d9fdf281902e61d3446b55099e65b227216990e4" translate="yes" xml:space="preserve">
          <source>In the following we will describe how to write a &lt;code&gt;UserProfile&lt;/code&gt; unit test class using &lt;code&gt;yii2-codeception&lt;/code&gt;.</source>
          <target state="translated">다음에서는 &lt;code&gt;yii2-codeception&lt;/code&gt; 을 사용하여 &lt;code&gt;UserProfile&lt;/code&gt; 단위 테스트 클래스 를 작성하는 방법에 대해 설명합니다 .</target>
        </trans-unit>
        <trans-unit id="a2a25380e22ec4a9056e9aa4f46f274522493632" translate="yes" xml:space="preserve">
          <source>In the following you find some examples:</source>
          <target state="translated">다음에는 몇 가지 예가 있습니다.</target>
        </trans-unit>
        <trans-unit id="bb4317488c64a617db36451042d438ecffd0b026" translate="yes" xml:space="preserve">
          <source>In the following, a configuration is used to create and initialize a database connection:</source>
          <target state="translated">다음에서 구성은 데이터베이스 연결을 작성하고 초기화하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="34b24fa1e0b3e264622d2211c950bf562870a9b6" translate="yes" xml:space="preserve">
          <source>In the following, we introduce an approach to combine and compress asset files without the need to modify your existing application code.</source>
          <target state="translated">다음에서는 기존 애플리케이션 코드를 수정하지 않고도 자산 파일을 결합하고 압축하는 방법을 소개합니다.</target>
        </trans-unit>
        <trans-unit id="006f6f0d755bfb0c4016b3c8b51f72b46caa7e76" translate="yes" xml:space="preserve">
          <source>In the following, we use an example to illustrate how you can build a set of RESTful APIs with some minimal coding effort.</source>
          <target state="translated">다음에서는 최소한의 코딩 노력으로 RESTful API 세트를 빌드하는 방법을 설명하기 위해 예제를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="3b85145d55d27de74750582ebdc2fad9e8452ce9" translate="yes" xml:space="preserve">
          <source>In the following, we will describe the features common to all log targets.</source>
          <target state="translated">다음에서는 모든 로그 대상에 공통적 인 기능에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="b08a026c58882ab85e8ff91613f612f1786333a7" translate="yes" xml:space="preserve">
          <source>In the following, we will describe the main usage and properties of every core validator.</source>
          <target state="translated">다음에서는 모든 핵심 유효성 검사기의 주요 사용법과 속성에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="6ede61bc57857e88e7216550c91ac20509a5e48f" translate="yes" xml:space="preserve">
          <source>In the following, we will describe the usage of each query building method.</source>
          <target state="translated">다음에서는 각 쿼리 작성 방법의 사용법에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="593e237107fe1a364b93a34a2cc13596f7ad1482" translate="yes" xml:space="preserve">
          <source>In the following, we will show how you can create a form that would allow you to collect data for both &lt;code&gt;User&lt;/code&gt; and &lt;code&gt;Profile&lt;/code&gt; models.</source>
          <target state="translated">다음에서는 &lt;code&gt;User&lt;/code&gt; 및 &lt;code&gt;Profile&lt;/code&gt; 모델 모두에 대한 데이터를 수집 할 수있는 양식을 작성하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="92d40b91f1c0b567e616eb289beb07faa00a1825" translate="yes" xml:space="preserve">
          <source>In the following, we will summarize the various Active Record life cycles and the methods/events that are involved in the life cycles.</source>
          <target state="translated">다음에는 다양한 Active Record 수명주기 및 수명주기와 관련된 방법 / 이벤트가 요약되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="930ad6f754d1291a8567c57a0325259b09ef74bc" translate="yes" xml:space="preserve">
          <source>In the form model, declare an attribute to store user-entered verification code, and declare the attribute to be validated by the 'captcha' validator.</source>
          <target state="translated">양식 모델에서 사용자가 입력 한 확인 코드를 저장하기위한 속성을 선언하고 'captcha'유효성 검증 기가 유효성을 검증 할 속성을 선언하십시오.</target>
        </trans-unit>
        <trans-unit id="7798b4f07de510bb5f985bc6028cec3fe3961ddb" translate="yes" xml:space="preserve">
          <source>In the last subsection, we have explained how to combine all asset bundles into a single one in order to minimize the HTTP requests for asset files referenced in an application. This is not always desirable in practice. For example, imagine your application has a &quot;front end&quot; as well as a &quot;back end&quot;, each of which uses a different set of JavaScript and CSS files. In this case, combining all asset bundles from both ends into a single one does not make sense, because the asset bundles for the &quot;front end&quot; are not used by the &quot;back end&quot; and it would be a waste of network bandwidth to send the &quot;back end&quot; assets when a &quot;front end&quot; page is requested.</source>
          <target state="translated">마지막 하위 섹션에서는 애플리케이션에서 참조 된 자산 파일에 대한 HTTP 요청을 최소화하기 위해 모든 자산 번들을 단일 번들로 결합하는 방법에 대해 설명했습니다. 실제로 항상 이것이 바람직한 것은 아닙니다. 예를 들어, 응용 프로그램에 &quot;프론트 엔드&quot;와 &quot;백 엔드&quot;가 있고 각각의 다른 JavaScript 및 CSS 파일 세트를 사용한다고 가정하십시오. 이 경우, &quot;프론트 엔드&quot;에 대한 자산 번들이 &quot;백엔드&quot;에 의해 사용되지 않고 전송하기 위해 네트워크 대역폭을 낭비하기 때문에 양쪽 끝에서 모든 자산 번들을 하나의 단일 번들로 결합하는 것은 의미가 없습니다. &quot;프론트 엔드&quot;페이지가 요청 될 때 &quot;백엔드&quot;자산</target>
        </trans-unit>
        <trans-unit id="01772b7e084f1afe8f8d19da7ef79b38926b9866" translate="yes" xml:space="preserve">
          <source>In the long term it usually gives you a good time-saving effect.</source>
          <target state="translated">장기적으로는 일반적으로 좋은 시간 절약 효과를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="11181a7f8a9f99639c8791d18596ce6da30fb091" translate="yes" xml:space="preserve">
          <source>In the migration class, you are expected to write code in the &lt;code&gt;up()&lt;/code&gt; method that makes changes to the database structure. You may also want to write code in the &lt;code&gt;down()&lt;/code&gt; method to revert the changes made by &lt;code&gt;up()&lt;/code&gt;. The &lt;code&gt;up()&lt;/code&gt; method is invoked when you upgrade the database with this migration, while the &lt;code&gt;down()&lt;/code&gt; method is invoked when you downgrade the database. The following code shows how you may implement the migration class to create a &lt;code&gt;news&lt;/code&gt; table:</source>
          <target state="translated">이주 클래스에서는 데이터베이스 구조를 변경 하는 &lt;code&gt;up()&lt;/code&gt; 메소드에 코드를 작성 해야합니다. &lt;code&gt;down()&lt;/code&gt; 메소드에 코드를 작성 하여 &lt;code&gt;up()&lt;/code&gt; 의 변경 사항을 되돌릴 수도 있습니다. &lt;code&gt;up()&lt;/code&gt; 이 이주 데이터베이스를 업그레이드 할 때 동안 방법은 호출 &lt;code&gt;down()&lt;/code&gt; 데이터베이스를 다운 그레이드 할 때 메소드가 호출됩니다. 다음 코드는 &lt;code&gt;news&lt;/code&gt; 테이블 을 작성하기 위해 마이그레이션 클래스를 구현하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="b5352f6e8746aecc5d93256d8c7969529f55442b" translate="yes" xml:space="preserve">
          <source>In the next request we can get URL remembered in the following way:</source>
          <target state="translated">다음 요청에서 다음과 같은 방식으로 URL을 기억할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0388b91d4a6be44e30e1cbd299bf00b4bfcc95f8" translate="yes" xml:space="preserve">
          <source>In the plural rule arguments above, &lt;code&gt;=&lt;/code&gt; means explicit value. So &lt;code&gt;=0&lt;/code&gt; means exactly zero, &lt;code&gt;=1&lt;/code&gt; means exactly one. &lt;code&gt;other&lt;/code&gt; stands for any other value. &lt;code&gt;#&lt;/code&gt; is replaced with the value of &lt;code&gt;n&lt;/code&gt; formatted according to target language.</source>
          <target state="translated">위의 복수 규칙 인수에서 &lt;code&gt;=&lt;/code&gt; 는 명시적인 값을 의미합니다. 따라서 &lt;code&gt;=0&lt;/code&gt; 은 정확히 0을 의미하고 &lt;code&gt;=1&lt;/code&gt; 은 정확히 1을 의미합니다. &lt;code&gt;other&lt;/code&gt; 는 다른 값을 나타냅니다. &lt;code&gt;#&lt;/code&gt; 은 대상 언어에 따라 형식화 된 &lt;code&gt;n&lt;/code&gt; 값으로 대체 됩니다.</target>
        </trans-unit>
        <trans-unit id="e0137ded62f4a20b6e3f580da6808d8376faf51f" translate="yes" xml:space="preserve">
          <source>In the releases of your extension, in addition to code files, you should also consider including the following to help other people learn about and use your extension:</source>
          <target state="translated">확장 릴리스에서는 코드 파일 외에도 다른 사람들이 확장에 대해 배우고 사용하는 데 도움이되도록 다음을 포함하는 것을 고려해야합니다.</target>
        </trans-unit>
        <trans-unit id="90d0b6f6db0613112ab59dc16feeb14ce715a152" translate="yes" xml:space="preserve">
          <source>In the second step, it determines the actual layout file according to the layout value and the context module determined in the first step. The layout value can be:</source>
          <target state="translated">두 번째 단계에서는 첫 번째 단계에서 결정된 레이아웃 값과 컨텍스트 모듈에 따라 실제 레이아웃 파일을 결정합니다. 레이아웃 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="74162be168ede01b54358940789028f7eedc3694" translate="yes" xml:space="preserve">
          <source>In the second step, it determines the actual layout file according to the previously found layout name and context module. The layout name can be:</source>
          <target state="translated">두 번째 단계에서는 이전에 찾은 레이아웃 이름과 컨텍스트 모듈에 따라 실제 레이아웃 파일을 결정합니다. 레이아웃 이름은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e5e6e3e552627d5c595da898832c1ee3ecec7729" translate="yes" xml:space="preserve">
          <source>In the special case when you want to maintain extensions manually, you may configure this property as follows:</source>
          <target state="translated">확장을 수동으로 유지하려는 특별한 경우에는 다음과 같이이 속성을 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2d4938470f107ce0270bb4bfb3290c224b8ca98e" translate="yes" xml:space="preserve">
          <source>In the view file above, the current data model is available as &lt;code&gt;$model&lt;/code&gt;. Additionally the following variables are available:</source>
          <target state="translated">위의 뷰 파일에서 현재 데이터 모델은 &lt;code&gt;$model&lt;/code&gt; 로 사용할 수 있습니다 . 또한 다음 변수를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0bb7197979c5d62d6e9876d2665e34a7b0d1a2d4" translate="yes" xml:space="preserve">
          <source>In the view file, you should add the &lt;code&gt;multiple&lt;/code&gt; option to the &lt;code&gt;fileInput()&lt;/code&gt; call so that the file upload field can receive multiple files:</source>
          <target state="translated">보기 파일 에서 파일 업로드 필드가 여러 파일을 수신 할 수 있도록 &lt;code&gt;fileInput()&lt;/code&gt; 호출에 &lt;code&gt;multiple&lt;/code&gt; 옵션을 추가해야 합니다.</target>
        </trans-unit>
        <trans-unit id="dc1cc2dfa07b545938ca7e8c892c39c16846d199" translate="yes" xml:space="preserve">
          <source>In the view you can use javascript to add new input lines dynamically.</source>
          <target state="translated">보기에서 javascript를 사용하여 새 입력 행을 동적으로 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8739cc5ba8a1e32ca4949a66c7709ae8161a6046" translate="yes" xml:space="preserve">
          <source>In this and the next few sections, we will describe how to install Yii with the so-called &lt;em&gt;Basic Project Template&lt;/em&gt; and how to implement new features on top of this template. Yii also provides another template called the &lt;a href=&quot;https://github.com/yiisoft/yii2-app-advanced/blob/master/docs/guide/README.md&quot;&gt;Advanced Project Template&lt;/a&gt; which is better used in a team development environment to develop applications with multiple tiers.</source>
          <target state="translated">이 섹션과 다음 섹션에서는 소위 &lt;em&gt;기본 프로젝트 템플릿으로&lt;/em&gt; Yii를 설치 하는 방법과이 템플릿 위에 새로운 기능을 구현하는 방법에 대해 설명합니다. Yii는 팀 개발 환경에서 여러 계층으로 응용 프로그램을 개발하는 데 더 잘 사용되는 &lt;a href=&quot;https://github.com/yiisoft/yii2-app-advanced/blob/master/docs/guide/README.md&quot;&gt;고급 프로젝트 템플릿&lt;/a&gt; 이라는 또 다른 템플릿을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="4366eb881bb5453529c5307d54196f6265e320d4" translate="yes" xml:space="preserve">
          <source>In this case attributes &lt;code&gt;username&lt;/code&gt;, &lt;code&gt;password&lt;/code&gt; and &lt;code&gt;secret&lt;/code&gt; are required, but &lt;code&gt;secret&lt;/code&gt; must be assigned explicitly.</source>
          <target state="translated">이 경우 &lt;code&gt;username&lt;/code&gt; , &lt;code&gt;password&lt;/code&gt; 및 &lt;code&gt;secret&lt;/code&gt; 속성 이 필요하지만 &lt;code&gt;secret&lt;/code&gt; 을 명시 적으로 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="6d9a3494231bb923705dde8c50a9551ddc7f9752" translate="yes" xml:space="preserve">
          <source>In this case, the container will use a registered PHP callable to build new instances of a class. Each time when &lt;a href=&quot;yii-di-container#get()-detail&quot;&gt;yii\di\Container::get()&lt;/a&gt; is called, the corresponding callable will be invoked. The callable is responsible to resolve the dependencies and inject them appropriately to the newly created objects. For example,</source>
          <target state="translated">이 경우 컨테이너는 등록 된 PHP 호출 가능을 사용하여 클래스의 새 인스턴스를 빌드합니다. 때마다 &lt;a href=&quot;yii-di-container#get()-detail&quot;&gt;YII \ 디 \ 컨테이너 :: GET ()가&lt;/a&gt; 호출됩니다 해당 호출이 호출됩니다. 콜 러블은 종속성을 해결하고 새로 만든 객체에 적절하게 주입해야합니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="26eb690dbd2c78d43e9a964771ba439ac1acd7c3" translate="yes" xml:space="preserve">
          <source>In this case, the themed version could be either &lt;code&gt;@app/themes/christmas/site/index.php&lt;/code&gt; or &lt;code&gt;@app/themes/basic/site/index.php&lt;/code&gt;. The former has precedence over the latter if both files exist.</source>
          <target state="translated">이 경우 테마 버전은 &lt;code&gt;@app/themes/christmas/site/index.php&lt;/code&gt; 또는 &lt;code&gt;@app/themes/basic/site/index.php&lt;/code&gt; 있습니다. 두 파일이 모두 존재하는 경우 전자가 후자보다 우선합니다.</target>
        </trans-unit>
        <trans-unit id="7c5fe2392a26a651ff9104e5951e87011d834326" translate="yes" xml:space="preserve">
          <source>In this case, the view &lt;code&gt;@app/views/site/index.php&lt;/code&gt; would be themed as either &lt;code&gt;@app/themes/christmas/site/index.php&lt;/code&gt; or &lt;code&gt;@app/themes/basic/site/index.php&lt;/code&gt;, depending on which themed file exists. If both themed files exist, the first one will take precedence. In practice, you would keep most themed view files in &lt;code&gt;@app/themes/basic&lt;/code&gt; and customize some of them in &lt;code&gt;@app/themes/christmas&lt;/code&gt;.</source>
          <target state="translated">이 경우 &lt;code&gt;@app/views/site/index.php&lt;/code&gt; 는 다음에 따라 &lt;code&gt;@app/themes/christmas/site/index.php&lt;/code&gt; 또는 &lt;code&gt;@app/themes/basic/site/index.php&lt;/code&gt; 됩니다. 테마 파일이 존재합니다. 두 테마 파일이 모두 있으면 첫 번째 파일이 우선합니다. 실제로 대부분의 테마보기 파일을 &lt;code&gt;@app/themes/basic&lt;/code&gt; 하고 &lt;code&gt;@app/themes/christmas&lt;/code&gt; 에서 일부 파일을 사용자 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="a965d447e60a37553486daddd7ee6fc9fef1cf3d" translate="yes" xml:space="preserve">
          <source>In this case, you should put the sub-query in an array and use the array key to specify the alias.</source>
          <target state="translated">이 경우 하위 쿼리를 배열에 넣고 배열 키를 사용하여 별칭을 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="ad2adbe1e86cc2a2d6674dfccc81ce9cbc89e449" translate="yes" xml:space="preserve">
          <source>In this example we use an array to pass global configuration parameters from the PHP part of the application to the JS frontend code.</source>
          <target state="translated">이 예제에서는 배열을 사용하여 응용 프로그램의 PHP 부분에서 JS 프론트 엔드 코드로 전역 구성 매개 변수를 전달합니다.</target>
        </trans-unit>
        <trans-unit id="be93219142dfb672afd6eb71e888ad89024c03cf" translate="yes" xml:space="preserve">
          <source>In this example, access is allowed for all the IPv4 and IPv6 addresses excluding the &lt;code&gt;192.168.10.0/24&lt;/code&gt; subnet. IPv4 address &lt;code&gt;192.168.10.128&lt;/code&gt; is also allowed, because it is listed before the restriction.</source>
          <target state="translated">이 예에서는 &lt;code&gt;192.168.10.0/24&lt;/code&gt; 서브넷을 제외한 모든 IPv4 및 IPv6 주소에 대한 액세스가 허용됩니다 . IPv4 주소 &lt;code&gt;192.168.10.128&lt;/code&gt; 도 제한 전에 나열되므로 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="697384e31c1de90bd1e6bbc4532ab13e48f4f048" translate="yes" xml:space="preserve">
          <source>In this guide all composer commands assume you have installed composer &lt;a href=&quot;https://getcomposer.org/doc/00-intro.md#globally&quot;&gt;globally&lt;/a&gt; so that it is available as the &lt;code&gt;composer&lt;/code&gt; command. If you are using the &lt;code&gt;composer.phar&lt;/code&gt; in the local directory instead, you have to adjust the example commands accordingly.</source>
          <target state="translated">이 가이드에서는 모든 작곡가 명령을 사용하면 작곡가를 설치 한 가정 &lt;a href=&quot;https://getcomposer.org/doc/00-intro.md#globally&quot;&gt;세계적&lt;/a&gt; 그래서이로 사용할 수 있는지 &lt;code&gt;composer&lt;/code&gt; 명령. 대신 로컬 디렉토리에서 &lt;code&gt;composer.phar&lt;/code&gt; 를 사용하는 경우 이에 따라 예제 명령을 조정해야합니다.</target>
        </trans-unit>
        <trans-unit id="5436fce9d897c4424437c2c9fbdd3b4a63f3cb1f" translate="yes" xml:space="preserve">
          <source>In this method, you may also want to return different lists of fields based on some context information. For example, depending on &lt;a href=&quot;yii-base-model#%24scenario-detail&quot;&gt;$scenario&lt;/a&gt; or the privilege of the current application user, you may return different sets of visible fields or filter out some fields.</source>
          <target state="translated">이 방법에서는 일부 컨텍스트 정보를 기반으로 다른 필드 목록을 반환 할 수도 있습니다. 예를 들어 &lt;a href=&quot;yii-base-model#%24scenario-detail&quot;&gt;$ scenario&lt;/a&gt; 또는 현재 응용 프로그램 사용자의 권한에 따라 다른 표시 필드 집합을 반환하거나 일부 필드를 필터링 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="600a972a598e27df6b4dcb4d42c25bcb6044490a" translate="yes" xml:space="preserve">
          <source>In this method, you may also want to return different lists of fields based on some context information. For example, depending on the privilege of the current application user, you may return different sets of visible fields or filter out some fields.</source>
          <target state="translated">이 방법에서는 일부 컨텍스트 정보를 기반으로 다른 필드 목록을 반환 할 수도 있습니다. 예를 들어, 현재 응용 프로그램 사용자의 권한에 따라 다른 표시 필드 집합을 반환하거나 일부 필드를 필터링 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0ad9d436ae6e4b37d8dfe306b7b3c4bf9e51af12" translate="yes" xml:space="preserve">
          <source>In this section we'll review the following security aspects:</source>
          <target state="translated">이 섹션에서는 다음과 같은 보안 측면을 검토합니다.</target>
        </trans-unit>
        <trans-unit id="79675da0a827e23bf791e7a8383835c34be74fd3" translate="yes" xml:space="preserve">
          <source>In this section, we will describe how to compose and send responses to end users.</source>
          <target state="translated">이 섹션에서는 최종 사용자에게 응답을 작성하고 보내는 방법을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="ba259a8c8b10c6ee64d0185493b7c2b214d2502d" translate="yes" xml:space="preserve">
          <source>In this section, we will mainly describe how a resource class extending from &lt;a href=&quot;yii-base-model&quot;&gt;yii\base\Model&lt;/a&gt; (or its child classes) can specify what data may be returned via RESTful APIs. If the resource class does not extend from &lt;a href=&quot;yii-base-model&quot;&gt;yii\base\Model&lt;/a&gt;, then all its public member variables will be returned.</source>
          <target state="translated">이 섹션에서는 주로 &lt;a href=&quot;yii-base-model&quot;&gt;yii \ base \ Model&lt;/a&gt; (또는 해당 하위 클래스) 에서 확장 된 자원 클래스가 RESTful API를 통해 리턴 될 데이터를 지정하는 방법에 대해 설명합니다 . 자원 클래스가 &lt;a href=&quot;yii-base-model&quot;&gt;yii \ base \ Model&lt;/a&gt; 에서 확장되지 않으면 모든 공용 멤버 변수가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="7e6949cd2bd7b47ca2fa811fd8de9d13fb7e9d25" translate="yes" xml:space="preserve">
          <source>In this section, we will mainly describe the first two steps.</source>
          <target state="translated">이 섹션에서는 처음 두 단계를 주로 설명합니다.</target>
        </trans-unit>
        <trans-unit id="a46fcea3c9be5bbc6fbd46ca7954d4e8360c62cb" translate="yes" xml:space="preserve">
          <source>In this section, you have learned how to use Gii to generate the code that implements complete CRUD functionality for content stored in a database table.</source>
          <target state="translated">이 섹션에서는 Gii를 사용하여 데이터베이스 테이블에 저장된 컨텐츠에 대한 완전한 CRUD 기능을 구현하는 코드를 생성하는 방법을 배웠습니다.</target>
        </trans-unit>
        <trans-unit id="40046d0924f75606215143f4bec5d1df81fac54c" translate="yes" xml:space="preserve">
          <source>In this tutorial, we will mainly describe the usage of Active Record for relational databases. However, most content described here are also applicable to Active Record for NoSQL databases.</source>
          <target state="translated">이 학습서에서는 주로 관계형 데이터베이스의 Active Record 사용법에 대해 설명합니다. 그러나 여기에 설명 된 대부분의 내용은 Active Record for NoSQL 데이터베이스에도 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="874ffee33f1b020d8b8a956709a23e150e249d7b" translate="yes" xml:space="preserve">
          <source>In this way you will avoid collision of fixture data files between tests and use them as you need.</source>
          <target state="translated">이런 식으로 테스트 사이에 조명기 데이터 파일의 충돌을 피하고 필요에 따라 사용합니다.</target>
        </trans-unit>
        <trans-unit id="a1a5f71916336b95986d3d9bba5e7e86ead0ee52" translate="yes" xml:space="preserve">
          <source>In view files often the HTML code is not written out directly but generated by some PHP code dependent on the variables of the view. In order for the generated HTML to be manipulated with Javascript, the JS code has to contain dynamic parts too, for example the IDs of the jQuery selectors.</source>
          <target state="translated">뷰 파일에서 종종 HTML 코드는 직접 작성되지 않지만 뷰의 변수에 따라 일부 PHP 코드에 의해 생성됩니다. 생성 된 HTML을 Javascript로 조작하려면 JS 코드에 동적 부분 (예 : jQuery 선택기의 ID)도 포함되어야합니다.</target>
        </trans-unit>
        <trans-unit id="e3f29f71c6c6618a65fcb7924a133f223e54a9ca" translate="yes" xml:space="preserve">
          <source>In which format should the value of each data model be displayed as (e.g. &lt;code&gt;&quot;raw&quot;&lt;/code&gt;, &lt;code&gt;&quot;text&quot;&lt;/code&gt;, &lt;code&gt;&quot;html&quot;&lt;/code&gt;, &lt;code&gt;['date', 'php:Y-m-d']&lt;/code&gt;).</source>
          <target state="translated">각 데이터 모델의 값을 어떤 형식으로 표시해야합니까 (예 : &lt;code&gt;&quot;raw&quot;&lt;/code&gt; , &lt;code&gt;&quot;text&quot;&lt;/code&gt; , &lt;code&gt;&quot;html&quot;&lt;/code&gt; , &lt;code&gt;['date', 'php:Y-m-d']&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="02d4acf11ad177c49763e80afd208b4892f18537" translate="yes" xml:space="preserve">
          <source>In which format should the value of each data model be displayed as (e.g. &lt;code&gt;&quot;raw&quot;&lt;/code&gt;, &lt;code&gt;&quot;text&quot;&lt;/code&gt;, &lt;code&gt;&quot;html&quot;&lt;/code&gt;, &lt;code&gt;['date', 'php:Y-m-d']&lt;/code&gt;). Supported formats are determined by the &lt;a href=&quot;yii-grid-gridview#%24formatter-detail&quot;&gt;formatter&lt;/a&gt; used by the &lt;a href=&quot;yii-grid-gridview&quot;&gt;yii\grid\GridView&lt;/a&gt;. Default format is &quot;text&quot; which will format the value as an HTML-encoded plain text when &lt;a href=&quot;yii-i18n-formatter&quot;&gt;yii\i18n\Formatter&lt;/a&gt; is used as the &lt;a href=&quot;yii-grid-gridview#%24formatter-detail&quot;&gt;formatter&lt;/a&gt; of the GridView.</source>
          <target state="translated">각 데이터 모델의 값을 어떤 형식으로 표시해야합니까 (예 : &lt;code&gt;&quot;raw&quot;&lt;/code&gt; , &lt;code&gt;&quot;text&quot;&lt;/code&gt; , &lt;code&gt;&quot;html&quot;&lt;/code&gt; , &lt;code&gt;['date', 'php:Y-m-d']&lt;/code&gt; ). 지원되는 형식은 &lt;a href=&quot;yii-grid-gridview&quot;&gt;yii \ grid \ GridView&lt;/a&gt; 에서 사용 하는 &lt;a href=&quot;yii-grid-gridview#%24formatter-detail&quot;&gt;포맷터에&lt;/a&gt; 의해 결정됩니다 . 기본 형식은 &quot;text&quot;이며, &lt;a href=&quot;yii-i18n-formatter&quot;&gt;yii \ i18n \ Formatter&lt;/a&gt; 가 GridView 의 &lt;a href=&quot;yii-grid-gridview#%24formatter-detail&quot;&gt;형식 기 ( &lt;/a&gt;formatter )로 사용될 때 값을 HTML 인코딩 된 일반 텍스트 로 형식화 합니다.</target>
        </trans-unit>
        <trans-unit id="43f1840020864c280b6030185f71cbc6507de538" translate="yes" xml:space="preserve">
          <source>In your JavaScript code you can now access these like &lt;code&gt;yiiOptions.baseUrl&lt;/code&gt; or &lt;code&gt;yiiOptions.language&lt;/code&gt;.</source>
          <target state="translated">JavaScript 코드에서 &lt;code&gt;yiiOptions.baseUrl&lt;/code&gt; 또는 &lt;code&gt;yiiOptions.language&lt;/code&gt; 와 같은 항목에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="00bd92117b61de092e8b53f27488ce9889f6f063" translate="yes" xml:space="preserve">
          <source>In your unit test class extending &lt;a href=&quot;yii-codeception-dbtestcase&quot;&gt;yii\codeception\DbTestCase&lt;/a&gt; or &lt;a href=&quot;yii-codeception-testcase&quot;&gt;yii\codeception\TestCase&lt;/a&gt;, declare which fixtures you want to use in the &lt;a href=&quot;yii-test-fixturetrait#fixtures()-detail&quot;&gt;fixtures()&lt;/a&gt; method. For example,</source>
          <target state="translated">&lt;a href=&quot;yii-codeception-dbtestcase&quot;&gt;yii \ codeception \ DbTestCase&lt;/a&gt; 또는 &lt;a href=&quot;yii-codeception-testcase&quot;&gt;yii \ codeception \ TestCase를&lt;/a&gt; 확장하는 단위 테스트 클래스 에서 &lt;a href=&quot;yii-test-fixturetrait#fixtures()-detail&quot;&gt;fixtures ()&lt;/a&gt; 메소드 에 사용할 조명기를 선언하십시오 . 예를 들어</target>
        </trans-unit>
        <trans-unit id="73caa3358e297d4c512dad71b8f738fa3cc27275" translate="yes" xml:space="preserve">
          <source>Include file(s) before starting tinker shell</source>
          <target state="translated">땜장이 셸을 시작하기 전에 파일 포함</target>
        </trans-unit>
        <trans-unit id="724fc6eae7e32c77ed08a9cab9ea718258ffe375" translate="yes" xml:space="preserve">
          <source>Include the &lt;a href=&quot;yii&quot;&gt;Yii&lt;/a&gt; class file;</source>
          <target state="translated">&lt;a href=&quot;yii&quot;&gt;Yii&lt;/a&gt; 클래스 파일을 포함 하십시오.</target>
        </trans-unit>
        <trans-unit id="5c53f1d11bfa21025286f5120779565f88c97f72" translate="yes" xml:space="preserve">
          <source>Include the directory in the &lt;code&gt;$fpath&lt;/code&gt;, e.g. by adding it to &lt;code&gt;~/.zshrc&lt;/code&gt;</source>
          <target state="translated">디렉토리를 &lt;code&gt;$fpath&lt;/code&gt; 에 포함 시키 십시오 (예 : &lt;code&gt;~/.zshrc&lt;/code&gt; 에 추가)</target>
        </trans-unit>
        <trans-unit id="5c0a29bb504a876c51cd7ad9a22fe9190f2ae7e9" translate="yes" xml:space="preserve">
          <source>Include the extension manifest file &lt;code&gt;vendor/yiisoft/extensions.php&lt;/code&gt;.</source>
          <target state="translated">확장명 매니페스트 파일 &lt;code&gt;vendor/yiisoft/extensions.php&lt;/code&gt; 를 포함하십시오 .</target>
        </trans-unit>
        <trans-unit id="c37d3c1a0bacc352c9589efc03a4fab916f3683f" translate="yes" xml:space="preserve">
          <source>Includes client assets of &lt;a href=&quot;https://github.com/RobinHerbots/Inputmask&quot;&gt;jQuery input mask plugin&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/RobinHerbots/Inputmask&quot;&gt;jQuery 입력 마스크 플러그인&lt;/a&gt; 의 클라이언트 자산을 포함합니다 .</target>
        </trans-unit>
        <trans-unit id="15c22d169f90cb83d8893cd476573b43732b45a8" translate="yes" xml:space="preserve">
          <source>Includes the migration file for a given migration class name.</source>
          <target state="translated">지정된 마이그레이션 클래스 이름에 대한 마이그레이션 파일을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="fef77fd0793d3c2cf3b857ff00cad601ec7a2695" translate="yes" xml:space="preserve">
          <source>Index metadata. &lt;code&gt;null&lt;/code&gt; - if the named index does not exist.</source>
          <target state="translated">인덱스 메타 데이터. &lt;code&gt;null&lt;/code&gt; - 이름 첨부 인덱스가 존재하지 않는 경우</target>
        </trans-unit>
        <trans-unit id="27bf949a8c6bbf392cd9bbfb0a23ac87298c9ae6" translate="yes" xml:space="preserve">
          <source>Index name</source>
          <target state="translated">색인 이름</target>
        </trans-unit>
        <trans-unit id="e6bada87abc8ee10df4583463137a3f0b7f63d38" translate="yes" xml:space="preserve">
          <source>Index name or pattern, use &lt;code&gt;*&lt;/code&gt; in order to drop all indexes.</source>
          <target state="translated">인덱스 이름 또는 패턴, 모든 인덱스를 삭제 하려면 &lt;code&gt;*&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="6e92b7a2785e378d347a5dbba4568f754e0b3cfb" translate="yes" xml:space="preserve">
          <source>Index name.</source>
          <target state="translated">색인 이름.</target>
        </trans-unit>
        <trans-unit id="82abe6b26544e9ff8eed1b4c2cd35852eb64f8ee" translate="yes" xml:space="preserve">
          <source>Index name. The index name may contain schema name if any. Do not quote the index name.</source>
          <target state="translated">색인 이름. 인덱스 이름에는 스키마 이름이있을 수 있습니다. 색인 이름을 인용하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="bac2a9da8998703d93adb1d10003f51ef53e0fae" translate="yes" xml:space="preserve">
          <source>Index schema information. Null if the named index does not exist.</source>
          <target state="translated">인덱스 스키마 정보. 지정된 인덱스가 존재하지 않는 경우는 null</target>
        </trans-unit>
        <trans-unit id="b94962abe613b3ebfaaf8264a4cf8a31f00b0c22" translate="yes" xml:space="preserve">
          <source>Index that the document belogs to. Can be set to null if the command has a default index (&lt;a href=&quot;yii-elasticsearch-bulkcommand#%24index-detail&quot;&gt;yii\elasticsearch\BulkCommand::$index&lt;/a&gt;) assigned.</source>
          <target state="translated">문서가 기록하는 색인입니다. 명령에 기본 색인 ( &lt;a href=&quot;yii-elasticsearch-bulkcommand#%24index-detail&quot;&gt;yii \ elasticsearch \ BulkCommand :: $ index&lt;/a&gt; )이 지정된 경우 널로 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f28c7134fe738b1baa2e6bc30b4ff32821809b3d" translate="yes" xml:space="preserve">
          <source>IndexAction implements the API endpoint for listing multiple models.</source>
          <target state="translated">IndexAction은 여러 모델을 나열하기 위해 API 엔드 포인트를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="ae7d1fe5edff93d934063cc390217314b9e2bb0a" translate="yes" xml:space="preserve">
          <source>Indexes and/or groups the array according to a specified key.</source>
          <target state="translated">지정된 키에 따라 배열을 색인화 및 / 또는 그룹화합니다.</target>
        </trans-unit>
        <trans-unit id="f77617d70f83cf7b1d1896f4cfb5f9927286bc2e" translate="yes" xml:space="preserve">
          <source>Indexes specification. Each specification should be an array in format: optionName =&amp;gt; value The main options are:</source>
          <target state="translated">인덱스 사양. 각 스펙은 다음 형식의 배열이어야합니다. optionName =&amp;gt; value 기본 옵션은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b1f3cbbf8d37f08e3d21cd4bc0a7ffe67e04ef6b" translate="yes" xml:space="preserve">
          <source>Indexes specifications.</source>
          <target state="translated">인덱스 사양.</target>
        </trans-unit>
        <trans-unit id="7fad0e26fd25542aa035943bb4dcf7b1bd89671d" translate="yes" xml:space="preserve">
          <source>Indexing Query Results</source>
          <target state="translated">쿼리 결과 인덱싱</target>
        </trans-unit>
        <trans-unit id="9e3d96a1631811addaed53777a78194601c63eac" translate="yes" xml:space="preserve">
          <source>Indicates if popup window should be used instead of direct links.</source>
          <target state="translated">직접 링크 대신 팝업 창을 사용해야하는지 여부를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="8fdca9d873a9836142abfa8fdd037626dd0ec980" translate="yes" xml:space="preserve">
          <source>Indicates if redirect should be performed even in case of popup window.</source>
          <target state="translated">팝업 창이있는 경우에도 리디렉션을 수행해야하는지 여부를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="014c9e6f0fea8c9251e7ce51fd892a3b1ebde501" translate="yes" xml:space="preserve">
          <source>Indicates if widget content, should be rendered automatically.</source>
          <target state="translated">위젯 컨텐츠가 자동으로 렌더링되어야하는지 여부를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="c6eebbca3ecf02356cd6356837f1a3edde7acdbb" translate="yes" xml:space="preserve">
          <source>Indicates if widget content, should be rendered automatically. Note: this value automatically set to 'false' at the first call of &lt;a href=&quot;yii-authclient-widgets-authchoice#createClientUrl()-detail&quot;&gt;createClientUrl()&lt;/a&gt;</source>
          <target state="translated">위젯 컨텐츠가 자동으로 렌더링되어야하는지 여부를 나타냅니다. 참고 :이 값은 &lt;a href=&quot;yii-authclient-widgets-authchoice#createClientUrl()-detail&quot;&gt;createClientUrl ()&lt;/a&gt; 의 첫 번째 호출에서 자동으로 'false'로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="4da078df730dd61103f92529eb7beeeb860b245a" translate="yes" xml:space="preserve">
          <source>Indicates whether the table names generated should consider the &lt;code&gt;tablePrefix&lt;/code&gt; setting of the DB connection.</source>
          <target state="translated">생성 된 테이블 이름 이 DB 연결 의 &lt;code&gt;tablePrefix&lt;/code&gt; 설정을 고려해야하는지 여부를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="182149604b0beba8e881df7dba223d823250da6e" translate="yes" xml:space="preserve">
          <source>Indicates whether the table names generated should consider the &lt;code&gt;tablePrefix&lt;/code&gt; setting of the DB connection. For example, if the table name is &lt;code&gt;post&lt;/code&gt; the generator wil return &lt;code&gt;{{%post}}&lt;/code&gt;.</source>
          <target state="translated">생성 된 테이블 이름 이 DB 연결 의 &lt;code&gt;tablePrefix&lt;/code&gt; 설정을 고려해야하는지 여부를 나타냅니다 . 예를 들어, 테이블 이름이 &lt;code&gt;post&lt;/code&gt; 인 경우 생성기 는 &lt;code&gt;{{%post}}&lt;/code&gt; 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="cc43eabb9fc7f8889ee1414fb8485f7e4a474877" translate="yes" xml:space="preserve">
          <source>Inflector pluralizes and singularizes English nouns. It also contains some other useful methods.</source>
          <target state="translated">Inflector는 영어 명사를 복수화하고 단 수화합니다. 다른 유용한 방법도 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="f0ad3fca6ab05d833db8b58699b7e26836b20db6" translate="yes" xml:space="preserve">
          <source>Info attribute input search value</source>
          <target state="translated">정보 속성 입력 검색 값</target>
        </trans-unit>
        <trans-unit id="e64e08fc9d6921155de313395207352b842d485e" translate="yes" xml:space="preserve">
          <source>Info message.</source>
          <target state="translated">정보 메시지.</target>
        </trans-unit>
        <trans-unit id="8e8955cb8a8c349fdc96dfe7fee4218234a6a552" translate="yes" xml:space="preserve">
          <source>Informational message level. An informational message is one that includes certain information for developers to review.</source>
          <target state="translated">정보 메시지 수준. 정보 메시지는 개발자가 검토 할 특정 정보를 포함하는 메시지입니다.</target>
        </trans-unit>
        <trans-unit id="fdaddb9ce367c2ca746a97cc24d2e8817a51f27d" translate="yes" xml:space="preserve">
          <source>Inheritance</source>
          <target state="translated">Inheritance</target>
        </trans-unit>
        <trans-unit id="67eb7c4bdb557e17a2430101a293ded796c9767a" translate="yes" xml:space="preserve">
          <source>InitDbFixture represents the initial state needed for DB-related tests.</source>
          <target state="translated">InitDbFixture는 DB 관련 테스트에 필요한 초기 상태를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="5a3ebe3b930b896810c07c00c18665e24d06eced" translate="yes" xml:space="preserve">
          <source>Initial property values for &lt;a href=&quot;yii-widgets-fragmentcache&quot;&gt;yii\widgets\FragmentCache&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;yii-widgets-fragmentcache&quot;&gt;yii \ widgets \ FragmentCache의&lt;/a&gt; 초기 속성 값</target>
        </trans-unit>
        <trans-unit id="ff527de3138c137e8846197e6df479c84e326d99" translate="yes" xml:space="preserve">
          <source>Initial value of the aggregation counter object.</source>
          <target state="translated">집계 카운터 개체의 초기 값</target>
        </trans-unit>
        <trans-unit id="7be9c79533ef1a080403e2d429e2019bb365e678" translate="yes" xml:space="preserve">
          <source>Initial values specified in &lt;a href=&quot;yii-web-request#%24csrfCookie-detail&quot;&gt;$csrfCookie&lt;/a&gt; will be applied to the generated cookie.</source>
          <target state="translated">&lt;a href=&quot;yii-web-request#%24csrfCookie-detail&quot;&gt;$ csrfCookie에&lt;/a&gt; 지정된 초기 값 이 생성 된 쿠키에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="31d0bce9606c028997ba6db8124f4694480e575b" translate="yes" xml:space="preserve">
          <source>Initial values to be applied to the validator properties.</source>
          <target state="translated">유효성 검사기 속성에 적용 할 초기 값입니다.</target>
        </trans-unit>
        <trans-unit id="725d944eb21453b9e5e699e05ed30327e4078dd8" translate="yes" xml:space="preserve">
          <source>Initialize application properties using the given application configuration.</source>
          <target state="translated">주어진 응용 프로그램 구성을 사용하여 응용 프로그램 속성을 초기화하십시오.</target>
        </trans-unit>
        <trans-unit id="81b5a3cd380686d55c9373b4efb4a8672465f50e" translate="yes" xml:space="preserve">
          <source>Initialize the application.</source>
          <target state="translated">응용 프로그램을 초기화하십시오.</target>
        </trans-unit>
        <trans-unit id="6b0fabaec77b757d9c0aac60716f70308c134417" translate="yes" xml:space="preserve">
          <source>Initialize the fixtures</source>
          <target state="translated">비품 초기화</target>
        </trans-unit>
        <trans-unit id="74cf2ec766f57a4aea10a8bdc040b936b2d9d1e3" translate="yes" xml:space="preserve">
          <source>Initializes MySQL specific mutex component implementation.</source>
          <target state="translated">MySQL 특정 뮤텍스 구성 요소 구현을 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="19500c74e6bf616441c781164eb6aa77a9632058" translate="yes" xml:space="preserve">
          <source>Initializes Oracle specific mutex component implementation.</source>
          <target state="translated">Oracle 특정 mutex 구성 요소 구현을 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="142836f24de27536e6e2f30ef6c1ba689666353f" translate="yes" xml:space="preserve">
          <source>Initializes PgSQL specific mutex component implementation.</source>
          <target state="translated">PgSQL 특정 뮤텍스 구성 요소 구현을 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="bdf7e1762088769cadf6fce17e9594a394e41661" translate="yes" xml:space="preserve">
          <source>Initializes UrlManager.</source>
          <target state="translated">UrlManager를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="92f182596182178dc3ada47b35e212673ad6a5d2" translate="yes" xml:space="preserve">
          <source>Initializes authenticated user attributes.</source>
          <target state="translated">인증 된 사용자 속성을 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="44eeead23e09f7100e24be51b647cde1ea01278f" translate="yes" xml:space="preserve">
          <source>Initializes client options</source>
          <target state="translated">클라이언트 옵션을 초기화합니다</target>
        </trans-unit>
        <trans-unit id="a4bcac598c2fb71446a83f3fddb78d24f4b86058" translate="yes" xml:space="preserve">
          <source>Initializes extensions and executes bootstrap components.</source>
          <target state="translated">확장을 초기화하고 부트 스트랩 구성 요소를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="63418b854aa1f329fbeefa31ed5abb9a7b5a0083" translate="yes" xml:space="preserve">
          <source>Initializes generic database table based mutex implementation.</source>
          <target state="translated">일반 데이터베이스 테이블 기반 뮤텍스 구현을 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="10a02dd3c4321f9e65c311349a9cb2c359b009d7" translate="yes" xml:space="preserve">
          <source>Initializes information about name and type of all index in the Sphinx.</source>
          <target state="translated">스핑크스의 모든 인덱스 이름 및 유형에 대한 정보를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="2b41d5d488fe9dcb6877325d9accfa718c6f1cf3" translate="yes" xml:space="preserve">
          <source>Initializes mutex component implementation dedicated for UNIX, GNU/Linux, Mac OS X, and other UNIX-like operating systems.</source>
          <target state="translated">UNIX, GNU / Linux, Mac OS X 및 기타 UNIX 유사 운영 체제 전용 mutex 구성 요소 구현을 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="7c98cd73bd563886fd1e2f81255452e02f27b389" translate="yes" xml:space="preserve">
          <source>Initializes panels.</source>
          <target state="translated">패널을 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="670253633ca7e20b6f0f6b5f28c9227280ccc507" translate="yes" xml:space="preserve">
          <source>Initializes the &lt;a href=&quot;yii-filters-accesscontrol#%24rules-detail&quot;&gt;$rules&lt;/a&gt; array by instantiating rule objects from configurations.</source>
          <target state="translated">구성에서 규칙 객체를 인스턴스화 하여 &lt;a href=&quot;yii-filters-accesscontrol#%24rules-detail&quot;&gt;$ rules&lt;/a&gt; 배열을 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="df61805cefa87f9c38bfcd370e364975b0bf4586" translate="yes" xml:space="preserve">
          <source>Initializes the Cache component.</source>
          <target state="translated">캐시 구성 요소를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="afd801846cdb45453ccfa7ae1d54ae5888d8076e" translate="yes" xml:space="preserve">
          <source>Initializes the DB connection component.</source>
          <target state="translated">DB 연결 구성 요소를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="0fccbe8193c2c2d4ed880169998161716239cbc4" translate="yes" xml:space="preserve">
          <source>Initializes the DB connection.</source>
          <target state="translated">DB 연결을 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="ed92eeb27d8136d4280e370dc71fc9646f85b220" translate="yes" xml:space="preserve">
          <source>Initializes the DbCache component.</source>
          <target state="translated">DbCache 구성 요소를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="1e64b09c712c76bf69c5a494164e3196c083dae0" translate="yes" xml:space="preserve">
          <source>Initializes the DbMessageSource component.</source>
          <target state="translated">DbMessageSource 구성 요소를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="bc4f3187874b94367f57cd5f5611b9d2912e50c8" translate="yes" xml:space="preserve">
          <source>Initializes the DbSession component.</source>
          <target state="translated">DbSession 구성 요소를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="b072eb061afed48d79161c46e362ef7d589978ef" translate="yes" xml:space="preserve">
          <source>Initializes the DbTarget component.</source>
          <target state="translated">DbTarget 구성 요소를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="fa7ee1ba32d1b9aeeb32240c349b3814c8f3f853" translate="yes" xml:space="preserve">
          <source>Initializes the FragmentCache object.</source>
          <target state="translated">FragmentCache 개체를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="e26884c940e732795e4852c157b5965968ea4cc6" translate="yes" xml:space="preserve">
          <source>Initializes the MongoDbTarget component.</source>
          <target state="translated">MongoDbTarget 구성 요소를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="a6442f02945b02a93f74e91f049fc346ab458c8f" translate="yes" xml:space="preserve">
          <source>Initializes the Mutex component.</source>
          <target state="translated">Mutex 구성 요소를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="b5bbe27ad7df4cc69816250d797a08a8da751035" translate="yes" xml:space="preserve">
          <source>Initializes the Session component.</source>
          <target state="translated">세션 구성 요소를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="f8f3f4331bea110bce3dfea352ade952ca42f5c4" translate="yes" xml:space="preserve">
          <source>Initializes the action.</source>
          <target state="translated">동작을 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="ce0c174ceb8af15700aff4a38c51e9f3544365eb" translate="yes" xml:space="preserve">
          <source>Initializes the application component.</source>
          <target state="translated">응용 프로그램 구성 요소를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="e67c3be4e756ca776750317ad4bdea87d7f0d1b7" translate="yes" xml:space="preserve">
          <source>Initializes the bundle.</source>
          <target state="translated">번들을 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="7d1c6227a025cbe089f7a7774de272c245d7c24e" translate="yes" xml:space="preserve">
          <source>Initializes the component by configuring the default message categories.</source>
          <target state="translated">기본 메시지 범주를 구성하여 구성 요소를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="e6bbd5d2931b613f33c3b48e6bdf504489c82050" translate="yes" xml:space="preserve">
          <source>Initializes the component.</source>
          <target state="translated">구성 요소를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="1ff780a75b126503c3778b4fa72703553277d654" translate="yes" xml:space="preserve">
          <source>Initializes the default button rendering callback for single button</source>
          <target state="translated">단일 버튼에 대한 기본 버튼 렌더링 콜백을 초기화합니다</target>
        </trans-unit>
        <trans-unit id="b6efa85a6a2aee4c2619bcaec1d820644f6cbb7a" translate="yes" xml:space="preserve">
          <source>Initializes the default button rendering callbacks.</source>
          <target state="translated">기본 버튼 렌더링 콜백을 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="ded69346230122835907d0079fa1ea5d6a7a5578" translate="yes" xml:space="preserve">
          <source>Initializes the detail view.</source>
          <target state="translated">상세도를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="8d6b246f880a8ba9b5a365a42c5168734116c150" translate="yes" xml:space="preserve">
          <source>Initializes the grid view.</source>
          <target state="translated">격자보기를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="76d148ef3491068666f35ec5925bc3a52a430190" translate="yes" xml:space="preserve">
          <source>Initializes the logger by registering &lt;a href=&quot;yii-log-logger#flush()-detail&quot;&gt;flush()&lt;/a&gt; as a shutdown function.</source>
          <target state="translated">&lt;a href=&quot;yii-log-logger#flush()-detail&quot;&gt;flush ()&lt;/a&gt; 를 종료 기능으로 등록하여 로거를 초기화합니다 .</target>
        </trans-unit>
        <trans-unit id="22acedcdcd5e351b54488486230c46378d043e28" translate="yes" xml:space="preserve">
          <source>Initializes the migration.</source>
          <target state="translated">마이그레이션을 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="a9d15a56f7e9305b63d8db596d0bc3df9076b5fc" translate="yes" xml:space="preserve">
          <source>Initializes the module.</source>
          <target state="translated">모듈을 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="cc2058d972ac1ce9084f899484a2c772f989b0dc" translate="yes" xml:space="preserve">
          <source>Initializes the object with the given configuration &lt;code&gt;$config&lt;/code&gt;.</source>
          <target state="translated">주어진 구성 &lt;code&gt;$config&lt;/code&gt; 객체를 초기화합니다 .</target>
        </trans-unit>
        <trans-unit id="2a2ebcb62e07bfa23fe63ff902381554659598f7" translate="yes" xml:space="preserve">
          <source>Initializes the object.</source>
          <target state="translated">객체를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="960f35e87f34e9197eb23444c1df22c411aac44c" translate="yes" xml:space="preserve">
          <source>Initializes the pager.</source>
          <target state="translated">호출기를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="585d5607f12a3969f864fd206d39423586de087e" translate="yes" xml:space="preserve">
          <source>Initializes the redis Cache component.</source>
          <target state="translated">redis 캐시 구성 요소를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="4162605a32d8a4305ce8b03449544e56cb73d0f7" translate="yes" xml:space="preserve">
          <source>Initializes the redis Mutex component.</source>
          <target state="translated">redis Mutex 구성 요소를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="f096e311f53101d14d480cbbbe0e8274e91821cc" translate="yes" xml:space="preserve">
          <source>Initializes the redis Session component.</source>
          <target state="translated">redis 세션 구성 요소를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="300e055eaff3119ea26b221786e378f629b3f86f" translate="yes" xml:space="preserve">
          <source>Initializes the route.</source>
          <target state="translated">경로를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="3822532e5e6f3a373e145076be61482b2d2bf093" translate="yes" xml:space="preserve">
          <source>Initializes the sorter.</source>
          <target state="translated">분류기를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="a36e1f98155f489853f5269d54dcaa5575ce2010" translate="yes" xml:space="preserve">
          <source>Initializes the view component.</source>
          <target state="translated">뷰 컴포넌트를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="e769f0ac978f54f6e8d71a32d13085bdc2e240de" translate="yes" xml:space="preserve">
          <source>Initializes the view.</source>
          <target state="translated">보기를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="daf999cf79369c4690f8c4173e650d121cd7901f" translate="yes" xml:space="preserve">
          <source>Initializes the widget options.</source>
          <target state="translated">위젯 옵션을 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="5ee0a73357c706f6366227bda4effb01e2119791" translate="yes" xml:space="preserve">
          <source>Initializes the widget.</source>
          <target state="translated">위젯을 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="d4350faccf44a9137e5b92ea075883a90d174d8c" translate="yes" xml:space="preserve">
          <source>Initializes this application component.</source>
          <target state="translated">이 응용 프로그램 구성 요소를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="c261c57f05a0c92c8c281423671937ed888f1ed6" translate="yes" xml:space="preserve">
          <source>Initializes this component by ensuring the existence of the cache path.</source>
          <target state="translated">캐시 경로가 있는지 확인하여이 구성 요소를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="de3bbc19e58e3ad4a69013a5f66908e913c75558" translate="yes" xml:space="preserve">
          <source>Initializes this component.</source>
          <target state="translated">이 컴퍼넌트를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="cb2999d9364098818b312b69cf21d725718ba247" translate="yes" xml:space="preserve">
          <source>Initializes this rule.</source>
          <target state="translated">이 규칙을 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="cef2cf7efb3d11b6e4f06ec176884d1144eea489" translate="yes" xml:space="preserve">
          <source>Inline Actions</source>
          <target state="translated">인라인 액션</target>
        </trans-unit>
        <trans-unit id="bb3336fa39fec4be365b76323158beafb5003a9c" translate="yes" xml:space="preserve">
          <source>Inline Validators</source>
          <target state="translated">인라인 검사기</target>
        </trans-unit>
        <trans-unit id="97d4a8593c24cd6f8730add5bc1fbcdc6670657c" translate="yes" xml:space="preserve">
          <source>Inline actions are the most commonly defined actions because they take little effort to create. However, if you plan to reuse the same action in different places, or if you want to redistribute an action, you should consider defining it as a &lt;em&gt;standalone action&lt;/em&gt;.</source>
          <target state="translated">인라인 조치는 작성하는 데 거의 노력이 들지 않으므로 가장 일반적으로 정의 된 조치입니다. 그러나 다른 위치에서 동일한 조치를 재사용하거나 조치를 재분배하려는 경우이를 &lt;em&gt;독립형 조치&lt;/em&gt; 로 정의하는 것을 고려해야 &lt;em&gt;합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="642e40c88280f47676f64b5a4c250937145c873b" translate="yes" xml:space="preserve">
          <source>Inline actions refer to the actions that are defined in terms of action methods as we just described.</source>
          <target state="translated">인라인 조치는 방금 설명한대로 조치 방법으로 정의 된 조치를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="3bdfb11bae51f20f1ee7e1c1a1279cf43650c0f0" translate="yes" xml:space="preserve">
          <source>Inline scripts are useful for configuration, dynamically generated code and small snippets created by reusable frontend code contained in &lt;a href=&quot;guide-structure-widgets&quot;&gt;widgets&lt;/a&gt;. The &lt;a href=&quot;yii-web-view#registerJs()-detail&quot;&gt;registerJs()&lt;/a&gt; method for adding these can be used as follows:</source>
          <target state="translated">인라인 스크립트는 구성, 동적 생성 코드 및 &lt;a href=&quot;guide-structure-widgets&quot;&gt;위젯에&lt;/a&gt; 포함 된 재사용 가능한 프론트 엔드 코드로 작성된 작은 스 니펫에 유용 합니다 . 이를 추가하기위한 &lt;a href=&quot;yii-web-view#registerJs()-detail&quot;&gt;registerJs ()&lt;/a&gt; 메소드는 다음과 같이 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="11c3b1b7ca351ef4ccdedeeccf19ed99c9c13436" translate="yes" xml:space="preserve">
          <source>InlineAction represents an action that is defined as a controller method.</source>
          <target state="translated">InlineAction은 컨트롤러 메소드로 정의 된 조치를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="30c5649eded82d3e3be576f33d359cd9996ec234" translate="yes" xml:space="preserve">
          <source>InlineValidator represents a validator which is defined as a method in the object being validated.</source>
          <target state="translated">InlineValidator는 유효성을 검사 할 개체의 메서드로 정의 된 유효성 검사기를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="c03caeef02108c6f2afa47e5c5e2a5d0a67d8091" translate="yes" xml:space="preserve">
          <source>Inner joins with the specified relations.</source>
          <target state="translated">내부는 지정된 관계와 결합합니다.</target>
        </trans-unit>
        <trans-unit id="c3e25ca576e396f7f7ca07c51c68d0045face42a" translate="yes" xml:space="preserve">
          <source>Input CSS file name.</source>
          <target state="translated">CSS 파일 이름을 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="df5d437a42f572d0e0a1c5d22258b521cd8ca7e7" translate="yes" xml:space="preserve">
          <source>Input Fields</source>
          <target state="translated">입력 필드</target>
        </trans-unit>
        <trans-unit id="48706e56aa935bef2083be3ad06d7a71f3624f45" translate="yes" xml:space="preserve">
          <source>Input Names and Values</source>
          <target state="translated">입력 이름과 값</target>
        </trans-unit>
        <trans-unit id="0ccf7df786c4c24c937ef4429a0248a86f57588f" translate="yes" xml:space="preserve">
          <source>Input array with replaced placeholder keys</source>
          <target state="translated">자리 표시 자 키가 교체 된 입력 배열</target>
        </trans-unit>
        <trans-unit id="6d206308e60db70d1b0e69e6818ee2fca5a79400" translate="yes" xml:space="preserve">
          <source>Input name.</source>
          <target state="translated">입력 이름.</target>
        </trans-unit>
        <trans-unit id="b040d1819589fb36c90f50dd95e60c4dda95cac0" translate="yes" xml:space="preserve">
          <source>Input parameters (name =&amp;gt; value) for the SQL execution. See &lt;a href=&quot;yii-db-command#execute()-detail&quot;&gt;yii\db\Command::execute()&lt;/a&gt; for more details.</source>
          <target state="translated">SQL 실행을위한 입력 매개 변수 (이름 =&amp;gt; 값) 자세한 내용은 &lt;a href=&quot;yii-db-command#execute()-detail&quot;&gt;yii \ db \ Command :: execute ()&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2194413609b4f971534953bb2ee656c00a1de56c" translate="yes" xml:space="preserve">
          <source>Input string</source>
          <target state="translated">입력 문자열</target>
        </trans-unit>
        <trans-unit id="58e49189baab320a0ada7a4875f1c82eb580df6d" translate="yes" xml:space="preserve">
          <source>Input string to check</source>
          <target state="translated">확인할 입력 문자열</target>
        </trans-unit>
        <trans-unit id="0dac1a70c96f388509f66290a3d22d9300e6b8e7" translate="yes" xml:space="preserve">
          <source>Input type, can be:</source>
          <target state="translated">입력 유형은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4247619c2cd9ede80b6fff35d0c3d7200393f8dd" translate="yes" xml:space="preserve">
          <source>Input type, can be: - 'checkbox' - 'radio'</source>
          <target state="translated">입력 유형 :- '확인란'- '라디오'</target>
        </trans-unit>
        <trans-unit id="a9e020d632ebb33c3a6a2f5cc2af3d36d9ba1540" translate="yes" xml:space="preserve">
          <source>Input value</source>
          <target state="translated">입력 값</target>
        </trans-unit>
        <trans-unit id="103b73f8b8612de7f92ed544d130aab2ccb3dead" translate="yes" xml:space="preserve">
          <source>Input value.</source>
          <target state="translated">입력 값.</target>
        </trans-unit>
        <trans-unit id="72f802b268034dc5346369ad70e75693d101634f" translate="yes" xml:space="preserve">
          <source>InputWidget is the base class for widgets that collect user inputs.</source>
          <target state="translated">InputWidget은 사용자 입력을 수집하는 위젯의 기본 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="fe4fa9ffdbf4577fd592df056d6c2025eab35a46" translate="yes" xml:space="preserve">
          <source>Inserted data, each row will have &quot;_id&quot; key assigned to it.</source>
          <target state="translated">데이터를 삽입하면 각 행에 &quot;_id&quot;키가 할당됩니다.</target>
        </trans-unit>
        <trans-unit id="94403dc7609bd5e3d3fd6768c751909856bc73d9" translate="yes" xml:space="preserve">
          <source>Inserted record ID, &lt;code&gt;false&lt;/code&gt; - on failure.</source>
          <target state="translated">삽입 된 레코드 ID, &lt;code&gt;false&lt;/code&gt; -실패.</target>
        </trans-unit>
        <trans-unit id="9b0c3395b88187ccbfc85a2801cd30eb7752d408" translate="yes" xml:space="preserve">
          <source>Inserts a document into an index</source>
          <target state="translated">문서를 색인에 삽입</target>
        </trans-unit>
        <trans-unit id="f6e52cde7fa2f8dbd9923be91ebe47f32f99a080" translate="yes" xml:space="preserve">
          <source>Inserts a document into the associated index using the attribute values of this record.</source>
          <target state="translated">이 레코드의 속성 값을 사용하여 문서를 관련 색인에 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="dc4b8a44766f134b9d8265d8695b4c7f5c14b762" translate="yes" xml:space="preserve">
          <source>Inserts a row into the associated Mongo collection using the attribute values of this record.</source>
          <target state="translated">이 레코드의 속성 값을 사용하여 연관된 Mongo 콜렉션에 행을 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="ef32118a9ba09a14cc4516fb9f82a0bac1db006b" translate="yes" xml:space="preserve">
          <source>Inserts a row into the associated Sphinx index using the attribute values of this record.</source>
          <target state="translated">이 레코드의 속성 값을 사용하여 관련 Sphinx 색인에 행을 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="1816c802c05f0969666a55e6312cd44681a7a500" translate="yes" xml:space="preserve">
          <source>Inserts a row into the associated database table using the attribute values of this record.</source>
          <target state="translated">이 레코드의 속성 값을 사용하여 연관된 데이터베이스 테이블에 행을 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="11edb8fc62bf3fc7f91afbfe6371f2de6fe9cba9" translate="yes" xml:space="preserve">
          <source>Inserts an ActiveRecord into DB without considering transaction.</source>
          <target state="translated">트랜잭션을 고려하지 않고 ActiveRecord를 DB에 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="79d5584ce263b0b34b1786daea6d1120bc19fb32" translate="yes" xml:space="preserve">
          <source>Inserts batch of new documents into collection.</source>
          <target state="translated">새로운 문서 묶음을 컬렉션에 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="9dd12eaed0a08018acf670a1d47efe93c511313e" translate="yes" xml:space="preserve">
          <source>Inserts new data into collection.</source>
          <target state="translated">새로운 데이터를 컬렉션에 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="3cfbe27efcdaa47639c005f377696ad1e4271e1c" translate="yes" xml:space="preserve">
          <source>Inserts new document into collection.</source>
          <target state="translated">새 문서를 컬렉션에 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="1c9f5b8e44c7191e2537f31e05e12769d0067158" translate="yes" xml:space="preserve">
          <source>Inserts several new rows into collection.</source>
          <target state="translated">몇 개의 새로운 행을 컬렉션에 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="bf2eee84e640e4fd3496ccb0d9d8b0c2b5228815" translate="yes" xml:space="preserve">
          <source>Inserts the record into the database using the attribute values of this record.</source>
          <target state="translated">이 레코드의 속성 값을 사용하여 데이터베이스에 레코드를 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="95b5771df0479ee4cf97eb31d2fb3d39b695097c" translate="yes" xml:space="preserve">
          <source>Inside your controller there are a few ways to implement authorization. If you want granular permissions that separate access to adding and deleting, then you need to check access for each action. You can either use the above condition in each action method, or use &lt;a href=&quot;yii-filters-accesscontrol&quot;&gt;yii\filters\AccessControl&lt;/a&gt;:</source>
          <target state="translated">컨트롤러 내부에는 인증을 구현하는 몇 가지 방법이 있습니다. 추가 및 삭제에 대한 액세스를 분리하는 세분화 된 권한을 원하는 경우 각 작업에 대한 액세스 권한을 확인해야합니다. 각 조치 메소드에서 위의 조건을 사용하거나 &lt;a href=&quot;yii-filters-accesscontrol&quot;&gt;yii \ filters \ AccessControl을 사용할 수 있습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="b53fd13b9fec1a5e462e7bd89731997206b86335" translate="yes" xml:space="preserve">
          <source>Installing Composer</source>
          <target state="translated">Composer 설치</target>
        </trans-unit>
        <trans-unit id="94192738c8065f994879b8b91734a6608f420e1f" translate="yes" xml:space="preserve">
          <source>Installing Extensions Manually</source>
          <target state="translated">확장 기능 수동 설치</target>
        </trans-unit>
        <trans-unit id="46b981e97a4ea8c2ec0403fa3c275b1fe8ccb413" translate="yes" xml:space="preserve">
          <source>Installing Yii</source>
          <target state="translated">Yii 설치</target>
        </trans-unit>
        <trans-unit id="3829a4b0a280f4637e0d3bd035e95fa412ce25a2" translate="yes" xml:space="preserve">
          <source>Installing Yii from an archive file involves three steps:</source>
          <target state="translated">아카이브 파일에서 Yii를 설치하려면 다음 세 단계가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="c1e820aecee17ad3e4d768df0da74050fd15d27b" translate="yes" xml:space="preserve">
          <source>Installing from an Archive File</source>
          <target state="translated">아카이브 파일에서 설치</target>
        </trans-unit>
        <trans-unit id="85bf6a7d0b6bacb168397719f473b9ef92d613e3" translate="yes" xml:space="preserve">
          <source>Installing via Composer</source>
          <target state="translated">Composer를 통해 설치</target>
        </trans-unit>
        <trans-unit id="190de99eb315315ab7a29177474e35d219cd57d3" translate="yes" xml:space="preserve">
          <source>Instance is mainly used in two places:</source>
          <target state="translated">인스턴스는 주로 두 곳에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b922dec9a4c45821cc2f06c79cd2b2ecfd56b685" translate="yes" xml:space="preserve">
          <source>Instance represents a reference to a named object in a dependency injection (DI) container or a service locator.</source>
          <target state="translated">인스턴스는 종속성 주입 (DI) 컨테이너 또는 서비스 로케이터에서 명명 된 객체에 대한 참조를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="f091fdab5a1a6500405887cdd5448baf822164da" translate="yes" xml:space="preserve">
          <source>Instantiates and configures the Smarty object.</source>
          <target state="translated">Smarty 개체를 인스턴스화하고 구성합니다.</target>
        </trans-unit>
        <trans-unit id="54271f22dc7286475ff1ed18402d5835dc383898" translate="yes" xml:space="preserve">
          <source>Instead of actually applying or reverting migrations, sometimes you may simply want to mark that your database has been upgraded to a particular migration. This often happens when you manually change the database to a particular state and you do not want the migration(s) for that change to be re-applied later. You can achieve this goal with the following command:</source>
          <target state="translated">실제로 마이그레이션을 적용하거나 되 돌리는 대신 데이터베이스가 특정 마이그레이션으로 업그레이드되었음을 표시 할 수도 있습니다. 데이터베이스를 특정 상태로 수동 변경하고 나중에 해당 변경에 대한 마이그레이션을 다시 적용하지 않으려는 경우에 종종 발생합니다. 다음 명령으로이 목표를 달성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="87198a7795a15848a302a47e84e5f18c288b43df" translate="yes" xml:space="preserve">
          <source>Instead of directly writing CSS and/or JavaScript code, developers often write them in some extended syntax and use special tools to convert it into CSS/JavaScript. For example, for CSS code you may use &lt;a href=&quot;http://lesscss.org/&quot;&gt;LESS&lt;/a&gt; or &lt;a href=&quot;http://sass-lang.com/&quot;&gt;SCSS&lt;/a&gt;; and for JavaScript you may use &lt;a href=&quot;http://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt;.</source>
          <target state="translated">CSS 및 / 또는 JavaScript 코드를 직접 작성하는 대신 개발자는 종종 확장 구문으로 작성하고 특수 도구를 사용하여 CSS / JavaScript로 변환합니다. 예를 들어 CSS 코드의 경우 &lt;a href=&quot;http://lesscss.org/&quot;&gt;LESS&lt;/a&gt; 또는 &lt;a href=&quot;http://sass-lang.com/&quot;&gt;SCSS를&lt;/a&gt; 사용할 수 있습니다 . JavaScript의 경우 &lt;a href=&quot;http://www.typescriptlang.org/&quot;&gt;TypeScript를&lt;/a&gt; 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="61846135400171c7e17ff0131d792d10f4e7ead8" translate="yes" xml:space="preserve">
          <source>Instead of entering the same option values every time you run the migration command, you may configure it once for all in the application configuration like shown below:</source>
          <target state="translated">마이그레이션 명령을 실행할 때마다 동일한 옵션 값을 입력하는 대신 아래와 같이 응용 프로그램 구성에서 모두 한 번만 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ba2b13e5d275bc7464ec9c952a2e787efa562747" translate="yes" xml:space="preserve">
          <source>Instead of publishing assets by file copying, you may consider using symbolic links, if your OS and Web server allow. This feature can be enabled by setting &lt;a href=&quot;yii-web-assetmanager#%24linkAssets-detail&quot;&gt;linkAssets&lt;/a&gt; to be &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">파일 복사로 자산을 게시하는 대신 OS 및 웹 서버가 허용하는 경우 심볼릭 링크 사용을 고려할 수 있습니다. &lt;a href=&quot;yii-web-assetmanager#%24linkAssets-detail&quot;&gt;linkAssets&lt;/a&gt; 를 &lt;code&gt;true&lt;/code&gt; 로 설정 하여이 기능을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3a474af5236c02af7167b64236c27df9232b3c5c" translate="yes" xml:space="preserve">
          <source>Instead of supplying correct username attacker could give your applications something like &lt;code&gt;'; DROP TABLE user; --&lt;/code&gt;. Resulting SQL will be the following:</source>
          <target state="translated">올바른 사용자 이름을 제공하는 대신 공격자가 애플리케이션에 &lt;code&gt;'; DROP TABLE user; --&lt;/code&gt; . 결과 SQL은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a67d8d7c704681e689d46a9abdcea343d2bd9b06" translate="yes" xml:space="preserve">
          <source>Instead of translating individual text messages, sometimes you may want to translate a whole view script. To achieve this goal, simply translate the view and save it under a subdirectory whose name is the same as target language. For example, if you want to translate the view script &lt;code&gt;views/site/index.php&lt;/code&gt; and the target language is &lt;code&gt;ru-RU&lt;/code&gt;, you may translate the view and save it as the file &lt;code&gt;views/site/ru-RU/index.php&lt;/code&gt;. Now whenever you call &lt;a href=&quot;yii-base-view#renderFile()-detail&quot;&gt;yii\base\View::renderFile()&lt;/a&gt; or any method that invoke this method (e.g. &lt;a href=&quot;yii-base-controller#render()-detail&quot;&gt;yii\base\Controller::render()&lt;/a&gt;) to render the view &lt;code&gt;views/site/index.php&lt;/code&gt;, it will end up rendering the translated view &lt;code&gt;views/site/ru-RU/index.php&lt;/code&gt;, instead.</source>
          <target state="translated">개별 문자 메시지를 번역하는 대신 전체보기 스크립트를 번역 할 수도 있습니다. 이 목표를 달성하려면보기를 변환하고 이름이 대상 언어와 동일한 서브 디렉토리에 저장하십시오. 예를 들어, 뷰 스크립트 &lt;code&gt;views/site/index.php&lt;/code&gt; 를 번역하고 대상 언어가 &lt;code&gt;ru-RU&lt;/code&gt; 인 경우 뷰를 번역하여 &lt;code&gt;views/site/ru-RU/index.php&lt;/code&gt; 파일로 저장할 수 있습니다 . 이제 &lt;a href=&quot;yii-base-view#renderFile()-detail&quot;&gt;yii \ base \ View :: renderFile ()&lt;/a&gt; 또는이 메소드를 호출하는 메소드 (예 : &lt;a href=&quot;yii-base-controller#render()-detail&quot;&gt;yii \ base \ Controller :: render ()&lt;/a&gt; )를 호출 하여 view &lt;code&gt;views/site/index.php&lt;/code&gt; 를 렌더링 할 때마다 종료됩니다. 대신 번역 된 뷰 &lt;code&gt;views/site/ru-RU/index.php&lt;/code&gt; 렌더링 .</target>
        </trans-unit>
        <trans-unit id="40c2096e78beb32cbe63471aaba3fc0d8e0ea23e" translate="yes" xml:space="preserve">
          <source>Instead of using &lt;code&gt;fileMap&lt;/code&gt; you can simply use the convention of the category mapping to the same named file. Now you can use &lt;code&gt;Menu::t('messages', 'new messages {messages}', ['{messages}' =&amp;gt; 10])&lt;/code&gt; directly.</source>
          <target state="translated">&lt;code&gt;fileMap&lt;/code&gt; 을 사용하는 대신 동일한 명명 된 파일에 대한 범주 매핑 규칙을 사용할 수 있습니다. 이제 &lt;code&gt;Menu::t('messages', 'new messages {messages}', ['{messages}' =&amp;gt; 10])&lt;/code&gt; 직접 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1d79346606bd16622cb5ce534f3441a8504da23a" translate="yes" xml:space="preserve">
          <source>Interface for classes that parse the raw request body into a parameters array.</source>
          <target state="translated">원시 요청 본문을 매개 변수 배열로 구문 분석하는 클래스의 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="2e64df73956dc9f366b6debf17bcc754875788f2" translate="yes" xml:space="preserve">
          <source>Interface yii\authclient\ClientInterface</source>
          <target state="translated">인터페이스 yii \ authclient \ ClientInterface</target>
        </trans-unit>
        <trans-unit id="47e6fa02edc4ef53d6701680e0509ea86bf1e4a1" translate="yes" xml:space="preserve">
          <source>Interface yii\authclient\StateStorageInterface</source>
          <target state="translated">인터페이스 yii \ authclient \ StateStorageInterface</target>
        </trans-unit>
        <trans-unit id="a0c2a283035c8447d452d140d608b3ea34a9ae44" translate="yes" xml:space="preserve">
          <source>Interface yii\base\Arrayable</source>
          <target state="translated">인터페이스 yii \ base \ Arrayable</target>
        </trans-unit>
        <trans-unit id="f9348fa8fea4b947559c8276e1c19882f6bf870c" translate="yes" xml:space="preserve">
          <source>Interface yii\base\BootstrapInterface</source>
          <target state="translated">인터페이스 yii \ base \ BootstrapInterface</target>
        </trans-unit>
        <trans-unit id="f1a835b623f61839c543c4c354fb2437bbec6885" translate="yes" xml:space="preserve">
          <source>Interface yii\base\Configurable</source>
          <target state="translated">인터페이스 yii \ base \ Configurable</target>
        </trans-unit>
        <trans-unit id="8145b87ccf48dd0a4d69b85f7037d177cf61e921" translate="yes" xml:space="preserve">
          <source>Interface yii\base\ViewContextInterface</source>
          <target state="translated">인터페이스 yii \ base \ ViewContextInterface</target>
        </trans-unit>
        <trans-unit id="434e73ec1f3c8f176b060bb141e7b710ecc68746" translate="yes" xml:space="preserve">
          <source>Interface yii\caching\CacheInterface</source>
          <target state="translated">인터페이스 yii \ caching \ CacheInterface</target>
        </trans-unit>
        <trans-unit id="96c6034e8e14d867e3fb530e5e9850e815420169" translate="yes" xml:space="preserve">
          <source>Interface yii\data\DataProviderInterface</source>
          <target state="translated">인터페이스 yii \ data \ DataProviderInterface</target>
        </trans-unit>
        <trans-unit id="5252f5bd1cd9fb41d7b736dcbebacb24ecb235be" translate="yes" xml:space="preserve">
          <source>Interface yii\db\ActiveQueryInterface</source>
          <target state="translated">인터페이스 yii \ db \ ActiveQueryInterface</target>
        </trans-unit>
        <trans-unit id="613b51b10a0300d57ef23980ecb0418dc08b03ca" translate="yes" xml:space="preserve">
          <source>Interface yii\db\ActiveRecordInterface</source>
          <target state="translated">인터페이스 yii \ db \ ActiveRecordInterface</target>
        </trans-unit>
        <trans-unit id="6f6bf76a7f1e077d267dad182984d3cd91ec202a" translate="yes" xml:space="preserve">
          <source>Interface yii\db\MigrationInterface</source>
          <target state="translated">인터페이스 yii \ db \ MigrationInterface</target>
        </trans-unit>
        <trans-unit id="d44f129e06b1fcff2c69051e092e1fe9023efe16" translate="yes" xml:space="preserve">
          <source>Interface yii\db\QueryInterface</source>
          <target state="translated">인터페이스 yii \ db \ QueryInterface</target>
        </trans-unit>
        <trans-unit id="f5ed6426bfd34fc7569556b3cb9ae86477027907" translate="yes" xml:space="preserve">
          <source>Interface yii\debug\components\search\matchers\MatcherInterface</source>
          <target state="translated">인터페이스 yii \ debug \ components \ search \ matchers \ MatcherInterface</target>
        </trans-unit>
        <trans-unit id="a5b048f87c4ba8ec0c9eae493c7c7ce2f9d1151d" translate="yes" xml:space="preserve">
          <source>Interface yii\debug\models\search\UserSearchInterface</source>
          <target state="translated">인터페이스 yii \ debug \ models \ search \ UserSearchInterface</target>
        </trans-unit>
        <trans-unit id="fa6aeb3fc2d12c482beb79bc7a25c199c1c8c1ef" translate="yes" xml:space="preserve">
          <source>Interface yii\filters\RateLimitInterface</source>
          <target state="translated">인터페이스 yii \ filters \ RateLimitInterface</target>
        </trans-unit>
        <trans-unit id="70b21e72dcc7a7bc099e45ff68390ad2e6efd5b2" translate="yes" xml:space="preserve">
          <source>Interface yii\filters\auth\AuthInterface</source>
          <target state="translated">인터페이스 yii \ filters \ auth \ AuthInterface</target>
        </trans-unit>
        <trans-unit id="01a4c481c64d75df7379e9b57e9ecf30cc790f7e" translate="yes" xml:space="preserve">
          <source>Interface yii\httpclient\FormatterInterface</source>
          <target state="translated">인터페이스 yii \ httpclient \ FormatterInterface</target>
        </trans-unit>
        <trans-unit id="6e20152ef5f704bfb0398d3c2dcdf9e690424edb" translate="yes" xml:space="preserve">
          <source>Interface yii\httpclient\ParserInterface</source>
          <target state="translated">인터페이스 yii \ httpclient \ ParserInterface</target>
        </trans-unit>
        <trans-unit id="0784064d46f0b15165ba8cf710a9a6f56ac68f2b" translate="yes" xml:space="preserve">
          <source>Interface yii\mail\MailerInterface</source>
          <target state="translated">인터페이스 yii \ mail \ MailerInterface</target>
        </trans-unit>
        <trans-unit id="c96d3b021ab4844b56494f4f59b5b3fb9c0e0527" translate="yes" xml:space="preserve">
          <source>Interface yii\mail\MessageInterface</source>
          <target state="translated">인터페이스 yii \ mail \ MessageInterface</target>
        </trans-unit>
        <trans-unit id="366f28ebb01ee88bdf4745ac927f364eec5b8714" translate="yes" xml:space="preserve">
          <source>Interface yii\rbac\CheckAccessInterface</source>
          <target state="translated">인터페이스 yii \ rbac \ CheckAccessInterface</target>
        </trans-unit>
        <trans-unit id="80b3aa9add198313bdb04eebcdf27573d2b50db1" translate="yes" xml:space="preserve">
          <source>Interface yii\rbac\ManagerInterface</source>
          <target state="translated">인터페이스 yii \ rbac \ ManagerInterface</target>
        </trans-unit>
        <trans-unit id="dd9c12990586c7d349300b85c5abf58d22bdddaf" translate="yes" xml:space="preserve">
          <source>Interface yii\web\AssetConverterInterface</source>
          <target state="translated">인터페이스 yii \ web \ AssetConverterInterface</target>
        </trans-unit>
        <trans-unit id="17b9167faecd28e1fb2a0bbcb2a644b43c6899d8" translate="yes" xml:space="preserve">
          <source>Interface yii\web\IdentityInterface</source>
          <target state="translated">인터페이스 yii \ web \ IdentityInterface</target>
        </trans-unit>
        <trans-unit id="90ae37c7b4ff7c57786e77c63323c9bdb1ebc8c9" translate="yes" xml:space="preserve">
          <source>Interface yii\web\Linkable</source>
          <target state="translated">인터페이스 yii \ web \ Linkable</target>
        </trans-unit>
        <trans-unit id="251266ee55efea4f724611aa72115696d8ed7612" translate="yes" xml:space="preserve">
          <source>Interface yii\web\RequestParserInterface</source>
          <target state="translated">인터페이스 yii \ web \ RequestParserInterface</target>
        </trans-unit>
        <trans-unit id="1ae71e68adf3eb105abd5c8a9a4a317266872bab" translate="yes" xml:space="preserve">
          <source>Interface yii\web\ResponseFormatterInterface</source>
          <target state="translated">인터페이스 yii \ web \ ResponseFormatterInterface</target>
        </trans-unit>
        <trans-unit id="45fbaa06ae92011d63ead7bc9e0b32a97f2e0b6a" translate="yes" xml:space="preserve">
          <source>Interface yii\web\UrlRuleInterface</source>
          <target state="translated">인터페이스 yii \ web \ UrlRuleInterface</target>
        </trans-unit>
        <trans-unit id="c3a5ace31cf0a4fd6a24f272d8420df6f5f549e5" translate="yes" xml:space="preserve">
          <source>Internal HTTP client.</source>
          <target state="translated">내부 HTTP 클라이언트</target>
        </trans-unit>
        <trans-unit id="3b755f7b857b999860755840e5f0964f6b120c4d" translate="yes" xml:space="preserve">
          <source>Internationalization</source>
          <target state="translated">Internationalization</target>
        </trans-unit>
        <trans-unit id="55678c6233b4e8256403a6d87de8bda0e77808ff" translate="yes" xml:space="preserve">
          <source>Internationalization (I18N) refers to the process of designing a software application so that it can be adapted to various languages and regions without engineering changes. For Web applications, this is of particular importance because the potential users may be worldwide. Yii offers a full spectrum of I18N features that support message translation, view translation, date and number formatting.</source>
          <target state="translated">국제화 (I18N)는 엔지니어링 변경없이 다양한 언어 및 지역에 맞게 소프트웨어 응용 프로그램을 설계하는 프로세스를 말합니다. 웹 응용 프로그램의 경우 이는 잠재적 사용자가 전세계에있을 수 있기 때문에 특히 중요합니다. Yii는 메시지 번역,보기 번역, 날짜 및 숫자 형식을 지원하는 광범위한 I18N 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="ec41529ec988c31d48e2791253f7675f0f07663a" translate="yes" xml:space="preserve">
          <source>Internationalization and Localization</source>
          <target state="translated">국제화 및 현지화</target>
        </trans-unit>
        <trans-unit id="3b345225b8997a0b00986b3ccff1b1f8b9bab1b5" translate="yes" xml:space="preserve">
          <source>InvalidCallException represents an exception caused by calling a method in a wrong way.</source>
          <target state="translated">InvalidCallException은 잘못된 방법으로 메소드를 호출하여 발생한 예외를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="212caccaad772fbea21747ed08a5e69221b90f8d" translate="yes" xml:space="preserve">
          <source>InvalidConfigException represents an exception caused by incorrect object configuration.</source>
          <target state="translated">InvalidConfigException은 잘못된 개체 구성으로 인한 예외를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="dd51af202c401c05f263fec1cf8d0ab7f4a2f1af" translate="yes" xml:space="preserve">
          <source>InvalidParamException represents an exception caused by invalid parameters passed to a method.</source>
          <target state="translated">InvalidParamException은 메서드에 전달 된 잘못된 매개 변수로 인한 예외를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="0832988a1cf88136c2c529b068a1b86e9ca606f0" translate="yes" xml:space="preserve">
          <source>InvalidRouteException represents an exception caused by an invalid route.</source>
          <target state="translated">InvalidRouteException은 유효하지 않은 경로로 인한 예외를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="5410323db3762a7d4ca4b3ee268a8421b445a052" translate="yes" xml:space="preserve">
          <source>InvalidValueException represents an exception caused by a function returning a value of unexpected type.</source>
          <target state="translated">InvalidValueException은 예기치 않은 유형의 값을 리턴하는 함수로 인한 예외를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="ed078df4d003d0b3cd855001e0db2c1f5865f3fc" translate="yes" xml:space="preserve">
          <source>Invalidates RBAC related cache</source>
          <target state="translated">RBAC 관련 캐시를 무효화합니다</target>
        </trans-unit>
        <trans-unit id="4137efe1ea3617156377ecbf8f099c49915a6a78" translate="yes" xml:space="preserve">
          <source>Invalidates all of the cached data items that are associated with any of the specified &lt;a href=&quot;yii-caching-tagdependency#%24tags-detail&quot;&gt;$tags&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;yii-caching-tagdependency#%24tags-detail&quot;&gt;$ tags&lt;/a&gt; 와 연관된 모든 캐시 된 데이터 항목을 무효화 합니다 .</target>
        </trans-unit>
        <trans-unit id="40eae926bb84850c7e2e401ca1aba8fefc88f58f" translate="yes" xml:space="preserve">
          <source>Invalidates precompiled script cache (such as OPCache or APC) for the given file.</source>
          <target state="translated">주어진 파일에 대해 사전 컴파일 된 스크립트 캐시 (예 : OPCache 또는 APC)를 무효화합니다.</target>
        </trans-unit>
        <trans-unit id="72a6aa2eb2ce4c79f3d15f1fe0bcf96592dbc4e2" translate="yes" xml:space="preserve">
          <source>Inverse Relations</source>
          <target state="translated">역관계</target>
        </trans-unit>
        <trans-unit id="5237a71ae84eb0a88d8b429891cd78b9a5d46089" translate="yes" xml:space="preserve">
          <source>Inverts an SQL expressions with &lt;code&gt;NOT&lt;/code&gt; operator.</source>
          <target state="translated">&lt;code&gt;NOT&lt;/code&gt; 연산자를 사용 하여 SQL 표현식을 반전 시킵니다.</target>
        </trans-unit>
        <trans-unit id="81595013b8a47ec2d8e093b03d5f7bf04cbcd2cf" translate="yes" xml:space="preserve">
          <source>Invoke a callback with resolving dependencies in parameters.</source>
          <target state="translated">매개 변수의 종속성을 해결하여 콜백을 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="91dca1b632934189d9d6c880aa7bc4214c9a6563" translate="yes" xml:space="preserve">
          <source>Ip attribute input search value</source>
          <target state="translated">IP 속성 입력 검색 값</target>
        </trans-unit>
        <trans-unit id="302ef212e27e87db676e356a7b80c0951cfde119" translate="yes" xml:space="preserve">
          <source>Is the source data to extract a snippet from. It could be either a single string or array of strings.</source>
          <target state="translated">스 니펫을 추출 할 소스 데이터입니다. 단일 문자열이거나 문자열 배열 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eaa6ecd01685548632bbee726641854e5a1ab02d" translate="yes" xml:space="preserve">
          <source>Is token expired.</source>
          <target state="translated">토큰이 만료되었습니다.</target>
        </trans-unit>
        <trans-unit id="e4b33cfebdea4f3a0d4c2cd23cb8399beaaa2964" translate="yes" xml:space="preserve">
          <source>Is token valid.</source>
          <target state="translated">토큰이 유효합니다.</target>
        </trans-unit>
        <trans-unit id="d35d4477210affed8cfe05ccd3595f4f940e7ea2" translate="yes" xml:space="preserve">
          <source>Issues no error when an insufficient number of arguments have been provided. Instead, the placeholders will not be substituted.</source>
          <target state="translated">불충분 한 수의 인수가 제공된 경우 오류가 발생하지 않습니다. 대신 자리 표시자가 대체되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="90fafd1df93c5da0d163104f07e23e90c26a073f" translate="yes" xml:space="preserve">
          <source>It accepts named arguments and mixed numeric and named arguments.</source>
          <target state="translated">명명 된 인수와 혼합 숫자 및 명명 된 인수를 허용합니다.</target>
        </trans-unit>
        <trans-unit id="2f267867645da8df922bdc8b4c4f126a00b71b3b" translate="yes" xml:space="preserve">
          <source>It adds an additional WHERE condition for the given field and determines the comparison operator based on the first few characters of the given value. The condition is added in the same way as in &lt;a href=&quot;yii-db-querytrait#andFilterWhere()-detail&quot;&gt;andFilterWhere()&lt;/a&gt; so &lt;a href=&quot;yii-db-querytrait#isEmpty()-detail&quot;&gt;empty values&lt;/a&gt; are ignored. The new condition and the existing one will be joined using the &lt;code&gt;AND&lt;/code&gt; operator.</source>
          <target state="translated">주어진 필드에 대한 추가 WHERE 조건을 추가하고 주어진 값의 처음 몇 문자를 기준으로 비교 연산자를 결정합니다. 조건은 &lt;a href=&quot;yii-db-querytrait#andFilterWhere()-detail&quot;&gt;andFilterWhere ()&lt;/a&gt; 와 같은 방식으로 추가 되므로 &lt;a href=&quot;yii-db-querytrait#isEmpty()-detail&quot;&gt;빈 값&lt;/a&gt; 은 무시됩니다. 새 조건과 기존 조건은 &lt;code&gt;AND&lt;/code&gt; 연산자를 사용하여 결합됩니다 .</target>
        </trans-unit>
        <trans-unit id="c43a145728fee1444ace624821b3d4b822029b6f" translate="yes" xml:space="preserve">
          <source>It allows to define allowed HTTP request methods for each action and will throw an HTTP 405 error when the method is not allowed.</source>
          <target state="translated">각 조치에 대해 허용 된 HTTP 요청 메소드를 정의 할 수 있으며 메소드가 허용되지 않으면 HTTP 405 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="90f6b20cb43792a3f75521480aee97ff781b7cb2" translate="yes" xml:space="preserve">
          <source>It allows to fetch not only rows and total rows count, but also a meta information and facet results.</source>
          <target state="translated">행과 총 행 수뿐만 아니라 메타 정보와 패싯 결과도 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="32d22bee08011b2ca7a95df3f084d49b8939aa57" translate="yes" xml:space="preserve">
          <source>It allows to fetch not only rows and total rows count, but full query results including aggregations and so on.</source>
          <target state="translated">행과 총 행 수뿐만 아니라 집계 등을 포함한 전체 쿼리 결과를 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1199a1616d7b035e2dae63f9388ce454979590ea" translate="yes" xml:space="preserve">
          <source>It also handles objects by using the PHP functions serialize() and unserialize().</source>
          <target state="translated">또한 PHP 함수 serialize () 및 unserialize ()를 사용하여 객체를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="7a9217699b2832f178701bede490df16cdc08538" translate="yes" xml:space="preserve">
          <source>It also may change attribute's value if normalization of IPv6 expansion is enabled.</source>
          <target state="translated">IPv6 확장 정규화가 활성화 된 경우 속성 값도 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6a8c9f29b7655a6022e9fe1ec05b097999e21a6c" translate="yes" xml:space="preserve">
          <source>It also supports &lt;a href=&quot;http://redis.io/commands/auth&quot;&gt;the AUTH command&lt;/a&gt; of redis. When the server needs authentication, you can set the &lt;a href=&quot;yii-redis-connection#%24password-detail&quot;&gt;$password&lt;/a&gt; property to authenticate with the server after connect.</source>
          <target state="translated">또한 redis &lt;a href=&quot;http://redis.io/commands/auth&quot;&gt;의 AUTH 명령&lt;/a&gt; 을 지원 합니다 . 서버에 인증이 필요한 경우 연결 후 서버에서 인증 하도록 &lt;a href=&quot;yii-redis-connection#%24password-detail&quot;&gt;$ password&lt;/a&gt; 속성을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d065b2a737f424b6bb2a086d524e74ef12a8d02a" translate="yes" xml:space="preserve">
          <source>It can also be a custom format as specified in the &lt;a href=&quot;http://userguide.icu-project.org/formatparse/datetime#TOC-Date-Time-Format-Syntax&quot;&gt;ICU manual&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://userguide.icu-project.org/formatparse/datetime#TOC-Date-Time-Format-Syntax&quot;&gt;ICU 매뉴얼에&lt;/a&gt; 지정된 사용자 정의 형식 일 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="454aa12e82d2bbc8154a8e17e87458a55b943ef0" translate="yes" xml:space="preserve">
          <source>It can also be a custom format as specified in the &lt;a href=&quot;http://userguide.icu-project.org/formatparse/datetime#TOC-Date-Time-Format-Syntax&quot;&gt;ICU manual&lt;/a&gt;. Alternatively this can be a string prefixed with &lt;code&gt;php:&lt;/code&gt; representing a format that can be recognized by the PHP &lt;a href=&quot;http://php.net/manual/de/function.date.php&quot;&gt;date()&lt;/a&gt;-function.</source>
          <target state="translated">&lt;a href=&quot;http://userguide.icu-project.org/formatparse/datetime#TOC-Date-Time-Format-Syntax&quot;&gt;ICU 매뉴얼에&lt;/a&gt; 지정된 사용자 정의 형식 일 수도 있습니다 . 또는 &lt;code&gt;php:&lt;/code&gt; 접두사가 붙은 문자열 일 수도 있습니다. PHP &lt;a href=&quot;http://php.net/manual/de/function.date.php&quot;&gt;date ()&lt;/a&gt; 함수 가 인식 할 수있는 형식을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="5133633d36549fbebf4958e0a82525110ad9f120" translate="yes" xml:space="preserve">
          <source>It can also be a custom format as specified in the &lt;a href=&quot;http://userguide.icu-project.org/formatparse/datetime#TOC-Date-Time-Format-Syntax&quot;&gt;ICU manual&lt;/a&gt;. Alternatively this can be a string prefixed with &lt;code&gt;php:&lt;/code&gt; representing a format that can be recognized by the PHP &lt;a href=&quot;http://php.net/manual/en/function.date.php&quot;&gt;date()&lt;/a&gt;-function.</source>
          <target state="translated">&lt;a href=&quot;http://userguide.icu-project.org/formatparse/datetime#TOC-Date-Time-Format-Syntax&quot;&gt;ICU 매뉴얼에&lt;/a&gt; 지정된 사용자 정의 형식 일 수도 있습니다 . 또는 &lt;code&gt;php:&lt;/code&gt; 접두사가 붙은 문자열 일 수도 있습니다. PHP &lt;a href=&quot;http://php.net/manual/en/function.date.php&quot;&gt;date ()&lt;/a&gt; 함수 가 인식 할 수있는 형식을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="75fe673e5394f576a5d11a8507b0c0b6ec22bfbf" translate="yes" xml:space="preserve">
          <source>It can also parse internationalized dates in a specific &lt;a href=&quot;yii-validators-datevalidator#%24locale-detail&quot;&gt;$locale&lt;/a&gt; like e.g. &lt;code&gt;12 мая 2014&lt;/code&gt; when &lt;a href=&quot;yii-validators-datevalidator#%24format-detail&quot;&gt;$format&lt;/a&gt; is configured to use a time pattern in ICU format.</source>
          <target state="translated">또한 &lt;a href=&quot;yii-validators-datevalidator#%24format-detail&quot;&gt;$ format&lt;/a&gt; 이 ICU 형식의 시간 패턴을 사용하도록 구성된 경우 와 같이 특정 &lt;a href=&quot;yii-validators-datevalidator#%24locale-detail&quot;&gt;$ locale&lt;/a&gt; 에서 국제화 된 날짜를 구문 분석 할 수 있습니다 ( 예 : &lt;code&gt;12 мая 2014&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="a27990bf66f0d948f795885b7a43141c8f274077" translate="yes" xml:space="preserve">
          <source>It can correctly identify the recursively referenced objects in a complex object structure. It also has a recursive depth control to avoid indefinite recursive display of some peculiar variables.</source>
          <target state="translated">복잡한 객체 구조에서 재귀 적으로 참조되는 객체를 올바르게 식별 할 수 있습니다. 또한 특정 변수의 무한 재귀 표시를 피하기 위해 재귀 깊이 제어 기능이 있습니다.</target>
        </trans-unit>
        <trans-unit id="11d519ecbf2d2361f4b5d76a28bc37f5b72f996f" translate="yes" xml:space="preserve">
          <source>It checks if extension required is loaded.</source>
          <target state="translated">필요한 확장이로드되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="4e9a32e88c2062df79e089e3d217fcbbc68b2221" translate="yes" xml:space="preserve">
          <source>It could be useful to specify extra configuration that is applied to each rule contained within &lt;a href=&quot;yii-rest-urlrule&quot;&gt;yii\rest\UrlRule&lt;/a&gt;. A good example would be specifying defaults for &lt;code&gt;expand&lt;/code&gt; parameter:</source>
          <target state="translated">&lt;a href=&quot;yii-rest-urlrule&quot;&gt;yii \ rest \ UrlRule&lt;/a&gt; 내에 포함 된 각 규칙에 적용되는 추가 구성을 지정하는 것이 유용 할 수 있습니다 . &lt;code&gt;expand&lt;/code&gt; 매개 변수의 기본값을 지정하는 것이 좋은 예입니다 .</target>
        </trans-unit>
        <trans-unit id="05e01bb517ce649066d217b8860059ba8c136db5" translate="yes" xml:space="preserve">
          <source>It creates the memcache instance and adds memcache servers.</source>
          <target state="translated">memcache 인스턴스를 작성하고 memcache 서버를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="89899e1ef9b0fe529fde8aeaf6009c836cab54cb" translate="yes" xml:space="preserve">
          <source>It defaults to &lt;a href=&quot;yii-web-request#%24baseUrl-detail&quot;&gt;yii\web\Request::$baseUrl&lt;/a&gt;. This is mainly used when &lt;a href=&quot;yii-web-urlmanager#%24enablePrettyUrl-detail&quot;&gt;$enablePrettyUrl&lt;/a&gt; is &lt;code&gt;true&lt;/code&gt; and &lt;a href=&quot;yii-web-urlmanager#%24showScriptName-detail&quot;&gt;$showScriptName&lt;/a&gt; is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">기본값은 &lt;a href=&quot;yii-web-request#%24baseUrl-detail&quot;&gt;yii \ web \ Request :: $ baseUrl&lt;/a&gt; 입니다. &lt;a href=&quot;yii-web-urlmanager#%24enablePrettyUrl-detail&quot;&gt;$ enablePrettyUrl&lt;/a&gt; 이 &lt;code&gt;true&lt;/code&gt; 이고 &lt;a href=&quot;yii-web-urlmanager#%24showScriptName-detail&quot;&gt;$ showScriptName&lt;/a&gt; 이 &lt;code&gt;false&lt;/code&gt; 인 경우 주로 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="8a728ca560a8aae336f221bc87c5181b5e5bee64" translate="yes" xml:space="preserve">
          <source>It defaults to &lt;a href=&quot;yii-web-request#%24scriptUrl-detail&quot;&gt;yii\web\Request::$scriptUrl&lt;/a&gt;. This is mainly used when &lt;a href=&quot;yii-web-urlmanager#%24enablePrettyUrl-detail&quot;&gt;$enablePrettyUrl&lt;/a&gt; is &lt;code&gt;false&lt;/code&gt; or &lt;a href=&quot;yii-web-urlmanager#%24showScriptName-detail&quot;&gt;$showScriptName&lt;/a&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">기본값 &lt;a href=&quot;yii-web-request#%24scriptUrl-detail&quot;&gt;은 yii \ web \ Request :: $ scriptUrl&lt;/a&gt; 입니다. 주로 &lt;a href=&quot;yii-web-urlmanager#%24enablePrettyUrl-detail&quot;&gt;$ enablePrettyUrl&lt;/a&gt; 이 &lt;code&gt;false&lt;/code&gt; 이거나 &lt;a href=&quot;yii-web-urlmanager#%24showScriptName-detail&quot;&gt;$ showScriptName&lt;/a&gt; 이 &lt;code&gt;true&lt;/code&gt; 일 때 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="10c5c351d15f103b9bc17ac09e45ba4c8a30db99" translate="yes" xml:space="preserve">
          <source>It defaults to &lt;code&gt;UTC&lt;/code&gt; so you only have to adjust this value if you store datetime values in another time zone in your database.</source>
          <target state="translated">기본적으로 &lt;code&gt;UTC&lt;/code&gt; 로 설정 되므로 데이터베이스의 다른 시간대에 날짜 시간 값을 저장하는 경우에만이 값을 조정해야합니다.</target>
        </trans-unit>
        <trans-unit id="7e44ed7cf450651d283b26b3f88309329d180d35" translate="yes" xml:space="preserve">
          <source>It defaults to the directory containing the module class file.</source>
          <target state="translated">기본적으로 모듈 클래스 파일이 들어있는 디렉토리입니다.</target>
        </trans-unit>
        <trans-unit id="0bc3a1d545b7a0e506f429cba21a5d92903d23e6" translate="yes" xml:space="preserve">
          <source>It does nothing if a DB connection has already been established.</source>
          <target state="translated">DB 연결이 이미 설정된 경우 아무 작업도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7cb4d76c2627f3ed0c1b85af950a217139857ca3" translate="yes" xml:space="preserve">
          <source>It does nothing if a MongoDB connection has already been established.</source>
          <target state="translated">MongoDB 연결이 이미 설정된 경우 아무 작업도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e5c06d71a780645ac1bafd69375220fdc4c7fde0" translate="yes" xml:space="preserve">
          <source>It does nothing if the connection is already closed.</source>
          <target state="translated">연결이 이미 종료 된 경우 아무 작업도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="db179dae3eada9ef431dc9a5f2a9899c6f5be58a" translate="yes" xml:space="preserve">
          <source>It does the translation by looking up the message to be translated in a message source which stores the original messages and the translated messages. If the message is found, the corresponding translated message will be returned; otherwise the original message will be returned untranslated.</source>
          <target state="translated">원본 메시지와 번역 된 메시지를 저장하는 메시지 소스에서 번역 할 메시지를 찾아 번역을 수행합니다. 메시지가 발견되면 해당 번역 메시지가 반환됩니다. 그렇지 않으면 원본 메시지가 번역되지 않은 상태로 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="389ac910ce18f55d0bdbc0a953df1628d698fa01" translate="yes" xml:space="preserve">
          <source>It encapsulates the $_SERVER variable and resolves its inconsistency among different Web servers. Also it provides an interface to retrieve request parameters from $_POST, $_GET, $_COOKIES and REST parameters sent via other HTTP methods like PUT or DELETE.</source>
          <target state="translated">$ _SERVER 변수를 캡슐화하고 다른 웹 서버 간의 불일치를 해결합니다. 또한 $ _POST, $ _GET, $ _COOKIES 및 PUT 또는 DELETE와 같은 다른 HTTP 메소드를 통해 전송 된 REST 매개 변수에서 요청 매개 변수를 검색하는 인터페이스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="c8ce105c040f1e461505a3672e95ceb67bd4300f" translate="yes" xml:space="preserve">
          <source>It encapsulates the parameters associated with an event. The &lt;a href=&quot;yii-base-event#%24sender-detail&quot;&gt;$sender&lt;/a&gt; property describes who raises the event. And the &lt;a href=&quot;yii-base-event#%24handled-detail&quot;&gt;$handled&lt;/a&gt; property indicates if the event is handled. If an event handler sets &lt;a href=&quot;yii-base-event#%24handled-detail&quot;&gt;$handled&lt;/a&gt; to be &lt;code&gt;true&lt;/code&gt;, the rest of the uninvoked handlers will no longer be called to handle the event.</source>
          <target state="translated">이벤트와 관련된 매개 변수를 캡슐화합니다. &lt;a href=&quot;yii-base-event#%24sender-detail&quot;&gt;$ 보낸 사람의&lt;/a&gt; 속성은 이벤트를 발생 자에 대해 설명합니다. 그리고 &lt;a href=&quot;yii-base-event#%24handled-detail&quot;&gt;$ handled&lt;/a&gt; 속성은 이벤트가 처리되는지 여부를 나타냅니다. 이벤트 핸들러가 &lt;a href=&quot;yii-base-event#%24handled-detail&quot;&gt;$ handled&lt;/a&gt; 를 &lt;code&gt;true&lt;/code&gt; 로 설정 하면 호출되지 않은 나머지 핸들러는 더 이상 이벤트를 처리하기 위해 호출되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8acc93b65ad30c37d9b974bd00555eb3cb6abbfa" translate="yes" xml:space="preserve">
          <source>It enhances the PHP built-in functions &lt;code&gt;json_encode()&lt;/code&gt; and &lt;code&gt;json_decode()&lt;/code&gt; by supporting encoding JavaScript expressions and throwing exceptions when decoding fails.</source>
          <target state="translated">JavaScript 표현식 인코딩을 지원하고 디코딩이 실패 할 때 예외를 발생 시켜 PHP 내장 함수 &lt;code&gt;json_encode()&lt;/code&gt; 및 &lt;code&gt;json_decode()&lt;/code&gt; 를 향상시킵니다 .</target>
        </trans-unit>
        <trans-unit id="aed15eec7537c46d1666b1fb8fe89b67147949f3" translate="yes" xml:space="preserve">
          <source>It ensures &lt;a href=&quot;yii-swiftmailer-message#%24swiftMessage-detail&quot;&gt;$swiftMessage&lt;/a&gt; is also cloned.</source>
          <target state="translated">그것은 보장 &lt;a href=&quot;yii-swiftmailer-message#%24swiftMessage-detail&quot;&gt;$ swiftMessage는&lt;/a&gt; 또한 복제됩니다.</target>
        </trans-unit>
        <trans-unit id="db5e9c9e70524e8687126d5d61c516e0df75e517" translate="yes" xml:space="preserve">
          <source>It extends from &lt;a href=&quot;yii-baseyii&quot;&gt;yii\BaseYii&lt;/a&gt; which provides the actual implementation. By writing your own Yii class, you can customize some functionalities of &lt;a href=&quot;yii-baseyii&quot;&gt;yii\BaseYii&lt;/a&gt;.</source>
          <target state="translated">실제 구현을 제공하는 &lt;a href=&quot;yii-baseyii&quot;&gt;yii \ BaseYii&lt;/a&gt; 에서 확장됩니다 . 자신의 Yii 클래스를 작성하여 &lt;a href=&quot;yii-baseyii&quot;&gt;yii \ BaseYii&lt;/a&gt; 의 일부 기능을 사용자 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ded4a272ba4b68057d44447d9738be4d747e5d94" translate="yes" xml:space="preserve">
          <source>It first looks for a key in &lt;a href=&quot;yii-base-theme#%24pathMap-detail&quot;&gt;$pathMap&lt;/a&gt; that is a substring of the given view file path;</source>
          <target state="translated">먼저 주어진 뷰 파일 경로의 하위 문자열 인 &lt;a href=&quot;yii-base-theme#%24pathMap-detail&quot;&gt;$ pathMap&lt;/a&gt; 에서 키를 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="a5ad7cd4f17ed35ef1b100c9654872d1ba80d7aa" translate="yes" xml:space="preserve">
          <source>It has no content yet.</source>
          <target state="translated">아직 내용이 없습니다.</target>
        </trans-unit>
        <trans-unit id="62b76ebe8d88156dc4de0944165d5ec409bd9e43" translate="yes" xml:space="preserve">
          <source>It has support for getting &lt;a href=&quot;yii-db-queryinterface#one()-detail&quot;&gt;one()&lt;/a&gt; instance or &lt;a href=&quot;yii-db-queryinterface#all()-detail&quot;&gt;all()&lt;/a&gt;. Allows pagination via &lt;a href=&quot;yii-db-queryinterface#limit()-detail&quot;&gt;limit()&lt;/a&gt; and &lt;a href=&quot;yii-db-queryinterface#offset()-detail&quot;&gt;offset()&lt;/a&gt;. Sorting is supported via &lt;a href=&quot;yii-db-queryinterface#orderBy()-detail&quot;&gt;orderBy()&lt;/a&gt; and items can be limited to match some conditions using &lt;a href=&quot;yii-db-queryinterface#where()-detail&quot;&gt;where()&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;yii-db-queryinterface#one()-detail&quot;&gt;one ()&lt;/a&gt; 인스턴스 또는 &lt;a href=&quot;yii-db-queryinterface#all()-detail&quot;&gt;all ()&lt;/a&gt; 가져 오기를 지원합니다 . &lt;a href=&quot;yii-db-queryinterface#limit()-detail&quot;&gt;limit ()&lt;/a&gt; 및 &lt;a href=&quot;yii-db-queryinterface#offset()-detail&quot;&gt;offset ()을&lt;/a&gt; 통해 페이지 매김을 허용합니다 . 정렬은 &lt;a href=&quot;yii-db-queryinterface#orderBy()-detail&quot;&gt;orderBy ()&lt;/a&gt; 를 통해 지원되며 &lt;a href=&quot;yii-db-queryinterface#where()-detail&quot;&gt;where ()를&lt;/a&gt; 사용하여 일부 조건과 일치하도록 항목을 제한 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="06b262991f92d5df8d52d9d96f779941475b6812" translate="yes" xml:space="preserve">
          <source>It holds the &lt;a href=&quot;yii-web-response#%24headers-detail&quot;&gt;$headers&lt;/a&gt;, &lt;a href=&quot;yii-web-response#%24cookies-detail&quot;&gt;$cookies&lt;/a&gt; and &lt;a href=&quot;yii-web-response#%24content-detail&quot;&gt;$content&lt;/a&gt; that is to be sent to the client. It also controls the HTTP &lt;a href=&quot;yii-web-response#%24statusCode-detail&quot;&gt;status code&lt;/a&gt;.</source>
          <target state="translated">클라이언트에게 보낼 &lt;a href=&quot;yii-web-response#%24headers-detail&quot;&gt;$ headers&lt;/a&gt; , &lt;a href=&quot;yii-web-response#%24cookies-detail&quot;&gt;$ cookies&lt;/a&gt; 및 &lt;a href=&quot;yii-web-response#%24content-detail&quot;&gt;$ content&lt;/a&gt; 를 보유합니다 . 또한 HTTP &lt;a href=&quot;yii-web-response#%24statusCode-detail&quot;&gt;상태 코드를&lt;/a&gt; 제어합니다 .</target>
        </trans-unit>
        <trans-unit id="58c970be17232bf64859d3d2c88d274a68e51f85" translate="yes" xml:space="preserve">
          <source>It is a common task to increment or decrement a column in a database table. We call these columns &quot;counter columns&quot;. You can use &lt;a href=&quot;yii-db-baseactiverecord#updateCounters()-detail&quot;&gt;updateCounters()&lt;/a&gt; to update one or multiple counter columns. For example,</source>
          <target state="translated">데이터베이스 테이블에서 열을 늘리거나 줄이는 것이 일반적인 작업입니다. 이러한 열을 &quot;카운터 열&quot;이라고합니다. &lt;a href=&quot;yii-db-baseactiverecord#updateCounters()-detail&quot;&gt;updateCounters ()&lt;/a&gt; 를 사용 하여 하나 이상의 카운터 열을 업데이트 할 수 있습니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="3c1e64d0ec1283fec7e84d0c14f8d11c2efb9848" translate="yes" xml:space="preserve">
          <source>It is a wrapper for the PHP &lt;code&gt;$_SERVER&lt;/code&gt; variable which holds information about the currently running PHP script and the command line arguments given to it.</source>
          <target state="translated">현재 실행중인 PHP 스크립트 및 명령 행 인수에 대한 정보를 보유 하는 PHP &lt;code&gt;$_SERVER&lt;/code&gt; 변수 의 랩퍼입니다 .</target>
        </trans-unit>
        <trans-unit id="badd5c80e7a8585fdf6c7200f7a1b0a55ed4ef5d" translate="yes" xml:space="preserve">
          <source>It is also possible to just call &lt;code&gt;$query-&amp;gt;joinWith(['author']);&lt;/code&gt; when the alias is defined in the relation definition.</source>
          <target state="translated">&lt;code&gt;$query-&amp;gt;joinWith(['author']);&lt;/code&gt; 호출하는 것도 가능합니다 . 별명이 관계 정의에 정의 된 경우</target>
        </trans-unit>
        <trans-unit id="2b93ff272f7cbc1df49d8d1c3f40d5c181296e78" translate="yes" xml:space="preserve">
          <source>It is also recommended that you use an ICU version equal or greater than version 49. This will ensure you can use all the features described in this document. For example, an ICU version below 49 does not support using &lt;code&gt;#&lt;/code&gt; placeholders in plural rules. Please refer to &lt;a href=&quot;http://site.icu-project.org/download&quot;&gt;http://site.icu-project.org/download&lt;/a&gt; for a complete list of available ICU versions. Note that the version numbering has changed after the 4.8 release (e.g., ICU 4.8, ICU 49, ICU 50, etc.)</source>
          <target state="translated">또한 버전 49 이상의 ICU 버전을 사용하는 것이 좋습니다. 이렇게하면이 문서에 설명 된 모든 기능을 사용할 수 있습니다. 예를 들어, 49 미만의 ICU 버전 은 복수 규칙에서 &lt;code&gt;#&lt;/code&gt; 자리 표시 자 사용을 지원하지 않습니다 . 사용 가능한 ICU 버전의 전체 목록은 &lt;a href=&quot;http://site.icu-project.org/download&quot;&gt;http://site.icu-project.org/download&lt;/a&gt; 를 참조하십시오 . 4.8 릴리스 이후 버전 번호가 변경되었습니다 (예 : ICU 4.8, ICU 49, ICU 50 등).</target>
        </trans-unit>
        <trans-unit id="435705785b2f2b2097bdca619cf904bdadae211d" translate="yes" xml:space="preserve">
          <source>It is an action filter that can be added to a controller and handles the &lt;code&gt;beforeAction&lt;/code&gt; event.</source>
          <target state="translated">컨트롤러에 추가 할 수 있고 &lt;code&gt;beforeAction&lt;/code&gt; 이벤트를 처리하는 조치 필터입니다 .</target>
        </trans-unit>
        <trans-unit id="f272a70db1a6bbedb3d2b2a8920bf62d946bc257" translate="yes" xml:space="preserve">
          <source>It is best used for displaying a model in a regular format (e.g. each model attribute is displayed as a row in a table). The model can be either an instance or subclass of &lt;a href=&quot;yii-base-model&quot;&gt;yii\base\Model&lt;/a&gt; such as an &lt;a href=&quot;guide-db-active-record&quot;&gt;active record&lt;/a&gt; or an associative array.</source>
          <target state="translated">모델을 일반 형식으로 표시하는 데 가장 적합합니다 (예 : 각 모델 속성은 테이블에 행으로 표시됨). 모델은 &lt;a href=&quot;guide-db-active-record&quot;&gt;활성 레코드&lt;/a&gt; 또는 연관 배열 과 같은 &lt;a href=&quot;yii-base-model&quot;&gt;yii \ base \ Model&lt;/a&gt; 의 인스턴스 또는 서브 클래스 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2fc0c00c45d1f0f2a5d16046ddd364fec4d8b490" translate="yes" xml:space="preserve">
          <source>It is further possible to limit the date within a certain range using &lt;a href=&quot;yii-validators-datevalidator#%24min-detail&quot;&gt;$min&lt;/a&gt; and &lt;a href=&quot;yii-validators-datevalidator#%24max-detail&quot;&gt;$max&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;yii-validators-datevalidator#%24min-detail&quot;&gt;$ min&lt;/a&gt; 및 &lt;a href=&quot;yii-validators-datevalidator#%24max-detail&quot;&gt;$ max를&lt;/a&gt; 사용하여 특정 범위 내에서 날짜를 제한 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9e29a18e20911f45dcf0ba7bfb1ce0c0f6b1e175" translate="yes" xml:space="preserve">
          <source>It is handy to know whether an array is indexed or an associative. Here's an example:</source>
          <target state="translated">배열이 색인인지 연관인지를 알면 편리합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e505bc9470131ba9fd9fa473d57301f150832431" translate="yes" xml:space="preserve">
          <source>It is highly recommended to use &lt;a href=&quot;guide-structure-assets&quot;&gt;asset bundles&lt;/a&gt; to register external CSS files rather than &lt;a href=&quot;yii-web-view#registerCssFile()-detail&quot;&gt;registerCssFile()&lt;/a&gt;. Using asset bundles allows you to combine and compress multiple CSS files, which is desirable for high traffic websites. It also provides more flexibility as all asset dependencies of your application are configured in one place.</source>
          <target state="translated">&lt;a href=&quot;yii-web-view#registerCssFile()-detail&quot;&gt;registerCssFile ()&lt;/a&gt; 대신 &lt;a href=&quot;guide-structure-assets&quot;&gt;자산 번들&lt;/a&gt; 을 사용 하여 외부 CSS 파일을 등록 하는 것이 좋습니다 . 자산 번들을 사용하면 트래픽이 많은 웹 사이트에 바람직한 여러 CSS 파일을 결합하고 압축 할 수 있습니다. 또한 애플리케이션의 모든 자산 종속성이 한 곳에서 구성되므로 유연성이 향상됩니다.</target>
        </trans-unit>
        <trans-unit id="ba5dd4d1609e1ccfe3332edf7a29eb242b331604" translate="yes" xml:space="preserve">
          <source>It is highly recommended to use &lt;a href=&quot;guide-structure-assets&quot;&gt;asset bundles&lt;/a&gt; to register external JS files rather than &lt;a href=&quot;yii-web-view#registerJsFile()-detail&quot;&gt;registerJsFile()&lt;/a&gt; because these allow better flexibility and more granular dependency configuration. Also using asset bundles allows you to combine and compress multiple JS files, which is desirable for high traffic websites.</source>
          <target state="translated">&lt;a href=&quot;guide-structure-assets&quot;&gt;자산 번들&lt;/a&gt; 을 사용 하여 &lt;a href=&quot;yii-web-view#registerJsFile()-detail&quot;&gt;registerJsFile ()&lt;/a&gt; 대신 외부 JS 파일을 등록 하는 것이 좋습니다. 이러한 파일 은 더 나은 유연성과보다 세부적인 종속성 구성을 허용하기 때문입니다. 또한 자산 번들을 사용하면 트래픽이 많은 웹 사이트에 바람직한 여러 JS 파일을 결합하고 압축 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d756d6d1864092502123de800e04e1d1f88c6456" translate="yes" xml:space="preserve">
          <source>It is important that the fully qualified controller classes should be &lt;a href=&quot;guide-concept-autoloading&quot;&gt;autoloadable&lt;/a&gt; and the actual namespace of your controller classes match the value of this property. Otherwise, you will receive a &quot;Page Not Found&quot; error when accessing the application.</source>
          <target state="translated">정규화 된 컨트롤러 클래스는 &lt;a href=&quot;guide-concept-autoloading&quot;&gt;자동로드 가능&lt;/a&gt; 해야하며 컨트롤러 클래스 의 실제 네임 스페이스는이 속성 값과 일치해야합니다. 그렇지 않으면 응용 프로그램에 액세스 할 때 &quot;페이지를 찾을 수 없음&quot;오류가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="3ec72f61b6feaf6c072e9a4bd04490913c9c7610" translate="yes" xml:space="preserve">
          <source>It is important that you specify the package type of your extension as &lt;code&gt;yii2-extension&lt;/code&gt; so that the package can be recognized as a Yii extension when being installed.</source>
          <target state="translated">설치시 패키지를 Yii 확장으로 인식 할 수 있도록 확장의 패키지 유형을 &lt;code&gt;yii2-extension&lt;/code&gt; 으로 지정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="84e963549c8e0626ef39e6bd02a7ede21a869fa4" translate="yes" xml:space="preserve">
          <source>It is important to make sure that the pairs of &lt;code&gt;beginProfile&lt;/code&gt; and &lt;code&gt;endProfile&lt;/code&gt; are properly nested. For example,</source>
          <target state="translated">&lt;code&gt;beginProfile&lt;/code&gt; 과 &lt;code&gt;endProfile&lt;/code&gt; 쌍이 올바르게 중첩되어 있는지 확인하는 것이 중요합니다 . 예를 들어</target>
        </trans-unit>
        <trans-unit id="062dc60dfbba51727d4a7e5335c0df3e49a9ed97" translate="yes" xml:space="preserve">
          <source>It is important to remember that you add the &lt;code&gt;enctype&lt;/code&gt; option to the form so that the file can be properly uploaded. The &lt;code&gt;fileInput()&lt;/code&gt; call will render a &lt;code&gt;&amp;lt;input type=&quot;file&quot;&amp;gt;&lt;/code&gt; tag which will allow users to select a file to upload.</source>
          <target state="translated">파일을 제대로 업로드 할 수 있도록 &lt;code&gt;enctype&lt;/code&gt; 옵션을 양식에 추가해야합니다 . &lt;code&gt;fileInput()&lt;/code&gt; 호출은 렌더링 &lt;code&gt;&amp;lt;input type=&quot;file&quot;&amp;gt;&lt;/code&gt; 사용자가 업로드 할 파일을 선택할 수 있습니다 태그를.</target>
        </trans-unit>
        <trans-unit id="b68125c76b99aac4ae94a9acca2f53ca843b771b" translate="yes" xml:space="preserve">
          <source>It is important to understand the life cycles of Active Record when it is used for different purposes. During each life cycle, a certain sequence of methods will be invoked, and you can override these methods to get a chance to customize the life cycle. You can also respond to certain Active Record events triggered during a life cycle to inject your custom code. These events are especially useful when you are developing Active Record &lt;a href=&quot;guide-concept-behaviors&quot;&gt;behaviors&lt;/a&gt; which need to customize Active Record life cycles.</source>
          <target state="translated">다른 용도로 사용되는 Active Record의 수명주기를 이해하는 것이 중요합니다. 각 수명주기 동안 특정 순서의 메소드가 호출되며이 메소드를 대체하여 수명주기를 사용자 정의 할 수 있습니다. 수명주기 동안 트리거 된 특정 Active Record 이벤트에 응답하여 사용자 지정 코드를 주입 ​​할 수도 있습니다. 이 이벤트는 Active Record 라이프 사이클을 사용자 정의해야하는 Active Record &lt;a href=&quot;guide-concept-behaviors&quot;&gt;동작&lt;/a&gt; 을 개발할 때 특히 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="16541b98b077f4ebcb4c47fc17115652e92c0ac1" translate="yes" xml:space="preserve">
          <source>It is necessary to override PDO's method as some MSSQL PDO driver (e.g. dblib) does not support getting attributes</source>
          <target state="translated">일부 MSSQL PDO 드라이버 (예 : dblib)는 속성 가져 오기를 지원하지 않으므로 PDO의 메소드를 대체해야합니다.</target>
        </trans-unit>
        <trans-unit id="c8c70386e63814ee892359a581c8af4f52d03df7" translate="yes" xml:space="preserve">
          <source>It is often preferable to manage assets programmatically. For example, when you use the &lt;a href=&quot;yii-jui-datepicker&quot;&gt;yii\jui\DatePicker&lt;/a&gt; widget in a page, it will automatically include the required CSS and JavaScript files, instead of asking you to manually find these files and include them. And when you upgrade the widget to a new version, it will automatically use the new version of the asset files. In this tutorial, we will describe the powerful asset management capability provided in Yii.</source>
          <target state="translated">프로그래밍 방식으로 자산을 관리하는 것이 종종 바람직합니다. 예를 들어, 페이지에서 &lt;a href=&quot;yii-jui-datepicker&quot;&gt;yii \ jui \ DatePicker&lt;/a&gt; 위젯 을 사용하면 이러한 파일을 수동으로 찾아 포함하도록 요청하는 대신 필요한 CSS 및 JavaScript 파일이 자동으로 포함됩니다. 위젯을 새 버전으로 업그레이드하면 새 버전의 자산 파일이 자동으로 사용됩니다. 이 튜토리얼에서는 Yii에서 제공하는 강력한 자산 관리 기능에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="9b38538428b5b6461dfc79ad3cb235d550c4d4b0" translate="yes" xml:space="preserve">
          <source>It is possible to configure multiple definitions at once, passing configuration array to &lt;a href=&quot;yii-di-container#setDefinitions()-detail&quot;&gt;setDefinitions()&lt;/a&gt; or &lt;a href=&quot;yii-di-container#setSingletons()-detail&quot;&gt;setSingletons()&lt;/a&gt; method. Iterating over the configuration array, the methods will call &lt;a href=&quot;yii-di-container#set()-detail&quot;&gt;set()&lt;/a&gt; or &lt;a href=&quot;yii-di-container#setSingleton()-detail&quot;&gt;setSingleton()&lt;/a&gt; respectively for each item.</source>
          <target state="translated">구성 배열을 &lt;a href=&quot;yii-di-container#setDefinitions()-detail&quot;&gt;setDefinitions ()&lt;/a&gt; 또는 &lt;a href=&quot;yii-di-container#setSingletons()-detail&quot;&gt;setSingletons ()&lt;/a&gt; 메소드에 전달하여 여러 정의를 한 번에 구성 할 수 있습니다 . 구성 배열을 반복하면 메소드는 각 항목에 대해 각각 &lt;a href=&quot;yii-di-container#set()-detail&quot;&gt;set ()&lt;/a&gt; 또는 &lt;a href=&quot;yii-di-container#setSingleton()-detail&quot;&gt;setSingleton ()을&lt;/a&gt; 호출 합니다 .</target>
        </trans-unit>
        <trans-unit id="4a7b8db1916ecef5539d848d8928c2b1fb5795ae" translate="yes" xml:space="preserve">
          <source>It is possible to connect to a redis server using &lt;a href=&quot;yii-redis-connection#%24hostname-detail&quot;&gt;$hostname&lt;/a&gt; and &lt;a href=&quot;yii-redis-connection#%24port-detail&quot;&gt;$port&lt;/a&gt; or using a &lt;a href=&quot;yii-redis-connection#%24unixSocket-detail&quot;&gt;$unixSocket&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;yii-redis-connection#%24hostname-detail&quot;&gt;$ hostname&lt;/a&gt; 및 &lt;a href=&quot;yii-redis-connection#%24port-detail&quot;&gt;$ port&lt;/a&gt; 또는 &lt;a href=&quot;yii-redis-connection#%24unixSocket-detail&quot;&gt;$ unixSocket을&lt;/a&gt; 사용 하여 redis 서버에 연결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb05251de537836c044a98b48cc29adb29cddbc2" translate="yes" xml:space="preserve">
          <source>It is possible to include Web server names in the patterns of URL rules. This is mainly useful when your application should behave differently for different Web server names. For example, the following rules will parse the URL &lt;code&gt;http://admin.example.com/login&lt;/code&gt; into the route &lt;code&gt;admin/user/login&lt;/code&gt; and &lt;code&gt;http://www.example.com/login&lt;/code&gt; into &lt;code&gt;site/login&lt;/code&gt;.</source>
          <target state="translated">URL 규칙 패턴에 웹 서버 이름을 포함시킬 수 있습니다. 이것은 주로 웹 서버 이름마다 응용 프로그램이 다르게 작동해야 할 때 유용합니다. 예를 들어 다음 규칙은 URL &lt;code&gt;http://admin.example.com/login&lt;/code&gt; 을 경로 &lt;code&gt;admin/user/login&lt;/code&gt; 으로 , &lt;code&gt;http://www.example.com/login&lt;/code&gt; 을 &lt;code&gt;site/login&lt;/code&gt; 으로 구문 분석합니다 .</target>
        </trans-unit>
        <trans-unit id="07c53912dd5fa17c6ec70a347e1f858ac2f4433c" translate="yes" xml:space="preserve">
          <source>It is possible to map a single path to multiple paths. For example,</source>
          <target state="translated">단일 경로를 여러 경로에 매핑 할 수 있습니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="a1bc5beceb79eedc2c43fcca4fc0eda27dfdafe7" translate="yes" xml:space="preserve">
          <source>It is possible to provide default way of converting object to array for a specific class by implementing &lt;a href=&quot;yii-base-arrayable&quot;&gt;Arrayable&lt;/a&gt; interface in that class.</source>
          <target state="translated">해당 클래스에서 &lt;a href=&quot;yii-base-arrayable&quot;&gt;Arrayable&lt;/a&gt; 인터페이스를 구현하여 특정 클래스에 대해 객체를 배열로 변환하는 기본 방법을 제공 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a6783dea010b569b6ca1b14b387cebbf69baebd7" translate="yes" xml:space="preserve">
          <source>It is possible to use a specific mode of data fetching by setting &lt;a href=&quot;yii-db-datareader#%24fetchMode-detail&quot;&gt;$fetchMode&lt;/a&gt;. See the &lt;a href=&quot;http://www.php.net/manual/en/function.PDOStatement-setFetchMode.php&quot;&gt;PHP manual&lt;/a&gt; for more details about possible fetch mode.</source>
          <target state="translated">&lt;a href=&quot;yii-db-datareader#%24fetchMode-detail&quot;&gt;$ fetchMode&lt;/a&gt; 를 설정하여 특정 데이터 페치 모드를 사용할 수 있습니다 . 참고 항목 &lt;a href=&quot;http://www.php.net/manual/en/function.PDOStatement-setFetchMode.php&quot;&gt;PHP 매뉴얼&lt;/a&gt; 가져올 수 모드에 대한 자세한 내용을.</target>
        </trans-unit>
        <trans-unit id="a4fa2b2497794839540c020e4aaf1a9f8f690162" translate="yes" xml:space="preserve">
          <source>It is recommended that you create an extension in terms of a &lt;a href=&quot;https://getcomposer.org/&quot;&gt;Composer package&lt;/a&gt; so that it can be more easily installed and used by other users, as described in the last subsection.</source>
          <target state="translated">마지막 하위 섹션에 설명 된대로 다른 사용자가 더 쉽게 설치하고 사용할 수 있도록 &lt;a href=&quot;https://getcomposer.org/&quot;&gt;Composer 패키지&lt;/a&gt; 측면에서 확장을 작성하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="9f21b449e6f28ed349d2e6d4e2b73523a8be3f48" translate="yes" xml:space="preserve">
          <source>It is recommended that you create various test cases to cover your extension code rather than relying on manual tests. Each time before you release a new version of your extension, you may simply run these test cases to make sure everything is in good shape. Yii provides testing support, which can help you to more easily write unit tests, acceptance tests and functionality tests. For more details, please refer to the &lt;a href=&quot;guide-test-overview&quot;&gt;Testing&lt;/a&gt; section.</source>
          <target state="translated">수동 테스트에 의존하지 않고 확장 코드를 다루기 위해 다양한 테스트 사례를 만드는 것이 좋습니다. 새 버전의 확장 프로그램을 출시하기 전에는 이러한 테스트 사례를 실행하여 모든 것이 양호한 지 확인하십시오. Yii는 단위 테스트, 합격 테스트 및 기능 테스트를보다 쉽게 ​​작성할 수 있도록 테스트 지원을 제공합니다. 자세한 내용은 &lt;a href=&quot;guide-test-overview&quot;&gt;테스트&lt;/a&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5463f47310fa33410358d0e2b962c1ff4e075c2b" translate="yes" xml:space="preserve">
          <source>It is recommended that you place assets belonging to an application in a Web directory to avoid the unnecessary asset publishing process. This is why &lt;code&gt;AppAsset&lt;/code&gt; in the prior example specifies &lt;a href=&quot;yii-web-assetbundle#%24basePath-detail&quot;&gt;basePath&lt;/a&gt; instead of &lt;a href=&quot;yii-web-assetbundle#%24sourcePath-detail&quot;&gt;sourcePath&lt;/a&gt;.</source>
          <target state="translated">불필요한 자산 게시 프로세스를 피하려면 응용 프로그램에 속하는 자산을 웹 디렉토리에 배치하는 것이 좋습니다. 이런 이유로 &lt;code&gt;AppAsset&lt;/code&gt; 을 사전 예를 지정에서 &lt;a href=&quot;yii-web-assetbundle#%24basePath-detail&quot;&gt;basePath&lt;/a&gt; 대신 &lt;a href=&quot;yii-web-assetbundle#%24sourcePath-detail&quot;&gt;SOURCEPATH&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="00f46f7066f9d224c48b366c7692131decdbb782" translate="yes" xml:space="preserve">
          <source>It is recommended that you specify a language in terms of an &lt;a href=&quot;http://en.wikipedia.org/wiki/IETF_language_tag&quot;&gt;IETF language tag&lt;/a&gt;. For example, &lt;code&gt;en&lt;/code&gt; stands for English, while &lt;code&gt;en-US&lt;/code&gt; stands for English (United States).</source>
          <target state="translated">&lt;a href=&quot;http://en.wikipedia.org/wiki/IETF_language_tag&quot;&gt;IETF 언어 태그&lt;/a&gt; 로 언어를 지정하는 것이 좋습니다 . 예를 들어 &lt;code&gt;en&lt;/code&gt; 은 영어, &lt;code&gt;en-US&lt;/code&gt; 는 영어 (미국)를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="639559a18ed28fb96c7be7b03405b2b2f3819c61" translate="yes" xml:space="preserve">
          <source>It is supposed to be used in a class that implements the &lt;a href=&quot;yii-db-queryinterface&quot;&gt;yii\db\QueryInterface&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;yii-db-queryinterface&quot;&gt;yii \ db \ QueryInterface&lt;/a&gt; 를 구현하는 클래스에서 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="c3ce90737a765c504ddd862b28787fa840b2fa68" translate="yes" xml:space="preserve">
          <source>It is used by &lt;a href=&quot;yii-mongodb-command&quot;&gt;yii\mongodb\Command&lt;/a&gt; for particular commands and queries composition.</source>
          <target state="translated">특정 명령 및 쿼리 구성을 위해 &lt;a href=&quot;yii-mongodb-command&quot;&gt;yii \ mongodb \ Command&lt;/a&gt; 에서 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="c2b24adea233777ea9c2a4b4ee5ff3cb198c30fd" translate="yes" xml:space="preserve">
          <source>It is used by &lt;a href=&quot;yii-web-assetmanager&quot;&gt;yii\web\AssetManager&lt;/a&gt; to convert files after they have been published.</source>
          <target state="translated">&lt;a href=&quot;yii-web-assetmanager&quot;&gt;yii \ web \ AssetManager&lt;/a&gt; 에서 파일을 게시 한 후 변환 하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="516a53c699a38ed82299e7bb54464186143ca6cd" translate="yes" xml:space="preserve">
          <source>It is used by &lt;a href=&quot;yii-web-response&quot;&gt;yii\web\Response&lt;/a&gt; to format response data.</source>
          <target state="translated">&lt;a href=&quot;yii-web-response&quot;&gt;yii \ web \ Response&lt;/a&gt; 에서 응답 데이터를 형식화 하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="254ae0b615f45d6ec497d47e8ae361512b97982c" translate="yes" xml:space="preserve">
          <source>It is used to show data columns and allows &lt;a href=&quot;yii-grid-datacolumn#%24enableSorting-detail&quot;&gt;sorting&lt;/a&gt; and &lt;a href=&quot;yii-grid-datacolumn#%24filter-detail&quot;&gt;filtering&lt;/a&gt; them.</source>
          <target state="translated">데이터 열을 표시하고 &lt;a href=&quot;yii-grid-datacolumn#%24enableSorting-detail&quot;&gt;정렬&lt;/a&gt; 및 &lt;a href=&quot;yii-grid-datacolumn#%24filter-detail&quot;&gt;필터링&lt;/a&gt; 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6902b56f58f3c5f376113def885af6be42675e73" translate="yes" xml:space="preserve">
          <source>It is usually created by calling &lt;a href=&quot;yii-db-connection#beginTransaction()-detail&quot;&gt;yii\db\Connection::beginTransaction()&lt;/a&gt;.</source>
          <target state="translated">일반적으로 &lt;a href=&quot;yii-db-connection#beginTransaction()-detail&quot;&gt;yii \ db \ Connection :: beginTransaction ()&lt;/a&gt; 을 호출하여 작성됩니다 .</target>
        </trans-unit>
        <trans-unit id="ece9eaccb18f9d5abc0a0d696e3031c7914976f4" translate="yes" xml:space="preserve">
          <source>It needs to be configured with a redis &lt;a href=&quot;yii-redis-connection&quot;&gt;yii\redis\Connection&lt;/a&gt; that is also configured as an application component. By default it will use the &lt;code&gt;redis&lt;/code&gt; application component.</source>
          <target state="translated">응용 프로그램 구성 요소로 구성된 redis &lt;a href=&quot;yii-redis-connection&quot;&gt;yii \ redis \ Connection으로&lt;/a&gt; 구성해야합니다. 기본적으로 &lt;code&gt;redis&lt;/code&gt; 응용 프로그램 구성 요소를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="b5b08891cccb4c34c0a495a0adc07afdfcf5204f" translate="yes" xml:space="preserve">
          <source>It often happens that the data being entered and/or displayed are in a format which is different from the one used in storing the data in a database. For example, in the database you are storing customers' birthdays as UNIX timestamps (which is not a good design, though), while in most cases you would like to manipulate birthdays as strings in the format of &lt;code&gt;'YYYY/MM/DD'&lt;/code&gt;. To achieve this goal, you can define &lt;em&gt;data transformation&lt;/em&gt; methods in the &lt;code&gt;Customer&lt;/code&gt; Active Record class like the following:</source>
          <target state="translated">입력 및 / 또는 표시되는 데이터가 데이터베이스에 데이터를 저장하는 데 사용 된 형식과 다른 형식 인 경우가 종종 있습니다. 예를 들어, 데이터베이스에서 고객의 생일을 UNIX 타임 스탬프 (좋은 디자인은 아니지만)로 저장하는 반면 대부분의 경우 생일을 문자열로 &lt;code&gt;'YYYY/MM/DD'&lt;/code&gt; 형식으로 조작하려고 합니다. 이 목표를 달성하기 위해 다음과 같이 &lt;code&gt;Customer&lt;/code&gt; Active Record 클래스 에서 &lt;em&gt;데이터 변환&lt;/em&gt; 방법을 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bea8cfcbc4eac41533c4914ce2c490623e21b837" translate="yes" xml:space="preserve">
          <source>It opens a popup window for the client authentication process. By default this widget relies on presence of &lt;a href=&quot;yii-authclient-collection&quot;&gt;yii\authclient\Collection&lt;/a&gt; among application components to get auth clients information.</source>
          <target state="translated">클라이언트 인증 프로세스를위한 팝업 창이 열립니다. 기본적으로이 위젯은 인증 클라이언트 정보를 얻기 위해 애플리케이션 구성 요소 중 &lt;a href=&quot;yii-authclient-collection&quot;&gt;yii \ authclient \ Collection의&lt;/a&gt; 존재에 의존 합니다.</target>
        </trans-unit>
        <trans-unit id="44a35c0bac74c7f72ab524e62d8ac9b6e7ad3795" translate="yes" xml:space="preserve">
          <source>It passes value to the inner iterator.</source>
          <target state="translated">내부 이터레이터에 값을 전달합니다.</target>
        </trans-unit>
        <trans-unit id="34b1daeb190d978303ab027d93fc6cd4037bdc5c" translate="yes" xml:space="preserve">
          <source>It populate the table with the data returned by &lt;a href=&quot;yii-test-activefixture#getData()-detail&quot;&gt;getData()&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;yii-test-activefixture#getData()-detail&quot;&gt;getData ()에서&lt;/a&gt; 리턴 한 데이터로 테이블을 채 웁니다 .</target>
        </trans-unit>
        <trans-unit id="f131bff557d2143a7c13fe1c9968b87b68f3b69c" translate="yes" xml:space="preserve">
          <source>It provides features like &lt;a href=&quot;yii-widgets-baselistview#%24sorter-detail&quot;&gt;sorting&lt;/a&gt;, &lt;a href=&quot;yii-widgets-baselistview#%24pager-detail&quot;&gt;paging&lt;/a&gt; and also &lt;a href=&quot;yii-grid-gridview#%24filterModel-detail&quot;&gt;filtering&lt;/a&gt; the data.</source>
          <target state="translated">&lt;a href=&quot;yii-widgets-baselistview#%24sorter-detail&quot;&gt;정렬&lt;/a&gt; , &lt;a href=&quot;yii-widgets-baselistview#%24pager-detail&quot;&gt;페이징&lt;/a&gt; 및 데이터 &lt;a href=&quot;yii-grid-gridview#%24filterModel-detail&quot;&gt;필터링&lt;/a&gt; 과 같은 기능을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="7424318227eb48acdef562d28f805170e4b866a2" translate="yes" xml:space="preserve">
          <source>It provides features like sorting, paging and also filtering the data.</source>
          <target state="translated">정렬, 페이징 및 데이터 필터링과 같은 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="d5dc687d54aac6a85ffccb90ae2203ba202b7609" translate="yes" xml:space="preserve">
          <source>It provides functions to convert date format patterns between different conventions.</source>
          <target state="translated">서로 다른 규칙간에 날짜 형식 패턴을 변환하는 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="6748c3e79ef95cc29bfcba1c70beae706418e4c9" translate="yes" xml:space="preserve">
          <source>It provides workarounds for improperly implemented functionalities of the MSSQL and DBLIB drivers.</source>
          <target state="translated">MSSQL 및 DBLIB 드라이버의 부적절하게 구현 된 기능에 대한 해결 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="8b6f6ebbb61b8c66f95755d69161a146eeceb44c" translate="yes" xml:space="preserve">
          <source>It provides workarounds for improperly implemented functionalities of the SQLSRV driver.</source>
          <target state="translated">SQLSRV 드라이버의 부적절하게 구현 된 기능에 대한 임시 해결책을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="802bf4f719e3360a0082db55583b249fcdc55f49" translate="yes" xml:space="preserve">
          <source>It redirects method call to inner iterator.</source>
          <target state="translated">메서드 호출을 내부 반복자로 리디렉션합니다.</target>
        </trans-unit>
        <trans-unit id="e580b09190a2c303b5402ad9188dcf56c0dd8b0a" translate="yes" xml:space="preserve">
          <source>It removes all behaviors because they are attached to the old object.</source>
          <target state="translated">이전 동작에 첨부되어 있기 때문에 모든 동작을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="1e24a38f99fe0f09182e9bee4c537ed048247773" translate="yes" xml:space="preserve">
          <source>It returns value from the inner iterator.</source>
          <target state="translated">내부 이터레이터에서 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e3020b1d152d6059769014c428299a6e3c5b5c24" translate="yes" xml:space="preserve">
          <source>It should have the same signature as &lt;a href=&quot;yii-widgets-listview#%24beforeItem-detail&quot;&gt;$beforeItem&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;yii-widgets-listview#%24beforeItem-detail&quot;&gt;$ beforeItem&lt;/a&gt; 과 동일한 서명이 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="7595018fc143457ecb0d164e5c783edc9a45b5c6" translate="yes" xml:space="preserve">
          <source>It supports &lt;a href=&quot;yii-authclient-openid&quot;&gt;yii\authclient\OpenId&lt;/a&gt;, &lt;a href=&quot;yii-authclient-oauth1&quot;&gt;yii\authclient\OAuth1&lt;/a&gt; and &lt;a href=&quot;yii-authclient-oauth2&quot;&gt;yii\authclient\OAuth2&lt;/a&gt; client types.</source>
          <target state="translated">그것은 지원 &lt;a href=&quot;yii-authclient-openid&quot;&gt;YII \ authclient \ 오픈 ID&lt;/a&gt; , &lt;a href=&quot;yii-authclient-oauth1&quot;&gt;YII \ authclient \ OAuth1&lt;/a&gt; 및 &lt;a href=&quot;yii-authclient-oauth2&quot;&gt;YII \ authclient \으로 OAuth2&lt;/a&gt; 클라이언트 유형을.</target>
        </trans-unit>
        <trans-unit id="51cb992866e9a16606be035789f3c2b5e635e986" translate="yes" xml:space="preserve">
          <source>It uses the PHP intl extension's &lt;a href=&quot;http://www.php.net/manual/en/class.messageformatter.php&quot;&gt;MessageFormatter&lt;/a&gt; and works around some issues. If PHP intl is not installed a fallback will be used that supports a subset of the ICU message format.</source>
          <target state="translated">PHP intl 확장의 &lt;a href=&quot;http://www.php.net/manual/en/class.messageformatter.php&quot;&gt;MessageFormatter를 사용&lt;/a&gt; 하며 일부 문제를 해결합니다. PHP intl이 설치되어 있지 않으면 ICU 메시지 형식의 하위 집합을 지원하는 대체가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="5c418f46b6898971cd81466eec272703dcdddc1d" translate="yes" xml:space="preserve">
          <source>It uses the PHP intl extension's &lt;a href=&quot;http://www.php.net/manual/en/messageformatter.parsemessage.php&quot;&gt;MessageFormatter::parse()&lt;/a&gt; and adds support for named arguments. Usage of this method requires PHP intl extension to be installed.</source>
          <target state="translated">PHP intl 확장의 &lt;a href=&quot;http://www.php.net/manual/en/messageformatter.parsemessage.php&quot;&gt;MessageFormatter :: parse ()를 사용&lt;/a&gt; 하고 명명 된 인수에 대한 지원을 추가합니다. 이 방법을 사용하려면 PHP intl 확장을 설치해야합니다.</target>
        </trans-unit>
        <trans-unit id="de7d84e952f5373c3277dbce4a728b3ddf6d8d40" translate="yes" xml:space="preserve">
          <source>It will allow you to theme &lt;code&gt;@app/modules/blog/views/comment/index.php&lt;/code&gt; into &lt;code&gt;@app/themes/basic/modules/blog/views/comment/index.php&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;@app/modules/blog/views/comment/index.php&lt;/code&gt; 를 &lt;code&gt;@app/themes/basic/modules/blog/views/comment/index.php&lt;/code&gt; 로 테마 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4a69f4ab14d39fb98d118848d66da79417698347" translate="yes" xml:space="preserve">
          <source>It will also try to convert non-CSS or JS files (e.g. LESS, Sass) into the corresponding CSS or JS files using &lt;a href=&quot;yii-web-assetmanager#%24converter-detail&quot;&gt;asset converter&lt;/a&gt;.</source>
          <target state="translated">또한 &lt;a href=&quot;yii-web-assetmanager#%24converter-detail&quot;&gt;자산 변환기를&lt;/a&gt; 사용하여 비 CSS 또는 JS 파일 (예 : LESS, Sass)을 해당 CSS 또는 JS 파일로 변환하려고 시도합니다 .</target>
        </trans-unit>
        <trans-unit id="c29732523a5be5f4a01c51f1ab8b28d6f577e7d9" translate="yes" xml:space="preserve">
          <source>It will join all columns into a string with comma as separators.</source>
          <target state="translated">구분 기호로 쉼표를 사용하여 모든 열을 문자열로 결합합니다.</target>
        </trans-unit>
        <trans-unit id="1cacf9359d6cad637a6a34b4805a0a69023006b3" translate="yes" xml:space="preserve">
          <source>It will then check if the updated view file exists or not. If so, that file will be used to replace the original view file.</source>
          <target state="translated">그런 다음 업데이트 된보기 파일이 있는지 확인합니다. 그렇다면 해당 파일은 원래보기 파일을 대체하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="22dba5bdedd78fa7de659a7ce12a85deea2dbdd5" translate="yes" xml:space="preserve">
          <source>It's a good practice to define meaningful constants for your controller in case you have more error code types.</source>
          <target state="translated">더 많은 오류 코드 유형이있는 경우 컨트롤러에 의미있는 상수를 정의하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="b71a537ef5bb5a2eaf3606015fdc78eb142da6d4" translate="yes" xml:space="preserve">
          <source>It's a one-time project that will no longer be worked on.</source>
          <target state="translated">더 이상 작업하지 않는 일회성 프로젝트입니다.</target>
        </trans-unit>
        <trans-unit id="9425ca1cca62ec8a8bcdc958d3c1bbd5887e2772" translate="yes" xml:space="preserve">
          <source>It's also possible to use key instead of password via &lt;a href=&quot;yii-base-security#encryptByKey()-detail&quot;&gt;yii\base\Security::encryptByKey()&lt;/a&gt; and &lt;a href=&quot;yii-base-security#decryptByKey()-detail&quot;&gt;yii\base\Security::decryptByKey()&lt;/a&gt;.</source>
          <target state="translated">대신 암호를 통해 주요 사용할 수도 있습니다 &lt;a href=&quot;yii-base-security#encryptByKey()-detail&quot;&gt;YII \ 기본 \ 보안 :: encryptByKey ()&lt;/a&gt; 와 &lt;a href=&quot;yii-base-security#decryptByKey()-detail&quot;&gt;YII \ 기본 \ 보안 ::의 DecryptByKey를 ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="14d5c9fde290fe01df6f45234cdc30f9759137af" translate="yes" xml:space="preserve">
          <source>Item 1</source>
          <target state="translated">항목 1</target>
        </trans-unit>
        <trans-unit id="18ced5c76db797e1292c85b44d21d36295e5a2f8" translate="yes" xml:space="preserve">
          <source>Item 2</source>
          <target state="translated">항목 2</target>
        </trans-unit>
        <trans-unit id="e44739c3e353a3ae73c55984dd40ae4b03f08097" translate="yes" xml:space="preserve">
          <source>Item 3</source>
          <target state="translated">항목 3</target>
        </trans-unit>
        <trans-unit id="ed8246a860cdb8b17508b2b2e298eec6cac7ab35" translate="yes" xml:space="preserve">
          <source>Item 4</source>
          <target state="translated">항목 4</target>
        </trans-unit>
        <trans-unit id="c0fcc554ccff879f567ef032a1d01802ce78956a" translate="yes" xml:space="preserve">
          <source>Item index.</source>
          <target state="translated">아이템 인덱스.</target>
        </trans-unit>
        <trans-unit id="29e34590c00f9404b818d318193cb5de69513705" translate="yes" xml:space="preserve">
          <source>Item label.</source>
          <target state="translated">아이템 라벨.</target>
        </trans-unit>
        <trans-unit id="6bc5eec04878d10b41059c11a4cce09c74455c81" translate="yes" xml:space="preserve">
          <source>Iterates over &lt;a href=&quot;yii-web-urlrule#%24placeholders-detail&quot;&gt;$placeholders&lt;/a&gt; and checks whether each placeholder exists as a key in $matches array.</source>
          <target state="translated">&lt;a href=&quot;yii-web-urlrule#%24placeholders-detail&quot;&gt;$ placeholders를&lt;/a&gt; 반복하고 각 placeholder가 $ matches 배열의 키로 존재하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="78f1b4e4c6d73e121256eefe6748ba446c8487ee" translate="yes" xml:space="preserve">
          <source>Iterates through specified rules and calls &lt;a href=&quot;yii-web-compositeurlrule#createUrl()-detail&quot;&gt;createUrl()&lt;/a&gt; for each of them.</source>
          <target state="translated">지정된 규칙을 반복 하고 각 규칙 에 대해 &lt;a href=&quot;yii-web-compositeurlrule#createUrl()-detail&quot;&gt;createUrl ()&lt;/a&gt; 을 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="954c8b41c673d8226e3e3467a1a8343177ec64d1" translate="yes" xml:space="preserve">
          <source>Iteration number</source>
          <target state="translated">반복 번호</target>
        </trans-unit>
        <trans-unit id="bae8809b2429231a50c28ba87cecc038aac88855" translate="yes" xml:space="preserve">
          <source>Iterator</source>
          <target state="translated">Iterator</target>
        </trans-unit>
        <trans-unit id="9403aa5efbdb22c2f1977f9b3d45b6c23b569ce4" translate="yes" xml:space="preserve">
          <source>Its main task is to toggle integrity check of the database during data loading. This is needed by other DB-related fixtures (e.g. &lt;a href=&quot;yii-test-activefixture&quot;&gt;yii\test\ActiveFixture&lt;/a&gt;) so that they can populate data into the database without triggering integrity check errors.</source>
          <target state="translated">주요 작업은 데이터로드 중 데이터베이스의 무결성 검사를 토글하는 것입니다. 이것은 무결성 검사 오류를 유발하지 않고 데이터베이스에 데이터를 채울 수 있도록 다른 DB 관련 픽스처 (예 : &lt;a href=&quot;yii-test-activefixture&quot;&gt;yii \ test \ ActiveFixture&lt;/a&gt; )에 필요합니다.</target>
        </trans-unit>
        <trans-unit id="5766bfd5841dee1b6f2aaf89bbb921f60e7d1b6f" translate="yes" xml:space="preserve">
          <source>JSON format</source>
          <target state="translated">JSON 형식</target>
        </trans-unit>
        <trans-unit id="adf3b32b70ceb32a9085598f64127c92241a1e9f" translate="yes" xml:space="preserve">
          <source>JWS algorithms, which are allowed to be used.</source>
          <target state="translated">사용될 수있는 JWS 알고리즘.</target>
        </trans-unit>
        <trans-unit id="0bdbf91316a853d735e420a1dafcace50da7151a" translate="yes" xml:space="preserve">
          <source>JWS algorithms, which are allowed to be used. These are used by &lt;code&gt;spomky-labs/jose&lt;/code&gt; library for JWS validation/decryption. Make sure &lt;code&gt;spomky-labs/jose&lt;/code&gt; supports the particular algorithm before adding it here.</source>
          <target state="translated">사용될 수있는 JWS 알고리즘. 이들은 &lt;code&gt;spomky-labs/jose&lt;/code&gt; 라이브러리에서 JWS 유효성 검증 / 암호 해독에 사용됩니다. &lt;code&gt;spomky-labs/jose&lt;/code&gt; 가 여기에 추가하기 전에 특정 알고리즘을 지원 하는지 확인 하십시오.</target>
        </trans-unit>
        <trans-unit id="394dea453fe0f2d46e856dd2664100b7169fa2e6" translate="yes" xml:space="preserve">
          <source>JWS underlying data.</source>
          <target state="translated">JWS 기본 데이터.</target>
        </trans-unit>
        <trans-unit id="48bc7c7e77cc67e67c2a92ccb875a96515be001f" translate="yes" xml:space="preserve">
          <source>JavaScript button itself generated by \yii\authclient\clients\yii\authclient\widgets\GooglePlusButton widget. If you are using \yii\authclient\clients\yii\authclient\widgets\AuthChoice it will appear automatically. Otherwise you need to add it into your page manually. You may customize its appearance using 'widget' key at &lt;a href=&quot;yii-authclient-baseclient#%24viewOptions-detail&quot;&gt;$viewOptions&lt;/a&gt;:</source>
          <target state="translated">\ yii \ authclient \ clients \ yii \ authclient \ widgets \ GooglePlusButton 위젯에 의해 생성 된 JavaScript 버튼 자체. \ yii \ authclient \ clients \ yii \ authclient \ widgets \ AuthChoice를 사용하는 경우 자동으로 나타납니다. 그렇지 않으면 페이지에 수동으로 추가해야합니다. &lt;a href=&quot;yii-authclient-baseclient#%24viewOptions-detail&quot;&gt;$ viewOptions&lt;/a&gt; 에서 'widget'키를 사용하여 모양을 사용자 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9ee87f77ff1cd9a798e5b0c75ba2d2de50ea237d" translate="yes" xml:space="preserve">
          <source>JavaScript file compressor.</source>
          <target state="translated">자바 스크립트 파일 압축기.</target>
        </trans-unit>
        <trans-unit id="40da65be9a7c8710e9aa40b96f54c02232a955ba" translate="yes" xml:space="preserve">
          <source>JavaScript file compressor. If a string, it is treated as shell command template, which should contain placeholders {from} - source file name - and {to} - output file name. Otherwise, it is treated as PHP callback, which should perform the compression.</source>
          <target state="translated">자바 스크립트 파일 압축기. 문자열 인 경우 자리 표시 자 {from}-소스 파일 이름-및 {to}-출력 파일 이름을 포함해야하는 쉘 명령 템플리트로 처리됩니다. 그렇지 않으면 압축을 수행해야하는 PHP 콜백으로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="0d8f160a6c2fd9ddf6bf32b0a9d0699412d032dc" translate="yes" xml:space="preserve">
          <source>JavaScript files are combined, compressed and written to &lt;code&gt;js/all-{hash}.js&lt;/code&gt; where {hash} is replaced with the hash of the resulting file.</source>
          <target state="translated">JavaScript 파일은 &lt;code&gt;js/all-{hash}.js&lt;/code&gt; 에 결합, 압축 및 기록되며 여기서 {hash}는 결과 파일의 해시로 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="37fc744b377e37e4d25b618eb94f2e5961da9223" translate="yes" xml:space="preserve">
          <source>JavaScript function name.</source>
          <target state="translated">JavaScript 함수 이름</target>
        </trans-unit>
        <trans-unit id="45104ab0da2643be241e111b35b858fab612105e" translate="yes" xml:space="preserve">
          <source>Joining with Relations</source>
          <target state="translated">관계에 참여</target>
        </trans-unit>
        <trans-unit id="fe79a8c2a70073c5f85a3dd5282c58ea806f0110" translate="yes" xml:space="preserve">
          <source>Joins with the specified relations.</source>
          <target state="translated">지정된 관계로 조인합니다.</target>
        </trans-unit>
        <trans-unit id="0a553bfa58667cdae81434070798b551c5c7b08b" translate="yes" xml:space="preserve">
          <source>JsExpression marks a string as a JavaScript expression.</source>
          <target state="translated">JsExpression은 문자열을 JavaScript 표현식으로 표시합니다.</target>
        </trans-unit>
        <trans-unit id="a39c80ac4ae6093a2cb99575bc52b72b361ab4dd" translate="yes" xml:space="preserve">
          <source>Json is a helper class providing JSON data encoding and decoding.</source>
          <target state="translated">Json은 JSON 데이터 인코딩 및 디코딩을 제공하는 도우미 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="3137c3bdc4254e2d689f3bae4bc9ec23609e2b89" translate="yes" xml:space="preserve">
          <source>Json string or array of data to store</source>
          <target state="translated">저장할 JSON 문자열 또는 데이터 배열</target>
        </trans-unit>
        <trans-unit id="f1f4129b55aad72ca05992463d9fae98f805894d" translate="yes" xml:space="preserve">
          <source>JsonResponseFormatter formats the given data into a JSON or JSONP response content.</source>
          <target state="translated">JsonResponseFormatter는 지정된 데이터를 JSON 또는 JSONP 응답 컨텐츠로 형식화합니다.</target>
        </trans-unit>
        <trans-unit id="efada65b775773e67d70408dadefb1568f30d3e9" translate="yes" xml:space="preserve">
          <source>Keep Yii CSRF protection enabled.</source>
          <target state="translated">Yii CSRF 보호를 사용으로 유지하십시오.</target>
        </trans-unit>
        <trans-unit id="abca61e71b2fade3d232154e06c85efccc13232b" translate="yes" xml:space="preserve">
          <source>Keep in mind that customization made via &lt;a href=&quot;yii-web-assetmanager#%24bundles-detail&quot;&gt;yii\web\AssetManager::$bundles&lt;/a&gt; is applied at the creation of the asset bundle, e.g. at object constructor stage. Thus any adjustments made to the bundle object after that will override the mapping setup at &lt;a href=&quot;yii-web-assetmanager#%24bundles-detail&quot;&gt;yii\web\AssetManager::$bundles&lt;/a&gt; level. In particular: adjustments made inside &lt;a href=&quot;yii-web-assetbundle#init()-detail&quot;&gt;yii\web\AssetBundle::init()&lt;/a&gt; method or over the registered bundle object will take precedence over &lt;code&gt;AssetManager&lt;/code&gt; configuration. Here are the examples, where mapping set via &lt;a href=&quot;yii-web-assetmanager#%24bundles-detail&quot;&gt;yii\web\AssetManager::$bundles&lt;/a&gt; makes no effect:</source>
          <target state="translated">&lt;a href=&quot;yii-web-assetmanager#%24bundles-detail&quot;&gt;yii \ web \ AssetManager :: $ bundles&lt;/a&gt; 를 통해 수행 한 사용자 정의는 자산 번들 작성시 (예 : 오브젝트 생성자 단계)에 적용됩니다. 따라서 번들 오브젝트를 조정 한 후에는 &lt;a href=&quot;yii-web-assetmanager#%24bundles-detail&quot;&gt;yii \ web \ AssetManager :: $ bundles&lt;/a&gt; 레벨 의 맵핑 설정이 대체 됩니다. 특히, &lt;a href=&quot;yii-web-assetbundle#init()-detail&quot;&gt;yii \ web \ AssetBundle :: init ()&lt;/a&gt; 메소드 내에서 또는 등록 된 번들 오브젝트에 대한 조정은 &lt;code&gt;AssetManager&lt;/code&gt; 구성 보다 우선 합니다. 다음은 &lt;a href=&quot;yii-web-assetmanager#%24bundles-detail&quot;&gt;yii \ web \ AssetManager :: $ bundles&lt;/a&gt; 를 통한 매핑 설정이 적용되지 않는 예입니다.</target>
        </trans-unit>
        <trans-unit id="d310f486f71abe6bf48b2e365d77a015524fdf48" translate="yes" xml:space="preserve">
          <source>Keeps you focused on one thing at a time which results in improved planning and implementation.</source>
          <target state="translated">한 번에 한 가지 사항에만 집중하면 계획 및 구현이 향상됩니다.</target>
        </trans-unit>
        <trans-unit id="9a5a2bb480940ca6c7e9aefe683b69c88e51f3b6" translate="yes" xml:space="preserve">
          <source>Kept to match &lt;a href=&quot;yii-db-queryinterface&quot;&gt;yii\db\QueryInterface&lt;/a&gt;, its value is ignored.</source>
          <target state="translated">&lt;a href=&quot;yii-db-queryinterface&quot;&gt;yii \ db \ QueryInterface&lt;/a&gt; 와 일치하도록 유지 되면 해당 값이 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="1eeffa78fdad9a849e09f54683bacf7438ed48cb" translate="yes" xml:space="preserve">
          <source>Key derivation using standard algorithms: &lt;a href=&quot;yii-base-security#pbkdf2()-detail&quot;&gt;pbkdf2()&lt;/a&gt; and &lt;a href=&quot;yii-base-security#hkdf()-detail&quot;&gt;hkdf()&lt;/a&gt;</source>
          <target state="translated">표준 알고리즘을 사용한 키 파생 : &lt;a href=&quot;yii-base-security#pbkdf2()-detail&quot;&gt;pbkdf2 ()&lt;/a&gt; 및 &lt;a href=&quot;yii-base-security#hkdf()-detail&quot;&gt;hkdf ()&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eacd56ec60f535fbfc83f6a9a35278b0ec2b3b14" translate="yes" xml:space="preserve">
          <source>Key identifying the flash message type</source>
          <target state="translated">플래시 메시지 유형을 식별하는 키</target>
        </trans-unit>
        <trans-unit id="e3948cf0b8bb28a87e036f7a59e208c3d5160050" translate="yes" xml:space="preserve">
          <source>Key in &lt;a href=&quot;yii-authclient-oauthtoken#%24params-detail&quot;&gt;$params&lt;/a&gt; array, which stores token key.</source>
          <target state="translated">의 주요 &lt;a href=&quot;yii-authclient-oauthtoken#%24params-detail&quot;&gt;$는 PARAMS&lt;/a&gt; 배열, 저장 토큰 키를 누릅니다.</target>
        </trans-unit>
        <trans-unit id="965d2014aceeff49347b18d3699fd60c662d6412" translate="yes" xml:space="preserve">
          <source>Key in &lt;a href=&quot;yii-authclient-oauthtoken#%24params-detail&quot;&gt;$params&lt;/a&gt; array, which stores token secret key.</source>
          <target state="translated">의 주요 &lt;a href=&quot;yii-authclient-oauthtoken#%24params-detail&quot;&gt;$는 PARAMS&lt;/a&gt; 비밀 키 토큰 배열에 저장합니다.</target>
        </trans-unit>
        <trans-unit id="572f0e0eb3891af729345868f4e3bc5502ab39a3" translate="yes" xml:space="preserve">
          <source>Key name of the array element</source>
          <target state="translated">배열 요소의 키 이름</target>
        </trans-unit>
        <trans-unit id="228ea3a37fec3998b56612bb0b1b43383fdf01ee" translate="yes" xml:space="preserve">
          <source>Key name of the array element, an array of keys or property name of the object, or an anonymous function returning the value. The anonymous function signature should be: &lt;code&gt;function($array, $defaultValue)&lt;/code&gt;. The possibility to pass an array of keys is available since version 2.0.4.</source>
          <target state="translated">배열 요소의 키 이름, 키 배열 또는 객체의 속성 이름 또는 값을 반환하는 익명 함수 익명 함수 서명은 &lt;code&gt;function($array, $defaultValue)&lt;/code&gt; 이어야합니다 . 버전 2.0.4부터 여러 키를 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5a9e0f9669aaad5f3d4171b4572a9606fb11bb05" translate="yes" xml:space="preserve">
          <source>Key-value array of options to choose from</source>
          <target state="translated">선택할 수있는 키-값 배열</target>
        </trans-unit>
        <trans-unit id="9eec3d361dacbe41c0e70149bbca3539358acd8d" translate="yes" xml:space="preserve">
          <source>Keywords and statistics</source>
          <target state="translated">키워드 및 통계</target>
        </trans-unit>
        <trans-unit id="d2b1b5b3f5b6446d9521318155583acc76ce31db" translate="yes" xml:space="preserve">
          <source>LEVEL_ERROR</source>
          <target state="translated">LEVEL_ERROR</target>
        </trans-unit>
        <trans-unit id="659d13d5307a068a64cf185be136b0b17490214a" translate="yes" xml:space="preserve">
          <source>LEVEL_INFO</source>
          <target state="translated">LEVEL_INFO</target>
        </trans-unit>
        <trans-unit id="a72936db7d36c8346805ea98d4f6f40726fa2061" translate="yes" xml:space="preserve">
          <source>LEVEL_PROFILE</source>
          <target state="translated">LEVEL_PROFILE</target>
        </trans-unit>
        <trans-unit id="eb98608d5086f9b5c4d50e67ed41388a834ed080" translate="yes" xml:space="preserve">
          <source>LEVEL_PROFILE_BEGIN</source>
          <target state="translated">LEVEL_PROFILE_BEGIN</target>
        </trans-unit>
        <trans-unit id="a2e7efcc224d4ab029fba6835603957ebffe77ed" translate="yes" xml:space="preserve">
          <source>LEVEL_PROFILE_END</source>
          <target state="translated">LEVEL_PROFILE_END</target>
        </trans-unit>
        <trans-unit id="322e32ed2759b3527609622ac419af89b0abb6d2" translate="yes" xml:space="preserve">
          <source>LEVEL_TRACE</source>
          <target state="translated">LEVEL_TRACE</target>
        </trans-unit>
        <trans-unit id="040ff5de31b9f372ed7c317fd1dda33aa88925ff" translate="yes" xml:space="preserve">
          <source>LEVEL_WARNING</source>
          <target state="translated">LEVEL_WARNING</target>
        </trans-unit>
        <trans-unit id="29bc302e46b9e3593b40478f9b0a81df7e77d119" translate="yes" xml:space="preserve">
          <source>LINK_FIRST</source>
          <target state="translated">LINK_FIRST</target>
        </trans-unit>
        <trans-unit id="e7dfdf12c1a6de7352d6ba432245c486f12cd86a" translate="yes" xml:space="preserve">
          <source>LINK_LAST</source>
          <target state="translated">LINK_LAST</target>
        </trans-unit>
        <trans-unit id="42ac3a5f5e93bc6de89e295520640bd3aa2feb04" translate="yes" xml:space="preserve">
          <source>LINK_NEXT</source>
          <target state="translated">LINK_NEXT</target>
        </trans-unit>
        <trans-unit id="b39d244a1226958f318d091f41ebab07b04ab5bb" translate="yes" xml:space="preserve">
          <source>LINK_PREV</source>
          <target state="translated">LINK_PREV</target>
        </trans-unit>
        <trans-unit id="74341e3c271df3c784e595b804b1f90be0f80429" translate="yes" xml:space="preserve">
          <source>Label</source>
          <target state="translated">Label</target>
        </trans-unit>
        <trans-unit id="c5344369303c85be0908c150ac1a540b775f9039" translate="yes" xml:space="preserve">
          <source>Label text. It will NOT be HTML-encoded. Therefore you can pass in HTML code such as an image tag. If this is is coming from end users, you should &lt;a href=&quot;yii-helpers-basehtml#encode()-detail&quot;&gt;encode()&lt;/a&gt; it to prevent XSS attacks.</source>
          <target state="translated">라벨 텍스트. HTML로 인코딩되지 않습니다. 따라서 이미지 태그와 같은 HTML 코드를 전달할 수 있습니다. 이것이 최종 사용자로부터 오는 경우 XSS 공격을 막기 위해 &lt;a href=&quot;yii-helpers-basehtml#encode()-detail&quot;&gt;encode ()&lt;/a&gt; 해야합니다.</target>
        </trans-unit>
        <trans-unit id="a738fcb18716cbb58c41215f91444ae9df063b24" translate="yes" xml:space="preserve">
          <source>Label to be displayed in the &lt;a href=&quot;yii-grid-column#%24header-detail&quot;&gt;header cell&lt;/a&gt; and also to be used as the sorting link label when sorting is enabled for this column.</source>
          <target state="translated">&lt;a href=&quot;yii-grid-column#%24header-detail&quot;&gt;헤더 셀에&lt;/a&gt; 표시 되고이 열에 대해 정렬이 사용 가능한 경우 정렬 링크 레이블로 사용될 레이블입니다.</target>
        </trans-unit>
        <trans-unit id="3332875152d1f6e56c2b0f6d7ced5d53b540a47a" translate="yes" xml:space="preserve">
          <source>Label to be displayed in the &lt;a href=&quot;yii-grid-column#%24header-detail&quot;&gt;header cell&lt;/a&gt; and also to be used as the sorting link label when sorting is enabled for this column. If it is not set and the models provided by the GridViews data provider are instances of &lt;a href=&quot;yii-db-activerecord&quot;&gt;yii\db\ActiveRecord&lt;/a&gt;, the label will be determined using &lt;a href=&quot;yii-db-baseactiverecord#getAttributeLabel()-detail&quot;&gt;yii\db\ActiveRecord::getAttributeLabel()&lt;/a&gt;. Otherwise &lt;a href=&quot;yii-helpers-baseinflector#camel2words()-detail&quot;&gt;yii\helpers\Inflector::camel2words()&lt;/a&gt; will be used to get a label.</source>
          <target state="translated">&lt;a href=&quot;yii-grid-column#%24header-detail&quot;&gt;헤더 셀에&lt;/a&gt; 표시 되고이 열에 대해 정렬이 사용 가능한 경우 정렬 링크 레이블로 사용되는 레이블입니다. 설정되어 있지 않고 GridViews 데이터 제공자가 제공 한 모델이 &lt;a href=&quot;yii-db-activerecord&quot;&gt;yii \ db \ ActiveRecord의&lt;/a&gt; 인스턴스 인 경우 레이블은 &lt;a href=&quot;yii-db-baseactiverecord#getAttributeLabel()-detail&quot;&gt;yii \ db \ ActiveRecord :: getAttributeLabel ()을&lt;/a&gt; 사용하여 판별됩니다 . 그렇지 않으면 &lt;a href=&quot;yii-helpers-baseinflector#camel2words()-detail&quot;&gt;yii \ helpers \ Inflector :: camel2words ()&lt;/a&gt; 를 사용하여 레이블을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="797385a38b7c23c4f8d9af4e72c95ca916ebef45" translate="yes" xml:space="preserve">
          <source>Labels and Errors</source>
          <target state="translated">라벨 및 오류</target>
        </trans-unit>
        <trans-unit id="89b86ab0e66f527166d98df92ddbcf5416ed58f6" translate="yes" xml:space="preserve">
          <source>Language</source>
          <target state="translated">Language</target>
        </trans-unit>
        <trans-unit id="ff14617dcce78e689190623094ddf0b27d032404" translate="yes" xml:space="preserve">
          <source>Language to register translation file for</source>
          <target state="translated">번역 파일을 등록 할 언어</target>
        </trans-unit>
        <trans-unit id="809ffb8821d48d8016d76dc7b28ffe5e9e9fd2b0" translate="yes" xml:space="preserve">
          <source>Language to use when generating fixtures data.</source>
          <target state="translated">조명기 데이터를 생성 할 때 사용할 언어.</target>
        </trans-unit>
        <trans-unit id="218ad5a5d35ce65484235ded24fe59527a857c58" translate="yes" xml:space="preserve">
          <source>Last argument is PHP sort flag that could take the same values as the ones passed to PHP &lt;a href=&quot;http://php.net/manual/en/function.sort.php&quot;&gt;sort()&lt;/a&gt;.</source>
          <target state="translated">마지막 인수는 PHP &lt;a href=&quot;http://php.net/manual/en/function.sort.php&quot;&gt;sort ()에&lt;/a&gt; 전달 된 것과 동일한 값을 취할 수있는 PHP 정렬 플래그입니다 .</target>
        </trans-unit>
        <trans-unit id="9d89f36b5bb4fe24ac35cf180d0a95954f3a3212" translate="yes" xml:space="preserve">
          <source>Last inserted ID value.</source>
          <target state="translated">마지막으로 삽입 된 ID 값.</target>
        </trans-unit>
        <trans-unit id="4312b9cdc22a0d8cf25ab213c9d034cee9ce16ee" translate="yes" xml:space="preserve">
          <source>Last-Modified</source>
          <target state="translated">Last-Modified</target>
        </trans-unit>
        <trans-unit id="d85f400bc21b862742e07779e4d34b5a43f231ee" translate="yes" xml:space="preserve">
          <source>Last-Modified Header</source>
          <target state="translated">마지막으로 수정 된 헤더</target>
        </trans-unit>
        <trans-unit id="39353b2a101d4b28790e11da6d758cfa0cdeb81b" translate="yes" xml:space="preserve">
          <source>Later if you decide to change the thumbnail size, you only need to modify it in the application configuration; you don't need to touch any dependent code.</source>
          <target state="translated">나중에 축소판 크기를 변경하기로 결정한 경우 응용 프로그램 구성에서만 축소판 크기를 수정하면됩니다. 종속 코드를 건드릴 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="7bda8fc960e092db98f8703723b250cddb1296fe" translate="yes" xml:space="preserve">
          <source>Layout view name or &lt;a href=&quot;guide-concept-aliases&quot;&gt;path alias&lt;/a&gt;. If false, no layout will be applied.</source>
          <target state="translated">레이아웃 뷰 이름 또는 &lt;a href=&quot;guide-concept-aliases&quot;&gt;경로 별명&lt;/a&gt; . False이면 레이아웃이 적용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="28e6f54e33a1151bfd4c7cc4affd14df3525f2db" translate="yes" xml:space="preserve">
          <source>Layouts</source>
          <target state="translated">Layouts</target>
        </trans-unit>
        <trans-unit id="6b2a6fb47bfc0655afde70e1af2fdc52c76b1680" translate="yes" xml:space="preserve">
          <source>Layouts are a special type of views that represent the common parts of multiple views. For example, the pages for most Web applications share the same page header and footer. While you can repeat the same page header and footer in every view, a better way is to do this once in a layout and embed the rendering result of a content view at an appropriate place in the layout.</source>
          <target state="translated">배치는 여러보기의 공통 부분을 나타내는 특수한 유형의보기입니다. 예를 들어 대부분의 웹 응용 프로그램 페이지는 동일한 페이지 머리글과 바닥 글을 공유합니다. 모든보기에서 동일한 페이지 머리글과 바닥 글을 반복 할 수는 있지만이를 레이아웃에서 한 번만 수행하고 컨텐츠보기의 렌더링 결과를 레이아웃의 적절한 위치에 포함시키는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="cd9fa8949a528c77e40f0fcf701086c4c2abe613" translate="yes" xml:space="preserve">
          <source>Lazy Loading and Eager Loading</source>
          <target state="translated">지연 로딩 및 열망 로딩</target>
        </trans-unit>
        <trans-unit id="231cc2f077a23c082f774f5b05c49ed128af6ed2" translate="yes" xml:space="preserve">
          <source>Lazy loading is very convenient to use. However, it may suffer from a performance issue when you need to access the same relation property of multiple Active Record instances. Consider the following code example. How many SQL statements will be executed?</source>
          <target state="translated">게으른 로딩은 사용하기 매우 편리합니다. 그러나 여러 활성 레코드 인스턴스의 동일한 관계 속성에 액세스해야 할 경우 성능 문제가 발생할 수 있습니다. 다음 코드 예제를 고려하십시오. 얼마나 많은 SQL 문이 실행됩니까?</target>
        </trans-unit>
        <trans-unit id="4afd149dcc08248cc4b4d3d72d4c42502e166254" translate="yes" xml:space="preserve">
          <source>Length for character types. This parameter is available since version 2.0.4.</source>
          <target state="translated">문자 유형의 길이입니다. 이 매개 변수는 버전 2.0.4부터 사용 가능합니다.</target>
        </trans-unit>
        <trans-unit id="d3a2a067efb54eb5864893e7d51bbad1e563829c" translate="yes" xml:space="preserve">
          <source>Length of the data type</source>
          <target state="translated">데이터 타입의 길이</target>
        </trans-unit>
        <trans-unit id="b757d3a9d080c4d44178dda4972fffb8c745b11c" translate="yes" xml:space="preserve">
          <source>Length of the output key in bytes. If 0, the output key is the length of the hash algorithm output.</source>
          <target state="translated">출력 키의 길이 (바이트) 0 인 경우 출력 키는 해시 알고리즘 출력의 길이입니다.</target>
        </trans-unit>
        <trans-unit id="a6898ed257f17b315468150764d7ec6839eeee3c" translate="yes" xml:space="preserve">
          <source>Length or precision of the column. See &lt;a href=&quot;yii-db-columnschemabuilder#%24length-detail&quot;&gt;$length&lt;/a&gt;.</source>
          <target state="translated">열의 길이 또는 정밀도. &lt;a href=&quot;yii-db-columnschemabuilder#%24length-detail&quot;&gt;$ length&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="797bf1ffea40b9a1b9878306ce6dde8b7c67ad4a" translate="yes" xml:space="preserve">
          <source>Length or precision of the column. See &lt;a href=&quot;yii-db-columnschemabuilder#%24length-detail&quot;&gt;yii\db\ColumnSchemaBuilder::$length&lt;/a&gt;.</source>
          <target state="translated">열의 길이 또는 정밀도. &lt;a href=&quot;yii-db-columnschemabuilder#%24length-detail&quot;&gt;yii \ db \ ColumnSchemaBuilder :: $ length를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="835c5440c9d24f5ee57c0ff9f04ed20c76e24933" translate="yes" xml:space="preserve">
          <source>Length or precision of the column. See &lt;a href=&quot;yii-db-columnschemabuilder#%24length-detail&quot;&gt;yii\db\cubrid\ColumnSchemaBuilder::$length&lt;/a&gt;.</source>
          <target state="translated">열의 길이 또는 정밀도. &lt;a href=&quot;yii-db-columnschemabuilder#%24length-detail&quot;&gt;yii \ db \ cubrid \ ColumnSchemaBuilder :: $ length를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ddd7fbcf7caabfa012a3cd9a0e8a66723a8c5b21" translate="yes" xml:space="preserve">
          <source>Length or precision of the column. See &lt;a href=&quot;yii-db-columnschemabuilder#%24length-detail&quot;&gt;yii\db\mysql\ColumnSchemaBuilder::$length&lt;/a&gt;.</source>
          <target state="translated">열의 길이 또는 정밀도. &lt;a href=&quot;yii-db-columnschemabuilder#%24length-detail&quot;&gt;yii \ db \ mysql \ ColumnSchemaBuilder :: $ length를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4c558a3ab4ab5bb80daa2e9ff2fb5e2acbfa86f5" translate="yes" xml:space="preserve">
          <source>Length or precision of the column. See &lt;a href=&quot;yii-db-columnschemabuilder#%24length-detail&quot;&gt;yii\db\oci\ColumnSchemaBuilder::$length&lt;/a&gt;.</source>
          <target state="translated">열의 길이 또는 정밀도. &lt;a href=&quot;yii-db-columnschemabuilder#%24length-detail&quot;&gt;yii \ db \ oci \ ColumnSchemaBuilder :: $ length를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a7cdeddf2735ecbac1e196480e2de30811f85be3" translate="yes" xml:space="preserve">
          <source>Length or precision of the column. See &lt;a href=&quot;yii-db-columnschemabuilder#%24length-detail&quot;&gt;yii\db\sqlite\ColumnSchemaBuilder::$length&lt;/a&gt;.</source>
          <target state="translated">열의 길이 또는 정밀도. &lt;a href=&quot;yii-db-columnschemabuilder#%24length-detail&quot;&gt;yii \ db \ sqlite \ ColumnSchemaBuilder :: $ length를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="33b931e15d1b897ad63eb06842e636934b9dc9b6" translate="yes" xml:space="preserve">
          <source>Let the translators translate messages and store them in the message source(s).</source>
          <target state="translated">번역가가 메시지를 번역하고 메시지 소스에 저장하게하십시오.</target>
        </trans-unit>
        <trans-unit id="b9dda8dd777500112d0a3d6b488e1901110b75ba" translate="yes" xml:space="preserve">
          <source>Let's modify our example:</source>
          <target state="translated">예제를 수정 해 봅시다 :</target>
        </trans-unit>
        <trans-unit id="ce7f8511a04f764e4ba9ea54216c405bc0e5cf4e" translate="yes" xml:space="preserve">
          <source>Let's say we need to check if the family income is enough for children. We can create inline validator &lt;code&gt;validateChildrenFunds&lt;/code&gt; for that which will run only when &lt;code&gt;childrenCount&lt;/code&gt; is more than 0.</source>
          <target state="translated">가족 소득이 어린이에게 충분한 지 확인해야한다고 가정 해 봅시다. &lt;code&gt;childrenCount&lt;/code&gt; 가 0보다 큰 경우에만 실행할 인라인 유효성 검사기 &lt;code&gt;validateChildrenFunds&lt;/code&gt; 를 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f57406887eddf15717b6e8357580a6a092289d65" translate="yes" xml:space="preserve">
          <source>Let's start with the controller action:</source>
          <target state="translated">컨트롤러 액션부터 시작해 봅시다 :</target>
        </trans-unit>
        <trans-unit id="09f9976967e26045514aebbc88cac3cb535095c4" translate="yes" xml:space="preserve">
          <source>Let's use an example to further explain the above approach.</source>
          <target state="translated">위의 접근 방식을 자세히 설명하기 위해 예제를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="0496e84a828182064fc0adcd88efceb527d84020" translate="yes" xml:space="preserve">
          <source>Let's use some examples to illustrate how named parameters work. Assume we have declared the following three URL rules:</source>
          <target state="translated">명명 된 매개 변수의 작동 방식을 설명하기 위해 몇 가지 예를 사용하겠습니다. 다음 세 가지 URL 규칙을 선언했다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="d5be32a05365447b9dc9613fb840f1e533d53ba2" translate="yes" xml:space="preserve">
          <source>Level filter and category filter are combinatorial, i.e., only messages satisfying both filter conditions will be handled. Additionally, you may specify &lt;a href=&quot;yii-log-target#%24except-detail&quot;&gt;$except&lt;/a&gt; to exclude messages of certain categories.</source>
          <target state="translated">레벨 필터와 카테고리 필터는 조합 적입니다. 즉 두 필터 조건을 모두 만족하는 메시지 만 처리됩니다. 또한 특정 카테고리의 메시지를 &lt;a href=&quot;yii-log-target#%24except-detail&quot;&gt;제외&lt;/a&gt; 하기 위해 $ except 를 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b8784441607e9ae1e4a0d363f27f45028b927794" translate="yes" xml:space="preserve">
          <source>Licensed under the three clause BSD license.</source>
          <target state="translated">세 개의 BSD 라이센스 조항에 따라 라이센스가 부여됩니다.</target>
        </trans-unit>
        <trans-unit id="91a0dc86d2f4bb13716169ba8cd98e33cccfe26c" translate="yes" xml:space="preserve">
          <source>Lighttpd v1.4: &lt;a href=&quot;http://redmine.lighttpd.net/projects/lighttpd/wiki/X-LIGHTTPD-send-file&quot;&gt;X-LIGHTTPD-send-file&lt;/a&gt;</source>
          <target state="translated">Lighttpd v1.4 : &lt;a href=&quot;http://redmine.lighttpd.net/projects/lighttpd/wiki/X-LIGHTTPD-send-file&quot;&gt;X-LIGHTTPD 전송 파일&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b2dceb54584b72164cfe0a96e11cc226e13c0ca1" translate="yes" xml:space="preserve">
          <source>Lighttpd v1.5: &lt;a href=&quot;http://redmine.lighttpd.net/projects/lighttpd/wiki/X-LIGHTTPD-send-file&quot;&gt;X-Sendfile&lt;/a&gt;</source>
          <target state="translated">Lighttpd v1.5 : &lt;a href=&quot;http://redmine.lighttpd.net/projects/lighttpd/wiki/X-LIGHTTPD-send-file&quot;&gt;X-Sendfile&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="482884c11d536f0dab53357909c0c907fbd842ac" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#registering-meta-tags&quot;&gt;meta tags&lt;/a&gt;, link tags are useful in many cases, such as customizing favicon, pointing to RSS feed or delegating OpenID to another server. You can work with link tags in the similar way as meta tags by using &lt;a href=&quot;yii-web-view#registerLinkTag()-detail&quot;&gt;yii\web\View::registerLinkTag()&lt;/a&gt;. For example, in a content view, you can register a link tag like follows,</source>
          <target state="translated">&lt;a href=&quot;#registering-meta-tags&quot;&gt;메타 태그&lt;/a&gt; 와 마찬가지로 링크 태그는 즐겨 찾기 아이콘 사용자 정의, RSS 피드를 가리 키거나 OpenID를 다른 서버에 위임하는 등 많은 경우에 유용합니다. &lt;a href=&quot;yii-web-view#registerLinkTag()-detail&quot;&gt;yii \ web \ View :: registerLinkTag ()&lt;/a&gt; 를 사용하여 메타 태그와 비슷한 방식으로 링크 태그로 작업 할 수 있습니다 . 예를 들어, 컨텐츠보기에서 다음과 같이 링크 태그를 등록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2337907c5bba5b9e3ff0576a7608802b34561427" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;guide-caching-data&quot;&gt;data caching&lt;/a&gt;, a unique &lt;code&gt;$id&lt;/code&gt; is needed to identify a content cache.</source>
          <target state="translated">마찬가지로 &lt;a href=&quot;guide-caching-data&quot;&gt;데이터 캐싱&lt;/a&gt; , 고유 &lt;code&gt;$id&lt;/code&gt; 콘텐츠 캐시를 식별하려면 $ id 가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="dae05612b3de910ef5e39063047988c22759df1a" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;guide-caching-data#cache-dependencies&quot;&gt;data caching&lt;/a&gt;, content fragment being cached can also have dependencies. For example, the content of a post being displayed depends on whether or not the post is modified.</source>
          <target state="translated">&lt;a href=&quot;guide-caching-data#cache-dependencies&quot;&gt;데이터 캐싱&lt;/a&gt; 처럼 캐시되는 콘텐츠 조각에도 종속성이있을 수 있습니다. 예를 들어, 표시되는 게시물의 내용은 게시물의 수정 여부에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="cc03393f986360d65cf27f07982c09182f8930f4" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;guide-runtime-requests&quot;&gt;requests&lt;/a&gt; and &lt;a href=&quot;guide-runtime-responses&quot;&gt;responses&lt;/a&gt;, you can get access to sessions via the &lt;code&gt;session&lt;/code&gt;&lt;a href=&quot;guide-structure-application-components&quot;&gt;application component&lt;/a&gt; which is an instance of &lt;a href=&quot;yii-web-session&quot;&gt;yii\web\Session&lt;/a&gt;, by default.</source>
          <target state="translated">&lt;a href=&quot;guide-runtime-requests&quot;&gt;요청&lt;/a&gt; 및 &lt;a href=&quot;guide-runtime-responses&quot;&gt;응답&lt;/a&gt; 과 마찬가지로 &lt;a href=&quot;yii-web-session&quot;&gt;yii \ web \ Session&lt;/a&gt; 의 인스턴스 인 &lt;code&gt;session&lt;/code&gt; &lt;a href=&quot;guide-structure-application-components&quot;&gt;응용 프로그램 구성 요소&lt;/a&gt; 를 통해 세션에 액세스 할 수 있습니다. 기본적 .</target>
        </trans-unit>
        <trans-unit id="d979d2f6074ce4ff67f39867cd18ba940210aa0b" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;guide-structure-controllers&quot;&gt;controllers&lt;/a&gt; and &lt;a href=&quot;guide-structure-models&quot;&gt;models&lt;/a&gt;, there are conventions to organize views.</source>
          <target state="translated">&lt;a href=&quot;guide-structure-controllers&quot;&gt;컨트롤러&lt;/a&gt; 및 &lt;a href=&quot;guide-structure-models&quot;&gt;모델&lt;/a&gt; 처럼 뷰를 구성하는 규칙이 있습니다.</target>
        </trans-unit>
        <trans-unit id="c1b6da1a8de29c6581cf1d21c54c38f071954f29" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;yii-db-activequerytrait#with()-detail&quot;&gt;with()&lt;/a&gt;, you can join with one or multiple relations; you may customize the relation queries on-the-fly; you may join with nested relations; and you may mix the use of &lt;a href=&quot;yii-db-activequerytrait#with()-detail&quot;&gt;with()&lt;/a&gt; and &lt;a href=&quot;yii-db-activequery#joinWith()-detail&quot;&gt;joinWith()&lt;/a&gt;. For example,</source>
          <target state="translated">&lt;a href=&quot;yii-db-activequerytrait#with()-detail&quot;&gt;with ()&lt;/a&gt; 와 마찬가지로 하나 또는 여러 관계에 참여할 수 있습니다. 관계형 쿼리를 즉시 사용자 지정할 수 있습니다. 중첩 된 관계에 참여할 수 있습니다. &lt;a href=&quot;yii-db-activequerytrait#with()-detail&quot;&gt;with ()&lt;/a&gt; 와 &lt;a href=&quot;yii-db-activequery#joinWith()-detail&quot;&gt;joinWith ()를&lt;/a&gt; 혼합하여 사용할 수 있습니다. . 예를 들어</target>
        </trans-unit>
        <trans-unit id="94c94f83017eb3cbdaf2f4519fd53333e57bed8d" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;yii-db-query#andWhere()-detail&quot;&gt;andWhere()&lt;/a&gt; and &lt;a href=&quot;yii-db-query#orWhere()-detail&quot;&gt;orWhere()&lt;/a&gt;, you can use &lt;a href=&quot;yii-db-querytrait#andFilterWhere()-detail&quot;&gt;andFilterWhere()&lt;/a&gt; and &lt;a href=&quot;yii-db-querytrait#orFilterWhere()-detail&quot;&gt;orFilterWhere()&lt;/a&gt; to append additional filter conditions to the existing one.</source>
          <target state="translated">마찬가지로 &lt;a href=&quot;yii-db-query#andWhere()-detail&quot;&gt;andWhere ()&lt;/a&gt; 및 &lt;a href=&quot;yii-db-query#orWhere()-detail&quot;&gt;orWhere ()&lt;/a&gt; , 당신은 사용할 수 있습니다 &lt;a href=&quot;yii-db-querytrait#andFilterWhere()-detail&quot;&gt;andFilterWhere ()&lt;/a&gt; 와 &lt;a href=&quot;yii-db-querytrait#orFilterWhere()-detail&quot;&gt;orFilterWhere을 ()&lt;/a&gt; 기존에 추가 필터 조건을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ef662e1b5e1beb2e90349f34328e9e70576fc69e" translate="yes" xml:space="preserve">
          <source>Like accessing controllers in an application, &lt;a href=&quot;guide-structure-controllers#routes&quot;&gt;routes&lt;/a&gt; are used to address controllers in a module. A route for a controller within a module must begin with the module ID followed by the &lt;a href=&quot;guide-structure-controllers#controller-ids&quot;&gt;controller ID&lt;/a&gt; and &lt;a href=&quot;structure-controllers.md#action-ids&quot;&gt;action ID&lt;/a&gt;. For example, if an application uses a module named &lt;code&gt;forum&lt;/code&gt;, then the route &lt;code&gt;forum/post/index&lt;/code&gt; would represent the &lt;code&gt;index&lt;/code&gt; action of the &lt;code&gt;post&lt;/code&gt; controller in the module. If the route only contains the module ID, then the &lt;a href=&quot;yii-base-module#%24defaultRoute-detail&quot;&gt;yii\base\Module::$defaultRoute&lt;/a&gt; property, which defaults to &lt;code&gt;default&lt;/code&gt;, will determine which controller/action should be used. This means a route &lt;code&gt;forum&lt;/code&gt; would represent the &lt;code&gt;default&lt;/code&gt; controller in the &lt;code&gt;forum&lt;/code&gt; module.</source>
          <target state="translated">응용 프로그램의 컨트롤러에 액세스하는 것과 같이 &lt;a href=&quot;guide-structure-controllers#routes&quot;&gt;경로&lt;/a&gt; 는 모듈의 컨트롤러를 처리하는 데 사용됩니다. 모듈 내 컨트롤러의 경로는 모듈 ID로 시작하고 그 뒤에 &lt;a href=&quot;guide-structure-controllers#controller-ids&quot;&gt;컨트롤러 ID&lt;/a&gt; 및 &lt;a href=&quot;structure-controllers.md#action-ids&quot;&gt;작업 ID가&lt;/a&gt; 와야합니다 . 예를 들어, 애플리케이션이 &lt;code&gt;forum&lt;/code&gt; 이라는 모듈을 사용하는 경우 route &lt;code&gt;forum/post/index&lt;/code&gt; 는 모듈에서 &lt;code&gt;post&lt;/code&gt; 컨트롤러 의 &lt;code&gt;index&lt;/code&gt; 조치를 나타냅니다 . 라우트에 모듈 ID 만 포함 된 경우, 기본값은 &lt;code&gt;default&lt;/code&gt; 인 &lt;a href=&quot;yii-base-module#%24defaultRoute-detail&quot;&gt;yii \ base \ Module :: $ defaultRoute&lt;/a&gt; 특성이 사용해야하는 제어기 / 조치를 결정합니다. 이것은 루트 &lt;code&gt;forum&lt;/code&gt; 의미합니다 &lt;code&gt;forum&lt;/code&gt; 모듈 의 &lt;code&gt;default&lt;/code&gt; 컨트롤러를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="fe5373551bdb5d80f2496cb6e802026b7a419bf6" translate="yes" xml:space="preserve">
          <source>Like browser redirection, file sending is another feature that relies on specific HTTP headers. Yii provides a set of methods to support various file sending needs. They all have built-in support for the HTTP range header.</source>
          <target state="translated">브라우저 리디렉션과 마찬가지로 파일 전송은 특정 HTTP 헤더를 사용하는 또 다른 기능입니다. Yii는 다양한 파일 전송 요구를 지원하는 일련의 방법을 제공합니다. 이들은 모두 HTTP 범위 헤더를 기본적으로 지원합니다.</target>
        </trans-unit>
        <trans-unit id="65804e0016ba3e0c6503a7d96dc18a760df2c778" translate="yes" xml:space="preserve">
          <source>Like normal &lt;a href=&quot;guide-concept-configurations&quot;&gt;configurations&lt;/a&gt;, application configurations specify how to initialize properties of application objects. Because application configurations are often very complex, they usually are kept in &lt;a href=&quot;guide-concept-configurations#configuration-files&quot;&gt;configuration files&lt;/a&gt;, like the &lt;code&gt;web.php&lt;/code&gt; file in the above example.</source>
          <target state="translated">일반 &lt;a href=&quot;guide-concept-configurations&quot;&gt;구성&lt;/a&gt; 과 마찬가지로 응용 프로그램 구성은 응용 프로그램 객체의 속성을 초기화하는 방법을 지정합니다. 응용 프로그램 구성은 종종 매우 복잡하기 때문에 일반적으로 위 예제 의 &lt;code&gt;web.php&lt;/code&gt; 파일 과 같이 &lt;a href=&quot;guide-concept-configurations#configuration-files&quot;&gt;구성 파일에&lt;/a&gt; 보관됩니다 .</target>
        </trans-unit>
        <trans-unit id="7cf89d3c1ef52311cdd7408cf24ee707b624de2f" translate="yes" xml:space="preserve">
          <source>Like normal &lt;a href=&quot;guide-structure-models&quot;&gt;models&lt;/a&gt;, Active Record instances also enjoy the &lt;a href=&quot;guide-structure-models#massive-assignment&quot;&gt;massive assignment feature&lt;/a&gt;. Using this feature, you can assign values to multiple attributes of an Active Record instance in a single PHP statement, like shown below. Do remember that only &lt;a href=&quot;guide-structure-models#safe-attributes&quot;&gt;safe attributes&lt;/a&gt; can be massively assigned, though.</source>
          <target state="translated">일반 &lt;a href=&quot;guide-structure-models&quot;&gt;모델&lt;/a&gt; 과 마찬가지로 Active Record 인스턴스도 &lt;a href=&quot;guide-structure-models#massive-assignment&quot;&gt;대규모 할당 기능을 사용합니다&lt;/a&gt; . 이 기능을 사용하면 아래와 같이 단일 PHP 문으로 Active Record 인스턴스의 여러 속성에 값을 할당 할 수 있습니다. 그러나 &lt;a href=&quot;guide-structure-models#safe-attributes&quot;&gt;안전한 속성&lt;/a&gt; 만 대규모로 할당 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a2bc4dcfcf66746759e460440884ea203327d5d3" translate="yes" xml:space="preserve">
          <source>Like other data providers, SqlDataProvider also supports sorting and pagination. It does so by modifying the given &lt;a href=&quot;yii-data-sqldataprovider#%24sql-detail&quot;&gt;$sql&lt;/a&gt; statement with &quot;ORDER BY&quot; and &quot;LIMIT&quot; clauses. You may configure the &lt;a href=&quot;yii-data-basedataprovider#%24sort-detail&quot;&gt;$sort&lt;/a&gt; and &lt;a href=&quot;yii-data-basedataprovider#%24pagination-detail&quot;&gt;$pagination&lt;/a&gt; properties to customize sorting and pagination behaviors.</source>
          <target state="translated">다른 데이터 공급자와 마찬가지로 SqlDataProvider는 정렬 및 페이지 매김도 지원합니다. &quot;ORDER BY&quot;및 &quot;LIMIT&quot;절을 사용 하여 지정된 &lt;a href=&quot;yii-data-sqldataprovider#%24sql-detail&quot;&gt;$ sql&lt;/a&gt; 문을 수정하면 됩니다. 정렬 및 페이지 매김 동작을 사용자 정의하기 위해 &lt;a href=&quot;yii-data-basedataprovider#%24sort-detail&quot;&gt;$ sort&lt;/a&gt; 및 &lt;a href=&quot;yii-data-basedataprovider#%24pagination-detail&quot;&gt;$ pagination&lt;/a&gt; 속성을 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9338779c08933a376067cbdeb6d3e58d970d4673" translate="yes" xml:space="preserve">
          <source>Like regular session data, you can store arbitrary data as flash data.</source>
          <target state="translated">일반 세션 데이터와 마찬가지로 임의의 데이터를 플래시 데이터로 저장할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="71e126d0d7c3f09b4e0b83582f3862361b467a8c" translate="yes" xml:space="preserve">
          <source>Like the &lt;a href=&quot;#language&quot;&gt;language&lt;/a&gt; property, you should configure this property in terms of an &lt;a href=&quot;http://en.wikipedia.org/wiki/IETF_language_tag&quot;&gt;IETF language tag&lt;/a&gt;. For example, &lt;code&gt;en&lt;/code&gt; stands for English, while &lt;code&gt;en-US&lt;/code&gt; stands for English (United States).</source>
          <target state="translated">&lt;a href=&quot;#language&quot;&gt;언어&lt;/a&gt; 속성 과 마찬가지로이 속성을 &lt;a href=&quot;http://en.wikipedia.org/wiki/IETF_language_tag&quot;&gt;IETF 언어 태그로&lt;/a&gt; 구성해야합니다 . 예를 들어 &lt;code&gt;en&lt;/code&gt; 은 영어, &lt;code&gt;en-US&lt;/code&gt; 는 영어 (미국)를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="628670184009c73fd7b4f2706c21acfc8d32e72d" translate="yes" xml:space="preserve">
          <source>Like working with plain text inputs, to upload a single file you would create a model class and use an attribute of the model to keep the uploaded file instance. You should also declare a validation rule to validate the file upload. For example,</source>
          <target state="translated">일반 텍스트 입력 작업과 마찬가지로 단일 파일을 업로드하려면 모델 클래스를 작성하고 모델의 속성을 사용하여 업로드 된 파일 인스턴스를 유지하십시오. 파일 업로드의 유효성을 검사하는 유효성 검사 규칙도 선언해야합니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="a7c04c64ed3f2a9374590c76c50d3b7f1b18e3da" translate="yes" xml:space="preserve">
          <source>Limitations</source>
          <target state="translated">Limitations</target>
        </trans-unit>
        <trans-unit id="f013cda76513264cfa583f0ca11bbe304d7f3a0e" translate="yes" xml:space="preserve">
          <source>Limitations of batch query in MySQL</source>
          <target state="translated">MySQL에서 배치 쿼리의 제한</target>
        </trans-unit>
        <trans-unit id="7566f85bc7398a183c295a555beb9cffb0fa5ca6" translate="yes" xml:space="preserve">
          <source>Link HTML options.</source>
          <target state="translated">HTML 옵션을 연결하십시오.</target>
        </trans-unit>
        <trans-unit id="0eaa4a7f34a5354401866258f3b38e3115f942d3" translate="yes" xml:space="preserve">
          <source>Link body. It will NOT be HTML-encoded. Therefore you can pass in HTML code such as an image tag. If this is coming from end users, you should consider &lt;a href=&quot;yii-helpers-basehtml#encode()-detail&quot;&gt;encode()&lt;/a&gt; it to prevent XSS attacks.</source>
          <target state="translated">몸을 연결하십시오. HTML로 인코딩되지 않습니다. 따라서 이미지 태그와 같은 HTML 코드를 전달할 수 있습니다. 이것이 최종 사용자로부터 오는 경우 XSS 공격을 막기 위해 &lt;a href=&quot;yii-helpers-basehtml#encode()-detail&quot;&gt;encode ()를&lt;/a&gt; 고려해야 합니다.</target>
        </trans-unit>
        <trans-unit id="1d2708f91272830e257be97266a06389c3e80d15" translate="yes" xml:space="preserve">
          <source>Link represents a link object as defined in &lt;a href=&quot;https://tools.ietf.org/html/draft-kelly-json-hal-03&quot;&gt;JSON Hypermedia API Language&lt;/a&gt;.</source>
          <target state="translated">링크는 &lt;a href=&quot;https://tools.ietf.org/html/draft-kelly-json-hal-03&quot;&gt;JSON 하이퍼 미디어 API 언어에&lt;/a&gt; 정의 된 링크 객체를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="32432a5d1fec70c525588e3aedb7e461abf59715" translate="yes" xml:space="preserve">
          <source>Link text, if not set - default value will be generated.</source>
          <target state="translated">링크 텍스트 (설정되지 않은 경우)-기본값이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="2cb68fb93681c3eb52e4447dbd6af16744b1a6a7" translate="yes" xml:space="preserve">
          <source>LinkPager displays a list of hyperlinks that lead to different pages of target.</source>
          <target state="translated">LinkPager는 다른 대상 페이지로 연결되는 하이퍼 링크 목록을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="9f5dde2fe3a5b1bff3251f5d9639b0c4de9d7fcb" translate="yes" xml:space="preserve">
          <source>LinkPager works with a &lt;a href=&quot;yii-data-pagination&quot;&gt;yii\data\Pagination&lt;/a&gt; object which specifies the total number of pages and the current page number.</source>
          <target state="translated">LinkPager는 총 페이지 수와 현재 페이지 번호를 지정하는 yii &lt;a href=&quot;yii-data-pagination&quot;&gt;\ data \ Pagination&lt;/a&gt; 객체 와 함께 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="95dfacf07c3b56e60b62ce5bd4ca9c9b1a1b4dcb" translate="yes" xml:space="preserve">
          <source>LinkSorter renders a list of sort links for the given sort definition.</source>
          <target state="translated">LinkSorter는 주어진 정렬 정의에 대한 정렬 링크 목록을 렌더링합니다.</target>
        </trans-unit>
        <trans-unit id="48bdaaa6866e1404161de03a8fd9c4a7de6e2104" translate="yes" xml:space="preserve">
          <source>LinkSorter will generate a hyperlink for every attribute declared in &lt;a href=&quot;yii-widgets-linksorter#%24sort-detail&quot;&gt;$sort&lt;/a&gt;.</source>
          <target state="translated">LinkSorter는 &lt;a href=&quot;yii-widgets-linksorter#%24sort-detail&quot;&gt;$ sort에&lt;/a&gt; 선언 된 모든 속성에 대한 하이퍼 링크를 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="1abcf3efac2961bd6ee8a5da07cd75ac321766d6" translate="yes" xml:space="preserve">
          <source>Linkable is the interface that should be implemented by classes that typically represent locatable resources.</source>
          <target state="translated">링크 가능은 일반적으로 위치 지정 가능한 자원을 나타내는 클래스로 구현해야하는 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="5e253f97052f961c78cb839ac5145fcfa7b8f188" translate="yes" xml:space="preserve">
          <source>Linkified with HTML type/class name.</source>
          <target state="translated">HTML 유형 / 클래스 이름과 연결되었습니다.</target>
        </trans-unit>
        <trans-unit id="014bcd654c60d5250fad2123b073b9c0ac3340f6" translate="yes" xml:space="preserve">
          <source>Links</source>
          <target state="translated">Links</target>
        </trans-unit>
        <trans-unit id="648024d2b05620106a8c9984529a47346df6045c" translate="yes" xml:space="preserve">
          <source>List all available controllers and actions in machine readable format.</source>
          <target state="translated">사용 가능한 모든 컨트롤러와 작업을 시스템에서 읽을 수있는 형식으로 나열하십시오.</target>
        </trans-unit>
        <trans-unit id="d4ef3ef4566f01fa81b7ad45415b207d83d0f662" translate="yes" xml:space="preserve">
          <source>List all available options for the $action in machine readable format.</source>
          <target state="translated">기계가 읽을 수있는 형식으로 $ action에 사용 가능한 모든 옵션을 나열하십시오.</target>
        </trans-unit>
        <trans-unit id="34dab8478695722f1cfea55a712d89281ba3253b" translate="yes" xml:space="preserve">
          <source>List of &lt;a href=&quot;yii-i18n-messagesource&quot;&gt;yii\i18n\MessageSource&lt;/a&gt; configurations or objects.</source>
          <target state="translated">&lt;a href=&quot;yii-i18n-messagesource&quot;&gt;yii \ i18n \ MessageSource&lt;/a&gt; 구성 또는 객체의 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="3824a565b6d589fa09f737fec7b052f864f57e04" translate="yes" xml:space="preserve">
          <source>List of &lt;a href=&quot;yii-i18n-messagesource&quot;&gt;yii\i18n\MessageSource&lt;/a&gt; configurations or objects. The array keys are message category patterns, and the array values are the corresponding &lt;a href=&quot;yii-i18n-messagesource&quot;&gt;yii\i18n\MessageSource&lt;/a&gt; objects or the configurations for creating the &lt;a href=&quot;yii-i18n-messagesource&quot;&gt;yii\i18n\MessageSource&lt;/a&gt; objects.</source>
          <target state="translated">&lt;a href=&quot;yii-i18n-messagesource&quot;&gt;yii \ i18n \ MessageSource&lt;/a&gt; 구성 또는 객체의 목록입니다 . 배열 키는 메시지 분류 패턴이며, 상기 배열 값들은 대응되는 &lt;a href=&quot;yii-i18n-messagesource&quot;&gt;YII \ I18N \ MessageSource를는&lt;/a&gt; 개체 또는 생성하는 구성 &lt;a href=&quot;yii-i18n-messagesource&quot;&gt;YII \ I18N \ MessageSource를&lt;/a&gt; 개체.</target>
        </trans-unit>
        <trans-unit id="3f8f051447597b283c71b4d9d7fdb2a3ba8c2304" translate="yes" xml:space="preserve">
          <source>List of CSS files that this bundle contains.</source>
          <target state="translated">이 번들에 포함 된 CSS 파일 목록</target>
        </trans-unit>
        <trans-unit id="943f4415ff4513c612a8ad38e00edadda2c57efc" translate="yes" xml:space="preserve">
          <source>List of CSS files that this bundle contains. Each CSS file can be specified in one of the three formats as explained in &lt;a href=&quot;yii-web-assetbundle#%24js-detail&quot;&gt;$js&lt;/a&gt;.</source>
          <target state="translated">이 번들에 포함 된 CSS 파일 목록 각 CSS 파일은 &lt;a href=&quot;yii-web-assetbundle#%24js-detail&quot;&gt;$ js에&lt;/a&gt; 설명 된대로 세 가지 형식 중 하나로 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f771c0bbea2209353980ab2d239220875acf76c6" translate="yes" xml:space="preserve">
          <source>List of HTML attributes for the &lt;code&gt;tab-content&lt;/code&gt; container.</source>
          <target state="translated">&lt;code&gt;tab-content&lt;/code&gt; 컨테이너 의 HTML 속성 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="f7c9b1002953abbefde7b1b2490853e47f6b47c5" translate="yes" xml:space="preserve">
          <source>List of HTML attributes for the &lt;code&gt;tab-content&lt;/code&gt; container. This will always contain the CSS class &lt;code&gt;tab-content&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;tab-content&lt;/code&gt; 컨테이너 의 HTML 속성 목록입니다 . 여기에는 항상 CSS 클래스 &lt;code&gt;tab-content&lt;/code&gt; 가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="9529d53f912f25efa400179349dd8c597d7caab9" translate="yes" xml:space="preserve">
          <source>List of HTML attributes for the header container tags.</source>
          <target state="translated">헤더 컨테이너 태그의 HTML 속성 목록입니다.</target>
        </trans-unit>
        <trans-unit id="5abba5dac1a4a64e4a3d796afb7fafa650e221fa" translate="yes" xml:space="preserve">
          <source>List of HTML attributes for the header container tags. This will be overwritten by the &quot;headerOptions&quot; set in individual &lt;a href=&quot;yii-bootstrap-tabs#%24items-detail&quot;&gt;$items&lt;/a&gt;.</source>
          <target state="translated">헤더 컨테이너 태그의 HTML 속성 목록입니다. 개별 &lt;a href=&quot;yii-bootstrap-tabs#%24items-detail&quot;&gt;$ items에&lt;/a&gt; 설정된 &quot;headerOptions&quot;로 덮어 씁니다 .</target>
        </trans-unit>
        <trans-unit id="c1185d4557fd2432da672a2604cddf48e69403ba" translate="yes" xml:space="preserve">
          <source>List of HTML attributes for the header container tags. This will be overwritten by the &quot;headerOptions&quot; set in individual &lt;a href=&quot;yii-jui-tabs#%24items-detail&quot;&gt;$items&lt;/a&gt;.</source>
          <target state="translated">헤더 컨테이너 태그의 HTML 속성 목록입니다. 개별 &lt;a href=&quot;yii-jui-tabs#%24items-detail&quot;&gt;$ items에&lt;/a&gt; 설정된 &quot;headerOptions&quot;로 덮어 씁니다 .</target>
        </trans-unit>
        <trans-unit id="1cb71ade2d47a827d6fe3cce0dbaca61c12de041" translate="yes" xml:space="preserve">
          <source>List of HTML attributes for the item container tags.</source>
          <target state="translated">항목 컨테이너 태그의 HTML 속성 목록입니다.</target>
        </trans-unit>
        <trans-unit id="f15162ddd2f220173ef05a2e252f16f136cbaa55" translate="yes" xml:space="preserve">
          <source>List of HTML attributes for the item container tags. This will be overwritten by the &quot;options&quot; set in individual &lt;a href=&quot;yii-bootstrap-tabs#%24items-detail&quot;&gt;$items&lt;/a&gt;. The following special options are recognized:</source>
          <target state="translated">항목 컨테이너 태그의 HTML 속성 목록입니다. 개별 &lt;a href=&quot;yii-bootstrap-tabs#%24items-detail&quot;&gt;$ items에&lt;/a&gt; 설정된 &quot;options&quot;로 덮어 씁니다 . 다음과 같은 특수 옵션이 인식됩니다.</target>
        </trans-unit>
        <trans-unit id="408fce264b71f4d4ac59ee746838d35540a4c8d5" translate="yes" xml:space="preserve">
          <source>List of HTML attributes for the item container tags. This will be overwritten by the &quot;options&quot; set in individual &lt;a href=&quot;yii-jui-accordion#%24items-detail&quot;&gt;$items&lt;/a&gt;. The following special options are recognized:</source>
          <target state="translated">항목 컨테이너 태그의 HTML 속성 목록입니다. 개별 &lt;a href=&quot;yii-jui-accordion#%24items-detail&quot;&gt;$ items에&lt;/a&gt; 설정된 &quot;options&quot;로 덮어 씁니다 . 다음과 같은 특수 옵션이 인식됩니다.</target>
        </trans-unit>
        <trans-unit id="76ec4dd974d8bb1898dcf8d78de91ea1cf04938c" translate="yes" xml:space="preserve">
          <source>List of HTML attributes for the item container tags. This will be overwritten by the &quot;options&quot; set in individual &lt;a href=&quot;yii-jui-selectable#%24items-detail&quot;&gt;$items&lt;/a&gt;. The following special options are recognized:</source>
          <target state="translated">항목 컨테이너 태그의 HTML 속성 목록입니다. 개별 &lt;a href=&quot;yii-jui-selectable#%24items-detail&quot;&gt;$ items에&lt;/a&gt; 설정된 &quot;options&quot;로 덮어 씁니다 . 다음과 같은 특수 옵션이 인식됩니다.</target>
        </trans-unit>
        <trans-unit id="a04b6e5e6f87670216a63fdfd92c4e203720d21e" translate="yes" xml:space="preserve">
          <source>List of HTML attributes for the item container tags. This will be overwritten by the &quot;options&quot; set in individual &lt;a href=&quot;yii-jui-sortable#%24items-detail&quot;&gt;$items&lt;/a&gt;. The following special options are recognized:</source>
          <target state="translated">항목 컨테이너 태그의 HTML 속성 목록입니다. 개별 &lt;a href=&quot;yii-jui-sortable#%24items-detail&quot;&gt;$ items에&lt;/a&gt; 설정된 &quot;options&quot;로 덮어 씁니다 . 다음과 같은 특수 옵션이 인식됩니다.</target>
        </trans-unit>
        <trans-unit id="e73777739572a0b598482737c8083a27dd48c125" translate="yes" xml:space="preserve">
          <source>List of HTML attributes for the item container tags. This will be overwritten by the &quot;options&quot; set in individual &lt;a href=&quot;yii-jui-tabs#%24items-detail&quot;&gt;$items&lt;/a&gt;. The following special options are recognized:</source>
          <target state="translated">항목 컨테이너 태그의 HTML 속성 목록입니다. 개별 &lt;a href=&quot;yii-jui-tabs#%24items-detail&quot;&gt;$ items에&lt;/a&gt; 설정된 &quot;options&quot;로 덮어 씁니다 . 다음과 같은 특수 옵션이 인식됩니다.</target>
        </trans-unit>
        <trans-unit id="48183e619bf765eba0a524889d105e528c00769f" translate="yes" xml:space="preserve">
          <source>List of HTML attributes for the item header container tags.</source>
          <target state="translated">항목 헤더 컨테이너 태그의 HTML 속성 목록입니다.</target>
        </trans-unit>
        <trans-unit id="5d804a1960621d5e35d6c363111325e3a69e0c75" translate="yes" xml:space="preserve">
          <source>List of HTML attributes for the item header container tags. This will be overwritten by the &quot;headerOptions&quot; set in individual &lt;a href=&quot;yii-jui-accordion#%24items-detail&quot;&gt;$items&lt;/a&gt;. The following special options are recognized:</source>
          <target state="translated">항목 헤더 컨테이너 태그의 HTML 속성 목록입니다. 개별 &lt;a href=&quot;yii-jui-accordion#%24items-detail&quot;&gt;$ items에&lt;/a&gt; 설정된 &quot;headerOptions&quot;로 덮어 씁니다 . 다음과 같은 특수 옵션이 인식됩니다.</target>
        </trans-unit>
        <trans-unit id="645b2c6af6a4f5a72ac955eb40a317939400ff78" translate="yes" xml:space="preserve">
          <source>List of HTML attributes for the tab header link tags.</source>
          <target state="translated">탭 헤더 링크 태그의 HTML 속성 목록입니다.</target>
        </trans-unit>
        <trans-unit id="733e382fa690255d5efe8fd015d9cc8ebb5a562c" translate="yes" xml:space="preserve">
          <source>List of HTML attributes for the tab header link tags. This will be overwritten by the &quot;linkOptions&quot; set in individual &lt;a href=&quot;yii-bootstrap-tabs#%24items-detail&quot;&gt;$items&lt;/a&gt;.</source>
          <target state="translated">탭 헤더 링크 태그의 HTML 속성 목록입니다. 개별 &lt;a href=&quot;yii-bootstrap-tabs#%24items-detail&quot;&gt;$ items에&lt;/a&gt; 설정된 &quot;linkOptions&quot;가이를 덮어 씁니다 .</target>
        </trans-unit>
        <trans-unit id="18a66158b032478c928e2098cc4671dba4d3fbb9" translate="yes" xml:space="preserve">
          <source>List of HTML attributes shared by all menu &lt;a href=&quot;yii-widgets-menu#%24items-detail&quot;&gt;$items&lt;/a&gt;.</source>
          <target state="translated">모든 메뉴 &lt;a href=&quot;yii-widgets-menu#%24items-detail&quot;&gt;$ items가&lt;/a&gt; 공유하는 HTML 속성 목록 .</target>
        </trans-unit>
        <trans-unit id="4d84af1e62d06939a01c8d6c8a199417cf0bdd9e" translate="yes" xml:space="preserve">
          <source>List of HTML attributes shared by all menu &lt;a href=&quot;yii-widgets-menu#%24items-detail&quot;&gt;$items&lt;/a&gt;. If any individual menu item specifies its &lt;code&gt;options&lt;/code&gt;, it will be merged with this property before being used to generate the HTML attributes for the menu item tag. The following special options are recognized:</source>
          <target state="translated">모든 메뉴 &lt;a href=&quot;yii-widgets-menu#%24items-detail&quot;&gt;$ items가&lt;/a&gt; 공유하는 HTML 속성 목록 . 개별 메뉴 항목이 해당 &lt;code&gt;options&lt;/code&gt; 지정하는 경우 메뉴 항목 태그의 HTML 속성을 생성하는 데 사용되기 전에이 속성과 병합됩니다. 다음과 같은 특수 옵션이 인식됩니다.</target>
        </trans-unit>
        <trans-unit id="9f8975482ad85f42ed3ea3552f75321c0969e4d0" translate="yes" xml:space="preserve">
          <source>List of HTTP status codes and the corresponding texts</source>
          <target state="translated">HTTP 상태 코드 및 해당 텍스트 목록</target>
        </trans-unit>
        <trans-unit id="a187876cdeee7199e74fcfe11f2ca1b7b10e1f82" translate="yes" xml:space="preserve">
          <source>List of JavaScript files that this bundle contains.</source>
          <target state="translated">이 번들에 포함 된 JavaScript 파일 목록입니다.</target>
        </trans-unit>
        <trans-unit id="44068b0da7b01ed7762aaf082929c2193d3da56a" translate="yes" xml:space="preserve">
          <source>List of JavaScript files that this bundle contains. Each JavaScript file can be specified in one of the following formats:</source>
          <target state="translated">이 번들에 포함 된 JavaScript 파일 목록입니다. 각 JavaScript 파일은 다음 형식 중 하나로 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1971a7c0a32e0139a7abb06b7566a5f473ff22a8" translate="yes" xml:space="preserve">
          <source>List of URI schemes which should be considered valid.</source>
          <target state="translated">유효한 것으로 간주되는 URI 스킴 목록.</target>
        </trans-unit>
        <trans-unit id="5df5595ae03f96eb3280b58bbd58201fc022a130" translate="yes" xml:space="preserve">
          <source>List of URI schemes which should be considered valid. By default, http and https are considered to be valid schemes.</source>
          <target state="translated">유효한 것으로 간주되는 URI 스킴 목록. 기본적으로 http 및 https는 유효한 체계로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="f3b3af3ed85e014b879a624ba6c970d5f0b38fdd" translate="yes" xml:space="preserve">
          <source>List of acceptable actions.</source>
          <target state="translated">수용 가능한 행동 목록.</target>
        </trans-unit>
        <trans-unit id="1c4a5225423ce40ecbf40b44bb95f1c56f30801a" translate="yes" xml:space="preserve">
          <source>List of acceptable actions. If not empty, only the actions within this array will have the corresponding URL rules created.</source>
          <target state="translated">수용 가능한 행동 목록. 비어 있지 않으면이 배열 내의 작업 만 해당 URL 규칙이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="cadeafbe0cfd0737272fdbc3af594787c13f4421" translate="yes" xml:space="preserve">
          <source>List of action IDs separated by commas or spaces</source>
          <target state="translated">쉼표 또는 공백으로 구분 된 조치 ID 목록</target>
        </trans-unit>
        <trans-unit id="12be6d9f9c9d08722dd3c13a58607e4df7f22964" translate="yes" xml:space="preserve">
          <source>List of action IDs that this filter should apply to.</source>
          <target state="translated">이 필터가 적용되어야하는 작업 ID 목록.</target>
        </trans-unit>
        <trans-unit id="c31de6d69574282c97def9e757c3148417f41b39" translate="yes" xml:space="preserve">
          <source>List of action IDs that this filter should apply to. If this property is not set, then the filter applies to all actions, unless they are listed in &lt;a href=&quot;yii-base-actionfilter#%24except-detail&quot;&gt;$except&lt;/a&gt;. If an action ID appears in both &lt;a href=&quot;yii-base-actionfilter#%24only-detail&quot;&gt;$only&lt;/a&gt; and &lt;a href=&quot;yii-base-actionfilter#%24except-detail&quot;&gt;$except&lt;/a&gt;, this filter will NOT apply to it.</source>
          <target state="translated">이 필터가 적용되어야하는 작업 ID 목록. 이 특성을 설정하지 않으면 &lt;a href=&quot;yii-base-actionfilter#%24except-detail&quot;&gt;$ except에&lt;/a&gt; 나열되지 않은 경우 필터가 모든 조치에 적용됩니다 . 조치 ID가 &lt;a href=&quot;yii-base-actionfilter#%24only-detail&quot;&gt;$ only&lt;/a&gt; 및 &lt;a href=&quot;yii-base-actionfilter#%24except-detail&quot;&gt;$ except&lt;/a&gt; 둘 다에 표시 되면이 필터는 적용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9149a4c229706ee4d1e8380b4853d295706fb87a" translate="yes" xml:space="preserve">
          <source>List of action IDs that this filter should not apply to.</source>
          <target state="translated">이 필터가 적용되지 않아야하는 작업 ID 목록입니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
