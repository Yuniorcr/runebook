<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="django">
    <body>
      <group id="django">
        <trans-unit id="2ff68588e1834dedd17cbb930a2d970f7d621e2d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;admin.E125&lt;/strong&gt;: The value of &lt;code&gt;list_editable[n]&lt;/code&gt; refers to &lt;code&gt;&amp;lt;field name&amp;gt;&lt;/code&gt;, which is not editable through the admin.</source>
          <target state="translated">&lt;strong&gt;admin.E125는&lt;/strong&gt; : 값 &lt;code&gt;list_editable[n]&lt;/code&gt; 으로 지칭 &lt;code&gt;&amp;lt;field name&amp;gt;&lt;/code&gt; 의 관리를 통해 편집 가능하지 않다.</target>
        </trans-unit>
        <trans-unit id="d0a1f9659973ec66d5726b8efb697fa7d54f5185" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;admin.E126&lt;/strong&gt;: The value of &lt;code&gt;search_fields&lt;/code&gt; must be a list or tuple.</source>
          <target state="translated">&lt;strong&gt;admin.E126&lt;/strong&gt; : &lt;code&gt;search_fields&lt;/code&gt; 의 값은 목록 또는 튜플이어야합니다.</target>
        </trans-unit>
        <trans-unit id="2081080fc3c09a300bdfaa5ff17f4ba6a80619ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;admin.E127&lt;/strong&gt;: The value of &lt;code&gt;date_hierarchy&lt;/code&gt; refers to &lt;code&gt;&amp;lt;field name&amp;gt;&lt;/code&gt;, which does not refer to a Field.</source>
          <target state="translated">&lt;strong&gt;admin.E127는&lt;/strong&gt; : 값 &lt;code&gt;date_hierarchy&lt;/code&gt; 을 지칭 &lt;code&gt;&amp;lt;field name&amp;gt;&lt;/code&gt; , 필드를 참조하지 않는다.</target>
        </trans-unit>
        <trans-unit id="f928a8446c4cbce38da0ef7a50b2d1d4ff764892" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;admin.E128&lt;/strong&gt;: The value of &lt;code&gt;date_hierarchy&lt;/code&gt; must be a &lt;code&gt;DateField&lt;/code&gt; or &lt;code&gt;DateTimeField&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;admin.E128는&lt;/strong&gt; :의 값 &lt;code&gt;date_hierarchy&lt;/code&gt; 은 해야 &lt;code&gt;DateField&lt;/code&gt; 또는 &lt;code&gt;DateTimeField&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="893dc8bb27254a4bac6a9759098166cbde3d5e73" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;admin.E129&lt;/strong&gt;: &lt;code&gt;&amp;lt;modeladmin&amp;gt;&lt;/code&gt; must define a &lt;code&gt;has_&amp;lt;foo&amp;gt;_permission()&lt;/code&gt; method for the &lt;code&gt;&amp;lt;action&amp;gt;&lt;/code&gt; action.</source>
          <target state="translated">&lt;strong&gt;admin.E129&lt;/strong&gt; : &lt;code&gt;&amp;lt;modeladmin&amp;gt;&lt;/code&gt; 은 &lt;code&gt;&amp;lt;action&amp;gt;&lt;/code&gt; 조치에 대한 &lt;code&gt;has_&amp;lt;foo&amp;gt;_permission()&lt;/code&gt; 메소드를 정의해야합니다 .</target>
        </trans-unit>
        <trans-unit id="99e9200362d1a140b72a541121b15c3c0072cbab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;admin.E130&lt;/strong&gt;: &lt;code&gt;__name__&lt;/code&gt; attributes of actions defined in &lt;code&gt;&amp;lt;modeladmin&amp;gt;&lt;/code&gt; must be unique.</source>
          <target state="translated">&lt;strong&gt;admin.E130&lt;/strong&gt; : &lt;code&gt;&amp;lt;modeladmin&amp;gt;&lt;/code&gt; 에 정의 된 조치의 &lt;code&gt;__name__&lt;/code&gt; 속성은 고유해야합니다.</target>
        </trans-unit>
        <trans-unit id="b20d3def587029561a10348a57696547946603fa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;admin.E201&lt;/strong&gt;: Cannot exclude the field &lt;code&gt;&amp;lt;field name&amp;gt;&lt;/code&gt;, because it is the foreign key to the parent model &lt;code&gt;&amp;lt;app_label&amp;gt;.&amp;lt;model&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;admin.E201&lt;/strong&gt; : &lt;code&gt;&amp;lt;field name&amp;gt;&lt;/code&gt; 필드 는 상위 모델 &lt;code&gt;&amp;lt;app_label&amp;gt;.&amp;lt;model&amp;gt;&lt;/code&gt; 의 외래 키이므로 필드를 제외 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="7e257c42469bbb10562783f53a35c2a329c0cdec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;admin.E202&lt;/strong&gt;: &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; has no &lt;code&gt;ForeignKey&lt;/code&gt; to &lt;code&gt;&amp;lt;parent model&amp;gt;&lt;/code&gt;./ &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; has more than one &lt;code&gt;ForeignKey&lt;/code&gt; to &lt;code&gt;&amp;lt;parent model&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;admin.E202&lt;/strong&gt; : &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; 에 &lt;code&gt;&amp;lt;parent model&amp;gt;&lt;/code&gt; 에 대한 &lt;code&gt;ForeignKey&lt;/code&gt; 가 없습니다 ./ &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; 에 &lt;code&gt;&amp;lt;parent model&amp;gt;&lt;/code&gt; 에 대한 &lt;code&gt;ForeignKey&lt;/code&gt; 가 둘 이상 있습니다.</target>
        </trans-unit>
        <trans-unit id="935d5c70894be3abbc6a9d6f2d0e1759f2062c07" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;admin.E203&lt;/strong&gt;: The value of &lt;code&gt;extra&lt;/code&gt; must be an integer.</source>
          <target state="translated">&lt;strong&gt;admin.E203&lt;/strong&gt; : &lt;code&gt;extra&lt;/code&gt; 의 값은 정수 여야합니다.</target>
        </trans-unit>
        <trans-unit id="70ec80b0010ecd3ac5fe1a0c1b520be9996922e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;admin.E204&lt;/strong&gt;: The value of &lt;code&gt;max_num&lt;/code&gt; must be an integer.</source>
          <target state="translated">&lt;strong&gt;admin.E204는&lt;/strong&gt; :의 값 &lt;code&gt;max_num&lt;/code&gt; 정수 여야합니다.</target>
        </trans-unit>
        <trans-unit id="bd81c2c9b434b89ecde3fe34af0ba00657b1d9df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;admin.E205&lt;/strong&gt;: The value of &lt;code&gt;min_num&lt;/code&gt; must be an integer.</source>
          <target state="translated">&lt;strong&gt;admin.E205는&lt;/strong&gt; :의 값 &lt;code&gt;min_num&lt;/code&gt; 정수 여야합니다.</target>
        </trans-unit>
        <trans-unit id="2e4ffea4094fd8a976128012674a0d2af7db5036" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;admin.E206&lt;/strong&gt;: The value of &lt;code&gt;formset&lt;/code&gt; must inherit from &lt;code&gt;BaseModelFormSet&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;admin.E206&lt;/strong&gt; : &lt;code&gt;formset&lt;/code&gt; 의 값은 &lt;code&gt;BaseModelFormSet&lt;/code&gt; 에서 상속되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="9d831461eea9293099fb996a0a2b926c0042df8c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;admin.E301&lt;/strong&gt;: &lt;code&gt;'ct_field'&lt;/code&gt; references &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt;, which is not a field on &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;admin.E301&lt;/strong&gt; : &lt;code&gt;'ct_field'&lt;/code&gt; 는 &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; 의 필드가 아닌 &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; 을 참조 합니다.</target>
        </trans-unit>
        <trans-unit id="47688ca1f369ce5801a054d832e195992218bf84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;admin.E302&lt;/strong&gt;: &lt;code&gt;'ct_fk_field'&lt;/code&gt; references &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt;, which is not a field on &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;admin.E302&lt;/strong&gt; : &lt;code&gt;'ct_fk_field'&lt;/code&gt; 는 &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; 의 필드가 아닌 &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; 을 참조 합니다.</target>
        </trans-unit>
        <trans-unit id="e7dacb32f9f598586476402a7fdee567bf6003cd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;admin.E303&lt;/strong&gt;: &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; has no &lt;code&gt;GenericForeignKey&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;admin.E303&lt;/strong&gt; : &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; 에 &lt;code&gt;GenericForeignKey&lt;/code&gt; 가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="84ba955d986ee6d2a26f263ce6978a6e9bd7f547" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;admin.E304&lt;/strong&gt;: &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; has no &lt;code&gt;GenericForeignKey&lt;/code&gt; using content type field &lt;code&gt;&amp;lt;field name&amp;gt;&lt;/code&gt; and object ID field &lt;code&gt;&amp;lt;field name&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;admin.E304&lt;/strong&gt; : &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; 에는 컨텐츠 유형 필드 &lt;code&gt;&amp;lt;field name&amp;gt;&lt;/code&gt; 및 오브젝트 ID 필드 &lt;code&gt;&amp;lt;field name&amp;gt;&lt;/code&gt; 을 사용하는 &lt;code&gt;GenericForeignKey&lt;/code&gt; 가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="337309fbcc20a9ddb697f5c70aec483244e196e5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;admin.E401&lt;/strong&gt;: &lt;a href=&quot;contrib/contenttypes#module-django.contrib.contenttypes&quot;&gt;&lt;code&gt;django.contrib.contenttypes&lt;/code&gt;&lt;/a&gt; must be in &lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; in order to use the admin application.</source>
          <target state="translated">&lt;strong&gt;admin.E401&lt;/strong&gt; : 관리 응용 프로그램을 사용하려면 &lt;a href=&quot;contrib/contenttypes#module-django.contrib.contenttypes&quot;&gt; &lt;code&gt;django.contrib.contenttypes&lt;/code&gt; &lt;/a&gt; 가 &lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt; 에 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="42b69190197bf02a734235df1dd1bfbc26b34a19" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;admin.E402&lt;/strong&gt;: &lt;a href=&quot;templates/api#django.contrib.auth.context_processors.auth&quot;&gt;&lt;code&gt;django.contrib.auth.context_processors.auth&lt;/code&gt;&lt;/a&gt; must be enabled in &lt;a href=&quot;../topics/templates#django.template.backends.django.DjangoTemplates&quot;&gt;&lt;code&gt;DjangoTemplates&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;settings#std:setting-TEMPLATES&quot;&gt;&lt;code&gt;TEMPLATES&lt;/code&gt;&lt;/a&gt;) if using the default auth backend in order to use the admin application.</source>
          <target state="translated">&lt;strong&gt;admin.E402&lt;/strong&gt; : 관리자 응용 프로그램을 사용하기 위해 기본 인증 백엔드를 사용하는 경우 &lt;a href=&quot;templates/api#django.contrib.auth.context_processors.auth&quot;&gt; &lt;code&gt;django.contrib.auth.context_processors.auth&lt;/code&gt; &lt;/a&gt; 가 &lt;a href=&quot;../topics/templates#django.template.backends.django.DjangoTemplates&quot;&gt; &lt;code&gt;DjangoTemplates&lt;/code&gt; &lt;/a&gt; ( &lt;a href=&quot;settings#std:setting-TEMPLATES&quot;&gt; &lt;code&gt;TEMPLATES&lt;/code&gt; &lt;/a&gt; ) 에서 사용 가능해야합니다 .</target>
        </trans-unit>
        <trans-unit id="2204d58af1a32ce7431544c69c5662efe00a9830" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;admin.E403&lt;/strong&gt;: A &lt;a href=&quot;../topics/templates#django.template.backends.django.DjangoTemplates&quot;&gt;&lt;code&gt;django.template.backends.django.DjangoTemplates&lt;/code&gt;&lt;/a&gt; instance must be configured in &lt;a href=&quot;settings#std:setting-TEMPLATES&quot;&gt;&lt;code&gt;TEMPLATES&lt;/code&gt;&lt;/a&gt; in order to use the admin application.</source>
          <target state="translated">&lt;strong&gt;admin.E403&lt;/strong&gt; : 관리자 애플리케이션을 사용하려면 &lt;a href=&quot;../topics/templates#django.template.backends.django.DjangoTemplates&quot;&gt; &lt;code&gt;django.template.backends.django.DjangoTemplates&lt;/code&gt; &lt;/a&gt; 인스턴스가 &lt;a href=&quot;settings#std:setting-TEMPLATES&quot;&gt; &lt;code&gt;TEMPLATES&lt;/code&gt; &lt;/a&gt; 로 구성되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="26244fcb7dd78b5220927c64aa99e8b4188d7c77" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;admin.E404&lt;/strong&gt;: &lt;code&gt;django.contrib.messages.context_processors.messages&lt;/code&gt; must be enabled in &lt;a href=&quot;../topics/templates#django.template.backends.django.DjangoTemplates&quot;&gt;&lt;code&gt;DjangoTemplates&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;settings#std:setting-TEMPLATES&quot;&gt;&lt;code&gt;TEMPLATES&lt;/code&gt;&lt;/a&gt;) in order to use the admin application.</source>
          <target state="translated">&lt;strong&gt;admin.E404&lt;/strong&gt; : 관리자 애플리케이션을 사용하려면 &lt;code&gt;django.contrib.messages.context_processors.messages&lt;/code&gt; 가 &lt;a href=&quot;../topics/templates#django.template.backends.django.DjangoTemplates&quot;&gt; &lt;code&gt;DjangoTemplates&lt;/code&gt; &lt;/a&gt; ( &lt;a href=&quot;settings#std:setting-TEMPLATES&quot;&gt; &lt;code&gt;TEMPLATES&lt;/code&gt; &lt;/a&gt; )에서 사용 가능해야합니다 .</target>
        </trans-unit>
        <trans-unit id="b9d56f3af956001eef6fdee61c606e60bf182f06" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;admin.E405&lt;/strong&gt;: &lt;a href=&quot;../topics/auth/index#module-django.contrib.auth&quot;&gt;&lt;code&gt;django.contrib.auth&lt;/code&gt;&lt;/a&gt; must be in &lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; in order to use the admin application.</source>
          <target state="translated">&lt;strong&gt;admin.E405&lt;/strong&gt; : 관리자 응용 프로그램을 사용하려면 &lt;a href=&quot;../topics/auth/index#module-django.contrib.auth&quot;&gt; &lt;code&gt;django.contrib.auth&lt;/code&gt; &lt;/a&gt; 가 &lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt; 에 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="600ac934919a7f066a492f75105cd490a2dfc2f8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;admin.E406&lt;/strong&gt;: &lt;a href=&quot;contrib/messages#module-django.contrib.messages&quot;&gt;&lt;code&gt;django.contrib.messages&lt;/code&gt;&lt;/a&gt; must be in &lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; in order to use the admin application.</source>
          <target state="translated">&lt;strong&gt;admin.E406&lt;/strong&gt; : 관리 응용 프로그램을 사용하려면 &lt;a href=&quot;contrib/messages#module-django.contrib.messages&quot;&gt; &lt;code&gt;django.contrib.messages&lt;/code&gt; &lt;/a&gt; 가 &lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt; 에 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="70c9b901814fba5b07a8ad5f3dd7484faf2e5873" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;admin.E408&lt;/strong&gt;: &lt;a href=&quot;middleware#django.contrib.auth.middleware.AuthenticationMiddleware&quot;&gt;&lt;code&gt;django.contrib.auth.middleware.AuthenticationMiddleware&lt;/code&gt;&lt;/a&gt; must be in &lt;a href=&quot;settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt; in order to use the admin application.</source>
          <target state="translated">&lt;strong&gt;admin.E408&lt;/strong&gt; : &lt;a href=&quot;middleware#django.contrib.auth.middleware.AuthenticationMiddleware&quot;&gt; &lt;code&gt;django.contrib.auth.middleware.AuthenticationMiddleware&lt;/code&gt; &lt;/a&gt; 가 관리자 응용 프로그램을 사용하려면 &lt;a href=&quot;settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; &lt;/a&gt; 에 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="cabe2378827572d0066fbf974b8e40e723b5fc27" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;admin.E409&lt;/strong&gt;: &lt;a href=&quot;middleware#django.contrib.messages.middleware.MessageMiddleware&quot;&gt;&lt;code&gt;django.contrib.messages.middleware.MessageMiddleware&lt;/code&gt;&lt;/a&gt; must be in &lt;a href=&quot;settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt; in order to use the admin application.</source>
          <target state="translated">&lt;strong&gt;admin.E409&lt;/strong&gt; : &lt;a href=&quot;middleware#django.contrib.messages.middleware.MessageMiddleware&quot;&gt; &lt;code&gt;django.contrib.messages.middleware.MessageMiddleware&lt;/code&gt; &lt;/a&gt; 는 &lt;a href=&quot;settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; &lt;/a&gt; 에 있어야 관리 응용 프로그램을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b2c712aa8bb48b4e11bd20b0453393212a2aaac9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;admin.E410&lt;/strong&gt;: &lt;a href=&quot;middleware#django.contrib.sessions.middleware.SessionMiddleware&quot;&gt;&lt;code&gt;django.contrib.sessions.middleware.SessionMiddleware&lt;/code&gt;&lt;/a&gt; must be in &lt;a href=&quot;settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt; in order to use the admin application.</source>
          <target state="translated">&lt;strong&gt;admin.E410&lt;/strong&gt; : 관리자 응용 프로그램을 사용하려면 &lt;a href=&quot;middleware#django.contrib.sessions.middleware.SessionMiddleware&quot;&gt; &lt;code&gt;django.contrib.sessions.middleware.SessionMiddleware&lt;/code&gt; &lt;/a&gt; 가 &lt;a href=&quot;settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; &lt;/a&gt; 에 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="062e85abd5c0da3e4d24ab1242b8a7c6b07a2129" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;app_namespace&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Application namespace for the URL entries being included</source>
          <target state="translated">&lt;strong&gt;app_namespace&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 포함되는 URL 항목의 응용 프로그램 네임 스페이스</target>
        </trans-unit>
        <trans-unit id="44f4b4d570eccea2756fe8a8b9fd1390ef9a0866" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;auth.C009&lt;/strong&gt;: &lt;code&gt;&amp;lt;User model&amp;gt;.is_anonymous&lt;/code&gt; must be an attribute or property rather than a method. Ignoring this is a security issue as anonymous users will be treated as authenticated!</source>
          <target state="translated">&lt;strong&gt;auth.C009&lt;/strong&gt; : &lt;code&gt;&amp;lt;User model&amp;gt;.is_anonymous&lt;/code&gt; 는 메소드가 아니라 속성 또는 특성이어야합니다. 익명의 사용자는 인증 된 것으로 취급되므로 보안 문제가 무시됩니다!</target>
        </trans-unit>
        <trans-unit id="a1c9b388c9673de1da8f71192f1ad6218291449b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;auth.C010&lt;/strong&gt;: &lt;code&gt;&amp;lt;User model&amp;gt;.is_authenticated&lt;/code&gt; must be an attribute or property rather than a method. Ignoring this is a security issue as anonymous users will be treated as authenticated!</source>
          <target state="translated">&lt;strong&gt;auth.C010&lt;/strong&gt; : &lt;code&gt;&amp;lt;User model&amp;gt;.is_authenticated&lt;/code&gt; 는 메소드가 아니라 속성 또는 특성이어야합니다. 익명의 사용자는 인증 된 것으로 취급되므로 보안 문제가 무시됩니다!</target>
        </trans-unit>
        <trans-unit id="7bf4ece6ce002f1bef64608039a7c9bd115ad48d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;auth.E001&lt;/strong&gt;: &lt;code&gt;REQUIRED_FIELDS&lt;/code&gt; must be a list or tuple.</source>
          <target state="translated">&lt;strong&gt;auth.E001&lt;/strong&gt; : &lt;code&gt;REQUIRED_FIELDS&lt;/code&gt; 는 목록 또는 튜플이어야합니다.</target>
        </trans-unit>
        <trans-unit id="703f310a21fc5e1abb8401986cd860825aa353f2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;auth.E002&lt;/strong&gt;: The field named as the &lt;code&gt;USERNAME_FIELD&lt;/code&gt; for a custom user model must not be included in &lt;code&gt;REQUIRED_FIELDS&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;auth.E002&lt;/strong&gt; : 사용자 정의 사용자 모델 의 &lt;code&gt;USERNAME_FIELD&lt;/code&gt; 로 이름 지정된 필드 는 &lt;code&gt;REQUIRED_FIELDS&lt;/code&gt; 에 포함되지 않아야합니다 .</target>
        </trans-unit>
        <trans-unit id="4759040c8a86c722d8b1308e2e4c9182f360dabb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;auth.E003&lt;/strong&gt;: &lt;code&gt;&amp;lt;field&amp;gt;&lt;/code&gt; must be unique because it is named as the &lt;code&gt;USERNAME_FIELD&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;auth.E003&lt;/strong&gt; : &lt;code&gt;&amp;lt;field&amp;gt;&lt;/code&gt; 는 &lt;code&gt;USERNAME_FIELD&lt;/code&gt; 로 이름이 지정되므로 고유해야합니다 .</target>
        </trans-unit>
        <trans-unit id="0d5c7dda932c1d9b5c8df2cbf97fbb03a4d5dba9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;auth.E005&lt;/strong&gt;: The permission codenamed &lt;code&gt;&amp;lt;codename&amp;gt;&lt;/code&gt; clashes with a builtin permission for model &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;auth.E005&lt;/strong&gt; : 코드 이름이 &lt;code&gt;&amp;lt;codename&amp;gt;&lt;/code&gt; 인 권한이 &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; 모델에 대한 기본 권한과 충돌 합니다.</target>
        </trans-unit>
        <trans-unit id="cbd99a04f9a8457b0f3ab1d7beaa611dd0d77712" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;auth.E006&lt;/strong&gt;: The permission codenamed &lt;code&gt;&amp;lt;codename&amp;gt;&lt;/code&gt; is duplicated for model &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;auth.E006&lt;/strong&gt; : 사용 권한 코드 명 &lt;code&gt;&amp;lt;codename&amp;gt;&lt;/code&gt; IS 중복 된 모델에 대한 &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="33f658189bf1d353eeda35a779acc8f7d039c387" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;auth.E007&lt;/strong&gt;: The &lt;a href=&quot;models/options#django.db.models.Options.verbose_name&quot;&gt;&lt;code&gt;verbose_name&lt;/code&gt;&lt;/a&gt; of model &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; must be at most 244 characters for its builtin permission names to be at most 255 characters.</source>
          <target state="translated">&lt;strong&gt;auth.E007&lt;/strong&gt; : 모델 &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; 의 &lt;a href=&quot;models/options#django.db.models.Options.verbose_name&quot;&gt; &lt;code&gt;verbose_name&lt;/code&gt; &lt;/a&gt; 은 내장 권한 이름이 최대 255자가되도록 최대 244 자 여야합니다.</target>
        </trans-unit>
        <trans-unit id="6744f0ac903b345a72ac91c665c023a2f06b4220" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;auth.E008&lt;/strong&gt;: The permission named &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; of model &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; is longer than 255 characters.</source>
          <target state="translated">&lt;strong&gt;auth.E008&lt;/strong&gt; : &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; 모델의 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 권한 이 255자를 초과합니다.</target>
        </trans-unit>
        <trans-unit id="21fa4fcc92cc2ab866e9a64c7300f0b833c03045" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;auth.W004&lt;/strong&gt;: &lt;code&gt;&amp;lt;field&amp;gt;&lt;/code&gt; is named as the &lt;code&gt;USERNAME_FIELD&lt;/code&gt;, but it is not unique.</source>
          <target state="translated">&lt;strong&gt;auth.W004&lt;/strong&gt; : &lt;code&gt;&amp;lt;field&amp;gt;&lt;/code&gt; 의 이름은 &lt;code&gt;USERNAME_FIELD&lt;/code&gt; 이지만 고유하지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="7a9532eb20867b62fd149103ab7b6d5b5de4438d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;bool().&lt;/strong&gt; Testing a &lt;code&gt;QuerySet&lt;/code&gt; in a boolean context, such as using &lt;code&gt;bool()&lt;/code&gt;, &lt;code&gt;or&lt;/code&gt;, &lt;code&gt;and&lt;/code&gt; or an &lt;code&gt;if&lt;/code&gt; statement, will cause the query to be executed. If there is at least one result, the &lt;code&gt;QuerySet&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;, otherwise &lt;code&gt;False&lt;/code&gt;. For example:</source>
          <target state="translated">&lt;strong&gt;bool (). &lt;/strong&gt;테스트 &lt;code&gt;QuerySet&lt;/code&gt; 같은 사용하는 등, 부울 맥락에서 &lt;code&gt;bool()&lt;/code&gt; , &lt;code&gt;or&lt;/code&gt; , &lt;code&gt;and&lt;/code&gt; 또는 &lt;code&gt;if&lt;/code&gt; 쿼리를 문의 원인이됩니다 것은 실행합니다. 결과가 하나 이상 있으면 &lt;code&gt;QuerySet&lt;/code&gt; 은 &lt;code&gt;True&lt;/code&gt; 이고, 그렇지 않으면 &lt;code&gt;False&lt;/code&gt; 입니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9b42ad9c41addd91a3c3df64d672538aa06f196d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;caches.E001&lt;/strong&gt;: You must define a &lt;code&gt;'default'&lt;/code&gt; cache in your &lt;a href=&quot;settings#std:setting-CACHES&quot;&gt;&lt;code&gt;CACHES&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">&lt;strong&gt;caches.E001&lt;/strong&gt; : &lt;a href=&quot;settings#std:setting-CACHES&quot;&gt; &lt;code&gt;CACHES&lt;/code&gt; &lt;/a&gt; 설정 에서 &lt;code&gt;'default'&lt;/code&gt; 캐시를 정의해야 합니다.</target>
        </trans-unit>
        <trans-unit id="389d51fae87fb074d81ad8036cf07fa42469184a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;code&lt;/strong&gt; &amp;ndash; If not &lt;code&gt;None&lt;/code&gt;, overrides &lt;a href=&quot;#django.core.validators.EmailValidator.code&quot;&gt;&lt;code&gt;code&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;code&lt;/strong&gt; &amp;ndash; &lt;code&gt;None&lt;/code&gt; 이 아닌 경우 &lt;strong&gt;코드를&lt;/strong&gt; 재정의 &lt;a href=&quot;#django.core.validators.EmailValidator.code&quot;&gt; &lt;code&gt;code&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="17e5bf4f78c81af7fef8def8c1b3c9a4df648ddd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;code&lt;/strong&gt; &amp;ndash; If not &lt;code&gt;None&lt;/code&gt;, overrides &lt;a href=&quot;#django.core.validators.ProhibitNullCharactersValidator.code&quot;&gt;&lt;code&gt;code&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;code&lt;/strong&gt; &amp;ndash; &lt;code&gt;None&lt;/code&gt; 이 아닌 경우 &lt;strong&gt;코드를&lt;/strong&gt; 재정의 &lt;a href=&quot;#django.core.validators.ProhibitNullCharactersValidator.code&quot;&gt; &lt;code&gt;code&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1e4653f3f4cfe7df79a5c591c9440979419c9925" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;code&lt;/strong&gt; &amp;ndash; If not &lt;code&gt;None&lt;/code&gt;, overrides &lt;a href=&quot;#django.core.validators.RegexValidator.code&quot;&gt;&lt;code&gt;code&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;code&lt;/strong&gt; &amp;ndash; &lt;code&gt;None&lt;/code&gt; 이 아닌 경우 &lt;strong&gt;코드를&lt;/strong&gt; 재정의 &lt;a href=&quot;#django.core.validators.RegexValidator.code&quot;&gt; &lt;code&gt;code&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4cc83ea5439442e553ff86f137ac5203b55e89b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;contenttypes.E001&lt;/strong&gt;: The &lt;code&gt;GenericForeignKey&lt;/code&gt; object ID references the nonexistent field &lt;code&gt;&amp;lt;field&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;contenttypes.E001&lt;/strong&gt; : &lt;code&gt;GenericForeignKey&lt;/code&gt; 오브젝트 ID가 존재하지 않는 필드 &lt;code&gt;&amp;lt;field&amp;gt;&lt;/code&gt; 를 참조합니다 .</target>
        </trans-unit>
        <trans-unit id="747891d2015b58dba09cf3dc1edeafd81152cf60" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;contenttypes.E002&lt;/strong&gt;: The &lt;code&gt;GenericForeignKey&lt;/code&gt; content type references the nonexistent field &lt;code&gt;&amp;lt;field&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;contenttypes.E002&lt;/strong&gt; : &lt;code&gt;GenericForeignKey&lt;/code&gt; 컨텐츠 유형이 존재하지 않는 필드 &lt;code&gt;&amp;lt;field&amp;gt;&lt;/code&gt; 를 참조합니다 .</target>
        </trans-unit>
        <trans-unit id="f1addbfe4ca6127fc7b2e7292dbd95b6a4d8d43b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;contenttypes.E003&lt;/strong&gt;: &lt;code&gt;&amp;lt;field&amp;gt;&lt;/code&gt; is not a &lt;code&gt;ForeignKey&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;contenttypes.E003&lt;/strong&gt; : &lt;code&gt;&amp;lt;field&amp;gt;&lt;/code&gt; 는 &lt;code&gt;ForeignKey&lt;/code&gt; 가 아닙니다 .</target>
        </trans-unit>
        <trans-unit id="a75b0b630b8d408f26edf6bca75482eaa1893837" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;contenttypes.E004&lt;/strong&gt;: &lt;code&gt;&amp;lt;field&amp;gt;&lt;/code&gt; is not a &lt;code&gt;ForeignKey&lt;/code&gt; to &lt;code&gt;contenttypes.ContentType&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;contenttypes.E004&lt;/strong&gt; : &lt;code&gt;&amp;lt;field&amp;gt;&lt;/code&gt; 없는 &lt;code&gt;ForeignKey&lt;/code&gt; 에 &lt;code&gt;contenttypes.ContentType&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e42efd4349073190d9cab84f538d043f40fe57be" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;contenttypes.E005&lt;/strong&gt;: Model names must be at most 100 characters.</source>
          <target state="translated">&lt;strong&gt;contenttypes.E005&lt;/strong&gt; : 모델 이름은 최대 100 자 여야합니다.</target>
        </trans-unit>
        <trans-unit id="6ec5ebfb5c3129fcc0d6db130706ad93ddb5c166" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;context&lt;/strong&gt; &amp;ndash; context passed to the &lt;code&gt;subject_template&lt;/code&gt;, &lt;code&gt;email_template&lt;/code&gt;, and &lt;code&gt;html_email_template&lt;/code&gt; (if it is not &lt;code&gt;None&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;context&lt;/strong&gt; &amp;ndash; &lt;code&gt;subject_template&lt;/code&gt; , &lt;code&gt;email_template&lt;/code&gt; 및 &lt;code&gt;html_email_template&lt;/code&gt; 에 전달 된 컨텍스트 ( &lt;code&gt;None&lt;/code&gt; 이 아닌 경우 ).</target>
        </trans-unit>
        <trans-unit id="7d4904de1c431650d1353b2a3e383a3ffcd13843" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;dispatch_uid&lt;/strong&gt; &amp;ndash; A unique identifier for a signal receiver in cases where duplicate signals may be sent. See &lt;a href=&quot;#preventing-duplicate-signals&quot;&gt;Preventing duplicate signals&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;strong&gt;dispatch_uid&lt;/strong&gt; &amp;ndash; 중복 신호가 전송 될 수있는 경우 신호 수신기의 고유 식별자입니다. 자세한 내용은 &lt;a href=&quot;#preventing-duplicate-signals&quot;&gt;중복 신호 방지&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d2601392fb8452ab9f40af6e38c7309ceedab876" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;django-admin and manage.py:&lt;/strong&gt;&lt;a href=&quot;ref/django-admin&quot;&gt;Overview&lt;/a&gt; | &lt;a href=&quot;howto/custom-management-commands&quot;&gt;Adding custom commands&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;django-admin 및 manage.py : &lt;/strong&gt;&lt;a href=&quot;ref/django-admin&quot;&gt;개요&lt;/a&gt; | &lt;a href=&quot;howto/custom-management-commands&quot;&gt;사용자 정의 명령 추가&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="278bec50af3e117f62a57dabcb0e275f767497f0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;email_template_name&lt;/strong&gt; &amp;ndash; the template for the email body.</source>
          <target state="translated">&lt;strong&gt;email_template_name&lt;/strong&gt; &amp;ndash; 이메일 본문의 템플리트입니다.</target>
        </trans-unit>
        <trans-unit id="87d3df22374a49dc0f23c93d1b3bf18e2938c2c9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;empty_value&lt;/strong&gt; &amp;ndash; the expected clean output for inputs in &lt;code&gt;empty_values&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;empty_value&lt;/strong&gt; -의 입력에 대한 예상 깨끗한 출력 &lt;code&gt;empty_values&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2d0947fcb3b4a599ba4a16ad0edde758031bdd04" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;field_args&lt;/strong&gt; &amp;ndash; the args passed to instantiate the field.</source>
          <target state="translated">&lt;strong&gt;field_args&lt;/strong&gt; &amp;ndash; 필드를 인스턴스화하기 위해 전달 된 인수입니다.</target>
        </trans-unit>
        <trans-unit id="0c5bcecde1569a9410b76a5e354e39a1f7331f2f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;field_kwargs&lt;/strong&gt; &amp;ndash; the kwargs passed to instantiate the field.</source>
          <target state="translated">&lt;strong&gt;field_kwargs&lt;/strong&gt; &amp;ndash; kwargs가 필드를 인스턴스화하기 위해 전달되었습니다.</target>
        </trans-unit>
        <trans-unit id="f17612049b1ac64ccd4693d4d48f11807e2abad9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fieldclass&lt;/strong&gt; &amp;ndash; the class of the field to be tested.</source>
          <target state="translated">&lt;strong&gt;fieldclass&lt;/strong&gt; &amp;ndash; 테스트 할 필드의 클래스.</target>
        </trans-unit>
        <trans-unit id="2773ef21d3148246835d895f98991e6f96e4b398" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.E001&lt;/strong&gt;: Field names must not end with an underscore.</source>
          <target state="translated">&lt;strong&gt;fields.E001&lt;/strong&gt; : 필드 이름은 밑줄로 끝나서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="7314a066524d0b72595242c60662b69b6d54c02f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.E002&lt;/strong&gt;: Field names must not contain &lt;code&gt;&quot;__&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;fields.E002&lt;/strong&gt; : 필드 이름은 &lt;code&gt;&quot;__&quot;&lt;/code&gt; 을 포함 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="f566581c73c39b5cc1e868e91a31ce2bc4ae52e2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.E003&lt;/strong&gt;: &lt;code&gt;pk&lt;/code&gt; is a reserved word that cannot be used as a field name.</source>
          <target state="translated">&lt;strong&gt;fields.E003&lt;/strong&gt; : &lt;code&gt;pk&lt;/code&gt; 는 필드 이름으로 사용할 수없는 예약어입니다.</target>
        </trans-unit>
        <trans-unit id="0c4969eab7efbb63bdd5994789d1fa056ef859be" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.E004&lt;/strong&gt;: &lt;code&gt;choices&lt;/code&gt; must be an iterable (e.g., a list or tuple).</source>
          <target state="translated">&lt;strong&gt;fields.E004&lt;/strong&gt; : &lt;code&gt;choices&lt;/code&gt; 은 반복 가능해야합니다 (예 : 목록 또는 튜플).</target>
        </trans-unit>
        <trans-unit id="ca9163ce76f8f0c77ac2b33881e9db6926266d8c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.E005&lt;/strong&gt;: &lt;code&gt;choices&lt;/code&gt; must be an iterable returning &lt;code&gt;(actual value,
human readable name)&lt;/code&gt; tuples.</source>
          <target state="translated">&lt;strong&gt;fields.E005&lt;/strong&gt; : &lt;code&gt;choices&lt;/code&gt; 은 반복 가능한 리턴 &lt;code&gt;(actual value, human readable name)&lt;/code&gt; 튜플 이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="b30ed69a8fee22d3778b83c65c0142f6375806a7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.E006&lt;/strong&gt;: &lt;code&gt;db_index&lt;/code&gt; must be &lt;code&gt;None&lt;/code&gt;, &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;fields.E006&lt;/strong&gt; : &lt;code&gt;db_index&lt;/code&gt; 이 없어야합니다 &lt;code&gt;None&lt;/code&gt; , &lt;code&gt;True&lt;/code&gt; 또는 &lt;code&gt;False&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7710bbc64569a18c5d53c726799e24cfc2777404" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.E007&lt;/strong&gt;: Primary keys must not have &lt;code&gt;null=True&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;fields.E007&lt;/strong&gt; : 기본 키는 &lt;code&gt;null=True&lt;/code&gt; 가 아니어야합니다 .</target>
        </trans-unit>
        <trans-unit id="7325043f79718eae3128e4ed90049cd82402a8b0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.E008&lt;/strong&gt;: All &lt;code&gt;validators&lt;/code&gt; must be callable.</source>
          <target state="translated">&lt;strong&gt;fields.E008&lt;/strong&gt; : 모든 &lt;code&gt;validators&lt;/code&gt; 자가 호출 가능해야합니다.</target>
        </trans-unit>
        <trans-unit id="3b4ee1bbbc874edae9efc39b61759e9adc118e1c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.E009&lt;/strong&gt;: &lt;code&gt;max_length&lt;/code&gt; is too small to fit the longest value in &lt;code&gt;choices&lt;/code&gt; (&lt;code&gt;&amp;lt;count&amp;gt;&lt;/code&gt; characters).</source>
          <target state="translated">&lt;strong&gt;E009&lt;/strong&gt; : &lt;code&gt;max_length&lt;/code&gt; 가 너무 작아 &lt;code&gt;choices&lt;/code&gt; 에서 가장 긴 값 ( &lt;code&gt;&amp;lt;count&amp;gt;&lt;/code&gt; 자) 에 맞지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1dc0654a045f7452fc2de294233584ca0852da1b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.E100&lt;/strong&gt;: &lt;code&gt;AutoField&lt;/code&gt;s must set primary_key=True.</source>
          <target state="translated">&lt;strong&gt;fields.E100&lt;/strong&gt; : &lt;code&gt;AutoField&lt;/code&gt; 는 primary_key = True를 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="d5966e63fefa8e8929cb918bbf228e21848df213" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.E110&lt;/strong&gt;: &lt;code&gt;BooleanField&lt;/code&gt;s do not accept null values. &lt;em&gt;This check appeared before support for null values was added in Django 2.1.&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;fields.E110&lt;/strong&gt; : &lt;code&gt;BooleanField&lt;/code&gt; 의 null 값을 허용하지 않습니다. &lt;em&gt;이 검사는 Django 2.1에서 null 값에 대한 지원이 추가되기 전에 나타났습니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2de20d5ae9902f5b4158e8572591cff6bb77b5cd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.E120&lt;/strong&gt;: &lt;code&gt;CharField&lt;/code&gt;s must define a &lt;code&gt;max_length&lt;/code&gt; attribute.</source>
          <target state="translated">&lt;strong&gt;fields.E120는&lt;/strong&gt; : &lt;code&gt;CharField&lt;/code&gt; s는 정의해야 &lt;code&gt;max_length&lt;/code&gt; 속성을.</target>
        </trans-unit>
        <trans-unit id="666c82abd0551d3e910ed9d6156f29432f72a394" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.E121&lt;/strong&gt;: &lt;code&gt;max_length&lt;/code&gt; must be a positive integer.</source>
          <target state="translated">&lt;strong&gt;E121&lt;/strong&gt; : &lt;code&gt;max_length&lt;/code&gt; 는 양의 정수 여야합니다.</target>
        </trans-unit>
        <trans-unit id="282deecd8e2a8b29fab854f2fbff9cd109b1629b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.E130&lt;/strong&gt;: &lt;code&gt;DecimalField&lt;/code&gt;s must define a &lt;code&gt;decimal_places&lt;/code&gt; attribute.</source>
          <target state="translated">&lt;strong&gt;fields.E130&lt;/strong&gt; : &lt;code&gt;DecimalField&lt;/code&gt; 는 &lt;code&gt;decimal_places&lt;/code&gt; 속성을 정의해야 합니다.</target>
        </trans-unit>
        <trans-unit id="a2b8955c4b79b77bb843f4fe96e2866e454d7043" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.E131&lt;/strong&gt;: &lt;code&gt;decimal_places&lt;/code&gt; must be a non-negative integer.</source>
          <target state="translated">&lt;strong&gt;E131&lt;/strong&gt; : &lt;code&gt;decimal_places&lt;/code&gt; 는 음이 아닌 정수 여야합니다.</target>
        </trans-unit>
        <trans-unit id="0c8604b9d730eaa65ec16890d150c5834d4d85a7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.E132&lt;/strong&gt;: &lt;code&gt;DecimalField&lt;/code&gt;s must define a &lt;code&gt;max_digits&lt;/code&gt; attribute.</source>
          <target state="translated">&lt;strong&gt;fields.E132는&lt;/strong&gt; : &lt;code&gt;DecimalField&lt;/code&gt; s는 정의해야 &lt;code&gt;max_digits&lt;/code&gt; 의 속성을.</target>
        </trans-unit>
        <trans-unit id="805e2567108720dc9eb5bf5c7510718f2d3d42dc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.E133&lt;/strong&gt;: &lt;code&gt;max_digits&lt;/code&gt; must be a non-negative integer.</source>
          <target state="translated">&lt;strong&gt;fields.E133&lt;/strong&gt; : &lt;code&gt;max_digits&lt;/code&gt; 는 음수가 아닌 정수 여야합니다.</target>
        </trans-unit>
        <trans-unit id="0908f278e53bd993f85ccb55a56413b56754062f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.E134&lt;/strong&gt;: &lt;code&gt;max_digits&lt;/code&gt; must be greater or equal to &lt;code&gt;decimal_places&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;fields.E134는&lt;/strong&gt; : &lt;code&gt;max_digits&lt;/code&gt; 가 커야하거나 동일해야합니다 &lt;code&gt;decimal_places&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="60f127a9ce01db73d1fca24947a9901925d892f0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.E140&lt;/strong&gt;: &lt;code&gt;FilePathField&lt;/code&gt;s must have either &lt;code&gt;allow_files&lt;/code&gt; or &lt;code&gt;allow_folders&lt;/code&gt; set to True.</source>
          <target state="translated">&lt;strong&gt;fields.E140는&lt;/strong&gt; : &lt;code&gt;FilePathField&lt;/code&gt; 들 중 하나가 있어야합니다 &lt;code&gt;allow_files&lt;/code&gt; 또는 &lt;code&gt;allow_folders&lt;/code&gt; True로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="243c9405e6ce1c55d04f7576c938db681e721fa6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.E150&lt;/strong&gt;: &lt;code&gt;GenericIPAddressField&lt;/code&gt;s cannot accept blank values if null values are not allowed, as blank values are stored as nulls.</source>
          <target state="translated">&lt;strong&gt;E150&lt;/strong&gt; : &lt;code&gt;GenericIPAddressField&lt;/code&gt; 는 공백 값이 널로 저장되므로 널값이 허용되지 않으면 공백 값을 승인 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="68769233bfc44ee8bfc860eff66b4d1341ba049a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.E160&lt;/strong&gt;: The options &lt;code&gt;auto_now&lt;/code&gt;, &lt;code&gt;auto_now_add&lt;/code&gt;, and &lt;code&gt;default&lt;/code&gt; are mutually exclusive. Only one of these options may be present.</source>
          <target state="translated">&lt;strong&gt;fields.E160&lt;/strong&gt; : 옵션의 &lt;code&gt;auto_now&lt;/code&gt; 는 , &lt;code&gt;auto_now_add&lt;/code&gt; 및 &lt;code&gt;default&lt;/code&gt; 상호 배타적입니다. 이러한 옵션 중 하나만 존재할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ed01a6f971651f2110de29ef883453031078c585" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.E170&lt;/strong&gt;: &lt;code&gt;BinaryField&lt;/code&gt;&amp;rsquo;s &lt;code&gt;default&lt;/code&gt; cannot be a string. Use bytes content instead.</source>
          <target state="translated">&lt;strong&gt;fields.E170&lt;/strong&gt; : &lt;code&gt;BinaryField&lt;/code&gt; 의 &lt;code&gt;default&lt;/code&gt; 은 문자열이 될 수 없습니다. 대신 바이트 내용을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="e42040ee014a4cce0c070106e8daee34514c11a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.E200&lt;/strong&gt;: &lt;code&gt;unique&lt;/code&gt; is not a valid argument for a &lt;code&gt;FileField&lt;/code&gt;. &lt;em&gt;This check is removed in Django 1.11&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;fields.E200&lt;/strong&gt; : &lt;code&gt;unique&lt;/code&gt; 는 &lt;code&gt;FileField&lt;/code&gt; 에 유효한 인수가 아닙니다 . &lt;em&gt;이 검사는 Django 1.11에서 제거되었습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="f7ff5bca8b983180541211d7d95735f5f2f14358" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.E201&lt;/strong&gt;: &lt;code&gt;primary_key&lt;/code&gt; is not a valid argument for a &lt;code&gt;FileField&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;fields.E201&lt;/strong&gt; : &lt;code&gt;primary_key&lt;/code&gt; 는 &lt;code&gt;FileField&lt;/code&gt; 에 유효한 인수가 아닙니다 .</target>
        </trans-unit>
        <trans-unit id="8aec92ae350b2f77f1f4fbf77e21b525144f808c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.E202&lt;/strong&gt;: &lt;code&gt;FileField&lt;/code&gt;&amp;rsquo;s &lt;code&gt;upload_to&lt;/code&gt; argument must be a relative path, not an absolute path.</source>
          <target state="translated">&lt;strong&gt;fields.E202&lt;/strong&gt; : &lt;code&gt;FileField&lt;/code&gt; 와 의 &lt;code&gt;upload_to&lt;/code&gt; 의 인자는 상대 경로가 아닌 절대 경로이어야한다.</target>
        </trans-unit>
        <trans-unit id="595c75067282a614ef5d0d542f0b98f977be2e92" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.E210&lt;/strong&gt;: Cannot use &lt;code&gt;ImageField&lt;/code&gt; because Pillow is not installed.</source>
          <target state="translated">&lt;strong&gt;E210&lt;/strong&gt; : 필로우가 설치되어 있지 않아 &lt;code&gt;ImageField&lt;/code&gt; 를 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="8ba2a3d8a1f05805960a1a838b13962a423c90be" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.E300&lt;/strong&gt;: Field defines a relation with model &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt;, which is either not installed, or is abstract.</source>
          <target state="translated">&lt;strong&gt;fields.E300&lt;/strong&gt; : Field는 설치되지 않았거나 추상적 인 &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; 모델과의 관계를 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="a756ac08941a8d288e8db83b5c36fb78f8ff24c4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.E301&lt;/strong&gt;: Field defines a relation with the model &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; which has been swapped out.</source>
          <target state="translated">&lt;strong&gt;fields.E301&lt;/strong&gt; : 필드는 교체 된 &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; 모델과의 관계를 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="6285c2e3d219312246349f7ef368e11ad54723f6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.E302&lt;/strong&gt;: Accessor for field &lt;code&gt;&amp;lt;field name&amp;gt;&lt;/code&gt; clashes with field &lt;code&gt;&amp;lt;field name&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;fields.E302&lt;/strong&gt; : &lt;code&gt;&amp;lt;field name&amp;gt;&lt;/code&gt; 필드의 접근자가 &lt;code&gt;&amp;lt;field name&amp;gt;&lt;/code&gt; 필드 와 충돌합니다 .</target>
        </trans-unit>
        <trans-unit id="0aa8584fa2a556dfff5e15ce018e133e9832b3d2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.E303&lt;/strong&gt;: Reverse query name for field &lt;code&gt;&amp;lt;field name&amp;gt;&lt;/code&gt; clashes with field &lt;code&gt;&amp;lt;field name&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;fields.E303&lt;/strong&gt; : 필드 역 쿼리 이름 &lt;code&gt;&amp;lt;field name&amp;gt;&lt;/code&gt; 필드와 충돌 &lt;code&gt;&amp;lt;field name&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="866ff1aa3f903cc1378b46da2657cb22bb9eb958" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.E304&lt;/strong&gt;: Field name &lt;code&gt;&amp;lt;field name&amp;gt;&lt;/code&gt; clashes with accessor for &lt;code&gt;&amp;lt;field name&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;fields.E304&lt;/strong&gt; : 필드 이름 &lt;code&gt;&amp;lt;field name&amp;gt;&lt;/code&gt; 은 &lt;code&gt;&amp;lt;field name&amp;gt;&lt;/code&gt; 에 대한 접근 자와 충돌 합니다.</target>
        </trans-unit>
        <trans-unit id="b0599ca7b5cb3d74f415f816d842864dcf974585" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.E305&lt;/strong&gt;: Field name &lt;code&gt;&amp;lt;field name&amp;gt;&lt;/code&gt; clashes with reverse query name for &lt;code&gt;&amp;lt;field name&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;fields.E305&lt;/strong&gt; : 필드 이름 &lt;code&gt;&amp;lt;field name&amp;gt;&lt;/code&gt; 은 &lt;code&gt;&amp;lt;field name&amp;gt;&lt;/code&gt; 에 대한 역방향 쿼리 이름과 충돌 합니다.</target>
        </trans-unit>
        <trans-unit id="9a6048a6e4c550289089fbf6f06247c0f6394edd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.E306&lt;/strong&gt;: Related name must be a valid Python identifier or end with a &lt;code&gt;'+'&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;fields.E306&lt;/strong&gt; : 관련 이름은 유효한 Python 식별자이거나 &lt;code&gt;'+'&lt;/code&gt; 로 끝나야 합니다.</target>
        </trans-unit>
        <trans-unit id="8ae2a6dd67de33514403535a9604e8a18200228a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.E307&lt;/strong&gt;: The field &lt;code&gt;&amp;lt;app label&amp;gt;.&amp;lt;model&amp;gt;.&amp;lt;field name&amp;gt;&lt;/code&gt; was declared with a lazy reference to &lt;code&gt;&amp;lt;app label&amp;gt;.&amp;lt;model&amp;gt;&lt;/code&gt;, but app &lt;code&gt;&amp;lt;app label&amp;gt;&lt;/code&gt; isn&amp;rsquo;t installed or doesn&amp;rsquo;t provide model &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;fields.E307&lt;/strong&gt; : 필드 &lt;code&gt;&amp;lt;app label&amp;gt;.&amp;lt;model&amp;gt;.&amp;lt;field name&amp;gt;&lt;/code&gt; 에 게으른 참조 선언했다 &lt;code&gt;&amp;lt;app label&amp;gt;.&amp;lt;model&amp;gt;&lt;/code&gt; 하지만, 응용 프로그램 &lt;code&gt;&amp;lt;app label&amp;gt;&lt;/code&gt; 설치되지 않았거나하는 것은 제공하지 않습니다 모델 &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e4632a3bc719288914a9d40c483fb903350fadbe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.E308&lt;/strong&gt;: Reverse query name &lt;code&gt;&amp;lt;related query name&amp;gt;&lt;/code&gt; must not end with an underscore.</source>
          <target state="translated">&lt;strong&gt;fields.E308&lt;/strong&gt; : 리버스 쿼리 이름 &lt;code&gt;&amp;lt;related query name&amp;gt;&lt;/code&gt; 은 밑줄로 끝나서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="2a54d9d21040055ef911626b590c950d81e7ec3d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.E309&lt;/strong&gt;: Reverse query name &lt;code&gt;&amp;lt;related query name&amp;gt;&lt;/code&gt; must not contain &lt;code&gt;'__'&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;fields.E309&lt;/strong&gt; : 리버스 쿼리 이름 &lt;code&gt;&amp;lt;related query name&amp;gt;&lt;/code&gt; 은 &lt;code&gt;'__'&lt;/code&gt; 을 포함하지 않아야합니다 .</target>
        </trans-unit>
        <trans-unit id="91b97ca8d79ab5875b539dd8409edfade8d3968c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.E310&lt;/strong&gt;: No subset of the fields &lt;code&gt;&amp;lt;field1&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;field2&amp;gt;&lt;/code&gt;, &amp;hellip; on model &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; is unique. Add &lt;code&gt;unique=True&lt;/code&gt; on any of those fields or add at least a subset of them to a unique_together constraint.</source>
          <target state="translated">&lt;strong&gt;E310&lt;/strong&gt; : &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; 모델 에서 &lt;code&gt;&amp;lt;field1&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;field2&amp;gt;&lt;/code&gt; ,&amp;hellip; 필드의 서브 세트 가 고유하지 않습니다. 추가 &lt;code&gt;unique=True&lt;/code&gt; 해당 필드의 나 unique_together 제약에의 적어도 일부를 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="75274a77a8f709b131ed2163f361bbde78730f28" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.E311&lt;/strong&gt;: &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; must set &lt;code&gt;unique=True&lt;/code&gt; because it is referenced by a &lt;code&gt;ForeignKey&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;fields.E311&lt;/strong&gt; : &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; 은 &lt;code&gt;ForeignKey&lt;/code&gt; 에 의해 참조되므로 &lt;code&gt;unique=True&lt;/code&gt; 로 설정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="ec7b54f5e63ae5f5dd501c8b24ce9075efd2ae77" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.E312&lt;/strong&gt;: The &lt;code&gt;to_field&lt;/code&gt;&lt;code&gt;&amp;lt;field name&amp;gt;&lt;/code&gt; doesn&amp;rsquo;t exist on the related model &lt;code&gt;&amp;lt;app label&amp;gt;.&amp;lt;model&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;fields.E312&lt;/strong&gt; 다음 &lt;code&gt;to_field&lt;/code&gt; &lt;code&gt;&amp;lt;field name&amp;gt;&lt;/code&gt; 관련 모델에 존재하지 않는 &lt;code&gt;&amp;lt;app label&amp;gt;.&amp;lt;model&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b93b045a04ea3b67a9bc657e8d8f5ac4aa6b863a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.E320&lt;/strong&gt;: Field specifies &lt;code&gt;on_delete=SET_NULL&lt;/code&gt;, but cannot be null.</source>
          <target state="translated">&lt;strong&gt;fields.E320&lt;/strong&gt; : 필드를 지정 &lt;code&gt;on_delete=SET_NULL&lt;/code&gt; 하지만 null 일 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="61a44c99fbf8214dbf48782e7be089ceb010274c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.E321&lt;/strong&gt;: The field specifies &lt;code&gt;on_delete=SET_DEFAULT&lt;/code&gt;, but has no default value.</source>
          <target state="translated">&lt;strong&gt;fields.E321&lt;/strong&gt; : 필드 지정 &lt;code&gt;on_delete=SET_DEFAULT&lt;/code&gt; ,하지만 기본값이 없습니다.</target>
        </trans-unit>
        <trans-unit id="c7fa1a4cd79bda7dc3050e0ef75c21f665f98bc9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.E330&lt;/strong&gt;: &lt;code&gt;ManyToManyField&lt;/code&gt;s cannot be unique.</source>
          <target state="translated">&lt;strong&gt;fields.E330&lt;/strong&gt; : &lt;code&gt;ManyToManyField&lt;/code&gt; 는 고유 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="98952ec170bff2c0edee70cc05391d7205f16833" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.E331&lt;/strong&gt;: Field specifies a many-to-many relation through model &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt;, which has not been installed.</source>
          <target state="translated">&lt;strong&gt;fields.E331&lt;/strong&gt; : Field 는 설치되지 않은 &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; 모델을 통해 다 대다 관계를 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="d8462bac566cb98bb7bdced1073f86f3e9524251" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.E332&lt;/strong&gt;: Many-to-many fields with intermediate tables must not be symmetrical. &lt;em&gt;This check appeared before Django 3.0.&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;E332&lt;/strong&gt; : 중간 테이블이있는 다 대다 필드는 대칭이 아니어야합니다. &lt;em&gt;이 검사는 Django 3.0 이전에 나타났습니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c9d08ed700a446a6163afb96e2dc6bdafa2989b5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.E333&lt;/strong&gt;: The model is used as an intermediate model by &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt;, but it has more than two foreign keys to &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt;, which is ambiguous. You must specify which two foreign keys Django should use via the &lt;code&gt;through_fields&lt;/code&gt; keyword argument.</source>
          <target state="translated">&lt;strong&gt;fields.E333는&lt;/strong&gt; 다음 모델에 의해 중간 모델로서 사용되는 &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; 하지만, 두 개 이상의 외래 키 갖는 &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; 모호하다. Django가 &lt;code&gt;through_fields&lt;/code&gt; 키워드 인수 를 통해 사용해야하는 외래 키 두 개를 지정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="565a5313c68eb78067c343cdde575582f5055192" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.E334&lt;/strong&gt;: The model is used as an intermediate model by &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt;, but it has more than one foreign key from &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt;, which is ambiguous. You must specify which foreign key Django should use via the &lt;code&gt;through_fields&lt;/code&gt; keyword argument.</source>
          <target state="translated">&lt;strong&gt;fields.E334&lt;/strong&gt; 다음 모델에 의해 중간 모델로서 사용되는 &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; 하지만, 둘 이상의 외부 키 갖는 &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; 모호하다. Django가 &lt;code&gt;through_fields&lt;/code&gt; 키워드 인수 를 통해 사용해야하는 외래 키를 지정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="65d2afb95808ff8992344dd66469853189356d53" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.E335&lt;/strong&gt;: The model is used as an intermediate model by &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt;, but it has more than one foreign key to &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt;, which is ambiguous. You must specify which foreign key Django should use via the &lt;code&gt;through_fields&lt;/code&gt; keyword argument.</source>
          <target state="translated">&lt;strong&gt;fields.E335는&lt;/strong&gt; 다음 모델에 의해 중간 모델로서 사용되는 &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; 하지만, 둘 이상의 외부 키 갖는 &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; 모호하다. Django가 &lt;code&gt;through_fields&lt;/code&gt; 키워드 인수 를 통해 사용해야하는 외래 키를 지정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="35e601899c2b5b187af2581896bd6fda76d0eae3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.E336&lt;/strong&gt;: The model is used as an intermediary model by &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt;, but it does not have foreign key to &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;fields.E336&lt;/strong&gt; : 모델이 &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; 에 의해 중개 모델로 사용 되지만 &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; 또는 &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; 에 대한 외래 키는 없습니다 .</target>
        </trans-unit>
        <trans-unit id="4ae2c7957d97eec0a80f534cd04bc8f42a7c41e0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.E337&lt;/strong&gt;: Field specifies &lt;code&gt;through_fields&lt;/code&gt; but does not provide the names of the two link fields that should be used for the relation through &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;fields.E337&lt;/strong&gt; 필드를 지정 &lt;code&gt;through_fields&lt;/code&gt; 하지만 통해 관계에 사용해야하는 두 개의 링크 필드의 이름을 제공하지 않습니다 &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bbd95c2c6067ace3dbef90d1a9f081e90aa498af" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.E338&lt;/strong&gt;: The intermediary model &lt;code&gt;&amp;lt;through model&amp;gt;&lt;/code&gt; has no field &lt;code&gt;&amp;lt;field name&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;E338&lt;/strong&gt; : 중개 모델 &lt;code&gt;&amp;lt;through model&amp;gt;&lt;/code&gt; 에 &lt;code&gt;&amp;lt;field name&amp;gt;&lt;/code&gt; 필드 가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="6e4107534c438d48743079d2d22ec2db84f43430" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.E339&lt;/strong&gt;: &lt;code&gt;&amp;lt;model&amp;gt;.&amp;lt;field name&amp;gt;&lt;/code&gt; is not a foreign key to &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;fields.E339&lt;/strong&gt; : &lt;code&gt;&amp;lt;model&amp;gt;.&amp;lt;field name&amp;gt;&lt;/code&gt; 은 &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; 의 외래 키가 아닙니다 .</target>
        </trans-unit>
        <trans-unit id="74fad2f112eb3e4074420f1c2a93311a69f3b202" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.E340&lt;/strong&gt;: The field&amp;rsquo;s intermediary table &lt;code&gt;&amp;lt;table name&amp;gt;&lt;/code&gt; clashes with the table name of &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt;/&lt;code&gt;&amp;lt;model&amp;gt;.&amp;lt;field name&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;fields.E340&lt;/strong&gt; : 필드의 중개 테이블 &lt;code&gt;&amp;lt;table name&amp;gt;&lt;/code&gt; 이 (가) &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; / &lt;code&gt;&amp;lt;model&amp;gt;.&amp;lt;field name&amp;gt;&lt;/code&gt; 테이블 이름과 충돌합니다 .</target>
        </trans-unit>
        <trans-unit id="d823284576b90f919dd31897e3307454bcd0c1db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.E900&lt;/strong&gt;: &lt;code&gt;IPAddressField&lt;/code&gt; has been removed except for support in historical migrations.</source>
          <target state="translated">&lt;strong&gt;fields.E900&lt;/strong&gt; : 이전 마이그레이션 지원을 제외하고 &lt;code&gt;IPAddressField&lt;/code&gt; 가 제거되었습니다.</target>
        </trans-unit>
        <trans-unit id="d21cf419fb72db151b7de99214d575745a53068c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.E901&lt;/strong&gt;: &lt;code&gt;CommaSeparatedIntegerField&lt;/code&gt; is removed except for support in historical migrations.</source>
          <target state="translated">&lt;strong&gt;fields.E901&lt;/strong&gt; : &lt;code&gt;CommaSeparatedIntegerField&lt;/code&gt; 는 역사적 마이그레이션에 지원을 제외하고 제거된다.</target>
        </trans-unit>
        <trans-unit id="48d18847a7da2cb24849747a10e89dbcad02e31b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.W122&lt;/strong&gt;: &lt;code&gt;max_length&lt;/code&gt; is ignored when used with &lt;code&gt;&amp;lt;integer field type&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;W122&lt;/strong&gt; : &lt;code&gt;&amp;lt;integer field type&amp;gt;&lt;/code&gt; 과 함께 사용하면 &lt;code&gt;max_length&lt;/code&gt; 가 무시됩니다 .</target>
        </trans-unit>
        <trans-unit id="1e200e9dfdf14a0d61477960b84384bad9b88010" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.W161&lt;/strong&gt;: Fixed default value provided.</source>
          <target state="translated">&lt;strong&gt;W161&lt;/strong&gt; : 고정 기본값 제공.</target>
        </trans-unit>
        <trans-unit id="eaf05c2a9448551881ae4ef9abae38813dd264cf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.W162&lt;/strong&gt;: &lt;code&gt;&amp;lt;database&amp;gt;&lt;/code&gt; does not support a database index on &lt;code&gt;&amp;lt;field data type&amp;gt;&lt;/code&gt; columns.</source>
          <target state="translated">&lt;strong&gt;W162&lt;/strong&gt; : &lt;code&gt;&amp;lt;database&amp;gt;&lt;/code&gt; 는 &lt;code&gt;&amp;lt;field data type&amp;gt;&lt;/code&gt; 열 에서 데이터베이스 색인을 지원하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="cba768233f9cae43aa43893f03e9fd20255bb63f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.W340&lt;/strong&gt;: &lt;code&gt;null&lt;/code&gt; has no effect on &lt;code&gt;ManyToManyField&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;fields.W340&lt;/strong&gt; : &lt;code&gt;null&lt;/code&gt; 은 &lt;code&gt;ManyToManyField&lt;/code&gt; 에 영향을 미치지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="8f998046165803bf9c98e40b9eedef2f2eddbcf4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.W341&lt;/strong&gt;: &lt;code&gt;ManyToManyField&lt;/code&gt; does not support &lt;code&gt;validators&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;W341&lt;/strong&gt; : &lt;code&gt;ManyToManyField&lt;/code&gt; 는 &lt;code&gt;validators&lt;/code&gt; 지원하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="f794a9a1b8b009d92fb3a75683f4b81293c7f7b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.W342&lt;/strong&gt;: Setting &lt;code&gt;unique=True&lt;/code&gt; on a &lt;code&gt;ForeignKey&lt;/code&gt; has the same effect as using a &lt;code&gt;OneToOneField&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;fields.W342&lt;/strong&gt; : &lt;code&gt;ForeignKey&lt;/code&gt; 에 &lt;code&gt;unique=True&lt;/code&gt; 를 설정 하면 &lt;code&gt;OneToOneField&lt;/code&gt; 를 사용하는 것과 동일한 효과가 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a83aed00392cbe18d804502c4731b1ba5a2a7e48" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.W343&lt;/strong&gt;: &lt;code&gt;limit_choices_to&lt;/code&gt; has no effect on &lt;code&gt;ManyToManyField&lt;/code&gt; with a &lt;code&gt;through&lt;/code&gt; model.</source>
          <target state="translated">&lt;strong&gt;fields.W343&lt;/strong&gt; : &lt;code&gt;limit_choices_to&lt;/code&gt; 는 에 아무런 영향이 없습니다 &lt;code&gt;ManyToManyField&lt;/code&gt; A를 &lt;code&gt;through&lt;/code&gt; 모델을.</target>
        </trans-unit>
        <trans-unit id="b653498c013a5901e63db8e581e528942acd15f7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.W900&lt;/strong&gt;: &lt;code&gt;IPAddressField&lt;/code&gt; has been deprecated. Support for it (except in historical migrations) will be removed in Django 1.9. &lt;em&gt;This check appeared in Django 1.7 and 1.8&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;fields.W900&lt;/strong&gt; : &lt;code&gt;IPAddressField&lt;/code&gt; 가 더 이상 사용되지 않습니다. Django 1.9에서는 지원 (이전 마이그레이션 제외)이 제거됩니다. &lt;em&gt;이 검사는 Django 1.7 및 1.8에 나타났습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="403b5359b2cc4f8c8694dae807031c6fa3bfe311" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.W901&lt;/strong&gt;: &lt;code&gt;CommaSeparatedIntegerField&lt;/code&gt; has been deprecated. Support for it (except in historical migrations) will be removed in Django 2.0. &lt;em&gt;This check appeared in Django 1.10 and 1.11&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;fields.W901&lt;/strong&gt; : &lt;code&gt;CommaSeparatedIntegerField&lt;/code&gt; 가 사용되지 않습니다. Django 2.0에서는 (이전 마이그레이션 제외) 지원이 제거됩니다. &lt;em&gt;이 확인은 Django 1.10 및 1.11에 나타났습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="aa0135c7528a453032d707628a7df4f9d8f7d5e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fields.W902&lt;/strong&gt;: &lt;code&gt;FloatRangeField&lt;/code&gt; is deprecated and will be removed in Django 3.1.</source>
          <target state="translated">&lt;strong&gt;fields.W902&lt;/strong&gt; : &lt;code&gt;FloatRangeField&lt;/code&gt; 는 더 이상 사용되지 않으며 Django 3.1에서 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="ff4c9792f7f59b0a4c0b957c8ad3d0047f98488e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;file_h&lt;/strong&gt; (a Python &lt;code&gt;file&lt;/code&gt; object or a string path to the file) &amp;ndash; input file that contains spatial data</source>
          <target state="translated">&lt;strong&gt;file_h&lt;/strong&gt; (파이썬 &lt;code&gt;file&lt;/code&gt; 객체 또는 파일 의 문자열 경로) &amp;ndash; 공간 데이터를 포함하는 입력 파일</target>
        </trans-unit>
        <trans-unit id="6032686b9271c1af5ea6607d8ae10e1621a606a2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;flags&lt;/strong&gt; &amp;ndash; If not &lt;code&gt;None&lt;/code&gt;, overrides &lt;a href=&quot;#django.core.validators.RegexValidator.flags&quot;&gt;&lt;code&gt;flags&lt;/code&gt;&lt;/a&gt;. In that case, &lt;a href=&quot;#django.core.validators.RegexValidator.regex&quot;&gt;&lt;code&gt;regex&lt;/code&gt;&lt;/a&gt; must be a regular expression string, or &lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">&lt;strong&gt;flags&lt;/strong&gt; &amp;ndash; &lt;code&gt;None&lt;/code&gt; 이 아닌 경우 &lt;strong&gt;플래그를&lt;/strong&gt; 재정의 &lt;a href=&quot;#django.core.validators.RegexValidator.flags&quot;&gt; &lt;code&gt;flags&lt;/code&gt; &lt;/a&gt; . 이 경우 &lt;a href=&quot;#django.core.validators.RegexValidator.regex&quot;&gt; &lt;code&gt;regex&lt;/code&gt; &lt;/a&gt; 은 정규식 문자열이거나 &lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; 가 발생해야합니다.</target>
        </trans-unit>
        <trans-unit id="15a9f36fbc8f44887ff11593ece7b5bd13414e83" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;from_email&lt;/strong&gt; &amp;ndash; the sender&amp;rsquo;s email.</source>
          <target state="translated">&lt;strong&gt;from_email&lt;/strong&gt; &amp;ndash; 발신자의 이메일입니다.</target>
        </trans-unit>
        <trans-unit id="786f394b941539e4fc545c63b726c2fa69dcbe7a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;geo_input&lt;/strong&gt; &amp;ndash; Geometry input value (string or buffer)</source>
          <target state="translated">&lt;strong&gt;geo_input&lt;/strong&gt; &amp;ndash; 형상 입력 값 (문자열 또는 버퍼)</target>
        </trans-unit>
        <trans-unit id="02861ef30f0ed13e194d5a229ef7ca8c54cd4ae7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;html_email_template_name&lt;/strong&gt; &amp;ndash; the template for the HTML body; defaults to &lt;code&gt;None&lt;/code&gt;, in which case a plain text email is sent.</source>
          <target state="translated">&lt;strong&gt;html_email_template_name&lt;/strong&gt; &amp;ndash; HTML 본문의 템플리트입니다. 기본값은 &lt;code&gt;None&lt;/code&gt; 이며,이 경우 일반 텍스트 전자 메일이 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="93576d4b5c2b629c8cbc76a8d468cf0eb2835fe9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;invalid&lt;/strong&gt; &amp;ndash; a dictionary mapping invalid inputs to one or more raised error messages.</source>
          <target state="translated">&lt;strong&gt;invalid&lt;/strong&gt; &amp;ndash; 유효하지 않은 입력을 하나 이상의 발생한 오류 메시지에 매핑하는 사전입니다.</target>
        </trans-unit>
        <trans-unit id="fa4a6b5fc6a9c578a6cf2d9f0c5298083fe4629e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;inverse_match&lt;/strong&gt; &amp;ndash; If not &lt;code&gt;None&lt;/code&gt;, overrides &lt;a href=&quot;#django.core.validators.RegexValidator.inverse_match&quot;&gt;&lt;code&gt;inverse_match&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;inverse_match&lt;/strong&gt; &amp;ndash; &lt;code&gt;None&lt;/code&gt; 이 아닌 경우 &lt;strong&gt;inverse_match를&lt;/strong&gt; 재정의 &lt;a href=&quot;#django.core.validators.RegexValidator.inverse_match&quot;&gt; &lt;code&gt;inverse_match&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6de2264e7b37fb26ccdd5b9ef971366e2cf23695" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;len().&lt;/strong&gt; A &lt;code&gt;QuerySet&lt;/code&gt; is evaluated when you call &lt;code&gt;len()&lt;/code&gt; on it. This, as you might expect, returns the length of the result list.</source>
          <target state="translated">&lt;strong&gt;len (). &lt;/strong&gt; &lt;code&gt;QuerySet&lt;/code&gt; 당신이 호출 할 때 평가 &lt;code&gt;len()&lt;/code&gt; 그것을. 예상 한대로 결과 목록의 길이를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e7eb85d3341d25bd2507c7458fab4877456e6d85" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;list().&lt;/strong&gt; Force evaluation of a &lt;code&gt;QuerySet&lt;/code&gt; by calling &lt;code&gt;list()&lt;/code&gt; on it. For example:</source>
          <target state="translated">&lt;strong&gt;명부(). &lt;/strong&gt; &lt;code&gt;list()&lt;/code&gt; 를 호출 하여 &lt;code&gt;QuerySet&lt;/code&gt; 을 강제로 평가 하십시오. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="06529f629b8b5babd933a220c4a6768971a94a15" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;message&lt;/strong&gt; &amp;ndash; If not &lt;code&gt;None&lt;/code&gt;, overrides &lt;a href=&quot;#django.core.validators.EmailValidator.message&quot;&gt;&lt;code&gt;message&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;message&lt;/strong&gt; &amp;ndash; &lt;code&gt;None&lt;/code&gt; 이 아닌 경우 &lt;strong&gt;message를&lt;/strong&gt; 대체 &lt;a href=&quot;#django.core.validators.EmailValidator.message&quot;&gt; &lt;code&gt;message&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d02560df743cef9b00dd64fa2ea47e3a24325df9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;message&lt;/strong&gt; &amp;ndash; If not &lt;code&gt;None&lt;/code&gt;, overrides &lt;a href=&quot;#django.core.validators.ProhibitNullCharactersValidator.message&quot;&gt;&lt;code&gt;message&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;message&lt;/strong&gt; &amp;ndash; &lt;code&gt;None&lt;/code&gt; 이 아닌 경우 &lt;strong&gt;message를&lt;/strong&gt; 대체 &lt;a href=&quot;#django.core.validators.ProhibitNullCharactersValidator.message&quot;&gt; &lt;code&gt;message&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="24db736c0051d73470fe2f7a2475007ed20c2ada" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;message&lt;/strong&gt; &amp;ndash; If not &lt;code&gt;None&lt;/code&gt;, overrides &lt;a href=&quot;#django.core.validators.RegexValidator.message&quot;&gt;&lt;code&gt;message&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;message&lt;/strong&gt; &amp;ndash; &lt;code&gt;None&lt;/code&gt; 이 아닌 경우 &lt;strong&gt;message를&lt;/strong&gt; 대체 &lt;a href=&quot;#django.core.validators.RegexValidator.message&quot;&gt; &lt;code&gt;message&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c91f10f5af87cf70708554a56694fdd1e69aa340" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;models.E001&lt;/strong&gt;: &lt;code&gt;&amp;lt;swappable&amp;gt;&lt;/code&gt; is not of the form &lt;code&gt;app_label.app_name&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;models.E001&lt;/strong&gt; : &lt;code&gt;&amp;lt;swappable&amp;gt;&lt;/code&gt; 은 &lt;code&gt;app_label.app_name&lt;/code&gt; 형식이 아닙니다 .</target>
        </trans-unit>
        <trans-unit id="d6c05c1a84d135819ef822d47b8723a746764f30" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;models.E002&lt;/strong&gt;: &lt;code&gt;&amp;lt;SETTING&amp;gt;&lt;/code&gt; references &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt;, which has not been installed, or is abstract.</source>
          <target state="translated">&lt;strong&gt;models.E002&lt;/strong&gt; : &lt;code&gt;&amp;lt;SETTING&amp;gt;&lt;/code&gt; 은 설치되지 않았거나 추상적 인 &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; &amp;gt;을 참조 합니다.</target>
        </trans-unit>
        <trans-unit id="fa99afc29dcbdf7d2c97334aa97657ab561b3352" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;models.E003&lt;/strong&gt;: The model has two identical many-to-many relations through the intermediate model &lt;code&gt;&amp;lt;app_label&amp;gt;.&amp;lt;model&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;models.E003&lt;/strong&gt; : 모델은 중간 모델 &lt;code&gt;&amp;lt;app_label&amp;gt;.&amp;lt;model&amp;gt;&lt;/code&gt; 을 통해 두 개의 동일한 다 대다 관계를 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="3e909866dca74f9e34d8214f79532245572b2fc0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;models.E004&lt;/strong&gt;: &lt;code&gt;id&lt;/code&gt; can only be used as a field name if the field also sets &lt;code&gt;primary_key=True&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;models.E004&lt;/strong&gt; : &lt;code&gt;id&lt;/code&gt; 가 필드가 &lt;code&gt;primary_key=True&lt;/code&gt; 로 설정된 경우에만 필드 이름으로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f5539ee5450ebfb16c2f26d82060f2b9de0d45db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;models.E005&lt;/strong&gt;: The field &lt;code&gt;&amp;lt;field name&amp;gt;&lt;/code&gt; from parent model &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; clashes with the field &lt;code&gt;&amp;lt;field name&amp;gt;&lt;/code&gt; from parent model &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;models.E005&lt;/strong&gt; : 필드 &lt;code&gt;&amp;lt;field name&amp;gt;&lt;/code&gt; 상위 모델에서 &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; 분야와 충돌 &lt;code&gt;&amp;lt;field name&amp;gt;&lt;/code&gt; 상위 모델에서 &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6466607373723c3dc49fcc0d398ec84e67776928" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;models.E006&lt;/strong&gt;: The field clashes with the field &lt;code&gt;&amp;lt;field name&amp;gt;&lt;/code&gt; from model &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;models.E006&lt;/strong&gt; : 필드가 &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; 모델의 &amp;lt; &lt;code&gt;&amp;lt;field name&amp;gt;&lt;/code&gt; 와 충돌합니다 .</target>
        </trans-unit>
        <trans-unit id="3e9f0d6b4eb18aadf9cdad7f53ebf6bc6d175eae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;models.E007&lt;/strong&gt;: Field &lt;code&gt;&amp;lt;field name&amp;gt;&lt;/code&gt; has column name &lt;code&gt;&amp;lt;column name&amp;gt;&lt;/code&gt; that is used by another field.</source>
          <target state="translated">&lt;strong&gt;models.E007&lt;/strong&gt; : &lt;code&gt;&amp;lt;field name&amp;gt;&lt;/code&gt; 필드에 다른 필드에서 사용되는 열 이름 &lt;code&gt;&amp;lt;column name&amp;gt;&lt;/code&gt; 이 있습니다.</target>
        </trans-unit>
        <trans-unit id="cd106b6dc036b784a90bbc9d2651f97b19007fba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;models.E008&lt;/strong&gt;: &lt;code&gt;index_together&lt;/code&gt; must be a list or tuple.</source>
          <target state="translated">&lt;strong&gt;models.E008&lt;/strong&gt; : &lt;code&gt;index_together&lt;/code&gt; 는 목록 또는 튜플이어야합니다.</target>
        </trans-unit>
        <trans-unit id="6e449b72213de180b6ef13ca010cb3f744410dc2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;models.E009&lt;/strong&gt;: All &lt;code&gt;index_together&lt;/code&gt; elements must be lists or tuples.</source>
          <target state="translated">&lt;strong&gt;models.E009&lt;/strong&gt; : 모든 &lt;code&gt;index_together&lt;/code&gt; 요소는 목록 또는 튜플이어야합니다.</target>
        </trans-unit>
        <trans-unit id="a80ab731f9fbb87b07ac6c39e9a823ddf7b05882" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;models.E010&lt;/strong&gt;: &lt;code&gt;unique_together&lt;/code&gt; must be a list or tuple.</source>
          <target state="translated">&lt;strong&gt;models.E010&lt;/strong&gt; : &lt;code&gt;unique_together&lt;/code&gt; 는 목록 또는 튜플이어야합니다.</target>
        </trans-unit>
        <trans-unit id="5882230c98b4d16cb4a38d27a16ad8e9f6daa9ad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;models.E011&lt;/strong&gt;: All &lt;code&gt;unique_together&lt;/code&gt; elements must be lists or tuples.</source>
          <target state="translated">&lt;strong&gt;models.E011&lt;/strong&gt; : 모든 &lt;code&gt;unique_together&lt;/code&gt; 요소는 목록 또는 튜플이어야합니다.</target>
        </trans-unit>
        <trans-unit id="e53a4ed7a7c578efeb314d42d26bc4e1dcfc84e2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;models.E012&lt;/strong&gt;: &lt;code&gt;indexes/index_together/unique_together&lt;/code&gt; refers to the nonexistent field &lt;code&gt;&amp;lt;field name&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;models.E012&lt;/strong&gt; : &lt;code&gt;indexes/index_together/unique_together&lt;/code&gt; 는 존재하지 않는 필드 &lt;code&gt;&amp;lt;field name&amp;gt;&lt;/code&gt; 을 나타 냅니다.</target>
        </trans-unit>
        <trans-unit id="e2ad08daa5099f70cc58c62fea812ae94c80deca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;models.E013&lt;/strong&gt;: &lt;code&gt;indexes/index_together/unique_together&lt;/code&gt; refers to a &lt;code&gt;ManyToManyField&lt;/code&gt;&lt;code&gt;&amp;lt;field name&amp;gt;&lt;/code&gt;, but &lt;code&gt;ManyToManyField&lt;/code&gt;s are not supported for that option.</source>
          <target state="translated">&lt;strong&gt;models.E013&lt;/strong&gt; : &lt;code&gt;indexes/index_together/unique_together&lt;/code&gt; 는 &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;code&gt;&amp;lt;field name&amp;gt;&lt;/code&gt; 을 나타내지 만 &lt;code&gt;ManyToManyField&lt;/code&gt; 는 해당 옵션에서 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3de1574be31898427f16b01d4db3ab2677718eec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;models.E014&lt;/strong&gt;: &lt;code&gt;ordering&lt;/code&gt; must be a tuple or list (even if you want to order by only one field).</source>
          <target state="translated">&lt;strong&gt;models.E014&lt;/strong&gt; : &lt;code&gt;ordering&lt;/code&gt; 는 튜플 또는 목록이어야합니다 (한 필드로만 주문하려는 경우에도).</target>
        </trans-unit>
        <trans-unit id="809069c62e3719ae728c23092c0462e21c72d064" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;models.E015&lt;/strong&gt;: &lt;code&gt;ordering&lt;/code&gt; refers to the nonexistent field, related field, or lookup &lt;code&gt;&amp;lt;field name&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;models.E015&lt;/strong&gt; : &lt;code&gt;ordering&lt;/code&gt; 는 존재하지 않는 필드, 관련 필드 또는 조회 &lt;code&gt;&amp;lt;field name&amp;gt;&lt;/code&gt; 을 나타 냅니다.</target>
        </trans-unit>
        <trans-unit id="f37fb2f6d8f4e665b61d1e420c52bec14c31dbdd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;models.E016&lt;/strong&gt;: &lt;code&gt;indexes/index_together/unique_together&lt;/code&gt; refers to field &lt;code&gt;&amp;lt;field_name&amp;gt;&lt;/code&gt; which is not local to model &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;models.E016&lt;/strong&gt; : &lt;code&gt;indexes/index_together/unique_together&lt;/code&gt; 는 &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; 모델에 대해 로컬이 아닌 &lt;code&gt;&amp;lt;field_name&amp;gt;&lt;/code&gt; 필드를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="f99b65fb98679ba4d32cf66db3d1cc7252bdb6e7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;models.E017&lt;/strong&gt;: Proxy model &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; contains model fields.</source>
          <target state="translated">&lt;strong&gt;models.E017&lt;/strong&gt; : 프록시 모델 &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; 에 모델 필드가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="894ab7ae8c2d5b6ded1a09c8b7fa6d0a8d25f1a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;models.E018&lt;/strong&gt;: Autogenerated column name too long for field &lt;code&gt;&amp;lt;field&amp;gt;&lt;/code&gt;. Maximum length is &lt;code&gt;&amp;lt;maximum length&amp;gt;&lt;/code&gt; for database &lt;code&gt;&amp;lt;alias&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;models.E018&lt;/strong&gt; : &lt;code&gt;&amp;lt;field&amp;gt;&lt;/code&gt; 필드에 대해 자동 생성 된 열 이름이 너무 깁니다 . 데이터베이스 &lt;code&gt;&amp;lt;alias&amp;gt;&lt;/code&gt; 의 최대 길이는 &lt;code&gt;&amp;lt;maximum length&amp;gt;&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="fb91878fb39ffcb071ee2c9cd5cdf582ba517678" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;models.E019&lt;/strong&gt;: Autogenerated column name too long for M2M field &lt;code&gt;&amp;lt;M2M field&amp;gt;&lt;/code&gt;. Maximum length is &lt;code&gt;&amp;lt;maximum length&amp;gt;&lt;/code&gt; for database &lt;code&gt;&amp;lt;alias&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;models.E019&lt;/strong&gt; : M2M 필드 &lt;code&gt;&amp;lt;M2M field&amp;gt;&lt;/code&gt; 에 대해 자동 생성 된 열 이름이 너무 깁니다 . 데이터베이스 &lt;code&gt;&amp;lt;alias&amp;gt;&lt;/code&gt; 의 최대 길이는 &lt;code&gt;&amp;lt;maximum length&amp;gt;&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="4054a37dfc30cbfee07d5b3443b37e771eed67e7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;models.E020&lt;/strong&gt;: The &lt;code&gt;&amp;lt;model&amp;gt;.check()&lt;/code&gt; class method is currently overridden.</source>
          <target state="translated">&lt;strong&gt;models.E020&lt;/strong&gt; : &lt;code&gt;&amp;lt;model&amp;gt;.check()&lt;/code&gt; 클래스 메소드가 현재 대체되었습니다.</target>
        </trans-unit>
        <trans-unit id="3653a3fec8c6333ee51573936dd5e27229ebb5aa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;models.E021&lt;/strong&gt;: &lt;code&gt;ordering&lt;/code&gt; and &lt;code&gt;order_with_respect_to&lt;/code&gt; cannot be used together.</source>
          <target state="translated">&lt;strong&gt;models.E021&lt;/strong&gt; : &lt;code&gt;ordering&lt;/code&gt; 과 &lt;code&gt;order_with_respect_to&lt;/code&gt; 를 함께 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="d97722fb995eede9b8ecbf38abe621b399d640b4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;models.E022&lt;/strong&gt;: &lt;code&gt;&amp;lt;function&amp;gt;&lt;/code&gt; contains a lazy reference to &lt;code&gt;&amp;lt;app label&amp;gt;.&amp;lt;model&amp;gt;&lt;/code&gt;, but app &lt;code&gt;&amp;lt;app label&amp;gt;&lt;/code&gt; isn&amp;rsquo;t installed or doesn&amp;rsquo;t provide model &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;models.E022&lt;/strong&gt; : &lt;code&gt;&amp;lt;function&amp;gt;&lt;/code&gt; 에 &lt;code&gt;&amp;lt;app label&amp;gt;.&amp;lt;model&amp;gt;&lt;/code&gt; 에 대한 &lt;strong&gt;지연된&lt;/strong&gt; 참조가 포함되어 있지만 app &lt;code&gt;&amp;lt;app label&amp;gt;&lt;/code&gt; 이 (가) 설치되지 않았거나 &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; 모델을 제공하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="32461326e4a5218603082d387cdf116863e758bd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;models.E023&lt;/strong&gt;: The model name &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; cannot start or end with an underscore as it collides with the query lookup syntax.</source>
          <target state="translated">&lt;strong&gt;models.E023&lt;/strong&gt; : 모델 이름 &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; 이 (가) 조회 조회 구문과 충돌하므로 밑줄로 시작하거나 끝날 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="f0bda8e848122074d67169ef1ac47ca16f9250d9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;models.E024&lt;/strong&gt;: The model name &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; cannot contain double underscores as it collides with the query lookup syntax.</source>
          <target state="translated">&lt;strong&gt;models.E024&lt;/strong&gt; : 모델 이름 &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; 은 쿼리 조회 구문과 충돌하므로 이중 밑줄을 포함 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="c5c9f8f0602244d5885148b4141b33b9049671a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;models.E025&lt;/strong&gt;: The property &lt;code&gt;&amp;lt;property name&amp;gt;&lt;/code&gt; clashes with a related field accessor.</source>
          <target state="translated">&lt;strong&gt;models.E025&lt;/strong&gt; : &lt;code&gt;&amp;lt;property name&amp;gt;&lt;/code&gt; 특성 이 관련 필드 접근 자와 충돌합니다.</target>
        </trans-unit>
        <trans-unit id="e02aa334fc01eba6ed960035cd20bf41b01006a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;models.E026&lt;/strong&gt;: The model cannot have more than one field with &lt;code&gt;primary_key=True&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;models.E026&lt;/strong&gt; : 모델은 &lt;code&gt;primary_key=True&lt;/code&gt; 인 필드를 둘 이상 가질 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="7b2be4903e8ec3ebccaa426e2358eae9b48a8c00" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;models.E028&lt;/strong&gt;: &lt;code&gt;db_table&lt;/code&gt;&lt;code&gt;&amp;lt;db_table&amp;gt;&lt;/code&gt; is used by multiple models: &lt;code&gt;&amp;lt;model list&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;models.E028&lt;/strong&gt; : &lt;code&gt;db_table&lt;/code&gt; &lt;code&gt;&amp;lt;db_table&amp;gt;&lt;/code&gt; 은 여러 모델에서 사용됩니다 : &lt;code&gt;&amp;lt;model list&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f22f01142f08f48ff5443c172a37c2d9ec7b2ea7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;models.E029&lt;/strong&gt;: index name &lt;code&gt;&amp;lt;index&amp;gt;&lt;/code&gt; is not unique for model &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;models.E029&lt;/strong&gt; : 색인 이름 &lt;code&gt;&amp;lt;index&amp;gt;&lt;/code&gt; 이 (가) &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; 모델에 고유하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="3ed2c57e529729ba295d7df2ee19efa7e41ab4cb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;models.E030&lt;/strong&gt;: index name &lt;code&gt;&amp;lt;index&amp;gt;&lt;/code&gt; is not unique amongst models: &lt;code&gt;&amp;lt;model list&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;models.E030&lt;/strong&gt; : 인덱스 이름 &lt;code&gt;&amp;lt;index&amp;gt;&lt;/code&gt; 은 (는) &lt;code&gt;&amp;lt;model list&amp;gt;&lt;/code&gt; 모델 중에서 고유하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="9bdb8a296aacac5dfdd000677440dd6cef8db652" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;models.E031&lt;/strong&gt;: constraint name &lt;code&gt;&amp;lt;constraint&amp;gt;&lt;/code&gt; is not unique for model &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;models.E031&lt;/strong&gt; : 제약 조건 이름 &lt;code&gt;&amp;lt;constraint&amp;gt;&lt;/code&gt; 가 &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; 모델에 고유하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="f5f91aae059fb5152dd7b524efc0d87df09fc13d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;models.E032&lt;/strong&gt;: constraint name &lt;code&gt;&amp;lt;constraint&amp;gt;&lt;/code&gt; is not unique amongst models: &lt;code&gt;&amp;lt;model list&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;models.E032&lt;/strong&gt; : 제약 조건 이름 &lt;code&gt;&amp;lt;constraint&amp;gt;&lt;/code&gt; 은 (는) &lt;code&gt;&amp;lt;model list&amp;gt;&lt;/code&gt; 모델 중에서 고유하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="b9343c3ca8a8790df815280c0afc6d2af37d517a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;models.E033&lt;/strong&gt;: The index name &lt;code&gt;&amp;lt;index&amp;gt;&lt;/code&gt; cannot start with an underscore or a number.</source>
          <target state="translated">&lt;strong&gt;models.E033&lt;/strong&gt; : 색인 이름 &lt;code&gt;&amp;lt;index&amp;gt;&lt;/code&gt; 은 밑줄이나 숫자로 시작할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="1f409ad8962fecef36c8764ac92b5a46e87bf846" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;models.E034&lt;/strong&gt;: The index name &lt;code&gt;&amp;lt;index&amp;gt;&lt;/code&gt; cannot be longer than &lt;code&gt;&amp;lt;max_length&amp;gt;&lt;/code&gt; characters.</source>
          <target state="translated">&lt;strong&gt;models.E034&lt;/strong&gt; : 색인 이름 &lt;code&gt;&amp;lt;index&amp;gt;&lt;/code&gt; 은 (는) &lt;code&gt;&amp;lt;max_length&amp;gt;&lt;/code&gt; 자를 초과 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="a6c27bb344ffdac4eb96335c2125b9d23457d373" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;models.W027&lt;/strong&gt;: &lt;code&gt;&amp;lt;database&amp;gt;&lt;/code&gt; does not support check constraints.</source>
          <target state="translated">&lt;strong&gt;models.W027&lt;/strong&gt; : &lt;code&gt;&amp;lt;database&amp;gt;&lt;/code&gt; 는 점검 제한 조건을 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d3158477fc1d2dd5293454b7c7d63d86c63098fa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;models.W035&lt;/strong&gt;: &lt;code&gt;db_table&lt;/code&gt;&lt;code&gt;&amp;lt;db_table&amp;gt;&lt;/code&gt; is used by multiple models: &lt;code&gt;&amp;lt;model list&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;models.W035&lt;/strong&gt; : &lt;code&gt;db_table&lt;/code&gt; &lt;code&gt;&amp;lt;db_table&amp;gt;&lt;/code&gt; 은 여러 모델에서 사용됩니다 : &lt;code&gt;&amp;lt;model list&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e6e15d8eaf0ac824ba5d997568ac84a161432484" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;module&lt;/strong&gt; &amp;ndash; URLconf module (or module name)</source>
          <target state="translated">&lt;strong&gt;module&lt;/strong&gt; &amp;ndash; URLconf 모듈 (또는 모듈 이름)</target>
        </trans-unit>
        <trans-unit id="7426fac9f1af2edb4e0a68e5e305c9e7b89a469d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mysql.E001&lt;/strong&gt;: MySQL does not allow unique &lt;code&gt;CharField&lt;/code&gt;s to have a &lt;code&gt;max_length&lt;/code&gt; &amp;gt; 255.</source>
          <target state="translated">&lt;strong&gt;mysql.E001&lt;/strong&gt; : MySQL은 고유 한 &lt;code&gt;CharField&lt;/code&gt; 의 &lt;code&gt;max_length&lt;/code&gt; &amp;gt; 255 를 허용하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="eb61b6a4570cd48cca77d31c18c8c8ece97846df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mysql.W002&lt;/strong&gt;: MySQL Strict Mode is not set for database connection &amp;lsquo;&amp;lt;alias&amp;gt;&amp;rsquo;. See also &lt;a href=&quot;databases#mysql-sql-mode&quot;&gt;Setting sql_mode&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;mysql.W002&lt;/strong&gt; : MySQL Strict Mode가 데이터베이스 연결 '&amp;lt;alias&amp;gt;'에 설정되어 있지 않습니다. &lt;a href=&quot;databases#mysql-sql-mode&quot;&gt;sql_mode 설정&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="94fac547481ecb051b7b4c722a33cec960d0c90f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;namespace&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; Instance namespace for the URL entries being included</source>
          <target state="translated">&lt;strong&gt;namespace&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 포함되는 URL 항목의 인스턴스 네임 스페이스</target>
        </trans-unit>
        <trans-unit id="335a3fc45d2a1fc964532f5932b33d2c2f9db785" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pattern_list&lt;/strong&gt; &amp;ndash; Iterable of &lt;a href=&quot;#django.urls.path&quot;&gt;&lt;code&gt;path()&lt;/code&gt;&lt;/a&gt; and/or &lt;a href=&quot;#django.urls.re_path&quot;&gt;&lt;code&gt;re_path()&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="translated">&lt;strong&gt;pattern_list&lt;/strong&gt; &amp;ndash; &lt;a href=&quot;#django.urls.path&quot;&gt; &lt;code&gt;path()&lt;/code&gt; &lt;/a&gt; 및 / 또는 &lt;a href=&quot;#django.urls.re_path&quot;&gt; &lt;code&gt;re_path()&lt;/code&gt; &lt;/a&gt; 인스턴스의 반복 가능</target>
        </trans-unit>
        <trans-unit id="0d97153ec64a2c9b5c8246020bdbc14ce2ef2c97" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;postgres.E001&lt;/strong&gt;: Base field for array has errors: &amp;hellip;</source>
          <target state="translated">&lt;strong&gt;postgres.E001&lt;/strong&gt; : 배열의 기본 필드에 오류가 있습니다 :&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="17010d3342fcef8d569eec37f198ffff8218aab0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;postgres.E002&lt;/strong&gt;: Base field for array cannot be a related field.</source>
          <target state="translated">&lt;strong&gt;postgres.E002&lt;/strong&gt; : 배열의 기본 필드는 관련 필드가 될 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="9c6e26877b66dc7cec5a08753a6b3423f65b03cf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;postgres.E003&lt;/strong&gt;: &lt;code&gt;&amp;lt;field&amp;gt;&lt;/code&gt; default should be a callable instead of an instance so that it&amp;rsquo;s not shared between all field instances.</source>
          <target state="translated">&lt;strong&gt;postgres.E003&lt;/strong&gt; : &lt;code&gt;&amp;lt;field&amp;gt;&lt;/code&gt; 기본값은 모든 필드 인스턴스간에 공유되지 않도록 인스턴스 대신 호출 가능해야합니다.</target>
        </trans-unit>
        <trans-unit id="1b3ce573be5841581ddf65d6f594d03ac899418c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;receiver&lt;/strong&gt; &amp;ndash; The callback function which will be connected to this signal. See &lt;a href=&quot;#receiver-functions&quot;&gt;Receiver functions&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;strong&gt;수신기&lt;/strong&gt; &amp;ndash;이 신호에 연결될 콜백 기능. 자세한 내용은 &lt;a href=&quot;#receiver-functions&quot;&gt;수신기 기능&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b209d0aef96d468b10450467e45f61fbff425f59" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;regex&lt;/strong&gt; &amp;ndash; If not &lt;code&gt;None&lt;/code&gt;, overrides &lt;a href=&quot;#django.core.validators.RegexValidator.regex&quot;&gt;&lt;code&gt;regex&lt;/code&gt;&lt;/a&gt;. Can be a regular expression string or a pre-compiled regular expression.</source>
          <target state="translated">&lt;strong&gt;regex&lt;/strong&gt; &amp;ndash; &lt;code&gt;None&lt;/code&gt; 이 아니라면 &lt;a href=&quot;#django.core.validators.RegexValidator.regex&quot;&gt; &lt;code&gt;regex&lt;/code&gt; 를&lt;/a&gt; 덮어 씁니다 . 정규식 문자열이거나 미리 컴파일 된 정규식 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3f36c0c4c9491819753b0b8fe8a90819e204b731" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;repr().&lt;/strong&gt; A &lt;code&gt;QuerySet&lt;/code&gt; is evaluated when you call &lt;code&gt;repr()&lt;/code&gt; on it. This is for convenience in the Python interactive interpreter, so you can immediately see your results when using the API interactively.</source>
          <target state="translated">&lt;strong&gt;repr (). &lt;/strong&gt; &lt;code&gt;QuerySet&lt;/code&gt; 당신이 호출 할 때 평가 &lt;code&gt;repr()&lt;/code&gt; 거기에. 이는 Python 대화식 인터프리터에서 편의를 위해 대화식으로 API를 사용할 때 결과를 즉시 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="527bf5f265bbea1234082e869443ec58ce47661a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;security.E023&lt;/strong&gt;: You have set the &lt;a href=&quot;settings#std:setting-SECURE_REFERRER_POLICY&quot;&gt;&lt;code&gt;SECURE_REFERRER_POLICY&lt;/code&gt;&lt;/a&gt; setting to an invalid value.</source>
          <target state="translated">&lt;strong&gt;security.E023&lt;/strong&gt; : &lt;a href=&quot;settings#std:setting-SECURE_REFERRER_POLICY&quot;&gt; &lt;code&gt;SECURE_REFERRER_POLICY&lt;/code&gt; &lt;/a&gt; 설정을 유효하지 않은 값으로 설정했습니다.</target>
        </trans-unit>
        <trans-unit id="b9c5540c245dd7639e62c4e8e0773d063bf16ed1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;security.W001&lt;/strong&gt;: You do not have &lt;a href=&quot;middleware#django.middleware.security.SecurityMiddleware&quot;&gt;&lt;code&gt;django.middleware.security.SecurityMiddleware&lt;/code&gt;&lt;/a&gt; in your &lt;a href=&quot;settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt; so the &lt;a href=&quot;settings#std:setting-SECURE_HSTS_SECONDS&quot;&gt;&lt;code&gt;SECURE_HSTS_SECONDS&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;settings#std:setting-SECURE_CONTENT_TYPE_NOSNIFF&quot;&gt;&lt;code&gt;SECURE_CONTENT_TYPE_NOSNIFF&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;settings#std:setting-SECURE_BROWSER_XSS_FILTER&quot;&gt;&lt;code&gt;SECURE_BROWSER_XSS_FILTER&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;settings#std:setting-SECURE_REFERRER_POLICY&quot;&gt;&lt;code&gt;SECURE_REFERRER_POLICY&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;settings#std:setting-SECURE_SSL_REDIRECT&quot;&gt;&lt;code&gt;SECURE_SSL_REDIRECT&lt;/code&gt;&lt;/a&gt; settings will have no effect.</source>
          <target state="translated">&lt;strong&gt;security.W001는&lt;/strong&gt; : 당신이없는 &lt;a href=&quot;middleware#django.middleware.security.SecurityMiddleware&quot;&gt; &lt;code&gt;django.middleware.security.SecurityMiddleware&lt;/code&gt; 을&lt;/a&gt; 당신의 &lt;a href=&quot;settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; &lt;/a&gt; 너무 &lt;a href=&quot;settings#std:setting-SECURE_HSTS_SECONDS&quot;&gt; &lt;code&gt;SECURE_HSTS_SECONDS&lt;/code&gt; 가&lt;/a&gt; , &lt;a href=&quot;settings#std:setting-SECURE_CONTENT_TYPE_NOSNIFF&quot;&gt; &lt;code&gt;SECURE_CONTENT_TYPE_NOSNIFF&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;settings#std:setting-SECURE_BROWSER_XSS_FILTER&quot;&gt; &lt;code&gt;SECURE_BROWSER_XSS_FILTER&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;settings#std:setting-SECURE_REFERRER_POLICY&quot;&gt; &lt;code&gt;SECURE_REFERRER_POLICY&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;settings#std:setting-SECURE_SSL_REDIRECT&quot;&gt; &lt;code&gt;SECURE_SSL_REDIRECT&lt;/code&gt; 의&lt;/a&gt; 설정이 적용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0bedf785a7e7b4fae1393308185e55f5092063a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;security.W002&lt;/strong&gt;: You do not have &lt;a href=&quot;middleware#django.middleware.clickjacking.XFrameOptionsMiddleware&quot;&gt;&lt;code&gt;django.middleware.clickjacking.XFrameOptionsMiddleware&lt;/code&gt;&lt;/a&gt; in your &lt;a href=&quot;settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt;, so your pages will not be served with an &lt;code&gt;'x-frame-options'&lt;/code&gt; header. Unless there is a good reason for your site to be served in a frame, you should consider enabling this header to help prevent clickjacking attacks.</source>
          <target state="translated">&lt;strong&gt;security.W002는&lt;/strong&gt; : 당신이없는 &lt;a href=&quot;middleware#django.middleware.clickjacking.XFrameOptionsMiddleware&quot;&gt; &lt;code&gt;django.middleware.clickjacking.XFrameOptionsMiddleware&lt;/code&gt; 을&lt;/a&gt; 당신의 &lt;a href=&quot;settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; &lt;/a&gt; 페이지가 함께 제공되지 않도록, &lt;code&gt;'x-frame-options'&lt;/code&gt; 헤더. 사이트를 프레임에 게재해야하는 적절한 이유가 없으면 클릭 재킹 공격을 방지하기 위해이 헤더를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="944110063968640a998885038bc8a35d2d362873" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;security.W003&lt;/strong&gt;: You don&amp;rsquo;t appear to be using Django&amp;rsquo;s built-in cross-site request forgery protection via the middleware (&lt;a href=&quot;middleware#django.middleware.csrf.CsrfViewMiddleware&quot;&gt;&lt;code&gt;django.middleware.csrf.CsrfViewMiddleware&lt;/code&gt;&lt;/a&gt; is not in your &lt;a href=&quot;settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt;). Enabling the middleware is the safest approach to ensure you don&amp;rsquo;t leave any holes.</source>
          <target state="translated">&lt;strong&gt;security.W003&lt;/strong&gt; : 미들웨어를 통해 Django의 내장 사이트 간 요청 위조 방지 기능을 사용하지 않는 것 같습니다 ( &lt;a href=&quot;middleware#django.middleware.csrf.CsrfViewMiddleware&quot;&gt; &lt;code&gt;django.middleware.csrf.CsrfViewMiddleware&lt;/code&gt; &lt;/a&gt; 는 &lt;a href=&quot;settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; 에&lt;/a&gt; 없습니다 ). 구멍을 남기지 않도록 미들웨어를 활성화하는 것이 가장 안전한 방법입니다.</target>
        </trans-unit>
        <trans-unit id="1e43f414e8c72ed5f8e1440a53991cf29c963447" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;security.W004&lt;/strong&gt;: You have not set a value for the &lt;a href=&quot;settings#std:setting-SECURE_HSTS_SECONDS&quot;&gt;&lt;code&gt;SECURE_HSTS_SECONDS&lt;/code&gt;&lt;/a&gt; setting. If your entire site is served only over SSL, you may want to consider setting a value and enabling &lt;a href=&quot;middleware#http-strict-transport-security&quot;&gt;HTTP Strict Transport Security&lt;/a&gt;. Be sure to read the documentation first; enabling HSTS carelessly can cause serious, irreversible problems.</source>
          <target state="translated">&lt;strong&gt;security.W004&lt;/strong&gt; : &lt;a href=&quot;settings#std:setting-SECURE_HSTS_SECONDS&quot;&gt; &lt;code&gt;SECURE_HSTS_SECONDS&lt;/code&gt; &lt;/a&gt; 설정 값을 설정하지 않았습니다 . 전체 사이트가 SSL을 통해서만 제공되는 경우 값 설정 및 &lt;a href=&quot;middleware#http-strict-transport-security&quot;&gt;HTTP Strict Transport Security 사용&lt;/a&gt; 을 고려할 수 있습니다 . 설명서를 먼저 읽으십시오. HSTS를 부주의하게 사용하면 심각한 돌이킬 수없는 문제가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ced60cc5773ada0e3e1d8dfc8c5f15d40df42d9b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;security.W005&lt;/strong&gt;: You have not set the &lt;a href=&quot;settings#std:setting-SECURE_HSTS_INCLUDE_SUBDOMAINS&quot;&gt;&lt;code&gt;SECURE_HSTS_INCLUDE_SUBDOMAINS&lt;/code&gt;&lt;/a&gt; setting to &lt;code&gt;True&lt;/code&gt;. Without this, your site is potentially vulnerable to attack via an insecure connection to a subdomain. Only set this to &lt;code&gt;True&lt;/code&gt; if you are certain that all subdomains of your domain should be served exclusively via SSL.</source>
          <target state="translated">&lt;strong&gt;security.W005&lt;/strong&gt; : &lt;a href=&quot;settings#std:setting-SECURE_HSTS_INCLUDE_SUBDOMAINS&quot;&gt; &lt;code&gt;SECURE_HSTS_INCLUDE_SUBDOMAINS&lt;/code&gt; &lt;/a&gt; 설정을 &lt;code&gt;True&lt;/code&gt; 로 설정 하지 않았습니다 . 이것이 없으면 사이트는 하위 도메인에 대한 안전하지 않은 연결을 통한 공격에 취약 할 수 있습니다. 도메인의 모든 하위 도메인이 SSL을 통해 독점적으로 제공되어야하는 경우 에만이 값을 &lt;code&gt;True&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="062cae0bdbd1f6c268ac5ef0b4778575b1be048b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;security.W006&lt;/strong&gt;: Your &lt;a href=&quot;settings#std:setting-SECURE_CONTENT_TYPE_NOSNIFF&quot;&gt;&lt;code&gt;SECURE_CONTENT_TYPE_NOSNIFF&lt;/code&gt;&lt;/a&gt; setting is not set to &lt;code&gt;True&lt;/code&gt;, so your pages will not be served with an &lt;code&gt;'X-Content-Type-Options: nosniff'&lt;/code&gt; header. You should consider enabling this header to prevent the browser from identifying content types incorrectly.</source>
          <target state="translated">&lt;strong&gt;security.W006&lt;/strong&gt; : &lt;a href=&quot;settings#std:setting-SECURE_CONTENT_TYPE_NOSNIFF&quot;&gt; &lt;code&gt;SECURE_CONTENT_TYPE_NOSNIFF&lt;/code&gt; &lt;/a&gt; 설정이 &lt;code&gt;True&lt;/code&gt; 로 설정되어 있지 않으므로 페이지에 &lt;code&gt;'X-Content-Type-Options: nosniff'&lt;/code&gt; 헤더 가 제공되지 않습니다 . 브라우저가 컨텐츠 유형을 잘못 식별하지 못하도록하려면이 헤더를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="b094b72c9612d92bbbd0f3b39e0c0a50bfe74094" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;security.W007&lt;/strong&gt;: Your &lt;a href=&quot;settings#std:setting-SECURE_BROWSER_XSS_FILTER&quot;&gt;&lt;code&gt;SECURE_BROWSER_XSS_FILTER&lt;/code&gt;&lt;/a&gt; setting is not set to &lt;code&gt;True&lt;/code&gt;, so your pages will not be served with an &lt;code&gt;'X-XSS-Protection: 1; mode=block'&lt;/code&gt; header. You should consider enabling this header to activate the browser&amp;rsquo;s XSS filtering and help prevent XSS attacks. &lt;em&gt;This check is removed in Django 3.0 as the ``X-XSS-Protection`` header is no longer honored by modern browsers.&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;security.W007&lt;/strong&gt; : &lt;a href=&quot;settings#std:setting-SECURE_BROWSER_XSS_FILTER&quot;&gt; &lt;code&gt;SECURE_BROWSER_XSS_FILTER&lt;/code&gt; &lt;/a&gt; 설정이 &lt;code&gt;True&lt;/code&gt; 로 설정되어 있지 않으므로 페이지에 &lt;code&gt;'X-XSS-Protection: 1; mode=block'&lt;/code&gt; 헤더. 브라우저의 XSS 필터링을 활성화하고 XSS 공격을 방지하려면이 헤더를 활성화해야합니다. &lt;em&gt;이 검사는 Django 3.0에서``X-XSS-Protection ''헤더가 더 이상 최신 브라우저에서 사용되지 않으므로 제거되었습니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5e8da98a527fb1fdfb20afea3bc1b4330367a491" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;security.W008&lt;/strong&gt;: Your &lt;a href=&quot;settings#std:setting-SECURE_SSL_REDIRECT&quot;&gt;&lt;code&gt;SECURE_SSL_REDIRECT&lt;/code&gt;&lt;/a&gt; setting is not set to &lt;code&gt;True&lt;/code&gt;. Unless your site should be available over both SSL and non-SSL connections, you may want to either set this setting to &lt;code&gt;True&lt;/code&gt; or configure a load balancer or reverse-proxy server to redirect all connections to HTTPS.</source>
          <target state="translated">&lt;strong&gt;security.W008&lt;/strong&gt; : &lt;a href=&quot;settings#std:setting-SECURE_SSL_REDIRECT&quot;&gt; &lt;code&gt;SECURE_SSL_REDIRECT&lt;/code&gt; &lt;/a&gt; 설정이 &lt;code&gt;True&lt;/code&gt; 로 설정되지 않았습니다 . SSL 및 비 SSL 연결을 통해 사이트를 사용할 수없는 경우이 설정을 &lt;code&gt;True&lt;/code&gt; 로 설정 하거나로드 밸런서 또는 리버스 프록시 서버를 구성하여 모든 연결을 HTTPS로 리디렉션 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e31268ffbfcf49f4af772f5fc8737012490b2930" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;security.W009&lt;/strong&gt;: Your &lt;a href=&quot;settings#std:setting-SECRET_KEY&quot;&gt;&lt;code&gt;SECRET_KEY&lt;/code&gt;&lt;/a&gt; has less than 50 characters or less than 5 unique characters. Please generate a long and random &lt;code&gt;SECRET_KEY&lt;/code&gt;, otherwise many of Django&amp;rsquo;s security-critical features will be vulnerable to attack.</source>
          <target state="translated">&lt;strong&gt;security.W009&lt;/strong&gt; : &lt;a href=&quot;settings#std:setting-SECRET_KEY&quot;&gt; &lt;code&gt;SECRET_KEY&lt;/code&gt; 의&lt;/a&gt; 고유 한 문자 수가 50 자 미만이거나 5 자 미만입니다. 길고 임의의 &lt;code&gt;SECRET_KEY&lt;/code&gt; 를 생성하십시오 . 그렇지 않으면 Django의 많은 보안에 중요한 기능이 공격에 취약합니다.</target>
        </trans-unit>
        <trans-unit id="be1434a31c19b7d2ac2b0c80eb4500ee9b9a1aef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;security.W010&lt;/strong&gt;: You have &lt;a href=&quot;../topics/http/sessions#module-django.contrib.sessions&quot;&gt;&lt;code&gt;django.contrib.sessions&lt;/code&gt;&lt;/a&gt; in your &lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; but you have not set &lt;a href=&quot;settings#std:setting-SESSION_COOKIE_SECURE&quot;&gt;&lt;code&gt;SESSION_COOKIE_SECURE&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;True&lt;/code&gt;. Using a secure-only session cookie makes it more difficult for network traffic sniffers to hijack user sessions.</source>
          <target state="translated">&lt;strong&gt;security.W010&lt;/strong&gt; : &lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; 에&lt;/a&gt;&lt;a href=&quot;../topics/http/sessions#module-django.contrib.sessions&quot;&gt; &lt;code&gt;django.contrib.sessions&lt;/code&gt; &lt;/a&gt; 가 있지만 &lt;a href=&quot;settings#std:setting-SESSION_COOKIE_SECURE&quot;&gt; &lt;code&gt;SESSION_COOKIE_SECURE&lt;/code&gt; &lt;/a&gt; 를 &lt;code&gt;True&lt;/code&gt; 로 설정하지 않았습니다 . 보안 전용 세션 쿠키를 사용하면 네트워크 트래픽 스니퍼가 사용자 세션을 가로 채기가 더 어려워집니다.</target>
        </trans-unit>
        <trans-unit id="23fa7cf7ffd9ece4c215fa06346ba7f7584626ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;security.W011&lt;/strong&gt;: You have &lt;a href=&quot;middleware#django.contrib.sessions.middleware.SessionMiddleware&quot;&gt;&lt;code&gt;django.contrib.sessions.middleware.SessionMiddleware&lt;/code&gt;&lt;/a&gt; in your &lt;a href=&quot;settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt;, but you have not set &lt;a href=&quot;settings#std:setting-SESSION_COOKIE_SECURE&quot;&gt;&lt;code&gt;SESSION_COOKIE_SECURE&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;True&lt;/code&gt;. Using a secure-only session cookie makes it more difficult for network traffic sniffers to hijack user sessions.</source>
          <target state="translated">&lt;strong&gt;security.W011&lt;/strong&gt; : &lt;a href=&quot;settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; 에&lt;/a&gt;&lt;a href=&quot;middleware#django.contrib.sessions.middleware.SessionMiddleware&quot;&gt; &lt;code&gt;django.contrib.sessions.middleware.SessionMiddleware&lt;/code&gt; &lt;/a&gt; 가 있지만 &lt;a href=&quot;settings#std:setting-SESSION_COOKIE_SECURE&quot;&gt; &lt;code&gt;SESSION_COOKIE_SECURE&lt;/code&gt; &lt;/a&gt; 를 &lt;code&gt;True&lt;/code&gt; 로 설정하지 않았습니다 . 보안 전용 세션 쿠키를 사용하면 네트워크 트래픽 스니퍼가 사용자 세션을 가로 채기가 더 어려워집니다.</target>
        </trans-unit>
        <trans-unit id="a5dcc94088b30d3945c5b141be19ae092cb8848e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;security.W012&lt;/strong&gt;: &lt;a href=&quot;settings#std:setting-SESSION_COOKIE_SECURE&quot;&gt;&lt;code&gt;SESSION_COOKIE_SECURE&lt;/code&gt;&lt;/a&gt; is not set to &lt;code&gt;True&lt;/code&gt;. Using a secure-only session cookie makes it more difficult for network traffic sniffers to hijack user sessions.</source>
          <target state="translated">&lt;strong&gt;security.W012&lt;/strong&gt; : &lt;a href=&quot;settings#std:setting-SESSION_COOKIE_SECURE&quot;&gt; &lt;code&gt;SESSION_COOKIE_SECURE&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;True&lt;/code&gt; 로 설정되지 않았습니다 . 보안 전용 세션 쿠키를 사용하면 네트워크 트래픽 스니퍼가 사용자 세션을 가로 채기가 더 어려워집니다.</target>
        </trans-unit>
        <trans-unit id="572b8e68c581e657668f6a61031c9b57021f9855" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;security.W013&lt;/strong&gt;: You have &lt;a href=&quot;../topics/http/sessions#module-django.contrib.sessions&quot;&gt;&lt;code&gt;django.contrib.sessions&lt;/code&gt;&lt;/a&gt; in your &lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;, but you have not set &lt;a href=&quot;settings#std:setting-SESSION_COOKIE_HTTPONLY&quot;&gt;&lt;code&gt;SESSION_COOKIE_HTTPONLY&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;True&lt;/code&gt;. Using an &lt;code&gt;HttpOnly&lt;/code&gt; session cookie makes it more difficult for cross-site scripting attacks to hijack user sessions.</source>
          <target state="translated">&lt;strong&gt;security.W013&lt;/strong&gt; : &lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; 에&lt;/a&gt;&lt;a href=&quot;../topics/http/sessions#module-django.contrib.sessions&quot;&gt; &lt;code&gt;django.contrib.sessions&lt;/code&gt; &lt;/a&gt; 가 있지만 &lt;a href=&quot;settings#std:setting-SESSION_COOKIE_HTTPONLY&quot;&gt; &lt;code&gt;SESSION_COOKIE_HTTPONLY&lt;/code&gt; &lt;/a&gt; 를 &lt;code&gt;True&lt;/code&gt; 로 설정하지 않았습니다 . 사용 &lt;code&gt;HttpOnly&lt;/code&gt; 세션 쿠키 것은 납치 사용자 세션에 크로스 사이트 스크립팅 공격을 더 어렵게 만든다.</target>
        </trans-unit>
        <trans-unit id="23b8841ab4cbcb131ef30030dc44c7954b8edf9b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;security.W014&lt;/strong&gt;: You have &lt;a href=&quot;middleware#django.contrib.sessions.middleware.SessionMiddleware&quot;&gt;&lt;code&gt;django.contrib.sessions.middleware.SessionMiddleware&lt;/code&gt;&lt;/a&gt; in your &lt;a href=&quot;settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt;, but you have not set &lt;a href=&quot;settings#std:setting-SESSION_COOKIE_HTTPONLY&quot;&gt;&lt;code&gt;SESSION_COOKIE_HTTPONLY&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;True&lt;/code&gt;. Using an &lt;code&gt;HttpOnly&lt;/code&gt; session cookie makes it more difficult for cross-site scripting attacks to hijack user sessions.</source>
          <target state="translated">&lt;strong&gt;security.W014&lt;/strong&gt; : &lt;a href=&quot;settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; 에&lt;/a&gt;&lt;a href=&quot;middleware#django.contrib.sessions.middleware.SessionMiddleware&quot;&gt; &lt;code&gt;django.contrib.sessions.middleware.SessionMiddleware&lt;/code&gt; &lt;/a&gt; 가 있지만 &lt;a href=&quot;settings#std:setting-SESSION_COOKIE_HTTPONLY&quot;&gt; &lt;code&gt;SESSION_COOKIE_HTTPONLY&lt;/code&gt; &lt;/a&gt; 를 &lt;code&gt;True&lt;/code&gt; 로 설정하지 않았습니다 . 사용 &lt;code&gt;HttpOnly&lt;/code&gt; 세션 쿠키 것은 납치 사용자 세션에 크로스 사이트 스크립팅 공격을 더 어렵게 만든다.</target>
        </trans-unit>
        <trans-unit id="7076548c958d16435a18dc9689abc0204ce45d2c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;security.W015&lt;/strong&gt;: &lt;a href=&quot;settings#std:setting-SESSION_COOKIE_HTTPONLY&quot;&gt;&lt;code&gt;SESSION_COOKIE_HTTPONLY&lt;/code&gt;&lt;/a&gt; is not set to &lt;code&gt;True&lt;/code&gt;. Using an &lt;code&gt;HttpOnly&lt;/code&gt; session cookie makes it more difficult for cross-site scripting attacks to hijack user sessions.</source>
          <target state="translated">&lt;strong&gt;security.W015&lt;/strong&gt; : &lt;a href=&quot;settings#std:setting-SESSION_COOKIE_HTTPONLY&quot;&gt; &lt;code&gt;SESSION_COOKIE_HTTPONLY&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;True&lt;/code&gt; 로 설정되지 않았습니다 . 사용 &lt;code&gt;HttpOnly&lt;/code&gt; 세션 쿠키 것은 납치 사용자 세션에 크로스 사이트 스크립팅 공격을 더 어렵게 만든다.</target>
        </trans-unit>
        <trans-unit id="c93b457e0d2f3039d069630c8b9269d2f73e0d04" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;security.W016&lt;/strong&gt;: &lt;a href=&quot;settings#std:setting-CSRF_COOKIE_SECURE&quot;&gt;&lt;code&gt;CSRF_COOKIE_SECURE&lt;/code&gt;&lt;/a&gt; is not set to &lt;code&gt;True&lt;/code&gt;. Using a secure-only CSRF cookie makes it more difficult for network traffic sniffers to steal the CSRF token.</source>
          <target state="translated">&lt;strong&gt;security.W016&lt;/strong&gt; : &lt;a href=&quot;settings#std:setting-CSRF_COOKIE_SECURE&quot;&gt; &lt;code&gt;CSRF_COOKIE_SECURE&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;True&lt;/code&gt; 로 설정되지 않았습니다 . 보안 전용 CSRF 쿠키를 사용하면 네트워크 트래픽 스니퍼가 CSRF 토큰을 훔치기가 더 어려워집니다.</target>
        </trans-unit>
        <trans-unit id="7fc747af66502dfe67f4fcff483b7c2dd8ddc502" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;security.W017&lt;/strong&gt;: &lt;a href=&quot;settings#std:setting-CSRF_COOKIE_HTTPONLY&quot;&gt;&lt;code&gt;CSRF_COOKIE_HTTPONLY&lt;/code&gt;&lt;/a&gt; is not set to &lt;code&gt;True&lt;/code&gt;. Using an &lt;code&gt;HttpOnly&lt;/code&gt; CSRF cookie makes it more difficult for cross-site scripting attacks to steal the CSRF token. &lt;em&gt;This check is removed in Django 1.11 as the&lt;/em&gt;&lt;a href=&quot;settings#std:setting-CSRF_COOKIE_HTTPONLY&quot;&gt;&lt;code&gt;CSRF_COOKIE_HTTPONLY&lt;/code&gt;&lt;/a&gt;&lt;em&gt;setting offers no practical benefit.&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;security.W017&lt;/strong&gt; : &lt;a href=&quot;settings#std:setting-CSRF_COOKIE_HTTPONLY&quot;&gt; &lt;code&gt;CSRF_COOKIE_HTTPONLY&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;True&lt;/code&gt; 로 설정되지 않았습니다 . 사용하여 &lt;code&gt;HttpOnly&lt;/code&gt; CSRF 쿠키 크로스 사이트 스크립팅 공격은 CSRF 토큰을 훔치는 것이 더 어렵게합니다. &lt;a href=&quot;settings#std:setting-CSRF_COOKIE_HTTPONLY&quot;&gt; &lt;code&gt;CSRF_COOKIE_HTTPONLY&lt;/code&gt; &lt;/a&gt;&lt;em&gt; 설정이 실질적인 이점을 제공하지 않기 &lt;/em&gt;때문에이&lt;em&gt; 확인은 Django 1.11에서 제거되었습니다 &lt;/em&gt;&lt;em&gt;.&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="56db08d9eec5ce4790b71a3355d0a2138f30f128" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;security.W018&lt;/strong&gt;: You should not have &lt;a href=&quot;settings#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; set to &lt;code&gt;True&lt;/code&gt; in deployment.</source>
          <target state="translated">&lt;strong&gt;security.W018&lt;/strong&gt; : 배포시 &lt;a href=&quot;settings#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG&lt;/code&gt; &lt;/a&gt; 를 &lt;code&gt;True&lt;/code&gt; 로 설정 하지 않아야 합니다.</target>
        </trans-unit>
        <trans-unit id="2a832070fe8dc13660365d932bfdde35cfa6b2b1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;security.W019&lt;/strong&gt;: You have &lt;a href=&quot;middleware#django.middleware.clickjacking.XFrameOptionsMiddleware&quot;&gt;&lt;code&gt;django.middleware.clickjacking.XFrameOptionsMiddleware&lt;/code&gt;&lt;/a&gt; in your &lt;a href=&quot;settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt;, but &lt;a href=&quot;settings#std:setting-X_FRAME_OPTIONS&quot;&gt;&lt;code&gt;X_FRAME_OPTIONS&lt;/code&gt;&lt;/a&gt; is not set to &lt;code&gt;'DENY'&lt;/code&gt;. Unless there is a good reason for your site to serve other parts of itself in a frame, you should change it to &lt;code&gt;'DENY'&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;security.W019은&lt;/strong&gt; : 당신은이 &lt;a href=&quot;middleware#django.middleware.clickjacking.XFrameOptionsMiddleware&quot;&gt; &lt;code&gt;django.middleware.clickjacking.XFrameOptionsMiddleware&lt;/code&gt; 을&lt;/a&gt; 당신의 &lt;a href=&quot;settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; &lt;/a&gt; 하지만 &lt;a href=&quot;settings#std:setting-X_FRAME_OPTIONS&quot;&gt; &lt;code&gt;X_FRAME_OPTIONS&lt;/code&gt; 이&lt;/a&gt; 설정되어 있지 않습니다 &lt;code&gt;'DENY'&lt;/code&gt; . 사이트가 프레임의 다른 부분을 제공해야하는 적절한 이유가없는 경우 사이트를 &lt;code&gt;'DENY'&lt;/code&gt; 로 변경해야합니다 .</target>
        </trans-unit>
        <trans-unit id="a0fa533632485ff8229c6db9e12a830fae3d3714" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;security.W020&lt;/strong&gt;: &lt;a href=&quot;settings#std:setting-ALLOWED_HOSTS&quot;&gt;&lt;code&gt;ALLOWED_HOSTS&lt;/code&gt;&lt;/a&gt; must not be empty in deployment.</source>
          <target state="translated">&lt;strong&gt;security.W020&lt;/strong&gt; : 배치에서 &lt;a href=&quot;settings#std:setting-ALLOWED_HOSTS&quot;&gt; &lt;code&gt;ALLOWED_HOSTS&lt;/code&gt; &lt;/a&gt; 를 비워 둘 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="6afe8dde81392e02677c75f03294b1af3ae6a91a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;security.W021&lt;/strong&gt;: You have not set the &lt;a href=&quot;settings#std:setting-SECURE_HSTS_PRELOAD&quot;&gt;&lt;code&gt;SECURE_HSTS_PRELOAD&lt;/code&gt;&lt;/a&gt; setting to &lt;code&gt;True&lt;/code&gt;. Without this, your site cannot be submitted to the browser preload list.</source>
          <target state="translated">&lt;strong&gt;security.W021&lt;/strong&gt; : &lt;a href=&quot;settings#std:setting-SECURE_HSTS_PRELOAD&quot;&gt; &lt;code&gt;SECURE_HSTS_PRELOAD&lt;/code&gt; &lt;/a&gt; 설정을 &lt;code&gt;True&lt;/code&gt; 로 설정 하지 않았습니다 . 그렇지 않으면 사이트를 브라우저 사전로드 목록에 제출할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="cb5a64ba48ad12a23e238c0b26df67abba3e0e78" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;security.W022&lt;/strong&gt;: You have not set the &lt;a href=&quot;settings#std:setting-SECURE_REFERRER_POLICY&quot;&gt;&lt;code&gt;SECURE_REFERRER_POLICY&lt;/code&gt;&lt;/a&gt; setting. Without this, your site will not send a Referrer-Policy header. You should consider enabling this header to protect user privacy.</source>
          <target state="translated">&lt;strong&gt;security.W022&lt;/strong&gt; : &lt;a href=&quot;settings#std:setting-SECURE_REFERRER_POLICY&quot;&gt; &lt;code&gt;SECURE_REFERRER_POLICY&lt;/code&gt; &lt;/a&gt; 설정을 설정 하지 않았습니다 . 이것이 없으면 사이트는 Referrer-Policy 헤더를 보내지 않습니다. 사용자 개인 정보를 보호하려면이 헤더를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="c5b7152177c67e4461536c001989cda5387bce53" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;sender&lt;/strong&gt; &amp;ndash; Specifies a particular sender to receive signals from. See &lt;a href=&quot;#connecting-to-specific-signals&quot;&gt;Connecting to signals sent by specific senders&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;strong&gt;sender&lt;/strong&gt; &amp;ndash; 신호를 수신 할 특정 발신자를 지정합니다. 자세한 내용 &lt;a href=&quot;#connecting-to-specific-signals&quot;&gt;은 특정 발신자가 보낸 신호에 연결을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2174a9f365a219e45a4f9ff572632c8c64943919" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;signal&lt;/strong&gt; &amp;ndash; A signal or a list of signals to connect a function to.</source>
          <target state="translated">&lt;strong&gt;signal&lt;/strong&gt; &amp;ndash; 기능을 연결할 신호 또는 신호 목록.</target>
        </trans-unit>
        <trans-unit id="b61e2c3eb1419346665d2c05df9763f93ff1c484" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;signals.E001&lt;/strong&gt;: &lt;code&gt;&amp;lt;handler&amp;gt;&lt;/code&gt; was connected to the &lt;code&gt;&amp;lt;signal&amp;gt;&lt;/code&gt; signal with a lazy reference to the sender &lt;code&gt;&amp;lt;app label&amp;gt;.&amp;lt;model&amp;gt;&lt;/code&gt;, but app &lt;code&gt;&amp;lt;app label&amp;gt;&lt;/code&gt; isn&amp;rsquo;t installed or doesn&amp;rsquo;t provide model &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;E001&lt;/strong&gt; : &lt;code&gt;&amp;lt;handler&amp;gt;&lt;/code&gt; 가 발신자 &lt;code&gt;&amp;lt;app label&amp;gt;.&amp;lt;model&amp;gt;&lt;/code&gt; 에 대한 게으른 참조로 &lt;code&gt;&amp;lt;signal&amp;gt;&lt;/code&gt; 신호 에 연결 되었지만 &lt;code&gt;&amp;lt;app label&amp;gt;&lt;/code&gt; 앱 이 설치되지 않았거나 &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt; 모델을 제공하지 않습니다. .</target>
        </trans-unit>
        <trans-unit id="a3b172f69deb8a7b653a7b7d9505c925b6c9f4ef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;sites.E001&lt;/strong&gt;: &lt;code&gt;CurrentSiteManager&lt;/code&gt; could not find a field named &lt;code&gt;&amp;lt;field name&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;sites.E001&lt;/strong&gt; : &lt;code&gt;CurrentSiteManager&lt;/code&gt; 가 &lt;code&gt;&amp;lt;field name&amp;gt;&lt;/code&gt; (이) 라는 필드를 찾을 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="e6990c64d94c95c791cd1239d44dc857440a3a65" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;sites.E002&lt;/strong&gt;: &lt;code&gt;CurrentSiteManager&lt;/code&gt; cannot use &lt;code&gt;&amp;lt;field&amp;gt;&lt;/code&gt; as it is not a foreign key or a many-to-many field.</source>
          <target state="translated">&lt;strong&gt;sites.E002&lt;/strong&gt; : &lt;code&gt;CurrentSiteManager&lt;/code&gt; 는 외래 키 또는 다 대다 필드가 아니기 때문에 &lt;code&gt;&amp;lt;field&amp;gt;&lt;/code&gt; 를 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="a0148f30c9f2d3a807f2fe4a0c7b5cfe4ee70c8e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;srid&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/functions.html#int&quot;&gt;int&lt;/a&gt;) &amp;ndash; spatial reference identifier</source>
          <target state="translated">&lt;strong&gt;srid&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/3/library/functions.html#int&quot;&gt;int&lt;/a&gt; ) &amp;ndash; 공간 참조 식별자</target>
        </trans-unit>
        <trans-unit id="5c04d2784e4f270a779c49cc0a095fd13bb40e3d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;staticfiles.E001&lt;/strong&gt;: The &lt;a href=&quot;settings#std:setting-STATICFILES_DIRS&quot;&gt;&lt;code&gt;STATICFILES_DIRS&lt;/code&gt;&lt;/a&gt; setting is not a tuple or list.</source>
          <target state="translated">&lt;strong&gt;staticfiles.E001&lt;/strong&gt; : &lt;a href=&quot;settings#std:setting-STATICFILES_DIRS&quot;&gt; &lt;code&gt;STATICFILES_DIRS&lt;/code&gt; &lt;/a&gt; 설정이 튜플 또는 목록이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="70ee66d65b35454ed59db74e4d4565574d6f044e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;staticfiles.E002&lt;/strong&gt;: The &lt;a href=&quot;settings#std:setting-STATICFILES_DIRS&quot;&gt;&lt;code&gt;STATICFILES_DIRS&lt;/code&gt;&lt;/a&gt; setting should not contain the &lt;a href=&quot;settings#std:setting-STATIC_ROOT&quot;&gt;&lt;code&gt;STATIC_ROOT&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">&lt;strong&gt;staticfiles.E002&lt;/strong&gt; : &lt;a href=&quot;settings#std:setting-STATICFILES_DIRS&quot;&gt; &lt;code&gt;STATICFILES_DIRS&lt;/code&gt; &lt;/a&gt; 설정은 STATIC_ROOT 설정을 포함하지 &lt;a href=&quot;settings#std:setting-STATIC_ROOT&quot;&gt; &lt;code&gt;STATIC_ROOT&lt;/code&gt; &lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="11bb598345b17393ef902b3a44c9bc63f8b41adb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;staticfiles.E003&lt;/strong&gt;: The prefix &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; in the &lt;a href=&quot;settings#std:setting-STATICFILES_DIRS&quot;&gt;&lt;code&gt;STATICFILES_DIRS&lt;/code&gt;&lt;/a&gt; setting must not end with a slash.</source>
          <target state="translated">&lt;strong&gt;staticfiles.E003&lt;/strong&gt; : &lt;a href=&quot;settings#std:setting-STATICFILES_DIRS&quot;&gt; &lt;code&gt;STATICFILES_DIRS&lt;/code&gt; &lt;/a&gt; 설정 에서 접 두부 &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; 는 슬래시로 끝나서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="586a1edcbdae65b6fb1a2529fde2825135e7ad73" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;string&lt;/strong&gt; (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt;) &amp;ndash; string that contains spatial data</source>
          <target state="translated">&lt;strong&gt;string&lt;/strong&gt; ( &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;str&lt;/a&gt; ) &amp;ndash; 공간 데이터를 포함하는 문자열</target>
        </trans-unit>
        <trans-unit id="5c50a976f86223e3f087197ed0800277f32dea3e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;subject_template_name&lt;/strong&gt; &amp;ndash; the template for the subject.</source>
          <target state="translated">&lt;strong&gt;subject_template_name&lt;/strong&gt; &amp;ndash; 주제의 템플리트.</target>
        </trans-unit>
        <trans-unit id="6dd707249ff220c9bf24d0ba4595c1285669fa87" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;templates.E001&lt;/strong&gt;: You have &lt;code&gt;'APP_DIRS': True&lt;/code&gt; in your &lt;a href=&quot;settings#std:setting-TEMPLATES&quot;&gt;&lt;code&gt;TEMPLATES&lt;/code&gt;&lt;/a&gt; but also specify &lt;code&gt;'loaders'&lt;/code&gt; in &lt;code&gt;OPTIONS&lt;/code&gt;. Either remove &lt;code&gt;APP_DIRS&lt;/code&gt; or remove the &lt;code&gt;'loaders'&lt;/code&gt; option.</source>
          <target state="translated">&lt;strong&gt;templates.E001&lt;/strong&gt; : 당신은이 &lt;code&gt;'APP_DIRS': True&lt;/code&gt; 당신의 &lt;a href=&quot;settings#std:setting-TEMPLATES&quot;&gt; &lt;code&gt;TEMPLATES&lt;/code&gt; &lt;/a&gt; 뿐만 아니라 지정 &lt;code&gt;'loaders'&lt;/code&gt; 의 &lt;code&gt;OPTIONS&lt;/code&gt; . 어느 제거 &lt;code&gt;APP_DIRS&lt;/code&gt; 를 하거나 제거 &lt;code&gt;'loaders'&lt;/code&gt; 옵션을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="3695367458b9e134f6368452b4cd4ebab9504f26" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;templates.E002&lt;/strong&gt;: &lt;code&gt;string_if_invalid&lt;/code&gt; in &lt;a href=&quot;settings#std:setting-TEMPLATES&quot;&gt;&lt;code&gt;TEMPLATES&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;settings#std:setting-TEMPLATES-OPTIONS&quot;&gt;&lt;code&gt;OPTIONS&lt;/code&gt;&lt;/a&gt; must be a string but got: &lt;code&gt;{value}&lt;/code&gt; (&lt;code&gt;{type}&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;templates.E002&lt;/strong&gt; : &lt;code&gt;string_if_invalid&lt;/code&gt; 에 &lt;a href=&quot;settings#std:setting-TEMPLATES&quot;&gt; &lt;code&gt;TEMPLATES&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;settings#std:setting-TEMPLATES-OPTIONS&quot;&gt; &lt;code&gt;OPTIONS&lt;/code&gt; &lt;/a&gt; 문자열이어야하지만 가지고 있어야합니다 : &lt;code&gt;{value}&lt;/code&gt; ( &lt;code&gt;{type}&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="4a1e3010910e19d230b10a3957c344b9470e1293" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;to_email&lt;/strong&gt; &amp;ndash; the email of the requester.</source>
          <target state="translated">&lt;strong&gt;to_email&lt;/strong&gt; &amp;ndash; 요청자의 이메일</target>
        </trans-unit>
        <trans-unit id="ebee943250eaa09d18645d8182a1ad099e0a724c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;translation.E001&lt;/strong&gt;: You have provided an invalid value for the &lt;a href=&quot;settings#std:setting-LANGUAGE_CODE&quot;&gt;&lt;code&gt;LANGUAGE_CODE&lt;/code&gt;&lt;/a&gt; setting: &lt;code&gt;&amp;lt;value&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;translation.E001&lt;/strong&gt; : &lt;a href=&quot;settings#std:setting-LANGUAGE_CODE&quot;&gt; &lt;code&gt;LANGUAGE_CODE&lt;/code&gt; &lt;/a&gt; 설정에 유효하지 않은 값을 제공했습니다 : &lt;code&gt;&amp;lt;value&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="714d6ea09bf2d1eee65b48b105f0f7920a7a91da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;translation.E002&lt;/strong&gt;: You have provided an invalid language code in the &lt;a href=&quot;settings#std:setting-LANGUAGES&quot;&gt;&lt;code&gt;LANGUAGES&lt;/code&gt;&lt;/a&gt; setting: &lt;code&gt;&amp;lt;value&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;translation.E002&lt;/strong&gt; : &lt;a href=&quot;settings#std:setting-LANGUAGES&quot;&gt; &lt;code&gt;LANGUAGES&lt;/code&gt; &lt;/a&gt; 설정 에 유효하지 않은 언어 코드를 제공했습니다 : &lt;code&gt;&amp;lt;value&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2a1cbbe8782ae1b1931838f1f0c70de1d59d66ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;translation.E003&lt;/strong&gt;: You have provided an invalid language code in the &lt;a href=&quot;settings#std:setting-LANGUAGES_BIDI&quot;&gt;&lt;code&gt;LANGUAGES_BIDI&lt;/code&gt;&lt;/a&gt; setting: &lt;code&gt;&amp;lt;value&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;translation.E003&lt;/strong&gt; : &lt;a href=&quot;settings#std:setting-LANGUAGES_BIDI&quot;&gt; &lt;code&gt;LANGUAGES_BIDI&lt;/code&gt; &lt;/a&gt; 설정 에 유효하지 않은 언어 코드를 제공했습니다 : &lt;code&gt;&amp;lt;value&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a451377db7b0d5a7188943faa686d242c9c93baf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;translation.E004&lt;/strong&gt;: You have provided a value for the &lt;a href=&quot;settings#std:setting-LANGUAGE_CODE&quot;&gt;&lt;code&gt;LANGUAGE_CODE&lt;/code&gt;&lt;/a&gt; setting that is not in the &lt;a href=&quot;settings#std:setting-LANGUAGES&quot;&gt;&lt;code&gt;LANGUAGES&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">&lt;strong&gt;translation.E004은&lt;/strong&gt; : 당신은 값 제공 한 &lt;a href=&quot;settings#std:setting-LANGUAGE_CODE&quot;&gt; &lt;code&gt;LANGUAGE_CODE&lt;/code&gt; &lt;/a&gt; 에없는 설정 &lt;a href=&quot;settings#std:setting-LANGUAGES&quot;&gt; &lt;code&gt;LANGUAGES&lt;/code&gt; &lt;/a&gt; 설정을.</target>
        </trans-unit>
        <trans-unit id="393e74c358bc74f8e4167d0c2fa5f9089be0defe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;urls.E004&lt;/strong&gt;: Your URL pattern &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt; is invalid. Ensure that &lt;code&gt;urlpatterns&lt;/code&gt; is a list of &lt;a href=&quot;urls#django.urls.path&quot;&gt;&lt;code&gt;path()&lt;/code&gt;&lt;/a&gt; and/or &lt;a href=&quot;urls#django.urls.re_path&quot;&gt;&lt;code&gt;re_path()&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="translated">&lt;strong&gt;urls.E004&lt;/strong&gt; : URL 패턴 &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt; 이 유효하지 않습니다. 그 확인 &lt;code&gt;urlpatterns&lt;/code&gt; 을 의 목록입니다 &lt;a href=&quot;urls#django.urls.path&quot;&gt; &lt;code&gt;path()&lt;/code&gt; &lt;/a&gt; 및 / 또는 &lt;a href=&quot;urls#django.urls.re_path&quot;&gt; &lt;code&gt;re_path()&lt;/code&gt; &lt;/a&gt; 인스턴스.</target>
        </trans-unit>
        <trans-unit id="99ad6279fc4f65be40464094d9f7935985aa4ca2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;urls.E006&lt;/strong&gt;: The &lt;a href=&quot;settings#std:setting-MEDIA_URL&quot;&gt;&lt;code&gt;MEDIA_URL&lt;/code&gt;&lt;/a&gt;/ &lt;a href=&quot;settings#std:setting-STATIC_URL&quot;&gt;&lt;code&gt;STATIC_URL&lt;/code&gt;&lt;/a&gt; setting must end with a slash.</source>
          <target state="translated">&lt;strong&gt;urls.E006&lt;/strong&gt; : &lt;a href=&quot;settings#std:setting-MEDIA_URL&quot;&gt; &lt;code&gt;MEDIA_URL&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;settings#std:setting-STATIC_URL&quot;&gt; &lt;code&gt;STATIC_URL&lt;/code&gt; &lt;/a&gt; 설정은 슬래시로 끝나야합니다.</target>
        </trans-unit>
        <trans-unit id="2a0d912b96cb77bb81274f997baba6ee429a59a5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;urls.E007&lt;/strong&gt;: The custom &lt;code&gt;handlerXXX&lt;/code&gt; view &lt;code&gt;'path.to.view'&lt;/code&gt; does not take the correct number of arguments (&amp;hellip;).</source>
          <target state="translated">&lt;strong&gt;urls.E007&lt;/strong&gt; : 사용자 정의 &lt;code&gt;handlerXXX&lt;/code&gt; 보기 &lt;code&gt;'path.to.view'&lt;/code&gt; 가 올바른 수의 인수 (&amp;hellip;)를 사용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cf1c36cf810355b22dec593968750c4d06eb2fd8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;urls.E008&lt;/strong&gt;: The custom &lt;code&gt;handlerXXX&lt;/code&gt; view &lt;code&gt;'path.to.view'&lt;/code&gt; could not be imported.</source>
          <target state="translated">&lt;strong&gt;urls.E008&lt;/strong&gt; : 사용자 정의 &lt;code&gt;handlerXXX&lt;/code&gt; 보기 &lt;code&gt;'path.to.view'&lt;/code&gt; 을 가져올 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="86ab2800b5c33e60feaf05e843c7dba91a96f656" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;urls.W001&lt;/strong&gt;: Your URL pattern &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt; uses &lt;a href=&quot;urls#django.urls.include&quot;&gt;&lt;code&gt;include()&lt;/code&gt;&lt;/a&gt; with a &lt;code&gt;route&lt;/code&gt; ending with a &lt;code&gt;$&lt;/code&gt;. Remove the dollar from the &lt;code&gt;route&lt;/code&gt; to avoid problems including URLs.</source>
          <target state="translated">&lt;strong&gt;urls.W001&lt;/strong&gt; : URL 패턴 &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt; 은 &lt;code&gt;$&lt;/code&gt; (로 끝나는 &lt;code&gt;route&lt;/code&gt; 와 함께 &lt;a href=&quot;urls#django.urls.include&quot;&gt; &lt;code&gt;include()&lt;/code&gt; &lt;/a&gt; 를 사용 합니다 . URL을 포함한 문제를 피하기 위해 &lt;code&gt;route&lt;/code&gt; 에서 달러를 제거하십시오 .</target>
        </trans-unit>
        <trans-unit id="ef6a952e4a77947668c2c9f508683a76892e703e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;urls.W002&lt;/strong&gt;: Your URL pattern &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt; has a &lt;code&gt;route&lt;/code&gt; beginning with a &lt;code&gt;/&lt;/code&gt;. Remove this slash as it is unnecessary. If this pattern is targeted in an &lt;a href=&quot;urls#django.urls.include&quot;&gt;&lt;code&gt;include()&lt;/code&gt;&lt;/a&gt;, ensure the &lt;a href=&quot;urls#django.urls.include&quot;&gt;&lt;code&gt;include()&lt;/code&gt;&lt;/a&gt; pattern has a trailing &lt;code&gt;/&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;urls.W002&lt;/strong&gt; : URL 패턴 &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt; 의 &lt;code&gt;route&lt;/code&gt; 는 &lt;code&gt;/&lt;/code&gt; 로 시작 합니다 . 이 슬래시는 필요하지 않으므로 제거하십시오. 이 패턴이 &lt;a href=&quot;urls#django.urls.include&quot;&gt; &lt;code&gt;include()&lt;/code&gt; &lt;/a&gt; 대상으로하는 경우 &lt;a href=&quot;urls#django.urls.include&quot;&gt; &lt;code&gt;include()&lt;/code&gt; &lt;/a&gt; 패턴에 후행 &lt;code&gt;/&lt;/code&gt; 이 있는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="8830b1981c84273e1c15f999016819d3750e2ad4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;urls.W003&lt;/strong&gt;: Your URL pattern &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt; has a &lt;code&gt;name&lt;/code&gt; including a &lt;code&gt;:&lt;/code&gt;. Remove the colon, to avoid ambiguous namespace references.</source>
          <target state="translated">&lt;strong&gt;urls.W003&lt;/strong&gt; : URL 패턴 &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt; 의 &lt;code&gt;name&lt;/code&gt; 은 &lt;code&gt;:&lt;/code&gt; 을 포함합니다 . 모호한 네임 스페이스 참조를 피하려면 콜론을 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="291616004c73af755f38340234d6b5da4c2d01c1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;urls.W005&lt;/strong&gt;: URL namespace &lt;code&gt;&amp;lt;namespace&amp;gt;&lt;/code&gt; isn&amp;rsquo;t unique. You may not be able to reverse all URLs in this namespace.</source>
          <target state="translated">&lt;strong&gt;urls.W005&lt;/strong&gt; : URL 네임 스페이스 &lt;code&gt;&amp;lt;namespace&amp;gt;&lt;/code&gt; 이 (가) 고유하지 않습니다. 이 네임 스페이스의 모든 URL을 되돌릴 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="38f24331e13e9c8637c547849aff32ffee47fee2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;valid&lt;/strong&gt; &amp;ndash; a dictionary mapping valid inputs to their expected cleaned values.</source>
          <target state="translated">&lt;strong&gt;valid&lt;/strong&gt; &amp;ndash; 유효한 입력을 예상 정리 된 값에 맵핑하는 사전입니다.</target>
        </trans-unit>
        <trans-unit id="419036503334bc0929b050da6369228b625f789b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;weak&lt;/strong&gt; &amp;ndash; Django stores signal handlers as weak references by default. Thus, if your receiver is a local function, it may be garbage collected. To prevent this, pass &lt;code&gt;weak=False&lt;/code&gt; when you call the signal&amp;rsquo;s &lt;code&gt;connect()&lt;/code&gt; method.</source>
          <target state="translated">&lt;strong&gt;weak&lt;/strong&gt; &amp;ndash; Django는 기본적으로 신호 처리기를 약한 참조로 저장합니다. 따라서 수신자가 로컬 기능인 경우 가비지 수집 될 수 있습니다. 이를 방지하려면 신호의 &lt;code&gt;connect()&lt;/code&gt; 메소드 를 호출 할 때 &lt;code&gt;weak=False&lt;/code&gt; 를 전달 하십시오 .</target>
        </trans-unit>
        <trans-unit id="9925bf7f0c8c563a93e383e4f8d903ad2c7b0ce9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;whitelist&lt;/strong&gt; &amp;ndash; If not &lt;code&gt;None&lt;/code&gt;, overrides &lt;a href=&quot;#django.core.validators.EmailValidator.whitelist&quot;&gt;&lt;code&gt;whitelist&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;화이트리스트&lt;/strong&gt; - 그렇지 않으면 &lt;code&gt;None&lt;/code&gt; , 재정의 &lt;a href=&quot;#django.core.validators.EmailValidator.whitelist&quot;&gt; &lt;code&gt;whitelist&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="313960a4b70006e8e1c0b3210695000d73a4fced" translate="yes" xml:space="preserve">
          <source>A &amp;ldquo;related manager&amp;rdquo; is a manager used in a one-to-many or many-to-many related context. This happens in two cases:</source>
          <target state="translated">&quot;관련 관리자&quot;는 일대 다 또는 다 대다 관련 컨텍스트에서 사용되는 관리자입니다. 이것은 두 가지 경우에 발생합니다.</target>
        </trans-unit>
        <trans-unit id="56803cdead249ffa7be255956cd4e1f63413f8c8" translate="yes" xml:space="preserve">
          <source>A 1-based range iterator of page numbers, e.g. yielding &lt;code&gt;[1, 2, 3, 4]&lt;/code&gt;.</source>
          <target state="translated">페이지 번호의 1 기반 범위 반복자, 예를 들어 &lt;code&gt;[1, 2, 3, 4]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f68145a201c20df2d30515e4a6e361bee3a9c901" translate="yes" xml:space="preserve">
          <source>A 64-bit integer, much like an &lt;a href=&quot;#django.db.models.AutoField&quot;&gt;&lt;code&gt;AutoField&lt;/code&gt;&lt;/a&gt; except that it is guaranteed to fit numbers from &lt;code&gt;1&lt;/code&gt; to &lt;code&gt;9223372036854775807&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; 에서 &lt;code&gt;9223372036854775807&lt;/code&gt; 사이의 숫자에 적합하다는 점을 제외 하면 &lt;a href=&quot;#django.db.models.AutoField&quot;&gt; &lt;code&gt;AutoField&lt;/code&gt; &lt;/a&gt; 와 매우 유사한 64 비트 정수 입니다.</target>
        </trans-unit>
        <trans-unit id="ac2e88a6d251d5b78f0a0b943c2ef93d6dd1953d" translate="yes" xml:space="preserve">
          <source>A 64-bit integer, much like an &lt;a href=&quot;#django.db.models.IntegerField&quot;&gt;&lt;code&gt;IntegerField&lt;/code&gt;&lt;/a&gt; except that it is guaranteed to fit numbers from &lt;code&gt;-9223372036854775808&lt;/code&gt; to &lt;code&gt;9223372036854775807&lt;/code&gt;. The default form widget for this field is a &lt;a href=&quot;../forms/widgets#django.forms.TextInput&quot;&gt;&lt;code&gt;TextInput&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;-9223372036854775808&lt;/code&gt; ~ &lt;code&gt;9223372036854775807&lt;/code&gt; 의 숫자에 적합 &lt;a href=&quot;#django.db.models.IntegerField&quot;&gt; &lt;code&gt;IntegerField&lt;/code&gt; &lt;/a&gt; 점을 제외 하면 IntegerField 와 매우 유사한 64 비트 정수 입니다. 이 필드의 기본 양식 위젯은 &lt;a href=&quot;../forms/widgets#django.forms.TextInput&quot;&gt; &lt;code&gt;TextInput&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c60f71204077e96ec9625e888afdc6c2cba1d9da" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#django.contrib.postgres.forms.RangeWidget&quot;&gt;&lt;code&gt;RangeWidget&lt;/code&gt;&lt;/a&gt; comprises a 2-tuple of &lt;code&gt;base_widget&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.postgres.forms.RangeWidget&quot;&gt; &lt;code&gt;RangeWidget&lt;/code&gt; 는&lt;/a&gt; 의 2- 튜플 포함 &lt;code&gt;base_widget&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="1633c6fd152e6df1cba20f428cac719b73902c71" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#django.contrib.sitemaps.Sitemap&quot;&gt;&lt;code&gt;Sitemap&lt;/code&gt;&lt;/a&gt; class is a Python class that represents a &amp;ldquo;section&amp;rdquo; of entries in your sitemap. For example, one &lt;a href=&quot;#django.contrib.sitemaps.Sitemap&quot;&gt;&lt;code&gt;Sitemap&lt;/code&gt;&lt;/a&gt; class could represent all the entries of your Weblog, while another could represent all of the events in your events calendar.</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.sitemaps.Sitemap&quot;&gt; &lt;code&gt;Sitemap&lt;/code&gt; &lt;/a&gt; 클래스는 맵 항목의 &quot;섹션&quot;을 나타내는 파이썬 클래스입니다. 예를 들어 한 &lt;a href=&quot;#django.contrib.sitemaps.Sitemap&quot;&gt; &lt;code&gt;Sitemap&lt;/code&gt; &lt;/a&gt; 클래스는 웹 로그의 모든 항목을 나타내는 반면 다른 Sitemap 클래스는 이벤트 캘린더의 모든 이벤트를 나타낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b2d4156ac2abac85ac26aef45e0ece5fd57c0097" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#django.contrib.sites.requests.RequestSite&quot;&gt;&lt;code&gt;RequestSite&lt;/code&gt;&lt;/a&gt; object has a similar interface to a normal &lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt;&lt;code&gt;Site&lt;/code&gt;&lt;/a&gt; object, except its &lt;a href=&quot;#django.contrib.sites.requests.RequestSite.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; method takes an &lt;a href=&quot;../request-response#django.http.HttpRequest&quot;&gt;&lt;code&gt;HttpRequest&lt;/code&gt;&lt;/a&gt; object. It&amp;rsquo;s able to deduce the &lt;code&gt;domain&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt; by looking at the request&amp;rsquo;s domain. It has &lt;code&gt;save()&lt;/code&gt; and &lt;code&gt;delete()&lt;/code&gt; methods to match the interface of &lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt;&lt;code&gt;Site&lt;/code&gt;&lt;/a&gt;, but the methods raise &lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.sites.requests.RequestSite&quot;&gt; &lt;code&gt;RequestSite&lt;/code&gt; 의&lt;/a&gt; 목적은 보통 유사한 인터페이스를 갖는 &lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt; &lt;code&gt;Site&lt;/code&gt; &lt;/a&gt; , 그 목적을 제외시켰다 &lt;a href=&quot;#django.contrib.sites.requests.RequestSite.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt; 방법은 필요 &lt;a href=&quot;../request-response#django.http.HttpRequest&quot;&gt; &lt;code&gt;HttpRequest&lt;/code&gt; &lt;/a&gt; 개체. 요청의 도메인을 보면 &lt;code&gt;domain&lt;/code&gt; 과 &lt;code&gt;name&lt;/code&gt; 을 추론 할 수 있습니다. 이있다 &lt;code&gt;save()&lt;/code&gt; 및 &lt;code&gt;delete()&lt;/code&gt; 메소드의 인터페이스에 맞게 &lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt; &lt;code&gt;Site&lt;/code&gt; &lt;/a&gt; 하지만, 방법은 인상 &lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4c3e32850a2a9ec9af476b12fc35c6efe02a8850" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#django.contrib.syndication.views.Feed&quot;&gt;&lt;code&gt;Feed&lt;/code&gt;&lt;/a&gt; class is a Python class that represents a syndication feed. A feed can be simple (e.g., a &amp;ldquo;site news&amp;rdquo; feed, or a basic feed displaying the latest entries of a blog) or more complex (e.g., a feed displaying all the blog entries in a particular category, where the category is variable).</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.syndication.views.Feed&quot;&gt; &lt;code&gt;Feed&lt;/code&gt; &lt;/a&gt; 클래스는 신디케이션 피드를 나타내는 파이썬 클래스입니다. 피드는 단순하거나 (예 : &quot;사이트 뉴스&quot;피드 또는 블로그의 최신 항목을 표시하는 기본 피드) 더 복잡 할 수 있습니다 (예 : 카테고리가 가변적 인 특정 범주의 모든 블로그 항목을 표시하는 피드) ).</target>
        </trans-unit>
        <trans-unit id="ddd1fc5be33ba50e5b18392457a1d0d4585ad26c" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#django.core.validators.RegexValidator&quot;&gt;&lt;code&gt;RegexValidator&lt;/code&gt;&lt;/a&gt; instance that ensures a value consists of only Unicode letters, numbers, underscores, or hyphens.</source>
          <target state="translated">&lt;a href=&quot;#django.core.validators.RegexValidator&quot;&gt; &lt;code&gt;RegexValidator&lt;/code&gt; 의&lt;/a&gt; 값을 보장 인스턴스는 유니 코드 문자, 숫자, 밑줄 또는 하이픈으로 구성되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="53635646858eb3d228ad11aa79bca1e07725c3b4" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#django.core.validators.RegexValidator&quot;&gt;&lt;code&gt;RegexValidator&lt;/code&gt;&lt;/a&gt; instance that ensures a value consists of only letters, numbers, underscores or hyphens.</source>
          <target state="translated">&lt;a href=&quot;#django.core.validators.RegexValidator&quot;&gt; &lt;code&gt;RegexValidator&lt;/code&gt; 의&lt;/a&gt; 값을 보장 인스턴스는 문자, 숫자, 밑줄 또는 하이픈으로 구성되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="a605db73c00e78a94e6378e9a3c25ecef08b947e" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#django.core.validators.RegexValidator&quot;&gt;&lt;code&gt;RegexValidator&lt;/code&gt;&lt;/a&gt; instance that ensures a value is a comma-separated list of integers.</source>
          <target state="translated">&lt;a href=&quot;#django.core.validators.RegexValidator&quot;&gt; &lt;code&gt;RegexValidator&lt;/code&gt; 의&lt;/a&gt; 값을 보장 인스턴스 정수 쉼표로 구분된다.</target>
        </trans-unit>
        <trans-unit id="5a7c2bffd85cd0ac3a27183c868e5ff519e18f09" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#django.core.validators.RegexValidator&quot;&gt;&lt;code&gt;RegexValidator&lt;/code&gt;&lt;/a&gt; instance that ensures a value looks like an IPv4 address.</source>
          <target state="translated">값이 IPv4 주소처럼 보이도록 하는 &lt;a href=&quot;#django.core.validators.RegexValidator&quot;&gt; &lt;code&gt;RegexValidator&lt;/code&gt; &lt;/a&gt; 인스턴스</target>
        </trans-unit>
        <trans-unit id="04f73aa771da056e6579f683255c3522f1b1e1e4" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#django.core.validators.RegexValidator&quot;&gt;&lt;code&gt;RegexValidator&lt;/code&gt;&lt;/a&gt; that ensures a value looks like a URL, and raises an error code of &lt;code&gt;'invalid'&lt;/code&gt; if it doesn&amp;rsquo;t.</source>
          <target state="translated">&lt;a href=&quot;#django.core.validators.RegexValidator&quot;&gt; &lt;code&gt;RegexValidator&lt;/code&gt; &lt;/a&gt; URL을 같은 값의 외모를 보장하고, 오류 코드 제기 &lt;code&gt;'invalid'&lt;/code&gt; 그렇지 않은 경우.</target>
        </trans-unit>
        <trans-unit id="bf20b1ddb127f9e6a61647f3fa67a262e5ef7043" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#django.db.models.CharField&quot;&gt;&lt;code&gt;CharField&lt;/code&gt;&lt;/a&gt; for a URL, validated by &lt;a href=&quot;../validators#django.core.validators.URLValidator&quot;&gt;&lt;code&gt;URLValidator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#django.db.models.CharField&quot;&gt; &lt;code&gt;CharField&lt;/code&gt; &lt;/a&gt; 에 의해 검증 URL에 대한, &lt;a href=&quot;../validators#django.core.validators.URLValidator&quot;&gt; &lt;code&gt;URLValidator&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3e0c2253398741714bf54dc91bbc09a71029ddb4" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#django.db.models.CharField&quot;&gt;&lt;code&gt;CharField&lt;/code&gt;&lt;/a&gt; that checks that the value is a valid email address using &lt;a href=&quot;../validators#django.core.validators.EmailValidator&quot;&gt;&lt;code&gt;EmailValidator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../validators#django.core.validators.EmailValidator&quot;&gt; &lt;code&gt;EmailValidator&lt;/code&gt; 를&lt;/a&gt; 사용하여 값이 유효한 이메일 주소인지 확인 하는 &lt;a href=&quot;#django.db.models.CharField&quot;&gt; &lt;code&gt;CharField&lt;/code&gt; &lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="867d997782c58fd760de4ce763250842100d4206" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#django.db.models.CharField&quot;&gt;&lt;code&gt;CharField&lt;/code&gt;&lt;/a&gt; whose choices are limited to the filenames in a certain directory on the filesystem. Has three special arguments, of which the first is &lt;strong&gt;required&lt;/strong&gt;:</source>
          <target state="translated">&lt;a href=&quot;#django.db.models.CharField&quot;&gt; &lt;code&gt;CharField&lt;/code&gt; &lt;/a&gt; 그 선택 파일 시스템에 특정 디렉토리에있는 파일 이름으로 제한됩니다. 세 가지 특별한 주장이 있으며 그중 첫 번째 주장이 &lt;strong&gt;필요합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="86b5c171e2695529e304405836d876f4055e0ce0" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#django.db.models.Q&quot;&gt;&lt;code&gt;Q&lt;/code&gt;&lt;/a&gt; object to control the filtering.</source>
          <target state="translated">필터링을 제어 하는 &lt;a href=&quot;#django.db.models.Q&quot;&gt; &lt;code&gt;Q&lt;/code&gt; &lt;/a&gt; 객체입니다.</target>
        </trans-unit>
        <trans-unit id="3a5fdf427bc72e1f9a3c0fb208712e985cde09c8" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#django.forms.Form&quot;&gt;&lt;code&gt;Form&lt;/code&gt;&lt;/a&gt; instance is either &lt;strong&gt;bound&lt;/strong&gt; to a set of data, or &lt;strong&gt;unbound&lt;/strong&gt;.</source>
          <target state="translated">&lt;a href=&quot;#django.forms.Form&quot;&gt; &lt;code&gt;Form&lt;/code&gt; &lt;/a&gt; 인스턴스가 하나되는 &lt;strong&gt;바인딩&lt;/strong&gt; 데이터의 집합 또는에 &lt;strong&gt;언 바운드&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="a76ef79290c47b6221d4efd5adecb67dea06ee72" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#django.template.response.TemplateResponse&quot;&gt;&lt;code&gt;TemplateResponse&lt;/code&gt;&lt;/a&gt; object can be used anywhere that a normal &lt;a href=&quot;request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;django.http.HttpResponse&lt;/code&gt;&lt;/a&gt; can be used. It can also be used as an alternative to calling &lt;a href=&quot;../topics/http/shortcuts#django.shortcuts.render&quot;&gt;&lt;code&gt;render()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#django.template.response.TemplateResponse&quot;&gt; &lt;code&gt;TemplateResponse&lt;/code&gt; 의&lt;/a&gt; 객체는 보통의 것을 사용 어디서나 할 수 있습니다 &lt;a href=&quot;request-response#django.http.HttpResponse&quot;&gt; &lt;code&gt;django.http.HttpResponse&lt;/code&gt; 가&lt;/a&gt; 사용할 수 있습니다. &lt;a href=&quot;../topics/http/shortcuts#django.shortcuts.render&quot;&gt; &lt;code&gt;render()&lt;/code&gt; &lt;/a&gt; 를 호출하는 대신 사용할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="38f701caa09a4a1bccd8743a0622839042d131bf" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#django.urls.ResolverMatch&quot;&gt;&lt;code&gt;ResolverMatch&lt;/code&gt;&lt;/a&gt; object can also be assigned to a triple:</source>
          <target state="translated">&lt;a href=&quot;#django.urls.ResolverMatch&quot;&gt; &lt;code&gt;ResolverMatch&lt;/code&gt; 의&lt;/a&gt; 객체는 트리플에 할당 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="420d9f52b3e692e6011825fef0e1f361ef8d22cf" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#django.urls.ResolverMatch&quot;&gt;&lt;code&gt;ResolverMatch&lt;/code&gt;&lt;/a&gt; object can then be interrogated to provide information about the URL pattern that matches a URL:</source>
          <target state="translated">&lt;a href=&quot;#django.urls.ResolverMatch&quot;&gt; &lt;code&gt;ResolverMatch&lt;/code&gt; 의&lt;/a&gt; 객체는 다음 URL과 일치하는 URL 패턴에 대한 정보를 제공하기 위해 심문 할 수있다 :</target>
        </trans-unit>
        <trans-unit id="4b3a9e80f884ea4f4aeb3d7ddab8ad61a8e3dc49" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#ref-forms-error-list-format&quot;&gt;list-like object&lt;/a&gt; that is displayed as an HTML &lt;code&gt;&amp;lt;ul class=&quot;errorlist&quot;&amp;gt;&lt;/code&gt; when printed:</source>
          <target state="translated">&lt;a href=&quot;#ref-forms-error-list-format&quot;&gt;리스트와 같은 객체&lt;/a&gt; 는 HTML로 표시 &lt;code&gt;&amp;lt;ul class=&quot;errorlist&quot;&amp;gt;&lt;/code&gt; 인쇄 때</target>
        </trans-unit>
        <trans-unit id="0eaa81d6c444374a1c94f4b409e1f9a4c7e4bb7f" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../../models/querysets#django.db.models.Q&quot;&gt;&lt;code&gt;Q&lt;/code&gt;&lt;/a&gt; object that specifies the condition to restrict a constraint to a subset of rows. For example, &lt;code&gt;condition=Q(cancelled=False)&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../models/querysets#django.db.models.Q&quot;&gt; &lt;code&gt;Q&lt;/code&gt; 의&lt;/a&gt; 행의 서브 세트에 제한 조건을 제한하는 조건을 지정하는 오브젝트. 예를 들어 &lt;code&gt;condition=Q(cancelled=False)&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8ddaa5cb2c997a74a143895dc5775bdec9a74fd0" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../../models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; containing the set of objects selected by the user.</source>
          <target state="translated">사용자가 선택한 개체 집합을 포함 하는 &lt;a href=&quot;../../models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b1ca8aba15bf7ce93a24f4948f3aefd38e937005" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../../ref/forms/api#django.forms.Form&quot;&gt;&lt;code&gt;Form&lt;/code&gt;&lt;/a&gt; instance has an &lt;a href=&quot;../../ref/forms/api#django.forms.Form.is_valid&quot;&gt;&lt;code&gt;is_valid()&lt;/code&gt;&lt;/a&gt; method, which runs validation routines for all its fields. When this method is called, if all fields contain valid data, it will:</source>
          <target state="translated">&lt;a href=&quot;../../ref/forms/api#django.forms.Form&quot;&gt; &lt;code&gt;Form&lt;/code&gt; &lt;/a&gt; 인스턴스는이 &lt;a href=&quot;../../ref/forms/api#django.forms.Form.is_valid&quot;&gt; &lt;code&gt;is_valid()&lt;/code&gt; &lt;/a&gt; 모든 필드에 대한 유효성 검사 루틴을 실행하는 방법을. 이 메소드가 호출 될 때 모든 필드에 유효한 데이터가 포함 된 경우 다음이 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="a522f68973c8c046e802c125d06803197ad8d416" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../../ref/models/instances#django.db.models.Model&quot;&gt;&lt;code&gt;Model&lt;/code&gt;&lt;/a&gt; class, a &lt;a href=&quot;../db/managers#django.db.models.Manager&quot;&gt;&lt;code&gt;Manager&lt;/code&gt;&lt;/a&gt;, or a &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; instance from which to get the object.</source>
          <target state="translated">&lt;a href=&quot;../../ref/models/instances#django.db.models.Model&quot;&gt; &lt;code&gt;Model&lt;/code&gt; &lt;/a&gt; 클래스하는 &lt;a href=&quot;../db/managers#django.db.models.Manager&quot;&gt; &lt;code&gt;Manager&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt; 인스턴스가있는 개체를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="72298d740651eaddc19e427dae0e0783b4fc5a62" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../../ref/models/instances#django.db.models.Model&quot;&gt;&lt;code&gt;Model&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../db/managers#django.db.models.Manager&quot;&gt;&lt;code&gt;Manager&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; instance from which to get the list.</source>
          <target state="translated">&lt;a href=&quot;../../ref/models/instances#django.db.models.Model&quot;&gt; &lt;code&gt;Model&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../db/managers#django.db.models.Manager&quot;&gt; &lt;code&gt;Manager&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt; 목록을 얻을에서 인스턴스입니다.</target>
        </trans-unit>
        <trans-unit id="2ffb7732ed0b0e93caf19a456aec2ba3137a0e8d" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../../ref/models/querysets#django.db.models.Q&quot;&gt;&lt;code&gt;Q object&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;django.db.models.Q&lt;/code&gt;) is an object used to encapsulate a collection of keyword arguments. These keyword arguments are specified as in &amp;ldquo;Field lookups&amp;rdquo; above.</source>
          <target state="translated">&lt;a href=&quot;../../ref/models/querysets#django.db.models.Q&quot;&gt; &lt;code&gt;Q object&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;django.db.models.Q&lt;/code&gt; 는 ) 키워드 인자의 집합을 캡슐화하기 위해 사용되는 개체이다. 이러한 키워드 인수는 위의 &quot;필드 조회&quot;와 같이 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="cdc364e70fdd9c0f0b621eddae1dbce3fa835093" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; represents a collection of objects from your database. It can have zero, one or many &lt;em&gt;filters&lt;/em&gt;. Filters narrow down the query results based on the given parameters. In SQL terms, a &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; equates to a &lt;code&gt;SELECT&lt;/code&gt; statement, and a filter is a limiting clause such as &lt;code&gt;WHERE&lt;/code&gt; or &lt;code&gt;LIMIT&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt; 데이터베이스에서 개체의 컬렉션을 나타냅니다. 0 개, 하나 이상의 &lt;em&gt;필터를&lt;/em&gt; 가질 수 있습니다 . 필터는 주어진 매개 변수에 따라 쿼리 결과를 좁 힙니다. SQL 용어에서 &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt; 은 &lt;code&gt;SELECT&lt;/code&gt; 문과 동일하며 필터는 &lt;code&gt;WHERE&lt;/code&gt; 또는 &lt;code&gt;LIMIT&lt;/code&gt; 와 같은 제한 절 입니다.</target>
        </trans-unit>
        <trans-unit id="726ea6c7eec3406968047fa07f49e7aa856f191f" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../contrib/contenttypes#django.contrib.contenttypes.fields.GenericForeignKey&quot;&gt;&lt;code&gt;GenericForeignKey&lt;/code&gt;&lt;/a&gt; inherited from a parent model.</source>
          <target state="translated">부모 모델에서 상속 된 &lt;a href=&quot;../contrib/contenttypes#django.contrib.contenttypes.fields.GenericForeignKey&quot;&gt; &lt;code&gt;GenericForeignKey&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="604693cd9c9a30ee645b644a7921190717a86fde" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../forms/modelforms#django.forms.ModelForm&quot;&gt;&lt;code&gt;ModelForm&lt;/code&gt;&lt;/a&gt; for creating a new user.</source>
          <target state="translated">새로운 사용자를 만들기 위한 &lt;a href=&quot;../forms/modelforms#django.forms.ModelForm&quot;&gt; &lt;code&gt;ModelForm&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="93d95b33203374fd6bedd6f460fd09a24c52c06b" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../ref/contrib/syndication&quot;&gt;syndication framework&lt;/a&gt; that lets you create RSS and Atom feeds by writing a small Python class.</source>
          <target state="translated">작은 Python 클래스를 작성하여 RSS 및 Atom 피드를 작성할 수 있는 &lt;a href=&quot;../ref/contrib/syndication&quot;&gt;신디케이션 프레임 워크&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0870b2315f1bac76b78dc8150c15b498519729d0" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../ref/models/fields#django.db.models.Field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt; can also have various optional arguments; in this case, we&amp;rsquo;ve set the &lt;a href=&quot;../ref/models/fields#django.db.models.Field.default&quot;&gt;&lt;code&gt;default&lt;/code&gt;&lt;/a&gt; value of &lt;code&gt;votes&lt;/code&gt; to 0.</source>
          <target state="translated">&lt;a href=&quot;../ref/models/fields#django.db.models.Field&quot;&gt; &lt;code&gt;Field&lt;/code&gt; &lt;/a&gt; 다양한 선택적 인수를 가질 수 있습니다; 이 경우 &lt;a href=&quot;../ref/models/fields#django.db.models.Field.default&quot;&gt; &lt;code&gt;default&lt;/code&gt; &lt;/a&gt; &lt;code&gt;votes&lt;/code&gt; 값 을 0 으로 설정했습니다 .</target>
        </trans-unit>
        <trans-unit id="f59f792b4f0ce9acf391342fd7f01b8f2cb0d86a" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../ref/templates/builtins#ref-templates-builtins-filters&quot;&gt;reference of built-in filters&lt;/a&gt; is available as well as &lt;a href=&quot;../howto/custom-template-tags#howto-writing-custom-template-filters&quot;&gt;instructions for writing custom filters&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../ref/templates/builtins#ref-templates-builtins-filters&quot;&gt;필터에 내장의 참조&lt;/a&gt; 뿐만 아니라 볼 수 있습니다 &lt;a href=&quot;../howto/custom-template-tags#howto-writing-custom-template-filters&quot;&gt;사용자 정의 필터를 작성하기위한 지침&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="aeac21cc65fed8ba4cf69f06eb89c4040633eab2" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../ref/templates/builtins#ref-templates-builtins-tags&quot;&gt;reference of built-in tags&lt;/a&gt; is available as well as &lt;a href=&quot;../howto/custom-template-tags#howto-writing-custom-template-tags&quot;&gt;instructions for writing custom tags&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../ref/templates/builtins#ref-templates-builtins-tags&quot;&gt;태그 내장의 참조&lt;/a&gt; 뿐만 아니라 볼 수 있습니다 &lt;a href=&quot;../howto/custom-template-tags#howto-writing-custom-template-tags&quot;&gt;사용자 정의 태그를 작성하기위한 지침&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c601e466331fabc7906ca6433253015ca9b1bd98" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../ref/templates/builtins#std:templatetag-comment&quot;&gt;&lt;code&gt;{% comment %}&lt;/code&gt;&lt;/a&gt; tag provides multi-line comments.</source>
          <target state="translated">&lt;a href=&quot;../ref/templates/builtins#std:templatetag-comment&quot;&gt; &lt;code&gt;{% comment %}&lt;/code&gt; &lt;/a&gt; 태그는 여러 줄 주석을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="e96fd6758a7710526b4d33ffc966c1e43edc8e22" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../topics/cache&quot;&gt;caching framework&lt;/a&gt; that integrates with memcached or other backends.</source>
          <target state="translated">memcached 또는 다른 백엔드와 통합 되는 &lt;a href=&quot;../topics/cache&quot;&gt;캐싱 프레임 워크&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="fe993bc576d146f57adfcbdbd69dcac4ba569a8c" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt; cannot be included in unique_together. (It&amp;rsquo;s not clear what that would even mean!) If you need to validate uniqueness related to a &lt;a href=&quot;fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt;, try using a signal or an explicit &lt;a href=&quot;fields#django.db.models.ManyToManyField.through&quot;&gt;&lt;code&gt;through&lt;/code&gt;&lt;/a&gt; model.</source>
          <target state="translated">&lt;a href=&quot;fields#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; 는&lt;/a&gt; unique_together에 포함 할 수 없습니다. (무엇을 의미하는지는 확실하지 않습니다!) &lt;a href=&quot;fields#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;/a&gt; 와 관련된 고유성을 검증해야하는 경우 신호 또는 명시 적 &lt;a href=&quot;fields#django.db.models.ManyToManyField.through&quot;&gt; &lt;code&gt;through&lt;/code&gt; &lt;/a&gt; 모델을 사용해보십시오 .</target>
        </trans-unit>
        <trans-unit id="de7e1b9305ad341ef4ed9d56560bb6995de5fa98" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options#Browser_compatibility&quot;&gt;complete list&lt;/a&gt; of browsers supporting &lt;code&gt;X-Frame-Options&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;X-Frame-Options&lt;/code&gt; 를 지원 하는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options#Browser_compatibility&quot;&gt;전체&lt;/a&gt; 브라우저 목록 .</target>
        </trans-unit>
        <trans-unit id="103d515896197c29cd4c1aaeca296302b0a53573" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://docs.python.org/3/glossary.html#term-sequence&quot;&gt;sequence&lt;/a&gt; consisting itself of iterables of exactly two items (e.g. &lt;code&gt;[(A, B), (A, B) ...]&lt;/code&gt;) to use as choices for this field. If choices are given, they&amp;rsquo;re enforced by &lt;a href=&quot;instances#validating-objects&quot;&gt;model validation&lt;/a&gt; and the default form widget will be a select box with these choices instead of the standard text field.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3/glossary.html#term-sequence&quot;&gt;순서&lt;/a&gt; 정확하게 반복 가능 객체의 두 항목들 자체로 구성된 (예를 들어 &lt;code&gt;[(A, B), (A, B) ...]&lt;/code&gt; )이 선택 필드로 사용한다. 선택 사항이 제공되면 &lt;a href=&quot;instances#validating-objects&quot;&gt;모델 유효성 검증에&lt;/a&gt; 의해 적용되며 기본 양식 위젯은 표준 텍스트 필드 대신이 선택 사항이있는 선택 상자가됩니다.</target>
        </trans-unit>
        <trans-unit id="abffe259d7d3e90a8f5c439fa54ef665ad9b5c1e" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://docs.python.org/3/glossary.html#term-sequence&quot;&gt;sequence&lt;/a&gt; of 2-tuples to use as choices for this field. If this is given, the default form widget will be a select box instead of the standard text field and will limit choices to the choices given.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3/glossary.html#term-sequence&quot;&gt;순서&lt;/a&gt; 2 튜플의이 분야에 대한 선택으로 사용할 수 있습니다. 이 옵션이 제공되면 기본 양식 위젯은 표준 텍스트 필드 대신 선택 상자가되고 선택 사항은 선택 사항으로 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="d6b367baa8dc0d37c37ca527024875cffad22238" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; subclass modeling a fixed offset from UTC. &lt;code&gt;offset&lt;/code&gt; is an integer number of minutes east of UTC.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt; 서브 클래스 모델링 (A)는 UTC로부터의 오프셋 (offset)가 수정되었습니다. &lt;code&gt;offset&lt;/code&gt; 은 UTC에서 동쪽으로 분의 정수입니다.</target>
        </trans-unit>
        <trans-unit id="ddf0b259d9c4cdadd89171cc33f5c46d4ed46d18" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; of values to add to the template context. By default, this is an empty dictionary.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt; 값은 템플릿 컨텍스트에 추가 할 수 있습니다. 기본적으로 이것은 빈 사전입니다.</target>
        </trans-unit>
        <trans-unit id="f767a4e797ccdb1cfb31140d5026f4a5b3d41ef6" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; to be used as the template&amp;rsquo;s context for rendering.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt; 렌더링을위한 템플릿의 컨텍스트로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9358470ffe6a38987753e129369904fe3736282b" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;querysets#django.db.models.Q&quot;&gt;&lt;code&gt;Q&lt;/code&gt;&lt;/a&gt; object that specifies the check you want the constraint to enforce.</source>
          <target state="translated">제약 조건을 적용 할 검사를 지정 하는 &lt;a href=&quot;querysets#django.db.models.Q&quot;&gt; &lt;code&gt;Q&lt;/code&gt; &lt;/a&gt; 개체입니다.</target>
        </trans-unit>
        <trans-unit id="47e79b5f31c7ab6bd987e5f4ffa044cfa9783050" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;querysets#django.db.models.Q&quot;&gt;&lt;code&gt;Q&lt;/code&gt;&lt;/a&gt; object that specifies the condition you want the constraint to enforce.</source>
          <target state="translated">제약 조건을 적용 할 조건을 지정 하는 &lt;a href=&quot;querysets#django.db.models.Q&quot;&gt; &lt;code&gt;Q&lt;/code&gt; &lt;/a&gt; 개체입니다.</target>
        </trans-unit>
        <trans-unit id="1f89263bf530262d503faf7bb703f1b7bcd36232" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;.label&lt;/code&gt; property is added on values, to return the human-readable name.</source>
          <target state="translated">&lt;code&gt;.label&lt;/code&gt; 속성은 사람이 읽을 수있는 이름을 반환하는 값에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="50eb2cea197546ec429d88db37b5db7c7d04e6a3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Case()&lt;/code&gt; expression is like the &lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#if&quot;&gt;&lt;code&gt;if&lt;/code&gt;&lt;/a&gt; &amp;hellip; &lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#elif&quot;&gt;&lt;code&gt;elif&lt;/code&gt;&lt;/a&gt; &amp;hellip; &lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#else&quot;&gt;&lt;code&gt;else&lt;/code&gt;&lt;/a&gt; statement in &lt;code&gt;Python&lt;/code&gt;. Each &lt;code&gt;condition&lt;/code&gt; in the provided &lt;code&gt;When()&lt;/code&gt; objects is evaluated in order, until one evaluates to a truthful value. The &lt;code&gt;result&lt;/code&gt; expression from the matching &lt;code&gt;When()&lt;/code&gt; object is returned.</source>
          <target state="translated">&lt;code&gt;Case()&lt;/code&gt; 표현식은 같다 &lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#if&quot;&gt; &lt;code&gt;if&lt;/code&gt; &lt;/a&gt; ... &lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#elif&quot;&gt; &lt;code&gt;elif&lt;/code&gt; &lt;/a&gt; ... &lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#else&quot;&gt; &lt;code&gt;else&lt;/code&gt; &lt;/a&gt; 에 문 &lt;code&gt;Python&lt;/code&gt; . 제공된 &lt;code&gt;When()&lt;/code&gt; 객체 의 각 &lt;code&gt;condition&lt;/code&gt; 은 실제 값으로 평가 될 때까지 순서대로 평가됩니다. 일치하는 &lt;code&gt;When()&lt;/code&gt; 객체 의 &lt;code&gt;result&lt;/code&gt; 표현식 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="8b4126f44248435d3dd33c2f3d8d411836065a07" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Context&lt;/code&gt; object is a stack. That is, you can &lt;code&gt;push()&lt;/code&gt; and &lt;code&gt;pop()&lt;/code&gt; it. If you &lt;code&gt;pop()&lt;/code&gt; too much, it&amp;rsquo;ll raise &lt;code&gt;django.template.ContextPopException&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Context&lt;/code&gt; 객체는 스택이다. 즉, &lt;code&gt;push()&lt;/code&gt; 및 &lt;code&gt;pop()&lt;/code&gt; 할 수 있습니다. 당신이 경우 &lt;code&gt;pop()&lt;/code&gt; 너무 많이, 그것은 올릴 것이다 &lt;code&gt;django.template.ContextPopException&lt;/code&gt; 를 :</target>
        </trans-unit>
        <trans-unit id="1b8ec2f2e642cc64faff92e60b72a93929cbe201" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;DoesNotExist&lt;/code&gt; exception is raised when accessing the reverse relationship if an entry in the related table doesn&amp;rsquo;t exist. For example, if a user doesn&amp;rsquo;t have a supervisor designated by &lt;code&gt;MySpecialUser&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;DoesNotExist&lt;/code&gt; 의 관련 테이블에 엔트리가 존재하지 않는 경우에 역의 관계를 액세스 할 때 예외가 발생된다. 예를 들어, 사용자에게 &lt;code&gt;MySpecialUser&lt;/code&gt; 에 의해 지정된 관리자가없는 경우 :</target>
        </trans-unit>
        <trans-unit id="fea437ddaea5c738ec1a9102655311d3f6353eac" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Field&lt;/code&gt; is a subclass of &lt;a href=&quot;lookups#django.db.models.lookups.RegisterLookupMixin&quot;&gt;&lt;code&gt;RegisterLookupMixin&lt;/code&gt;&lt;/a&gt; and thus both &lt;a href=&quot;lookups#django.db.models.Transform&quot;&gt;&lt;code&gt;Transform&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;lookups#django.db.models.Lookup&quot;&gt;&lt;code&gt;Lookup&lt;/code&gt;&lt;/a&gt; can be registered on it to be used in &lt;code&gt;QuerySet&lt;/code&gt;s (e.g. &lt;code&gt;field_name__exact=&quot;foo&quot;&lt;/code&gt;). All &lt;a href=&quot;querysets#field-lookups&quot;&gt;built-in lookups&lt;/a&gt; are registered by default.</source>
          <target state="translated">&lt;code&gt;Field&lt;/code&gt; 의 서브 &lt;a href=&quot;lookups#django.db.models.lookups.RegisterLookupMixin&quot;&gt; &lt;code&gt;RegisterLookupMixin&lt;/code&gt; &lt;/a&gt; 따라서 두 &lt;a href=&quot;lookups#django.db.models.Transform&quot;&gt; &lt;code&gt;Transform&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;lookups#django.db.models.Lookup&quot;&gt; &lt;code&gt;Lookup&lt;/code&gt; &lt;/a&gt; 그것이 사용될 수에 등록 할 수있는 &lt;code&gt;QuerySet&lt;/code&gt; 들 (예 &lt;code&gt;field_name__exact=&quot;foo&quot;&lt;/code&gt; ). &lt;a href=&quot;querysets#field-lookups&quot;&gt;기본적으로&lt;/a&gt; 모든 내장 조회 가 등록됩니다.</target>
        </trans-unit>
        <trans-unit id="69ed297983034cb165738cd6dbcbf8c06faa895a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Lookup&lt;/code&gt; is a generic class to implement lookups. A lookup is a query expression with a left-hand side, &lt;a href=&quot;#django.db.models.Lookup.lhs&quot;&gt;&lt;code&gt;lhs&lt;/code&gt;&lt;/a&gt;; a right-hand side, &lt;a href=&quot;#django.db.models.Lookup.rhs&quot;&gt;&lt;code&gt;rhs&lt;/code&gt;&lt;/a&gt;; and a &lt;code&gt;lookup_name&lt;/code&gt; that is used to produce a boolean comparison between &lt;code&gt;lhs&lt;/code&gt; and &lt;code&gt;rhs&lt;/code&gt; such as &lt;code&gt;lhs in rhs&lt;/code&gt; or &lt;code&gt;lhs &amp;gt; rhs&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Lookup&lt;/code&gt; 조회를 구현하는 일반적인 클래스입니다. 조회는 왼쪽이 &lt;a href=&quot;#django.db.models.Lookup.lhs&quot;&gt; &lt;code&gt;lhs&lt;/code&gt; 인&lt;/a&gt; 쿼리 표현식입니다 . 오른쪽, &lt;a href=&quot;#django.db.models.Lookup.rhs&quot;&gt; &lt;code&gt;rhs&lt;/code&gt; &lt;/a&gt; ; 및 &lt;code&gt;lookup_name&lt;/code&gt; 사용 사이 부울 비교 제조하는 &lt;code&gt;lhs&lt;/code&gt; 및 &lt;code&gt;rhs&lt;/code&gt; 같은 &lt;code&gt;lhs in rhs&lt;/code&gt; 또는 &lt;code&gt;lhs &amp;gt; rhs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1fce6caddb70a2bf2c8f50f9d4d4bbbdfc85d258" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Lookup&lt;/code&gt; works against two values, &lt;code&gt;lhs&lt;/code&gt; and &lt;code&gt;rhs&lt;/code&gt;, standing for left-hand side and right-hand side. The left-hand side is usually a field reference, but it can be anything implementing the &lt;a href=&quot;../ref/models/lookups#query-expression&quot;&gt;query expression API&lt;/a&gt;. The right-hand is the value given by the user. In the example &lt;code&gt;Author.objects.filter(name__ne='Jack')&lt;/code&gt;, the left-hand side is a reference to the &lt;code&gt;name&lt;/code&gt; field of the &lt;code&gt;Author&lt;/code&gt; model, and &lt;code&gt;'Jack'&lt;/code&gt; is the right-hand side.</source>
          <target state="translated">&lt;code&gt;Lookup&lt;/code&gt; 두 값에 대해 작동 &lt;code&gt;lhs&lt;/code&gt; 및 &lt;code&gt;rhs&lt;/code&gt; 좌측 측과 오른쪽에 대한 서. 왼쪽은 일반적으로 필드 참조이지만 &lt;a href=&quot;../ref/models/lookups#query-expression&quot;&gt;쿼리 표현식 API를&lt;/a&gt; 구현하는 모든 것이 될 수 있습니다 . 오른쪽은 사용자가 제공 한 값입니다. &lt;code&gt;Author.objects.filter(name__ne='Jack')&lt;/code&gt; 예제 에서 왼쪽 은 &lt;code&gt;Author&lt;/code&gt; 모델 의 &lt;code&gt;name&lt;/code&gt; 필드에 대한 참조 이고 &lt;code&gt;'Jack'&lt;/code&gt; 은 오른쪽입니다.</target>
        </trans-unit>
        <trans-unit id="7a673e5d4b2c859be6bc605719c6c10836f8c920" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Manager&lt;/code&gt; is the interface through which database query operations are provided to Django models. At least one &lt;code&gt;Manager&lt;/code&gt; exists for every model in a Django application.</source>
          <target state="translated">&lt;code&gt;Manager&lt;/code&gt; 데이터베이스 쿼리 작업이 장고 모델에 제공되는 인터페이스입니다. Django 애플리케이션의 모든 모델에 대해 하나 이상의 &lt;code&gt;Manager&lt;/code&gt; 가 존재합니다.</target>
        </trans-unit>
        <trans-unit id="7355842c480170b8bb8b1665f0cb53ffd06c8074" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Manager&lt;/code&gt;&amp;rsquo;s base &lt;code&gt;QuerySet&lt;/code&gt; returns all objects in the system. For example, using this model:</source>
          <target state="translated">&lt;code&gt;Manager&lt;/code&gt; 의 기본 &lt;code&gt;QuerySet&lt;/code&gt; 시스템의 모든 객체를 반환합니다. 예를 들어이 모델을 사용하면</target>
        </trans-unit>
        <trans-unit id="e4155287e0e3e91b5a83b7028f627f0ce9bd656c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Q()&lt;/code&gt; object, like an &lt;a href=&quot;expressions#django.db.models.F&quot;&gt;&lt;code&gt;F&lt;/code&gt;&lt;/a&gt; object, encapsulates a SQL expression in a Python object that can be used in database-related operations.</source>
          <target state="translated">&lt;code&gt;Q()&lt;/code&gt; 객체는처럼 &lt;a href=&quot;expressions#django.db.models.F&quot;&gt; &lt;code&gt;F&lt;/code&gt; 의&lt;/a&gt; 객체 데이터베이스 관련 작업에 사용될 수있는 파이썬 객체의 SQL 식을 캡슐화한다.</target>
        </trans-unit>
        <trans-unit id="114db248d6476e85a720aa215f02b03f5bfe1575" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;QuerySet&lt;/code&gt; of model objects from which the choices for the field are derived and which is used to validate the user&amp;rsquo;s selection. It&amp;rsquo;s evaluated when the form is rendered.</source>
          <target state="translated">필드에 대한 선택이 도출되고 사용자의 선택을 확인하는 데 사용되는 모델 오브젝트 의 &lt;code&gt;QuerySet&lt;/code&gt; 입니다. 양식이 렌더링 될 때 평가됩니다.</target>
        </trans-unit>
        <trans-unit id="04644d7f9e116af31595b64e2d4d9d5366ebdff5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;QuerySet&lt;/code&gt; that represents the objects. If provided, the value of &lt;code&gt;queryset&lt;/code&gt; supersedes the value provided for &lt;a href=&quot;#django.views.generic.detail.SingleObjectMixin.model&quot;&gt;&lt;code&gt;model&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;QuerySet&lt;/code&gt; 개체를 나타냅니다. 제공된 경우 &lt;code&gt;queryset&lt;/code&gt; 값은 &lt;a href=&quot;#django.views.generic.detail.SingleObjectMixin.model&quot;&gt; &lt;code&gt;model&lt;/code&gt; 에&lt;/a&gt; 제공된 값보다 우선합니다 .</target>
        </trans-unit>
        <trans-unit id="6b6d179a8c0dedc6fa1d4eba42cd1b53706f781b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;QuerySet&lt;/code&gt; that represents the objects. If provided, the value of &lt;code&gt;queryset&lt;/code&gt; supersedes the value provided for &lt;a href=&quot;#django.views.generic.list.MultipleObjectMixin.model&quot;&gt;&lt;code&gt;model&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;QuerySet&lt;/code&gt; 개체를 나타냅니다. 제공된 경우 &lt;code&gt;queryset&lt;/code&gt; 값은 &lt;a href=&quot;#django.views.generic.list.MultipleObjectMixin.model&quot;&gt; &lt;code&gt;model&lt;/code&gt; 에&lt;/a&gt; 제공된 값보다 우선합니다 .</target>
        </trans-unit>
        <trans-unit id="6f624f041c34b4ad98dd309b7355c479745e3126" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;RangeBoundary()&lt;/code&gt; expression represents the range boundaries. It can be used with a custom range functions that expected boundaries, for example to define &lt;a href=&quot;constraints#django.contrib.postgres.constraints.ExclusionConstraint&quot;&gt;&lt;code&gt;ExclusionConstraint&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;https://www.postgresql.org/docs/current/rangetypes.html#RANGETYPES-INCLUSIVITY&quot;&gt;the PostgreSQL documentation for the full details&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;RangeBoundary()&lt;/code&gt; 식의 범위의 경계를 나타낸다. &lt;a href=&quot;constraints#django.contrib.postgres.constraints.ExclusionConstraint&quot;&gt; &lt;code&gt;ExclusionConstraint&lt;/code&gt; &lt;/a&gt; 를 정의하기 위해 경계를 예상하는 사용자 지정 범위 함수와 함께 사용할 수 있습니다 . 자세한 내용 &lt;a href=&quot;https://www.postgresql.org/docs/current/rangetypes.html#RANGETYPES-INCLUSIVITY&quot;&gt;은 PostgreSQL 설명서를&lt;/a&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="537a3a7c34997ecfa7c1f6169cc863741976bedb" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Sitemap&lt;/code&gt; class can define the following methods/attributes:</source>
          <target state="translated">&lt;code&gt;Sitemap&lt;/code&gt; 클래스는 다음과 같은 방법 / 속성을 정의 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="6f9dec46b5d55226adc11fc298b467b3a3b310ea" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TemplateResponse&lt;/code&gt; can only be rendered once. The first call to &lt;a href=&quot;#django.template.response.SimpleTemplateResponse.render&quot;&gt;&lt;code&gt;SimpleTemplateResponse.render()&lt;/code&gt;&lt;/a&gt; sets the content of the response; subsequent rendering calls do not change the response content.</source>
          <target state="translated">&lt;code&gt;TemplateResponse&lt;/code&gt; 은 한 번만 렌더링 할 수 있습니다. &lt;a href=&quot;#django.template.response.SimpleTemplateResponse.render&quot;&gt; &lt;code&gt;SimpleTemplateResponse.render()&lt;/code&gt; &lt;/a&gt; 대한 첫 번째 호출 은 응답의 내용을 설정합니다. 후속 렌더링 호출은 응답 내용을 변경하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d286d063c116a376ebafa6b94b1a19fbbb4a9dbe" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TestCase&lt;/code&gt;, on the other hand, does not truncate tables after a test. Instead, it encloses the test code in a database transaction that is rolled back at the end of the test. This guarantees that the rollback at the end of the test restores the database to its initial state.</source>
          <target state="translated">반면에 &lt;code&gt;TestCase&lt;/code&gt; 는 테스트 후 테이블을 자르지 않습니다. 대신 테스트 종료시 롤백되는 데이터베이스 트랜잭션에 테스트 코드를 포함시킵니다. 이렇게하면 테스트 종료시 롤백이 데이터베이스를 초기 상태로 복원합니다.</target>
        </trans-unit>
        <trans-unit id="c6f06e3949cf39a88ef2c26386b8402eb8ec4a23" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TransactionTestCase&lt;/code&gt; resets the database after the test runs by truncating all tables. A &lt;code&gt;TransactionTestCase&lt;/code&gt; may call commit and rollback and observe the effects of these calls on the database.</source>
          <target state="translated">&lt;code&gt;TransactionTestCase&lt;/code&gt; 는 테스트가 모든 테이블을 절단에 의해 실행 된 후 데이터베이스를 재설정합니다. &lt;code&gt;TransactionTestCase&lt;/code&gt; 는 커밋 전화를 롤백하고 데이터베이스에 이러한 호출의 효과를 관찰 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d87347cb42c4a6086e02ce53353e60495f2af0c7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Transform&lt;/code&gt; is a generic class to implement field transformations. A prominent example is &lt;code&gt;__year&lt;/code&gt; that transforms a &lt;code&gt;DateField&lt;/code&gt; into a &lt;code&gt;IntegerField&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Transform&lt;/code&gt; 필드 변환을 구현하는 일반적인 클래스입니다. 대표적인 예는 &lt;code&gt;DateField&lt;/code&gt; 를 &lt;code&gt;__year&lt;/code&gt; 로 변환 하는 &lt;code&gt;IntegerField&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6e24cb37035bc929d89cd2fc75da46edcad446c0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Value()&lt;/code&gt; object represents the smallest possible component of an expression: a simple value. When you need to represent the value of an integer, boolean, or string within an expression, you can wrap that value within a &lt;code&gt;Value()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Value()&lt;/code&gt; 단순 값 : 목적 식의 가능한 가장 작은 구성 요소를 나타낸다. 표현식 내에서 정수, 부울 또는 문자열의 값을 나타내야 할 경우 해당 값을 &lt;code&gt;Value()&lt;/code&gt; 바꿈 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3d413300433a5c3d82b1ddb7e25039675fd24dfc" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;When()&lt;/code&gt; object is used to encapsulate a condition and its result for use in the conditional expression. Using a &lt;code&gt;When()&lt;/code&gt; object is similar to using the &lt;a href=&quot;querysets#django.db.models.query.QuerySet.filter&quot;&gt;&lt;code&gt;filter()&lt;/code&gt;&lt;/a&gt; method. The condition can be specified using &lt;a href=&quot;querysets#field-lookups&quot;&gt;field lookups&lt;/a&gt;, &lt;a href=&quot;querysets#django.db.models.Q&quot;&gt;&lt;code&gt;Q&lt;/code&gt;&lt;/a&gt; objects, or &lt;a href=&quot;expressions#django.db.models.Expression&quot;&gt;&lt;code&gt;Expression&lt;/code&gt;&lt;/a&gt; objects that have an &lt;code&gt;output_field&lt;/code&gt; that is a &lt;a href=&quot;fields#django.db.models.BooleanField&quot;&gt;&lt;code&gt;BooleanField&lt;/code&gt;&lt;/a&gt;. The result is provided using the &lt;code&gt;then&lt;/code&gt; keyword.</source>
          <target state="translated">&lt;code&gt;When()&lt;/code&gt; 객체는 상태 및 조건식에 사용하기 위해 그 결과를 캡슐화하는데 사용된다. 사용하여 A &lt;code&gt;When()&lt;/code&gt; 객체를 사용하는 것은 유사하다 &lt;a href=&quot;querysets#django.db.models.query.QuerySet.filter&quot;&gt; &lt;code&gt;filter()&lt;/code&gt; &lt;/a&gt; 방법. 조건을 사용하여 지정할 수있는 &lt;a href=&quot;querysets#field-lookups&quot;&gt;필드 조회&lt;/a&gt; , &lt;a href=&quot;querysets#django.db.models.Q&quot;&gt; &lt;code&gt;Q&lt;/code&gt; 의&lt;/a&gt; 개체 또는 &lt;a href=&quot;expressions#django.db.models.Expression&quot;&gt; &lt;code&gt;Expression&lt;/code&gt; &lt;/a&gt; 있는 개체 &lt;code&gt;output_field&lt;/code&gt; A는 &lt;a href=&quot;fields#django.db.models.BooleanField&quot;&gt; &lt;code&gt;BooleanField&lt;/code&gt; 를&lt;/a&gt; . &lt;code&gt;then&lt;/code&gt; 키워드를 사용하여 결과를 제공 합니다.</target>
        </trans-unit>
        <trans-unit id="bfcac21e3d9453d3b4a6607218dc81b229e4c623" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;bytes&lt;/code&gt; representation of this raster. Returns &lt;code&gt;None&lt;/code&gt; for rasters that are not stored in GDAL&amp;rsquo;s virtual filesystem.</source>
          <target state="translated">이 래스터 의 &lt;code&gt;bytes&lt;/code&gt; 표현입니다. GDAL의 가상 파일 시스템에 저장되지 않은 래스터에 대해서는 &lt;code&gt;None&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="cb88cdc271745317f8ec0526300c2facb8c1bfa6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;count()&lt;/code&gt; call performs a &lt;code&gt;SELECT COUNT(*)&lt;/code&gt; behind the scenes, so you should always use &lt;code&gt;count()&lt;/code&gt; rather than loading all of the record into Python objects and calling &lt;code&gt;len()&lt;/code&gt; on the result (unless you need to load the objects into memory anyway, in which case &lt;code&gt;len()&lt;/code&gt; will be faster).</source>
          <target state="translated">&lt;code&gt;count()&lt;/code&gt; 전화가 행하는 &lt;code&gt;SELECT COUNT(*)&lt;/code&gt; 배후를, 당신은 항상 사용해야합니다 그래서 &lt;code&gt;count()&lt;/code&gt; 객체 및 호출이 아니라 파이썬으로 기록을 모두로드보다 &lt;code&gt;len()&lt;/code&gt; 은 개체를로드 할 필요가없는 경우 (결과에 어쨌든 메모리에 넣으면 &lt;code&gt;len()&lt;/code&gt; 이 빠릅니다).</target>
        </trans-unit>
        <trans-unit id="f798d3c561f418011c88bf8a05f1f22096d8b790" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;flatten()&lt;/code&gt; method is also internally used to make &lt;code&gt;Context&lt;/code&gt; objects comparable.</source>
          <target state="translated">&lt;code&gt;flatten()&lt;/code&gt; 메소드는 내부적으로 확인하는 데 사용되는 &lt;code&gt;Context&lt;/code&gt; 유사한 개체.</target>
        </trans-unit>
        <trans-unit id="d0d92bea8269eaf69e674d91d17785a640314168" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;max_num&lt;/code&gt; value of &lt;code&gt;None&lt;/code&gt; (the default) puts a high limit on the number of forms displayed (1000). In practice this is equivalent to no limit.</source>
          <target state="translated">&lt;code&gt;max_num&lt;/code&gt; 값 &lt;code&gt;None&lt;/code&gt; (기본값) (1000) 형태의 수에 상한이 표시 넣습니다. 실제로 이것은 제한이 없습니다.</target>
        </trans-unit>
        <trans-unit id="070edccb13449ca8963973621f6522f02d05cda2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;regex&lt;/code&gt; class attribute, as a string.</source>
          <target state="translated">&lt;code&gt;regex&lt;/code&gt; 문자열로 클래스 속성.</target>
        </trans-unit>
        <trans-unit id="813de685032cf92fb477b3dc80fcdbf38082600a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;str&lt;/code&gt; subclass that has been specifically marked as &amp;ldquo;safe&amp;rdquo; (requires no further escaping) for HTML output purposes.</source>
          <target state="translated">&lt;code&gt;str&lt;/code&gt; 구체적 &quot;안전한&quot;으로 표시된 서브 클래스는 HTML 출력을 위해 (더 이스케이프를 필요로하지 않는다).</target>
        </trans-unit>
        <trans-unit id="4734f2bbd4aa9200a6209b2a0da4d5fb34ee5885" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;to_python(self, value)&lt;/code&gt; method, which handles converting the matched string into the type that should be passed to the view function. It should raise &lt;code&gt;ValueError&lt;/code&gt; if it can&amp;rsquo;t convert the given value. A &lt;code&gt;ValueError&lt;/code&gt; is interpreted as no match and as a consequence a 404 response is sent to the user unless another URL pattern matches.</source>
          <target state="translated">&lt;code&gt;to_python(self, value)&lt;/code&gt; 보기 기능으로 전달되어야하는 유형으로 일치하는 문자열 변환 핸들 방법. 그것은 인상해야 &lt;code&gt;ValueError&lt;/code&gt; 를을 가 주어진 값의 변환을 할 수없는 경우에. &lt;code&gt;ValueError&lt;/code&gt; 전혀 일치로 해석하고 다른 URL 패턴과 일치하지 않는 결과로 404 응답이 사용자에게 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="8fa9ec0e5022c163267d6fed5498ed038e9c9786" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;to_url(self, value)&lt;/code&gt; method, which handles converting the Python type into a string to be used in the URL.</source>
          <target state="translated">&lt;code&gt;to_url(self, value)&lt;/code&gt; 문자열로 파이썬 형식 변환 핸들있어서, 상기 URL에 사용된다.</target>
        </trans-unit>
        <trans-unit id="fdca374c0286f40d42cefb4d875f38647fa6ef19" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;fixture&lt;/em&gt; is a collection of files that contain the serialized contents of the database. Each fixture has a unique name, and the files that comprise the fixture can be distributed over multiple directories, in multiple applications.</source>
          <target state="translated">&lt;em&gt;고정은&lt;/em&gt; 데이터베이스의 연재 내용을 포함하는 파일의 모음입니다. 각 조명기는 고유 한 이름을 가지며, 조명기를 구성하는 파일은 여러 응용 프로그램에서 여러 디렉토리에 배포 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="62025666010bb061a2a0100787e1f70cecbbd1d4" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;project&amp;rsquo;s root directory&lt;/strong&gt; (the one that contains &lt;code&gt;manage.py&lt;/code&gt;) is usually the container for all of a project&amp;rsquo;s applications which aren&amp;rsquo;t installed separately.</source>
          <target state="translated">&lt;strong&gt;프로젝트의 루트 디렉토리&lt;/strong&gt; (포함하는 하나 &lt;code&gt;manage.py&lt;/code&gt; 는 ) 보통 별도로 설치되어 있지 않은 프로젝트의 모든 응용 프로그램에 대한 컨테이너입니다.</target>
        </trans-unit>
        <trans-unit id="3dc63042f868b5a53945bdba44d4bd3b76ef9006" translate="yes" xml:space="preserve">
          <source>A BSD-licensed interface to the GEOS geometry routines, implemented purely in Python using &lt;code&gt;ctypes&lt;/code&gt;.</source>
          <target state="translated">GEOS 지오메트리 루틴에 대한 BSD 라이센스 인터페이스로 &lt;code&gt;ctypes&lt;/code&gt; 를 사용하여 순수하게 파이썬으로 구현 됩니다.</target>
        </trans-unit>
        <trans-unit id="1882cc3c918cc6c74722f6f246b0b9eead5bf9dd" translate="yes" xml:space="preserve">
          <source>A CSRF cookie that is based on a random secret value, which other sites will not have access to.</source>
          <target state="translated">다른 사이트에 액세스 할 수없는 임의의 비밀 값을 기반으로하는 CSRF 쿠키입니다.</target>
        </trans-unit>
        <trans-unit id="e2c41f8d7ab7e54ebc697a5e50b8ba262f1d94fe" translate="yes" xml:space="preserve">
          <source>A Django &lt;em&gt;application&lt;/em&gt; is a Python package that is specifically intended for use in a Django project. An application may use common Django conventions, such as having &lt;code&gt;models&lt;/code&gt;, &lt;code&gt;tests&lt;/code&gt;, &lt;code&gt;urls&lt;/code&gt;, and &lt;code&gt;views&lt;/code&gt; submodules.</source>
          <target state="translated">Django &lt;em&gt;응용 프로그램&lt;/em&gt; 은 Django 프로젝트에서 사용하기위한 Python 패키지입니다. 애플리케이션은 &lt;code&gt;models&lt;/code&gt; , &lt;code&gt;tests&lt;/code&gt; , &lt;code&gt;urls&lt;/code&gt; 및 &lt;code&gt;views&lt;/code&gt; 서브 모듈 과 같은 일반적인 장고 규칙을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="152cbd7fe2618ef04f4b4c2cfd526a4b3c5e580d" translate="yes" xml:space="preserve">
          <source>A Django administrative site is represented by an instance of &lt;code&gt;django.contrib.admin.sites.AdminSite&lt;/code&gt;; by default, an instance of this class is created as &lt;code&gt;django.contrib.admin.site&lt;/code&gt; and you can register your models and &lt;code&gt;ModelAdmin&lt;/code&gt; instances with it.</source>
          <target state="translated">장고 관리 사이트는 &lt;code&gt;django.contrib.admin.sites.AdminSite&lt;/code&gt; 인스턴스로 표시됩니다 . 기본적으로이 클래스의 인스턴스는 &lt;code&gt;django.contrib.admin.site&lt;/code&gt; 로 작성되며 모델 및 &lt;code&gt;ModelAdmin&lt;/code&gt; 인스턴스를 등록 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fd4bb04c49916bec7a8e755c33b4075a7ba5017d" translate="yes" xml:space="preserve">
          <source>A Django installation doesn&amp;rsquo;t require any middleware &amp;mdash; &lt;a href=&quot;../../ref/settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt; can be empty, if you&amp;rsquo;d like &amp;mdash; but it&amp;rsquo;s strongly suggested that you at least use &lt;a href=&quot;../../ref/middleware#django.middleware.common.CommonMiddleware&quot;&gt;&lt;code&gt;CommonMiddleware&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Django 설치에는 미들웨어가 필요하지 않습니다. 원하는 경우 &lt;a href=&quot;../../ref/settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; &lt;/a&gt; 가 비어있을 수 있습니다. 그러나 최소한 &lt;a href=&quot;../../ref/middleware#django.middleware.common.CommonMiddleware&quot;&gt; &lt;code&gt;CommonMiddleware&lt;/code&gt; 를&lt;/a&gt; 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="0ad70278b5cf3d0cecfcd67922aedb6414e6f01d" translate="yes" xml:space="preserve">
          <source>A Django project can be configured with one or several template engines (or even zero if you don&amp;rsquo;t use templates). Django ships built-in backends for its own template system, creatively called the Django template language (DTL), and for the popular alternative &lt;a href=&quot;http://jinja.pocoo.org/&quot;&gt;Jinja2&lt;/a&gt;. Backends for other template languages may be available from third-parties.</source>
          <target state="translated">Django 프로젝트는 하나 또는 여러 개의 템플릿 엔진으로 구성 할 수 있습니다 (또는 템플릿을 사용하지 않는 경우 0). Django는 자체적으로 템플릿 시스템 (DTL)이라고하는 자체 템플릿 시스템과 인기있는 대안 인 &lt;a href=&quot;http://jinja.pocoo.org/&quot;&gt;Jinja2를&lt;/a&gt; 위한 내장 백엔드를 제공합니다 . 다른 템플릿 언어의 백엔드는 타사에서 구할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2fba2cdb093c85380efa79581d98a2161cca2d1a" translate="yes" xml:space="preserve">
          <source>A Django settings file contains all the configuration of your Django installation. This document explains how settings work and which settings are available.</source>
          <target state="translated">Django 설정 파일에는 Django 설치의 모든 구성이 포함됩니다. 이 문서는 설정 작동 방식과 사용 가능한 설정에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="174e22dbcce5ca986a5bcd78190e92ceeb389410" translate="yes" xml:space="preserve">
          <source>A Django settings file doesn&amp;rsquo;t have to define any settings if it doesn&amp;rsquo;t need to. Each setting has a sensible default value. These defaults live in the module &lt;code&gt;django/conf/global_settings.py&lt;/code&gt;.</source>
          <target state="translated">Django 설정 파일은 필요하지 않은 경우 설정을 정의 할 필요가 없습니다. 각 설정에는 적절한 기본값이 있습니다. 이 기본값은 &lt;code&gt;django/conf/global_settings.py&lt;/code&gt; 모듈에 있습니다.</target>
        </trans-unit>
        <trans-unit id="c433ad55a124088844a1f8020011c4df31f70213" translate="yes" xml:space="preserve">
          <source>A Django template is a text document or a Python string marked-up using the Django template language. Some constructs are recognized and interpreted by the template engine. The main ones are variables and tags.</source>
          <target state="translated">Django 템플릿은 텍스트 문서 또는 Django 템플릿 언어를 사용하여 마크 업 된 Python 문자열입니다. 일부 구성은 템플리트 엔진에 의해 인식되고 해석됩니다. 주요한 것은 변수와 태그입니다.</target>
        </trans-unit>
        <trans-unit id="20f6fc9e68eb1d17a299b4bdf25d3f1c0055ab62" translate="yes" xml:space="preserve">
          <source>A Full DSN or Easy Connect string can be used in &lt;a href=&quot;settings#std:setting-NAME&quot;&gt;&lt;code&gt;NAME&lt;/code&gt;&lt;/a&gt; if both &lt;a href=&quot;settings#std:setting-HOST&quot;&gt;&lt;code&gt;HOST&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;settings#std:setting-PORT&quot;&gt;&lt;code&gt;PORT&lt;/code&gt;&lt;/a&gt; are empty. This format is required when using RAC or pluggable databases without &lt;code&gt;tnsnames.ora&lt;/code&gt;, for example.</source>
          <target state="translated">&lt;a href=&quot;settings#std:setting-HOST&quot;&gt; &lt;code&gt;HOST&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;settings#std:setting-PORT&quot;&gt; &lt;code&gt;PORT&lt;/code&gt; &lt;/a&gt; 가 모두 비어 있으면 &lt;a href=&quot;settings#std:setting-NAME&quot;&gt; &lt;code&gt;NAME&lt;/code&gt; &lt;/a&gt; 에서 Full DSN 또는 Easy Connect 문자열을 사용할 수 있습니다 . 이 형식은 예를 들어 &lt;code&gt;tnsnames.ora&lt;/code&gt; 없이 RAC 또는 플러그 가능 데이터베이스를 사용할 때 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="d6c6f4517e8838e32293266ea380e930bf8f650a" translate="yes" xml:space="preserve">
          <source>A MAC (Message Authentication Code) is used to protect the data against changes by the client, so that the session data will be invalidated when being tampered with. The same invalidation happens if the client storing the cookie (e.g. your user&amp;rsquo;s browser) can&amp;rsquo;t store all of the session cookie and drops data. Even though Django compresses the data, it&amp;rsquo;s still entirely possible to exceed the &lt;a href=&quot;https://tools.ietf.org/html/rfc2965#section-5.3&quot;&gt;common limit of 4096 bytes&lt;/a&gt; per cookie.</source>
          <target state="translated">MAC (메시지 인증 코드)은 클라이언트에 의한 변경으로부터 데이터를 보호하여 세션 데이터가 변경 될 때 무효화되도록하는 데 사용됩니다. 쿠키를 저장하는 클라이언트 (예 : 사용자의 브라우저)가 모든 세션 쿠키를 저장하고 데이터를 삭제하지 못하는 경우에도 동일한 무효화가 발생합니다. Django가 데이터를 압축하더라도 쿠키 당 &lt;a href=&quot;https://tools.ietf.org/html/rfc2965#section-5.3&quot;&gt;4096 바이트&lt;/a&gt; 의 일반 제한 을 여전히 초과 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="35eba68fb36e851b5292598b09156edbcb33aace" translate="yes" xml:space="preserve">
          <source>A Place can access its restaurant, if available:</source>
          <target state="translated">장소는 가능한 경우 식당에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="13d8bdfb935c76b4399367bbeb8d69221d42eb05" translate="yes" xml:space="preserve">
          <source>A Python &amp;ldquo;magic method&amp;rdquo; that returns a string representation of any object. This is what Python and Django will use whenever a model instance needs to be coerced and displayed as a plain string. Most notably, this happens when you display an object in an interactive console or in the admin.</source>
          <target state="translated">모든 객체의 문자열 표현을 반환하는 Python &quot;매직 메서드&quot;. 모델 인스턴스를 강제로 작성하고 일반 문자열로 표시해야 할 때마다 Python과 Django가 사용합니다. 특히 대화 형 콘솔이나 관리자에서 개체를 표시 할 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="315248f07d8bcd1374b5572e7c7bde8b1abf9f52" translate="yes" xml:space="preserve">
          <source>A Python &lt;a href=&quot;https://docs.python.org/3/glossary.html#term-package&quot;&gt;package&lt;/a&gt; provides a way of grouping related Python code for easy reuse. A package contains one or more files of Python code (also known as &amp;ldquo;modules&amp;rdquo;).</source>
          <target state="translated">Python &lt;a href=&quot;https://docs.python.org/3/glossary.html#term-package&quot;&gt;패키지&lt;/a&gt; 는 쉽게 재사용 할 수 있도록 관련 Python 코드를 그룹화하는 방법을 제공합니다. 패키지에는 하나 이상의 Python 코드 파일 ( &quot;모듈&quot;이라고도 함)이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="39dca1f76850306df181a763dfbfe38ed1528985" translate="yes" xml:space="preserve">
          <source>A Python &lt;a href=&quot;https://docs.python.org/3/library/http.cookies.html#http.cookies.SimpleCookie&quot;&gt;&lt;code&gt;SimpleCookie&lt;/code&gt;&lt;/a&gt; object, containing the current values of all the client cookies. See the documentation of the &lt;a href=&quot;https://docs.python.org/3/library/http.cookies.html#module-http.cookies&quot;&gt;&lt;code&gt;http.cookies&lt;/code&gt;&lt;/a&gt; module for more.</source>
          <target state="translated">모든 클라이언트 쿠키의 현재 값을 포함 하는 Python &lt;a href=&quot;https://docs.python.org/3/library/http.cookies.html#http.cookies.SimpleCookie&quot;&gt; &lt;code&gt;SimpleCookie&lt;/code&gt; &lt;/a&gt; 객체. 자세한 내용은 &lt;a href=&quot;https://docs.python.org/3/library/http.cookies.html#module-http.cookies&quot;&gt; &lt;code&gt;http.cookies&lt;/code&gt; &lt;/a&gt; 모듈 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="22dd24106fc5dd081cb57cdb8c458ff4bc3f21d5" translate="yes" xml:space="preserve">
          <source>A Python context manager that uses &lt;a href=&quot;#django.utils.translation.activate&quot;&gt;&lt;code&gt;django.utils.translation.activate()&lt;/code&gt;&lt;/a&gt; to fetch the translation object for a given language, activates it as the translation object for the current thread and reactivates the previous active language on exit. Optionally, it can deactivate the temporary translation on exit with &lt;a href=&quot;#django.utils.translation.deactivate&quot;&gt;&lt;code&gt;django.utils.translation.deactivate()&lt;/code&gt;&lt;/a&gt; if the &lt;code&gt;deactivate&lt;/code&gt; argument is &lt;code&gt;True&lt;/code&gt;. If you pass &lt;code&gt;None&lt;/code&gt; as the language argument, a &lt;code&gt;NullTranslations()&lt;/code&gt; instance is activated within the context.</source>
          <target state="translated">&lt;a href=&quot;#django.utils.translation.activate&quot;&gt; &lt;code&gt;django.utils.translation.activate()&lt;/code&gt; &lt;/a&gt; 를 사용 하여 주어진 언어에 대한 변환 객체를 가져오고 현재 스레드에 대한 변환 객체로 활성화하고 종료시 이전 활성 언어를 다시 활성화 하는 Python 컨텍스트 관리자 . 선택적으로 &lt;code&gt;deactivate&lt;/code&gt; 인수가 &lt;code&gt;True&lt;/code&gt; 인 경우 &lt;a href=&quot;#django.utils.translation.deactivate&quot;&gt; &lt;code&gt;django.utils.translation.deactivate()&lt;/code&gt; &lt;/a&gt; 사용하여 종료시 임시 변환을 비활성화 할 수 있습니다 . 언어 인수로 &lt;code&gt;None&lt;/code&gt; 을 전달 하면 컨텍스트 내에서 &lt;code&gt;NullTranslations()&lt;/code&gt; 인스턴스가 활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="3a419fc9355b18e7359e3d92cf0bb2e4e1a2c766" translate="yes" xml:space="preserve">
          <source>A Python logging configuration consists of four parts:</source>
          <target state="translated">Python 로깅 구성은 다음 네 부분으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="7008d0e9e056fe1bdda551a59c84c4075efcdd1b" translate="yes" xml:space="preserve">
          <source>A Python value passed to &lt;code&gt;Coalesce&lt;/code&gt; on MySQL may be converted to an incorrect type unless explicitly cast to the correct database type:</source>
          <target state="translated">MySQL 에서 &lt;code&gt;Coalesce&lt;/code&gt; 에 전달 된 Python 값 은 올바른 데이터베이스 유형으로 명시 적으로 캐스트되지 않는 한 잘못된 유형으로 변환 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0a68a2223521d4d083dec872f3ffeb88d21e0572" translate="yes" xml:space="preserve">
          <source>A Restaurant can access its place:</source>
          <target state="translated">식당은 그 장소에 접근 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="07442c24ff67f210271d150c45f74f8345fdd2c3" translate="yes" xml:space="preserve">
          <source>A URL namespace comes in two parts, both of which are strings:</source>
          <target state="translated">URL 네임 스페이스는 두 부분으로 구성되며 둘 다 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="c0b7d5a58ea2bb664ccbc3f06ca2fbeffadd1b9a" translate="yes" xml:space="preserve">
          <source>A URL pattern is the general form of a URL - for example: &lt;code&gt;/newsarchive/&amp;lt;year&amp;gt;/&amp;lt;month&amp;gt;/&lt;/code&gt;.</source>
          <target state="translated">URL 패턴은 URL의 일반적인 형태입니다 (예 : &lt;code&gt;/newsarchive/&amp;lt;year&amp;gt;/&amp;lt;month&amp;gt;/&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="539ee6b9c2295af8451b174f70964f57016def63" translate="yes" xml:space="preserve">
          <source>A backend could implement permissions for the magic admin like this:</source>
          <target state="translated">백엔드는 다음과 같이 마술 관리자에 대한 권한을 구현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e0973892201cf101adc9586c73ac17566f046582" translate="yes" xml:space="preserve">
          <source>A backend-dependent template object (such as those returned by &lt;a href=&quot;../topics/templates#django.template.loader.get_template&quot;&gt;&lt;code&gt;get_template()&lt;/code&gt;&lt;/a&gt;), the name of a template, or a list of template names.</source>
          <target state="translated">백엔드 종속 템플릿 객체 (예 : &lt;a href=&quot;../topics/templates#django.template.loader.get_template&quot;&gt; &lt;code&gt;get_template()&lt;/code&gt; &lt;/a&gt; 반환 된 객체 ), 템플릿 이름 또는 템플릿 이름 목록.</target>
        </trans-unit>
        <trans-unit id="ae540b20e9afb992d8a0dcd75f14421b4ff977fa" translate="yes" xml:space="preserve">
          <source>A base class for exceptions raised when a paginator is passed an invalid page number.</source>
          <target state="translated">페이지 매김에 잘못된 페이지 번호가 전달 될 때 발생하는 예외의 기본 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="1dce404165d8d624a29297e1c6a52fbebc8e16c9" translate="yes" xml:space="preserve">
          <source>A base class that provides common behavior for all date-based views. There won&amp;rsquo;t normally be a reason to instantiate &lt;a href=&quot;#django.views.generic.dates.BaseDateListView&quot;&gt;&lt;code&gt;BaseDateListView&lt;/code&gt;&lt;/a&gt;; instantiate one of the subclasses instead.</source>
          <target state="translated">모든 날짜 기반보기에 공통적 인 동작을 제공하는 기본 클래스입니다. 일반적으로 &lt;a href=&quot;#django.views.generic.dates.BaseDateListView&quot;&gt; &lt;code&gt;BaseDateListView&lt;/code&gt; &lt;/a&gt; 를 인스턴스화 할 이유가 없습니다 . 대신 서브 클래스 중 하나를 인스턴스화하십시오.</target>
        </trans-unit>
        <trans-unit id="b1e0a358ab8867ede5e687294a024db90d64e2b2" translate="yes" xml:space="preserve">
          <source>A base class that provides default implementations for all required methods. By default, it will reject any user and provide no permissions.</source>
          <target state="translated">모든 필수 메소드에 대한 기본 구현을 제공하는 기본 클래스입니다. 기본적으로 모든 사용자를 거부하고 권한을 제공하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="78e6fcbb5b3ca3613d5eb74671adb23d08779e59" translate="yes" xml:space="preserve">
          <source>A base view for displaying a list of objects. It is not intended to be used directly, but rather as a parent class of the &lt;a href=&quot;#django.views.generic.list.ListView&quot;&gt;&lt;code&gt;django.views.generic.list.ListView&lt;/code&gt;&lt;/a&gt; or other views representing lists of objects.</source>
          <target state="translated">객체 목록을 표시하기위한 기본보기입니다. 직접 사용하기위한 것이 아니라 &lt;a href=&quot;#django.views.generic.list.ListView&quot;&gt; &lt;code&gt;django.views.generic.list.ListView&lt;/code&gt; &lt;/a&gt; 의 상위 클래스 또는 객체 목록을 나타내는 다른 뷰로 사용하기위한 것 입니다.</target>
        </trans-unit>
        <trans-unit id="332ab38268b26b12564a96f6a8be9f109ca88aa1" translate="yes" xml:space="preserve">
          <source>A basic function-based view that handles forms may look something like this:</source>
          <target state="translated">양식을 처리하는 기본 함수 기반보기는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="34dd2f6df1e70f6639b2a9aca57e4f0b3a3d5147" translate="yes" xml:space="preserve">
          <source>A basic migration file looks like this:</source>
          <target state="translated">기본 마이그레이션 파일은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2544adf8bf375a92dffa28d07d732ffa0da5ef12" translate="yes" xml:space="preserve">
          <source>A better solution</source>
          <target state="translated">더 나은 솔루션</target>
        </trans-unit>
        <trans-unit id="ba9160cf5be38fbc6699e1a1d01be0ad4a83ef76" translate="yes" xml:space="preserve">
          <source>A better solution removes the content duplication: Both sites use the same article database, and an article is associated with one or more sites. In Django model terminology, that&amp;rsquo;s represented by a &lt;a href=&quot;../models/fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt; in the &lt;code&gt;Article&lt;/code&gt; model:</source>
          <target state="translated">더 나은 솔루션은 컨텐츠 중복을 제거합니다. 두 사이트 모두 동일한 기사 데이터베이스를 사용하고 기사는 하나 이상의 사이트와 연관되어 있습니다. Django 모델 용어에서는 &lt;code&gt;Article&lt;/code&gt; 모델 에서 &lt;a href=&quot;../models/fields#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; &lt;/a&gt; 로 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="4d3650f82febd2a2de658ba6a9b268e7815eeb3c" translate="yes" xml:space="preserve">
          <source>A bilateral transformer example</source>
          <target state="translated">양측 변압기 예</target>
        </trans-unit>
        <trans-unit id="8684db31d6d27abe49009347d52bddad48076137" translate="yes" xml:space="preserve">
          <source>A boolean attribute that defines if the URLs of this sitemap should be generated using all of your &lt;a href=&quot;../settings#std:setting-LANGUAGES&quot;&gt;&lt;code&gt;LANGUAGES&lt;/code&gt;&lt;/a&gt;. The default is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">모든 &lt;a href=&quot;../settings#std:setting-LANGUAGES&quot;&gt; &lt;code&gt;LANGUAGES&lt;/code&gt; 를&lt;/a&gt; 사용하여이 사이트 맵의 URL을 생성해야하는지 여부를 정의하는 부울 속성입니다 . 기본값은 &lt;code&gt;False&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="63f6ce5cb42b0b5213066e9270e3578dbbffdea6" translate="yes" xml:space="preserve">
          <source>A boolean attribute that indicates whether the user is considered &amp;ldquo;active&amp;rdquo;. This attribute is provided as an attribute on &lt;code&gt;AbstractBaseUser&lt;/code&gt; defaulting to &lt;code&gt;True&lt;/code&gt;. How you choose to implement it will depend on the details of your chosen auth backends. See the documentation of the &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User.is_active&quot;&gt;&lt;code&gt;is_active attribute on the built-in
user model&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">사용자가 &quot;활성&quot;으로 간주되는지 여부를 나타내는 부울 속성입니다. 이 속성은 &lt;code&gt;AbstractBaseUser&lt;/code&gt; 의 속성으로 기본적으로 &lt;code&gt;True&lt;/code&gt; 로 제공됩니다 . 구현 방법은 선택한 인증 백엔드의 세부 사항에 따라 다릅니다. 세부 사항 &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User.is_active&quot;&gt; &lt;code&gt;is_active attribute on the built-in user model&lt;/code&gt; &lt;/a&gt; 문서를 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="4e547b3574740ada18ec7f7dbe60cd14ffb4d6ed" translate="yes" xml:space="preserve">
          <source>A boolean defining inheritance behavior for &lt;code&gt;Media&lt;/code&gt; declarations.</source>
          <target state="translated">&lt;code&gt;Media&lt;/code&gt; 선언에 대한 상속 동작을 정의하는 부울 입니다.</target>
        </trans-unit>
        <trans-unit id="a16b5f96ad2ea5df18a0ad863fc96a0fe98c8f33" translate="yes" xml:space="preserve">
          <source>A boolean indicating if this raster is stored in GDAL&amp;rsquo;s virtual filesystem.</source>
          <target state="translated">이 래스터가 GDAL의 가상 파일 시스템에 저장되어 있는지 여부를 나타내는 부울입니다.</target>
        </trans-unit>
        <trans-unit id="9613f1fc093a198e18efa018322823344b7268a3" translate="yes" xml:space="preserve">
          <source>A boolean indicating whether the command outputs SQL statements; if &lt;code&gt;True&lt;/code&gt;, the output will automatically be wrapped with &lt;code&gt;BEGIN;&lt;/code&gt; and &lt;code&gt;COMMIT;&lt;/code&gt;. Default value is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">명령이 SQL 문을 출력하는지 여부를 나타내는 부울입니다. 경우 &lt;code&gt;True&lt;/code&gt; , 출력이 자동으로 포장됩니다 &lt;code&gt;BEGIN;&lt;/code&gt; 그리고 &lt;code&gt;COMMIT;&lt;/code&gt; . 기본값은 &lt;code&gt;False&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a9114d1fa1b40f10a2a8491dc80f640381850d34" translate="yes" xml:space="preserve">
          <source>A boolean indicating whether the response content has been rendered.</source>
          <target state="translated">응답 내용이 렌더링되었는지 여부를 나타내는 부울입니다.</target>
        </trans-unit>
        <trans-unit id="b387c78893c897ae15631a6460206d86161b1245" translate="yes" xml:space="preserve">
          <source>A boolean indicating whether this transformation should apply to both &lt;code&gt;lhs&lt;/code&gt; and &lt;code&gt;rhs&lt;/code&gt;. Bilateral transformations will be applied to &lt;code&gt;rhs&lt;/code&gt; in the same order as they appear in the lookup expression. By default it is set to &lt;code&gt;False&lt;/code&gt;. For example usage, see &lt;a href=&quot;../../howto/custom-lookups&quot;&gt;Custom Lookups&lt;/a&gt;.</source>
          <target state="translated">이 변환이 &lt;code&gt;lhs&lt;/code&gt; 및 &lt;code&gt;rhs&lt;/code&gt; 모두에 적용되어야하는지 여부를 나타내는 부울 입니다. 양방향 변환은 룩업 표현식에 나타나는 순서대로 &lt;code&gt;rhs&lt;/code&gt; 에 적용됩니다 . 기본적으로 &lt;code&gt;False&lt;/code&gt; 로 설정되어 있습니다. 사용 예는 &lt;a href=&quot;../../howto/custom-lookups&quot;&gt;사용자 정의 조회를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f478c4ac5d88ed5b38df0849920074c5af50fc09" translate="yes" xml:space="preserve">
          <source>A boolean instructing the field to accept Unicode letters in addition to ASCII letters. Defaults to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">필드에 ASCII 문자 외에 유니 코드 문자를 허용하도록 지시하는 부울입니다. 기본값은 &lt;code&gt;False&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d59964f256b468ec4264530be9d0900651e25cf3" translate="yes" xml:space="preserve">
          <source>A boolean specifying whether to display the page if no objects are available. If this is &lt;code&gt;False&lt;/code&gt; and no objects are available, the view will raise a 404 instead of displaying an empty page. By default, this is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">사용 가능한 개체가없는 경우 페이지를 표시할지 여부를 지정하는 부울입니다. 이것이 &lt;code&gt;False&lt;/code&gt; 이고 사용 가능한 개체가 없으면 빈 페이지를 표시하는 대신 404가 표시됩니다. 기본적으로이 값은 &lt;code&gt;True&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="4a14995cb9e9e469ffbd92ae1adaeb7a0ddefc88" translate="yes" xml:space="preserve">
          <source>A boolean specifying whether to display the page if no objects are available. If this is &lt;code&gt;True&lt;/code&gt; and no objects are available, the view will display an empty page instead of raising a 404.</source>
          <target state="translated">사용 가능한 개체가없는 경우 페이지를 표시할지 여부를 지정하는 부울입니다. 이것이 &lt;code&gt;True&lt;/code&gt; 이고 사용 가능한 객체가없는 경우 , 뷰는 404를 올리는 대신 빈 페이지를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="32ee7ec130ba4f56a0c13106e721c0b1a07c8e1b" translate="yes" xml:space="preserve">
          <source>A boolean specifying whether to include &amp;ldquo;future&amp;rdquo; objects on this page, where &amp;ldquo;future&amp;rdquo; means objects in which the field specified in &lt;code&gt;date_field&lt;/code&gt; is greater than the current date/time. By default, this is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">이 페이지에 &quot;미래&quot;개체를 포함할지 여부를 지정하는 부울입니다. 여기서 &quot;미래&quot;는 &lt;code&gt;date_field&lt;/code&gt; 에 지정된 필드 가 현재 날짜 / 시간보다 큰 개체를 의미합니다 . 기본적으로 이것은 &lt;code&gt;False&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8742f469eb3b0bd2e36903b0bff1e16c2508bce0" translate="yes" xml:space="preserve">
          <source>A boolean specifying whether to retrieve the full list of objects for this year and pass those to the template. If &lt;code&gt;True&lt;/code&gt;, the list of objects will be made available to the context. If &lt;code&gt;False&lt;/code&gt;, the &lt;code&gt;None&lt;/code&gt; queryset will be used as the object list. By default, this is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">올해의 전체 객체 목록을 검색하여 템플릿으로 전달할지 여부를 지정하는 부울입니다. &lt;code&gt;True&lt;/code&gt; 인 경우 개체 목록을 컨텍스트에서 사용할 수있게됩니다. 경우 &lt;code&gt;False&lt;/code&gt; 의 &lt;code&gt;None&lt;/code&gt; 의 검색어는 개체 목록으로 사용됩니다. 기본적으로 이것은 &lt;code&gt;False&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="00c4c64ddc7a970a206ec2f25203dbfaea1aea75" translate="yes" xml:space="preserve">
          <source>A boolean that specifies if datetimes will be timezone-aware by default or not. If this is set to &lt;code&gt;True&lt;/code&gt;, Django will use timezone-aware datetimes internally. Otherwise, Django will use naive datetimes in local time.</source>
          <target state="translated">날짜 시간이 기본적으로 시간대를 인식하는지 여부를 지정하는 부울입니다. 이것이 &lt;code&gt;True&lt;/code&gt; 로 설정 되면 Django는 내부적으로 표준 시간대 인식 날짜 시간을 사용합니다. 그렇지 않으면 Django는 현지 시간으로 순진한 날짜 시간을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="c551acf0d1e740f3278fd07b86981f0856648aa8" translate="yes" xml:space="preserve">
          <source>A boolean that specifies if localized formatting of data will be enabled by default or not. If this is set to &lt;code&gt;True&lt;/code&gt;, e.g. Django will display numbers and dates using the format of the current locale.</source>
          <target state="translated">현지화 된 데이터 형식을 기본적으로 사용할지 여부를 지정하는 부울입니다. 이것이 &lt;code&gt;True&lt;/code&gt; 로 설정되면 Django는 현재 로케일의 형식을 사용하여 숫자와 날짜를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="a46feabfd082c1f1346fcc667e2e2da0f2b7438a" translate="yes" xml:space="preserve">
          <source>A boolean that specifies whether Django&amp;rsquo;s translation system should be enabled. This provides a way to turn it off, for performance. If this is set to &lt;code&gt;False&lt;/code&gt;, Django will make some optimizations so as not to load the translation machinery.</source>
          <target state="translated">Django의 번역 시스템을 활성화해야하는지 여부를 지정하는 부울입니다. 이것은 성능을 위해 끄는 방법을 제공합니다. 이것이 &lt;code&gt;False&lt;/code&gt; 로 설정 되면 Django는 번역 기계를로드하지 않도록 최적화를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="9e91f9adf8e2329c0554f9ba70788a6b5910b31e" translate="yes" xml:space="preserve">
          <source>A boolean that specifies whether to display numbers using a thousand separator. When &lt;a href=&quot;#std:setting-USE_L10N&quot;&gt;&lt;code&gt;USE_L10N&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;True&lt;/code&gt; and if this is also set to &lt;code&gt;True&lt;/code&gt;, Django will use the values of &lt;a href=&quot;#std:setting-THOUSAND_SEPARATOR&quot;&gt;&lt;code&gt;THOUSAND_SEPARATOR&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#std:setting-NUMBER_GROUPING&quot;&gt;&lt;code&gt;NUMBER_GROUPING&lt;/code&gt;&lt;/a&gt; to format numbers unless the locale already has an existing thousands separator. If there is a thousands separator in the locale format, it will have higher precedence and will be applied instead.</source>
          <target state="translated">천 단위 구분 기호를 사용하여 숫자를 표시할지 여부를 지정하는 부울입니다. 때 &lt;a href=&quot;#std:setting-USE_L10N&quot;&gt; &lt;code&gt;USE_L10N&lt;/code&gt; 이&lt;/a&gt; 설정되어 &lt;code&gt;True&lt;/code&gt; 이도에 설정되어있는 경우 &lt;code&gt;True&lt;/code&gt; , 장고의 값을 사용합니다 &lt;a href=&quot;#std:setting-THOUSAND_SEPARATOR&quot;&gt; &lt;code&gt;THOUSAND_SEPARATOR&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#std:setting-NUMBER_GROUPING&quot;&gt; &lt;code&gt;NUMBER_GROUPING&lt;/code&gt; 을&lt;/a&gt; 로케일은 이미 기존의 천 단위 구분을하지 않는 한 형식 번호. 로케일 형식에 천 단위 구분 기호가 있으면 우선 순위가 더 높아지고 대신 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="2461f68a463137ebf4bdc60635809222115dd5d9" translate="yes" xml:space="preserve">
          <source>A boolean that specifies whether to use the &lt;code&gt;X-Forwarded-Host&lt;/code&gt; header in preference to the &lt;code&gt;Host&lt;/code&gt; header. This should only be enabled if a proxy which sets this header is in use.</source>
          <target state="translated">부울 사용할지 여부를 지정하는 &lt;code&gt;X-Forwarded-Host&lt;/code&gt; 받는 우선 헤더 &lt;code&gt;Host&lt;/code&gt; 헤더. 이 헤더를 설정하는 프록시가 사용중인 경우에만 활성화해야합니다.</target>
        </trans-unit>
        <trans-unit id="87d78f7db1e270ebef928e30cbafc2e93769dc82" translate="yes" xml:space="preserve">
          <source>A boolean that specifies whether to use the &lt;code&gt;X-Forwarded-Port&lt;/code&gt; header in preference to the &lt;code&gt;SERVER_PORT&lt;/code&gt;&lt;code&gt;META&lt;/code&gt; variable. This should only be enabled if a proxy which sets this header is in use.</source>
          <target state="translated">&lt;code&gt;SERVER_PORT&lt;/code&gt; &lt;code&gt;META&lt;/code&gt; 변수 보다 &lt;code&gt;X-Forwarded-Port&lt;/code&gt; 헤더 를 사용할지 여부를 지정하는 부울입니다 . 이 헤더를 설정하는 프록시가 사용중인 경우에만 활성화해야합니다.</target>
        </trans-unit>
        <trans-unit id="c3d9ee18e3361eeebf850c90c9a662244ec34a2b" translate="yes" xml:space="preserve">
          <source>A boolean that turns on/off debug mode.</source>
          <target state="translated">디버그 모드를 켜거나 끄는 부울입니다.</target>
        </trans-unit>
        <trans-unit id="a04ee175cf164b5cef485d626247b02f269375e9" translate="yes" xml:space="preserve">
          <source>A boolean; &lt;code&gt;True&lt;/code&gt; if a new record was created.</source>
          <target state="translated">참이나 거짓; 새 레코드가 작성된 경우 &lt;code&gt;True&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="01e0a14c787ac636ec3774d9f9c3984e5ccb4963" translate="yes" xml:space="preserve">
          <source>A boolean; &lt;code&gt;True&lt;/code&gt; if the model is saved exactly as presented (i.e. when loading a fixture). One should not query/modify other records in the database as the database might not be in a consistent state yet.</source>
          <target state="translated">참이나 거짓; 모델이 제시된대로 정확하게 저장되면 (즉, 조명기를로드 할 때) &lt;code&gt;True&lt;/code&gt; 입니다. 데이터베이스가 아직 일관된 상태가 아니기 때문에 데이터베이스의 다른 레코드를 쿼리 / 수정해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="4eeb3d80e4f9e655bc92c6bee42d07dc9cca8a79" translate="yes" xml:space="preserve">
          <source>A boolean; &lt;code&gt;True&lt;/code&gt; if the setting is applied, &lt;code&gt;False&lt;/code&gt; if restored.</source>
          <target state="translated">참이나 거짓; 설정이 적용되면 &lt;code&gt;True&lt;/code&gt; , 복원 되면 &lt;code&gt;False&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cc81ebaad1c1da15a64557ad2e3ddf64e5629b30" translate="yes" xml:space="preserve">
          <source>A boolean; if &lt;code&gt;True&lt;/code&gt;, the command prints a warning if the set of migrations on disk don&amp;rsquo;t match the migrations in the database. A warning doesn&amp;rsquo;t prevent the command from executing. Default value is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">참이나 거짓; 경우 &lt;code&gt;True&lt;/code&gt; , 명령이 경고를 출력 디스크 마이그레이션의 세트는 데이터베이스의 마이그레이션을 일치하지 않는 경우. 경고는 명령 실행을 방해하지 않습니다. 기본값은 &lt;code&gt;False&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="61fb92c4d76b4e13eca1423faaa11671ce55eb89" translate="yes" xml:space="preserve">
          <source>A boolean; if &lt;code&gt;True&lt;/code&gt;, the entire Django project will be checked for potential problems prior to executing the command. Default value is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">참이나 거짓; 경우 &lt;code&gt;True&lt;/code&gt; , 전체 장고 프로젝트는 명령을 실행하기 전에 잠재적 인 문제를 확인됩니다. 기본값은 &lt;code&gt;True&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5fb2d4522b4aa821aadf9fabc21c55f9a16955c5" translate="yes" xml:space="preserve">
          <source>A bound form has submitted data, and hence can be used to tell if that data is valid. If an invalid bound form is rendered, it can include inline error messages telling the user what data to correct.</source>
          <target state="translated">바인드 된 양식이 데이터를 제출 했으므로 해당 데이터가 유효한지 알 수 있습니다. 유효하지 않은 바인드 된 양식이 렌더링되면 사용자에게 정정 할 데이터를 알려주는 인라인 오류 메시지가 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ab24d659ffc52da5afb8eb5b4d0a9442fb93bdf7" translate="yes" xml:space="preserve">
          <source>A bytestring does not carry any information with it about its encoding. For that reason, we have to make an assumption, and Django assumes that all bytestrings are in UTF-8.</source>
          <target state="translated">바이트 스트링은 인코딩에 관한 정보를 가지고 있지 않습니다. 따라서 Django는 모든 바이트 스트링이 UTF-8이라고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="c1bbb2c2993278b99467834e7411e6cb7889faf5" translate="yes" xml:space="preserve">
          <source>A bytestring representing the content, encoded from a string if necessary.</source>
          <target state="translated">필요한 경우 문자열에서 인코딩 된 내용을 나타내는 바이트 열.</target>
        </trans-unit>
        <trans-unit id="02f336dc74f2f7d0dddd36dd1be7348ea03cc949" translate="yes" xml:space="preserve">
          <source>A callable that accepts one argument, the model instance. For example:</source>
          <target state="translated">하나의 인수, 모델 인스턴스를 허용하는 호출 가능 항목. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6555f044aba8e98b94c68a5cf0d68affd02b8ef6" translate="yes" xml:space="preserve">
          <source>A callable that takes the value of the &lt;code&gt;CheckboxInput&lt;/code&gt; and returns &lt;code&gt;True&lt;/code&gt; if the checkbox should be checked for that value.</source>
          <target state="translated">&lt;code&gt;CheckboxInput&lt;/code&gt; 의 값을 가져와 해당 값에 대해 확인란을 선택해야하는 경우 &lt;code&gt;True&lt;/code&gt; 를 반환 하는 호출 가능 항목입니다 .</target>
        </trans-unit>
        <trans-unit id="62ca22f3cc83c0f4ff0cbe585dd795dd188ca99d" translate="yes" xml:space="preserve">
          <source>A callable, or a string representing the full Python import path to the view that should be called if none of the URL patterns match.</source>
          <target state="translated">URL 패턴이 일치하지 않는 경우 호출해야하는 뷰에 대한 전체 Python 가져 오기 경로를 나타내는 호출 가능 또는 문자열.</target>
        </trans-unit>
        <trans-unit id="29061b5bf2ecad90b54800008386b40222987e98" translate="yes" xml:space="preserve">
          <source>A callable, or a string representing the full Python import path to the view that should be called if the HTTP client has sent a request that caused an error condition and a response with a status code of 400.</source>
          <target state="translated">HTTP 클라이언트가 오류 조건 및 상태 코드 400의 응답을 유발하는 요청을 보낸 경우 호출해야하는 호출 가능 또는보기에 대한 전체 Python 가져 오기 경로를 나타내는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="8c3fdf6b55067acffa8799da89f18969befb7925" translate="yes" xml:space="preserve">
          <source>A callable, or a string representing the full Python import path to the view that should be called if the user doesn&amp;rsquo;t have the permissions required to access a resource.</source>
          <target state="translated">호출 가능 또는 뷰에 대한 전체 Python 가져 오기 경로를 나타내는 문자열로, 사용자에게 리소스에 액세스하는 데 필요한 권한이없는 경우 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="6b21a2a9f619007e6148921d3822d6491343df8a" translate="yes" xml:space="preserve">
          <source>A callable, or a string representing the full Python import path to the view that should be called in case of server errors. Server errors happen when you have runtime errors in view code.</source>
          <target state="translated">서버 오류시 호출해야하는 뷰에 대한 전체 Python 가져 오기 경로를 나타내는 호출 가능 또는 문자열. 보기 코드에서 런타임 오류가 발생하면 서버 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="676ae98433df63ff8cfab168497f1f9ef3061861" translate="yes" xml:space="preserve">
          <source>A callable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd4a0b7cdcc6383caac36ebbcffedf70bccebb26" translate="yes" xml:space="preserve">
          <source>A case insensitive, dict-like object that provides access to all HTTP-prefixed headers (plus &lt;code&gt;Content-Length&lt;/code&gt; and &lt;code&gt;Content-Type&lt;/code&gt;) from the request.</source>
          <target state="translated">요청에서 모든 HTTP 접두사 헤더 (및 &lt;code&gt;Content-Length&lt;/code&gt; 및 &lt;code&gt;Content-Type&lt;/code&gt; )에 대한 액세스를 제공하는 대소 문자를 구분하지 않는 dict-like 객체입니다 .</target>
        </trans-unit>
        <trans-unit id="238cafe77c8ee62b899bd97b4815c1ac39f0da65" translate="yes" xml:space="preserve">
          <source>A case-insensitive match. So, the query:</source>
          <target state="translated">대소 문자를 구분하지 않습니다. 따라서 쿼리 :</target>
        </trans-unit>
        <trans-unit id="1e7d9fad77fdd26299e491edc375d9d179213ad5" translate="yes" xml:space="preserve">
          <source>A change in any of those components could have unexpected consequences on the application&amp;rsquo;s behavior. Checking that it still &amp;lsquo;seems to work&amp;rsquo; could mean running through your code&amp;rsquo;s functionality with twenty different variations of your test data to make sure you haven&amp;rsquo;t broken something - not a good use of your time.</source>
          <target state="translated">이러한 구성 요소를 변경하면 응용 프로그램 동작에 예기치 않은 결과가 발생할 수 있습니다. 그것이 여전히``작동하는 것 ''인지 확인하면 20 가지의 다양한 테스트 데이터로 코드 기능을 실행하여 시간을 잘 사용하지 않고 무언가를 깨뜨리지 않았 음을 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="baab44730efc2515b4d79e67f8f95a25efc365b7" translate="yes" xml:space="preserve">
          <source>A child template might look like this:</source>
          <target state="translated">자식 템플릿은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="bc2d5697114b8f408bf3a03555eb22c3149b7cd6" translate="yes" xml:space="preserve">
          <source>A choices list looks like this:</source>
          <target state="translated">선택 목록은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="90f4e8a683cc07fcf3579b32afcf656eabd51bb4" translate="yes" xml:space="preserve">
          <source>A class attribute describing the aggregate function that will be generated. Specifically, the &lt;code&gt;function&lt;/code&gt; will be interpolated as the &lt;code&gt;function&lt;/code&gt; placeholder within &lt;a href=&quot;#django.db.models.Aggregate.template&quot;&gt;&lt;code&gt;template&lt;/code&gt;&lt;/a&gt;. Defaults to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">생성 될 집계 함수를 설명하는 클래스 속성입니다. 특히, &lt;code&gt;function&lt;/code&gt; 는 &lt;a href=&quot;#django.db.models.Aggregate.template&quot;&gt; &lt;code&gt;template&lt;/code&gt; &lt;/a&gt; 내의 &lt;code&gt;function&lt;/code&gt; 자리 표시 자로 보간됩니다 . 기본값은 &lt;code&gt;None&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="babdf2c832c2765a31ce052be9b11e05b933d791" translate="yes" xml:space="preserve">
          <source>A class attribute describing the function that will be generated. Specifically, the &lt;code&gt;function&lt;/code&gt; will be interpolated as the &lt;code&gt;function&lt;/code&gt; placeholder within &lt;a href=&quot;#django.db.models.Func.template&quot;&gt;&lt;code&gt;template&lt;/code&gt;&lt;/a&gt;. Defaults to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">생성 될 함수를 설명하는 클래스 속성입니다. 특히, &lt;code&gt;function&lt;/code&gt; 는 &lt;a href=&quot;#django.db.models.Func.template&quot;&gt; &lt;code&gt;template&lt;/code&gt; &lt;/a&gt; 내의 &lt;code&gt;function&lt;/code&gt; 자리 표시 자로 보간됩니다 . 기본값은 &lt;code&gt;None&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d5b27787423e00ba2dbc0cafb87c7192f6b2fa92" translate="yes" xml:space="preserve">
          <source>A class attribute determining whether or not this aggregate function allows passing a &lt;code&gt;distinct&lt;/code&gt; keyword argument. If set to &lt;code&gt;False&lt;/code&gt; (default), &lt;code&gt;TypeError&lt;/code&gt; is raised if &lt;code&gt;distinct=True&lt;/code&gt; is passed.</source>
          <target state="translated">이 집계 함수가 &lt;code&gt;distinct&lt;/code&gt; 키워드 인수를 전달할 수 있는지 여부를 결정하는 클래스 속성 입니다. &lt;code&gt;False&lt;/code&gt; (기본값)로 설정 하면 &lt;code&gt;distinct=True&lt;/code&gt; 가 전달 되면 &lt;code&gt;TypeError&lt;/code&gt; 가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="4f405ae1527eebfd2c7145d014f1ec21734b342a" translate="yes" xml:space="preserve">
          <source>A class attribute that denotes the character used to join the list of &lt;code&gt;expressions&lt;/code&gt; together. Defaults to &lt;code&gt;', '&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;expressions&lt;/code&gt; 목록을 결합하는 데 사용되는 문자를 나타내는 클래스 속성입니다 . 기본값은 &lt;code&gt;', '&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e0afad161373dbfbc842f9e0e80462bf83c9f5a3" translate="yes" xml:space="preserve">
          <source>A class attribute that denotes the number of arguments the function accepts. If this attribute is set and the function is called with a different number of expressions, &lt;code&gt;TypeError&lt;/code&gt; will be raised. Defaults to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">함수가 받아들이는 인수의 개수를 나타내는 클래스 속성. 이 속성이 설정되고 함수가 다른 수의 표현식으로 호출되면 &lt;code&gt;TypeError&lt;/code&gt; 가 발생합니다. 기본값은 &lt;code&gt;None&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="982066dd285a24b83c529bd6f1f183fac059cae8" translate="yes" xml:space="preserve">
          <source>A class attribute, as a format string, that describes the SQL that is generated for this aggregate. Defaults to &lt;code&gt;'%(function)s(%(distinct)s%(expressions)s)'&lt;/code&gt;.</source>
          <target state="translated">이 집계에 대해 생성 된 SQL을 설명하는 형식 문자열로서의 클래스 속성입니다. 기본값은 &lt;code&gt;'%(function)s(%(distinct)s%(expressions)s)'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="50fbb8132b9d72f0518279d48e8ef2f5c8248951" translate="yes" xml:space="preserve">
          <source>A class attribute, as a format string, that describes the SQL that is generated for this function. Defaults to &lt;code&gt;'%(function)s(%(expressions)s)'&lt;/code&gt;.</source>
          <target state="translated">이 함수에 대해 생성 된 SQL을 설명하는 형식 문자열로서의 클래스 속성입니다. 기본값은 &lt;code&gt;'%(function)s(%(expressions)s)'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="66d6b7303067f8f6ee9e12e34b28e91b56d134ee" translate="yes" xml:space="preserve">
          <source>A class implementing the &lt;a href=&quot;https://docs.python.org/3/reference/datamodel.html#descriptors&quot;&gt;descriptor protocol&lt;/a&gt; that is instantiated and assigned to the model instance attribute. The constructor must accept a single argument, the &lt;code&gt;Field&lt;/code&gt; instance. Overriding this class attribute allows for customizing the get and set behavior.</source>
          <target state="translated">인스턴스화되어 모델 인스턴스 속성에 지정된 &lt;a href=&quot;https://docs.python.org/3/reference/datamodel.html#descriptors&quot;&gt;설명자 프로토콜&lt;/a&gt; 을 구현하는 클래스 입니다. 생성자는 &lt;code&gt;Field&lt;/code&gt; 인수라는 단일 인수를 허용해야합니다 . 이 클래스 속성을 재정의하면 get 및 set 동작을 사용자 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4694b20485318e1cac3c07e942dfbded58e85114" translate="yes" xml:space="preserve">
          <source>A class that shares the primary interface of &lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt;&lt;code&gt;Site&lt;/code&gt;&lt;/a&gt; (i.e., it has &lt;code&gt;domain&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt; attributes) but gets its data from a Django &lt;a href=&quot;../request-response#django.http.HttpRequest&quot;&gt;&lt;code&gt;HttpRequest&lt;/code&gt;&lt;/a&gt; object rather than from a database.</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt; &lt;code&gt;Site&lt;/code&gt; &lt;/a&gt; 의 기본 인터페이스 (예 : &lt;code&gt;domain&lt;/code&gt; 및 &lt;code&gt;name&lt;/code&gt; 속성)를 공유하지만 데이터베이스가 아닌 Django &lt;a href=&quot;../request-response#django.http.HttpRequest&quot;&gt; &lt;code&gt;HttpRequest&lt;/code&gt; &lt;/a&gt; 객체 에서 데이터를 가져 오는 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="1e51e6c54d4d9f2bde16b23bb96dff17208c0702" translate="yes" xml:space="preserve">
          <source>A class-based view is deployed into a URL pattern using the &lt;a href=&quot;base#django.views.generic.base.View.as_view&quot;&gt;&lt;code&gt;as_view()&lt;/code&gt;&lt;/a&gt; classmethod:</source>
          <target state="translated">클래스 기반 뷰는 &lt;a href=&quot;base#django.views.generic.base.View.as_view&quot;&gt; &lt;code&gt;as_view()&lt;/code&gt; &lt;/a&gt; 사용하여 URL 패턴으로 배포됩니다 .</target>
        </trans-unit>
        <trans-unit id="4af0e0f45c320003ae4c4611a10ae97d1c5fd6a0" translate="yes" xml:space="preserve">
          <source>A classic use-case for overriding the built-in methods is if you want something to happen whenever you save an object. For example (see &lt;a href=&quot;../../ref/models/instances#django.db.models.Model.save&quot;&gt;&lt;code&gt;save()&lt;/code&gt;&lt;/a&gt; for documentation of the parameters it accepts):</source>
          <target state="translated">내장 메서드를 재정의하는 일반적인 사용 사례는 객체를 저장할 때마다 무언가를 원할 경우입니다. 예를 들어 ( 허용되는 매개 변수에 대한 문서는 &lt;a href=&quot;../../ref/models/instances#django.db.models.Model.save&quot;&gt; &lt;code&gt;save()&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 ) :</target>
        </trans-unit>
        <trans-unit id="d275918fccae188a42917b7be4d418ca72604500" translate="yes" xml:space="preserve">
          <source>A clean, elegant URL scheme is an important detail in a high-quality Web application. Django encourages beautiful URL design and doesn&amp;rsquo;t put any cruft in URLs, like &lt;code&gt;.php&lt;/code&gt; or &lt;code&gt;.asp&lt;/code&gt;.</source>
          <target state="translated">깨끗하고 우아한 URL 체계는 고품질 웹 응용 프로그램에서 중요한 세부 사항입니다. Django는 아름다운 URL 디자인을 장려하고 &lt;code&gt;.php&lt;/code&gt; 또는 &lt;code&gt;.asp&lt;/code&gt; 와 같은 URL에 흠집을 내지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="cb348debf840c65d945f09974bbb01b865f6b74e" translate="yes" xml:space="preserve">
          <source>A clean, elegant URL scheme is an important detail in a high-quality Web application. Django lets you design URLs however you want, with no framework limitations.</source>
          <target state="translated">깨끗하고 우아한 URL 체계는 고품질 웹 응용 프로그램에서 중요한 세부 사항입니다. Django를 사용하면 프레임 워크 제한없이 원하는 URL을 디자인 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="84b5d46c8bb5cab34e1c3207eea332414c0d483c" translate="yes" xml:space="preserve">
          <source>A collection of PostgreSQL specific features.</source>
          <target state="translated">PostgreSQL 관련 기능 모음입니다.</target>
        </trans-unit>
        <trans-unit id="5a3e5af517a8126d84747416c7cc9a964099aa53" translate="yes" xml:space="preserve">
          <source>A color specification follows one of the following patterns:</source>
          <target state="translated">색상 사양은 다음 패턴 중 하나를 따릅니다.</target>
        </trans-unit>
        <trans-unit id="337cbcc20b6d94f5bdda26057eabc16617fd5e14" translate="yes" xml:space="preserve">
          <source>A comment can contain any template code, invalid or not. For example:</source>
          <target state="translated">주석은 유효하지 않은지 여부에 관계없이 모든 템플릿 코드를 포함 할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="45234955321d459ec3fbd6398c56e9720483c631" translate="yes" xml:space="preserve">
          <source>A common location to put this configuration is &lt;code&gt;/etc/apache2/envvars&lt;/code&gt;.</source>
          <target state="translated">이 구성을 넣는 일반적인 위치는 &lt;code&gt;/etc/apache2/envvars&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="316c0c540c9548b8cb7f5236679d4fa6365eea80" translate="yes" xml:space="preserve">
          <source>A common need is to get a specific field value of a certain model instance. To achieve that, use &lt;code&gt;values_list()&lt;/code&gt; followed by a &lt;code&gt;get()&lt;/code&gt; call:</source>
          <target state="translated">공통적으로 필요한 것은 특정 모델 인스턴스의 특정 필드 값을 얻는 것입니다. 이를 위해서는 &lt;code&gt;values_list()&lt;/code&gt; 다음에 &lt;code&gt;get()&lt;/code&gt; 호출을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="9c2cbf6dbdb07fe40ccbfe9e49c93eeb2ef71684" translate="yes" xml:space="preserve">
          <source>A common need when working on a Django project is the possibility to obtain URLs in their final forms either for embedding in generated content (views and assets URLs, URLs shown to the user, etc.) or for handling of the navigation flow on the server side (redirections, etc.)</source>
          <target state="translated">Django 프로젝트에서 작업 할 때 공통적으로 필요한 것은 생성 된 컨텐츠 (보기 및 자산 URL, 사용자에게 표시되는 URL 등)에 임베드하거나 서버에서 탐색 플로우를 처리하기 위해 최종 양식으로 URL을 얻을 수 있다는 것입니다. 측면 (리디렉션 등)</target>
        </trans-unit>
        <trans-unit id="0bdaa0244c491a51a9d6e0c6fd7f6694c73568cc" translate="yes" xml:space="preserve">
          <source>A common paradigm for optimizing performance in database systems is the use of &lt;a href=&quot;https://en.wikipedia.org/wiki/Tablespace&quot;&gt;tablespaces&lt;/a&gt; to organize disk layout.</source>
          <target state="translated">데이터베이스 시스템에서 성능을 최적화하는 일반적인 패러다임은 &lt;a href=&quot;https://en.wikipedia.org/wiki/Tablespace&quot;&gt;테이블 스페이스&lt;/a&gt; 를 사용 하여 디스크 레이아웃을 구성 하는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="53005c42989104b0ac53d2a653c80c6422689f2f" translate="yes" xml:space="preserve">
          <source>A common practice is a &lt;em&gt;tests&lt;/em&gt; directory next to the application code, with the following structure:</source>
          <target state="translated">일반적인 방법은 응용 프로그램 코드 옆에 다음과 같은 구조 의 &lt;em&gt;테스트&lt;/em&gt; 디렉토리입니다.</target>
        </trans-unit>
        <trans-unit id="ec3a32e12ce5b021485d492b89deda621dd8ea91" translate="yes" xml:space="preserve">
          <source>A common task for web applications is to search some data in the database with user input. In a simple case, this could be filtering a list of objects by a category. A more complex use case might require searching with weighting, categorization, highlighting, multiple languages, and so on. This document explains some of the possible use cases and the tools you can use.</source>
          <target state="translated">웹 응용 프로그램의 일반적인 작업은 사용자 입력으로 데이터베이스의 일부 데이터를 검색하는 것입니다. 간단한 경우에는 범주별로 개체 목록을 필터링 할 수 있습니다. 보다 복잡한 사용 사례는 가중치, 분류, 강조 표시, 여러 언어 등으로 검색해야 할 수 있습니다. 이 문서에서는 사용 가능한 일부 사례와 사용할 수있는 도구에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="5b473ac57922bc5644571ec199b72a5fd2ac27ad" translate="yes" xml:space="preserve">
          <source>A common task we might perform with a model like this is to update an article&amp;rsquo;s status from &amp;ldquo;draft&amp;rdquo; to &amp;ldquo;published&amp;rdquo;. We could easily do this in the admin one article at a time, but if we wanted to bulk-publish a group of articles, it&amp;rsquo;d be tedious. So, let&amp;rsquo;s write an action that lets us change an article&amp;rsquo;s status to &amp;ldquo;published.&amp;rdquo;</source>
          <target state="translated">이와 같은 모델로 수행 할 수있는 일반적인 작업은 기사의 상태를 &quot;초안&quot;에서 &quot;게시 됨&quot;으로 업데이트하는 것입니다. 한 번에 한 기사 씩 관리자가 쉽게 할 수 있지만 기사 그룹을 대량 게시하려면 지루할 것입니다. 기사의 상태를 &quot;게시 됨&quot;으로 변경할 수있는 작업을 작성해 봅시다.</target>
        </trans-unit>
        <trans-unit id="2fdc02f231f5ce92d26ea732f49d75af9a48d066" translate="yes" xml:space="preserve">
          <source>A common use case for admin actions is the bulk updating of a model. Imagine a news application with an &lt;code&gt;Article&lt;/code&gt; model:</source>
          <target state="translated">관리자 작업의 일반적인 사용 사례는 모델의 대량 업데이트입니다. &lt;code&gt;Article&lt;/code&gt; 모델 로 뉴스 애플리케이션을 상상해보십시오 .</target>
        </trans-unit>
        <trans-unit id="c9b9d106bbde84d2aa9192d4642041c9991db3f9" translate="yes" xml:space="preserve">
          <source>A common use is to allow a JavaScript template layer that collides with Django&amp;rsquo;s syntax. For example:</source>
          <target state="translated">일반적인 용도는 Django의 구문과 충돌하는 JavaScript 템플릿 레이어를 허용하는 것입니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f70e0cda6687685f49511ae6d691e17131660772" translate="yes" xml:space="preserve">
          <source>A common way to handle transactions on the web is to wrap each request in a transaction. Set &lt;a href=&quot;../../ref/settings#std:setting-DATABASE-ATOMIC_REQUESTS&quot;&gt;&lt;code&gt;ATOMIC_REQUESTS&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;True&lt;/code&gt; in the configuration of each database for which you want to enable this behavior.</source>
          <target state="translated">웹에서 트랜잭션을 처리하는 일반적인 방법은 각 요청을 트랜잭션으로 래핑하는 것입니다. 설정 &lt;a href=&quot;../../ref/settings#std:setting-DATABASE-ATOMIC_REQUESTS&quot;&gt; &lt;code&gt;ATOMIC_REQUESTS&lt;/code&gt; &lt;/a&gt; 에 &lt;code&gt;True&lt;/code&gt; 각 데이터베이스의 구성은하는이 동작을 가능하게합니다.</target>
        </trans-unit>
        <trans-unit id="3ed0dd811f965f65ab104db6cb725d6b62acaa57" translate="yes" xml:space="preserve">
          <source>A common way to use full text search is to search a single term against a single column in the database. For example:</source>
          <target state="translated">전체 텍스트 검색을 사용하는 일반적인 방법은 데이터베이스의 단일 열에 대해 단일 용어를 검색하는 것입니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2deffdd451a967d07377277a37e6f23f1d186cac" translate="yes" xml:space="preserve">
          <source>A complete list of all possible &lt;code&gt;Meta&lt;/code&gt; options can be found in the &lt;a href=&quot;../../ref/models/options&quot;&gt;model option reference&lt;/a&gt;.</source>
          <target state="translated">가능한 모든 &lt;code&gt;Meta&lt;/code&gt; 옵션 의 전체 목록은 &lt;a href=&quot;../../ref/models/options&quot;&gt;모델 옵션 참조&lt;/a&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c332094b21d654b91bfdaad73b2e160e986914c1" translate="yes" xml:space="preserve">
          <source>A complex example</source>
          <target state="translated">복잡한 예</target>
        </trans-unit>
        <trans-unit id="2352e2c1eda756cf6cd336fa7ffd9e3ef42578c2" translate="yes" xml:space="preserve">
          <source>A comprehensive test suite should use a combination of both test types.</source>
          <target state="translated">포괄적 인 테스트 스위트는 두 가지 테스트 유형의 조합을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="25719a8edcfc8db2faf1ce119f338348e6d191dd" translate="yes" xml:space="preserve">
          <source>A configurable password hashing system</source>
          <target state="translated">구성 가능한 비밀번호 해싱 시스템</target>
        </trans-unit>
        <trans-unit id="7fb795db67026fc1535de08686c6460b9a7ee494" translate="yes" xml:space="preserve">
          <source>A connection object to the database. A useful attribute of the connection is &lt;code&gt;alias&lt;/code&gt; which can be used to determine the name of the database being accessed.</source>
          <target state="translated">데이터베이스에 대한 연결 개체 연결의 유용한 속성은 액세스되는 데이터베이스의 이름을 판별하는 데 사용할 수있는 &lt;code&gt;alias&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f6aaf1524477d627a2388b078e1c8c133c7e67bd" translate="yes" xml:space="preserve">
          <source>A context processor has a simple interface: It&amp;rsquo;s a Python function that takes one argument, an &lt;a href=&quot;../request-response#django.http.HttpRequest&quot;&gt;&lt;code&gt;HttpRequest&lt;/code&gt;&lt;/a&gt; object, and returns a dictionary that gets added to the template context. Each context processor &lt;em&gt;must&lt;/em&gt; return a dictionary.</source>
          <target state="translated">컨텍스트 프로세서에는 간단한 인터페이스가 있습니다. 하나의 인수 인 &lt;a href=&quot;../request-response#django.http.HttpRequest&quot;&gt; &lt;code&gt;HttpRequest&lt;/code&gt; &lt;/a&gt; 객체를 가져 와서 템플릿 컨텍스트에 추가되는 사전을 반환하는 Python 함수입니다 . 각 컨텍스트 프로세서 &lt;em&gt;는&lt;/em&gt; 사전을 반환 &lt;em&gt;해야합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="3feea57561d748b5b86ada0217f9755536e3720b" translate="yes" xml:space="preserve">
          <source>A convenience method for creating an object and saving it all in one step. Thus:</source>
          <target state="translated">객체를 생성하고 한 번에 모두 저장하는 편리한 방법입니다. 그러므로:</target>
        </trans-unit>
        <trans-unit id="f08e753196e025ea3b87d5a357f3b39cfe26d0a6" translate="yes" xml:space="preserve">
          <source>A convenience method for looking up an object with the given &lt;code&gt;kwargs&lt;/code&gt; (may be empty if your model has defaults for all fields), creating one if necessary.</source>
          <target state="translated">주어진 &lt;code&gt;kwargs&lt;/code&gt; 로 객체를 찾는 편리한 방법 (모델에 모든 필드에 대한 기본값이있는 경우 비어있을 수 있음), 필요한 경우 하나를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="974dc37962bf4eb86cede858138ac99b48a90bce" translate="yes" xml:space="preserve">
          <source>A convenience method for updating an object with the given &lt;code&gt;kwargs&lt;/code&gt;, creating a new one if necessary. The &lt;code&gt;defaults&lt;/code&gt; is a dictionary of (field, value) pairs used to update the object. The values in &lt;code&gt;defaults&lt;/code&gt; can be callables.</source>
          <target state="translated">주어진 &lt;code&gt;kwargs&lt;/code&gt; 로 객체를 업데이트하여 필요한 경우 새 객체를 작성하는 편리한 방법입니다 . &lt;code&gt;defaults&lt;/code&gt; 객체를 업데이트하는 데 사용 (필드 값) 쌍의 사전이다. &lt;code&gt;defaults&lt;/code&gt; 의 값은 호출 가능할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="74f71ad9042cbe1f6330b86786bf3ffa239e59a3" translate="yes" xml:space="preserve">
          <source>A convenient trick is to specify default parameters for your views&amp;rsquo; arguments. Here&amp;rsquo;s an example URLconf and view:</source>
          <target state="translated">편리한 트릭은 뷰의 인수에 기본 매개 변수를 지정하는 것입니다. 다음은 URLconf 및보기의 예입니다.</target>
        </trans-unit>
        <trans-unit id="a29d24b824c6a1b47ac30f49b6bcbdb5e08ac31f" translate="yes" xml:space="preserve">
          <source>A conventional place for an application&amp;rsquo;s tests is in the application&amp;rsquo;s &lt;code&gt;tests.py&lt;/code&gt; file; the testing system will automatically find tests in any file whose name begins with &lt;code&gt;test&lt;/code&gt;.</source>
          <target state="translated">응용 프로그램 테스트의 일반적인 위치는 응용 프로그램의 &lt;code&gt;tests.py&lt;/code&gt; 파일에 있습니다. 테스트 시스템은 이름이 &lt;code&gt;test&lt;/code&gt; 로 시작하는 파일에서 자동으로 테스트를 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="b9dd783b4309ac1b17cbd2f80930d41e9a51da95" translate="yes" xml:space="preserve">
          <source>A converter is a class that includes the following:</source>
          <target state="translated">변환기는 다음을 포함하는 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="1c133dadd62e3597dfa21cdf65a61a2c70bb63d7" translate="yes" xml:space="preserve">
          <source>A couple of tips to remember when writing your own template tags and filters:</source>
          <target state="translated">자신 만의 템플릿 태그 및 필터를 작성할 때 기억해야 할 몇 가지 팁 :</target>
        </trans-unit>
        <trans-unit id="d4e28cf71beb0a24e1ec60f36521b2dec9cfec23" translate="yes" xml:space="preserve">
          <source>A custom &lt;code&gt;Manager&lt;/code&gt; method can return anything you want. It doesn&amp;rsquo;t have to return a &lt;code&gt;QuerySet&lt;/code&gt;.</source>
          <target state="translated">사용자 정의 &lt;code&gt;Manager&lt;/code&gt; 메소드는 원하는 것을 리턴 할 수 있습니다. &lt;code&gt;QuerySet&lt;/code&gt; 을 반환 할 필요는 없습니다 .</target>
        </trans-unit>
        <trans-unit id="70f513fea37e711c3530f691bd860ab4f375b4bf" translate="yes" xml:space="preserve">
          <source>A custom form field can override &lt;code&gt;get_bound_field()&lt;/code&gt;:</source>
          <target state="translated">사용자 정의 양식 필드는 &lt;code&gt;get_bound_field()&lt;/code&gt; 대체 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5ca858bf2933ccfdb235bfc493cc8172575d8503" translate="yes" xml:space="preserve">
          <source>A data structure containing configuration information. The contents of this data structure will be passed as the argument to the configuration method described in &lt;a href=&quot;#std:setting-LOGGING_CONFIG&quot;&gt;&lt;code&gt;LOGGING_CONFIG&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">구성 정보를 포함하는 데이터 구조. 이 데이터 구조의 내용은 &lt;a href=&quot;#std:setting-LOGGING_CONFIG&quot;&gt; &lt;code&gt;LOGGING_CONFIG&lt;/code&gt; 에&lt;/a&gt; 설명 된 구성 방법에 대한 인수로 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="4942cfc2dcf97b8c0fdaf92b05e70745453774d2" translate="yes" xml:space="preserve">
          <source>A database Router is a class that provides up to four methods:</source>
          <target state="translated">데이터베이스 라우터는 최대 4 가지 방법을 제공하는 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="78db710534e31ad465dbe7a6defcaef2c845fe67" translate="yes" xml:space="preserve">
          <source>A database index is automatically created on the &lt;code&gt;ForeignKey&lt;/code&gt;. You can disable this by setting &lt;a href=&quot;#django.db.models.Field.db_index&quot;&gt;&lt;code&gt;db_index&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;False&lt;/code&gt;. You may want to avoid the overhead of an index if you are creating a foreign key for consistency rather than joins, or if you will be creating an alternative index like a partial or multiple column index.</source>
          <target state="translated">&lt;code&gt;ForeignKey&lt;/code&gt; 에 데이터베이스 인덱스가 자동으로 생성됩니다 . &lt;a href=&quot;#django.db.models.Field.db_index&quot;&gt; &lt;code&gt;db_index&lt;/code&gt; &lt;/a&gt; 를 &lt;code&gt;False&lt;/code&gt; 로 설정 하여 이를 비활성화 할 수 있습니다 . 조인이 아닌 일관성을 위해 외래 키를 만들거나 부분 또는 여러 열 인덱스와 같은 대체 인덱스를 만드는 경우 인덱스 오버 헤드를 피할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="076f08585dd05fb4a041b3deab2f1605b714ff9f" translate="yes" xml:space="preserve">
          <source>A database&amp;rsquo;s more advanced comparison functions</source>
          <target state="translated">데이터베이스의 고급 비교 기능</target>
        </trans-unit>
        <trans-unit id="bb43a51237ac1096b1ad00813c1def0e57035884" translate="yes" xml:space="preserve">
          <source>A date and time, represented in Python by a &lt;code&gt;datetime.datetime&lt;/code&gt; instance. Takes the same extra arguments as &lt;a href=&quot;#django.db.models.DateField&quot;&gt;&lt;code&gt;DateField&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">파이썬에서 &lt;code&gt;datetime.datetime&lt;/code&gt; 인스턴스로 표시되는 날짜 및 시간 입니다. &lt;a href=&quot;#django.db.models.DateField&quot;&gt; &lt;code&gt;DateField&lt;/code&gt; &lt;/a&gt; 와 동일한 추가 인수를 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="53d57e770f522c72d89b0b5c83718df7abf01fe3" translate="yes" xml:space="preserve">
          <source>A date, represented in Python by a &lt;code&gt;datetime.date&lt;/code&gt; instance. Has a few extra, optional arguments:</source>
          <target state="translated">&lt;code&gt;datetime.date&lt;/code&gt; 인스턴스 로 Python으로 표시되는 날짜 입니다. 몇 가지 추가 옵션 인수가 있습니다.</target>
        </trans-unit>
        <trans-unit id="36d1a6e80d1050bd86c3cdd3ab8a4b8101683c7b" translate="yes" xml:space="preserve">
          <source>A datetime designating when the account was created. Is set to the current date/time by default when the account is created.</source>
          <target state="translated">계정 생성 시점을 지정하는 날짜 / 시간입니다. 계정을 만들 때 기본적으로 현재 날짜 / 시간으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="17ba943b87379d0091a8368ace6e0e0e328dde90" translate="yes" xml:space="preserve">
          <source>A datetime designating when the session expires.</source>
          <target state="translated">세션이 만료되는 날짜를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="58b486e40083fa507897450ee962355524307cf6" translate="yes" xml:space="preserve">
          <source>A datetime of the user&amp;rsquo;s last login.</source>
          <target state="translated">사용자의 마지막 로그인 날짜입니다.</target>
        </trans-unit>
        <trans-unit id="a1e2a6ac4243de3d2470e90626de26ab1796f386" translate="yes" xml:space="preserve">
          <source>A datetime represents a &lt;strong&gt;point in time&lt;/strong&gt;. It&amp;rsquo;s absolute: it doesn&amp;rsquo;t depend on anything. On the contrary, a date is a &lt;strong&gt;calendaring concept&lt;/strong&gt;. It&amp;rsquo;s a period of time whose bounds depend on the time zone in which the date is considered. As you can see, these two concepts are fundamentally different, and converting a datetime to a date isn&amp;rsquo;t a deterministic operation.</source>
          <target state="translated">날짜 시간은 특정 &lt;strong&gt;시점을&lt;/strong&gt; 나타냅니다 . 그것은 절대적입니다 : 그것은 아무것도 의존하지 않습니다. 반대로 날짜는 &lt;strong&gt;달력 개념&lt;/strong&gt; 입니다. 기간은 날짜가 고려되는 시간대에 따라 다릅니다. 보시다시피이 두 개념은 근본적으로 다르며 날짜 시간을 날짜로 변환하는 것이 결정적인 작업이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="277af4204e2a42218c53107f7bf76f7dbeb1c363" translate="yes" xml:space="preserve">
          <source>A day archive page showing all objects for &lt;em&gt;today&lt;/em&gt;. This is exactly the same as &lt;a href=&quot;#django.views.generic.dates.DayArchiveView&quot;&gt;&lt;code&gt;django.views.generic.dates.DayArchiveView&lt;/code&gt;&lt;/a&gt;, except today&amp;rsquo;s date is used instead of the &lt;code&gt;year&lt;/code&gt;/&lt;code&gt;month&lt;/code&gt;/&lt;code&gt;day&lt;/code&gt; arguments.</source>
          <target state="translated">&lt;em&gt;오늘의&lt;/em&gt; 모든 객체를 보여주는 하루 보관 페이지 . 이것은 &lt;code&gt;year&lt;/code&gt; / &lt;code&gt;month&lt;/code&gt; / &lt;code&gt;day&lt;/code&gt; 인수 대신 오늘 날짜가 사용된다는 점을 제외하면 &lt;a href=&quot;#django.views.generic.dates.DayArchiveView&quot;&gt; &lt;code&gt;django.views.generic.dates.DayArchiveView&lt;/code&gt; &lt;/a&gt; 와 정확히 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="5d29533eb100ff8078cb54cc2851de88627ee291" translate="yes" xml:space="preserve">
          <source>A day archive page showing all objects in a given day. Days in the future throw a 404 error, regardless of whether any objects exist for future days, unless you set &lt;code&gt;allow_future&lt;/code&gt; to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">특정 날짜의 모든 개체를 표시하는 요일 보관 페이지입니다. &lt;code&gt;allow_future&lt;/code&gt; 를 &lt;code&gt;True&lt;/code&gt; 로 설정하지 않으면 미래의 개체가 미래의 개체에 관계없이 미래에 404 오류가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="bed08cebc15af932d2b2920a5c6a7c098fc61395" translate="yes" xml:space="preserve">
          <source>A default &lt;code&gt;incomplete&lt;/code&gt; error message can be defined on the &lt;a href=&quot;#django.forms.MultiValueField&quot;&gt;&lt;code&gt;MultiValueField&lt;/code&gt;&lt;/a&gt; subclass, or different messages can be defined on each individual field. For example:</source>
          <target state="translated">기본 &lt;code&gt;incomplete&lt;/code&gt; 오류 메시지는 &lt;a href=&quot;#django.forms.MultiValueField&quot;&gt; &lt;code&gt;MultiValueField&lt;/code&gt; &lt;/a&gt; 서브 클래스에서 정의되거나 각 개별 필드에서 다른 메시지가 정의 될 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="df6c25b710325a5b2c2a3cd43282e57872105926" translate="yes" xml:space="preserve">
          <source>A dict of keyword arguments.</source>
          <target state="translated">키워드 인수의 사전.</target>
        </trans-unit>
        <trans-unit id="b76a5305c8f6279900d6c17b443c714a1023fc12" translate="yes" xml:space="preserve">
          <source>A dictionary containing HTML attributes to be set on the rendered widget.</source>
          <target state="translated">렌더링 된 위젯에서 설정할 HTML 속성이 포함 된 사전입니다.</target>
        </trans-unit>
        <trans-unit id="109deb8f7b5af28c1d1c5fb549a2c76481592ff3" translate="yes" xml:space="preserve">
          <source>A dictionary containing all available HTTP headers. Available headers depend on the client and server, but here are some examples:</source>
          <target state="translated">사용 가능한 모든 HTTP 헤더가 포함 된 사전입니다. 사용 가능한 헤더는 클라이언트와 서버에 따라 다르지만 다음은 몇 가지 예입니다.</target>
        </trans-unit>
        <trans-unit id="291ed541dcdb0846da10c10f3ac630e741eca15a" translate="yes" xml:space="preserve">
          <source>A dictionary containing all cookies. Keys and values are strings.</source>
          <target state="translated">모든 쿠키를 포함하는 사전. 키와 값은 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="c094dfdfb89e3d2390d43f655b5673ad56df905b" translate="yes" xml:space="preserve">
          <source>A dictionary containing extra parameters passed to the &lt;code&gt;content-type&lt;/code&gt; header. This is typically provided by services, such as Google App Engine, that intercept and handle file uploads on your behalf. As a result your handler may not receive the uploaded file content, but instead a URL or other pointer to the file. (see &lt;a href=&quot;https://www.ietf.org/rfc/rfc2388.txt&quot;&gt;RFC 2388&lt;/a&gt; section 5.3).</source>
          <target state="translated">&lt;code&gt;content-type&lt;/code&gt; 헤더에 전달 된 추가 매개 변수를 포함하는 사전 입니다. 이는 일반적으로 사용자를 대신하여 파일 업로드를 가로 채고 처리하는 Google App Engine과 같은 서비스에서 제공합니다. 결과적으로 핸들러는 업로드 된 파일 컨텐츠를 수신하지 않고 대신 URL 또는 파일에 대한 다른 포인터를 수신 할 수 있습니다. ( &lt;a href=&quot;https://www.ietf.org/rfc/rfc2388.txt&quot;&gt;RFC 2388&lt;/a&gt; 섹션 5.3 참조 ).</target>
        </trans-unit>
        <trans-unit id="0ae41a1a44cd2caa6d118ba80134bf2b4a5c8286" translate="yes" xml:space="preserve">
          <source>A dictionary containing initial data for the form.</source>
          <target state="translated">양식의 초기 데이터가 포함 된 사전입니다.</target>
        </trans-unit>
        <trans-unit id="36ff1554b358586e7fb1fc7379f8467bc20cae45" translate="yes" xml:space="preserve">
          <source>A dictionary containing the settings for all caches to be used with Django. It is a nested dictionary whose contents maps cache aliases to a dictionary containing the options for an individual cache.</source>
          <target state="translated">Django와 함께 사용할 모든 캐시에 대한 설정을 포함하는 사전. 컨텐츠가 캐시 별명을 개별 캐시에 대한 옵션을 포함하는 사전에 맵핑하는 중첩 된 사전입니다.</target>
        </trans-unit>
        <trans-unit id="7681b2f866c2ed9b55f0b0f97762938345bb6441" translate="yes" xml:space="preserve">
          <source>A dictionary containing the settings for all databases to be used with Django. It is a nested dictionary whose contents map a database alias to a dictionary containing the options for an individual database.</source>
          <target state="translated">Django와 함께 사용할 모든 데이터베이스의 설정이 포함 된 사전입니다. 내용이 개별 데이터베이스에 대한 옵션을 포함하는 사전에 데이터베이스 별명을 맵핑하는 중첩 된 사전입니다.</target>
        </trans-unit>
        <trans-unit id="d2d0896f976a748dc1483b150ac6dd2f7b73acee" translate="yes" xml:space="preserve">
          <source>A dictionary describing the CSS files required for various forms of output media.</source>
          <target state="translated">다양한 형태의 출력 매체에 필요한 CSS 파일을 설명하는 사전.</target>
        </trans-unit>
        <trans-unit id="6aaa8184e84f624a22239c79ea7b2a6c694e0306" translate="yes" xml:space="preserve">
          <source>A dictionary mapping &lt;code&gt;&quot;app_label.model_name&quot;&lt;/code&gt; strings to functions that take a model object and return its URL. This is a way of inserting or overriding &lt;code&gt;get_absolute_url()&lt;/code&gt; methods on a per-installation basis. Example:</source>
          <target state="translated">&lt;code&gt;&quot;app_label.model_name&quot;&lt;/code&gt; 문자열을 모델 객체를 가져와 해당 URL을 반환하는 함수에 매핑하는 사전 입니다. 이는 설치마다 &lt;code&gt;get_absolute_url()&lt;/code&gt; 메소드를 삽입하거나 대체하는 방법입니다 . 예:</target>
        </trans-unit>
        <trans-unit id="78ab3e0226aada5942dbc12414aab4fb72acf251" translate="yes" xml:space="preserve">
          <source>A dictionary of key/value parameters included in the &lt;code&gt;CONTENT_TYPE&lt;/code&gt; header.</source>
          <target state="translated">&lt;code&gt;CONTENT_TYPE&lt;/code&gt; 헤더에 포함 된 키 / 값 매개 변수 사전입니다 .</target>
        </trans-unit>
        <trans-unit id="207c14aeb06c85aa5d3cf7d201aff4d7c42f9bf2" translate="yes" xml:space="preserve">
          <source>A dictionary of keyword arguments containing the user credentials that were passed to &lt;a href=&quot;../../topics/auth/default#django.contrib.auth.authenticate&quot;&gt;&lt;code&gt;authenticate()&lt;/code&gt;&lt;/a&gt; or your own custom authentication backend. Credentials matching a set of &amp;lsquo;sensitive&amp;rsquo; patterns, (including password) will not be sent in the clear as part of the signal.</source>
          <target state="translated">&lt;a href=&quot;../../topics/auth/default#django.contrib.auth.authenticate&quot;&gt; &lt;code&gt;authenticate()&lt;/code&gt; &lt;/a&gt; 또는 사용자 정의 인증 백엔드 로 전달 된 사용자 신임 정보를 포함하는 키워드 인수 사전입니다 . '민감한'패턴 세트 (비밀번호 포함)와 일치하는 자격 증명은 신호의 일부로 명확하게 전송되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6aeacb45120d65633ad89f769d3350c8f64925c7" translate="yes" xml:space="preserve">
          <source>A dictionary of keyword arguments passed to &lt;code&gt;__init__()&lt;/code&gt;.</source>
          <target state="translated">키워드 인수 사전이 &lt;code&gt;__init__()&lt;/code&gt; 전달되었습니다 .</target>
        </trans-unit>
        <trans-unit id="3ebf8ab97dc97fd81f273480923066fdc6dc70ee" translate="yes" xml:space="preserve">
          <source>A dictionary of modules containing serializer definitions (provided as strings), keyed by a string identifier for that serialization type. For example, to define a YAML serializer, use:</source>
          <target state="translated">직렬화 기 정의 (문자열로 제공)를 포함하는 모듈의 사전으로, 해당 직렬화 유형의 문자열 식별자로 키가 지정됩니다. 예를 들어 YAML 시리얼 라이저를 정의하려면 다음을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="a4b6446520b1dc87b147af7174a3fd742aefbb42" translate="yes" xml:space="preserve">
          <source>A dictionary of settings for test databases; for more details about the creation and use of test databases, see &lt;a href=&quot;../topics/testing/overview#the-test-database&quot;&gt;The test database&lt;/a&gt;.</source>
          <target state="translated">테스트 데이터베이스에 대한 설정 사전; 생성 및 테스트 데이터베이스의 사용에 대한 자세한 내용을 참조하십시오 &lt;a href=&quot;../topics/testing/overview#the-test-database&quot;&gt;테스트 데이터베이스를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0df8b48cc17109c63a49c3e2b90b54de7e031216" translate="yes" xml:space="preserve">
          <source>A dictionary of values to add to the template context. By default, this is an empty dictionary. If a value in the dictionary is callable, the view will call it just before rendering the template.</source>
          <target state="translated">템플릿 컨텍스트에 추가 할 값 사전입니다. 기본적으로 이것은 빈 사전입니다. 사전의 값을 호출 할 수 있으면보기는 템플리트를 렌더링하기 직전에 값을 호출합니다.</target>
        </trans-unit>
        <trans-unit id="6a9fbdbf94e81221031b116e87a0bd07402eacdf" translate="yes" xml:space="preserve">
          <source>A dictionary specifying the package where migration modules can be found on a per-app basis. The default value of this setting is an empty dictionary, but the default package name for migration modules is &lt;code&gt;migrations&lt;/code&gt;.</source>
          <target state="translated">앱별로 마이그레이션 모듈을 찾을 수있는 패키지를 지정하는 사전입니다. 이 설정의 기본값은 빈 사전이지만 마이그레이션 모듈의 기본 패키지 이름은 &lt;code&gt;migrations&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3bf391e3ecb3a5df8d260a95a78c9d42a6a33266" translate="yes" xml:space="preserve">
          <source>A dictionary to include in the context. This is a convenient way of specifying some context in &lt;a href=&quot;base#django.views.generic.base.View.as_view&quot;&gt;&lt;code&gt;as_view()&lt;/code&gt;&lt;/a&gt;. Example usage:</source>
          <target state="translated">컨텍스트에 포함 할 사전입니다. 이것은 &lt;a href=&quot;base#django.views.generic.base.View.as_view&quot;&gt; &lt;code&gt;as_view()&lt;/code&gt; &lt;/a&gt; 에서 일부 컨텍스트를 지정하는 편리한 방법입니다 . 사용법 예 :</target>
        </trans-unit>
        <trans-unit id="f136d3ca4d4fc1922a27f00ecbb5917220a10643" translate="yes" xml:space="preserve">
          <source>A dictionary with raster creation options. The key-value pairs of the input dictionary are passed to the driver on creation of the raster.</source>
          <target state="translated">래스터 생성 옵션이있는 사전. 입력 사전의 키-값 쌍은 래스터 생성시 드라이버로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="61e3b078aa312068ae2fedcd1f7a0447d6c9df98" translate="yes" xml:space="preserve">
          <source>A dictionary-like object containing all given HTTP GET parameters. See the &lt;a href=&quot;#django.http.QueryDict&quot;&gt;&lt;code&gt;QueryDict&lt;/code&gt;&lt;/a&gt; documentation below.</source>
          <target state="translated">주어진 모든 HTTP GET 매개 변수를 포함하는 사전과 유사한 객체입니다. 아래의 &lt;a href=&quot;#django.http.QueryDict&quot;&gt; &lt;code&gt;QueryDict&lt;/code&gt; &lt;/a&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cfccd8b374f02cc821796ef45789c1f33edd69f6" translate="yes" xml:space="preserve">
          <source>A dictionary-like object containing all given HTTP POST parameters, providing that the request contains form data. See the &lt;a href=&quot;#django.http.QueryDict&quot;&gt;&lt;code&gt;QueryDict&lt;/code&gt;&lt;/a&gt; documentation below. If you need to access raw or non-form data posted in the request, access this through the &lt;a href=&quot;#django.http.HttpRequest.body&quot;&gt;&lt;code&gt;HttpRequest.body&lt;/code&gt;&lt;/a&gt; attribute instead.</source>
          <target state="translated">주어진 모든 HTTP POST 매개 변수를 포함하는 사전과 유사한 객체로, 요청에 양식 데이터가 포함되어 있습니다. 아래의 &lt;a href=&quot;#django.http.QueryDict&quot;&gt; &lt;code&gt;QueryDict&lt;/code&gt; &lt;/a&gt; 설명서를 참조하십시오 . 요청에 게시 된 원시 또는 비 형식 데이터에 액세스해야하는 경우 대신 &lt;a href=&quot;#django.http.HttpRequest.body&quot;&gt; &lt;code&gt;HttpRequest.body&lt;/code&gt; &lt;/a&gt; 속성을 통해 액세스하십시오 .</target>
        </trans-unit>
        <trans-unit id="52b84eca5e540e5502d677fbb6788e30ea4cf25c" translate="yes" xml:space="preserve">
          <source>A dictionary-like object containing all uploaded files. Each key in &lt;code&gt;FILES&lt;/code&gt; is the &lt;code&gt;name&lt;/code&gt; from the &lt;code&gt;&amp;lt;input type=&quot;file&quot; name=&quot;&quot;&amp;gt;&lt;/code&gt;. Each value in &lt;code&gt;FILES&lt;/code&gt; is an &lt;a href=&quot;files/uploads#django.core.files.uploadedfile.UploadedFile&quot;&gt;&lt;code&gt;UploadedFile&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">업로드 된 모든 파일을 포함하는 사전과 유사한 객체입니다. 각 키 &lt;code&gt;FILES&lt;/code&gt; 은 은 IS &lt;code&gt;name&lt;/code&gt; 로부터 &lt;code&gt;&amp;lt;input type=&quot;file&quot; name=&quot;&quot;&amp;gt;&lt;/code&gt; . &lt;code&gt;FILES&lt;/code&gt; 의 각 값 은 &lt;a href=&quot;files/uploads#django.core.files.uploadedfile.UploadedFile&quot;&gt; &lt;code&gt;UploadedFile&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="48ca67a907c479600643ce46deeea13627e92856" translate="yes" xml:space="preserve">
          <source>A dictionary-like object containing session information. See the &lt;a href=&quot;../http/sessions&quot;&gt;session documentation&lt;/a&gt; for full details.</source>
          <target state="translated">세션 정보가 포함 된 사전과 유사한 객체입니다. 자세한 내용은 &lt;a href=&quot;../http/sessions&quot;&gt;세션 설명서&lt;/a&gt; 를 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="61d4721569943dd7d539a4e1d1081a89bee6ed4d" translate="yes" xml:space="preserve">
          <source>A dictionary: keys are strings corresponding to the model field, and values correspond to string field names for the OGR feature, or if the model field is a geographic then it should correspond to the OGR geometry type, e.g., &lt;code&gt;'POINT'&lt;/code&gt;, &lt;code&gt;'LINESTRING'&lt;/code&gt;, &lt;code&gt;'POLYGON'&lt;/code&gt;.</source>
          <target state="translated">사전 : 키는 모델 필드에 해당하는 문자열이며 값은 OGR 기능의 문자열 필드 이름에 해당하거나 모델 필드가 지리적 인 경우 OPOINT 지오메트리 유형 (예 : &lt;code&gt;'POINT'&lt;/code&gt; , &lt;code&gt;'LINESTRING'&lt;/code&gt; 일치해야합니다. ' , &lt;code&gt;'POLYGON'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d99e37f69ac524756998d35ba5a310972de2aba7" translate="yes" xml:space="preserve">
          <source>A dotted import path to the default admin site&amp;rsquo;s class or to a callable that returns a site instance. Defaults to &lt;code&gt;'django.contrib.admin.sites.AdminSite'&lt;/code&gt;. See &lt;a href=&quot;#overriding-default-admin-site&quot;&gt;Overriding the default admin site&lt;/a&gt; for usage.</source>
          <target state="translated">기본 관리 사이트의 클래스 또는 사이트 인스턴스를 반환하는 호출 가능 파일에 대한 점으로 구분 된 가져 오기 경로입니다. 기본값은 &lt;code&gt;'django.contrib.admin.sites.AdminSite'&lt;/code&gt; 입니다. 사용법 &lt;a href=&quot;#overriding-default-admin-site&quot;&gt;은 기본 관리 사이트 재정의를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d4bf561fa96377c9ec7679e536a17de1c8182084" translate="yes" xml:space="preserve">
          <source>A dotted path to the view function to be used when an incoming request is rejected by the &lt;a href=&quot;csrf&quot;&gt;CSRF protection&lt;/a&gt;. The function should have this signature:</source>
          <target state="translated">&lt;a href=&quot;csrf&quot;&gt;CSRF 보호에&lt;/a&gt; 의해 수신 요청이 거부 될 때 사용되는보기 기능의 점선 경로 . 이 기능에는 다음과 같은 서명이 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="dde8b2d956c0193c87e89672cffd6051546be5d9" translate="yes" xml:space="preserve">
          <source>A dynamic admin interface: it&amp;rsquo;s not just scaffolding &amp;ndash; it&amp;rsquo;s the whole house</source>
          <target state="translated">역동적 인 관리자 인터페이스 : 비계가 아니라 집 전체입니다.</target>
        </trans-unit>
        <trans-unit id="b96c8565ff3c48383b286c6f3426eb7ccdec3f6b" translate="yes" xml:space="preserve">
          <source>A failure did not occur but may be imminent</source>
          <target state="translated">실패는 발생하지 않았지만 임박했을 수 있습니다</target>
        </trans-unit>
        <trans-unit id="db3da67383bd747256207d1e9a477e999b6c840d" translate="yes" xml:space="preserve">
          <source>A few &lt;a href=&quot;../../ref/settings#settings-sessions&quot;&gt;Django settings&lt;/a&gt; give you control over session behavior:</source>
          <target state="translated">몇 가지 &lt;a href=&quot;../../ref/settings#settings-sessions&quot;&gt;장고 설정&lt;/a&gt; 을 통해 세션 동작을 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="83926b3da0c48bbcd770e3edb860dae44b3055fe" translate="yes" xml:space="preserve">
          <source>A few &lt;a href=&quot;../settings#settings-messages&quot;&gt;settings&lt;/a&gt; give you control over message behavior:</source>
          <target state="translated">몇 가지 &lt;a href=&quot;../settings#settings-messages&quot;&gt;설정&lt;/a&gt; 을 통해 메시지 동작을 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e1ad63373a4af0871323318ffc2ce45878f6e9b8" translate="yes" xml:space="preserve">
          <source>A few notes about the command-line options given above:</source>
          <target state="translated">위에 제공된 명령 줄 옵션에 대한 몇 가지 참고 사항 :</target>
        </trans-unit>
        <trans-unit id="7ecc7258edafc7066cfb23c9671462ca815f5814" translate="yes" xml:space="preserve">
          <source>A few notes about what&amp;rsquo;s going on:</source>
          <target state="translated">무슨 일이 일어나고 있는지에 대한 몇 가지 참고 사항 :</target>
        </trans-unit>
        <trans-unit id="0f381ea4d8e6953651f3973e7f3d9b5920656740" translate="yes" xml:space="preserve">
          <source>A few object methods have special purposes.</source>
          <target state="translated">몇 가지 객체 메소드에는 특별한 목적이 있습니다.</target>
        </trans-unit>
        <trans-unit id="731a5df9efd39379610688be5b802e485ff71206" translate="yes" xml:space="preserve">
          <source>A few special cases to note about &lt;code&gt;list_display&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;list_display&lt;/code&gt; 에 대해주의해야 할 몇 가지 특별한 경우가 있습니다 .</target>
        </trans-unit>
        <trans-unit id="578cc611e5531f271df1b556acd7fece07b82bf6" translate="yes" xml:space="preserve">
          <source>A few subtleties that are worth mentioning:</source>
          <target state="translated">언급 할 가치가있는 몇 가지 미묘한 점들 :</target>
        </trans-unit>
        <trans-unit id="b59fac12cbf321e58399770a97d3ccdbdbc170a4" translate="yes" xml:space="preserve">
          <source>A few suggestions</source>
          <target state="translated">몇 가지 제안</target>
        </trans-unit>
        <trans-unit id="a6349b268e78d4b13fc3439896557233514cc810" translate="yes" xml:space="preserve">
          <source>A few things to note about the &lt;code&gt;simple_tag&lt;/code&gt; helper function:</source>
          <target state="translated">&lt;code&gt;simple_tag&lt;/code&gt; 도우미 함수 에 대해 몇 가지 참고할 사항 :</target>
        </trans-unit>
        <trans-unit id="89004cf6ac2320ec5464c5118a1ceddd5d672886" translate="yes" xml:space="preserve">
          <source>A field cannot be determined from a keyword in the query parameters</source>
          <target state="translated">검색어 매개 변수의 키워드에서 필드를 확인할 수 없습니다</target>
        </trans-unit>
        <trans-unit id="e1f5d944a8425f6fd52d0e05f642b495186a80c0" translate="yes" xml:space="preserve">
          <source>A field containing either an IPv4 or an IPv6 address.</source>
          <target state="translated">IPv4 또는 IPv6 주소를 포함하는 필드입니다.</target>
        </trans-unit>
        <trans-unit id="5920b1697038c45e9f01f40988d0a69d95022215" translate="yes" xml:space="preserve">
          <source>A field for storing JSON encoded data. In Python the data is represented in its Python native format: dictionaries, lists, strings, numbers, booleans and &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">JSON 인코딩 데이터를 저장하기위한 필드입니다. Python에서 데이터는 사전, 목록, 문자열, 숫자, 부울 및 &lt;code&gt;None&lt;/code&gt; 과 같은 Python 기본 형식으로 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="40c9e2aa3e7d311c543a90501cddbaf62e4740db" translate="yes" xml:space="preserve">
          <source>A field for storing key-value pairs. The Python data type used is a &lt;code&gt;dict&lt;/code&gt;. Keys must be strings, and values may be either strings or nulls (&lt;code&gt;None&lt;/code&gt; in Python).</source>
          <target state="translated">키-값 쌍을 저장하기위한 필드입니다. 사용 된 파이썬 데이터 타입은 &lt;code&gt;dict&lt;/code&gt; 입니다. 키는 문자열이어야하며 값은 문자열 또는 null 일 수 있습니다 ( Python의 경우 &lt;code&gt;None&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="c3d09efba9cbf839f9a5238816c84832769da5e6" translate="yes" xml:space="preserve">
          <source>A field for storing lists of data. Most field types can be used, and you pass another field instance as the &lt;a href=&quot;#django.contrib.postgres.fields.ArrayField.base_field&quot;&gt;&lt;code&gt;base_field&lt;/code&gt;&lt;/a&gt;. You may also specify a &lt;a href=&quot;#django.contrib.postgres.fields.ArrayField.size&quot;&gt;&lt;code&gt;size&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;ArrayField&lt;/code&gt; can be nested to store multi-dimensional arrays.</source>
          <target state="translated">데이터 목록을 저장하는 필드입니다. 대부분의 필드 유형을 사용할 수 있으며 다른 필드 인스턴스를 &lt;a href=&quot;#django.contrib.postgres.fields.ArrayField.base_field&quot;&gt; &lt;code&gt;base_field&lt;/code&gt; &lt;/a&gt; 로 전달합니다 . &lt;a href=&quot;#django.contrib.postgres.fields.ArrayField.size&quot;&gt; &lt;code&gt;size&lt;/code&gt; &lt;/a&gt; 지정할 수도 있습니다 . 다차원 배열을 저장하기 위해 &lt;code&gt;ArrayField&lt;/code&gt; 를 중첩 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="17191887c547b702c21edbc3616002c0bc16f5af" translate="yes" xml:space="preserve">
          <source>A field for storing periods of time - modeled in Python by &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.timedelta&quot;&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt;. When used on PostgreSQL, the data type used is an &lt;code&gt;interval&lt;/code&gt; and on Oracle the data type is &lt;code&gt;INTERVAL DAY(9) TO
SECOND(6)&lt;/code&gt;. Otherwise a &lt;code&gt;bigint&lt;/code&gt; of microseconds is used.</source>
          <target state="translated">파이썬에서 &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.timedelta&quot;&gt; &lt;code&gt;timedelta&lt;/code&gt; &lt;/a&gt; 로 시간 모델링 된 기간을 저장하는 필드입니다 . PostgreSQL에서 사용되는 경우 사용 된 데이터 유형은 &lt;code&gt;interval&lt;/code&gt; 이고 Oracle에서 데이터 유형은 &lt;code&gt;INTERVAL DAY(9) TO SECOND(6)&lt;/code&gt; 입니다. 그렇지 않으면 &lt;code&gt;bigint&lt;/code&gt; 마이크로가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="7955562eb0fdeee9354c857884b141b4747c9cb7" translate="yes" xml:space="preserve">
          <source>A field for storing universally unique identifiers. Uses Python&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3/library/uuid.html#uuid.UUID&quot;&gt;&lt;code&gt;UUID&lt;/code&gt;&lt;/a&gt; class. When used on PostgreSQL, this stores in a &lt;code&gt;uuid&lt;/code&gt; datatype, otherwise in a &lt;code&gt;char(32)&lt;/code&gt;.</source>
          <target state="translated">보편적으로 고유 한 식별자를 저장하기위한 필드입니다. 파이썬의 &lt;a href=&quot;https://docs.python.org/3/library/uuid.html#uuid.UUID&quot;&gt; &lt;code&gt;UUID&lt;/code&gt; &lt;/a&gt; 클래스를 사용합니다 . PostgreSQL에서 사용될 때, 이것은 &lt;code&gt;uuid&lt;/code&gt; 데이터 타입, 그렇지 않으면 &lt;code&gt;char(32)&lt;/code&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="038153d7f09ea4288e66413fb667f1560083929e" translate="yes" xml:space="preserve">
          <source>A field in a model clashes with a field of the same name from an abstract base class</source>
          <target state="translated">모델의 필드가 추상 기본 클래스의 동일한 이름의 필드와 충돌합니다.</target>
        </trans-unit>
        <trans-unit id="5e3504873a9e8577d3a4acebfbfb7d4844580909" translate="yes" xml:space="preserve">
          <source>A field is thus a fundamental piece in different Django APIs, notably, &lt;a href=&quot;instances#django.db.models.Model&quot;&gt;&lt;code&gt;models&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;querysets&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">따라서 필드는 다른 Django API, 특히 &lt;a href=&quot;instances#django.db.models.Model&quot;&gt; &lt;code&gt;models&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;querysets&lt;/code&gt; &lt;/a&gt; 세트의 기본 부분입니다 .</target>
        </trans-unit>
        <trans-unit id="aa9683c153d5cb62a6866b670b536df201343ad0" translate="yes" xml:space="preserve">
          <source>A field name cannot be a Python reserved word, because that would result in a Python syntax error. For example:</source>
          <target state="translated">필드 이름은 Python 예약어가 될 수 없습니다. 파이썬 구문 오류가 발생하기 때문입니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a55e641f4ec5e2a4d98c9cafe794acfe8a19acd7" translate="yes" xml:space="preserve">
          <source>A field name cannot contain more than one underscore in a row, due to the way Django&amp;rsquo;s query lookup syntax works. For example:</source>
          <target state="translated">Django의 쿼리 조회 구문이 작동하는 방식으로 인해 필드 이름에 행에 둘 이상의 밑줄이 포함될 수 없습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="082b5ac5c89f2d884260e209f4db3969e9521762" translate="yes" xml:space="preserve">
          <source>A field name cannot end with an underscore, for similar reasons.</source>
          <target state="translated">비슷한 이유로 필드 이름은 밑줄로 끝날 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="10a58e0d82a28afeb23a5fa2d8830f35bee09d15" translate="yes" xml:space="preserve">
          <source>A field name is invalid</source>
          <target state="translated">필드 이름이 잘못되었습니다</target>
        </trans-unit>
        <trans-unit id="657b28d19a7bddd87ae9cf218d711ccc52d82cad" translate="yes" xml:space="preserve">
          <source>A field of the model.</source>
          <target state="translated">모델의 필드</target>
        </trans-unit>
        <trans-unit id="018737b9256729d2d442bfd37e40c43e06c0b7b0" translate="yes" xml:space="preserve">
          <source>A field to store raw binary data. It can be assigned &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#memoryview&quot;&gt;&lt;code&gt;memoryview&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">원시 이진 데이터를 저장하는 필드입니다. &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#memoryview&quot;&gt; &lt;code&gt;memoryview&lt;/code&gt; 를&lt;/a&gt; 할당 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="97f0e4737ace08b01f92457e951a026bc6dda9ea" translate="yes" xml:space="preserve">
          <source>A field validator allowing Unicode characters, in addition to &lt;code&gt;@&lt;/code&gt;, &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, and &lt;code&gt;_&lt;/code&gt;. The default validator for &lt;code&gt;User.username&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;@&lt;/code&gt; , 외에 유니 코드 문자를 허용하는 필드 검사기 &lt;code&gt;.&lt;/code&gt; , &lt;code&gt;+&lt;/code&gt; , &lt;code&gt;-&lt;/code&gt; , 그리고 &lt;code&gt;_&lt;/code&gt; . &lt;code&gt;User.username&lt;/code&gt; 의 기본 유효성 검증기입니다 .</target>
        </trans-unit>
        <trans-unit id="0e3baca1e6ef85f0995ce3b1cb1f7cd5c8dcc85c" translate="yes" xml:space="preserve">
          <source>A field validator allowing only ASCII letters and numbers, in addition to &lt;code&gt;@&lt;/code&gt;, &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, and &lt;code&gt;_&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;@&lt;/code&gt; , 외에 ASCII 문자와 숫자 만 허용하는 필드 검사기 &lt;code&gt;.&lt;/code&gt; , &lt;code&gt;+&lt;/code&gt; , &lt;code&gt;-&lt;/code&gt; , 그리고 &lt;code&gt;_&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="88cd875bbe0745b981998fb4a4d50c3294ce6598" translate="yes" xml:space="preserve">
          <source>A field which accepts JSON encoded data for a &lt;a href=&quot;fields#django.contrib.postgres.fields.JSONField&quot;&gt;&lt;code&gt;JSONField&lt;/code&gt;&lt;/a&gt;. It is represented by an HTML &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;fields#django.contrib.postgres.fields.JSONField&quot;&gt; &lt;code&gt;JSONField&lt;/code&gt; 에&lt;/a&gt; 대한 JSON 인코딩 데이터를 허용하는 필드입니다 . HTML &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; 로 표시 됩니다.</target>
        </trans-unit>
        <trans-unit id="cba6bae0f45fc490650fb240ecd81c4d047feca4" translate="yes" xml:space="preserve">
          <source>A field which accepts JSON encoded data for an &lt;a href=&quot;fields#django.contrib.postgres.fields.HStoreField&quot;&gt;&lt;code&gt;HStoreField&lt;/code&gt;&lt;/a&gt;. It casts all values (except nulls) to strings. It is represented by an HTML &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;fields#django.contrib.postgres.fields.HStoreField&quot;&gt; &lt;code&gt;HStoreField&lt;/code&gt; 에&lt;/a&gt; JSON 인코딩 데이터를 허용하는 필드입니다 . 모든 값 (널 제외)을 문자열로 캐스트합니다. HTML &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; 로 표시 됩니다.</target>
        </trans-unit>
        <trans-unit id="c00fbec5e6526d2e53db3d3fd6a3c827e8b5f571" translate="yes" xml:space="preserve">
          <source>A field which maps to an array. It is represented by an HTML &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">배열에 매핑되는 필드입니다. HTML &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 로 표시 됩니다.</target>
        </trans-unit>
        <trans-unit id="bf9cd9ecda061d02f273582851f692284850e80f" translate="yes" xml:space="preserve">
          <source>A file based GeoTiff raster is created through the following example:</source>
          <target state="translated">파일 기반 GeoTiff 래스터는 다음 예제를 통해 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="f8273c17b315bd2892b66281d785b5c490a4b3ce" translate="yes" xml:space="preserve">
          <source>A file uploaded into memory (i.e. stream-to-memory). This class is used by the &lt;a href=&quot;#django.core.files.uploadhandler.MemoryFileUploadHandler&quot;&gt;&lt;code&gt;MemoryFileUploadHandler&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">메모리에 업로드 된 파일 (예 : 스트림-투-메모리) 이 클래스는 &lt;a href=&quot;#django.core.files.uploadhandler.MemoryFileUploadHandler&quot;&gt; &lt;code&gt;MemoryFileUploadHandler&lt;/code&gt; 에&lt;/a&gt; 의해 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="b3c26a6c2705dfd3b7877d7388f9d6f84cce83fc" translate="yes" xml:space="preserve">
          <source>A file uploaded to a temporary location (i.e. stream-to-disk). This class is used by the &lt;a href=&quot;#django.core.files.uploadhandler.TemporaryFileUploadHandler&quot;&gt;&lt;code&gt;TemporaryFileUploadHandler&lt;/code&gt;&lt;/a&gt;. In addition to the methods from &lt;a href=&quot;#django.core.files.uploadedfile.UploadedFile&quot;&gt;&lt;code&gt;UploadedFile&lt;/code&gt;&lt;/a&gt;, it has one additional method:</source>
          <target state="translated">임시 위치 (즉, 디스크 스트림)에 업로드 된 파일입니다. 이 클래스는 &lt;a href=&quot;#django.core.files.uploadhandler.TemporaryFileUploadHandler&quot;&gt; &lt;code&gt;TemporaryFileUploadHandler&lt;/code&gt; 에&lt;/a&gt; 의해 사용됩니다 . &lt;a href=&quot;#django.core.files.uploadedfile.UploadedFile&quot;&gt; &lt;code&gt;UploadedFile&lt;/code&gt; &lt;/a&gt; 의 메소드 외에도 하나의 추가 메소드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="dcfc14f2715714d13f1d51be89b2f06f3df36434" translate="yes" xml:space="preserve">
          <source>A file-upload field.</source>
          <target state="translated">파일 업로드 필드</target>
        </trans-unit>
        <trans-unit id="090a573586391960f5cd3002e08114438e392108" translate="yes" xml:space="preserve">
          <source>A filter is used to provide additional control over which log records are passed from logger to handler.</source>
          <target state="translated">필터는 로거에서 핸들러로 전달되는 로그 레코드를 추가로 제어하는 ​​데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="4ba26a43e0183a250e01686d24d24c2df680030c" translate="yes" xml:space="preserve">
          <source>A final point about Memcached is that memory-based caching has a disadvantage: because the cached data is stored in memory, the data will be lost if your server crashes. Clearly, memory isn&amp;rsquo;t intended for permanent data storage, so don&amp;rsquo;t rely on memory-based caching as your only data storage. Without a doubt, &lt;em&gt;none&lt;/em&gt; of the Django caching backends should be used for permanent storage &amp;ndash; they&amp;rsquo;re all intended to be solutions for caching, not storage &amp;ndash; but we point this out here because memory-based caching is particularly temporary.</source>
          <target state="translated">Memcached의 마지막 요점은 메모리 기반 캐싱에 단점이 있다는 것입니다. 캐시 된 데이터가 메모리에 저장되므로 서버가 충돌하면 데이터가 손실됩니다. 분명히 메모리는 영구적 인 데이터 저장을위한 것이 아니기 때문에 유일한 데이터 저장 장치로 메모리 기반 캐싱에 의존하지 마십시오. 의심의 여지없이, &lt;em&gt;아무도&lt;/em&gt; 그들은 모두 캐싱하지 저장을위한 솔루션 의도하고 - - 장고 캐싱 백엔드의 영구 저장을 위해 사용되어서는 안하지만, 메모리 기반 캐싱은 특히 일시적이기 때문에 우리는 여기를 지적한다.</target>
        </trans-unit>
        <trans-unit id="8f09ae99f32b768608faadb9a63791c6081c459a" translate="yes" xml:space="preserve">
          <source>A fixed-precision decimal number, represented in Python by a &lt;a href=&quot;https://docs.python.org/3/library/decimal.html#decimal.Decimal&quot;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/a&gt; instance. It validates the input using &lt;a href=&quot;../validators#django.core.validators.DecimalValidator&quot;&gt;&lt;code&gt;DecimalValidator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Python에서 &lt;a href=&quot;https://docs.python.org/3/library/decimal.html#decimal.Decimal&quot;&gt; &lt;code&gt;Decimal&lt;/code&gt; &lt;/a&gt; 인스턴스로 표시되는 고정밀도 10 진수 입니다. &lt;a href=&quot;../validators#django.core.validators.DecimalValidator&quot;&gt; &lt;code&gt;DecimalValidator&lt;/code&gt; 를&lt;/a&gt; 사용하여 입력의 유효성을 검사합니다 .</target>
        </trans-unit>
        <trans-unit id="2ce0cd82aa06ee80c8198e4b800eff604ce34dc3" translate="yes" xml:space="preserve">
          <source>A fixture is a collection of data that Django knows how to import into a database. For example, if your site has user accounts, you might set up a fixture of fake user accounts in order to populate your database during tests.</source>
          <target state="translated">조명기는 Django가 데이터베이스로 가져 오는 방법을 알고있는 데이터 모음입니다. 예를 들어, 사이트에 사용자 계정이있는 경우 테스트 중에 데이터베이스를 채우기 위해 가짜 사용자 계정을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b4098070d1d835d572c912e1aea89d1013e0bfb7" translate="yes" xml:space="preserve">
          <source>A fixture is a collection of data that Django knows how to import into a database. The most straightforward way of creating a fixture if you&amp;rsquo;ve already got some data is to use the &lt;a href=&quot;../ref/django-admin#django-admin-dumpdata&quot;&gt;&lt;code&gt;manage.py dumpdata&lt;/code&gt;&lt;/a&gt; command. Or, you can write fixtures by hand; fixtures can be written as JSON, XML or YAML (with &lt;a href=&quot;https://pyyaml.org/&quot;&gt;PyYAML&lt;/a&gt; installed) documents. The &lt;a href=&quot;../topics/serialization&quot;&gt;serialization documentation&lt;/a&gt; has more details about each of these supported &lt;a href=&quot;../topics/serialization#serialization-formats&quot;&gt;serialization formats&lt;/a&gt;.</source>
          <target state="translated">조명기는 Django가 데이터베이스로 가져 오는 방법을 알고있는 데이터 모음입니다. 이미 데이터가있는 경우 조명기를 만드는 가장 간단한 방법은 &lt;a href=&quot;../ref/django-admin#django-admin-dumpdata&quot;&gt; &lt;code&gt;manage.py dumpdata&lt;/code&gt; &lt;/a&gt; 명령 을 사용하는 것 입니다. 또는 손으로 비품을 쓸 수 있습니다. 비품은 JSON, XML 또는 YAML ( &lt;a href=&quot;https://pyyaml.org/&quot;&gt;PyYAML이&lt;/a&gt; 설치된 상태) 문서 로 작성 될 수 있습니다 . &lt;a href=&quot;../topics/serialization&quot;&gt;직렬화 문서는&lt;/a&gt; 이러한 지원의 각각에 대한 자세한 내용은이 &lt;a href=&quot;../topics/serialization#serialization-formats&quot;&gt;직렬화 형식을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e000406a21326f955506d0650810d176d948e0b0" translate="yes" xml:space="preserve">
          <source>A flatpage can use a custom template or a default, systemwide flatpage template. It can be associated with one, or multiple, sites.</source>
          <target state="translated">플랫 페이지는 사용자 정의 템플릿 또는 기본 시스템 전체 플랫 페이지 템플릿을 사용할 수 있습니다. 하나 이상의 사이트와 연관 ​​될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8c7646507e64cacf95c9de8fbb318fc3f6d5c046" translate="yes" xml:space="preserve">
          <source>A flatpage is a object with a URL, title and content. Use it for one-off, special-case pages, such as &amp;ldquo;About&amp;rdquo; or &amp;ldquo;Privacy Policy&amp;rdquo; pages, that you want to store in a database but for which you don&amp;rsquo;t want to develop a custom Django application.</source>
          <target state="translated">플랫 페이지는 URL, 제목 및 내용이있는 개체입니다. 데이터베이스에 저장하려고하지만 사용자 지정 Django 응용 프로그램을 개발하고 싶지 않은&amp;ldquo;About&amp;rdquo;또는&amp;ldquo;Privacy Policy&amp;rdquo;페이지와 같은 일회성 특수 사례 페이지에이 도구를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="e5a98bf317ab105502fe8166da38e4f27cb71dd9" translate="yes" xml:space="preserve">
          <source>A floating-point number represented in Python by a &lt;code&gt;float&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;float&lt;/code&gt; 인스턴스 가 Python으로 나타내는 부동 소수점 숫자</target>
        </trans-unit>
        <trans-unit id="2e5f615746915abcf26fb081b6e23d65ad4d9e89" translate="yes" xml:space="preserve">
          <source>A form field is represented to a user in the browser as an HTML &amp;ldquo;widget&amp;rdquo; - a piece of user interface machinery. Each field type has an appropriate default &lt;a href=&quot;../../ref/forms/widgets&quot;&gt;Widget class&lt;/a&gt;, but these can be overridden as required.</source>
          <target state="translated">양식 필드는 브라우저에서 사용자에게 HTML &quot;위젯&quot;(사용자 인터페이스 기계)으로 표시됩니다. 각 필드 유형에는 적절한 기본 &lt;a href=&quot;../../ref/forms/widgets&quot;&gt;위젯 클래스&lt;/a&gt; 가 있지만 필요에 따라 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6d66c800c5f6cfbff42baf8f024513eb0a1258df" translate="yes" xml:space="preserve">
          <source>A form for allowing a user to change their password.</source>
          <target state="translated">사용자가 비밀번호를 변경할 수 있도록하는 양식입니다.</target>
        </trans-unit>
        <trans-unit id="0afb8a4e5d2b8731954af874ef8bc05a41a6698d" translate="yes" xml:space="preserve">
          <source>A form for generating and emailing a one-time use link to reset a user&amp;rsquo;s password.</source>
          <target state="translated">일회성 사용 링크를 생성하여 이메일로 보내 사용자의 비밀번호를 재설정하는 양식입니다.</target>
        </trans-unit>
        <trans-unit id="6166efe83801a8d891fb1de000f2e3a85128ac34" translate="yes" xml:space="preserve">
          <source>A form for logging a user in.</source>
          <target state="translated">사용자 로그인 양식.</target>
        </trans-unit>
        <trans-unit id="6aab93bd0f1534741e338f36c0ce5185a1595977" translate="yes" xml:space="preserve">
          <source>A form mixin that works on &lt;code&gt;ModelForms&lt;/code&gt;, rather than a standalone form.</source>
          <target state="translated">독립형 양식이 아니라 &lt;code&gt;ModelForms&lt;/code&gt; 에서 작동하는 양식 믹스 인입니다 .</target>
        </trans-unit>
        <trans-unit id="8fcf78264e9be8d68125c7db284b132b24b91f05" translate="yes" xml:space="preserve">
          <source>A form that lets a user change their password without entering the old password.</source>
          <target state="translated">이전 비밀번호를 입력하지 않고 비밀번호를 변경할 수있는 양식입니다.</target>
        </trans-unit>
        <trans-unit id="0edda05385c0d079b736870b0911654021ec7d30" translate="yes" xml:space="preserve">
          <source>A form used in the admin interface to change a user&amp;rsquo;s information and permissions.</source>
          <target state="translated">사용자 정보 및 권한을 변경하기 위해 관리 인터페이스에서 사용되는 양식입니다.</target>
        </trans-unit>
        <trans-unit id="8289c5eec8fc975086e6379aca3bda3438a2e142" translate="yes" xml:space="preserve">
          <source>A form used in the admin interface to change a user&amp;rsquo;s password.</source>
          <target state="translated">관리 인터페이스에서 사용자 비밀번호를 변경하는 데 사용되는 양식입니다.</target>
        </trans-unit>
        <trans-unit id="acf4a67686331c89b3f8eaf3b8662b562094f4fe" translate="yes" xml:space="preserve">
          <source>A form&amp;rsquo;s fields are themselves classes; they manage form data and perform validation when a form is submitted. A &lt;a href=&quot;../../ref/forms/fields#django.forms.DateField&quot;&gt;&lt;code&gt;DateField&lt;/code&gt;&lt;/a&gt; and a &lt;a href=&quot;../../ref/forms/fields#django.forms.FileField&quot;&gt;&lt;code&gt;FileField&lt;/code&gt;&lt;/a&gt; handle very different kinds of data and have to do different things with it.</source>
          <target state="translated">양식의 필드는 그 자체가 클래스입니다. 양식 데이터를 관리하고 양식을 제출할 때 유효성 검사를 수행합니다. &lt;a href=&quot;../../ref/forms/fields#django.forms.DateField&quot;&gt; &lt;code&gt;DateField&lt;/code&gt; &lt;/a&gt; 과 &lt;a href=&quot;../../ref/forms/fields#django.forms.FileField&quot;&gt; &lt;code&gt;FileField&lt;/code&gt; 와의&lt;/a&gt; 데이터의 핸들 매우 다른 종류의 그것으로 다른 일을해야합니다.</target>
        </trans-unit>
        <trans-unit id="5466e921fd48e033705e43b9b369e8e53b23c8bd" translate="yes" xml:space="preserve">
          <source>A format file is a Python module that defines the data formats for a given locale.</source>
          <target state="translated">형식 파일은 주어진 로케일의 데이터 형식을 정의하는 Python 모듈입니다.</target>
        </trans-unit>
        <trans-unit id="409cbea37afd321cbee051e5dc3b7c976e3f98aa" translate="yes" xml:space="preserve">
          <source>A formset factory, &lt;a href=&quot;#django.contrib.contenttypes.forms.generic_inlineformset_factory&quot;&gt;&lt;code&gt;generic_inlineformset_factory()&lt;/code&gt;&lt;/a&gt;, for use with &lt;a href=&quot;#django.contrib.contenttypes.fields.GenericForeignKey&quot;&gt;&lt;code&gt;GenericForeignKey&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">의 formset 공장, &lt;a href=&quot;#django.contrib.contenttypes.forms.generic_inlineformset_factory&quot;&gt; &lt;code&gt;generic_inlineformset_factory()&lt;/code&gt; &lt;/a&gt; 와 함께 사용하기위한 &lt;a href=&quot;#django.contrib.contenttypes.fields.GenericForeignKey&quot;&gt; &lt;code&gt;GenericForeignKey&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0c7ba64c85fa1f7a7d274bc15d56c722cfeedf78" translate="yes" xml:space="preserve">
          <source>A formset has a &lt;code&gt;clean&lt;/code&gt; method similar to the one on a &lt;code&gt;Form&lt;/code&gt; class. This is where you define your own validation that works at the formset level:</source>
          <target state="translated">해당 formset는이 &lt;code&gt;clean&lt;/code&gt; A의 것과 유사한 방법 &lt;code&gt;Form&lt;/code&gt; 클래스를. 여기에서 폼 세트 수준에서 작동하는 고유 한 유효성 검사를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="81d08e972f3959f4032d8f06cb7232f54155bae9" translate="yes" xml:space="preserve">
          <source>A formset is a layer of abstraction to work with multiple forms on the same page. It can be best compared to a data grid. Let&amp;rsquo;s say you have the following form:</source>
          <target state="translated">폼 세트는 동일한 페이지에서 여러 폼으로 작업하기위한 추상화 계층입니다. 데이터 그리드와 비교하는 것이 가장 좋습니다. 다음과 같은 형식이 있다고 가정 해 봅시다.</target>
        </trans-unit>
        <trans-unit id="286dd104d7f5abf605520f88a8030eacd768185c" translate="yes" xml:space="preserve">
          <source>A framework for generating Google sitemap XML files.</source>
          <target state="translated">Google 사이트 맵 XML 파일을 생성하기위한 프레임 워크입니다.</target>
        </trans-unit>
        <trans-unit id="99fdcf13262f9b26b6ed069dec6695338a886b09" translate="yes" xml:space="preserve">
          <source>A framework for generating syndication feeds, in RSS and Atom, quite easily.</source>
          <target state="translated">RSS 및 Atom에서 신디케이션 피드를 생성하기위한 프레임 워크는 매우 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="c1c7f5e5ca1b34484d86dbc28a9c36c114f57d58" translate="yes" xml:space="preserve">
          <source>A framework for managing &amp;ldquo;flat&amp;rdquo; HTML content in a database.</source>
          <target state="translated">데이터베이스에서 &quot;플랫&quot;HTML 컨텐츠를 관리하기위한 프레임 워크입니다.</target>
        </trans-unit>
        <trans-unit id="d87b408649c71638a6bf5a40d1221b15199c6f89" translate="yes" xml:space="preserve">
          <source>A framework for managing redirects.</source>
          <target state="translated">리디렉션 관리를위한 프레임 워크입니다.</target>
        </trans-unit>
        <trans-unit id="4d75763791fd7b9a6428a836d2981f82f96b34b1" translate="yes" xml:space="preserve">
          <source>A framework for storing and retrieving temporary cookie- or session-based messages</source>
          <target state="translated">임시 쿠키 또는 세션 기반 메시지를 저장하고 검색하기위한 프레임 워크</target>
        </trans-unit>
        <trans-unit id="310b411f223dc76991745a4ec6d073d87d77c8c9" translate="yes" xml:space="preserve">
          <source>A framework for storing data in anonymous sessions.</source>
          <target state="translated">익명 세션에서 데이터를 저장하기위한 프레임 워크입니다.</target>
        </trans-unit>
        <trans-unit id="8f40a4a3270ee3c5f15b3a37e368f90d7334b865" translate="yes" xml:space="preserve">
          <source>A full Python path to a Python package that contains custom format definitions for project locales. If not &lt;code&gt;None&lt;/code&gt;, Django will check for a &lt;code&gt;formats.py&lt;/code&gt; file, under the directory named as the current locale, and will use the formats defined in this file.</source>
          <target state="translated">프로젝트 로캘에 대한 사용자 정의 형식 정의가 포함 된 Python 패키지의 전체 Python 경로입니다. &lt;code&gt;None&lt;/code&gt; 이 아닌 경우 , Django는 현재 로케일로 이름이 지정된 디렉토리 에서 &lt;code&gt;formats.py&lt;/code&gt; 파일을 확인 하고이 파일에 정의 된 형식을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="a9555544a1aa3c65dde15e344221253029e8fbb8" translate="yes" xml:space="preserve">
          <source>A full authorization implementation can be found in the &lt;code&gt;ModelBackend&lt;/code&gt; class in &lt;a href=&quot;https://github.com/django/django/blob/master/django/contrib/auth/backends.py&quot;&gt;django/contrib/auth/backends.py&lt;/a&gt;, which is the default backend and queries the &lt;code&gt;auth_permission&lt;/code&gt; table most of the time.</source>
          <target state="translated">전체 권한 부여 구현은 &lt;a href=&quot;https://github.com/django/django/blob/master/django/contrib/auth/backends.py&quot;&gt;django / contrib / auth / backends.py&lt;/a&gt; 의 &lt;code&gt;ModelBackend&lt;/code&gt; 클래스에서 찾을 수 있습니다 . 이것은 기본 백엔드이며 대부분 &lt;code&gt;auth_permission&lt;/code&gt; 테이블을 쿼리합니다 .</target>
        </trans-unit>
        <trans-unit id="6aa4f89ce9e799804b5d7ef94a078b6928d92c6c" translate="yes" xml:space="preserve">
          <source>A full example</source>
          <target state="translated">전체 예</target>
        </trans-unit>
        <trans-unit id="e90edba35ae1e785a50062ee08daa4e898c4f8aa" translate="yes" xml:space="preserve">
          <source>A full example, taken from the &lt;a href=&quot;../flatpages#django.contrib.flatpages.models.FlatPage&quot;&gt;&lt;code&gt;django.contrib.flatpages.models.FlatPage&lt;/code&gt;&lt;/a&gt; model:</source>
          <target state="translated">&lt;a href=&quot;../flatpages#django.contrib.flatpages.models.FlatPage&quot;&gt; &lt;code&gt;django.contrib.flatpages.models.FlatPage&lt;/code&gt; &lt;/a&gt; 모델 에서 가져온 전체 예 :</target>
        </trans-unit>
        <trans-unit id="2742e69715f21a875952b64897fdd7eb26d73ea7" translate="yes" xml:space="preserve">
          <source>A full explanation of this error output is beyond the scope of this document, but it&amp;rsquo;s pretty intuitive. You can consult the documentation of Python&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; library for details.</source>
          <target state="translated">이 오류 출력에 대한 자세한 설명은이 문서의 범위를 벗어나지 만 매우 직관적입니다. 자세한 내용 은 Python의 &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt; 라이브러리 문서 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e2b7753ea23362502427e09b0851a73f4b2e2cd9" translate="yes" xml:space="preserve">
          <source>A full list of all checks that can be raised by Django can be found in the &lt;a href=&quot;../ref/checks&quot;&gt;System check reference&lt;/a&gt;.</source>
          <target state="translated">Django가 제기 할 수있는 모든 검사의 전체 목록은 &lt;a href=&quot;../ref/checks&quot;&gt;시스템 검사 참조&lt;/a&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a74f3dbda5a03c8b00003e976bc6abefca129992" translate="yes" xml:space="preserve">
          <source>A function that checks if &lt;code&gt;django.contrib.sites&lt;/code&gt; is installed and returns either the current &lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt;&lt;code&gt;Site&lt;/code&gt;&lt;/a&gt; object or a &lt;a href=&quot;#django.contrib.sites.requests.RequestSite&quot;&gt;&lt;code&gt;RequestSite&lt;/code&gt;&lt;/a&gt; object based on the request. It looks up the current site based on &lt;a href=&quot;../request-response#django.http.HttpRequest.get_host&quot;&gt;&lt;code&gt;request.get_host()&lt;/code&gt;&lt;/a&gt; if the &lt;a href=&quot;../settings#std:setting-SITE_ID&quot;&gt;&lt;code&gt;SITE_ID&lt;/code&gt;&lt;/a&gt; setting is not defined.</source>
          <target state="translated">&lt;code&gt;django.contrib.sites&lt;/code&gt; 가 설치되어 있는지 확인 하고 요청에 따라 현재 &lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt; &lt;code&gt;Site&lt;/code&gt; &lt;/a&gt; 객체 또는 &lt;a href=&quot;#django.contrib.sites.requests.RequestSite&quot;&gt; &lt;code&gt;RequestSite&lt;/code&gt; &lt;/a&gt; 객체를 반환 하는 함수입니다 . &lt;a href=&quot;../settings#std:setting-SITE_ID&quot;&gt; &lt;code&gt;SITE_ID&lt;/code&gt; &lt;/a&gt; 설정이 정의되지 않은 경우 &lt;a href=&quot;../request-response#django.http.HttpRequest.get_host&quot;&gt; &lt;code&gt;request.get_host()&lt;/code&gt; &lt;/a&gt; 기반으로 현재 사이트를 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="9c1c7126df9bacc75eaf90ea4f43788d82a8af90" translate="yes" xml:space="preserve">
          <source>A function that takes a full Python import path to another URLconf module that should be &amp;ldquo;included&amp;rdquo; in this place. Optionally, the &lt;a href=&quot;../topics/http/urls#term-application-namespace&quot;&gt;application namespace&lt;/a&gt; and &lt;a href=&quot;../topics/http/urls#term-instance-namespace&quot;&gt;instance namespace&lt;/a&gt; where the entries will be included into can also be specified.</source>
          <target state="translated">이 위치에 &quot;포함&quot;되어야하는 다른 URLconf 모듈에 대한 전체 Python 가져 오기 경로를 취하는 함수입니다. 선택적으로 항목이 포함될 &lt;a href=&quot;../topics/http/urls#term-application-namespace&quot;&gt;애플리케이션 네임 스페이스&lt;/a&gt; 및 &lt;a href=&quot;../topics/http/urls#term-instance-namespace&quot;&gt;인스턴스 네임 스페이스&lt;/a&gt; 도 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ec43c5dac2f2fe49372d5e20f1109efa45a2c3ae" translate="yes" xml:space="preserve">
          <source>A function that takes one argument and returns a coerced value. Examples include the built-in &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;bool&lt;/code&gt; and other types. Defaults to an identity function. Note that coercion happens after input validation, so it is possible to coerce to a value not present in &lt;code&gt;choices&lt;/code&gt;.</source>
          <target state="translated">하나의 인수를 사용하여 강제 값을 반환하는 함수입니다. 내장 &lt;code&gt;int&lt;/code&gt; , &lt;code&gt;float&lt;/code&gt; , &lt;code&gt;bool&lt;/code&gt; 및 기타 유형이 그 예입니다. 아이디 기능을 기본값으로합니다. 강제는 입력 유효성 검증 후에 발생하므로 &lt;code&gt;choices&lt;/code&gt; 없는 값으로 강제 변환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="673cae9e4af329e72a8c8b8daafefea2edaf90fb" translate="yes" xml:space="preserve">
          <source>A fundamental trade-off in dynamic websites is, well, they&amp;rsquo;re dynamic. Each time a user requests a page, the Web server makes all sorts of calculations &amp;ndash; from database queries to template rendering to business logic &amp;ndash; to create the page that your site&amp;rsquo;s visitor sees. This is a lot more expensive, from a processing-overhead perspective, than your standard read-a-file-off-the-filesystem server arrangement.</source>
          <target state="translated">동적 웹 사이트의 기본적인 균형은 동적입니다. 사용자가 페이지를 요청할 때마다 웹 서버는 데이터베이스 쿼리에서 템플릿 렌더링, 비즈니스 로직에 이르기까지 모든 종류의 계산을 수행하여 사이트 방문자에게 표시되는 페이지를 만듭니다. 이는 처리 오버 헤드 관점에서 표준 파일에서 파일 시스템으로 읽기 서버 배열보다 훨씬 비쌉니다.</target>
        </trans-unit>
        <trans-unit id="40766de03b907e71243234941de8beb067a9cfdc" translate="yes" xml:space="preserve">
          <source>A generator returning chunks of the file. If &lt;code&gt;multiple_chunks()&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;, you should use this method in a loop instead of &lt;code&gt;read()&lt;/code&gt;.</source>
          <target state="translated">파일의 청크를 반환하는 생성기. &lt;code&gt;multiple_chunks()&lt;/code&gt; 가 &lt;code&gt;True&lt;/code&gt; 인 경우 &lt;code&gt;read()&lt;/code&gt; 대신 루프에서이 메서드를 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="290839a2b9e6976a300017f5136d49c6896901d2" translate="yes" xml:space="preserve">
          <source>A geometry or raster to base calculations from; and</source>
          <target state="translated">계산을위한 지오메트리 또는 래스터; 과</target>
        </trans-unit>
        <trans-unit id="4b64e3c95c19e89ee0a9a996dcc9744f0e45f407" translate="yes" xml:space="preserve">
          <source>A good example is the &lt;a href=&quot;../models/instances#django.db.models.Model.delete&quot;&gt;&lt;code&gt;delete()&lt;/code&gt;&lt;/a&gt; method on each Django model object. The template system shouldn&amp;rsquo;t be allowed to do something like this:</source>
          <target state="translated">좋은 예는 각 장고 모델 객체 의 &lt;a href=&quot;../models/instances#django.db.models.Model.delete&quot;&gt; &lt;code&gt;delete()&lt;/code&gt; &lt;/a&gt; 메소드입니다. 템플릿 시스템은 다음과 같은 작업을 수행해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="e467acbf3b682ea4e3bef91ee41bb4480b93840a" translate="yes" xml:space="preserve">
          <source>A good first look at writing tests for Django can be found in the documentation on &lt;a href=&quot;../topics/testing/overview&quot;&gt;Writing and running tests&lt;/a&gt;.</source>
          <target state="translated">Django에 대한 테스트 작성에 대한 첫 번째 정보는 테스트 &lt;a href=&quot;../topics/testing/overview&quot;&gt;작성 및 실행&lt;/a&gt; 문서에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="24fbed3d7b6dc13535d311f1bcf03206c3bc1ffd" translate="yes" xml:space="preserve">
          <source>A good way to do this is to write your new tests first, before making any changes to the code. This style of development is called &lt;a href=&quot;https://en.wikipedia.org/wiki/Test-driven_development&quot;&gt;test-driven development&lt;/a&gt; and can be applied to both entire projects and single patches. After writing your tests, you then run them to make sure that they do indeed fail (since you haven&amp;rsquo;t fixed that bug or added that feature yet). If your new tests don&amp;rsquo;t fail, you&amp;rsquo;ll need to fix them so that they do. After all, a regression test that passes regardless of whether a bug is present is not very helpful at preventing that bug from reoccurring down the road.</source>
          <target state="translated">이를 수행하는 좋은 방법은 코드를 변경하기 전에 먼저 새 테스트를 작성하는 것입니다. 이러한 스타일의 개발을 &lt;a href=&quot;https://en.wikipedia.org/wiki/Test-driven_development&quot;&gt;테스트 중심 개발&lt;/a&gt; 이라고 하며 전체 프로젝트와 단일 패치 모두에 적용 할 수 있습니다. 테스트를 작성한 후에는 해당 버그를 수정하지 않았거나 아직 해당 기능을 추가하지 않았기 때문에 실제로 실패했는지 확인하기 위해 테스트를 실행합니다. 새로운 테스트가 실패하지 않으면 테스트를 수정해야합니다. 결국 버그가 있는지 여부에 관계없이 통과하는 회귀 테스트는 버그가 도로에서 재발하는 것을 막는 데 큰 도움이되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e2a1c19e5daa9a7f90bac1063946a820748fdf13" translate="yes" xml:space="preserve">
          <source>A good way to spot untested parts of your application is to check code coverage. This also helps identify fragile or even dead code. If you can&amp;rsquo;t test a piece of code, it usually means that code should be refactored or removed. Coverage will help to identify dead code. See &lt;a href=&quot;../topics/testing/advanced#topics-testing-code-coverage&quot;&gt;Integration with coverage.py&lt;/a&gt; for details.</source>
          <target state="translated">테스트되지 않은 응용 프로그램 부분을 확인하는 좋은 방법은 코드 범위를 확인하는 것입니다. 또한 깨지기 쉬운 코드 나 죽은 코드를 식별하는 데 도움이됩니다. 코드를 테스트 할 수없는 경우 일반적으로 코드를 리팩터링하거나 제거해야합니다. 적용 범위는 데드 코드를 식별하는 데 도움이됩니다. 자세한 내용 &lt;a href=&quot;../topics/testing/advanced#topics-testing-code-coverage&quot;&gt;은 coverage.py와 통합을&lt;/a&gt; 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="71dd99e94c3941afb631186528b839455174452e" translate="yes" xml:space="preserve">
          <source>A helper method that returns a set containing the attribute names of all those fields that are currently deferred for this model.</source>
          <target state="translated">현재이 모델에 대해 연기 된 모든 필드의 속성 이름이 포함 된 집합을 반환하는 도우미 메서드입니다.</target>
        </trans-unit>
        <trans-unit id="62c03b89511e9d0632338e869e40c2b3c1dfee20" translate="yes" xml:space="preserve">
          <source>A hidden form field with the name &amp;lsquo;csrfmiddlewaretoken&amp;rsquo; present in all outgoing POST forms. The value of this field is, again, the value of the secret, with a salt which is both added to it and used to scramble it. The salt is regenerated on every call to &lt;code&gt;get_token()&lt;/code&gt; so that the form field value is changed in every such response.</source>
          <target state="translated">이름이 'csrfmiddlewaretoken'인 숨겨진 양식 필드는 모든 발신 POST 양식에 있습니다. 이 분야의 가치는 다시 비밀의 가치이며, 소금이 첨가되어 그것을 스크램블하는 데 사용됩니다. &lt;code&gt;get_token()&lt;/code&gt; 호출 할 때마다 솔트가 재생성 되므로 양식 필드 값이 모든 응답에서 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="170579c91487d3fbf2325979c46b79d381de59ad" translate="yes" xml:space="preserve">
          <source>A highly specialized operation that let you mix and match the database (schema-changing) and state (autodetector-powering) aspects of operations.</source>
          <target state="translated">데이터베이스 (스키마 변경) 및 상태 (자동 탐지기 구동) 측면을 혼합하고 일치시킬 수있는 고도로 전문화 된 작업입니다.</target>
        </trans-unit>
        <trans-unit id="f6b30e342c97a7152f4f08b8849ee6baa41f0204" translate="yes" xml:space="preserve">
          <source>A hook allowing the expression to coerce &lt;code&gt;value&lt;/code&gt; into a more appropriate type.</source>
          <target state="translated">표현식 이보다 적절한 유형으로 &lt;code&gt;value&lt;/code&gt; 를 강요 할 수있게 해주는 후크 .</target>
        </trans-unit>
        <trans-unit id="92d27de94453ccd1948260595066f0621be001b0" translate="yes" xml:space="preserve">
          <source>A hook for customizing the deletion process of the &lt;a href=&quot;#django.contrib.admin.ModelAdmin.delete_view&quot;&gt;&lt;code&gt;delete_view()&lt;/code&gt;&lt;/a&gt; and the &amp;ldquo;delete selected&amp;rdquo; &lt;a href=&quot;actions&quot;&gt;action&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#django.contrib.admin.ModelAdmin.delete_view&quot;&gt; &lt;code&gt;delete_view()&lt;/code&gt; &lt;/a&gt; 및&amp;ldquo; select selected&amp;rdquo; &lt;a href=&quot;actions&quot;&gt;조치&lt;/a&gt; 의 삭제 프로세스를 사용자 정의하기위한 후크입니다 .</target>
        </trans-unit>
        <trans-unit id="eaa02cfc25e4837cd5442e8e5dd9f027f2895466" translate="yes" xml:space="preserve">
          <source>A hook for the initial data on admin change forms. By default, fields are given initial values from &lt;code&gt;GET&lt;/code&gt; parameters. For instance, &lt;code&gt;?name=initial_value&lt;/code&gt; will set the &lt;code&gt;name&lt;/code&gt; field&amp;rsquo;s initial value to be &lt;code&gt;initial_value&lt;/code&gt;.</source>
          <target state="translated">관리자 변경 양식의 초기 데이터에 대한 후크. 기본적으로 필드에는 &lt;code&gt;GET&lt;/code&gt; 매개 변수의 초기 값이 제공 됩니다. 예를 들어, &lt;code&gt;?name=initial_value&lt;/code&gt; 설정된 것이다 &lt;code&gt;name&lt;/code&gt; 으로 필드의 초기 값을 &lt;code&gt;initial_value&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="16ce2e9680c1a574634088f43e55eb5a2fa3135a" translate="yes" xml:space="preserve">
          <source>A hostname containing ASCII-only characters can also be used.</source>
          <target state="translated">ASCII 전용 문자를 포함하는 호스트 이름도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b25fe856c3b12fb9828f48b7063c0bab1ae740dc" translate="yes" xml:space="preserve">
          <source>A human-readable &amp;ldquo;verbose&amp;rdquo; name for the website.</source>
          <target state="translated">웹 사이트의 사람이 읽을 수있는 &quot;자세한&quot;이름.</target>
        </trans-unit>
        <trans-unit id="0ad25e7d7409fd665679b0fd12e2d770e244209e" translate="yes" xml:space="preserve">
          <source>A human-readable name for the field. If the verbose name isn&amp;rsquo;t given, Django will automatically create it using the field&amp;rsquo;s attribute name, converting underscores to spaces. See &lt;a href=&quot;../../topics/db/models#verbose-field-names&quot;&gt;Verbose field names&lt;/a&gt;.</source>
          <target state="translated">필드의 사람이 읽을 수있는 이름입니다. 자세한 이름을 지정하지 않으면 Django는 필드의 속성 이름을 사용하여 자동으로 밑줄을 공백으로 변환하여 만듭니다. &lt;a href=&quot;../../topics/db/models#verbose-field-names&quot;&gt;상세 필드 이름을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9d966c93e2eaecf872c7d88825fb7a223ee93945" translate="yes" xml:space="preserve">
          <source>A human-readable name for the object, singular:</source>
          <target state="translated">사람이 읽을 수있는 객체의 이름은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="480712090efaf51d5263804459ca47d3ba5bed41" translate="yes" xml:space="preserve">
          <source>A join is not permitted on the specified field</source>
          <target state="translated">지정된 필드에서 조인이 허용되지 않습니다</target>
        </trans-unit>
        <trans-unit id="04d2ca10a06ddd07a17bb1f256a38a7c0c932246" translate="yes" xml:space="preserve">
          <source>A key aim of the PyPy project is &lt;a href=&quot;https://pypy.org/compat.html&quot;&gt;compatibility&lt;/a&gt; with existing Python APIs and libraries. Django is compatible, but you will need to check the compatibility of other libraries you rely on.</source>
          <target state="translated">PyPy 프로젝트의 주요 목표는 기존 Python API 및 라이브러리와의 &lt;a href=&quot;https://pypy.org/compat.html&quot;&gt;호환성&lt;/a&gt; 입니다. Django는 호환되지만 의존하는 다른 라이브러리의 호환성을 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="0c5b6a1dcd69073e04349dca58396e8a30b88066" translate="yes" xml:space="preserve">
          <source>A keyword cannot be parsed from the filter parameters</source>
          <target state="translated">필터 매개 변수에서 키워드를 구문 분석 할 수 없습니다</target>
        </trans-unit>
        <trans-unit id="e382fc48e8c2617e8269a528f2b9de9293777d46" translate="yes" xml:space="preserve">
          <source>A large text field. The default form widget for this field is a &lt;a href=&quot;../forms/widgets#django.forms.Textarea&quot;&gt;&lt;code&gt;Textarea&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">큰 텍스트 필드 이 필드의 기본 양식 위젯은 &lt;a href=&quot;../forms/widgets#django.forms.Textarea&quot;&gt; &lt;code&gt;Textarea&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="70520eb3572411ac68b01dac3d7c429b69636351" translate="yes" xml:space="preserve">
          <source>A lazily evaluated version of &lt;a href=&quot;#reverse&quot;&gt;reverse()&lt;/a&gt;.</source>
          <target state="translated">게으르게 평가 된 버전 &lt;a href=&quot;#reverse&quot;&gt;reverse ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f2935ee406a2331d62dfc1f881d4aa9ee4990b12" translate="yes" xml:space="preserve">
          <source>A less portable but more powerful method is the &lt;a href=&quot;../../ref/models/expressions#django.db.models.expressions.RawSQL&quot;&gt;&lt;code&gt;RawSQL&lt;/code&gt;&lt;/a&gt; expression, which allows some SQL to be explicitly added to the query. If that still isn&amp;rsquo;t powerful enough:</source>
          <target state="translated">이식성이 떨어지지 만 강력한 방법은 &lt;a href=&quot;../../ref/models/expressions#django.db.models.expressions.RawSQL&quot;&gt; &lt;code&gt;RawSQL&lt;/code&gt; &lt;/a&gt; 표현식으로, 일부 SQL을 쿼리에 명시 적으로 추가 할 수 있습니다. 여전히 충분하지 않은 경우 :</target>
        </trans-unit>
        <trans-unit id="70f6fe75919ee71bc24c2d59e2cb8e738846d328" translate="yes" xml:space="preserve">
          <source>A light framework for hooking into &amp;ldquo;types&amp;rdquo; of content, where each installed Django model is a separate content type.</source>
          <target state="translated">설치된 각 Django 모델이 별도의 컨텐츠 유형 인 컨텐츠의 &quot;유형&quot;에 연결하기위한 간단한 프레임 워크입니다.</target>
        </trans-unit>
        <trans-unit id="737beb4de987b3ac6f5bc65526eb4323b585cef0" translate="yes" xml:space="preserve">
          <source>A light framework that lets you operate multiple websites off of the same database and Django installation. It gives you hooks for associating objects to one or more sites.</source>
          <target state="translated">동일한 데이터베이스 및 Django 설치에서 여러 웹 사이트를 운영 할 수있는 간단한 프레임 워크입니다. 객체를 하나 이상의 사이트에 연결하기위한 후크를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="0c3cee211d0017270a78a70a64d3bb9e1ec60681" translate="yes" xml:space="preserve">
          <source>A list containing the settings for all template engines to be used with Django. Each item of the list is a dictionary containing the options for an individual engine.</source>
          <target state="translated">Django와 함께 사용할 모든 템플릿 엔진에 대한 설정이 포함 된 목록입니다. 목록의 각 항목은 개별 엔진에 대한 옵션이 포함 된 사전입니다.</target>
        </trans-unit>
        <trans-unit id="cb10a67068bc0a2f49e2f26872df35eaed584adb" translate="yes" xml:space="preserve">
          <source>A list in the same format as &lt;a href=&quot;#std:setting-ADMINS&quot;&gt;&lt;code&gt;ADMINS&lt;/code&gt;&lt;/a&gt; that specifies who should get broken link notifications when &lt;a href=&quot;middleware#django.middleware.common.BrokenLinkEmailsMiddleware&quot;&gt;&lt;code&gt;BrokenLinkEmailsMiddleware&lt;/code&gt;&lt;/a&gt; is enabled.</source>
          <target state="translated">&lt;a href=&quot;middleware#django.middleware.common.BrokenLinkEmailsMiddleware&quot;&gt; &lt;code&gt;BrokenLinkEmailsMiddleware&lt;/code&gt; &lt;/a&gt; 를 사용할 때 끊어진 링크 알림을 받아야하는 사람을 지정하는 &lt;a href=&quot;#std:setting-ADMINS&quot;&gt; &lt;code&gt;ADMINS&lt;/code&gt; &lt;/a&gt; 와 같은 형식의 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="9f4a93c80cc553384369a0f7e96d6711efd8ad9e" translate="yes" xml:space="preserve">
          <source>A list of &lt;a href=&quot;../../ref/applications#django.apps.AppConfig.name&quot;&gt;&lt;code&gt;application names&lt;/code&gt;&lt;/a&gt; among installed applications. Those apps should contain a &lt;code&gt;locale&lt;/code&gt; directory. All those catalogs plus all catalogs found in &lt;a href=&quot;../../ref/settings#std:setting-LOCALE_PATHS&quot;&gt;&lt;code&gt;LOCALE_PATHS&lt;/code&gt;&lt;/a&gt; (which are always included) are merged into one catalog. Defaults to &lt;code&gt;None&lt;/code&gt;, which means that all available translations from all &lt;a href=&quot;../../ref/settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; are provided in the JavaScript output.</source>
          <target state="translated">설치된 응용 프로그램 간 &lt;a href=&quot;../../ref/applications#django.apps.AppConfig.name&quot;&gt; &lt;code&gt;application names&lt;/code&gt; &lt;/a&gt; 목록입니다 . 이러한 앱에는 &lt;code&gt;locale&lt;/code&gt; 디렉토리 가 포함되어야합니다 . &lt;a href=&quot;../../ref/settings#std:setting-LOCALE_PATHS&quot;&gt; &lt;code&gt;LOCALE_PATHS&lt;/code&gt; 에있는&lt;/a&gt; 모든 카탈로그와 모든 카탈로그 (항상 포함됨)는 하나의 카탈로그로 병합됩니다. 기본값은 &lt;code&gt;None&lt;/code&gt; 으로 , 모든 &lt;a href=&quot;../../ref/settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt; 에서 사용 가능한 모든 번역 이 JavaScript 출력으로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="c180e69915cd63c27d8e1529cb3e386e577a0f04" translate="yes" xml:space="preserve">
          <source>A list of &lt;a href=&quot;constraints&quot;&gt;constraints&lt;/a&gt; that you want to define on the model:</source>
          <target state="translated">모델에서 정의하려는 &lt;a href=&quot;constraints&quot;&gt;구속 조건&lt;/a&gt; 목록 :</target>
        </trans-unit>
        <trans-unit id="03cfb56798af256af59829cc00ace21a97a09065" translate="yes" xml:space="preserve">
          <source>A list of &lt;a href=&quot;indexes&quot;&gt;indexes&lt;/a&gt; that you want to define on the model:</source>
          <target state="translated">모델에서 정의하려는 &lt;a href=&quot;indexes&quot;&gt;인덱스&lt;/a&gt; 목록 :</target>
        </trans-unit>
        <trans-unit id="6f0e53c7b557172b3ce32ba4e42c1d7306eb3ae3" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;Template&lt;/code&gt; instances used to render the final content, in the order they were rendered. For each template in the list, use &lt;code&gt;template.name&lt;/code&gt; to get the template&amp;rsquo;s file name, if the template was loaded from a file. (The name is a string such as &lt;code&gt;'admin/index.html'&lt;/code&gt;.)</source>
          <target state="translated">최종 내용을 렌더링 순서대로 렌더링하는 데 사용되는 &lt;code&gt;Template&lt;/code&gt; 인스턴스 목록입니다 . 목록의 각 템플릿의 경우, 사용 &lt;code&gt;template.name&lt;/code&gt; 을 템플릿이 파일에서로드 된 경우, 템플릿의 파일 이름을 얻을 수 있습니다. (이름은 &lt;code&gt;'admin/index.html'&lt;/code&gt; 과 같은 문자열 입니다.)</target>
        </trans-unit>
        <trans-unit id="aa6e0411589b44072af2d3e38e05f0212563f16f" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;band_input&lt;/code&gt; dictionaries with band input data. The resulting band indices are the same as in the list provided. The definition of the band input dictionary is given below. If band data isn&amp;rsquo;t provided, the raster bands values are instantiated as an array of zeros and the &amp;ldquo;no data&amp;rdquo; value is set to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">밴드 입력 데이터 가있는 &lt;code&gt;band_input&lt;/code&gt; 사전 목록입니다 . 결과 밴드 인덱스는 제공된 목록과 동일합니다. 밴드 입력 사전의 정의는 다음과 같습니다. 밴드 데이터가 제공되지 않으면 래스터 밴드 값이 0의 배열로 인스턴스화되고 &quot;데이터 &lt;code&gt;None&lt;/code&gt; &quot;값이 없음 으로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="2b6eae28892e7a58e6ca2386dd7eeb943a2f0899" translate="yes" xml:space="preserve">
          <source>A list of IP addresses, as strings, that:</source>
          <target state="translated">다음과 같은 IP 주소 목록 (문자열) :</target>
        </trans-unit>
        <trans-unit id="43403af63225a575d938343757ba3d71be338d91" translate="yes" xml:space="preserve">
          <source>A list of actions to make available on the change list page. See &lt;a href=&quot;actions&quot;&gt;Admin actions&lt;/a&gt; for details.</source>
          <target state="translated">변경 목록 페이지에서 사용할 수있는 조치 목록. 자세한 내용은 &lt;a href=&quot;actions&quot;&gt;관리 작업&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e9c9c36e3d6d32d0f996e42320aa555a1b33d316" translate="yes" xml:space="preserve">
          <source>A list of all the people who get code error notifications. When &lt;a href=&quot;#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG=False&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../topics/logging#django.utils.log.AdminEmailHandler&quot;&gt;&lt;code&gt;AdminEmailHandler&lt;/code&gt;&lt;/a&gt; is configured in &lt;a href=&quot;#std:setting-LOGGING&quot;&gt;&lt;code&gt;LOGGING&lt;/code&gt;&lt;/a&gt; (done by default), Django emails these people the details of exceptions raised in the request/response cycle.</source>
          <target state="translated">코드 오류 알림을받는 모든 사람의 목록입니다. 때 &lt;a href=&quot;#std:setting-DEBUG&quot;&gt; &lt;code&gt;DEBUG=False&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../topics/logging#django.utils.log.AdminEmailHandler&quot;&gt; &lt;code&gt;AdminEmailHandler&lt;/code&gt; 이&lt;/a&gt; 구성되어 &lt;a href=&quot;#std:setting-LOGGING&quot;&gt; &lt;code&gt;LOGGING&lt;/code&gt; &lt;/a&gt; (기본적으로 수행), 장고의 이메일이 사람들 요청 / 응답주기에서 발행되는 예외의 세부 사항.</target>
        </trans-unit>
        <trans-unit id="fc6a54b40ec5f766fe79f2eed3b9eb2620d8ad67" translate="yes" xml:space="preserve">
          <source>A list of all the signals that Django sends. All built-in signals are sent using the &lt;a href=&quot;../topics/signals#django.dispatch.Signal.send&quot;&gt;&lt;code&gt;send()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Django가 보내는 모든 신호의 목록입니다. 모든 내장 신호는 &lt;a href=&quot;../topics/signals#django.dispatch.Signal.send&quot;&gt; &lt;code&gt;send()&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 전송 됩니다.</target>
        </trans-unit>
        <trans-unit id="0690f8739ec5fbe1efdc822f16a84cdb61337e47" translate="yes" xml:space="preserve">
          <source>A list of authentication backend classes (as strings) to use when attempting to authenticate a user. See the &lt;a href=&quot;../topics/auth/customizing#authentication-backends&quot;&gt;authentication backends documentation&lt;/a&gt; for details.</source>
          <target state="translated">사용자 인증을 시도 할 때 사용하는 인증 백엔드 클래스 (문자열) 목록입니다. 자세한 내용은 &lt;a href=&quot;../topics/auth/customizing#authentication-backends&quot;&gt;인증 백엔드 설명서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="35885c03ceb9ee85b2595d0de6271ab5c8c59301" translate="yes" xml:space="preserve">
          <source>A list of directories where Django looks for translation files. See &lt;a href=&quot;../topics/i18n/translation#how-django-discovers-translations&quot;&gt;How Django discovers translations&lt;/a&gt;.</source>
          <target state="translated">Django가 번역 파일을 찾는 디렉토리 목록입니다. &lt;a href=&quot;../topics/i18n/translation#how-django-discovers-translations&quot;&gt;Django가 번역을 발견하는 방법을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5e6832c3888d021f5fa780cd60e252f7d0fffff6" translate="yes" xml:space="preserve">
          <source>A list of field names that specifies the unique set of columns you want the constraint to enforce.</source>
          <target state="translated">제약 조건을 적용 할 고유 한 열 집합을 지정하는 필드 이름 목록입니다.</target>
        </trans-unit>
        <trans-unit id="13eb6cc0bedd8157412c352551a153be8dc57313" translate="yes" xml:space="preserve">
          <source>A list of formats that will be accepted when inputting data on a date field. Formats will be tried in order, using the first valid one. Note that these format strings use Python&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#strftime-strptime-behavior&quot;&gt;datetime module syntax&lt;/a&gt;, not the format strings from the &lt;a href=&quot;templates/builtins#std:templatefilter-date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt; template filter.</source>
          <target state="translated">날짜 필드에 데이터를 입력 할 때 허용되는 형식 목록입니다. 유효한 첫 번째 형식을 사용하여 형식을 순서대로 시도합니다. 이 형식 문자열 은 &lt;a href=&quot;templates/builtins#std:templatefilter-date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt; 템플릿 필터 의 형식 문자열이 아니라 Python의 &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#strftime-strptime-behavior&quot;&gt;datetime 모듈 구문을&lt;/a&gt; 사용합니다.</target>
        </trans-unit>
        <trans-unit id="1856940c9caf80407a44a493f2c6882ff7b3a583" translate="yes" xml:space="preserve">
          <source>A list of formats that will be accepted when inputting data on a datetime field. Formats will be tried in order, using the first valid one. Note that these format strings use Python&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#strftime-strptime-behavior&quot;&gt;datetime module syntax&lt;/a&gt;, not the format strings from the &lt;a href=&quot;templates/builtins#std:templatefilter-date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt; template filter.</source>
          <target state="translated">날짜 / 시간 필드에 데이터를 입력 할 때 허용되는 형식 목록입니다. 유효한 첫 번째 형식을 사용하여 형식을 순서대로 시도합니다. 이 형식 문자열 은 &lt;a href=&quot;templates/builtins#std:templatefilter-date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt; 템플릿 필터 의 형식 문자열이 아니라 Python의 &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#strftime-strptime-behavior&quot;&gt;datetime 모듈 구문을&lt;/a&gt; 사용합니다.</target>
        </trans-unit>
        <trans-unit id="8f91ebfa50a4ede1adacc8408a2439ae6bb43ef5" translate="yes" xml:space="preserve">
          <source>A list of formats that will be accepted when inputting data on a time field. Formats will be tried in order, using the first valid one. Note that these format strings use Python&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#strftime-strptime-behavior&quot;&gt;datetime module syntax&lt;/a&gt;, not the format strings from the &lt;a href=&quot;templates/builtins#std:templatefilter-date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt; template filter.</source>
          <target state="translated">시간 필드에 데이터를 입력 할 때 허용되는 형식 목록입니다. 유효한 첫 번째 형식을 사용하여 형식을 순서대로 시도합니다. 이 형식 문자열 은 &lt;a href=&quot;templates/builtins#std:templatefilter-date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt; 템플릿 필터 의 형식 문자열이 아니라 Python의 &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#strftime-strptime-behavior&quot;&gt;datetime 모듈 구문을&lt;/a&gt; 사용합니다.</target>
        </trans-unit>
        <trans-unit id="f54d9d72e47e58e70c575b878d90127d2c53648a" translate="yes" xml:space="preserve">
          <source>A list of formats used to attempt to convert a string to a valid &lt;code&gt;datetime.date&lt;/code&gt; object.</source>
          <target state="translated">문자열을 유효한 &lt;code&gt;datetime.date&lt;/code&gt; 객체 로 변환하는 데 사용되는 형식의 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="c2e613f39e427aba9ed8128ee6bafc9171475f8e" translate="yes" xml:space="preserve">
          <source>A list of formats used to attempt to convert a string to a valid &lt;code&gt;datetime.datetime&lt;/code&gt; object.</source>
          <target state="translated">문자열을 유효한 &lt;code&gt;datetime.datetime&lt;/code&gt; 객체 로 변환하는 데 사용되는 형식 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="ecaa371c38b17656afb89169ee1e82d3c60a7b5f" translate="yes" xml:space="preserve">
          <source>A list of formats used to attempt to convert a string to a valid &lt;code&gt;datetime.time&lt;/code&gt; object.</source>
          <target state="translated">문자열을 유효한 &lt;code&gt;datetime.time&lt;/code&gt; 객체 로 변환하는 데 사용되는 형식의 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="9337c70525f807f74ebc61e8f7456db58a3b91a0" translate="yes" xml:space="preserve">
          <source>A list of handlers to use for uploading. Changing this setting allows complete customization &amp;ndash; even replacement &amp;ndash; of Django&amp;rsquo;s upload process.</source>
          <target state="translated">업로드에 사용할 핸들러 목록입니다. 이 설정을 변경하면 Django의 업로드 프로세스를 완전히 사용자 정의하거나 심지어 교체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c961453c5db679f855ede6babe251f25a66b4d0d" translate="yes" xml:space="preserve">
          <source>A list of hosts which are trusted origins for unsafe requests (e.g. &lt;code&gt;POST&lt;/code&gt;). For a &lt;a href=&quot;request-response#django.http.HttpRequest.is_secure&quot;&gt;&lt;code&gt;secure&lt;/code&gt;&lt;/a&gt; unsafe request, Django&amp;rsquo;s CSRF protection requires that the request have a &lt;code&gt;Referer&lt;/code&gt; header that matches the origin present in the &lt;code&gt;Host&lt;/code&gt; header. This prevents, for example, a &lt;code&gt;POST&lt;/code&gt; request from &lt;code&gt;subdomain.example.com&lt;/code&gt; from succeeding against &lt;code&gt;api.example.com&lt;/code&gt;. If you need cross-origin unsafe requests over HTTPS, continuing the example, add &lt;code&gt;&quot;subdomain.example.com&quot;&lt;/code&gt; to this list. The setting also supports subdomains, so you could add &lt;code&gt;&quot;.example.com&quot;&lt;/code&gt;, for example, to allow access from all subdomains of &lt;code&gt;example.com&lt;/code&gt;.</source>
          <target state="translated">안전하지 않은 요청에 대해 신뢰할 수있는 출처 (예 : &lt;code&gt;POST&lt;/code&gt; ) 인 호스트 목록입니다 . A에 대한 &lt;a href=&quot;request-response#django.http.HttpRequest.is_secure&quot;&gt; &lt;code&gt;secure&lt;/code&gt; &lt;/a&gt; 안전하지 않은 요청, 장고의 CSRF 보호 요청이 있어야 &lt;code&gt;Referer&lt;/code&gt; 의 기원 존재와 일치하는 헤더 &lt;code&gt;Host&lt;/code&gt; 헤더를. 예를 들어 &lt;code&gt;subdomain.example.com&lt;/code&gt; 의 &lt;code&gt;POST&lt;/code&gt; 요청이 &lt;code&gt;api.example.com&lt;/code&gt; 에 대해 성공하지 못하게 합니다. HTTPS를 통한 출처 간 안전하지 않은 요청이 필요한 경우 예제를 계속 진행하여 &lt;code&gt;&quot;subdomain.example.com&quot;&lt;/code&gt; 을이 목록에 추가 하십시오. 이 설정은 하위 도메인도 지원하므로 &lt;code&gt;example.com&lt;/code&gt; 의 모든 하위 도메인에서 액세스 할 수 있도록 &lt;code&gt;&quot;.example.com&quot;&lt;/code&gt; 을 추가 할 수 있습니다..</target>
        </trans-unit>
        <trans-unit id="ff804825780cb6046f19f39846eee6a50f5258a5" translate="yes" xml:space="preserve">
          <source>A list of identifiers of messages generated by the system check framework (i.e. &lt;code&gt;[&quot;models.W001&quot;]&lt;/code&gt;) that you wish to permanently acknowledge and ignore. Silenced checks will not be output to the console.</source>
          <target state="translated">시스템 확인 프레임 워크 (예 : &lt;code&gt;[&quot;models.W001&quot;]&lt;/code&gt; )에서 영구적으로 승인하고 무시하려는 메시지 식별자 목록입니다 . 사일런트 체크는 콘솔에 출력되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a96b01ac80ab2d2bab98fdd581782f7368be9a8a" translate="yes" xml:space="preserve">
          <source>A list of intermediate &lt;a href=&quot;#django.template.TemplateDoesNotExist&quot;&gt;&lt;code&gt;TemplateDoesNotExist&lt;/code&gt;&lt;/a&gt; exceptions raised when trying to load a template. This is used by functions, such as &lt;a href=&quot;#django.template.loader.get_template&quot;&gt;&lt;code&gt;get_template()&lt;/code&gt;&lt;/a&gt;, that try to load a given template from multiple engines.</source>
          <target state="translated">&lt;a href=&quot;#django.template.TemplateDoesNotExist&quot;&gt; &lt;code&gt;TemplateDoesNotExist&lt;/code&gt; &lt;/a&gt; 을로드하려고 할 때 발생 하는 중간 TemplateDoesNotExist 예외 목록입니다 . &lt;a href=&quot;#django.template.loader.get_template&quot;&gt; &lt;code&gt;get_template()&lt;/code&gt; &lt;/a&gt; 과 같은 함수 에서 여러 엔진에서 주어진 템플릿을로드하려고 시도하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="d716eb7c89949ad5aad34235ae5ba600e0a8c67d" translate="yes" xml:space="preserve">
          <source>A list of middleware to use. See &lt;a href=&quot;../topics/http/middleware&quot;&gt;Middleware&lt;/a&gt;.</source>
          <target state="translated">사용할 미들웨어 목록. &lt;a href=&quot;../topics/http/middleware&quot;&gt;미들웨어를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a207215cd875b7bf94e71624e79bf889fc9d5ace" translate="yes" xml:space="preserve">
          <source>A list of names of fields. This is interpreted the same way as the &lt;code&gt;Meta.fields&lt;/code&gt; attribute of &lt;a href=&quot;../../topics/forms/modelforms#django.forms.ModelForm&quot;&gt;&lt;code&gt;ModelForm&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">필드 이름 목록. 이것은 &lt;a href=&quot;../../topics/forms/modelforms#django.forms.ModelForm&quot;&gt; &lt;code&gt;ModelForm&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;Meta.fields&lt;/code&gt; 속성과 같은 방식으로 해석 됩니다.</target>
        </trans-unit>
        <trans-unit id="c7dbd78325bb37abc106cb5fe914fd2b5030507d" translate="yes" xml:space="preserve">
          <source>A list of positional arguments passed to &lt;code&gt;__init__()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;__init__()&lt;/code&gt; 전달 된 위치 인수 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="87e366132c40ddbef2d5a00d7fc08ac6a645b35e" translate="yes" xml:space="preserve">
          <source>A list of positional arguments.</source>
          <target state="translated">위치 인수 목록.</target>
        </trans-unit>
        <trans-unit id="fd9ef5ae7a189f786a088a19c3685b87ad8b0c54" translate="yes" xml:space="preserve">
          <source>A list of sources that were tried when finding the template. This is formatted as a list of tuples containing &lt;code&gt;(origin, status)&lt;/code&gt;, where &lt;code&gt;origin&lt;/code&gt; is an &lt;a href=&quot;#template-origin-api&quot;&gt;origin-like&lt;/a&gt; object and &lt;code&gt;status&lt;/code&gt; is a string with the reason the template wasn&amp;rsquo;t found.</source>
          <target state="translated">템플릿을 찾을 때 시도한 소스 목록입니다. &lt;code&gt;(origin, status)&lt;/code&gt; 포함하는 튜플 목록으로 형식이 지정됩니다. 여기서 &lt;code&gt;origin&lt;/code&gt; 은 &lt;a href=&quot;#template-origin-api&quot;&gt;원점과 유사한&lt;/a&gt; 객체이고 &lt;code&gt;status&lt;/code&gt; 는 템플릿을 찾지 못한 이유가있는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="ed5794c7daf85f419e0f96c7fd0f5da5366eb44f" translate="yes" xml:space="preserve">
          <source>A list of strings designating all applications that are enabled in this Django installation. Each string should be a dotted Python path to:</source>
          <target state="translated">이 Django 설치에서 활성화 된 모든 응용 프로그램을 지정하는 문자열 목록입니다. 각 문자열은 다음과 같은 점으로 구분 된 파이썬 경로 여야합니다.</target>
        </trans-unit>
        <trans-unit id="c8cf0a689c06fc364219135b480a9634e7b40f06" translate="yes" xml:space="preserve">
          <source>A list of strings representing the host/domain names that this Django site can serve. This is a security measure to prevent &lt;a href=&quot;../topics/security#host-headers-virtual-hosting&quot;&gt;HTTP Host header attacks&lt;/a&gt;, which are possible even under many seemingly-safe web server configurations.</source>
          <target state="translated">이 장고 사이트가 제공 할 수있는 호스트 / 도메인 이름을 나타내는 문자열 목록입니다. 이는 &lt;a href=&quot;../topics/security#host-headers-virtual-hosting&quot;&gt;HTTP&lt;/a&gt; 웹 서버 헤더 공격 을 막기위한 보안 조치로 , 많은 안전한 웹 서버 구성에서도 가능합니다.</target>
        </trans-unit>
        <trans-unit id="0269a6ef83fe1ea4177259957f657513b73a94ea" translate="yes" xml:space="preserve">
          <source>A list of the field names that will be prompted for when creating a user via the &lt;a href=&quot;../../ref/django-admin#django-admin-createsuperuser&quot;&gt;&lt;code&gt;createsuperuser&lt;/code&gt;&lt;/a&gt; management command. The user will be prompted to supply a value for each of these fields. It must include any field for which &lt;a href=&quot;../../ref/models/fields#django.db.models.Field.blank&quot;&gt;&lt;code&gt;blank&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;False&lt;/code&gt; or undefined and may include additional fields you want prompted for when a user is created interactively. &lt;code&gt;REQUIRED_FIELDS&lt;/code&gt; has no effect in other parts of Django, like creating a user in the admin.</source>
          <target state="translated">&lt;a href=&quot;../../ref/django-admin#django-admin-createsuperuser&quot;&gt; &lt;code&gt;createsuperuser&lt;/code&gt; &lt;/a&gt; management 명령을 통해 사용자를 작성할 때 프롬프트되는 필드 이름 목록 . 사용자에게 이러한 각 필드에 대한 값을 제공하라는 메시지가 표시됩니다. &lt;a href=&quot;../../ref/models/fields#django.db.models.Field.blank&quot;&gt; &lt;code&gt;blank&lt;/code&gt; &lt;/a&gt; 이 &lt;code&gt;False&lt;/code&gt; 이거나 정의되지 않은 필드를 포함해야하며 대화식으로 사용자를 작성할 때 프롬프트를 표시하려는 추가 필드를 포함 할 수 있습니다. &lt;code&gt;REQUIRED_FIELDS&lt;/code&gt; 는 관리자에서 사용자를 만드는 것과 같이 Django의 다른 부분에는 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="72d1cf3e25926ad473b149f20fd24f6510c4b7d8" translate="yes" xml:space="preserve">
          <source>A list of validators to run for this field. See the &lt;a href=&quot;../validators&quot;&gt;validators documentation&lt;/a&gt; for more information.</source>
          <target state="translated">이 필드에 대해 실행할 유효성 검증기 목록. 자세한 내용은 &lt;a href=&quot;../validators&quot;&gt;유효성 검사기 설명서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="8533038535f694e79c9fc8d8ae351ab0862f68d6" translate="yes" xml:space="preserve">
          <source>A list or tuple containing extra CSS classes to apply to the fieldset that is rendered for the inlines. Defaults to &lt;code&gt;None&lt;/code&gt;. As with classes configured in &lt;a href=&quot;#django.contrib.admin.ModelAdmin.fieldsets&quot;&gt;&lt;code&gt;fieldsets&lt;/code&gt;&lt;/a&gt;, inlines with a &lt;code&gt;collapse&lt;/code&gt; class will be initially collapsed and their header will have a small &amp;ldquo;show&amp;rdquo; link.</source>
          <target state="translated">인라인에 렌더링되는 필드 세트에 적용 할 추가 CSS 클래스를 포함하는 목록 또는 튜플입니다. 기본값은 &lt;code&gt;None&lt;/code&gt; 입니다. 구성 클래스와 마찬가지로 &lt;a href=&quot;#django.contrib.admin.ModelAdmin.fieldsets&quot;&gt; &lt;code&gt;fieldsets&lt;/code&gt; &lt;/a&gt; , A를 인라인 &lt;code&gt;collapse&lt;/code&gt; 클래스는 처음에 붕괴되고 자신의 헤더는 작은 &quot;쇼&quot;링크를해야합니다.</target>
        </trans-unit>
        <trans-unit id="b8b045c98f8c185d757b3cae611f585736c9181e" translate="yes" xml:space="preserve">
          <source>A list or tuple containing extra CSS classes to apply to the fieldset.</source>
          <target state="translated">필드 세트에 적용 할 추가 CSS 클래스를 포함하는 목록 또는 튜플입니다.</target>
        </trans-unit>
        <trans-unit id="a742d16f241a0a19c7590055a7e1b52d4490ed3b" translate="yes" xml:space="preserve">
          <source>A list or tuple of the name of the fields on which the index is desired.</source>
          <target state="translated">색인이 필요한 필드 이름의 목록 또는 튜플.</target>
        </trans-unit>
        <trans-unit id="aaabf4faa0590a008e9a9384c846017f8be71230" translate="yes" xml:space="preserve">
          <source>A literal that can be translated.</source>
          <target state="translated">번역 할 수있는 리터럴.</target>
        </trans-unit>
        <trans-unit id="294708cc3750d16d3b2b5ce076e0d01991bbb38f" translate="yes" xml:space="preserve">
          <source>A locale name, either a language specification of the form &lt;code&gt;ll&lt;/code&gt; or a combined language and country specification of the form &lt;code&gt;ll_CC&lt;/code&gt;. Examples: &lt;code&gt;it&lt;/code&gt;, &lt;code&gt;de_AT&lt;/code&gt;, &lt;code&gt;es&lt;/code&gt;, &lt;code&gt;pt_BR&lt;/code&gt;. The language part is always in lowercase and the country part in upper case. The separator is an underscore.</source>
          <target state="translated">로케일 이름, 양식의 언어 사양 중 하나 &lt;code&gt;ll&lt;/code&gt; 또는 양식의 결합 언어 및 국가 사양 &lt;code&gt;ll_CC&lt;/code&gt; . 예 : &lt;code&gt;it&lt;/code&gt; , &lt;code&gt;de_AT&lt;/code&gt; , &lt;code&gt;es&lt;/code&gt; , &lt;code&gt;pt_BR&lt;/code&gt; . 언어 부분은 항상 소문자이고 국가 부분은 대문자입니다. 구분 기호는 밑줄입니다.</target>
        </trans-unit>
        <trans-unit id="b23b34d7c6fa017ce72b23bc1f438b5b04173f71" translate="yes" xml:space="preserve">
          <source>A logger can have multiple handlers, and each handler can have a different log level. In this way, it is possible to provide different forms of notification depending on the importance of a message. For example, you could install one handler that forwards &lt;code&gt;ERROR&lt;/code&gt; and &lt;code&gt;CRITICAL&lt;/code&gt; messages to a paging service, while a second handler logs all messages (including &lt;code&gt;ERROR&lt;/code&gt; and &lt;code&gt;CRITICAL&lt;/code&gt; messages) to a file for later analysis.</source>
          <target state="translated">로거는 여러 핸들러를 가질 수 있으며 각 핸들러는 다른 로그 레벨을 가질 수 있습니다. 이러한 방식으로 메시지의 중요도에 따라 다른 형태의 알림을 제공 할 수 있습니다. 예를 들어 &lt;code&gt;ERROR&lt;/code&gt; 및 &lt;code&gt;CRITICAL&lt;/code&gt; 메시지를 페이징 서비스로 전달하는 하나의 핸들러를 설치 하고 두 번째 핸들러 는 나중에 분석 할 수 있도록 모든 메시지 ( &lt;code&gt;ERROR&lt;/code&gt; 및 &lt;code&gt;CRITICAL&lt;/code&gt; 메시지 포함)를 파일에 기록합니다.</target>
        </trans-unit>
        <trans-unit id="b4e1f4be4f633af3f2fd7e32db3b2cfe464cc5be" translate="yes" xml:space="preserve">
          <source>A logger is configured to have a &lt;em&gt;log level&lt;/em&gt;. This log level describes the severity of the messages that the logger will handle. Python defines the following log levels:</source>
          <target state="translated">로거는 &lt;em&gt;로그 레벨&lt;/em&gt; 을 갖도록 구성됩니다 . 이 로그 레벨은 로거가 처리 할 메시지의 심각도를 설명합니다. 파이썬은 다음과 같은 로그 수준을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="a3ceb2f61224a28c3ddaa682efd8e50e17e72cbe" translate="yes" xml:space="preserve">
          <source>A logger is the entry point into the logging system. Each logger is a named bucket to which messages can be written for processing.</source>
          <target state="translated">로거는 로깅 시스템의 진입 점입니다. 각 로거는 처리를 위해 메시지를 작성할 수있는 명명 된 버킷입니다.</target>
        </trans-unit>
        <trans-unit id="9c094c5877994d7389411572cfdcfee325bb458e" translate="yes" xml:space="preserve">
          <source>A lookup (e.g. &lt;code&gt;__icontains&lt;/code&gt;) that, if omitted, defaults to &lt;code&gt;__exact&lt;/code&gt;.</source>
          <target state="translated">생략하면 기본값은 &lt;code&gt;__exact&lt;/code&gt; 입니다 (예 : &lt;code&gt;__icontains&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="ea7086d0148f13b3206e633302b6a3d944921ea5" translate="yes" xml:space="preserve">
          <source>A lookup example</source>
          <target state="translated">조회 예</target>
        </trans-unit>
        <trans-unit id="1a49902e2a835cd7b7b3ebf3276076923bd6a5b9" translate="yes" xml:space="preserve">
          <source>A lookup expression consists of three parts:</source>
          <target state="translated">조회 표현식은 세 부분으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="2ffcc448fa0df1120efc7d0c81f367f6a2165565" translate="yes" xml:space="preserve">
          <source>A management command which takes one or more arbitrary arguments (labels) on the command line, and does something with each of them.</source>
          <target state="translated">명령 행에서 하나 이상의 임의 인수 (레이블)를 사용하고 각각에 대해 무언가를 수행하는 관리 명령.</target>
        </trans-unit>
        <trans-unit id="03d9b2fd540cdbfc5b7bd16dc72e5457d94d433e" translate="yes" xml:space="preserve">
          <source>A management command which takes one or more installed application labels as arguments, and does something with each of them.</source>
          <target state="translated">하나 이상의 설치된 응용 프로그램 레이블을 인수로 사용하고 각각에 대해 무언가를 수행하는 관리 명령.</target>
        </trans-unit>
        <trans-unit id="46a9751600762972d75798489b08aa0fae5830a6" translate="yes" xml:space="preserve">
          <source>A many-to-many relationship. Requires a positional argument: the class to which the model is related, which works exactly the same as it does for &lt;a href=&quot;#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt;, including &lt;a href=&quot;#recursive-relationships&quot;&gt;recursive&lt;/a&gt; and &lt;a href=&quot;#lazy-relationships&quot;&gt;lazy&lt;/a&gt; relationships.</source>
          <target state="translated">다 대다 관계. 위치 인수가 필요합니다. 모델이 관련된 클래스 . &lt;a href=&quot;#recursive-relationships&quot;&gt;재귀&lt;/a&gt; 및 &lt;a href=&quot;#lazy-relationships&quot;&gt;게으른&lt;/a&gt; 관계를 포함하여 &lt;a href=&quot;#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt; 와 동일하게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="730359511f445ab1e0760629c172fb1a7e3a955d" translate="yes" xml:space="preserve">
          <source>A many-to-one relationship. Requires two positional arguments: the class to which the model is related and the &lt;a href=&quot;#django.db.models.ForeignKey.on_delete&quot;&gt;&lt;code&gt;on_delete&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">다 대일 관계. 두 개의 위치 인수가 필요합니다 : 모델과 관련된 클래스와 &lt;a href=&quot;#django.db.models.ForeignKey.on_delete&quot;&gt; &lt;code&gt;on_delete&lt;/code&gt; &lt;/a&gt; 옵션.</target>
        </trans-unit>
        <trans-unit id="db5ccaaceb26c32dd2e8e469c3400e03b56b6361" translate="yes" xml:space="preserve">
          <source>A message file is a plain-text file, representing a single language, that contains all available &lt;a href=&quot;#term-translation-string&quot;&gt;translation strings&lt;/a&gt; and how they should be represented in the given language. Message files have a &lt;code&gt;.po&lt;/code&gt; file extension.</source>
          <target state="translated">메시지 파일은 단일 언어를 나타내는 일반 텍스트 파일이며 사용 가능한 모든 &lt;a href=&quot;#term-translation-string&quot;&gt;번역 문자열&lt;/a&gt; 과 해당 언어로 표현되는 방법 이 포함되어 있습니다. 메시지 파일의 확장자 는 &lt;code&gt;.po&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6928bf97226ede32d37896c9b86d95ab50f94d5f" translate="yes" xml:space="preserve">
          <source>A method on a class isn&amp;rsquo;t quite the same as a standalone function, so you can&amp;rsquo;t just apply a function decorator to the method &amp;ndash; you need to transform it into a method decorator first. The &lt;code&gt;method_decorator&lt;/code&gt; decorator transforms a function decorator into a method decorator so that it can be used on an instance method. For example:</source>
          <target state="translated">클래스의 메소드는 독립형 함수와 완전히 동일하지 않으므로 함수 데코레이터를 메소드에 적용 할 수 없으며 먼저 메소드 데코레이터로 변환해야합니다. &lt;code&gt;method_decorator&lt;/code&gt; 의 이 인스턴스 메소드를 사용할 수 있도록하는 방법은 장식 된 장식에 장식 기능을 변환한다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="12b90957b6b73116bfc04f74b8df1f5e3b59dd5a" translate="yes" xml:space="preserve">
          <source>A method that returns a list containing the geometry of each feature in the layer. If the optional argument &lt;code&gt;geos&lt;/code&gt; is set to &lt;code&gt;True&lt;/code&gt; then the geometries are converted to &lt;a href=&quot;geos#django.contrib.gis.geos.GEOSGeometry&quot;&gt;&lt;code&gt;GEOSGeometry&lt;/code&gt;&lt;/a&gt; objects. Otherwise, they are returned as &lt;a href=&quot;#django.contrib.gis.gdal.OGRGeometry&quot;&gt;&lt;code&gt;OGRGeometry&lt;/code&gt;&lt;/a&gt; objects:</source>
          <target state="translated">레이어에서 각 피처의 지오메트리를 포함하는 목록을 반환하는 메서드입니다. 선택적 인수의 경우 &lt;code&gt;geos&lt;/code&gt; 설정되어 &lt;code&gt;True&lt;/code&gt; 그 형상은로 변환됩니다 &lt;a href=&quot;geos#django.contrib.gis.geos.GEOSGeometry&quot;&gt; &lt;code&gt;GEOSGeometry&lt;/code&gt; 의&lt;/a&gt; 객체. 그렇지 않으면 &lt;a href=&quot;#django.contrib.gis.gdal.OGRGeometry&quot;&gt; &lt;code&gt;OGRGeometry&lt;/code&gt; &lt;/a&gt; 객체 로 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="e7eaa2b2130538d906624bbdffc2d6c5c1cfe9db" translate="yes" xml:space="preserve">
          <source>A method that returns a list of the values of a given field for each feature in the layer:</source>
          <target state="translated">레이어의 각 지형지 물에 대해 주어진 필드의 값 목록을 반환하는 메소드 :</target>
        </trans-unit>
        <trans-unit id="83a6432ef697f39e4ee6f90d5cb1d98bc2e6b116" translate="yes" xml:space="preserve">
          <source>A method that returns the index of the given field name. This will be the same for all features in a given layer:</source>
          <target state="translated">지정된 필드 명의 인덱스를 돌려주는 메소드입니다. 이것은 주어진 레이어의 모든 기능에 동일합니다.</target>
        </trans-unit>
        <trans-unit id="314e018449667981e204ef5fcc3c0d866aac7a76" translate="yes" xml:space="preserve">
          <source>A method that returns the value of the given field (specified by name) for this feature, &lt;strong&gt;not&lt;/strong&gt; a &lt;code&gt;Field&lt;/code&gt; wrapper object:</source>
          <target state="translated">이 기능을, (이름 지정) 지정된 필드의 값을 반환하는 방법 &lt;strong&gt;하지 &lt;/strong&gt; &lt;code&gt;Field&lt;/code&gt; 객체 랩퍼 :</target>
        </trans-unit>
        <trans-unit id="c193360ce5781f4c20c6581bc7059855c23a37f3" translate="yes" xml:space="preserve">
          <source>A method that takes a &lt;code&gt;template_name&lt;/code&gt; and yields &lt;a href=&quot;#django.template.base.Origin&quot;&gt;&lt;code&gt;Origin&lt;/code&gt;&lt;/a&gt; instances for each possible source.</source>
          <target state="translated">&lt;code&gt;template_name&lt;/code&gt; 을 사용하여 가능한 각 소스에 대해 &lt;a href=&quot;#django.template.base.Origin&quot;&gt; &lt;code&gt;Origin&lt;/code&gt; &lt;/a&gt; 인스턴스를 생성 하는 메소드입니다 .</target>
        </trans-unit>
        <trans-unit id="68996173b836e53d12d5a64ee7b1876efa9a1c69" translate="yes" xml:space="preserve">
          <source>A middleware can be written as a function that looks like this:</source>
          <target state="translated">미들웨어는 다음과 같은 함수로 작성 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1953b5724d1433c34ca1e3666d2f71f65ef3c17d" translate="yes" xml:space="preserve">
          <source>A middleware factory is a callable that takes a &lt;code&gt;get_response&lt;/code&gt; callable and returns a middleware. A middleware is a callable that takes a request and returns a response, just like a view.</source>
          <target state="translated">미들웨어 팩토리는 &lt;code&gt;get_response&lt;/code&gt; 호출 가능을 가져 와서 미들웨어를 리턴하는 호출 가능입니다. 미들웨어는 뷰와 같이 요청을 받고 응답을 리턴하는 호출 가능 항목입니다.</target>
        </trans-unit>
        <trans-unit id="fd552f5f317860465b7414c2689d23aac726c605" translate="yes" xml:space="preserve">
          <source>A middleware that sets the header in all responses.</source>
          <target state="translated">모든 응답에서 헤더를 설정하는 미들웨어.</target>
        </trans-unit>
        <trans-unit id="bea86103d56aa6fa4d3533c26fd4bcfd8032e24e" translate="yes" xml:space="preserve">
          <source>A mixin class providing common behavior for all date-based views.</source>
          <target state="translated">모든 날짜 기반보기에 공통적 인 동작을 제공하는 믹스 인 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="1d9decc4a6e84c4d8e5ff82134dd9df9ba911b3e" translate="yes" xml:space="preserve">
          <source>A mixin class that performs template-based response rendering for views that operate upon a list of object instances. Requires that the view it is mixed with provides &lt;code&gt;self.object_list&lt;/code&gt;, the list of object instances that the view is operating on. &lt;code&gt;self.object_list&lt;/code&gt; may be, but is not required to be, a &lt;a href=&quot;../models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">객체 인스턴스 목록에서 작동하는 뷰에 대해 템플릿 기반 응답 렌더링을 수행하는 믹스 인 클래스입니다. 뷰와 혼합 된 뷰는 뷰가 작동중인 객체 인스턴스 목록 인 &lt;code&gt;self.object_list&lt;/code&gt; 를 제공 해야합니다. &lt;code&gt;self.object_list&lt;/code&gt; 이 될 수 있지만, 될 필요하지 않습니다 &lt;a href=&quot;../models/querysets#django.db.models.query.QuerySet&quot;&gt; &lt;code&gt;QuerySet&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="07f15be9cca2f2d8e80bfb141f6312f3d048f5fb" translate="yes" xml:space="preserve">
          <source>A mixin class that performs template-based response rendering for views that operate upon a single object instance. Requires that the view it is mixed with provides &lt;code&gt;self.object&lt;/code&gt;, the object instance that the view is operating on. &lt;code&gt;self.object&lt;/code&gt; will usually be, but is not required to be, an instance of a Django model. It may be &lt;code&gt;None&lt;/code&gt; if the view is in the process of constructing a new instance.</source>
          <target state="translated">단일 객체 인스턴스에서 작동하는 뷰에 대해 템플릿 기반 응답 렌더링을 수행하는 믹스 인 클래스입니다. 뷰와 혼합 된 뷰는 뷰가 작동중인 객체 인스턴스 인 &lt;code&gt;self.object&lt;/code&gt; 를 제공 해야합니다. &lt;code&gt;self.object&lt;/code&gt; 는 일반적으로 Django 모델의 인스턴스 일 것이지만 반드시 그런 것은 아닙니다. 뷰가 새 인스턴스를 구성하는 중이면 &lt;code&gt;None&lt;/code&gt; 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="96bb22a67ecc799a291e0a9f7810b652a75eaf0d" translate="yes" xml:space="preserve">
          <source>A mixin class that provides facilities for creating and displaying forms.</source>
          <target state="translated">양식을 작성하고 표시하기위한 기능을 제공하는 믹스 인 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="25b71d6796feafa57fcbde0537603642e8ed066b" translate="yes" xml:space="preserve">
          <source>A mixin that can be used to display a list of objects.</source>
          <target state="translated">객체 목록을 표시하는 데 사용할 수있는 믹스 인.</target>
        </trans-unit>
        <trans-unit id="31cfc04f07530cbfb9e19ef0a06d36965af80b4a" translate="yes" xml:space="preserve">
          <source>A mixin that can be used to retrieve and provide parsing information for a day component of a date.</source>
          <target state="translated">날짜의 요일 구성 요소에 대한 구문 분석 정보를 검색하고 제공하는 데 사용할 수있는 믹스 인입니다.</target>
        </trans-unit>
        <trans-unit id="d73e84324ff72efe0c49cbca8ee4838727c3ce63" translate="yes" xml:space="preserve">
          <source>A mixin that can be used to retrieve and provide parsing information for a month component of a date.</source>
          <target state="translated">날짜의 월 구성 요소에 대한 구문 분석 정보를 검색하고 제공하는 데 사용할 수있는 믹스 인입니다.</target>
        </trans-unit>
        <trans-unit id="4667c832359d00cf5c7b684117f0c31541d6665c" translate="yes" xml:space="preserve">
          <source>A mixin that can be used to retrieve and provide parsing information for a week component of a date.</source>
          <target state="translated">날짜의 주 구성 요소에 대한 구문 분석 정보를 검색하고 제공하는 데 사용할 수있는 믹스 인입니다.</target>
        </trans-unit>
        <trans-unit id="3a74ff41a5c1f25dfecabbfe5cf1b08636aea09b" translate="yes" xml:space="preserve">
          <source>A mixin that can be used to retrieve and provide parsing information for a year component of a date.</source>
          <target state="translated">날짜의 연도 구성 요소에 대한 구문 분석 정보를 검색하고 제공하는 데 사용할 수있는 믹스 인입니다.</target>
        </trans-unit>
        <trans-unit id="4c4afb2d1523560d7d32b75dd8d4e16b1f512af9" translate="yes" xml:space="preserve">
          <source>A mixin that implements the lookup API on a class.</source>
          <target state="translated">클래스에서 조회 API를 구현하는 믹스 인입니다.</target>
        </trans-unit>
        <trans-unit id="d5056d6c2678d15fd23425ea936aa16fa359d28d" translate="yes" xml:space="preserve">
          <source>A mixin that provides basic HTTP GET and POST workflow.</source>
          <target state="translated">기본 HTTP GET 및 POST 워크 플로우를 제공하는 믹스 인.</target>
        </trans-unit>
        <trans-unit id="860e65847b75442603d0d6425f1484fa9c5b7577" translate="yes" xml:space="preserve">
          <source>A mixin to create case-insensitive text fields backed by the &lt;a href=&quot;https://www.postgresql.org/docs/current/citext.html&quot;&gt;citext&lt;/a&gt; type. Read about &lt;a href=&quot;https://www.postgresql.org/docs/current/citext.html#id-1.11.7.17.7&quot;&gt;the performance considerations&lt;/a&gt; prior to using it.</source>
          <target state="translated">&lt;a href=&quot;https://www.postgresql.org/docs/current/citext.html&quot;&gt;citext&lt;/a&gt; 유형으로 지원되는 대소 문자를 구분하지 않는 텍스트 필드를 작성하기위한 믹스 인 . 사용하기 전에 &lt;a href=&quot;https://www.postgresql.org/docs/current/citext.html#id-1.11.7.17.7&quot;&gt;성능 고려 사항을&lt;/a&gt; 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="c201d9dd071cd754649601510fb4912389c4659c" translate="yes" xml:space="preserve">
          <source>A model class. Can be explicitly provided, otherwise will be determined by examining &lt;code&gt;self.object&lt;/code&gt; or &lt;a href=&quot;mixins-single-object#django.views.generic.detail.SingleObjectMixin.queryset&quot;&gt;&lt;code&gt;queryset&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">모델 클래스. 명시 적으로 제공 할 수 있습니다. 그렇지 않으면 &lt;code&gt;self.object&lt;/code&gt; 또는 &lt;a href=&quot;mixins-single-object#django.views.generic.detail.SingleObjectMixin.queryset&quot;&gt; &lt;code&gt;queryset&lt;/code&gt; &lt;/a&gt; 을 검사하여 결정됩니다 .</target>
        </trans-unit>
        <trans-unit id="0896ad7d009f3dffc71b43141b8e0ecfbe265150" translate="yes" xml:space="preserve">
          <source>A model for storing the &lt;code&gt;domain&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt; attributes of a website.</source>
          <target state="translated">웹 사이트 의 &lt;code&gt;domain&lt;/code&gt; 및 &lt;code&gt;name&lt;/code&gt; 속성 을 저장하기위한 모델입니다 .</target>
        </trans-unit>
        <trans-unit id="148134c48a53f3b4157124e56b44012f2ca0950d" translate="yes" xml:space="preserve">
          <source>A model form instance attached to a model object will contain an &lt;code&gt;instance&lt;/code&gt; attribute that gives its methods access to that specific model instance.</source>
          <target state="translated">모델 객체에 연결된 모델 폼 인스턴스에는 해당 특정 모델 인스턴스에 대한 메소드 액세스를 제공 하는 &lt;code&gt;instance&lt;/code&gt; 속성 이 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="3886ca322c09acee05d15a1ae6e350dd4ac5d9f4" translate="yes" xml:space="preserve">
          <source>A model is the single, definitive source of data about your data. It contains the essential fields and behaviors of the data you&amp;rsquo;re storing. Generally, each model maps to a single database table.</source>
          <target state="translated">모델은 데이터에 대한 하나의 결정적인 데이터 소스입니다. 여기에는 저장하는 데이터의 필수 필드와 동작이 포함됩니다. 일반적으로 각 모델은 단일 데이터베이스 테이블에 매핑됩니다.</target>
        </trans-unit>
        <trans-unit id="c48de9e209624e69ff9f1af1130c8b58f04ac754" translate="yes" xml:space="preserve">
          <source>A model is the single, definitive source of information about your data. It contains the essential fields and behaviors of the data you&amp;rsquo;re storing. Generally, each model maps to a single database table.</source>
          <target state="translated">모델은 데이터에 대한 결정적인 단일 정보 소스입니다. 여기에는 저장하는 데이터의 필수 필드와 동작이 포함됩니다. 일반적으로 각 모델은 단일 데이터베이스 테이블에 매핑됩니다.</target>
        </trans-unit>
        <trans-unit id="6cd3061097b9121c82fc29b43dc1d962218f57db" translate="yes" xml:space="preserve">
          <source>A model is the single, definitive source of truth about your data. It contains the essential fields and behaviors of the data you&amp;rsquo;re storing. Django follows the &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/misc/design-philosophies/#dry&quot;&gt;DRY Principle&lt;/a&gt;. The goal is to define your data model in one place and automatically derive things from it.</source>
          <target state="translated">모델은 데이터에 대한 단일의 확실한 진실 소스입니다. 여기에는 저장하는 데이터의 필수 필드와 동작이 포함됩니다. Django는 &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/misc/design-philosophies/#dry&quot;&gt;DRY Principle을&lt;/a&gt; 따릅니다 . 목표는 데이터 모델을 한 곳에서 정의하고 자동으로 데이터 모델을 파생시키는 것입니다.</target>
        </trans-unit>
        <trans-unit id="1492c64833f5d164465ca104835afe05ebc57d92" translate="yes" xml:space="preserve">
          <source>A model with useful documentation might look like this:</source>
          <target state="translated">유용한 문서가있는 모델은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="15fd3f2324da8c0dc8c56f9bb2f30e027a24307b" translate="yes" xml:space="preserve">
          <source>A model: the model&amp;rsquo;s &lt;a href=&quot;../../ref/models/instances#django.db.models.Model.get_absolute_url&quot;&gt;&lt;code&gt;get_absolute_url()&lt;/code&gt;&lt;/a&gt; function will be called.</source>
          <target state="translated">모델 : 모델의 &lt;a href=&quot;../../ref/models/instances#django.db.models.Model.get_absolute_url&quot;&gt; &lt;code&gt;get_absolute_url()&lt;/code&gt; &lt;/a&gt; 함수가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="719dcb52bfd343bac780aff0c42faf376cebe1fa" translate="yes" xml:space="preserve">
          <source>A monthly archive page showing all objects in a given month. Objects with a date in the &lt;em&gt;future&lt;/em&gt; are not displayed unless you set &lt;code&gt;allow_future&lt;/code&gt; to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">주어진 달의 모든 객체를 보여주는 월별 아카이브 페이지. &lt;code&gt;allow_future&lt;/code&gt; 를 &lt;code&gt;True&lt;/code&gt; 로 설정하지 않으면 &lt;em&gt;미래에&lt;/em&gt; 날짜가있는 객체가 표시되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="29558e1ce9256ba552f6d5cea0ac0d8f0b314326" translate="yes" xml:space="preserve">
          <source>A more complex example:</source>
          <target state="translated">더 복잡한 예 :</target>
        </trans-unit>
        <trans-unit id="9bf274ad856263c18e43205a0cbfd2cbf9968141" translate="yes" xml:space="preserve">
          <source>A more efficient solution, however, would be to call &lt;a href=&quot;#django.contrib.sitemaps.ping_google&quot;&gt;&lt;code&gt;ping_google()&lt;/code&gt;&lt;/a&gt; from a cron script, or some other scheduled task. The function makes an HTTP request to Google&amp;rsquo;s servers, so you may not want to introduce that network overhead each time you call &lt;code&gt;save()&lt;/code&gt;.</source>
          <target state="translated">그러나 더 효율적인 해결책 은 cron 스크립트 또는 다른 예약 된 작업에서 &lt;a href=&quot;#django.contrib.sitemaps.ping_google&quot;&gt; &lt;code&gt;ping_google()&lt;/code&gt; &lt;/a&gt; 을 호출 하는 것입니다. 이 함수는 Google 서버에 HTTP 요청을하므로 &lt;code&gt;save()&lt;/code&gt; 를 호출 할 때마다 해당 네트워크 오버 헤드를 도입하지 않을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="899917240e8a596deeaafcbf6a66f601cab9a99e" translate="yes" xml:space="preserve">
          <source>A more granular way to use the caching framework is by caching the output of individual views. &lt;code&gt;django.views.decorators.cache&lt;/code&gt; defines a &lt;code&gt;cache_page&lt;/code&gt; decorator that will automatically cache the view&amp;rsquo;s response for you:</source>
          <target state="translated">캐싱 프레임 워크를 사용하는보다 세분화 된 방법은 개별 뷰의 출력을 캐싱하는 것입니다. &lt;code&gt;django.views.decorators.cache&lt;/code&gt; 는 뷰의 응답을 자동으로 캐시 하는 &lt;code&gt;cache_page&lt;/code&gt; 데코레이터를 정의 합니다.</target>
        </trans-unit>
        <trans-unit id="be408e96ada980e57023a57c0abd62abb17ac3cc" translate="yes" xml:space="preserve">
          <source>A naive implementation of &lt;code&gt;CycleNode&lt;/code&gt; might look something like this:</source>
          <target state="translated">&lt;code&gt;CycleNode&lt;/code&gt; 의 순진한 구현은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="fbfaf2233980de023165c58e330348304c420528" translate="yes" xml:space="preserve">
          <source>A new migration is created each time the order of &lt;code&gt;choices&lt;/code&gt; changes.</source>
          <target state="translated">&lt;code&gt;choices&lt;/code&gt; 순서가 변경 될 때마다 새 마이그레이션이 작성 됩니다.</target>
        </trans-unit>
        <trans-unit id="fdcbd94cf5e9799d7aa71eb6aeddbb2269d0ab94" translate="yes" xml:space="preserve">
          <source>A new raster is created when a &lt;code&gt;dict&lt;/code&gt; is passed to the &lt;a href=&quot;#django.contrib.gis.gdal.GDALRaster&quot;&gt;&lt;code&gt;GDALRaster&lt;/code&gt;&lt;/a&gt; constructor. The dictionary contains defining parameters of the new raster, such as the origin, size, or spatial reference system. The dictionary can also contain pixel data and information about the format of the new raster. The resulting raster can therefore be file-based or memory-based, depending on the driver specified.</source>
          <target state="translated">&lt;code&gt;dict&lt;/code&gt; 가 &lt;a href=&quot;#django.contrib.gis.gdal.GDALRaster&quot;&gt; &lt;code&gt;GDALRaster&lt;/code&gt; &lt;/a&gt; 생성자에 전달 될 때 새 래스터가 작성됩니다 . 사전에는 원점, 크기 또는 공간 참조 시스템과 같은 새 래스터의 정의 매개 변수가 포함됩니다. 사전에는 픽셀 데이터와 새 래스터 형식에 대한 정보도 포함될 수 있습니다. 따라서 결과 드라이버는 지정된 드라이버에 따라 파일 기반 또는 메모리 기반 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c88fd72318d44b1f4fedee51ebe0bd390af6d8e4" translate="yes" xml:space="preserve">
          <source>A normal &lt;a href=&quot;../models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; can only &amp;ldquo;point to&amp;rdquo; one other model, which means that if the &lt;code&gt;TaggedItem&lt;/code&gt; model used a &lt;a href=&quot;../models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; it would have to choose one and only one model to store tags for. The contenttypes application provides a special field type (&lt;code&gt;GenericForeignKey&lt;/code&gt;) which works around this and allows the relationship to be with any model:</source>
          <target state="translated">일반 &lt;a href=&quot;../models/fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt; 는 하나의 다른 모델 만 &quot;지정&quot;할 수 있습니다. 즉, &lt;code&gt;TaggedItem&lt;/code&gt; 모델이 &lt;a href=&quot;../models/fields#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; 를&lt;/a&gt; 사용하는 경우 태그를 저장할 하나의 모델 만 선택해야합니다. contenttypes 애플리케이션은이를 해결하는 특수 필드 유형 ( &lt;code&gt;GenericForeignKey&lt;/code&gt; )을 제공하며 모든 모델과의 관계를 허용합니다.</target>
        </trans-unit>
        <trans-unit id="2be1197c261b59cac7cba31653435c7922f1fe5a" translate="yes" xml:space="preserve">
          <source>A number (or variable) containing the number of paragraphs or words to generate (default is 1).</source>
          <target state="translated">생성 할 단락 또는 단어 수를 포함하는 숫자 (또는 변수)입니다 (기본값은 1).</target>
        </trans-unit>
        <trans-unit id="ee69d710750a88ba9ea68ef6babb7ba2ecdeba11" translate="yes" xml:space="preserve">
          <source>A number of custom properties are added to the enumeration classes &amp;ndash; &lt;code&gt;.choices&lt;/code&gt;, &lt;code&gt;.labels&lt;/code&gt;, &lt;code&gt;.values&lt;/code&gt;, and &lt;code&gt;.names&lt;/code&gt; &amp;ndash; to make it easier to access lists of those separate parts of the enumeration. Use &lt;code&gt;.choices&lt;/code&gt; as a suitable value to pass to &lt;a href=&quot;#django.db.models.Field.choices&quot;&gt;&lt;code&gt;choices&lt;/code&gt;&lt;/a&gt; in a field definition.</source>
          <target state="translated">열거 클래스에 &lt;code&gt;.choices&lt;/code&gt; , &lt;code&gt;.labels&lt;/code&gt; , &lt;code&gt;.values&lt;/code&gt; 및 &lt;code&gt;.names&lt;/code&gt; 라는 여러 사용자 정의 특성이 추가되어 열거 의 개별 파트 목록에 쉽게 액세스 할 수 있습니다. &lt;code&gt;.choices&lt;/code&gt; 를 필드 정의에서 &lt;a href=&quot;#django.db.models.Field.choices&quot;&gt; &lt;code&gt;choices&lt;/code&gt; &lt;/a&gt; 에 전달하기에 적합한 값으로 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="9684aa2aa2c853fab07837c67e6d552d289e1a2b" translate="yes" xml:space="preserve">
          <source>A number of settings can be used to adjust language cookie options:</source>
          <target state="translated">언어 쿠키 옵션을 조정하기 위해 여러 설정을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6a6d2bc6b98e291792cb05eaf6d40ed79d11f0db" translate="yes" xml:space="preserve">
          <source>A number of settings can be used to control Django&amp;rsquo;s CSRF behavior:</source>
          <target state="translated">Django의 CSRF 동작을 제어하기 위해 여러 설정을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="14a9d3bd76abfd2e1b286d7e666478d5e81c64a3" translate="yes" xml:space="preserve">
          <source>A number or &lt;a href=&quot;measure#django.contrib.gis.measure.Distance&quot;&gt;&lt;code&gt;Distance&lt;/code&gt;&lt;/a&gt; object containing the distance.</source>
          <target state="translated">&lt;a href=&quot;measure#django.contrib.gis.measure.Distance&quot;&gt; &lt;code&gt;Distance&lt;/code&gt; &lt;/a&gt; 포함 된 숫자 또는 거리 객체.</target>
        </trans-unit>
        <trans-unit id="7c8960ee6275cad87f1795ad265f128dbe78c2e3" translate="yes" xml:space="preserve">
          <source>A number representing the first day of the week. This is especially useful when displaying a calendar. This value is only used when not using format internationalization, or when a format cannot be found for the current locale.</source>
          <target state="translated">첫 번째 요일을 나타내는 숫자입니다. 캘린더를 표시 할 때 특히 유용합니다. 이 값은 형식 국제화를 사용하지 않거나 현재 로케일에 대한 형식을 찾을 수없는 경우에만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="260fe2bfb919d21725b6a3b8d242bb1012f492d5" translate="yes" xml:space="preserve">
          <source>A one-to-one relationship. Conceptually, this is similar to a &lt;a href=&quot;#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; with &lt;a href=&quot;#django.db.models.Field.unique&quot;&gt;&lt;code&gt;unique=True&lt;/code&gt;&lt;/a&gt;, but the &amp;ldquo;reverse&amp;rdquo; side of the relation will directly return a single object.</source>
          <target state="translated">일대일 관계. 개념적으로 이것은 &lt;a href=&quot;#django.db.models.Field.unique&quot;&gt; &lt;code&gt;unique=True&lt;/code&gt; &lt;/a&gt; 인 &lt;a href=&quot;#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; &lt;/a&gt; 와 유사 하지만 관계의 &quot;역&quot;면이 단일 객체를 직접 반환합니다.</target>
        </trans-unit>
        <trans-unit id="82ec37cf520cd3aca04e4b15a233e7fbb0701da3" translate="yes" xml:space="preserve">
          <source>A package can be imported with &lt;code&gt;import foo.bar&lt;/code&gt; or &lt;code&gt;from foo import
bar&lt;/code&gt;. For a directory (like &lt;code&gt;polls&lt;/code&gt;) to form a package, it must contain a special file &lt;code&gt;__init__.py&lt;/code&gt;, even if this file is empty.</source>
          <target state="translated">&lt;code&gt;import foo.bar&lt;/code&gt; 또는 &lt;code&gt;from foo import bar&lt;/code&gt; 패키지를 가져올 수 있습니다 . 디렉토리 (예 : &lt;code&gt;polls&lt;/code&gt; )가 패키지를 구성 하려면이 파일이 비어 있어도 특수 파일 &lt;code&gt;__init__.py&lt;/code&gt; 가 포함되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="fe88bf589bad5331685f0b694ee10621de3d9ebf" translate="yes" xml:space="preserve">
          <source>A page acts like a sequence of &lt;a href=&quot;#django.core.paginator.Page.object_list&quot;&gt;&lt;code&gt;Page.object_list&lt;/code&gt;&lt;/a&gt; when using &lt;code&gt;len()&lt;/code&gt; or iterating it directly.</source>
          <target state="translated">&lt;code&gt;len()&lt;/code&gt; 하거나 직접 반복 할 때 페이지는 &lt;a href=&quot;#django.core.paginator.Page.object_list&quot;&gt; &lt;code&gt;Page.object_list&lt;/code&gt; &lt;/a&gt; 시퀀스처럼 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="ea91d69ee7b3cdd3ffd154327a68f8b9d1066791" translate="yes" xml:space="preserve">
          <source>A page makes a POST request via AJAX, and the page does not have an HTML form with a &lt;a href=&quot;templates/builtins#std:templatetag-csrf_token&quot;&gt;&lt;code&gt;csrf_token&lt;/code&gt;&lt;/a&gt; that would cause the required CSRF cookie to be sent.</source>
          <target state="translated">페이지가 AJAX를 통해 POST 요청을하고 페이지에 &lt;a href=&quot;templates/builtins#std:templatetag-csrf_token&quot;&gt; &lt;code&gt;csrf_token&lt;/code&gt; &lt;/a&gt; 이 포함 된 HTML 양식이 없어 필요한 CSRF 쿠키가 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="db1e7c4f478f9ed1692eec7377542ae59a6cad6b" translate="yes" xml:space="preserve">
          <source>A page representing a list of objects.</source>
          <target state="translated">객체 목록을 나타내는 페이지입니다.</target>
        </trans-unit>
        <trans-unit id="9b2250fff75ccf8752ed584618df1c77cd8a62e9" translate="yes" xml:space="preserve">
          <source>A page representing an individual object. If the object has a date value in the future, the view will throw a 404 error by default, unless you set &lt;code&gt;allow_future&lt;/code&gt; to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">개별 객체를 나타내는 페이지입니다. 객체에 향후 날짜 값이있는 경우 &lt;code&gt;allow_future&lt;/code&gt; 를 &lt;code&gt;True&lt;/code&gt; 로 설정하지 않으면보기에 기본적으로 404 오류가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="2949ab8ad8852c4567fba9a3930eb4a5b7128a4e" translate="yes" xml:space="preserve">
          <source>A path to a callable that will be used to configure logging in the Django project. Points at an instance of Python&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3/library/logging.config.html#logging-config-dictschema&quot;&gt;dictConfig&lt;/a&gt; configuration method by default.</source>
          <target state="translated">Django 프로젝트에서 로깅을 구성하는 데 사용될 호출 가능 파일의 경로입니다. 기본적 으로 Python의 &lt;a href=&quot;https://docs.python.org/3/library/logging.config.html#logging-config-dictschema&quot;&gt;dictConfig&lt;/a&gt; 구성 메소드 인스턴스를 가리 킵니다 .</target>
        </trans-unit>
        <trans-unit id="cc04c4b270112b3a61afa449d60802f426616dd2" translate="yes" xml:space="preserve">
          <source>A pluggable backend system</source>
          <target state="translated">플러그 형 백엔드 시스템</target>
        </trans-unit>
        <trans-unit id="212aa0a6527afc2cd79de1090728721742a6fc76" translate="yes" xml:space="preserve">
          <source>A prefix added to a session key to build a cache key string.</source>
          <target state="translated">캐시 키 문자열을 빌드하기 위해 세션 키에 추가 된 접 두부입니다.</target>
        </trans-unit>
        <trans-unit id="0905ff08eb4e62e9ae391068ebd781dab92dfede" translate="yes" xml:space="preserve">
          <source>A proxy model must inherit from exactly one non-abstract model class. You can&amp;rsquo;t inherit from multiple non-abstract models as the proxy model doesn&amp;rsquo;t provide any connection between the rows in the different database tables. A proxy model can inherit from any number of abstract model classes, providing they do &lt;em&gt;not&lt;/em&gt; define any model fields. A proxy model may also inherit from any number of proxy models that share a common non-abstract parent class.</source>
          <target state="translated">프록시 모델은 정확히 하나의 비추 상 모델 클래스에서 상속해야합니다. 프록시 모델은 다른 데이터베이스 테이블의 행 사이에 연결을 제공하지 않으므로 여러 비추 상 모델에서 상속 할 수 없습니다. 프록시 모델은 모델 필드를 정의 하지 &lt;em&gt;않는 한&lt;/em&gt; 여러 추상 모델 클래스에서 상속 할 수 있습니다. 프록시 모델은 일반적인 비추 상 상위 클래스를 공유하는 여러 프록시 모델에서 상속 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="89ad3a34b293c9a94acd9842e918441712b97f49" translate="yes" xml:space="preserve">
          <source>A public site that lets people view polls and vote in them.</source>
          <target state="translated">사람들이 설문 조사를보고 투표 할 수있는 공개 사이트.</target>
        </trans-unit>
        <trans-unit id="21811245c11a388670c4410d035b57af96020fc8" translate="yes" xml:space="preserve">
          <source>A query contains invalid order_by arguments</source>
          <target state="translated">쿼리에 잘못된 order_by 인수가 포함되어 있습니다</target>
        </trans-unit>
        <trans-unit id="d46f438f8ac21f5333da9bea6c518c912f193e14" translate="yes" xml:space="preserve">
          <source>A queryset that has deferred fields will still return model instances. Each deferred field will be retrieved from the database if you access that field (one at a time, not all the deferred fields at once).</source>
          <target state="translated">지연된 필드가있는 쿼리 집합은 여전히 ​​모델 인스턴스를 반환합니다. 해당 필드에 액세스하는 경우 각 연기 된 필드가 데이터베이스에서 검색됩니다 (한 번에 하나씩, 모든 연기 된 필드가 한 번에 하나씩).</target>
        </trans-unit>
        <trans-unit id="0016c0926263f64da9b49c792ce09a8befc57ff3" translate="yes" xml:space="preserve">
          <source>A quick explanation:</source>
          <target state="translated">빠른 설명 :</target>
        </trans-unit>
        <trans-unit id="8bf20afe47c78011813b15ee67d913088308d916" translate="yes" xml:space="preserve">
          <source>A quick logging primer</source>
          <target state="translated">빠른 로깅 입문서</target>
        </trans-unit>
        <trans-unit id="62fe8441c1582cba53eeae6626676611ae56a303" translate="yes" xml:space="preserve">
          <source>A quick overview</source>
          <target state="translated">빠른 개요</target>
        </trans-unit>
        <trans-unit id="f4e824b93916dbec2a2c582055de770c60055913" translate="yes" xml:space="preserve">
          <source>A quick rundown:</source>
          <target state="translated">빠른 요약 :</target>
        </trans-unit>
        <trans-unit id="f85a220df813507e0736ad4402e8e8f916a50102" translate="yes" xml:space="preserve">
          <source>A read-only field can not only display data from a model&amp;rsquo;s field, it can also display the output of a model&amp;rsquo;s method or a method of the &lt;code&gt;ModelAdmin&lt;/code&gt; class itself. This is very similar to the way &lt;a href=&quot;#django.contrib.admin.ModelAdmin.list_display&quot;&gt;&lt;code&gt;ModelAdmin.list_display&lt;/code&gt;&lt;/a&gt; behaves. This provides a way to use the admin interface to provide feedback on the status of the objects being edited, for example:</source>
          <target state="translated">읽기 전용 필드는 모델 필드의 데이터를 표시 할 수있을뿐 아니라 모델의 메소드 출력 또는 &lt;code&gt;ModelAdmin&lt;/code&gt; 클래스 자체 의 메소드를 표시 할 수도 있습니다. 이는 &lt;a href=&quot;#django.contrib.admin.ModelAdmin.list_display&quot;&gt; &lt;code&gt;ModelAdmin.list_display&lt;/code&gt; 의&lt;/a&gt; 작동 방식과 매우 유사합니다 . 이를 통해 관리 인터페이스를 사용하여 편집중인 객체의 상태에 대한 피드백을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d35a951107c7b0d1284ef46b41d951687bf5d0e1" translate="yes" xml:space="preserve">
          <source>A read-only property to access the file&amp;rsquo;s relative URL by calling the &lt;a href=&quot;../files/storage#django.core.files.storage.Storage.url&quot;&gt;&lt;code&gt;url()&lt;/code&gt;&lt;/a&gt; method of the underlying &lt;a href=&quot;../files/storage#django.core.files.storage.Storage&quot;&gt;&lt;code&gt;Storage&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">기본 &lt;a href=&quot;../files/storage#django.core.files.storage.Storage&quot;&gt; &lt;code&gt;Storage&lt;/code&gt; &lt;/a&gt; 클래스 의 &lt;a href=&quot;../files/storage#django.core.files.storage.Storage.url&quot;&gt; &lt;code&gt;url()&lt;/code&gt; &lt;/a&gt; 메서드를 호출하여 파일의 상대 URL에 액세스하기위한 읽기 전용 속성 입니다.</target>
        </trans-unit>
        <trans-unit id="264b8665b02441c752a97381c5ea6454009bfd61" translate="yes" xml:space="preserve">
          <source>A ready-to-use instance of the storage backend defined in this setting can be found at &lt;code&gt;django.contrib.staticfiles.storage.staticfiles_storage&lt;/code&gt;.</source>
          <target state="translated">이 설정에 정의 된 즉시 사용 가능한 스토리지 백엔드 인스턴스는 &lt;code&gt;django.contrib.staticfiles.storage.staticfiles_storage&lt;/code&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9deac44969164f208504fa643975a08ecf1e9c22" translate="yes" xml:space="preserve">
          <source>A regular expression pattern; only files with names matching this expression will be allowed as choices.</source>
          <target state="translated">정규식 패턴; 이 식과 일치하는 이름을 가진 파일 만 선택으로 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="f8069b297d7e3b5928ddae8cc3ef9a1de36d1784" translate="yes" xml:space="preserve">
          <source>A regular expression specified either as a string or a compiled regular expression object.</source>
          <target state="translated">문자열 또는 컴파일 된 정규식 객체로 지정된 정규식입니다.</target>
        </trans-unit>
        <trans-unit id="b3e17846c09df104c035ce1019e8afbfebb39705" translate="yes" xml:space="preserve">
          <source>A request to &lt;code&gt;/articles/2005/03/&lt;/code&gt; would match the third entry in the list. Django would call the function &lt;code&gt;views.month_archive(request, year=2005, month=3)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;/articles/2005/03/&lt;/code&gt; 대한 요청 은 목록의 세 번째 항목과 일치합니다. 장고는 &lt;code&gt;views.month_archive(request, year=2005, month=3)&lt;/code&gt; 함수를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="1141ad0e497939b3d0326e2bb714a5f8f0651c32" translate="yes" xml:space="preserve">
          <source>A rollback hook is harder to implement robustly than a commit hook, since a variety of things can cause an implicit rollback.</source>
          <target state="translated">롤백 후크는 커밋 후크보다 견고하게 구현하기가 어렵습니다. 다양한 것들이 암시 적 롤백을 유발할 수 있기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="a0f2910c500b4c01d0f9c4b73fea023c06a8f2ec" translate="yes" xml:space="preserve">
          <source>A router doesn&amp;rsquo;t have to provide &lt;em&gt;all&lt;/em&gt; these methods &amp;ndash; it may omit one or more of them. If one of the methods is omitted, Django will skip that router when performing the relevant check.</source>
          <target state="translated">라우터는 이러한 &lt;em&gt;모든&lt;/em&gt; 방법 을 제공 할 필요는 없습니다 . 하나 이상의 방법을 생략 할 수도 있습니다. 방법 중 하나를 생략하면 Django는 관련 검사를 수행 할 때 해당 라우터를 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="99862bb181d63723701aeb82da82d24e41944f75" translate="yes" xml:space="preserve">
          <source>A savepoint is a marker within a transaction that enables you to roll back part of a transaction, rather than the full transaction. Savepoints are available with the SQLite, PostgreSQL, Oracle, and MySQL (when using the InnoDB storage engine) backends. Other backends provide the savepoint functions, but they&amp;rsquo;re empty operations &amp;ndash; they don&amp;rsquo;t actually do anything.</source>
          <target state="translated">저장 점은 전체 트랜잭션이 아닌 트랜잭션의 일부를 롤백 할 수있는 트랜잭션 내의 마커입니다. 저장 점은 SQLite, PostgreSQL, Oracle 및 MySQL (InnoDB 스토리지 엔진 사용시) 백엔드에서 사용할 수 있습니다. 다른 백엔드는 저장 점 기능을 제공하지만 빈 작업이므로 실제로 아무 작업도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d4292f7d992c9667450aab42779f30037c78bf15" translate="yes" xml:space="preserve">
          <source>A secret key for a particular Django installation. This is used to provide &lt;a href=&quot;../topics/signing&quot;&gt;cryptographic signing&lt;/a&gt;, and should be set to a unique, unpredictable value.</source>
          <target state="translated">특정 장고 설치를위한 비밀 키. &lt;a href=&quot;../topics/signing&quot;&gt;암호화 서명&lt;/a&gt; 을 제공하는 데 사용되며 예측할 수없는 고유 한 값으로 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="e5abedef0dab684866dd251f526ef711324e9b4c" translate="yes" xml:space="preserve">
          <source>A set of Django template filters useful for adding a &amp;ldquo;human touch&amp;rdquo; to data.</source>
          <target state="translated">Django 템플릿 필터 세트는 데이터에 &quot;휴먼 터치&quot;를 추가하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="af49a9e2d4343bd27040146d5bc9374c70d04626" translate="yes" xml:space="preserve">
          <source>A set of Django template filters useful for adding a &amp;ldquo;human touch&amp;rdquo; to data. See &lt;a href=&quot;../contrib/humanize&quot;&gt;django.contrib.humanize&lt;/a&gt;.</source>
          <target state="translated">Django 템플릿 필터 세트는 데이터에 &quot;휴먼 터치&quot;를 추가하는 데 유용합니다. &lt;a href=&quot;../contrib/humanize&quot;&gt;django.contrib.humanize를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d43f0c72c4fd91b12c9405a7bc3fc016bf04de08" translate="yes" xml:space="preserve">
          <source>A set of view decorators that can be used to override the middleware or to only set the header for certain views.</source>
          <target state="translated">미들웨어를 대체하거나 특정보기의 헤더 만 설정하는 데 사용할 수있는보기 데코레이터 세트.</target>
        </trans-unit>
        <trans-unit id="bf0922ecc3aa3a03b6f3d487c08aece9861eaada" translate="yes" xml:space="preserve">
          <source>A settings file is just a Python module with module-level variables.</source>
          <target state="translated">설정 파일은 모듈 수준 변수가있는 Python 모듈입니다.</target>
        </trans-unit>
        <trans-unit id="0186f8b1d39321473fb068134c3e3a26c8ee2bc5" translate="yes" xml:space="preserve">
          <source>A short (less than 80 characters) string describing the problem. The string should &lt;em&gt;not&lt;/em&gt; contain newlines.</source>
          <target state="translated">문제를 설명하는 짧은 (80 자 미만) 문자열 문자열은해야 &lt;em&gt;하지&lt;/em&gt; 개행 문자가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="c100fc483386abb2dd931bc04670ffe2fe839222" translate="yes" xml:space="preserve">
          <source>A short description of the command, which will be printed in the help message when the user runs the command &lt;code&gt;python manage.py help &amp;lt;command&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">사용자가 &lt;code&gt;python manage.py help &amp;lt;command&amp;gt;&lt;/code&gt; 명령을 실행할 때 도움말 메시지에 인쇄되는 명령에 대한 간단한 설명입니다 .</target>
        </trans-unit>
        <trans-unit id="b2a9223dee16a986b617925484a6d6b2719d3cef" translate="yes" xml:space="preserve">
          <source>A short description of what the view does.</source>
          <target state="translated">뷰의 기능에 대한 간단한 설명.</target>
        </trans-unit>
        <trans-unit id="655f802b992b6ebb174edbb5c22a9bc2868aa575" translate="yes" xml:space="preserve">
          <source>A shortcut for &lt;code&gt;keep_lazy(str)(func)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;keep_lazy(str)(func)&lt;/code&gt; 의 바로 가기입니다 .</target>
        </trans-unit>
        <trans-unit id="ab7d9f5869f30583cb0a0942b7d296f13df0b71a" translate="yes" xml:space="preserve">
          <source>A shortcut that returns the referenced object.</source>
          <target state="translated">참조 된 객체를 반환하는 바로 가기입니다.</target>
        </trans-unit>
        <trans-unit id="533a8c1697c2f1aaef8586180c46b6f93d6b8d36" translate="yes" xml:space="preserve">
          <source>A shortcut: &lt;a href=&quot;../topics/http/shortcuts#django.shortcuts.get_object_or_404&quot;&gt;&lt;code&gt;get_object_or_404()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">지름길 : &lt;a href=&quot;../topics/http/shortcuts#django.shortcuts.get_object_or_404&quot;&gt; &lt;code&gt;get_object_or_404()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="07f71c1eb9d54edbbc611a5fdc3bb99bd8ced5b2" translate="yes" xml:space="preserve">
          <source>A shortcut: &lt;a href=&quot;../topics/http/shortcuts#django.shortcuts.render&quot;&gt;&lt;code&gt;render()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">지름길 : &lt;a href=&quot;../topics/http/shortcuts#django.shortcuts.render&quot;&gt; &lt;code&gt;render()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6729d181636988aa24357c79590c7770640b9ed9" translate="yes" xml:space="preserve">
          <source>A shorthand string for well-known standards (&lt;code&gt;'WGS84'&lt;/code&gt;, &lt;code&gt;'WGS72'&lt;/code&gt;, &lt;code&gt;'NAD27'&lt;/code&gt;, &lt;code&gt;'NAD83'&lt;/code&gt;)</source>
          <target state="translated">잘 알려진 표준 ( &lt;code&gt;'WGS84'&lt;/code&gt; , &lt;code&gt;'WGS72'&lt;/code&gt; , &lt;code&gt;'NAD27'&lt;/code&gt; , &lt;code&gt;'NAD83'&lt;/code&gt; ) 의 줄임말</target>
        </trans-unit>
        <trans-unit id="44789168dcdda5c753303a0d002582b3b8208802" translate="yes" xml:space="preserve">
          <source>A similar class-based view might look like:</source>
          <target state="translated">비슷한 클래스 기반 뷰는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2d5955575a89a26aa425f5683a897c48ebfe238d" translate="yes" xml:space="preserve">
          <source>A similar issue exists if you want to include these sequences in template filter or tag arguments. For example, when parsing a block tag, Django&amp;rsquo;s template parser looks for the first occurrence of &lt;code&gt;%}&lt;/code&gt; after a &lt;code&gt;{%&lt;/code&gt;. This prevents the use of &lt;code&gt;&quot;%}&quot;&lt;/code&gt; as a string literal. For example, a &lt;code&gt;TemplateSyntaxError&lt;/code&gt; will be raised for the following expressions:</source>
          <target state="translated">템플릿 필터 또는 태그 인수에 이러한 시퀀스를 포함하려는 경우에도 비슷한 문제가 발생합니다. 예를 들어, 블록 태그를 구문 분석 할 때 Django의 템플리트 구문 분석기는 &lt;code&gt;{%&lt;/code&gt; 다음에서 &lt;code&gt;%}&lt;/code&gt; 의 첫 항목을 찾습니다 . 이렇게하면 &lt;code&gt;&quot;%}&quot;&lt;/code&gt; 가 문자열 리터럴로 사용되지 않습니다. 예를 들어 다음 표현식에 대해 &lt;code&gt;TemplateSyntaxError&lt;/code&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="40cf8919ea34c404a49fa4a02115691af647ed4f" translate="yes" xml:space="preserve">
          <source>A simple example</source>
          <target state="translated">간단한 예</target>
        </trans-unit>
        <trans-unit id="8fb3bc34449ada4e23459ce54cf3c94c42066d90" translate="yes" xml:space="preserve">
          <source>A simple view</source>
          <target state="translated">간단한 견해</target>
        </trans-unit>
        <trans-unit id="451b6bec5221a94ee55634674e25fd76e75df8f7" translate="yes" xml:space="preserve">
          <source>A single argument is required:</source>
          <target state="translated">단일 인수가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="ed7bcbdf87c7c00d7a700b757114dee7631acfa9" translate="yes" xml:space="preserve">
          <source>A single size to snap both the X and Y grids to.</source>
          <target state="translated">X 및 Y 그리드를 모두 스냅 할 수있는 단일 크기입니다.</target>
        </trans-unit>
        <trans-unit id="36feceec2a65811cc8dd586631224d3cb5111fcc" translate="yes" xml:space="preserve">
          <source>A single-line string providing a hint for fixing the problem. If no hint can be provided, or the hint is self-evident from the error message, the hint can be omitted, or a value of &lt;code&gt;None&lt;/code&gt; can be used.</source>
          <target state="translated">문제를 해결하기위한 힌트를 제공하는 단일 행 문자열입니다. 힌트를 제공 할 수 없거나 오류 메시지에서 힌트가 자명 한 경우 힌트를 생략하거나 &lt;code&gt;None&lt;/code&gt; 값을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="369e8ae168198c931b5f367efb6481e7e3afd1c1" translate="yes" xml:space="preserve">
          <source>A sitemap is an XML file on your website that tells search-engine indexers how frequently your pages change and how &amp;ldquo;important&amp;rdquo; certain pages are in relation to other pages on your site. This information helps search engines index your site.</source>
          <target state="translated">사이트 맵은 웹 사이트의 XML 파일로서 검색 엔진 색인 작성기에 페이지 변경 빈도와 특정 페이지가 사이트의 다른 페이지와 &quot;중요한&quot;방법을 알려줍니다. 이 정보는 검색 엔진이 사이트를 색인하는 데 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="03da6dcb22ad64527f2d5d47782f72406ebe18ac" translate="yes" xml:space="preserve">
          <source>A storage object, which handles the storage and retrieval of your files. See &lt;a href=&quot;../../topics/files&quot;&gt;Managing files&lt;/a&gt; for details on how to provide this object.</source>
          <target state="translated">파일의 저장 및 검색을 처리하는 저장 개체입니다. 이 객체를 제공하는 방법에 대한 자세한 내용은 &lt;a href=&quot;../../topics/files&quot;&gt;파일 관리를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6eb9ae0897420968aee10a2b095c52bec596e05c" translate="yes" xml:space="preserve">
          <source>A string</source>
          <target state="translated">끈</target>
        </trans-unit>
        <trans-unit id="c7f8e9c65c2d9dc97097127e82a4a73763d90b42" translate="yes" xml:space="preserve">
          <source>A string containing a dotted path to a function (or any callable) that defines how to compose a prefix, version and key into a final cache key. The default implementation is equivalent to the function:</source>
          <target state="translated">접두사, 버전 및 키를 최종 캐시 키로 구성하는 방법을 정의하는 함수 (또는 호출 가능)에 대한 점선 경로가 포함 된 문자열입니다. 기본 구현은 다음 기능과 같습니다.</target>
        </trans-unit>
        <trans-unit id="55775964fd83b80e0a4a0410b78128d87795662b" translate="yes" xml:space="preserve">
          <source>A string containing an encoded and serialized session dictionary.</source>
          <target state="translated">인코딩되고 직렬화 된 세션 사전을 포함하는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="9ef835b530bbacb3df8765fcefd38f289a83dc63" translate="yes" xml:space="preserve">
          <source>A string denoting the charset in which the response will be encoded. If not given at &lt;code&gt;HttpResponse&lt;/code&gt; instantiation time, it will be extracted from &lt;code&gt;content_type&lt;/code&gt; and if that is unsuccessful, the &lt;a href=&quot;settings#std:setting-DEFAULT_CHARSET&quot;&gt;&lt;code&gt;DEFAULT_CHARSET&lt;/code&gt;&lt;/a&gt; setting will be used.</source>
          <target state="translated">응답이 인코딩 될 문자셋을 나타내는 문자열. &lt;code&gt;HttpResponse&lt;/code&gt; 인스턴스화 시간에 제공되지 않으면 &lt;code&gt;content_type&lt;/code&gt; 에서 추출되어 실패하면 &lt;a href=&quot;settings#std:setting-DEFAULT_CHARSET&quot;&gt; &lt;code&gt;DEFAULT_CHARSET&lt;/code&gt; &lt;/a&gt; 설정이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="5a6f7ff8e549c5f73969a96e155b4343f86d87f0" translate="yes" xml:space="preserve">
          <source>A string describing the arbitrary arguments passed to the command. The string is used in the usage text and error messages of the command. Defaults to &lt;code&gt;'label'&lt;/code&gt;.</source>
          <target state="translated">명령에 전달 된 임의의 인수를 설명하는 문자열 문자열은 명령의 사용법 텍스트 및 오류 메시지에 사용됩니다. 기본값은 &lt;code&gt;'label'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1be5598ec186ddd22a0ed6eb6b1b69af01a895a7" translate="yes" xml:space="preserve">
          <source>A string describing the name of the email field on the &lt;code&gt;User&lt;/code&gt; model. This value is returned by &lt;a href=&quot;#django.contrib.auth.models.AbstractBaseUser.get_email_field_name&quot;&gt;&lt;code&gt;get_email_field_name()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;User&lt;/code&gt; 모델 의 이메일 필드 이름을 설명하는 문자열 입니다. 이 값은 &lt;a href=&quot;#django.contrib.auth.models.AbstractBaseUser.get_email_field_name&quot;&gt; &lt;code&gt;get_email_field_name()&lt;/code&gt; &lt;/a&gt; 의해 리턴됩니다 .</target>
        </trans-unit>
        <trans-unit id="7f2385f3133e76b5e432ee6fc469007896b72a86" translate="yes" xml:space="preserve">
          <source>A string describing the name of the field on the user model that is used as the unique identifier. This will usually be a username of some kind, but it can also be an email address, or any other unique identifier. The field &lt;em&gt;must&lt;/em&gt; be unique (i.e., have &lt;code&gt;unique=True&lt;/code&gt; set in its definition), unless you use a custom authentication backend that can support non-unique usernames.</source>
          <target state="translated">고유 식별자로 사용되는 사용자 모델의 필드 이름을 설명하는 문자열입니다. 일반적으로 일종의 사용자 이름이지만 전자 메일 주소 또는 다른 고유 식별자 일 수도 있습니다. 고유 하지 않은 사용자 이름을 지원할 수있는 사용자 지정 인증 백엔드를 사용하지 않는 한 필드 &lt;em&gt;는&lt;/em&gt; 고유 &lt;em&gt;해야&lt;/em&gt; 합니다 (즉, 정의에 &lt;code&gt;unique=True&lt;/code&gt; 가 설정되어 &lt;em&gt;있어야&lt;/em&gt; 함 ).</target>
        </trans-unit>
        <trans-unit id="3a5acdcdcfefa1cfe0813972e55311f80b298632" translate="yes" xml:space="preserve">
          <source>A string field, for small- to large-sized strings.</source>
          <target state="translated">중소형 문자열을위한 문자열 필드입니다.</target>
        </trans-unit>
        <trans-unit id="d1f528560d83ce80f3f56344e0c130fc115a0c0e" translate="yes" xml:space="preserve">
          <source>A string indicating the type of update that is done on the relation. This can be one of the following:</source>
          <target state="translated">관계에서 수행되는 업데이트 유형을 나타내는 문자열입니다. 이것은 다음 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="63f8f34838874f5b58f8e0809d0afa9a75fcf979" translate="yes" xml:space="preserve">
          <source>A string of optional extra text to be displayed at the top of each fieldset, under the heading of the fieldset. This string is not rendered for &lt;a href=&quot;#django.contrib.admin.TabularInline&quot;&gt;&lt;code&gt;TabularInline&lt;/code&gt;&lt;/a&gt; due to its layout.</source>
          <target state="translated">필드 세트 제목 아래에 각 필드 세트의 상단에 표시 될 선택적 추가 텍스트 문자열입니다. 이 문자열은 레이아웃으로 인해 &lt;a href=&quot;#django.contrib.admin.TabularInline&quot;&gt; &lt;code&gt;TabularInline&lt;/code&gt; 에&lt;/a&gt; 렌더링되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="a47ff84d15dcbd31967b47dbe4960bc401109b12" translate="yes" xml:space="preserve">
          <source>A string of the form &lt;code&gt;HH:MM:ss.sss&lt;/code&gt; as defined in &lt;a href=&quot;https://www.ecma-international.org/ecma-262/5.1/#sec-15.9.1.15&quot;&gt;ECMA-262&lt;/a&gt;.</source>
          <target state="translated">형태의 문자열 &lt;code&gt;HH:MM:ss.sss&lt;/code&gt; 에 정의 된 &lt;a href=&quot;https://www.ecma-international.org/ecma-262/5.1/#sec-15.9.1.15&quot;&gt;ECMA-262&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3a5e485539dcbbb2b00622e33d648b5520568225" translate="yes" xml:space="preserve">
          <source>A string of the form &lt;code&gt;YYYY-MM-DD&lt;/code&gt; as defined in &lt;a href=&quot;https://www.ecma-international.org/ecma-262/5.1/#sec-15.9.1.15&quot;&gt;ECMA-262&lt;/a&gt;.</source>
          <target state="translated">형식의 문자열 &lt;code&gt;YYYY-MM-DD&lt;/code&gt; 는 항에 &lt;a href=&quot;https://www.ecma-international.org/ecma-262/5.1/#sec-15.9.1.15&quot;&gt;ECMA-262&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="be4afaba1c48923c5c05cfaf03209af6f442eac0" translate="yes" xml:space="preserve">
          <source>A string of the form &lt;code&gt;YYYY-MM-DDTHH:mm:ss.sssZ&lt;/code&gt; or &lt;code&gt;YYYY-MM-DDTHH:mm:ss.sss+HH:MM&lt;/code&gt; as defined in &lt;a href=&quot;https://www.ecma-international.org/ecma-262/5.1/#sec-15.9.1.15&quot;&gt;ECMA-262&lt;/a&gt;.</source>
          <target state="translated">형식의 문자열 &lt;code&gt;YYYY-MM-DDTHH:mm:ss.sssZ&lt;/code&gt; 또는 &lt;code&gt;YYYY-MM-DDTHH:mm:ss.sss+HH:MM&lt;/code&gt; 항에 &lt;a href=&quot;https://www.ecma-international.org/ecma-262/5.1/#sec-15.9.1.15&quot;&gt;ECMA-262&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bedc3f09fd64c30ff1e29f28603deb635a59f148" translate="yes" xml:space="preserve">
          <source>A string or &lt;a href=&quot;https://docs.python.org/3/library/pathlib.html#pathlib.Path&quot;&gt;&lt;code&gt;pathlib.Path&lt;/code&gt;&lt;/a&gt; specifying the directory where the GeoIP data files are located. This setting is &lt;em&gt;required&lt;/em&gt; unless manually specified with &lt;code&gt;path&lt;/code&gt; keyword when initializing the &lt;a href=&quot;#django.contrib.gis.geoip2.GeoIP2&quot;&gt;&lt;code&gt;GeoIP2&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">GeoIP 데이터 파일이있는 디렉토리를 지정 하는 문자열 또는 &lt;a href=&quot;https://docs.python.org/3/library/pathlib.html#pathlib.Path&quot;&gt; &lt;code&gt;pathlib.Path&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;#django.contrib.gis.geoip2.GeoIP2&quot;&gt; &lt;code&gt;GeoIP2&lt;/code&gt; &lt;/a&gt; 객체를 초기화 할 때 &lt;code&gt;path&lt;/code&gt; 키워드로 수동으로 지정하지 않으면 이 설정이 &lt;em&gt;필요&lt;/em&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="60ce8427f0f6b48bece1bddca1a3c138127d11ea" translate="yes" xml:space="preserve">
          <source>A string or list of strings specifying the ordering to apply to the &lt;code&gt;queryset&lt;/code&gt;. Valid values are the same as those for &lt;a href=&quot;../models/querysets#django.db.models.query.QuerySet.order_by&quot;&gt;&lt;code&gt;order_by()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;queryset&lt;/code&gt; 에 적용 할 순서를 지정하는 문자열 또는 문자열 목록입니다 . 유효한 값은 &lt;a href=&quot;../models/querysets#django.db.models.query.QuerySet.order_by&quot;&gt; &lt;code&gt;order_by()&lt;/code&gt; &lt;/a&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="12b1fd27f99394bd904a5dc6ddbe941fc46355fa" translate="yes" xml:space="preserve">
          <source>A string representation of the object.</source>
          <target state="translated">객체의 문자열 표현.</target>
        </trans-unit>
        <trans-unit id="341d74835b7c0d924180c6c82f963377e1b5df1e" translate="yes" xml:space="preserve">
          <source>A string representing a &lt;code&gt;ModelAdmin&lt;/code&gt; attribute.</source>
          <target state="translated">&lt;code&gt;ModelAdmin&lt;/code&gt; 속성을 나타내는 문자열 입니다.</target>
        </trans-unit>
        <trans-unit id="bc77f627bd2aab875efe024ce4a85372e2c35fbe" translate="yes" xml:space="preserve">
          <source>A string representing a &lt;code&gt;ModelAdmin&lt;/code&gt; method that accepts one argument, the model instance. For example:</source>
          <target state="translated">하나의 인수 인 모델 인스턴스를 허용 하는 &lt;code&gt;ModelAdmin&lt;/code&gt; 메소드를 나타내는 문자열 입니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1637656ae10d574e75832f4517d864a0c12f6aa6" translate="yes" xml:space="preserve">
          <source>A string representing a duration as defined in ISO-8601. For example, &lt;code&gt;timedelta(days=1, hours=2, seconds=3.4)&lt;/code&gt; is represented as &lt;code&gt;'P1DT02H00M03.400000S'&lt;/code&gt;.</source>
          <target state="translated">ISO-8601에 정의 된 지속 시간을 나타내는 문자열입니다. 예를 들어, &lt;code&gt;timedelta(days=1, hours=2, seconds=3.4)&lt;/code&gt; 는 &lt;code&gt;'P1DT02H00M03.400000S'&lt;/code&gt; 로 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="04142a94e2129c9dbc07125edff203b8d8721aa6" translate="yes" xml:space="preserve">
          <source>A string representing a model attribute or method (without any required arguments). For example:</source>
          <target state="translated">모델 속성 또는 메소드를 나타내는 문자열 (필수 인수 없음). 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2a2476d5e2666e110780124d43cf0e99bd73f16e" translate="yes" xml:space="preserve">
          <source>A string representing a model attribute.</source>
          <target state="translated">모델 속성을 나타내는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="a4b32e6f6951b4bc70685f52fe4430da60a25895" translate="yes" xml:space="preserve">
          <source>A string representing the HTTP method used in the request. This is guaranteed to be uppercase. For example:</source>
          <target state="translated">요청에 사용 된 HTTP 메소드를 나타내는 문자열입니다. 대문자로 보장됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9df46297bf35e1bd4f620e88b01cc3797e01659a" translate="yes" xml:space="preserve">
          <source>A string representing the MIME type of the request, parsed from the &lt;code&gt;CONTENT_TYPE&lt;/code&gt; header.</source>
          <target state="translated">&lt;code&gt;CONTENT_TYPE&lt;/code&gt; 헤더 에서 구문 분석 된 요청의 MIME 유형을 나타내는 문자열 입니다.</target>
        </trans-unit>
        <trans-unit id="7a967f96772893a35bb09ad65cc054f4f0872ce7" translate="yes" xml:space="preserve">
          <source>A string representing the current encoding used to decode form submission data (or &lt;code&gt;None&lt;/code&gt;, which means the &lt;a href=&quot;settings#std:setting-DEFAULT_CHARSET&quot;&gt;&lt;code&gt;DEFAULT_CHARSET&lt;/code&gt;&lt;/a&gt; setting is used). You can write to this attribute to change the encoding used when accessing the form data. Any subsequent attribute accesses (such as reading from &lt;a href=&quot;#django.http.HttpRequest.GET&quot;&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#django.http.HttpRequest.POST&quot;&gt;&lt;code&gt;POST&lt;/code&gt;&lt;/a&gt;) will use the new &lt;code&gt;encoding&lt;/code&gt; value. Useful if you know the form data is not in the &lt;a href=&quot;settings#std:setting-DEFAULT_CHARSET&quot;&gt;&lt;code&gt;DEFAULT_CHARSET&lt;/code&gt;&lt;/a&gt; encoding.</source>
          <target state="translated">양식 제출 데이터를 디코딩하는 데 사용되는 현재 인코딩을 나타내는 문자열 (또는 &lt;code&gt;None&lt;/code&gt; , &lt;a href=&quot;settings#std:setting-DEFAULT_CHARSET&quot;&gt; &lt;code&gt;DEFAULT_CHARSET&lt;/code&gt; &lt;/a&gt; 설정이 사용됨) 이 속성에 쓰면 양식 데이터에 액세스 할 때 사용되는 인코딩을 변경할 수 있습니다. 이후의 모든 속성 액세스 (예 : &lt;a href=&quot;#django.http.HttpRequest.GET&quot;&gt; &lt;code&gt;GET&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#django.http.HttpRequest.POST&quot;&gt; &lt;code&gt;POST&lt;/code&gt; &lt;/a&gt; 읽기 )는 새 &lt;code&gt;encoding&lt;/code&gt; 값을 사용합니다 . 양식 데이터가 &lt;a href=&quot;settings#std:setting-DEFAULT_CHARSET&quot;&gt; &lt;code&gt;DEFAULT_CHARSET&lt;/code&gt; &lt;/a&gt; 인코딩에 없는 것을 알고있는 경우에 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="aefc3203898ff35936f339dc06b09a6abc406c44" translate="yes" xml:space="preserve">
          <source>A string representing the full Python import path to your root URLconf, for example &lt;code&gt;&quot;mydjangoapps.urls&quot;&lt;/code&gt;. Can be overridden on a per-request basis by setting the attribute &lt;code&gt;urlconf&lt;/code&gt; on the incoming &lt;code&gt;HttpRequest&lt;/code&gt; object. See &lt;a href=&quot;../topics/http/urls#how-django-processes-a-request&quot;&gt;How Django processes a request&lt;/a&gt; for details.</source>
          <target state="translated">루트 URLconf의 전체 Python 가져 오기 경로를 나타내는 문자열입니다 (예 : &lt;code&gt;&quot;mydjangoapps.urls&quot;&lt;/code&gt; ) . 들어오는 &lt;code&gt;HttpRequest&lt;/code&gt; 객체 에서 &lt;code&gt;urlconf&lt;/code&gt; 속성을 설정하여 요청별로 재정의 할 수 있습니다 . 자세한 내용은 &lt;a href=&quot;../topics/http/urls#how-django-processes-a-request&quot;&gt;Django가 요청&lt;/a&gt; 을 처리하는 방법 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="3789b10c79366d1c484af3b7f52935619f0297ea" translate="yes" xml:space="preserve">
          <source>A string representing the full path to the requested page, not including the scheme or domain.</source>
          <target state="translated">체계 또는 도메인을 포함하지 않고 요청 된 페이지의 전체 경로를 나타내는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="d61872cafae8a1bb6d293df78f3b054579aa322c" translate="yes" xml:space="preserve">
          <source>A string representing the language code for this installation. This should be in standard &lt;a href=&quot;../topics/i18n/index#term-language-code&quot;&gt;language ID format&lt;/a&gt;. For example, U.S. English is &lt;code&gt;&quot;en-us&quot;&lt;/code&gt;. See also the &lt;a href=&quot;http://www.i18nguy.com/unicode/language-identifiers.html&quot;&gt;list of language identifiers&lt;/a&gt; and &lt;a href=&quot;../topics/i18n/index&quot;&gt;Internationalization and localization&lt;/a&gt;.</source>
          <target state="translated">이 설치의 언어 코드를 나타내는 문자열입니다. 표준 &lt;a href=&quot;../topics/i18n/index#term-language-code&quot;&gt;언어 ID 형식&lt;/a&gt; 이어야 합니다 . 예를 들어 미국 영어는 &lt;code&gt;&quot;en-us&quot;&lt;/code&gt; 입니다. &lt;a href=&quot;http://www.i18nguy.com/unicode/language-identifiers.html&quot;&gt;언어 식별자&lt;/a&gt; 및 &lt;a href=&quot;../topics/i18n/index&quot;&gt;국제화 및 현지화 &lt;/a&gt;목록 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c863a5f518ecdeca4650c5d0b170f1a05cb9a1f4" translate="yes" xml:space="preserve">
          <source>A string representing the scheme of the request (&lt;code&gt;http&lt;/code&gt; or &lt;code&gt;https&lt;/code&gt; usually).</source>
          <target state="translated">요청 체계를 나타내는 문자열입니다 ( 일반적으로 &lt;code&gt;http&lt;/code&gt; 또는 &lt;code&gt;https&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="8fa65dc5a9f64a11e52d7d5b8650ae458dc9ac44" translate="yes" xml:space="preserve">
          <source>A string representing the time zone for datetimes stored in this database (assuming that it doesn&amp;rsquo;t support time zones) or &lt;code&gt;None&lt;/code&gt;. This inner option of the &lt;a href=&quot;#std:setting-DATABASES&quot;&gt;&lt;code&gt;DATABASES&lt;/code&gt;&lt;/a&gt; setting accepts the same values as the general &lt;a href=&quot;#std:setting-TIME_ZONE&quot;&gt;&lt;code&gt;TIME_ZONE&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">이 데이터베이스에 저장된 날짜 시간의 시간대를 나타내는 문자열 (시간대를 지원하지 않는다고 가정) 또는 &lt;code&gt;None&lt;/code&gt; . &lt;a href=&quot;#std:setting-DATABASES&quot;&gt; &lt;code&gt;DATABASES&lt;/code&gt; &lt;/a&gt; 설정 의이 내부 옵션은 일반 &lt;a href=&quot;#std:setting-TIME_ZONE&quot;&gt; &lt;code&gt;TIME_ZONE&lt;/code&gt; &lt;/a&gt; 설정 과 동일한 값을 허용 합니다.</target>
        </trans-unit>
        <trans-unit id="d6488618225f310500895c813f2c24047f042583" translate="yes" xml:space="preserve">
          <source>A string representing the time zone for this installation. See the &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_tz_database_time_zones&quot;&gt;list of time zones&lt;/a&gt;.</source>
          <target state="translated">이 설치의 시간대를 나타내는 문자열입니다. &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_tz_database_time_zones&quot;&gt;시간대 목록을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cb1cf72751c13b71b24981ca30961ecbb9cf07c5" translate="yes" xml:space="preserve">
          <source>A string representing this envelope as a polygon in WKT format.</source>
          <target state="translated">이 봉투를 WKT 형식의 다각형으로 나타내는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="67d526fed050abe80b4f2633432a264bee3c98d3" translate="yes" xml:space="preserve">
          <source>A string specifying the location of the GDAL library. Typically, this setting is only used if the GDAL library is in a non-standard location (e.g., &lt;code&gt;/home/john/lib/libgdal.so&lt;/code&gt;).</source>
          <target state="translated">GDAL 라이브러리의 위치를 ​​지정하는 문자열 일반적으로이 설정은 GDAL 라이브러리가 비표준 위치 (예 : &lt;code&gt;/home/john/lib/libgdal.so&lt;/code&gt; ) 에있는 경우에만 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="c60ab2d3da951f8d9f00a62e2500cde1f6e0fa51" translate="yes" xml:space="preserve">
          <source>A string specifying the location of the GEOS C library. Typically, this setting is only used if the GEOS C library is in a non-standard location (e.g., &lt;code&gt;/home/bob/lib/libgeos_c.so&lt;/code&gt;).</source>
          <target state="translated">GEOS C 라이브러리의 위치를 ​​지정하는 문자열 일반적으로이 설정은 GEOS C 라이브러리가 비표준 위치 (예 : &lt;code&gt;/home/bob/lib/libgeos_c.so&lt;/code&gt; ) 에있는 경우에만 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="4031c8e551814b701c529bde13d9cbf588c6a136" translate="yes" xml:space="preserve">
          <source>A string specifying the name to use for the page parameter. The view will expect this parameter to be available either as a query string parameter (via &lt;code&gt;request.GET&lt;/code&gt;) or as a kwarg variable specified in the URLconf. Defaults to &lt;code&gt;page&lt;/code&gt;.</source>
          <target state="translated">페이지 매개 변수에 사용할 이름을 지정하는 문자열 뷰는이 매개 변수가 &lt;code&gt;request.GET&lt;/code&gt; 을 통해 조회 문자열 매개 변수 또는 URLconf에 지정된 kwarg 변수 로 사용 가능할 것으로 예상합니다 . 기본값은 &lt;code&gt;page&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="76716e389873e58cdb012b569fb3f0b1621b777f" translate="yes" xml:space="preserve">
          <source>A string that will be automatically included (prepended by default) to all cache keys used by the Django server.</source>
          <target state="translated">Django 서버에서 사용하는 모든 캐시 키에 자동으로 포함되는 문자열입니다 (기본적으로 추가됨).</target>
        </trans-unit>
        <trans-unit id="1e7b4569ad72999db78052fe68370125aeee656d" translate="yes" xml:space="preserve">
          <source>A string which will be prefixed to the cache keys generated by the &lt;a href=&quot;../topics/cache#the-per-site-cache&quot;&gt;cache middleware&lt;/a&gt;. This prefix is combined with the &lt;a href=&quot;#std:setting-CACHES-KEY_PREFIX&quot;&gt;&lt;code&gt;KEY_PREFIX&lt;/code&gt;&lt;/a&gt; setting; it does not replace it.</source>
          <target state="translated">&lt;a href=&quot;../topics/cache#the-per-site-cache&quot;&gt;캐시 미들웨어에&lt;/a&gt; 의해 생성 된 캐시 키 앞에 붙는 문자열 . 이 접두사는 &lt;a href=&quot;#std:setting-CACHES-KEY_PREFIX&quot;&gt; &lt;code&gt;KEY_PREFIX&lt;/code&gt; &lt;/a&gt; 설정 과 결합됩니다 . 대체하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d2a8147a843059236820d795fe80d0fe0c78a06b" translate="yes" xml:space="preserve">
          <source>A stripped-down version of &lt;a href=&quot;https://httpd.apache.org/&quot;&gt;Apache&lt;/a&gt;</source>
          <target state="translated">제거 된 &lt;a href=&quot;https://httpd.apache.org/&quot;&gt;Apache&lt;/a&gt; 버전</target>
        </trans-unit>
        <trans-unit id="99c56b6825f1c72d606d6c493bf2775a0d433031" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;#django.contrib.gis.admin.GeoModelAdmin&quot;&gt;&lt;code&gt;GeoModelAdmin&lt;/code&gt;&lt;/a&gt; that uses a Spherical Mercator projection with &lt;a href=&quot;https://www.openstreetmap.org/&quot;&gt;OpenStreetMap&lt;/a&gt; street data tiles. See the &lt;a href=&quot;tutorial#osmgeoadmin-intro&quot;&gt;OSMGeoAdmin introduction&lt;/a&gt; in the tutorial for a usage example.</source>
          <target state="translated">&lt;a href=&quot;https://www.openstreetmap.org/&quot;&gt;OpenStreetMap&lt;/a&gt; 거리 데이터 타일 과 함께 구형 메르카토르 투영을 사용하는 &lt;a href=&quot;#django.contrib.gis.admin.GeoModelAdmin&quot;&gt; &lt;code&gt;GeoModelAdmin&lt;/code&gt; &lt;/a&gt; 의 서브 클래스 . 사용법 예제는 학습서 의 &lt;a href=&quot;tutorial#osmgeoadmin-intro&quot;&gt;OSMGeoAdmin 소개&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2ba5978253ff81d57154305b6f13f3ff4f930381" translate="yes" xml:space="preserve">
          <source>A subclass of &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase&quot;&gt;&lt;code&gt;unittest.TestCase&lt;/code&gt;&lt;/a&gt; that adds this functionality:</source>
          <target state="translated">이 기능을 추가 하는 &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#unittest.TestCase&quot;&gt; &lt;code&gt;unittest.TestCase&lt;/code&gt; &lt;/a&gt; 의 서브 클래스 :</target>
        </trans-unit>
        <trans-unit id="4782d0bba1ae53d9e7fac02b1085499491e68d3f" translate="yes" xml:space="preserve">
          <source>A subclass of the &lt;a href=&quot;#django.contrib.staticfiles.storage.StaticFilesStorage&quot;&gt;&lt;code&gt;StaticFilesStorage&lt;/code&gt;&lt;/a&gt; storage backend which stores the file names it handles by appending the MD5 hash of the file&amp;rsquo;s content to the filename. For example, the file &lt;code&gt;css/styles.css&lt;/code&gt; would also be saved as &lt;code&gt;css/styles.55e7cbb9ba48.css&lt;/code&gt;.</source>
          <target state="translated">파일 내용의 MD5 해시를 파일 이름에 추가하여 처리하는 파일 이름을 저장 하는 &lt;a href=&quot;#django.contrib.staticfiles.storage.StaticFilesStorage&quot;&gt; &lt;code&gt;StaticFilesStorage&lt;/code&gt; &lt;/a&gt; 스토리지 백엔드 의 하위 클래스입니다 . 예를 들어, &lt;code&gt;css/styles.css&lt;/code&gt; 파일 도 &lt;code&gt;css/styles.55e7cbb9ba48.css&lt;/code&gt; 로 저장됩니다 .</target>
        </trans-unit>
        <trans-unit id="4f63a11853e7b208882ccd9a53f10ad63ef89de3" translate="yes" xml:space="preserve">
          <source>A subclass of the &lt;a href=&quot;../files/storage#django.core.files.storage.FileSystemStorage&quot;&gt;&lt;code&gt;FileSystemStorage&lt;/code&gt;&lt;/a&gt; storage backend that uses the &lt;a href=&quot;../settings#std:setting-STATIC_ROOT&quot;&gt;&lt;code&gt;STATIC_ROOT&lt;/code&gt;&lt;/a&gt; setting as the base file system location and the &lt;a href=&quot;../settings#std:setting-STATIC_URL&quot;&gt;&lt;code&gt;STATIC_URL&lt;/code&gt;&lt;/a&gt; setting respectively as the base URL.</source>
          <target state="translated">&lt;a href=&quot;../settings#std:setting-STATIC_ROOT&quot;&gt; &lt;code&gt;STATIC_ROOT&lt;/code&gt; &lt;/a&gt; 설정을 기본 파일 시스템 위치로 사용하고 &lt;a href=&quot;../settings#std:setting-STATIC_URL&quot;&gt; &lt;code&gt;STATIC_URL&lt;/code&gt; &lt;/a&gt; 설정을 각각 기본 URL로 사용 하는 &lt;a href=&quot;../files/storage#django.core.files.storage.FileSystemStorage&quot;&gt; &lt;code&gt;FileSystemStorage&lt;/code&gt; &lt;/a&gt; 스토리지 백엔드 의 서브 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="4c5d87ceaf1c995724edabd181b86ee110383f6f" translate="yes" xml:space="preserve">
          <source>A tablespace can be specified for the table generated by a model by supplying the &lt;a href=&quot;../../ref/models/options#django.db.models.Options.db_tablespace&quot;&gt;&lt;code&gt;db_tablespace&lt;/code&gt;&lt;/a&gt; option inside the model&amp;rsquo;s &lt;code&gt;class Meta&lt;/code&gt;. This option also affects tables automatically created for &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt;s in the model.</source>
          <target state="translated">모델의 &lt;code&gt;class Meta&lt;/code&gt; 내에 &lt;a href=&quot;../../ref/models/options#django.db.models.Options.db_tablespace&quot;&gt; &lt;code&gt;db_tablespace&lt;/code&gt; &lt;/a&gt; 옵션 을 제공하여 모델이 생성 한 테이블에 테이블 스페이스를 지정할 수 있습니다 . 이 옵션 은 모델의 &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt; &lt;code&gt;ManyToManyField&lt;/code&gt; 에&lt;/a&gt; 대해 자동으로 생성 된 테이블에도 영향을줍니다 .</target>
        </trans-unit>
        <trans-unit id="46a12a79ac0cd1fc16227e3bcd7eb0b2eb71347a" translate="yes" xml:space="preserve">
          <source>A template contains &lt;strong&gt;variables&lt;/strong&gt;, which get replaced with values when the template is evaluated, and &lt;strong&gt;tags&lt;/strong&gt;, which control the logic of the template.</source>
          <target state="translated">템플릿에는 템플릿 평가시 값으로 대체되는 &lt;strong&gt;변수&lt;/strong&gt; 및 템플릿의 논리를 제어하는 &lt;strong&gt;tags&lt;/strong&gt; 가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="af5e06596508357d736a56f2b82f5a693c921045" translate="yes" xml:space="preserve">
          <source>A template is a text file. It can generate any text-based format (HTML, XML, CSV, etc.).</source>
          <target state="translated">템플릿은 텍스트 파일입니다. 텍스트 기반 형식 (HTML, XML, CSV 등)을 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5a7a58cfbbed9a9b676649072a93fc5f7b19a3b2" translate="yes" xml:space="preserve">
          <source>A template is rendered with a context. Rendering replaces variables with their values, which are looked up in the context, and executes tags. Everything else is output as is.</source>
          <target state="translated">템플릿은 컨텍스트와 함께 렌더링됩니다. 렌더링은 변수를 컨텍스트에서 찾은 값으로 바꾸고 태그를 실행합니다. 다른 모든 것은 그대로 출력됩니다.</target>
        </trans-unit>
        <trans-unit id="19353758d050eee892d050ef73a7388f215d41df" translate="yes" xml:space="preserve">
          <source>A test case for a database-backed website isn&amp;rsquo;t much use if there isn&amp;rsquo;t any data in the database. Tests are more readable and it&amp;rsquo;s more maintainable to create objects using the ORM, for example in &lt;a href=&quot;#django.test.TestCase.setUpTestData&quot;&gt;&lt;code&gt;TestCase.setUpTestData()&lt;/code&gt;&lt;/a&gt;, however, you can also use fixtures.</source>
          <target state="translated">데이터베이스에 데이터가 없으면 데이터베이스 기반 웹 사이트의 테스트 사례는 많이 사용되지 않습니다. &lt;a href=&quot;#django.test.TestCase.setUpTestData&quot;&gt; &lt;code&gt;TestCase.setUpTestData()&lt;/code&gt; &lt;/a&gt; 와 같이 ORM을 사용하여 객체를 작성하는 것이 테스트를 더 읽기 쉽고 유지 관리하기가 쉽지만 조명기를 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="9d1ddede3b8e83f7c71dc4c576f3600c39f75577" translate="yes" xml:space="preserve">
          <source>A test client has two attributes that store persistent state information. You can access these properties as part of a test condition.</source>
          <target state="translated">테스트 클라이언트에는 지속적 상태 정보를 저장하는 두 가지 속성이 있습니다. 테스트 조건의 일부로 이러한 속성에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f1f0ade398341acc1efae2b88a82aa86c3f0dd89" translate="yes" xml:space="preserve">
          <source>A test for a view</source>
          <target state="translated">보기 테스트</target>
        </trans-unit>
        <trans-unit id="595ead84b1bb267188e1ba1025b7ea692ceda1c4" translate="yes" xml:space="preserve">
          <source>A test runner is a class defining a &lt;code&gt;run_tests()&lt;/code&gt; method. Django ships with a &lt;code&gt;DiscoverRunner&lt;/code&gt; class that defines the default Django testing behavior. This class defines the &lt;code&gt;run_tests()&lt;/code&gt; entry point, plus a selection of other methods that are used to by &lt;code&gt;run_tests()&lt;/code&gt; to set up, execute and tear down the test suite.</source>
          <target state="translated">테스트 러너는 &lt;code&gt;run_tests()&lt;/code&gt; 메소드를 정의하는 클래스 입니다. Django 는 기본 Django 테스트 동작을 정의 하는 &lt;code&gt;DiscoverRunner&lt;/code&gt; 클래스 와 함께 제공됩니다 . 이 클래스는 &lt;code&gt;run_tests()&lt;/code&gt; 진입 점과 &lt;code&gt;run_tests()&lt;/code&gt; 가 테스트 스위트를 설정, 실행 및 분리 하는 데 사용하는 다른 메소드 선택을 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="2130d454abc6433383385bfc1d162dade034c9e4" translate="yes" xml:space="preserve">
          <source>A time, represented in Python by a &lt;code&gt;datetime.time&lt;/code&gt; instance. Accepts the same auto-population options as &lt;a href=&quot;#django.db.models.DateField&quot;&gt;&lt;code&gt;DateField&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">파이썬에서 &lt;code&gt;datetime.time&lt;/code&gt; 인스턴스 로 표시되는 시간 입니다. &lt;a href=&quot;#django.db.models.DateField&quot;&gt; &lt;code&gt;DateField&lt;/code&gt; &lt;/a&gt; 와 동일한 자동 채우기 옵션을 허용합니다 .</target>
        </trans-unit>
        <trans-unit id="cadc4fad5cffc9f5adcd753037e2d5eb5068ca08" translate="yes" xml:space="preserve">
          <source>A top-level index page showing the &amp;ldquo;latest&amp;rdquo; objects, by date. Objects with a date in the &lt;em&gt;future&lt;/em&gt; are not included unless you set &lt;code&gt;allow_future&lt;/code&gt; to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">&quot;최신&quot;개체를 날짜별로 표시하는 최상위 인덱스 페이지입니다. &lt;code&gt;allow_future&lt;/code&gt; 를 &lt;code&gt;True&lt;/code&gt; 로 설정하지 않으면 &lt;em&gt;미래&lt;/em&gt; 날짜가있는 객체 는 포함되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="589ab8c32ca72a3439599d6e56bb1a98ea5c9a79" translate="yes" xml:space="preserve">
          <source>A transaction is an atomic set of database queries. Even if your program crashes, the database guarantees that either all the changes will be applied, or none of them.</source>
          <target state="translated">트랜잭션은 원 자성 데이터베이스 쿼리 집합입니다. 프로그램이 충돌하더라도 데이터베이스는 모든 변경 사항이 적용되거나 적용되지 않을 것을 보장합니다.</target>
        </trans-unit>
        <trans-unit id="6c30a6c273a06aac47abd3da58f5522aa3075000" translate="yes" xml:space="preserve">
          <source>A transformer example</source>
          <target state="translated">변압기 예</target>
        </trans-unit>
        <trans-unit id="62a515a90a86c9208009fcd59fabd9f7de039db8" translate="yes" xml:space="preserve">
          <source>A translatable string (defaults to a colon (&lt;code&gt;:&lt;/code&gt;) in English) that will be appended after any label name when a form is rendered.</source>
          <target state="translated">번역 가능한 문자열 (콜론 기본값 ( &lt;code&gt;:&lt;/code&gt; 양식이 렌더링 될 때 어떤 레이블 이름 뒤에 추가됩니다) 영어).</target>
        </trans-unit>
        <trans-unit id="add16c7a82d145c68b68279b5d51f614dda673db" translate="yes" xml:space="preserve">
          <source>A true/false field.</source>
          <target state="translated">참 / 거짓 필드.</target>
        </trans-unit>
        <trans-unit id="d7798632f46dd3c91454f88309441017d77a35f9" translate="yes" xml:space="preserve">
          <source>A tuple describing the required JavaScript files. See &lt;a href=&quot;#form-asset-paths&quot;&gt;the section on paths&lt;/a&gt; for details of how to specify paths to these files.</source>
          <target state="translated">필요한 JavaScript 파일을 설명하는 튜플. 이러한 파일의 경로를 지정하는 방법에 대한 자세한 내용은 &lt;a href=&quot;#form-asset-paths&quot;&gt;경로 섹션을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0e565ed8d4bb43846bd8c226d7cf28bd6581425a" translate="yes" xml:space="preserve">
          <source>A tuple of field names to display in this fieldset. This key is required.</source>
          <target state="translated">이 필드 세트에 표시 할 필드 명의 튜플. 이 키는 필수입니다.</target>
        </trans-unit>
        <trans-unit id="30983bb664cf98ffc61346ee74c00f2731ad948c" translate="yes" xml:space="preserve">
          <source>A tuple of fields whose values are cleaned and subsequently combined into a single value. Each value of the field is cleaned by the corresponding field in &lt;code&gt;fields&lt;/code&gt; &amp;ndash; the first value is cleaned by the first field, the second value is cleaned by the second field, etc. Once all fields are cleaned, the list of clean values is combined into a single value by &lt;a href=&quot;#django.forms.MultiValueField.compress&quot;&gt;&lt;code&gt;compress()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">값이 정리 된 후 단일 값으로 결합되는 필드 튜플입니다. 필드의 각각의 값에 대응하는 필드로 세정 &lt;code&gt;fields&lt;/code&gt; - 모든 필드가 세정되면 상기 제 1 값이 상기 제 1 필드에 의해 세정되어, 상기 제 값 등 번째 필드에 의해 세정하고, 청결 값의 목록에 결합 하여 하나의 값을 &lt;a href=&quot;#django.forms.MultiValueField.compress&quot;&gt; &lt;code&gt;compress()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2c4b28f2020c5f6ab0e075d6340dd34e7bd1356d" translate="yes" xml:space="preserve">
          <source>A tuple of three values that provides information about the unhandled exception, if any, that occurred during the view.</source>
          <target state="translated">보기 중에 발생한 처리되지 않은 예외에 대한 정보를 제공하는 세 개의 값 튜플입니다.</target>
        </trans-unit>
        <trans-unit id="f1abe7abccfb7f37d6bb3e2a393d7aa261cea89d" translate="yes" xml:space="preserve">
          <source>A tuple representing a HTTP header/value combination that signifies a request is secure. This controls the behavior of the request object&amp;rsquo;s &lt;code&gt;is_secure()&lt;/code&gt; method.</source>
          <target state="translated">요청을 나타내는 HTTP 헤더 / 값 조합을 나타내는 튜플은 안전합니다. 요청 객체의 &lt;code&gt;is_secure()&lt;/code&gt; 메소드 의 동작을 제어합니다 .</target>
        </trans-unit>
        <trans-unit id="219d73f437a3c6e5ac335188b45e792bc99d121b" translate="yes" xml:space="preserve">
          <source>A tuple representing the envelope.</source>
          <target state="translated">봉투를 나타내는 튜플.</target>
        </trans-unit>
        <trans-unit id="acc63f4dc711ad425d57031e7e12a3a8b17807a0" translate="yes" xml:space="preserve">
          <source>A user in a group automatically has the permissions granted to that group. For example, if the group &lt;code&gt;Site editors&lt;/code&gt; has the permission &lt;code&gt;can_edit_home_page&lt;/code&gt;, any user in that group will have that permission.</source>
          <target state="translated">그룹의 사용자에게는 해당 그룹에 부여 된 권한이 자동으로 부여됩니다. 예를 들어 그룹 &lt;code&gt;Site editors&lt;/code&gt; 에게 &lt;code&gt;can_edit_home_page&lt;/code&gt; 권한이 있으면 해당 그룹의 모든 사용자에게 해당 권한이 있습니다.</target>
        </trans-unit>
        <trans-unit id="f7019a2e2fd89249c7115b5e610b95c7ef43e8cd" translate="yes" xml:space="preserve">
          <source>A user may set this environment variable to customize the library paths they want to use. The typical library directory for software built from source is &lt;code&gt;/usr/local/lib&lt;/code&gt;. Thus, &lt;code&gt;/usr/local/lib&lt;/code&gt; needs to be included in the &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt; variable. For example, the user could place the following in their bash profile:</source>
          <target state="translated">사용자는이 환경 변수를 설정하여 사용하려는 라이브러리 경로를 사용자 정의 할 수 있습니다. 소스에서 빌드 된 소프트웨어의 일반적인 라이브러리 디렉토리는 &lt;code&gt;/usr/local/lib&lt;/code&gt; 입니다. 따라서 &lt;code&gt;/usr/local/lib&lt;/code&gt; 는 &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt; 변수에 포함되어야 합니다. 예를 들어, 사용자는 bash 프로파일에 다음을 배치 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ad6d83cddc93baba1e3f56ded884b91088d81782" translate="yes" xml:space="preserve">
          <source>A user usually faces two kinds of caches: their own browser cache (a private cache) and their provider&amp;rsquo;s cache (a public cache). A public cache is used by multiple users and controlled by someone else. This poses problems with sensitive data&amp;ndash;you don&amp;rsquo;t want, say, your bank account number stored in a public cache. So Web applications need a way to tell caches which data is private and which is public.</source>
          <target state="translated">사용자는 일반적으로 자체 브라우저 캐시 (개인 캐시)와 공급자 캐시 (공개 캐시)의 두 종류의 캐시에 직면합니다. 공개 캐시는 여러 사용자가 사용하며 다른 사람이 제어합니다. 이것은 민감한 데이터에 문제를 일으 킵니다. 예를 들어 은행 계좌 번호를 공개 캐시에 저장하고 싶지 않습니다. 따라서 웹 응용 프로그램은 캐시에 개인 데이터와 공개 데이터를 알리는 방법이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="70543db85bd5496614ac60773b7aa8ad6be7da4b" translate="yes" xml:space="preserve">
          <source>A validator is a callable that takes a value and raises a &lt;a href=&quot;exceptions#django.core.exceptions.ValidationError&quot;&gt;&lt;code&gt;ValidationError&lt;/code&gt;&lt;/a&gt; if it doesn&amp;rsquo;t meet some criteria. Validators can be useful for re-using validation logic between different types of fields.</source>
          <target state="translated">유효성 검사기는 값을 가져와 일부 기준을 충족하지 않으면 &lt;a href=&quot;exceptions#django.core.exceptions.ValidationError&quot;&gt; &lt;code&gt;ValidationError&lt;/code&gt; &lt;/a&gt; 를 발생시키는 호출 가능입니다 . 유효성 검사기는 서로 다른 유형의 필드간에 유효성 검사 논리를 재사용하는 데 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5113ae26d19666a7df7258046fb7cc1eddcfc5df" translate="yes" xml:space="preserve">
          <source>A value of &lt;code&gt;0&lt;/code&gt; for &lt;code&gt;CULL_FREQUENCY&lt;/code&gt; means that the entire cache will be dumped when &lt;code&gt;MAX_ENTRIES&lt;/code&gt; is reached. On some backends (&lt;code&gt;database&lt;/code&gt; in particular) this makes culling &lt;em&gt;much&lt;/em&gt; faster at the expense of more cache misses.</source>
          <target state="translated">값 &lt;code&gt;0&lt;/code&gt; 에 대한 &lt;code&gt;CULL_FREQUENCY&lt;/code&gt; 의 경우, 전체 캐시 덤프되는 것을 의미 &lt;code&gt;MAX_ENTRIES&lt;/code&gt; 가 도달된다. 일부 백엔드 ( 특히 &lt;code&gt;database&lt;/code&gt; ) 에서는 더 많은 캐시 누락을 희생하여 컬링 속도가 &lt;em&gt;훨씬&lt;/em&gt; 빨라집니다.</target>
        </trans-unit>
        <trans-unit id="b78a58ec63007997496edf17b89a4378f67b57ce" translate="yes" xml:space="preserve">
          <source>A variable can only be called if it has no required arguments. Otherwise, the system will return the value of the engine&amp;rsquo;s &lt;code&gt;string_if_invalid&lt;/code&gt; option.</source>
          <target state="translated">변수는 필요한 인수가없는 경우에만 호출 할 수 있습니다. 그렇지 않으면 시스템은 엔진의 &lt;code&gt;string_if_invalid&lt;/code&gt; 옵션 의 값을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="f015d227a5b4145644d875909cd7c31be73a49be" translate="yes" xml:space="preserve">
          <source>A variable outputs a value from the context, which is a dict-like object mapping keys to values.</source>
          <target state="translated">변수는 컨텍스트에서 값을 출력하는데, 이는 dict-like 객체가 키를 값에 매핑하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="7d6b33f2a92a537178b23f3e9015d4e7c9267633" translate="yes" xml:space="preserve">
          <source>A verbose description of the field, e.g. for the &lt;a href=&quot;../contrib/admin/admindocs#module-django.contrib.admindocs&quot;&gt;&lt;code&gt;django.contrib.admindocs&lt;/code&gt;&lt;/a&gt; application.</source>
          <target state="translated">필드에 대한 자세한 설명 (예 : &lt;a href=&quot;../contrib/admin/admindocs#module-django.contrib.admindocs&quot;&gt; &lt;code&gt;django.contrib.admindocs&lt;/code&gt; &lt;/a&gt; 애플리케이션).</target>
        </trans-unit>
        <trans-unit id="b5165df862db6f1ed46703500a3cd8614c6439ea" translate="yes" xml:space="preserve">
          <source>A version of &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.format&quot;&gt;&lt;code&gt;str.format()&lt;/code&gt;&lt;/a&gt; for when &lt;code&gt;format_string&lt;/code&gt;, &lt;code&gt;args&lt;/code&gt;, and/or &lt;code&gt;kwargs&lt;/code&gt; contain lazy objects. The first argument is the string to be formatted. For example:</source>
          <target state="translated">&lt;code&gt;format_string&lt;/code&gt; , &lt;code&gt;args&lt;/code&gt; 및 / 또는 &lt;code&gt;kwargs&lt;/code&gt; 에 게으른 객체가 포함 된 경우 &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.format&quot;&gt; &lt;code&gt;str.format()&lt;/code&gt; &lt;/a&gt; 버전입니다 . 첫 번째 인수는 형식화 할 문자열입니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="564a45715ae6bd897895cd762d92a0617063854d" translate="yes" xml:space="preserve">
          <source>A version of Python&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3/library/urllib.parse.html#urllib.parse.urlencode&quot;&gt;&lt;code&gt;urllib.parse.urlencode()&lt;/code&gt;&lt;/a&gt; function that can operate on &lt;code&gt;MultiValueDict&lt;/code&gt; and non-string values.</source>
          <target state="translated">&lt;code&gt;MultiValueDict&lt;/code&gt; 및 문자열이 아닌 값 에서 작동 할 수있는 Python의 &lt;a href=&quot;https://docs.python.org/3/library/urllib.parse.html#urllib.parse.urlencode&quot;&gt; &lt;code&gt;urllib.parse.urlencode()&lt;/code&gt; &lt;/a&gt; 함수 버전입니다 .</target>
        </trans-unit>
        <trans-unit id="6c3ff243de8a5575328831b13292d6d29764ad34" translate="yes" xml:space="preserve">
          <source>A view function, or &lt;em&gt;view&lt;/em&gt; for short, is a Python function that takes a Web request and returns a Web response. This response can be the HTML contents of a Web page, or a redirect, or a 404 error, or an XML document, or an image . . . or anything, really. The view itself contains whatever arbitrary logic is necessary to return that response. This code can live anywhere you want, as long as it&amp;rsquo;s on your Python path. There&amp;rsquo;s no other requirement&amp;ndash;no &amp;ldquo;magic,&amp;rdquo; so to speak. For the sake of putting the code &lt;em&gt;somewhere&lt;/em&gt;, the convention is to put views in a file called &lt;code&gt;views.py&lt;/code&gt;, placed in your project or application directory.</source>
          <target state="translated">보기 함수 또는 간단히 &lt;em&gt;보기&lt;/em&gt; 는 웹 요청을 받아 웹 응답을 리턴하는 Python 함수입니다. 이 응답은 웹 페이지의 HTML 내용, 리디렉션, 404 오류 또는 XML 문서 또는 이미지 일 수 있습니다. . . 또는 정말. 뷰 자체에는 해당 응답을 반환하는 데 필요한 임의의 논리가 포함됩니다. 이 코드는 Python 경로에있는 한 원하는 곳 어디에서나 살 수 있습니다. &quot;마법&quot;이 필요하지 않은 다른 요구 사항은 없습니다. 코드를 &lt;em&gt;어딘가에&lt;/em&gt; 배치하기 위해 , 규칙은 프로젝트 또는 애플리케이션 디렉토리에있는 &lt;code&gt;views.py&lt;/code&gt; 라는 파일에 뷰를 배치하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="6c95a79e02b3109a71384a9b14968e6d9326de15" translate="yes" xml:space="preserve">
          <source>A view handling this form will receive the file data in &lt;a href=&quot;../../ref/request-response#django.http.HttpRequest.FILES&quot;&gt;&lt;code&gt;request.FILES&lt;/code&gt;&lt;/a&gt;, which is a dictionary containing a key for each &lt;a href=&quot;../../ref/forms/fields#django.forms.FileField&quot;&gt;&lt;code&gt;FileField&lt;/code&gt;&lt;/a&gt; (or &lt;a href=&quot;../../ref/forms/fields#django.forms.ImageField&quot;&gt;&lt;code&gt;ImageField&lt;/code&gt;&lt;/a&gt;, or other &lt;a href=&quot;../../ref/forms/fields#django.forms.FileField&quot;&gt;&lt;code&gt;FileField&lt;/code&gt;&lt;/a&gt; subclass) in the form. So the data from the above form would be accessible as &lt;code&gt;request.FILES['file']&lt;/code&gt;.</source>
          <target state="translated">이 형식을 처리하는 뷰는 &lt;a href=&quot;../../ref/request-response#django.http.HttpRequest.FILES&quot;&gt; &lt;code&gt;request.FILES&lt;/code&gt; &lt;/a&gt; 파일 형식을받습니다.이 형식은 각 &lt;a href=&quot;../../ref/forms/fields#django.forms.FileField&quot;&gt; &lt;code&gt;FileField&lt;/code&gt; &lt;/a&gt; (또는 &lt;a href=&quot;../../ref/forms/fields#django.forms.ImageField&quot;&gt; &lt;code&gt;ImageField&lt;/code&gt; &lt;/a&gt; 또는 다른 &lt;a href=&quot;../../ref/forms/fields#django.forms.FileField&quot;&gt; &lt;code&gt;FileField&lt;/code&gt; &lt;/a&gt; 서브 클래스) 의 키를 양식에 포함하는 사전 입니다. 따라서 위 형식의 데이터는 &lt;code&gt;request.FILES['file']&lt;/code&gt; 로 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6dc3b6cc36d5b3bec95f02678c90034db2ed3caf" translate="yes" xml:space="preserve">
          <source>A view is a &amp;ldquo;type&amp;rdquo; of Web page in your Django application that generally serves a specific function and has a specific template. For example, in a blog application, you might have the following views:</source>
          <target state="translated">뷰는 Django 애플리케이션에서 웹 페이지의 &quot;유형&quot;으로 일반적으로 특정 기능을 수행하고 특정 템플릿을 가지고 있습니다. 예를 들어 블로그 애플리케이션에서 다음과 같은보기가있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="53417391e1f7b1c26cf4b5bcc8106f019b090248" translate="yes" xml:space="preserve">
          <source>A view is a callable which takes a request and returns a response. This can be more than just a function, and Django provides an example of some classes which can be used as views. These allow you to structure your views and reuse code by harnessing inheritance and mixins. There are also some generic views for tasks which we&amp;rsquo;ll get to later, but you may want to design your own structure of reusable views which suits your use case. For full details, see the &lt;a href=&quot;../../ref/class-based-views/index&quot;&gt;class-based views reference documentation&lt;/a&gt;.</source>
          <target state="translated">뷰는 요청을 받고 응답을 반환하는 호출 가능입니다. 이것은 단순한 함수 이상의 것이 될 수 있으며 Django는 뷰로 사용할 수있는 일부 클래스의 예를 제공합니다. 이를 통해 상속 및 믹스 인을 활용하여 뷰를 구성하고 코드를 재사용 할 수 있습니다. 나중에 다루는 작업에 대한 일반적인보기도 있지만 사용 사례에 적합한 재사용 가능한보기의 자체 구조를 디자인 할 수도 있습니다. 자세한 내용은 &lt;a href=&quot;../../ref/class-based-views/index&quot;&gt;클래스 기반 뷰 참조 설명서를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5669c657153bbceaa71dd9d9a40e7c50397ef208" translate="yes" xml:space="preserve">
          <source>A view name, possibly with arguments: &lt;a href=&quot;../../ref/urlresolvers#django.urls.reverse&quot;&gt;&lt;code&gt;reverse()&lt;/code&gt;&lt;/a&gt; will be used to reverse-resolve the name.</source>
          <target state="translated">인수가있는 뷰 이름 : &lt;a href=&quot;../../ref/urlresolvers#django.urls.reverse&quot;&gt; &lt;code&gt;reverse()&lt;/code&gt; &lt;/a&gt; 를 사용하여 이름을 역 확인합니다.</target>
        </trans-unit>
        <trans-unit id="1d58484a2595d24fe3c81fe733b1d0c6cabd4af9" translate="yes" xml:space="preserve">
          <source>A view needs CSRF protection under one set of conditions only, and mustn&amp;rsquo;t have it for the rest of the time.</source>
          <target state="translated">뷰는 한 세트의 조건에서만 CSRF 보호가 필요하며 나머지 시간 동안 CSRF 보호 기능이 없어야합니다.</target>
        </trans-unit>
        <trans-unit id="84838bb36116a69d4f408f85469ddd98112cfa36" translate="yes" xml:space="preserve">
          <source>A view that displays a confirmation page and deletes an existing object. The given object will only be deleted if the request method is &lt;code&gt;POST&lt;/code&gt;. If this view is fetched via &lt;code&gt;GET&lt;/code&gt;, it will display a confirmation page that should contain a form that POSTs to the same URL.</source>
          <target state="translated">확인 페이지를 표시하고 기존 개체를 삭제하는보기입니다. 주어진 객체는 요청 메소드가 &lt;code&gt;POST&lt;/code&gt; 인 경우에만 삭제됩니다 . 이보기가 &lt;code&gt;GET&lt;/code&gt; 을 통해 페치 되면 동일한 URL로 POST되는 양식을 포함해야하는 확인 페이지가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="4de2cd158635d4b92259d27b9434262ba4e9118c" translate="yes" xml:space="preserve">
          <source>A view that displays a form for creating an object, redisplaying the form with validation errors (if there are any) and saving the object.</source>
          <target state="translated">객체를 작성하고 유효성 검증 오류가있는 양식을 다시 표시하고 (있는 경우) 양식을 표시하는보기입니다.</target>
        </trans-unit>
        <trans-unit id="11b53d958b6d4f81aff2fd83cf56677c81083ee6" translate="yes" xml:space="preserve">
          <source>A view that displays a form for editing an existing object, redisplaying the form with validation errors (if there are any) and saving changes to the object. This uses a form automatically generated from the object&amp;rsquo;s model class (unless a form class is manually specified).</source>
          <target state="translated">기존 오브젝트를 편집하고 유효성 검증 오류 (있는 경우)가있는 양식을 다시 표시하고 변경 사항을 오브젝트에 저장하기위한 양식을 표시하는보기. 폼 클래스를 수동으로 지정하지 않는 한 객체의 모델 클래스에서 자동으로 생성 된 폼을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="6c742dd833d72a606fb577227e3542ef9f6c3121" translate="yes" xml:space="preserve">
          <source>A view that displays a form. On error, redisplays the form with validation errors; on success, redirects to a new URL.</source>
          <target state="translated">양식을 표시하는보기입니다. 오류가 발생하면 유효성 검사 오류가있는 양식이 다시 표시됩니다. 성공하면 새 URL로 리디렉션합니다.</target>
        </trans-unit>
        <trans-unit id="3416698f770ac0d2c244a1af3177806764c3204c" translate="yes" xml:space="preserve">
          <source>A view that produces a JavaScript code library with functions that mimic the &lt;code&gt;gettext&lt;/code&gt; interface, plus an array of translation strings.</source>
          <target state="translated">&lt;code&gt;gettext&lt;/code&gt; 인터페이스 를 모방하는 함수와 번역 문자열 배열을 가진 JavaScript 코드 라이브러리를 생성하는 뷰입니다 .</target>
        </trans-unit>
        <trans-unit id="799b243ba43cc677154e75f3958442e2ed77d29e" translate="yes" xml:space="preserve">
          <source>A weekly archive page showing all objects in a given week. Objects with a date in the &lt;em&gt;future&lt;/em&gt; are not displayed unless you set &lt;code&gt;allow_future&lt;/code&gt; to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">주어진 주에있는 모든 객체를 보여주는 주간 아카이브 페이지. &lt;code&gt;allow_future&lt;/code&gt; 를 &lt;code&gt;True&lt;/code&gt; 로 설정하지 않으면 &lt;em&gt;미래&lt;/em&gt; 날짜가있는 객체가 표시되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="37eb88f16168802fc4b9cffdc568e272a4590ed9" translate="yes" xml:space="preserve">
          <source>A widget is Django&amp;rsquo;s representation of an HTML input element. The widget handles the rendering of the HTML, and the extraction of data from a GET/POST dictionary that corresponds to the widget.</source>
          <target state="translated">위젯은 Django가 HTML 입력 요소를 표현한 것입니다. 위젯은 HTML 렌더링 및 위젯에 해당하는 GET / POST 사전에서 데이터 추출을 처리합니다.</target>
        </trans-unit>
        <trans-unit id="6fe4cf4a0f31cafa6cd9b682549b9174f2dd03cc" translate="yes" xml:space="preserve">
          <source>A widget that handles multiple hidden widgets for fields that have a list of values.</source>
          <target state="translated">값 목록이있는 필드의 여러 숨겨진 위젯을 처리하는 위젯입니다.</target>
        </trans-unit>
        <trans-unit id="7062eda901248f1e2cf049677ba786e5cadfb070" translate="yes" xml:space="preserve">
          <source>A widget that is composed of multiple widgets. &lt;a href=&quot;#django.forms.MultiWidget&quot;&gt;&lt;code&gt;MultiWidget&lt;/code&gt;&lt;/a&gt; works hand in hand with the &lt;a href=&quot;fields#django.forms.MultiValueField&quot;&gt;&lt;code&gt;MultiValueField&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">여러 위젯으로 구성된 위젯입니다. &lt;a href=&quot;#django.forms.MultiWidget&quot;&gt; &lt;code&gt;MultiWidget&lt;/code&gt; &lt;/a&gt; 은 &lt;a href=&quot;fields#django.forms.MultiValueField&quot;&gt; &lt;code&gt;MultiValueField&lt;/code&gt; &lt;/a&gt; 와 함께 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="17fa0d0f2429ea5fe6732a47bbe0358b625bbaff" translate="yes" xml:space="preserve">
          <source>A widget&amp;rsquo;s template can be overridden by a project. (Reusable applications typically shouldn&amp;rsquo;t override built-in templates because they might conflict with a project&amp;rsquo;s custom templates.)</source>
          <target state="translated">위젯 템플릿은 프로젝트에 의해 재정의 될 수 있습니다. 재사용 가능한 응용 프로그램은 일반적으로 기본 템플릿을 재정의해서는 안됩니다. 프로젝트의 사용자 지정 템플릿과 충돌 할 수 있기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="e4ec426f473e829814650fbe14a15186d123906a" translate="yes" xml:space="preserve">
          <source>A world-class geospatial framework built on top of Django, that enables storage, manipulation and display of spatial data.</source>
          <target state="translated">Django 위에 구축 된 세계적 수준의 지리 공간 프레임 워크는 공간 데이터의 저장, 조작 및 표시를 가능하게합니다.</target>
        </trans-unit>
        <trans-unit id="84e0fc03a990339657d684e077dfdb46f9a6c2f5" translate="yes" xml:space="preserve">
          <source>A wrapper around &lt;a href=&quot;https://docs.python.org/3/library/pprint.html#pprint.pprint&quot;&gt;&lt;code&gt;pprint.pprint()&lt;/code&gt;&lt;/a&gt; &amp;ndash; for debugging, really.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3/library/pprint.html#pprint.pprint&quot;&gt; &lt;code&gt;pprint.pprint()&lt;/code&gt; &lt;/a&gt; 주위의 래퍼 &amp;ndash; 실제로 디버깅을위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="21e9813fae8d0a13ee37a6d0b2c93a1d91d8a00c" translate="yes" xml:space="preserve">
          <source>A wrapper around the JSON serializer from &lt;a href=&quot;../signing#module-django.core.signing&quot;&gt;&lt;code&gt;django.core.signing&lt;/code&gt;&lt;/a&gt;. Can only serialize basic data types.</source>
          <target state="translated">&lt;a href=&quot;../signing#module-django.core.signing&quot;&gt; &lt;code&gt;django.core.signing&lt;/code&gt; &lt;/a&gt; 의 JSON 시리얼 라이저를 둘러싼 래퍼 입니다. 기본 데이터 유형 만 직렬화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7031c7ff22b246a852c4c2991b9942e0612acc0b" translate="yes" xml:space="preserve">
          <source>A wrapper of &lt;a href=&quot;#django.utils.html.format_html&quot;&gt;&lt;code&gt;format_html()&lt;/code&gt;&lt;/a&gt;, for the common case of a group of arguments that need to be formatted using the same format string, and then joined using &lt;code&gt;sep&lt;/code&gt;. &lt;code&gt;sep&lt;/code&gt; is also passed through &lt;a href=&quot;#django.utils.html.conditional_escape&quot;&gt;&lt;code&gt;conditional_escape()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">동일한 형식 문자열을 사용하여 형식화 한 다음 &lt;code&gt;sep&lt;/code&gt; 를 사용하여 결합해야하는 인수 그룹의 일반적인 경우 &lt;a href=&quot;#django.utils.html.format_html&quot;&gt; &lt;code&gt;format_html()&lt;/code&gt; &lt;/a&gt; 래퍼 . &lt;code&gt;sep&lt;/code&gt; 도 &lt;a href=&quot;#django.utils.html.conditional_escape&quot;&gt; &lt;code&gt;conditional_escape()&lt;/code&gt; &lt;/a&gt; 통해 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="0293ec41ff58f382dc65c47acbffce0c10b0ce1d" translate="yes" xml:space="preserve">
          <source>A yearly archive page showing all available months in a given year. Objects with a date in the &lt;em&gt;future&lt;/em&gt; are not displayed unless you set &lt;code&gt;allow_future&lt;/code&gt; to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">특정 연도에 사용 가능한 모든 월을 표시하는 연간 아카이브 페이지. &lt;code&gt;allow_future&lt;/code&gt; 를 &lt;code&gt;True&lt;/code&gt; 로 설정하지 않으면 &lt;em&gt;미래&lt;/em&gt; 날짜가있는 객체가 표시되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="063707d45c585c051cd6ba030c8b5a3911c408a2" translate="yes" xml:space="preserve">
          <source>AJAX</source>
          <target state="translated">AJAX</target>
        </trans-unit>
        <trans-unit id="ced1f1771b11fe12bb6a94fcd2e1c986cc960e37" translate="yes" xml:space="preserve">
          <source>AJAX example</source>
          <target state="translated">AJAX 예</target>
        </trans-unit>
        <trans-unit id="0f0117db55477563e4484d9879a151cbea4a27fc" translate="yes" xml:space="preserve">
          <source>ALTER USER</source>
          <target state="translated">사용자 변경</target>
        </trans-unit>
        <trans-unit id="5f26aba5377022457897f0511ee86a1a6167779b" translate="yes" xml:space="preserve">
          <source>AND (&lt;code&gt;&amp;amp;&lt;/code&gt;)</source>
          <target state="translated">AND ( &lt;code&gt;&amp;amp;&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="d93d10ff0fbef1b4aa0ddc24e10e907746d3c85a" translate="yes" xml:space="preserve">
          <source>API</source>
          <target state="translated">API</target>
        </trans-unit>
        <trans-unit id="b276f94cd8d0e74a21de6e5939b8c10ca9a975d6" translate="yes" xml:space="preserve">
          <source>API Reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89c25a6e98b7d12432623429744aea6cf501424a" translate="yes" xml:space="preserve">
          <source>API reference</source>
          <target state="translated">API 참조</target>
        </trans-unit>
        <trans-unit id="02cfeac3ca105036ceba887f2dcfb6b40bb7dc1a" translate="yes" xml:space="preserve">
          <source>API reference for the default implementation</source>
          <target state="translated">기본 구현을위한 API 참조</target>
        </trans-unit>
        <trans-unit id="4984d18a62db1a7e3c2196593d1e2be3fff84de6" translate="yes" xml:space="preserve">
          <source>ASGI servers usually take the path to the application callable as a string; for most Django projects, this will look like &lt;code&gt;myproject.asgi:application&lt;/code&gt;.</source>
          <target state="translated">ASGI 서버는 일반적으로 문자열로 호출 가능한 응용 프로그램의 경로를 사용합니다. 대부분의 Django 프로젝트에서 이것은 &lt;code&gt;myproject.asgi:application&lt;/code&gt; 과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="84ce14426cc836022781a8ff40d8fa9869a638ca" translate="yes" xml:space="preserve">
          <source>About &lt;code&gt;pip&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;pip&lt;/code&gt; 소개</target>
        </trans-unit>
        <trans-unit id="02befbd420c9754ded8c9a688a174615ddafd2a6" translate="yes" xml:space="preserve">
          <source>About this document</source>
          <target state="translated">이 문서에 대하여</target>
        </trans-unit>
        <trans-unit id="9dad6f0cb4c880247932756c02207efab129fb5b" translate="yes" xml:space="preserve">
          <source>About this section</source>
          <target state="translated">이 섹션에 대하여</target>
        </trans-unit>
        <trans-unit id="1ccbfcb6d1f0d330be55a422e94828bf8688782b" translate="yes" xml:space="preserve">
          <source>Absolute filesystem path to the directory that will hold &lt;a href=&quot;../topics/files&quot;&gt;user-uploaded files&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../topics/files&quot;&gt;사용자가 업로드 한 파일을&lt;/a&gt; 보유 할 디렉토리의 절대 파일 시스템 경로 .</target>
        </trans-unit>
        <trans-unit id="af54067f6f0f9d73d5c2e049acde2e30ed727996" translate="yes" xml:space="preserve">
          <source>Absolute path to the directory that will hold the files. Defaults to the value of your &lt;a href=&quot;../settings#std:setting-MEDIA_ROOT&quot;&gt;&lt;code&gt;MEDIA_ROOT&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">파일을 보유 할 디렉토리의 절대 경로입니다. 기본값은 &lt;a href=&quot;../settings#std:setting-MEDIA_ROOT&quot;&gt; &lt;code&gt;MEDIA_ROOT&lt;/code&gt; &lt;/a&gt; 설정 값입니다 .</target>
        </trans-unit>
        <trans-unit id="759e6ae574b3735504adb51e00a2cab2e27419ad" translate="yes" xml:space="preserve">
          <source>Absolutely NO guarantee is provided about the resulting string being HTML safe. So NEVER mark safe the result of a &lt;code&gt;strip_tag&lt;/code&gt; call without escaping it first, for example with &lt;a href=&quot;#django.utils.html.escape&quot;&gt;&lt;code&gt;escape()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">결과 문자열이 HTML에 안전하다는 보장은 없습니다. 따라서 &lt;a href=&quot;#django.utils.html.escape&quot;&gt; &lt;code&gt;escape()&lt;/code&gt; &lt;/a&gt; 와 같이 &lt;code&gt;strip_tag&lt;/code&gt; 호출 의 결과를 먼저 이스케이프하지 않고 표시하지 마십시오 .</target>
        </trans-unit>
        <trans-unit id="d8218637bd5929185efd6cedd428b196f3c683f3" translate="yes" xml:space="preserve">
          <source>Abstract base classes</source>
          <target state="translated">추상 기본 수업</target>
        </trans-unit>
        <trans-unit id="fa7aac5d1e2bb32c032665a40d236213846536d4" translate="yes" xml:space="preserve">
          <source>Abstract base classes are useful when you want to put some common information into a number of other models. You write your base class and put &lt;code&gt;abstract=True&lt;/code&gt; in the &lt;a href=&quot;#meta-options&quot;&gt;Meta&lt;/a&gt; class. This model will then not be used to create any database table. Instead, when it is used as a base class for other models, its fields will be added to those of the child class.</source>
          <target state="translated">추상 기본 클래스는 몇 가지 공통 정보를 여러 다른 모델에 넣을 때 유용합니다. 기본 클래스를 작성 하고 &lt;a href=&quot;#meta-options&quot;&gt;Meta&lt;/a&gt; 클래스 에 &lt;code&gt;abstract=True&lt;/code&gt; 를 넣습니다 . 그런 다음이 모델은 데이터베이스 테이블을 작성하는 데 사용되지 않습니다. 대신 다른 모델의 기본 클래스로 사용되는 경우 해당 필드가 하위 클래스의 기본 클래스에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="f60343c3e5a4a387278172749678d481a757ea87" translate="yes" xml:space="preserve">
          <source>Abusing &lt;code&gt;BinaryField&lt;/code&gt;</source>
          <target state="translated">남용 &lt;code&gt;BinaryField&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="492549e01f94b8535d087684cf622e7a796907cf" translate="yes" xml:space="preserve">
          <source>Accepting optional arguments</source>
          <target state="translated">선택적 인수 수락</target>
        </trans-unit>
        <trans-unit id="d5ddb474b2b5cdfff4682a0a1251966e4bd6f988" translate="yes" xml:space="preserve">
          <source>Accepts a field name or expression, and a string or expression. Returns the trigram distance between the two arguments.</source>
          <target state="translated">필드 이름 또는 표현식과 문자열 또는 표현식을 승인합니다. 두 인수 사이의 삼각 거리를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a641a725acf04449d9b3fb31860faa4576c5f3cb" translate="yes" xml:space="preserve">
          <source>Accepts a field name or expression, and a string or expression. Returns the trigram similarity between the two arguments.</source>
          <target state="translated">필드 이름 또는 표현식과 문자열 또는 표현식을 승인합니다. 두 인수 사이의 트라이 그램 유사성을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="13def4302055b91c81c7f39df3609bae11fd215d" translate="yes" xml:space="preserve">
          <source>Accepts a floating point number expressed in seconds since the epoch in UTC&amp;ndash;such as that outputted by &lt;code&gt;time.time()&lt;/code&gt;. If set to &lt;code&gt;None&lt;/code&gt;, defaults to the current time.</source>
          <target state="translated">에포크 이후의 시간 (초)으로 표시되는 부동 소수점 숫자 (예 : &lt;code&gt;time.time()&lt;/code&gt; 출력 된 숫자)를 승인합니다 . &lt;code&gt;None&lt;/code&gt; 으로 설정하면 기본값은 현재 시간입니다.</target>
        </trans-unit>
        <trans-unit id="df56b884613c05ac3a8f72e8b4f2e5e64a3db750" translate="yes" xml:space="preserve">
          <source>Accepts a geographic field or expression and a SRID integer code, and returns the transformed geometry to the spatial reference system specified by the &lt;code&gt;srid&lt;/code&gt; parameter.</source>
          <target state="translated">지리적 필드 또는 표현식과 SRID 정수 코드를 승인하고 변환 된 기하학을 &lt;code&gt;srid&lt;/code&gt; 매개 변수로 지정된 공간 참조 시스템으로 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="3a929929ce9e2d7adf6aa460db5deeb9e0a45a21" translate="yes" xml:space="preserve">
          <source>Accepts a geographic field or expression and attempts to convert the value into a valid geometry without losing any of the input vertices. Geometries that are already valid are returned without changes. Simple polygons might become a multipolygon and the result might be of lower dimension than the input.</source>
          <target state="translated">지리적 필드 또는 표현식을 승인하고 입력 정점을 잃지 않고 값을 유효한 지오메트리로 변환하려고 시도합니다. 이미 유효한 형상은 변경없이 반환됩니다. 단순 다각형은 다중 다각형이 될 수 있으며 결과는 입력 값보다 치수가 더 작을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3e089d617139f72a8320cb9314f9bda2277cd601" translate="yes" xml:space="preserve">
          <source>Accepts a geographic field or expression and tests if the value is well formed. Returns &lt;code&gt;True&lt;/code&gt; if its value is a valid geometry and &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">지리적 필드 또는 표현식을 승인하고 값이 올바른지 테스트합니다. 반환 &lt;code&gt;True&lt;/code&gt; 의 값이 유효한 형상과 경우 &lt;code&gt;False&lt;/code&gt; 이 없습니다.</target>
        </trans-unit>
        <trans-unit id="e2cf53105cebe5632558e9576e5f62f64a2c354a" translate="yes" xml:space="preserve">
          <source>Accepts a list of at least two field names or expressions and returns the first non-null value (note that an empty string is not considered a null value). Each argument must be of a similar type, so mixing text and numbers will result in a database error.</source>
          <target state="translated">둘 이상의 필드 이름 또는 표현식 목록을 승인하고 널이 아닌 첫 번째 값을 리턴합니다 (빈 문자열은 널값으로 간주되지 않음). 각 인수는 비슷한 유형이어야하므로 텍스트와 숫자를 혼합하면 데이터베이스 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b448033e6c333e16c763d7b2d27fc745a26da0c1" translate="yes" xml:space="preserve">
          <source>Accepts a list of at least two field names or expressions and returns the greatest value. Each argument must be of a similar type, so mixing text and numbers will result in a database error.</source>
          <target state="translated">두 개 이상의 필드 이름 또는 표현식 목록을 승인하고 가장 큰 값을 리턴합니다. 각 인수는 비슷한 유형이어야하므로 텍스트와 숫자를 혼합하면 데이터베이스 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f42637506b3156830bc9337db40a9ff2e4bc7de1" translate="yes" xml:space="preserve">
          <source>Accepts a list of at least two field names or expressions and returns the least value. Each argument must be of a similar type, so mixing text and numbers will result in a database error.</source>
          <target state="translated">둘 이상의 필드 이름 또는 표현식 목록을 승인하고 최소값을 리턴합니다. 각 인수는 비슷한 유형이어야하므로 텍스트와 숫자를 혼합하면 데이터베이스 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="651990921909d5750a9b110f7087b0c6ff565c6e" translate="yes" xml:space="preserve">
          <source>Accepts a list of at least two text fields or expressions and returns the concatenated text. Each argument must be of a text or char type. If you want to concatenate a &lt;code&gt;TextField()&lt;/code&gt; with a &lt;code&gt;CharField()&lt;/code&gt;, then be sure to tell Django that the &lt;code&gt;output_field&lt;/code&gt; should be a &lt;code&gt;TextField()&lt;/code&gt;. Specifying an &lt;code&gt;output_field&lt;/code&gt; is also required when concatenating a &lt;code&gt;Value&lt;/code&gt; as in the example below.</source>
          <target state="translated">두 개 이상의 텍스트 필드 또는 표현식 목록을 승인하고 연결된 텍스트를 리턴합니다. 각 인수는 텍스트 또는 문자 유형이어야합니다. &lt;code&gt;TextField()&lt;/code&gt; 와 &lt;code&gt;CharField()&lt;/code&gt; 를 연결 하려면 Django에 &lt;code&gt;output_field&lt;/code&gt; 가 &lt;code&gt;TextField()&lt;/code&gt; 이어야 함 을 알리십시오 . 아래 예와 같이 &lt;code&gt;Value&lt;/code&gt; 을 연결할 때 &lt;code&gt;output_field&lt;/code&gt; 를 지정 해야 합니다.</target>
        </trans-unit>
        <trans-unit id="cbc82473a8e0bd0fe72439d5e4d84775a91a5e4a" translate="yes" xml:space="preserve">
          <source>Accepts a numeric field or expression and returns the text representation of the expression as a single character. It works the same as Python&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3/library/functions.html#chr&quot;&gt;&lt;code&gt;chr()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">숫자 필드 또는 표현식을 승인하고 표현식의 텍스트 표현을 단일 문자로 리턴합니다. 파이썬의 &lt;a href=&quot;https://docs.python.org/3/library/functions.html#chr&quot;&gt; &lt;code&gt;chr()&lt;/code&gt; &lt;/a&gt; 함수 와 동일하게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="0a82ee117f4ab7b34cf69b9f475422a38f72ec13" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns a &lt;a href=&quot;https://developers.google.com/kml/documentation/&quot;&gt;Keyhole Markup Language (KML)&lt;/a&gt; representation of the geometry.</source>
          <target state="translated">단일 지리적 필드 또는 표현식을 승인 하고 기하학의 &lt;a href=&quot;https://developers.google.com/kml/documentation/&quot;&gt;KML (Keyhole Markup Language)&lt;/a&gt; 표현을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="95f21af24d82a0d743fb2b1ae13bade9e937af0c" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns a &lt;a href=&quot;https://en.wikipedia.org/wiki/Geography_Markup_Language&quot;&gt;Geographic Markup Language (GML)&lt;/a&gt; representation of the geometry.</source>
          <target state="translated">단일 지리 필드 또는 표현식을 승인 하고 지오메트리의 &lt;a href=&quot;https://en.wikipedia.org/wiki/Geography_Markup_Language&quot;&gt;GML (Geographic Markup Language)&lt;/a&gt; 표현을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="56950137bc79c1fe91b955af4f24e5c6499122ec" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns a &lt;a href=&quot;https://en.wikipedia.org/wiki/Geohash&quot;&gt;GeoHash&lt;/a&gt; representation of the geometry.</source>
          <target state="translated">단일 지리 필드 또는 표현식을 허용 하고 지오메트리 의 &lt;a href=&quot;https://en.wikipedia.org/wiki/Geohash&quot;&gt;GeoHash&lt;/a&gt; 표현을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="657e11eb33f01b69f5e33eeb949a91f6fd40ee0a" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns a &lt;a href=&quot;https://geojson.org/&quot;&gt;GeoJSON&lt;/a&gt; representation of the geometry. Note that the result is not a complete GeoJSON structure but only the &lt;code&gt;geometry&lt;/code&gt; key content of a GeoJSON structure. See also &lt;a href=&quot;serializers&quot;&gt;GeoJSON Serializer&lt;/a&gt;.</source>
          <target state="translated">단일 지리 필드 또는 표현식을 승인 하고 지오메트리 의 &lt;a href=&quot;https://geojson.org/&quot;&gt;GeoJSON&lt;/a&gt; 표현을 리턴 합니다. 결과는 완전한 GeoJSON 구조가 아니라 GeoJSON 구조의 &lt;code&gt;geometry&lt;/code&gt; 키 내용 일뿐 입니다. &lt;a href=&quot;serializers&quot;&gt;GeoJSON Serializer&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="14bfeffca9ca818d49288a07690181434cb7c29d" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns a &lt;a href=&quot;https://www.w3.org/Graphics/SVG/&quot;&gt;Scalable Vector Graphics (SVG)&lt;/a&gt; representation of the geometry.</source>
          <target state="translated">단일 지리적 필드 또는 표현식을 허용 하고 형상의 &lt;a href=&quot;https://www.w3.org/Graphics/SVG/&quot;&gt;SVG (Scalable Vector Graphics)&lt;/a&gt; 표현을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="9eaceb8f73c655f3cc6a68da79e3d30ea6e56980" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns a &lt;code&gt;Point&lt;/code&gt; geometry guaranteed to lie on the surface of the field; otherwise returns &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">단일 지리적 필드 또는 표현식을 허용하고 필드 표면에 놓 이도록 보장 된 &lt;code&gt;Point&lt;/code&gt; 형상을 반환 합니다. 그렇지 않으면 &lt;code&gt;None&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="2e84009ac9a234b365e6fe51fbebd50d36c375d3" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns a geometry with all points snapped to the given grid. How the geometry is snapped to the grid depends on how many numeric (either float, integer, or long) arguments are given.</source>
          <target state="translated">단일 지리적 필드 또는 표현식을 허용하고 모든 점이 지정된 그리드에 스냅 된 형상을 반환합니다. 지오메트리가 그리드에 스냅되는 방법은 몇 개의 숫자 (float, integer 또는 long) 인수가 제공되는지에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="1d75b7405eb2f866cf68e396014013bf7002cf93" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns a geometry with its coordinates offset by the &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, and optionally &lt;code&gt;z&lt;/code&gt; numeric parameters.</source>
          <target state="translated">단일 지리적 필드 또는 표현식을 허용하고 &lt;code&gt;x&lt;/code&gt; , &lt;code&gt;y&lt;/code&gt; 및 선택적으로 &lt;code&gt;z&lt;/code&gt; 숫자 매개 변수에 의해 좌표가 오프셋 된 형상을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="11726a810332e7e30ca7913f37c322116b5e114f" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns a geometry with reversed coordinates.</source>
          <target state="translated">단일 지리적 필드 또는 표현식을 허용하고 좌표가 반전 된 형상을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="19f890c9c0859a45cf1fdbe2e69ff88d46456dc9" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns a geometry with scaled coordinates by multiplying them with the &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, and optionally &lt;code&gt;z&lt;/code&gt; parameters.</source>
          <target state="translated">단일 지리적 필드 또는 표현식을 허용하고 &lt;code&gt;x&lt;/code&gt; , &lt;code&gt;y&lt;/code&gt; 및 선택적으로 &lt;code&gt;z&lt;/code&gt; 매개 변수 를 곱하여 스케일 된 좌표가있는 형상을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="50ed891d166b4c3b41549d228485aaff67d3e2b4" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns a modified version of the polygon/multipolygon in which all exterior rings are oriented clockwise and all interior rings are oriented counterclockwise. Non-polygonal geometries are returned unchanged.</source>
          <target state="translated">단일 지리적 필드 또는 표현식을 허용하고 모든 외부 링의 방향이 시계 방향이고 모든 내부 링의 방향이 시계 반대 방향 인 수정 된 다각형 / 다각형 버전을 반환합니다. 비 다각형 도형은 변경되지 않은 채 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="3f683d3ed41ea8f15ff7f4b8fd69947814c3d503" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns the &lt;code&gt;centroid&lt;/code&gt; value of the geometry.</source>
          <target state="translated">단일 지리적 필드 또는 표현식을 허용 하고 지오메트리 의 &lt;code&gt;centroid&lt;/code&gt; 값을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="a16fb807e556b8168c52b4c02df11039d3c22778" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns the area of the field as an &lt;a href=&quot;measure#django.contrib.gis.measure.Area&quot;&gt;&lt;code&gt;Area&lt;/code&gt;&lt;/a&gt; measure.</source>
          <target state="translated">단일 지역 필드 또는 표현식을 허용하고 필드 영역을 &lt;a href=&quot;measure#django.contrib.gis.measure.Area&quot;&gt; &lt;code&gt;Area&lt;/code&gt; &lt;/a&gt; 측정 값 으로 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="894baa74f10f984cb42ee3542530dcac1030b236" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns the geometry representing the bounding box of the geometry.</source>
          <target state="translated">단일 지리 필드 또는 표현식을 허용하고 지오메트리의 경계 상자를 나타내는 지오메트리를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b9a576062e78c1c62c2d11552d4116e25853b0ec" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns the memory size (number of bytes) that the geometry field takes.</source>
          <target state="translated">단일 지리적 필드 또는 표현식을 승인하고 기하학 필드가 취하는 메모리 크기 (바이트 수)를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="1405cab29ed4f82b8153fbc0581c26e14c0bc05a" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns the number of geometries if the geometry field is a collection (e.g., a &lt;code&gt;GEOMETRYCOLLECTION&lt;/code&gt; or &lt;code&gt;MULTI*&lt;/code&gt; field). Returns 1 for single geometries.</source>
          <target state="translated">단일 지리적 필드 또는 표현식을 승인하고 기하학 필드가 콜렉션 인 경우 (예 : &lt;code&gt;GEOMETRYCOLLECTION&lt;/code&gt; 또는 &lt;code&gt;MULTI*&lt;/code&gt; 필드) 기하학 수를 리턴합니다 . 단일 도형에 대해 1을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4bafcd90cee37aa8bf66b2eb68ddf7dda0f2f16d" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns the number of points in a geometry.</source>
          <target state="translated">단일 지리적 필드 또는 표현식을 허용하고 지오메트리의 포인트 수를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="e1a3b53570fa1619e85009fc2e43afc948df7def" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns the perimeter of the geometry field as a &lt;a href=&quot;measure#django.contrib.gis.measure.Distance&quot;&gt;&lt;code&gt;Distance&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">단일 지리 필드 또는 표현식을 허용하고 지오메트리 필드의 둘레를 &lt;a href=&quot;measure#django.contrib.gis.measure.Distance&quot;&gt; &lt;code&gt;Distance&lt;/code&gt; &lt;/a&gt; 객체 로 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="9f87d11cff69a70303d5e7c77cbfef1fc27494e1" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic field or expression and returns the smallest circle polygon that can fully contain the geometry.</source>
          <target state="translated">단일 지리적 필드 또는 표현식을 허용하고 형상을 완전히 포함 할 수있는 가장 작은 원 다각형을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9b263a6957772a42280da039db9e98bbe33bd417" translate="yes" xml:space="preserve">
          <source>Accepts a single geographic linestring or multilinestring field or expression and returns its length as a &lt;a href=&quot;measure#django.contrib.gis.measure.Distance&quot;&gt;&lt;code&gt;Distance&lt;/code&gt;&lt;/a&gt; measure.</source>
          <target state="translated">단일 지리적 선 스트링 또는 다중 선 스트링 필드 또는 표현식을 허용하고 길이를 &lt;a href=&quot;measure#django.contrib.gis.measure.Distance&quot;&gt; &lt;code&gt;Distance&lt;/code&gt; &lt;/a&gt; 측정 값 으로 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="e94bb56a17617d1d457d56e9cbbcda0a2fff3aed" translate="yes" xml:space="preserve">
          <source>Accepts a single text field or expression and returns the MD5 hash of the string.</source>
          <target state="translated">단일 텍스트 필드 또는 표현식을 승인하고 문자열의 MD5 해시를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="9ae8765b2acec59844a12c8e2e495aa22aec2438" translate="yes" xml:space="preserve">
          <source>Accepts a single text field or expression and returns the Unicode code point value for the first character of that expression. It works similar to Python&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3/library/functions.html#ord&quot;&gt;&lt;code&gt;ord()&lt;/code&gt;&lt;/a&gt; function, but an exception isn&amp;rsquo;t raised if the expression is more than one character long.</source>
          <target state="translated">단일 텍스트 필드 또는 표현식을 승인하고 해당 표현식의 첫 문자에 대한 유니 코드 코드 포인트 값을 리턴합니다. 파이썬의 &lt;a href=&quot;https://docs.python.org/3/library/functions.html#ord&quot;&gt; &lt;code&gt;ord()&lt;/code&gt; &lt;/a&gt; 함수 와 비슷하게 작동 하지만 표현식 길이가 두 문자 이상인 경우 예외가 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="549c3fd3fc223077dcaadcf7f13534cf15c32595" translate="yes" xml:space="preserve">
          <source>Accepts a single text field or expression and returns the characters of that expression in reverse order.</source>
          <target state="translated">단일 텍스트 필드 또는 표현식을 승인하고 해당 표현식의 문자를 역순으로 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="74229dcf98653374b869555ef5f0abe75fcf68bb" translate="yes" xml:space="preserve">
          <source>Accepts a single text field or expression and returns the lowercase representation.</source>
          <target state="translated">단일 텍스트 필드 또는 표현식을 승인하고 소문자 표현을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="e06db45cb0075a89734c8009693479cd720e1d83" translate="yes" xml:space="preserve">
          <source>Accepts a single text field or expression and returns the number of characters the value has. If the expression is null, then the length will also be null.</source>
          <target state="translated">단일 텍스트 필드 또는 표현식을 승인하고 값의 문자 수를 리턴합니다. 표현식이 널이면 길이도 널입니다.</target>
        </trans-unit>
        <trans-unit id="71f22e95c98dffd3a8ec5fc5c82730d47889766d" translate="yes" xml:space="preserve">
          <source>Accepts a single text field or expression and returns the particular hash of the string.</source>
          <target state="translated">단일 텍스트 필드 또는 표현식을 승인하고 문자열의 특정 해시를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="4b2b5833bcf18880c991919c7207a6a57cbabf44" translate="yes" xml:space="preserve">
          <source>Accepts a single text field or expression and returns the uppercase representation.</source>
          <target state="translated">단일 텍스트 필드 또는 표현식을 승인하고 대문자 표현을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="ea58a83f52f471ce437448da8c01634ab701fee5" translate="yes" xml:space="preserve">
          <source>Accepts any format understood by &lt;a href=&quot;../utils#django.utils.dateparse.parse_duration&quot;&gt;&lt;code&gt;parse_duration()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../utils#django.utils.dateparse.parse_duration&quot;&gt; &lt;code&gt;parse_duration()&lt;/code&gt; &lt;/a&gt; 이해하는 모든 형식을 허용합니다 .</target>
        </trans-unit>
        <trans-unit id="9e4915db3019ce7f68f5dd7ee8090bc81c9101b1" translate="yes" xml:space="preserve">
          <source>Accepts two expressions and returns &lt;code&gt;None&lt;/code&gt; if they are equal, otherwise returns &lt;code&gt;expression1&lt;/code&gt;.</source>
          <target state="translated">두 표현식을 허용하고 같으면 &lt;code&gt;None&lt;/code&gt; 을 리턴하고 , 그렇지 않으면 &lt;code&gt;expression1&lt;/code&gt; 을 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="ee7856f2001d93e76e9b8af8270479d621a210cd" translate="yes" xml:space="preserve">
          <source>Accepts two geographic fields or expressions and returns the distance between them, as a &lt;a href=&quot;measure#django.contrib.gis.measure.Distance&quot;&gt;&lt;code&gt;Distance&lt;/code&gt;&lt;/a&gt; object. On MySQL, a raw float value is returned when the coordinates are geodetic.</source>
          <target state="translated">두 개의 지리적 필드 나 표현식을 허용하고 그 사이의 &lt;a href=&quot;measure#django.contrib.gis.measure.Distance&quot;&gt; &lt;code&gt;Distance&lt;/code&gt; &lt;/a&gt; 객체 로 반환 합니다. MySQL에서는 좌표가 측지적일 때 raw float 값이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="958327c3e5327273cc2f3161e66e45020fff9c66" translate="yes" xml:space="preserve">
          <source>Accepts two geographic fields or expressions and returns the distance between them. When used in an &lt;a href=&quot;../../models/querysets#django.db.models.query.QuerySet.order_by&quot;&gt;&lt;code&gt;order_by()&lt;/code&gt;&lt;/a&gt; clause, it provides index-assisted nearest-neighbor result sets.</source>
          <target state="translated">두 개의 지리적 필드 나 표현식을 허용하고 그 사이의 거리를 반환합니다. &lt;a href=&quot;../../models/querysets#django.db.models.query.QuerySet.order_by&quot;&gt; &lt;code&gt;order_by()&lt;/code&gt; &lt;/a&gt; 절 에서 사용될 때 , 색인 지원 인접 이웃 결과 세트를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="d806ff458db000b20381bf0310c3d85777aca1a9" translate="yes" xml:space="preserve">
          <source>Accepts two geographic fields or expressions and returns the geometric difference, that is the part of geometry A that does not intersect with geometry B.</source>
          <target state="translated">두 개의 지리적 필드 또는 표현식을 허용하고 기하학적 차이, 즉 기하학적 B와 교차하지 않는 기하학적 A의 일부를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="5f8e0479b490fd8a5168039d9c00a12fcb470f1a" translate="yes" xml:space="preserve">
          <source>Accepts two geographic fields or expressions and returns the geometric intersection between them.</source>
          <target state="translated">두 개의 지리적 필드 또는 표현식을 허용하고 둘 사이의 기하학적 교차점을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="03cd71f01f6f1f5993554ef614bcf4862e65af76" translate="yes" xml:space="preserve">
          <source>Accepts two geographic fields or expressions and returns the geometric symmetric difference (union without the intersection) between the given parameters.</source>
          <target state="translated">두 개의 지리적 필드 또는 표현식을 허용하고 지정된 매개 변수 사이의 기하학적 대칭 차이 (교차가없는 조합)를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="d74f7c7cef82abfe45344bcbeb4804272efaa5c8" translate="yes" xml:space="preserve">
          <source>Accepts two geographic fields or expressions and returns the union of both geometries.</source>
          <target state="translated">두 개의 지리적 필드 또는 표현식을 허용하고 두 기하학의 결합을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="fe506cac1179895dadcf2a28dd9fc43f361e3104" translate="yes" xml:space="preserve">
          <source>Accepts two numeric fields or expressions and returns the logarithm of the first to base of the second.</source>
          <target state="translated">두 개의 숫자 필드 또는 표현식을 승인하고 첫 번째 로그를 두 번째베이스에 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="439402aace1e8ee2628b4527313d1b3db278c384" translate="yes" xml:space="preserve">
          <source>Accepts two numeric fields or expressions and returns the remainder of the first divided by the second (modulo operation).</source>
          <target state="translated">두 개의 숫자 필드 또는 표현식을 허용하고 첫 번째의 나머지를 두 번째로 나눈 값을 반환합니다 (모듈로 연산).</target>
        </trans-unit>
        <trans-unit id="3682b37ac52be11c06f4185d23eb9ef0443a03f0" translate="yes" xml:space="preserve">
          <source>Accepts two numeric fields or expressions and returns the value of the first raised to the power of the second.</source>
          <target state="translated">두 개의 숫자 필드 또는 표현식을 승인하고 첫 번째로 올린 값을 두 번째로 거듭 제곱 한 값을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="27fa97d87729019951db2d8a6aebd5731fee67d6" translate="yes" xml:space="preserve">
          <source>Access the &lt;a href=&quot;#django.forms.Form.errors&quot;&gt;&lt;code&gt;errors&lt;/code&gt;&lt;/a&gt; attribute to get a dictionary of error messages:</source>
          <target state="translated">&lt;a href=&quot;#django.forms.Form.errors&quot;&gt; &lt;code&gt;errors&lt;/code&gt; &lt;/a&gt; 속성 사전에 액세스하여 오류 메시지 사전을 얻으십시오.</target>
        </trans-unit>
        <trans-unit id="70844f99b01c9887bd3cd6ac918267f64ac095d5" translate="yes" xml:space="preserve">
          <source>Access to delete an object is limited to users with the &amp;ldquo;delete&amp;rdquo; permission for that type of object.</source>
          <target state="translated">객체 삭제 액세스는 해당 유형의 객체에 대한 &quot;삭제&quot;권한이있는 사용자로 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="366a11d335f02df3f29598095bfe942fd23dae76" translate="yes" xml:space="preserve">
          <source>Access to view objects is limited to users with the &amp;ldquo;view&amp;rdquo; or &amp;ldquo;change&amp;rdquo; permission for that type of object.</source>
          <target state="translated">객체보기 권한은 해당 유형의 객체에 대한 &quot;보기&quot;또는 &quot;변경&quot;권한이있는 사용자로 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="38e06500cb4d92bb119465a50fb9b86093a6009c" translate="yes" xml:space="preserve">
          <source>Access to view the &amp;ldquo;add&amp;rdquo; form and add an object is limited to users with the &amp;ldquo;add&amp;rdquo; permission for that type of object.</source>
          <target state="translated">&amp;ldquo;추가&amp;rdquo;양식을보고 개체를 추가 할 수있는 액세스 권한은 해당 유형의 개체에 대해&amp;ldquo;추가&amp;rdquo;권한이있는 사용자로 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="93db48fd1dde234b588b1a45da085aa25579c603" translate="yes" xml:space="preserve">
          <source>Access to view the change list, view the &amp;ldquo;change&amp;rdquo; form and change an object is limited to users with the &amp;ldquo;change&amp;rdquo; permission for that type of object.</source>
          <target state="translated">변경 목록을보고 &quot;변경&quot;양식을보고 개체를 변경할 수있는 액세스 권한은 해당 유형의 개체에 대한 &quot;변경&quot;권한이있는 사용자로 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="2813c4129c2938f226f74f0d6397ea87e54eeead" translate="yes" xml:space="preserve">
          <source>Accessing &amp;ldquo;clean&amp;rdquo; data</source>
          <target state="translated">&quot;깨끗한&quot;데이터에 액세스</target>
        </trans-unit>
        <trans-unit id="4fbacb7119cba6d5d1991036814bdceefb24b0f5" translate="yes" xml:space="preserve">
          <source>Accessing &lt;a href=&quot;../../ref/request-response#django.http.HttpRequest.POST&quot;&gt;&lt;code&gt;request.POST&lt;/code&gt;&lt;/a&gt; inside middleware before the view runs or in &lt;code&gt;process_view()&lt;/code&gt; will prevent any view running after the middleware from being able to &lt;a href=&quot;file-uploads#modifying-upload-handlers-on-the-fly&quot;&gt;modify the upload handlers for the request&lt;/a&gt;, and should normally be avoided.</source>
          <target state="translated">뷰가 실행되기 전에 또는 &lt;code&gt;process_view()&lt;/code&gt; 에서 미들웨어 내부에서 &lt;a href=&quot;../../ref/request-response#django.http.HttpRequest.POST&quot;&gt; &lt;code&gt;request.POST&lt;/code&gt; 에&lt;/a&gt; 액세스 하면 미들웨어 이후에 실행중인 모든 뷰 &lt;a href=&quot;file-uploads#modifying-upload-handlers-on-the-fly&quot;&gt;가 요청에 대한 업로드 핸들러&lt;/a&gt; 를 수정할 수 없으므로 일반적으로 피해야합니다.</target>
        </trans-unit>
        <trans-unit id="dba8c55facde2fcbf3afa09a373e3e68108704d8" translate="yes" xml:space="preserve">
          <source>Accessing method calls</source>
          <target state="translated">메소드 호출에 액세스</target>
        </trans-unit>
        <trans-unit id="9e9865ef8d15c01595b6b655ad850c74bce1812a" translate="yes" xml:space="preserve">
          <source>Accessing models from other apps</source>
          <target state="translated">다른 앱에서 모델에 액세스</target>
        </trans-unit>
        <trans-unit id="bbc0ef11767ffcb6245d3a45e892639cc25a7bb1" translate="yes" xml:space="preserve">
          <source>Accessing the cache</source>
          <target state="translated">캐시에 액세스</target>
        </trans-unit>
        <trans-unit id="f2275e202f6f5545a5e5a268c8877e7f21562068" translate="yes" xml:space="preserve">
          <source>Accessing the fields from the form</source>
          <target state="translated">양식에서 필드에 액세스</target>
        </trans-unit>
        <trans-unit id="8bd4b1d305d7be0f627fb7f8c1aa2a94b62c4214" translate="yes" xml:space="preserve">
          <source>According to this design, the URL for the archive corresponding to year &lt;em&gt;nnnn&lt;/em&gt; is &lt;code&gt;/articles/&amp;lt;nnnn&amp;gt;/&lt;/code&gt;.</source>
          <target state="translated">이 디자인에 따르면 &lt;em&gt;nnnn&lt;/em&gt; 연도에 해당하는 아카이브의 URL 은 &lt;code&gt;/articles/&amp;lt;nnnn&amp;gt;/&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="daabc7b465ab7ca34a13943237cf2f1d8a517b51" translate="yes" xml:space="preserve">
          <source>Acquiring the token if &lt;a href=&quot;settings#std:setting-CSRF_USE_SESSIONS&quot;&gt;&lt;code&gt;CSRF_USE_SESSIONS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;settings#std:setting-CSRF_COOKIE_HTTPONLY&quot;&gt;&lt;code&gt;CSRF_COOKIE_HTTPONLY&lt;/code&gt;&lt;/a&gt; are &lt;code&gt;False&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;settings#std:setting-CSRF_USE_SESSIONS&quot;&gt; &lt;code&gt;CSRF_USE_SESSIONS&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;settings#std:setting-CSRF_COOKIE_HTTPONLY&quot;&gt; &lt;code&gt;CSRF_COOKIE_HTTPONLY&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;False&lt;/code&gt; 경우 토큰 획득</target>
        </trans-unit>
        <trans-unit id="e04b42ab7f6e52405f0521b9742bf7a1cd0f86c4" translate="yes" xml:space="preserve">
          <source>Acquiring the token if &lt;a href=&quot;settings#std:setting-CSRF_USE_SESSIONS&quot;&gt;&lt;code&gt;CSRF_USE_SESSIONS&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;settings#std:setting-CSRF_COOKIE_HTTPONLY&quot;&gt;&lt;code&gt;CSRF_COOKIE_HTTPONLY&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;True&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;settings#std:setting-CSRF_USE_SESSIONS&quot;&gt; &lt;code&gt;CSRF_USE_SESSIONS&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;settings#std:setting-CSRF_COOKIE_HTTPONLY&quot;&gt; &lt;code&gt;CSRF_COOKIE_HTTPONLY&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;True&lt;/code&gt; 인 경우 토큰 획득</target>
        </trans-unit>
        <trans-unit id="efc107784283b34b7f7958205ac5438711b20983" translate="yes" xml:space="preserve">
          <source>Actions as &lt;a href=&quot;index#django.contrib.admin.ModelAdmin&quot;&gt;&lt;code&gt;ModelAdmin&lt;/code&gt;&lt;/a&gt; methods</source>
          <target state="translated">&lt;a href=&quot;index#django.contrib.admin.ModelAdmin&quot;&gt; &lt;code&gt;ModelAdmin&lt;/code&gt; &lt;/a&gt; 메소드 로서의 조치</target>
        </trans-unit>
        <trans-unit id="eb816f654713bed5c74865320bee81f41e3ccd80" translate="yes" xml:space="preserve">
          <source>Actions may limit their availability to users with specific permissions by setting an &lt;code&gt;allowed_permissions&lt;/code&gt; attribute on the action function:</source>
          <target state="translated">조치는 조치 기능에서 &lt;code&gt;allowed_permissions&lt;/code&gt; 속성을 설정하여 특정 권한을 가진 사용자에게 가용성을 제한 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f9e1795879dfbc37215933b8cc56a60f6f0fbf82" translate="yes" xml:space="preserve">
          <source>Actions that provide intermediate pages</source>
          <target state="translated">중간 페이지를 제공하는 조치</target>
        </trans-unit>
        <trans-unit id="9951a92b331c9d8caf130eb6889f831dc049a60e" translate="yes" xml:space="preserve">
          <source>Activate this view by adding the following line to your URLconf:</source>
          <target state="translated">URLconf에 다음 줄을 추가하여이보기를 활성화하십시오.</target>
        </trans-unit>
        <trans-unit id="0aa4c06f0fcad75c97ecc22ca28a7b36d66d0f5d" translate="yes" xml:space="preserve">
          <source>Activates some additional checks that are only relevant in a deployment setting.</source>
          <target state="translated">배포 설정에만 관련된 몇 가지 추가 검사를 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="4b4f7663e482a79242a94ee26cd46a50169934e7" translate="yes" xml:space="preserve">
          <source>Activating middleware</source>
          <target state="translated">미들웨어 활성화</target>
        </trans-unit>
        <trans-unit id="c7f5b8c15f3e67199af71c91865179df3a82c15f" translate="yes" xml:space="preserve">
          <source>Activating models</source>
          <target state="translated">모델 활성화</target>
        </trans-unit>
        <trans-unit id="6425bc77fc2311d432f3c6dadc948ecec41755af" translate="yes" xml:space="preserve">
          <source>Acts just like &lt;a href=&quot;#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; but uses a 400 status code.</source>
          <target state="translated">&lt;a href=&quot;#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt; 처럼 작동 하지만 400 상태 코드를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="1ad023f335ce1f4a613b48dd7e19ffe903630c0d" translate="yes" xml:space="preserve">
          <source>Acts just like &lt;a href=&quot;#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; but uses a 403 status code.</source>
          <target state="translated">처럼 사도 행전 &lt;a href=&quot;#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; 에&lt;/a&gt; 있지만 403 상태 코드를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="19f379d64f80d0caaf87d4defa31809099a865ce" translate="yes" xml:space="preserve">
          <source>Acts just like &lt;a href=&quot;#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; but uses a 404 status code.</source>
          <target state="translated">&lt;a href=&quot;#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt; 처럼 작동 하지만 404 상태 코드를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="387a1008617d77a04b9deccff0a2d5bfaa3553a1" translate="yes" xml:space="preserve">
          <source>Acts just like &lt;a href=&quot;#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; but uses a 410 status code.</source>
          <target state="translated">&lt;a href=&quot;#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt; 처럼 작동 하지만 410 상태 코드를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="35155d5f679b570e59ff0ecc8dbdfe14fd4aaea6" translate="yes" xml:space="preserve">
          <source>Acts just like &lt;a href=&quot;#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; but uses a 500 status code.</source>
          <target state="translated">&lt;a href=&quot;#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt; 처럼 작동 하지만 500 상태 코드를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="61cc55aa0453184734c3fa0b621eda6fa874bd83" translate="yes" xml:space="preserve">
          <source>Add</source>
          <target state="translated">Add</target>
        </trans-unit>
        <trans-unit id="1781f1983893889bfb4e2f805c1c4ac45e575a3d" translate="yes" xml:space="preserve">
          <source>Add &lt;a href=&quot;#module-django.contrib.admindocs&quot;&gt;&lt;code&gt;django.contrib.admindocs&lt;/code&gt;&lt;/a&gt; to your &lt;a href=&quot;../../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#module-django.contrib.admindocs&quot;&gt; &lt;code&gt;django.contrib.admindocs&lt;/code&gt; &lt;/a&gt; 를 &lt;a href=&quot;../../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; 에&lt;/a&gt; 추가 하십시오 .</target>
        </trans-unit>
        <trans-unit id="aee32ce5a37fb08ca19c3c059f786253013a8558" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;'django.contrib.admin'&lt;/code&gt; and its dependencies - &lt;a href=&quot;../../../topics/auth/index#module-django.contrib.auth&quot;&gt;&lt;code&gt;django.contrib.auth&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../contenttypes#module-django.contrib.contenttypes&quot;&gt;&lt;code&gt;django.contrib.contenttypes&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../messages#module-django.contrib.messages&quot;&gt;&lt;code&gt;django.contrib.messages&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../../../topics/http/sessions#module-django.contrib.sessions&quot;&gt;&lt;code&gt;django.contrib.sessions&lt;/code&gt;&lt;/a&gt; - to your &lt;a href=&quot;../../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">추가 &lt;code&gt;'django.contrib.admin'&lt;/code&gt; -와 그 종속 &lt;a href=&quot;../../../topics/auth/index#module-django.contrib.auth&quot;&gt; &lt;code&gt;django.contrib.auth&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../contenttypes#module-django.contrib.contenttypes&quot;&gt; &lt;code&gt;django.contrib.contenttypes&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../messages#module-django.contrib.messages&quot;&gt; &lt;code&gt;django.contrib.messages&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../../topics/http/sessions#module-django.contrib.sessions&quot;&gt; &lt;code&gt;django.contrib.sessions&lt;/code&gt; 을&lt;/a&gt; 당신에게 - &lt;a href=&quot;../../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; 의&lt;/a&gt; 설정.</target>
        </trans-unit>
        <trans-unit id="8e18e6aa0b565d8aa03bcbedee7dbaa75a0dca49" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;'django.contrib.flatpages'&lt;/code&gt; to your &lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">&lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt; 설정에 &lt;code&gt;'django.contrib.flatpages'&lt;/code&gt; 를 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="08f59dc4b59961edb6f73a3a7b17606a7b566d9e" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;'django.contrib.flatpages.middleware.FlatpageFallbackMiddleware'&lt;/code&gt; to your &lt;a href=&quot;../settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">&lt;a href=&quot;../settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; &lt;/a&gt; 설정에 &lt;code&gt;'django.contrib.flatpages.middleware.FlatpageFallbackMiddleware'&lt;/code&gt; 를 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="0397db5067511c5655f72ed2eeb2c56c8e0f042a" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;'django.contrib.postgres'&lt;/code&gt; in your &lt;a href=&quot;../../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt; 에 &lt;code&gt;'django.contrib.postgres'&lt;/code&gt; 를 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="174d52a78c97ad32e9199eded7fb3ff59db50471" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;'django.contrib.redirects'&lt;/code&gt; to your &lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">&lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt; 설정에 &lt;code&gt;'django.contrib.redirects'&lt;/code&gt; 를 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="143d4d686f2f6b2ecc4271019cc19e1a5e24cb8f" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;'django.contrib.redirects.middleware.RedirectFallbackMiddleware'&lt;/code&gt; to your &lt;a href=&quot;../settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">&lt;a href=&quot;../settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; &lt;/a&gt; 설정에 &lt;code&gt;'django.contrib.redirects.middleware.RedirectFallbackMiddleware'&lt;/code&gt; 를 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="45606432fd93c03462735cd98f148a73fdb9d96b" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;'django.contrib.sitemaps'&lt;/code&gt; to your &lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">&lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt; 설정에 &lt;code&gt;'django.contrib.sitemaps'&lt;/code&gt; 를 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="7ad2903b96cc7c2efcfa526b8b0aa8ac2eb3c98b" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;'django.contrib.sites'&lt;/code&gt; to your &lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="translated">&lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt; 설정에 &lt;code&gt;'django.contrib.sites'&lt;/code&gt; 를 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="2d94ca7b85226ff148b3305333826d511bd6f89c" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;django.contrib.gis&lt;/code&gt; to &lt;a href=&quot;../../../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">추가 &lt;code&gt;django.contrib.gis&lt;/code&gt; 을 에 &lt;a href=&quot;../../../settings#std:setting-INSTALLED_APPS&quot;&gt; &lt;code&gt;INSTALLED_APPS&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9222fafb5ea216f3ae56e452996c046dd3381b66" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;path('admin/doc/', include('django.contrib.admindocs.urls'))&lt;/code&gt; to your &lt;code&gt;urlpatterns&lt;/code&gt;. Make sure it&amp;rsquo;s included &lt;em&gt;before&lt;/em&gt; the &lt;code&gt;'admin/'&lt;/code&gt; entry, so that requests to &lt;code&gt;/admin/doc/&lt;/code&gt; don&amp;rsquo;t get handled by the latter entry.</source>
          <target state="translated">추가 &lt;code&gt;path('admin/doc/', include('django.contrib.admindocs.urls'))&lt;/code&gt; 귀하에 &lt;code&gt;urlpatterns&lt;/code&gt; 을 . 확인이 포함 것 &lt;em&gt;전에 &lt;/em&gt; &lt;code&gt;'admin/'&lt;/code&gt; 요청에 그래서, 입력 &lt;code&gt;/admin/doc/&lt;/code&gt; 후자의 항목에 의해 처리되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="542cc9c2b819f97521525dba6aaade88bad47f25" translate="yes" xml:space="preserve">
          <source>Add a Waiter to the Restaurant:</source>
          <target state="translated">식당에 웨이터 추가하기 :</target>
        </trans-unit>
        <trans-unit id="84da544896ff6b09ffc33abb5a1e8af7c965d705" translate="yes" xml:space="preserve">
          <source>Add a callback that will be invoked after rendering has taken place. This hook can be used to defer certain processing operations (such as caching) until after rendering has occurred.</source>
          <target state="translated">렌더링이 수행 된 후 호출 될 콜백을 추가하십시오. 이 후크는 렌더링이 발생할 때까지 특정 처리 작업 (예 : 캐싱)을 연기하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="312ff4feee6ea5004410a1e36dd7a51cbd167d9f" translate="yes" xml:space="preserve">
          <source>Add a classmethod on the model class:</source>
          <target state="translated">모델 클래스에 클래스 메소드를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="c56cd0b17a6484404450cbece72765986670d747" translate="yes" xml:space="preserve">
          <source>Add a method on a custom manager (usually preferred):</source>
          <target state="translated">사용자 정의 관리자에 메소드를 추가하십시오 (보통 선호).</target>
        </trans-unit>
        <trans-unit id="7eea3ddaf55306731e16d78033c237bd4b6b9a17" translate="yes" xml:space="preserve">
          <source>Add an entry in your URLconf. For example:</source>
          <target state="translated">URLconf에 항목을 추가하십시오. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7c5c60eeeda06a7cbea23a2031ee90e364746f1e" translate="yes" xml:space="preserve">
          <source>Add an item to the feed with the given parameters.</source>
          <target state="translated">지정된 매개 변수를 사용하여 피드에 항목을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="9c967c762729f4dcb287ed7d1527256f1992f670" translate="yes" xml:space="preserve">
          <source>Add elements in the root (i.e. feed/channel) element. Called from &lt;code&gt;write()&lt;/code&gt;.</source>
          <target state="translated">루트 (즉, 피드 / 채널) 요소에 요소를 추가하십시오. &lt;code&gt;write()&lt;/code&gt; 에서 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="064def1c016a4c0f855806eea4b737660d8b6c5e" translate="yes" xml:space="preserve">
          <source>Add elements on each item (i.e. item/entry) element.</source>
          <target state="translated">각 항목 (즉, 항목 / 항목) 요소에 요소를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="d332082a7d97d7c4d3b54712a6248ddea608f173" translate="yes" xml:space="preserve">
          <source>Add the &lt;a href=&quot;#django.db.models.FileField&quot;&gt;&lt;code&gt;FileField&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#django.db.models.ImageField&quot;&gt;&lt;code&gt;ImageField&lt;/code&gt;&lt;/a&gt; to your model, defining the &lt;a href=&quot;#django.db.models.FileField.upload_to&quot;&gt;&lt;code&gt;upload_to&lt;/code&gt;&lt;/a&gt; option to specify a subdirectory of &lt;a href=&quot;../settings#std:setting-MEDIA_ROOT&quot;&gt;&lt;code&gt;MEDIA_ROOT&lt;/code&gt;&lt;/a&gt; to use for uploaded files.</source>
          <target state="translated">업로드 된 파일에 사용할 &lt;a href=&quot;../settings#std:setting-MEDIA_ROOT&quot;&gt; &lt;code&gt;MEDIA_ROOT&lt;/code&gt; &lt;/a&gt; 의 서브 디렉토리를 지정하기 위해 &lt;a href=&quot;#django.db.models.FileField.upload_to&quot;&gt; &lt;code&gt;upload_to&lt;/code&gt; &lt;/a&gt; 옵션을 정의 하여 &lt;a href=&quot;#django.db.models.FileField&quot;&gt; &lt;code&gt;FileField&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#django.db.models.ImageField&quot;&gt; &lt;code&gt;ImageField&lt;/code&gt; &lt;/a&gt; 를 모델에 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="7ce97b976111d12dea30ef369832a81b6f8c5c88" translate="yes" xml:space="preserve">
          <source>Add the &lt;code&gt;system_check_deprecated_details&lt;/code&gt; attribute to your model field similar to the following:</source>
          <target state="translated">다음과 유사하게 &lt;code&gt;system_check_deprecated_details&lt;/code&gt; 속성을 모델 필드에 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="c775d2405227f64cfab31b8ebb0bd2e958a68989" translate="yes" xml:space="preserve">
          <source>Add the current instance (&lt;code&gt;self.object&lt;/code&gt;) to the standard &lt;a href=&quot;#django.views.generic.edit.FormMixin.get_form_kwargs&quot;&gt;&lt;code&gt;get_form_kwargs()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">현재 인스턴스 ( &lt;code&gt;self.object&lt;/code&gt; )를 표준 &lt;a href=&quot;#django.views.generic.edit.FormMixin.get_form_kwargs&quot;&gt; &lt;code&gt;get_form_kwargs()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="23d9164c11ffee165ad5824e194a73e3c5b602a6" translate="yes" xml:space="preserve">
          <source>Add the default value to your field and run the &lt;a href=&quot;django-admin#django-admin-makemigrations&quot;&gt;&lt;code&gt;makemigrations&lt;/code&gt;&lt;/a&gt; command. This should generate a migration with an &lt;code&gt;AlterField&lt;/code&gt; operation.</source>
          <target state="translated">필드에 기본값을 추가하고 &lt;a href=&quot;django-admin#django-admin-makemigrations&quot;&gt; &lt;code&gt;makemigrations&lt;/code&gt; &lt;/a&gt; 명령을 실행하십시오 . &lt;code&gt;AlterField&lt;/code&gt; 작업 으로 마이그레이션을 생성해야 합니다.</target>
        </trans-unit>
        <trans-unit id="b6681e3e9d5f8f7e8e7120280f1f2a7979086c58" translate="yes" xml:space="preserve">
          <source>Add the field on your model with &lt;code&gt;default=uuid.uuid4&lt;/code&gt; and &lt;code&gt;unique=True&lt;/code&gt; arguments (choose an appropriate default for the type of the field you&amp;rsquo;re adding).</source>
          <target state="translated">&lt;code&gt;default=uuid.uuid4&lt;/code&gt; 및 &lt;code&gt;unique=True&lt;/code&gt; 인수 를 사용하여 모델에 필드를 추가하십시오 (추가 할 필드 유형에 적절한 기본값을 선택하십시오).</target>
        </trans-unit>
        <trans-unit id="02e1da9ced0fc993734740c21f17ae2a87c975ef" translate="yes" xml:space="preserve">
          <source>Add the following middleware to &lt;a href=&quot;../../ref/settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;../../ref/settings#std:setting-MIDDLEWARE&quot;&gt; &lt;code&gt;MIDDLEWARE&lt;/code&gt; 에&lt;/a&gt; 다음 미들웨어를 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="81e22044472d5af6216bb40b88cc70aa51aa6e2e" translate="yes" xml:space="preserve">
          <source>Add the following to &lt;code&gt;polls/tests.py&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;polls/tests.py&lt;/code&gt; 에 다음을 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="5c39e16b32deb2f096fa3a5cb2d52f59ee8c1559" translate="yes" xml:space="preserve">
          <source>Add the nullable field without the default value and run the &lt;a href=&quot;django-admin#django-admin-makemigrations&quot;&gt;&lt;code&gt;makemigrations&lt;/code&gt;&lt;/a&gt; command. This should generate a migration with an &lt;code&gt;AddField&lt;/code&gt; operation.</source>
          <target state="translated">기본값없이 널 입력 가능 필드를 추가하고 &lt;a href=&quot;django-admin#django-admin-makemigrations&quot;&gt; &lt;code&gt;makemigrations&lt;/code&gt; &lt;/a&gt; 명령을 실행하십시오 . &lt;code&gt;AddField&lt;/code&gt; 작업 으로 마이그레이션을 생성해야 합니다.</target>
        </trans-unit>
        <trans-unit id="897846243edef3b03fde13f648c9bf56469bd194" translate="yes" xml:space="preserve">
          <source>Add the same article to a different article set - check that it moves:</source>
          <target state="translated">동일한 기사를 다른 기사 세트에 추가-이동하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="da7de644f515ca77678230d2a489c2a0f1a496f0" translate="yes" xml:space="preserve">
          <source>Add two more test methods to the same class, to test the behavior of the method more comprehensively:</source>
          <target state="translated">메소드의 동작을보다 포괄적으로 테스트하려면 동일한 클래스에 두 가지 테스트 메소드를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="b98dc98fe9e447d835aef4277affce64c01dd401" translate="yes" xml:space="preserve">
          <source>Add your new hasher as the first entry in &lt;a href=&quot;../../ref/settings#std:setting-PASSWORD_HASHERS&quot;&gt;&lt;code&gt;PASSWORD_HASHERS&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;../../ref/settings#std:setting-PASSWORD_HASHERS&quot;&gt; &lt;code&gt;PASSWORD_HASHERS&lt;/code&gt; &lt;/a&gt; 의 첫 번째 항목으로 새 걸쇠를 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="c4f919a2b3ad49ac11fcd9dcc041e6e2629763b4" translate="yes" xml:space="preserve">
          <source>Adding &lt;code&gt;related_name&lt;/code&gt; to the &lt;code&gt;customers&lt;/code&gt; field as follows would resolve the error: &lt;code&gt;models.ManyToManyField(Place, related_name='provider')&lt;/code&gt;.</source>
          <target state="translated">다음과 같이 &lt;code&gt;related_name&lt;/code&gt; 을 &lt;code&gt;customers&lt;/code&gt; 필드에 추가하면 &lt;code&gt;models.ManyToManyField(Place, related_name='provider')&lt;/code&gt; 오류가 해결 됩니다.</target>
        </trans-unit>
        <trans-unit id="cd68975af9ff6bf42b31e25093a9ca4bc04db184" translate="yes" xml:space="preserve">
          <source>Adding a &lt;code&gt;deconstruct()&lt;/code&gt; method</source>
          <target state="translated">&lt;code&gt;deconstruct()&lt;/code&gt; 메소드 추가</target>
        </trans-unit>
        <trans-unit id="7e2866da8913b39ced8f2ec66b3247474f2ebdaf" translate="yes" xml:space="preserve">
          <source>Adding a background-image</source>
          <target state="translated">배경 이미지 추가</target>
        </trans-unit>
        <trans-unit id="0d892178c15bd974d128fa41f9821824862b1564" translate="yes" xml:space="preserve">
          <source>Adding a foreign key from one of your own models to &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt; allows your model to effectively tie itself to another model class, as in the example of the &lt;a href=&quot;auth#django.contrib.auth.models.Permission&quot;&gt;&lt;code&gt;Permission&lt;/code&gt;&lt;/a&gt; model above. But it&amp;rsquo;s possible to go one step further and use &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt; to enable truly generic (sometimes called &amp;ldquo;polymorphic&amp;rdquo;) relationships between models.</source>
          <target state="translated">고유 모델 중 하나에서 &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt; &lt;code&gt;ContentType&lt;/code&gt; &lt;/a&gt; 으로 외래 키를 추가하면 위 의 &lt;a href=&quot;auth#django.contrib.auth.models.Permission&quot;&gt; &lt;code&gt;Permission&lt;/code&gt; &lt;/a&gt; 모델 예와 같이 모델이 다른 모델 클래스에 효과적으로 연결될 수 있습니다 . 그러나 한 단계 더 나아가 &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt; &lt;code&gt;ContentType&lt;/code&gt; &lt;/a&gt; 을 사용하여 모델 간의 진정한 관계 (&amp;ldquo;다형성&amp;rdquo;이라고도 함)를 가능하게 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f32d42966426915a684928a50a3f91eefcb2668c" translate="yes" xml:space="preserve">
          <source>Adding a message</source>
          <target state="translated">메시지 추가</target>
        </trans-unit>
        <trans-unit id="9647b442f7b65a49aa241643ed53e216f831e273" translate="yes" xml:space="preserve">
          <source>Adding a password reset feature</source>
          <target state="translated">비밀번호 재설정 기능 추가</target>
        </trans-unit>
        <trans-unit id="737275ab3224f8851da2d9bbb1a5a7c02b448f55" translate="yes" xml:space="preserve">
          <source>Adding a second time is OK, it will not duplicate the relation:</source>
          <target state="translated">두 번째로 추가해도 괜찮습니다. 관계를 복제하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b717fb8e46bbd80f84d44a868651e9774677833a" translate="yes" xml:space="preserve">
          <source>Adding actions to the &lt;a href=&quot;index#django.contrib.admin.ModelAdmin&quot;&gt;&lt;code&gt;ModelAdmin&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;index#django.contrib.admin.ModelAdmin&quot;&gt; &lt;code&gt;ModelAdmin&lt;/code&gt; 에&lt;/a&gt; 조치 추가</target>
        </trans-unit>
        <trans-unit id="7fb6dd5ea495cc9b3ab9a76c1b753884aba14e9b" translate="yes" xml:space="preserve">
          <source>Adding additional fields to a formset</source>
          <target state="translated">폼셋에 추가 필드 추가</target>
        </trans-unit>
        <trans-unit id="f9e4c9a8b7d7bdf21d02d1603728d6f080e21fd5" translate="yes" xml:space="preserve">
          <source>Adding an automatic primary key field to the model if you don&amp;rsquo;t declare it. To avoid confusion for later code readers, it&amp;rsquo;s recommended to specify all the columns from the database table you are modeling when using unmanaged models.</source>
          <target state="translated">자동 기본 키 필드를 선언하지 않으면 모델에 추가 이후 코드 리더의 혼동을 피하려면 관리되지 않는 모델을 사용할 때 모델링중인 데이터베이스 테이블의 모든 열을 지정하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="a677f2d3d7d36704d5ef8fe9f52670fb7004e7da" translate="yes" xml:space="preserve">
          <source>Adding an index to your database may help to improve ordering performance.</source>
          <target state="translated">데이터베이스에 색인을 추가하면 주문 성능을 향상시키는 데 도움이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4b94c475955db5b6e3e02bf21b87eea5874a2a38" translate="yes" xml:space="preserve">
          <source>Adding an object of the wrong type raises &lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">잘못된 유형의 객체를 추가하면 &lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; 가 발생합니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2480784cdec9378029855e4634deeb18753830ae" translate="yes" xml:space="preserve">
          <source>Adding an object of the wrong type raises TypeError:</source>
          <target state="translated">잘못된 유형의 객체를 추가하면 TypeError가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="75ac589a7c74b921108f817dbc58cc312b033a74" translate="yes" xml:space="preserve">
          <source>Adding annotations</source>
          <target state="translated">주석 추가</target>
        </trans-unit>
        <trans-unit id="6f3fb504cadea63bb79c2a9f67921972335a2ab4" translate="yes" xml:space="preserve">
          <source>Adding custom validation to the admin</source>
          <target state="translated">관리자에게 사용자 정의 유효성 검사 추가</target>
        </trans-unit>
        <trans-unit id="21c3a8a053ec2e21cb223570d2501da48845f4b6" translate="yes" xml:space="preserve">
          <source>Adding extra &lt;code&gt;Manager&lt;/code&gt; methods is the preferred way to add &amp;ldquo;table-level&amp;rdquo; functionality to your models. (For &amp;ldquo;row-level&amp;rdquo; functionality &amp;ndash; i.e., functions that act on a single instance of a model object &amp;ndash; use &lt;a href=&quot;models#model-methods&quot;&gt;Model methods&lt;/a&gt;, not custom &lt;code&gt;Manager&lt;/code&gt; methods.)</source>
          <target state="translated">모델에 &quot;테이블 수준&quot;기능을 추가하는 데 선호되는 방법은 추가 &lt;code&gt;Manager&lt;/code&gt; 메소드를 추가하는 것입니다. (모델 객체의 단일 인스턴스에서 작동하는 기능인&amp;ldquo;행 수준&amp;rdquo;기능의 경우 사용자 정의 &lt;code&gt;Manager&lt;/code&gt; 메소드가 아닌 &lt;a href=&quot;models#model-methods&quot;&gt;Model 메소드를&lt;/a&gt; 사용하십시오 .)</target>
        </trans-unit>
        <trans-unit id="49a457ad4a4fb40029dfeb98bf770d419b6ed80e" translate="yes" xml:space="preserve">
          <source>Adding extra context</source>
          <target state="translated">추가 컨텍스트 추가</target>
        </trans-unit>
        <trans-unit id="7d6b19de730f99e44e54a6e2f60d6fba5e949606" translate="yes" xml:space="preserve">
          <source>Adding extra manager methods</source>
          <target state="translated">추가 관리자 메소드 추가</target>
        </trans-unit>
        <trans-unit id="05c9b92bf3c6992f2275d32eb1bb9a5f874cbe2a" translate="yes" xml:space="preserve">
          <source>Adding extra message tags</source>
          <target state="translated">추가 메시지 태그 추가</target>
        </trans-unit>
        <trans-unit id="065d8edc35a41c3e1c7f7106fb0ce5eebe146add" translate="yes" xml:space="preserve">
          <source>Adding messages in class-based views</source>
          <target state="translated">클래스 기반보기에서 메시지 추가</target>
        </trans-unit>
        <trans-unit id="dde5351483f81b0be2720e29f44edb20496f0b3c" translate="yes" xml:space="preserve">
          <source>Adding migrations to apps</source>
          <target state="translated">앱에 마이그레이션 추가</target>
        </trans-unit>
        <trans-unit id="cd9492e64e9db0d1444a09b5329d3bce5e245f07" translate="yes" xml:space="preserve">
          <source>Adding related objects</source>
          <target state="translated">관련 객체 추가</target>
        </trans-unit>
        <trans-unit id="80f31e3c892ed2c3d9284ce59d6e189757bbb332" translate="yes" xml:space="preserve">
          <source>Adding support in third-party database backends</source>
          <target state="translated">타사 데이터베이스 백엔드에 지원 추가</target>
        </trans-unit>
        <trans-unit id="8f942de47430dca18f13c33d368bb70c332460c2" translate="yes" xml:space="preserve">
          <source>Adding the built-in widgets templates directory in &lt;a href=&quot;../settings#std:setting-TEMPLATES-DIRS&quot;&gt;&lt;code&gt;DIRS&lt;/code&gt;&lt;/a&gt; of one of your template engines. To generate that path:</source>
          <target state="translated">템플릿 엔진 중 하나의 &lt;a href=&quot;../settings#std:setting-TEMPLATES-DIRS&quot;&gt; &lt;code&gt;DIRS&lt;/code&gt; &lt;/a&gt; 에 내장 위젯 템플릿 디렉토리 추가 해당 경로를 생성하려면</target>
        </trans-unit>
        <trans-unit id="199984b1c4df9b28def33449c0f29df2d3cea020" translate="yes" xml:space="preserve">
          <source>Adding the language prefix to the root of the URL patterns to make it possible for &lt;a href=&quot;../../ref/middleware#django.middleware.locale.LocaleMiddleware&quot;&gt;&lt;code&gt;LocaleMiddleware&lt;/code&gt;&lt;/a&gt; to detect the language to activate from the requested URL.</source>
          <target state="translated">URL 패턴의 루트에 언어 접두사를 추가하여 &lt;a href=&quot;../../ref/middleware#django.middleware.locale.LocaleMiddleware&quot;&gt; &lt;code&gt;LocaleMiddleware&lt;/code&gt; &lt;/a&gt; 가 요청 된 URL에서 활성화 할 언어를 감지 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8bbdf001f85301d5c4caf9cad678d83599003252" translate="yes" xml:space="preserve">
          <source>Adding translations to JavaScript poses some problems:</source>
          <target state="translated">JavaScript에 번역을 추가하면 몇 가지 문제가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9b2bc4970a121d42083d328ea38dfa708de484df" translate="yes" xml:space="preserve">
          <source>Adding via the &amp;lsquo;other&amp;rsquo; end of an m2m:</source>
          <target state="translated">m2m의 '다른'끝을 통해 추가 :</target>
        </trans-unit>
        <trans-unit id="58981ac9ab470f289e179674aec179db087b8177" translate="yes" xml:space="preserve">
          <source>Adding via the other end using keywords:</source>
          <target state="translated">키워드를 사용하여 다른 쪽 끝을 통해 추가 :</target>
        </trans-unit>
        <trans-unit id="3726f6959d53012c980dc6e6514bf9f49e25f7f8" translate="yes" xml:space="preserve">
          <source>Adding views to admin sites</source>
          <target state="translated">관리 사이트에보기 추가</target>
        </trans-unit>
        <trans-unit id="eeb2928b085f70ed3eefe2ebfb553f92ebbeb1d4" translate="yes" xml:space="preserve">
          <source>Additional Resources:</source>
          <target state="translated">추가 자료 :</target>
        </trans-unit>
        <trans-unit id="20e967d50fd03923d186da10f984c24954c279bc" translate="yes" xml:space="preserve">
          <source>Additional form template furniture</source>
          <target state="translated">추가 양식 템플릿 가구</target>
        </trans-unit>
        <trans-unit id="0639dbfaee6711fafef42bd5e3a8bb2d5b4d6b0d" translate="yes" xml:space="preserve">
          <source>Additional methods on files attached to objects</source>
          <target state="translated">객체에 첨부 된 파일에 대한 추가 방법</target>
        </trans-unit>
        <trans-unit id="a3bd37141e3db51c93a974f72b5ed99fd4be069a" translate="yes" xml:space="preserve">
          <source>Additional methods to handle related objects</source>
          <target state="translated">관련 객체를 처리하는 추가 방법</target>
        </trans-unit>
        <trans-unit id="af004711cc4f84f9b7f7e5f37159b9933b2615c7" translate="yes" xml:space="preserve">
          <source>Additional security topics</source>
          <target state="translated">추가 보안 주제</target>
        </trans-unit>
        <trans-unit id="f51f11764f8ab3f8650e43b07eec550d435e9d07" translate="yes" xml:space="preserve">
          <source>Additionally, &lt;code&gt;OneToOneField&lt;/code&gt; accepts all of the extra arguments accepted by &lt;a href=&quot;#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt;, plus one extra argument:</source>
          <target state="translated">또한 &lt;code&gt;OneToOneField&lt;/code&gt; 는 &lt;a href=&quot;#django.db.models.ForeignKey&quot;&gt; &lt;code&gt;ForeignKey&lt;/code&gt; 가&lt;/a&gt; 허용하는 모든 추가 인수 와 하나 의 추가 인수를 허용합니다 .</target>
        </trans-unit>
        <trans-unit id="3bb4297691e2586f5e087e3bc7b4b49164fe1279" translate="yes" xml:space="preserve">
          <source>Additionally, &lt;code&gt;UpdateCacheMiddleware&lt;/code&gt; automatically sets a few headers in each &lt;a href=&quot;../ref/request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">또한 &lt;code&gt;UpdateCacheMiddleware&lt;/code&gt; 는 각 &lt;a href=&quot;../ref/request-response#django.http.HttpResponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; 에&lt;/a&gt; 몇 개의 헤더를 자동으로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="d9c3eb7a943d408e9ef3eff367c07a9bdf0b504f" translate="yes" xml:space="preserve">
          <source>Additionally, &lt;code&gt;UploadedFile.content_type&lt;/code&gt; will be updated with the image&amp;rsquo;s content type if Pillow can determine it, otherwise it will be set to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">또한, &lt;code&gt;UploadedFile.content_type&lt;/code&gt; 가 결정할 수있는 경우 UploadedFile.content_type 은 이미지의 내용 유형으로 업데이트되며, 그렇지 않으면 &lt;code&gt;None&lt;/code&gt; 으로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="59f091ea1fdfee35fafef8f5beec4d2ea7795fb3" translate="yes" xml:space="preserve">
          <source>Additionally, Django requires you to explicitly enable support for the &lt;code&gt;X-Forwarded-Host&lt;/code&gt; header (via the &lt;a href=&quot;../ref/settings#std:setting-USE_X_FORWARDED_HOST&quot;&gt;&lt;code&gt;USE_X_FORWARDED_HOST&lt;/code&gt;&lt;/a&gt; setting) if your configuration requires it.</source>
          <target state="translated">또한 Django에서는 구성에 필요한 경우 &lt;a href=&quot;../ref/settings#std:setting-USE_X_FORWARDED_HOST&quot;&gt; &lt;code&gt;USE_X_FORWARDED_HOST&lt;/code&gt; &lt;/a&gt; 설정을 통해 &lt;code&gt;X-Forwarded-Host&lt;/code&gt; 헤더에 대한 지원을 명시 적으로 활성화 해야합니다.</target>
        </trans-unit>
        <trans-unit id="8c1950c86ec7cad350a1882f9069c6111aa2bc35" translate="yes" xml:space="preserve">
          <source>Additionally, if a &lt;code&gt;some_queryset&lt;/code&gt; has not yet been evaluated, but you know that it will be at some point, then using &lt;code&gt;some_queryset.exists()&lt;/code&gt; will do more overall work (one query for the existence check plus an extra one to later retrieve the results) than using &lt;code&gt;bool(some_queryset)&lt;/code&gt;, which retrieves the results and then checks if any were returned.</source>
          <target state="translated">또한 &lt;code&gt;some_queryset&lt;/code&gt; 이 아직 평가되지 않았지만 어느 시점에 있다는 것을 알고 있다면 &lt;code&gt;some_queryset.exists()&lt;/code&gt; 를 사용 하면 더 많은 전반적인 작업을 수행합니다 (존재 검사에 대한 하나의 쿼리와 나중에 결과를 검색하기위한 여분의 쿼리) )를 사용하는 것보다 &lt;code&gt;bool(some_queryset)&lt;/code&gt; . 결과를 검색 한 다음 반환 된 것이 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="5cd413f4862375205f2c9c8f5fb743ea9ac00da3" translate="yes" xml:space="preserve">
          <source>Additionally, if there are complex rules around pluralization, the catalog view will render a conditional expression. This will evaluate to either a &lt;code&gt;true&lt;/code&gt; (should pluralize) or &lt;code&gt;false&lt;/code&gt; (should &lt;strong&gt;not&lt;/strong&gt; pluralize) value.</source>
          <target state="translated">또한 복수화에 복잡한 규칙이있는 경우 카탈로그 뷰는 조건식을 렌더링합니다. 이것은 &lt;code&gt;true&lt;/code&gt; (복수화해야 함) 또는 &lt;code&gt;false&lt;/code&gt; ( 복수화 해서는 &lt;strong&gt;안됨&lt;/strong&gt; ) 값으로 평가됩니다.</target>
        </trans-unit>
        <trans-unit id="155b9da3a7f3110c995a2609d26841c5c24dd1fd" translate="yes" xml:space="preserve">
          <source>Additionally, if you set the &lt;a href=&quot;settings#std:setting-SECURE_HSTS_INCLUDE_SUBDOMAINS&quot;&gt;&lt;code&gt;SECURE_HSTS_INCLUDE_SUBDOMAINS&lt;/code&gt;&lt;/a&gt; setting to &lt;code&gt;True&lt;/code&gt;, &lt;code&gt;SecurityMiddleware&lt;/code&gt; will add the &lt;code&gt;includeSubDomains&lt;/code&gt; directive to the &lt;code&gt;Strict-Transport-Security&lt;/code&gt; header. This is recommended (assuming all subdomains are served exclusively using HTTPS), otherwise your site may still be vulnerable via an insecure connection to a subdomain.</source>
          <target state="translated">당신이 설정 한 경우 또한, &lt;a href=&quot;settings#std:setting-SECURE_HSTS_INCLUDE_SUBDOMAINS&quot;&gt; &lt;code&gt;SECURE_HSTS_INCLUDE_SUBDOMAINS&lt;/code&gt; &lt;/a&gt; 로 설정 &lt;code&gt;True&lt;/code&gt; , &lt;code&gt;SecurityMiddleware&lt;/code&gt; 이 추가됩니다 &lt;code&gt;includeSubDomains&lt;/code&gt; 을 받는 지시어를 &lt;code&gt;Strict-Transport-Security&lt;/code&gt; 헤더입니다. 이 방법을 권장합니다 (모든 하위 도메인이 HTTPS를 사용하여 독점적으로 제공된다고 가정). 그렇지 않으면 하위 도메인에 대한 안전하지 않은 연결을 통해 사이트가 여전히 취약 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="796ba10f1ad831c76eb8c34a0b7761256ed12335" translate="yes" xml:space="preserve">
          <source>Additionally, it is recommended to install the &lt;a href=&quot;https://github.com/maxmind/libmaxminddb&quot;&gt;libmaxminddb C library&lt;/a&gt;, so that &lt;code&gt;geoip2&lt;/code&gt; can leverage the C library&amp;rsquo;s faster speed.</source>
          <target state="translated">또한 &lt;code&gt;geoip2&lt;/code&gt; 가 C 라이브러리의 빠른 속도를 활용할 수 있도록 &lt;a href=&quot;https://github.com/maxmind/libmaxminddb&quot;&gt;libmaxminddb C 라이브러리&lt;/a&gt; 를 설치하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="7b5fcf69c665bf56f6d133b6aa0ec9e54e765756" translate="yes" xml:space="preserve">
          <source>Additionally, the following property is available:</source>
          <target state="translated">또한 다음 속성을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="065186d003b68ca80e33b415f720adf82fb1f37e" translate="yes" xml:space="preserve">
          <source>Adds (or updates) the &lt;code&gt;Vary&lt;/code&gt; header in the given &lt;code&gt;HttpResponse&lt;/code&gt; object. &lt;code&gt;newheaders&lt;/code&gt; is a list of header names that should be in &lt;code&gt;Vary&lt;/code&gt;. If headers contains an asterisk, then &lt;code&gt;Vary&lt;/code&gt; header will consist of a single asterisk &lt;code&gt;'*'&lt;/code&gt;. Otherwise, existing headers in &lt;code&gt;Vary&lt;/code&gt; aren&amp;rsquo;t removed.</source>
          <target state="translated">지정된 &lt;code&gt;HttpResponse&lt;/code&gt; 객체 에 &lt;code&gt;Vary&lt;/code&gt; 헤더를 추가 (또는 업데이트) 합니다. &lt;code&gt;newheaders&lt;/code&gt; 는 &lt;code&gt;Vary&lt;/code&gt; 에 있어야하는 헤더 이름 목록입니다 . 헤더에 별표가 포함되어 있으면 &lt;code&gt;Vary&lt;/code&gt; 헤더는 단일 별표 &lt;code&gt;'*'&lt;/code&gt; 로 구성됩니다 . 그렇지 않으면 &lt;code&gt;Vary&lt;/code&gt; 의 기존 헤더 가 제거되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1e90b62d665048ec0284ccfaa223ced853188c83" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;constraint&lt;/code&gt; to &lt;code&gt;model&lt;/code&gt;&amp;rsquo;s table.</source>
          <target state="translated">&lt;code&gt;model&lt;/code&gt; 테이블에 &lt;code&gt;constraint&lt;/code&gt; 을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="189c0dc50c29d58c3f168feb673c8841534b5c85" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;index&lt;/code&gt; to &lt;code&gt;model&lt;/code&gt;&amp;rsquo;s table.</source>
          <target state="translated">&lt;code&gt;model&lt;/code&gt; 표에 &lt;code&gt;index&lt;/code&gt; 을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="9b8cfac95da60494037975ba4ec543ba3fe273f3" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;object_list&lt;/code&gt; to the context. If &lt;a href=&quot;mixins-multiple-object#django.views.generic.list.MultipleObjectMixin.allow_empty&quot;&gt;&lt;code&gt;allow_empty&lt;/code&gt;&lt;/a&gt; is True then display an empty list. If &lt;a href=&quot;mixins-multiple-object#django.views.generic.list.MultipleObjectMixin.allow_empty&quot;&gt;&lt;code&gt;allow_empty&lt;/code&gt;&lt;/a&gt; is False then raise a 404 error.</source>
          <target state="translated">컨텍스트에 &lt;code&gt;object_list&lt;/code&gt; 를 추가합니다 . 경우 &lt;a href=&quot;mixins-multiple-object#django.views.generic.list.MultipleObjectMixin.allow_empty&quot;&gt; &lt;code&gt;allow_empty&lt;/code&gt; 은&lt;/a&gt; True입니다 빈 상태 (empty)의 목록을 표시합니다. 경우 &lt;a href=&quot;mixins-multiple-object#django.views.generic.list.MultipleObjectMixin.allow_empty&quot;&gt; &lt;code&gt;allow_empty&lt;/code&gt; 은&lt;/a&gt; False입니다 후 404 오류가 발생.</target>
        </trans-unit>
        <trans-unit id="514fb7f40df63dff563c3c7ad7a9ae3f9e685565" translate="yes" xml:space="preserve">
          <source>Adds a &lt;code&gt;Cache-Control: max-age=0, no-cache, no-store, must-revalidate,
private&lt;/code&gt; header to a response to indicate that a page should never be cached.</source>
          <target state="translated">추가 &lt;code&gt;Cache-Control: max-age=0, no-cache, no-store, must-revalidate, private&lt;/code&gt; 응답에 헤더 페이지가 캐시되지 않을 것을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="ff7383298422a0675008a255cc33c19c23220b7a" translate="yes" xml:space="preserve">
          <source>Adds a column (or sometimes multiple) to the model&amp;rsquo;s table to represent the field. This will also add indexes or a unique constraint if the field has &lt;code&gt;db_index=True&lt;/code&gt; or &lt;code&gt;unique=True&lt;/code&gt;.</source>
          <target state="translated">필드를 나타 내기 위해 모델 테이블에 열 (또는 여러 개)을 추가합니다. 필드에 &lt;code&gt;db_index=True&lt;/code&gt; 또는 &lt;code&gt;unique=True&lt;/code&gt; 인 경우 인덱스 또는 고유 제한 조건도 추가됩니다 .</target>
        </trans-unit>
        <trans-unit id="e56f8bda02f55055ccc1af79a5faec7f5d76e619" translate="yes" xml:space="preserve">
          <source>Adds a few conveniences for perfectionists:</source>
          <target state="translated">완벽 주의자를 위해 몇 가지 편의를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="3bc2c30ca18e7b58b0c427c2bd1065d3d8e2da65" translate="yes" xml:space="preserve">
          <source>Adds a field to a model. &lt;code&gt;model_name&lt;/code&gt; is the model&amp;rsquo;s name, &lt;code&gt;name&lt;/code&gt; is the field&amp;rsquo;s name, and &lt;code&gt;field&lt;/code&gt; is an unbound Field instance (the thing you would put in the field declaration in &lt;code&gt;models.py&lt;/code&gt; - for example, &lt;code&gt;models.IntegerField(null=True)&lt;/code&gt;.</source>
          <target state="translated">모델에 필드를 추가합니다. &lt;code&gt;model_name&lt;/code&gt; 은 모델 이름, &lt;code&gt;name&lt;/code&gt; 은 필드 이름, &lt;code&gt;field&lt;/code&gt; 는 바인딩되지 않은 Field 인스턴스입니다 ( &lt;code&gt;models.py&lt;/code&gt; 에서 필드 선언에 넣는 것 ( 예 : &lt;code&gt;models.IntegerField(null=True)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bd25b00fce5148ea823ee8b2f9f6663ac9a6299b" translate="yes" xml:space="preserve">
          <source>Adds a geometry to this geometry collection. Not applicable to other geometry types.</source>
          <target state="translated">이 지오메트리 컬렉션에 지오메트리를 추가합니다. 다른 형상 유형에는 적용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="40b2d7c6759c3aa4f4958c39ef024b8c9802838b" translate="yes" xml:space="preserve">
          <source>Adds a success message attribute to &lt;a href=&quot;../class-based-views/generic-editing#django.views.generic.edit.FormView&quot;&gt;&lt;code&gt;FormView&lt;/code&gt;&lt;/a&gt; based classes</source>
          <target state="translated">성공 메시지 속성을 &lt;a href=&quot;../class-based-views/generic-editing#django.views.generic.edit.FormView&quot;&gt; &lt;code&gt;FormView&lt;/code&gt; &lt;/a&gt; 기반 클래스에 추가</target>
        </trans-unit>
        <trans-unit id="9443cc483fc4f79eee63f7b91ff9b63be753eaf3" translate="yes" xml:space="preserve">
          <source>Adds an item to the feed. All args are expected to be strings except &lt;code&gt;pubdate&lt;/code&gt; and &lt;code&gt;updateddate&lt;/code&gt;, which are &lt;code&gt;datetime.datetime&lt;/code&gt; objects, and &lt;code&gt;enclosures&lt;/code&gt;, which is a list of &lt;code&gt;Enclosure&lt;/code&gt; instances.</source>
          <target state="translated">피드에 항목을 추가합니다. 모든 인수는 제외 문자열이 될 것으로 예상된다 &lt;code&gt;pubdate&lt;/code&gt; 및 &lt;code&gt;updateddate&lt;/code&gt; 있으며, &lt;code&gt;datetime.datetime&lt;/code&gt; 개체 및 &lt;code&gt;enclosures&lt;/code&gt; 의 목록입니다, &lt;code&gt;Enclosure&lt;/code&gt; 인스턴스.</target>
        </trans-unit>
        <trans-unit id="3215cc38c2b33036efd88026a859c0cf5388f402" translate="yes" xml:space="preserve">
          <source>Adds protection against Cross Site Request Forgeries by adding hidden form fields to POST forms and checking requests for the correct value. See the &lt;a href=&quot;csrf&quot;&gt;Cross Site Request Forgery protection documentation&lt;/a&gt;.</source>
          <target state="translated">POST 양식에 숨겨진 양식 필드를 추가하고 요청에 올바른 값이 있는지 확인하여 교차 사이트 요청 위조에 대한 보호 기능을 추가합니다. &lt;a href=&quot;csrf&quot;&gt;사이트 간 요청 위조 방지 설명서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="248f884a6debb66d33bb542947c6b5a70ec29527" translate="yes" xml:space="preserve">
          <source>Adds slashes before quotes. Useful for escaping strings in CSV, for example.</source>
          <target state="translated">따옴표 앞에 슬래시를 추가합니다. 예를 들어 CSV에서 문자열을 이스케이프 처리하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="9fe6973ff05e99c675a4730464539f2a5309cce2" translate="yes" xml:space="preserve">
          <source>Adds some useful headers to the given &lt;code&gt;HttpResponse&lt;/code&gt; object:</source>
          <target state="translated">주어진 &lt;code&gt;HttpResponse&lt;/code&gt; 객체에 유용한 헤더를 추가합니다 :</target>
        </trans-unit>
        <trans-unit id="a032013929920ba96d6f65e3ffe00d36c0baef9d" translate="yes" xml:space="preserve">
          <source>Adds support for modern browsers to conditionally GET responses based on the &lt;code&gt;ETag&lt;/code&gt; and &lt;code&gt;Last-Modified&lt;/code&gt; headers. It also calculates and sets an ETag if needed.</source>
          <target state="translated">최신 브라우저에 대한 지원을 추가하여 &lt;code&gt;ETag&lt;/code&gt; 및 &lt;code&gt;Last-Modified&lt;/code&gt; 헤더를 기반으로 조건부 응답을 GET 합니다. 또한 필요한 경우 ETag를 계산하고 설정합니다.</target>
        </trans-unit>
        <trans-unit id="c356b3798142f51ac749e338cf5674b7a71f9400" translate="yes" xml:space="preserve">
          <source>Adds the &lt;code&gt;site&lt;/code&gt; attribute representing the current site to every incoming &lt;code&gt;HttpRequest&lt;/code&gt; object. See the &lt;a href=&quot;contrib/sites#site-middleware&quot;&gt;sites documentation&lt;/a&gt;.</source>
          <target state="translated">추가 &lt;code&gt;site&lt;/code&gt; 들어오는 모든 현재 사이트 나타내는 속성 &lt;code&gt;HttpRequest&lt;/code&gt; 에의 객체를. &lt;a href=&quot;contrib/sites#site-middleware&quot;&gt;사이트 설명서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="664b30fbbf82f2c9316ffc7123a36e6ed05f431e" translate="yes" xml:space="preserve">
          <source>Adds the &lt;code&gt;user&lt;/code&gt; attribute, representing the currently-logged-in user, to every incoming &lt;code&gt;HttpRequest&lt;/code&gt; object. See &lt;a href=&quot;../topics/auth/default#auth-web-requests&quot;&gt;Authentication in Web requests&lt;/a&gt;.</source>
          <target state="translated">현재 로그인 한 &lt;code&gt;user&lt;/code&gt; 를 나타내는 user 속성을 모든 수신 &lt;code&gt;HttpRequest&lt;/code&gt; 객체에 추가합니다. &lt;a href=&quot;../topics/auth/default#auth-web-requests&quot;&gt;웹 요청의 인증을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="82b26bb2b7e0b4dedd5abbf9499cb1f58e215b32" translate="yes" xml:space="preserve">
          <source>Adds the argument to the value.</source>
          <target state="translated">인수를 값에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="903c089d1a56e44c804837cfb1c84f16e81440b8" translate="yes" xml:space="preserve">
          <source>Adds the given filesystem path to the Python &lt;a href=&quot;https://www.diveinto.org/python3/your-first-python-program.html#importsearchpath&quot;&gt;import search path&lt;/a&gt;. If this isn&amp;rsquo;t provided, &lt;code&gt;django-admin&lt;/code&gt; will use the &lt;code&gt;PYTHONPATH&lt;/code&gt; environment variable.</source>
          <target state="translated">주어진 파일 시스템 경로를 Python &lt;a href=&quot;https://www.diveinto.org/python3/your-first-python-program.html#importsearchpath&quot;&gt;가져 오기 검색 경로에&lt;/a&gt; 추가합니다 . 이것이 제공되지 않으면 &lt;code&gt;django-admin&lt;/code&gt; 은 &lt;code&gt;PYTHONPATH&lt;/code&gt; 환경 변수를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="be0a5949d228cfa91cfd2972bb3ffb858416c326" translate="yes" xml:space="preserve">
          <source>Adds the specified model objects to the related object set.</source>
          <target state="translated">지정된 모델 객체를 관련 객체 세트에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="df614a098659ffdff10d271df37bd396baae86e3" translate="yes" xml:space="preserve">
          <source>Adjust &lt;code&gt;time_cost&lt;/code&gt; and measure the time hashing a password takes. Pick a &lt;code&gt;time_cost&lt;/code&gt; that takes an acceptable time for you. If &lt;code&gt;time_cost&lt;/code&gt; set to 1 is unacceptably slow, lower &lt;code&gt;memory_cost&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;time_cost&lt;/code&gt; 를 조정 하고 암호 해시 시간을 측정하십시오. 수용 가능한 시간이 걸리는 &lt;code&gt;time_cost&lt;/code&gt; 를 선택 하십시오. 경우 &lt;code&gt;time_cost&lt;/code&gt; 의 1 세트 느린 받아 들일 수 없을 것입니다, 낮은 &lt;code&gt;memory_cost&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="fa81c61f91756873608f1f7af2602b2f7fc03a81" translate="yes" xml:space="preserve">
          <source>Admin actions</source>
          <target state="translated">관리자 작업</target>
        </trans-unit>
        <trans-unit id="f535d8e7c9b9ab3a3dfb3ab83bec8e5535ab79e9" translate="yes" xml:space="preserve">
          <source>Admin checks are all performed as part of the &lt;code&gt;admin&lt;/code&gt; tag.</source>
          <target state="translated">관리자 확인은 모두 &lt;code&gt;admin&lt;/code&gt; 태그의 일부로 수행됩니다 .</target>
        </trans-unit>
        <trans-unit id="7a9d7b247e2f49f891dbb48cdd1ab3b6f10c4c23" translate="yes" xml:space="preserve">
          <source>Admin documentation generator</source>
          <target state="translated">관리자 문서 생성기</target>
        </trans-unit>
        <trans-unit id="3aee1adc5c2281168d92436481848549843930c8" translate="yes" xml:space="preserve">
          <source>Admin site</source>
          <target state="translated">관리 사이트</target>
        </trans-unit>
        <trans-unit id="ea4395545ea1af3a57cb72e9912004568a18a70f" translate="yes" xml:space="preserve">
          <source>Administrator privileges are required to execute these commands. To do this, create a &lt;code&gt;bat&lt;/code&gt; script with the commands, right-click it, and select Run as administrator. You need to log out and log back in again for the settings to take effect.</source>
          <target state="translated">이 명령을 실행하려면 관리자 권한이 필요합니다. 이를 수행하려면 명령 으로 &lt;code&gt;bat&lt;/code&gt; 스크립트를 작성하고 마우스 오른쪽 단추를 클릭 한 후 관리자로 실행을 선택하십시오. 설정을 적용하려면 로그 아웃했다가 다시 로그인해야합니다.</target>
        </trans-unit>
        <trans-unit id="e6be539fb22a5b9d1b2dbc3f3efee91842482592" translate="yes" xml:space="preserve">
          <source>Advanced action techniques</source>
          <target state="translated">고급 액션 기술</target>
        </trans-unit>
        <trans-unit id="7d11fcc75baee8b3a5e324b547b893ebb063f2ea" translate="yes" xml:space="preserve">
          <source>Advanced custom template tags</source>
          <target state="translated">고급 맞춤 템플릿 태그</target>
        </trans-unit>
        <trans-unit id="2ea5de740ecde63e7278f9c6f1ad4f38244713cc" translate="yes" xml:space="preserve">
          <source>Advanced features of &lt;code&gt;TransactionTestCase&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;TransactionTestCase&lt;/code&gt; 의 고급 기능</target>
        </trans-unit>
        <trans-unit id="2bfe0e3b7c302688acc1807007e8d8b521dfe939" translate="yes" xml:space="preserve">
          <source>Advanced queries</source>
          <target state="translated">고급 검색어</target>
        </trans-unit>
        <trans-unit id="6013e5a6b54a406e23e302755962d51289372466" translate="yes" xml:space="preserve">
          <source>Advanced testing topics</source>
          <target state="translated">고급 테스트 주제</target>
        </trans-unit>
        <trans-unit id="8176f171fd2c2a51f8e7eeff9ab6630a3285d740" translate="yes" xml:space="preserve">
          <source>Advanced tutorial: How to write reusable apps</source>
          <target state="translated">고급 자습서 : 재사용 가능한 앱을 작성하는 방법</target>
        </trans-unit>
        <trans-unit id="3f2484833c357305a71ba8f10aa625e55a1a6622" translate="yes" xml:space="preserve">
          <source>After &lt;code&gt;GZipMiddleware&lt;/code&gt; so it won&amp;rsquo;t calculate an &lt;code&gt;ETag&lt;/code&gt; header on gzipped contents.</source>
          <target state="translated">&lt;code&gt;GZipMiddleware&lt;/code&gt; 이후 에는 압축 된 컨텐츠 에서 &lt;code&gt;ETag&lt;/code&gt; 헤더를 계산하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="86f00443055d740ee3c3763e61aeea16472d09ef" translate="yes" xml:space="preserve">
          <source>After &lt;code&gt;SessionMiddleware&lt;/code&gt; if you&amp;rsquo;re using &lt;a href=&quot;settings#std:setting-CSRF_USE_SESSIONS&quot;&gt;&lt;code&gt;CSRF_USE_SESSIONS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;settings#std:setting-CSRF_USE_SESSIONS&quot;&gt; &lt;code&gt;CSRF_USE_SESSIONS&lt;/code&gt; 를&lt;/a&gt; 사용하는 경우 &lt;code&gt;SessionMiddleware&lt;/code&gt; 이후 .</target>
        </trans-unit>
        <trans-unit id="9289f81e58cb8e19e5576059e58ac92f6f4ba14b" translate="yes" xml:space="preserve">
          <source>After &lt;code&gt;SessionMiddleware&lt;/code&gt;: can use session-based storage.</source>
          <target state="translated">&lt;code&gt;SessionMiddleware&lt;/code&gt; 후 : 세션 기반 스토리지를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d726b0a1292337eaaae0815a0c2fa33faa692651" translate="yes" xml:space="preserve">
          <source>After &lt;code&gt;SessionMiddleware&lt;/code&gt;: uses session storage.</source>
          <target state="translated">&lt;code&gt;SessionMiddleware&lt;/code&gt; 후 : 세션 스토리지를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="4a5f057391aa6585b79fd3da631b77f7f1c42b44" translate="yes" xml:space="preserve">
          <source>After &lt;code&gt;UpdateCacheMiddleware&lt;/code&gt;: Modifies &lt;code&gt;Vary&lt;/code&gt; header.</source>
          <target state="translated">&lt;code&gt;UpdateCacheMiddleware&lt;/code&gt; 후 : &lt;code&gt;Vary&lt;/code&gt; 헤더를 수정 합니다.</target>
        </trans-unit>
        <trans-unit id="2681fdd75b468f221993a3699c1f8d91d4bbbffc" translate="yes" xml:space="preserve">
          <source>After &lt;code&gt;parser.parse()&lt;/code&gt; is called, the parser hasn&amp;rsquo;t yet &amp;ldquo;consumed&amp;rdquo; the &lt;code&gt;{% endcomment %}&lt;/code&gt; tag, so the code needs to explicitly call &lt;code&gt;parser.delete_first_token()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;parser.parse()&lt;/code&gt; 가 호출 된 후 파서는 아직 &lt;code&gt;{% endcomment %}&lt;/code&gt; 태그를 &quot;소비&quot;하지 않았 으므로 코드는 명시 적으로 &lt;code&gt;parser.delete_first_token()&lt;/code&gt; 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="281a78946c958de801c852d816af4adf36943168" translate="yes" xml:space="preserve">
          <source>After a deprecation period of your choosing (two or three feature releases for fields in Django itself), change the &lt;code&gt;system_check_deprecated_details&lt;/code&gt; attribute to &lt;code&gt;system_check_removed_details&lt;/code&gt; and update the dictionary similar to:</source>
          <target state="translated">더 이상 사용하지 않는 기간 (Django 자체의 필드에 대한 기능 릴리스 둘 또는 세 개) 후 &lt;code&gt;system_check_deprecated_details&lt;/code&gt; 속성을 &lt;code&gt;system_check_removed_details&lt;/code&gt; 로 변경 하고 사전을 다음과 유사하게 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="6accf2533a2ff16ba36e8ad20774b9e6ba4a6eb7" translate="yes" xml:space="preserve">
          <source>After a ticket has a patch, it needs to be reviewed by a second set of eyes. After submitting a pull request, update the ticket metadata by setting the flags on the ticket to say &amp;ldquo;has patch&amp;rdquo;, &amp;ldquo;doesn&amp;rsquo;t need tests&amp;rdquo;, etc, so others can find it for review. Contributing doesn&amp;rsquo;t necessarily always mean writing a patch from scratch. Reviewing existing patches is also a very helpful contribution. See &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/contributing/triaging-tickets/&quot;&gt;Triaging tickets&lt;/a&gt; for details.</source>
          <target state="translated">티켓에 패치가 붙은 후에는 두 번째 눈으로 검토해야합니다. 풀 요청을 제출 한 후 티켓의 플래그를 &quot;패치 있음&quot;, &quot;테스트 불필요&quot;등으로 설정하여 티켓 메타 데이터를 업데이트하여 다른 사람들이 검토 할 수 있도록합니다. 기여한다고해서 항상 처음부터 패치를 작성하는 것은 아닙니다. 기존 패치를 검토하는 것도 도움이됩니다. 자세한 내용 &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/contributing/triaging-tickets/&quot;&gt;은 티켓 심사&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e32c6f7dcad4ecb9998b074a7cc11c519c1f8bd3" translate="yes" xml:space="preserve">
          <source>After adding the &lt;code&gt;templatetags&lt;/code&gt; module, you will need to restart your server before you can use the tags or filters in templates.</source>
          <target state="translated">&lt;code&gt;templatetags&lt;/code&gt; 모듈을 추가 한 후 템플릿 에서 태그 또는 필터를 사용하려면 서버를 다시 시작해야합니다.</target>
        </trans-unit>
        <trans-unit id="1f9942a37c8cd58111bc08a610226302ee82774c" translate="yes" xml:space="preserve">
          <source>After any middleware that modifies the &lt;code&gt;Vary&lt;/code&gt; header: that header is used to pick a value for the cache hash-key.</source>
          <target state="translated">&lt;code&gt;Vary&lt;/code&gt; 헤더 를 수정하는 미들웨어 후 : 해당 헤더는 캐시 해시 키의 값을 선택하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="1f06aea5ce8261b350616986ce317de50c27042d" translate="yes" xml:space="preserve">
          <source>After calling &lt;code&gt;save()&lt;/code&gt;, your model formset will have three new attributes containing the formset&amp;rsquo;s changes:</source>
          <target state="translated">&lt;code&gt;save()&lt;/code&gt; 호출 하면 모델 폼셋에는 폼셋의 변경 사항을 포함하는 세 가지 새로운 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="4d390de24fb64624d4aff4859d91742174ae6775" translate="yes" xml:space="preserve">
          <source>After clicking next, you will be prompted to select your mirror, PostGIS will be downloaded, and the PostGIS installer will begin. Select only the default options during install (e.g., do not uncheck the option to create a default PostGIS database).</source>
          <target state="translated">다음을 클릭하면 미러를 선택하라는 메시지가 표시되고 PostGIS가 다운로드되며 PostGIS 설치 프로그램이 시작됩니다. 설치 중 기본 옵션 만 선택하십시오 (예 : 기본 PostGIS 데이터베이스를 작성하는 옵션을 선택 취소하지 마십시오).</target>
        </trans-unit>
        <trans-unit id="7e357a5e8113a5b7fddea0de2d89e752e5b16ef5" translate="yes" xml:space="preserve">
          <source>After committing the patch, send it to your fork on GitHub (substitute &amp;ldquo;ticket_99999&amp;rdquo; with the name of your branch if it&amp;rsquo;s different):</source>
          <target state="translated">패치를 커밋 한 후 GitHub의 분기점으로 보내십시오 (&amp;ldquo;ticket_99999&amp;rdquo;가 다른 경우 지점 이름으로 대체).</target>
        </trans-unit>
        <trans-unit id="2aed56fcb855399b7f515c0d75a3f8bfa74e730b" translate="yes" xml:space="preserve">
          <source>After defining these URL patterns, Django will automatically add the language prefix to the URL patterns that were added by the &lt;code&gt;i18n_patterns&lt;/code&gt; function. Example:</source>
          <target state="translated">이러한 URL 패턴을 정의하면 Django는 &lt;code&gt;i18n_patterns&lt;/code&gt; 함수 로 추가 된 URL 패턴에 언어 접두사를 자동으로 추가합니다 . 예:</target>
        </trans-unit>
        <trans-unit id="7d008e64d4a0475b85406cccc8318f86e3da9019" translate="yes" xml:space="preserve">
          <source>After defining your model, you need to sync it with the database. First, create a database migration:</source>
          <target state="translated">모델을 정의한 후 모델을 데이터베이스와 동기화해야합니다. 먼저 데이터베이스 마이그레이션을 작성하십시오.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
